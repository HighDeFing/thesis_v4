Seminario.docx.docx Universidad Central de Venezuela Facultad de Ciencias Escuela de Computación Desarrollo de un sistema de información para automatizar el proceso de inscripción de eventos de la Cámara Venezolano - Americana de Comercio e Industria Por los Bachilleres: José A. Bianco C. C.I. V-18.270.069 Fernando J. Gómez F. C.I. V-16.406.279 Tutor: Profesor Wilfredo Rangel Caracas, Octubre de 2015 i ACTA Quienes suscriben, miembros del Jurado designado por el Consejo de Escuela de Computación, para examinar el Trabajo Especial de Grado presentado por los bachilleres José A. Bianco C. C.I V-18.270.069 y Fernando J. Gómez F. C.I. V- 16.406.279, con el título “Desarrollo de un sistema de información para automatizar el proceso de inscripción de eventos de la Cámara Venezolano - Americana de Comercio e Industria.” a los fines de optar al título de Licenciado en Computación, dejan constancia de lo siguiente: Leído como fue, dicho trabajo por cada uno de los miembros del jurado, se fijó el día 14 de octubre del 2015 a las 10:00 am, para que sus autores defendieran en forma pública, lo que se hizo en el laboratorio de sistemas de información de la Escuela de Computación, mediante una presentación oral de su contenido, luego de lo cual respondió las preguntas formuladas. Finalizada la defensa pública del Trabajo Especial de Grado, el jurado decidió aprobarlo con la nota de ___________ puntos. En fe de lo cual se levanta la presente Acta, en Caracas a los (14) días del mes de octubre del año dos mil quince (2015). _________________________ Prof. Wilfredo Rangel Tutor ________________________ Jose Sosa Jurado ____________________ Jaime Blanco Jurado ii AGRADECIMIENTOS Y DEDICATORIAS Jose Bianco Le agradezco a Dios en primer lugar, por darme toda la fortaleza y constancia, por iluminar mi vida y guiar mis pasos en este reto. Le agradezco infinitamente a los dos seres que más quiero en esta vida, a mi madre, Carmen Julieta Centeno y mi padre Andrés Eloy Bianco por darme su apoyo incondicional en todo momento, ¡No será suficiente toda la vida, para devolverles el cariño que me han dado! Los quiero mucho. Gracias a mi hermana, Bianca Bianco por estar ahí para mí en todo momento. A mi tía, Analía Centeno, mi segunda madre, por ayudarme y apoyarme en todo momento, eres un pilar fundamental en mi vida. A toda mi familia, por ser parte de mi vida y brindarme tantas alegrías. A mi amigo y compañero de tesis Fernando Gómez, por su motivación y por mantenerme enfocado en el objetivo. ¡Nos hemos graduado! A mi tutor Wilfredo Rangel, más que un profesor, un amigo, compañero, un guía, un mentor. Gracias por haber creído en mí, por brindarme todo tu apoyo y haberme aportado tantos conocimientos valiosos en los momentos oportunos. A todos mis compañeros y compañeras, por haber reído, llorado y disfrutado conmigo durante todo este tiempo, a la UCV, institución que me vio crecer profesionalmente. A todos ¡Gracias Totales! iii Fernando Gómez Agradezco a mi tía Emérita Gómez por su dedicación, paciencia, confianza y perseverancia en mi para logra estar gran meta que tanto nos ha costado. A mi madre Inés Fermín por su apoyo incondicional en cualquier momento sin importar las limitaciones. A Wilfredo Rangel por creer en mí y darme siempre la oportunidad de crecer cada vez más personal, profesional e intelectualmente. A José Bianco ya que sin su guía y orientación no hubiese logrado plenamente este objetivo final. Y en especial gracias a dios por darme la fuerza, salud y resistencia hasta el final. iv RESUMEN El siguiente Trabajo Especial de Grado, se enfoca en el desarrollo de un sistema de información que permite automatizar el proceso de inscripción de eventos de la Cámara Venezolano - Americana de Comercio e Industria (Venamcham). Dicho sistema tiene como base, una visión orientada a procesos, permitiendo así, analizar y documentar a fondo los procesos de negocio estratégicos de la empresa. La motivación principal de este trabajo de investigación, no es otra que mejorar la productividad de la organización a través de la automatización del proceso de inscripción de eventos, realizada de forma manual hasta el momento. En el desarrollo de este trabajo, se utiliza la metodología de gestión de procesos de negocio BPM-RAD, con el fin de descubrir, analizar, documentar y modelar el proceso de inscripción de eventos de Venamcham. Para realizar la implementación el sistema, se emplea la metodología ágil de desarrollo SCRUM y distintas tecnologías web de código abierto como: el lenguaje Hypertext Pre-Processor (PHP), el sistema manejador de base de datos MySQL y el framework de desarrollo Laravel. Adicionalmente el sistema se integra con el CRM SalesLogix utilizado por la organización en sus labores cotidianas y con el sistema de pagos en línea Mercado Pago. Términos Claves: BPM, BPM-RAD, SCRUM, CRM, Aplicaciones web, PHP, Laravel, Modelo Vista Controlador (MVC). v TABLA DE CONTENIDO INTRODUCCIÓN ........................................................................................................ 1 CAPÍTULO I PROBLEMA DE INVESTIGACIÓN ........................................................ 3 1.1. Estado del Arte ............................................................................................... 3 1.2. Planteamiento del problema ........................................................................... 4 1.3. Solución planteada ......................................................................................... 5 1.4. Objetivo General ............................................................................................. 5 1.5. Objetivos Específicos ..................................................................................... 5 CAPÍTULO II MARCO CONCEPTUAL ....................................................................... 6 2.1. Sistemas de Información ................................................................................ 6 2.1.1. Tipos de Sistemas de Información ......................................................... 7 2.1.1.1. Sistemas de Procesamiento de Transacciones (TPS) ................... 8 2.1.1.2. Sistemas de Información Gerencial (MIS) ..................................... 8 2.1.1.3. Sistemas de apoyo a la toma de decisiones (DSS) ....................... 9 2.1.1.4. Sistemas de apoyo a ejecutivos (ESS) .......................................... 9 2.1.2. ¿Qué es un proceso? ........................................................................... 10 2.1.3. ¿Qué es un proceso de Negocio? ........................................................ 11 2.1.4. Gestión de Procesos de Negocio ......................................................... 12 2.1.5. Origen y evolución de la Gestión de Procesos de Negocio .................. 13 2.1.6. Ciclo de Vida BPM ............................................................................... 15 vi 2.1.7. Beneficios ............................................................................................. 16 2.1.8. Business Process Management Suites ................................................ 17 2.1.9. Notación para el Modelado de Procesos de Negocio .......................... 18 2.1.10. Elementos de BPMN ............................................................................ 19 2.1.10.1. Eventos ........................................................................................ 20 2.1.10.2. Actividades .................................................................................. 20 2.1.10.3. Compuertas (Gateway) ................................................................ 20 2.1.10.4. Objetos conectores ...................................................................... 21 2.1.10.5. Canales (Swimlanes) ................................................................... 21 2.1.10.6. Artefactos ..................................................................................... 21 2.1.11. Sistemas de Administración de Relaciones con Clientes ..................... 21 2.1.11.1. Objetivos de los CRM .................................................................. 22 2.1.11.2. Características de un CRM .......................................................... 23 2.1.11.3. Ventajas ....................................................................................... 24 2.1.11.4. Desventajas ................................................................................. 24 2.1.11.5. SalesLogix ................................................................................... 25 2.2. Aplicaciones Web ......................................................................................... 26 2.2.1. Arquitectura Cliente Servidor ............................................................... 27 2.2.2. Características de las Aplicaciones Web ............................................. 28 2.2.3. Tecnologías del lado del cliente ........................................................... 29 vii 2.2.3.1. HTML ........................................................................................... 30 2.2.3.2. Hojas de estilo en cascada .......................................................... 31 2.2.3.3. Javascript ..................................................................................... 33 2.2.3.4. Jquery .......................................................................................... 33 2.2.3.5. AJAX ............................................................................................ 33 2.2.3.6. JSON ........................................................................................... 34 2.2.4. Tecnologías del lado del servidor ......................................................... 34 2.2.4.1. PHP ............................................................................................. 35 2.2.4.2. Bases de Datos ........................................................................... 40 2.2.5. Servicios Web ...................................................................................... 44 2.2.5.1. Servicios Web REST ................................................................... 44 CAPÍTULO III MARCO METODOLÓGICO. .............................................................. 46 3.1. BPM-RAD ..................................................................................................... 47 3.1.1. Análisis Lógico ..................................................................................... 48 3.1.2. Diseño Preliminar ................................................................................. 48 3.1.3. Diseño BPM ......................................................................................... 48 3.1.4. Sesiones RAD ...................................................................................... 49 3.2. Scrum ........................................................................................................... 49 3.2.1. Características de Scrum ..................................................................... 50 CAPÍTULO IV MARCO APLICATIVO. ...................................................................... 53 viii 4.1. Fase 1 – Análisis del proceso ....................................................................... 54 4.1.1. Descripción del Proceso ....................................................................... 54 4.1.2. Roles y Tareas de Usuarios ................................................................. 58 4.2. Fase 2 - Diseño del proceso ......................................................................... 58 4.3. Fase 3 - Implementación .............................................................................. 63 4.3.1. Perfiles de Usuarios ............................................................................. 63 4.3.2. Aplicación de Scrum............................................................................. 65 4.4. Fase 4 - Pruebas, monitoreo y optimización ................................................. 83 CONCLUSIONES Y RECOMENDACIONES ............................................................ 86 BIBLIOGRAFÍA ......................................................................................................... 88 ix ÍNDICE DE TABLAS Tabla 1. Comparación de los acciones HTTP. .......................................................... 45 Tabla 2. Fases y entregables del Trabajo Especial de Grado. .................................. 53 Tabla 3. Fases y entregables del Trabajo Especial de Grado. (Continuación) .......... 54 Tabla 4. Roles y tareas del proceso de inscripción de eventos. ................................ 58 Tabla 5. Perfiles de Usuario del Sistema ................................................................. 64 Tabla 6. Perfiles de Usuario del Sistema (Continuación) .......................................... 65 Tabla 7. Product Backlog .......................................................................................... 66 Tabla 8. Product Backlog (Continuación) .................................................................. 67 Tabla 9. Revisión de la iteración 1 ............................................................................ 68 Tabla 10. Revisión de la iteración 2 .......................................................................... 70 Tabla 11. Revisión de la iteración 3 .......................................................................... 72 Tabla 12. Revisión de la iteración 4 .......................................................................... 74 Tabla 13. Revisión de la iteración 5 .......................................................................... 76 Tabla 14. Revisión de la iteración 6 .......................................................................... 78 Tabla 15. Revisión de la iteración 7 .......................................................................... 80 Tabla 16. Revisión de la iteración 8 .......................................................................... 82 Tabla 17 – Modelo de encuesta de valoración .......................................................... 84 x ÍNDICE DE FIGURAS Figura 1. Estructura de los Sistemas de Información. ................................................. 7 Figura 2. Estructura de una Organización. .................................................................. 8 Figura 3. Tipos de Sistemas de Información. ............................................................ 10 Figura 4. Ciclo de Vida BPM. .................................................................................... 16 Figura 5. Ejemplo de un diagrama BPMN. ................................................................ 19 Figura 6. Objetivos de los CRM. ................................................................................ 23 Figura 7. Arquitectura del CRM SalesLogix............................................................... 26 Figura 8. Arquitectura Cliente/Servidor. .................................................................... 27 Figura 9. Representación de un documento HTML como DOM. ............................... 30 Figura 10. Modelo de cajas. ...................................................................................... 31 Figura 11. Representación de un objeto JSON. ........................................................ 34 Figura 12. Modelo, Vista, Controlador en Laravel. .................................................... 40 Figura 13. Infografía de la Metodología Scrum. ........................................................ 50 Figura 14. Ejemplo de un Burn Down Chart. ............................................................. 51 Figura 15. Creación de un nuevo evento en SalesLogix CRM. ................................. 55 Figura 16. Captura de pantalla. Listado de los ejecutivos inscritos en el evento....... 56 Figura 17. Captura de pantalla. Relación de Cierre. ................................................. 57 Figura 18. Modelo en BPMN del proceso de inscripción. .......................................... 59 Figura 19. Modelo en BPMN del proceso de validación de inscripción. .................... 60 xi Figura 20. Modelo en BPMN del proceso de ingreso al evento................................. 61 Figura 21. Modelo en BPMN del Subproceso: Consultar RIF ................................... 62 Figura 22. Modelo en BPMN del Subproceso: Verificar solicitud .............................. 62 Figura 23. Modelo de datos del sistema. ................................................................... 69 Figura 24. Vista del formulario de inscripción de eventos. ........................................ 71 Figura 25. Modelo del correo electrónico que será enviado al confirmar la inscripción. .................................................................................................................................. 73 Figura 26. Revisión de solicitud ................................................................................. 75 Figura 27. Panel de control del sistema – Contactos que realizaron la inscripción. .. 77 Figura 28. Verificación de inscripción de eventos. .................................................... 79 Figura 29. Búsqueda por RIF. ................................................................................... 81 Figura 30. Integración Mercado Pago. ...................................................................... 83 Figura 31. Resultados encuesta de valoración.......................................................... 85 1 INTRODUCCIÓN Desde hace varios años las tecnologías de información y comunicación, se vienen empleando masivamente para automatizar una gran cantidad de actividades y procesos en las organizaciones. La gestión de procesos de negocio y las aplicaciones web, se han convertido en las alternativas utilizadas con mayor frecuencia en el desarrollo de sistemas que permiten optimizar los procesos críticos de las mismas. La Cámara Venezolano - Americana de Comercio e Industria (Venamcham), tiene como principal función en nuestro país, la formación de liderazgos responsables en el seno empresarial, mediante la realización de eventos y talleres. Venamcham realiza en promedio 50 eventos al año, cuyo proceso de inscripción se efectúa de forma manual, resultando extremadamente complejo e ineficiente. El objetivo de este Trabajo Especial de Grado, está centrado en diseñar y desarrollar un sistema de información que permita automatizar el proceso de inscripción de eventos en Venamcham, utilizando la metodología de BPM-RAD para analizar y modelar los procesos, así como tecnologías web en el desarrollo del sistema. El referido trabajo se encuentra estructurado de la siguiente manera:  En el Capítulo I se describe el planteamiento del problema, la situación actual, la solución planteada, los objetivos generales y específicos.  En el Capítulo II se desarrollan las bases conceptuales fundamentales del trabajo, se revisan puntos importantes sobre los sistemas de información, la gestión de procesos de negocio, los sistemas de administración de relaciones con clientes y finalmente las herramientas tecnológicas necesarias para el desarrollo de una aplicación web. 2  En el Capítulo III se describen las metodologías de desarrollo aplicadas en este Trabajo Especial de Grado.  En el Capítulo IV se aplican los conceptos y las metodologías estudiadas en el capítulo anterior. Por otra parte, se cubre el ciclo de vida de BPM, utilizando BPM-RAD como metodología para el análisis y diseño del proceso, así como la metodología ágil de desarrollo SCRUM para implementar la aplicación web. Finalmente se muestran, conclusiones, recomendaciones, anexos y las referencias bibliográficas utilizadas en este trabajo. 3 CAPÍTULO I PROBLEMA DE INVESTIGACIÓN En el presente capítulo, se describe el estado del arte, el problema, la solución planteada, el objetivo general y los objetivos específicos de esta investigación 1.1. Estado del Arte La Cámara Venezolano - Americana de Comercio e Industria (Venamcham) es una institución no gubernamental sin fines de lucro. Cuenta con 65 años de trayectoria y se dedica a satisfacer los intereses económicos y comerciales de sus afiliados. La misión de Venamcham es fomentar el comercio y la inversión entre los Estados Unidos de América y la República Bolivariana de Venezuela, mediante la defensa y el impulso del libre comercio, el libre mercado y la responsabilidad social; con el fin de que todos los sectores que intervienen en la economía logren un desarrollo equilibrado y sostenido, a través del tiempo (Venamcham-a, 2015). Actualmente, Venamcham cuenta con más de 10.000 ejecutivos de negocios y más de 1.100 empresas registradas; situándose, así, como la principal asociación empresarial binacional del país. Todo miembro de Venamcham goza de una gama de productos, servicios, beneficios e información que le permite desarrollar, de manera exitosa, su actividad económica nacional e internacional. En el año 2015, Venamcham en su aniversario, resaltó como uno de sus mayores logros, como institución, es haber contribuido en la formación de liderazgos responsables dentro del seno empresarial, a través de sus eventos, talleres, asesorías y publicaciones. 4 1.2. Planteamiento del problema Venamcham realiza, en promedio, 50 eventos al año, en todo el territorio nacional. En ellos, se abordan temas diversos tales como: marketing, coaching, economía, responsabilidad social, gerencia, entre otros. Para estos eventos, se extienden invitaciones a todos los contactos de las empresas afiliadas y no afiliadas registradas en una base de datos, que hasta el momento, contiene más de 10.000 registros. En cada evento que Venamcham promociona, la dinámica comienza con el envío de las invitaciones y el registro de los participantes. Los integrantes de la Gerencia de Logística y Eventos envían la invitación a todos los contactos, mediante una lista de correo. Este proceso se realiza de forma manual, sin ningún tipo de control y vigilancia; convirtiéndolo en una actividad propensa a errores, y generando inconsistencia de datos, ralentización de los procesos y dificultad en el acceso a la información. Cuando la invitación llega a su destinatario, además del material publicitario, contiene un archivo adjunto en formato Microsoft Excel, el cual representa una planilla de inscripción al evento, la misma debe ser llenada por un representante autorizado de la empresa, y enviada de vuelta a la Gerencia de Logística y Eventos de Venamcham. En sus operaciones diarias, Venamcham utiliza el sistema de administración de relaciones con clientes (CRM, por sus siglas en inglés) SalesLogix. La información recibida mediante las planillas es vaciada en el CRM manualmente, por los miembros de la Gerencia de Logística y Eventos; impidiendo, así, que se pueda dar respuesta oportuna o acuse de recibo a los invitados que se inscribieron en el evento, debido al gran volumen de inscripciones. El día del evento, el personal de protocolo de Venamcham debe realizar la validación de cada uno de los asistentes al evento. Esto se hace de forma manual a 5 través de un listado impreso, lo que ocasiona una considerable ralentización en el ingreso de los invitados. Los problemas anteriormente presentados ocasionan cuellos de botella en la Gerencia de Logística y Eventos de Venamcham, atrasos en los tiempos establecidos, así como también la generación de datos e información poco confiable de los eventos realizados, lo que deriva en el ineficiente uso de los recursos a la organización. 1.3. Solución planteada Considerando los problemas presentados en el punto anterior, se propone el desarrollo de un sistema de información que permita automatizar y optimizar los procesos involucrados en la realización de los eventos de Venamcham. 1.4. Objetivo General Desarrollar un sistema de información que permita automatizar el proceso de inscripción de eventos de la Cámara Venezolano - Americana de Comercio e Industria. 1.5. Objetivos Específicos  Realizar el levantamiento de información y el descubrimiento del proceso de inscripción de eventos de Venamcham.  Diseñar y modelar el proceso de inscripción de eventos, utilizando la notación para el modelado de procesos de negocio (BPMN, por sus siglas en inglés).  Desarrollar una aplicación web que permita automatizar el proceso de inscripción de eventos de Venamcham.  Realizar, al sistema desarrollado, las pruebas de software correspondientes.  Optimizar el funcionamiento del sistema, a partir de los resultados obtenidos en las pruebas de software. 6 CAPÍTULO II MARCO CONCEPTUAL La finalidad de este capítulo es presentar las bases conceptuales que servirán de fundamento para el desarrollo del presente trabajo de investigación. El mismo se divide en dos secciones, las cuales se describen a continuación: En la primera sección, se explica, de manera breve: que son los sistemas de información, sus tipos y sus características. Se abordan conceptos sobre la gestión de procesos de negocio y los sistemas de administración de relaciones con clientes (CRM, por sus siglas en inglés); en especial el sistema SalesLogix. En la segunda sección, se explica la arquitectura cliente-servidor y se muestran algunas herramientas tecnológicas necesarias para el desarrollo de una aplicación web. Entre las tecnologías del lado del cliente, se hace referencia a HTML, CSS, JavaScript, AJAX y JQuery. En cuanto a las tecnologías del lado del servidor, se incluye Apache, como servidor web, PHP con el framework Laravel, MySQL como sistema manejador de bases de datos, y SQL Server para realizar la integración con el CRM SalesLogix. 2.1. Sistemas de Información Laudon & Laudon (2012) definen los sistemas de información como un conjunto de componentes interrelacionados que recolectan (o recuperan), procesan, almacenan y distribuyen información para apoyar los procesos de toma de decisiones y de control de una organización. (Ver Figura 1) En tal sentido, se puede decir que los sistemas de información constituyen un importante instrumento que ayuda a las organizaciones a generar ventajas competitivas; dando así mayor valor a dicha organización. 7 Figura 1. Estructura de los Sistemas de Información. 2.1.1. Tipos de Sistemas de Información Cada organización es diferente, ellas están definidas por su estructura, sus procesos de negocios y sus políticas. Caeríamos en un grave error si pensáramos que un solo sistema puede dar a apoyo a todos sus procesos y niveles (Laudon & Laudon, 2012). Incluso en las organizaciones más simples, se puede evidenciar una estructura jerárquica compuesta por distintos niveles. Como se puede apreciar en la Figura 2 y en la Figura 3, para cada uno de ellos existen sistemas de información que dan soporte a las actividades realizadas diariamente. 8 Figura 2. Estructura de una Organización. 2.1.1.1. Sistemas de Procesamiento de Transacciones (TPS) Los sistemas de procesamiento de transacciones (TPS) son aquellos creados con la finalidad de procesar grandes cantidades de datos relacionados a las transacciones diarias de los negocios, tales como: ventas, nóminas, flujo de materiales, entre otros. Es importante destacar que este tipo de sistemas es fundamental para la empresa; si por un motivo u otro fallan, pueden provocar pérdidas importantes en los ingresos o incluso la desaparición de la misma. (Kendall & Kendall, 2005). 2.1.1.2. Sistemas de Información Gerencial (MIS) La gerencia de nivel medio necesita sistemas que les ayuden con las actividades de supervisión, control, administración, y toma de decisiones; proporcionando informes semanales, mensuales y anuales sobre el desempeño de la 9 organización. Los sistemas de información gerencial (MIS) utilizan los datos provenientes de los sistemas de procesamiento de transacciones (TPS) y responden a esta pregunta: ¿Funcionan bien las cosas? (Laudon & Laudon, 2012) 2.1.1.3. Sistemas de apoyo a la toma de decisiones (DSS) Los sistemas de soporte de decisiones (DSS) brindan apoyo, a la gerencia intermedia, en la toma de decisiones, en ocasiones donde los problemas son únicos, cambiantes y poco fáciles de anticipar. Los DSS responden a preguntas como: ¿Cuál sería el impacto en los calendarios de producción, si tuviéramos que duplicar las ventas de diciembre? ¿Qué pasaría con nuestro rendimiento sobre la inversión, si el calendario de producción de una fábrica se retrasara seis meses? Estos sistemas se abastecen tanto de los datos provenientes de los TPS y MIS, como de fuentes externas. Estos sistemas condensan grandes cantidades de información, de tal forma que su análisis sea sencillo de entender para los encargados de tomar las decisiones. (Laudon & Laudon, 2012) 2.1.1.4. Sistemas de apoyo a ejecutivos (ESS) Estos sistemas ayudan a la gerencia de alto nivel de las organizaciones, en las actividades de planificación a largo plazo y a sus directores para enfrentar y resolver aspectos estratégicos; dando así los cambios necesarios para adaptarse al ambiente externo de la organización. Los ESS generan herramientas gráficas que dan, a los ejecutivos, la posibilidad de comprender sus entornos, y resolver problemas no estructurados con visión a largo plazo. Sin embargo, al igual que los DSS, dependen de la información producida por los TPS y los MIS. (Kendall & Kendall, 2005) 10 Figura 3. Tipos de Sistemas de Información. 2.1.2. ¿Qué es un proceso? Un proceso es una secuencia de pasos ordenados lógicamente, que se enfocan en lograr un resultado concreto. Los procesos son mecanismos de comportamiento que se diseñan para mejorar la productividad, para establecer un orden o eliminar algún tipo de problema. (Definición Mx, s.f.) Un proceso, según Davenport (1993), es un conjunto estructurado y medible de actividades diseñadas para producir un producto específico, el cual está conformado por un conjunto de tareas lógicamente relacionadas, y con la finalidad de conseguir un resultado bien definido dentro de un negocio. Por lo tanto, el proceso toma una entrada, le agrega valor y produce una salida. Los procesos tienen, entonces, clientes que pueden ser internos o externos; los cuales reciben una salida, que puede ser un producto físico o un servicio. Estos 11 establecen las condiciones de satisfacción y declaran si el producto o servicio es aceptable o no. (Barros, 1994) Ould (1995), por su parte, también define el proceso como un conjunto coherente de actividades llevadas a cabo por un grupo de colaboración para lograr un objetivo. 2.1.3. ¿Qué es un proceso de Negocio? Para Laudon & Laudon (2012), los procesos de negocios se refieren al conjunto de tareas y comportamientos lógicamente relacionados entre sí, que las organizaciones desarrollan a través del tiempo, para producir resultados de negocios específicos y a la manera particular en la cual se organizan y coordinan estas actividades. Hammer (1990) por su parte, establece la diferencia sustancial entre un proceso y una tarea, señalando que una tarea corresponde a una actividad conducida por una persona o un grupo de personas, mientras que un proceso de negocio corresponde a un conjunto de actividades que, como un todo, crean valor para el cliente externo. Ould (1995) elabora una lista de características que deben cumplir los procesos de negocio, y que refuerza la posición de Hammer. Según este autor, un proceso de negocio contiene actividades con propósito, es ejecutado colaborativamente por un grupo de trabajadores de distintas especialidades, con frecuencia cruza las fronteras de un área funcional, e invariablemente es detonado por agentes externos o clientes de dicho proceso. Rummler & Brache (1995) desde el principio, sugirieron que un proceso de negocio es la serie de pasos que una empresa realiza para producir un producto o servicio. Si se cruza fronteras departamentales, es multifuncional. Si el producto es para un cliente externo, es un proceso primario; de lo contrario, es un proceso de apoyo. 12 2.1.4. Gestión de Procesos de Negocio Laurentiis y otros (2011) definen en su libro titulado “El Libro del BPM 2011” gestión de procesos de negocio (BPM, por sus siglas en inglés) como “un orden específico de actividades de trabajo, que se realizan en el tiempo, en lugares específicos y por personas o sistemas, con un comienzo, un fin, con entradas y salidas claramente definidas. Es decir, una estructura cohesionada y coordinada adecuadamente para la acción.” De acuerdo con Garimella, Lees, & Williams (2008) BPM se define de la siguiente manera: “Un conjunto de métodos, herramientas y tecnologías utilizados para diseñar, representar, analizar y controlar procesos de negocio operacionales.” En base a estas definiciones, se puede resaltar que la filosofía a la que se hace mención está centrada en los diferentes procesos de una organización, con el fin de mejorar la eficiencia y optimizar el rendimiento de la misma. Para Garimella, Lees, & Williams (2008) uno de los principales retos de las organizaciones es conseguir la flexibilidad y agilidad necesarias para adaptarse a los rápidos y continuos movimientos del mercado. Por eso, hoy en día, las organizaciones que han implementado metodologías de gestión de procesos de negocio reportan grandes beneficios, con altísimos ahorros en costos y reducciones importantes en tiempos de servicios a sus clientes. Los procesos y recursos empresariales deben dirigirse hacia la meta estratégica de la empresa, ser capaces de reconocer lo que impide alcanzar los objetivos marcados, identificar los cuellos de botella existentes, conocer maneras de solventar las excepciones y saber cómo orquestar los procesos y recursos para conseguir la meta planteada. Para que una implementación de BPM sea exitosa, las organizaciones no deben cometer el gran error de centrarse solo en las tecnologías, sino principalmente 13 en el conocimiento, dominio y mejora continua de sus procesos, datos y recursos empresariales. Según Garimella, Lees, & Williams (2008), BPM puede ayudar a una organización a mejorar sus ofertas, en las siguientes categorías:  Globalización: actualmente, las organizaciones van más allá para encontrar ventajas competitivas en los costos, calidad e innovación, y requieren una integración completa de sus procesos, además del intercambio instantáneo de información a grandes escalas.  Productividad: BPM, mediante su continua monitorización y optimización de los procesos de una organización, puede ayudar a producir más, y generar más valor para una empresa, utilizando menos recursos y en menor tiempo.  Innovación: mayormente, la innovación empresarial se suele asociar con productos, pero también se aplica a servicios, procesos de negocio y fabricación, desarrollo, diseño de tiendas, modelos empresariales e incluso al empaquetado del producto. 2.1.5. Origen y evolución de la Gestión de Procesos de Negocio Se pueden encontrar algunos indicios de la teoría BPM, desde hace ya más de 2 siglos, cuando el economista y filósofo escocés, Adam Smith, uno de los mayores exponentes de la economía clásica, escribió en su libro, La riqueza de las naciones, sobre el aumento de la productividad y la mejora en la eficiencia de una fábrica de alfileres, a través de la implementación de la idea de la división del trabajo. Smith reseñaba que: “Si dos trabajadores se especializan en realizar uno la parte superior y otro la parte inferior del alfiler, producirán más alfileres en una hora que si cada uno de 14 ellos fabrica las dos, por tanto si una persona fabrica menos de cien alfileres al día con la división del trabajo puede fabricar hasta 10.000 alfileres.” (DiplomadosOnline-b, s.f.). Tomando este ejemplo como referencia: “Un obrero que no haya sido adiestrado en esa clase de tarea y que no esté acostumbrado a manejar la maquinaria que en él se utiliza, por más que trabaje, apenas podría hacer un alfiler al día, y desde luego no podría confeccionar más de veinte. Pero dada la manera como se practica hoy día la fabricación de alfileres, no sólo la fabricación misma constituye un oficio aparte, sino que está dividida en varios ramos, la mayor parte de los cuales también constituyen otros tantos oficios distintos. He visto una pequeña fábrica de esta especie que no empleaba más que diez obreros, donde, por consiguiente, algunos de ellos tenían a su cargo dos o tres operaciones. Pero, a pesar de que eran pobres y, por lo tanto, no estaban bien provistos de la maquinaria debida, podían, cuando se esforzaban, hacer entre todos, diariamente, unas doce libras de alfileres. En cada libra había más de cuatro mil alfileres de tamaño mediano. Por consiguiente, estas diez personas podían hacer cada día, en conjunto, más de cuarenta y ocho mil alfileres, cuya cantidad, dividida entre diez, correspondería a cuatro mil ochocientas por persona. En cambio si cada uno hubiera trabajado separada e inde- pendientemente, y ninguno hubiera sido adiestrado en esa clase de tarea, es seguro que no hubiera podido hacer veinte, o, tal vez, ni un solo alfiler al día; es decir, seguramente no hubiera podido hacer la 240ava parte, tal vez ni la 4800ava parte de lo que son capaces de confeccionar en la actualidad gracias a la división y combinación de las diferentes operaciones en forma conveniente.” (Smith A. , 1776) Este modelo, como forma primitiva de diseño y optimización de tareas, el cual Smith diseño con el fin de mejorar la productividad, sería demasiado simple para la 15 mayoría de las empresas hoy en día, debido a la magnitud y complejidad de los procesos actuales. En su libro, “Gestión de Procesos de Negocio: La Tercera Ola”, los autores Howard Smith y Peter Fingar han capturado la evolución de BPM, en tres oleadas. En la primera ola, los primeros sistemas de información adoptaron un enfoque centrado en los datos, para el apoyo a las necesidades del negocio. La segunda ola mantuvo un enfoque funcional de las operaciones comerciales y muchas estructuras organizativas se modelaban completamente alrededor de este punto de vista. La tercera ola eliminó los compromisos y contorsiones impuestas por las limitaciones tecnológicas anteriores, y adoptó un enfoque centrado en los procesos de negocio y la organización orientada a procesos; dando paso, de esta manera, al nacimiento de la gestión de procesos de negocio, como ente orquestador, y árbitro, de los procesos de una empresa. (Smith & Fingar, 2006). 2.1.6. Ciclo de Vida BPM Las actividades o tareas que se desarrollan en BPM se organizan en etapas, cada una con un enfoque específico. Son cinco las etapas cruciales:  Identificación: En esta etapa, los procesos existentes pueden ser identificados, reformados o eliminados. De igual manera, se agregan nuevos flujos, actores, alertas, notificaciones y decisiones.  Modelado: Se utiliza el diseño teórico para describir los procesos a alto nivel, enfocando el esfuerzo en cómo funcionan cada uno de ellos y dejando de lado interrogantes de implementación.  Implementación y Ejecución: En esta etapa, se ponen en marcha los procesos detallados en el paso anterior; incluye compras de infraestructura, 16 tecnología, entrenamiento de personal, documentación del proyecto, y puesta en marcha del diseño planteado.  Monitoreo: Se hace seguimiento de los procesos, se evalúa el rendimiento, se analizan resultados recientemente obtenidos y se comparan con los anteriores.  Optimización: Se toma toda la información de la etapa de monitoreo para identificar problemas generales y cuellos de botella. Se buscan soluciones a los problemas y posteriormente, se ponen en marcha. Figura 4. Ciclo de Vida BPM. 2.1.7. Beneficios  Integración de personas, sistemas, información y procesos. 17  Automatización de procesos generando mayor productividad, coherencia, reducción de errores, mayor conformidad y satisfacción del cliente.  Capacidad de interacción con clientes, socios y talento humano, facilitando la realización de transacciones en tiempo real, basadas en los procesos y las normas de negocio definidas.  Capacidad de adaptación rápida y flexible con los sistemas de información tradicionales. 2.1.8. Business Process Management Suites Para Garimella, Lees, & Williams (2008), BPMS es la suite de tecnologías BPM, que incluye todos los módulos funcionales, las capacidades técnicas y la infraestructura de apoyo, integradas en un único entorno que realiza todas las funciones de la tecnología BPM de manera perfecta. Los principales módulos que componen una plataforma BPMS son los siguientes:  Modelador Gráfico de Procesos: Esta herramienta permite modelar los procesos de negocio, simular su ejecución, definir métricas para el monitoreo, y exportar a Lenguaje de Ejecución de Procesos de Negocio (Business Process Execution Language – BPEL).  Ambiente Integración y Desarrollo: es la herramienta que permite implementar los procesos, así como integrar las pantallas (para interacción de un participante), y los servicios (interacción con sistemas legados).  Servidor de Procesos de Negocio: es el motor que permite ejecutar los procesos de negocio. Aquí se ejecutan las Aplicaciones Compuestas, los Workflows tradicionales, y la Orquestación de Servicios. Este servidor también es el encargado de generar los datos de las métricas, y de 18 monitoreo. Permite intervenir los procesos en tiempo real: balancear carga, cambiar flujo de negocio, y realizar acciones correctivas (según reglas de negocio).  Monitor de Actividades de Negocio: esta es una aplicación de administración que permite gestionar los procesos y servicios gráficamente. En ella se pueden ver indicadores de performance, definir alertas y triggers de acuerdo a eventos de negocio que sucedan en el proceso. 2.1.9. Notación para el Modelado de Procesos de Negocio Según Garimella, Lees, & Williams (2008), la notación para el modelado de procesos de negocio (BPMN, por sus siglas en inglés) es una notación gráfica estandarizada para representar los procesos de negocio en un flujo de trabajo, que facilita la mejora de la comunicación y la portabilidad de los modelos de proceso. (Ver Figura 5). Un diagrama, en notación BPMN, puede ser transformado, automáticamente, en un código ejecutable, sin la necesidad de programación. El más usado, y conocido, de estos lenguajes es el BPEL (Business Process Execution Language, por sus siglas en ingles). De esta forma, el analista de negocios puede definir, diseñar y generar una solución a sus procesos, sin tener que preocuparse lenguajes de programación o tecnologías. 19 Figura 5. Ejemplo de un diagrama BPMN. 2.1.10. Elementos de BPMN Giandini, Perez, & Pons (2010) afirman que la notación para el modelado de procesos de negocio (Ver anexo 1), fue diseñada para ser: intuitiva, simple y entendible; de manera que los ingenieros de procesos (personal capacitado en todo el ámbito de la gestión de procesos de negocio) puedan diseñar los diferentes modelos de manera sencilla. Los elementos de flujo son los principales elementos de BPMN los cuales se encargan de determinar qué es lo que va a suceder, qué tipo de trabajo se va a realizar, y cuáles son las condiciones para que estos trabajos sucedan. Los tres objetos de flujo son: 20 2.1.10.1. Eventos Es un acontecimiento que sucede durante el proceso de negocio, y que afecta el flujo del proceso. Tiene una causa o un resultado, y dependiendo del momento en que afectan al flujo, se dividen en tres tipos: inicio, intermedio y fin. 2.1.10.2. Actividades Es un término genérico para el trabajo que se realiza en una organización. Se representa con un rectángulo redondeado y puede ser atómica o compuesta. Los tipos de actividades son:  Tareas Una tarea es una actividad atómica que está incluida dentro de un proceso. Se habla de tarea cuando el trabajo que representa en el proceso no puede desglosarse en un nivel mayor de detalle.  Subprocesos Un subproceso es un conjunto de actividades incluidas dentro de un proceso. Puede desglosarse en diferentes niveles de detalle, denominados “tareas”. Se representa con un símbolo de suma, en la parte central inferior de la figura. 2.1.10.3. Compuertas (Gateway) Se representa con un diamante, y se emplea para controlar la divergencia o convergencia de la secuencia de flujo. Éstas determinan ramificaciones, bifurcaciones, combinaciones y fusiones del proceso. 21 2.1.10.4. Objetos conectores Conectan los objetos de flujo de un proceso y definen el orden de ejecución de las actividades. Los conectores pueden ser de secuencia, un mensaje o una asociación. 2.1.10.5. Canales (Swimlanes) Son un mecanismo empleado para organizar actividades en categorías separadas visualmente, con el fin de ilustrar diferentes capacidades funcionales o responsabilidades. 2.1.10.6. Artefactos Son objetos gráficos que proveen información adicional de los elementos dentro de un proceso, sin afectar su flujo. 2.1.11. Sistemas de Administración de Relaciones con Clientes Un sistema de administración de relaciones con clientes (CRM, por sus siglas en inglés) se define como: “La integración de tecnologías y los procesos de negocios usados para satisfacer las necesidades de los clientes durante cualquier interacción con los mismos”. (Bose, 2003) Específicamente, un CRM involucra la adquisición, el análisis y el uso del conocimiento de las actividades que realizan los clientes, con la finalidad de vender más productos o servicios, y hacerlo de forma más eficiente. Según Alfredo De Goyeneche (2001), en una publicación en la revista Economía y Administración de la Universidad de Chile, “estamos frente a un modelo de negocios cuya estrategia está destinada a lograr identificar y administrar las relaciones en aquellas cuentas más valiosas para una empresa, trabajando 22 diferentemente en cada una de ellas de forma tal de poder mejorar la efectividad sobre los clientes". 2.1.11.1. Objetivos de los CRM Bose (2003) describió el objetivo del CRM como un proceso cíclico, centrado en el cliente (Ver Figura 6), y que cumple con los siguientes objetivos:  Mayor conocimiento del cliente y humanización del trato: un sistema CRM permite identificar y conocer a los clientes, y por tanto personalizar, con un mayor nivel de detalle, las ofertas y el trato recibido.  Aumento de la satisfacción y lealtad de los clientes: la información contenida en la base de datos también deberá ser usada para proveer al cliente de la mayor satisfacción posible.  Aumento de las ventas: un mayor conocimiento de los clientes, permite conocer mejor, cuáles son las preferencias de cada uno, y de esta manera, personalizar las propuestas y ofrecer a los consumidores los servicios que más se adecuan a sus necesidades.  Reducción de los costos de servicio: un cliente con fidelidad alta suele representar un menor costo en atención al cliente, porque conoce los servicios y productos de la empresa. Además, la empresa conoce mejor al cliente y sabe cómo debe actuar en los procesos asociados a él. 23 Figura 6. Objetivos de los CRM. 2.1.11.2. Características de un CRM  Automatización de las Ventas: en los sistemas CRM, los procesos de venta a los clientes son configurados en las aplicaciones. Los pedidos y transacciones se integran a las bases de datos, para así monitorear de forma más intensa sus ciclos de compra. (Chen & Popovich, 2003)  Servicio y soporte al cliente: un CRM mejora el servicio al cliente, mediante el monitoreo y medición de las interacciones que se dan entre este y los proveedores. (Chen & Popovich, 2003)  Automatización del Marketing: un CRM proporciona la información actual de los hábitos de compra de los clientes, lo que permite determinar campañas de marketing efectivas que, en determinado momento, desembocaran en ventas cruzadas, para así atraer a nuevos clientes. Mediante el uso en conjunto del CRM, la inteligencia del marketing, las 24 bases de datos de los clientes y las comunicaciones tecnológicas, las empresas satisfacen sus necesidades particulares de mejor manera. Esto permite que la organización sepa aquello que les agrada o desagrada a sus clientes, y, por tanto, entienden correctamente sus necesidades. (Chen & Popovich, 2003) 2.1.11.3. Ventajas  Flexibilidad y adaptabilidad: un CRM es una herramienta altamente “maleable”. Esto se traduce en la posibilidad de apoyar los procesos de negocio particulares de cualquier organización, sin importar el ramo al cual se dedique.  Integración: Es imposible alcanzar los beneficios del uso de un software de CRM sin establecer una integración con la información de los clientes, la cual reside en los diferentes sistemas de información de la empresa. Por esto es muy importante que el software CRM esté en la capacidad de poder integrarse de forma efectiva y fácil de mantener con otros sistemas. (Bose, 2003).  Facilidad de Uso: La adopción de un sistema de información, por parte de los usuarios, es uno de los aspectos más complejos en un proyecto de CRM. En la medida que el software sea fácil de entender y fácil de usar, mayor probabilidad existirá de que los usuarios presenten menor resistencia ante su uso cotidiano. (Bose, 2003). 2.1.11.4. Desventajas  El elevado costo que implica la implementación del CRM, tanto en recursos económicos como humanos. 25  La dificultad en el manejo de información, debido a la resistencia de determinados sectores, a la posibilidad de compartir su información con otros.  Se puede incurrir en invasión de la privacidad del cliente, y exponerlo a situaciones indeseadas.  Necesidad de capacitación extensiva para el personal.  Altos costos de licencias propietarias.  Imposibilidad de modificación o adaptación de código fuente. 2.1.11.5. SalesLogix SalesLogix es un software CRM, de licenciamiento parivativa, originalmente producido por la empresa Interact Commerce Corporation. Es bastante flexible y adaptable a proyectos de CRM con altas necesidades de integración y personalización. (CRMAgil, 2015) SalesLogix puede ser utilizado en procesos tan básicos como la construcción y mantenimiento de una base de datos de clientes, hasta procesos de negocio altamente complejos en áreas de Mercadeo Relacional, Automatización de Fuerzas de Ventas, Procesos de Venta, Soporte y Servicio al Cliente. (CRMAgil, 2015) SalesLogix cuenta con una arquitectura totalmente abierta, que permite una integración fácil y rápida con cualquier tipo de aplicaciones o servicios, de esta manera se logra centralizar la información de todos los departamentos y sistemas de la organización que lo utiliza. (Ver Figura 7) 26 Figura 7. Arquitectura del CRM SalesLogix. 2.2. Aplicaciones Web Shklar & Rosen (2003) definen una aplicación web como una aplicación cliente- servidor que usa un navegador web como su cliente, y presta servicios a través de distintos servidores, distribuidos en Internet o una red privada. Además, puede presentar contenido dinámico, basado en los parámetros de la solicitud. Frecuentemente, las aplicaciones web tienen aspectos de seguridad, interacción con los usuarios, y pueden almacenar y actualizar información, con controles de acceso y soporte de transacciones en línea. Estas aplicaciones se han vuelto populares en los últimos tiempos, debido a lo práctico del navegador web como un cliente ligero, así como la facilidad que existe para su mantenimiento y actualización, sin que ello implique una distribución o reinstalación del software, en miles de equipos clientes. 27 2.2.1. Arquitectura Cliente Servidor Las aplicaciones web funcionan bajo la arquitectura cliente-servidor, tecnología que proporciona al usuario final, un acceso transparente a las aplicaciones, datos, servicios de cómputo o cualquier otro recurso del grupo de trabajo, en múltiples plataformas. El modelo soporta un medio ambiente distribuido, en el cual los requerimientos de servicio, hechos por las estaciones de trabajo o clientes, son realizados por otros computadores, llamados servidores. Las interacciones son iniciadas por el cliente, al momento en que se solicitan los recursos al servidor. Mediante el protocolo HTTP, el servidor recibe la petición, se encarga de buscar el recurso y lo devuelve utilizando el mismo protocolo. (Rouse, s.f.) (Ver Figura 8) Figura 8. Arquitectura Cliente/Servidor. 28 2.2.2. Características de las Aplicaciones Web  Compatibilidad multiplataforma: las aplicaciones web tienen un camino mucho más sencillo para la compatibilidad multiplataforma que las aplicaciones de software descargables. Varias tecnologías, incluyendo Java, Flash, ASP y AJAX, permiten un desarrollo efectivo de programas, soportando todos los sistemas operativos principales.  Actualización: las aplicaciones basadas en web están siempre actualizadas con la última versión disponible, sin requerir que el usuario tome acciones pro-activas, y sin la necesidad de llamar la atención del usuario o interferir con sus hábitos de trabajo, con el pretexto de que se van a iniciar nuevas descargas y procedimientos de instalación.  Acceso Inmediato: la mayoría de las aplicaciones basadas en web no necesitan ser descargadas, instaladas y configuradas.  Facilidad de prueba: no habrá más obstáculos para realizar pruebas sencillas y efectivas a las herramientas y aplicaciones desarrolladas, antes de realizar una operación que afecte la realidad; como, por ejemplo, cargar una tarjeta de crédito para pagar una compra.  Menor requerimiento de memoria: las aplicaciones basadas en web tienen menos demanda de memoria RAM, en el equipo del usuario final, en comparación con los programas instalados localmente. Al residir y correr en los servidores del proveedor, esas aplicaciones usan, en muchos casos, la memoria de las computadoras en las que ellas residen, dejando más espacio para correr múltiples aplicaciones en el equipo cliente, sin incurrir en frustrantes deterioros del rendimiento.  Datos online: con el desplazamiento de las aplicaciones locales, hacia aquellas basadas en la web, los datos que se creen también van a necesitar 29 experimentar profundos cambios; ya que estarán en constante movimiento dentro de la red, y al alcance de todo el mundo, incluso el de personas inescrupulosas.  Múltiples usuarios concurrentes: las aplicaciones basadas en web pueden ser utilizadas por múltiples usuarios en un mismo instante de tiempo. No hay ya necesidad de compartir pantallas o enviar instantáneas. Ahora múltiples usuarios pueden ver, e incluso editar, el mismo documento, de manera conjunta.  Los datos son más seguros: Si bien la ruptura de discos no va a desaparecer, es probable que los usuarios escuchen mucho menos del tema. A medida que las compañías se hagan cargo del almacenamiento de los datos del usuario, las granjas de almacenamiento de datos redundantes será la norma más que la excepción y los usuarios van a tener mucho menos riesgo de perder su información debido a una ruptura de disco impredecible o a un virus de la computadora. Las compañías que proveen aplicaciones basadas en web van a brindar amplios servicios de resguardo de datos, ya sea como una parte integral del servicio básico o como una opción paga.  Diferentes lenguajes para desarrollar: una vez que las aplicaciones han sido separadas de computadoras locales y sistemas operativos específicos, pueden ser escritas en prácticamente cualquier lenguaje de programación. 2.2.3. Tecnologías del lado del cliente Las tecnologías del lado del cliente son todos aquellos lenguajes, scripts o convenciones que son ejecutados en la máquina local del usuario, normalmente por el navegador web y no necesitan intervención alguna del servidor para cumplir sus funciones. 30 2.2.3.1. HTML HTML, traducido como “Lenguaje de Marcas de Hipertexto”, es un lenguaje de marcado diseñado para estructurar textos y presentarlos en forma de hipertexto, que es el formato estándar de las páginas web. (Eguiluz, s.f.). El lenguaje HTML es un estándar reconocido en todo el mundo y cuyas normas son definidas por la W3C, organización dedicada a la estandarización de casi todas las tecnologías ligadas a la web. HTML utiliza etiquetas o marcas, que consisten en breves instrucciones de comienzo y final, mediante las cuales se determina la forma en la que debe aparecer en el navegador, el texto, las imágenes y los demás elementos, en la pantalla del computador. Figura 9. Representación de un documento HTML como DOM. Estas etiquetas son organizadas por el navegador en forma de un árbol jerárquico a través del Modelo de Objetos del Documento (DOM, por sus siglas en inglés), que permite a los usuarios y desarrolladores el acceso a estas etiquetas o 31 estructuras con la finalidad de actualizar, agregar o eliminar contenido de ella. (Ver Figura 9) 2.2.3.2. Hojas de estilo en cascada Las hojas de estilo en cascada (CSS, por sus siglas en inglés) son un mecanismo utilizado para definir el aspecto y la presentación de documentos escritos en HTML, separando el contenido de la presentación. Este determina como deben ser estructurados, en un documento, los elementos a desplegarse en una pantalla, e incluso cómo debe ser interpretada la información, a través de cualquier dispositivo de lectura (W3C-a, 2011). En consecuencia, CSS puede mejorar la accesibilidad de un documento, así como puede proveer un formato similar entre dos o más documentos distintos. Todos los elementos HTML pueden ser considerados como cajas. Figura 10. Modelo de cajas. El término “modelo de cajas” se utiliza cuando se habla sobre el diseño y la disposición de los elementos. Este modelo es esencialmente una caja que se envuelve 32 alrededor de los elementos HTML, y se compone de: márgenes, bordes, relleno y contenido. El modelo de caja permite colocar un borde alrededor de elementos y situar los mismos en una posición que dependa de la ubicación de otros elementos diferentes. (Ver Figura 10) La apariencia final de un elemento puede ser especificada en diferentes lugares, lo cual hace a CSS una herramienta muy poderosa, pero puede agregar complejidad, a la hora de depurar el código. Los estilos relacionados con el documento pueden estar especificados en tres formas: en un archivo externo, en una definición al comienzo del documento o en un elemento específico dentro de una etiqueta del documento HTML. Entre las ventajas de utilizar CSS están:  Control centralizado de la presentación de un sitio web completo, con lo que se agiliza, de forma considerable, la actualización del mismo. CSS permite, a los desarrolladores web, controlar el estilo y el formato de múltiples páginas, al mismo tiempo. Cualquier cambio, en el estilo marcado para un elemento, afectará a todas las páginas vinculadas a esa CSS en las que aparezca el mismo.  Los navegadores permiten, a los usuarios, especificar su propia hoja de estilo local, con lo que aumenta considerablemente la accesibilidad. Por ejemplo, personas con deficiencias visuales pueden configurar su propia hoja de estilo, para aumentar el tamaño del texto o remarcar más los enlaces.  Una página puede disponer de diferentes hojas de estilo, según el dispositivo que la muestre o incluso a elección del usuario. Por ejemplo, para ser impresa, mostrada en un dispositivo móvil, o "leída" por un sintetizador de voz. 33  El documento HTML, en sí mismo, es sencillo de entender y conserva un reducido tamaño siempre y cuando, para su construcción, no se utilice estilo en línea. 2.2.3.3. Javascript JavaScript es un lenguaje de programación interpretado y ejecutado directamente por el navegador, con una sintaxis parecida a Java. Se utiliza, principalmente, para crear páginas web con efectos y eventos, en otras palabras, páginas web interactivas. Está basado en prototipos, es dinámico, imperativo, funcional y responde a paradigmas de programación orientado a objetos. Su principal objetivo es interactuar con los elementos del documento HTML, utilizando el Modelo de Objetos del Documento (DOM, por sus siglas en inglés), permitiendo así, al desarrollador, agregar funcionalidades extra en la página. 2.2.3.4. Jquery Es una librería o framework de JavaScript que está pensada para interactuar con los elementos de una página web, por medio del árbol DOM. Esta librería permite manejar eventos, desarrollar animaciones, y agregar interacción a las páginas web, con la tecnología AJAX. (Alvarez, 2009). 2.2.3.5. AJAX AJAX (Asynchronous JavaScript And XML, en inglés) es una técnica utilizada al momento de desarrollar aplicaciones web, que permite crear aplicaciones interactivas (RIA, por sus siglas en inglés). Dichas aplicaciones se ejecutan en segundo plano, en el navegador, manteniendo una comunicación asíncrona con el servidor; de manera tal que es posible realizar cambios sobre las páginas, sin 34 necesidad de recargarlas, mejorando así la usabilidad y la velocidad de estas aplicaciones. JavaScript es el lenguaje utilizado, por excelencia, para efectuar las funciones AJAX; mientras que el acceso a los datos se realiza mediante el objeto XMLHttpRequest, disponible en todos los navegadores actuales. (Fuentes, 2015) 2.2.3.6. JSON JSON (JavaScript Object Notation, por sus siglas en inglés) es un formato ligero de intercambio de datos, y un subconjunto de la notación literal de objetos de JavaScript. JSON nació como una alternativa a XML, y su fácil uso en Javascript ha generado un gran número de seguidores de esta alternativa. Una de las mayores ventajas que tiene el uso de JSON, es que puede ser leído por cualquier lenguaje de programación; por lo tanto, puede ser usado para el intercambio de información entre diferentes plataformas tecnológicas. (Ver Figura 11) Figura 11. Representación de un objeto JSON. 2.2.4. Tecnologías del lado del servidor Una tecnología del lado del servidor es aquella que se ejecuta en el servidor web, justo antes de que se envíe la página al cliente, a través de Internet. Las tareas que se ejecutan en el servidor pueden ser: accesos a bases de datos, conexiones en red, manejo de archivos, entre otras, y así crear la página final que verá el cliente. El 35 resultado final es siempre HTML, por lo que su compatibilidad con cualquier navegador es absoluta. 2.2.4.1. PHP PHP es un lenguaje interpretado del lado del servidor que se caracteriza por su potencia, versatilidad, robustez y modularidad. Los programas escritos en PHP son embebidos directamente en el código HTML, y ejecutados por el servidor web, a través de un intérprete, antes de transferir al cliente lo que ha solicitado, en forma de código HTML puro. Cuando un archivo PHP es solicitado al servidor web, el código PHP incluido en la página HTML es ejecutado en primer lugar en el servidor y el resultado de esta ejecución se inserta en la página, en lugar del código PHP y es enviada al navegador. Por otra parte Ratschiller & Gerken (2001), enumeran las principales funciones de PHP, las más importantes son:  Funciones de correo electrónico: se puede enviar un e-mail a una persona o lista de contactos, estableciendo parámetros como el correo de procedencia, asunto y persona a responder. Otras funciones, menos frecuentes, pero de indudable utilidad para gestionar correos electrónicos, son incluidas por defecto en su librería.  Gestión de Base de Datos: ofrece interfaces para el acceso a la mayoría de las bases de datos comerciales, tales como MySQL y PostgreSQL y utiliza conectores ODBC para comunicarse con las bases de datos alojadas en sistemas Microsoft Windows, como SQL Server en cualquiera de sus versiones.  Gestión de archivos: a partir de una amplia librería de funciones para esto, PHP permite crear, borrar, mover y modificar cualquier tipo de archivo. 36 También se puede transferir archivos por FTP a partir de sentencias en PHP, protocolo para el cual este lenguaje tiene previsto gran cantidad de funciones.  Funciones de propósito general: permite el tratamiento automatizado de imágenes y la creación de botones dinámicos, es decir en los que se utilice el mismo diseño y solo se cambie el texto. También permite el desarrollo de muchas otras funciones pensadas para Internet como: el tratamiento de cookies, accesos restringidos y comercio electrónico o funciones de propósito general como: funciones matemáticas, explotación de cadenas, de fechas, corrección ortográfica, comprensión de archivos. Ratschiller & Gerken (2001) señalan como principales características de PHP:  Velocidad: en el ambiente computacional no solo es importante la velocidad de ejecución, sino además se debe evitar el uso excesivo de los recursos del sistema. PHP se integra muy bien junto a otros softwares bajo ambiente UNIX cuando se configura como un módulo de Apache, dejándolo listo para ser utilizado.  Estabilidad: la velocidad no sirve de mucho si el sistema se cae cada cierta cantidad de ejecuciones. Ninguna aplicación es 100% libre de bugs, pero teniendo de respaldo una increíble comunidad de programadores y usuarios es mucho más fácil resolverlos. PHP utiliza su propio sistema de administración de recursos y dispone de un sofisticado método de manejo de variables, conformando un sistema robusto y estable.  Seguridad: el sistema debe proveer protección contra ataques externos, por lo cual PHP provee diferentes niveles de seguridad y estos pueden ser configurados desde el archivo de configuración. 37  Simplicidad: a los programadores, se les debe dar la facilidad de escribir código de calidad, en el menor tiempo posible. Usuarios con experiencia en C y C++ podrán utilizar PHP de manera rápida.  Conectividad: PHP dispone de una amplia gama de librerías y agregarle extensiones es muy fácil. Esto le permite a ser utilizado en muchas áreas diferentes, tales como encriptado de datos, gráficos, XML y otras. 2.2.4.1.1. Laravel Laravel es un framework open source de PHP, utilizado para el desarrollo de aplicaciones web. Fue creado por Taylor Otwell, con la finalidad de desarrollar aplicaciones de nivel "avanzado" de manera más fácil y rápida. Su filosofía es clara: el código debe ser lo más expresivo y elegante posible. (Rees & Laguna, 2013). Características de Laravel  Convención sobre configuración: Laravel impone restricciones sobre cómo estructurar sus aplicaciones web. Sorprendentemente, estas limitaciones hacen que sea más fácil la creación de las mismas.  Modularidad: Laravel se ha construido utilizando más de 20 librerías diferentes fuertemente integradas con el gestor de dependencias Composer. Adicionalmente, con este mismo gestor, se puede agregar cualquier tipo de librería que el equipo de desarrollo necesite, aunque no esté, por defecto, incluida en el framework.  Enrutamiento (routing): Laravel proporciona una extensa flexibilidad al momento de definir las rutas de la aplicación, inspirado en la filosofía de los micro-frameworks Sinatra y Silex. Además, durante el desarrollo, es posible adjuntar funciones de filtro que se ejecuten en rutas específicas. 38  Gestor de configuración: frecuentemente, la aplicación se ejecutará en diferentes entornos. Esto quiere decir que tanto la base de datos, como las credenciales y los dominios serán diferentes, si se ejecutan en el entorno local o en los servidores de producción. Laravel nos permite definir configuraciones separadas, para cada uno de los entornos, sin afectar el código de la aplicación.  Confeccionador de consultas y ORM: al instalarlo, Laravel incluye un constructor de consultas; que permite realizar consultas, a la base de datos, con una sintaxis PHP de métodos enlazados, en lugar de tener que escribir la sentencia SQL completa. Además, proporciona un mapeo de objeto- relacional (ORM, por sus siglas en inglés) llamado Eloquent, que permite definir modelos de datos compatibles con diferentes bases de datos, tales como: PostgreSQL, SQLite, MySql, MS SQL Server, entre otras.  Confeccionador esquema, migraciones y repoblaciones: inspirado por la filosofía Rails, las migraciones permiten definir un esquema de base de datos dentro de PHP, y mantener un registro de los cambios. Las repoblaciones (Seeding) permiten poblar las tablas seleccionadas de una base de datos, una vez realizada la migración, para, de esta forma, llenar las tablas con datos de pruebas.  Motor de plantillas: Laravel integra el motor de plantillas Blade, un lenguaje ligero con el cual se pueden crear diseños anidados, con bloques predefinidos, en los que el contenido se inserta dinámicamente dentro de las etiquetas HTML.  Email: con la clase Mail, que es un derivado de la librería SwiftMailer, Laravel ofrece una forma sencilla de enviar correos electrónicos, con contenido HTML y archivos adjuntos. 39  Autenticación: Laravel integra las herramientas necesarias para crear, en toda aplicación, un formulario de registro y autenticación e incluso envió de contraseñas, a usuarios que la hayan olvidado o perdido. Modelo Vista Controlador Según Romero & González (2012), el Modelo Vista Controlador, es un patrón de arquitectura de software que separa los datos de una aplicación, la interfaz de usuario, y la lógica de control en tres componentes distintos: el modelo, la vista y el controlador. La vista es la interfaz de usuario que muestra la información proveniente del modelo y que representa el dispositivo de entrada que se usa para modificarlo y finalmente, el controlador es lo que une a los dos componentes anteriores. Al interactuar con una aplicación desarrollada con Laravel, el navegador envía una petición al servidor web, y esta se resuelve con el motor de rutas de Laravel. El motor de rutas de Laravel recibe la solicitud, y la redirige al método o controlador apropiado para trabajar con esa URL. En algunos casos, el controlador enviara inmediatamente una vista, que no es más que una plantilla Blade convertida a HTML, o como sucede normalmente, para sitios dinámicos, el controlador interactúa con un modelo, devolviendo un objeto PHP que representa un elemento de la aplicación (como un usuario, una entrada de blog, entre otros). Después de invocar el modelo, el controlador renderiza el elemento del modelo junto a una plantilla Blade, y devuelve la página web completa al navegador del usuario. Laravel promueve la práctica de mantener bien separados los modelos, las vistas y los controladores, almacenando el código para cada uno de estos componentes como archivos aislados en directorios diferentes. (Ver Figura 12) 40 Figura 12. Modelo, Vista, Controlador en Laravel. 2.2.4.2. Bases de Datos Según De Miguel (2003) una base de datos se puede definir como: “un conjunto exhaustivo, no redundante de datos estructurados, organizados independientemente de su utilización y su implementación en máquina, accesibles en tiempo real y compartibles por usuarios concurrentes que tienen necesidad de información diferente y no predecible en el tiempo” Por otra parte, Chong, y otros (2010) definen una base de datos como un repositorio de datos estructurado, diseñado para almacenar datos de forma eficiente, cuya principal ventaja es que múltiples usuarios puedan acceder a ellas al mismo tiempo, de forma ordenada y oportuna. Un sistema manejador de bases de datos (SMBD, por sus siglas en inglés) es un conjunto de programas que conviven entre sí, con el fin de facilitar la creación, edición y mantenimiento a una base de datos. Se componen de un lenguaje de manipulación de datos (DML, por sus siglas en inglés), un lenguaje de definición de 41 datos (DDL, por sus siglas en inglés) y un lenguaje para realizar consultas, como SQL. (Chong, y otros, 2010) Funciones Principales:  Abstracción: los SMBD ahorran, a los usuarios, detalles acerca del almacenamiento físico de los datos. Da lo mismo si una base de datos ocupa uno o miles de archivos, este hecho es completamente irrelevante para el usuario final.  Independencia: la independencia de los datos consiste en la capacidad de modificar el esquema ya sea físico o lógico, de una base de datos, sin tener que realizar cambios en las aplicaciones que la usan.  Seguridad: la información almacenada en una base de datos puede llegar a tener un gran valor. Los SMBD garantizan que esta información se encuentre segura frente a usuarios malintencionados. Para ello, disponen de un complejo sistema de permisos y grupos de usuarios que permiten definir diversas categorías y jerarquías.  Integridad: Se trata de adoptar las medidas necesarias para garantizar la validez de los datos almacenados. Es decir, se trata de proteger los datos ante fallos de hardware, datos erróneos introducidos por usuarios, o cualquier otra circunstancia capaz de corromper la información almacenada.  Respaldo y recuperación. los SMBD ofrecen una forma eficiente de realizar copias de respaldo para la información almacenada en ellos, y de restaurar, a partir de estas copias, los datos que se hayan podido perder.  Control de la concurrencia. En la mayoría de entornos, lo habitual es que muchas personas accedan a una base de datos, bien para recuperar información, bien para almacenarla. Es frecuente que dichos accesos se 42 realicen de forma simultánea. Por tanto, un SMBD debe controlar este acceso concurrente a la información y evitar en graves inconsistencias. 2.2.4.2.1. MySQL MySQL es un sistema manejador de bases de datos relacional, multihilo y multiusuario; desarrollado, distribuido y mantenido por Oracle Corporation, desde el año 2009. Provee un esquema de licenciamiento dual, que permite descargar, modificar y usar gratuitamente MySQL, bajo una licencia GNU, para proyectos sin fines de lucro, mientras que si se utiliza para aplicaciones privadas, o con fines comerciales, requiere adquirir una licencia que permita su uso. Una base de datos relacional archiva los datos en tablas separadas y las relaciona entre sí, mediante claves e índices; esto permite mayor velocidad y flexibilidad al momento de realizar consultas, y su diseño multihilo le permite soportar una gran carga y de forma eficiente. La historia del MySQL se remonta a principio de los años 80, cuando Michel Widenius, un joven programador, realizaba aplicaciones complejas en lenguaje BASIC y al no encontrar un sistema de almacenamiento que resultara satisfactorio, pensó en construir uno propio. Desde aquellos tiempos, MySQL ha evolucionado significativamente. En la actualidad, es el sistema manejador de base de datos más usado en el mundo del software libre, debido a su gran rapidez y facilidad de uso. (Gilfillan, 2003) Una de las principales características de MySQL es el hecho de permitir el uso del sistema por múltiples usuarios, simultáneamente, y vía web; además de dar la posibilidad de ser usado con diferentes lenguajes de programación. (Gilfillan, 2003) MySQL es reconocido por integrar el motor no transaccional MyISAM, el cual permite la búsqueda de datos de forma muy rápida, en comparación con otros SMBD. 43 Normalmente, existe baja concurrencia en la escritura de datos para aplicaciones web, sin embargo, en lectura de datos, el entorno es intensivo; lo que hace a MyISAM ideal para este tipo de aplicaciones. (Gilfillan, 2003) 2.2.4.2.2. SQLServer Microsoft SQL Server es un sistema manejador de base de datos relacional, orientado a medianas y grandes empresas, y esta solo disponible para sistemas operativos Windows. Es propiedad de la empresa Microsoft, y utiliza TSQL (una implementación del lenguaje SQL) como lenguaje de consultas. (SQL Server 2014, s.f.) SQL Server proporciona servicios de recopilación, réplica, y análisis de datos. También, integra sistemas de procesamiento analítico (OLAP, por sus siglas en inglés). SQL Server proporciona una gran colección de herramientas gráficas y asistentes que guían, a los administradores de las bases de datos, en sus tareas diarias, tales como: establecer copias de seguridad, réplica de datos entre servidores y ajuste del rendimiento de una base de datos. (SQL Server 2014, s.f.). Muchos entornos de desarrollo soportan SQL Server, incluyendo Visual Studio de Microsoft y productos relacionados; en particular, los productos y servicios .NET. Entre las principales características de SQL Server, se encuentran:  Soporte OLAP y OLTP.  Interfaz gráfica de administración con asistentes.  Posibilidad de trabajar en modo cliente-servidor, en donde el SMBD provee al cliente de servicios de conexión, por medio de terminales.  Facilidad para administrar información desde otros servidores de datos. 44 2.2.5. Servicios Web El consorcio W3C define los servicios web como sistemas software, diseñados para soportar interacciones máquina a máquina, sobre una red. Los servicios web suelen ser una Interfaz de Programación de Aplicaciones (API, por sus siglas en inglés), que ejecutados en el sistema que los aloja y que pueden ser utilizados dentro de una red (principalmente Internet). La definición propuesta de los servicios web alberga tipos diferentes de sistemas, pero en la actualidad, el caso común de uso, se refiere a clientes y servidores que se comunican mediante mensajes JSON y siguen el estándar REST. 2.2.5.1. Servicios Web REST La transferencia de estado representacional (REST, por sus siglas en inglés) es un estilo de arquitectura de software para sistemas distribuidos en la web. El término fue introducido en la tesis doctoral de Roy Fielding en 2000, quien es uno de los principales autores de la especificación de HTTP. El objetivo que se persigue es la construcción de aplicaciones distribuidas e inspiradas en las características de la web, transmitiendo datos específicos de un domino sobre el protocolo HTTP, sin una capa adicional. Una transacción HTTP consta de cuatro métodos de acceso:  GET: para consultar y leer recurso.  POST: para crear recursos.  PUT: para editar recursos.  DELETE: para eliminar recursos. Estos métodos pueden ser comparados con operaciones SQL y otras analogías como puede verse en la Tabla 1. 45 Tabla 1. Comparación de los acciones HTTP. Acción HTTP SQL Entorno Windows Crear PUT Insert Pegar Leer GET Select Copiar Actualizar POST Update Actualizar Eliminar DELETE Delete Eliminar 46 CAPÍTULO III MARCO METODOLÓGICO. Una metodología de desarrollo de software se define como: “un conjunto de procedimientos, técnicas, herramientas, y un soporte documental que ayuda a los desarrolladores a producir nuevo software” (Piattini & De Miguel, 2001) Con una buena metodología, se pretende reducir costos y retrasos de proyectos, así como mejorar la calidad del software; por lo que es importante seleccionar aquella que pueda adaptarse a todos los requerimientos que exija el desarrollo. Igualmente, una metodología debe ejecutar las siguientes tareas:  Dividir un proyecto en etapas.  Gestionar las actividades que se llevan a cabo en cada etapa.  Establecer las restricciones que deban aplicarse  Determinar las técnicas y herramientas a emplear.  Controlar y gestionar el proyecto. Durante el desarrollo de esta investigación, se utilizó la metodología BPM:RAD (“Rapid Analysis & Design”) para el análisis, diseño y modelado de los procesos de negocio de Venamcham, partiendo desde un tratamiento netamente teórico. Como mencionan Laurentiis, y algunos otros autores (2011), con esta metodología, se busca determinar los procesos estratégicos, documentarlos, crear un mapa de procesos de toda la entidad y definir cualquier otra información que permitiese “entender la empresa”, bajo este nuevo punto de vista que es BPM, sin cometer uno de los principales errores al momento de iniciar un proyecto de este tipo; 47 que es empezar “con la diagramación, el modelado de cajas y líneas de conexión”, sin entender los procesos de negocio estratégicos de la empresa. En vista de que también es indispensable implementar un software que permita automatizar el proceso de inscripción de eventos; se utilizó Scrum como metodología ágil de desarrollo de software, para realizar la gestión de esta etapa. El resultado es un software realizado en menos tiempo y que se ajusta a las necesidades de los procesos de negocio de la organización. 3.1. BPM-RAD BPM-RAD - Rapid Analysis & Design es una metodología concreta y práctica, para el modelado y diseño de procesos orientados a la automatización con tecnologías BPM. Su enfoque y sus técnicas facilitan y estimula el trabajo en equipo con los expertos de negocio, los analistas y los arquitectos de procesos. (Laurentiis, y otros, 2011) Es una metodología versátil, independiente del software con el cual se automatizarán los procesos diseñados. Las siguientes son ventajas de aplicar BPM-RAD:  Entender y simplificar los procesos del negocio.  Modelar y diseñar los procesos en su totalidad, con recursos, servicios, datos, reglas de negocio e indicadores.  Diseñar procesos orientados a tecnologías BPM, independientemente del software que se implemente en dicho diseño.  Lograr una gestión del cambio más rápida y efectiva para el desarrollo de capacidades y conocimiento en gestión por procesos y tecnologías BPM en la organización. 48  Asegurar la calidad de los modelos y diseños. La Metodología BPM-RAD está compuesta por tres fases: 3.1.1. Análisis Lógico Se identifican y modelan, al detalle, los procesos de negocio que conforman el alcance del proyecto. Esto se realiza de manera lógica, es decir, no se modelan los aspectos físicos de los procesos, quien lo hace, cómo se hace, con que aplicaciones o dispositivos que se usaran. La idea es concentrarse únicamente en el “qué” y el “porqué”, obteniendo así la perspectiva esencial del negocio. 3.1.2. Diseño Preliminar Se obtiene el modelo de funcionamiento de los procesos, transformándolos desde la visión lógica (Fase 1) a la visión física (Fase 2), la cual plasma, en un documento o diagrama, el funcionamiento de los procesos, tomando en consideración las tecnologías de las que se disponga, la organización actual y futura, y la resolución de problemas y oportunidades de mejora. En esta fase, también se identifican los primeros servicios funcionales, con el fin de comenzar a visualizar cuáles son los servicios que sustentan y/o sustentarán a los procesos de negocio. Son funcionales porque aún no se determina de qué manera se van a implementar, si ya existen o no, y si habrá que desarrollarlos o contratarlos. Al finalizar esta fase, se analizará y se determinará la mejor estrategia de desarrollo e implantación de dichos servicios. 3.1.3. Diseño BPM Esta fase tiene como objetivo: diseñar cada uno de los procesos estudiados en las fases anteriores, considerando que dichos procesos serán automatizados con diferentes tecnologías. La meta es dejar preparado el diseño BPM de los procesos, 49 con todos los detalles necesarios para que el equipo de desarrollo pueda implementarlo de manera rápida y sencilla. 3.1.4. Sesiones RAD Las sesiones RAD son un método de trabajo para acelerar y asegurar la calidad de las fases de modelado y de diseño de procesos BPM. Las sesiones RAD se basan en reuniones, de corto periodo de tiempo, que buscan fomentar el trabajo en equipo; haciendo participes al personal del negocio, a los analistas de procesos y los analistas funcionales. (Laurentiis, y otros, 2011) Las sesiones RAD tienen la siguiente dinámica de trabajo en equipo:  Los usuarios proveen parte de su experiencia y conocimientos.  Un enfoque metodológico y una agenda proveen la estructura.  El moderador experto en el método (técnicas, herramientas y dinámica de grupos) guía al equipo de trabajo hacia el logro de los objetivos.  La dinámica de grupo estimula la creatividad, con un “feedback” constante.  Todos los integrantes de las sesiones aportan conocimientos e ideas.  El analista de procesos recoge, simultáneamente, los modelos, los requerimientos y los diseños, en la herramienta de modelado. 3.2. Scrum Scrum es un marco de trabajo (framework) utilizado para gestionar y desarrollar software, que data desde principios de los años 90. Es un proceso iterativo e incremental, utilizado comúnmente en entornos relacionados con el desarrollo ágil de software, donde se necesita obtener resultados rápidamente, los requisitos son 50 cambiantes y la innovación, la competitividad, la flexibilidad y la productividad son fundamentales. Como se puede observar en la Figura 13, el marco de trabajo Scrum está compuesto por equipos, roles, eventos, artefactos y reglas asociadas. Cada componente dentro del marco de trabajo sirve a un propósito específico y es esencial para su uso exitoso. (Schwaber & Sutherland, 2013) Figura 13. Infografía de la Metodología Scrum. Con Scrum, la idea principal es: “comenzar a trabajar desde el primer momento”, para que el cliente distinga los avances y quede satisfecho con el proyecto en ejecución (Rubin, 2012) 3.2.1. Características de Scrum Una iteración (Sprint) es un período fijo de tiempo, de una a cuatro semanas, con preferencia hacia los intervalos más cortos. En cada uno de ellos, el equipo, construirá y entregará un incremento del producto. Cada incremento es un 51 subconjunto reconocible, operativo y visiblemente mejorado del producto, que alcanza criterios de aceptación, y está construido con un nivel de calidad suficientemente alto como para ser presentado ante el cliente. Cada iteración tiene un diagrama de quemado (Burn down chart), que es un gráfico que muestra la velocidad a la que se van completando los objetivos o requisitos. Permite extrapolar si el equipo podrá completar el trabajo en el tiempo estimado (Ver Figura 14). Figura 14. Ejemplo de un Burn Down Chart. Scrum es un proceso de equipo, e incluye tres roles:  El dueño del producto (Product Owner), es quien tiene la responsabilidad de decidir qué trabajo deberá ser realizado, es el único responsable de delinear el producto; con la más alta calidad posible, en la menor cantidad de tiempo. Esto se logra gestionando el flujo de trabajo hacia el equipo, seleccionando y refinando ítems de la pila de producto (Product Backlog). 52  El facilitador (Scrum Master) actúa como líder, ayudando al equipo y a la organización a utilizar de mejor manera el método. Debe garantizar que los participantes del proyecto sigan las reglas, los valores y principios ágiles del proceso. También debe eliminar los impedimentos que el equipo tiene en su camino para conseguir el objetivo de cada iteración y aislar al mismo de las interrupciones externas durante la ejecución de la iteración.  El equipo de desarrollo (Development Team) está compuesto por profesionales que hacen el trabajo necesario para poder entregar el incremento del producto. Se auto-organizan para realizar su trabajo, y deben estar disponibles tiempo completo para el proyecto. Scrum incluye tres artefactos esenciales:  La pila de producto (Product Backlog), es una lista ordenada de ideas o requerimientos para el producto, mantenida en el orden en que se espera llevarlas a cabo. Es la única fuente posible de requerimientos. Esto significa que todo el trabajo que realiza el equipo de desarrollo proviene del ella. Cada una de las tareas que se incluyen en la pila de producto, incluye una descripción, una estimación y un valor.  La pila de iteración (Sprint Backlog) es la lista de ítems refinados de la pila de producto, que, han sido elegidos y que serán desarrollados en la iteración actual. Refleja o pronostica qué trabajo puede ser completado en el tiempo que dura la iteración.  El incremento de producto (Product Increment) es el resultado de cada iteración, una versión integrada del producto, con en un nivel suficientemente alto de calidad para ser mostrado al cliente. 53 CAPÍTULO IV MARCO APLICATIVO. En este capítulo, se describe el marco aplicativo del presente Trabajo Especial de Grado. Se explica, paso a paso, cómo se llevó a la práctica el conjunto de conceptos establecidos en los capítulos I y II, para ayudar a lograr los objetivos planteados en esta investigación. Para el análisis y diseño de procesos, se aplicó la metodología BPM-RAD. Para implementar la aplicación web, que permitiría automatizar el proceso de inscripción de eventos de Venamcham, se aplicó SCRUM como metodología ágil de desarrollo. A continuación, siguiendo el ciclo de vida de BPM, se detallan cada una de las fases, y sus entregables: Tabla 2. Fases y entregables del Trabajo Especial de Grado. Fase 1 – Análisis de proceso Objetivos: Recolectar toda la información importante, concerniente a los procesos de negocios de la institución cliente. Razón Fundamental: Es necesario definir, de manera clara, el alcance del proyecto, e identificar funcionalidades clave para el futuro sistema. Artefactos:  Descripción del Proceso  Identificación de Roles y Tareas  Documento de Análisis de Requerimientos de Procesos. Fase 2 – Diseño de procesos Objetivos: Realizar el modelo del proceso, en notación BPMN. Razón Fundamental: El principal objetivo de BPMN es proporcionar una notación estándar que sea fácilmente legible y entendible, para todos los involucrados e interesados del negocio. 54 Tabla 3. Fases y entregables del Trabajo Especial de Grado. (Continuación) Fase 2 – Diseño de procesos Artefactos: Modelos de los procesos en Notación BPMN Fase 3 – Implementación Objetivos: Realizar la implementación del proceso, utilizando las tecnologías acordadas. Razón Fundamental: Se debe desarrollar y definir el código apropiado, y realizar todas las integraciones necesarias, para la correcta automatización del proceso. Artefactos:  Aplicación web. Fase 4 Pruebas, monitoreo y optimización Objetivos: Ejecutar el sistema en un ambiente controlado, y realizar las pruebas necesarias para garantizar su correcto funcionamiento. Razón Fundamental: Es necesario verificar que el sistema esté funcionando como fue planificado y que no existen, en él, errores funcionales. Artefactos:  Documento de plan de Pruebas y encuestas de aceptación. 4.1. Fase 1 – Análisis del proceso 4.1.1. Descripción del Proceso El proceso de inscripción de eventos, en el transcurso de su desarrollo, consta de 3 etapas claves. A continuación, se describirá cada una de ellas: 55 Inscripción en el Evento Esta etapa inicia cuando la Gerencia de Logística y Eventos y sus integrantes crean el evento en la aplicación SalesLogix CRM (Ver Figura 15), y proceden a enviar las invitaciones manualmente, vía correo electrónico, y mediante una lista de correo. Figura 15. Creación de un nuevo evento en SalesLogix CRM. El correo contiene un material publicitario (Ver Anexo 2) y un archivo adjunto en formato Microsoft Excel, que representa a una planilla de inscripción para un evento determinado (Ver Anexo 3). Esta planilla debe ser llenada por un representante autorizado de la empresa, y devuelta al departamento de eventos de Venamcham. 56 Verificación de la Inscripción Después que los usuarios han enviado la planilla de inscripción, los integrantes de la Gerencia de Logística y Eventos verifican que la información enviada a través de la misma sea correcta, y proceden a guardar en el CRM SalesLogix la información de los ejecutivos que han confirmado su participación en el evento. (Ver Figura 16) Figura 16. Captura de pantalla. Listado de los ejecutivos inscritos en el evento. Validación de Ingreso al Evento El día del evento, el listado de los ejecutivos participantes es exportado en formato Microsoft Excel, y trasladado al sitio donde se efectuara el evento. El personal de protocolo de Venamcham debe realizar, de forma manual, un proceso de validación a cada uno de los asistentes. 57 Una vez finalizado el evento, la Gerencia de Logística y Eventos y sus integrantes deben actualizar, en la aplicación SalesLogix CRM, el estatus de cada participante; con el objetivo de emitir los reportes de cierre del evento. (Ver Figura 17) Figura 17. Captura de pantalla. Relación de Cierre. 58 4.1.2. Roles y Tareas de Usuarios Tabla 4. Roles y tareas del proceso de inscripción de eventos. Rol Funciones y tareas Usuario/Cliente Recibir la invitación, vía correo electrónico. Completar la planilla de inscripción. Enviar la planilla de inscripción, con la información pertinente. Recibir confirmación/rechazo de inscripción. Presentar datos personales, en la entrada del evento. Analista de la Gerencia de Logística y Eventos. Enviar las invitaciones, vía correo electrónico. Validar la información de la planilla recibida. Actualizar, en el CRM, la información de la planilla. Inscribir a los usuarios, en el evento. Enviar confirmación/rechazo de inscripción. Confirmar la entrada del usuario al evento. Generar reporte de cierre. Después de haber comprendido el proceso, establecido los roles y las tareas, se procedió a completar el documento de análisis de requerimiento de procesos (Ver Anexos 4, 5 y 6); de acuerdo a los requerimientos funcionales y no funcionales establecidos por la Gerencia de Logística y Eventos de Venamcham. 4.2. Fase 2 - Diseño del proceso Bizagi Modeler fue el software utilizado para realizar el modelo del proceso. En las figuras 19, 20 y 21, se observa el modelo del proceso de inscripción de eventos, donde intervienen los diferentes actores, y se encuentran elementos de notación BPMN, actividades automáticas e interactivas, eventos, puertas de enlaces y flujos. 59 Figura 18. Modelo en BPMN del proceso de inscripción. 60 Figura 19. Modelo en BPMN del proceso de validación de inscripción. 61 Figura 20. Modelo en BPMN del proceso de ingreso al evento. 62 Figura 21. Modelo en BPMN del Subproceso: Consultar RIF Figura 22. Modelo en BPMN del Subproceso: Verificar solicitud 63 4.3. Fase 3 - Implementación Esta fase consiste en construir el sistema, con las especificaciones obtenidas en las fases anteriores. Para tener mejor control sobre los avances del desarrollo, se utilizó el marco de trabajo Scrum. Este es un proceso iterativo e incremental, utilizado comúnmente, en entornos relacionados con el desarrollo ágil de software. Para poder utilizar Scrum de manera correcta, se deben establecer los roles y características requeridos por la metodología. Ellos se definen a continuación: El dueño del producto (Product Owner), quien tiene la responsabilidad de decidir qué trabajo será realizado; en este caso particular, está representado por Tony Alberto Castillo, Jefe de Proyectos y Aplicaciones, en Venamcham. Es el encargado de dirigir el proyecto, y establecer comunicación directa con la Gerencia de Logística y Eventos de la empresa. El facilitador (Scrum Master), que actúa como líder, ayudando al equipo y a la organización a hacer el mejor uso de Scrum; en este caso particular, está representado por el Msc. Wilfredo Rangel. Los miembros del equipo de desarrollo (Development Team); en este caso particular, están representados por el Br. Jose A. Bianco y el Br. Fernando R. Gómez. Se planificaron 8 iteraciones (Sprints), con duración de 1 semana por iteración. Al final de cada una, al dueño del producto (Product Owner), se le presentó el incremento de producto (Product Increment); quien lo revisó, para otorgarle su aval. 4.3.1. Perfiles de Usuarios Siguiendo los roles establecidos en la Fase 1, se pasó a conformar los perfiles de los usuarios del sistema. Cliente: Este usuario podrá visualizar las páginas informativas del sitio web, y realizar la inscripción, mediante el formulario pertinente. 64 Analista: Este usuario deberá usar sus credenciales para ingresar al panel de control del sistema y adicionalmente podrá aprobar o rechazar inscripciones, así como ver o imprimir reportes relacionados a un evento determinado. Administrador: Este usuario deberá usar sus credenciales para ingresar al panel de control del sistema y adicionalmente podrá aprobar o rechazar inscripciones, así como ver o imprimir reportes relacionados a un evento determinado y gestionar usuarios. En la Tabla 5 se resume las principales actividades que puede realizar cada tipo de usuario. Tabla 5. Perfiles de Usuario del Sistema Actividades Tipo de usuario A d m in is tr a d o r A n a li s ta C li e n te Visualizar las páginas informativas del sitio Web. X X X Leer y descargar documentos digitalizados, en la sección de ayuda. X X X Generar inscripción a un evento. X X X Solicitar ayuda, a través de la sección de contacto. X X X Ingresar al panel de control del sistema. X X 65 Tabla 6. Perfiles de Usuario del Sistema (Continuación) Actividades Tipo de usuario A d m in is tr a d o r A n a li s ta C li e n te Verificar solicitudes activas. X X Aprobar solicitudes. X X Rechazar solicitudes. X X Auditar solicitudes aprobadas o rechazadas. X X Ver reportes de contactos inscritos. X X Ver o imprimir reportes de asistencia. X X Crear usuarios. X Deshabilitar usuarios. X 4.3.2. Aplicación de Scrum Product Backlog A partir del levantamiento de la información y la solución propuesta, en la Tabla 7 se muestran las historias de usuario, requerimientos y bugs relevantes del sistema de inscripción de eventos Venamcham. Estas historias podrán ser seleccionadas para su implementación en cualquier iteración, dependiendo de la carga de trabajo actual y los puntos de valor. 66 Tabla 7. Product Backlog Ítem Puntos Nombre 1 5pts Instalación y configuración del ambiente de ejecución 2 8pts Modelo de datos del sistema 3 10pts Vista del formulario de inscripción 4 3pts Hojas de estilos del formulario de inscripción 5 20pts Creación de la conexión con SQLServer 6 10pts API del sistema para el envío y recepción de datos del formulario 7 5pts Vista de ingreso al sistema 8 10pts Controlador principal del formulario 9 5pts Correcciones de comportamiento del formulario de inscripción 10 1pts Validación de los campos del formulario 11 1pts Creación de las plantillas de correo 12 1pts Controladores de autenticación de usuarios 13 5pts Controlador para generar código QR de ingreso 14 1pts Cambios en el CSS de la vista del formulario 15 6pts Integración a nivel de base de datos con el CRM SalesLogix 16 3pts Implementación de la tabla de descuentos 67 Tabla 8. Product Backlog (Continuación) Ítem Puntos Nombre 17 10pts Vista de solicitudes activas 18 10pts Vista de revisión de solicitud 19 15pts Implementación de funciones de aprobación y rechazo de solicitud de inscripción 20 5pts Vista de solicitudes aprobadas 21 5pts Controlador de solicitudes aprobadas 22 5pts Vista de solicitudes rechazadas 23 5pts Controlador de solicitudes aprobadas 24 5pts Vista de contactos que realizaron la inscripción 25 5pts Controlador de contactos que realizaron la inscripción 26 5pts Vista de verificación del código QR 27 5pts Controlador de verificación del código QR 28 5pts Vista de control de asistencia 29 5pts Controlador de control de asistencia 30 7pts Búsqueda por RIF 31 15pts Integración Mercado Pago 32 25pts Pruebas de Software 68 Iteración 1 Meta de la iteración: configurar el ambiente de ejecución. Planificación de la iteración: las actividades resaltantes, realizadas en esta iteración, fueron: instalación y configuración del ambiente de ejecución, diseño del modelo de datos del sistema, migración del modelo de datos, al ORM de Laravel, y la creación del formulario de inscripción. Tabla 9. Revisión de la iteración 1 Revisión de la iteración Organización: Cámara Venezolana-Americana de Comercio e Industria Fecha: 03-08-2015 Proyecto: Automatización de inscripción de eventos Items: 4 Valoración: 26pts Tiempo Estimado: 20hrs Tiempo de Ejecución: 22hrs Iteración 1 Actividades Planificadas Nro. Actividades Estado 1 Instalación y configuración del ambiente de ejecución Completada 2 Modelo de datos del sistema Completada 3 Vista del formulario de inscripción Completada 4 Hojas de estilo del formulario de inscripción Completada 69 Anexos de la iteración 1 Figura 23. Modelo de datos del sistema. 70 Iteración 2 Meta de la iteración: crear el API para la recepción y envió de datos del formulario de inscripción. Planificación de la iteración: las actividades resaltantes, realizadas en esta iteración, fueron: creación de la clase que permitirá conexión con SQLServer, diseño del API para la recepción y envío de los datos del formulario, y creación de vistas de ingreso al sistema. Tabla 10. Revisión de la iteración 2 Revisión de la Iteración Organización: Cámara Venezolana-Americana de Comercio e Industria Fecha: 10-08- 2015 Proyecto: Automatización de inscripción de eventos Items: 5 Puntos: 50pts Tiempo Estimado: 35hrs Tiempo Ejecutado: 31hrs Iteración 2 Actividades Planificadas Nro. Actividades Estado 1 Creación de la conexión con SQLServer Completada 2 API del sistema Completada 3 Vista de ingreso al sistema Completada 4 Controlador principal del formulario Completada 5 Correcciones de comportamiento del formulario de inscripción Completada 71 Anexos de la iteración 2 Figura 24. Vista del formulario de inscripción de eventos. 72 Iteración 3 Meta de la iteración: generar los correos de aceptación, y realizar la integración con el CRM SalesLogix. Planificación de la iteración: las actividades resaltantes, realizadas en esta iteración, fueron: desarrollo de los controladores de autenticación de usuarios, generación de los códigos QR de ingreso al evento, creación de las plantillas de correo, y validación de campos de diferentes formularios. Tabla 11. Revisión de la iteración 3 Revisión del iteración Organización: Cámara Venezolana-Americana de Comercio e Industria Fecha: 17-08-2015 Proyecto: Automatización de inscripción de eventos Items: 6 Puntos: 15pts Horas Planificadas: 22hrs Horas Ejecutadas: 28hrs Iteración 3 Actividades Planificadas Nro. Actividades Estado 1 Validación de campos del formulario Completada 2 Creación de las plantillas de correo Completada 3 Controladores de autenticación de usuario Completada 4 Controlador para generar el código de QR de ingreso Completada 5 Cambios en el CSS de la vista del formulario Completada 6 Integración con el CRM SalesLogix Completada 73 Anexos de la iteración 3 Figura 25. Modelo del correo electrónico que será enviado al confirmar la inscripción. 74 Iteración 4 Meta de la iteración: construcción del panel de administración del sistema. Planificación de la iteración: las actividades resaltantes, realizadas en esta iteración, fueron: implementación del cálculo de los descuentos por volumen de participantes, construcción de la primera sección del panel de administración, correspondiente a la vista de verificación de solicitudes. Tabla 12. Revisión de la iteración 4 Revisión del iteración Organización: Cámara Venezolana-Americana de Comercio e Industria Fecha: 24-08- 2015 Proyecto: Automatización de inscripción de eventos Items: 4 Puntos: 38pts Horas Planificadas: 37hrs Horas Ejecutadas: 41hrs Iteración 4 Actividades Planificadas Nro. Actividades Estado 1 Implementación de descuentos Completada 2 Vista de solicitudes activas Completada 3 Vista de revisión de solicitud Completada 4 Implementación de funciones de aprobación y rechazo de solicitud Completada 75 Anexos de la iteración 4 Figura 26. Revisión de solicitud 76 Iteración 5 Meta de la iteración: implementación de reportes. Planificación de la iteración: la actividad resaltante, realizada en esta iteración, fue: implementar las vistas y controladores de los reportes de esta aplicación. Tabla 13. Revisión de la iteración 5 Revisión de la iteración Organización: Cámara Venezolana-Americana de Comercio e Industria Fecha: 31-09- 2015 Proyecto: Automatización de inscripción de eventos Items: 6 Puntos: 25pts Horas Planificadas: 20hrs Horas Ejecutadas: 17hrs Iteración 5 Actividades Planificadas Nro. Actividades Estado 1 Vista para reporte de solicitudes aprobadas Completada 2 Controlador para reporte de solicitudes aprobadas Completada 3 Vista para reporte de solicitudes rechazadas Completada 4 Controlador para reporte de solicitudes rechazadas Completada 5 Vista para reporte de solicitudes contactos inscritos Completada 6 Controlador para reporte de solicitudes contactos inscritos Completada 77 Anexos de la iteración 5 Figura 27. Panel de control del sistema – Contactos que realizaron la inscripción. 78 Iteración 6 Meta de la iteración: implementar la verificación con el código QR. Planificación de la Iteración: la actividad resaltante, realizada en esta iteración, fue: desarrollo de la función de acceso al evento, para los ejecutivos de Venamcham. Tabla 14. Revisión de la iteración 6 Revisión de la iteración Organización: Cámara Venezolana-Americana de Comercio e Industria Fecha: 7-09- 2015 Proyecto: Automatización de inscripción de eventos Items: 4 Puntos: 25pts Horas Planificadas: 25hrs Horas Ejecutadas: 32hrs Iteración 6 Actividades Planificadas Nro. Actividades Estado 1 Vista de verificación del código QR Completada 2 Controlador de verificación del código QR Completada 3 Vista reporte de control de asistencia Completada 4 Controlador para reporte de control de asistencia Completada 79 Anexos de la iteración 6 Figura 28. Verificación de inscripción de eventos. 80 Iteración 7 Meta de la iteración: implementación de búsqueda por RIF. Planificación de la iteración: la actividad resaltante, realizadas en esta iteración, fue: desarrollar la vista y el controlador que permitirá ejecutar la búsqueda por RIF, permitiendo mejor acceso al formulario de inscripción. Tabla 15. Revisión de la iteración 7 Revisión de la iteración Organización: Cámara Venezolana-Americana de Comercio e Industria Fecha: 14-09- 2015 Proyecto: Automatización de inscripción de eventos Items: 1 Puntos: 7pts Horas Planificadas: 5hrs Horas Ejecutadas: 3hrs Iteración 7 Actividades Planificadas Nro. Actividades Estado 1 Búsqueda por RIF Completada 81 Anexos de la iteración 7 Figura 29. Búsqueda por RIF. 82 Iteración 8 Meta de la iteración: implementar MercadoPago como forma de pago y realizar pruebas, detección y corrección de errores. Planificación de la iteración: las actividades resaltantes, realizadas en esta iteración, fueron: pruebas de software y resolución de los errores encontrados y adicionalmente la integración de la librería de Mercado Pago en la aplicación. Tabla 16. Revisión de la iteración 8 Revisión de la iteración Organización: Cámara Venezolana-Americana de Comercio e Industria Fecha: 21-09-2015 Proyecto: Automatización de inscripción de eventos Items: 2 Puntos: 8pts Horas Planificadas: 40hrs Horas Ejecutadas: 45hrs Iteración 8 Actividades Planificadas Nro. Actividades Estado 1 Integración Mercado Pago Completada 2 Pruebas de Software Completada 83 Anexos del iteración 8 Figura 30. Integración Mercado Pago. 4.4. Fase 4 - Pruebas, monitoreo y optimización Las pruebas se realizaron durante todo el proceso de desarrollo, siguiendo la metodología Scrum, que establece, de forma clara, que cada incremento de producto debe estar completamente terminado y operativo, en condiciones de ser entregada al cliente, por lo que no debe presentar falla alguna. Una vez terminada la aplicación, se realizaron pruebas funcionales bajo el concepto de simulaciones controladas, con la finalidad de comprobar el correcto funcionamiento de la aplicación, tratando de detectar algún comportamiento inesperado. En estas pruebas, tanto el dueño del producto (Product Owner) como el facilitador (Scrum Master) sugirieron cambios que fueron ejecutados inmediatamente. 84 Adicionalmente, se realizó una prueba de aceptación, en la que se utilizó una encuesta de valoración (Ver Tabla 17) que fue realizada de manera individual por todos los integrantes de la Gerencia de Logística y Eventos de Venamcham. Tabla 17 – Modelo de encuesta de valoración Encuesta de Valoración Organización: Cámara Venezolana-Americana de Comercio e Industria Fecha: 25-09-2015 Proyecto: Automatización de inscripción de eventos Instrucciones: marca con una x la opción que mejor refleje tu opinión acerca del Sistema de Automatización de Eventos. Pregunta Si No 1. ¿Cree usted que el sistema de automatización de eventos es fácil de usar? 2. ¿Cree usted que la información se presenta de manera clara y entendible? 3. ¿Cree usted que la interfaz es intuitiva? 4. ¿Cree usted que el software responde adecuadamente a las funciones solicitadas por el (los) usuario(s)? 5. ¿Cree usted que el sistema mejorara el proceso inscripción de eventos de Venancham? A continuación, en la Figura 31, se pueden observar los resultados de la aplicación de esta prueba. 85 Figura 31. Resultados encuesta de valoración Como resultado de la aplicación de esta prueba de aceptación, es posible determinar que, de manera general, el sistema de inscripción de eventos posee un alto nivel de aceptación por parte de sus usuarios; cumpliendo con las necesidades y requerimientos del cliente, proporcionando un sistema usable y con altos estándares de calidad. 97% 90% 95% 92% 88% 0% 20% 40% 60% 80% 100% 1 2 3 4 5 Resultados de la prueba de aceptación 86 CONCLUSIONES Y RECOMENDACIONES La Cámara Venezolano - Americana de Comercio e Industria (Venamcham), tiene como principal función en nuestro país, la formación de liderazgos responsables en el seno empresarial a través de la realización de eventos y talleres, a todos sus asociados. El proceso de inscripción para estos eventos y talleres se realizaba de forma manual, convirtiéndolo en un proceso extremadamente complejo e ineficiente. Al inicio de este Trabajo Especial de Grado se planteó como objetivo “Desarrollar un sistema de información que permita automatizar el proceso de inscripción de eventos de la Cámara Venezolano - Americana de Comercio e Industria”, el cual se logró de manera satisfactoria. El uso de la metodología BPM-RAD permitió obtener información importante sobre los procesos de negocio de la organización, la cual resultó indispensable para cubrir las fases iniciales del ciclo de vida BPM, de manera rápida y sencilla. El empleo de Scrum como metodología ágil de desarrollo, permitió implementar el software en un periodo de tiempo muy corto, alcanzando altos estándares de calidad. Así mismo, posibilitó ahorrar tiempo en la fase de pruebas, puesto que en cada iteración, se generaba un incremento del producto terminado y operativo. La selección adecuada de las tecnologías y el diseño de la aplicación en base a servicios, agilizó y simplificó el proceso de implementación. Adicionalmente ayudó a definir convenciones para realizar futuras ampliaciones del sistema o la migración a un motor de procesos de negocio. (BPMS, por sus siglas en inglés) Finalmente, se logró reducir el tiempo que tarda el proceso de inscripción de eventos de Venamcham, en aproximadamente 73%, pasando de 75 a 20 minutos por inscripción. 87 Una vez culminado el Trabajo Especial de Grado, y establecidas las conclusiones, se sugiere:  Implementar el proceso de inscripción de eventos de Venamcham utilizando un motor de procesos negocios (BPMS, por sus siglas en inglés), que permita orquestar el mismo, de manera óptima, pues como dicen Laurentiis y otros autores (2011), el no hacerlo “sería tan poco efectivo como llevar la contabilidad de una entidad a mano o con la ayuda de una hoja de cálculo, en vez de llevarla mediante una aplicación específica para este fin”. 88 BIBLIOGRAFÍA Alvarez, M. A. (25 de 03 de 2009). Manual de jQuery. Recuperado el 28 de 06 de 2015, de http://www.desarrolloweb.com/manuales/manual-jquery.html Barros, O. (1994). Reingeniería de Procesos de Negocios. Chile: Dolme. Bose, R. (2003). Customer relationship management: key components for IT success. (Vol. 102). Industrial Managemente & Data Systems. Chen, I., & Popovich, K. (2003). Understanding customer relationship management (CRM): People, process and technology. Business Process Management Journal. Chong, R., Danubianu, M., Iyer, A., Nandan, C., Nonvinkere, M., Perniu, L., & Sharma, N. (2010). Database Fundamentals. db2university.com. Cobo, A., Gomez, P., Perez, D., & Rocha, R. (2005). Php y Mysql. Diaz de Santos. CRMAgil. (2015). CRMAgil-a. Obtenido de Software Infor CRM: http://crmagil.com/softwaredecrm_saleslogix/ Davenport, T. (1993). Process Innovation. Harvard Business School Press. De Goyeneche, A. (2001). CRM. Una estrategia de negocios centrada en el cliente. Economía & Administración, 72-74. Definición Mx. (s.f.). Recuperado el 07 de 09 de 2015, de Definición de Proceso: http://definicion.mx/proceso/ DiplomadosOnline-a. (s.f.). Obtenido de http://www.diplomadosOnline.com DiplomadosOnline-b. (s.f.). Obtenido de http://diplomadosonline.com 89 Eguiluz, J. (s.f.). Introducción a XHTML. Recuperado el 15 de 06 de 2015, de https://librosweb.es/libro/xhtml/ Fuentes, J. M. (30 de 06 de 2015). Manual de AJAX. Obtenido de http://www.uco.es/~lr1maalm/manualdeajax.pdf Garimella, K., Lees, M., & Williams, B. (2008). Introducción a BPM Para Dummies. Software AG. Giandini, R., Perez, G., & Pons, C. (2010). Un lenguaje de Transformación específico para Modelos. (U. d. Plata, Ed.) Recuperado el 16 de 08 de 2015, de http://imgbiblio.vaneduc.edu.ar/fulltext/files/TC104933.pdf Gilfillan, I. (2003). La Biblia de MySQL. Anaya Multimedia. Hammer, M. (1990). Re-engineering Work: Don’t Automate, Obliterate. Harvard Business Review. Kendall, K., & Kendall, J. (2005). Análisis y diseño de sistemas. Pearson. Laudon, K., & Laudon, J. (2012). Sistemas de Informacion Gerencial. Pearson. Laurentiis, R. d., Alcalá Ortiz, M., Herranz, J. L., Kemsley, S., Makhfi, P., Marqués, J., . . . Trilles, P. (2011). El Libro del BPM 2011. Madrid: Club BPM. Ould, M. (1995). Business Processes: Modelling and Analysis for Re-Engineering and Improvement. Wiley. Piattini, V., & De Miguel, C. (2001). Metodología para el diseño y desarrollo de software. Uruguay: Ra-ma. Ratschiller, T., & Gerken, T. (2001). Creacion de Aplicaciones Web Con PHP 4. Prentice Hall. Rees, D., & Laguna, A. (2013). Desarrollo de la aplicaciones web con la version 4 del framework de laravel para principiantes. Leanpub. 90 Romero, Y., & González, Y. (01 de 2012). revistatelematica.cujae.edu.cu. Obtenido de http://revistatelematica.cujae.edu.cu/index.php/tele/article/viewFile/15/10 Rouse, M. (s.f.). Client/Server model. Recuperado el 16 de 6 de 2015, de http://searchnetworking.techtarget.com/definition/client-server Rubin, K. (2012). Essential Scrum: A Practical Guide to the Most Popular Agile Process. Addison-Wesley. Rummler, G., & Brache, A. (1995). Improving Performance. San Francisco: Jossey- Bass. Schwaber, K., & Sutherland, J. (2013). La Guía Definitiva de Scrum: Las Reglas del Juego . Shklar, L., & Rosen, R. (2003). Web Application Architecture: Principles, Protocols, and Practices. John Wiley & Sons. Smith, A. (1776). La riqueza de las naciones. Londres: W. Strahan & T. Cadell. Smith, H., & Fingar, P. (2006). Business Process Management: The Third Wave . Meghan Kiffer Pr. SQL Server 2014. (s.f.). Recuperado el 20 de 06 de 2015, de http://www.microsoft.com/es-es/server-cloud/products/sql- server/Overview.aspx Venamcham-a. (05 de 02 de 2015). Recuperado el 10 de 06 de 2015, de http://www.venamcham.org/ W3C-a. (19 de 11 de 2011). Recuperado el 18 de 6 de 2015, de http://www.w3.org/community/webed/wiki/CSS/Training/What_is_CSS ANEXO 1 Poster descriptivo de los elementos BPMN ANEXO 2 Material publicitario de los eventos de Venamcham ANEXO 3 Formato para la inscripción de eventos de Venamcham ANEXO 4 Documento de Análisis de requerimientos de procesos. Proceso: Inscripción de eventos Tabla 18. DARP – Proceso de inscripción de eventos Tabla 19. DARP – Proceso de inscripción de eventos - Actividad 1 Tabla 20. DARP – Proceso de inscripción de eventos - Actividad 2 Tabla 21. DARP – Proceso de inscripción de eventos - Actividad 3 Tabla 22. DARP – Proceso de inscripción de eventos - Actividad 3 - Formulario 1 Tabla 23. DARP – Proceso de inscripción de eventos - Actividad 4 Tabla 24. DARP – Proceso de inscripción de eventos - Actividad 4 - Consulta 1 Tabla 25. DARP – Proceso de inscripción de eventos - Actividad 5 Tabla 26. DARP – Proceso de inscripción de eventos - Actividad 5 - Formulario 1 Tabla 27. DARP – Proceso de inscripción de eventos - Actividad 6 Tabla 28. DARP – Proceso de inscripción de eventos - Actividad 6 - Consulta 1 ANEXO 5 Documento de Análisis de requerimientos de procesos. Proceso: Validación de inscripción Tabla 29. DARP – Proceso de validación de inscripción Tabla 30. DARP – Proceso de validación de inscripción - Actividad 1 Tabla 31. DARP – Proceso de validación de inscripción - Actividad 1 - Formulario 1 Tabla 32. DARP – Proceso de validación de inscripción - Actividad 2 Tabla 33. DARP – Proceso de validación de inscripción - Actividad 2 - Consulta 1 Tabla 34. DARP – Proceso de validación de inscripción - Actividad 3 Tabla 35. DARP – Proceso de validación de inscripción - Actividad 4 Tabla 36. DARP – Proceso de validación de inscripción - Actividad 4 - Consulta 1 Tabla 37. DARP – Proceso de validación de inscripción - Actividad 5 Tabla 38. DARP – Proceso de validación de inscripción - Actividad 5 - Consulta 1 Tabla 39. DARP – Proceso de validación de inscripción - Actividad 6 Tabla 40. DARP – Proceso de validación de inscripción - Actividad 7 Tabla 41. DARP – Proceso de validación de inscripción - Actividad 8 ANEXO 6 Documento de Análisis de requerimientos de procesos. Proceso: Ingreso al evento Tabla 42. DARP – Proceso de validación de ingreso al evento Tabla 43. DARP – Proceso de validación de ingreso al evento - Actividad 1 Tabla 44. DARP – Proceso de validación de ingreso al evento - Actividad 2 Tabla 45. DARP – Proceso de validación de ingreso al evento - Actividad 3 Tabla 46. DARP – Proceso de validación de ingreso al evento - Actividad 3 - Consulta 1 Tabla 47. DARP – Proceso de validación de ingreso al evento - Actividad 4 Tabla 48. DARP – Proceso de validación de ingreso al evento - Actividad 5Seminario.docx.docx Universidad Central de Venezuela Facultad de Ciencias Escuela de Computación Desarrollo de un sistema de información para automatizar el proceso de inscripción de eventos de la Cámara Venezolano - Americana de Comercio e Industria Por los Bachilleres: José A. Bianco C. C.I. V-18.270.069 Fernando J. Gómez F. C.I. V-16.406.279 Tutor: Profesor Wilfredo Rangel Caracas, Octubre de 2015 i ACTA Quienes suscriben, miembros del Jurado designado por el Consejo de Escuela de Computación, para examinar el Trabajo Especial de Grado presentado por los bachilleres José A. Bianco C. C.I V-18.270.069 y Fernando J. Gómez F. C.I. V- 16.406.279, con el título “Desarrollo de un sistema de información para automatizar el proceso de inscripción de eventos de la Cámara Venezolano - Americana de Comercio e Industria.” a los fines de optar al título de Licenciado en Computación, dejan constancia de lo siguiente: Leído como fue, dicho trabajo por cada uno de los miembros del jurado, se fijó el día 14 de octubre del 2015 a las 10:00 am, para que sus autores defendieran en forma pública, lo que se hizo en el laboratorio de sistemas de información de la Escuela de Computación, mediante una presentación oral de su contenido, luego de lo cual respondió las preguntas formuladas. Finalizada la defensa pública del Trabajo Especial de Grado, el jurado decidió aprobarlo con la nota de ___________ puntos. En fe de lo cual se levanta la presente Acta, en Caracas a los (14) días del mes de octubre del año dos mil quince (2015). _________________________ Prof. Wilfredo Rangel Tutor ________________________ Jose Sosa Jurado ____________________ Jaime Blanco Jurado ii AGRADECIMIENTOS Y DEDICATORIAS Jose Bianco Le agradezco a Dios en primer lugar, por darme toda la fortaleza y constancia, por iluminar mi vida y guiar mis pasos en este reto. Le agradezco infinitamente a los dos seres que más quiero en esta vida, a mi madre, Carmen Julieta Centeno y mi padre Andrés Eloy Bianco por darme su apoyo incondicional en todo momento, ¡No será suficiente toda la vida, para devolverles el cariño que me han dado! Los quiero mucho. Gracias a mi hermana, Bianca Bianco por estar ahí para mí en todo momento. A mi tía, Analía Centeno, mi segunda madre, por ayudarme y apoyarme en todo momento, eres un pilar fundamental en mi vida. A toda mi familia, por ser parte de mi vida y brindarme tantas alegrías. A mi amigo y compañero de tesis Fernando Gómez, por su motivación y por mantenerme enfocado en el objetivo. ¡Nos hemos graduado! A mi tutor Wilfredo Rangel, más que un profesor, un amigo, compañero, un guía, un mentor. Gracias por haber creído en mí, por brindarme todo tu apoyo y haberme aportado tantos conocimientos valiosos en los momentos oportunos. A todos mis compañeros y compañeras, por haber reído, llorado y disfrutado conmigo durante todo este tiempo, a la UCV, institución que me vio crecer profesionalmente. A todos ¡Gracias Totales! iii Fernando Gómez Agradezco a mi tía Emérita Gómez por su dedicación, paciencia, confianza y perseverancia en mi para logra estar gran meta que tanto nos ha costado. A mi madre Inés Fermín por su apoyo incondicional en cualquier momento sin importar las limitaciones. A Wilfredo Rangel por creer en mí y darme siempre la oportunidad de crecer cada vez más personal, profesional e intelectualmente. A José Bianco ya que sin su guía y orientación no hubiese logrado plenamente este objetivo final. Y en especial gracias a dios por darme la fuerza, salud y resistencia hasta el final. iv RESUMEN El siguiente Trabajo Especial de Grado, se enfoca en el desarrollo de un sistema de información que permite automatizar el proceso de inscripción de eventos de la Cámara Venezolano - Americana de Comercio e Industria (Venamcham). Dicho sistema tiene como base, una visión orientada a procesos, permitiendo así, analizar y documentar a fondo los procesos de negocio estratégicos de la empresa. La motivación principal de este trabajo de investigación, no es otra que mejorar la productividad de la organización a través de la automatización del proceso de inscripción de eventos, realizada de forma manual hasta el momento. En el desarrollo de este trabajo, se utiliza la metodología de gestión de procesos de negocio BPM-RAD, con el fin de descubrir, analizar, documentar y modelar el proceso de inscripción de eventos de Venamcham. Para realizar la implementación el sistema, se emplea la metodología ágil de desarrollo SCRUM y distintas tecnologías web de código abierto como: el lenguaje Hypertext Pre-Processor (PHP), el sistema manejador de base de datos MySQL y el framework de desarrollo Laravel. Adicionalmente el sistema se integra con el CRM SalesLogix utilizado por la organización en sus labores cotidianas y con el sistema de pagos en línea Mercado Pago. Términos Claves: BPM, BPM-RAD, SCRUM, CRM, Aplicaciones web, PHP, Laravel, Modelo Vista Controlador (MVC). v TABLA DE CONTENIDO INTRODUCCIÓN ........................................................................................................ 1 CAPÍTULO I PROBLEMA DE INVESTIGACIÓN ........................................................ 3 1.1. Estado del Arte ............................................................................................... 3 1.2. Planteamiento del problema ........................................................................... 4 1.3. Solución planteada ......................................................................................... 5 1.4. Objetivo General ............................................................................................. 5 1.5. Objetivos Específicos ..................................................................................... 5 CAPÍTULO II MARCO CONCEPTUAL ....................................................................... 6 2.1. Sistemas de Información ................................................................................ 6 2.1.1. Tipos de Sistemas de Información ......................................................... 7 2.1.1.1. Sistemas de Procesamiento de Transacciones (TPS) ................... 8 2.1.1.2. Sistemas de Información Gerencial (MIS) ..................................... 8 2.1.1.3. Sistemas de apoyo a la toma de decisiones (DSS) ....................... 9 2.1.1.4. Sistemas de apoyo a ejecutivos (ESS) .......................................... 9 2.1.2. ¿Qué es un proceso? ........................................................................... 10 2.1.3. ¿Qué es un proceso de Negocio? ........................................................ 11 2.1.4. Gestión de Procesos de Negocio ......................................................... 12 2.1.5. Origen y evolución de la Gestión de Procesos de Negocio .................. 13 2.1.6. Ciclo de Vida BPM ............................................................................... 15 vi 2.1.7. Beneficios ............................................................................................. 16 2.1.8. Business Process Management Suites ................................................ 17 2.1.9. Notación para el Modelado de Procesos de Negocio .......................... 18 2.1.10. Elementos de BPMN ............................................................................ 19 2.1.10.1. Eventos ........................................................................................ 20 2.1.10.2. Actividades .................................................................................. 20 2.1.10.3. Compuertas (Gateway) ................................................................ 20 2.1.10.4. Objetos conectores ...................................................................... 21 2.1.10.5. Canales (Swimlanes) ................................................................... 21 2.1.10.6. Artefactos ..................................................................................... 21 2.1.11. Sistemas de Administración de Relaciones con Clientes ..................... 21 2.1.11.1. Objetivos de los CRM .................................................................. 22 2.1.11.2. Características de un CRM .......................................................... 23 2.1.11.3. Ventajas ....................................................................................... 24 2.1.11.4. Desventajas ................................................................................. 24 2.1.11.5. SalesLogix ................................................................................... 25 2.2. Aplicaciones Web ......................................................................................... 26 2.2.1. Arquitectura Cliente Servidor ............................................................... 27 2.2.2. Características de las Aplicaciones Web ............................................. 28 2.2.3. Tecnologías del lado del cliente ........................................................... 29 vii 2.2.3.1. HTML ........................................................................................... 30 2.2.3.2. Hojas de estilo en cascada .......................................................... 31 2.2.3.3. Javascript ..................................................................................... 33 2.2.3.4. Jquery .......................................................................................... 33 2.2.3.5. AJAX ............................................................................................ 33 2.2.3.6. JSON ........................................................................................... 34 2.2.4. Tecnologías del lado del servidor ......................................................... 34 2.2.4.1. PHP ............................................................................................. 35 2.2.4.2. Bases de Datos ........................................................................... 40 2.2.5. Servicios Web ...................................................................................... 44 2.2.5.1. Servicios Web REST ................................................................... 44 CAPÍTULO III MARCO METODOLÓGICO. .............................................................. 46 3.1. BPM-RAD ..................................................................................................... 47 3.1.1. Análisis Lógico ..................................................................................... 48 3.1.2. Diseño Preliminar ................................................................................. 48 3.1.3. Diseño BPM ......................................................................................... 48 3.1.4. Sesiones RAD ...................................................................................... 49 3.2. Scrum ........................................................................................................... 49 3.2.1. Características de Scrum ..................................................................... 50 CAPÍTULO IV MARCO APLICATIVO. ...................................................................... 53 viii 4.1. Fase 1 – Análisis del proceso ....................................................................... 54 4.1.1. Descripción del Proceso ....................................................................... 54 4.1.2. Roles y Tareas de Usuarios ................................................................. 58 4.2. Fase 2 - Diseño del proceso ......................................................................... 58 4.3. Fase 3 - Implementación .............................................................................. 63 4.3.1. Perfiles de Usuarios ............................................................................. 63 4.3.2. Aplicación de Scrum............................................................................. 65 4.4. Fase 4 - Pruebas, monitoreo y optimización ................................................. 83 CONCLUSIONES Y RECOMENDACIONES ............................................................ 86 BIBLIOGRAFÍA ......................................................................................................... 88 ix ÍNDICE DE TABLAS Tabla 1. Comparación de los acciones HTTP. .......................................................... 45 Tabla 2. Fases y entregables del Trabajo Especial de Grado. .................................. 53 Tabla 3. Fases y entregables del Trabajo Especial de Grado. (Continuación) .......... 54 Tabla 4. Roles y tareas del proceso de inscripción de eventos. ................................ 58 Tabla 5. Perfiles de Usuario del Sistema ................................................................. 64 Tabla 6. Perfiles de Usuario del Sistema (Continuación) .......................................... 65 Tabla 7. Product Backlog .......................................................................................... 66 Tabla 8. Product Backlog (Continuación) .................................................................. 67 Tabla 9. Revisión de la iteración 1 ............................................................................ 68 Tabla 10. Revisión de la iteración 2 .......................................................................... 70 Tabla 11. Revisión de la iteración 3 .......................................................................... 72 Tabla 12. Revisión de la iteración 4 .......................................................................... 74 Tabla 13. Revisión de la iteración 5 .......................................................................... 76 Tabla 14. Revisión de la iteración 6 .......................................................................... 78 Tabla 15. Revisión de la iteración 7 .......................................................................... 80 Tabla 16. Revisión de la iteración 8 .......................................................................... 82 Tabla 17 – Modelo de encuesta de valoración .......................................................... 84 x ÍNDICE DE FIGURAS Figura 1. Estructura de los Sistemas de Información. ................................................. 7 Figura 2. Estructura de una Organización. .................................................................. 8 Figura 3. Tipos de Sistemas de Información. ............................................................ 10 Figura 4. Ciclo de Vida BPM. .................................................................................... 16 Figura 5. Ejemplo de un diagrama BPMN. ................................................................ 19 Figura 6. Objetivos de los CRM. ................................................................................ 23 Figura 7. Arquitectura del CRM SalesLogix............................................................... 26 Figura 8. Arquitectura Cliente/Servidor. .................................................................... 27 Figura 9. Representación de un documento HTML como DOM. ............................... 30 Figura 10. Modelo de cajas. ...................................................................................... 31 Figura 11. Representación de un objeto JSON. ........................................................ 34 Figura 12. Modelo, Vista, Controlador en Laravel. .................................................... 40 Figura 13. Infografía de la Metodología Scrum. ........................................................ 50 Figura 14. Ejemplo de un Burn Down Chart. ............................................................. 51 Figura 15. Creación de un nuevo evento en SalesLogix CRM. ................................. 55 Figura 16. Captura de pantalla. Listado de los ejecutivos inscritos en el evento....... 56 Figura 17. Captura de pantalla. Relación de Cierre. ................................................. 57 Figura 18. Modelo en BPMN del proceso de inscripción. .......................................... 59 Figura 19. Modelo en BPMN del proceso de validación de inscripción. .................... 60 xi Figura 20. Modelo en BPMN del proceso de ingreso al evento................................. 61 Figura 21. Modelo en BPMN del Subproceso: Consultar RIF ................................... 62 Figura 22. Modelo en BPMN del Subproceso: Verificar solicitud .............................. 62 Figura 23. Modelo de datos del sistema. ................................................................... 69 Figura 24. Vista del formulario de inscripción de eventos. ........................................ 71 Figura 25. Modelo del correo electrónico que será enviado al confirmar la inscripción. .................................................................................................................................. 73 Figura 26. Revisión de solicitud ................................................................................. 75 Figura 27. Panel de control del sistema – Contactos que realizaron la inscripción. .. 77 Figura 28. Verificación de inscripción de eventos. .................................................... 79 Figura 29. Búsqueda por RIF. ................................................................................... 81 Figura 30. Integración Mercado Pago. ...................................................................... 83 Figura 31. Resultados encuesta de valoración.......................................................... 85 1 INTRODUCCIÓN Desde hace varios años las tecnologías de información y comunicación, se vienen empleando masivamente para automatizar una gran cantidad de actividades y procesos en las organizaciones. La gestión de procesos de negocio y las aplicaciones web, se han convertido en las alternativas utilizadas con mayor frecuencia en el desarrollo de sistemas que permiten optimizar los procesos críticos de las mismas. La Cámara Venezolano - Americana de Comercio e Industria (Venamcham), tiene como principal función en nuestro país, la formación de liderazgos responsables en el seno empresarial, mediante la realización de eventos y talleres. Venamcham realiza en promedio 50 eventos al año, cuyo proceso de inscripción se efectúa de forma manual, resultando extremadamente complejo e ineficiente. El objetivo de este Trabajo Especial de Grado, está centrado en diseñar y desarrollar un sistema de información que permita automatizar el proceso de inscripción de eventos en Venamcham, utilizando la metodología de BPM-RAD para analizar y modelar los procesos, así como tecnologías web en el desarrollo del sistema. El referido trabajo se encuentra estructurado de la siguiente manera:  En el Capítulo I se describe el planteamiento del problema, la situación actual, la solución planteada, los objetivos generales y específicos.  En el Capítulo II se desarrollan las bases conceptuales fundamentales del trabajo, se revisan puntos importantes sobre los sistemas de información, la gestión de procesos de negocio, los sistemas de administración de relaciones con clientes y finalmente las herramientas tecnológicas necesarias para el desarrollo de una aplicación web. 2  En el Capítulo III se describen las metodologías de desarrollo aplicadas en este Trabajo Especial de Grado.  En el Capítulo IV se aplican los conceptos y las metodologías estudiadas en el capítulo anterior. Por otra parte, se cubre el ciclo de vida de BPM, utilizando BPM-RAD como metodología para el análisis y diseño del proceso, así como la metodología ágil de desarrollo SCRUM para implementar la aplicación web. Finalmente se muestran, conclusiones, recomendaciones, anexos y las referencias bibliográficas utilizadas en este trabajo. 3 CAPÍTULO I PROBLEMA DE INVESTIGACIÓN En el presente capítulo, se describe el estado del arte, el problema, la solución planteada, el objetivo general y los objetivos específicos de esta investigación 1.1. Estado del Arte La Cámara Venezolano - Americana de Comercio e Industria (Venamcham) es una institución no gubernamental sin fines de lucro. Cuenta con 65 años de trayectoria y se dedica a satisfacer los intereses económicos y comerciales de sus afiliados. La misión de Venamcham es fomentar el comercio y la inversión entre los Estados Unidos de América y la República Bolivariana de Venezuela, mediante la defensa y el impulso del libre comercio, el libre mercado y la responsabilidad social; con el fin de que todos los sectores que intervienen en la economía logren un desarrollo equilibrado y sostenido, a través del tiempo (Venamcham-a, 2015). Actualmente, Venamcham cuenta con más de 10.000 ejecutivos de negocios y más de 1.100 empresas registradas; situándose, así, como la principal asociación empresarial binacional del país. Todo miembro de Venamcham goza de una gama de productos, servicios, beneficios e información que le permite desarrollar, de manera exitosa, su actividad económica nacional e internacional. En el año 2015, Venamcham en su aniversario, resaltó como uno de sus mayores logros, como institución, es haber contribuido en la formación de liderazgos responsables dentro del seno empresarial, a través de sus eventos, talleres, asesorías y publicaciones. 4 1.2. Planteamiento del problema Venamcham realiza, en promedio, 50 eventos al año, en todo el territorio nacional. En ellos, se abordan temas diversos tales como: marketing, coaching, economía, responsabilidad social, gerencia, entre otros. Para estos eventos, se extienden invitaciones a todos los contactos de las empresas afiliadas y no afiliadas registradas en una base de datos, que hasta el momento, contiene más de 10.000 registros. En cada evento que Venamcham promociona, la dinámica comienza con el envío de las invitaciones y el registro de los participantes. Los integrantes de la Gerencia de Logística y Eventos envían la invitación a todos los contactos, mediante una lista de correo. Este proceso se realiza de forma manual, sin ningún tipo de control y vigilancia; convirtiéndolo en una actividad propensa a errores, y generando inconsistencia de datos, ralentización de los procesos y dificultad en el acceso a la información. Cuando la invitación llega a su destinatario, además del material publicitario, contiene un archivo adjunto en formato Microsoft Excel, el cual representa una planilla de inscripción al evento, la misma debe ser llenada por un representante autorizado de la empresa, y enviada de vuelta a la Gerencia de Logística y Eventos de Venamcham. En sus operaciones diarias, Venamcham utiliza el sistema de administración de relaciones con clientes (CRM, por sus siglas en inglés) SalesLogix. La información recibida mediante las planillas es vaciada en el CRM manualmente, por los miembros de la Gerencia de Logística y Eventos; impidiendo, así, que se pueda dar respuesta oportuna o acuse de recibo a los invitados que se inscribieron en el evento, debido al gran volumen de inscripciones. El día del evento, el personal de protocolo de Venamcham debe realizar la validación de cada uno de los asistentes al evento. Esto se hace de forma manual a 5 través de un listado impreso, lo que ocasiona una considerable ralentización en el ingreso de los invitados. Los problemas anteriormente presentados ocasionan cuellos de botella en la Gerencia de Logística y Eventos de Venamcham, atrasos en los tiempos establecidos, así como también la generación de datos e información poco confiable de los eventos realizados, lo que deriva en el ineficiente uso de los recursos a la organización. 1.3. Solución planteada Considerando los problemas presentados en el punto anterior, se propone el desarrollo de un sistema de información que permita automatizar y optimizar los procesos involucrados en la realización de los eventos de Venamcham. 1.4. Objetivo General Desarrollar un sistema de información que permita automatizar el proceso de inscripción de eventos de la Cámara Venezolano - Americana de Comercio e Industria. 1.5. Objetivos Específicos  Realizar el levantamiento de información y el descubrimiento del proceso de inscripción de eventos de Venamcham.  Diseñar y modelar el proceso de inscripción de eventos, utilizando la notación para el modelado de procesos de negocio (BPMN, por sus siglas en inglés).  Desarrollar una aplicación web que permita automatizar el proceso de inscripción de eventos de Venamcham.  Realizar, al sistema desarrollado, las pruebas de software correspondientes.  Optimizar el funcionamiento del sistema, a partir de los resultados obtenidos en las pruebas de software. 6 CAPÍTULO II MARCO CONCEPTUAL La finalidad de este capítulo es presentar las bases conceptuales que servirán de fundamento para el desarrollo del presente trabajo de investigación. El mismo se divide en dos secciones, las cuales se describen a continuación: En la primera sección, se explica, de manera breve: que son los sistemas de información, sus tipos y sus características. Se abordan conceptos sobre la gestión de procesos de negocio y los sistemas de administración de relaciones con clientes (CRM, por sus siglas en inglés); en especial el sistema SalesLogix. En la segunda sección, se explica la arquitectura cliente-servidor y se muestran algunas herramientas tecnológicas necesarias para el desarrollo de una aplicación web. Entre las tecnologías del lado del cliente, se hace referencia a HTML, CSS, JavaScript, AJAX y JQuery. En cuanto a las tecnologías del lado del servidor, se incluye Apache, como servidor web, PHP con el framework Laravel, MySQL como sistema manejador de bases de datos, y SQL Server para realizar la integración con el CRM SalesLogix. 2.1. Sistemas de Información Laudon & Laudon (2012) definen los sistemas de información como un conjunto de componentes interrelacionados que recolectan (o recuperan), procesan, almacenan y distribuyen información para apoyar los procesos de toma de decisiones y de control de una organización. (Ver Figura 1) En tal sentido, se puede decir que los sistemas de información constituyen un importante instrumento que ayuda a las organizaciones a generar ventajas competitivas; dando así mayor valor a dicha organización. 7 Figura 1. Estructura de los Sistemas de Información. 2.1.1. Tipos de Sistemas de Información Cada organización es diferente, ellas están definidas por su estructura, sus procesos de negocios y sus políticas. Caeríamos en un grave error si pensáramos que un solo sistema puede dar a apoyo a todos sus procesos y niveles (Laudon & Laudon, 2012). Incluso en las organizaciones más simples, se puede evidenciar una estructura jerárquica compuesta por distintos niveles. Como se puede apreciar en la Figura 2 y en la Figura 3, para cada uno de ellos existen sistemas de información que dan soporte a las actividades realizadas diariamente. 8 Figura 2. Estructura de una Organización. 2.1.1.1. Sistemas de Procesamiento de Transacciones (TPS) Los sistemas de procesamiento de transacciones (TPS) son aquellos creados con la finalidad de procesar grandes cantidades de datos relacionados a las transacciones diarias de los negocios, tales como: ventas, nóminas, flujo de materiales, entre otros. Es importante destacar que este tipo de sistemas es fundamental para la empresa; si por un motivo u otro fallan, pueden provocar pérdidas importantes en los ingresos o incluso la desaparición de la misma. (Kendall & Kendall, 2005). 2.1.1.2. Sistemas de Información Gerencial (MIS) La gerencia de nivel medio necesita sistemas que les ayuden con las actividades de supervisión, control, administración, y toma de decisiones; proporcionando informes semanales, mensuales y anuales sobre el desempeño de la 9 organización. Los sistemas de información gerencial (MIS) utilizan los datos provenientes de los sistemas de procesamiento de transacciones (TPS) y responden a esta pregunta: ¿Funcionan bien las cosas? (Laudon & Laudon, 2012) 2.1.1.3. Sistemas de apoyo a la toma de decisiones (DSS) Los sistemas de soporte de decisiones (DSS) brindan apoyo, a la gerencia intermedia, en la toma de decisiones, en ocasiones donde los problemas son únicos, cambiantes y poco fáciles de anticipar. Los DSS responden a preguntas como: ¿Cuál sería el impacto en los calendarios de producción, si tuviéramos que duplicar las ventas de diciembre? ¿Qué pasaría con nuestro rendimiento sobre la inversión, si el calendario de producción de una fábrica se retrasara seis meses? Estos sistemas se abastecen tanto de los datos provenientes de los TPS y MIS, como de fuentes externas. Estos sistemas condensan grandes cantidades de información, de tal forma que su análisis sea sencillo de entender para los encargados de tomar las decisiones. (Laudon & Laudon, 2012) 2.1.1.4. Sistemas de apoyo a ejecutivos (ESS) Estos sistemas ayudan a la gerencia de alto nivel de las organizaciones, en las actividades de planificación a largo plazo y a sus directores para enfrentar y resolver aspectos estratégicos; dando así los cambios necesarios para adaptarse al ambiente externo de la organización. Los ESS generan herramientas gráficas que dan, a los ejecutivos, la posibilidad de comprender sus entornos, y resolver problemas no estructurados con visión a largo plazo. Sin embargo, al igual que los DSS, dependen de la información producida por los TPS y los MIS. (Kendall & Kendall, 2005) 10 Figura 3. Tipos de Sistemas de Información. 2.1.2. ¿Qué es un proceso? Un proceso es una secuencia de pasos ordenados lógicamente, que se enfocan en lograr un resultado concreto. Los procesos son mecanismos de comportamiento que se diseñan para mejorar la productividad, para establecer un orden o eliminar algún tipo de problema. (Definición Mx, s.f.) Un proceso, según Davenport (1993), es un conjunto estructurado y medible de actividades diseñadas para producir un producto específico, el cual está conformado por un conjunto de tareas lógicamente relacionadas, y con la finalidad de conseguir un resultado bien definido dentro de un negocio. Por lo tanto, el proceso toma una entrada, le agrega valor y produce una salida. Los procesos tienen, entonces, clientes que pueden ser internos o externos; los cuales reciben una salida, que puede ser un producto físico o un servicio. Estos 11 establecen las condiciones de satisfacción y declaran si el producto o servicio es aceptable o no. (Barros, 1994) Ould (1995), por su parte, también define el proceso como un conjunto coherente de actividades llevadas a cabo por un grupo de colaboración para lograr un objetivo. 2.1.3. ¿Qué es un proceso de Negocio? Para Laudon & Laudon (2012), los procesos de negocios se refieren al conjunto de tareas y comportamientos lógicamente relacionados entre sí, que las organizaciones desarrollan a través del tiempo, para producir resultados de negocios específicos y a la manera particular en la cual se organizan y coordinan estas actividades. Hammer (1990) por su parte, establece la diferencia sustancial entre un proceso y una tarea, señalando que una tarea corresponde a una actividad conducida por una persona o un grupo de personas, mientras que un proceso de negocio corresponde a un conjunto de actividades que, como un todo, crean valor para el cliente externo. Ould (1995) elabora una lista de características que deben cumplir los procesos de negocio, y que refuerza la posición de Hammer. Según este autor, un proceso de negocio contiene actividades con propósito, es ejecutado colaborativamente por un grupo de trabajadores de distintas especialidades, con frecuencia cruza las fronteras de un área funcional, e invariablemente es detonado por agentes externos o clientes de dicho proceso. Rummler & Brache (1995) desde el principio, sugirieron que un proceso de negocio es la serie de pasos que una empresa realiza para producir un producto o servicio. Si se cruza fronteras departamentales, es multifuncional. Si el producto es para un cliente externo, es un proceso primario; de lo contrario, es un proceso de apoyo. 12 2.1.4. Gestión de Procesos de Negocio Laurentiis y otros (2011) definen en su libro titulado “El Libro del BPM 2011” gestión de procesos de negocio (BPM, por sus siglas en inglés) como “un orden específico de actividades de trabajo, que se realizan en el tiempo, en lugares específicos y por personas o sistemas, con un comienzo, un fin, con entradas y salidas claramente definidas. Es decir, una estructura cohesionada y coordinada adecuadamente para la acción.” De acuerdo con Garimella, Lees, & Williams (2008) BPM se define de la siguiente manera: “Un conjunto de métodos, herramientas y tecnologías utilizados para diseñar, representar, analizar y controlar procesos de negocio operacionales.” En base a estas definiciones, se puede resaltar que la filosofía a la que se hace mención está centrada en los diferentes procesos de una organización, con el fin de mejorar la eficiencia y optimizar el rendimiento de la misma. Para Garimella, Lees, & Williams (2008) uno de los principales retos de las organizaciones es conseguir la flexibilidad y agilidad necesarias para adaptarse a los rápidos y continuos movimientos del mercado. Por eso, hoy en día, las organizaciones que han implementado metodologías de gestión de procesos de negocio reportan grandes beneficios, con altísimos ahorros en costos y reducciones importantes en tiempos de servicios a sus clientes. Los procesos y recursos empresariales deben dirigirse hacia la meta estratégica de la empresa, ser capaces de reconocer lo que impide alcanzar los objetivos marcados, identificar los cuellos de botella existentes, conocer maneras de solventar las excepciones y saber cómo orquestar los procesos y recursos para conseguir la meta planteada. Para que una implementación de BPM sea exitosa, las organizaciones no deben cometer el gran error de centrarse solo en las tecnologías, sino principalmente 13 en el conocimiento, dominio y mejora continua de sus procesos, datos y recursos empresariales. Según Garimella, Lees, & Williams (2008), BPM puede ayudar a una organización a mejorar sus ofertas, en las siguientes categorías:  Globalización: actualmente, las organizaciones van más allá para encontrar ventajas competitivas en los costos, calidad e innovación, y requieren una integración completa de sus procesos, además del intercambio instantáneo de información a grandes escalas.  Productividad: BPM, mediante su continua monitorización y optimización de los procesos de una organización, puede ayudar a producir más, y generar más valor para una empresa, utilizando menos recursos y en menor tiempo.  Innovación: mayormente, la innovación empresarial se suele asociar con productos, pero también se aplica a servicios, procesos de negocio y fabricación, desarrollo, diseño de tiendas, modelos empresariales e incluso al empaquetado del producto. 2.1.5. Origen y evolución de la Gestión de Procesos de Negocio Se pueden encontrar algunos indicios de la teoría BPM, desde hace ya más de 2 siglos, cuando el economista y filósofo escocés, Adam Smith, uno de los mayores exponentes de la economía clásica, escribió en su libro, La riqueza de las naciones, sobre el aumento de la productividad y la mejora en la eficiencia de una fábrica de alfileres, a través de la implementación de la idea de la división del trabajo. Smith reseñaba que: “Si dos trabajadores se especializan en realizar uno la parte superior y otro la parte inferior del alfiler, producirán más alfileres en una hora que si cada uno de 14 ellos fabrica las dos, por tanto si una persona fabrica menos de cien alfileres al día con la división del trabajo puede fabricar hasta 10.000 alfileres.” (DiplomadosOnline-b, s.f.). Tomando este ejemplo como referencia: “Un obrero que no haya sido adiestrado en esa clase de tarea y que no esté acostumbrado a manejar la maquinaria que en él se utiliza, por más que trabaje, apenas podría hacer un alfiler al día, y desde luego no podría confeccionar más de veinte. Pero dada la manera como se practica hoy día la fabricación de alfileres, no sólo la fabricación misma constituye un oficio aparte, sino que está dividida en varios ramos, la mayor parte de los cuales también constituyen otros tantos oficios distintos. He visto una pequeña fábrica de esta especie que no empleaba más que diez obreros, donde, por consiguiente, algunos de ellos tenían a su cargo dos o tres operaciones. Pero, a pesar de que eran pobres y, por lo tanto, no estaban bien provistos de la maquinaria debida, podían, cuando se esforzaban, hacer entre todos, diariamente, unas doce libras de alfileres. En cada libra había más de cuatro mil alfileres de tamaño mediano. Por consiguiente, estas diez personas podían hacer cada día, en conjunto, más de cuarenta y ocho mil alfileres, cuya cantidad, dividida entre diez, correspondería a cuatro mil ochocientas por persona. En cambio si cada uno hubiera trabajado separada e inde- pendientemente, y ninguno hubiera sido adiestrado en esa clase de tarea, es seguro que no hubiera podido hacer veinte, o, tal vez, ni un solo alfiler al día; es decir, seguramente no hubiera podido hacer la 240ava parte, tal vez ni la 4800ava parte de lo que son capaces de confeccionar en la actualidad gracias a la división y combinación de las diferentes operaciones en forma conveniente.” (Smith A. , 1776) Este modelo, como forma primitiva de diseño y optimización de tareas, el cual Smith diseño con el fin de mejorar la productividad, sería demasiado simple para la 15 mayoría de las empresas hoy en día, debido a la magnitud y complejidad de los procesos actuales. En su libro, “Gestión de Procesos de Negocio: La Tercera Ola”, los autores Howard Smith y Peter Fingar han capturado la evolución de BPM, en tres oleadas. En la primera ola, los primeros sistemas de información adoptaron un enfoque centrado en los datos, para el apoyo a las necesidades del negocio. La segunda ola mantuvo un enfoque funcional de las operaciones comerciales y muchas estructuras organizativas se modelaban completamente alrededor de este punto de vista. La tercera ola eliminó los compromisos y contorsiones impuestas por las limitaciones tecnológicas anteriores, y adoptó un enfoque centrado en los procesos de negocio y la organización orientada a procesos; dando paso, de esta manera, al nacimiento de la gestión de procesos de negocio, como ente orquestador, y árbitro, de los procesos de una empresa. (Smith & Fingar, 2006). 2.1.6. Ciclo de Vida BPM Las actividades o tareas que se desarrollan en BPM se organizan en etapas, cada una con un enfoque específico. Son cinco las etapas cruciales:  Identificación: En esta etapa, los procesos existentes pueden ser identificados, reformados o eliminados. De igual manera, se agregan nuevos flujos, actores, alertas, notificaciones y decisiones.  Modelado: Se utiliza el diseño teórico para describir los procesos a alto nivel, enfocando el esfuerzo en cómo funcionan cada uno de ellos y dejando de lado interrogantes de implementación.  Implementación y Ejecución: En esta etapa, se ponen en marcha los procesos detallados en el paso anterior; incluye compras de infraestructura, 16 tecnología, entrenamiento de personal, documentación del proyecto, y puesta en marcha del diseño planteado.  Monitoreo: Se hace seguimiento de los procesos, se evalúa el rendimiento, se analizan resultados recientemente obtenidos y se comparan con los anteriores.  Optimización: Se toma toda la información de la etapa de monitoreo para identificar problemas generales y cuellos de botella. Se buscan soluciones a los problemas y posteriormente, se ponen en marcha. Figura 4. Ciclo de Vida BPM. 2.1.7. Beneficios  Integración de personas, sistemas, información y procesos. 17  Automatización de procesos generando mayor productividad, coherencia, reducción de errores, mayor conformidad y satisfacción del cliente.  Capacidad de interacción con clientes, socios y talento humano, facilitando la realización de transacciones en tiempo real, basadas en los procesos y las normas de negocio definidas.  Capacidad de adaptación rápida y flexible con los sistemas de información tradicionales. 2.1.8. Business Process Management Suites Para Garimella, Lees, & Williams (2008), BPMS es la suite de tecnologías BPM, que incluye todos los módulos funcionales, las capacidades técnicas y la infraestructura de apoyo, integradas en un único entorno que realiza todas las funciones de la tecnología BPM de manera perfecta. Los principales módulos que componen una plataforma BPMS son los siguientes:  Modelador Gráfico de Procesos: Esta herramienta permite modelar los procesos de negocio, simular su ejecución, definir métricas para el monitoreo, y exportar a Lenguaje de Ejecución de Procesos de Negocio (Business Process Execution Language – BPEL).  Ambiente Integración y Desarrollo: es la herramienta que permite implementar los procesos, así como integrar las pantallas (para interacción de un participante), y los servicios (interacción con sistemas legados).  Servidor de Procesos de Negocio: es el motor que permite ejecutar los procesos de negocio. Aquí se ejecutan las Aplicaciones Compuestas, los Workflows tradicionales, y la Orquestación de Servicios. Este servidor también es el encargado de generar los datos de las métricas, y de 18 monitoreo. Permite intervenir los procesos en tiempo real: balancear carga, cambiar flujo de negocio, y realizar acciones correctivas (según reglas de negocio).  Monitor de Actividades de Negocio: esta es una aplicación de administración que permite gestionar los procesos y servicios gráficamente. En ella se pueden ver indicadores de performance, definir alertas y triggers de acuerdo a eventos de negocio que sucedan en el proceso. 2.1.9. Notación para el Modelado de Procesos de Negocio Según Garimella, Lees, & Williams (2008), la notación para el modelado de procesos de negocio (BPMN, por sus siglas en inglés) es una notación gráfica estandarizada para representar los procesos de negocio en un flujo de trabajo, que facilita la mejora de la comunicación y la portabilidad de los modelos de proceso. (Ver Figura 5). Un diagrama, en notación BPMN, puede ser transformado, automáticamente, en un código ejecutable, sin la necesidad de programación. El más usado, y conocido, de estos lenguajes es el BPEL (Business Process Execution Language, por sus siglas en ingles). De esta forma, el analista de negocios puede definir, diseñar y generar una solución a sus procesos, sin tener que preocuparse lenguajes de programación o tecnologías. 19 Figura 5. Ejemplo de un diagrama BPMN. 2.1.10. Elementos de BPMN Giandini, Perez, & Pons (2010) afirman que la notación para el modelado de procesos de negocio (Ver anexo 1), fue diseñada para ser: intuitiva, simple y entendible; de manera que los ingenieros de procesos (personal capacitado en todo el ámbito de la gestión de procesos de negocio) puedan diseñar los diferentes modelos de manera sencilla. Los elementos de flujo son los principales elementos de BPMN los cuales se encargan de determinar qué es lo que va a suceder, qué tipo de trabajo se va a realizar, y cuáles son las condiciones para que estos trabajos sucedan. Los tres objetos de flujo son: 20 2.1.10.1. Eventos Es un acontecimiento que sucede durante el proceso de negocio, y que afecta el flujo del proceso. Tiene una causa o un resultado, y dependiendo del momento en que afectan al flujo, se dividen en tres tipos: inicio, intermedio y fin. 2.1.10.2. Actividades Es un término genérico para el trabajo que se realiza en una organización. Se representa con un rectángulo redondeado y puede ser atómica o compuesta. Los tipos de actividades son:  Tareas Una tarea es una actividad atómica que está incluida dentro de un proceso. Se habla de tarea cuando el trabajo que representa en el proceso no puede desglosarse en un nivel mayor de detalle.  Subprocesos Un subproceso es un conjunto de actividades incluidas dentro de un proceso. Puede desglosarse en diferentes niveles de detalle, denominados “tareas”. Se representa con un símbolo de suma, en la parte central inferior de la figura. 2.1.10.3. Compuertas (Gateway) Se representa con un diamante, y se emplea para controlar la divergencia o convergencia de la secuencia de flujo. Éstas determinan ramificaciones, bifurcaciones, combinaciones y fusiones del proceso. 21 2.1.10.4. Objetos conectores Conectan los objetos de flujo de un proceso y definen el orden de ejecución de las actividades. Los conectores pueden ser de secuencia, un mensaje o una asociación. 2.1.10.5. Canales (Swimlanes) Son un mecanismo empleado para organizar actividades en categorías separadas visualmente, con el fin de ilustrar diferentes capacidades funcionales o responsabilidades. 2.1.10.6. Artefactos Son objetos gráficos que proveen información adicional de los elementos dentro de un proceso, sin afectar su flujo. 2.1.11. Sistemas de Administración de Relaciones con Clientes Un sistema de administración de relaciones con clientes (CRM, por sus siglas en inglés) se define como: “La integración de tecnologías y los procesos de negocios usados para satisfacer las necesidades de los clientes durante cualquier interacción con los mismos”. (Bose, 2003) Específicamente, un CRM involucra la adquisición, el análisis y el uso del conocimiento de las actividades que realizan los clientes, con la finalidad de vender más productos o servicios, y hacerlo de forma más eficiente. Según Alfredo De Goyeneche (2001), en una publicación en la revista Economía y Administración de la Universidad de Chile, “estamos frente a un modelo de negocios cuya estrategia está destinada a lograr identificar y administrar las relaciones en aquellas cuentas más valiosas para una empresa, trabajando 22 diferentemente en cada una de ellas de forma tal de poder mejorar la efectividad sobre los clientes". 2.1.11.1. Objetivos de los CRM Bose (2003) describió el objetivo del CRM como un proceso cíclico, centrado en el cliente (Ver Figura 6), y que cumple con los siguientes objetivos:  Mayor conocimiento del cliente y humanización del trato: un sistema CRM permite identificar y conocer a los clientes, y por tanto personalizar, con un mayor nivel de detalle, las ofertas y el trato recibido.  Aumento de la satisfacción y lealtad de los clientes: la información contenida en la base de datos también deberá ser usada para proveer al cliente de la mayor satisfacción posible.  Aumento de las ventas: un mayor conocimiento de los clientes, permite conocer mejor, cuáles son las preferencias de cada uno, y de esta manera, personalizar las propuestas y ofrecer a los consumidores los servicios que más se adecuan a sus necesidades.  Reducción de los costos de servicio: un cliente con fidelidad alta suele representar un menor costo en atención al cliente, porque conoce los servicios y productos de la empresa. Además, la empresa conoce mejor al cliente y sabe cómo debe actuar en los procesos asociados a él. 23 Figura 6. Objetivos de los CRM. 2.1.11.2. Características de un CRM  Automatización de las Ventas: en los sistemas CRM, los procesos de venta a los clientes son configurados en las aplicaciones. Los pedidos y transacciones se integran a las bases de datos, para así monitorear de forma más intensa sus ciclos de compra. (Chen & Popovich, 2003)  Servicio y soporte al cliente: un CRM mejora el servicio al cliente, mediante el monitoreo y medición de las interacciones que se dan entre este y los proveedores. (Chen & Popovich, 2003)  Automatización del Marketing: un CRM proporciona la información actual de los hábitos de compra de los clientes, lo que permite determinar campañas de marketing efectivas que, en determinado momento, desembocaran en ventas cruzadas, para así atraer a nuevos clientes. Mediante el uso en conjunto del CRM, la inteligencia del marketing, las 24 bases de datos de los clientes y las comunicaciones tecnológicas, las empresas satisfacen sus necesidades particulares de mejor manera. Esto permite que la organización sepa aquello que les agrada o desagrada a sus clientes, y, por tanto, entienden correctamente sus necesidades. (Chen & Popovich, 2003) 2.1.11.3. Ventajas  Flexibilidad y adaptabilidad: un CRM es una herramienta altamente “maleable”. Esto se traduce en la posibilidad de apoyar los procesos de negocio particulares de cualquier organización, sin importar el ramo al cual se dedique.  Integración: Es imposible alcanzar los beneficios del uso de un software de CRM sin establecer una integración con la información de los clientes, la cual reside en los diferentes sistemas de información de la empresa. Por esto es muy importante que el software CRM esté en la capacidad de poder integrarse de forma efectiva y fácil de mantener con otros sistemas. (Bose, 2003).  Facilidad de Uso: La adopción de un sistema de información, por parte de los usuarios, es uno de los aspectos más complejos en un proyecto de CRM. En la medida que el software sea fácil de entender y fácil de usar, mayor probabilidad existirá de que los usuarios presenten menor resistencia ante su uso cotidiano. (Bose, 2003). 2.1.11.4. Desventajas  El elevado costo que implica la implementación del CRM, tanto en recursos económicos como humanos. 25  La dificultad en el manejo de información, debido a la resistencia de determinados sectores, a la posibilidad de compartir su información con otros.  Se puede incurrir en invasión de la privacidad del cliente, y exponerlo a situaciones indeseadas.  Necesidad de capacitación extensiva para el personal.  Altos costos de licencias propietarias.  Imposibilidad de modificación o adaptación de código fuente. 2.1.11.5. SalesLogix SalesLogix es un software CRM, de licenciamiento parivativa, originalmente producido por la empresa Interact Commerce Corporation. Es bastante flexible y adaptable a proyectos de CRM con altas necesidades de integración y personalización. (CRMAgil, 2015) SalesLogix puede ser utilizado en procesos tan básicos como la construcción y mantenimiento de una base de datos de clientes, hasta procesos de negocio altamente complejos en áreas de Mercadeo Relacional, Automatización de Fuerzas de Ventas, Procesos de Venta, Soporte y Servicio al Cliente. (CRMAgil, 2015) SalesLogix cuenta con una arquitectura totalmente abierta, que permite una integración fácil y rápida con cualquier tipo de aplicaciones o servicios, de esta manera se logra centralizar la información de todos los departamentos y sistemas de la organización que lo utiliza. (Ver Figura 7) 26 Figura 7. Arquitectura del CRM SalesLogix. 2.2. Aplicaciones Web Shklar & Rosen (2003) definen una aplicación web como una aplicación cliente- servidor que usa un navegador web como su cliente, y presta servicios a través de distintos servidores, distribuidos en Internet o una red privada. Además, puede presentar contenido dinámico, basado en los parámetros de la solicitud. Frecuentemente, las aplicaciones web tienen aspectos de seguridad, interacción con los usuarios, y pueden almacenar y actualizar información, con controles de acceso y soporte de transacciones en línea. Estas aplicaciones se han vuelto populares en los últimos tiempos, debido a lo práctico del navegador web como un cliente ligero, así como la facilidad que existe para su mantenimiento y actualización, sin que ello implique una distribución o reinstalación del software, en miles de equipos clientes. 27 2.2.1. Arquitectura Cliente Servidor Las aplicaciones web funcionan bajo la arquitectura cliente-servidor, tecnología que proporciona al usuario final, un acceso transparente a las aplicaciones, datos, servicios de cómputo o cualquier otro recurso del grupo de trabajo, en múltiples plataformas. El modelo soporta un medio ambiente distribuido, en el cual los requerimientos de servicio, hechos por las estaciones de trabajo o clientes, son realizados por otros computadores, llamados servidores. Las interacciones son iniciadas por el cliente, al momento en que se solicitan los recursos al servidor. Mediante el protocolo HTTP, el servidor recibe la petición, se encarga de buscar el recurso y lo devuelve utilizando el mismo protocolo. (Rouse, s.f.) (Ver Figura 8) Figura 8. Arquitectura Cliente/Servidor. 28 2.2.2. Características de las Aplicaciones Web  Compatibilidad multiplataforma: las aplicaciones web tienen un camino mucho más sencillo para la compatibilidad multiplataforma que las aplicaciones de software descargables. Varias tecnologías, incluyendo Java, Flash, ASP y AJAX, permiten un desarrollo efectivo de programas, soportando todos los sistemas operativos principales.  Actualización: las aplicaciones basadas en web están siempre actualizadas con la última versión disponible, sin requerir que el usuario tome acciones pro-activas, y sin la necesidad de llamar la atención del usuario o interferir con sus hábitos de trabajo, con el pretexto de que se van a iniciar nuevas descargas y procedimientos de instalación.  Acceso Inmediato: la mayoría de las aplicaciones basadas en web no necesitan ser descargadas, instaladas y configuradas.  Facilidad de prueba: no habrá más obstáculos para realizar pruebas sencillas y efectivas a las herramientas y aplicaciones desarrolladas, antes de realizar una operación que afecte la realidad; como, por ejemplo, cargar una tarjeta de crédito para pagar una compra.  Menor requerimiento de memoria: las aplicaciones basadas en web tienen menos demanda de memoria RAM, en el equipo del usuario final, en comparación con los programas instalados localmente. Al residir y correr en los servidores del proveedor, esas aplicaciones usan, en muchos casos, la memoria de las computadoras en las que ellas residen, dejando más espacio para correr múltiples aplicaciones en el equipo cliente, sin incurrir en frustrantes deterioros del rendimiento.  Datos online: con el desplazamiento de las aplicaciones locales, hacia aquellas basadas en la web, los datos que se creen también van a necesitar 29 experimentar profundos cambios; ya que estarán en constante movimiento dentro de la red, y al alcance de todo el mundo, incluso el de personas inescrupulosas.  Múltiples usuarios concurrentes: las aplicaciones basadas en web pueden ser utilizadas por múltiples usuarios en un mismo instante de tiempo. No hay ya necesidad de compartir pantallas o enviar instantáneas. Ahora múltiples usuarios pueden ver, e incluso editar, el mismo documento, de manera conjunta.  Los datos son más seguros: Si bien la ruptura de discos no va a desaparecer, es probable que los usuarios escuchen mucho menos del tema. A medida que las compañías se hagan cargo del almacenamiento de los datos del usuario, las granjas de almacenamiento de datos redundantes será la norma más que la excepción y los usuarios van a tener mucho menos riesgo de perder su información debido a una ruptura de disco impredecible o a un virus de la computadora. Las compañías que proveen aplicaciones basadas en web van a brindar amplios servicios de resguardo de datos, ya sea como una parte integral del servicio básico o como una opción paga.  Diferentes lenguajes para desarrollar: una vez que las aplicaciones han sido separadas de computadoras locales y sistemas operativos específicos, pueden ser escritas en prácticamente cualquier lenguaje de programación. 2.2.3. Tecnologías del lado del cliente Las tecnologías del lado del cliente son todos aquellos lenguajes, scripts o convenciones que son ejecutados en la máquina local del usuario, normalmente por el navegador web y no necesitan intervención alguna del servidor para cumplir sus funciones. 30 2.2.3.1. HTML HTML, traducido como “Lenguaje de Marcas de Hipertexto”, es un lenguaje de marcado diseñado para estructurar textos y presentarlos en forma de hipertexto, que es el formato estándar de las páginas web. (Eguiluz, s.f.). El lenguaje HTML es un estándar reconocido en todo el mundo y cuyas normas son definidas por la W3C, organización dedicada a la estandarización de casi todas las tecnologías ligadas a la web. HTML utiliza etiquetas o marcas, que consisten en breves instrucciones de comienzo y final, mediante las cuales se determina la forma en la que debe aparecer en el navegador, el texto, las imágenes y los demás elementos, en la pantalla del computador. Figura 9. Representación de un documento HTML como DOM. Estas etiquetas son organizadas por el navegador en forma de un árbol jerárquico a través del Modelo de Objetos del Documento (DOM, por sus siglas en inglés), que permite a los usuarios y desarrolladores el acceso a estas etiquetas o 31 estructuras con la finalidad de actualizar, agregar o eliminar contenido de ella. (Ver Figura 9) 2.2.3.2. Hojas de estilo en cascada Las hojas de estilo en cascada (CSS, por sus siglas en inglés) son un mecanismo utilizado para definir el aspecto y la presentación de documentos escritos en HTML, separando el contenido de la presentación. Este determina como deben ser estructurados, en un documento, los elementos a desplegarse en una pantalla, e incluso cómo debe ser interpretada la información, a través de cualquier dispositivo de lectura (W3C-a, 2011). En consecuencia, CSS puede mejorar la accesibilidad de un documento, así como puede proveer un formato similar entre dos o más documentos distintos. Todos los elementos HTML pueden ser considerados como cajas. Figura 10. Modelo de cajas. El término “modelo de cajas” se utiliza cuando se habla sobre el diseño y la disposición de los elementos. Este modelo es esencialmente una caja que se envuelve 32 alrededor de los elementos HTML, y se compone de: márgenes, bordes, relleno y contenido. El modelo de caja permite colocar un borde alrededor de elementos y situar los mismos en una posición que dependa de la ubicación de otros elementos diferentes. (Ver Figura 10) La apariencia final de un elemento puede ser especificada en diferentes lugares, lo cual hace a CSS una herramienta muy poderosa, pero puede agregar complejidad, a la hora de depurar el código. Los estilos relacionados con el documento pueden estar especificados en tres formas: en un archivo externo, en una definición al comienzo del documento o en un elemento específico dentro de una etiqueta del documento HTML. Entre las ventajas de utilizar CSS están:  Control centralizado de la presentación de un sitio web completo, con lo que se agiliza, de forma considerable, la actualización del mismo. CSS permite, a los desarrolladores web, controlar el estilo y el formato de múltiples páginas, al mismo tiempo. Cualquier cambio, en el estilo marcado para un elemento, afectará a todas las páginas vinculadas a esa CSS en las que aparezca el mismo.  Los navegadores permiten, a los usuarios, especificar su propia hoja de estilo local, con lo que aumenta considerablemente la accesibilidad. Por ejemplo, personas con deficiencias visuales pueden configurar su propia hoja de estilo, para aumentar el tamaño del texto o remarcar más los enlaces.  Una página puede disponer de diferentes hojas de estilo, según el dispositivo que la muestre o incluso a elección del usuario. Por ejemplo, para ser impresa, mostrada en un dispositivo móvil, o "leída" por un sintetizador de voz. 33  El documento HTML, en sí mismo, es sencillo de entender y conserva un reducido tamaño siempre y cuando, para su construcción, no se utilice estilo en línea. 2.2.3.3. Javascript JavaScript es un lenguaje de programación interpretado y ejecutado directamente por el navegador, con una sintaxis parecida a Java. Se utiliza, principalmente, para crear páginas web con efectos y eventos, en otras palabras, páginas web interactivas. Está basado en prototipos, es dinámico, imperativo, funcional y responde a paradigmas de programación orientado a objetos. Su principal objetivo es interactuar con los elementos del documento HTML, utilizando el Modelo de Objetos del Documento (DOM, por sus siglas en inglés), permitiendo así, al desarrollador, agregar funcionalidades extra en la página. 2.2.3.4. Jquery Es una librería o framework de JavaScript que está pensada para interactuar con los elementos de una página web, por medio del árbol DOM. Esta librería permite manejar eventos, desarrollar animaciones, y agregar interacción a las páginas web, con la tecnología AJAX. (Alvarez, 2009). 2.2.3.5. AJAX AJAX (Asynchronous JavaScript And XML, en inglés) es una técnica utilizada al momento de desarrollar aplicaciones web, que permite crear aplicaciones interactivas (RIA, por sus siglas en inglés). Dichas aplicaciones se ejecutan en segundo plano, en el navegador, manteniendo una comunicación asíncrona con el servidor; de manera tal que es posible realizar cambios sobre las páginas, sin 34 necesidad de recargarlas, mejorando así la usabilidad y la velocidad de estas aplicaciones. JavaScript es el lenguaje utilizado, por excelencia, para efectuar las funciones AJAX; mientras que el acceso a los datos se realiza mediante el objeto XMLHttpRequest, disponible en todos los navegadores actuales. (Fuentes, 2015) 2.2.3.6. JSON JSON (JavaScript Object Notation, por sus siglas en inglés) es un formato ligero de intercambio de datos, y un subconjunto de la notación literal de objetos de JavaScript. JSON nació como una alternativa a XML, y su fácil uso en Javascript ha generado un gran número de seguidores de esta alternativa. Una de las mayores ventajas que tiene el uso de JSON, es que puede ser leído por cualquier lenguaje de programación; por lo tanto, puede ser usado para el intercambio de información entre diferentes plataformas tecnológicas. (Ver Figura 11) Figura 11. Representación de un objeto JSON. 2.2.4. Tecnologías del lado del servidor Una tecnología del lado del servidor es aquella que se ejecuta en el servidor web, justo antes de que se envíe la página al cliente, a través de Internet. Las tareas que se ejecutan en el servidor pueden ser: accesos a bases de datos, conexiones en red, manejo de archivos, entre otras, y así crear la página final que verá el cliente. El 35 resultado final es siempre HTML, por lo que su compatibilidad con cualquier navegador es absoluta. 2.2.4.1. PHP PHP es un lenguaje interpretado del lado del servidor que se caracteriza por su potencia, versatilidad, robustez y modularidad. Los programas escritos en PHP son embebidos directamente en el código HTML, y ejecutados por el servidor web, a través de un intérprete, antes de transferir al cliente lo que ha solicitado, en forma de código HTML puro. Cuando un archivo PHP es solicitado al servidor web, el código PHP incluido en la página HTML es ejecutado en primer lugar en el servidor y el resultado de esta ejecución se inserta en la página, en lugar del código PHP y es enviada al navegador. Por otra parte Ratschiller & Gerken (2001), enumeran las principales funciones de PHP, las más importantes son:  Funciones de correo electrónico: se puede enviar un e-mail a una persona o lista de contactos, estableciendo parámetros como el correo de procedencia, asunto y persona a responder. Otras funciones, menos frecuentes, pero de indudable utilidad para gestionar correos electrónicos, son incluidas por defecto en su librería.  Gestión de Base de Datos: ofrece interfaces para el acceso a la mayoría de las bases de datos comerciales, tales como MySQL y PostgreSQL y utiliza conectores ODBC para comunicarse con las bases de datos alojadas en sistemas Microsoft Windows, como SQL Server en cualquiera de sus versiones.  Gestión de archivos: a partir de una amplia librería de funciones para esto, PHP permite crear, borrar, mover y modificar cualquier tipo de archivo. 36 También se puede transferir archivos por FTP a partir de sentencias en PHP, protocolo para el cual este lenguaje tiene previsto gran cantidad de funciones.  Funciones de propósito general: permite el tratamiento automatizado de imágenes y la creación de botones dinámicos, es decir en los que se utilice el mismo diseño y solo se cambie el texto. También permite el desarrollo de muchas otras funciones pensadas para Internet como: el tratamiento de cookies, accesos restringidos y comercio electrónico o funciones de propósito general como: funciones matemáticas, explotación de cadenas, de fechas, corrección ortográfica, comprensión de archivos. Ratschiller & Gerken (2001) señalan como principales características de PHP:  Velocidad: en el ambiente computacional no solo es importante la velocidad de ejecución, sino además se debe evitar el uso excesivo de los recursos del sistema. PHP se integra muy bien junto a otros softwares bajo ambiente UNIX cuando se configura como un módulo de Apache, dejándolo listo para ser utilizado.  Estabilidad: la velocidad no sirve de mucho si el sistema se cae cada cierta cantidad de ejecuciones. Ninguna aplicación es 100% libre de bugs, pero teniendo de respaldo una increíble comunidad de programadores y usuarios es mucho más fácil resolverlos. PHP utiliza su propio sistema de administración de recursos y dispone de un sofisticado método de manejo de variables, conformando un sistema robusto y estable.  Seguridad: el sistema debe proveer protección contra ataques externos, por lo cual PHP provee diferentes niveles de seguridad y estos pueden ser configurados desde el archivo de configuración. 37  Simplicidad: a los programadores, se les debe dar la facilidad de escribir código de calidad, en el menor tiempo posible. Usuarios con experiencia en C y C++ podrán utilizar PHP de manera rápida.  Conectividad: PHP dispone de una amplia gama de librerías y agregarle extensiones es muy fácil. Esto le permite a ser utilizado en muchas áreas diferentes, tales como encriptado de datos, gráficos, XML y otras. 2.2.4.1.1. Laravel Laravel es un framework open source de PHP, utilizado para el desarrollo de aplicaciones web. Fue creado por Taylor Otwell, con la finalidad de desarrollar aplicaciones de nivel "avanzado" de manera más fácil y rápida. Su filosofía es clara: el código debe ser lo más expresivo y elegante posible. (Rees & Laguna, 2013). Características de Laravel  Convención sobre configuración: Laravel impone restricciones sobre cómo estructurar sus aplicaciones web. Sorprendentemente, estas limitaciones hacen que sea más fácil la creación de las mismas.  Modularidad: Laravel se ha construido utilizando más de 20 librerías diferentes fuertemente integradas con el gestor de dependencias Composer. Adicionalmente, con este mismo gestor, se puede agregar cualquier tipo de librería que el equipo de desarrollo necesite, aunque no esté, por defecto, incluida en el framework.  Enrutamiento (routing): Laravel proporciona una extensa flexibilidad al momento de definir las rutas de la aplicación, inspirado en la filosofía de los micro-frameworks Sinatra y Silex. Además, durante el desarrollo, es posible adjuntar funciones de filtro que se ejecuten en rutas específicas. 38  Gestor de configuración: frecuentemente, la aplicación se ejecutará en diferentes entornos. Esto quiere decir que tanto la base de datos, como las credenciales y los dominios serán diferentes, si se ejecutan en el entorno local o en los servidores de producción. Laravel nos permite definir configuraciones separadas, para cada uno de los entornos, sin afectar el código de la aplicación.  Confeccionador de consultas y ORM: al instalarlo, Laravel incluye un constructor de consultas; que permite realizar consultas, a la base de datos, con una sintaxis PHP de métodos enlazados, en lugar de tener que escribir la sentencia SQL completa. Además, proporciona un mapeo de objeto- relacional (ORM, por sus siglas en inglés) llamado Eloquent, que permite definir modelos de datos compatibles con diferentes bases de datos, tales como: PostgreSQL, SQLite, MySql, MS SQL Server, entre otras.  Confeccionador esquema, migraciones y repoblaciones: inspirado por la filosofía Rails, las migraciones permiten definir un esquema de base de datos dentro de PHP, y mantener un registro de los cambios. Las repoblaciones (Seeding) permiten poblar las tablas seleccionadas de una base de datos, una vez realizada la migración, para, de esta forma, llenar las tablas con datos de pruebas.  Motor de plantillas: Laravel integra el motor de plantillas Blade, un lenguaje ligero con el cual se pueden crear diseños anidados, con bloques predefinidos, en los que el contenido se inserta dinámicamente dentro de las etiquetas HTML.  Email: con la clase Mail, que es un derivado de la librería SwiftMailer, Laravel ofrece una forma sencilla de enviar correos electrónicos, con contenido HTML y archivos adjuntos. 39  Autenticación: Laravel integra las herramientas necesarias para crear, en toda aplicación, un formulario de registro y autenticación e incluso envió de contraseñas, a usuarios que la hayan olvidado o perdido. Modelo Vista Controlador Según Romero & González (2012), el Modelo Vista Controlador, es un patrón de arquitectura de software que separa los datos de una aplicación, la interfaz de usuario, y la lógica de control en tres componentes distintos: el modelo, la vista y el controlador. La vista es la interfaz de usuario que muestra la información proveniente del modelo y que representa el dispositivo de entrada que se usa para modificarlo y finalmente, el controlador es lo que une a los dos componentes anteriores. Al interactuar con una aplicación desarrollada con Laravel, el navegador envía una petición al servidor web, y esta se resuelve con el motor de rutas de Laravel. El motor de rutas de Laravel recibe la solicitud, y la redirige al método o controlador apropiado para trabajar con esa URL. En algunos casos, el controlador enviara inmediatamente una vista, que no es más que una plantilla Blade convertida a HTML, o como sucede normalmente, para sitios dinámicos, el controlador interactúa con un modelo, devolviendo un objeto PHP que representa un elemento de la aplicación (como un usuario, una entrada de blog, entre otros). Después de invocar el modelo, el controlador renderiza el elemento del modelo junto a una plantilla Blade, y devuelve la página web completa al navegador del usuario. Laravel promueve la práctica de mantener bien separados los modelos, las vistas y los controladores, almacenando el código para cada uno de estos componentes como archivos aislados en directorios diferentes. (Ver Figura 12) 40 Figura 12. Modelo, Vista, Controlador en Laravel. 2.2.4.2. Bases de Datos Según De Miguel (2003) una base de datos se puede definir como: “un conjunto exhaustivo, no redundante de datos estructurados, organizados independientemente de su utilización y su implementación en máquina, accesibles en tiempo real y compartibles por usuarios concurrentes que tienen necesidad de información diferente y no predecible en el tiempo” Por otra parte, Chong, y otros (2010) definen una base de datos como un repositorio de datos estructurado, diseñado para almacenar datos de forma eficiente, cuya principal ventaja es que múltiples usuarios puedan acceder a ellas al mismo tiempo, de forma ordenada y oportuna. Un sistema manejador de bases de datos (SMBD, por sus siglas en inglés) es un conjunto de programas que conviven entre sí, con el fin de facilitar la creación, edición y mantenimiento a una base de datos. Se componen de un lenguaje de manipulación de datos (DML, por sus siglas en inglés), un lenguaje de definición de 41 datos (DDL, por sus siglas en inglés) y un lenguaje para realizar consultas, como SQL. (Chong, y otros, 2010) Funciones Principales:  Abstracción: los SMBD ahorran, a los usuarios, detalles acerca del almacenamiento físico de los datos. Da lo mismo si una base de datos ocupa uno o miles de archivos, este hecho es completamente irrelevante para el usuario final.  Independencia: la independencia de los datos consiste en la capacidad de modificar el esquema ya sea físico o lógico, de una base de datos, sin tener que realizar cambios en las aplicaciones que la usan.  Seguridad: la información almacenada en una base de datos puede llegar a tener un gran valor. Los SMBD garantizan que esta información se encuentre segura frente a usuarios malintencionados. Para ello, disponen de un complejo sistema de permisos y grupos de usuarios que permiten definir diversas categorías y jerarquías.  Integridad: Se trata de adoptar las medidas necesarias para garantizar la validez de los datos almacenados. Es decir, se trata de proteger los datos ante fallos de hardware, datos erróneos introducidos por usuarios, o cualquier otra circunstancia capaz de corromper la información almacenada.  Respaldo y recuperación. los SMBD ofrecen una forma eficiente de realizar copias de respaldo para la información almacenada en ellos, y de restaurar, a partir de estas copias, los datos que se hayan podido perder.  Control de la concurrencia. En la mayoría de entornos, lo habitual es que muchas personas accedan a una base de datos, bien para recuperar información, bien para almacenarla. Es frecuente que dichos accesos se 42 realicen de forma simultánea. Por tanto, un SMBD debe controlar este acceso concurrente a la información y evitar en graves inconsistencias. 2.2.4.2.1. MySQL MySQL es un sistema manejador de bases de datos relacional, multihilo y multiusuario; desarrollado, distribuido y mantenido por Oracle Corporation, desde el año 2009. Provee un esquema de licenciamiento dual, que permite descargar, modificar y usar gratuitamente MySQL, bajo una licencia GNU, para proyectos sin fines de lucro, mientras que si se utiliza para aplicaciones privadas, o con fines comerciales, requiere adquirir una licencia que permita su uso. Una base de datos relacional archiva los datos en tablas separadas y las relaciona entre sí, mediante claves e índices; esto permite mayor velocidad y flexibilidad al momento de realizar consultas, y su diseño multihilo le permite soportar una gran carga y de forma eficiente. La historia del MySQL se remonta a principio de los años 80, cuando Michel Widenius, un joven programador, realizaba aplicaciones complejas en lenguaje BASIC y al no encontrar un sistema de almacenamiento que resultara satisfactorio, pensó en construir uno propio. Desde aquellos tiempos, MySQL ha evolucionado significativamente. En la actualidad, es el sistema manejador de base de datos más usado en el mundo del software libre, debido a su gran rapidez y facilidad de uso. (Gilfillan, 2003) Una de las principales características de MySQL es el hecho de permitir el uso del sistema por múltiples usuarios, simultáneamente, y vía web; además de dar la posibilidad de ser usado con diferentes lenguajes de programación. (Gilfillan, 2003) MySQL es reconocido por integrar el motor no transaccional MyISAM, el cual permite la búsqueda de datos de forma muy rápida, en comparación con otros SMBD. 43 Normalmente, existe baja concurrencia en la escritura de datos para aplicaciones web, sin embargo, en lectura de datos, el entorno es intensivo; lo que hace a MyISAM ideal para este tipo de aplicaciones. (Gilfillan, 2003) 2.2.4.2.2. SQLServer Microsoft SQL Server es un sistema manejador de base de datos relacional, orientado a medianas y grandes empresas, y esta solo disponible para sistemas operativos Windows. Es propiedad de la empresa Microsoft, y utiliza TSQL (una implementación del lenguaje SQL) como lenguaje de consultas. (SQL Server 2014, s.f.) SQL Server proporciona servicios de recopilación, réplica, y análisis de datos. También, integra sistemas de procesamiento analítico (OLAP, por sus siglas en inglés). SQL Server proporciona una gran colección de herramientas gráficas y asistentes que guían, a los administradores de las bases de datos, en sus tareas diarias, tales como: establecer copias de seguridad, réplica de datos entre servidores y ajuste del rendimiento de una base de datos. (SQL Server 2014, s.f.). Muchos entornos de desarrollo soportan SQL Server, incluyendo Visual Studio de Microsoft y productos relacionados; en particular, los productos y servicios .NET. Entre las principales características de SQL Server, se encuentran:  Soporte OLAP y OLTP.  Interfaz gráfica de administración con asistentes.  Posibilidad de trabajar en modo cliente-servidor, en donde el SMBD provee al cliente de servicios de conexión, por medio de terminales.  Facilidad para administrar información desde otros servidores de datos. 44 2.2.5. Servicios Web El consorcio W3C define los servicios web como sistemas software, diseñados para soportar interacciones máquina a máquina, sobre una red. Los servicios web suelen ser una Interfaz de Programación de Aplicaciones (API, por sus siglas en inglés), que ejecutados en el sistema que los aloja y que pueden ser utilizados dentro de una red (principalmente Internet). La definición propuesta de los servicios web alberga tipos diferentes de sistemas, pero en la actualidad, el caso común de uso, se refiere a clientes y servidores que se comunican mediante mensajes JSON y siguen el estándar REST. 2.2.5.1. Servicios Web REST La transferencia de estado representacional (REST, por sus siglas en inglés) es un estilo de arquitectura de software para sistemas distribuidos en la web. El término fue introducido en la tesis doctoral de Roy Fielding en 2000, quien es uno de los principales autores de la especificación de HTTP. El objetivo que se persigue es la construcción de aplicaciones distribuidas e inspiradas en las características de la web, transmitiendo datos específicos de un domino sobre el protocolo HTTP, sin una capa adicional. Una transacción HTTP consta de cuatro métodos de acceso:  GET: para consultar y leer recurso.  POST: para crear recursos.  PUT: para editar recursos.  DELETE: para eliminar recursos. Estos métodos pueden ser comparados con operaciones SQL y otras analogías como puede verse en la Tabla 1. 45 Tabla 1. Comparación de los acciones HTTP. Acción HTTP SQL Entorno Windows Crear PUT Insert Pegar Leer GET Select Copiar Actualizar POST Update Actualizar Eliminar DELETE Delete Eliminar 46 CAPÍTULO III MARCO METODOLÓGICO. Una metodología de desarrollo de software se define como: “un conjunto de procedimientos, técnicas, herramientas, y un soporte documental que ayuda a los desarrolladores a producir nuevo software” (Piattini & De Miguel, 2001) Con una buena metodología, se pretende reducir costos y retrasos de proyectos, así como mejorar la calidad del software; por lo que es importante seleccionar aquella que pueda adaptarse a todos los requerimientos que exija el desarrollo. Igualmente, una metodología debe ejecutar las siguientes tareas:  Dividir un proyecto en etapas.  Gestionar las actividades que se llevan a cabo en cada etapa.  Establecer las restricciones que deban aplicarse  Determinar las técnicas y herramientas a emplear.  Controlar y gestionar el proyecto. Durante el desarrollo de esta investigación, se utilizó la metodología BPM:RAD (“Rapid Analysis & Design”) para el análisis, diseño y modelado de los procesos de negocio de Venamcham, partiendo desde un tratamiento netamente teórico. Como mencionan Laurentiis, y algunos otros autores (2011), con esta metodología, se busca determinar los procesos estratégicos, documentarlos, crear un mapa de procesos de toda la entidad y definir cualquier otra información que permitiese “entender la empresa”, bajo este nuevo punto de vista que es BPM, sin cometer uno de los principales errores al momento de iniciar un proyecto de este tipo; 47 que es empezar “con la diagramación, el modelado de cajas y líneas de conexión”, sin entender los procesos de negocio estratégicos de la empresa. En vista de que también es indispensable implementar un software que permita automatizar el proceso de inscripción de eventos; se utilizó Scrum como metodología ágil de desarrollo de software, para realizar la gestión de esta etapa. El resultado es un software realizado en menos tiempo y que se ajusta a las necesidades de los procesos de negocio de la organización. 3.1. BPM-RAD BPM-RAD - Rapid Analysis & Design es una metodología concreta y práctica, para el modelado y diseño de procesos orientados a la automatización con tecnologías BPM. Su enfoque y sus técnicas facilitan y estimula el trabajo en equipo con los expertos de negocio, los analistas y los arquitectos de procesos. (Laurentiis, y otros, 2011) Es una metodología versátil, independiente del software con el cual se automatizarán los procesos diseñados. Las siguientes son ventajas de aplicar BPM-RAD:  Entender y simplificar los procesos del negocio.  Modelar y diseñar los procesos en su totalidad, con recursos, servicios, datos, reglas de negocio e indicadores.  Diseñar procesos orientados a tecnologías BPM, independientemente del software que se implemente en dicho diseño.  Lograr una gestión del cambio más rápida y efectiva para el desarrollo de capacidades y conocimiento en gestión por procesos y tecnologías BPM en la organización. 48  Asegurar la calidad de los modelos y diseños. La Metodología BPM-RAD está compuesta por tres fases: 3.1.1. Análisis Lógico Se identifican y modelan, al detalle, los procesos de negocio que conforman el alcance del proyecto. Esto se realiza de manera lógica, es decir, no se modelan los aspectos físicos de los procesos, quien lo hace, cómo se hace, con que aplicaciones o dispositivos que se usaran. La idea es concentrarse únicamente en el “qué” y el “porqué”, obteniendo así la perspectiva esencial del negocio. 3.1.2. Diseño Preliminar Se obtiene el modelo de funcionamiento de los procesos, transformándolos desde la visión lógica (Fase 1) a la visión física (Fase 2), la cual plasma, en un documento o diagrama, el funcionamiento de los procesos, tomando en consideración las tecnologías de las que se disponga, la organización actual y futura, y la resolución de problemas y oportunidades de mejora. En esta fase, también se identifican los primeros servicios funcionales, con el fin de comenzar a visualizar cuáles son los servicios que sustentan y/o sustentarán a los procesos de negocio. Son funcionales porque aún no se determina de qué manera se van a implementar, si ya existen o no, y si habrá que desarrollarlos o contratarlos. Al finalizar esta fase, se analizará y se determinará la mejor estrategia de desarrollo e implantación de dichos servicios. 3.1.3. Diseño BPM Esta fase tiene como objetivo: diseñar cada uno de los procesos estudiados en las fases anteriores, considerando que dichos procesos serán automatizados con diferentes tecnologías. La meta es dejar preparado el diseño BPM de los procesos, 49 con todos los detalles necesarios para que el equipo de desarrollo pueda implementarlo de manera rápida y sencilla. 3.1.4. Sesiones RAD Las sesiones RAD son un método de trabajo para acelerar y asegurar la calidad de las fases de modelado y de diseño de procesos BPM. Las sesiones RAD se basan en reuniones, de corto periodo de tiempo, que buscan fomentar el trabajo en equipo; haciendo participes al personal del negocio, a los analistas de procesos y los analistas funcionales. (Laurentiis, y otros, 2011) Las sesiones RAD tienen la siguiente dinámica de trabajo en equipo:  Los usuarios proveen parte de su experiencia y conocimientos.  Un enfoque metodológico y una agenda proveen la estructura.  El moderador experto en el método (técnicas, herramientas y dinámica de grupos) guía al equipo de trabajo hacia el logro de los objetivos.  La dinámica de grupo estimula la creatividad, con un “feedback” constante.  Todos los integrantes de las sesiones aportan conocimientos e ideas.  El analista de procesos recoge, simultáneamente, los modelos, los requerimientos y los diseños, en la herramienta de modelado. 3.2. Scrum Scrum es un marco de trabajo (framework) utilizado para gestionar y desarrollar software, que data desde principios de los años 90. Es un proceso iterativo e incremental, utilizado comúnmente en entornos relacionados con el desarrollo ágil de software, donde se necesita obtener resultados rápidamente, los requisitos son 50 cambiantes y la innovación, la competitividad, la flexibilidad y la productividad son fundamentales. Como se puede observar en la Figura 13, el marco de trabajo Scrum está compuesto por equipos, roles, eventos, artefactos y reglas asociadas. Cada componente dentro del marco de trabajo sirve a un propósito específico y es esencial para su uso exitoso. (Schwaber & Sutherland, 2013) Figura 13. Infografía de la Metodología Scrum. Con Scrum, la idea principal es: “comenzar a trabajar desde el primer momento”, para que el cliente distinga los avances y quede satisfecho con el proyecto en ejecución (Rubin, 2012) 3.2.1. Características de Scrum Una iteración (Sprint) es un período fijo de tiempo, de una a cuatro semanas, con preferencia hacia los intervalos más cortos. En cada uno de ellos, el equipo, construirá y entregará un incremento del producto. Cada incremento es un 51 subconjunto reconocible, operativo y visiblemente mejorado del producto, que alcanza criterios de aceptación, y está construido con un nivel de calidad suficientemente alto como para ser presentado ante el cliente. Cada iteración tiene un diagrama de quemado (Burn down chart), que es un gráfico que muestra la velocidad a la que se van completando los objetivos o requisitos. Permite extrapolar si el equipo podrá completar el trabajo en el tiempo estimado (Ver Figura 14). Figura 14. Ejemplo de un Burn Down Chart. Scrum es un proceso de equipo, e incluye tres roles:  El dueño del producto (Product Owner), es quien tiene la responsabilidad de decidir qué trabajo deberá ser realizado, es el único responsable de delinear el producto; con la más alta calidad posible, en la menor cantidad de tiempo. Esto se logra gestionando el flujo de trabajo hacia el equipo, seleccionando y refinando ítems de la pila de producto (Product Backlog). 52  El facilitador (Scrum Master) actúa como líder, ayudando al equipo y a la organización a utilizar de mejor manera el método. Debe garantizar que los participantes del proyecto sigan las reglas, los valores y principios ágiles del proceso. También debe eliminar los impedimentos que el equipo tiene en su camino para conseguir el objetivo de cada iteración y aislar al mismo de las interrupciones externas durante la ejecución de la iteración.  El equipo de desarrollo (Development Team) está compuesto por profesionales que hacen el trabajo necesario para poder entregar el incremento del producto. Se auto-organizan para realizar su trabajo, y deben estar disponibles tiempo completo para el proyecto. Scrum incluye tres artefactos esenciales:  La pila de producto (Product Backlog), es una lista ordenada de ideas o requerimientos para el producto, mantenida en el orden en que se espera llevarlas a cabo. Es la única fuente posible de requerimientos. Esto significa que todo el trabajo que realiza el equipo de desarrollo proviene del ella. Cada una de las tareas que se incluyen en la pila de producto, incluye una descripción, una estimación y un valor.  La pila de iteración (Sprint Backlog) es la lista de ítems refinados de la pila de producto, que, han sido elegidos y que serán desarrollados en la iteración actual. Refleja o pronostica qué trabajo puede ser completado en el tiempo que dura la iteración.  El incremento de producto (Product Increment) es el resultado de cada iteración, una versión integrada del producto, con en un nivel suficientemente alto de calidad para ser mostrado al cliente. 53 CAPÍTULO IV MARCO APLICATIVO. En este capítulo, se describe el marco aplicativo del presente Trabajo Especial de Grado. Se explica, paso a paso, cómo se llevó a la práctica el conjunto de conceptos establecidos en los capítulos I y II, para ayudar a lograr los objetivos planteados en esta investigación. Para el análisis y diseño de procesos, se aplicó la metodología BPM-RAD. Para implementar la aplicación web, que permitiría automatizar el proceso de inscripción de eventos de Venamcham, se aplicó SCRUM como metodología ágil de desarrollo. A continuación, siguiendo el ciclo de vida de BPM, se detallan cada una de las fases, y sus entregables: Tabla 2. Fases y entregables del Trabajo Especial de Grado. Fase 1 – Análisis de proceso Objetivos: Recolectar toda la información importante, concerniente a los procesos de negocios de la institución cliente. Razón Fundamental: Es necesario definir, de manera clara, el alcance del proyecto, e identificar funcionalidades clave para el futuro sistema. Artefactos:  Descripción del Proceso  Identificación de Roles y Tareas  Documento de Análisis de Requerimientos de Procesos. Fase 2 – Diseño de procesos Objetivos: Realizar el modelo del proceso, en notación BPMN. Razón Fundamental: El principal objetivo de BPMN es proporcionar una notación estándar que sea fácilmente legible y entendible, para todos los involucrados e interesados del negocio. 54 Tabla 3. Fases y entregables del Trabajo Especial de Grado. (Continuación) Fase 2 – Diseño de procesos Artefactos: Modelos de los procesos en Notación BPMN Fase 3 – Implementación Objetivos: Realizar la implementación del proceso, utilizando las tecnologías acordadas. Razón Fundamental: Se debe desarrollar y definir el código apropiado, y realizar todas las integraciones necesarias, para la correcta automatización del proceso. Artefactos:  Aplicación web. Fase 4 Pruebas, monitoreo y optimización Objetivos: Ejecutar el sistema en un ambiente controlado, y realizar las pruebas necesarias para garantizar su correcto funcionamiento. Razón Fundamental: Es necesario verificar que el sistema esté funcionando como fue planificado y que no existen, en él, errores funcionales. Artefactos:  Documento de plan de Pruebas y encuestas de aceptación. 4.1. Fase 1 – Análisis del proceso 4.1.1. Descripción del Proceso El proceso de inscripción de eventos, en el transcurso de su desarrollo, consta de 3 etapas claves. A continuación, se describirá cada una de ellas: 55 Inscripción en el Evento Esta etapa inicia cuando la Gerencia de Logística y Eventos y sus integrantes crean el evento en la aplicación SalesLogix CRM (Ver Figura 15), y proceden a enviar las invitaciones manualmente, vía correo electrónico, y mediante una lista de correo. Figura 15. Creación de un nuevo evento en SalesLogix CRM. El correo contiene un material publicitario (Ver Anexo 2) y un archivo adjunto en formato Microsoft Excel, que representa a una planilla de inscripción para un evento determinado (Ver Anexo 3). Esta planilla debe ser llenada por un representante autorizado de la empresa, y devuelta al departamento de eventos de Venamcham. 56 Verificación de la Inscripción Después que los usuarios han enviado la planilla de inscripción, los integrantes de la Gerencia de Logística y Eventos verifican que la información enviada a través de la misma sea correcta, y proceden a guardar en el CRM SalesLogix la información de los ejecutivos que han confirmado su participación en el evento. (Ver Figura 16) Figura 16. Captura de pantalla. Listado de los ejecutivos inscritos en el evento. Validación de Ingreso al Evento El día del evento, el listado de los ejecutivos participantes es exportado en formato Microsoft Excel, y trasladado al sitio donde se efectuara el evento. El personal de protocolo de Venamcham debe realizar, de forma manual, un proceso de validación a cada uno de los asistentes. 57 Una vez finalizado el evento, la Gerencia de Logística y Eventos y sus integrantes deben actualizar, en la aplicación SalesLogix CRM, el estatus de cada participante; con el objetivo de emitir los reportes de cierre del evento. (Ver Figura 17) Figura 17. Captura de pantalla. Relación de Cierre. 58 4.1.2. Roles y Tareas de Usuarios Tabla 4. Roles y tareas del proceso de inscripción de eventos. Rol Funciones y tareas Usuario/Cliente Recibir la invitación, vía correo electrónico. Completar la planilla de inscripción. Enviar la planilla de inscripción, con la información pertinente. Recibir confirmación/rechazo de inscripción. Presentar datos personales, en la entrada del evento. Analista de la Gerencia de Logística y Eventos. Enviar las invitaciones, vía correo electrónico. Validar la información de la planilla recibida. Actualizar, en el CRM, la información de la planilla. Inscribir a los usuarios, en el evento. Enviar confirmación/rechazo de inscripción. Confirmar la entrada del usuario al evento. Generar reporte de cierre. Después de haber comprendido el proceso, establecido los roles y las tareas, se procedió a completar el documento de análisis de requerimiento de procesos (Ver Anexos 4, 5 y 6); de acuerdo a los requerimientos funcionales y no funcionales establecidos por la Gerencia de Logística y Eventos de Venamcham. 4.2. Fase 2 - Diseño del proceso Bizagi Modeler fue el software utilizado para realizar el modelo del proceso. En las figuras 19, 20 y 21, se observa el modelo del proceso de inscripción de eventos, donde intervienen los diferentes actores, y se encuentran elementos de notación BPMN, actividades automáticas e interactivas, eventos, puertas de enlaces y flujos. 59 Figura 18. Modelo en BPMN del proceso de inscripción. 60 Figura 19. Modelo en BPMN del proceso de validación de inscripción. 61 Figura 20. Modelo en BPMN del proceso de ingreso al evento. 62 Figura 21. Modelo en BPMN del Subproceso: Consultar RIF Figura 22. Modelo en BPMN del Subproceso: Verificar solicitud 63 4.3. Fase 3 - Implementación Esta fase consiste en construir el sistema, con las especificaciones obtenidas en las fases anteriores. Para tener mejor control sobre los avances del desarrollo, se utilizó el marco de trabajo Scrum. Este es un proceso iterativo e incremental, utilizado comúnmente, en entornos relacionados con el desarrollo ágil de software. Para poder utilizar Scrum de manera correcta, se deben establecer los roles y características requeridos por la metodología. Ellos se definen a continuación: El dueño del producto (Product Owner), quien tiene la responsabilidad de decidir qué trabajo será realizado; en este caso particular, está representado por Tony Alberto Castillo, Jefe de Proyectos y Aplicaciones, en Venamcham. Es el encargado de dirigir el proyecto, y establecer comunicación directa con la Gerencia de Logística y Eventos de la empresa. El facilitador (Scrum Master), que actúa como líder, ayudando al equipo y a la organización a hacer el mejor uso de Scrum; en este caso particular, está representado por el Msc. Wilfredo Rangel. Los miembros del equipo de desarrollo (Development Team); en este caso particular, están representados por el Br. Jose A. Bianco y el Br. Fernando R. Gómez. Se planificaron 8 iteraciones (Sprints), con duración de 1 semana por iteración. Al final de cada una, al dueño del producto (Product Owner), se le presentó el incremento de producto (Product Increment); quien lo revisó, para otorgarle su aval. 4.3.1. Perfiles de Usuarios Siguiendo los roles establecidos en la Fase 1, se pasó a conformar los perfiles de los usuarios del sistema. Cliente: Este usuario podrá visualizar las páginas informativas del sitio web, y realizar la inscripción, mediante el formulario pertinente. 64 Analista: Este usuario deberá usar sus credenciales para ingresar al panel de control del sistema y adicionalmente podrá aprobar o rechazar inscripciones, así como ver o imprimir reportes relacionados a un evento determinado. Administrador: Este usuario deberá usar sus credenciales para ingresar al panel de control del sistema y adicionalmente podrá aprobar o rechazar inscripciones, así como ver o imprimir reportes relacionados a un evento determinado y gestionar usuarios. En la Tabla 5 se resume las principales actividades que puede realizar cada tipo de usuario. Tabla 5. Perfiles de Usuario del Sistema Actividades Tipo de usuario A d m in is tr a d o r A n a li s ta C li e n te Visualizar las páginas informativas del sitio Web. X X X Leer y descargar documentos digitalizados, en la sección de ayuda. X X X Generar inscripción a un evento. X X X Solicitar ayuda, a través de la sección de contacto. X X X Ingresar al panel de control del sistema. X X 65 Tabla 6. Perfiles de Usuario del Sistema (Continuación) Actividades Tipo de usuario A d m in is tr a d o r A n a li s ta C li e n te Verificar solicitudes activas. X X Aprobar solicitudes. X X Rechazar solicitudes. X X Auditar solicitudes aprobadas o rechazadas. X X Ver reportes de contactos inscritos. X X Ver o imprimir reportes de asistencia. X X Crear usuarios. X Deshabilitar usuarios. X 4.3.2. Aplicación de Scrum Product Backlog A partir del levantamiento de la información y la solución propuesta, en la Tabla 7 se muestran las historias de usuario, requerimientos y bugs relevantes del sistema de inscripción de eventos Venamcham. Estas historias podrán ser seleccionadas para su implementación en cualquier iteración, dependiendo de la carga de trabajo actual y los puntos de valor. 66 Tabla 7. Product Backlog Ítem Puntos Nombre 1 5pts Instalación y configuración del ambiente de ejecución 2 8pts Modelo de datos del sistema 3 10pts Vista del formulario de inscripción 4 3pts Hojas de estilos del formulario de inscripción 5 20pts Creación de la conexión con SQLServer 6 10pts API del sistema para el envío y recepción de datos del formulario 7 5pts Vista de ingreso al sistema 8 10pts Controlador principal del formulario 9 5pts Correcciones de comportamiento del formulario de inscripción 10 1pts Validación de los campos del formulario 11 1pts Creación de las plantillas de correo 12 1pts Controladores de autenticación de usuarios 13 5pts Controlador para generar código QR de ingreso 14 1pts Cambios en el CSS de la vista del formulario 15 6pts Integración a nivel de base de datos con el CRM SalesLogix 16 3pts Implementación de la tabla de descuentos 67 Tabla 8. Product Backlog (Continuación) Ítem Puntos Nombre 17 10pts Vista de solicitudes activas 18 10pts Vista de revisión de solicitud 19 15pts Implementación de funciones de aprobación y rechazo de solicitud de inscripción 20 5pts Vista de solicitudes aprobadas 21 5pts Controlador de solicitudes aprobadas 22 5pts Vista de solicitudes rechazadas 23 5pts Controlador de solicitudes aprobadas 24 5pts Vista de contactos que realizaron la inscripción 25 5pts Controlador de contactos que realizaron la inscripción 26 5pts Vista de verificación del código QR 27 5pts Controlador de verificación del código QR 28 5pts Vista de control de asistencia 29 5pts Controlador de control de asistencia 30 7pts Búsqueda por RIF 31 15pts Integración Mercado Pago 32 25pts Pruebas de Software 68 Iteración 1 Meta de la iteración: configurar el ambiente de ejecución. Planificación de la iteración: las actividades resaltantes, realizadas en esta iteración, fueron: instalación y configuración del ambiente de ejecución, diseño del modelo de datos del sistema, migración del modelo de datos, al ORM de Laravel, y la creación del formulario de inscripción. Tabla 9. Revisión de la iteración 1 Revisión de la iteración Organización: Cámara Venezolana-Americana de Comercio e Industria Fecha: 03-08-2015 Proyecto: Automatización de inscripción de eventos Items: 4 Valoración: 26pts Tiempo Estimado: 20hrs Tiempo de Ejecución: 22hrs Iteración 1 Actividades Planificadas Nro. Actividades Estado 1 Instalación y configuración del ambiente de ejecución Completada 2 Modelo de datos del sistema Completada 3 Vista del formulario de inscripción Completada 4 Hojas de estilo del formulario de inscripción Completada 69 Anexos de la iteración 1 Figura 23. Modelo de datos del sistema. 70 Iteración 2 Meta de la iteración: crear el API para la recepción y envió de datos del formulario de inscripción. Planificación de la iteración: las actividades resaltantes, realizadas en esta iteración, fueron: creación de la clase que permitirá conexión con SQLServer, diseño del API para la recepción y envío de los datos del formulario, y creación de vistas de ingreso al sistema. Tabla 10. Revisión de la iteración 2 Revisión de la Iteración Organización: Cámara Venezolana-Americana de Comercio e Industria Fecha: 10-08- 2015 Proyecto: Automatización de inscripción de eventos Items: 5 Puntos: 50pts Tiempo Estimado: 35hrs Tiempo Ejecutado: 31hrs Iteración 2 Actividades Planificadas Nro. Actividades Estado 1 Creación de la conexión con SQLServer Completada 2 API del sistema Completada 3 Vista de ingreso al sistema Completada 4 Controlador principal del formulario Completada 5 Correcciones de comportamiento del formulario de inscripción Completada 71 Anexos de la iteración 2 Figura 24. Vista del formulario de inscripción de eventos. 72 Iteración 3 Meta de la iteración: generar los correos de aceptación, y realizar la integración con el CRM SalesLogix. Planificación de la iteración: las actividades resaltantes, realizadas en esta iteración, fueron: desarrollo de los controladores de autenticación de usuarios, generación de los códigos QR de ingreso al evento, creación de las plantillas de correo, y validación de campos de diferentes formularios. Tabla 11. Revisión de la iteración 3 Revisión del iteración Organización: Cámara Venezolana-Americana de Comercio e Industria Fecha: 17-08-2015 Proyecto: Automatización de inscripción de eventos Items: 6 Puntos: 15pts Horas Planificadas: 22hrs Horas Ejecutadas: 28hrs Iteración 3 Actividades Planificadas Nro. Actividades Estado 1 Validación de campos del formulario Completada 2 Creación de las plantillas de correo Completada 3 Controladores de autenticación de usuario Completada 4 Controlador para generar el código de QR de ingreso Completada 5 Cambios en el CSS de la vista del formulario Completada 6 Integración con el CRM SalesLogix Completada 73 Anexos de la iteración 3 Figura 25. Modelo del correo electrónico que será enviado al confirmar la inscripción. 74 Iteración 4 Meta de la iteración: construcción del panel de administración del sistema. Planificación de la iteración: las actividades resaltantes, realizadas en esta iteración, fueron: implementación del cálculo de los descuentos por volumen de participantes, construcción de la primera sección del panel de administración, correspondiente a la vista de verificación de solicitudes. Tabla 12. Revisión de la iteración 4 Revisión del iteración Organización: Cámara Venezolana-Americana de Comercio e Industria Fecha: 24-08- 2015 Proyecto: Automatización de inscripción de eventos Items: 4 Puntos: 38pts Horas Planificadas: 37hrs Horas Ejecutadas: 41hrs Iteración 4 Actividades Planificadas Nro. Actividades Estado 1 Implementación de descuentos Completada 2 Vista de solicitudes activas Completada 3 Vista de revisión de solicitud Completada 4 Implementación de funciones de aprobación y rechazo de solicitud Completada 75 Anexos de la iteración 4 Figura 26. Revisión de solicitud 76 Iteración 5 Meta de la iteración: implementación de reportes. Planificación de la iteración: la actividad resaltante, realizada en esta iteración, fue: implementar las vistas y controladores de los reportes de esta aplicación. Tabla 13. Revisión de la iteración 5 Revisión de la iteración Organización: Cámara Venezolana-Americana de Comercio e Industria Fecha: 31-09- 2015 Proyecto: Automatización de inscripción de eventos Items: 6 Puntos: 25pts Horas Planificadas: 20hrs Horas Ejecutadas: 17hrs Iteración 5 Actividades Planificadas Nro. Actividades Estado 1 Vista para reporte de solicitudes aprobadas Completada 2 Controlador para reporte de solicitudes aprobadas Completada 3 Vista para reporte de solicitudes rechazadas Completada 4 Controlador para reporte de solicitudes rechazadas Completada 5 Vista para reporte de solicitudes contactos inscritos Completada 6 Controlador para reporte de solicitudes contactos inscritos Completada 77 Anexos de la iteración 5 Figura 27. Panel de control del sistema – Contactos que realizaron la inscripción. 78 Iteración 6 Meta de la iteración: implementar la verificación con el código QR. Planificación de la Iteración: la actividad resaltante, realizada en esta iteración, fue: desarrollo de la función de acceso al evento, para los ejecutivos de Venamcham. Tabla 14. Revisión de la iteración 6 Revisión de la iteración Organización: Cámara Venezolana-Americana de Comercio e Industria Fecha: 7-09- 2015 Proyecto: Automatización de inscripción de eventos Items: 4 Puntos: 25pts Horas Planificadas: 25hrs Horas Ejecutadas: 32hrs Iteración 6 Actividades Planificadas Nro. Actividades Estado 1 Vista de verificación del código QR Completada 2 Controlador de verificación del código QR Completada 3 Vista reporte de control de asistencia Completada 4 Controlador para reporte de control de asistencia Completada 79 Anexos de la iteración 6 Figura 28. Verificación de inscripción de eventos. 80 Iteración 7 Meta de la iteración: implementación de búsqueda por RIF. Planificación de la iteración: la actividad resaltante, realizadas en esta iteración, fue: desarrollar la vista y el controlador que permitirá ejecutar la búsqueda por RIF, permitiendo mejor acceso al formulario de inscripción. Tabla 15. Revisión de la iteración 7 Revisión de la iteración Organización: Cámara Venezolana-Americana de Comercio e Industria Fecha: 14-09- 2015 Proyecto: Automatización de inscripción de eventos Items: 1 Puntos: 7pts Horas Planificadas: 5hrs Horas Ejecutadas: 3hrs Iteración 7 Actividades Planificadas Nro. Actividades Estado 1 Búsqueda por RIF Completada 81 Anexos de la iteración 7 Figura 29. Búsqueda por RIF. 82 Iteración 8 Meta de la iteración: implementar MercadoPago como forma de pago y realizar pruebas, detección y corrección de errores. Planificación de la iteración: las actividades resaltantes, realizadas en esta iteración, fueron: pruebas de software y resolución de los errores encontrados y adicionalmente la integración de la librería de Mercado Pago en la aplicación. Tabla 16. Revisión de la iteración 8 Revisión de la iteración Organización: Cámara Venezolana-Americana de Comercio e Industria Fecha: 21-09-2015 Proyecto: Automatización de inscripción de eventos Items: 2 Puntos: 8pts Horas Planificadas: 40hrs Horas Ejecutadas: 45hrs Iteración 8 Actividades Planificadas Nro. Actividades Estado 1 Integración Mercado Pago Completada 2 Pruebas de Software Completada 83 Anexos del iteración 8 Figura 30. Integración Mercado Pago. 4.4. Fase 4 - Pruebas, monitoreo y optimización Las pruebas se realizaron durante todo el proceso de desarrollo, siguiendo la metodología Scrum, que establece, de forma clara, que cada incremento de producto debe estar completamente terminado y operativo, en condiciones de ser entregada al cliente, por lo que no debe presentar falla alguna. Una vez terminada la aplicación, se realizaron pruebas funcionales bajo el concepto de simulaciones controladas, con la finalidad de comprobar el correcto funcionamiento de la aplicación, tratando de detectar algún comportamiento inesperado. En estas pruebas, tanto el dueño del producto (Product Owner) como el facilitador (Scrum Master) sugirieron cambios que fueron ejecutados inmediatamente. 84 Adicionalmente, se realizó una prueba de aceptación, en la que se utilizó una encuesta de valoración (Ver Tabla 17) que fue realizada de manera individual por todos los integrantes de la Gerencia de Logística y Eventos de Venamcham. Tabla 17 – Modelo de encuesta de valoración Encuesta de Valoración Organización: Cámara Venezolana-Americana de Comercio e Industria Fecha: 25-09-2015 Proyecto: Automatización de inscripción de eventos Instrucciones: marca con una x la opción que mejor refleje tu opinión acerca del Sistema de Automatización de Eventos. Pregunta Si No 1. ¿Cree usted que el sistema de automatización de eventos es fácil de usar? 2. ¿Cree usted que la información se presenta de manera clara y entendible? 3. ¿Cree usted que la interfaz es intuitiva? 4. ¿Cree usted que el software responde adecuadamente a las funciones solicitadas por el (los) usuario(s)? 5. ¿Cree usted que el sistema mejorara el proceso inscripción de eventos de Venancham? A continuación, en la Figura 31, se pueden observar los resultados de la aplicación de esta prueba. 85 Figura 31. Resultados encuesta de valoración Como resultado de la aplicación de esta prueba de aceptación, es posible determinar que, de manera general, el sistema de inscripción de eventos posee un alto nivel de aceptación por parte de sus usuarios; cumpliendo con las necesidades y requerimientos del cliente, proporcionando un sistema usable y con altos estándares de calidad. 97% 90% 95% 92% 88% 0% 20% 40% 60% 80% 100% 1 2 3 4 5 Resultados de la prueba de aceptación 86 CONCLUSIONES Y RECOMENDACIONES La Cámara Venezolano - Americana de Comercio e Industria (Venamcham), tiene como principal función en nuestro país, la formación de liderazgos responsables en el seno empresarial a través de la realización de eventos y talleres, a todos sus asociados. El proceso de inscripción para estos eventos y talleres se realizaba de forma manual, convirtiéndolo en un proceso extremadamente complejo e ineficiente. Al inicio de este Trabajo Especial de Grado se planteó como objetivo “Desarrollar un sistema de información que permita automatizar el proceso de inscripción de eventos de la Cámara Venezolano - Americana de Comercio e Industria”, el cual se logró de manera satisfactoria. El uso de la metodología BPM-RAD permitió obtener información importante sobre los procesos de negocio de la organización, la cual resultó indispensable para cubrir las fases iniciales del ciclo de vida BPM, de manera rápida y sencilla. El empleo de Scrum como metodología ágil de desarrollo, permitió implementar el software en un periodo de tiempo muy corto, alcanzando altos estándares de calidad. Así mismo, posibilitó ahorrar tiempo en la fase de pruebas, puesto que en cada iteración, se generaba un incremento del producto terminado y operativo. La selección adecuada de las tecnologías y el diseño de la aplicación en base a servicios, agilizó y simplificó el proceso de implementación. Adicionalmente ayudó a definir convenciones para realizar futuras ampliaciones del sistema o la migración a un motor de procesos de negocio. (BPMS, por sus siglas en inglés) Finalmente, se logró reducir el tiempo que tarda el proceso de inscripción de eventos de Venamcham, en aproximadamente 73%, pasando de 75 a 20 minutos por inscripción. 87 Una vez culminado el Trabajo Especial de Grado, y establecidas las conclusiones, se sugiere:  Implementar el proceso de inscripción de eventos de Venamcham utilizando un motor de procesos negocios (BPMS, por sus siglas en inglés), que permita orquestar el mismo, de manera óptima, pues como dicen Laurentiis y otros autores (2011), el no hacerlo “sería tan poco efectivo como llevar la contabilidad de una entidad a mano o con la ayuda de una hoja de cálculo, en vez de llevarla mediante una aplicación específica para este fin”. 88 BIBLIOGRAFÍA Alvarez, M. A. (25 de 03 de 2009). Manual de jQuery. Recuperado el 28 de 06 de 2015, de http://www.desarrolloweb.com/manuales/manual-jquery.html Barros, O. (1994). Reingeniería de Procesos de Negocios. Chile: Dolme. Bose, R. (2003). Customer relationship management: key components for IT success. (Vol. 102). Industrial Managemente & Data Systems. Chen, I., & Popovich, K. (2003). Understanding customer relationship management (CRM): People, process and technology. Business Process Management Journal. Chong, R., Danubianu, M., Iyer, A., Nandan, C., Nonvinkere, M., Perniu, L., & Sharma, N. (2010). Database Fundamentals. db2university.com. Cobo, A., Gomez, P., Perez, D., & Rocha, R. (2005). Php y Mysql. Diaz de Santos. CRMAgil. (2015). CRMAgil-a. Obtenido de Software Infor CRM: http://crmagil.com/softwaredecrm_saleslogix/ Davenport, T. (1993). Process Innovation. Harvard Business School Press. De Goyeneche, A. (2001). CRM. Una estrategia de negocios centrada en el cliente. Economía & Administración, 72-74. Definición Mx. (s.f.). Recuperado el 07 de 09 de 2015, de Definición de Proceso: http://definicion.mx/proceso/ DiplomadosOnline-a. (s.f.). Obtenido de http://www.diplomadosOnline.com DiplomadosOnline-b. (s.f.). Obtenido de http://diplomadosonline.com 89 Eguiluz, J. (s.f.). Introducción a XHTML. Recuperado el 15 de 06 de 2015, de https://librosweb.es/libro/xhtml/ Fuentes, J. M. (30 de 06 de 2015). Manual de AJAX. Obtenido de http://www.uco.es/~lr1maalm/manualdeajax.pdf Garimella, K., Lees, M., & Williams, B. (2008). Introducción a BPM Para Dummies. Software AG. Giandini, R., Perez, G., & Pons, C. (2010). Un lenguaje de Transformación específico para Modelos. (U. d. Plata, Ed.) Recuperado el 16 de 08 de 2015, de http://imgbiblio.vaneduc.edu.ar/fulltext/files/TC104933.pdf Gilfillan, I. (2003). La Biblia de MySQL. Anaya Multimedia. Hammer, M. (1990). Re-engineering Work: Don’t Automate, Obliterate. Harvard Business Review. Kendall, K., & Kendall, J. (2005). Análisis y diseño de sistemas. Pearson. Laudon, K., & Laudon, J. (2012). Sistemas de Informacion Gerencial. Pearson. Laurentiis, R. d., Alcalá Ortiz, M., Herranz, J. L., Kemsley, S., Makhfi, P., Marqués, J., . . . Trilles, P. (2011). El Libro del BPM 2011. Madrid: Club BPM. Ould, M. (1995). Business Processes: Modelling and Analysis for Re-Engineering and Improvement. Wiley. Piattini, V., & De Miguel, C. (2001). Metodología para el diseño y desarrollo de software. Uruguay: Ra-ma. Ratschiller, T., & Gerken, T. (2001). Creacion de Aplicaciones Web Con PHP 4. Prentice Hall. Rees, D., & Laguna, A. (2013). Desarrollo de la aplicaciones web con la version 4 del framework de laravel para principiantes. Leanpub. 90 Romero, Y., & González, Y. (01 de 2012). revistatelematica.cujae.edu.cu. Obtenido de http://revistatelematica.cujae.edu.cu/index.php/tele/article/viewFile/15/10 Rouse, M. (s.f.). Client/Server model. Recuperado el 16 de 6 de 2015, de http://searchnetworking.techtarget.com/definition/client-server Rubin, K. (2012). Essential Scrum: A Practical Guide to the Most Popular Agile Process. Addison-Wesley. Rummler, G., & Brache, A. (1995). Improving Performance. San Francisco: Jossey- Bass. Schwaber, K., & Sutherland, J. (2013). La Guía Definitiva de Scrum: Las Reglas del Juego . Shklar, L., & Rosen, R. (2003). Web Application Architecture: Principles, Protocols, and Practices. John Wiley & Sons. Smith, A. (1776). La riqueza de las naciones. Londres: W. Strahan & T. Cadell. Smith, H., & Fingar, P. (2006). Business Process Management: The Third Wave . Meghan Kiffer Pr. SQL Server 2014. (s.f.). Recuperado el 20 de 06 de 2015, de http://www.microsoft.com/es-es/server-cloud/products/sql- server/Overview.aspx Venamcham-a. (05 de 02 de 2015). Recuperado el 10 de 06 de 2015, de http://www.venamcham.org/ W3C-a. (19 de 11 de 2011). Recuperado el 18 de 6 de 2015, de http://www.w3.org/community/webed/wiki/CSS/Training/What_is_CSS ANEXO 1 Poster descriptivo de los elementos BPMN ANEXO 2 Material publicitario de los eventos de Venamcham ANEXO 3 Formato para la inscripción de eventos de Venamcham ANEXO 4 Documento de Análisis de requerimientos de procesos. Proceso: Inscripción de eventos Tabla 18. DARP – Proceso de inscripción de eventos Tabla 19. DARP – Proceso de inscripción de eventos - Actividad 1 Tabla 20. DARP – Proceso de inscripción de eventos - Actividad 2 Tabla 21. DARP – Proceso de inscripción de eventos - Actividad 3 Tabla 22. DARP – Proceso de inscripción de eventos - Actividad 3 - Formulario 1 Tabla 23. DARP – Proceso de inscripción de eventos - Actividad 4 Tabla 24. DARP – Proceso de inscripción de eventos - Actividad 4 - Consulta 1 Tabla 25. DARP – Proceso de inscripción de eventos - Actividad 5 Tabla 26. DARP – Proceso de inscripción de eventos - Actividad 5 - Formulario 1 Tabla 27. DARP – Proceso de inscripción de eventos - Actividad 6 Tabla 28. DARP – Proceso de inscripción de eventos - Actividad 6 - Consulta 1 ANEXO 5 Documento de Análisis de requerimientos de procesos. Proceso: Validación de inscripción Tabla 29. DARP – Proceso de validación de inscripción Tabla 30. DARP – Proceso de validación de inscripción - Actividad 1 Tabla 31. DARP – Proceso de validación de inscripción - Actividad 1 - Formulario 1 Tabla 32. DARP – Proceso de validación de inscripción - Actividad 2 Tabla 33. DARP – Proceso de validación de inscripción - Actividad 2 - Consulta 1 Tabla 34. DARP – Proceso de validación de inscripción - Actividad 3 Tabla 35. DARP – Proceso de validación de inscripción - Actividad 4 Tabla 36. DARP – Proceso de validación de inscripción - Actividad 4 - Consulta 1 Tabla 37. DARP – Proceso de validación de inscripción - Actividad 5 Tabla 38. DARP – Proceso de validación de inscripción - Actividad 5 - Consulta 1 Tabla 39. DARP – Proceso de validación de inscripción - Actividad 6 Tabla 40. DARP – Proceso de validación de inscripción - Actividad 7 Tabla 41. DARP – Proceso de validación de inscripción - Actividad 8 ANEXO 6 Documento de Análisis de requerimientos de procesos. Proceso: Ingreso al evento Tabla 42. DARP – Proceso de validación de ingreso al evento Tabla 43. DARP – Proceso de validación de ingreso al evento - Actividad 1 Tabla 44. DARP – Proceso de validación de ingreso al evento - Actividad 2 Tabla 45. DARP – Proceso de validación de ingreso al evento - Actividad 3 Tabla 46. DARP – Proceso de validación de ingreso al evento - Actividad 3 - Consulta 1 Tabla 47. DARP – Proceso de validación de ingreso al evento - Actividad 4 Tabla 48. DARP – Proceso de validación de ingreso al evento - Actividad 5