Trabajo Especial de Grado: i Trabajo Especial de Grado presentado ante la Ilustre Universidad Central de Venezuela Por la Bachiller Draumari Isabel Marín Farías para optar al título de Licenciada en Computación Tutora: Profa. Nora Montaño Caracas, Julio 2011 Trabajo Especial de Grado: Adecuación de la modelación ágil reutilizando componentes en construcción de interfaces de usuario. Caso de estudio: Registro de publicaciones periódicas. ii Acta del Veredicto Quienes suscriben, miembros del jurado designado por el Consejo de la Escuela de Computación, para examinar el Trabajo Especial de Grado presentado por la Bachiller DRAUMARI ISABEL MARÍN FARÍAS, titular de la cédula de identidad No. 17.244.020, con el título: “Adecuación de la modelación ágil reutilizando componentes en construcción de interfaces de usuario. Caso de estudio: Registro de publicaciones periódicas”, con el fin de optar por el título de Licenciada en Computación, dejan constancia de lo siguiente: Una vez leído este trabajo por cada uno de los miembros del Jurado, se fijó el día 25 de julio de 2011 a las 9:00 am, para que su autora lo defienda en forma pública, en la Sala 1 de la Escuela de Computación de la Facultad de Ciencias de la Universidad Central de Venezuela. Una vez realizada esta defensa, a través de una presentación oral del contenido, el Jurado decidió aprobarlo con una nota de 20 puntos. En fe de lo anterior, se levanta la presente Acta, en Carcas a los veinticinco días del mes de Julio del año dos mil once. ___________________________ Profa. Nora Montaño (Tutora) ___________________________ Profa. Eleonora Acosta (Jurado) ___________________________ Prof. Andrés Sanoja (Jurado) iii Agradecimientos A Dios y a la virgencita del coromoto, en quienes creo y confío plenamente, simplemente porque hacen que todo sea posible. A mis padres, que tuvieron la paciencia de aguantarme todas las veces que me molestaba porque las cosas no salían como esperaba. Y que a pesar de todo me siguen queriendo dándome su apoyo incondicional cuando más lo necesito. A mi hermano, que me ayuda cuando no entiendo algo, y que es mi compañero de desestres cuando me deprimo y siento que no puedo seguir estudiando A mi tutora, la profesora Nora Montaño por aconsejarme, entenderme y soportarme, durante el desarrollo de mi TEG. A mi amigo Sergio Escalante, a quien le debo mucho de mis logros durante la carrera. A mi amiga Iris Espinoza, quien increíblemente fue la única que logró incentivarme y lograr que no tirara la toalla. A mis amigos Vanessa Arévalo y Jonathan Urrea, quienes me ayudaron y apoyaron mientras realizaba mi TEG. A mi tío Henry Patiño, quien cooperó conmigo en el desarrollo del tomo del TEG. A la profesora Ana Morales, quien me alentó y ayudó en un momento de desesperación y angustia. A la profesora Eleonora Acosta, quien me hizo correcciones constructivas y me ayudó a mejorar muchísimo la manera cómo expresarme. Y finalmente, a mis compañeros y aquellas personas que pensaron que no podría hacer todo lo que he logrado, gracias por darme fuerzas para seguir y demostrarles que si podía. A todos ellos, GRACIAS!!!! ii Resumen Una de las problemáticas abordada por la Ingeniería de software es el incumplimiento en los tiempos de entrega de los productos de software, algunos esfuerzos están dirigidos a introducir en el desarrollo el reuso de componentes que, en experiencias previas, han resultado exitosos. Estos componentes están expresados como patrones (diseño, arquitectura, interacción, entre otros) o como piezas de software disponibles en librerías y/o la web (repositorios y/o páginas especializadas). El presente Trabajo Especial de Grado muestra una experiencia de desarrollo de software, donde se incorpora el reuso de componentes en la construcción y puesta en marcha de una interfaz para el “Registro Digital de Publicaciones Periódicas” del Banco Central de Venezuela. El objetivo del Trabajo Especial de Grado es desarrollar la interfaz de usuario, adecuando el modelado ágil con técnicas de usabilidad, que faciliten la reutilización de componentes tanto a nivel de especificación como de código en el dominio de las bibliotecas virtuales, a fin de obtener un producto usable. En la experiencia se obtuvo como producto desde la perspectiva metodológica, la adecuación del método de desarrollo ágil propuesto por Ambler (2002) y el lenguaje de patrones de interacción propuesto por Acosta (2004), identificando el patrón de dominio y de algunas tareas cuyas especificaciones y código fueron reusadas en el desarrollo. Algunas adaptaciones entre los elementos fueron realizadas a fin de lograr la coherencia y consistencia en la interfaz de usuario. Las entregas fueron realizadas en tiempos aceptables para el cliente. Desde la perspectiva del producto software, se logra migrar el modelo conceptual del usuario de las aplicaciones exitosas al nuevo producto, garantizando que los aspectos de usabilidad también fueran migrados. Para constatar la usabilidad lograda y en concordancia con el modelado ágil, se aplicaron inspecciones y evaluaciones heurísticas al final de cada una de las iteraciones propuestas. iii Índice General Introducción ............................................................................................................. 1 Capítulo 1: Marco Teórico ....................................................................................... 5 1.1 Usabilidad................................................................................................... 5 1.1.1 Usabilidad Web ................................................................................ 8 1.2 Reutilización ............................................................................................. 10 1.2.1 El Proceso de Reutilización............................................................ 11 1.2.2 Modelos de Proceso para reutilización .......................................... 14 Capítulo 2: Marco Metodológico ............................................................................ 17 2.1 Enfoque de Desarrollo: Modelado Ágil. .................................................... 17 2.1.1 Desarrollo Dirigido por Modelos Ágiles (AMDD) ............................ 21 2.2 Lenguaje de Patrones .............................................................................. 25 2.3 Adecuación del Enfoque de Desarrollo .................................................... 29 Capítulo 3: Marco Aplicativo .................................................................................. 35 3.1 Desarrollo del Sistema ............................................................................. 35 3.2 Usuarios ................................................................................................... 38 3.3 Iniciación del Proyecto (Iteración 0) ......................................................... 38 3.3.1 Requerimientos Iniciales ................................................................ 38 3.3.1.1 Análisis del Dominio .................................................................... 39 3.4 Desarrollo de las Iteraciones .................................................................... 62 3.5 Pruebas y Resultados .............................................................................. 84 Conclusiones ......................................................................................................... 92 Referencias Bibliográficas ..................................................................................... 94 ANEXOS ............................................................................................................... 96 ANEXO A (DESCRIPCIÓN DE LOS CASOS DE USO) ............................................. 97 ANEXO B (MAPA DE NAVEGACIÓN)................................................................. 100 ANEXO C (RESULTADO EVALUACIÓN HEURÍSTICA) ............................................... 101 iv Índice de Tablas Tabla 2.1 Estructura de patrones propuesta. ........................................................ 28 Tabla 3.1 Relación entre los requerimientos funcionales y el componente a analizar. ................................................................................................................. 47 Tabla 3.2 Descripción de los actores del modelo de casos de uso. ...................... 54 Tabla 3.3 Descripción de los casos de uso Nivel 1. .............................................. 55 Tabla 3.4 Descripción de los requerimientos funcionales...................................... 56 Tabla 3.5 Descripción de los casos de uso. Nivel 1. ............................................. 58 Tabla 3.6 Patrón que describe el ingreso al sistema. ............................................ 65 Tabla 3.7 Patrón que describe el registro al sistema. ............................................ 66 Tabla 3.8 Patrón que describe las búsquedas en el sitio. ..................................... 67 Tabla 3.9 Opciones para implementar el visor de los Artículos de las Revistas.... 70 Tabla 3.10 Patrón que describe el visor para el contenido de los volúmenes. ...... 71 Tabla 3.11 Patrón que describe una búsqueda avanzada. ................................... 74 Tabla 3.12 Patrón que describe la categorización de elementos. ......................... 75 Tabla 3.13 Patrón que describe cómo mostrar los resultados de una búsqueda. . 76 Tabla 3.14 Patrón que describe cómo mostrarlos volúmenes pertenecientes a una revista. ................................................................................................................... 77 Tabla 3.15 Patrón que describe mi biblioteca. ....................................................... 81 v Índice de Figuras Figura 1.1 Dimensiones de usabilidad según ISO 9241-11 (Bereceartua, Gascó, & Niro, 2004) ............................................................................................................... 6 Figura 1.2 Aceptación del producto según Shackel (Bereceartua, Gascó, & Niro, 2004) ....................................................................................................................... 6 Figura 1.3 Aceptación del producto según Nielsen (Bereceartua, Gascó, & Niro, 2004). ...................................................................................................................... 7 Figura 1.4 Modelo de Proceso para la reutilización (Pressman, 1997). ................ 15 Figura 1.5 Modelo de Proceso para la reutilización de componentes en el sistema. .............................................................................................................................. 16 Figura 2.1 AM Mejora de otros procesos de software (Ambler, 2006)................... 18 Figura 2.2 Ciclo de vida de AMDD: Modelado de actividades del ciclo de vida de un proyecto (Ambler,2007) .................................................................................... 22 Figura 2.3 AMDD a través del Ciclo de Vida de Desarrollo Ágil. (Ambler,2007) ... 22 Figura 2.4 Los Requerimientos ágiles cambian la gestión del proceso. (Ambler, 2007) ..................................................................................................................... 24 Figura 2.5 Notación para los patrones de interacción y relación de referencia ..... 27 Figura 2.6 Ejemplo del Lenguaje de Patrones de una Biblioteca Digital. .............. 29 Figura 2.7 Ciclo de vida de la adecuación aplicada a la modelación ágil de Ambler (2007) .................................................................................................................... 32 Figura 2.8 Actividades ejecutadas en cada iteración del Ciclo de Vida de Desarrollo de la adecuación del Modelado Ágil de Ambler (2007). ....................... 33 Figura 3.1 Página inicial de Open Journal Systems Demonstration Journal ......... 40 Figura 3.2 Página inicial de europeana. ................................................................ 41 Figura 3.3 Página inicial de google libro. ............................................................... 42 Figura 3.4 Página de inicio de bvs ........................................................................ 43 Figura 3.5 Página de inicio de bvs regional. .......................................................... 44 Figura 3.6 Página de inicio de lalibreradelau.com ................................................. 45 Figura 3.7 Página de inicio de Twitter. .................................................................. 46 Figura 3.8 Nivel 1 Modelo de Casos de Uso. ........................................................ 54 vi Figura 3.9 Nivel 1 Modelo de Casos de Uso Modificado. Producto de la reunión con el usuario cliente. ............................................................................................ 57 Figura 3.10 Pila de requerimientos del sistema. .................................................... 59 Figura 3.11 Lenguaje de Patrones de Iteración ..................................................... 60 Figura 3.12 Porcentaje de los elementos usados para desarrollar el sistema....... 61 Figura 3.13 Gama de colores utilizados. ............................................................... 62 Figura 3.14 Plantilla web internet-business ........................................................... 63 Figura 3.15 Interfaz resultado ................................................................................ 64 Figura 3.16 Modelo de Interacción para Registrarse en el Sistema. ..................... 68 Figura 3.17 Prototipo de interfaz inicial del Sistema. ............................................. 69 Figura 3.18 Modelo de Secuencia para Visualizar Artículo. .................................. 72 Figura 3.19 Visualizador de los Artículos de las Revistas. .................................... 73 Figura 3.20 Interfaz para la búsqueda avanzada por temática y resultado de la búsqueda............................................................................................................... 78 Figura 3.21 Interfaz para la búsqueda avanzada por criterio. ............................... 79 Figura 3.22 Interfaz para la Visualización de los resultados obtenidos a partir de una búsqueda. ....................................................................................................... 79 Figura 3.23 Interfaz para el catálogo de los volúmenes. ....................................... 80 Figura 3.24 Modelo de Secuencia para Agregar artículo a mi biblioteca. ............. 82 Figura 3.25 Modelo Objeto del Dominio del Sistema ............................................ 83 Figura 3.26 Interfaz de Mi biblioteca ..................................................................... 84 Figura 3.27 Resultados obtenidos al aplicar la Evaluación Heurística .................. 86 Figura 3.28 Página inicial del Registro Digital de Publicaciones Periódicas BCV. 87 Figura 3.29 Resultado obtenido del Mapa de calor ............................................... 88 Figura 3.30 Modelo de la encuesta de usabilidad. ................................................ 89 Figura 3.31 Gráfico de resultados obtenidos al aplicar la encuesta de usabilidad parte 1 y 2. ............................................................................................................ 90 Figura 3.32 Gráfico de resultados obtenidos al aplicar la encuesta de usabilidad parte 3. .................................................................................................................. 91 1 Introducción Desde hace algunos años hasta la actualidad, el uso del internet ha ido evolucionando y creciendo en forma importante, haciéndose indispensable en el desarrollo de las actividades cotidianas y profesionales, convirtiéndose además en un buen aliado para el crecimiento social. Esto ocasiona que día a día aumente significativamente la cantidad de usuarios de internet. Actualmente en la web existe variedad de herramientas y aplicaciones; es decir, sistemas de cualquier tipo, que son utilizados por diversas personas, para realizar las actividades que mejor se adapten a sus necesidades cotidianas. Al haber gran cantidad de usuarios en internet, existen numerosos requerimientos y necesidades que los programadores web deben satisfacer en el menor tiempo posible, cumpliendo un mínimo de calidad del producto. Es por todo esto, que se debe mejorar la productividad de sistemas web disminuyendo su tiempo de desarrollo. Pero no siempre es fácil, desarrollar un sistema en el tiempo estimado. Por otra parte, existe en el mercado aplicaciones que pertenecen a un mismo dominio y compiten entre sí, por ejemplo las diversas formas de revistas, de tiendas virtuales, bibliotecas, etc. Cuando se desarrolla una aplicación asociada a un dominio, necesariamente no hay que comenzar el diseño desde cero. El análisis y la captura de requerimientos se encuentran fuertemente impactados por la reutilización de los modelos conceptuales existentes, esto se justifica bajo la premisa, que si sabemos qué elementos son familiares al usuario y lo incorporamos como requerimiento, estamos apuntando a mejorar el aprendizaje de la aplicación que vamos a desarrollar. En general, no existe un método específico para reusar el conocimiento del usuario en el proceso de desarrollo, pero existen técnicas de usabilidad que permiten identificar los elementos conceptuales familiares al usuario. En particular, técnicas como: el análisis de competencia y las evaluaciones heurísticas sobre 2 productos que han demostrado ser exitosos para usuarios en un dominio específico, la retro-inspección, el sondeo sobre usuarios, entre otras; al ser incorporadas en la etapa de captura y análisis de requerimientos, favorecen el diseño de un modelo conceptual muy cercano al modelo mental del usuario. Otro factor que inciden en la construcción de un producto usable, método de desarrollo y como a través de su aplicación se incorporan elementos que favorezca la usabilidad del producto. Sommerville (2005) señala dos problemas frecuentes que van muy asociados a la aplicación del método:  incumplimiento en los tiempos de entrega de los productos de software,  carencia de buenas especificaciones de requerimientos o en otra expresión, la estabilidad de los requerimientos. En la bibliografía se tienen dos enfoques asociados a los métodos, estos tratan de minimizar estos problemas desde perspectivas diferentes, el enfoque pesado y el ligero. El primero, tiende a ser poco flexible y lleva una documentación muy rigurosa, mientras que el segundo, minimiza la documentación y se enfoca más en la generación de código para darle mayor importancia a los tiempos de entrega y respuesta al cliente. Como una alternativa a estos dos enfoques, surgen los métodos de desarrollo ágiles, estos tratan de balacear los mejor de los enfoques antes mencionados. Dentro de las propuestas para el desarrollo ágil, se encuentra la de Ambler (2002), en la misma no se desarrolla un método como tal, más bien se estable un modelo que estructurar el proceso de desarrollo en función de iteraciones, caracterizando como un enfoque iterativo e incremental; dándole libertad al equipo de trabajo de elegir los artefactos que les faciliten la construcción del producto. De aquí surge las siguientes preguntas ¿Cómo puede ser adecuada la modelación ágil para el desarrollo de un producto usable? ¿Cómo extraer e 3 incorporar el conocimiento previo del usuario dentro de las especificaciones del producto? En este trabajo es importante señalar, que las características del producto inciden en los tiempos de entrega, porque si el dominio del producto es conocido, entonces se facilita el desarrollo al identificar qué y cómo reusar; en caso contrario, habría que hacer una mayor inversión de tiempo para diseñar e implantar lo nuevo. Particularmente para el caso de estudio se investigará sobre bibliotecas virtuales existentes actualmente en la web, y que vienen a conformar el dominio sobre el cual se desarrolla el proyecto. Como primer aspecto, se estudian las funciones en general que cumplen algunas bibliotecas virtuales, para ofrecerlas al cliente y determinar con éste, las funciones específicas del proyecto. Objetivo General Desarrollar la interfaz de usuario, adecuando el modelado ágil con técnicas de usabilidad, que faciliten la reutilización de componentes tanto a nivel de especificación como de código en el dominio de las bibliotecas virtuales, a fin de obtener un producto usable. Objetivos Específicos  Analizar las técnicas de usabilidad adecuadas al contexto reutilización.  Planificar el proceso de desarrollo combinando modelación ágil y técnicas de usabilidad.  Aplicar y demostrar la adecuación del método de modelado ágil, seleccionando como caso de estudio la realización de una hemeroteca virtual para Banco Central de Venezuela (BCV).  Construir una interfaz de usuario siguiendo la planificación y verificando la usabilidad de los componentes reusados en el nuevo contexto (coherencia y consistencia de la interfaz) 4  Realizar pruebas de usabilidad para garantizar la aceptación del sistema por parte del usuario (certificar los principios básicos de usabilidad) En atención a lo planteado, este Trabajo Especial de Grado está estructurado en tres capítulos. En el Capítulo 1 se muestran las definiciones de: usabilidad, usabilidad en la web e ingeniería de la usabilidad. Adicionalmente se exponen aspectos importantes sobre la reutilización. El Capítulo 2 contiene la metodología propuesta para realizar un proyecto basado en la reutilización de componentes, el lenguaje de patrones de interacción y las adecuaciones que se deben hacer, para obtener un producto aceptable por el usuario. En el Capítulo 3 presenta la parte experimental, donde se aplica la metodología propuesta en el Capítulo 2, así como su correspondiente análisis de las pruebas y los resultados obtenidos. Finalmente se plantean las conclusiones del trabajo realizado. 5 1 Capítulo 1: Marco Teórico En esta sección se muestran las definiciones de: usabilidad y usabilidad en la web. Adicionalmente se exponen aspectos importantes sobre la reutilización. 1.1 Usabilidad A continuación se muestran las definiciones en orden cronológico, presentadas por la Organización Internacional para la Estandarización y algunos autores especialistas en el tema de la usabilidad. El propósito es entender que la usabilidad no sólo un concepto, más bien, se define como un conjunto de atributos que dependen del usuario y el contexto de uso. La Organización Internacional para la Estandarización (ISO) dispone de dos definiciones de usabilidad: ISO/IEC 9126 (1991) “La usabilidad se refiere a la capacidad de un software de ser comprendido, aprendido, usado y ser atractivo para el usuario, en condiciones específicas de uso”. ISO/IEC 9241 (1998) “Usabilidad es la efectividad, eficiencia y satisfacción con la que un producto permite alcanzar objetivos específicos a usuarios específicos en un contexto de uso específico”. Para mejor comprensión de esta definición en la Figura 1.1 se presenta la relación de las dimensiones de la usabilidad con sus respectivos parámetros, los cuales se relacionan con ciertas medidas como: Exactitud, Aceptabilidad, Costos, entre otras. 6 Figura 1.1 Dimensiones de usabilidad según ISO 9241-11 (Bereceartua, Gascó, & Niro, 2004) Otras definiciones de Usabilidad Shackel (1991), define la usabilidad como la capacidad que poseen los usuarios de utilizar fácilmente y con eficacia un sistema, dado un entrenamiento y ayuda específica, satisfacer la gama especificada de tareas, dentro de la gama detallada de guiones de entorno, " o en más corto " la capacidad de los seres humanos para utilizar un sistema fácilmente y con eficacia. Shackel utiliza como medición de aceptación la Eficacia, Aprendizaje, Flexibilidad y Actitud, es por ello que en la Figura 1.2 se puede observar la relación de estos con la aceptación de un sistema a través de la sección práctica. Figura 1.2 Aceptación del producto según Shackel (Bereceartua, Gascó, & Niro, 2004) 7 Nielsen (1993) enfoca la usabilidad como un atributo de calidad que evalúa cuán fácil es el uso de las interfaces de usuario. La palabra "usabilidad" también se refiere a los métodos para mejorar la facilidad de uso durante el proceso de diseño. En el esquema siguiente (Figura 1.3), se muestra la aceptación como el aspecto más importante, definido por una parte social y otra practica, esta última depende de la Fiabilidad, Compatibilidad, Costo, Utilidad y Aprovechamiento, este a su vez es definido por la utilidad y la usabilidad, la cual finalmente es medida por los siguientes componentes de calidad: Facilidad de aprendizaje, Eficacia, Retención, Errores y Agrado ó Satisfacción. Figura 1.3 Aceptación del producto según Nielsen (Bereceartua, Gascó, & Niro, 2004). La autora de varios estudios y libros de usabilidad, Preece (1994) propone la definición más corta pero quizás la más intuitiva. Se refiere a la usabilidad como el "desarrollo de sistemas fáciles de usar y de aprender". Redish (2000) manifiesta que el objetivo de las personas que trabajan en la usabilidad no es otro que el de producir "trabajos para sus usuarios", 8 proporcionándoles las herramientas para que encuentren lo que necesiten, entender lo que encuentren, actuar apropiadamente sobre ese entendimiento y hacer todo esto con el tiempo y esfuerzo que ellos crean necesario; el término usabilidad no se refiere solamente a hacer que los sistemas sean simples, sino que percibe además la comprensión de los objetivos de los usuarios, el contexto de su trabajo y cuál es el conocimiento y la experiencia de que disponen. Quesenbery (2001), propone extender la definición de la ISO 9241 (1998) para hacerla, según ella, más comprensible, definiendo la usabilidad con base en las cinco características que los usuarios deben encontrar en el sistema interactivo: Efectividad, Eficiencia, Atractivo, Tolerante a errores y Facilidad de aprendizaje. No existe un concepto universal de usabilidad, pero todas las definiciones presentadas tienen que pasar por el “ojo experto del usuario”. La usabilidad es un concepto enlazado a las necesidades del usuario y al contexto del uso. En el desarrollo de un producto usable, hay que iniciar el proceso estableciendo los requerimientos de usabilidad del usuario y contexto (dominio de la aplicación) 1.1.1 Usabilidad Web Una vía de afinar el contexto de la usabilidad puede ser dado por el medio, no es lo mismo la usabilidad para aplicaciones stand-alone que para Internet, puesto que los elementos de interacción tienden a ser diferentes. Jakob Nielsen (2000), definió la usabilidad web como el “atributo de calidad que mide lo fácil de usar que son las interfaces web”. Un sitio web usable es aquél en el que los usuarios pueden interactuar de la forma más fácil, cómoda, segura e inteligentemente posible. La Usabilidad de un sitio web está determinada por sus contenidos, entre más cercanos estén al usuario, mejor será la navegación por el mismo y la experiencia al interactuar con la pantalla será la más acertada. 9 Lógicamente es imposible crear un sitio web ciento por ciento perfecto, pues no se puede agradar al mismo tiempo a millones de usuarios, sin embargo, los diseñadores y creadores deben tratar de mostrar todos los elementos de una manera clara y concisa, minimizando el número de clics y de scroll. Un error recurrente de los creadores y diseñadores de sitios web, es querer imponer sus decisiones y criterios sin pensar en el usuario. Es por esto que Nielsen (2005) propone 10 principios, los cuales son recomendables seguir para poder obtener la usabilidad del sitio, estos son: 1. Visibilidad del Estado del Sistema: El sistema siempre debe mantener informado al usuario acerca de lo que está pasando, a través de información adecuada en un plazo razonable. 2. Utilizar el lenguaje de los usuarios: El sistema debe hablar el lenguaje de los usuarios, con palabras, frases y conceptos familiares, en lugar de términos orientados al sistema. Seguir las convenciones del mundo real, por lo que la información aparezca en un orden natural y lógico. 3. Control y Libertad para el usuario: Los usuarios a menudo eligen funciones del sistema por error y será necesario una salida de emergencia claramente marcada, esto es, salir del estado no deseado sin tener que pasar por una larga secuencia de interacciones. Es importante disponer de deshacer y rehacer. 4. Consistencia y estándares: Los usuarios no deberían tener que preguntarse si diferentes palabras, situaciones o acciones significan lo mismo, para ello se deben seguir las normas y convenciones de la plataforma, sobre la cual se encuentra implementado el sistema. 5. Prevención de errores: Es importante prevenir la aparición de errores que mejor que generar buenos mensajes de error 6. Minimizar la carga de memoria del usuario: El usuario no debería tener que recordar la información de una parte del diálogo a la otra. Es 10 mejor mantener objetos, acciones y opciones visibles, en lugar de tener que memorizarlas. 7. Flexibilidad y eficiencia de uso: Las instrucciones para el uso del sistema deben ser visibles o fácilmente accesibles cuando se necesiten. Los aceleradores no vistos por el usuario principiante, mejoran la interacción para el usuario experto de tal manera que el sistema puede servir para usuario inexperto y experimentado. Es importante que el sistema permita personalizar acciones frecuentes. 8. Estética y diseño minimalista: Los diálogos no deben contener información que es irrelevante o raramente necesaria. Cada unidad adicional de información en un diálogo compite con las dependencias pertinentes de la información y disminuye su visibilidad relativa. 9. Ayudar al usuario a reconocer, diagnosticar y recuperarse de los errores: Los mensajes de error deben ser expresados en un lenguaje sencillo (sin códigos), se debe indicar exactamente el problema y sugerir una solución constructiva. 10. Ayuda y documentación: A pesar de que sería mejor que el sistema pueda ser usado sin documentación, es necesario proporcionar ayuda y documentación. Ésta tiene que ser fácil de buscar, centrada en las tareas del usuario, tener información de las etapas a realizar y que no sea muy extensa. 1.2 Reutilización La reutilización es una estrategia a largo plazo en la que se organiza un conjunto de componentes que ya fueron usados, permitiendo que se pueda generar nuevos programas a partir de componentes ya existentes. El principal riesgo que presenta es la pérdida de tiempo y esfuerzo si los componentes preparados para su reutilización no son seleccionados y analizados cuidadosamente (McConnell, 1996). 11 Según Peter Freeman (Freeman, 1987), reutilizar es una actividad tan corriente, en general, que la mayor parte de los diccionarios ni siquiera la contienen; se supone que el lector inteligente comprenderá que “reutilizar” significa “usar algo de nuevo”. Ya estamos familiarizados con… el reciclaje…, y con la máxima general consistente en hacer que algo “sirva para varias cosas”. En la creación de sistemas, la reutilización es simplemente cualquier procedimiento que produce (o ayuda a producir) un sistema mediante la reutilización de algo procedente de algún esfuerzo de desarrollo anterior. Pero primero se debe decidir, qué se va a reutilizar y cuál es el procedimiento que debe seguirse para obtener una reutilización exitosa. Suele ocurrir que muchos piensan que la reutilización es solo aplicable al código, pero no es así, ya que puede aplicarse en cualquier elemento obtenido en un esfuerzo previo de desarrollo, como lo es: código, diseño, documentación, artefactos, datos, especificaciones, materiales de prueba, planes y hasta puede ser aplicable cuando se emplea un personal, que ya trabajó en un proyecto similar o parecido (McConnell, 1996). 1.2.1 El Proceso de Reutilización La reutilización es un proceso que debería ser parte integrante de cualquier desarrollo de software, pero para poder llevar a cabo este proceso, en primer lugar debemos comprender las consideraciones que se deben seguir para realizar una buena reutilización, los artefactos que se reutilizan cuando se emplea la ingeniería del software y el modelo de procesos asociado a la reutilización. Consideraciones para reutilizar Para evitar que ocurran riesgos durante el proceso de reutilización, se deben tener presentes ciertas consideraciones. Es por ello que Christensen (Christensen.S.R, 1995) propone siete (7), pero para el desarrollo del sistema, sólo se utilizaran las mencionadas a continuación: 12  Modelado y análisis del dominio.  Desarrollo de la arquitectura del dominio.  Incremento de la documentación para facilitar la reutilización. Teniendo en cuenta estas consideraciones, se seleccionaron los artefactos que fueron reusados en el desarrollo del sistema. A continuación se explican las opciones que existen de los diversos artefactos que pueden reutilizarse. Artefactos Reutilizables Capers Jones (Jones, 1994) define diez (10) artefactos del software que son candidatos para la reutilización:  Estimaciones de costos: Dado que es frecuente implementar funciones similares en distintos proyectos, quizá sea posible reutilizar estimaciones para esas funciones con pocas modificaciones o ninguna.  Especificaciones y modelos de requisitos: Los modelos y especificaciones de clases y objetos son candidatos evidentes para la reutilización. Además, los modelos de análisis desarrollados empleando enfoques convencionales de ingeniería del software también se pueden reutilizar.  Datos: Entre los artefactos más frecuentemente reutilizados, los datos abarcan las tablas internas, listas y estructuras de registros, así como los archivos y bases de datos completas.  Casos de prueba: Siempre que es preciso reutilizar un diseño o un componente de código, el caso de prueba relevante deberá de estar “asociado” a él.  Planes de proyecto: La estructura básica y gran parte del contenido de un plan de proyecto de software se podrán reutilizar entre proyectos sucesivos. Esto reduce el tiempo necesario para desarrollar un plan y la incertidumbre 13 asociada al establecimiento de planes temporales, al analisis de riesgos y otras características.  Arquitectura: Existen relativamente pocos programas y pocas arquitecturas de datos distintas aun cuando se consideren distintos programas de aplicación. Es posible crear un conjunto de plantillas arquitectónicas genéricas y se pueden establecer esas plantillas como entornos reutilizables para el diseño.  Diseños: Los diseños arquitectónicos, de datos, de interfaz y de procedimientos desarrollados empleando métodos convencionales son candidatos para la reutilización. Con más frecuencia, los diseños de sistemas y de objetos van a ser reutilizados.  Código Fuente: Los componentes verificados de programas escritos en lenguajes de programación compatibles son candidatos para la reutilización.  Documentación del usuario y técnica: Suele ser posible reutilizar grandes porciones de la documentación de usuario y técnica, aun cuando las aplicaciones específicas sean distintas.  Interfaces Humanas: Siendo posible el artefacto del software más ampliamente reutilizado. Dado que puede dar cuenta de casi un 60 por ciento del volumen del código de las aplicaciones, los beneficios de su reutilización son significativos. De todos los artefactos antes mencionados, para el desarrollo de este sistema se decidió reutilizar los siguientes: planes de proyecto; código fuente; arquitectura; diseños; interfaces humanas; documentación del usuario y técnica, porque son las que mejor se adaptaron a las necesidades. Para reutilizar en el desarrollo del proyecto los artefactos seleccionados, se utilizó el modelo propuesto por Pressman(1997), mostrado a continuación. 14 1.2.2 Modelos de Proceso para reutilización En Pressman (1997 se muestra toda una gama de modelos de procesos para la reutilización. Cada una de estos modelos, hace hincapié en los rastros paralelos entre la ingeniería de dominios y la ingeniería del software. La ingeniería de dominio se puede definir como “el proceso clave que se necesita para el diseño sistemático de una arquitectura y de un conjunto de elementos de software reutilizables que pueden ser usados en la construcción de una familia de aplicaciones relacionadas o subsistemas” [Griss, M. L. (1996)]. La ingeniería del dominio se encarga de efectuar el trabajo necesario para establecer un conjunto de artefactos de software que se pueden reutilizar por parte del ingeniero del software. Estos artefactos se transportan entonces a través de “limites” que separan la ingeniería del dominio de la ingeniería del software (Pressman, 1997). La Figura 1.5 ilustra un modelo de proceso que admite explícitamente la reutilización. La ingeniería del dominio crea un modelo del dominio de la aplicación que se utiliza como base para analizar los requisitos del usuario en el flujo de la ingeniería del software. La arquitectura del software proporciona la entrada para el diseño de la aplicación. Finalmente, una vez que se han construido los componentes reutilizables, se ponen a la disposición de los ingenieros de software durante la actividad de construcción del software. 15 Figura 1.4 Modelo de Proceso para la reutilización (Pressman, 1997). Si bien, la ingeniería de Dominios propone un proceso para diseñan e implementan componentes destinados al reuso, se debe señalar que para el desarrollo de este sistema, el objetivo no es crear componentes, sino reutilizar los ya existentes. Es por ello, que el proceso de la ingeniería de dominios, no es necesario ejecutarlo por completo. Al inicio del desarrollo del proyecto, se implementó el análisis de dominios para crear el modelo de dominios y obtener los componentes que fueron reutilizados. A partir del modelo de dominios obtenido y los requerimientos del usuario se hizo un análisis de sistemas, luego se completó el proceso de ingeniería del software, con algunas adaptaciones. En la Figura 1.5, se muestra el Modelo de Proceso propuesto para este trabajo. 16 Figura 1.5 Modelo de Proceso para la reutilización de componentes en el sistema. 17 2 Capítulo 2: Marco Metodológico Durante el desarrollo de software no es suficiente contar con el modelado y las herramientas, sino que también se debe considerar la metodología de desarrollo, ya que a través de ella se obtienen las estrategias para emplear el resto de los elementos y culminar exitosamente el proyecto planteado, manteniendo la comunicación con el cliente. Es por esto que en Ingeniería del Software es de suma importancia seleccionar la metodología más adecuada para la realización de un proyecto, esto se logra teniendo en cuenta el tipo de software que se desea realizar y los requerimientos del mismo. A continuación se presenta la metodología propuesta para realizar un proyecto basado en la reutilización de componentes, el lenguaje de patrones de interacción y las adecuaciones que se deben hacer, para obtener un producto aceptable por el usuario 2.1 Enfoque de Desarrollo: Modelado Ágil. El enfoque que se propone para la realización de este proyecto es el modelado ágil, porque permite culminar el trabajo en corto tiempo, realizando los artefactos necesarios y logrando que todos los integrantes del equipo tengan una participación activa. Adicionalmente a esto, una de las razones y posiblemente la que representa mayor peso al momento de elegir este enfoque, es que una de las prácticas adicionales que posee el modelado ágil según Ambler (2002) es reutilizar los recursos existentes. Origen En febrero de 2001, tras una reunión celebrada en Utah-EEUU, nace el término ágil aplicado al desarrollo de software. En esta reunión participa un grupo de diecisiete expertos de la industria del software, incluyendo algunos de los 18 creadores o impulsores de metodologías de software. Su objetivo fue esbozar los valores y principios que deberían permitir a los equipos desarrollar software rápidamente y respondiendo a los cambios que puedan surgir a lo largo del proyecto. Se pretendía ofrecer una alternativa a los procesos de desarrollo de software tradicionales, caracterizados por ser rígidos y dirigidos por la documentación que se genera en cada una de las actividades desarrolladas. Tras esta reunión se creó The Agile Alliance, una organización, sin fines de lucro, dedicada a promover los conceptos relacionados con el desarrollo ágil de software y ayudar a las organizaciones para que adopten estos conceptos. Modelado Ágil Según Ambler (2002) el Modelado Ágil (AM) es una metodología basada en la práctica para un modelado efectivo y documentación de sistemas basados en software. Simplemente, la metodología AM es una colección de valores, principios y prácticas para la modelación de software que puede ser aplicado efectivamente en un proyecto de desarrollo de software de manera simple. Como se puede observar en la Figura 2.1 AM debe estar adaptada a una metodología como son XP o RUP, permitiendo que el proceso de desarrollo de software satisfaga sus necesidades (Ambler, 2006). Figura 2.1 AM Mejora de otros procesos de software (Ambler, 2006) Los valores de AM que son adoptados y ampliados de la programación extrema v1 son: la comunicación, sencillez, comentarios, valentía y humildad. 19 Las claves del éxito del modelado según Ambler (2002)son:  Tener una buena comunicación entre todos los interesados del proyecto que se esfuerzan, por desarrollar una solución sencilla que cumpla con todas las necesidades planteadas, para conseguir comentarios acerca de sus esfuerzos.  Tener la valentía de hacer y cumplir con sus decisiones y poseer la humildad para poder admitir que no puede saberlo todo.  Aceptar el apoyo que puedan prestar el resto del equipo. El Modelado Ágil se basa en un conjunto de principios propuestos por Ambler (2002), para garantizar el éxito del resultado final del proyecto, estos principios son:  Asumir simplicidad cuando se está modelando.  Aceptar el cambio que se está realizando, ya que las necesidades pueden llegar a cambiar con el tiempo.  Se debe reconocer que un cambio progresivo de un sistema a través del tiempo permite agilidad.  Rápida retroalimentación sobre el proyecto, para ello se deben hacer entregas frecuentemente de los módulos del software que funcionen correctamente e intentar que estas entregas se realicen con el menor intervalo de tiempo entre ellas.  Debe modelar con un propósito; es decir, si desconoce el por qué está trabajando en algo o lo que el cliente requiere, entonces es preferible que no trabaje en el proyecto.  Trabajo de calidad; es decir, la calidad del código y del diseño debe ser continua.  Maximizar la inversión de las partes interesadas en el proyecto, los desarrolladores se organizan entre ellos mismos se administran los cargos y muchas veces los mejores diseños surgen de esto. 20  Los modeladores ágiles piensan que el contenido es más importante que la representación, que hay muchas formas de modelar el mismo concepto y aun así hacer las cosas bien.  Todos podemos aprender de todos; es decir, no sentirse que se la sabe todas.  Comunicación abierta y honesta, es a menudo la mejor política a seguir para garantizar un eficaz trabajo en equipo. Adicionalmente a los principios Ambler (2002) propone las siguientes prácticas para llevar a cabo la modelación ágil:  La participación activa de todos aquellos que soportan el proyecto es fundamental para el éxito de los esfuerzos del modelo, porque los interesados en el proyecto son los únicos que saben lo que necesitan.  Considerar la puesta a prueba del sistema.  Representar los modelos de manera simple.  Presentar los modelos públicamente, para mantener una comunicación activa.  Iterar a otros artefactos, para avanzar a un ritmo constante.  Modelar en pequeños incrementos y no intentar abarca todos los modelos, es fundamental para su éxito como un modelador ágil, dado que los modelos sólo son representaciones abstractas de software, abstracciones que pueden no ser exactas.  Trata de probarlo con el código, para verificar que las ideas funcionan en la práctica.  Use las herramientas más simples para la creación de los modelos.  Aplique los estándares de modelado. 21  Sus esfuerzos de desarrollo son mejores cuando aplica los patrones necesarios.  Se deben descartar los modelos temporales.  Debido a que a menudo tienen que integrar con otros sistemas, incluyendo bases de datos, así como servicios basados en web. Se necesita Formalizar los modelos de contrato con los propietarios de esos sistemas.  Modele para comunicar y entender.  Reutilice los recursos existentes. 2.1.1 Desarrollo Dirigido por Modelos Ágiles (AMDD) Como lo propone Ambler (2002), Desarrollo Dirigido por Modelos Ágiles es la versión ágil de Desarrollo Dirigido por Modelos (MDD). MDD es un enfoque de desarrollo de software donde los modelos se crean antes del código fuente. Por lo tanto, AMDD es un enfoque donde en lugar de esforzase por desarrollar modelos extensos antes de escribir el código se crean modelos ágiles, los cuales se utilizan para la exploración y análisis de los requerimientos del sistema. En la Figura 2.2 se representa el ciclo de vida del modelo ágil para el desarrollo de un sistema, donde cada elemento representa las iteraciones que se llevan a cabo en el desarrollo del proyecto. La primera iteración está representa en color verde, y la componen dos actividades, las cuales consisten en visualizar los requerimientos iniciales del usuario y seleccionar una arquitectura que se adapte mejor al cumplimiento de estos requerimientos. La iteración siguiente, representada en color azul, se encuentra constituida por tres (3) actividades: Modelar Iteración, Tormenta de Modelos y Desarrollo/Pruebas, las cuales se pueden ejecutar en cualquier iteración sin restricción, incluyendo en la iteración 0. El tiempo indicado en cada caja representa el tamaño de una sesión promedio. 22 Figura 2.2 Ciclo de vida de AMDD: Modelado de actividades del ciclo de vida de un proyecto (Ambler,2007) En la Figura 2.3 que se muestra a continuación, refleja cómo encajan las actividades de AMDD en las iteraciones del ciclo de vida de desarrollo ágil. Es otra manera de mostrar que un proyecto ágil comienza con algún modelaje inicial y que este modelaje sigue ocurriendo en cada una de las demás iteraciones. Figura 2.3 AMDD a través del Ciclo de Vida de Desarrollo Ágil. (Ambler,2007) 23 Cuando se decide utilizar el modelado ágil, se debe tomar en cuenta que durante la primera semana de desarrollo del proyecto el enfoque principal es plantearse cuál es el alcance del sistema, así como también la arquitectura que se desea utilizar. Pero para poder lograr esto, es de gran importancia obtener los requerimientos de alto nivel y modelar la arquitectura de lo necesitado. Es decir plantearse una estrategia para lograr el éxito del proyecto. Para los proyectos cortos, es altamente probable lograr este trabajo en las primeras horas y para los proyectos largos, se podría considerar la inversión de dos semanas en este esfuerzo, es recomendable no exceder este tiempo, ya que se corre el riesgo de modelar algo que tiene demasiados problemas. Etapas que intervienen en el Modelado Ágil Las etapas que intervienen en el modelado ágil son: Requerimientos iniciales, la arquitectura inicial, modelado de las iteraciones, tormenta de modelos y desarrollo/pruebas. A continuación se explicará en detalle en qué consiste cada una de ellas. Los Requerimientos iníciales: Su principal objetivo es construir un conocimiento compartido, o es escribir documentación detallada. Un factor clave de éxito es el uso de técnicas de modelado que permitan la participación activa de los interesados. Para esta etapa es necesario un modelo que permita realizar el análisis de cómo los usuarios trabajan con el sistema, un modelo inicial del dominio en el que se identifiquen los requerimientos fundamentales de la entidad de negocio y las relaciones, y un modelo inicial de interfaz que explore la interfaz de usuario y la usabilidad. La Arquitectura inicial: El objetivo es tratar de identificar una arquitectura que tenga buenas oportunidades para realizar el desarrollo de la aplicación. Esto permite establecer una técnica viable para el desarrollo del proyecto y proporciona información suficiente para organizar el equipo de trabajo alrededor de la arquitectura. Por el lado de la arquitectura se suelen crear los diagramas de forma 24 libre, aquellos que representen la infraestructura técnica, los modelos iníciales de dominio para explorar las entidades de negocio principales y sus relaciones. En iteraciones posteriores los requerimientos iníciales y la arquitectura inicial tendrá que evolucionar a medida que van creciendo las definiciones de más partes, pero por los momentos lo importante es obtener el modelado de una arquitectura inicial lo suficientemente bueno, que permita al grupo desarrollador ponerse en marcha. El secreto de todo es mantener las cosas simples. No es necesario modelar a grandes detalles. Modelado de las Iteraciones: Al comienzo de la construcción de cada una de las iteraciones para el desarrollo del sistema, el equipo desarrollador deberá estimar y programar qué se hará en cada iteración. Figura 2.4 Los Requerimientos ágiles cambian la gestión del proceso. (Ambler, 2007) En la Figura 2.4 se observan los diferentes valores que pueden tomar los elementos de trabajo en una iteración, el elemento de mayor importancia se encuentra en la cima de la pila. Para poder hacer esto con éxito debe ser capaz de calcular con exactitud el trabajo requerido para cada necesidad y estimar el tiempo 25 necesario para realizar un requerimiento, es aquí donde entra en juego el modelado. Tormenta de Modelos: No son programadas con antelación y debe durar aproximadamente de 5 a 10 minutos, es poco convencional cuando dura más de 30 minutos. El equipo de trabajo se reúne alrededor de una herramienta de modelado compartido y se procede a explorar un tema hasta que todos se encuentren satisfechos de entenderlo, esto se hace con el fin de identificar los problemas que se tendrán que resolver y el equipo de trabajo pueda llegar a su resolución. Desarrollo/Pruebas: Durante el desarrollo es bastante común realizar la tormenta de modelo durante varios minutos y, a continuación se implemente el código de la aplicación esto puede tardar varias horas o incluso varios días, en esta etapa el equipo de trabajo consume el mayor tiempo. Las pruebas, también llamadas pruebas de aceptación, se pueden considerar como una forma para detallar los requerimientos, mientras que en las pruebas de desarrollo se logra detallar el diseño. 2.2 Lenguaje de Patrones Christopher Alexander, define los patrones como “una solución a un problema que se utiliza repetidamente en contextos similares con algunas variantes en la implementación” (Alexander, 1995). El objetivo de los patrones, es capturar buenas prácticas que nos permitan mejorar la calidad del diseño de un sistema, determinando elementos que soporten roles útiles en ese contexto, encapsulando complejidad y haciéndolo más flexible (Díaz Toledano, p.5). Martijn Van Welie (2008) cuenta con un sitio donde presenta algunas buenas prácticas en el diseño de patrones de interacción. Más que todo son recopilaciones de ideas y ejemplos, así que realmente no son originales de su autoría. Advierte que no es un sustituto para el diseño creativo, simplemente se trata de describir lo que sabemos y hemos aprendido acerca de las soluciones que 26 se encuentran en la web. Afirma que cada "solución" descrita en los patrones pueden tener éxito en un contexto, pero también puede fallar en otro. El desafío es entender por qué y cómo depende de los elementos del contexto de uso. Los sistemas que poseen objetivos comunes pueden llegar a compartir una arquitectura, procesos bien definidos y un conjunto de elementos similares; por lo tanto, cuando se decide iniciar un proyecto de diseño no hay por qué inventar la rueda de nuevo, existe conocimiento presente en otros sistemas que puede ser reutilizado pero ¿cómo se puede identificar soluciones ya implementadas en otros sistemas para los problemas que surgen en un proyecto de desarrollo en particular? Ahora se está frente a la tripleta problema-contexto solución que es la clave para ajustar la solución ya existente a un problema repetido dentro de un contexto específico, de ahí se determina que estos tres elementos sean los atributos obligatorios de todo patrón. Acosta (2004), propone un método de desarrollo de interfaz de usuario donde, a partir del modelo de casos de usos y el modelo de objetos del dominio construye el lenguaje de patrones de interacción asociado a ésta interfaz. Este artefacto ayuda al equipo de desarrollo, con el fin de mantener la coherencia y consistencia en los aspectos de diseño. Cuando surge un nuevo requerimiento para la interfaz de usuario, éste es resuelto utilizando la sintaxis y semántica del lenguaje. El Lenguaje de Patrones está formado por, al menos, un patrón de dominio que describe el dominio al cual pertenece el sistema que se está desarrollando. El patrón de dominio debe referenciar al patrón de sistema que describe el propósito del mismo, así como los aspectos de usabilidad que se deben tomar en cuenta en el diseño de la interfaz. A partir de este patrón se referencian todos aquellos patrones resultantes del análisis de los casos de uso (Acosta, 2004, p.107). Un lenguaje de patrones sirve como referencia conceptual del dominio del problema, ya que parten de la solución a un conjunto de casos de uso, e 27 interacciones con actores específicos. Además de constituir un marco conceptual en el diseño de la arquitectura del sistema (Díaz Toledano, p.5). El lenguaje de patrones debería contar con una notación, por lo cual (Acosta, 2004, p.104) establece una notación para los patrones dependiendo de su tipo y la relación de referencia que puede existir entre éstos. La Figura 2.5 muestra la notación establecida para los patrones de interacción y la relación de referencia de un patrón a otro. A fin de facilitar la memorización de esta notación, opcionalmente, se agrega una letra en el interior del símbolo que representa cada patrón. Figura 2.5 Notación para los patrones de interacción y relación de referencia Según (Garreta, 2007) los patrones pueden ser muy útiles en cualquier proyecto debido a que:  Hacen más eficiente el diseño, pues no es necesario volver a generar alternativas para solucionar un problema y elegir una de ellas.  Por su antigüedad, ya han sido probados y se conoce su eficacia. Esto evita riesgos en el desarrollo de una nueva solución para un problema conocido. 28  Permiten crear estándares de uso, los usuarios acaban conociéndolos e incluso esperándolos y contribuye a un fácil aprendizaje de los sistemas.  Crean un vocabulario común que contribuye a mejorar la comunicación interna entre diseñadores. Los patrones de iteración deben seguir una estructura, el problema es que existen muchas formas de hacerlo, expresadas en varias literaturas, pero hasta ahora ninguna se ha establecido como estándar. Es por ello, que se decide implementar la forma alejandrina extendida mostrada en la Tabla 2.1. Tabla 2.1 Estructura de patrones propuesta. Nombre El título del patrón, el cual debe ser representativo, claro y conciso del concepto a comunicar. Autor Es quien propone el patrón. Problema Es una descripción del patrón desde el punto de vista del usuario. Contexto Una descripción de la situación en la cual puede usarse el patrón, cuales son las características del contexto, en términos de las tareas, del usuario. Solución Un ejemplo ilustrativo de una solución exitosa. Descripción de la Solución Una descripción del ejemplo ilustrativo de la solución exitosa propuesta. A continuación en la Figura 2.6 se puede observar un ejemplo de lenguaje de patrones aplicado a una Biblioteca Digital, donde se establece como patrón de dominio a las bibliotecas virtuales y como patrón del sistema una biblioteca digital, la cual está conformada por una serie de tareas, elementos simples y elementos compuestos que pueden ser observados en los niveles siguientes del modelo. 29 Figura 2.6 Ejemplo del Lenguaje de Patrones de una Biblioteca Digital. 2.3 Adecuación del Enfoque de Desarrollo En esta sección, se presenta la propuesta de adecuar la modelación ágil al contexto de desarrollo, utilizando el lenguaje de patrones de iteración como elemento para referenciar el dominio donde se ubica la aplicación, con la intención de lograr un mayor nivel de usabilidad, puesto que el propósito central es reutilizar el modelo conceptual que tiene el usuario sobre aplicaciones similares. La actividad fundamental que da inicio al proceso de desarrollo es el análisis del dominio, para ello dentro de esta propuesta se utiliza la evaluación heurística como técnica para la obtención de los requerimientos (tanto funcionales como no 30 funcionales) de aplicaciones similares. Al realizar esta actividad, se debe tener como producto los siguientes artefactos iniciales, sin ningún orden establecido:  El lenguaje de patrones de interacción, representa la referencia al dominio de la aplicación, este se va desarrollando durante todo el proceso facilitando el reuso de los elementos que conforman la interfaz.  El mapa de navegación del sistema, como modelo estructural de la aplicación a realizar y el modelo conceptual esperado por el usuario.  El modelo de casos de uso, como una estructura receptora de los requerimientos funcionales (pila de requerimientos).  Una arquitectura inicial de la aplicación, este trabajo se llevará a cabo bajo el esquema cliente-servidor, pero esto dependerá del Framework que se utilice en la implementación.  El desarrollo o diseño de algunos componentes reutilizables en términos de patrones de interacción. Estos artefactos se consideran como el conjunto mínimo para dar inicio a la fase de implementación (desde la iteración 1 hasta la n) del sistema y pueden ser modificados durante las iteraciones posteriores. En cada iteración, se identifican tres actividades:  Modelar: Depende del requerimiento a implementar. Se puede analizar un componente para reutilizarlo y adaptarlo al contexto de desarrollo o, realizar análisis y diseño de un componente para ser implementado desde cero.  Implementación: Realizar el componente diseñado, ó se realiza la adaptación del componente que se va a reutilizar.  Prueba: En esta actividad se llevan a cabo tres (3) tipos de prueba, la primera es aplicada a la unidad funcional, la segunda se aplica cuando se 31 integra el componente dentro de la arquitectura cliente servidor y la última son las pruebas aplicadas al sistema integrado con los componentes. Al obtener aproximadamente el 80% de las funcionalidades del sistema implementadas, se somete a un proceso de prueba, este proceso es aplicado a usuarios (fuera del equipo de desarrollo), se propone las siguientes: Evaluación Heurística: (Manchón, 2003) la define “como el punto de vista de los expertos en la materia, pero es altamente recomendable hacer pruebas de usabilidad con los usuarios reales”. Mientras (Mina, 2008) la define como “un análisis de experto en el cual se hace una inspección minuciosa a interfaces o sistemas con el fin de determinar si cada uno de sus elementos se adhieren o no a los principios de usabilidad, diseño o arquitectura de información comúnmente aceptados en sus respectivas disciplinas”. Una evaluación heurística “puede ser tan flexible o rigurosa como sea requerida. Igualmente a mayor número de evaluadores (usuarios expertos), es más probable detectar la mayoría de los problemas que presente la interfaz. Tampoco se debe caer en el exceso de querer 50 evaluadores (usuarios expertos), un promedio de 4 a 7 es más que suficiente” (Mina, 2008). “Esta evaluación detecta aproximadamente el 42% de los problemas graves de diseño y el 32% de los problemas menores, dependiendo del número de evaluadores que revisen el sitio” (Manchón, 2003). Encuesta de Usabilidad: Se realiza para comprobar la usabilidad del sitio web. La encuesta debe ser diseñada por un especialista y realizada sobre usuarios públicos o potenciales de nuestro sitio web. Consiste en que el usuario debe realizar un conjunto de tareas, determinadas por un experto, mientras el experto debe comprobar que tan fácil se le hizo al usuario realizar esas tareas. 32 Mapas de calor web: permiten de manera muy sencilla y visual averiguar qué zonas del sitio web atraen más la atención de los visitantes. Por eso su nombre, porque nos muestran las zonas “calientes” de una página web. Las pruebas realizadas a un elemento de manera individual y cuando se integra este elemento al sistema, son llevadas a cabo por los especialistas del equipo de trabajo. Mientras que las pruebas, realizadas sobre todo el sistema integrado, son aplicadas a personas externas al equipo de trabajo del proyecto. A continuación en la Figura 2.7 se observa el ciclo de vida de la metodología propuesta luego de las adecuaciones aplicadas. Del lado izquierdo se muestra los artefactos obtenidos en cada iteración, mientras del lado derecho se observan las iteraciones. Figura 2.7 Ciclo de vida de la adecuación aplicada a la modelación ágil de Ambler (2007) 33 Como se observa en la Figura 2.7, al terminar la iteración 0 se deben tener los siguientes artefactos: Modelo de Casos de Uso, requerimientos no funcionales, pila de requerimientos, mapa de navegación y el lenguaje de patrones de iteración del sistema. Al finalizar cada una de las demás iteraciones se obtienen: El patrón de los componentes que se están reutilizando, el modelo de secuencia (sólo si es necesario), código fuente y la interfaz que muestra el/los componente(s) implementado(s), resultado de las pruebas de funcionamiento al componente de manera individual e integrado al sistema (aplicadas a los expertos pertenecientes al equipo de trabajo). Figura 2.8 Actividades ejecutadas en cada iteración del Ciclo de Vida de Desarrollo de la adecuación del Modelado Ágil de Ambler (2007). A continuación en la Figura 2.8 se muestra las actividades a realizarse durante cada iteración. En la iteración 0 se realiza la selección de la arquitectura, se identifican los requerimientos funcionales y no funcionales del sistema, y se realiza el análisis del dominio. En el resto de las iteraciones, se presentan actividades dependiendo del origen del componente, es decir, si el componente es reusado se realizan las siguientes actividades: análisis del componente a reutilizar, adaptaciones necesarias a cada componente y pruebas de funcionamiento. Si en caso contrario, el componente no está siendo reusado, se ejecutan estas actividades: diseño del nuevo componente, implementación del componente y pruebas de funcionamiento. 34 Luego de terminar la iteración 4, se realiza la liberación del producto, donde se efectúan las pruebas al sistema, aplicadas a los usuarios que no son parte del equipo de trabajo, estas pruebas son: encuesta de usabilidad, evaluación heurística y mapa de calor. 35 3 Capítulo 3: Marco Aplicativo A continuación se presenta la parte experimental, donde se aplica la metodología propuesta en el Capítulo 2, así como su correspondiente análisis de las pruebas y los resultados obtenidos. Finalmente se plantean las conclusiones del trabajo realizado. 3.1 Desarrollo del Sistema Para aplicar y demostrar la metodología planteada, se selecciona el caso del Banco Central de Venezuela (BCV), organismo rector de las políticas monetarias del país, cuyos objetivos y funciones se observan en la misión y visión del organismo (Página Oficial del Banco Central de Venezuela). Misión El Banco Central de Venezuela tiene entre sus objetivos más significativos, lograr la estabilidad de precios y preservar el valor interno y externo de la moneda como parte de las políticas públicas que contribuyen con el desarrollo humano integral y el progreso armónico de la economía nacional, para alcanzar los objetivos superiores del Estado y la nación. De allí que estará comprometido con la tarea del desarrollo y coadyuvará a los procesos implícitos en éste, armonizándolos con los de las esferas monetaria y cambiaria. Asimismo, en el marco de la integración Latinoamérica y caribeña, el Banco Central de Venezuela establece los mecanismos para facilitar la coordinación de políticas macroeconómicas con los bancos centrales regionales. Para lograr estos propósitos, el Instituto tiene entre sus funciones las de formular y ejecutar la política monetaria; participar en el diseño y ejecutar la política cambiaria; regular la moneda, el crédito y las tasas de interés; administrar las reservas internacionales y estimar su nivel adecuado; velar por el 36 funcionamiento del sistema de pago; emitir especies monetarias y asesorar a los poderes públicos nacionales en las materias de su competencia. Visión El Banco Central de Venezuela se proyecta como un organismo: a) Que armoniza la formulación y ejecución de las políticas de su competencia con las necesidades del país y los fines del Estado en la regulación de la economía y el desarrollo integral. b) Que consolida su integración con el proceso nacional para cooperar con el desarrollo del país. c) Que afianza, con el desempeño de cada una de sus funciones y responsabilidades, un modelo de comportamiento de alta credibilidad, reputación, prestigio y solidaridad. d) Que desarrolla un ambiente de ejercicio de sus plenas capacidades, de actuación responsable, transparente, coordinada y comprensible para la sociedad. Funciones Para el adecuado cumplimiento de su objetivo, el Banco Central de Venezuela tendrá a su cargo las siguientes funciones:  Formular y ejecutar la política monetaria.  Participar en el diseño y ejecutar la política cambiaria.  Regular el crédito y las tasas de interés del sistema financiero.  Regular la moneda y promover la adecuada liquidez del sistema financiero.  Centralizar y administrar las reservas monetarias internacionales de la República.  Estimar el Nivel Adecuado de las Reservas Internacionales de la República.  Participar en el mercado de divisas y ejercer la vigilancia y regulación del mismo, en los términos en que convenga con el Ejecutivo Nacional. 37  Velar por el correcto funcionamiento del sistema de pagos del país y establecer sus normas de operación.  Ejercer, con carácter exclusivo, la facultad de emitir especies monetarias.  Asesorar a los poderes públicos nacionales en materia de su competencia.  Ejercer los derechos y asumir las obligaciones de la República en el Fondo Monetario Internacional, según lo previsto en los acuerdos correspondientes y en la ley.  Participar, regular y efectuar operaciones en el mercado del oro.  Compilar y publicar las principales estadísticas económicas, monetarias, financieras, cambiarias, de precios y balanza de pagos.  Efectuar las demás operaciones y servicios propios de la banca central, de acuerdo con la ley. Para cumplir con la función de “Compilar y publicar las principales estadísticas económicas, monetarias, financieras, cambiarias, de precios y balanza de pagos”. La institución propuso la implementación de una hemeroteca virtual de uso público, ya que el acceso a esta información ha estado limitado a personal técnico, especializado, académico y empresarial, que sabe de su existencia. La hemeroteca contará con el conjunto de información impresa publicada por esta Institución en los siglos XX y XXI en las áreas económica y social, permitirá el acceso a esta información, aún desde los puntos más remotos del país y del mundo, mediante el acceso web. El caso de estudio contempla la digitalización y catalogación de la documentación, para su posterior uso por medio de buscadores tradicionales y semánticos que permitan generar conocimiento, hasta ahora aislados y disponibles sólo en papel y a un público limitado y exclusivo. Para la realización de un proyecto es muy importante establecer un equipo de trabajo, donde se establezcan roles y actividades que deben desempeñar para 38 cada uno de ellos. Es por esto, que para el desarrollo de este sistema, se decide contar por lo menos con 3 especialistas que supervisen los avances logrados durante cada iteración y al menos 2 programadores que manejen la arquitectura sobre la cual se está trabajando. Además del equipo de trabajo se definen los tipos de usuarios que interactúan con el sistema. 3.2 Usuarios Los usuarios que interactúan con el sistema, se describen a continuación:  Usuario Cliente: Conformado por el personal designado por el Banco Central de Venezuela, para acompañar el desarrollo y realizar las validaciones de entrega  Usuario Experto dentro del equipo de trabajo: Conformado por los expertos categorización de documentos económicos, pertenecientes al equipo de trabajo.  Usuario Especialista: Conformado por especialistas en el área de informática, cuya participación será para realizar la evaluación heurística del sistema.  Usuario Público: Conformado por el resto de la población interesada en el uso del sistema. 3.3 Iniciación del Proyecto (Iteración 0) Se representa como la iteración 0 y durante esta etapa se lleva a cabo la recolección y el análisis de los requerimientos del sistema, para así poder determinar las funcionalidades necesarias, los actores y las relaciones entre los mismos. Adicionalmente, se estableció la arquitectura inicial del sistema bajo el esquema cliente-servidor. 3.3.1 Requerimientos Iniciales En esta sección se muestran: el análisis del dominio para colaborar con la obtención de los requerimientos del sistema, los requerimientos funcionales a 39 través del modelo de casos de uso, la pila de requerimientos del sistema, los requerimientos no funcionales con su descripción, el mapa de navegación y el lenguaje de patrones del sitio que se desarrolló. 3.3.1.1 Análisis del Dominio Durante esta actividad, se realizó un recorrido a través de sistemas existentes que pertenecen al dominio establecido. A partir de esto, se extrajeron las mejores prácticas en cuanto a la usabilidad para establecer un abanico de opciones que se analizaron para escoger los componentes que cumplen con los requerimientos funcionales planteados. Luego se realizó la adaptación de los componentes para el desarrollo de nuevo sistema, ya que no se puede garantizar que al extraer componentes usables de un entorno y colocarlos en otro se mantenga la misma usabilidad. A continuación se muestran los sistemas que fueron extraídos de la web, para empezar la investigación: 1. http://pkp.sfu.ca/ojs/demo/present/index.php/demojournal/index: Es el sitio de una revista digital que se publica trimestralmente. Este periódico electrónico se centra en la integración de los países en desarrollo y en vías de industrialización, así como los países en transición de Europa Central y Oriental en los procesos mundiales económicos, sociales y políticos. En la Figura 3.1 se muestra la página de inicio de Open Journal Systems Demonstration Journal. http://pkp.sfu.ca/ojs/demo/present/index.php/demojournal/index 40 Figura 3.1 Página inicial de Open Journal Systems Demonstration Journal 41 2. http://www.europeana.eu/portal/: Europeana permite a las personas explorar los recursos digitales de los museos de Europa, las bibliotecas, archivos y colecciones audiovisuales. Promueve oportunidades de descubrimiento y creación de redes en un espacio multilingüe, donde los usuarios pueden participar, compartir y ser inspirado por la rica diversidad del patrimonio cultural y científico de Europa. En la Figura 3.2 se muestra la página de inicio de www.europeana.eu Figura 3.2 Página inicial de europeana. http://www.europeana.eu/portal/ 42 3. http://books.google.es/: Es el buscador de libros de google, que permite la administración de estantes afiliados a una cuenta de gmail. En la Figura 3.3 se muestra la página de inicio de google libro. Figura 3.3 Página inicial de google libro. http://books.google.es/ 43 4. http://bvsmodelo.bvsalud.org/php/index.php: Es una Biblioteca Virtual en Salud (BVS) que representa una expansión del modelo actual de cooperación técnica para promover la producción y operación descentralizadas de fuentes de información multimedia, conectados en red, con acceso directo y universal, sin limitaciones geográficas y temporales. En la Figura 3.4 se muestra la página inicial del sitio. Figura 3.4 Página de inicio de bvs http://bvsmodelo.bvsalud.org/php/index.php 44 5. http://regional.bvsalud.org/php/index.php: Es una biblioteca virtual igual que la anterior, pero en este caso es regional para Brasil. En la Figura 3.5 se puede observar la página inicial del sitio. Figura 3.5 Página de inicio de bvs regional. 45 6. http://www.lalibreriadelau.com/lu/: Es un portal en internet que facilita de forma innovadora el acceso al conocimiento y a la cultura a millones de usuarios y clientes en cualquier parte del mundo, a través de miles de obras de instituciones vinculadas, que hacen parte de un amplio portafolio referido a libros impresos, e-books, libros a demanda, revistas, e-readers,e-learning, películas, entre otros variados productos y servicios. En la Figura 3.6 puede observar la página inicial del sitio. Figura 3.6 Página de inicio de lalibreradelau.com http://www.lalibreriadelau.com/lu/ 46 7. http://twitter.com/: Red social. En la Figura 3.7 se observa la página inicial de Twitter. Figura 3.7 Página de inicio de Twitter. Luego de analizar los sistemas seleccionados, se escogieron los componentes que cumplen con los requerimientos funcionales planteados inicialmente, y comenzar a adaptarlos para el desarrollo de nuestro nuevo sistema. En la Tabla 3.1 se muestran los componentes que fueron seleccionados junto al requerimiento funcional que se desea cumplir. http://twitter.com/ 47 Tabla 3.1 Relación entre los requerimientos funcionales y el componente a analizar. Requerimiento Funcional Componente y Fuente 1. Ofrecer ingreso y registro a cuentas personales para cada usuario. 48 2. Mostrar las revistas por nombre en la página de inicio. 3. Dar al usuario la opción de personalizar su biblioteca 49 4. Mostrar una barra de herramientas cuando se visualice un volumen. 50 5. Mostrar información actualizada de los eventos que están por realizarse, últimas noticias y documentos más buscados. Opción 1 Opción 2 6. Mostrar una búsqueda simple en la página de inicio con enlace a búsqueda avanzada. 51 7. Ofrecer opciones para hacer las búsquedas. 52 8. Visualización de los resultados. 53 El análisis del dominio, ayudó con la determinación de los requerimientos funcionales y no funcionales del sistema. En la siguiente sección se muestran los requerimientos funcionales establecidos, a partir del análisis del dominio. Requerimientos Funcionales Los requerimientos funcionales son todos aquellos que describen las distintas funcionalidades que se espera del sistema y las interacciones del mismo con su entorno. La manera que se utiliza para representar estos requerimientos es a través de la realización del modelo de casos de uso, el cual permite describir las funcionalidades que debe proveer el sistema. En la Figura 3.8 se muestra el modelo de casos de uso, posteriormente en la Tabla 3.2 se puede observar la descripción de los actores involucrados y en la Tabla 3.3 la descripción de cada caso de uso. 54 System Usuario ACT-1 Iniciar Sesión Registrarse en el Sistema Autenticarse Consultar Catálogo de Revista Realizar Búsquedas en Revistas Visualizar Ayuda Visualizar Revistas Personalizar Biblioteca Agregar Comentarios y Sugerencias sobre el Sistema CU-01 CU-02 CU-03 CU-04 CU-09 CU-08 CU-07 CU-06 CU-05 Figura 3.8 Nivel 1 Modelo de Casos de Uso. Descripción de los Casos de Uso Actores Tabla 3.2 Descripción de los actores del modelo de casos de uso. ACT-01 Usuario Descripción Este actor tiene acceso al sistema y sus funcionalidades, pero cumpliendo con ciertas restricciones o post- condiciones, para algunas de ellas, como es el caso de iniciar sesión, donde el actor debe estar registrado en el sistema antes de poder realizarlo y Personalizar biblioteca donde debe iniciar previamente al sistema. 55 Casos de Uso En la tabla siguiente se presenta una breve descripción de cada uno de los casos de usos. Tabla 3.3 Descripción de los casos de uso Nivel 1. Nombre Descripción CU-01 Autenticarse El usuario puede autenticarse en el sistema ya sea para realizar su registro ó para ingresar al sistema a través de su cuenta de usuario registrado. CU-02 Consultar Catálogo de Revista. El usuario puede consultar todas las revistas que se encuentran almacenadas en el sistema. CU-03 Realizar Búsquedas en Revistas El usuario puede realizar búsquedas simples ó personalizadas dentro del sistema. CU-04 Visualizar Ayuda El usuario puede utilizar esta funcionalidad, para observar las preguntas frecuentes y así encontrar respuestas a las posibles incógnitas que se le presenten mientras navega en el sistema. CU-05 Visualizar Revistas El usuario puede visualizar el contenido de las revistas. CU-06 Personalizar Biblioteca El usuario puede personalizar su biblioteca, donde coloque sus revistas favoritas, las que esté leyendo, entre otras. CU-07 Agregar Comentarios y Sugerencias sobre el Sistema El usuario puede agregar comentarios y sugerencias sobre el sistema, para poder mejorar su funcionamiento. CU-08 Iniciar Sesión Permite al usuario ingresar al sistema con su nombre de usuario y contraseña. CU-09 Registrarse en el Sistema El usuario tiene la opción de registrarse y conseguir una cuenta como usuario registrado. 56 Requerimientos No Funcionales Los requerimientos no funcionales del sistema son aquellos que permiten juzgar la calidad del sistema, además de determinar si las funcionalidades del sistema, se cumplen de manera eficaz y eficientemente. A continuación se presenta la descripción de los requerimientos no funcionales que se tomaron en cuenta para el desarrollo del sistema. Tabla 3.4 Descripción de los requerimientos funcionales. Nombre Descripción RNF-01 Satisfacción del usuario Presentar una interfaz simple e intuitiva. Se debe evitar que las páginas del sistema estén sobrecargadas, para lograr que el usuario se sienta a gusto. RNF-02 Mantener una resolución estándar El sistema debe estar configurado para verse bien en cualquier resolución, para ello se utiliza la configuración en 800x600px. RNF-03 Robusto Brindar calidad ofreciendo al usuario el mejor soporte frente a situaciones inesperadas. RNF-04 Prevención de errores Reducir en lo posible las entradas por teclado de parte del usuario y en el caso de no poder evitarlas ofrecerle ayudas y tooltips para impedirle confusiones en los formularios. RNF-05 Facilidad de Aprendizaje Ofrecer metáforas de acuerdo a las funcionalidades para las que serán utilizadas. El sistema muestra iconos de metáforas familiares al usuario, para que le sea natural navegar en el sitio. RNF-06 Eficiencia El sistema debe cumplir con los objetivos planteados en menor tiempo posible. RNF-07 Escalabilidad Mantener la posibilidad de modificaciones futuras. RNF-08 Seguridad Validar los espacios en los formularios, donde el usuario introduce información, para evitarle vulnerabilidades al sistema. RNF-09 Tolerancia Mostrar al usuario mensajes de error cuando los cometa y de ser posible brindarle ayuda para que los solucione. Se realizó una reunión con el usuario cliente, con el objeto de mostrar los resultados obtenidos en el análisis del dominio, de allí el cliente seleccionó las 57 opciones a implementar y se estableció formalmente los requerimientos del sistema, obteniendo como resultado un modelo de casos de uso modificado que se muestra en la Figura 3.9. System Usuario ACT-1 Iniciar Sesión Registrarse en el Sistema Autenticarse Consultar Catálogo de Revista Consultar Catálogo de Volúmenes Realizar Búsqueda Simples Visualizar Volúmenes Personalizar Biblioteca Visualizar Noticias CU-01 CU-02 CU-03 CU-04 CU-10 CU-09 CU-07 CU-06 CU-05 Visualizar Tabla de Contenido CU-08 Figura 3.9 Nivel 1 Modelo de Casos de Uso Modificado. Producto de la reunión con el usuario cliente. 58 Descripción de los Casos de Uso Casos de Uso En la tabla 3.5 se presenta una breve descripción de cada uno de los casos de usos que fueron modificados luego de la reunión con el usuario cliente, para ver una descripción detallada de cada uno, puede consultar el Anexo A. Tabla 3.5 Descripción de los casos de uso. Nivel 1. Nombre Descripción CU-03 Consultar Catálogo de Volúmenes. El usuario puede consultar todos los volúmenes que se encuentran almacenados en el sistema. CU-04 Realizar Búsquedas en Volúmenes. El usuario puede realizar búsquedas simples ó personalizadas dentro del sistema. CU-05 Visualizar Volúmenes. El usuario a través de esta funcionalidad puede visualizar el contenido del volumen de su preferencia. CU-06 Visualizar Tabla de Contenido. El usuario a través de esta funcionalidad puede visualizar la tabla de contenido del volumen de su preferencia. CU-07 Personalizar mi Biblioteca El usuario puede personalizar su biblioteca, donde coloque sus volúmenes y artículos favoritos, los que esté leyendo, entre otras opciones. CU-08 Visualizar Noticias El usuario puede visualizar el contenido completo de una noticia en el sistema. CU-09 Iniciar Sesión Permite al usuario ingresar al sistema con su nombre de usuario y contraseña. CU-10 Registrarse en el Sistema El usuario tiene la opción de registrarse y conseguir una cuenta como usuario registrado. Ya establecidos formalmente los casos de uso, se realiza la pila de requerimientos: Pila de Requerimientos Los requerimientos fueron colocados en la pila por orden de prioridades. El tiempo que llevó el desarrollo de cada uno de los requerimientos dependió de la 59 extensión de los mismos y el análisis realizado para definir cómo se ejecutarían cada uno de los requerimientos. A continuación en la Figura 3.10 se presenta la pila de requerimientos implementada: Figura 3.10 Pila de requerimientos del sistema. Luego de establecer la pila de requerimientos, se prosigue a realizar el mapa de navegación del sitio, el cual puede ser visualizado en el Anexo B del trabajo investigativo. Para el inicio de la construcción del sistema, se estableció el lenguaje de patrón de iteración, que se muestra en la Figura 3.11. En los trece (13) elementos reusados identificados con la letra “R”, en dos (2) casos, se reutilizó el diseño, como fue: catálogo de volúmenes y mostrar resultado de búsquedas. En uno (1) se reutilizó el código, como fue: mostrar la tabla de contenido, y en los otros diez (10), se reutilizó el diseño y el código. Los seis (6) elementos identificados con la letra “P” fueron de diseño y código propio. 60 Figura 3.11 Lenguaje de Patrones de Iteración Como se observa en la Figura 3.11, de los diecinueve (19) componentes, trece (13) fueron reutilizados, lo cual equivale al 68% del total. Esto se puede apreciar en la gráfica mostrada en la Figura 3.12 61 Figura 3.12 Porcentaje de los elementos usados para desarrollar el sistema. Luego se continúa con las siguientes iteraciones, donde se comenzó a realizar todas las adaptaciones necesarias, para encajar todos los componentes que se están reutilizando, dentro del desarrollo del nuevo sistema, como lo son la ubicación dentro de la interfaz y modificaciones sobre el código. Estas adaptaciones son de manera propia, es decir, que a pesar de estar reutilizando el componente, se hacen algunos ajustes propios para garantizar la optimización de código y funcionalidades. Las modificaciones a los componentes no fueron contempladas en la grafica anterior, debido a que sólo se evaluaron los componentes mostrados en el lenguaje de patrones de iteración mostrado en la Figura 3.11. 62 3.4 Desarrollo de las Iteraciones En esta sección, se presenta la ejecución de las siguientes cuatro (4) iteraciones para el desarrollo del nuevo sistema. Iteración 1 En la primera iteración, se establecieron las especificaciones del sistema en cuanto a color, ubicación de los elementos, entre otros aspectos propios de la apariencia del sitio. Para llevar a cabo esta tarea, se optó por realizar una investigación sobre la existencia de plantillas web gratuitas encontradas en internet, al finalizar esta investigación se encontraron diversos temas, colores, formas, etc. De toda la variedad de opciones presentadas, se tomó la decisión de generar un prototipo de interfaz de usuario, uniendo la gama de colores que se puede visualizar en la Figura 3.13 y la plantilla web seleccionada, que se observa en la Figura 3.14, dando como resultado de esta unión la plantilla mostrada en la Figura 3.15. Figura 3.13 Gama de colores utilizados. 059BD8 8FABC7 4674A3 003366 000033 CC9900 63 Figura 3.14 Plantilla web internet-business 64 Figura 3.15 Interfaz resultado Esta gama de colores se escogió porque, a través de algunas recomendaciones sobre el lenguaje del color (ROM 25 SL, 2008) se determinó que los tonos azules son adecuados para emplearse sobre un sistema destinado a una Institución bancaria, y al combinarse con su complemento que es el color anaranjado, se logra una mezcla llamativa y agradable para el usuario. Para realizar el ensamblado de los componentes en la plantilla mostrada en la Figura 3.15, se debe hacer ciertas adaptaciones de los componentes que usaremos. 65 A continuación en las Tabla 3.6, Tabla 3.7 y Tabla 3.8 se muestran los patrones necesarios, para llevar a cabo la construcción de la página y poder cumplir con las funcionalidades establecidas. Tabla 3.6 Patrón que describe el ingreso al sistema. Nombre Ingreso al sistema. Autor http://twitter.com/ Problema El usuario necesita ingresar en el sistema para disfrutar los beneficios que el sistema le ofrece a los usuarios registrados. Contexto Sitios web que ofrezcan beneficios personalizados a los usuarios. Solución Descripción de la Solución Se le muestra al usuario un boton que al presionar despliega un formulario donde puede introducir el correo electrónico y la contraseña para poder ingresar al sistema. 66 Tabla 3.7 Patrón que describe el registro al sistema. Nombre Registro en el sistema. Autor http://twitter.com/ Problema El usuario debe crear una cuenta para poder ingresar y disfrutar de los servicios que ofrece el sistema. Contexto Sitios web que ofrezcan beneficios personalizados a los usuarios. Solución Descripción de la Solución Se ofrece un formulario dinámico, donde el usuario al momento que va introduciendo los datos el sistema le va mostrando si lo que está introduciendo es correcto o erróneo. 67 . Tabla 3.8 Patrón que describe las búsquedas en el sitio. Nombre Realizar búsquedas simples en el sitio. Autor www.lalibreriadelau.com Problema Es preciso proveer al usuario la opción de encontrar rápidamente lo que necesite. Contexto Sitios web que ofrezcan búsqueda en el sitio. Solución Descripción de la Solución Se ofrece un formulario de un solo campo donde el usuario introduce la(s) palabra(s) que desea buscar en las publicaciones. Se realizó el modelo de iteración entre el usuario y el sistema para realizar la tarea a realizarse se muestra a continuación en la Figura 3.16. http://www.lalibreriadelau.com/ 68 Figura 3.16 Modelo de Interacción para Registrarse en el Sistema. Obtenida la plantilla, el patrón de los componentes y el modelo de interacción para registrarse en el sistema, se realizó la integración de los elementos para obtener como resultado un prototipo de interfaz, que se aprecia en la Figura 3.17. 69 Figura 3.17 Prototipo de interfaz inicial del Sistema. Se realizó una prueba de integración, a los usuarios expertos del equipo de trabajo, en la cual sólo se evaluó la parte visual del sitio sin contemplar las funcionalidades, para obtener como resultado, si es agradable e intuitivo el sitio web que se está diseñando. Iteración 2 En la segunda iteración, se trabaja con el módulo de visualización para los artículos de las revistas, por lo cual primero se investigó en la web, algunas formas de hacerlo. En la Tabla 3.9 se muestran algunas opciones encontradas. 70 Tabla 3.9 Opciones para implementar el visor de los Artículos de las Revistas. Componente y Fuente Descripción  Las páginas se pueden visualizar en escenarios de una ó dos dependiendo de la preferencia del usuario.  La paginación es estática, es decir, al pasar la página el sistema carga la nueva. http://www.page-flip.com  Sólo se pueden visualizar en escenario de dos páginas al mismo tiempo.  La paginación es dinámica, es decir, simula el cambio de página en tiempo real.  Ofrece un menú incorporado al visor. http://page-flip.com/products/publisher/  Sólo se pueden visualizar en escenario de dos páginas al mismo tiempo, a excepción de la portada.  La paginación es dinámica, es decir, simula el cambio de página en tiempo real.  Ofrece un menú incorporado al visor. 71 De las tres (3) opciones presentadas anteriormente, se escogió la tercera debido a que es la que mejor se adaptaba a las necesidades del usuario y al lenguaje implementado en el desarrollo del sistema. A continuación en la Tabla 3.10 se puede observar el patrón para implementar el visualizador de publicaciones. Pero no basta con saber qué se va a desarrollar, también es necesario saber cómo hacerlo, por lo que se presenta la necesidad de realizar la manera en la que se lleva a cabo esta funcionalidad en el sistema, es por ello que se decide generar el Modelo de Secuencia para el caso de uso Visualizar Artículo, como se puede observar en la Figura 3.18. Tabla 3.10 Patrón que describe el visor para el contenido de los volúmenes. Nombre Visualizador para publicaciones digitales. Autor http://page-flip.com/products/publisher/ Problema Se requiere que el usuario pueda leer las publicaciones de una manera agradable. Contexto Sistemas que ofrezcan publicaciones digitales. Solución Descripción de la Solución Se ofrece un visor dinámico, que simula el desplazamiento de páginas dentro de una publicación. 72 Figura 3.18 Modelo de Secuencia para Visualizar Artículo. Se realizaron adaptaciones en el código del componente “fliping book”, exactamente en el archivo xml que se genera cada vez que se desea visualizar el contenido de un volumen, para lograr el correcto funcionamiento del componente en el nuevo contexto, obteniendo como resultado la implementación mostrada en la Figura 3.19. 73 Figura 3.19 Visualizador de los Artículos de las Revistas. Iteración 3 En la tercera iteración, se implementó la categorización de los artículos para las búsquedas avanzadas (por criterio y por temática), la visualización de los resultados obtenidos a partir de la búsqueda y el Catálogo de Volúmenes disponibles para el usuario. Esta tarea se llevó a cabo realizando adaptaciones a los componentes que ya fueron analizados en la iteración 0. En la Tabla 3.11, Tabla 3.12, Tabla 3.13 y Tabla 3.14 se muestran los patrones necesarios, para implementar las interfaces pautadas para esta iteración y poder cumplir con las funcionalidades establecidas. 74 Tabla 3.11 Patrón que describe una búsqueda avanzada. Nombre Búsquedas avanzadas o detalladas. Autor Open Journal Systems Demonstration Journal. Problema El usuario requiere realizar búsquedas más detalladas sobre alguna publicación. Contexto Sistemas que necesiten realizar búsquedas detalladas. Solución Descripción de la Solución Se ofrece un formulario, para que el usuario introduzca información detallada para realizar una búsqueda dentro de las publicaciones existentes. 75 Tabla 3.12 Patrón que describe la categorización de elementos. Nombre Mostrar las diferentes categorías existentes de las publicaciones. Autor www.lalibreriadelau.com Problema El usuario requiere conseguir las publicaciones pertenecientes a alguna categoría de manera rápida y eficaz. Contexto Sistemas que ofrezcan categorización de elementos. Solución Descripción de la Solución Se muestran en lista todas las categorías existentes, y con el signo de mas (+) se permite desplegar subcategorías. http://www.lalibreriadelau.com/ 76 Tabla 3.13 Patrón que describe cómo mostrar los resultados de una búsqueda. Nombre Resultados obtenidos a partir de una búsqueda. Autor Open Journal Systems Demonstration Journal. Problema El usuario necesita visualizar de manera ordenada para poder entender, los resultados obtenidos sobre alguna búsqueda realizada. Contexto Sistemas que realicen búsquedas. Solución Descripción de la Solución Se listan los resultados en forma de tabla de „n‟ número de filas y dos (2) columnas, donde del lado izquierdo se muestra información como el volumen, número y autor de la publicación y del lado derecho el título de esa publicación. 77 Tabla 3.14 Patrón que describe cómo mostrarlos volúmenes pertenecientes a una revista. Nombre Mostrar los diferentes volúmenes disponibles en la biblioteca. Autor www.google.co.ve Problema El usuario requiere visualizar todos los volúmenes disponibles, para saber cuál es de su agrado. Contexto En bibliotecas virtuales. Solución Descripción de la Solución Se listan las portadas de las publicaciones en forma de matriz y al lado derecho de cada imagen se muestra la información asociada a esa publicación. Luego de hacer las modificaciones y adaptaciones necesarias para acoplar los componentes destinados para el reuso y la plantilla creada, se obtiene como resultado las interfaces de: categorización para la búsqueda avanzada por temática, categorización para la búsqueda avanzada por criterio, visualización de los resultados obtenidos a partir de una búsqueda y el catálogo de los volúmenes. Todas estas interfaces pueden visualizarse en las Figura 3.20, Figura 3.21, Figura 3.22 y Figura 3.23 respectivamente. http://www.google.co.ve/ 78 Figura 3.20 Interfaz para la búsqueda avanzada por temática y resultado de la búsqueda. 79 Figura 3.21 Interfaz para la búsqueda avanzada por criterio. Figura 3.22 Interfaz para la Visualización de los resultados obtenidos a partir de una búsqueda. 80 Figura 3.23 Interfaz para el catálogo de los volúmenes. Se realizó una prueba, a los usuarios expertos del equipo de trabajo, en la cual se evaluó el correcto funcionamiento del sistema implementado hasta el momento. Iteración 4 En la cuarta iteración se lleva a cabo la implementación del módulo para la administración de cuenta por parte del usuario, donde éste podrá agregar y eliminar estantes de la biblioteca, agregar y eliminar artículos de los estantes y modificar los datos de usuario. 81 Para cumplir con esta iteración, primero se determina la manera como será visualizada la información, es por esto que en la Tabla 3.15, se puede observar el patrón que describe la forma en la cual se puede visualizar mi biblioteca, y así lograr cumplir con las funcionalidades establecidas. Tabla 3.15 Patrón que describe mi biblioteca. Nombre Mi biblioteca. Autor www.google.co.ve Problema El usuario requiere tener a la mano las publicaciones de su preferencia, para no tener que realizar una búsqueda la próxima vez que lo necesite. Contexto Sistemas que ofrezcan personalización de bibliotecas. Solución Descripción de la Solución Se ofrecen “estantes” mostrado uno debajo del otro, y dentro de cada uno, se listan las portadas de las publicaciones en forma horizontal, con el título en parte inferior de cada imagen. Del lado izquierdo se ofrece: un menú para acceder a cada estante existente, la información de cada estante y la posibilidad de crear uno nuevo http://www.google.co.ve/ 82 Es necesario saber cómo implementar la funcionalidad de: Agregar artículo a mi biblioteca que es parte del caso de uso Personalizar mi biblioteca, es por ello que se decide generar el Modelo de Secuencia, como se puede observar en la Figura 3.24. Figura 3.24 Modelo de Secuencia para Agregar artículo a mi biblioteca. Se generó el modelo objeto del dominio, para cumplir con el requerimiento de administrar cuentas de usuario, luego se implementó la base de datos del mismo. En la Figura 3.25 se puede observar el modelo objeto del dominio del sistema final. 83 usuario usuario registrado +correo +clave mi biblioteca estantes favoritos nuevos noticia/evento componen Tiene Revisa 0..* 0..* Figura 3.25 Modelo Objeto del Dominio del Sistema Al tener el patrón del componente a reutilizar y saber cómo implementarlo, se integraron los componentes al sistema, realizando las adaptaciones necesarias y acoplando los componentes reutilizados, a la plantilla creada, logrando como resultado la interfaz mostrada en la Figura 3.26. 84 Figura 3.26 Interfaz de Mi biblioteca 3.5 Pruebas y Resultados Se realizaron las siguientes pruebas: Evaluación Heurística, Encuesta de usabilidad y Mapas de calor web. La primera es la Evaluación Heurística, que presenta un bajo costo en relación a otros métodos de evaluación y no es necesaria la interpretación extrema en las acciones del usuario. A parte de que el procedimiento es sencillo, consiste en seleccionar a un grupo de evaluadores (usuarios expertos), los cuales inspeccionan individualmente el sistema y luego deben informar sus hallazgos, a través de un informe. Para hacer la Evaluación Heurística se contó con colaboración de alumnos de postgrado de la materia Interacción Humano Computador, de la escuela de Computación de la UCV, y al efecto se seleccionaron 8 evaluadores, los cuales 85 siguieron los principios y valores recomendados por Nielsen y Molich (1990), presentados a continuación: H1: Proveer un diálogo simple y natural H2: Hablar el lenguaje del usuario H3: Minimizar la carga de memoria del usuario H4: Ser consistente H5: Proveer feedback (realimentación) H6: Proveer salidas claramente marcadas H7: Proveer shortcuts (aceleradores) H8: Proveer buenos mensajes de error H9: Prevenir errores H10: Proveer ayuda y documentación Valoración: 0: Es un problema de usabilidad. 1: Problema Cosmético. 2: Problema Menor. 3: Problema Mayor de Usabilidad, importante fijar solución. 4: Usabilidad Catastrófica, imperativo fijar solución. A continuación la gráfica de la Figura 3.26 se muestran los resultados obtenidos, luego de aplicar la evaluación heurística. Donde los colores representan los valores de los errores que van desde 0 hasta 4, mientras que el porcentaje (%) muestra la cantidad de veces que fue detectado ese error. 86 Figura 3.27 Resultados obtenidos al aplicar la Evaluación Heurística De la Figura 3.27 se puede apreciar, que el valor más alto obtenido se refiere a problemas cosméticos (39%), lo cual es posible cuando se reutilizan componentes, porque frecuentemente se pasan por alto algunos detalles que provienen del diseño anterior, afectando la consistencia en la página y generando problemas cosméticos. El segundo valor más alto es valorado como problemas menores. Mientras que los valores restantes que son problemas de usabilidad, se mantienen por debajo del 21% y además la suma de los tres (3) valores, es menos del 50% de los errores detectados, esto es bueno, porque se logró comprobar que el sistema generado, no presenta gran cantidad de problemas en cuanto a usabilidad. En el Anexo C, se señalan los valores usados para construir la gráfica anterior. Luego de analizar los resultados obtenidos en la Evaluación Heurística se realizaron algunos cambios, logrando como resultado, la interfaz mostrada en la Figura 3.28. 87 Figura 3.28 Página inicial del Registro Digital de Publicaciones Periódicas BCV. La segunda prueba que se implementó fue la aplicación de Mapas de Calor web, que se utiliza para averiguar de manera exacta cómo usan la página web los visitantes, es decir, saber qué zonas de la página no se usan, saber que zonas de la página se utilizan más, entender los patrones generales de uso de el sitio visto cómo un todo y proporcionar una mejor experiencia de navegación a los visitantes. Esta prueba fue administrada, en sitio web: http://www.usabilityhub.com/, donde se coloca el enlace de la página y varias personas colaboran entrando en el sitio y aplicando la evaluación. En la Figura 3.29 se muestra el resultado obtenido, las zonas de calor representan el lugar donde los usuarios realizan los primeros click. http://www.usabilityhub.com/ 88 Figura 3.29 Resultado obtenido del Mapa de calor La tercera prueba fue la encuesta de usabilidad, la cual se formuló con preguntas sobre el prototipo logrado hasta el momento, obteniendo como resultado un aproximado de la usabilidad del sitio web que se ha diseñando. Esta evaluación fue aplicada a un conjunto de cinco (5) usuarios que no pertenecen al equipo de trabajo. El modelo de la encuesta de usabilidad puede observase en la Figura 3.30, mientras que en la Figura 3.31 se muestran los resultados obtenidos para la parte 1 y 2 de la encuesta, donde se aprecia la conformidad de los participantes con respecto al sistema. 89 1ra Parte [Reconocimiento] Observe la imagen adjunta, y responda la siguiente pregunta: 1. ¿Cuál cree usted, que es la función del sistema? 2da Pate [Exploración] Explore el sistema, ingresando a través de la siguiente dirección http://ccpd.ciens.ucv.ve/bcv/ realice las siguientes tareas y comente si se le presenta alguna dificultad: Tarea1. Regístrese e Ingrese al sistema. Tarea2. Localice un volumen de la revista BCV. Tarea3. Agregue un artículo a mi biblioteca. 3ra Parte [Cuestionario] A continuación se presentará un conjunto de ítems que debes puntuar marcando con una equis (X) en el cuadro que mejor se ajuste a tu opinión, donde: 1= MALO/A 2= INDIFERENTE 3= BUENO/A 4= MUY BUENO/A 5= EXCELENTE 1. En relación al diseño del Sistema 1 2 3 4 5 Facilidad de uso Calidad de contenidos Diseño atractivo La navegación Las metáforas utilizadas La información ofrecida ha sido Rapidez de descarga de las páginas 2. ¿Qué es lo que más le gusta del sitio web? 3. ¿Qué es lo que menos le gusta del sitio web? 4. ¿Tiene usted algún comentario adicional o alguna sugerencia que nos ayude a mejorar el sitio web? Figura 3.30 Modelo de la encuesta de usabilidad. A continuación se presentará una encuesta con la intención de conocer tu opinión en relación a algunos aspectos de la página web http://ccpd.ciens.ucv.ve/bcv/. Esta encuesta forma parte de una investigación. Agradezco que conteste con la mayor sinceridad posible. La encuesta es anónima, por lo que nadie conocerá tu opinión particular, sino la del grupo en general. http://ccpd.ciens.ucv.ve/bcv/ http://ccpd.ciens.ucv.ve/bcv/ 90 Reconocimiento del sistema Tarea 1 (Registrarse en el Sistema) Tarea 2 (Localizar un artículo de la revista BCV) Tarea 3 (Agregar un artículo a mi biblioteca) Éxito 5 5 5 5 Fracaso 0 0 0 0 0 1 2 3 4 5 6 Figura 3.31 Gráfico de resultados obtenidos al aplicar la encuesta de usabilidad parte 1 y 2. En la Figura 3.32 se observa los resultados obtenidos en la parte 3 de la encuesta realizada. En esta gráfica se muestra una relación entre cada pregunta y el resultado obtenido. La mayoría de las respuestas están entre bueno y excelente, y la única respuesta por debajo de la media es con respecto al tiempo de carga, el cual suele depender la mayoría del tiempo por la conexión de cada equipo. Al no tener ninguna respuesta calificada como mala, podemos decir que el sistema es usable. 91 Facilidad de uso Calidad de contenidos Diseño atractivo La navegació n Las metáforas utilizadas La informació n ofrecida descarga de las páginas Malo 0 0 0 0 0 0 0 Indiferente 2 Bueno 1 1 2 1 Muy bueno 1 2 2 3 1 2 1 Excelente 3 2 3 2 2 2 2 0 0,5 1 1,5 2 2,5 3 3,5 4 4,5 5 Figura 3.32 Gráfico de resultados obtenidos al aplicar la encuesta de usabilidad parte 3. Después de haber analizado los resultados obtenidos por la encuesta de usabilidad aplicada, no se realizaron cambios en el diseño, debido a que no hubo necesidad de hacerlos, manteniendo el obtenido hasta el momento. 92 Conclusiones Con el trabajo desarrollado, se muestra la factibilidad de utilizar la adecuación del modelado ágil con las técnicas de usabilidad, para obtener un producto usable al implementar una interfaz de usuario en el desarrollo de una biblioteca virtual. Mediante el análisis de dominio se seleccionaron componentes potenciales para el reuso, que fueron presentados al usuario cliente para su aceptación, esta actividad facilitó el proceso de captura de los requerimientos dada la naturaleza visual de los componentes, además de favorecer la comunicación entre el usuario cliente y el equipo de desarrollo, con respecto a la estabilidad de los requerimientos determinados en esta primera iteración. Durante la construcción de la interfaz, se alcanzó la coherencia y consistencia, dado que todo componente de reuso era adaptado y acoplado siguiendo los patrones de interacción establecidos, para ello siempre se realizaban inspecciones de lineamientos y prueba funcional al final de la iteración cuando el nuevo componente era integrado a la aplicación. En el caso de estudio aplicado, se reutilizó el 68% de los componentes establecidos en el lenguaje de patrones de iteración, bien sea reusando código, diseño ó ambos, mientras que el 32% fueron de diseño y código propio. Lo que logró aminorar los tiempos de entrega del producto, debido a que se resta el tiempo de desarrollo e implementación. Todos los componentes reutilizados fueron adaptados de manera propia para garantizar la optimización de código y funcionalidades, estas adaptaciones no fueron contempladas en el porcentaje antes mostrado. De la evaluación heurística, se obtuvo que el 39% de los problemas detectados eran de tipo cosméticos, lo cual es atribuible a la reutilización de componentes, porque es frecuente pasar por alto algunos detalles provenientes 93 del diseño anterior, afectando la consistencia en la página y generando estos problemas. Esta propuesta de adecuación sólo es factible si el sistema a desarrollar tiene un dominio conocido, es decir, tiene asociado aplicaciones usables exitosas así como una gama de usuarios que interactúan con el sistema. A pesar de haber aplicado la encuesta de usabilidad, es recomendable aumentar el número de participantes aplicándoles la encuesta propuesta en este trabajo, para conseguir mayor precisión en los resultados. 94 Referencias Bibliográficas Acosta, A. (2004). Métodos y Herramientas para la construcción de la Interfaz de Usuario, utilizando Patrones de Iteración. Tesis Doctoral en el Postgrado de Ciencias de la Escuela de Computación. UCV. Caracas. Alexander, C. (1995). Gamma et Al. Design Patterns Addison Wesley. USA. Ambler, S. W. (2010). Agile Modeling Effective Practices for Modeling and Documentation. Recuperado el 05 de Mayo de 2011, de http://www.agilemodeling.com/ Banco Central de Venezuela. (s.f.). Banco Central de Venezuela. Recuperado el 3 de Enero de 2011, de http://www.bcv.org.ve/blanksite/index.asp Bereceartua, M., Gascó, J. L., & Niro, R. (2004). Usabilidad Diseño de Interfaces. Recuperado el Mayo de 2011, de http://catedragalan.investigacionaccion.com.ar/trabajos/13107bc6b2c9f3ac9faaf76 72f47d878_usabilidad.pdf Christensen.S.R. (1995). Software reuse iniciatives at lockheed (Vol. VIII). Crosstalk. Garreta, D. A. (5 de Junio de 2007). Usolab:Consultoría de usabilidad y diseño centrado en el usuario. Recuperado el 5 de Junio de 2011, de http://www.usolab.com/wl/2007/06/experiencias-paralelas-christo-1.php Jeffrey Richter, W. (Enero de 2002). msdn. Recuperado el 31 de Mayo de 2011, de Exploring the Observer Design Pattern: http://msdn.microsoft.com/en- us/library/ee817669.aspx Keinomen, T. (11 de Enero de 2003). Teoría sobre una meta de diseño: Usabilidad de los productos interactivos. Recuperado el Mayo de 2011, de http://www.uiah.fi/projects/metodi/258.htm#approach la webera.es. (12 de Octubre de 2006). Recuperado el Mayo de 2011, de Usabilidad web. Principios básicos: http://www.lawebera.es/de0/usabilidad.php Larma, C. (2003). UML y Patrones (Segunda edición ed.). Madrid, España: Pearson Prentice Hall. Manchón, E. (07 de Febrero de 2003). alzado.org. Recuperado el 05 de Mayo de 2011, de ¿Qué es la usabilidad? Definición de Usabilidad: http://www.alzado.org/articulo.php?id_art=39 Martín Gallardo, M. A. (21 de Septiembre de 2008). Negocios & tecnología. Recuperado el 05 de Mayo de 2010, de Usabilidad web: Origen del término y definiciones: http://www.agilemodeling.com/ http://catedragalan.investigacionaccion.com.ar/trabajos/13107bc6b2c9f3ac9faaf7672f47d878_usabilidad.pdf http://catedragalan.investigacionaccion.com.ar/trabajos/13107bc6b2c9f3ac9faaf7672f47d878_usabilidad.pdf http://msdn.microsoft.com/en-us/library/ee817669.aspx http://msdn.microsoft.com/en-us/library/ee817669.aspx http://www.uiah.fi/projects/metodi/258.htm#approach http://www.lawebera.es/de0/usabilidad.php http://www.alzado.org/articulo.php?id_art=39 95 http://www.tecnologiahechapalabra.com/negocios/trafico_internet/articulo.asp?i=29 85 McConnell, S. (1996). Proyectos Informáticos. Madrid: Mc Graw Hill. Mina. (Julio de 2008). ¿Qué es una evaluación heurística? Obtenido de http://minalab.insitum.net/2008/07/que-es-una-evaluacion-heuristica/ Molich, R., and Nielsen, J. (1990). Improving a human-computer dialogue. Morán, P. (25 de Noviembre de 2005). Eroski Consumer. Recuperado el 05 de Mayo de 2011, de "Si no lo haces fácil, los usuarios se marcharán de tu web": http://www.consumer.es/web/es/tecnologia/internet/2005/11/25/147298.php Nielsen, J. (2005). Ten Usability Heuristics. Recuperado el Mayo de 2011, de http://www.useit.com/papers/heuristic/heuristic_list.html Nielsen, J. (s.f.). Usability 101: Introduction to Usability. Recuperado el 03 de Mayo de 2011, de http://www.useit.com/alertbox/20030825.html Pressman, R. S. (1997). Ingeniería del Software un enfoque práctico (Cuarta edición ed.). Madrid, España: Mc Graw Hill. Rodríguez, W. (2006). Recuperado el Julio de 2011, de http://commons.wikimedia.org/wiki/File:Notacion_Caso_de_Uso.png ROM 25 SL. (7 de mayo de 2008). ROM 25 consultores. Recuperado el julio de 2011, de http://www.rom25.com/index.php/noticias/7- mayo08?91b295dba43899def2ed4a50449e2698=c8cfef042462b3c19740fc483d9c 110f Sommerville, I. (2005). Ingeniería del Software (7ma ed.). Madrid, España: Pearson. Tarifa, F. (24 de Febrero de 2007). Mas Que Accesibilidad “El poder de la Web está en su universalidad. Un acceso para todo el mundo independientemente de su discapacidad es un aspecto esencial”. Recuperado el 04 de Mayo de 2011, de 10 reglas heurísticas de usabilidad: http://www.mqaccesibilidad.com/2007/02/10- reglas-heursticas-de-usabilidad.html Van Welie, M. (2008). Patterns in interaction design. Recuperado el 3 de Julio de 2011, de http://www.welie.com/ http://www.tecnologiahechapalabra.com/negocios/trafico_internet/articulo.asp?i=2985 http://www.tecnologiahechapalabra.com/negocios/trafico_internet/articulo.asp?i=2985 http://www.consumer.es/web/es/tecnologia/internet/2005/11/25/147298.php http://www.useit.com/papers/heuristic/heuristic_list.html http://www.useit.com/alertbox/20030825.html http://www.mqaccesibilidad.com/2007/02/10-reglas-heursticas-de-usabilidad.html http://www.mqaccesibilidad.com/2007/02/10-reglas-heursticas-de-usabilidad.html 96 ANEXOS 97 ANEXO A (DESCRIPCIÓN DE LOS CASOS DE USO) CU-03 Consultar Catálogo de Volúmenes. Descripción El usuario puede consultar todos los volúmenes que se encuentran almacenados en el sistema. Pre-condición Ninguna. Post-condición Ninguna. Secuencia normal Paso Acción 1 El usuario selecciona una revista. 2 Navega a través de las páginas del catálogo visualizando las portadas, con los nombres de cada volumen. 3 Cuando encuentra un volumen que llame su atención, o el que esté buscando, lo selecciona con doble click para visualizarlo. CU-04 Realizar Búsquedas en Volúmenes Descripción El usuario puede realizar búsquedas simples ó personalizadas dentro del sistema. Pre-condición Ninguna. Post-condición El sistema le muestra al usuario una respuesta de acuerdo a la búsqueda realizada. Secuencia normal Paso Acción 1 El usuario introduce la(s) palabra(s) que desea buscar en el cuadro de texto disponible para búsqueda. 2 El usuario presiona click en el botón de búsqueda. 3 El sistema realiza la búsqueda. 4 El sistema muestra los resultados hallados. 98 CU-05 Visualizar Volúmenes Descripción El usuario a través de esta funcionalidad puede visualizar el contenido del volumen de su preferencia. Pre-condición Ninguna. Post-condición El usuario visualiza el contenido del volumen seleccionado. Secuencia normal Paso Acción 1 El usuario selecciona con doble click el volumen que desea visualizar. 2 El sistema le muestra de una forma agradable y muy parecida a la realidad, el contenido del volumen seleccionado. 3 El usuario navega a través de los artículos que componen el volumen de la revista. CU-06 Visualizar Tabla de Contenido Descripción El usuario a través de esta funcionalidad puede visualizar la tabla de contenido del volumen de su preferencia. Pre-condición Ninguna. Post-condición El usuario visualiza la tabla de contenido del volumen. Secuencia normal Paso Acción 1 El usuario selecciona con un click la tabla de contenido de un volumen. 2 El sistema le muestra la tabla de contenido del volumen seleccionado. 99 CU-08 Visualizar Noticias Descripción El usuario puede visualizar el contenido completo de una noticia en el sistema. Pre-condición Ninguna. Post-condición El usuario visualiza el contenido de las noticias publicadas. Secuencia normal Paso Acción 1 El usuario selecciona con doble click la noticia que desea visualizar. 2 El sistema le muestra el contenido de la publicación. 100 ANEXO B (MAPA DE NAVEGACIÓN) 101 ANEXO C (RESULTADO EVALUACIÓN HEURÍSTICA) Sección Problema Heurística Valor Solución Búsqueda avanzada Los resultados obtenidos son mostrados sin algún criterio de orden o clasificación. Además, no ofrece la opción para que el usuario los liste/ordene de manera que facilite la revisión de los resultados. H6 2 En primera opción, listar los resultados cronológicamente. Al mostrar los resultados colocar una lista desplegable con los criterios por los cuales el usuario puede ordenar los mismos, como por ejemplo por autor, por revista entre otros. Al visualizar alguno de los artículos obtenidos en la búsqueda, no se permite regresar a la lista de resultados generados previamente. H6 3 Colocar un enlace que redireccione a la página de resultados. En la búsqueda por criterio, aunque no genera resultados, realiza el proceso de búsqueda con periodo de tiempo inválido como parámetro. H9 4 Validar los parámetros de búsqueda antes de ser enviados para realizar la misma. Los estilos en las diferentes Búsquedas Avanzadas no siempre son los mismos. Por ejemplo, el título asociado a un resultado de una Búsqueda por Criterio es presentado en color gris mientras que el título de un resultado generado por la Búsqueda por temática es presentado en color azul claro. H4 1 Definir un único color para identificar el título asociado a los resultados de una búsqueda. Ingreso y Registro El mensaje de error que se muestra al momento de ingresar erradamente, es muy pequeño, lo que impide su legibilidad H8 1 Se recomienda aumentar el tamaño del mensaje En la interfaz de olvido de contraseña, una vez que se envían los datos, el sistema no muestra una repuesta al usuario H5 2 Se recomienda una vez enviado los datos, emitir un mensaje al usuario como por ejemplo "su clave de acceso será enviado al correo electrónico en unos minutos. Página principal El título se subraya cuando se posiciona el mouse sobre él, lo cual da la sensación de que este sea un enlace. H4 1 Eliminar el subrayado al posicionar el mouse sobre el título. En el menú la opción Búsqueda Avanzada, muestra un hipervínculo el cual está incorrecto y se presta a confusión. H4 2 Se recomienda eliminar el hipervínculo y solo dejar las opciones. El diseño de interfaz que se muestra una vez presionado el link biblioteca, el diseño no permite la legibilidad de información, ya que muestra las barras de scroll tanto horizontal como vertical. H6 1 Se recomienda mejorar el diseño de la interfaz, o redireccionar al inicio del portal, ya que en la misma se observa con claridad la información. Consistencia de los textos, tipo de formato oración o titulo. H4 1 Cambiar la etiqueta por tipo título de acuerdo al resto de la aplicación. 102 El icono del BCV dirige a la página central del banco y no a la página de inicio del Registro Digital. La tendencia de muchos portales es que el icono que acompaña a la identificación del portal, dirija a la página inicial de la sección u oficina de la organización que se navega. H4 0 Hacer que el enlace dirija a la página inicial del Registro Digital. El área de Noticas / Evento, las letras amarillas “Ver mas” no resaltan sobre el fondo blanco y puede pasar desapercibido. H3,H4 1 Cambiar el color del enlace por uno que haga contraste y combine con la paleta de colores empleada. El área de Noticas / Evento, no se puede hacer clic sobre el titulo para acceder rápidamente al cuerpo completo de la información. H3,H7 3 Permitir visualizar la noticia o evento al hacer clic sobre el titulo. Mi biblioteca La opción agregar a favoritos aparece sólo en la lista de resultados de una búsqueda o cuando se muestra la tabla de contenido de una revista, lo cual no resulta muy útil ya que el usuario no puede decidir si el artículo le interesa sin haberlo leído previamente ó revisar el mismo y luego volver a realizar la búsqueda para agregarlo. H1,H3 2 Permitir agregar a favoritos desde la página de visualización del artículo o revista. La opción agregar a favoritos desde la tabla de contenido, no permite seleccionar varios artículos y marcarlos simultáneamente como favoritos, suponiendo que el usuario ha hecho la revisión respectiva de los mismos. H1,H3 2 No permite regresar a la lista de favoritos, una vez mostrado alguno de los artículos en esta categoría. Esto aplica para los estantes en general. H6 2 Colocar un enlace que redireccione al estante al cual pertenece el artículo. Una vez que estas en la lista de artículos favoritos, el enlace “Volver a mi biblioteca”, cierra la sesión del usuario. (H4,H6) 4 Verificar que el enlace este correctamente programado. El listado de artículos en los estantes difiere de la forma de mostrar los volúmenes de las revistas en la biblioteca. Además, dificulta que el usuario sepa cuál es el principio y final de la lista. (H3,H4) 3 Mostrar los artículos de la misma manera que son mostradas las revistas de forma de mantener un estándar. Al seleccionar la opción “Eliminar artículo”, este redirecciona a una página sin formato preguntando al usuario si está seguro de borrar el mismo del estante, lo cual es inconsistente con las ventanas emergentes que se utiliza para mostrar los mensajes y obtener el feedback del usuario. De igual manera las opciones de respuesta se muestran diferentes al estilo de botones que se está usando. H4 1 Mostrar el mensaje siguiendo el estándar planteado. Al intentar crear nuevo estante, muestra un error en página en blanco con el mensaje "error bd" H8,H9 4 revisar conexión a bd, solventar el error de conexión, capturar errores de este tipo y utilizar mensajes de error descriptivos 103 Existe doble enlace a Favoritos y así mismo existe un enlace duplicado por cada enlace que se cree. H4 2 Convertir el enlace que aparece sobre el estante en un titulo o etiqueta Por Criterio En la lista que se despliega en el campo de búsqueda se sombrea la opción que más se ajusta al criterio que el usuario va introduciendo, pero se utiliza un color muy oscuro que no facilita la lectura del usuario. H4 1 Cambiar el color que se utiliza para identificar o resaltar un elemento en la lista por un color pastel que permita la fácil lectura al usuario. La consulta por Criterio Fecha y Volumen, tiene dos problemas uno estético con la alineación del campo Año en el formulario, y adicionalmente los campos que componen el formulario pueden confundir al usuario. La confusión se puede presentar con los combos meses, ya que sugieren la selección de un rango de meses en la búsqueda, pero este comportamiento no es correcto ya que al seleccionar un rango de meses la consulta no devuelve ningún resultado, pero si se obtiene resultados cuando se elige algún mes en cualquiera de las dos listas. H4 1 Si es un rango de meses sería recomendable incluir al título de campo Mes las etiquetas Desde y Hasta para orientar al usuario en el tipo de información requerida. Mi cuenta Permite enviar el formulario vacio. H9 3 Colocar una validación del formulario. Desplegar un mensaje de error indicando que se deben ingresar datos al formulario. No valida que el campo “confirmar contraseña” del formulario mostrado contenga datos al enviar este, con datos en el campo “cambiar contraseña”. No se muestra ningún mensaje indicando que el cambio no se realizó. (H5, H8, H9) 4 Validar el formulario, marcar campos como requeridos. Mostrar mensajes indicando que la acción no se realizó correctamente. No mantiene el cambio de correo electrónico. Al realizar la acción, muestra el nuevo correo en la esquina superior derecha indicando que la operación se efectuó satisfactoriamente, más cuando se cierra la sesión no permite ingresar con el nuevo correo sino con el anterior, mostrando este, donde antes ya se había visto el nuevo correo. H8 4 Validar que se esté almacenando el nuevo correo electrónico. Formulario de administración de cuentas no se encuentra alineado H4 1 Se sugiere alinear a la izquierda los cuadros te texto y las etiquetas, debido que los formularios de registro se encuentran alineados a la izquierda Formato de las etiquetas en el formulario, cambiar correo electrónico se encuentra tipo oración. H4 1 Cambiar la etiqueta por tipo título de acuerdo al resto de la aplicación. Al intentar recuperar el correo electrónico anterior dio error, aparentemente no está sustituyendo los correos anteriores. H5 3 Verificar la validación utilizada. Visualizar Los enlaces que permiten volver o regresar a la página anterior Alinear a la izquierda el enlace la página 104 Volumen se encuentran centrados en la parte inferior de la página. H4 1 utilizada para visualizar un volumen. Al visualizar una revista, para ver la extensión completa de una página se debe mover el mouse hacia arriba o hacia abajo lo que por estándar se realiza con las teclas de desplazamiento del teclado y/o el cursor del mouse con un clic sostenido mostrando el icono de una mano sujetando el contenido para moverlo. H4 2 Permitir el desplazamiento con las teclas del teclado y cambiar el comportamiento y cursor del mouse por el de agarrar y mover. Los enlaces que permiten descargar un volumen en formato PDF no tiene la imagen, sino el texto “Descargar documento en alta / baja resolución”. H4 1 Colocar la imagen estándar de PDF como por ejemplo: Descargar documento en alta / baja resolución Resultados En la interfaz que muestra los resultados de una búsqueda, la información se pierde por la cantidad de registros mostrados, y las concordancias entre las columnas. H6 1 Se recomienda agregar separadores a nivel de las filas o sombrear las filas con colores intercalados para una mayor interpretación de los resultados. General No proporciona un menú de ayuda o documentación. H10 3 Crear el soporte o ayuda del usuario. Falta de tooltips en registro H10 3 colocar tooltips en link de acciones principales No posee botones de volver atrás en todas las páginas H6 2 Colocar botones de "volver atrás" para proveer de manera más sencilla la forma de salir de los formularios Las ventanas emergentes, tienen un estilo diferente al resto de las páginas, en cuanto a colores. H4 1 Se recomienda mantener el estilo y colores en todo el sitio web. La navegación del menú principal muestra más de un botón activo lo que genera confusión. H1,H3 3 Cuando se navegue en el menú debe estar un solo botón activo.