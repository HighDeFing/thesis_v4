Universidad Central de Venezuela Facultad de Ciencias Escuela de Computación Aplicación Web para la gestión de los Informes Técnicos de los casos estudiantiles del Servicio de Orientación de la Facultad de Ciencias de la Universidad Central de Venezuela Trabajo Especial de Grado Presentado ante la Ilustre Universidad Central de Venezuela por el Bachiller Andrés Eduardo Morales Briceño C.I 19.819.576 Para optar al título de Licenciado en Computación Profa. Yosly C. Hernández Bieliukas. Profa. Marisol Ortega C. Caracas, Diciembre/ 2017 i ii Resumen El Servicio de Orientación de la Facultad de Ciencias de la Universidad Central de Venezuela, es el departamento encargado de apoyar la gestión de las solicitudes estudiantiles que requieren de asesoramiento académico, tales como: Reincorporación luego del cumplimiento de la sanción contemplada en el artículo 6 de las Normas de Rendimiento Mínimo y Condiciones de Permanencia para los estudiantes de la UCV; Reincorporación por casos especiales; Solicitud de reincorporación por aplicación del artículo 8 de las mencionadas normas; Solicitud de Vía de Gracia, y por último Cambio de Escuela y Facultad. A partir del periodo académico 01-2015 se venía acentuando la carencia de los insumos necesarios para elaborar los informes técnicos referentes a las solicitudes estudiantiles antes expuestas, como también la ausencia de alguna herramienta que permitiera la consulta, manejo, y respaldo de los mismos. En base a la necesidad que presentó el Servicio de Orientación, se inició la búsqueda de un mecanismo que gestione los informes técnicos que elaboran; reduciendo el consumo de material de oficina, y que facilite el manejo y respaldo de los datos. La implementación de la aplicación Web SIGEREP brindó la solución a la problemática planteada. Debido a la versatilidad que presenta el desarrollo de las aplicaciones Web, se logró cubrir todos los requerimientos pertinentes, generando un producto de software adaptado a las necesidades del Servicio de Orientación, y sumando un conjunto de beneficios que permiten la optimización del proceso de elaboración de informes. Palabras Claves: Gestión de informes, solicitudes estudiantiles, estudiantes, informes. iii Índice Introducción ..................................................................................................................................... 1 Capítulo I .......................................................................................................................................... 3 Problema de Investigación ............................................................................................................... 3 1.1 Contexto de la Investigación: ................................................................................................. 3 1.2 Fundamentos Legales: ............................................................................................................ 5 1.3 Descripción del proceso: ........................................................................................................ 8 1.4 Problema de Investigación: .................................................................................................. 11 1.4. Objetivos .............................................................................................................................. 13 1.4.1 Objetivo General: .............................................................................................................. 13 1.4.2 Objetivos específicos: ........................................................................................................ 13 1.5 Justificación .......................................................................................................................... 14 1.4.5 Alcance: ............................................................................................................................. 15 1.4.6 Antecedentes: ..................................................................................................................... 15 Capítulo 2 ....................................................................................................................................... 19 Marco Teórico ................................................................................................................................ 19 2.1 Aplicación Web: ................................................................................................................... 19 2.2 Patrón de diseño MVC (Modelo – Vista - Controlador): ..................................................... 20 2.4 Arquitectura cliente – servidor: ............................................................................................ 21 2.5 Arquitecturas de dos y tres niveles: ...................................................................................... 21 iv 2.6. Bases de Datos: .................................................................................................................... 22 2.6.1 Sistema Manejador de Base de Datos: .............................................................................. 22 2.7 Framework: .......................................................................................................................... 23 2.8.2 CSS (Cascading Style Sheets): .......................................................................................... 25 2.8.3 JavaScript: ......................................................................................................................... 26 2.8.4 Twitter Bootstrap: .............................................................................................................. 27 2.8.5 JQuery: ............................................................................................................................... 28 2.9.2 CakePhp: ........................................................................................................................... 30 2.9.3 Apache: .............................................................................................................................. 31 2.9.4 MySQL: ............................................................................................................................ 32 Capítulo 3 ....................................................................................................................................... 34 Marco Aplicativo ............................................................................................................................ 34 3.1 Fase de Planeación: .............................................................................................................. 35 3.1.1 Requerimientos: ................................................................................................................ 36 Tabla 3.12 ................................................................................................................................... 44 3.2 Fase de diseño: ...................................................................................................................... 46 3.2.1 Modelo de Datos: ............................................................................................................... 46 3.2.1.1 Modelo Agenda de Citas: ............................................................................................... 48 3.2.1.2 Modelo Reporte: ............................................................................................................. 49 v 3.2.1.3 Modelo del Administrador: ........................................................................................... 51 3.2.2 Arquitectura de la Aplicación: .......................................................................................... 51 3.2.2.1 Arquitectura de hardware: .............................................................................................. 52 3.2.2.2 Arquitectura de Software: ............................................................................................... 53 3.2.3 Interfaces de usuario: ......................................................................................................... 54 3.3 Fase de Codificación: ........................................................................................................... 63 3.4 Fase de Pruebas: ................................................................................................................... 64 Resultados ...................................................................................................................................... 78 4.1 Módulo del usuario Administrador: .................................................................................... 79 4.1.1 Opción del menú Usuarios: ............................................................................................... 81 4.1.3 Opción del menú Mantenimiento: ..................................................................................... 84 4.2 Módulo de los usuarios Secretaria: ....................................................................................... 85 4.2.1 Opción del menú Registrar: ............................................................................................... 86 4.2.2 Opción del menú Solicitudes: ........................................................................................... 90 4.3 Módulo del usuario Servicio: ............................................................................................... 92 4.3.1 Opción del menú Solicitudes de Reportes: ........................................................................ 94 4.3.3 Opción del menú Reportes de Gestión: ........................................................................... 100 4.3.4 Opción del menú Consulta de Reportes: ......................................................................... 100 4.4 Módulo del usuario Asesor y usuario Visor: ...................................................................... 101 vi 4.4.1 Opción del menú Reportes del Proceso: .......................................................................... 103 4.4.2 Opción del menú Consultar Reportes: ............................................................................ 103 Recomendaciones ..................................................................................................................... 107 Referencias ................................................................................................................................... 108 Anexos………………………...………………………………………………………………………….103 vii Índice de Tablas Tabla 3.1.Historia de usuario – login de usuario…………………………………………………37 Tabla 3.2.Historia de Usuario – recuperar Contraseña…………………………………………...38 Tabla 3.3.Historia de Usuario – Cambiar Contraseña……………………………………………38 Tabla 3.4.Historia de Usuario - Cerrar Sesión…………………………………………………..39 Tabla 3.5.Historia de Usuario – Registrar Solicitantes………………………………………….39 Tabla 3.6.Historia de Usuario – Listado de Solicitantes………………………………………..40 Tabla 3.7.Historia de Usuario – Listado de Solicitudes………………………………………….41 Tabla 3.8.Historia de Usuario – Listado de Reportes…………………………………………….41 Tabla 3.9.Historia de Usuario – Reporte de Gestión……………………………………………..42 Tabla 3.10.Historia de Usuario – Consultar Reportes……………………………………………43 Tabla 3.11.Historia de Usuario – Listados de Reportes Finales………………………………….44 Tabla 3.12.Historia de Usuario – Gestión de Usuarios…………………………………………..43 Tabla 3.13.Historia de Usuario – Gestión de periodos…………………………………………...44 Tabla 3.14.Historia de Usuario - Mantenimiento………………………………………………...45 Tabla 3.15.Patrón de Interacción - Login………………………………………………………...53 Tabla 3.16.Patrón de Interacción - recuperar Contraseña………………………………………...54 Tabla 3.17.Patrón de Interacción -Listar usuarios……………………………………………….54 Tabla 3.18.Patrón de Interacción - Listar Periodos………………………………………………55 Tabla 3.19.Patrón de Interacción - Mantenimiento………………………………………………56 Tabla 3.20.Patrón de Interacción - Registrar Estudiante…………………………………………56 Tabla 3.21.Patrón de Interacción - Listar estudiantes solicitantes………………………………..57 Tabla 3.22.Patrón de Interacción - Listar Solicitudes…………………………………………….58 viii Tabla 3.23.Patrón de Interacción - Listar Reportes………………………………………………58 Tabla 3.24.Patrón de Interacción - Listar reporte de Gestión…………………………………….59 Tabla 3.25.Patrón de Interacción - Consultar reportes…………………………………………...60 Tabla 3.26.Patrón de Interacción - Detalle……………………………………………………….61 Tabla 3.27.Prueba Funcional - Registro Reporte…………………………………………………63 Tabla 3.28.Prueba funcional - Registrar Analista………………………………………………64 Tabla 3.29.Prueba Funcional - Registro Reporte…………………………………………………65 Tabla 3.30.Prueba Funcional - Registro de Datos Socioeconómicos…………………………….66 Tabla 3.31.Prueba Funcional - Registro de Resultados…………………………………………..67 Tabla 3.32.Prueba Funcional - Visualizar………………………………………………………..68 Tabla 3.33.Comparación de vista de navegadores……………………………………………….69 ix Índice de Figuras Figura 1.1.Flujo de trabajo del proceso de generación de informes………………………………9 Figura 3.0.Fases de la Metodología Programación Extrema XP…………………………………33 Figura 3.1.Modelo de datos – Agenda de Citas…………………………………………………..48 Figura 3.2.Modelo de datos – Reporte…………………………………………………………...49 Figura 3.3 Modelo de datos –Administrador……………………………………………………..50 Figura 3.4.Arquitectura de hardware de la app SIGEREP……………………………………….51 Figura 3.5.Encuesta pregunta Nº 1……………………………………………………………….70 Figura 3.6.Encuesta pregunta Nº 2……………………………………………………………….70 Figura 3.7.Encuesta pregunta Nº 3……………………………………………………………….71 Figura 3.8.Encuesta pregunta Nº 4……………………………………………………………….72 Figura 3.9.Encuesta pregunta Nº 5……………………………………………………………….72 Figura 3.10.Encuesta pregunta Nº 6……………………………………………………………...73 Figura 3.11.Encuesta pregunta Nº 7……………………………………………………………...74 Figura 4.1.Vista del login………………………………………………………………………...77 Figura 4.2.Vista recuperar contraseña……………………………………………………………77 Figura 4.3.Diagrama de flujo - usuario administrador…………………………………………...78 Figura 4.4.Vista página principal- usuario administrador………………………………………..79 Figura 4.5.Vista sección de cuentas de usuarios………………………………………………….80 Figura 4.6.Vista agregar usuario………………………………………………………………….81 Figura 4.7.Vista sección periodos académicos…………………………………………………...82 Figura 4.8.Vista sección de mantenimiento………………………………………………………82 Figura 4.9.Diagrama de flujo - usuario secretaria………………………………………………..83 x Figura 4.10.Vista página principal – usuario secretaria………………………………………….84 Figura 4.11. Vista registro de estudiante…………………………………………………………85 Figura 4.12. Vista registro de datos personales fijos……………………………………………..86 Figura 4.13. Vista registro de datos personales móviles…………………………………………86 Figura 4.14. Vista asignación de analista………………………………………………………...86 Figura 4.15. Vista registro de cita………………………………………………………………...87 Figura 4.16. Vista detalle registro agenda………………………………………………………..88 Figura 4.17. Vista listado de solicitudes………………………………………………………….89 Figura 4.18. Vista listado de asignaciones………………………………………………………..90 Figura 4.19. Diagrama de flujo - usuario secretaria……………………………………………...91 Figura 4.20. Vista página principal – usuario servicio…………………………………………...92 Figura 4.21. Vista listado de solicitudes………………………………………………………….93 Figura 4.22. Vista registro de un nuevo reporte………………………………………………….94 Figura 4.23. Vista listado de reportes…………………………………………………………….95 Figura 4.24. Vista detalle del reporte…………………………………………………………….96 Figura 4.25. Vista detalle del reporte con opción para agregar datos…………………………..97 Figura 4.26.Vista detalle del reporte con opción para editar datos……………………………...97 Figura 4.27. Vista reporte estado final……………………………………………………………97 Figura 4.28. Vista reportes de gestión……………………………………………………………98 Figura 4.29. Vista consulta de reportes…………………………………………………………..99 Figura 4.30. Diagrama de flujo - usuario asesor………………………………………………...100 Figura 4.31. Vista listado de reportes para el asesor académico………………………………..101 Figura 4.32. Vista consulta de reportes asesor………………………………………………….102 xi Figura 4.33. Vista despliegue resultado de la consulta………………………………………….103 1 Introducción En la última década la utilización del internet dentro de las actividades cotidianas, ha abierto un mundo de posibilidades a los usuarios, ya que resulta ser una herramienta de gran utilidad para la mejora de los procesos que involucra una actividad en particular. La implementación de una aplicación Web sobre un proceso en específico, permite la mejora de la gestión del mismo, al mantener la información actualizada en tiempo real y la agilización de las tareas involucradas. El Servicio de Orientación (SO) de la Facultad de Ciencias (FC) de la Universidad Central de Venezuela (UCV), es el departamento encargado de apoyar la gestión de las solicitudes estudiantiles que requieren de asesoramiento académico, mediante la aplicación de diferentes instrumentos como entrevistas y pruebas psicotécnicas, con el fin de generar un estudio detallado sobre el caso. Este departamento apoya las siguientes solicitudes: reincorporación luego del cumplimiento de la sanción contemplada en el artículo 6 de las Normas de Rendimiento Mínimo y Condiciones de Permanencia para los estudiantes de la UCV, reincorporación por casos especiales, solicitud de reincorporación por aplicación del artículo 8 de las mencionadas normas, solicitud de Vía de Gracia y cambios de Escuela y Facultad. Los datos recolectados en los estudios que realiza el SO-FC-UCV se reflejan en un informe técnico, el cual recoge las causas que llevaron al alumno a ese estado, para luego ser transmitido a los correspondientes asesores académicos para la atención del caso. Debido a diversos factores como: el incremento progresivo en los costos, y la escasez de los materiales necesarios para imprimir los informes, surgió la necesidad de este Trabajo Especial de Grado, el cual implemento una solución que permite gestionar dicho proceso, reduciendo la obligación de reproducir los informes en formato físico, y que también provee diversas 2 facilidades : la centralización de los usuarios, el respaldo de los datos en un base de datos, la generación de los reportes en formato PDF, la agilización de las consultas, y por último la generación de reportes de gestión en hojas de cálculo. Por lo que este Trabajo Especial de Grado llevo a cabo la construcción de una aplicación Web bajo una adaptación de la metodología XP, utilizando las tecnologías de desarrollo: HTML 5, CSS3, JavaScript, PHP, CakePhp3, y como motor de base de datos MySQL 5.7. Esta aplicación está alojada en el servidor del Centro de Computación de la Facultad de Ciencias, la cual contempla una arquitectura de hardware cliente – servidor en dos niveles, y está estructurada a nivel de software bajo el patrón de diseño Modelo Vista Controlador (MVC). El contenido de este documento se encuentra organizado de la siguiente manera: en el capítulo 1 se presenta el problema identificado, comenzando desde el contexto en donde se implementó la aplicación, hasta el alcance del proyecto. En el capítulo 2 se muestra el marco teórico que fundamenta el desarrollo de este trabajo. En el capítulo 3 se describe el proceso de desarrollo bajo la metodología de trabajo usada para abordar el problema. En el capítulo 4 se muestra el producto final, describiendo cada una de sus partes, finalmente las conclusiones y las referencias. 3 Capítulo I Problema de Investigación En este primer capítulo presenta la problemática identificada en el Servicio de Orientación de la Facultad de Ciencias de la UCV, además de la justificación, objetivos, alcance, contexto, entre otros aspectos importantes de esta investigación. 1.1 Contexto de la Investigación La presente investigación se contextualizó en el Servicio de Orientación de la Facultad de Ciencias de la Universidad Central de Venezuela (SO-FC-UCV), que es una dependencia adscrita a la Coordinación Académica y tiene como objetivo fundamental asesorar al estudiante a fin de facilitarle los recursos necesarios que le permiten desenvolverse exitosamente en el medio universitario. (Drescher, Díaz, Vega, Chacón, & Petit, 1967, pág. 1). La misión del SO-FC-UCV corresponde a “Crear y actualizar continuamente programas de orientación y asesoramiento que respondan a las necesidades de los estudiantes de la Facultad de Ciencias” (Drescher, Díaz, Vega, Chacón, & Petit, 1967, pág. 1). Mientras que, su misión es “Ser una unidad integrada, en constante crecimiento y fortalecimiento, para cumplir cabalmente con su misión y vincularse de la mejor forma posible con los lineamientos de la Facultad de Ciencias” (Drescher, Díaz, Vega, Chacón, & Petit, 1967, pág. 1). Las fundadoras del Servicio de Orientación, Drescher, Díaz, Vega, Chacón, y Petit (1967) declaran que los objetivos de este servicio son: Asesorar a la comunidad de la Facultad de Ciencias en la diversidad de procesos conexos a la vida académica; Brindar herramientas al 4 estudiante de la facultad de ciencias para su adaptación al medio universitario y prosecución académica.; Asistir al estudiante en las áreas personal, social, académica, vocacional y clínica. El SO-FC-UCV brinda apoyo a los estudiantes en las siguientes áreas especificadas por Drescher, Díaz, Vega, Chacón, y Petit (1967).  Académica: Se refiere al proceso de facilitar en el estudiante aspectos relacionados con el proceso enseñanza-aprendizaje a través de herramientas cognitivo, conductuales y emocionales.  Personal y Social: Contempla aspectos de índole emocional que se presentan en los diferentes ámbitos de la vida, relacionados con la toma de decisiones, relaciones interpersonales, autoestima, sexualidad, entre otras.  Vocacional y Ocupacional: Es el proceso de elección de una carrera y/o ocupación a desempeñar en el transcurso de su vida, acorde a sus intereses, aptitudes y conocimientos de sí mismo.  Clínica: Intervención clínica en situaciones de crisis y emergencia psicológica. Finalmente, Las actividades que realiza el Servicio de Orientación según Drescher, Díaz, Vega, Chacón, y Petit (1967) se clasifican en dos tipos:  Atención individual: Información sobre funcionamiento de la Universidad, las carreras que ofrece la Facultad, reglamentos, normas y formas de ingreso. Como: Asesoramiento Académico, Asesoramiento Personal-Social, Asesoramiento Vocacional, Cambios de Escuela y de Facultad (Resolución 158), Asesoramiento a estudiantes afectados por Normas de Permanencia, Evaluación y asesoramiento a estudiantes con discapacidad. 5  Atención Grupal: Talleres Académicos, Talleres de desarrollo personal. 1.2 Fundamentos Legales Los informes técnicos que realiza el SO-FC-UCV están abalados por un conjunto de normas y reglamentos los cuales se mencionan a continuación: Reglamento interno para las reincorporaciones a la facultad de ciencias El ingreso de los alumnos por reincorporación a la Facultad de Ciencias se rige por el Reglamento de ingreso de alumnos a la Universidad Central de Venezuela, aprobado por el Consejo Universitario en su sesión del día 8 de marzo de 2000 (anexo), y por el presente Reglamento Interno. 1. Se podrán reincorporar a la Facultad de Ciencias, los bachilleres incursos en el Artículo Nº 6 de las Normas sobre Rendimiento Mínimo y Condiciones de Permanencia de los Alumnos en la UCV, que hayan solicitado su reincorporación en el lapso establecido por la División de Control de Estudios de la Facultad de Ciencias, luego de haber cumplido la sanción correspondiente. 2. Se podrán reincorporar a la Facultad de Ciencias, los bachilleres que cumplan las siguientes condiciones siempre y cuando exista disponibilidad de cupo: a) Tener aprobado al menos, el 20% de las unidades de la Licenciatura correspondiente. b) Tener un Índice de Eficiencia mayor que 0.40 c) No haberse retirado y reincorporado anteriormente. d) Estar desincorporado menos de 5 años. e) Haber cursado a lo sumo 15 semestres. 6 3. Se podrán reincorporar a la Facultad de Ciencias, los bachilleres que en su oportunidad solicitaron retiro con posterior reincorporación ante el Consejo de Escuela respectivo y éste haya sido aprobado. Estos bachilleres deben solicitar su reincorporación en el lapso establecido por la División de Control de Estudios de la Facultad de Ciencias. 4. Los casos que no estén contemplados en las disposiciones anteriores (1, 2 y 3), serán estudiados por la Unidad de Asesoramiento Académico, la cual hará la recomendación razonada, que considere pertinente en cada caso ante el Consejo de Escuela respectivo. 5. Todos los casos de reincorporaciones deben ser aprobados por el Consejo de la Facultad de Ciencias. Normas sobre rendimiento mínimo y condiciones de permanencia, 1982  Artículo 3. Todo alumno que en un período no apruebe el 25% de la carga académica que curse o que, en todo caso no apruebe por lo menos una asignatura, deberá participar obligatoriamente en el procedimiento especial de recuperación establecido en estas normas.  Artículo. 6. El alumno que al final del período de recuperación no alcance nuevamente a aprobar el 25% de la carga académica que cursa o en todo caso aprobar por lo menos una asignatura no podrá inscribirse en la Universidad Central de Venezuela, en los dos siguientes semestres. Pasados éstos, tendrá el derecho de reincorporarse en la Escuela en la que cursaba sin que puedan exigirse otros requisitos que los trámites administrativos usuales. Igualmente podrá inscribirse en otra escuela diferente con el informe favorable del Profesor Consejero y la Unidad de Asesoramiento Académico de la Escuela a la cual pertenecía y aprobación por parte del Consejo de Facultad a la cual solicita su traslado. 7  Artículo. 7. El alumno que, habiéndose reincorporado conforme al artículo anterior dejará nuevamente de aprobar el 25% de las asignaturas inscritas y cursadas en el año académico, no podrá incorporarse más a la Escuela o Facultad, a menos que el Consejo de Facultad, previo estudio del caso, autorice su reincorporación.  Artículo. 8. El Consejo de la Facultad podrá autorizar en casos excepcionales que a su juicio lo ameriten, la reincorporación inmediata del alumno que se encuentre en el supuesto previsto en el Artículo. 6. De éstas normas, previo informa favorable y razonado del respectivo Profesor Consejero y a recomendación del Consejo de la Escuela si lo hubiere. Resolución de Cambio de Escuela y Facultad, No 158, 1992  Artículo 2°. Autorizar a la Secretaría de la Universidad Central de Venezuela para efectuar los cambios de Facultad o Escuela de aquellos estudiantes cursantes en la Universidad Central de Venezuela, previo cumplimiento de los siguientes requisitos: o 2.2 Estudio favorable emitido a través de un informe elaborado por el Servicio de Orientación de la Facultad para la cual aspira el cambio.  Artículo 6°.El Departamento de Orientación de OBE, o el Servicio de Orientación de cada Facultad, por un lapso no menor de dos (2) períodos lectivos, deberá hacer un seguimiento de los casos autorizados por esta resolución y levantará un informe que será enviado al Vicerrector Académico y al Secretario, quienes presentarán una relación anual sobre los resultados de la aplicación de la misma.  Artículo 8°. El procedimiento para realizar cambios de Escuela o Facultad por la presente resolución es el siguiente: 8 o 8.1. El estudiante deberá acudir al Servicio de Orientación de la Facultad para la cual aspira el cambio, o en su defecto al Departamento de Orientación de OBE, a fin de obtener la información necesaria. o 8.2. Una vez verificado que el estudiante cumple los requisitos para acogerse a esta resolución, se le realizará el estudio vocacional correspondiente. En caso de resultar favorable se elaborará el informe que se tramitará ante la Secretaría de la UCV, con los siguientes documentos, cuando se trate de los contemplados en el artículo 1º o 8.3 El informe con la documentación requerida se enviará al Consejo de Escuela o Facultad correspondiente, sin exigir otros requisitos adicionales a los especificados en esta resolución. 1.3 Descripción del proceso La descripción del procedimiento que se ejecuta durante el proceso de elaboración de un informe por parte del SO-FC-UCV, permitirá comprender el flujo de trabajo desde la atención de la solicitud del estudiante, hasta la entrega final de los informes a los diferentes asesores académicos. Es importante destacar que este proceso es similar para cada solicitud. El proceso se describe a continuación: 1. Apertura del periodo de atención de solicitudes estudiantiles. 2. De acuerdo al tipo de solicitud, se debe realizar una entrega previa de recaudos en las siguientes instancias: La oficina de Control de Estudio o la Unidad de Asesoramiento Académico correspondiente a la licenciatura del estudiante. 3. Entrega por parte de los estudiantes los recaudos en el SO-FC-UCV 4. Verificación de los recaudos de acuerdo al tipo de solicitud. 9 5. Asignación de fechas para cita de evaluación y entrevista 6. Ejecución de evaluaciones y entrevistas a los estudiantes. 7. Levantamiento de información, y elaboración del informe. 8. Entrega de informes a los asesores académicos correspondientes. 9. Revisión del informe por parte del Asesor Académico. 10. Presentación del caso ante el Consejo de Escuela. 11. Presentación del caso ante el Consejo de Facultad. 12. Consejo de Facultad informa a la Oficina de Control de Estudios. 13. Control de Estudios publica el listado de los estudiantes aceptados. 14. En el caso de los estudiantes que solicitaron Cambio de Escuela, se envían los recaudos a Secretaria. 15. Proceso de Inscripción. En la figura 1.1 se puede observar el diagrama de flujo referente al proceso de atención de las solicitudes estudiantiles antes descrito. 10 Figura 1.1. Flujo de trabajo del proceso de generación de informes. 11 1.4 Problema de Investigación La Facultad de Ciencias de la UCV (FC-UCV), está conformada por cinco escuelas y seis licenciaturas (Biología, Computación, Física, Geoquímica, Matemática y Química), con una población estudiantil 3.413 estudiantes al inicio del semestre 02-2016. En torno a las solicitudes estudiantiles, esta institución se rige por las Normas de Rendimiento Mínimo y Condiciones de Permanencia para los estudiantes de la UCV y la Resolución No 158 para Cambio de Escuela y Facultad, las cuales establecen un conjunto de normativas que permiten a los estudiantes de acuerdo a su estatus, realizar las siguientes solicitudes: reincorporación luego del cumplimiento de la sanción contemplada en el artículo 6, solicitud de reincorporación por aplicación del artículo 8 para casos excepcionales de alumnos incursos en artículo 6 que no quieren cumplir con la sanción establecida, reincorporación por casos especiales de aquellos alumnos que no se encuentran incursos en ninguna sanción y que sin embargo están desincorporados de la Facultad, donde el alumno debe cumplir con determinados criterios de rendimiento académico fijados por la Facultad para optar a su reincorporación, solicitud de Vía de Gracia para aquellos alumnos que se encuentran incursos en el artículo 7 de las Normas y solicitud de Cambio de Escuela y Facultad de acuerdo a la Resolución No 158 para aquellos alumnos inscritos que están desubicados vocacionalmente. Los estudiantes de la FC-UCV de acuerdo al tipo de petición que vayan a realizar, deben dirigirse a las siguientes instancias: Unidad de Asesoramiento Académico de la escuela respectiva a su licenciatura, la Oficina de Control de Estudios, y el Servicio de Orientación. Este último es el encargado de realizar las pruebas psicotécnicas y entrevistas vocacionales, necesarias para generar un informe técnico que detalle la situación del alumno. Estos informes 12 luego de ser impresos se les entregan a los respectivos asesores académicos de las diferentes licenciaturas para su posterior evaluación. A partir del semestre correspondiente al periodo académico 01-2015, se venía acentuando la carencia de los recursos necesarios para la generación de los informes que elabora el Servicio de Orientación, como lo son: el papel carta y la tinta de impresora. Esta situación se debía al incremento paulatino en los costos de los materiales, la dificultad para conseguirlos, y la disminución del presupuesto asignado a la UCV, y en consecuencia a este Servicio. A causa de estos motivos se venía presentando la imposibilidad de reproducir los informes. Aunado a esta situación el SO-FC-UCV en algunos casos, se ha visto en la necesidad de utilizar el correo electrónico como medio para transmitir los informes a los distintos asesores académicos. El uso de esta herramienta promovía la inoperancia en la entrega de los informes ya que la misma no está dedicada solo para este fin. Como consecuencia la entrega de los informes no se realizaba de forma homogénea, donde unos se entregan en formato físico y otros en formato digital. El último aspecto a destacar de esta situación es que al final del proceso, los informes son anexados a los expedientes de los estudiantes. En el caso en que se requería de una posterior consulta, y no estaba el informe en el respectivo expediente, el SO-FC-UCV no contaba con un respaldo ante este tipo de eventualidades, a la fecha se observó que solo contaban con el almacenamiento de los informes en forma de documentos digitales (archivos en formato Word) en los equipos del servicio. En base a los argumentos antes expuestos, surge como pregunta de investigación ¿Qué mecanismo permite sistematizar el proceso de generación de informes, que 13 además reduzca el consumo de material de oficina y respalde la información recolectada, en el SO-FC-UCV? 1.4. Objetivos En base a la problemática identificada y en concordancia con los requerimientos expresados por los usuarios del SO-FC-UCV y algunos de los asesores académicos, se planteó una solución, basada en la implementación de una aplicación Web, cuyos objetivos se exponen a continuación. 1.4.1 Objetivo General Desarrollar una aplicación Web para la gestión de los informes técnicos de los casos estudiantiles del Servicio de Orientación de la Facultad de Ciencias de la Universidad Central de Venezuela, denominada SIGEREP (Sistema de Gestión de Reportes). 1.4.2 Objetivos específicos ● Analizar los requerimientos para la implementación de la aplicación Web SIGEREP. ● Diseñar interfaces de usuario para la aplicación Web SIGEREP ● Determinar la arquitectura del software de la aplicación Web SIGEREP. ● Modelar el esquema lógico y físico de la Base Datos. ● Aplicar las pruebas de usabilidad y funcionalidad a la aplicación web SIGEREP. ● Implementar la aplicación en un servidor de producción de la Facultad de Ciencias de la UCV. 14 1.5 Justificación La presente aplicación WEB, solventó la problemática identificada en el SO-FC-UCV, para elaborar los informes referentes a las solicitudes estudiantiles que atiende, a través de la sustitución de los formatos físicos en papel, por una herramienta digital. Donde la aplicación Web redujo el consumo de material de oficina, empleado para la elaboración de los informes; como también eliminó la utilización del correo electrónico como medio para transmitirlos a los diferentes asesores académicos, ya que la información de los informes se consulta directamente en la aplicación. La escogencia de una aplicación Web como solución a esta problemática se debe a la versatilidad para desarrollar una herramienta que se ajustara a las necesidades que presentaba el SO-FC-UCV, donde se resalta la facilidad para centralizar un conjunto de usuarios bajo una misma aplicación, la integración de librerías que permiten la generación de documentos en formato PDF y XLSX, y el respaldo de los datos bajo una un equipo externo al SO. De esta forma el SO-FC-UCV cuenta con una herramienta que le permite seguir trabajando, sin la restricción de la escasez de los materiales de oficina empleados, la optimización del proceso de elaboración, y la facilidad de acceso a los distintos usuarios para realizar consultas. Dicha aplicación provee al SO-FC-UCV de diversas facilidades para mejorar el proceso de gestión involucrado. Dentro de los beneficios que ha adquirido este servicio se pueden destacar los siguientes: el respaldo de los datos en un mismo repositorio, la disposición de una herramienta dedicada para una única actividad, la generación de informes a demanda en formato digital (PDF, XLSX), la reducción del uso del papel y tinta de impresora para reproducir los informes, la facilidad de consultar los informes anteriores cuando sea requerido, la centralización 15 de todos los usuarios, y por último la generación de notificaciones por correo electrónico para mantener informado a los actores involucrados en el proceso. 1.4.5 Alcance Esta aplicación Web permite la gestión de los informes estudiantiles de los casos de: Reincorporación luego del cumplimiento de la sanción contemplada en el artículo 6 de las Normas de Rendimiento Mínimo y Condiciones de Permanencia para los estudiantes de la UCV; Reincorporación por casos especiales; Solicitud de reincorporación por aplicación del artículo 8 de las mencionadas normas; Vía de gracia y por último Cambio de Escuela y Facultad. Esta aplicación Web aborda desde el registro de la solicitud del estudiante, el proceso de elaboración del informe, como la entrega final a los asesores académicos. Permitiendo realizar las siguientes acciones: el registro de los estudiantes solicitantes, la notificación vía correo de las citas asignadas, la precarga de los datos personales, la generación de los informes, la consulta de reportes anteriores, la generación de los reportes en formato PDF, y por último la generación del reporte de gestión en formato XLSX. Esta aplicación es utilizada por los responsables del SO- FC-UCV, los asesores académicos de las diferentes licenciaturas y la Oficina del Control de estudios. 1.4.6 Antecedentes El antecedente de este Trabajo Especial de Grado corresponde a un proyecto realizado con anterioridad en el Servicio de Orientación de la Facultad de Ciencias de la Universidad Central de Venezuela, el cual se menciona a continuación: 16 “Desarrollo de una solución de inteligencia de negocio que apoye a la toma de decisiones en el servicio de orientación y control de estudios de la Facultad de Ciencias” Guevara (2016) desarrolló una solución de inteligencia de negocio que soporte los indicadores relacionados con el rendimiento académico con la atención que presta el Servicio de Orientación de la Facultad de Ciencias de la Universidad Central de Venezuela, con la finalidad de mejorar la prosecución estudiantil y apoyar a la toma de decisiones. Las tecnologías utilizadas en el desarrollo de la solución de inteligencia de negocio fueron las siguientes: Pentaho Data Integration, una herramienta que permite obtener información de diversas fuentes de datos, consolidarla y cargarla en un único repositorio de datos, también se usó Pentaho Schema Workbench, un motor de análisis del negocio de código abierto que permite a organizaciones de cualquier tamaño darle a los usuarios acceso a los datos de manera interactiva y Pentaho Business Analytics Platform, una aplicación que permite transformar todos los datos en información significativa facilitando así el análisis de ésta y brindando apoyo a la toma de decisiones; también fue utilizado Postgresql, un sistema manejador de base de datos y como método de desarrollo de un almacén de datos, el ciclo de vida dimensional del negocio según (kimball, 2002). Hay que destacar que el trabajo de investigación antes mencionado, no involucra la sistematización de un proceso a través del desarrollo de alguna herramienta, si no el estudio de los datos generados a partir de las actividades realizadas en el SO-FC-UCV. Por lo cual este Trabajo Especial de Grado es el primero en su clase en implementarse en dicho departamento. 17 1.4.7 Metodología de desarrollo La presente aplicación Web, requirió de una metodología ágil que no implicara la producción de muchos artefactos de software, y que facilitará efectuar cambios de manera rápida a medida que surgieran nuevas especificaciones. En base a los motivos antes expuestos, se escogió adaptar la metodología Programación Extrema (XP) a las necesidades y requerimientos del proyecto. Este marco de trabajo lo define Pérez (2011) como una disciplina de desarrollo de software basada en los métodos ágiles, que evidencia principios tales como el desarrollo incremental, la participación activa del cliente, y el interés en las personas. El ciclo de vida de la metodología XP contempla 4 fases: a) Fase de planeación: Esta fase inicia con las historias de usuario que describen las características y funcionalidades del software. b) Fase de diseño: El proceso de diseño debe procurar diseños simples y sencillos para facilitar el desarrollo. Al ser una adaptación de la metodología original no se contempló la elaboración de glosarios de términos y la utilización de las tarjetas CRC. c) Fase de codificación: Dado las limitantes para desarrollar el proyecto, por solo contar con un solo desarrollador, se procedió a codificar las historias de usuario de acuerdo a una prioridad, la cual se determinaba por su importancia y funcionalidad. d) Fase de pruebas: Las pruebas de unidad se realizaron mediante la ejecución del proceso habitual de gestión de los informes, en conjunto con la aplicación Web. De esta forma se detectaron las carencias y debilidades de la aplicación. 18 También hay que mencionar que esta metodología se rige por un conjunto de buenas prácticas, donde solo se cumplen aquellas que se adaptan a las características y requerimientos del proyecto, las cuales son las siguientes: diseño simple, la refactorización del código, la integración continua de las partes del sistema, la realización de pruebas unitarias junto con el cliente, y por último la estimación de 40 horas de trabajo como máximo por semana. El presente capitulo expuso la problemática identificada en el SO-FC-UCV para la gestión de los informes técnicos concernientes a las solicitudes estudiantiles que atienden. También se planteó la solución, la cual involucro el desarrollo e implementación de una aplicación Web. Dicho planteamiento abordo un conjunto de objetivos, el alcance, la justificación y la metodología de trabajo utilizada para cumplir dicho fin. Para continuar en la siguiente sección se abordaran los conceptos teóricos que fundamentan esta investigación. 19 Capítulo 2 Marco Teórico En este segundo capítulo se presentarán los conceptos teóricos que soportan esta investigación. Partiendo del concepto de una aplicación Web, hasta las tecnologías escogidas para su desarrollo. 2.1 Aplicación Web Las aplicaciones Web según Blasco, Murcia, y Mifsud (2013) son aquellas que su arquitectura consta de máquinas conectadas a una red, por lo general, Internet o una Intranet corporativa que sigue el esquema cliente-servidor, y se comunica a través del protocolo HTTP. Las características que poseen son: dependientes de un cliente o navegador web para funcionar, no están atadas a ningún sistema operativo, fáciles de actualizar, y por último son de libre acceso a los usuarios. Alguna de las ventajas que presentan las aplicaciones Web según Muñoz (2014) se mencionan a continuación: ● Sólo se necesita un computador con un navegador web y una conexión a internet para acceder a ella. ● Las aplicaciones web son muy sencillas de utilizar, sólo necesitará conocimientos básicos de informática para trabajar con ellas. ● Las aplicaciones web pueden ser usadas por varios usuarios al mismo tiempo. ● Existe solo una versión de la aplicación web en el servidor, por lo que no hay que distribuirla entre los demás ordenadores. 20 Pero también las aplicaciones Web presentan algunas desventajas como: ● La necesidad de poseer siempre una conexión a internet. ● El límite de espacio de almacenamiento. ● Los problemas presentados por la compatibilidad de idiomas. ● Los datos no poseen un dueño, y corren riesgos de seguridad. 2.2 Patrón arquitectónico MVC Surge con el objetivo de reducir el esfuerzo de programación, necesario en la implementación de sistemas múltiples y sincronizados de los mismos datos, a partir de estandarizar el diseño de las aplicaciones. El patrón MVC según Romero y González ( 2011) es un paradigma que divide las partes que conforman una aplicación en el Modelo, las Vistas y los Controladores , permitiendo la implementación por separado de cada elemento, garantizando así la actualización y mantenimiento del software de forma sencilla y en un reducido espacio de tiempo. a) El Modelo: es el objeto que representa los datos del programa. Maneja los datos y controla todas sus transformaciones, y no tiene conocimiento específico de los Controladores o de las Vistas, ni siquiera contiene referencias a ellos. b) La Vista: es el objeto que maneja la presentación visual de los datos representados por el Modelo. Genera una representación visual del Modelo y muestra los datos al usuario. Interactúan preferentemente con el Controlador, pero es posible que trate directamente con el Modelo a través de una referencia al propio Modelo. 21 c) El Controlador: es el objeto que proporciona significado a las órdenes del usuario, actuando sobre los datos representados por el Modelo, centra toda la interacción entre la Vista y el Modelo. Cuando se realiza algún cambio, entra en acción, bien sea por cambios en la información del Modelo o por alteraciones de la Vista. Interactúa con el Modelo a través de una referencia al propio Modelo. 2.4 Arquitectura Cliente – Servidor Las aplicaciones Web están basadas en la arquitectura cliente/servidor, la cual es definida por Sommerville, (2005) como un sistema conformado por un conjunto de servicios que se le proporcionan a los clientes que hacen uso de dichos servicios. Los servidores y los clientes se tratan de forma diferente en estos sistemas. Esto significa que los equipos clientes contactan a un servidor a través de la red para utilizar sus servicios. 2.5 Arquitecturas de dos y tres niveles Luján (2001) indica que la diferencia entre las arquitecturas de dos y tres niveles está en la forma de distribución de la aplicación entre el cliente y el servidor. La arquitectura de dos capas, se refiere a una aplicación donde el cliente mantiene la lógica de presentación de negocio y de acceso a los datos; y el servidor únicamente gestiona los datos. En las arquitecturas de tres niveles, la lógica de presentación, la lógica de negocio y la lógica de datos están separadas, de tal forma que mientras la lógica de presentación se ejecutará normalmente en la estación cliente, la lógica de negocio y la de datos pueden estar repartidas entre distintos procesadores. En este tipo de aplicaciones suelen existir dos servidores: uno contiene la lógica de negocio y otro la lógica de datos. 22 2.6. Bases de Datos Una Base de datos en una colección de datos referentes a una organización estructurada según un modelo de datos de forma que plasma las relaciones y restricciones existentes entre los objetos del mundo real, consiguiendo independencia, integridad y seguridad entre ellos. Silberschatz (2002) define los sistemas de bases de datos como un una colección de archivos interrelacionados y un conjunto de programas que permitan a los usuarios acceder y modificar estos archivos. Las Base de Datos son absolutamente necesarias en cualquier aplicación o herramienta, ya que estas permiten almacenar los datos de forma organizada y estructurada, constituyéndose en la columna vertebral de toda organización a la hora de procesar la información que genera. 2.6.1 Sistema Manejador de Base de Datos El sistema manejador de base de datos facilita el proceso de definición construcción y manipulación de los datos para diversas aplicaciones. Rodríguez (2006) lo define como el conjunto de programas, procedimientos, lenguajes; que suministra, tanto a los usuarios no informáticos como a los analistas, programadores o al administrador, los medios necesarios para describir, recuperar y manipular los datos almacenados en la base, manteniendo su integridad, confidencialidad y seguridad. Hoy en día todos los sistemas que almacenan información, implementan una Base de datos a través de un sistema manejador de acuerdo a sus necesidades, en el caso de las aplicaciones Web es recomendable el sistema manejador Mysql el cual se explicara en secciones posteriores. 23 2.7 Framework Es un entorno de trabajo conceptual y tecnológico de asistencia definida, normalmente, con artefactos o módulos concretos de software, que puede servir de base para la organización y desarrollo de software. Típicamente, puede incluir soporte de programas, bibliotecas, y un lenguaje interpretado, entre otras herramientas, para así ayudar a desarrollar y unir los diferentes componentes de un proyecto. Según Gutiérrez (2014) el término framework, se refiere a una estructura de softwarecompuestadecomponentespersonalizableseintercambiablesparael desarrollo de una aplicación. La esquematización de una aplicación Web tiene sus ventajas al momento de su construcción, entre las cuales se pueden mencionar las siguientes:  La organización de los archivos  La integración de librearías que facilitan lo siguiente: Validación de Formularios, Filtración de datos de Entrada/Salida, Abstracción para Bases de Datos, Utilidades para manejar Cookies y Sesiones, E-mail, Calendario, Paginación, entre muchas más.  Están basados en el patrón MVC (Modelo – Vista - Controlador).  Cualquier valor pasado a objetos de bases de datos es filtrado contra inyecciones SQL. También todas las funciones generadoras de HTML, como las de formularios y URL filtran los datos de salida automáticamente.  La escritura de menos código.  Están soportados por comunidades. 24 2.8 Tecnologías del lado del Cliente Las tecnologías del lado del cliente, son aquellas que interpreta el navegador de forma que las convierte en las páginas Web como resultado final. Las tecnologías que se presentan a continuación son las más apropiadas para la creación de un sitio Web. 2.8.1 HTML La información publicada en la Web debe ser mediante un lenguaje estándar que sea entendido universalmente. El lenguaje de marcas de hipertexto por su siglas en inglés, HTML es el lenguaje de hipermedia más utilizado en la Web, se caracteriza por ser codificado por etiquetas que indica el significado de cada bloque, y es interpretado por los navegadores. Luján (2001) dice que este lenguaje se caracteriza por estar conformado por de marcas (etiquetas) que se emplea para dar formato a los documentos que se quieren publicar en la WWW. Los navegadores pueden interpretar las etiquetas y muestran los documentos con el formato deseado. La mayoría de las etiquetas aparecen por parejas (códigos pareados), siendo una de apertura y otra de cierre, las cuales delimitan la parte del documento HTML que se ve afectada por su acción. Son diversos los beneficios que brinda el uso de este lenguaje para el desarrollo de una aplicación Web, entre los beneficios se pueden mencionar los siguientes:  El código es sencillo y simple. Por ello cargan más rápido las páginas en el navegador.  Las páginas y los elementos que contienen, se ven perfectamente en todos los navegadores.  Es posible insertar directamente videos en las páginas sin tener que acudir a los iframes o usar la etiqueta object. 25  HTML 5 incluye etiquetas orientadas principalmente a los buscadores, para facilitarles comprender el contenido de las páginas, lo que nos beneficia, por ejemplo: header, footer, article, nav, etc. 2.8.2 CSS El lenguaje de marcado HTML solo cuenta con un conjunto de estilos definidos por defecto por el intérprete del navegador, y para modificar o crear el estilo de un sitio Web (colores, formas, animaciones, tipo de letra, tamaños de los elementos, etc.). Es necesaria la utilización del mecanismo de las hojas de estilo (CSS). Según Puig (2012) el CSS es un lenguaje de estilos empleado para definir la presentación, el formato y la apariencia de un documento de marcaje, sea HTML, XML, o cualquier otro. Comúnmente se emplea para dar formato visual a documentos HTML o XHTML que funcionan como espacios web. También puede ser empleado en formatos XML, u otros tipos de documentos de marcaje para la posterior generación de documentos. Una de las características más potentes de la programación con hojas de estilo consiste en definir los estilos de todo un sitio web. Esto se consigue creando un archivo donde tan sólo colocamos las declaraciones de estilos de la página y enlazando todas las páginas del sitio con ese archivo. De este modo, todas las páginas comparten una misma declaración de estilos y, por tanto, si la cambiamos, cambiarán todas las páginas. El uso de las hojas de estilo (CSS) es indispensable para la creación de una aplicación Web, las razones son las siguientes: ● Permite separar el contenido de la presentación, ya que se encuentran en archivos aparte. 26 ● El código CSS es adaptable dependiendo de los gustos y el tiempo. ● Permite unificar el diseño de las páginas del sitio. Ya que se puede enlazar desde el código HTML a un mismo archivo con los estilos (CSS). ● La precisión y elasticidad de los elementos del sitio Web se puede configurar para que se adapten a la medida de resolución del navegador. ● La combinación de CSS y marcadores descriptivos posibilita que nuestra página se vea correctamente con o sin hoja de estilos, puesto que en cualquier caso, la información se mantendrá estructurada y ordenada. ● La limpieza del código fuente, debido que el estilo es independiente del código HTML. 2.8.3 JavaScript Es uno de los lenguajes más extendidos en el mundo, gracias a que cada computador en el mundo posee un navegador. Es un lenguaje sumamente flexible que permite realzar una cantidad de tareas para las cuales en un principio no fue concebido. Según Ferguson & Flanagan (2002) es un lenguaje de programación interpretado, dialecto del estándar ECMAScript. Se define como orientado a objetos, basado en prototipos, imperativo, débilmente tipado y dinámico .Se utiliza principalmente en su forma del lado del cliente, implementado como parte de un navegador web permitiendo mejoras en la interfaz de usuario y páginas Web dinámicas. La integración de este lenguaje es indispensable para el desarrollo de un sitio Web, ya que nos permite configurar el comportamiento de los elementos que interactúan con el usuario, como también el consumo de recursos a través de la comunicación por AJAX ola validaciones de formularios sin utilizar un lenguaje de script del lado del servidor. 27 2.8.4 Twitter Bootstrap Es un framework de código abierto muy útil en el desarrollo de sitios web .Las interfaces que se crean con Bootstrap 3 son de gran usabilidad. Provee un conjunto de elementos que se adaptan perfectamente a los diseños sobre cualquier dispositivo móvil, lo que es muy importante, ya que la mayoría de los sitios que usan responsive web design generan conversión. Según W3 (2012) lo define como un framework de front-end gratuito para un desarrollo web más rápido y fácil. Bootstrap incluye plantillas de diseño basadas en HTML y CSS para tipografía, formularios, botones, tablas, navegación, modales, carruseles de imágenes y muchos otros, así como complementos JavaScript opcionales. Bootstrap también le da la capacidad de crear fácilmente diseños de respuesta. La utilización de este framework tiene sus ventajas, las cuales se mencionan a continuación: ● Cuenta con un mantenimiento y actualización realizados por Twitter: esto no quiere decir que esta herramienta sea perfecta, pero gran parte del trabajo interno ya está llevado a cabo por sus creadores. ● Ofrece un paquete de elementos web personalizables: con Bootstrap podéis diseñar una web jugando con sus elementos compuestos por diferentes combinaciones de HTML, CSS y Javascript, de manera que las piezas siempre encajan. ● Utiliza componentes vitales para los desarrolladores: como HTML5, CSS3, jQuery o GitHub, entre otros. ● Sus plantillas son de sencilla adaptación responsive: se desarrolló con la idea de facilitar el proceso de adaptación web a todo tipo de dispositivos. ● Incluye Grid system: muy útil para maquetar por columnas. 28 ● Se integra con librerías JavaScript. ● Usa Less: un lenguaje de las hojas de estilo CSS preparado para enriquecer los estilos de la web. ● Es una herramienta de uso ágil y sencillo: facilita enormemente el diseño de interfaces y además incluye por defecto una plantilla bastante optimizada. ● Contiene tutoriales: este framework facilita mucha documentación para resolver dudas tanto a principiantes como a desarrolladores expertos. ● Cada vez ofrece más plugins: cada vez incluye más características gracias a la aparición de nuevos plugins de terceros. 2.8.5 JQuery Es uno de los complementos más esenciales para el desarrollo Web, usado en millones de sitios, debido a la facilidad para desarrollar aplicaciones enriquecidas del lado del cliente, en lenguaje JavaScript, compatible con todos los navegadores. Hay que aclarar que no es un lenguaje, sino una serie de funciones y métodos. Por tanto, es una librería que podemos usar opcionalmente si queremos facilitar nuestro el trabajo durante el desarrollo de aplicaciones Web. Resig (2006) es una biblioteca multiplataforma de JavaScript, que permite simplificar la manera de interactuar con los documentos HTML, manipular el árbol DOM, manejar eventos, desarrollar animaciones y agregar interacción con la técnica AJAX a páginas Web. Se quiere contar con el apoyo de este framework por lo siguiente: ● jQuery es flexible y rápido para el desarrollo web 29 ● Viene con licencia MIT y es Open Source ● Tiene una excelente comunidad de soporte ● Tiene Plugins ● Bugs son resueltos rápidamente ● Excelente integración con AJAX 2.9 Tecnologías del lado del Servidor Las tecnologías del lado del servidor, se ejecutan en el servidor Web, antes de ser enviada a través de internet al cliente. Estas tecnologías permiten realizar el acceso a la base de datos, conexiones de red, y otras tareas para crear la página final que verá el usuario. Las tecnologías utilizadas para el desarrollo, se escogieron porque son multiplataforma, de gran interacción con diferentes motores de base de datos, y por último son de código abierto. 2.9.1 PHP El procesador de Hipertexto (PHP) es un lenguaje de programación de alto rendimiento, estructurado y diseñado para páginas Web dinámicas. Es un lenguaje interpretado por el servidor host mediante scripts, por esto es considerado el módulo más usado de apache. Según Cobo, Gómez, Pérez, y Rocha (2005) es un lenguaje interpretado del lado del servidor que surge dentro de la corriente denominada código abierto (open source). Se caracteriza por su potencia, versatilidad, robustez y modularidad. La portabilidad del lenguaje debido a que es interpretado, permite ser ejecutado en cualquier sistema operativo o plataforma, es la mejor alternativa tecnológica para desarrollar un sitio web o aplicaciones pequeñas de escritorio multiplataforma. 30 Las ventajas que a continuación se presentan, motivaron la escogencia de este lenguaje para el desarrollo:  Fomenta la creación de aplicaciones bajo software libre.  Contienen una extensa comunidad.  Es multiplataforma (Windows, Linux).  Posee un conjunto grande de extensiones (PDF, sockets, Base de datos, etc.).  Solo se puede acceder a través del uso de un navegador. 2.9.2 CakePhp Es un framework o marco de trabajo que facilita el desarrollo de aplicaciones web, utilizando el patrón de diseño MVC (Modelo Vista Controlador). Es de código abierto y se distribuye bajo licencia MIT. Al igual que Ruby On Rails, CakePHP facilita al usuario la interacción con la base de datos mediante el uso de ActiveRecord. Además hace uso del patrón Modelo Vista Controlador. Cake Software Foundation, Inc (2012) expresa que es un marco de desarrollo rápido para PHP, libre, de código abierto, que sirve como base a los programadores para que éstos puedan crear aplicaciones Web. De forma estructurada, rápida y flexible. La principal ventaja de este framework es que flexibilidad del desarrollo Web gracias a la integración con patrones de diseño como el patrón MVC (Modelo – Vista - Controlador). Otra ventaja es el conjunto de librerías y herramientas que reducen la cantidad de código que tiene que escribir el desarrollador, dejando la mayor carga de trabajo en el diseño de las funcionalidades de 31 acuerdo a los requerimientos. Por este motivo se escogió esta herramienta para el desarrollo de la aplicación Web que gestione los informes del Servicio de Orientación. 2.9.3 Apache Es un servidor Web totalmente estructurado en software libre disponible para todas las plataformas y sistemas operativos, por lo tanto es una herramienta altamente configurable y adaptable que permite el trabajo en multiplataforma con alto nivel y rendimiento. Según The Apache Foundation (2001) dice que es un servidor web HTTP de código abierto, para plataformas Unix (BSD, GNU/Linux, etc.), Microsoft Windows, Macintosh y otras, que implementa el protocolo HTTP/1.12 y la noción de sitio virtual. Apache tiene una gran aceptación dentro de la comunidad, debido a que es uno de los servidores http más usados en la actualidad por sus niveles de seguridad y por permitir la interacción de los usuarios con los portales Web elaborados con HTML y PHP. Se puede mencionar diversas ventajas que presenta el uso de este servidor:  Es software de código abierto.  El servidor web Apache es completamente gratuito.  Es muy popular y cuenta con gran soporte.  Se puede instalar en muchos sistemas operativos, es compatible con Windows, Linux y Mac OS.  Tiene capacidad de manejar más de un millón de visitas/día.  Soporte de seguridad SSL y TLS. 32 2.9.4 MySQL Es un manejador de base de datos disponible para todos los sistemas operativos, es de licencia pública y es considerado el mejor gestor de base de datos para aplicaciones Web. Este tipo de manejador es capaz de ejecutar acciones básicas, como integrar y borrar registros, actualizar información o hacer consultas simples o algo complejo como la aplicación lo requiera. Berni (2010) lo define como un sistema de gestión de bases de datos relacional desarrollado bajo licencia dual GPL/Licencia comercial por Oracle Corporation y está considerada como la base datos de código abierto más popular del mundo para el desarrollo Web. Se seleccionó este manejador de base de datos por diversas razones: ● Es Multiplataforma, soportado por los S.O. Windows, Linux y Mac. ● Es fácil de aprender, ya que solo se necesita conocer el estándar de SQL. ● MySQL es una base de datos ampliamente probada por distintos usuarios y empresas con alto éxito. ● MySQL es fácil de administrar, no se necesita ser un DBA (administrador de base de datos) para comprender su funcionamiento debido a su sencillez. ● El coste total de inicio es ampliamente inferior al de Oracle o Microsoft SQL Server. Nosotros vamos a poder crear tantos servidores MySQL como necesitemos sin incurrir en ningún coste alto. ● Es escalable y garantiza que las transacciones son atómicas, consistentes, aisladas y durable; ACID. En este marco teórico se abordó los conceptos que fundamentan esta investigación los cuáles abordan tanto el significado de una aplicación Web, como su arquitectura de hardware y 33 software. También se profundizó en las tecnologías escogidas para el desarrollo, tanto del lado del cliente como lo son: HTML, CSS, JavaScript, JQuery; y las tecnologías del lado del servidor como: PHP, CakePhp, MySQL, y Apache. A partir de este capítulo se comienza la explicación del proceso de desarrollo bajo un marco aplicativo siguiendo una metodología de desarrollo de software establecido. 34 Capítulo 3 Marco Aplicativo En el presente capítulo se describe todo el proceso de desarrollo, incluyendo los artefactos de software generados, siguiendo la adaptación de la metodología Programación extrema pos sus siglas en inglés (XP) como metodología de trabajo. En la figura 3.0 se muestra el grafico referente al proceso de trabajo, el cual está conformado por cuatro fases de forma iterativa. Figura 3.0. Fases de la Metodología Programación Extrema XP. En el caso de la aplicación Web SIGEREP, solo se realizó un ciclo de iteración con el cual se obtuvo el producto final. La descripción del ciclo esta descrito en las secciones siguientes de acuerdo a las fases que contempla la metodología. 35 3.1 Fase de Planeación Para realizar el levantamiento de requerimientos, fue necesaria la participación de los diferentes actores involucrados en el proceso de gestión de las solicitudes estudiantiles que atiende el SO-FC-UCV, a través del uso de la entrevista como herramienta para que dichos actores expresaran sus inquietudes y necesidades. Las entrevistas realizadas eran de tipo estructurado, donde se les realizó a los usuarios una serie de preguntas enfocadas en las funciones y procesos involucrados en la gestión de los informes. A continuación se hace mención al cuestionario realizado a los distintos usuarios que participan en el proceso de gestión de los informes: ● ¿Qué tipos de informes realiza el SO-FC-UCV? ● ¿Qué tipos de solicitudes estudiantiles puede realizar un estudiante de FC-UCV? ● ¿Cuántas personas intervienen en el proceso de generación del informe? ● ¿Qué estructura posee el informe que realiza el analista del SO-FC-UCV? ● ¿Cuáles son los roles de los usuarios involucrados? ● ¿Poseen algún dispositivo o respaldo en físico de los informes que elaboran? ● ¿A partir de qué periodo académico se empezó a presentar esta situación? ● ¿Cómo es el proceso de atención de una solitud estudiantil? Las respuestas obtenidas por parte de los usuarios eran de forma abierta, donde respondieron con total naturalidad. Las entrevistas se realizaron por separado. La primera entrevista se realizó en conjunto con la Profa. Yosly Hernández y la Profa. Marisol Ortega, las cuales estaban bajo el rol de asesores académicos de sus respectivas escuelas, la segunda entrevista se le aplicó a la Soc. Anabel González como analista del SO-FC-UCV. De esta forma se obtuvo una visión 36 completa del problema, la cual se reflejó en un listado de requerimientos, los cuales se exponen a continuación. 3.1.1 Requerimientos Luego del levantamiento de información, se identificaron un conjunto de requerimientos, los cuales se puede clasificar en funcionales y no funcionales. Los requerimientos funcionales son aquellos que describen una función en particular o el comportamiento del sistema. Los cuales se describen a continuación: ● La aplicación debe generar una notificación vía correo electrónico al estudiante solicitante, luego de haber registrado su solicitud en la aplicación. Dicha notificación le debe indicar las fechas de evaluación y entrevista, como el analista responsable de su caso. ● La aplicación debe generar una notificación vía correo electrónico a los profesores designados como asesores académico en cada una de las escuelas , al cierre del proceso de atención de solicitudes por parte del SO-FC-UCV, para poder acceder a la aplicación y consultar los informes respectivos. ● La aplicación debe permitir a la secretaria del SO-FC-UCV, la precarga de los datos personales del estudiante como la asignación de las citas de evaluación y entrevista vocacional. ● El periodo académico se debe generar automáticamente por parte de la aplicación. ● La aplicación debe permitir la opción de registrar los datos académicos de los estudiantes a partir de la carga del Kardex en la aplicación. 37 ● La aplicación debe mostrar al usuario asesor, los reportes según el tipo (Reincorporación, Vía de Gracia, Cambio de Escuela). ● La aplicación debe permitir la generación de los informes en formato PDF. ● La consulta de los informes anteriores de un estudiante se debe realizar a partir del ingreso del número de cédula de identidad. ● La aplicación debe permitir agregar o editar un informe cuando el usuario analista del SO-FC-UCV lo requiera. Los requisitos no funcionales son propiedades o cualidades que el producto de software debe tener, en el caso particular de la aplicación Web SIGEREP son: Usabilidad:  La aplicación debe estar estructurada en módulos de acuerdo a los roles de los usuarios, de forma que se separen las funcionalidades. Los roles de los usuarios son: Asesor, Servicio, Secretaria, Visor, Administrador.  Las interfaces que modelan el registro de los datos de los informes deben asemejarse a los formatos físicos empleados por el SO-FC-UCV. Seguridad:  El usuario se debe autenticarse para ingresar en la aplicación.  El acceso a la aplicación está restringido a los estudiantes, la aplicación debe estar disponible solamente para los usuarios que participan en el proceso de gestión de los informes. 38 3.1.2 Historias de usuario Para la representación de los requerimientos funcionales de la aplicación, se utilizó las historias de usuario siguiendo la metodología de trabajo establecida. Las historias de usuario son una representación de un requisito escrito en una o dos frases, utilizando el lenguaje común del usuario. Los cuales se muestran en las tablas siguientes: En la tabla 3.1 se puede visualizar la historia de usuario Nº 1 en la que el usuario debe autenticarse para poder ingresar en la aplicación. Tabla 3.1. Historia de usuario – login de usuario Historia de Usuario Numero: 1 Usuario: Administrador, Servicio, Asesor, Secretaria, Control de estudios. Nombre Historia: Login de Usuario Prioridad en Negocio: 1 Riesgo en Desarrollo: Bajo Programador Responsable: Andrés Morales Descripción: Los usuarios deben colocar su correo electrónico y contraseña para poder ingresar en el sistema. Observaciones: Los usuario son registrados por el administrador de la aplicación de forma previa. Las historias de usuario Nº 2 y Nº 3, comprenden las funcionalidades respectivas al cambio y recuperación de contraseñas en caso de que el usuario lo requiera Nº 2. (Ver Tabla 3.2 y Tabla 3.3). 39 Tabla 3.2 Historia de Usuario – recuperar Contraseña. Historia de Usuario Numero: 2 Usuario: Administrador, Servicio, Asesor, Secretaria, Control de estudios. Nombre Historia: Recuperar Contraseña. Prioridad en Negocio: 1 Riesgo en Desarrollo: Baja Programador Responsable: Andrés Morales Descripción: Los usuarios pueden recuperar su contraseña, en caso de no acordarse. Para ello el sistema les debe pedir el correo electrónico registrado, para luego enviarles una notificación vía correo electrónico con la contraseña respectiva. Observaciones: Tabla 3.3 Historia de Usuario – Cambiar Contraseña Historia de Usuario Numero:3 Usuario: Administrador, Servicio, Asesor, Secretaria, Control de estudios Nombre Historia: Cambiar Contraseña. Prioridad en Negocio: 1 Riesgo en Desarrollo: Baja Programador Responsable: Andrés Morales Descripción: Los usuarios deben tener la funcionalidad para cambiar la contraseña, después de haber ingresado en la aplicación. Observaciones: La aplicación Web al poseer un elemento de seguridad basado en la autentificación de usuarios, debe por concerniente proporcionar la funcionalidad para cerrar la sesión luego de 40 haber culminado las tereas respectivas dentro de la aplicación, esto se puede visualizar en la historia de usuario Nº 4. (Ver Tabla 3.4) Tabla 3.4 Historia de Usuario - Cerrar Sesión. Historia de Usuario Numero: 4 Usuario: Administrador, Servicio, Asesor, Secretaria, Control de estudios Nombre Historia: Cerrar Sesión. Prioridad en Negocio: 1 Riesgo en Desarrollo: Baja Programador Responsable: Andrés Morales Descripción: Los usuarios activos dentro de la aplicación deben finalizar su sesión al salir. Observaciones: Como se observa en la Tabla 3.5 comprende una de las dos funcionalidades que debe tener el usuario secretaria dentro de su módulo de trabajo, la cual le debe permitir registrar al estudiante solicitante. Tabla 3.5 Historia de Usuario – Registrar Solicitantes. Historia de Usuario Numero:5 Usuario: Secretaria Nombre Historia: Registrar Solicitantes Prioridad en Negocio: 1 Riesgo en Desarrollo: Baja Programador Responsable: Andrés Morales 41 Descripción: El usuario secretaria debe tener la funcionalidad que le permita registrar a un estudiante, donde recoge sus datos personales, le asigne la cita y el analista responsable. Después de haber registrado al estudiante debe generarse una notificación vía correo electrónico indicando la información del registro respectivo al estudiante. Observaciones: La historia de usuario Nº 6, comprende la segunda funcionalidad que puede realizar el usuario secretaria, la cual le despliega el listado de estudiantes registrados. Tabla 3.6. Historia de Usuario – Listado de Solicitantes. Historia de Usuario Numero: 6 Usuario: Secretaria Nombre Historia: Ver listado de Solicitantes Prioridad en Negocio: 1 Riesgo en Desarrollo: Baja Programador Responsable: Andrés Morales Descripción: El usuario debe ser capaz de ver el listado de los estudiantes solicitantes registrados, como también la información registrada en la agenda. Observaciones: La Tabla 3.7 comprende la funcionalidad de ver el listado de solicitudes por reporte asignados a un analista en particular. 42 Tabla 3.7 Historia de Usuario – Listado de Solicitudes Historia de Usuario Numero:7 Usuario: Servicio Nombre Historia: Listado de Solicitudes Prioridad en Negocio: 1 Riesgo en Desarrollo: Baja Programador Responsable: Andrés Morales Descripción: El usuario debe ser capaz de ver el listado de solicitudes asignadas a su persona para luego asignarles un reporte. Observaciones: Mientras en la Tabla 3.8 se modela la historia de usuario Nº 8 correspondiente al listado de reportes creados a partir de la solicitud. Tabla 3.8 Historia de Usuario – Listado de Reportes Historia de Usuario Numero: 8 Usuario: Servicio Nombre Historia: Listado de reportes Prioridad en Negocio: 1 Riesgo en Desarrollo: Baja Programador Responsable: Andrés Morales Descripción: El usuario debe tener la facilidad para poder ver el listado de reportes, desplegar el detalle del mismo, editar los datos del reporte y por último generar el reporte en formato PDF cuando esté finalizado. 43 Los reportes de gestión comprenden el registro de los estudiantes atendidos por el SO-FC- UCV de acuerdo al tipo de solicitud estudiantil en un periodo académico ya finalizado. (Ver Tabla 3.9). Tabla 3.9 Historia de Usuario – Reporte de Gestión. Historia de Usuario Numero:9 Usuario: Servicio Nombre Historia: Reporte de Gestión Prioridad en Negocio: 2 Riesgo en Desarrollo: Baja Programador Responsable: Andrés Morales Descripción: El usuario debe ser capaz de generar el reporte de gestión de un periodo de atención de solicitudes ya culminado en formato XLSX. Observaciones: La tabla 3.10 presenta el modelado de la funcionalidad para consultar los reportes anteriores, para los diferentes usuarios involucrados en el proceso de gestión de las solicitudes estudiantiles. Tabla 3.10 Historia de Usuario – Consultar Reportes Historia de Usuario Numero:10 Usuario: Servicio, Asesor, Control de Estudios Nombre Historia: Consultar Reportes Prioridad en Negocio: 2 Riesgo en Desarrollo: Baja Programador Responsable: Andrés Morales 44 Descripción: El usuario debe poder realizar consultas de reportes posteriores. Observaciones: Se puede observar que la Tabla 3.11 modela la historia de usuario correspondiente a la funcionalidad para listar los reportes referentes a la licenciatura del asesor académico, los cuales fueron elaborados en el periodo académico vigente. Tabla 3.11 Historia de Usuario – Listados de Reportes Finales Historia de Usuario Numero:11 Usuario: Asesor Nombre Historia: Listados de Reportes Finales Prioridad en Negocio: 1 Riesgo en Desarrollo: Baja Programador Responsable: Andrés Morales Descripción: El usuario puede visualizar los reportes correspondientes a su licenciatura del último periodo finalizado. Observaciones: Solo puede acceder cuando finalice el periodo de atención de solicitudes. La siguiente historia de usuario comprende la gestión de los usuarios, lo cual involucra la creación, edición, eliminación de un usuario dentro de la aplicación Web. (Ver Tabla 3.12). Tabla 3.12 Historia de Usuario – Gestión de Usuarios. Historia de Usuario Numero: 12 Usuario: Administrador Nombre Historia: Gestión de Usuarios 45 Prioridad en Negocio: 1 Riesgo en Desarrollo: Baja Programador Responsable: Andrés Morales Descripción: El administrador debe poder agregar, editar, consultar y eliminar las cuentas de usuario. Observaciones: La historia de usuario Nº 13 modela en la tabla 3.13 se describe la funcionalidad para gestionar los periodos académicos. Tabla 3.13 Historia de Usuario – Gestión de periodos Historia de Usuario Numero:13 Usuario: Administrador Nombre Historia: Gestión de Periodos Prioridad en Negocio: 1 Riesgo en Desarrollo: Baja Programador Responsable: Andrés Morales Descripción: El usuario administrador debe ser el encargado de la apertura y cierre de los periodos de atención de solicitudes. En el caso de realizar un cierre debe generase una notificación vía correo electrónico a los usuarios asesores. Observaciones: La Tabla 3.14 describe la utilidad para habilitar o deshabilitar la aplicación Web, en caso que se requiera hacerle mantenimiento. 46 Tabla 3.14 Historia de Usuario - Mantenimiento Historia de Usuario Numero: 14 Usuario: Administrador Nombre Historia: Mantenimiento Prioridad en Negocio: 1 Riesgo en Desarrollo: Baja Programador Responsable: Andrés Morales Descripción: El administrador puede deshabilitar la aplicación en caso de que se requiera realizar mantenimiento a la aplicación. Al deshabilitar la aplicación los demás usuarios no pueden acceder al sistema. Observaciones: 3.2 Fase de diseño Al culminar la fase de planeación, el siguiente paso en el proceso de desarrollo es el de diseño de la aplicación, tomando en cuenta la usabilidad para el usuario. Esta fase involucra lo siguientes aspectos: ● Diseñar un modelo de datos que dé solución al problema planteado. ● Establecer la arquitectura de la aplicación Web. ● Diseñar las interfaces de usuario. 3.2.1 Modelo de Datos En esta sección se expondrá el modelo de datos que se diseñó en base al estudio de los requerimientos de la aplicación Web, contemplando los campos que conforman los formatos físicos que emplea el Servicio de Orientación para elaborar los informes, destacando la facilidad 47 de modelar dichas estructuras ya que la información que recoge los informes está estructurada de acuerdo a un tipo. Ejemplo: datos personales, datos académicos, entre otros. Esto se puede observar en el diagrama de Entidad- Relación en el Anexo A Figura A.1 Un aspecto importante que se consideró en el diseño del modelo, es que el periodo identifica el registro de la información para la agenda y el reporte, indicando el semestre en que se realizó. Por otra parte el periodo establece el cierre y apertura del proceso. Para la creación del modelo lógico se partió del modelo entidad - relación antes expuesto, el cual se dividió en secciones de acuerdo a los roles de los usuarios y sus funcionalidades dentro de la aplicación. Dichos diagramas se realizaron con la herramienta de diseño Draw.IO, la cual permite realizar diferentes tipos de diagramas a través del navegador Web, sin necesidad de instalar la herramienta de forma nativa en el ordenador. Por convención del framework CakePhp, la base de datos debe seguir las siguientes convenciones que permiten la interacción de la base de datos con el mismo:  Los elementos de la base de datos deben ser nombrados bajo el idioma inglés.  Los nombres de las tablas deben estar en plural.  Los nombres de los campos o atributos deben estar en singular.  En caso de poseer descriptores con más de dos palabras se debe unir con un (_).  Todas la tablas deben tener un campo llamado ID como clave primaria.  Las claves foráneas deben seguir la siguiente estructura nombretabla_id. 48 3.2.1.1 Modelo Agenda de Citas En esta parte del proceso la secretaria registra al estudiante solicitante, tomando sus datos personales, le asigna la cita respectiva y el analista responsable que lo va atender. Cada registro en la agenda contempla después una solicitud que luego ve el usuario servicio para asignarle un reporte. En la figura 3.1 se puede observar la sección del modelo correspondiente al usuario secretaria, el cual posee cinco tablas. Las tablas estudiantes (students) y perfiles (profiles) las cuales representan los datos personales fijos y variables del estudiante, también está la tabla de citas (appointments) la cual alberga las fechas y horas de las evaluaciones y entrevistas. La tabla periodos registra el periodo académico correspondiente al proceso. Por ultimo esta la agenda que es la entidad que registra a la relación de los datos personales, la cita y el periodo en que se realizó la solicitud estudiantil. 49 Figura 3.1. Modelo de datos – Agenda de Citas. 3.2.1.2 Modelo Reporte Esta parte del modelo contempla la estructura que conforma un reporte, siendo cada una de las tablas un aspecto del mismo. En base a este modelo se realizan diversas tareas que involucran al usuario servicio asesor y control de estudios. Hay que mencionar que el registro previo de un estudiante en el modelo de Agenda de citas se considera para el registro de un reporte, donde la tabla llamada “REPORTS”, está relacionada con los registros de los datos del estudiante, su perfil y el periodo académico en que se realiza. En la figura 3.2 se presenta la sección del modelo correspondiente al usuario servicio, el cual es el encargado de elaborar los reportes respectivos. También tiene acceso los usuarios bajo los 50 roles de visor y asesor para la consulta de registros anteriores. Este modelo esta comprendido por 10 tablas las cuales comprende cada uno de los aspectos que involucra un reporte como lo son: datos personales (students y profiles), datos socioeconómicos (levels), datos académicos (schools), entre otros. Figura 3.2. Modelo de datos – Reporte. 51 3.2.1.3 Modelo del Administrador Esta parte del modelo comprende los objetos esenciales que debe manejar el administrador de la aplicación, el cual está encargado de la apertura o cierre de los periodos académicos, la habilitación del modo de mantenimiento, y la gestión de los usuarios. En la figura 3.3 se muestra el modelo de datos correspondiente a las tablas usuarios (users), periodos (periods), y mantenimiento (maintance). Los mencionados objetos pertenecen a las funcionalidades que aborda el usuario administrador dentro de la aplicación. Figura 3.3 Modelo de datos –Administrador 3.2.2 Arquitectura de la Aplicación En esta sección se aborda la arquitectura de la aplicación tanto a nivel de hardware como software, describiendo cada uno de los componentes. 52 3.2.2.1 Arquitectura de hardware La presente aplicación Web se rige bajo el esquema cliente – servidor, siguiendo un modelo en dos niveles, donde la aplicación Web como la base de datos están alojados en un mismo espacio virtual. Este espacio virtual cuenta con el sistema operativo Ubuntu Linux versión 16.1. El servidor Web Apache en su versión 2.4, es el encargado de atender las solicitudes realizadas por los clientes a través de internet, este servidor está alojado bajo este mismo espacio. La dirección pública por la cual los clientes acceden a él, es la dirección IP 190.164.79.26 o el siguiente url: sigerep.desarrollo.ciens.ucv.ve. El manejador de base de datos escogido es MySQL 5.7, y para acceder a él se utiliza el administrador Phpmyadmin. Para acceder a él se debe colocar la siguiente dirección url: 190.169.79.26 /phpmyadmin. En la figura 3.4 se describe la arquitectura de la aplicación Web SIGEREP, donde se puede apreciar que los clientes que realizan las peticiones a través del internet, donde el servidor Web Apache las atiende y da respuesta. Los datos generados por la interacción del usuario con la app se almacenan en la base de datos. 53 Figura 3.4. Arquitectura de hardware de la app SIGEREP 3.2.2.2 Arquitectura de Software: Para estructurar la aplicación bajo el patrón arquitectónico Modelo - Vista - Controlador, se utilizó el framework Cakephp en su versión 3.Este es un framework basado en el lenguaje de programación PHP (Procesador de Hipertexto), por lo cual los controladores y demás partes que lo conforman están basados en este lenguaje. La capa del modelo está comprendida por la facilidad que brinda la herramienta para establecer la conexión de la aplicación, con el manejador de base de datos MySQL. Además el framework brinda un conjunto de utilidades para el manejo de los datos llamado ORM (Object- Relational mapping). 54 En el caso de la capa de las vistas se instanció el framework Twitter Bootstrap en Cakephp, con el objeto de darle una apariencia agradable cuando el usuario interactúe con la aplicación; y además tengan la capacidad de adaptarse fácilmente a la resolución de las pantallas. 3.2.3 Interfaces de usuario: Para la creación de las interfaces de usuario, se utilizó una plantilla basada en el framework Twitter Bootstrap 3, bajo la temática de administrador. Donde se destaca la reutilización de los diversos elementos que conforman la plantilla en las diferentes interfaces. Las vistas de la aplicación están estructuradas en tres secciones. La primera sección contiene la barra de navegación, la cual está situada en la parte superior de la página. En dicho elemento se muestra el logo de aplicación que a su vez es un enlace a la página de inicio. La segunda sección de la vistas está comprendida por el cuerpo, el cual varía de acuerdo a la autentificación de usuario y la negación del mismo dentro de la aplicación. Por último la tercera sección está conformada por el pie de página el cual posee un enlace al sitio web oficial de la Facultad de Ciencias rodeado de los logos institucionales de la Universidad Central de Venezuela y la respectiva Facultad de Ciencias. A continuación se muestran los patrones de interacción con su respectivo prototipo de interfaz. La Tabla 3.15 describe el prototipo de interfaz que marca el resto de las vistas que conformaran la aplicación. La presente corresponde a la página principal que contiene el registro de usuario. 55 Tabla 3.15 Patrón de Interacción - Login Tarea 1.Login Prototipo Problema El usuario requiere registrase en la aplicación. Solución Se provee de un formulario de registro, donde ingresa el correo electrónico y la contraseña. Usabilidad Fácil de usar El registro para recuperar la contraseña presenta la misma estructura básica que la vista del login de usuario, donde solo cambia el cuerpo de la página. (Ver Tabla 3.16). 56 Tabla 3.16 Patrón de Interacción - recuperar Contraseña. Tarea 2.Recuperar Contraseña Prototipo Problema El usuario no se acuerda de la contraseña para ingresar a la aplicación. Solución Se le provee de un formulario para que el usuario ingrese el correo electrónico registrado en la aplicación. Usabilidad Fácil de usar El prototipo del listado de usuarios registrados en la aplicación se muestra en la Tabla 3.17, como también se despliega los botones para agregar, editar, ver y eliminar un usuario registrado. Tabla 3.17 Patrón de Interacción -Listar usuarios Tarea 3.Listar Usuarios Prototipo Problema Se requiere listar las cuentas de usuarios Solución Se provee de una tabla con la información de las cuentas de usuario 57 Usabilidad Eficiente De igual forma el prototipo de interfaz para el despliegue de los periodos académicos registrados se presentan en un listado. (Ver Tabla 3.18) Tabla 3.18 Patrón de Interacción - Listar Periodos Tarea 4. Listar Periodos Prototipo Problema Listar los periodos académicos Solución Listar los periodos en una tabla Usabilidad Fácil de entender, eficiente. El prototipo de interfaz mostrado en la Tabla 3.19 aborda la sección para activar o desactivar el modo de mantenimiento de la aplicación en el caso que se requiera. 58 Tabla 3.19 Patrón de Interacción - Mantenimiento Tarea 5.Mantenimiento Prototipo Problema Visualizar el estado de la aplicación Solución Un recuadro con el indicador y el botón para cambiar el estado. Usabilidad Fácil de usar. La Tabla 3.20 contempla el inicio del proceso de registro de solicitud de un estudiante, por parte del usuario con el rol de secretaria. Donde solo se tiene que introducir el número de la cedula en el campo de texto, para luego hacer clic en el botón registrar. Tabla 3.20 Patrón de Interacción - Registrar Estudiante. Tarea 6. Registrar Estudiante Prototipo 59 Problema Registrar a un estudiante, cuando quiere realizar una solicitud. Solución Se facilita un conjunto de formularios a partir del ingreso de la cédula de identidad. Usabilidad Eficiente, Evita errores, fácil de usar. Las Tablas 3.21 y 3.22, son la muestra de la forma en cómo se presentara los registros de las solicitudes en la aplicación a los usuarios asesor y servicio. Tabla 3.21 Patrón de Interacción - Listar estudiantes solicitantes. Tarea 7.Listar estudiantes solicitantes Prototipo Problema Visualizar el listado de estudiantes registrados Solución Despliegue de los registros en una tabla. Usabilidad fácil de usar, eficiente 60 Tabla 3.22 Patrón de Interacción - Listar Solicitudes Tarea 8. Listar solicitudes Prototipo Problema Listar las solicitudes asignadas a un analista Solución Se despliegan los registros de las solicitudes Usabilidad Fácil de usar, Eficiente De igual forma la Tabla 3.23 es el prototipo de interfaz que contempla los registros de los reportes. Esta vista se utiliza tanto para el usuario asesor, como el usuario servicio. Hay que mencionar que los registros de los reportes se separan en secciones de acuerdo a su tipo (reincorporación, vía de gracia, cambio de escuela). Tabla 3.23 Patrón de Interacción - Listar Reportes Tarea 9.Listar reportes Prototipo 61 Problema Listar los reportes elaborados por el analista según su tipo. Solución Listar en cada pestaña los reportes según su tipo Usabilidad Fácil de usar, Eficiente La Tabla 3.24 muestra el modelo de la vista para la descarga de los reportes de gestión, donde solo el usuario servicio debe seleccionar un periodo académico en el casilla, para luego darle clic al botón descargar. Tabla 3.24 Patrón de Interacción - Listar reporte de Gestión Tarea 10.Listar Reporte de gestión Prototipo Problema Generar el reporte de gestión de un periodo académico en específico. Solución El usuario ingresa en un campo de texto el período académico correspondiente. Los periodos están registrados en la aplicación. Usabilidad Fácil de usar, eficiente, evita errores. La vista de consultar reportes está conformada por un campo de texto donde el usuario servicio, asesor o visor debe ingresar el número de cedula del estudiante, de forma que la aplicación despliegue los registros de los informes correspondientes. (Ver Tabla 3.25) 62 Tabla 3.25 Patrón de Interacción - Consultar reportes Tarea 11. Consultar Reportes Prototipo Problema El usuario requiere consultar los reportes anteriores de un estudiante Solución Se provee de un campo de texto para que el usuario ingrese el número de cedula del estudiante. Usabilidad Fácil de usar, Eficiente. La Tabla 3.26 es una muestra de la vista que muestra el detalle de un reporte en particular, el cual está estructurado en secciones o pestañas que abordan cada uno de los conjuntos de datos que conforman un reporte. Tabla 3.26 Patrón de Interacción - Detalle Tarea 12. Detalle Prototipo Problema El usuario despliega el detalle de un registro. 63 Solución Se despliega un conjunto de tablas verticales con la información Usabilidad Fácil de usar. 3.3 Fase de Codificación Finalizada la fase de diseño, el siguiente paso es la codificación e implementación de la aplicación Web, la cual contempla los siguientes aspectos: La implementación del modelo de datos y la Programación de las historias de usuarios; los cuales se describirán a continuación. 3.3.1 Implementación del Modelo de Datos En esta primera parte se busca generar los objetos de base de datos necesarios para la aplicación, como lo son las tablas y las relaciones entre ellas. Para ello se utilizó el lenguaje SQL (Structured Query Language), el cual facilitó traducir el modelo de datos en un script que pudiera interpretar el manejador de base de datos MySQL. Para facilitar el manejo de la base de datos se utilizó la herramienta o gestor de base de datos llamado PhpMyAdmin, el cual brinda una interfaz usable, que facilita el manejo de los objetos de base de datos sin necesidad de utilizar la consola como adminsitardor. A partir de la carga del modelo de datos, se continuó con el siguiente paso que es la programación de las historias de usuario, el cual será hará mención en la siguiente sección. 3.3.2 Programación de las historias de usuario La programación de la aplicación se comenzó realizando dos cosas fundamentales. La primera fue la instanciación de la plantilla de la interfaz dentro de la estructura del framework, de forma que quedara establecida la apariencia de la aplicación, y la segunda fue la configuración de la conexión de la aplicación con la base de datos. 64 A partir de los dos primeros pasos se prosiguió a instalar el componente de autenticación de usuarios, de forma que se puede estructurar la aplicación en módulos. Dichos módulos van acorde a los roles de los usuarios que interviene en el proceso de las solicitudes estudiantiles, los cuales son: la secretaria del servicio, el analista del servicio, el asesor académico, el administrador de la aplicación y por último el de visor. Luego se continuó la programación de los demás requerimientos de forma progresiva, empezando por los referentes al manejo al módulo del administrador, para luego seguir avanzando con los demás módulos. Por último, durante la programación de los demás historias de usuario fue necesaria la inclusión de nuevas libreas que permitieron la generación y procesamiento de archivos en formato PDF y XLS. Para la codificación de la aplicación, se utilizó el editor de código Sublime Text en su versión 3. En el Anexo B se muestran las figuras B.1 y B.2 las cuales corresponden a las funcionalidades para agregar un nuevo estudiante, y la asignación del analista a una solicitud. Dichas funciones están implementadas en la clase controladora bajo el nombre de Agenda (Diary). 3.4 Fase de Pruebas En esta última fase del proceso de desarrollo en implementación, se hizo énfasis en la realización de las pruebas de Compatibilidad, Funcionalidad y Usabilidad. Para la realización de las mismas se contó con la participación de los diferentes usuarios potenciales, implementando la aplicación Web SIGEREP a partir del periodo 01-2017. 65 3.4.1 Pruebas de Funcionalidad La aplicación de las pruebas de funcionalidad se realizó en varias etapas, empezando por la presentación de una versión de prueba de la aplicación a varios de los usuarios participantes en el proceso de gestión de los informes. Entre los presentes estaban la Profa. Yosly Hernández, la Socióloga Anabel González y la Psicóloga Mariangela Mazzaglia. Esta reunión se realizó con el objeto de generar un intercambio de opiniones sobre la aplicación dada una primera impresión. De la presente reunión surgieron una serie de modificaciones, de las cuales se puede destacar la unificación de los reportes de reincorporación bajo el Art 6, y los de casos especiales. Esto se puede observar en la Tabla 3.27, donde el reporte de reincorporación contempla todos los aspectos que involucran los dos tipos de solicitudes. Tabla 3.27 Prueba Funcional - Registro Reporte No. Prueba 2 Función Registro Reporte Problema Unificar los reportes de reincorporación y casos especiales, donde el analista del SO-FC-UCV de acuerdo a su criterio, designe si el caso contempla pruebas psicotécnicas, criterios de reincorporación, o ambos casos. 66 Solución En una segunda etapa del proceso de prueba, implico llevar a cabo de forma simultánea el proceso manual de gestión de las solicitudes, en conjunto con la utilización de la aplicación. De esta forma los usuarios del SO-FC-UCV estuvieron en constante interacción con la aplicación. El usuario bajo el rol de secretaria fue la primera en interactuar con la aplicación. La misma está encargada de registrar a los estudiantes solicitantes tanto en la aplicación Web como en la agenda física; de acuerdo a la experiencia de este usuario surgieron una serie de cambios. Dentro de los cambios realizados, se puede destacar la disposición de la funcionalidad para poder designar un analista a una solicitud, por parte del usuario secretaria. Esto se puede observar en la Tabla 3.28, la cual presenta la vista correspondiente a la asignación del analista. Tabla 3.28. Prueba funcional - Registrar Analista No. Prueba 3 Función Registrar Analista Problema La aplicación no permite al usuario secretaria asignar el analista responsable del caso del estudiante solicitante, durante el proceso de registro. 67 Solución A partir de la finalización del plazo de recepción de solicitudes, se procedió con la elaboración de los informes utilizando la aplicación Web, donde los participantes eran los analistas del SO-FC-UCV. Previo al inicio del proceso de elaboración de los informes, se realizó una reunión de capacitación sobre la aplicación, indicando el comportamiento de cada una de las funcionalidades y los procesos involucrados. A partir de esta reunión los usuarios bajo el rol de analistas, comenzaron a utilizar la aplicación para elaborar los informes; de acuerdo a su experiencia surgieron los siguientes cambios: En la Tabla 3.29 se describe la asignación automática del motivo de la solicitud indicada en el reporte, la cual genera la aplicación Web en el momento de creación del reporte. Tabla 3.29 Prueba Funcional - Registro Reporte No. Prueba 6 Función Registro Reporte Problema La aplicación debe generar de forma automática la fecha de elaboración del reporte como el motivo del mismo. 68 Solución Los campos Estrato y Clase correspondientes al formulario de los datos socioeconómicos deben contemplar sus escalas respectivas, y estas deben disponerse al usuario a través de una selección de opciones. (Ver Tabla 3.30). Tabla 3.30 Prueba Funcional - Registro de Datos Socioeconómicos. No. Prueba 7 Función Registro de datos socioeconómicos. Problema El campo estrato y clase deberían tener la opción de colocar directamente la categoría. Solución La Tabla 3.31 describe la modificación en el registro de los resultados, mostrando los campos de perfil con sus opciones, y los nuevos nombres de los campos. 69 Tabla 3.31 Prueba Funcional - Registro de Resultados No. Prueba 9 Función Registro de Resultados Problema Eliminar el nombre de las pruebas. Por Raven se coloca Inteligencia general (va el puntaje) y en el perfil se categoriza por (superior al promedio, promedio e inferior al promedio). En el caso de las aptitudes se debería colocar: Por TDA Verbal se coloca Razonamiento verbal. Por TDA numérico se coloca Habilidad numérica Por TDA abstracto se coloca Razonamiento abstracto Colocar las categorías respectivas. Solución Los usuarios asesores expresaron la necesidad de tener la disponibilidad de ver de forma previa el reporte para la corrección de errores. (Ver Tabla 3.32). 70 Tabla 3.32 Prueba Funcional - Visualizar No. Prueba 10 Función Visualizar Problema El usuario asesor no puede visualizar el informe de forma previa. Solución De acuerdo a las pruebas de usabilidad realizadas a la aplicación Web SIGEREP se puede concluir lo siguiente:  En el plano funcional la aplicación Web, cumplió con todos los requerimientos solicitados.  El monitoreo constante del almacenamiento de los datos nos indicó que se está cumpliendo a cabalidad con la integridad de los datos.  Sobre el desempeño del sistema, a pesar de que no se realizó una medición formal de los tiempos de respuestas, los usuarios expresaron estar satisfechos con el rendimiento de la aplicación. 71 3.4.2 Pruebas de Compatibilidad La aplicación Web SIGEREP se probó con dos navegadores Web diferentes. Para ello se utilizó el navegador Web Mozilla Firefox en su versión 5.6 y el navegador Web Google Chrome en su versión 6.0. Como se puede observar en la Tabla 3.33 la aplicación tiene un mejor desempeño bajo el navegador Google Chrome, debido a que este contempla ciertos componentes y librerías utilizadas en los formularios para los campos de las fechas, caso contrario cuando se utiliza el navegador Mozilla Firefox. Tabla 3.33 Comparación de vista de navegadores. Google Chrome Mozilla Firefox 3.4.3 Pruebas de Usabilidad: La realización de estas pruebas contempló la aplicación de una encuesta donde se evaluó la usabilidad de la aplicación. Dicha instrumento fue diseñado por Martínez, A. F. (2009), la cual está compuesta por siete (7) preguntas orientadas a la características estéticas y experiencia de navegación del usuario con la aplicación: La escala de Likert utilizada es: De acuerdo, En Desacuerdo, e Indiferente. Esto se puede observar en el Anexo C Figura C.1. 72 De acuerdo al porcentaje obtenido en la pregunta Nº 1, los encuestados están de acuerdo en que los títulos y menús de la aplicación Web SIGEREP son legibles. (Ver Figura 3.5). Figura 3.5. Encuesta pregunta Nº 1. Se puede concluir que los colores utilizados en la aplicación Web SIGEREP no presentan ningún problema de percepción para los usuarios. Esto se puede observar en la Figura 3.6. Figura 3.6. Encuesta pregunta Nº 2. 73 En la pregunta Nº 3, se puede evidenciar que un porcentaje de la audiencia encuesta se mostró indiferente, debido a que no comprendieron el significado de la palabra “descriptores”. (Ver Figura 3.7) Figura 3.7. Encuesta pregunta Nº 3. A partir del resultado obtenido en la pregunta Nº 4 mostrada en la Figura 3.8 se puede deducir que la aplicación Web SIGEREP está estructurada de forma que el usuario se puede desenvolver de forma natural. 74 Figura 3.8. Encuesta pregunta Nº 4. En la Figura 3.9 se observa que los encuestados expresaron por unanimidad que la aplicación Web SIGEREP presenta un diseño usable. Figura 3.9. Encuesta pregunta Nº 5. 75 De acuerdo al porcentaje de usuarios encuestados que se mostraron indiferentes en la pregunta Nº 5, se puede decir que la aplicación Web SIGEREP no es del todo intuitiva, por lo que se requiere de adiestramiento o de la implementación de ayudas visuales que mejoren su usabilidad. Figura 3.10. Encuesta pregunta Nº 6. La figura 3.11 muestra el resultado de la pregunta Nº 7, donde los usuarios encuestados están de acuerdo con la facilidad de uso de la aplicación. 76 Figura 3.11. Encuesta pregunta Nº 7. La encuesta se les aplicó a todos los usuarios potenciales involucrados en el proceso de gestión de informes, con diferentes roles como: Asesor Académico, Analista y Secretaria del SO-FC-UCV. Donde solo respondieron cuatro (4) de un total de 11 actores involucrados. Los resultados obtenidos pueden afirmar que los usuarios presentan un gran nivel de satisfacción. Destacando los siguientes aspectos:  Los colores y elementos usados en el diseño de las interfaces brindan un aspecto agradable al usuario, presentando la información de manera clara y directa.  El usuario requiere de una instrucción previa, como también de la inclusión de ayudas visuales que le permitan desenvolverse con la aplicación, debido a que esta no es tan intuitiva.  La aplicación no presenta mayores inconvenientes de funcionamiento para el usuario. 77 El presente capitulo describió cada una de las fases del proceso de desarrollo e implementación de la aplicación Web SIGEREP, rigiéndose por la adaptación de la metodología de trabajo Programación Extrema (XP). Al finalizar el ciclo de trabajo se puede afirmar que se cumplió con éxito los objetivos planteados para este proyecto. Destacando la satisfacción expresada por los usuarios al poder contar con una herramienta que les facilita la gestión de los informes. 78 Capítulo 4 Resultados: SIGEREP En este cuarto capítulo se presenta el producto final del proceso de desarrollo de software de la aplicación Web llamada SIGEREP, donde se describe cada de sus partes y también se hace mención a sus funcionalidades. La aplicación Web SIGEREP está compuesta por cinco módulos, uno por cada tipo de usuario, donde el usuario al acceder a la aplicación solo podrá realizar las opciones que le corresponden de acuerdo a su rol (administrador, secretaria, servicio, asesor, visor). Estos módulos se describen a continuación. Para empezar a explicar cómo está compuesta la aplicación, hay que decir que todos los usuarios sin importar el rol tienen que autenticarse. Para lo cual deben acceder a la página principal que contempla el registro de usuario (Ver Figura 4.1). En caso de que el usuario no recuerde la contraseña respectiva, dentro de la vista registro de usuario, hay una opción para recuperar la contraseña. Esta opción despliega un formulario donde debe ingresar el correo electrónico registrado en el sistema, con el objeto de hacerle llegar una notificación vía correo electrónico con la contraseña respectiva. (Ver Figura 4.2) En la Figuras 4.1 y 4.2 se muestran las vistas correspondientes al registro de usuario y la vista para recuperar contraseña. 79 Figura 4.1. Vista del login. Figura 4.2. Vista recuperar contraseña. 4.1 Módulo del usuario Administrador El proceso de gestión de los informes comienza cuando el usuario administrador (Admin), apertura un nuevo periodo académico en la aplicación. En el caso de que el último periodo registrado este con el estatus “CERRADO”, el usuario administrador a podrá realizar dicha acción. En caso contrario el usuario administrador debe cerrar el último periodo registrado, para 80 luego crear uno nuevo. Mientras tanto los usuarios con los roles de Asesor, Servicio y Visor; solo podrán realizar consultas sobre los reportes anteriores. En el caso del usuario Secretaria no podrá realizar ninguna acción, todo esto mientras este el último periodo registrado bajo el estatus de “CERRADO”. (Ver Figura 4.3). Figura 4.3. Diagrama de flujo - usuario administrador. 81 En la Figura 4.4 se observa la vista del módulo correspondiente a los usuarios bajo el rol de administrador. El administrador está encargado de gestionar los siguientes aspectos: las cuentas de usuario, los periodos académicos, y el modo de mantenimiento de la aplicación. Figura 4.4. Vista página principal- usuario administrador. 4.1.1 Opción del menú Usuarios Al situarse en esta opción del menú, la aplicación despliega un listado con las cuentas de usuario registradas, donde se puede destacar los enlaces situados al final de cada registro que permiten editar, eliminar y visualizar la cuenta respectiva. En la parte inferior de la pantalla se muestra un botón que indica la opción para agregar un nuevo usuario. (Ver Figura 4.5) 82 Figura 4.5. Vista sección de cuentas de usuarios. En el caso de que se requiera agregar un nuevo usuario, solo basta con accionar sobre el botón “Agregar Usuario”, el cual desplegará la vista con el formulario correspondiente para crear una nueva cuenta, esto se observa en la Figura 4.6. Hay que mencionar que el campo “Escuela a la que pertenece” solo cumple para los usuarios que sean asesores académicos. También en los casos que sea una cuenta de asesor académico el sistema desplegara un campo para indicar el grado de instrucción del mismo. 83 Figura 4.6. Vista agregar usuario. 4.1.2 Opción del menú Periodos Esta sección aborda el manejo de los periodos académicos, facilitando el cierre y apertura de los mismos. Cabe mencionar que solo se podrá agregar un nuevo periodo si el último periodo registrado está cerrado. En la Figura 4.7 se puede visualizar la vista respectiva con los enlaces para cerrar un periodo académico y para crear uno nuevo. 84 Figura 4.7. Vista sección periodos académicos. 4.1.3 Opción del menú Mantenimiento La funcionalidad de mantenimiento, permite deshabilitar la aplicación para los usuarios a excepción del administrador. (Ver Figura 4.8) Figura 4.8. Vista sección de mantenimiento. 85 4.2 Módulo de los usuarios Secretaria A partir de la apertura de un nuevo periodo académico en la aplicación, el siguiente paso en el proceso de gestión de informes es el registro de los estudiantes solicitantes por parte de la secretaría del SO-FC-UCV, donde toma los datos personales del estudiante y le asigna la cita correspondiente, junto con el analista encargado de atenderle. Posteriormente el sistema manda una notificación al correo electrónico del estudiante con los datos de la cita como recordatorio. (Ver Figura 4.9). Figura 4.9. Diagrama de flujo - usuario secretaria. 86 La Figura 4.10 se muestra el módulo que cumple el objetivo de facilitar al usuario secretaria, el registro de la información personal de los estudiantes solicitantes, la designación del analista encargado de atender el caso y la asignación de las fechas para las evaluaciones y entrevistas. Figura 4.10. Vista página principal – usuario secretaria. 4.2.1 Opción del menú Registrar Esta opción permite registrar al estudiante solicitante. Donde se toman sus datos personales, se registra el analista encargado de atender su caso, y se le asigna las fechas respectivas a la cita para las evaluaciones psicotécnicas y la entrevista vocacional. De esta forma se hace un levantamiento de información previo al proceso de elaboración de los informes que realiza el usuario del Servicio de Orientación bajo el rol de servicio. 87 El proceso comienza con el ingreso de la cédula de identidad del estudiante, para luego desplegar de forma progresiva, los formularios correspondientes a los datos personales, el analista asignado y las fechas de las citas. Al culminar el proceso el sistema envía un correo electrónico de forma inmediata al estudiante indicando la información del registro respectivo. (Ver Figura 4.11) Figura 4.11. Vista registro de estudiante. Las Figuras 4.12 y 4.13 muestran los formularios de registro de los datos personales fijos y variables durante el proceso de registro de un estudiante en la agenda de la aplicación Web SIGEREP. 88 Figura 4.12. Vista registro de datos personales fijos. Figura 4.13. Vista registro de datos personales móviles. La Figura 4.14 se muestra la vista correspondiente al registro del analista responsable, el cual designa el usuario secretaria. Figura 4.14. Vista asignación de analista. 89 La Figura 4.15 comprende la vista respectiva para la designación de la citas de evaluación y entrevista. Figura 4.15. Vista registro de cita. La vista del detalle, indica toda la información registrada por el usuario secretaria ante la solicitud realizada por el estudiante, mostrando los datos fijos, variables, el analista responsable, y por ultimo como la cita respectiva. (Ver Figura 4.16). 90 Figura 4.16. Vista detalle registro agenda. 4.2.2 Opción del menú Solicitudes Esta opción permite visualizar dos listados por separado en secciones o pestañas. El primero es el listado de los estudiantes registrados en la agenda, que a su vez permite desplegar la vista del detalle del registro con su información. (Ver Figura 4.17). 91 Figura 4.17. Vista listado de solicitudes. El detalle del registro se muestra en la figura 4.16. La segunda sección o pestaña es la de asignaciones, donde se visualiza el listado de analistas con los estudiantes que le corresponde atender. (Ver Figura 4.18). 92 Figura 4.18. Vista listado de asignaciones. 4.3 Módulo del usuario Servicio Al terminar el plazo de recepción de las solicitudes estudiantiles los usuarios bajo el rol de servicio, son los siguientes en participar en el proceso. Donde estos cargan los datos referentes a los informes de los casos estudiantiles que la secretaría previamente le ha asignado. En la Figura 4.19 se muestra el diagrama de flujo referente a este módulo. Entre las funcionalidades que se pueden mencionar están: asignación de reportes, carga de los datos, generación de informes en formato PDF, generación del reporte de gestión en formato XLSX, consulta de informes anteriores, entre otras. 93 Figura 4.19. Diagrama de flujo - usuario secretaria Una vez culminado el proceso de elaboración de informes, el siguiente paso es la ejecución del cierre del periodo, donde el usuario administrador (admin) debe realizar el respectivo corte del periodo académico. A partir de esta acción se envía una notificación por correo electrónico a los usuarios bajo el rol de asesores, indicando el cierre del periodo de atención de las solicitudes, y la disponibilidad de los reportes correspondientes a su licenciatura dentro de la aplicación, para su posterior consulta y evaluación. En la figura 4.20 se muestra la vista de la página principal del módulo de los usuarios bajo el rol de servicio. 94 Figura 4.20. Vista página principal – usuario servicio. 4.3.1 Opción del menú Solicitudes de Reportes Esta sección del módulo comprende el listado de solicitudes de reportes, las cuales se generan a partir del registro de los estudiantes por parte del usuario con el rol secretaria en su módulo correspondiente. De esta forma se despliega un listado de solicitudes pendientes, donde el usuario del servicio puede asignarle un reporte a aquellas solicitudes que le corresponde atender, esto se puede apreciar en la Figura 4.21. 95 Figura 4.21. Vista listado de solicitudes. La Figura 4.22 muestra el caso en que el usuario servicio quiera crear un reporte, sólo debe ejecutar la acción “Crear”, la cual desplegará el formulario de creación de un nuevo reporte. Después de haber creado el reporte, el sistema despliega la vista del detalle del mismo, y a su vez el sistema cambia el estado de la solicitud de “EN-ESPERA” a “CREADO” en el listado de solicitudes. 96 Figura 4.22. Vista registro de un nuevo reporte. Hay que mencionar que la distribución de las solicitudes entre los usuarios del servicio, la realiza el usuario secretaria en su módulo respectivo, donde levanta la información personal del estudiante como la designación del analista que le va atender. 4.3.2 Opción del menú Reportes Procesados En la Figura 4.23 se muestra el despliegue del listado de los reportes correspondientes a la gestión del usuario servicio. Donde los reportes se muestran de forma separada en subsecciones o pestañas de acuerdo a al tipo (Reincorporación, Vía de Gracia, Cambio de Escuela). 97 Figura 4.23. Vista listado de reportes. En el caso de que se requiera ver la información detallada del reporte, el usuario solo tiene que accionar el botón “VER”. Al realizar dicha acción se desplegará la vista del detalle correspondiente al reporte. (Ver Figura 4.24) 98 Figura 4.24. Vista detalle del reporte. Por otra parte, los reportes pueden tener dos tipos de estados los cuales son: edición o final. En el primer caso, los reportes que están en el estado de edición, al desplegar la vista del detalle, se puede observar que el sistema permite tanto agregar o editar la información correspondiente. Esto se visualiza en la Figura 4.25 y 4.26 99 Figura 4.25. Vista detalle del reporte con opción para agregar datos Figura 4.26.Vista detalle del reporte con opción para editar datos. El segundo caso requiere que el usuario servicio cambie el estado del reporte de edición a final. Para ello debe accionar el botón “FINALIZAR”, después de haber cargado toda la información correspondiente, ya que en el caso de no haber completado el informe, el sistema no puede realizar el cambio. En el caso de ser positiva la carga de la información del reporte, el sistema cambia el estatus del reporte y habilita opción para generar el informe en formato PDF. (Ver Figura 4.27) Figura 4.27. Vista reporte estado final. 100 4.3.3 Opción del menú Reportes de Gestión Esta sección tiene como propósito generar el reporte de gestión referente al proceso de atención de las solicitudes estudiantiles, por parte del Servicio de Orientación de acuerdo a un periodo académico en específico. (Ver Figura 4.28). Para ello el usuario servicio debe seleccionar un periodo académico listado por el sistema, el cual cumpla con las condiciones de no ser el periodo vigente y que su estatus sea “CERRADO”, ya que de lo contrario el sistema no permitirá generar dicho reporte. En caso de ser afirmativo el sistema automáticamente después de haber ejecutado la acción, genera un archivo en formato XLSX el cual el navegador empieza a descargar. Figura 4.28. Vista reportes de gestión. 4.3.4 Opción del menú Consulta de Reportes La siguiente sección permite al usuario consultar los reportes elaborados anteriormente. La búsqueda de los reportes en el sistema se realiza indicando el número de cédula del estudiante correspondiente. (Ver Figura 4.29). 101 Figura 4.29. Vista consulta de reportes 4.4 Módulos de los usuarios Asesor y Visor El presente módulo tiene como objetivo facilitar la consulta de los reportes generados por el SO-FC-UCV. En la Figura 4.30 se muestra el diagrama de flujo de las funcionalidades respectivas al usuario bajo el rol de asesor. Cabe mencionar que el usuario visor solo puede realizar la consulta de reportes anteriores por lo que solo dispone de la mencionada funcionalidad. 102 Figura 4.30. Diagrama de flujo - usuario asesor 103 4.4.1 Opción del menú Reportes del Proceso En esta sección se muestra el listado de los reportes elaborados por el Servicio de Orientación, correspondientes al último proceso de atención de solicitudes estudiantiles. Donde el usuario asesor puede visualizar los reportes respectivos a los estudiantes pertenecientes a su licenciatura. También los reportes se muestran en succiones de acuerdo a su tipo para facilitar el manejo y la organización. (Ver Figura 4.31) Figura 4.31. Vista listado de reportes para el asesor académico. 4.4.2 Opción del menú Consultar Reportes Como se muestra en la Figuras 4.32 y 4.33, la respectiva sección permite a los usuarios asesores y visor, consultar los reportes pasados, solo con indicar el número de cédula. En el caso de que sea positiva la búsqueda se desplegará un listado con los reportes referentes al estudiante. También permite desplegar el detalle de la información y la generación del reporte en formato PDF. 104 Figura 4.32. Vista consulta de reportes asesor. Figura 4.33. Vista despliegue resultado de la consulta. 105 Conclusiones Se logró cumplir satisfactoriamente con el objetivo de desarrollar una aplicación Web para levar a cabo la gestión de los informes técnicos de los casos estudiantiles del Servicio de Orientación de la Facultad de Ciencias de la Universidad Central de Venezuela, denominada SIGEREP. Debido a la puesta en funcionamiento de la aplicación Web SIGEREP a partir del periodo 01- 2017, permitió dejar en funcionamiento dicha herramienta, como parte del proceso habitual de gestión de los informes; además que su implementación facilitó solventar las carencias presentadas tales como: la ausencia del registro de la hora de la cita, la facilidad para designar el analista responsable de la elaboración del informe, la funcionalidad para generar el borrador del informe, la selección de escalas y valores de atributos por defecto en los distintos registros, la mejora de la apariencia de las interfaces, entre otros. De esta manera se ajustó plenamente la aplicación a las necesidades y requerimientos expresados por los usuarios funcionales. También permitió comprobar su efectividad y usabilidad, donde se evidencio la disminución del tiempo de elaboración de los informes, la reducción del material de oficina empleado, la elaboración del informe en tiempo real durante la entrevista vocacional del estudiante. La utilización de datos reales durante la fase de prueba de la aplicación Web SIGEREP, permitió corroborar la integridad de los datos almacenados. La adaptación de la metodología Programación Extrema (XP), tomo un papel fundamental para la organización del trabajo durante el desarrollo del proyecto, ya que involucra al cliente en todas las fases del proceso de desarrollo e implementación, con lo cual se garantizó la entera satisfacción de sus necesidades. 106 El modelado de los requerimientos a través del uso de las Historias de Usuarios, permitió plasmar perfectamente las necesidades de los usuarios tomando en cuenta su opinión. Para la escogencia de las tecnologías de código abierto utilizadas, fue fundamental el soporte de una robusta documentación, y el respaldo de una gran comunidad que hagan uso de ellas., por lo cual sirven de apoyo para el proceso de codificación y desarrollo. El uso del Framework CakePhp, agilizó y simplificó el proceso de creación e implementación de la aplicación Web SIGEREP, gracias a las diversas funcionalidades que brinda para su codificación y configuración. También por su versatilidad para integrarse con diversas librerías elaboradas bajo el lenguaje PHP, y conectividad con diversos motores de base de datos. EL SO-FC-UCV ha adquirido una serie de bondades para la gestión de los informes. Se puede empezar mencionando la reducción del consumo de material de oficina empleado para la elaboración de los informes, a través del uso de las diferentes interfaces de usuario que emulan los formatos físicos, y la facilidad para generar los informes en formato PDF; aunado a la reducción del tiempo empleado por parte de los analistas para realizar un informe. Otra bondad que se puede mencionar es la centralización de todos los usuarios funcionales del proceso de gestión de informes bajo una misma aplicación, lo cual ha permitido mejorar la transmisión de la información entre los diferentes involucrados en la gestión del informe, debido a que la consulta de la información se realiza directamente en la herramienta. Por ultimo hay que destacar la importancia de la generación de los reportes de gestión en formato XLSX, una vez culminado la elaboración de los informes. Lo cual facilita la realización de los estudios estadísticos sobre los casos atendidos por dicho departamento. 107 Recomendaciones La implementación de la aplicación Web SIGEREP como solución de la problemática que presenta el SO-FC-UCV, para elaborar los informes referentes a las solicitudes estudiantiles que atiende, fue propuesta como Trabajo Especial de Grado. El presente trabajo está en constante evaluación para su mejora, y de acuerdo a lo observado se realizan las siguientes recomendaciones: ● Dar una inducción a los usuarios involucrados, para que hagan un uso racional del sistema. ● La funcionalidad para cargar los datos académicos del estudiante a partir del uso del Kardex en formato PDF, solo se debe utilizar en el caso de los estudiantes pertenecientes a la Facultad de Ciencias de la Universidad Central de Venezuela. ● La integración de un sistema de citas permitiría la mejora de la gestión del usuario secretaria. ● La codificación de una funcionalidad que permita la selección de un grupo de solicitudes, para él envió de notificaciones grupales por correo electrónico. 108 Referencias Apache Fundation. (2001). Apache. Recuperado de https://www.apache.org Blasco, L., Murcia, J. A., y Mifsud, E. (2013). Aplicaciones web. Madrid, España: McGraw-Hill. Berni, P. (2010). Laboratorio de PHP y MySQL. Barcelona, España: UOC. Cake Software Foundation (2017).CakePhp. Recuperado de https://cakephp.org Cobo, Á., Gómez, P., Pérez, D., y Rocha, R. (2005). PHP y MySQL Tecnologías para el desarrollo de Aplicaciones Web. Madrid, España: Díaz de Santos. Drescher, G. L., Díaz, D., Vega, G., Chacón, D., y Petit, L. d. (1967). Servicio de Orientación Facultad de Ciencias. Recuperado de http://www.ciens.ucv.ve/ciens/sorientacion/historia/ Ferguson, P., y Flanagan, D. (2002). JavaScript: The Definitive Guide. Estados Unidos de América.O REILLY. Garavito, T. L. (2013). Prototipo de una aplicación web para la gestión en el proceso de trabajos de grado de la Facultad de Ingeniería de la Universidad EAN. Bogotá. Guevara, E. (2016). Desarrollo de una solución de inteligencia de Negocio que apoye la toma de decisiones en el Servicio de Orientación y Control de Estudios de la Facultad de Ciencias. Caracas, Venezuela. Gutiérrez., J. J. (2014). ¿Qué es un framework web? España. Kiosena.net. (2014). Entorno Cliente - Servidor Lujan, S. M. (2001). Programación de Aplicaciones Web. Alicante, España: ECU. Mateu, C. (2004). Software Libre. Barcelona, España: UOC. Martínez, A. F. (2009). WUEP: Un Proceso de Evaluación de Usabilidad Web Integrado en el Desarrollo de Software Dirigido por Modelos. Oracle Corporation. (2017). MySQL. Recuperado de https://www.mysql.com/ 109 Pantoja, J., Lozano, A., y Portillo, M. (2013). Automatización del control de asistencia del personal docente del departamento de computación de la facultad experimental de ciencias de la universidad del Zulia. Maracaibo, Venezuela. Pérez, O. A. (2011). Cuatro enfoques Metodológicos para el Desarrollo de Software. Bogotá, Colombia. Corporación Universitaria Minuto de Dios. Puig, J. C. (2012). CSS y JavaScript Avanzado. Barcelona, España: UOC. Resig, J. (2006). JQuery. Recuperado de http://jquery.com/ Rodríguez, H. A. (2006). Procesamiento de datos con Oracle. Recuperado de: http://www.mailxmail.com/curso-procesamiento-datos-oracle/sistema-manejador-base-datos Romero, Y. F., y González, Y. D. (2011). Patrón Modelo Vista Controlador. Telemática. Silberschatz, A. (2002). Fundamentos de Bases de Datos. Madrid,España: McGraw-Hil. Sommerville, I. (2005). Ingeniería del Software. Madrid, España: Pearson. Stallman, R. M. (2004). Software libre para una sociedad libre. Madrid, España: Traficantes de Sueños. Valzacchi, J. R. (2006). Internet y Educación. Washington, Estados Unidos de América: Interamer. Universidad Central de Venezuela.(1982). Normas de Rendimiento Mínimo. Caracas, Venezuela. Universidad Central de Venezuela.(1992). Resolución No 158 Cambio de Escuela y Facultad. Caracas, Venezuela. Wells, D. (2013). Extreme Programming. Recuperado de http://www.extremeprogramming.org/ 110 Anexos 111 Anexo A La Figura A.1 describe la sección del modelo Entidad Relación (ER), el cual contempla cinco (5) tablas: estudiante, perfil, cita y periodo. La relación que la une es una relación muchos a mucho la cual se nombra como Agenda. Figura A.1. Diagrama Entidad Relación – Agenda El segundo modelo Entidad - Relación (ER), comprende el registro del reporte, donde cada una de las tablas aborda un aspecto del mismo. (Ver Figura A.2) 112 Figura A.2. Diagrama Entidad Relación – Reporte 113 Anexo B La Figura B.1 expone la función de la clase controladora Agenda (Diary) llamada agregar estudiante (add Student), la cual permite registrar los datos fijos de un estudiante. Dicha función la acciona el usuario secretaria en el momento del registro de una nueva solicitud. Figura B.1. Sección del código para agregar un nuevo estudiante. La segunda sesión de código mostrada en la Figura B.2, corresponde a la función para asignar un analista ante una nueva solicitud. Dicha función esta en la clase controladora Agenda (Diary). Figura B.2. Sección del código para asignar un analista a una solicitud. 114 Anexo C Figura C.1. Formulario Google Forms 115 Figura C.2. Formulario Google Forms 116 Anexo D Manual Técnico A continuación se presenta el manual técnico correspondiente a la aplicación Web SIGEREP, el cual está estructurado en una serie de pasos. La aplicación está alojada en un espacio virtual bajo un servidor del Centro de Computación de la Facultad de Ciencias de la Universidad Central de Venezuela, donde el acceso a esta se debe realizar a través de un equipo cliente que forme parte de la red de la mencionada facultad, y que posea un sistema operativo Linux. Requerimientos ● Sistema Operativo: Ubuntu 16.1 ● Servidor Web:Apache 2.4 ● Manejador de BD: MySQL 5.7 ● Lenguaje de script: Php 7. Paso 1: Acceso al espacio virtual en el servidor. ● Usuario: andres ● Password: andres2017 ● Dirección IP: 190.169.79.26 ssh andres@190.169.79.26 Paso 2: Instalación del servidor Web apache. sudo apt-get install apache2 Paso 3: Instalación del manejador de base de datos MySQL. sudo apt-get install mysql-server mysql-common mysql-client Paso 4: Instalación del módulo de apache php 7 117 sudo apt-get install php libapache2-mod-php php-mysql Paso 5: Cambio de permisos. sudo chown andres: admin /var/www Paso 6: Instalación de Phpmyadmin. sudo apt-get install phpmyadmin ln -s /usr/share/phpmyadmin /var/www Para acceder a Phpmyadmin, solo hay que colocar la siguiente dirección en el navegador: 190.169.79.26/phpmyadmin Para acceder se debe registrar con el siguiente usuario y contraseña: ● Usuario: root ● Contraseña: 1234 Paso 7: Crear la estructura de directorio de la aplicación Web. sudo mkdir -p /var/www/sigerep.desarrollo.ciens.ucv.ve/ Paso 8: Subir la aplicación Web. Para ello hay que abrir otra terminal y colocar el siguiente comando. scp app.zip andres@190.169.79.26 /var/www/sigerep.desarrollo.ciens.ucv.ve/ Paso 9: Descomprimir la aplicación. sudo unzip app.zip Paso 10: otorgar permisos. ·sudo chmod -R 755 /var/www ·sudo chown -R $USER:$USER /var/www/sigerep.desarrollo.ucv.ciens.ve/public_html cd sigerep.desarrollo.ucv.ve $ chown -R www-data:www-data sigerep.desarrollo.ucv.ciens.ve 118 $ chmod -R 755 sigerep.desarrollo.ucv.ciens.ve $ chmod -R 777 sigerep.desarrollo.ucv.ciens.ve/public_html/tmp Paso 11: Permitir la reescritura del URL Esto significa que el módulo Apache mod_rewrite debe estar habilitado y que el host virtual debe permitir que los archivos .htaccess realicen su escritura. apache2ctl -M Si ves rewrite_module en la lista, estás bien. Si no, use el siguiente comando para habilitar el módulo: a2enmod rewrite Paso 12: Reinicie el servidor. sudo service apache2 restart Paso 13: Crear un nuevo archivo para virtual host. sudo cp /etc/apache2/sites-available/000-default.conf /etc/apache2/sites- available/sigerep.desarrollo.ciens.ucv.ve.conf ·sudo nano /etc/apache2/sites-available/sigerep.desarrollo.ciens.ucv.ve.conf El archivo debe quedar así. <VirtualHost *:80> ServerAdmin sigerepucv@gmail.com DocumentRoot /var/www/sigerep.desarrollo.ciens.ucv.ve/webroot ServerName sigerep.desarrollo.ciens.ucv.ve ServerAlias www.sigerep.desarrollo.ciens.ucv.ve ErrorLog ${APACHE_LOG_DIR}/error.log CustomLog ${APACHE_LOG_DIR}/access.log combined </VirtualHost> Paso 14: Habilitar el nuevo archivo de virtual host. 119 sudo a2ensite Pasó 15: Deshabilitar el archivo de virtual host por defecto: sudo a2dissite 000-default Paso 16: Reiniciar el servidor. sudo service apache2 restart