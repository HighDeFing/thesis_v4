Universidad Central de Venezuela Facultad de Ciencias Escuela de Computación Laboratorio de redes móviles e inalámbricas (ICARO) “Desarrollo de una Aplicación Web para la Captura y Visualización de Datos Obtenidos de Múltiples Monitores Cardíacos Utilizando Bluetooth 4.0” Trabajo Especial de Grado presentado ante la ilustre Universidad Central de Venezuela, por los bachilleres: De Sousa D. Edward D. C.I.: 18.818.213 Email: edward.d.desousa@gmail.com Pérez A. Diego A. C.I.:19.754.458 Email: diegoarturo@gmail.com Para optar por el Título de Licenciado de Computación Tutora: Profesora María E. Villapol Caracas, 24 de Octubre de 2013 2 Universidad Central de Venezuela Facultad de Ciencias Escuela de Computación Laboratorio de Redes Móviles, inalámbricas y Distribuidas (ICARO) ACTA DEL VEREDICTO Quienes suscriben, Miembros del Jurado designado por el Consejo de la Escuela de Computación para examinar el Trabajo Especial de Grado, presentado por los Bachilleres Diego Pérez C.I.: 19.754.458 y Edward De Sousa C.I.: 18.818.213, con el título “Desarrollo de una Aplicación Web para la Captura y Visualización de Datos Obtenidos de Múltiples Monitores Cardíacos Utilizando Bluetooth 4.0”, a los fines de cumplir con el requisito legal para optar al título de Licenciado en Computación, dejan constancia de lo siguiente: Leído el trabajo por cada uno de los Miembros del Jurado, se fijó el día 25 de octubre de 2013, a las 11:00 am, para que sus autores lo defendieran en forma pública, en la Sala de Postgrado, Escuela de Computación, en la cual estos realizaron mediante una exposición oral de su contenido, y luego respondieron satisfactoriamente a las preguntas que les fueron formuladas por el Jurado, todo ello conforme a lo dispuesto en la Ley de Universidades y demás normativas vigentes de la Universidad Central de Venezuela. Finalizada la defensa pública del Trabajo Especial de Grado, el jurado decidió aprobarlo. En fe de lo cual se levanta la presente acta, en Caracas el 25 de octubre de 2013, dejándose también constancia de que actuó como Coordinador del Jurado el Profesor Tutor María Villapol. __________________________ Profesora María Elena Villapol (Tutora) __________________________ __________________________ Profesor Rafael Angulo (Jurado) Profesor Jaime Blanco (Jurado) 3 Tabla de Contenido Índice de Figuras ...................................................................................................................... 7 Índice de Tablas ........................................................................................................................ 9 Resumen .................................................................................................................................. 10 1. Introducción ..................................................................................................................... 12 1.1. Definición del problema ..............................................................................................12 1.2. Objetivo General .........................................................................................................13 1.3. Objetivos Específicos ..................................................................................................13 1.4. Justificación ................................................................................................................14 1.5. Distribución del documento .........................................................................................14 2. Monitores de Ritmo Cardíaco ......................................................................................... 16 2.1. Monitor de Ritmo Cardíaco .........................................................................................16 2.2. Funcionamiento ..........................................................................................................16 2.3. ¿Por Qué Usar un Monitor de Ritmo Cardíaco? ..........................................................16 2.4. Dispositivos de Monitoreo de Ritmo Cardíaco .............................................................17 2.4.1. Electrocardiógrafo ................................................................................................17 2.4.2. Pulsómetro ..........................................................................................................18 2.5. Comunicación Inalámbrica de Monitores de Ritmo Cardíaco ......................................19 2.5.1. PC de Escritorio ...................................................................................................19 2.5.2. Laptop..................................................................................................................20 2.5.3. Teléfonos Inteligentes ..........................................................................................20 3. Bluetooth .......................................................................................................................... 22 4 3.1. Características ............................................................................................................22 3.2. Reseña histórica .........................................................................................................22 3.3. Arquitectura ................................................................................................................24 3.4. Piconet y Scatternet ....................................................................................................25 3.5. Especificaciones .........................................................................................................26 3.6. Funcionamiento Básico ...............................................................................................27 3.7. Perfiles ........................................................................................................................29 3.8. Usos ...........................................................................................................................31 3.9. Bluetooth LE ...............................................................................................................32 3.9.1. Características .....................................................................................................32 3.9.2. Bluetooth BR/EDR vs. Bluetooth LE ....................................................................33 3.9.3. Conceptos Básicos ..............................................................................................33 3.9.4. Arquitectura .........................................................................................................35 3.9.5. ATT ......................................................................................................................39 3.9.6. GATT ...................................................................................................................43 3.9.7. Casos de Uso ......................................................................................................46 3.9.8. Perfil de Monitoreo Cardíaco ...............................................................................50 4. Metodología y Herramientas ........................................................................................... 53 4.1. Metodología de Desarrollo de Software Scrum ...........................................................53 4.1.1. Roles ...................................................................................................................53 4.1.2. Reuniones ...........................................................................................................54 4.1.3. Artefactos ............................................................................................................55 4.2. Herramientas de Software ..........................................................................................55 5 4.2.1. Nodejs .................................................................................................................55 4.2.2. MySQL.................................................................................................................56 4.2.3. JavaScript ............................................................................................................56 4.2.4. Noble ...................................................................................................................56 4.2.5. Jade .....................................................................................................................57 4.2.6. Bootstrap .............................................................................................................57 4.2.7. Angularjs ..............................................................................................................57 4.2.8. Git ........................................................................................................................58 4.2.9. Bitbucket ..............................................................................................................58 4.2.10. Ubuntu .............................................................................................................58 4.2.11. BlueZ ................................................................................................................59 4.3. Herramientas de Hardware .........................................................................................59 4.3.1. Dongle Bluetooth dual-mode. ...............................................................................59 4.3.2. Polar H7 Bluetooth Smart Heart Rate Sensor. .....................................................59 5. Diseño e Implementación ................................................................................................ 60 5.1. Requerimientos del Sistema .......................................................................................61 5.1.1. Requerimientos Funcionales ................................................................................61 5.1.2. Requerimientos no Funcionales ...........................................................................62 5.2. Diseño de la Solución .................................................................................................62 5.3. Diagrama de Casos de Usos ......................................................................................63 5.3.1. Caso de Uso de Nivel 0 .......................................................................................63 5.3.2. Caso de Uso de Nivel 1 .......................................................................................65 5.4. Diagrama Entidad Relación ........................................................................................70 6 5.4.1. Tablas Usadas en el Sistema ..............................................................................71 5.4.2. Lógica de Funcionamiento de la Aplicación .........................................................72 5.4.3. Implementación Detallada del manejador Bluetooth ............................................73 5.4.4. Implementación de las Interfaces .........................................................................76 6. Pruebas y Análisis de los Datos ..................................................................................... 84 6.1. Pruebas de Funcionalidad en Ambiente Simulado ......................................................84 6.2. Pruebas de Funcionalidad en Ambiente Real .............................................................87 7. Conclusiones ................................................................................................................... 89 7.1. Contribuciones ............................................................................................................89 7.2. Limitaciones ................................................................................................................90 7.3. Trabajos Futuros .........................................................................................................90 Referencias Bibliográficas ..................................................................................................... 92 7 Índice de Figuras FIGURA 2.1 ELECTROCARDIÓGRAFO DIGITAL..................................................................................... 18 FIGURA 2.2 RELOJ PULSÓMETROTIMEX ............................................................................................... 18 FIGURA 2.3 BANDA RECEPTORA POLAR .............................................................................................. 19 FIGURA 2.4 INTERFAZ PARA MONITOREO DE DATOS Y ESTADÍSTICAS POLAR ............................ 20 FIGURA 2.5 INTERFAZ DE UN MONITOR CARDÍACO ANT EN UN SISTEMA OPERATIVO ANDROID ............................................................................................................................................................ 21 FIGURA 3.1 LOGO DE BLUETOOTH ........................................................................................................ 23 FIGURA 3.2 ARQUITECTURA DE BLUETOOTH ...................................................................................... 25 FIGURA 3.3 REPRESENTACIÓN DE UNA PICONET .............................................................................. 26 FIGURA 3.4 REPRESENTACIÓN DE UNA SCATTERNET ...................................................................... 26 FIGURA 3.5 COMBINACIONES DE HUÉSPED Y CONTROLADORES BLUETOOTH: (DE IZQUIERDA A DERECHA): CONTROLADOR LE ÚNICO, CONTROLADOR BR/EDR ÚNICO. CONTROLADOR BR/EDR PRIMARIOS CON UN CONTROLADOR APM SECUNDARIO. UN CONTROLADOR BR/EDR CON MÚLTIPLES CONTROLADORES APM SECUNDARIOS. ......................................... 36 FIGURA 3.6 COMBINACIONES DE HUÉSPED Y CONTROLADORES BLUETOOTH: (DE IZQUIERDA A DERECHA): CONTROLADOR PRIMARIO BR/EDR Y LE. CONTROLADOR PRIMARIO BR/EDR Y LE CON UN CONTROLADOR SECUNDARIO APM. CONTROLADOR PRIMARIO BR/EDR Y LE CON MÚLTIPLES CONTROLADORES SECUNDARIOS APM. ........................................................ 37 FIGURA 3.7 ARQUITECTURA BLUETOOTH 4.0 COMPLETA. ................................................................ 38 FIGURA 3.8 ARQUITECTURA DE UNA IMPLEMENTACIÓN MÍNIMA BLUETOOTH LE. ....................... 39 FIGURA 3.9 EJEMPLO DE ARQUITECTURA CLIENTE / SERVIDOR DE ATT ....................................... 40 FIGURA 3.10 ARQUITECTURA CLIENTE/SERVIDOR DE GATT ............................................................ 44 FIGURA 3.11 ESTRUCTURA DEL PAQUETE. SERVICIO MONITOREO CARDÍACO. ........................... 51 FIGURA 5.1 IMPLEMENTACIÓN FINAL DEL SISTEMA DE MONITOREO CARDÍACO. ........................ 60 FIGURA 5.2 CASO DE USO NIVEL 0 ........................................................................................................ 64 FIGURA 5.3 CASO DE USO NIVEL 1. VISUALIZACIÓN DE DATOS ....................................................... 65 FIGURA 5.4 CASO DE USO NIVEL 1. ADMINISTRACIÓN DEL SISTEMA .............................................. 68 FIGURA 5.5 DIAGRAMA DE ENTIDAD RELACIÓN. ................................................................................. 70 FIGURA 5.6 MÉTODO MANEJADOR DE ESTADOS DEL RECEPTOR BLUETOOTH. .......................... 73 FIGURA 5.7 MÉTODO DE NOTIFICACIÓN DE ESCANEO BLUETOOTH. .............................................. 74 FIGURA 5.8 MÉTODOS DE CAPTURA DEL SERVICIO DE RITMO CARDÍACO. ................................... 75 FIGURA 5.9 INTERFAZ PARA MANEJO DE USUARIOS. ........................................................................ 76 FIGURA 5.10 FORMULARIO DE INGRESO DE USUARIO. ..................................................................... 77 FIGURA 5.11 INTERFAZ DE MANEJO DE GRUPOS ............................................................................... 78 FIGURA 5.12 FORMULARIO DE INGRESO DE GRUPOS. ...................................................................... 79 FIGURA 5.13 INTERFAZ DE INFORMACIÓN DE LEYENDA PARA EL ENTENDIMIENTO DE COLORES DE INTENSIDAD DEL RITMO CARDÍACO. ....................................................................................... 80 FIGURA 5.14 INTERFAZ DE CONFIGURACIÓN DE VALORES PREDETERMINADOS PARA EL CÁLCULO DE CALORÍAS. ................................................................................................................. 81 FIGURA 5.15 INTERFAZ DE VISUALIZACIÓN DE MONITORES CARDÍACOS EN MODO RECTANGULAR. ................................................................................................................................ 82 FIGURA 5.16 INTERFAZ DE VISUALIZACIÓN DE MONITORES CARDÍACOS EN MODO LISTA. ....... 82 FIGURA 5.17 INTERFAZ DE VISUALIZACIÓN DE SESIONES DEL SISTEMA. ...................................... 83 FIGURA 6.1 ESTADO INICIAL POR CONSOLA DEL SERVIDOR WEB. ................................................. 85 8 FIGURA 6.2 RESULTADOS DE PRUEBAS EN ESFUERZO FÍSICO MÍNIMO. ....................................... 86 FIGURA 6.3 EJECUCIÓN DE CONSULTA SQL SOBRE LA TABLA SESSIONDET. ............................... 86 FIGURA 6.4 RESULTADO DE PRUEBA ANTE EJERCICIOS DE BARRAS Y PARALELAS. .................. 87 FIGURA 6.5 RESULTADO DE PRUEBA ANTE EJERCICIO DE FÚTBOL SALA. .................................... 88 9 Índice de Tablas TABLA 3.1 COMPARACIÓN ENTRE BLUETOOTH CLÁSICO Y BLUETOOTH LE ................................. 33 TABLA 3.2 REPRESENTACIÓN DE UN CONJUNTO DE ATRIBUTOS ................................................... 41 TABLA 3.3 EJEMPLO DE UNA DISTRIBUCIÓN DE SERVICIOS GATT EN UN DISPOSITIVO ............. 44 TABLA 3.4 EJEMPLO DE CARACTERÍSTICAS DE UN SERVICIO GATT ............................................... 45 TABLA 5.1 ACTORES CASO DE USO NIVEL 0 ........................................................................................ 64 TABLA 5.2 CASO DE USO NIVEL 1. ACTIVAR CORREA ........................................................................ 66 TABLA 5.3 CASO DE USO NIVEL 1. DESACTIVAR CORREA ................................................................. 67 TABLA 5.4 CASO DE USO NIVEL 1. CONFIGURAR DATOS .................................................................. 68 TABLA 5.5 CASO DE USO NIVEL 1. INICIAR SESIÓN ............................................................................ 69 TABLA 5.6 CASO DE USO NIVEL 1. DETENER SESIÓN ........................................................................ 69 10 Resumen TITULO Desarrollo de una Aplicación Web para la Captura y Visualización de Datos Obtenidos de Múltiples Monitores Cardíacos Utilizando Bluetooth 4.0. AUTORES Edward De Sousa Diego Pérez TUTOR Profesora. María E. Villapol Los sistemas de monitoreo cardíaco han ofrecido a la sociedad avances en aspectos medicinales y deportivos. Poder obtener la información precisa del ritmo cardíaco en un momento dado, permite realizar cálculos sobre la salud del individuo y/o sobre calorías quemadas en una sesión de ejercicios. Anteriormente su medición se realizaba en caminadoras estacionarias o usando transmisiones en radiofrecuencias específicas con tecnologías propietarias. La aplicación para monitoreo cardíaco desarrollada en este trabajo se realizó haciendo uso de la metodología Scrum y tiene como principal objetivo el monitoreo de atletas que realicen actividades físicas en sitios estacionarios (Por ejemplo: Spinning, TRX, Insanity, trote en caminadora, entre otros). Usando Bluetooth 4.0 y teniendo conocimiento de que la misma es una tecnología estandarizada y de bajo consumo de energía, se realizó una aplicación de monitoreo cardíaco centralizado, capaz de interpretar y recibir los datos de múltiples correas cercanas al receptor Bluetooth, este a su vez conectado a la computadora encargada de mostrar los datos y realizar los cálculos para el mejor entendimiento de los usuarios. Debido a que Bluetooth 4.0 es una tecnología relativamente nueva, la aplicación está limitada a ambientes Linux, sin embargo puede ser la base para otras investigaciones relacionadas con teléfonos inteligentes o relojes que usen Bluetooth 4.0. Para lograr que la 11 aplicación cumpliera los requisitos establecidos fueron realizadas pruebas de funcionalidad, e interpretación de los datos. Al finalizar dichas pruebas se realizaron varias capturas en ambientes reales, por ejemplo: Clases de TRX, Judo y ejercicios de pesas y barras. Palabras claves: Bluetooth, Monitor Cardíaco, Scrum, Aplicación Web. 12 1. Introducción Desde tiempos remotos el deporte ha sido una vía de escape a la rutina diaria del ser humano tanto como actividad casual o simplemente por salud. Como toda actividad rigurosa el deporte requiere de ciertas mediciones de desempeño ya sea para evaluar el progreso o el comportamiento del cuerpo humano ante alguna actividad física, por lo que en este trabajo se explicará de manera detallada cómo es posible llevar a cabo esta tarea con la tecnología de punta en cuanto a monitoreo de atletas se refiere. 1.1. Definición del problema En los últimos años el uso de bandas sujetadas al pecho y algún tipo de receptor como relojes, se ha puesto muy de moda. Sin embargo, casi la totalidad de las tecnologías que se usaban para la transmisión de los datos recogidos por la banda de monitoreo son propietarias y muy costosas. Con la aparición de los teléfonos inteligentes en el mercado, y la demanda de aplicaciones centralizadas de monitoreo, existía una gran limitante para la transmisión de dichas correas, dado que se necesitaban los componentes de los relojes que permitían la recepción de los datos e interpretación de los mismos. Se hizo necesario algún tipo de tecnología que fuese capaz de enviar este tipo de datos y que a su vez sea estándar para que pudiese funcionar en cualquier teléfono inteligente, reloj o computadora. El lanzamiento de Bluetooth 4.0 y sus perfiles de bajo consumo de energía abre las puertas para que las transmisiones de las correas de monitoreo puedan ser fácilmente entendibles, dado que la especificación se encuentra basada en el estándar de Bluetooth 4.0 y su perfil de monitoreo cardíaco. Debido a que Bluetooth 4.0 es una tecnología relativamente nueva y que pocos teléfonos inteligentes hoy en día poseen compatibilidad con la misma, surge la idea de facilitarles a los atletas su medición usando la tecnología en un método de captura de datos centralizado. Dicho método pudiese ser muy útil en clases de Spinning, TRX, Insanity, entre otros. El monitoreo de la actividad cardíaca es necesario en muchos escenarios pero en particular en lo que respecta a la actividad deportiva. Hoy en día es notorio ver la diversidad de dispositivos, entre los cuales destacan las bandas, para llevar a cabo esta tarea. También se 13 destaca la posibilidad de capturar estas mediciones desde diversas dispositivos que van desde PCs hasta los teléfonos inteligentes. A pesar de lo ante expuesto, mucho del software que se ha desarrollado para la gestión de la información capturada por estos dispositivos ha sido desarrollado, por ejemplo en el ámbito deportivo por organizaciones privadas, donde el software desarrollado se conoce como propietario y no se encuentra expuesto al público en general. Esto conlleva a que cualquier mejoramiento de estas aplicaciones de gestión de datos provenientes de la actividad cardíaca conlleva a adquirir licencias que aunque tengan un precio moderado muchas veces no son posibles adquirirlas por ejemplo en nuestro país. Un caso común es la gestión de datos capturados por bandas de monitoreo cardíaco para su manejo y despliegue en un computador personal que es particularmente útil en actividades como el spinning, step, entre otros, que involucran muchas personas en una sala realizando una actividad deportiva. La problemática planteada, que se desprende de lo antes dicho, es la necesidad de capturar datos proveniente de dispositivos de monitoreo cardíacos y su gestión usando una herramienta de software libre. 1.2. Objetivo General Este trabajo tiene como objetivo principal desarrollar una aplicación para un computador de escritorio, laptop o estación de trabajo centralizada que permita el despliegue y visualización de la información recolectada por una o varias correas transmisoras de ritmo cardíaco. 1.3. Objetivos Específicos En el trabajo propuesto tiene como objetivos específicos:  Diseñar una aplicación que permita el despliegue y visualización de la información recolectada por una o varias correas transmisoras de ritmo cardíaco tomando en cuenta factores claves como, lugar donde se piensa usar la misma, cantidad de dispositivos conectados, correcto despliegue de la información recolectada, entre otros.  Implementar la aplicación diseñada.  Realizar pruebas de estrés a la aplicación, usando múltiples escenarios de pruebas. 14  Definir conclusiones referentes a la investigación y a la experiencia ganada en el desarrollo de la aplicación. 1.4. Justificación Con el pasar del tiempo, se ha hecho necesario monitorear la actividad cardíaca cuando se realiza una actividad deportiva. Esto no solo es necesario en ámbitos donde la actividad deportiva es realizada por atletas de alto rendimiento pero también en ámbitos donde la actividad se realiza con la finalidad de mejorar o mantener el cuerpo en buenas condiciones. Dicho monitoreo es una forma de ver como la condición física del atleta mejora y en algunos casos permite evitar accidentes debido a un esfuerzo mayor al de la capacidad del deportista. En los últimos años, los dispositivos para la captura de la actividad cardíaca han ido bajando de precio, haciéndose accesibles a una gran cantidad de personas. A esto se ha unido el hecho del desarrollo de tecnologías que han sido creadas para este fin o similares fines, como lo son Bluetooth y ANT [4]. Siendo los dispositivos y tecnologías de comunicación accesibles, es necesario el desarrollo de aplicaciones que permitan explotar la información recolectada por las mismas. En particular es necesario que estas aplicaciones puedan ser adquiridas por cualquier persona en un costo razonable. 1.5. Distribución del documento A continuación se muestran los temas que conforman cada uno de los siete capítulos que se desarrollan en el siguiente trabajo: Capítulo I: Introducción. Este capítulo abarca la motivación de la investigación, objetivos generales y específicos que se siguieron para realizar el sistema. Capítulo II: Monitores de Ritmo Cardíaco. En este capítulo se habla de la definición de los monitores cardíacos, su importancia y cómo se usan en el mercado. Capítulo III: Bluetooth. En este capítulo se expone la tecnología utilizada en la realización de la aplicación, su comparación entre versiones anteriores y la versión 4.0. Además de explicar el perfil de monitoreo cardíaco, pieza fundamental en el desarrollo del sistema. 15 Capítulo IV: Metodología y Herramientas. En este capítulo se expone la metodología usada para el desarrollo de la aplicación así como las herramientas necesarias para llevar a cabo los objetivos planteados. Capítulo V: Diseño de Implementación. En este capítulo se plantea la fase de diseño e implementación del sistema, así como los diagramas diseñados para su realización exitosa. Capítulo VI: Pruebas y Análisis de Datos. En este capítulo se exponen las pruebas realizadas y el análisis del resultado de las mismas. Capítulo VII: Conclusiones y Trabajos Futuros. En este capítulo se explica la importancia del sistema, sus contribuciones al mundo deportivo y recomendaciones a investigadores interesados en complementar la investigación. 16 2. Monitores de Ritmo Cardíaco 2.1. Monitor de Ritmo Cardíaco Es un aparato que consta de un medidor de tiempo y un sensor capaz de captar los latidos cardíacos de las variaciones eléctricas que produce el corazón en cada contracción. Para que un músculo pueda contraerse precisa que en su membrana se produzcan una serie de cambios eléctricos. Debido a que el corazón es un músculo es posible captar dichos cambios eléctricos mediante dos electrodos que se colocan en el pecho a ambos lados del corazón. Los impulsos captados por los sensores son relacionados con el contador de tiempo y se obtiene la frecuencia cardíaca [1]. 2.2. Funcionamiento En un principio la transmisión de los electrodos se realizaba mediante un cable hasta el contador de tiempo. El mismo disponía de un procesador el cual relacionaba los impulsos con el tiempo transcurrido. Sin embargo, la existencia de un cable provocaba molestias añadidas al desvestirse y vestirse. Un paso importante, fue lograr que los impulsos se transmitieran por ondas, con lo que desaparecía la necesidad de que hubiera unión física entre el sensor y el procesador. Un avance considerable fue poder trasferir los datos recogidos por el monitor de ritmo cardíaco a un computador, permitiendo de esta manera generar gráficos y estadísticas de la variación de las mediciones del ritmo cardíaco [25]. Hoy en día se utiliza un cinturón ajustado al pecho para captar lo cambios eléctricos producidos por el corazón durante el ejercicio físico. De este modo, el cinturón es capaz de detectar cada latido del corazón a través de dos electrodos y envía la señal mediante una interfaz inalámbrica a un receptor que interpreta los datos obtenidos a conveniencia. 2.3. ¿Por Qué Usar un Monitor de Ritmo Cardíaco? El corazón es quién mueve la sangre desde los pulmones hacia los músculos, donde el oxígeno es quemado como combustible, mientras más riguroso es un ejercicio el corazón debe trabajar con más frecuencia para hacer llegar más oxígeno a los músculos [26]. Si el estado físico mejora, el corazón es capaz de bombear más sangre con cada latido y como resultado, el corazón no necesita latir con tanta frecuencia para hacer llegar oxígeno a 17 los músculos. Según la frecuencia del ritmo cardíaco existen valores definidos para los cuales se logran ciertos objetivos, cuando se hace trabajar al corazón a un 50 – 60 % de su capacidad máxima se mejora la salud en general y la recuperación del cuerpo, a un 60 – 70% de su capacidad máxima se queman calorías y se mejora la resistencia, y si se fuerza el corazón al máximo (80% o más) y solo se debería hacer por periodos cortos de tiempo, se desarrolla la mayor resistencia y velocidad. Usando un monitor cardíaco se puede entrenar inteligentemente para lograr el objetivo deseado de cada individuo, además mantiene al tanto de cómo se comporta el motor que mueve combustible a los músculos. Se trata de escuchar al corazón para entender su comportamiento ante un ejercicio determinado. 2.4. Dispositivos de Monitoreo de Ritmo Cardíaco Hoy en día existen básicamente dos esquemas para el monitoreo del ritmo cardíaco, según su uso son las siguientes: 2.4.1. Electrocardiógrafo Es el método más aceptado para el monitoreo del ritmo cardíaco, capta y amplía la actividad eléctrica del corazón a través de electrodos colocados en las cuatro extremidades y en seis posiciones precordiales. El registro de dicha actividad es el electrocardiograma (ECG) [12]. El electrocardiógrafo (Ver Figura 2.1) es usado para mediciones sumamente precisas en personas con problemas del corazón, y para estudios médicos. La forma en que se realiza el examen es de la siguiente manera: Se le pide a la persona acostarse y se le fijan los electrodos a cada brazo, a cada pierna y al tórax, para lo cual es a veces necesario limpiar el área, rasurar o recoger el cabello. Usualmente, el paciente debe permanecer quieto y contener la respiración por períodos cortos de tiempo durante el procedimiento. En ciertas ocasiones, este examen se lleva a cabo mientras la persona realiza ejercicios o se encuentra bajo un estrés mínimo, con el fin de controlar los cambios en el corazón y sus resultados se registran en papel milimetrado. 18 Figura 2.1 Electrocardiógrafo digital 2.4.2. Pulsómetro Es un dispositivo que permite a un usuario medir su frecuencia cardíaca en tiempo real. Por lo general, consta de dos elementos: una correa transmisora para el pecho y un receptor de muñeca que usualmente es un reloj (Ver Figura 2.2). Los modelos más avanzados, además, miden la variabilidad del ritmo cardíaco para evaluar la capacidad física del atleta [1]. La correa del pecho tiene los electrodos en contacto con la piel para controlar electrónicamente las pulsaciones del corazón (Ver Figura 2.3). Cuando se detecta los latidos del corazón se transmite una señal de radio, que el receptor utiliza para determinar la frecuencia cardíaca. Esta señal puede ser un simple pulso de radio o una única señal codificada desde la correa de pecho, que impide que otro usuario cercano que use también un transmisor semejante reciba la señal (conocida como diafonía, un tipo de interferencia). Figura 2.2 Reloj pulsómetroTimex http://es.wikipedia.org/wiki/Electrodo 19 Figura 2.3 Banda receptora Polar 2.5. Comunicación Inalámbrica de Monitores de Ritmo Cardíaco Para la realización del Monitoreo Remoto de Atletas se necesita también (además de los dispositivos referenciados previamente), algún mecanismo que sirva de receptor de la información emitida desde el monitor de ritmo cardíaco del atleta el cual cuente con la interfaz donde se mostrará dicha información. Existen actualmente muchos métodos de transmisión de la información obtenida por los medidores de ritmo cardíaco, los más significativos son los siguientes: 2.5.1. PC de Escritorio Varias marcas conocidas como Polar, Timex, entre otros, ofrecen en sus páginas web aplicaciones para instalar en los computadores de los usuarios, de esta manera pueden conectar los monitores cardíacos al computador mediante un puerto USB. Es así como el computador es capaz de mostrar datos estadísticos y gráficos de mucha utilidad para los usuarios (Ver Figura 2.4). Pensar en un computador de escritorio como un monitor cardíaco limita el rango de ejecución y de recepción de datos, debido a que el computador y los atletas deben estar en un lugar cómodo y además existir cercanía entre ellos para que se pueda recibir la información emitida por las bandas de pecho. 20 Figura 2.4 Interfaz para monitoreo de datos y estadísticas polar 2.5.2. Laptop Del mismo modo que un computador de escritorio se puede usar un laptop como un recolector de datos. Sin embargo, se puede hacer uso de la interfaz Bluetooth como medio de transmisión para algunos relojes, por ejemplo de la marca Polar. 2.5.3. Teléfonos Inteligentes Debido a que las tecnologías hoy en día tales como ANT y Bluetooth LE son bien conocidas y trabajan en frecuencias estándares, se han dotado a los teléfonos inteligentes con aplicaciones que interactúan con las mismas. Así el uso de un reloj como monitor cardíaco ya no será un estándar en el mundo de monitoreo remoto de atletas. Desde hace más de dos años se ha incorporado, en algunos modelos de teléfonos la propiedad de sincronización con la correa de pecho para llevar el monitoreo del ritmo cardíaco desde un teléfono móvil (Ver Figura 2.5). 21 Figura 2.5 Interfaz de un monitor cardíaco ANT en un sistema operativo Android 22 3. Bluetooth Bluetooth es un estándar abierto de tecnología inalámbrica para el intercambio de datos entre dispositivos móviles o fijos en cortas distancias [31]. Permite la implementación de redes PANs (Personal Area Networks / Redes de área personal) de bajo costo y con altos niveles de seguridad. 3.1. Características A continuación se describen brevemente las características más resaltantes de Bluetooth [31]:  Reemplazo del cable. Bluetooth elimina la necesidad de numerosos cables para la conexión entre prácticamente cualquier dispositivo de comunicación.  Punto de acceso de voz y data. Bluetooth proporciona una interfaz uniforme para acceder a servicios de voz y data.  Redes Ad Hoc. Un dispositivo equipado con Bluetooth puede establecer una conexión instantánea con otro dispositivo Bluetooth que se encuentre en su rango. Esto permite realizar una comunicación sin infraestructura también conocida como red Ad Hoc. 3.2. Reseña histórica La siguiente línea del tiempo resume la evolución de Bluetooth desde su concepción en 1994 hasta la actualidad [4]:  1994. Bluetooth es inicialmente concebido por Ericsson, una compañía sueca de equipos de telecomunicación y su objetivo inicial era una solución alternativa a los cables de datos RS-232.  1998. Se conforma la Bluetooth SIG (Special Industry Group / Grupo Industrial Especial) integrada por las compañías Ericsson, Microsoft, IBM, Intel, Agere, Motorola, Nokia, Toshiba, entre otras, con el objetivo de impulsar el desarrollo de estándares para Bluetooth.  1999. Surge la especificación 1.0 de Bluetooth. 23  2004-2005. Surge la especificación 2.0 + EDR (Enchanted Data Rate / Velocidad de datos mejorada) de Bluetooth.  2007. Surge la especificación 2.1 + EDR de Bluetooth.  2009. Surge la especificación 3.0 + HS (High Speed / Alta velocidad) de Bluetooth.  2010-2011. Surge la especificación 4.0 + LE de Bluetooth. Actualmente la Bluetooth SIG es la encargada de alentar la investigación y desarrollo de la tecnología Bluetooth. Inicialmente los desarrolladores de esta tecnología inalámbrica utilizaron el término “Bluetooth” como un nombre clave, sin embargo, el tiempo pasó y dicho nombre se adoptó como su oficial. La palabra “Bluetooth” fue tomada del Rey Danés Harald Bluetooth del siglo décimo. El Rey Bluetooth fue conocido por su esfuerzo de unificar la Europa Escandinavia durante una era en la cual la región estaba siendo azotada por las guerras y los clanes feudales [4]. Los fundadores de Bluetooth SIG sintieron que el nombre tenía sentido debido a las siguientes razones [4]:  Bluetooth fue desarrollado inicialmente en Escandinavia.  La tecnología Bluetooth es capaz de unir distintos tipos de compañías como la de teléfonos móviles, computadoras y automovilísticas. Además simplifica y combina múltiples formas de comunicación inalámbrica en una sola de manera simple, segura, de bajo costo, bajo consumo, y bajo una radio frecuencia globalmente disponible. En logo de Bluetooth unifica las letras del abecedario rúnico “H”, la cual luce como un asterisco, y la “B”, conformando así las iníciales del Rey Harald Bluetooth. Si se observa detalladamente la Figura 3.1 se pueden ver ambas letras embebidas en el logo [4]. Figura 3.1 Logo de Bluetooth 24 3.3. Arquitectura La arquitectura de Bluetooth, representada en la Figura 3.2, está conformada por un conjunto de capas de protocolos los cuales se encuentran clasificados como [31]:  Protocolos fundamentales de Bluetooth. Son específicos de la tecnología inalámbrica Bluetooth y han sido desarrollados por la Bluetooth SIG. Estos protocolos son: Radio, BaseBand (Banda base), LMP (Link Manager Protocol / Protocolo de administración de enlace), L2CAP (Logical Link and Adaptation Protocol / Protocolo de adaptación y enlace lógico), SDP (Service Discovery Protocol / Protocolo de servicio de descubrimiento).  Protocolos de sustitución de cable. Suministran señalización de control que emulan el tipo de señalización que se asocia usualmente con los enlaces de cable.  Protocolos de control de telefonía. Definen la señalización de control de llamada para establecer llamadas de voz y datos con dispositivos Bluetooth.  Protocolos adoptados. Son protocolos existentes que se utilizan para diversos fines en capas superiores. Algunos de estos protocolos adoptados son: PPP (Point to Point Protocol / Protocolo punto a punto), TCP (Transmission Control Protocol / Protocolo de control de transmisión), UDP (User Datagram Protocol / Protocolo de datagrama de usuario), IP (Internet Protocol / Protocolo de Internet), OBEX (Object Exchange / Intercambio de objetos). 25 Figura 3.2 Arquitectura de Bluetooth 3.4. Piconet y Scatternet Una piconet (Ver Figura 3.3) es la unidad básica de red de Bluetooth que consiste en un dispositivo maestro y de uno a siete dispositivos esclavos. El dispositivo maestro, usando su propia dirección como parámetro de entrada, determina el canal y la fase usada por todos los dispositivos de su piconet. Los dispositivos esclavos se deben ajustar al canal y la fase determinada por su maestro. Un esclavo se puede comunicar únicamente con su maestro y sólo si el mismo se lo permite. Un dispositivo de una piconet puede ser parte de otra piconet funcionando como maestro y esclavo en ambas piconet. Esta forma de solapamiento es denominada scatternet (Ver Figura 3.4)[31]. Una ventaja del esquema piconet / scatternet es que permite que los dispositivos puedan compartir la misma área física y hacer un manejo eficiente del ancho de banda disponible. El canal lógico y la transmisión de data son compartidos por la piconet [31]. 26 Figura 3.3 Representación de una piconet Figura 3.4 Representación de una scatternet 3.5. Especificaciones Bluetooth presenta las siguientes características técnicas [4]:  Frecuencia de operación: banda ISM (Industrial, Scientific and Medical / Industrial, científica y médica) de 2.4 GHz (Gigahercios).  79 Canales físicos de 1MHz (Megahercios).  Técnica de modulación utilizada: GFSK (Gaussian Frecuency-Shift-Keying / Modulación por desplazamiento de frecuencia gaussiana). 27  Potencia del transmisor: 1 mW (megavatios) para un alcance de 10 metros, 100 mW para un alcance de hasta 100 metros.  Técnica utilizada para el envío y recepción: FHSS (Frecuency Hopping Spread Spectrum / Espectro ensanchado por salto de frecuencia).  Canales máximos de voz: 3 por piconet.  Canales máximos de datos: 7 por piconet.  Velocidad de datos: hasta 721 kbit/s (kilobit por segundo) por piconet.  Rango esperado del sistema: 10 metros.  Número de dispositivos: 8 por piconet y hasta 10 piconets.  Alimentación: 2,7 voltios.  Consumo de potencia: desde 30 uA (microamperios) a 30 mA (miliamperios) transmitiendo.  Tamaño del módulo: 0.5 pulgadas cuadradas (9x9 milímetros).  Interferencia: Bluetooth minimiza la interferencia potencial al emplear saltos rápidos (1600 saltos por segundo).  Topología de la red: piconet y scatternet. 3.6. Funcionamiento Básico Cada dispositivo Bluetooth posee un microchip que transmite y recibe datos en la frecuencia de 2.4 GHz (2,402 hasta 2,480 MHz en saltos de 1 MHz). La banda de 2.4 GHz no necesita algún tipo de licencia para su utilización y se encuentra disponible en todo el mundo, con algunas variaciones de ancho de banda en diferentes países, como España, Francia y Japón. Además de canales especiales para la transmisión de datos, Bluetooth cuenta con tres canales de voz a 64 kbit/s. Cada dispositivo tiene una dirección única de 48 bits, basada en el estándar IEEE (Institute of Electrical and Electronics Engineers/ Instituto de ingenieros eléctricos y electrónicos) 802.11 para redes LAN (Local Area Network / Redes de área local) inalámbricas. Dicha dirección le permite al dispositivo formar parte de una piconet de manera temporal. Las conexiones entre los dispositivos son de uno a uno con un rango máximo de 10 28 metros. Se puede alcanzar un mayor rango, de 100 metros, haciendo uso de amplificadores aunque se introduce alguna distorsión [8]. El esquema FHSS ofrece una gran robustez a Bluetooth ya que permite a los dispositivos realizar numerosos saltos de frecuencias aleatorios logrando establecer una comunicación inclusive en áreas donde existe una gran interferencia electromagnética. Bluetooth provee mecanismos de encriptación y autenticación para controlar la conexión y evitar que cualquier dispositivo, no autorizado, pueda acceder a los datos o modificarlos. El manejo de la encriptación y autenticación se realiza a nivel de capa de aplicación [8]. Bluetooth se ha diseñado para operar en un ambiente multiusuario. Los dispositivos pueden habilitarse para comunicarse entre sí e intercambiar datos de una forma transparente para el usuario. Una piconet puede estar conformada hasta de 8 dispositivos y hasta diez piconets pueden coexistir en la misma área de cobertura. Dado que cada enlace de comunicación es codificado y protegido contra interferencia y pérdida de datos, Bluetooth puede considerarse como una red muy segura. El protocolo Base Band (Banda Base) que utiliza Bluetooth utiliza técnicas de conmutación de circuitos y de paquetes para asegurar que los datos lleguen en orden [8]. El establecimiento de una conexión entre dos dispositivos Bluetooth consta de diferentes pasos, los cuales se listan a continuación [10]:  Modo pasivo.  Solicitud: búsqueda de puntos de acceso.  Paginación: sincronización con los puntos de acceso.  Descubrimiento del servicio del punto de acceso.  Creación de un canal con el punto de acceso.  Emparejamiento mediante PIN (Personal Information Number / Numero de información personal).  Utilización de la red. A continuación se explica detalladamente cada uno de los pasos: Durante el uso normal, un dispositivo funciona en “modo pasivo”, es decir, que está escuchando la red. Este modo le permite al dispositivo ahorrar energía mientras se encuentra a 29 la espera de algún mensaje entrante. El establecimiento de una conexión comienza con una fase denominada “solicitud”. En dicha fase el dispositivo maestro envía una solicitud a todos los dispositivos que encuentra dentro de su rango, denominados puntos de acceso. Todos los dispositivos que reciben la solicitud responden con su dirección. El dispositivo maestro elige una dirección y se sincroniza con el punto de acceso mediante una técnica denominada paginación. La paginación consiste en la sincronización del reloj y la frecuencia del dispositivo maestro con el punto de acceso seleccionado. De esta manera se establece un enlace con el punto de acceso que le permite al dispositivo maestro ingresar en una fase de descubrimiento de servicios del punto de acceso, mediante el protocolo SDP. Cuando la fase de descubrimiento de servicios finaliza, el dispositivo maestro está preparado para crear un canal de comunicación con el punto de acceso, mediante el protocolo L2CAP. El punto de acceso puede incluir un mecanismo de seguridad denominado emparejamiento. El emparejamiento restringe el acceso a los usuarios autorizados para brindarle a la piconet cierto grado de protección. Este procedimiento se realiza con una clave cifrada comúnmente conocida como PIN. Para esto, el punto de acceso le envía una solicitud de emparejamiento al dispositivo maestro. La mayoría de las veces se le solicitará al usuario que ingrese el PIN del punto de acceso. Si el PIN recibido es correcto, se lleva a cabo la conexión. En el modo seguro, el PIN se enviara cifrado con una segunda clave para evitar poner en riesgo la señal. Cuando el emparejamiento se activa, el dispositivo maestro puede utilizar libremente el canal de comunicación establecido [10]. 3.7. Perfiles Bluetooth es una tecnología que puede ser implementada en múltiples escenarios. Sin embargo, un escenario en particular puede no necesitar todo el abanico de protocolos y características que brinda Bluetooth. En consecuencia, se definieron modelos de uso específicos. Un modelo de uso es un conjunto de protocolos que implementan una aplicación en particular basada en Bluetooth. Un perfil Bluetooth define los protocolos y las características que soporta un modelo de uso [31]. 30 Los perfiles de Bluetooth se dividen en generales y específicos. Los perfiles generales se dividen en [31]:  GAP (Generic Access Profile / Perfiles de acceso genérico): Define los procedimientos genéricos para descubrir dispositivos Bluetooth.  SPP (Serial Port Profile / Perfil de puerto serial): Establece cómo deben configurarse los dispositivos Bluetooth para emular una conexión serial usando RFCOMM.  SDAP (Service Discovery Application Profile / Perfil de Aplicación de descubrimiento de servicios): Describe como un dispositivo puede descubrir servicios registrados en otros dispositivos Bluetooth al igual que otra información acerca de estos servicios.  GOEP (Generic Object Exchange Profile / Perfil genérico de intercambio de objetos): Ofrece la capacidad de transferir objetos de datos de un dispositivo a otro tales como hoja de cálculo, presentaciones, imágenes. Los perfiles específicos se dividen en [31]:  File Transfer Profile (Perfil de transferencia de archivos).  LAN Access Profile (Perfil de acceso a LAN).  Synchronization Profile (Perfil de sincronización).  Cordless Telephony Profile (Perfil de telefonía inalámbrica).  Headset Profile (Perfil de auriculares).  Fax Profile (Perfil de fax).  Intercom Profile (Perfil de inter comunicación).  Dial-UP Networking Profile (Perfil de acceso telefónico a redes).  Object Push Profile (Perfil de carga de objetos). 31 3.8. Usos Algunos de los usos más comunes de la tecnología Bluetooth son [19]:  Control inalámbrico de una comunicación entre un teléfono móvil y auriculares manos libres. Esta fue una de las primeras aplicaciones más populares de Bluetooth.  Control inalámbrico entre un teléfono móvil y un equipo de sonido de automóvil compatible con Bluetooth.  Audífonos e intercomunicadores inalámbricos.  Comunicación inalámbrica entre computadores en un espacio confinado y cuando se requiere muy poco ancho de banda.  Comunicación inalámbrica entre dispositivos de entrada y salida de computadores, los más comunes son el mouse, teclado e impresora.  Transferencia de archivos, detalles de contactos y recordatorios entre dispositivos  Reemplazo de las comunicaciones en serie usando cables RS-232 en equipos de pruebas, receptores GPS (Global Positining System / Sistema de posicionamiento global), equipos médicos, lectores de código de barra y dispositivos de control de tráfico.  Para realizar publicidad a través de dispositivos colocados en la calle que envían información a otros dispositivos Bluetooth que se encuentren en su alcance.  Las consolas de juegos como Nintendo Wii, Sony Playstation 3, entre otros, utilizan Bluetooth para sus controles inalámbricos.  Transmisión a corto plazo de data recaudada por sensores de dispositivos médicos al teléfono u otros aparatos. 32 3.9. Bluetooth LE Bluetooth LE es una variante introducida en la versión 4.0 de Bluetooth definida como una tecnología radio de corto alcance estandarizada por Bluetooth SIG y orientada a las necesidades de los dispositivos inalámbricos actuales como lo son el bajo consumo de energía, conexiones rápidas, confiabilidad y seguridad [5]. 3.9.1. Características Bluetooth LE deriva las características de sus predecesores e introduce novedades que le permiten desempeñarse con un bajo consumo energético. Entre dichas características podemos destacar [5]:  Robustez y confiabilidad: El salto de frecuencia adaptativo de Bluetooth LE permite a un dispositivo saltar rápidamente en una banda amplia de frecuencias, no sólo para reducir la interferencia sino también para identificar y evitar frecuencias muy concurridas.  Seguridad: Bluetooth LE está diseñado para incorporar un alto nivel de seguridad incluyendo autenticación, autorización, encriptado y protección contra ataques de hombre en el medio.  Disponibilidad global: Dado que Bluetooth LE trabaja en la frecuencia libre de 2.4GHz puede ser usado en una gran cantidad de países.  Picos de consumo de energía muy bajos en estados de funcionamiento y reposo.  Capacidad para operar por años utilizando baterías muy pequeñas (unos pocos milímetros de diámetro) denominadas en inglés como coin-cellbatteries.  Interoperabilidad entre distintos vendedores.  Mayor rango de operatividad.  Nuevo mecanismo de anunciamiento, para una fácil fase de descubrimiento y conexión.  Nuevo Perfil de Atributos Genéricos para simplificar los dispositivos y el software que utilizan.  Arquitectura Cliente/Servidor asíncrona.  Bajo costo de implementación. 33 3.9.2. Bluetooth BR/EDR vs. Bluetooth LE La Tabla 3.1 muestra una comparación breve entre los aspectos técnicos del Bluetooth BR (Basic Rate / Tasa básica) / EDR y Bluetooth LE. Tabla 3.1 Comparación entre Bluetooth clásico y Bluetooth LE Especificación técnica Bluetooth clásico Bluetooth LE Radiofrecuencia 2.4 GHz 2.4 GHz Distancia/Rango ~10-100 metros ~10-100 metros Tasa de transferencia 1-3Mbps (Mega bit por segundo) 1Mbps Nodos/Esclavos activos 7 ~ 800. Limitado por la memoria del dispositivo Seguridad 56 a 128 bit 128-bit AES Robustez FHSS FHSS Latencia (desde el estado conectado hasta el envío de data) 100+ ms (milisegundos) <6ms Certificación Bluetooth SIG Bluetooth SIG Topología de red Punto a Punto, scatternet Punto a punto, estrella Consumo de energía 1(valor de referencia) 0.01 a 0.5 (dependiendo del caso de uso) 3.9.3. Conceptos Básicos La principal mejora introducida por Bluetooth LE es la reducción del consumo de baterías. Dicha reducción se logra gracias a los siguientes aspectos [6]: 34  Enfoque no orientado a conexión que permite reducir el tiempo en el cual los dispositivos mantienen encendido un enlace radio (físico) mediante la reducción de los tiempos de procesamiento y transferencia.  Reducción del tamaño de los paquetes lo que minimiza considerablemente los tiempos de procesamiento y transmisión de los mismos. Esto también permite la reducción de los requerimientos de memoria lo que se traduce en menos fuga de energía y un menor costo de implementación.  Reducción de los canales de radiofrecuencia para mejorar los tiempos de conexión y descubrimiento.  Máquina de estados sencilla lo que simplifica y optimiza su utilización. Servicios simples requieren menos memoria.  Bluetooth LE solo emplea 3 canales de anunciamiento a diferencia de Bluetooth BR/EDR que utiliza de 16 a 32 canales. El tiempo que se emplea para escanear dichos canales se redujo de 22.5 ms (milisegundos) a 1.2 ms.  Implementación de un nuevo estado de reposo. Los dispositivos Bluetooth LE permanecen en estado de reposo y solo se “despiertan” si tienen que transmitir datos. Este nuevo mecanismo de funcionamiento favorece a las aplicaciones de tipo sensores que predominan en Bluetooth LE las cuales intercambian datos en períodos infrecuentes (intervalos de 0.5 a 4 segundos).  Reducción del establecimiento de una conexión entre dispositivos a 3 ms.  En Bluetooth LE los datos son transmitidos en pequeños trozos de bits. Esto permite que enviar datos sea rápido y se consuma la menor cantidad de energía posible. El motivo de este conjunto de optimizaciones es la introducción de una nueva fuente de poder de tamaño muy limitado cuyas características de consumo de energía son: menos de 20mA de corriente pico y menos de 5uA de corriente promedio. Las pequeñas dimensiones de dichas baterías permiten elaborar dispositivos Bluetooth LE de reducidas dimensiones y bajo costos. La combinación de un enlace radio siempre apagado y la reducción de los requerimientos de memoria prolonga la vida en años (3 - 4 años) de la batería de un dispositivo Bluetooth LE. Se estima que Bluetooth LE consume de 10 a 20 veces menos energía que el Bluetooth BR/EDR [6]. 35 3.9.4. Arquitectura La versión 4.0 de Bluetooth incluye en su especificación los protocolos de Bluetooth clásicos, Bluetooth High Speed (Alta velocidad) y Bluetooth Low Energy. Bluetooth High Speed se entiende como la versión 3.0 con la variante APM (Alternative PHY/MAC / PHY/MAC alternativo) y los protocolos Bluetooth clásicos (Bluetooth BR/EDR) son el recopilado de las versiones anteriores a 3.0 (legacy) [7]. De acuerdo a su modo de uso existen dos tipos de dispositivos Bluetooth LE [7]:  Dispositivos de modo simple. Son dispositivos que solo soportan la tecnología Bluetooth LE y se encuentran optimizados para soluciones de bajo consumo de poder, costo reducido y pequeños tamaños. Son solo compatibles con otros dispositivos que implementen la tecnología Bluetooth LE.  Dispositivos de modo dual. Son dispositivos que implementan las tecnologías Bluetooth LE, Bluetooth clásico (BR/EDR) y alternativamente Bluetooth High Speed. Estos dispositivos son interoperables con todas las especificaciones previas de Bluetooth. Algunos de los perfiles y casos de uso pueden ser soportados por tan solo una de las tecnologías antes mencionadas. Por consecuente, los dispositivos duales pueden brindar soporte a la mayoría de los casos de uso. El núcleo de un sistema Bluetooth consiste en un huésped y uno o más controladores. Un huésped es una entidad lógica definida como el conjunto de capas situadas por debajo de los perfiles y por encima del HCI (Host to Controller Interface / Interfaz de Huésped a Controlador). El HCI es una capa intermedia que permite estandarizar la comunicación entre el huésped y los controladores. Dicha estandarización permite que el huésped o los controladores sean sustituidos con una mínima adaptación. Existen diferentes estándares para la capa HCI, cada uno implementa distintas interfaces de hardware para transferir los mismos comandos, eventos y paquetes de datos [7]. Un controlador es una entidad lógica definida como el conjunto de capas situadas bajo el HCI. En los dispositivos Bluetooth de funcionalidad simple el huésped y los controladores pueden encontrarse implementados en el mismo microprocesador. En ese caso el uso del HCI es opcional aunque se suele implementar con una interfaz de software interna [7]. 36 Bluetooth LE define dos tipos de controladores, primarios y secundarios. Una implementación de Bluetooth tiene un solo controlador primario el cual puede estar configurado de alguna de las siguientes maneras [7]:  Controlador BR/EDR incluyendo las capas de Radio, BaseBand, Link Manager, y opcionalmente HCI.  Un controlador LE incluyendo un LE PHY (capa física especialmente diseñada para cumplir los requerimientos de bajo consumo de LE), link layer y opcionalmente HCI. (Ver Figura 3.5)  Una combinación de controlador BR/EDR con una porción de controlador LE. Esta configuración posee una sola dirección de dispositivo Bluetooth compartida. (Ver Figura 3.6) Adicionalmente se pueden incluir uno o más controladores secundarios siguiendo la siguiente configuración [7]:  Un controlador alternativo APM incluyendo el 802.11 PAL, 802.11 MAC y PHY y opcionalmente HCI (Ver Figura 3.5 y Figura 3.6). Figura 3.5 Combinaciones de huésped y controladores Bluetooth: (de izquierda a derecha): Controlador LE único, Controlador BR/EDR único. Controlador BR/EDR Primarios con un Controlador APM Secundario. Un Controlador BR/EDR con múltiples Controladores APM Secundarios. 37 Figura 3.6 Combinaciones de Huésped y Controladores Bluetooth: (de izquierda a derecha): Controlador Primario BR/EDR y LE. Controlador Primario BR/EDR y LE con un Controlador Secundario APM. Controlador Primario BR/EDR y LE con múltiples Controladores Secundarios APM. El controlador APM es una variante en la arquitectura de Bluetooth introducida en la versión 3.0 de alta velocidad que permite alternar el uso de una capa MAC o PHY para el transporte de los datos. El radio de Bluetooth se sigue utilizando para los descubrimientos de dispositivos, conexión inicial y configuración de perfil, sin embargo, cuando largas cantidades de datos necesitan ser transportadas la alternativa de alta velocidad MAC PHY 802.11 (típicamente asociada con Wi-Fi) es utilizada. Esta variante de alta velocidad (APM) es basada en 802.11 pero el mecanismo APM fue diseñado para ser interoperable con otros radios. En esencia el AMP modifica la arquitectura del estándar Bluetooth para permitir múltiples radios alternativos bajo la capa L2CAP. Cada controlador APM consiste en un PAL (Protocol Adaptational / Protocolo de adaptación) en el tope de una capa MAC y PHY. El PAL es el responsable de mapear los protocolos Bluetooth (según lo especificado por el HCI) a protocolos específicos de las capas MAC y PHY. Los controladores AMP pueden ser habilitados o deshabilitados para minimizar el consumo de energía del dispositivo [7]. (Ver Figura 3.7) 38 Figura 3.7 Arquitectura Bluetooth 4.0 completa. Una implementación mínima de un sistema Bluetooth LE (Ver Figura 3.8) contiene un controlador Primario LE y Huésped conformado por las capas L2CAP, SMP (Security Manager Protocol / Protocolo de Administración de Seguridad), ATT (Attribute Protocol / Protocolo de Atributo), GATT y GAP. Los protocolos ATT y GATT (Generic Attribute Protocol / Protocolo de Atributo Genérico) son fundamentales para el funcionamiento del modelo de bajo consumo de energía ya que estructuran los datos de los perfiles y casos de uso de una manera simple y concisa, dichos protocolos son explicados con mayor detenimiento en las secciones 3.9.5 y 3.9.6 del presente documento [7]. 39 Figura 3.8 Arquitectura de una implementación mínima Bluetooth LE. 3.9.5. ATT ATT es un protocolo que permite encapsular los datos que maneja un dispositivo Bluetooth LE en una abstracción denominada “atributo” y proporciona métodos adecuados para su manipulación. Como se percibe en la Figura 3.9, ATT es un protocolo cliente servidor [13]. Las tareas que ejecutan cada contraparte del protocolo ATT (cliente / servidor) son las siguientes [13]:  El servidor almacena datos.  Los clientes solicitan datos al servidor.  Los clientes escriben datos en el servidor. 40 Figura 3.9 Ejemplo de arquitectura cliente / servidor de ATT ATT define las siguientes operaciones para un dispositivo cliente [13]:  Lectura. El cliente le solicita datos al servidor cuando la necesita.  Escritura. El cliente puede configurar un servidor sobrescribiendo sus atributos. Por ejemplo: cambiar la temperatura de la habitación a 22ºC. ATT define las siguientes operaciones para un dispositivo servidor [13]:  Notificar. El servidor notifica al cliente cuando ciertos datos se modifican. El contenido de la notificación es en sí los propios datos modificados.  Indicar. Parecido al anterior, el servidor notifica al cliente cuando ciertos datos sufren algún cambio y el cliente aprueba que ha recibido dichos datos (con un mensaje de confirmación). En Bluetooth LE los datos son expuestos en forma de “atributos” (Ver Tabla 3.2). Un atributo es un bloque de datos conformado por [13]:  Un manejador (Handle) de 16 bits. Este manejador es único (por dispositivo) y permite referenciar al atributo dentro de un dispositivo. El manejador 0x0000 se encuentra reservado y no debe ser usado.  Un UUID (Universal Unique Identifier / Identificador Universal Único) que es un identificador de 16 a 128 bits que define el tipo de atributo. Ejemplo: «Service», «Temperature»). La Bluetooth SIG define ciertos tipos de atributos generales. Las 41 capas superiores pueden definir nuevos tipos de atributos no especificados por la Bluetooth SIG.  Un valor que puede ser de longitud fija o variable. Representa la data que almacena el atributo. Tabla 3.2 Representación de un conjunto de atributos Manejador Tipo Valor 0x0009 «DeviceName» 0x54656d706572617475726 0x0022 «BatteryState» 0x04 0x0098 «Temperature» 0x0802 Los atributos tienen permisos los cuales pueden ser de lectura y/o escritura. Por lo tanto los valores de los atributos pueden requerir autenticación y autorización para su lectura y/o escritura. Los permisos y autorización son definidos en las especificaciones propias de los perfiles de Bluetooth LE. El ATT por sí mismo no conoce dichos permisos y no trata de interpretar los valores de los atributos para probarlos. Esto es trabajo del GATT y los perfiles superiores [13]. La permisología de los atributos está compuesta por combinaciones de permisos de acceso, autenticación y autorización [13]. Los permisos de acceso sobre un atributo pueden ser:  Lectura y/o escritura. Los permisos de autenticación sobre un atributo pueden ser:  Autenticación requerida.  No requiere autenticación. 42 Los permisos de autorización sobre un atributo pueden ser:  Autorización requerida  No requiere autorización. Los permisos de acceso son utilizados por el servidor para determinar si un cliente puede leer y/o escribir el valor de un atributo. Los permisos de autenticación son utilizados por el servidor para determinar si se requiere un enlace autenticado cuando un cliente intenta acceder a un atributo. También son usados para determinar si se necesita un enlace autenticado al momento de enviar una notificación o indicación al cliente. Los permisos de autorización determinan si un cliente necesita ser autorizado antes de acceder al valor de un atributo [13]. ATT posee características interesantes, como buscar atributos por UUID, obtener atributos en un rango de manejadores, entre otros, de manera tal que el dispositivo cliente no tiene que conocer los números de los manejadores de antemano ni los perfiles de nivel superior requieren codificarlos. Los manejadores de atributos se mantienen estables en cada dispositivo. Esto permite a los clientes poder almacenarlos en caché y por consiguiente usar menos paquetes (menos energía) para obtener los valores de los atributos luego de una primera lectura [13]. En la mayoría de los casos el cliente es el que toma la iniciativa e inicia la comunicación y el servidor responde. Sin embargo como ya se recalcó, ATT tiene capacidades de notificación e indicación, lo que le permite al servidor tomar la iniciativa de notificar al cliente si algún atributo ha cambiado, ahorrando al cliente la necesidad de consultar dicho atributo. Un dispositivo puede funcionar tanto de cliente como de servidor de manera concurrente. Un dispositivo Bluetooth solo puede poseer una única instancia de servidor. Para un cliente dado, el servidor debe poseer un conjunto de atributos. Los servidores pueden manejar múltiples clientes. Múltiples servicios pueden ser expuestos por un mismo servidor y esto se logra delimitando cada servicio en rangos de manejadores distintos. El descubrimiento de dichos rangos de manejadores es definido por las especificaciones de las capas superiores [13]. ATT nunca envía la longitud del valor del atributo; se encuentra implícito en el tamaño del PDU (Protocol Data Unit / Unidad de data de protocolo), y se espera que el cliente “conozca” el formato de dicho valor por los tipos de UUID que maneja. Al no enviar la longitud del valor de manera explícita se ahorran bytes, lo cual es muy importante en Bluetooth LE, 43 dado que el MTU (Maximun Transmission Unit / Máxima unidad de transferencia) es de tan solo 23 bytes. El pequeño tamaño del MTU de Bluetooh LE es un problema para atributos con valores de gran longitud. Para dichos casos ATT consta de las operaciones de lectura extendida (readlong) y escritura extendida (writelong), las cuales permiten transferir atributos de gran tamaño en varios trozos. ATT se adapta al MTU de la capa de enlace y no limita el tamaño del paquete al común menor denominador. Por ejemplo, un atributo de 40 bytes demanda una operación de lectura extendida sobre Bluetooth LE, pero puede ser leído automáticamente si el medio de transporte es Bluetooth clásico (BR/EDR) dado que su MTU es de 48 bytes [13]. Al ser un protocolo muy genérico, ATT ofrece muchas libertades y deja ciertas interrogantes como: ¿qué pasaría si los dispositivos ofrecen múltiples servicios? Solo existe un manejador de espacio ATT por cada dispositivo y múltiples servicios tienen que compartir dicho espacio en una manera cooperativa. Para dar solución a la interrogante propuesta Bluetooth LE cuenta con el GATT el cual delimita y da forma al uso de los atributos [13]. 3.9.6. GATT El perfil genérico de atributos también conocido por sus siglas en inglés como GATT define un esqueleto de servicio utilizando el protocolo ATT. Si bien, ATT define solo una estructura plana, los perfiles de Bluetooth requieren de estructuras jerárquicas para su funcionamiento. En líneas generales el GATT define como esos ciertos atributos ATT individuales deben ser agrupados para conformar servicios (estructuras jerárquicas) con propósitos particulares. GATT sirve como base a los perfiles Bluetooth LE de alto nivel [13]. Al igual que ATT, GATT presenta una arquitectura Cliente/Servidor (Ver Figura 3.10) en la cual los datos son encapsulados en servicios y expuestos como características. Un servicio GATT es una colección de características que definen una funcionalidad. Existen dos tipos de servicios en GATT[13]:  Servicio primario: es un servicio que expone las funcionalidades primarias o principales del dispositivo que lo posee. Un servicio primario puede ser incluido en otro servicio.  Servicios secundarios: son servicios subordinados por otro servicio ya sea primario o secundario. Un servicio secundario es solo relevante en el contexto de otro servicio. 44 Figura 3.10 Arquitectura cliente/servidor de GATT En un dispositivo, el marcador de inicio de un servicio es el atributo con el UUID igual a 0x2800. Todos los atributos siguientes pertenecen a dicho servicio hasta que otro atributo 0x2800 es encontrado. Por ejemplo un dispositivo con tres servicios puede tener la distribución de atributos presentada en la Tabla 3.3 [13]. Tabla 3.3 Ejemplo de una distribución de servicios GATT en un dispositivo Manejador UUID Descripción 0x0100 0x2800 Definición del servicio A … … Detalles del servicio 0x0150 0x2800 Definición del servicio B … .. Detalles del servicio 0x0300 0x2800 Definición del servicio C 45 … … Detalles del servicio Los atributos por sí solos no son “conscientes” de a cuál servicio pertenecen. Dado un atributo GATT se puede descifrar a qué servicio pertenece basándose en los rangos de los manejadores. Dichos rangos son descubiertos únicamente en base al UUID 0x2800 [13]. En la Tabla 3.3 para que un atributo pertenezca al servicio B, se debe encontrar entre los manejadores 0x0151 y 0x02ff. Mientras el UUID 0x2800 define servicios primarios, el UUID 0x2801 define servicios secundarios [13]. Para diferenciar los tipos de servicios el atributo delimitador (el atributo con UUID 0x2800 o 0x2801 en caso de ser un servicio secundario) contiene como valor el UUID del servicio específico [13]. EL UUID 0x2800, que es bien conocido por GATT, es usado para delimitar los servicios. Una vez que son encontrados, los atributos son leídos y el segundo UUID (el valor del atributo) contiene la especificación del servicio. De esta manera el cliente puede encontrar todos los servicios GATT sin conocer su tipo específico [13]. Como se mencionó anteriormente, cada servicio GATT está conformado por un conjunto de características. Las características almacenan valores de utilidad para el servicio así como su permisología. Por ejemplo, un termómetro puede tener la “temperatura” como característica, la cual es de solo lectura y una fecha/hora como marca de tiempo, la cual es tanto lectura como escritura (Ver Tabla 3.4) [13]. Tabla 3.4 Ejemplo de características de un servicio GATT Manejador UUID Descripción Valor 0x0100 0x2800 Definición del servicio de termómetro UUID 0x1816 0x0101 0x2803 Descripción UUID 0x2A2B Manejador del valor: 0x0102 46 0x0102 0x2A2B Valor de la temperatura 20 grados 0x0103 0x2803 Descripción UUID 0x2A08 Manejador del valor: 0x0104 0x0104 0x2A08 Fecha/Tiempo 1/1/1980 12:00 En la Tabla 3.4 se puede observar características de los servicios. El atributo principal de característica tiene el UUID 0x2803. Tal cual como pasa con los servicios, este atributo tiene como valor el UUID que describe la característica específica. Cada característica tiene al menos dos atributos: el atributo principal (0x2803) y un atributo que contiene el valor de la característica específica. El atributo principal conoce el manejador del atributo que contiene el valor y el UUID de la característica. El formato del valor de la característica se encuentra definido por su UUID. Si un cliente sabe cómo interpretar dicho UUID será capaz de leer dicha característica en cualquier servicio que la contenga. En caso contrario, si el cliente no sabe cómo interpretar cierto valor UUID lo ignora [13]. Aparte del valor, una característica puede tener otros atributos. En GATT estos atributos son llamados descriptores. Por ejemplo, si necesitamos identificar la unidad de temperatura de un termómetro necesitaremos un descriptor como el de la Tabla 3.4 [13]. 3.9.7. Casos de Uso Bluetooth LE proporciona un nuevo enfoque a los perfiles de aplicación que se han utilizado en las versiones anteriores. En la actualidad existe una gran variedad de dispositivos que manejan datos cuyos formatos son muy comunes entre sí. Como ejemplo de lo anterior podemos tener datos referentes a estados de encendido/apagado, temperaturas, contadoras, tasas, medidas, entre otros. Debido a lo anterior, surgió la necesidad de caracterizar la datos en estructuras reusables, lo que resulto en la introducción de una estructura orientada a objetos denominada servidor. Los nuevos perfiles que surgieron de dicha restructuración ahora son denominados casos de uso [11]. 47 Los casos de uso definen:  Características o estados.  Puntos de control.  Comportamientos.  Relaciones con otras clases (extensiones, inclusiones). A su vez las características definen:  Formatos de datos para una unidad u objeto dado.  Combinaciones con otras características. o Latitud + Longitud + Elevación = Posición. o Peso + Marca de tiempo = Registro de peso.  Ausencia de comportamiento, lo que simplifica las características y permite su reúso. Los casos de uso son asimétricos, solo se define el comportamiento del servidor. El servidor posee una máquina de estado robusta y bien formada y el comportamiento del cliente no se específica. Se plantea un patrón MVC (Model View Controller / Modelo Vista Controlador) en el cual [11]:  El modelo se define como el comportamiento del servidor.  Las vistas son las características que expone el servidor.  El controlador son las características que pueden ser sobrescritas. Los perfiles de Bluetooth LE tienen tres tendencias o clasificaciones [30]:  Perfiles para consumidores. Entre los más destacados de este tipo se tiene el perfil FindMe y el perfil Proximity. El perfil FindMe soporta aplicaciones de mecanismo de encadenado electrónico. Este mecanismo usualmente se refiere a un conjunto de dos piezas inalámbricas que le permite al usuario ubicar objetos perdidos o fuera de vista tecleando un código el cual hace que el objeto encadenado se identifique 48 (realiza algún tipo de alerta). El perfil Proximity soporta soluciones de bloqueo inalámbrico y así como procedimientos de autenticación. El bloqueo inalámbrico consiste de manera general en dos dispositivos, el dispositivo seguro (el que se quiere proteger) y la llave inalámbrica. Cuando la llave inalámbrica se aleja a una distancia determinada del dispositivo seguro, el mismo se bloquea. Igualmente cuando la llave inalámbrica se acerca al dispositivo seguro lo desbloquea.  Perfiles de cuidado de salud. En cuanto al cuidado de la salud Bluetooth LE se centraliza en el monitoreo vital. Actualmente podemos encontrar perfiles de termómetro de salud y monitoreo de ritmo cardíaco. Para el desarrollo y estandarización de estas aplicaciones de cuidado médico, la Bluetooth SIG cuenta con el apoyo de la Continua Health Alliance. Continua Health Alliance es una organización industrial, sin fines de lucro, compuesta por cerca de 240 compañías del ámbito médico y deportivo.  Perfiles de deportes. Los perfiles de deportes de Bluetooth LE se enfocan en el monitorio vital y de ubicación. En este ámbito la Bluetooth SIG también cuenta con el apoyo de la Continua Health Alliance. Es en este apartado donde Bluetooth LE encuentra su competencia más férrea, la solución de estándares industriales ANT. Bluetooth LE fue diseñado para aplicaciones donde la utilización del Bluetooth Clásico no era viable debido a las fuertes restricciones de energía. Todas estas aplicaciones tienen en común la incorporación de sensores (u otros dispositivos periféricos) alimentados por baterías de tamaño muy reducido y su envió de pequeñas cantidades de datos de manera infrecuente. Las aplicaciones basadas en proximidad fueron las primeras en ser implementadas en Bluetooth Low Energy. Por ejemplo, este tipo de aplicaciones de proximidad se pueden implementar en los siguientes escenarios [23]: Incorporando un chip Bluetooth LE en un reloj, el cual este en periódica comunicación con un teléfono celular también equipado con tecnología Bluetooth LE. Si el teléfono se mueve fuera del rango y no logra comunicarse con el reloj que utiliza el usuario, se bloqueara y el reloj emitirá una alarma. Esto evitara que el teléfono sea accidentalmente olvidado en algún lugar y demostrara ser un importante disuasivo para cualquier potencial ladrón. 49 La aplicación de alarma de proximidad puede ser incorporada a un laptop, la cual se bloqueara si el usuario se desplaza fuera de su rango. Tal vez el laptop podría desbloquearse cuando el usuario se encuentra en el rango determinado y presiona un botón en su reloj. Un dispositivo de seguridad infantil en el cual un reloj portado por un niño se comunique con el reloj de sus padres si se encuentran en un mismo rango y que dispare una alarma si el niño se aleja. Debido al bajo costo monetario y de mantenimiento de los sensores Bluetooth LE se impulsará su utilización en lugares públicos. Una aplicación clave puede ser un sistema de ubicación dentro de algún edificio o espacio cerrado (donde no exista señal GPS), en el cual un grupo de sensores ubicados a lo largo de la edificación emitan constante información acerca de su ubicación. Un teléfono celular equipado con la tecnología Bluetooth LE que transite por el rango de algunos sensores le desplegará dicha información a su dueño. En caso que el lugar público se un aeropuerto los sensores también podrían transmitir otro tipo de información adicional como tiempos de vuelo, puertas de abordaje, ofertas especiales de tiendas cercanas, entre otros [23]. Como ya se mencionó anteriormente, la tecnología Bluetooth LE ya se encuentra en uso en el ámbito deportivo. Por ejemplo, una persona que se encuentre ejercitándose puede utilizar su teléfono inteligente equipado con Bluetooth LE como centro de una PAN formada por sus zapatos de correr, una correa de ritmo cardíaco y un reloj deportivo, todos equipados igualmente con chips Bluetooth LE. Alternativamente, el reloj deportivo se puede comunicar con las maquinas del gimnasio que posean Bluetooth LE y transmitir toda la información recaudada al teléfono inteligente. Bluetooth LE también puede ser utilizado de manera cómoda en el hogar para monitorear el ritmo cardíaco y la presión sanguínea. En el hospital puede ser de gran utilidad a los doctores que requieren monitorear a sus pacientes en rehabilitación [23]. 50 3.9.8. Perfil de Monitoreo Cardíaco El presente trabajo se basa en el perfil de monitoreo cardíaco de atletas, por lo tanto se abordará sus características a continuación: El perfil de monitoreo de ritmo cardíaco es usado para permitir la obtención de datos de sensores que implementen el servicio de monitoreo cardíaco. La especificación de dicho perfil es compatible con cualquier dispositivo Bluetooth que incluya servicios GATT y contenga el controlador LE. Para el perfil de monitoreo cardíaco se definen los roles de transmisión y recepción que se deben poseer:  Para el sensor de monitoreo cardíaco (Transmisor), se debe poseer obligatoriamente el servicio de monitoreo cardíaco (Servicio que se encarga de notificar el pulso por segundo) y el servicio de información de dispositivo (Servicio que se encarga de notificar el nivel de batería y características como nombres y marca del dispositivo).  Recolector de los datos (Receptor): Debe implementar obligatoriamente el servicio de monitoreo cardíaco y opcionalmente el de información del dispositivo.  La característica vital del servicio de monitoreo cardíaco se denomina como medición de ritmo cardíaco. La misma es obligatoria dentro del servicio de monitoreo cardíaco en una especificación del mismo. El UUID del servicio de monitoreo cardíaco tendrá el valor de 0x180D [16] y la característica de medición del mismo tendrá el valor de 0x2A37 [16]. La característica de ritmo cardíaco se transmitirá siguiendo el esquema del paquete de la Figura 3.11. 51 Figura 3.11 Estructura del paquete. Servicio monitoreo cardíaco.  En la Figura 3.11 se exponen los campos del paquete de la característica de servicio de medición de ritmo cardíaco, el detalle de los mismos se lista a continuación [16]:  FO (Formato del valor de ritmo cardíaco): Este campo indica si el valor del ritmo cardíaco se encuentra especificado en un entero sin signo de 8 bits (valor 0) o un entero sin signo de 16 bits (valor 1), ambos en unidades de latidos por minuto.  Estado (Estado del sensor de contacto): o Valor 0 (0x00): La propiedad del sensor de contacto no se encuentra soportada por la conexión actual. o Valor 1 (0x01): La propiedad del sensor de contacto no se encuentra soportada por la conexión actual. o Valor 2 (0x10): La propiedad del sensor de contacto es soportada, sin embargo el contacto no es detectado. o Valor 3 (0x11): La propiedad del sensor de contacto es soportada y el contacto ha sido detectado.  EG (Bit de energía consumida): Indica si el campo de energía consumida se encuentra presente (Valor 1) o no (Valor 0) en unidades de Kilo Jules. 52  RR (Intervalo RR): Indica si el campo Intervalo RR se encuentra en el presente en el paquete (Valor 1) o no (Valor 0) en unidades de 1/1024 segundos.  Valor de ritmo cardiiaco: Dependiendo del campo FO este valor tendrá una longitud de 8 o 16 bits donde se almacenará el valor del ritmo cardíaco en un entero sin signo de 8 o 16 bits respectivamente.  Energía consumida: Dependiendo del campo EG este valor estará presente y tendrá una longitud de 16 bits donde se almacena un entero sin signo que envía la energía consumida por el paquete en unidades Kilo Jules.  Intervalo RR: Dependiendo del campo RR este campo almacenará en un entero sin signo de 16 bits el valor del tiempo transcurrido entre cada detección del ritmo cardíaco. Cabe destacar que los campos en la Figura 3.11 se encuentra en orden de octeto más significativos a menos significativos. 53 4. Metodología y Herramientas 4.1. Metodología de Desarrollo de Software Scrum Para estructurar, plantear y controlar el proceso de desarrollo de la aplicación fue utilizada la metodología Scrum, la cual se caracteriza por ser una metodología de desarrollo iterativa e incremental. El principio fundamental del Scrum es reconocer que durante la elaboración del proyecto los clientes pueden cambiar de opinión acerca de lo que realmente necesitan. Estos cambios no esperados no pueden ser canalizados fácilmente. Scrum acepta que el problema no puede ser totalmente definido o entendido en su totalidad desde el inicio del proyecto, por lo tanto se enfoca en maximizar la habilidad del equipo para realizar entregas rápidas y así poder responder a requerimientos emergentes o no planeados. Scrum abre las puertas a organizaciones a ser capaces de auto organizarse por su control de puntos, tareas específicas y granuladas, siguiendo las pautas del desarrollo ágil. La clave principal del Scrum es el planteamiento en la duración del proyecto a desarrollar, de tal manera que el cliente o interesado se encuentre en total conocimiento de la velocidad del grupo de desarrolladores y las fechas estimadas de entrega del proyecto. Con pequeñas reuniones diarias y entregas parciales se logran los tiempos estimados y se pueden capturar requerimientos y funcionalidades no consideradas en el inicio del proyecto. La unidad básica de desarrollo del Scrum se denomina sprint. La misma tiene una duración fija preestablecida. Generalmente el tiempo varía entre una semana y un mes. Cada sprint es precedido por una reunión de planificación, donde se definen las tareas y su puntaje estimado. Este conjunto de tareas representa el objetivo del sprint. 4.1.1. Roles Dueño de Producto (Product Owner) El dueño de producto se encarga de hablar con el cliente y realizar el levantamiento de los requerimientos. Dichos requerimientos son añadidos y priorizados como historias de usuarios en el backlog (Ver Artefactos). Equipo de Desarrollo (Development Team) El equipo de desarrollo se encarga del realizar las actividades descritas en el backlog. Su objetivo es realizar entregas potenciales del producto al final de cada sprint. 54 Maestro Scrum (Scrum Master) El maestro scrum es el encargado de asegurar el correcto cumplimiento de la metodología. No ejerce el papel de líder de equipo, en su defecto cumple con el rol de facilitar al equipo de desarrollo ayuda ante cualquier impedimento que dificulte la entrega pautada al final de cada sprint. 4.1.2. Reuniones Diaria (Daily Scrum) Cada día durante un sprint se lleva a cabo una reunión corta, de a lo sumo quince minutos, para la discusión de las tareas realizadas o por realizar. En dicha reunión cada miembro del equipo responde las siguientes preguntas:  ¿Qué has hecho desde ayer?  ¿Qué tienes planeado hacer hoy?  ¿Existe algún factor que te impida realizar tu trabajo? Refinamiento del Backlog (Backlog Refinement) El objetivo de esta reunión es crear nuevas historias, descomponer historias existentes en tareas más pequeñas, priorizar las mismas y asignarle puntos de acuerdo a su complejidad. Esta reunión es necesaria para poder tener control de las tareas a realizar en el próximo sprint. Planificación de Sprint (Sprint Planning Meeting) Esta reunión se lleva a cabo justo antes del comienzo de un nuevo sprint. En la misma se define el trabajo a ser completado en el siguiente sprint. El resultado de esta reunión es el backlog del próximo sprint. 55 Fin de Ciclo (End of Cycle) Al final de cada sprint se llevan a cabo dos reuniones, la revisión del sprint pasado y su retrospectiva. En la reunión de revisión se analizan las tareas que no pudieron ser completadas, y se presenta el trabajo completado al dueño de producto. En la reunión de retrospectiva los miembros del equipo de desarrollo junto al maestro Scrum discuten sobre el pasado sprint en vía de realizar mejoras a la metodología y al trabajo en general. 4.1.3. Artefactos Backlog del Producto (Product Backlog) El backlog del producto es una lista ordenada de requerimientos necesarios para completar el sistema de manera satisfactoria. Los elementos de la lista son ordenados por el dueño del producto basado en factores como riesgo, valor de negocio, dependencias, entre otros. En general el backlog del producto contiene el “Que” se quiere desarrollar, almacenado en el orden en el cual debe desarrollarse. Cada tarea del backlog tiene un valor estimado de esfuerzo tanto a nivel de negocio como de desarrollo. Estos valores son conocidos como puntos de historia y siguen la secuencia de Fibonacci. Los puntos de historia ayudan al dueño del producto en el establecimiento del orden del backlog. Backlog del Sprint (Sprint Backlog) El backlog del Sprint es el conjunto de tareas planificadas para el sprint. Estas tareas son seleccionadas del backlog del producto y su cantidad depende de la velocidad del equipo de desarrollo. La velocidad del equipo de desarrollo proviene del promedio de puntos realizados por el equipo en sprints anteriores. 4.2. Herramientas de Software Para la realización de la aplicación un conjunto de programas, librerías y tecnologías fueron integrados de tal manera de llevar a cabo los objetivos planteados en este documento. A continuación se listan las herramientas de software utilizadas. 4.2.1. Nodejs Nodejs es una plataforma de software para el desarrollo ágil de aplicaciones de red escalables. Se encuentra construido a partir del motor Javascript V8 desarrollado por Google el 56 cual es implementado en su navegador web Chrome. Utiliza Javascript como lenguaje de programación. Se basa en un modelo de entrada y salida no bloqueante orientado a eventos. Esto permite implementar aplicaciones de intercambio intensivo de datos en tiempo real. Contiene un servidor HTTP integrado lo que permite ejecutar un servidor web sin la necesidad de utilizar algún software adicional. El servidor es totalmente programable lo cual otorga un mayor control sobre su funcionamiento [22]. 4.2.2. MySQL MySQL es un sistema código abierto para el manejo de base de datos relacionales. En la actualidad se encuentra administrado por Oracle. Su código fuente está escrito en los lenguajes C y C++. MySQL trabaja bajo un esquema de múltiples hilos y múltiples usuarios. Es un sistema multi-plataforma (Unix, Windows, Mac OS) y multi-lenguaje (existen librerías de C, Pyhton, PHP, Java, Nodejs entre otra, disponibles para poder conectarse con MySQL) [28]. Es comúnmente utilizado en el ámbito de las aplicaciones web dado a su alto nivel de rendimiento y su característica de ser un software código abierto. MySQL permite la creación de base datos relacionales en servidores web para el almacenamiento de los datos o procesos automatizados [29]. 4.2.3. JavaScript JavaScript es un lenguaje de programación interpretado que puede ser insertado en documentos HTML y procesado por todos los navegadores web actuales [18]. Es un lenguaje de programación multiparadigma, soporta programación orientada a objetos, imperativa y funcional. Comúnmente se utiliza en aplicaciones web para brindar una mayor interacción con el usuario final, controlar el navegador, realizar comunicaciones asíncronas entre el navegador (cliente) y el servidor. Uno de sus principales usos consiste en alterar dinámicamente el contenido desplegado de las aplicaciones web para simular comportamientos simulares a aplicaciones de escritorio [14]. Actualmente también es utilizado para la programación del lado del servidor (Nodejs). 4.2.4. Noble Noble es un módulo desarrollado para Nodejs que permite la interacción con la pila de protocolos de Bluetooth 4.0. Se encuentra desarrollado para trabajar en plataformas Mac OS X 57 y Linux. Noble brinda la capacidad de escanear dispositivos Bluetooth y ejecutar acciones propias de la versión 4.0 de Bluetooth como listar servicios y características. También permite leer, escribir y recibir notificaciones sobre las características de los dispositivos [21]. 4.2.5. Jade Jade es un motor de plantillas desarrollado en Javascript y diseñado originalmente para trabajar con Nodejs, sin embargo, puede ser utilizado con otras plataformas. Su funcionamiento consiste en la compilación de un archivo escrito en un lenguaje de alto nivel (Jade), normalmente más fácil de leer y mantener, la cual genera documentos derivados del XML como HTML, RSS, entre otros [17]. 4.2.6. Bootstrap Bootstrap es un framework de código abierto desarrollado por Twitter. Es una combinación de código CSS y Javascript diseñado para ayudar a construir componentes para la interfaces de las aplicaciones web. Brinda la capacidad de construir rápidamente interfaces elegantes y ricas en funcionalidad. Una de las características más llamativas de Bootstrap es el diseño adaptable el cual le permite a las interfaces ajustarse dinámicamente a la resolución en la cual son presentadas. Bootstrap fue diseñado para soportar HTML5 y CSS3 [27]. 4.2.7. Angularjs Angularjs es un framework Javascript de código abierto mantenido por Google para el desarrollo de aplicaciones web dinámicas. Se adapta muy bien en el desarrollo de aplicaciones web de una página. Su objetivo es facilitar la programación y las pruebas de aplicaciones del lado del cliente a través de la introducción de una estructura modelo, vista y controlador MVC. Básicamente la librería de angular lee el HTML en búsqueda de etiquetas especiales las cuales proporcionan las instrucciones necesarias para vincular ciertos elementos de la página con un modelo representado por variables Javascript. El desarrollador define controladores para manipular los modelos y mantener la lógica de la aplicación. Adicionalmente las variables Javascript que mantienen los modelos pueden ser definidos manualmente o pueden ser obtenidos de recursos JSON estáticos o dinámicos [2]. 58 4.2.8. Git Git es un software libre que se encarga del control distribuido de versiones y la administración de código fuente. Fue inicialmente diseñado y desarrollado por Linus Torvalds para la administración del código fuente del kernel de Linux en el 2005. Cada directorio de trabajo en Git es un repositorio completo con toda la historia sobre cada uno de sus archivos y con plena capacidad de hacer seguimiento de versiones. No depende de acceso a la red ni de un servidor centralizado [15]. 4.2.9. Bitbucket Bitbucket es un servicio web colaborativo desarrollado por Atlassian que permite el alojamiento, administración y la compartición de repositorios Git en la nube. Bitbucket ofrece planes comerciales y cuentas gratis. Se encuentra desarrollado bajo el lenguaje de programación Phython [3]. 4.2.10. Ubuntu Ubuntu es un sistema operativo basado en el kernel de Linux y su distribución Debian desarrollado y mantenido por la comunidad de usuarios. Es distribuido como software libre y de código abierto [24]. La filosofía de Ubuntu se basa en los siguientes principios:  El usuario debe tener la libertad de descargar, ejecutar, copiar, distribuir, estudiar, compartir, cambiar y mejorar su software para cualquier propósito, sin tener que pagar derechos de licencia.  Debe ser capaz de utilizar su software en el idioma de su elección.  Debe ser capaz de utilizar todo el software independientemente de su discapacidad. http://doc.ubuntu-es.org/Filosof%C3%ADa_Ubuntu 59 4.2.11. BlueZ BlueZ es la implementación de la pila de protocolos de Bluetooth para sistemas Linux. BlueZ brinda soporte para el núcleo de las capas y protocolos de Bluetooth. Es flexible, eficiente y fue implementado de manera modular [9].  Entre sus características se pueden encontrar:  Procesamiento de datos multi-hilos  Soporte para múltiplos dispositivos Bluetooth.  Interfaz estándar de sockets para todas las capas.  Soporte de seguridad a nivel de servicio y dispositivo. A partir de la versión 4.1 BlueZ cuenta con soporte para la versión 4.0 de Bluetooth. 4.3. Herramientas de Hardware Para la captura y transmisión del ritmo cardíaco se utilizaron los siguientes componentes de hardware. 4.3.1. Dongle Bluetooth dual-mode. Es un adaptador USB 2.0 capaz de comunicarse con dispositivos Bluetooth 4.0 o con versiones anteriores. 4.3.2. Polar H7 Bluetooth Smart Heart Rate Sensor. Es un sensor de ritmo cardíaco que utiliza Bluetooth 4.0 para la transmisión de sus lecturas a cualquier otro dispositivo Bluetooth 4.0 mediante el perfil estándar de ritmo cardíaco. 60 5. Diseño e Implementación La implementación final del sistema desarrollado en el presente trabajo de investigación (Ver Figura 5.1), consta de un servidor de Nodejs (Ver Nodejs) centralizado corriendo sobre un sistema operativo Ubuntu 12.10 (Ver Ubuntu). En el cual se encuentra conectado un Dongle USB Bluetooth que permite la captura de los datos enviados desde las correas Polar H7. Una vez establecida la comunicación del dongle con las correas transmisoras, el servidor Nodejs se encarga de desplegar en el navegador la interpretación de los datos obtenidos de tal manera que sean entendibles para un usuario final. Figura 5.1 Implementación final del sistema de monitoreo cardíaco. 61 5.1. Requerimientos del Sistema El requerimiento general del sistema plantea la creación de una aplicación para computadoras de escritorio enfocada a la captura del ritmo cardíaco (correas de pecho transmisoras) mediante un receptor Bluetooth 4.0 conectado a la misma por un puerto USB. La aplicación debe ser capaz de mostrar de manera clara y concisa valores útiles para la medición del rendimiento de los atletas que usan las correas transmisoras, además de realizar la persistencia de los datos obtenidos. 5.1.1. Requerimientos Funcionales Los requerimientos funcionales para la creación de la aplicación se listan a continuación:  La aplicación debe permitir la captura de la medición del ritmo cardíaco de múltiples correas transmisoras.  La aplicación deberá tener una interfaz para ingreso de usuarios. En la misma se almacenará información relevante para el cálculo de las calorías quemadas. Sexo, edad y peso son las características necesarias.  La aplicación deberá tener una interfaz de configuración de valores por defecto, que servirán de guía en el cálculo de las calorías quemadas para aquellas personas que no gusten compartir sus datos personales.  La aplicación deberá poseer una interfaz de grupos donde se agreguen usuarios. Dicha interfaz permitirá el control de usuarios según una clase en común o un horario específico.  La aplicación debe ser capaz de mostrar un historial de muestras capturadas. Dichas muestras le permitirán a los usuarios del sistema observar su progreso en cuanto a calorías quemadas y promedio de ritmo cardíaco según actividades pasadas. 62 5.1.2. Requerimientos no Funcionales Los requerimientos no funcionales para la creación de la aplicación se listan a continuación:  Si algún error ocurre durante la transmisión de los datos, el sistema deberá ser capaz de mantener un estado cercano para hacer una recuperación y continuar con la captura.  Un usuario sin experiencia sobre la aplicación deberá poder usarla. Por lo tanto, la aplicación deber ser intuitiva y fácil de usar.  Las correas para la captura de los datos deben transmitir usando Bluetooth 4.0 y su perfil de medición de ritmo cardíaco. 5.2. Diseño de la Solución En base a la sección anterior se consideró como punto de partida la captura de los datos enviados por las correas Bluetooth 4.0. Para este objetivo se seleccionó una correa de pecho marca Polar H7, debido a su alta popularidad y por ser una de las marcas más reconocidas en cuanto monitoreo físico de atletas a nivel mundial. Luego de la captura de los datos, el segundo punto a desarrollar es la interfaz para mostrarlos en una página web usable. Este despliegue de información de las correas detectadas es automático, no existe la necesidad de que el usuario configuré algún tipo de PIN o tenga que realizar una búsqueda de los dispositivos cercanos. Esto se logra haciendo un escaneo constante sobre los dispositivos cercanos que se encuentran enviando el perfil de monitoreo cardíaco a una distancia cercana. En cuanto a los usuarios y/o atletas, se debe permitir el ingreso de los mismos al sistema, es decir, realizar la persistencia de sus datos en una base de datos, de tal manera de poder estimar las calorías quemadas según su peso, edad y sexo. Para aquellos usuarios que no quieran compartir sus datos personales, el sistema cuenta con una interfaz de características predefinidas donde el administrador del sistema podrá configurarlas. Adicionalmente el sistema cuenta con una interfaz para configuración de grupos, la cual permitirá organizar al administrador del sistema los usuarios que se encuentren registrados y poder clasificarlos según su criterio. 63 En cuanto al cálculo de las calorías quemadas, se realizan por tiempo de ejecución de algún tipo de ejercicio y existe un contador que se puede configurar según se tenga estimado el tiempo de una sesión de entrenamiento. Dado el tiempo de duración de la sesión de entrenamiento, la aplicación deberá realizar escrituras periódicas en la base de datos, de tal manera de poder tener algún punto de partida cercano en el dado caso de que algún error inesperado ocurra. Los datos almacenados por las sesiones de ejercicios deben tener alguna vista para la visualización de los históricos según: grupos, usuarios y día de entrenamiento. De esta manera se podrá saber el avance y rendimiento de los atletas en el tiempo. La interfaz principal del sistema tendrá dos modos de visualización, de lista y en forma de cuadros. De esta manera el administrador podrá decidir cuál es la mejor opción a visualizar según el tamaño de la pantalla en la cual se encuentra la aplicación desplegándose. La integración de las vistas y componentes mencionados anteriormente, unidos a las correas de pecho transmisoras y al receptor Bluetooth 4.0, son los que conforman el sistema en el cual se centra este trabajo especial de grado. 5.3. Diagrama de Casos de Usos Una vez descrito el diseño de la solución, se procede al desarrollo del diagrama de casos de uso, el cual sirve para mostrar las funciones de un sistema desde el punto de vista de sus interacciones con el exterior sin entrar ni en la descripción detallada ni en la implementación de sus componentes. 5.3.1. Caso de Uso de Nivel 0 En este nivel se específica y se modela el sistema de manera general, mostrando la interacción de los actores y el rol que desempeñan en el sistema (Ver Figura 5.2 y Tabla 5.1 Actores caso de uso Nivel 0). 64 Figura 5.2 Caso de uso Nivel 0 Tabla 5.1 Actores caso de uso Nivel 0 Atleta: Representado por el usuario que portará la correa transmisora del ritmo cardíaco. Administrador: Actor que representa el encargado del sistema, introduce los datos de los atletas e interactúa de forma directa con la aplicación. 65 5.3.2. Caso de Uso de Nivel 1 Este nivel muestra mayor profundidad y detalles sobre la interacción de los actores y las funcionales del sistema (Ver Figura 5.3, Figura 5.4, 66 Tabla 5.2, Tabla 5.3, Tabla 5.4, Tabla 5.5 y Tabla 5.6). Figura 5.3 Caso de uso Nivel 1. Visualización de Datos 67 Tabla 5.2 Caso de uso Nivel 1. Activar Correa Caso de uso: Activar Correa. Actor: Atleta. Flujo Básico: a) El usuario ajusta la correa de pecho un poco más arriba de su abdomen. b) Coloca la correa en la banda de pecho para iniciar la transmisión. Pre Condiciones: La correa transmisora debe tener batería. Caso de uso: Visualizar Datos. Actor: Atleta. Flujo Básico: El usuario mientras realiza actividad física monitorea su avance según la intensidad del ejercicio. Pre Condiciones: a) La correa transmisora debe estar correctamente ajustada al atleta para poder visualizar los datos. b) La aplicación debe estar posicionada en la vista de monitores activos. 68 Tabla 5.3 Caso de uso Nivel 1. Desactivar Correa Caso de uso: Desactivar Correa. Actor: Atleta. Flujo Básico: a) El usuario remueve el transmisor de la correa. b) Coloca la correa en la banda de pecho para iniciar la transmisión. Pre Condiciones: La correa transmisora debe estar enviando datos en el momento de desactivarla. Post Condiciones: El usuario puede volver a activar la transmisión de la correa en dado caso que lo necesite. 69 Figura 5.4 Caso de uso Nivel 1. Administración del sistema Tabla 5.4 Caso de uso Nivel 1. Configurar Datos Caso de uso: Configurar Datos. Actor: Administrador. Flujo Básico: a) El usuario administrador configura los datos tanto de usuarios como grupos. b) Se preparan cada correa la información para el cálculo de las calorías quemadas según el usuario que la porte. Pre Condiciones: El servidor web debe estar encendido. Post Condiciones: Los cambios realizados pueden ser borrados o editados. 70 Tabla 5.5 Caso de uso Nivel 1. Iniciar Sesión Caso de uso: Iniciar Sesión. Actor: Administrador. Flujo Básico: El usuario administrador realiza la configuración para el inicio se sesión, indicando: Nombre, duración en horas y el grupo. Pre Condiciones: El grupo y los usuarios que entrarán en la sesión de ejercicios deben estar configurados en el sistema. Tabla 5.6 Caso de uso Nivel 1. Detener Sesión Caso de uso: Detener Sesión. Actor: Administrador. Flujo Básico: El usuario administrador presiona el botón de terminar sesión actual, cerrando de esta manera la sesión activa de entrenamiento. Pre Condiciones: Debe existir una sesión activa. 71 5.4. Diagrama Entidad Relación La Figura 5.5 muestra el diagrama de entidad relación de la aplicación con sus tipos de datos. Figura 5.5 Diagrama de Entidad Relación. 72 5.4.1. Tablas Usadas en el Sistema En la construcción de la aplicación fue necesario el desarrollo de un conjunto de tablas que conforman la lógica que hace posible el funcionamiento y la persistencia de la aplicación, las mismas fueron diseñadas para soportar todos los objetivos planteados en el presente trabajo. Dichas tablas serán explicadas a continuación: Tabla Session Mantiene la información necesaria para cada sesión. Interpretando los registros de la misma, es posible saber si existe una sesión activa o no. Almacena duración y hora de inicio de la sesión para poder calcular el cronómetro de la sesión activa. Tabla SessionDet Sus registros son los que hacen posible identificar un usuario en una sesión, así como poder reestablecer la sesión activa en caso de algún error inesperado. Strap Tabla que almacena las correas que se han asociado con el receptor Bluetooth 4.0 donde se encuentre corriendo la aplicación. De esta manera es posible saber el ultimo usuario que uso una correa específica y ahorrar tiempo al administrador en la configuración de las mismas en cada sesión de ejercicio. Group En esta tabla se almacena la organización por grupos del sistema, que son usados en las sesiones para un mayor control de los usuarios registrados en las mismas. User En esta tabla se almacena la información de los usuarios registrados en el sistema, así como sus características principales que servirán de ayuda para los cálculos de calorías quemadas en la aplicación. 73 Group_users Almacena la relación entre los grupos y sus usuarios, de tal manera que se pueda saber que usuarios pertenecen a un grupo dado y permitir que en varios grupos este presente un mismo usuario. DefaultConfig En esta tabla se almacenan los datos por defecto para el cálculo de las calorías quemadas en el sistema. Estos son usados si los campos del usuario registrado se encuentran vacíos o si se trata de un invitado que no será registrado en el sistema. 5.4.2. Lógica de Funcionamiento de la Aplicación Al momento de realizar una captura se realiza una búsqueda en la tabla Session para saber si existe una sesión activa. Si no existe una sesión activa, se pide al usuario la información necesaria para poder hacer la inserción del registro correspondiente a la sesión que se activará inmediatamente. Luego de que la sesión se encuentre activa, a las correas se les configurará automáticamente las características del último usuario registrado en el sistema que haya usado dicha correa. Si se desea cambiar el usuario de una correa específica es posible, ya que se podrán asociar a las correas cualquier usuario perteneciente al grupo de la sesión activa. Luego de la configuración necesaria para cada correa y usuario, el sistema escribirá aproximadamente cada 10 segundos en la tabla SessionDet el registro correspondiente a la captura del promedio de ritmo cardíaco y las calorías quemadas para cada atleta. Este proceso se repetirá tanta cantidad de veces como sea necesario, de tal manera de tener una muestra cercana en el tiempo. Haciendo uso de estos registros en la tabla SessionDet, es posible restaurar el estado de la sesión activa y sus usuarios de manera automática luego de algún error imprevisto. Al finalizar el cronometro contador del tiempo restante de la sesión activa, o haciéndolo manualmente el sistema detendrá la sesión activa, realizando una operación de actualización sobre el registro correspondiente a dicha sesión en la tabla Session, indicando así la culminación de la misma y la finalización del cálculo de las calorías quemadas. 74 5.4.3. Implementación Detallada del manejador Bluetooth La captura de los datos enviados desde la las correas transmisoras es realizada por el servidor donde se encuentra instanciado el servidor web y el servidor de captura de datos Bluetooth 4.0 llamado Noble. Noble es el encargado de lidiar con las correas detectadas tanto en recibir los datos enviados, así como enviar a través de sockets notificaciones al servidor web. Figura 5.6 Método manejador de estados del receptor Bluetooth. Como se detalla en la Figura 5.6, en el método stateChange(), se captura el estado del adaptador Bluetooth 4.0 conectado al sistema. Teniendo en cuenta que si su estado es poweredOn es posible comenzar a escanear a los dispositivos que exporten el servido de monitoreo cardíaco, identificado con el UUID 180d [16]. 75 Figura 5.7 Método de notificación de escaneo Bluetooth. Como se detalla en la Figura 5.7, los métodos scanStart() y scanStop() realizan la función de escanear o detener la búsqueda de dispositivos de Bluetooth 4.0. Los mismos se ejecutan periódicamente de forma constante y así el sistema se asocie o desasocie de las correas transmisoras del ritmo cardíaco según sea el caso. 76 Figura 5.8 Métodos de captura del servicio de ritmo cardíaco. En la Figura 5.8 se detalla el proceso para la captura de la característica del monitoreo cardíaco enviado por las correas transmisoras. Cabe destacar que los servicios que se descubren por el método discover() se encuentran filtrados por la búsqueda iniciada en la Figura 5.6, por lo que solo se descubrirá el servicio de monitoreo cardíaco 180d. Luego del descubrimiento de los servicios exportados, se pasa a la búsqueda de las características, en 77 este caso las características para el servicio 180d. El método encargado de la misma es characteristicsDiscover(). El método read() se encarga de extraer de la característica el paquete con la información del valor del ritmo cardíaco, el cual será enviado mediante un socket al servidor web, el mismo tendrá la tarea de desplegar la información en la interfaz y hacer los cálculos necesarios. Esto se logra haciendo uso del método sockets.emit(). 5.4.4. Implementación de las Interfaces Las interfaces de la aplicación están diseñadas para que sean de fácil uso y entendimiento. A continuación se realiza una breve explicación de las mismas: Figura 5.9 Interfaz para manejo de usuarios. En la Figura 5.9 se puede observar la interfaz de visualización de usuarios del sistema, en la cual se pueden editar, crear y eliminar usuarios. Esta interfaz se realizó en forma de malla para poder aprovechar mejor el espacio de la pantalla en la cual se visualice. 78 Figura 5.10 Formulario de ingreso de usuario. Para la creación y edición de los usuarios se creó un formulario del tipo modal, el cual se puede observar en la Figura 5.10. Los campos sombreados en rojo son requeridos y en los campos de peso, sexo y edad se precargan los valores predefinidos en la interfaz de la Figura 5.14. 79 Figura 5.11 Interfaz de manejo de Grupos En la Figura 5.11 se puede observar la interfaz para creación y organización de grupos y sus usuarios. En la misma se pueden remover o agregar usuarios de un grupo existente, hacer un grupo específico por defecto en el sistema o incluso borrar un grupo con la relación de todos sus usuarios. 80 Figura 5.12 Formulario de ingreso de grupos. Para la creación de un grupo nuevo se creó la interfaz tipo modal representada en la Figura 5.12. Los campos requeridos están sombreados en color rojo. 81 Figura 5.13 Interfaz de información de leyenda para el entendimiento de colores de intensidad del ritmo cardíaco. Para la leyenda de colores según la intensidad del ritmo cardíaco se creó una tabla del tipo leyenda (Ver Figura 5.13). En la misma se encuentra una breve descripción de los rangos de intensidad del ritmo cardíaco y su correspondencia en colores para la aplicación. 82 Figura 5.14 Interfaz de configuración de valores predeterminados para el cálculo de calorías. Para la configuración por defecto de los usuarios se generó una vista donde se podrán editar los valores (Ver Figura 5.14). Dichos valores se encontrarán por defecto en el formulario de nuevos usuarios (Ver Figura 5.10) y en las correas que no tengan algún usuario asignado. 83 Figura 5.15 Interfaz de visualización de monitores cardíacos en modo rectangular. Figura 5.16 Interfaz de visualización de monitores cardíacos en modo lista. En cuanto a la interfaz de las correas transmisoras activas en el sistema, se decidieron realizar dos tipos de interfaces. La interfaz en forma rectangular o de libro se encuentra diseñada para desplegar la aplicación en pantallas grandes y anchas (Ver Figura 5.15), mientras que la interfaz en forma de lista se encuentra diseñada para pantallas más pequeñas donde el espacio es un factor crítico (Ver Figura 5.16). 84 Figura 5.17 Interfaz de visualización de sesiones del sistema. La Figura 5.17 muestra la interfaz de visualización de sesiones, la misma tiene varios filtros en los cuales se pueden especificar el usuario, grupo o día por el que se desea filtrar los registros almacenados en la base de datos. Los valores a mostrar en esta interfaz son el ritmo cardíaco promedio y las calorías quemadas en la sesión de ejercicios en la cual se realizó la captura. 85 6. Pruebas y Análisis de los Datos 6.1. Pruebas de Funcionalidad en Ambiente Simulado El objetivo de estas pruebas es validar el comportamiento del sistema en relación a sus requerimientos y especificaciones. Estas son realizadas principalmente para detectar posibles fallas o errores generados en la fase de programación. Para la aplicación desarrollada fueron realizadas pruebas en ambientes estacionarios sin realizar actividad física, ya que las correas envían datos desde que se conectan al atleta este o no realizando actividad física. El ambiente utilizado para las pruebas de funcionalidad fue un computador con el sistema operativo Ubuntu y utilizando la librería con soporte de Bluetooth 4.0 llamada BlueZ. A continuación sus especificaciones.  Máquina con Sistema Operativo Ubuntu o Versión del sistema operativo Ubuntu 12.04. o 2 GB de Memoria RAM. o 20 GB de Memoria Interna.  Librería BlueZ o Versión de la librería 4.101 Una vez definidos el ambiente y la librería para soporte de Bluetooth 4.0, se pudo dar inicio a las pruebas. En general las pruebas de funcionalidad realizadas fueron las siguientes:  Instalación de la aplicación: Debido a que existen una serie de tecnologías necesarias, es requerido realizar la instalación de Nodejs en su versión 0.8.25 y MySQL Server en su versión 6.0.7. De esta manera, el Servidor Web y el código del Servidor Manejador del dispositivo Bluetooth podrán ejecutarse.  Inicio y finalización del Servidor Web y Servidor Manejador Bluetooth: Para dar inicio a las funciones del Servidor Web y el Servidor Manejador Bluetooth es necesario realizar la instalación de los siguientes paquetes para Nodejs: o Jade: Ejecutando el comando, npm install jade o Orm MySQL: Ejecutando el comando, npm install orm 86 o Noble: Ejecutando el comando, npm install noble o Socket.io: Ejecutando el comando, npm install socket.io Luego de la instalación de todas las dependencias el servidor debería poder iniciarse como se muestra en la Figura 6.1. Figura 6.1 Estado inicial por consola del Servidor Web.  Captura de datos: Para la captura de datos se realizaron pruebas sencillas bajo un nivel de esfuerzo físico muy bajo. De dichas pruebas se obtuvieron resultados como los que se pueden observar en la Figura 6.2. 87 Figura 6.2 Resultados de pruebas en esfuerzo físico mínimo.  Almacenamiento de los datos: Se comprueba mediante consultas SQL que el almacenamiento de los datos se encuentre presente en MySQL (Ver Figura 6.3), esto debido a que los cálculos son realizados en el navegador web del lado del cliente y son enviados al servidor mediante solicitudes de escritura al ORM. Figura 6.3 Ejecución de consulta SQL sobre la Tabla SessionDet. 88 6.2. Pruebas de Funcionalidad en Ambiente Real Para las pruebas en ambiente real se plantearon tres escenarios, en los cuales se mide el alcance de la aplicación y su efectividad con respecto al ambiente donde se realizan las mismas. A continuación se listan las pruebas realizadas según en lugar donde se llevaron a cabo y el tipo de ejercicio realizado:  Barras y paralelas: o Lugar: La carlota. o Día: 24 de septiembre de 2013. o Actores: Diego Pérez y Gabriel Araujo. o Duración de la prueba: 1 hora. En esta prueba se logró obtener un registro constante de los datos, ya que los actores ser encontraban muy cerca del laptop que se encargaba de recolectar el ritmo cardíaco de las correas transmisoras. Cabe destacar que en estos ejercicios existen períodos de descanso, por lo que se calculan las calorías quemadas según el promedio del ritmo cardíaco. En la Figura 6.4 se puede observar el comportamiento de los valores de los actores. Figura 6.4 Resultado de prueba ante ejercicios de barras y paralelas. 89  Fútbol sala: o Lugar: Macaracuay. o Día: 26 de septiembre de 2013. o Actores: Edward De Sousa, Diego Pérez y Gabriel Araujo. o Duración de la prueba: 1,5 horas. En la siguiente prueba no se logró obtener un registro constante de los participantes, dado que a medida que los actores se alejaban del laptop receptor del ritmo cardíaco, la señal se perdía. Sin embargo el sistema era capaz de seguir estimando según el promedio de las capturas de los actores cuando se movilizaban en la cancha a menos de unos quince metros del receptor. Como se puede observar en la Figura 6.5, los datos fueron recolectados pero el ritmo cardíaco no es lo suficientemente preciso por la pérdida de muestras cuando los actores se encontraban lejos del receptor. De los resultados de dicha prueba se puede observar que el alcance de la aplicación está limitado a actividades físicas donde los actores se encuentren cercanos al receptor del ritmo cardíaco, es decir, en actividades estacionarias donde el desplazamiento del individuo sea mínimo. Figura 6.5 Resultado de prueba ante ejercicio de fútbol sala. 90 7. Conclusiones En las últimas décadas el hombre ha tratado de mantener el ejercicio como un escape a la rutina diaria, partiendo del hecho que es una forma de drenar el estrés. Sin embargo, en muchos casos los deportistas necesitan medir su avance en el tiempo y escuchar su cuerpo para poder exigirse un poco más en su rutina de ejercicios. La solución que se presenta en este trabajo es un mundo de posibilidades para la medición de rendimiento de los atletas en múltiples disciplinas, como por ejemplo: Spinning, TRX, Insanity, Trote estacionario, Taebox, entre otros. Se solicitó a múltiples personas ideas en cuanto a la interfaz para agregar características necesarias a la aplicación, en fin de que la misma fuese útil y fácil de utilizar. Los requerimientos planteados en el diseño de la aplicación fueron alcanzados en su totalidad. 7.1. Contribuciones Tecnología de servidor de bajo costo: Debido al alto costo de las correas transmisoras y los teléfonos inteligentes con soporte de Bluetooth 4.0, el presente trabajo ofrece una opción económica para gimnasios que deseen implementar el monitoreo con un receptor de información centralizado, donde el gasto ser realizaría solo en las correas transmisoras. De esta manera podrían incluso organizar a sus clientes y llevar el control de las estadísticas de cada uno en sus rutinas de entrenamiento. Proyecto piloto para la tecnología Bluetooth 4.0: El involucrar la tecnología de Bluetooth 4.0 presentó un fuerte reto, debido a que es una tecnología relativamente nueva y existe poca documentación de aplicaciones funcionales. Aunque colaboró enormemente al sistema que la tecnología es un estándar y se puede encontrar la documentación de la misma fácilmente. Herramienta para el gimnasio de APUCV: La aplicación desarrollada puede ser instalada en el gimnasio del APUCV, además de aportar a la universidad el conocimiento de una tecnología muy reciente en una aplicación completamente funcional. 91 Código fuente visible: El código fuente se encontrará visible a cualquier investigador interesado en el tema, y así pueda entender descubrimiento de los servicios y características de un dispositivo Bluetooth 4.0, así como interpretar el paquete que exporta dichas características. 7.2. Limitaciones Las limitaciones presentes en el desarrollo de la aplicación se listan a continuación:  La arquitectura, ya que la aplicación solo funciona en ambientes Linux. Además, la instalación de la aplicación tiene un conjunto de pasos específicos y complejos.  El sistema es dependiente de la tecnología Bluetooth 4.0. Correas transmisoras que no posean dicha tecnología no podrán ser detectadas por el receptor.  El código de la librería noble usada para la implementación del servidor receptor del ritmo cardíaco se encuentra aún en desarrollo, por lo tanto, aún se encuentra inestable y presenta errores internos. 7.3. Trabajos Futuros En cuanto a trabajos futuros, se plantean las siguientes recomendaciones para mejorar el sistema o desarrollar algún sistema parecido: El código fuente de la librería noble usada para la recepción de los datos enviados de las correas transmisoras se encuentra bajo desarrollo, por lo que en un futuro la misma se encontrará disponible para otros sistemas operativos. Es importante resaltar que el código de la aplicación se encuentra en su totalidad en lenguaje Javascript, por lo tanto es recomendable tener un dominio considerable sobre el lenguaje antes de tratar de extender las funcionalidades de la aplicación. En caso de que a futuro se presenten nuevos requerimientos, la aplicación está organizada en modelos, vistas y controladores. Siguiendo el patrón de diseño MVC se realizó una organización del código muy fácil de entender, de tal manera de que nuevos requerimientos sean fácilmente configurables usando las herramientas ya existentes. Sin embargo, la integración entre las vistas y los controladores se realizó usando Angular-js por lo 92 que es recomendable entender su funcionamiento antes de intentar realizar algún cambio funcional en la aplicación. La implementación del código receptor se puede extrapolar a otros sistemas, debido a que se encuentra programada en Javascript y siguiendo la documentación de noble se puede lograr una migración de la captura de los servicios y características. 93 Referencias Bibliográficas [1] ¿Qué es un pulsómetro?. [En línea] 13 de Noviembre de 2012. http://www.viajoven.com/viajoven/fitness/pulsometro/pulsometro.php [2] An introduction to angular. [En línea] 15 de Agosto 2013. http://www.webdesignerdepot.com/2013/04/an-introduction-to-angularjs/ [3] Atlassian Bitbucket. [En línea] 15 de Agosto 2013. https://bitbucket.org/ [4] Blue Tomorrow. [En línea] 01 de Diciembre de 2012. http://www.bluetomorrow.com/about- bluetooth-technology/history-of-bluetooth/bluetooth-history.html. [5] Bluegiga Tecnhologies. Bluetooth Low Energy Getting Started. Mayo, 2011. [6] BluegigaTecnhologies. Bluetooth Low Energy Technology. Mayo, 2011. [7] Bluetooth SIG. Bluetooth 4.0 Core SPEC. Junio, 2010. [8] Bluetooth. Estándar para la conexión sin cables. [En línea] 10 de Diciembre de 2012. http://www.monografias.com/trabajos11/blue/blue.shtml [9] Bluez About. [En línea] 15 de Agosto 2013. http://www.bluez.org/about/ [10] Como funciona Bluetooth. [En línea] 10 de Diciembre de 2012. http://es.kioskea.net/contents/bluetooth/bluetooth-fonctionnement.php3 [11] CRS. Bluetooth Low Energy. 2011 [12] El electrocardiógrafo. [En línea] 20 de Diciembre de 2012. http://www.scielo.cl/scielo.php?pid=S0034-98872004000200018&script=sci_arttext&tlng [13] Elvis Pfützenreuter. Bluetooth: ATT and GATT. 2011 [14] Flanagan, David; Ferguson, Paula (2006). JavaScript: The Definitive Guide (5th ed.). O'Reilly & Associates. ISBN 0-596-10199-6 [15] Git Book. [En línea] 15 de Agosto 2013. http://git-scm.com/book/en/ [16] Heart Rate Measurement. [En línea] 15 Mayo de 2013. https://developer.bluetooth.org/gatt/characteristics/Pages/CharacteristicViewer.aspx?u=org .bluetooth.characteristic.heart_rate_measurement.xml [17] Jade. [En línea] 15 de Agosto 2013. http://jade-lang.com/ [18] Javascript Introduction. [En línea] 15 de Agosto 2013. http://www.w3schools.com/js/js_intro.asp http://www.viajoven.com/viajoven/fitness/pulsometro/pulsometro.php http://www.webdesignerdepot.com/2013/04/an-introduction-to-angularjs/ https://bitbucket.org/ http://www.bluetomorrow.com/about-bluetooth-technology/history-of-bluetooth/bluetooth-history.html. http://www.bluetomorrow.com/about-bluetooth-technology/history-of-bluetooth/bluetooth-history.html. http://www.monografias.com/trabajos11/blue/blue.shtml http://www.bluez.org/about/ http://es.kioskea.net/contents/bluetooth/bluetooth-fonctionnement.php3 http://www.scielo.cl/scielo.php?pid=S0034-98872004000200018&script=sci_arttext&tlng http://epx.com.br/artigos/bluetooth_gatt.php http://en.wikipedia.org/wiki/O%27Reilly_Media http://en.wikipedia.org/wiki/International_Standard_Book_Number http://en.wikipedia.org/wiki/Special:BookSources/0-596-10199-6 http://git-scm.com/book/en/ https://developer.bluetooth.org/gatt/characteristics/Pages/CharacteristicViewer.aspx?u=org.bluetooth.characteristic.heart_rate_measurement.xml https://developer.bluetooth.org/gatt/characteristics/Pages/CharacteristicViewer.aspx?u=org.bluetooth.characteristic.heart_rate_measurement.xml http://jade-lang.com/ http://www.w3schools.com/js/js_intro.asp 94 [19] Lista de aplicaciones: Un típico auricular Bluetooth de teléfono móvil. [En línea] 05 de Diciembre de 2012. http://wifiw.com/1661/lista-de-aplicaciones-un-tipico-auricular- bluetooth-de-telefono-movil.html [20] Monitores cardíacos y la investigación científica deportiva. [En línea] 08 de Noviembre de 2012. http://www.fitness.com.mx/practica109.htm [21] Noble. [En línea] 15 de Agosto 2013. https://github.com/sandeepmistry/noble [22] Nodejs. [En línea] 15 de Agosto 2013. http://nodejs.org/ [23] Nordic Semiconductor. Bluetooth Low Energy wireless technology backgrounder Version 4. Marzo, 2011 [24] Principios de Ubuntu. [En línea] 15 de Agosto 2013. http://doc.ubuntu- es.org/Sobre_Ubuntu [25] Raija M.T Laukkanen and Paula K. Virtanen. Heart rate monitor: State of the art. Artículo del diario Sports Sciences 16:S3-S7, 1998 [26] Smart Coaching. [En línea] 15 de Noviembre de 2012. http://www.polar.com.co/co- es/smart_coaching [27] What is Bootstrap. [En línea] 15 de Agosto 2013. http://www.inmotionhosting.com/support/edu/joomla-3/using-bootstrap/what-is-bootstrap [28] What is MySQL. [En línea] 15 de Agosto 2013. http://www.bluemoosetech.com/php-and- mysql.php?jid=9&title=What%20is%20MySQL [29] What is MySQL. [En línea] 15 de Agosto 2013. http://www.roseindia.net/mysql/mysql5/what-is-mysql.shtml [30] Wibree. [En línea] 06 de Diciembre de 2012. http://123seminarsonly.com/Seminar- Reports/039/83525054-wibree.docx [31] William Stallings. Wireless Communications and Networks. Second Edition. 2005 http://wifiw.com/1661/lista-de-aplicaciones-un-tipico-auricular-bluetooth-de-telefono-movil.html http://wifiw.com/1661/lista-de-aplicaciones-un-tipico-auricular-bluetooth-de-telefono-movil.html http://www.fitness.com.mx/practica109.htm https://github.com/sandeepmistry/noble http://nodejs.org/ http://doc.ubuntu-es.org/Sobre_Ubuntu http://doc.ubuntu-es.org/Sobre_Ubuntu http://www.polar.com.co/co-es/smart_coaching http://www.polar.com.co/co-es/smart_coaching http://www.inmotionhosting.com/support/edu/joomla-3/using-bootstrap/what-is-bootstrap http://www.bluemoosetech.com/php-and-mysql.php?jid=9&title=What%20is%20MySQL http://www.bluemoosetech.com/php-and-mysql.php?jid=9&title=What%20is%20MySQL http://www.roseindia.net/mysql/mysql5/what-is-mysql.shtml http://123seminarsonly.com/Seminar-Reports/039/83525054-wibree.docx http://123seminarsonly.com/Seminar-Reports/039/83525054-wibree.docxUniversidad Central de Venezuela Facultad de Ciencias Escuela de Computación Laboratorio de redes móviles e inalámbricas (ICARO) “Desarrollo de una Aplicación Web para la Captura y Visualización de Datos Obtenidos de Múltiples Monitores Cardíacos Utilizando Bluetooth 4.0” Trabajo Especial de Grado presentado ante la ilustre Universidad Central de Venezuela, por los bachilleres: De Sousa D. Edward D. C.I.: 18.818.213 Email: edward.d.desousa@gmail.com Pérez A. Diego A. C.I.:19.754.458 Email: diegoarturo@gmail.com Para optar por el Título de Licenciado de Computación Tutora: Profesora María E. Villapol Caracas, 24 de Octubre de 2013 2 Universidad Central de Venezuela Facultad de Ciencias Escuela de Computación Laboratorio de Redes Móviles, inalámbricas y Distribuidas (ICARO) ACTA DEL VEREDICTO Quienes suscriben, Miembros del Jurado designado por el Consejo de la Escuela de Computación para examinar el Trabajo Especial de Grado, presentado por los Bachilleres Diego Pérez C.I.: 19.754.458 y Edward De Sousa C.I.: 18.818.213, con el título “Desarrollo de una Aplicación Web para la Captura y Visualización de Datos Obtenidos de Múltiples Monitores Cardíacos Utilizando Bluetooth 4.0”, a los fines de cumplir con el requisito legal para optar al título de Licenciado en Computación, dejan constancia de lo siguiente: Leído el trabajo por cada uno de los Miembros del Jurado, se fijó el día 25 de octubre de 2013, a las 11:00 am, para que sus autores lo defendieran en forma pública, en la Sala de Postgrado, Escuela de Computación, en la cual estos realizaron mediante una exposición oral de su contenido, y luego respondieron satisfactoriamente a las preguntas que les fueron formuladas por el Jurado, todo ello conforme a lo dispuesto en la Ley de Universidades y demás normativas vigentes de la Universidad Central de Venezuela. Finalizada la defensa pública del Trabajo Especial de Grado, el jurado decidió aprobarlo. En fe de lo cual se levanta la presente acta, en Caracas el 25 de octubre de 2013, dejándose también constancia de que actuó como Coordinador del Jurado el Profesor Tutor María Villapol. __________________________ Profesora María Elena Villapol (Tutora) __________________________ __________________________ Profesor Rafael Angulo (Jurado) Profesor Jaime Blanco (Jurado) 3 Tabla de Contenido Índice de Figuras ...................................................................................................................... 7 Índice de Tablas ........................................................................................................................ 9 Resumen .................................................................................................................................. 10 1. Introducción ..................................................................................................................... 12 1.1. Definición del problema ..............................................................................................12 1.2. Objetivo General .........................................................................................................13 1.3. Objetivos Específicos ..................................................................................................13 1.4. Justificación ................................................................................................................14 1.5. Distribución del documento .........................................................................................14 2. Monitores de Ritmo Cardíaco ......................................................................................... 16 2.1. Monitor de Ritmo Cardíaco .........................................................................................16 2.2. Funcionamiento ..........................................................................................................16 2.3. ¿Por Qué Usar un Monitor de Ritmo Cardíaco? ..........................................................16 2.4. Dispositivos de Monitoreo de Ritmo Cardíaco .............................................................17 2.4.1. Electrocardiógrafo ................................................................................................17 2.4.2. Pulsómetro ..........................................................................................................18 2.5. Comunicación Inalámbrica de Monitores de Ritmo Cardíaco ......................................19 2.5.1. PC de Escritorio ...................................................................................................19 2.5.2. Laptop..................................................................................................................20 2.5.3. Teléfonos Inteligentes ..........................................................................................20 3. Bluetooth .......................................................................................................................... 22 4 3.1. Características ............................................................................................................22 3.2. Reseña histórica .........................................................................................................22 3.3. Arquitectura ................................................................................................................24 3.4. Piconet y Scatternet ....................................................................................................25 3.5. Especificaciones .........................................................................................................26 3.6. Funcionamiento Básico ...............................................................................................27 3.7. Perfiles ........................................................................................................................29 3.8. Usos ...........................................................................................................................31 3.9. Bluetooth LE ...............................................................................................................32 3.9.1. Características .....................................................................................................32 3.9.2. Bluetooth BR/EDR vs. Bluetooth LE ....................................................................33 3.9.3. Conceptos Básicos ..............................................................................................33 3.9.4. Arquitectura .........................................................................................................35 3.9.5. ATT ......................................................................................................................39 3.9.6. GATT ...................................................................................................................43 3.9.7. Casos de Uso ......................................................................................................46 3.9.8. Perfil de Monitoreo Cardíaco ...............................................................................50 4. Metodología y Herramientas ........................................................................................... 53 4.1. Metodología de Desarrollo de Software Scrum ...........................................................53 4.1.1. Roles ...................................................................................................................53 4.1.2. Reuniones ...........................................................................................................54 4.1.3. Artefactos ............................................................................................................55 4.2. Herramientas de Software ..........................................................................................55 5 4.2.1. Nodejs .................................................................................................................55 4.2.2. MySQL.................................................................................................................56 4.2.3. JavaScript ............................................................................................................56 4.2.4. Noble ...................................................................................................................56 4.2.5. Jade .....................................................................................................................57 4.2.6. Bootstrap .............................................................................................................57 4.2.7. Angularjs ..............................................................................................................57 4.2.8. Git ........................................................................................................................58 4.2.9. Bitbucket ..............................................................................................................58 4.2.10. Ubuntu .............................................................................................................58 4.2.11. BlueZ ................................................................................................................59 4.3. Herramientas de Hardware .........................................................................................59 4.3.1. Dongle Bluetooth dual-mode. ...............................................................................59 4.3.2. Polar H7 Bluetooth Smart Heart Rate Sensor. .....................................................59 5. Diseño e Implementación ................................................................................................ 60 5.1. Requerimientos del Sistema .......................................................................................61 5.1.1. Requerimientos Funcionales ................................................................................61 5.1.2. Requerimientos no Funcionales ...........................................................................62 5.2. Diseño de la Solución .................................................................................................62 5.3. Diagrama de Casos de Usos ......................................................................................63 5.3.1. Caso de Uso de Nivel 0 .......................................................................................63 5.3.2. Caso de Uso de Nivel 1 .......................................................................................65 5.4. Diagrama Entidad Relación ........................................................................................70 6 5.4.1. Tablas Usadas en el Sistema ..............................................................................71 5.4.2. Lógica de Funcionamiento de la Aplicación .........................................................72 5.4.3. Implementación Detallada del manejador Bluetooth ............................................73 5.4.4. Implementación de las Interfaces .........................................................................76 6. Pruebas y Análisis de los Datos ..................................................................................... 84 6.1. Pruebas de Funcionalidad en Ambiente Simulado ......................................................84 6.2. Pruebas de Funcionalidad en Ambiente Real .............................................................87 7. Conclusiones ................................................................................................................... 89 7.1. Contribuciones ............................................................................................................89 7.2. Limitaciones ................................................................................................................90 7.3. Trabajos Futuros .........................................................................................................90 Referencias Bibliográficas ..................................................................................................... 92 7 Índice de Figuras FIGURA 2.1 ELECTROCARDIÓGRAFO DIGITAL..................................................................................... 18 FIGURA 2.2 RELOJ PULSÓMETROTIMEX ............................................................................................... 18 FIGURA 2.3 BANDA RECEPTORA POLAR .............................................................................................. 19 FIGURA 2.4 INTERFAZ PARA MONITOREO DE DATOS Y ESTADÍSTICAS POLAR ............................ 20 FIGURA 2.5 INTERFAZ DE UN MONITOR CARDÍACO ANT EN UN SISTEMA OPERATIVO ANDROID ............................................................................................................................................................ 21 FIGURA 3.1 LOGO DE BLUETOOTH ........................................................................................................ 23 FIGURA 3.2 ARQUITECTURA DE BLUETOOTH ...................................................................................... 25 FIGURA 3.3 REPRESENTACIÓN DE UNA PICONET .............................................................................. 26 FIGURA 3.4 REPRESENTACIÓN DE UNA SCATTERNET ...................................................................... 26 FIGURA 3.5 COMBINACIONES DE HUÉSPED Y CONTROLADORES BLUETOOTH: (DE IZQUIERDA A DERECHA): CONTROLADOR LE ÚNICO, CONTROLADOR BR/EDR ÚNICO. CONTROLADOR BR/EDR PRIMARIOS CON UN CONTROLADOR APM SECUNDARIO. UN CONTROLADOR BR/EDR CON MÚLTIPLES CONTROLADORES APM SECUNDARIOS. ......................................... 36 FIGURA 3.6 COMBINACIONES DE HUÉSPED Y CONTROLADORES BLUETOOTH: (DE IZQUIERDA A DERECHA): CONTROLADOR PRIMARIO BR/EDR Y LE. CONTROLADOR PRIMARIO BR/EDR Y LE CON UN CONTROLADOR SECUNDARIO APM. CONTROLADOR PRIMARIO BR/EDR Y LE CON MÚLTIPLES CONTROLADORES SECUNDARIOS APM. ........................................................ 37 FIGURA 3.7 ARQUITECTURA BLUETOOTH 4.0 COMPLETA. ................................................................ 38 FIGURA 3.8 ARQUITECTURA DE UNA IMPLEMENTACIÓN MÍNIMA BLUETOOTH LE. ....................... 39 FIGURA 3.9 EJEMPLO DE ARQUITECTURA CLIENTE / SERVIDOR DE ATT ....................................... 40 FIGURA 3.10 ARQUITECTURA CLIENTE/SERVIDOR DE GATT ............................................................ 44 FIGURA 3.11 ESTRUCTURA DEL PAQUETE. SERVICIO MONITOREO CARDÍACO. ........................... 51 FIGURA 5.1 IMPLEMENTACIÓN FINAL DEL SISTEMA DE MONITOREO CARDÍACO. ........................ 60 FIGURA 5.2 CASO DE USO NIVEL 0 ........................................................................................................ 64 FIGURA 5.3 CASO DE USO NIVEL 1. VISUALIZACIÓN DE DATOS ....................................................... 65 FIGURA 5.4 CASO DE USO NIVEL 1. ADMINISTRACIÓN DEL SISTEMA .............................................. 68 FIGURA 5.5 DIAGRAMA DE ENTIDAD RELACIÓN. ................................................................................. 70 FIGURA 5.6 MÉTODO MANEJADOR DE ESTADOS DEL RECEPTOR BLUETOOTH. .......................... 73 FIGURA 5.7 MÉTODO DE NOTIFICACIÓN DE ESCANEO BLUETOOTH. .............................................. 74 FIGURA 5.8 MÉTODOS DE CAPTURA DEL SERVICIO DE RITMO CARDÍACO. ................................... 75 FIGURA 5.9 INTERFAZ PARA MANEJO DE USUARIOS. ........................................................................ 76 FIGURA 5.10 FORMULARIO DE INGRESO DE USUARIO. ..................................................................... 77 FIGURA 5.11 INTERFAZ DE MANEJO DE GRUPOS ............................................................................... 78 FIGURA 5.12 FORMULARIO DE INGRESO DE GRUPOS. ...................................................................... 79 FIGURA 5.13 INTERFAZ DE INFORMACIÓN DE LEYENDA PARA EL ENTENDIMIENTO DE COLORES DE INTENSIDAD DEL RITMO CARDÍACO. ....................................................................................... 80 FIGURA 5.14 INTERFAZ DE CONFIGURACIÓN DE VALORES PREDETERMINADOS PARA EL CÁLCULO DE CALORÍAS. ................................................................................................................. 81 FIGURA 5.15 INTERFAZ DE VISUALIZACIÓN DE MONITORES CARDÍACOS EN MODO RECTANGULAR. ................................................................................................................................ 82 FIGURA 5.16 INTERFAZ DE VISUALIZACIÓN DE MONITORES CARDÍACOS EN MODO LISTA. ....... 82 FIGURA 5.17 INTERFAZ DE VISUALIZACIÓN DE SESIONES DEL SISTEMA. ...................................... 83 FIGURA 6.1 ESTADO INICIAL POR CONSOLA DEL SERVIDOR WEB. ................................................. 85 8 FIGURA 6.2 RESULTADOS DE PRUEBAS EN ESFUERZO FÍSICO MÍNIMO. ....................................... 86 FIGURA 6.3 EJECUCIÓN DE CONSULTA SQL SOBRE LA TABLA SESSIONDET. ............................... 86 FIGURA 6.4 RESULTADO DE PRUEBA ANTE EJERCICIOS DE BARRAS Y PARALELAS. .................. 87 FIGURA 6.5 RESULTADO DE PRUEBA ANTE EJERCICIO DE FÚTBOL SALA. .................................... 88 9 Índice de Tablas TABLA 3.1 COMPARACIÓN ENTRE BLUETOOTH CLÁSICO Y BLUETOOTH LE ................................. 33 TABLA 3.2 REPRESENTACIÓN DE UN CONJUNTO DE ATRIBUTOS ................................................... 41 TABLA 3.3 EJEMPLO DE UNA DISTRIBUCIÓN DE SERVICIOS GATT EN UN DISPOSITIVO ............. 44 TABLA 3.4 EJEMPLO DE CARACTERÍSTICAS DE UN SERVICIO GATT ............................................... 45 TABLA 5.1 ACTORES CASO DE USO NIVEL 0 ........................................................................................ 64 TABLA 5.2 CASO DE USO NIVEL 1. ACTIVAR CORREA ........................................................................ 66 TABLA 5.3 CASO DE USO NIVEL 1. DESACTIVAR CORREA ................................................................. 67 TABLA 5.4 CASO DE USO NIVEL 1. CONFIGURAR DATOS .................................................................. 68 TABLA 5.5 CASO DE USO NIVEL 1. INICIAR SESIÓN ............................................................................ 69 TABLA 5.6 CASO DE USO NIVEL 1. DETENER SESIÓN ........................................................................ 69 10 Resumen TITULO Desarrollo de una Aplicación Web para la Captura y Visualización de Datos Obtenidos de Múltiples Monitores Cardíacos Utilizando Bluetooth 4.0. AUTORES Edward De Sousa Diego Pérez TUTOR Profesora. María E. Villapol Los sistemas de monitoreo cardíaco han ofrecido a la sociedad avances en aspectos medicinales y deportivos. Poder obtener la información precisa del ritmo cardíaco en un momento dado, permite realizar cálculos sobre la salud del individuo y/o sobre calorías quemadas en una sesión de ejercicios. Anteriormente su medición se realizaba en caminadoras estacionarias o usando transmisiones en radiofrecuencias específicas con tecnologías propietarias. La aplicación para monitoreo cardíaco desarrollada en este trabajo se realizó haciendo uso de la metodología Scrum y tiene como principal objetivo el monitoreo de atletas que realicen actividades físicas en sitios estacionarios (Por ejemplo: Spinning, TRX, Insanity, trote en caminadora, entre otros). Usando Bluetooth 4.0 y teniendo conocimiento de que la misma es una tecnología estandarizada y de bajo consumo de energía, se realizó una aplicación de monitoreo cardíaco centralizado, capaz de interpretar y recibir los datos de múltiples correas cercanas al receptor Bluetooth, este a su vez conectado a la computadora encargada de mostrar los datos y realizar los cálculos para el mejor entendimiento de los usuarios. Debido a que Bluetooth 4.0 es una tecnología relativamente nueva, la aplicación está limitada a ambientes Linux, sin embargo puede ser la base para otras investigaciones relacionadas con teléfonos inteligentes o relojes que usen Bluetooth 4.0. Para lograr que la 11 aplicación cumpliera los requisitos establecidos fueron realizadas pruebas de funcionalidad, e interpretación de los datos. Al finalizar dichas pruebas se realizaron varias capturas en ambientes reales, por ejemplo: Clases de TRX, Judo y ejercicios de pesas y barras. Palabras claves: Bluetooth, Monitor Cardíaco, Scrum, Aplicación Web. 12 1. Introducción Desde tiempos remotos el deporte ha sido una vía de escape a la rutina diaria del ser humano tanto como actividad casual o simplemente por salud. Como toda actividad rigurosa el deporte requiere de ciertas mediciones de desempeño ya sea para evaluar el progreso o el comportamiento del cuerpo humano ante alguna actividad física, por lo que en este trabajo se explicará de manera detallada cómo es posible llevar a cabo esta tarea con la tecnología de punta en cuanto a monitoreo de atletas se refiere. 1.1. Definición del problema En los últimos años el uso de bandas sujetadas al pecho y algún tipo de receptor como relojes, se ha puesto muy de moda. Sin embargo, casi la totalidad de las tecnologías que se usaban para la transmisión de los datos recogidos por la banda de monitoreo son propietarias y muy costosas. Con la aparición de los teléfonos inteligentes en el mercado, y la demanda de aplicaciones centralizadas de monitoreo, existía una gran limitante para la transmisión de dichas correas, dado que se necesitaban los componentes de los relojes que permitían la recepción de los datos e interpretación de los mismos. Se hizo necesario algún tipo de tecnología que fuese capaz de enviar este tipo de datos y que a su vez sea estándar para que pudiese funcionar en cualquier teléfono inteligente, reloj o computadora. El lanzamiento de Bluetooth 4.0 y sus perfiles de bajo consumo de energía abre las puertas para que las transmisiones de las correas de monitoreo puedan ser fácilmente entendibles, dado que la especificación se encuentra basada en el estándar de Bluetooth 4.0 y su perfil de monitoreo cardíaco. Debido a que Bluetooth 4.0 es una tecnología relativamente nueva y que pocos teléfonos inteligentes hoy en día poseen compatibilidad con la misma, surge la idea de facilitarles a los atletas su medición usando la tecnología en un método de captura de datos centralizado. Dicho método pudiese ser muy útil en clases de Spinning, TRX, Insanity, entre otros. El monitoreo de la actividad cardíaca es necesario en muchos escenarios pero en particular en lo que respecta a la actividad deportiva. Hoy en día es notorio ver la diversidad de dispositivos, entre los cuales destacan las bandas, para llevar a cabo esta tarea. También se 13 destaca la posibilidad de capturar estas mediciones desde diversas dispositivos que van desde PCs hasta los teléfonos inteligentes. A pesar de lo ante expuesto, mucho del software que se ha desarrollado para la gestión de la información capturada por estos dispositivos ha sido desarrollado, por ejemplo en el ámbito deportivo por organizaciones privadas, donde el software desarrollado se conoce como propietario y no se encuentra expuesto al público en general. Esto conlleva a que cualquier mejoramiento de estas aplicaciones de gestión de datos provenientes de la actividad cardíaca conlleva a adquirir licencias que aunque tengan un precio moderado muchas veces no son posibles adquirirlas por ejemplo en nuestro país. Un caso común es la gestión de datos capturados por bandas de monitoreo cardíaco para su manejo y despliegue en un computador personal que es particularmente útil en actividades como el spinning, step, entre otros, que involucran muchas personas en una sala realizando una actividad deportiva. La problemática planteada, que se desprende de lo antes dicho, es la necesidad de capturar datos proveniente de dispositivos de monitoreo cardíacos y su gestión usando una herramienta de software libre. 1.2. Objetivo General Este trabajo tiene como objetivo principal desarrollar una aplicación para un computador de escritorio, laptop o estación de trabajo centralizada que permita el despliegue y visualización de la información recolectada por una o varias correas transmisoras de ritmo cardíaco. 1.3. Objetivos Específicos En el trabajo propuesto tiene como objetivos específicos:  Diseñar una aplicación que permita el despliegue y visualización de la información recolectada por una o varias correas transmisoras de ritmo cardíaco tomando en cuenta factores claves como, lugar donde se piensa usar la misma, cantidad de dispositivos conectados, correcto despliegue de la información recolectada, entre otros.  Implementar la aplicación diseñada.  Realizar pruebas de estrés a la aplicación, usando múltiples escenarios de pruebas. 14  Definir conclusiones referentes a la investigación y a la experiencia ganada en el desarrollo de la aplicación. 1.4. Justificación Con el pasar del tiempo, se ha hecho necesario monitorear la actividad cardíaca cuando se realiza una actividad deportiva. Esto no solo es necesario en ámbitos donde la actividad deportiva es realizada por atletas de alto rendimiento pero también en ámbitos donde la actividad se realiza con la finalidad de mejorar o mantener el cuerpo en buenas condiciones. Dicho monitoreo es una forma de ver como la condición física del atleta mejora y en algunos casos permite evitar accidentes debido a un esfuerzo mayor al de la capacidad del deportista. En los últimos años, los dispositivos para la captura de la actividad cardíaca han ido bajando de precio, haciéndose accesibles a una gran cantidad de personas. A esto se ha unido el hecho del desarrollo de tecnologías que han sido creadas para este fin o similares fines, como lo son Bluetooth y ANT [4]. Siendo los dispositivos y tecnologías de comunicación accesibles, es necesario el desarrollo de aplicaciones que permitan explotar la información recolectada por las mismas. En particular es necesario que estas aplicaciones puedan ser adquiridas por cualquier persona en un costo razonable. 1.5. Distribución del documento A continuación se muestran los temas que conforman cada uno de los siete capítulos que se desarrollan en el siguiente trabajo: Capítulo I: Introducción. Este capítulo abarca la motivación de la investigación, objetivos generales y específicos que se siguieron para realizar el sistema. Capítulo II: Monitores de Ritmo Cardíaco. En este capítulo se habla de la definición de los monitores cardíacos, su importancia y cómo se usan en el mercado. Capítulo III: Bluetooth. En este capítulo se expone la tecnología utilizada en la realización de la aplicación, su comparación entre versiones anteriores y la versión 4.0. Además de explicar el perfil de monitoreo cardíaco, pieza fundamental en el desarrollo del sistema. 15 Capítulo IV: Metodología y Herramientas. En este capítulo se expone la metodología usada para el desarrollo de la aplicación así como las herramientas necesarias para llevar a cabo los objetivos planteados. Capítulo V: Diseño de Implementación. En este capítulo se plantea la fase de diseño e implementación del sistema, así como los diagramas diseñados para su realización exitosa. Capítulo VI: Pruebas y Análisis de Datos. En este capítulo se exponen las pruebas realizadas y el análisis del resultado de las mismas. Capítulo VII: Conclusiones y Trabajos Futuros. En este capítulo se explica la importancia del sistema, sus contribuciones al mundo deportivo y recomendaciones a investigadores interesados en complementar la investigación. 16 2. Monitores de Ritmo Cardíaco 2.1. Monitor de Ritmo Cardíaco Es un aparato que consta de un medidor de tiempo y un sensor capaz de captar los latidos cardíacos de las variaciones eléctricas que produce el corazón en cada contracción. Para que un músculo pueda contraerse precisa que en su membrana se produzcan una serie de cambios eléctricos. Debido a que el corazón es un músculo es posible captar dichos cambios eléctricos mediante dos electrodos que se colocan en el pecho a ambos lados del corazón. Los impulsos captados por los sensores son relacionados con el contador de tiempo y se obtiene la frecuencia cardíaca [1]. 2.2. Funcionamiento En un principio la transmisión de los electrodos se realizaba mediante un cable hasta el contador de tiempo. El mismo disponía de un procesador el cual relacionaba los impulsos con el tiempo transcurrido. Sin embargo, la existencia de un cable provocaba molestias añadidas al desvestirse y vestirse. Un paso importante, fue lograr que los impulsos se transmitieran por ondas, con lo que desaparecía la necesidad de que hubiera unión física entre el sensor y el procesador. Un avance considerable fue poder trasferir los datos recogidos por el monitor de ritmo cardíaco a un computador, permitiendo de esta manera generar gráficos y estadísticas de la variación de las mediciones del ritmo cardíaco [25]. Hoy en día se utiliza un cinturón ajustado al pecho para captar lo cambios eléctricos producidos por el corazón durante el ejercicio físico. De este modo, el cinturón es capaz de detectar cada latido del corazón a través de dos electrodos y envía la señal mediante una interfaz inalámbrica a un receptor que interpreta los datos obtenidos a conveniencia. 2.3. ¿Por Qué Usar un Monitor de Ritmo Cardíaco? El corazón es quién mueve la sangre desde los pulmones hacia los músculos, donde el oxígeno es quemado como combustible, mientras más riguroso es un ejercicio el corazón debe trabajar con más frecuencia para hacer llegar más oxígeno a los músculos [26]. Si el estado físico mejora, el corazón es capaz de bombear más sangre con cada latido y como resultado, el corazón no necesita latir con tanta frecuencia para hacer llegar oxígeno a 17 los músculos. Según la frecuencia del ritmo cardíaco existen valores definidos para los cuales se logran ciertos objetivos, cuando se hace trabajar al corazón a un 50 – 60 % de su capacidad máxima se mejora la salud en general y la recuperación del cuerpo, a un 60 – 70% de su capacidad máxima se queman calorías y se mejora la resistencia, y si se fuerza el corazón al máximo (80% o más) y solo se debería hacer por periodos cortos de tiempo, se desarrolla la mayor resistencia y velocidad. Usando un monitor cardíaco se puede entrenar inteligentemente para lograr el objetivo deseado de cada individuo, además mantiene al tanto de cómo se comporta el motor que mueve combustible a los músculos. Se trata de escuchar al corazón para entender su comportamiento ante un ejercicio determinado. 2.4. Dispositivos de Monitoreo de Ritmo Cardíaco Hoy en día existen básicamente dos esquemas para el monitoreo del ritmo cardíaco, según su uso son las siguientes: 2.4.1. Electrocardiógrafo Es el método más aceptado para el monitoreo del ritmo cardíaco, capta y amplía la actividad eléctrica del corazón a través de electrodos colocados en las cuatro extremidades y en seis posiciones precordiales. El registro de dicha actividad es el electrocardiograma (ECG) [12]. El electrocardiógrafo (Ver Figura 2.1) es usado para mediciones sumamente precisas en personas con problemas del corazón, y para estudios médicos. La forma en que se realiza el examen es de la siguiente manera: Se le pide a la persona acostarse y se le fijan los electrodos a cada brazo, a cada pierna y al tórax, para lo cual es a veces necesario limpiar el área, rasurar o recoger el cabello. Usualmente, el paciente debe permanecer quieto y contener la respiración por períodos cortos de tiempo durante el procedimiento. En ciertas ocasiones, este examen se lleva a cabo mientras la persona realiza ejercicios o se encuentra bajo un estrés mínimo, con el fin de controlar los cambios en el corazón y sus resultados se registran en papel milimetrado. 18 Figura 2.1 Electrocardiógrafo digital 2.4.2. Pulsómetro Es un dispositivo que permite a un usuario medir su frecuencia cardíaca en tiempo real. Por lo general, consta de dos elementos: una correa transmisora para el pecho y un receptor de muñeca que usualmente es un reloj (Ver Figura 2.2). Los modelos más avanzados, además, miden la variabilidad del ritmo cardíaco para evaluar la capacidad física del atleta [1]. La correa del pecho tiene los electrodos en contacto con la piel para controlar electrónicamente las pulsaciones del corazón (Ver Figura 2.3). Cuando se detecta los latidos del corazón se transmite una señal de radio, que el receptor utiliza para determinar la frecuencia cardíaca. Esta señal puede ser un simple pulso de radio o una única señal codificada desde la correa de pecho, que impide que otro usuario cercano que use también un transmisor semejante reciba la señal (conocida como diafonía, un tipo de interferencia). Figura 2.2 Reloj pulsómetroTimex http://es.wikipedia.org/wiki/Electrodo 19 Figura 2.3 Banda receptora Polar 2.5. Comunicación Inalámbrica de Monitores de Ritmo Cardíaco Para la realización del Monitoreo Remoto de Atletas se necesita también (además de los dispositivos referenciados previamente), algún mecanismo que sirva de receptor de la información emitida desde el monitor de ritmo cardíaco del atleta el cual cuente con la interfaz donde se mostrará dicha información. Existen actualmente muchos métodos de transmisión de la información obtenida por los medidores de ritmo cardíaco, los más significativos son los siguientes: 2.5.1. PC de Escritorio Varias marcas conocidas como Polar, Timex, entre otros, ofrecen en sus páginas web aplicaciones para instalar en los computadores de los usuarios, de esta manera pueden conectar los monitores cardíacos al computador mediante un puerto USB. Es así como el computador es capaz de mostrar datos estadísticos y gráficos de mucha utilidad para los usuarios (Ver Figura 2.4). Pensar en un computador de escritorio como un monitor cardíaco limita el rango de ejecución y de recepción de datos, debido a que el computador y los atletas deben estar en un lugar cómodo y además existir cercanía entre ellos para que se pueda recibir la información emitida por las bandas de pecho. 20 Figura 2.4 Interfaz para monitoreo de datos y estadísticas polar 2.5.2. Laptop Del mismo modo que un computador de escritorio se puede usar un laptop como un recolector de datos. Sin embargo, se puede hacer uso de la interfaz Bluetooth como medio de transmisión para algunos relojes, por ejemplo de la marca Polar. 2.5.3. Teléfonos Inteligentes Debido a que las tecnologías hoy en día tales como ANT y Bluetooth LE son bien conocidas y trabajan en frecuencias estándares, se han dotado a los teléfonos inteligentes con aplicaciones que interactúan con las mismas. Así el uso de un reloj como monitor cardíaco ya no será un estándar en el mundo de monitoreo remoto de atletas. Desde hace más de dos años se ha incorporado, en algunos modelos de teléfonos la propiedad de sincronización con la correa de pecho para llevar el monitoreo del ritmo cardíaco desde un teléfono móvil (Ver Figura 2.5). 21 Figura 2.5 Interfaz de un monitor cardíaco ANT en un sistema operativo Android 22 3. Bluetooth Bluetooth es un estándar abierto de tecnología inalámbrica para el intercambio de datos entre dispositivos móviles o fijos en cortas distancias [31]. Permite la implementación de redes PANs (Personal Area Networks / Redes de área personal) de bajo costo y con altos niveles de seguridad. 3.1. Características A continuación se describen brevemente las características más resaltantes de Bluetooth [31]:  Reemplazo del cable. Bluetooth elimina la necesidad de numerosos cables para la conexión entre prácticamente cualquier dispositivo de comunicación.  Punto de acceso de voz y data. Bluetooth proporciona una interfaz uniforme para acceder a servicios de voz y data.  Redes Ad Hoc. Un dispositivo equipado con Bluetooth puede establecer una conexión instantánea con otro dispositivo Bluetooth que se encuentre en su rango. Esto permite realizar una comunicación sin infraestructura también conocida como red Ad Hoc. 3.2. Reseña histórica La siguiente línea del tiempo resume la evolución de Bluetooth desde su concepción en 1994 hasta la actualidad [4]:  1994. Bluetooth es inicialmente concebido por Ericsson, una compañía sueca de equipos de telecomunicación y su objetivo inicial era una solución alternativa a los cables de datos RS-232.  1998. Se conforma la Bluetooth SIG (Special Industry Group / Grupo Industrial Especial) integrada por las compañías Ericsson, Microsoft, IBM, Intel, Agere, Motorola, Nokia, Toshiba, entre otras, con el objetivo de impulsar el desarrollo de estándares para Bluetooth.  1999. Surge la especificación 1.0 de Bluetooth. 23  2004-2005. Surge la especificación 2.0 + EDR (Enchanted Data Rate / Velocidad de datos mejorada) de Bluetooth.  2007. Surge la especificación 2.1 + EDR de Bluetooth.  2009. Surge la especificación 3.0 + HS (High Speed / Alta velocidad) de Bluetooth.  2010-2011. Surge la especificación 4.0 + LE de Bluetooth. Actualmente la Bluetooth SIG es la encargada de alentar la investigación y desarrollo de la tecnología Bluetooth. Inicialmente los desarrolladores de esta tecnología inalámbrica utilizaron el término “Bluetooth” como un nombre clave, sin embargo, el tiempo pasó y dicho nombre se adoptó como su oficial. La palabra “Bluetooth” fue tomada del Rey Danés Harald Bluetooth del siglo décimo. El Rey Bluetooth fue conocido por su esfuerzo de unificar la Europa Escandinavia durante una era en la cual la región estaba siendo azotada por las guerras y los clanes feudales [4]. Los fundadores de Bluetooth SIG sintieron que el nombre tenía sentido debido a las siguientes razones [4]:  Bluetooth fue desarrollado inicialmente en Escandinavia.  La tecnología Bluetooth es capaz de unir distintos tipos de compañías como la de teléfonos móviles, computadoras y automovilísticas. Además simplifica y combina múltiples formas de comunicación inalámbrica en una sola de manera simple, segura, de bajo costo, bajo consumo, y bajo una radio frecuencia globalmente disponible. En logo de Bluetooth unifica las letras del abecedario rúnico “H”, la cual luce como un asterisco, y la “B”, conformando así las iníciales del Rey Harald Bluetooth. Si se observa detalladamente la Figura 3.1 se pueden ver ambas letras embebidas en el logo [4]. Figura 3.1 Logo de Bluetooth 24 3.3. Arquitectura La arquitectura de Bluetooth, representada en la Figura 3.2, está conformada por un conjunto de capas de protocolos los cuales se encuentran clasificados como [31]:  Protocolos fundamentales de Bluetooth. Son específicos de la tecnología inalámbrica Bluetooth y han sido desarrollados por la Bluetooth SIG. Estos protocolos son: Radio, BaseBand (Banda base), LMP (Link Manager Protocol / Protocolo de administración de enlace), L2CAP (Logical Link and Adaptation Protocol / Protocolo de adaptación y enlace lógico), SDP (Service Discovery Protocol / Protocolo de servicio de descubrimiento).  Protocolos de sustitución de cable. Suministran señalización de control que emulan el tipo de señalización que se asocia usualmente con los enlaces de cable.  Protocolos de control de telefonía. Definen la señalización de control de llamada para establecer llamadas de voz y datos con dispositivos Bluetooth.  Protocolos adoptados. Son protocolos existentes que se utilizan para diversos fines en capas superiores. Algunos de estos protocolos adoptados son: PPP (Point to Point Protocol / Protocolo punto a punto), TCP (Transmission Control Protocol / Protocolo de control de transmisión), UDP (User Datagram Protocol / Protocolo de datagrama de usuario), IP (Internet Protocol / Protocolo de Internet), OBEX (Object Exchange / Intercambio de objetos). 25 Figura 3.2 Arquitectura de Bluetooth 3.4. Piconet y Scatternet Una piconet (Ver Figura 3.3) es la unidad básica de red de Bluetooth que consiste en un dispositivo maestro y de uno a siete dispositivos esclavos. El dispositivo maestro, usando su propia dirección como parámetro de entrada, determina el canal y la fase usada por todos los dispositivos de su piconet. Los dispositivos esclavos se deben ajustar al canal y la fase determinada por su maestro. Un esclavo se puede comunicar únicamente con su maestro y sólo si el mismo se lo permite. Un dispositivo de una piconet puede ser parte de otra piconet funcionando como maestro y esclavo en ambas piconet. Esta forma de solapamiento es denominada scatternet (Ver Figura 3.4)[31]. Una ventaja del esquema piconet / scatternet es que permite que los dispositivos puedan compartir la misma área física y hacer un manejo eficiente del ancho de banda disponible. El canal lógico y la transmisión de data son compartidos por la piconet [31]. 26 Figura 3.3 Representación de una piconet Figura 3.4 Representación de una scatternet 3.5. Especificaciones Bluetooth presenta las siguientes características técnicas [4]:  Frecuencia de operación: banda ISM (Industrial, Scientific and Medical / Industrial, científica y médica) de 2.4 GHz (Gigahercios).  79 Canales físicos de 1MHz (Megahercios).  Técnica de modulación utilizada: GFSK (Gaussian Frecuency-Shift-Keying / Modulación por desplazamiento de frecuencia gaussiana). 27  Potencia del transmisor: 1 mW (megavatios) para un alcance de 10 metros, 100 mW para un alcance de hasta 100 metros.  Técnica utilizada para el envío y recepción: FHSS (Frecuency Hopping Spread Spectrum / Espectro ensanchado por salto de frecuencia).  Canales máximos de voz: 3 por piconet.  Canales máximos de datos: 7 por piconet.  Velocidad de datos: hasta 721 kbit/s (kilobit por segundo) por piconet.  Rango esperado del sistema: 10 metros.  Número de dispositivos: 8 por piconet y hasta 10 piconets.  Alimentación: 2,7 voltios.  Consumo de potencia: desde 30 uA (microamperios) a 30 mA (miliamperios) transmitiendo.  Tamaño del módulo: 0.5 pulgadas cuadradas (9x9 milímetros).  Interferencia: Bluetooth minimiza la interferencia potencial al emplear saltos rápidos (1600 saltos por segundo).  Topología de la red: piconet y scatternet. 3.6. Funcionamiento Básico Cada dispositivo Bluetooth posee un microchip que transmite y recibe datos en la frecuencia de 2.4 GHz (2,402 hasta 2,480 MHz en saltos de 1 MHz). La banda de 2.4 GHz no necesita algún tipo de licencia para su utilización y se encuentra disponible en todo el mundo, con algunas variaciones de ancho de banda en diferentes países, como España, Francia y Japón. Además de canales especiales para la transmisión de datos, Bluetooth cuenta con tres canales de voz a 64 kbit/s. Cada dispositivo tiene una dirección única de 48 bits, basada en el estándar IEEE (Institute of Electrical and Electronics Engineers/ Instituto de ingenieros eléctricos y electrónicos) 802.11 para redes LAN (Local Area Network / Redes de área local) inalámbricas. Dicha dirección le permite al dispositivo formar parte de una piconet de manera temporal. Las conexiones entre los dispositivos son de uno a uno con un rango máximo de 10 28 metros. Se puede alcanzar un mayor rango, de 100 metros, haciendo uso de amplificadores aunque se introduce alguna distorsión [8]. El esquema FHSS ofrece una gran robustez a Bluetooth ya que permite a los dispositivos realizar numerosos saltos de frecuencias aleatorios logrando establecer una comunicación inclusive en áreas donde existe una gran interferencia electromagnética. Bluetooth provee mecanismos de encriptación y autenticación para controlar la conexión y evitar que cualquier dispositivo, no autorizado, pueda acceder a los datos o modificarlos. El manejo de la encriptación y autenticación se realiza a nivel de capa de aplicación [8]. Bluetooth se ha diseñado para operar en un ambiente multiusuario. Los dispositivos pueden habilitarse para comunicarse entre sí e intercambiar datos de una forma transparente para el usuario. Una piconet puede estar conformada hasta de 8 dispositivos y hasta diez piconets pueden coexistir en la misma área de cobertura. Dado que cada enlace de comunicación es codificado y protegido contra interferencia y pérdida de datos, Bluetooth puede considerarse como una red muy segura. El protocolo Base Band (Banda Base) que utiliza Bluetooth utiliza técnicas de conmutación de circuitos y de paquetes para asegurar que los datos lleguen en orden [8]. El establecimiento de una conexión entre dos dispositivos Bluetooth consta de diferentes pasos, los cuales se listan a continuación [10]:  Modo pasivo.  Solicitud: búsqueda de puntos de acceso.  Paginación: sincronización con los puntos de acceso.  Descubrimiento del servicio del punto de acceso.  Creación de un canal con el punto de acceso.  Emparejamiento mediante PIN (Personal Information Number / Numero de información personal).  Utilización de la red. A continuación se explica detalladamente cada uno de los pasos: Durante el uso normal, un dispositivo funciona en “modo pasivo”, es decir, que está escuchando la red. Este modo le permite al dispositivo ahorrar energía mientras se encuentra a 29 la espera de algún mensaje entrante. El establecimiento de una conexión comienza con una fase denominada “solicitud”. En dicha fase el dispositivo maestro envía una solicitud a todos los dispositivos que encuentra dentro de su rango, denominados puntos de acceso. Todos los dispositivos que reciben la solicitud responden con su dirección. El dispositivo maestro elige una dirección y se sincroniza con el punto de acceso mediante una técnica denominada paginación. La paginación consiste en la sincronización del reloj y la frecuencia del dispositivo maestro con el punto de acceso seleccionado. De esta manera se establece un enlace con el punto de acceso que le permite al dispositivo maestro ingresar en una fase de descubrimiento de servicios del punto de acceso, mediante el protocolo SDP. Cuando la fase de descubrimiento de servicios finaliza, el dispositivo maestro está preparado para crear un canal de comunicación con el punto de acceso, mediante el protocolo L2CAP. El punto de acceso puede incluir un mecanismo de seguridad denominado emparejamiento. El emparejamiento restringe el acceso a los usuarios autorizados para brindarle a la piconet cierto grado de protección. Este procedimiento se realiza con una clave cifrada comúnmente conocida como PIN. Para esto, el punto de acceso le envía una solicitud de emparejamiento al dispositivo maestro. La mayoría de las veces se le solicitará al usuario que ingrese el PIN del punto de acceso. Si el PIN recibido es correcto, se lleva a cabo la conexión. En el modo seguro, el PIN se enviara cifrado con una segunda clave para evitar poner en riesgo la señal. Cuando el emparejamiento se activa, el dispositivo maestro puede utilizar libremente el canal de comunicación establecido [10]. 3.7. Perfiles Bluetooth es una tecnología que puede ser implementada en múltiples escenarios. Sin embargo, un escenario en particular puede no necesitar todo el abanico de protocolos y características que brinda Bluetooth. En consecuencia, se definieron modelos de uso específicos. Un modelo de uso es un conjunto de protocolos que implementan una aplicación en particular basada en Bluetooth. Un perfil Bluetooth define los protocolos y las características que soporta un modelo de uso [31]. 30 Los perfiles de Bluetooth se dividen en generales y específicos. Los perfiles generales se dividen en [31]:  GAP (Generic Access Profile / Perfiles de acceso genérico): Define los procedimientos genéricos para descubrir dispositivos Bluetooth.  SPP (Serial Port Profile / Perfil de puerto serial): Establece cómo deben configurarse los dispositivos Bluetooth para emular una conexión serial usando RFCOMM.  SDAP (Service Discovery Application Profile / Perfil de Aplicación de descubrimiento de servicios): Describe como un dispositivo puede descubrir servicios registrados en otros dispositivos Bluetooth al igual que otra información acerca de estos servicios.  GOEP (Generic Object Exchange Profile / Perfil genérico de intercambio de objetos): Ofrece la capacidad de transferir objetos de datos de un dispositivo a otro tales como hoja de cálculo, presentaciones, imágenes. Los perfiles específicos se dividen en [31]:  File Transfer Profile (Perfil de transferencia de archivos).  LAN Access Profile (Perfil de acceso a LAN).  Synchronization Profile (Perfil de sincronización).  Cordless Telephony Profile (Perfil de telefonía inalámbrica).  Headset Profile (Perfil de auriculares).  Fax Profile (Perfil de fax).  Intercom Profile (Perfil de inter comunicación).  Dial-UP Networking Profile (Perfil de acceso telefónico a redes).  Object Push Profile (Perfil de carga de objetos). 31 3.8. Usos Algunos de los usos más comunes de la tecnología Bluetooth son [19]:  Control inalámbrico de una comunicación entre un teléfono móvil y auriculares manos libres. Esta fue una de las primeras aplicaciones más populares de Bluetooth.  Control inalámbrico entre un teléfono móvil y un equipo de sonido de automóvil compatible con Bluetooth.  Audífonos e intercomunicadores inalámbricos.  Comunicación inalámbrica entre computadores en un espacio confinado y cuando se requiere muy poco ancho de banda.  Comunicación inalámbrica entre dispositivos de entrada y salida de computadores, los más comunes son el mouse, teclado e impresora.  Transferencia de archivos, detalles de contactos y recordatorios entre dispositivos  Reemplazo de las comunicaciones en serie usando cables RS-232 en equipos de pruebas, receptores GPS (Global Positining System / Sistema de posicionamiento global), equipos médicos, lectores de código de barra y dispositivos de control de tráfico.  Para realizar publicidad a través de dispositivos colocados en la calle que envían información a otros dispositivos Bluetooth que se encuentren en su alcance.  Las consolas de juegos como Nintendo Wii, Sony Playstation 3, entre otros, utilizan Bluetooth para sus controles inalámbricos.  Transmisión a corto plazo de data recaudada por sensores de dispositivos médicos al teléfono u otros aparatos. 32 3.9. Bluetooth LE Bluetooth LE es una variante introducida en la versión 4.0 de Bluetooth definida como una tecnología radio de corto alcance estandarizada por Bluetooth SIG y orientada a las necesidades de los dispositivos inalámbricos actuales como lo son el bajo consumo de energía, conexiones rápidas, confiabilidad y seguridad [5]. 3.9.1. Características Bluetooth LE deriva las características de sus predecesores e introduce novedades que le permiten desempeñarse con un bajo consumo energético. Entre dichas características podemos destacar [5]:  Robustez y confiabilidad: El salto de frecuencia adaptativo de Bluetooth LE permite a un dispositivo saltar rápidamente en una banda amplia de frecuencias, no sólo para reducir la interferencia sino también para identificar y evitar frecuencias muy concurridas.  Seguridad: Bluetooth LE está diseñado para incorporar un alto nivel de seguridad incluyendo autenticación, autorización, encriptado y protección contra ataques de hombre en el medio.  Disponibilidad global: Dado que Bluetooth LE trabaja en la frecuencia libre de 2.4GHz puede ser usado en una gran cantidad de países.  Picos de consumo de energía muy bajos en estados de funcionamiento y reposo.  Capacidad para operar por años utilizando baterías muy pequeñas (unos pocos milímetros de diámetro) denominadas en inglés como coin-cellbatteries.  Interoperabilidad entre distintos vendedores.  Mayor rango de operatividad.  Nuevo mecanismo de anunciamiento, para una fácil fase de descubrimiento y conexión.  Nuevo Perfil de Atributos Genéricos para simplificar los dispositivos y el software que utilizan.  Arquitectura Cliente/Servidor asíncrona.  Bajo costo de implementación. 33 3.9.2. Bluetooth BR/EDR vs. Bluetooth LE La Tabla 3.1 muestra una comparación breve entre los aspectos técnicos del Bluetooth BR (Basic Rate / Tasa básica) / EDR y Bluetooth LE. Tabla 3.1 Comparación entre Bluetooth clásico y Bluetooth LE Especificación técnica Bluetooth clásico Bluetooth LE Radiofrecuencia 2.4 GHz 2.4 GHz Distancia/Rango ~10-100 metros ~10-100 metros Tasa de transferencia 1-3Mbps (Mega bit por segundo) 1Mbps Nodos/Esclavos activos 7 ~ 800. Limitado por la memoria del dispositivo Seguridad 56 a 128 bit 128-bit AES Robustez FHSS FHSS Latencia (desde el estado conectado hasta el envío de data) 100+ ms (milisegundos) <6ms Certificación Bluetooth SIG Bluetooth SIG Topología de red Punto a Punto, scatternet Punto a punto, estrella Consumo de energía 1(valor de referencia) 0.01 a 0.5 (dependiendo del caso de uso) 3.9.3. Conceptos Básicos La principal mejora introducida por Bluetooth LE es la reducción del consumo de baterías. Dicha reducción se logra gracias a los siguientes aspectos [6]: 34  Enfoque no orientado a conexión que permite reducir el tiempo en el cual los dispositivos mantienen encendido un enlace radio (físico) mediante la reducción de los tiempos de procesamiento y transferencia.  Reducción del tamaño de los paquetes lo que minimiza considerablemente los tiempos de procesamiento y transmisión de los mismos. Esto también permite la reducción de los requerimientos de memoria lo que se traduce en menos fuga de energía y un menor costo de implementación.  Reducción de los canales de radiofrecuencia para mejorar los tiempos de conexión y descubrimiento.  Máquina de estados sencilla lo que simplifica y optimiza su utilización. Servicios simples requieren menos memoria.  Bluetooth LE solo emplea 3 canales de anunciamiento a diferencia de Bluetooth BR/EDR que utiliza de 16 a 32 canales. El tiempo que se emplea para escanear dichos canales se redujo de 22.5 ms (milisegundos) a 1.2 ms.  Implementación de un nuevo estado de reposo. Los dispositivos Bluetooth LE permanecen en estado de reposo y solo se “despiertan” si tienen que transmitir datos. Este nuevo mecanismo de funcionamiento favorece a las aplicaciones de tipo sensores que predominan en Bluetooth LE las cuales intercambian datos en períodos infrecuentes (intervalos de 0.5 a 4 segundos).  Reducción del establecimiento de una conexión entre dispositivos a 3 ms.  En Bluetooth LE los datos son transmitidos en pequeños trozos de bits. Esto permite que enviar datos sea rápido y se consuma la menor cantidad de energía posible. El motivo de este conjunto de optimizaciones es la introducción de una nueva fuente de poder de tamaño muy limitado cuyas características de consumo de energía son: menos de 20mA de corriente pico y menos de 5uA de corriente promedio. Las pequeñas dimensiones de dichas baterías permiten elaborar dispositivos Bluetooth LE de reducidas dimensiones y bajo costos. La combinación de un enlace radio siempre apagado y la reducción de los requerimientos de memoria prolonga la vida en años (3 - 4 años) de la batería de un dispositivo Bluetooth LE. Se estima que Bluetooth LE consume de 10 a 20 veces menos energía que el Bluetooth BR/EDR [6]. 35 3.9.4. Arquitectura La versión 4.0 de Bluetooth incluye en su especificación los protocolos de Bluetooth clásicos, Bluetooth High Speed (Alta velocidad) y Bluetooth Low Energy. Bluetooth High Speed se entiende como la versión 3.0 con la variante APM (Alternative PHY/MAC / PHY/MAC alternativo) y los protocolos Bluetooth clásicos (Bluetooth BR/EDR) son el recopilado de las versiones anteriores a 3.0 (legacy) [7]. De acuerdo a su modo de uso existen dos tipos de dispositivos Bluetooth LE [7]:  Dispositivos de modo simple. Son dispositivos que solo soportan la tecnología Bluetooth LE y se encuentran optimizados para soluciones de bajo consumo de poder, costo reducido y pequeños tamaños. Son solo compatibles con otros dispositivos que implementen la tecnología Bluetooth LE.  Dispositivos de modo dual. Son dispositivos que implementan las tecnologías Bluetooth LE, Bluetooth clásico (BR/EDR) y alternativamente Bluetooth High Speed. Estos dispositivos son interoperables con todas las especificaciones previas de Bluetooth. Algunos de los perfiles y casos de uso pueden ser soportados por tan solo una de las tecnologías antes mencionadas. Por consecuente, los dispositivos duales pueden brindar soporte a la mayoría de los casos de uso. El núcleo de un sistema Bluetooth consiste en un huésped y uno o más controladores. Un huésped es una entidad lógica definida como el conjunto de capas situadas por debajo de los perfiles y por encima del HCI (Host to Controller Interface / Interfaz de Huésped a Controlador). El HCI es una capa intermedia que permite estandarizar la comunicación entre el huésped y los controladores. Dicha estandarización permite que el huésped o los controladores sean sustituidos con una mínima adaptación. Existen diferentes estándares para la capa HCI, cada uno implementa distintas interfaces de hardware para transferir los mismos comandos, eventos y paquetes de datos [7]. Un controlador es una entidad lógica definida como el conjunto de capas situadas bajo el HCI. En los dispositivos Bluetooth de funcionalidad simple el huésped y los controladores pueden encontrarse implementados en el mismo microprocesador. En ese caso el uso del HCI es opcional aunque se suele implementar con una interfaz de software interna [7]. 36 Bluetooth LE define dos tipos de controladores, primarios y secundarios. Una implementación de Bluetooth tiene un solo controlador primario el cual puede estar configurado de alguna de las siguientes maneras [7]:  Controlador BR/EDR incluyendo las capas de Radio, BaseBand, Link Manager, y opcionalmente HCI.  Un controlador LE incluyendo un LE PHY (capa física especialmente diseñada para cumplir los requerimientos de bajo consumo de LE), link layer y opcionalmente HCI. (Ver Figura 3.5)  Una combinación de controlador BR/EDR con una porción de controlador LE. Esta configuración posee una sola dirección de dispositivo Bluetooth compartida. (Ver Figura 3.6) Adicionalmente se pueden incluir uno o más controladores secundarios siguiendo la siguiente configuración [7]:  Un controlador alternativo APM incluyendo el 802.11 PAL, 802.11 MAC y PHY y opcionalmente HCI (Ver Figura 3.5 y Figura 3.6). Figura 3.5 Combinaciones de huésped y controladores Bluetooth: (de izquierda a derecha): Controlador LE único, Controlador BR/EDR único. Controlador BR/EDR Primarios con un Controlador APM Secundario. Un Controlador BR/EDR con múltiples Controladores APM Secundarios. 37 Figura 3.6 Combinaciones de Huésped y Controladores Bluetooth: (de izquierda a derecha): Controlador Primario BR/EDR y LE. Controlador Primario BR/EDR y LE con un Controlador Secundario APM. Controlador Primario BR/EDR y LE con múltiples Controladores Secundarios APM. El controlador APM es una variante en la arquitectura de Bluetooth introducida en la versión 3.0 de alta velocidad que permite alternar el uso de una capa MAC o PHY para el transporte de los datos. El radio de Bluetooth se sigue utilizando para los descubrimientos de dispositivos, conexión inicial y configuración de perfil, sin embargo, cuando largas cantidades de datos necesitan ser transportadas la alternativa de alta velocidad MAC PHY 802.11 (típicamente asociada con Wi-Fi) es utilizada. Esta variante de alta velocidad (APM) es basada en 802.11 pero el mecanismo APM fue diseñado para ser interoperable con otros radios. En esencia el AMP modifica la arquitectura del estándar Bluetooth para permitir múltiples radios alternativos bajo la capa L2CAP. Cada controlador APM consiste en un PAL (Protocol Adaptational / Protocolo de adaptación) en el tope de una capa MAC y PHY. El PAL es el responsable de mapear los protocolos Bluetooth (según lo especificado por el HCI) a protocolos específicos de las capas MAC y PHY. Los controladores AMP pueden ser habilitados o deshabilitados para minimizar el consumo de energía del dispositivo [7]. (Ver Figura 3.7) 38 Figura 3.7 Arquitectura Bluetooth 4.0 completa. Una implementación mínima de un sistema Bluetooth LE (Ver Figura 3.8) contiene un controlador Primario LE y Huésped conformado por las capas L2CAP, SMP (Security Manager Protocol / Protocolo de Administración de Seguridad), ATT (Attribute Protocol / Protocolo de Atributo), GATT y GAP. Los protocolos ATT y GATT (Generic Attribute Protocol / Protocolo de Atributo Genérico) son fundamentales para el funcionamiento del modelo de bajo consumo de energía ya que estructuran los datos de los perfiles y casos de uso de una manera simple y concisa, dichos protocolos son explicados con mayor detenimiento en las secciones 3.9.5 y 3.9.6 del presente documento [7]. 39 Figura 3.8 Arquitectura de una implementación mínima Bluetooth LE. 3.9.5. ATT ATT es un protocolo que permite encapsular los datos que maneja un dispositivo Bluetooth LE en una abstracción denominada “atributo” y proporciona métodos adecuados para su manipulación. Como se percibe en la Figura 3.9, ATT es un protocolo cliente servidor [13]. Las tareas que ejecutan cada contraparte del protocolo ATT (cliente / servidor) son las siguientes [13]:  El servidor almacena datos.  Los clientes solicitan datos al servidor.  Los clientes escriben datos en el servidor. 40 Figura 3.9 Ejemplo de arquitectura cliente / servidor de ATT ATT define las siguientes operaciones para un dispositivo cliente [13]:  Lectura. El cliente le solicita datos al servidor cuando la necesita.  Escritura. El cliente puede configurar un servidor sobrescribiendo sus atributos. Por ejemplo: cambiar la temperatura de la habitación a 22ºC. ATT define las siguientes operaciones para un dispositivo servidor [13]:  Notificar. El servidor notifica al cliente cuando ciertos datos se modifican. El contenido de la notificación es en sí los propios datos modificados.  Indicar. Parecido al anterior, el servidor notifica al cliente cuando ciertos datos sufren algún cambio y el cliente aprueba que ha recibido dichos datos (con un mensaje de confirmación). En Bluetooth LE los datos son expuestos en forma de “atributos” (Ver Tabla 3.2). Un atributo es un bloque de datos conformado por [13]:  Un manejador (Handle) de 16 bits. Este manejador es único (por dispositivo) y permite referenciar al atributo dentro de un dispositivo. El manejador 0x0000 se encuentra reservado y no debe ser usado.  Un UUID (Universal Unique Identifier / Identificador Universal Único) que es un identificador de 16 a 128 bits que define el tipo de atributo. Ejemplo: «Service», «Temperature»). La Bluetooth SIG define ciertos tipos de atributos generales. Las 41 capas superiores pueden definir nuevos tipos de atributos no especificados por la Bluetooth SIG.  Un valor que puede ser de longitud fija o variable. Representa la data que almacena el atributo. Tabla 3.2 Representación de un conjunto de atributos Manejador Tipo Valor 0x0009 «DeviceName» 0x54656d706572617475726 0x0022 «BatteryState» 0x04 0x0098 «Temperature» 0x0802 Los atributos tienen permisos los cuales pueden ser de lectura y/o escritura. Por lo tanto los valores de los atributos pueden requerir autenticación y autorización para su lectura y/o escritura. Los permisos y autorización son definidos en las especificaciones propias de los perfiles de Bluetooth LE. El ATT por sí mismo no conoce dichos permisos y no trata de interpretar los valores de los atributos para probarlos. Esto es trabajo del GATT y los perfiles superiores [13]. La permisología de los atributos está compuesta por combinaciones de permisos de acceso, autenticación y autorización [13]. Los permisos de acceso sobre un atributo pueden ser:  Lectura y/o escritura. Los permisos de autenticación sobre un atributo pueden ser:  Autenticación requerida.  No requiere autenticación. 42 Los permisos de autorización sobre un atributo pueden ser:  Autorización requerida  No requiere autorización. Los permisos de acceso son utilizados por el servidor para determinar si un cliente puede leer y/o escribir el valor de un atributo. Los permisos de autenticación son utilizados por el servidor para determinar si se requiere un enlace autenticado cuando un cliente intenta acceder a un atributo. También son usados para determinar si se necesita un enlace autenticado al momento de enviar una notificación o indicación al cliente. Los permisos de autorización determinan si un cliente necesita ser autorizado antes de acceder al valor de un atributo [13]. ATT posee características interesantes, como buscar atributos por UUID, obtener atributos en un rango de manejadores, entre otros, de manera tal que el dispositivo cliente no tiene que conocer los números de los manejadores de antemano ni los perfiles de nivel superior requieren codificarlos. Los manejadores de atributos se mantienen estables en cada dispositivo. Esto permite a los clientes poder almacenarlos en caché y por consiguiente usar menos paquetes (menos energía) para obtener los valores de los atributos luego de una primera lectura [13]. En la mayoría de los casos el cliente es el que toma la iniciativa e inicia la comunicación y el servidor responde. Sin embargo como ya se recalcó, ATT tiene capacidades de notificación e indicación, lo que le permite al servidor tomar la iniciativa de notificar al cliente si algún atributo ha cambiado, ahorrando al cliente la necesidad de consultar dicho atributo. Un dispositivo puede funcionar tanto de cliente como de servidor de manera concurrente. Un dispositivo Bluetooth solo puede poseer una única instancia de servidor. Para un cliente dado, el servidor debe poseer un conjunto de atributos. Los servidores pueden manejar múltiples clientes. Múltiples servicios pueden ser expuestos por un mismo servidor y esto se logra delimitando cada servicio en rangos de manejadores distintos. El descubrimiento de dichos rangos de manejadores es definido por las especificaciones de las capas superiores [13]. ATT nunca envía la longitud del valor del atributo; se encuentra implícito en el tamaño del PDU (Protocol Data Unit / Unidad de data de protocolo), y se espera que el cliente “conozca” el formato de dicho valor por los tipos de UUID que maneja. Al no enviar la longitud del valor de manera explícita se ahorran bytes, lo cual es muy importante en Bluetooth LE, 43 dado que el MTU (Maximun Transmission Unit / Máxima unidad de transferencia) es de tan solo 23 bytes. El pequeño tamaño del MTU de Bluetooh LE es un problema para atributos con valores de gran longitud. Para dichos casos ATT consta de las operaciones de lectura extendida (readlong) y escritura extendida (writelong), las cuales permiten transferir atributos de gran tamaño en varios trozos. ATT se adapta al MTU de la capa de enlace y no limita el tamaño del paquete al común menor denominador. Por ejemplo, un atributo de 40 bytes demanda una operación de lectura extendida sobre Bluetooth LE, pero puede ser leído automáticamente si el medio de transporte es Bluetooth clásico (BR/EDR) dado que su MTU es de 48 bytes [13]. Al ser un protocolo muy genérico, ATT ofrece muchas libertades y deja ciertas interrogantes como: ¿qué pasaría si los dispositivos ofrecen múltiples servicios? Solo existe un manejador de espacio ATT por cada dispositivo y múltiples servicios tienen que compartir dicho espacio en una manera cooperativa. Para dar solución a la interrogante propuesta Bluetooth LE cuenta con el GATT el cual delimita y da forma al uso de los atributos [13]. 3.9.6. GATT El perfil genérico de atributos también conocido por sus siglas en inglés como GATT define un esqueleto de servicio utilizando el protocolo ATT. Si bien, ATT define solo una estructura plana, los perfiles de Bluetooth requieren de estructuras jerárquicas para su funcionamiento. En líneas generales el GATT define como esos ciertos atributos ATT individuales deben ser agrupados para conformar servicios (estructuras jerárquicas) con propósitos particulares. GATT sirve como base a los perfiles Bluetooth LE de alto nivel [13]. Al igual que ATT, GATT presenta una arquitectura Cliente/Servidor (Ver Figura 3.10) en la cual los datos son encapsulados en servicios y expuestos como características. Un servicio GATT es una colección de características que definen una funcionalidad. Existen dos tipos de servicios en GATT[13]:  Servicio primario: es un servicio que expone las funcionalidades primarias o principales del dispositivo que lo posee. Un servicio primario puede ser incluido en otro servicio.  Servicios secundarios: son servicios subordinados por otro servicio ya sea primario o secundario. Un servicio secundario es solo relevante en el contexto de otro servicio. 44 Figura 3.10 Arquitectura cliente/servidor de GATT En un dispositivo, el marcador de inicio de un servicio es el atributo con el UUID igual a 0x2800. Todos los atributos siguientes pertenecen a dicho servicio hasta que otro atributo 0x2800 es encontrado. Por ejemplo un dispositivo con tres servicios puede tener la distribución de atributos presentada en la Tabla 3.3 [13]. Tabla 3.3 Ejemplo de una distribución de servicios GATT en un dispositivo Manejador UUID Descripción 0x0100 0x2800 Definición del servicio A … … Detalles del servicio 0x0150 0x2800 Definición del servicio B … .. Detalles del servicio 0x0300 0x2800 Definición del servicio C 45 … … Detalles del servicio Los atributos por sí solos no son “conscientes” de a cuál servicio pertenecen. Dado un atributo GATT se puede descifrar a qué servicio pertenece basándose en los rangos de los manejadores. Dichos rangos son descubiertos únicamente en base al UUID 0x2800 [13]. En la Tabla 3.3 para que un atributo pertenezca al servicio B, se debe encontrar entre los manejadores 0x0151 y 0x02ff. Mientras el UUID 0x2800 define servicios primarios, el UUID 0x2801 define servicios secundarios [13]. Para diferenciar los tipos de servicios el atributo delimitador (el atributo con UUID 0x2800 o 0x2801 en caso de ser un servicio secundario) contiene como valor el UUID del servicio específico [13]. EL UUID 0x2800, que es bien conocido por GATT, es usado para delimitar los servicios. Una vez que son encontrados, los atributos son leídos y el segundo UUID (el valor del atributo) contiene la especificación del servicio. De esta manera el cliente puede encontrar todos los servicios GATT sin conocer su tipo específico [13]. Como se mencionó anteriormente, cada servicio GATT está conformado por un conjunto de características. Las características almacenan valores de utilidad para el servicio así como su permisología. Por ejemplo, un termómetro puede tener la “temperatura” como característica, la cual es de solo lectura y una fecha/hora como marca de tiempo, la cual es tanto lectura como escritura (Ver Tabla 3.4) [13]. Tabla 3.4 Ejemplo de características de un servicio GATT Manejador UUID Descripción Valor 0x0100 0x2800 Definición del servicio de termómetro UUID 0x1816 0x0101 0x2803 Descripción UUID 0x2A2B Manejador del valor: 0x0102 46 0x0102 0x2A2B Valor de la temperatura 20 grados 0x0103 0x2803 Descripción UUID 0x2A08 Manejador del valor: 0x0104 0x0104 0x2A08 Fecha/Tiempo 1/1/1980 12:00 En la Tabla 3.4 se puede observar características de los servicios. El atributo principal de característica tiene el UUID 0x2803. Tal cual como pasa con los servicios, este atributo tiene como valor el UUID que describe la característica específica. Cada característica tiene al menos dos atributos: el atributo principal (0x2803) y un atributo que contiene el valor de la característica específica. El atributo principal conoce el manejador del atributo que contiene el valor y el UUID de la característica. El formato del valor de la característica se encuentra definido por su UUID. Si un cliente sabe cómo interpretar dicho UUID será capaz de leer dicha característica en cualquier servicio que la contenga. En caso contrario, si el cliente no sabe cómo interpretar cierto valor UUID lo ignora [13]. Aparte del valor, una característica puede tener otros atributos. En GATT estos atributos son llamados descriptores. Por ejemplo, si necesitamos identificar la unidad de temperatura de un termómetro necesitaremos un descriptor como el de la Tabla 3.4 [13]. 3.9.7. Casos de Uso Bluetooth LE proporciona un nuevo enfoque a los perfiles de aplicación que se han utilizado en las versiones anteriores. En la actualidad existe una gran variedad de dispositivos que manejan datos cuyos formatos son muy comunes entre sí. Como ejemplo de lo anterior podemos tener datos referentes a estados de encendido/apagado, temperaturas, contadoras, tasas, medidas, entre otros. Debido a lo anterior, surgió la necesidad de caracterizar la datos en estructuras reusables, lo que resulto en la introducción de una estructura orientada a objetos denominada servidor. Los nuevos perfiles que surgieron de dicha restructuración ahora son denominados casos de uso [11]. 47 Los casos de uso definen:  Características o estados.  Puntos de control.  Comportamientos.  Relaciones con otras clases (extensiones, inclusiones). A su vez las características definen:  Formatos de datos para una unidad u objeto dado.  Combinaciones con otras características. o Latitud + Longitud + Elevación = Posición. o Peso + Marca de tiempo = Registro de peso.  Ausencia de comportamiento, lo que simplifica las características y permite su reúso. Los casos de uso son asimétricos, solo se define el comportamiento del servidor. El servidor posee una máquina de estado robusta y bien formada y el comportamiento del cliente no se específica. Se plantea un patrón MVC (Model View Controller / Modelo Vista Controlador) en el cual [11]:  El modelo se define como el comportamiento del servidor.  Las vistas son las características que expone el servidor.  El controlador son las características que pueden ser sobrescritas. Los perfiles de Bluetooth LE tienen tres tendencias o clasificaciones [30]:  Perfiles para consumidores. Entre los más destacados de este tipo se tiene el perfil FindMe y el perfil Proximity. El perfil FindMe soporta aplicaciones de mecanismo de encadenado electrónico. Este mecanismo usualmente se refiere a un conjunto de dos piezas inalámbricas que le permite al usuario ubicar objetos perdidos o fuera de vista tecleando un código el cual hace que el objeto encadenado se identifique 48 (realiza algún tipo de alerta). El perfil Proximity soporta soluciones de bloqueo inalámbrico y así como procedimientos de autenticación. El bloqueo inalámbrico consiste de manera general en dos dispositivos, el dispositivo seguro (el que se quiere proteger) y la llave inalámbrica. Cuando la llave inalámbrica se aleja a una distancia determinada del dispositivo seguro, el mismo se bloquea. Igualmente cuando la llave inalámbrica se acerca al dispositivo seguro lo desbloquea.  Perfiles de cuidado de salud. En cuanto al cuidado de la salud Bluetooth LE se centraliza en el monitoreo vital. Actualmente podemos encontrar perfiles de termómetro de salud y monitoreo de ritmo cardíaco. Para el desarrollo y estandarización de estas aplicaciones de cuidado médico, la Bluetooth SIG cuenta con el apoyo de la Continua Health Alliance. Continua Health Alliance es una organización industrial, sin fines de lucro, compuesta por cerca de 240 compañías del ámbito médico y deportivo.  Perfiles de deportes. Los perfiles de deportes de Bluetooth LE se enfocan en el monitorio vital y de ubicación. En este ámbito la Bluetooth SIG también cuenta con el apoyo de la Continua Health Alliance. Es en este apartado donde Bluetooth LE encuentra su competencia más férrea, la solución de estándares industriales ANT. Bluetooth LE fue diseñado para aplicaciones donde la utilización del Bluetooth Clásico no era viable debido a las fuertes restricciones de energía. Todas estas aplicaciones tienen en común la incorporación de sensores (u otros dispositivos periféricos) alimentados por baterías de tamaño muy reducido y su envió de pequeñas cantidades de datos de manera infrecuente. Las aplicaciones basadas en proximidad fueron las primeras en ser implementadas en Bluetooth Low Energy. Por ejemplo, este tipo de aplicaciones de proximidad se pueden implementar en los siguientes escenarios [23]: Incorporando un chip Bluetooth LE en un reloj, el cual este en periódica comunicación con un teléfono celular también equipado con tecnología Bluetooth LE. Si el teléfono se mueve fuera del rango y no logra comunicarse con el reloj que utiliza el usuario, se bloqueara y el reloj emitirá una alarma. Esto evitara que el teléfono sea accidentalmente olvidado en algún lugar y demostrara ser un importante disuasivo para cualquier potencial ladrón. 49 La aplicación de alarma de proximidad puede ser incorporada a un laptop, la cual se bloqueara si el usuario se desplaza fuera de su rango. Tal vez el laptop podría desbloquearse cuando el usuario se encuentra en el rango determinado y presiona un botón en su reloj. Un dispositivo de seguridad infantil en el cual un reloj portado por un niño se comunique con el reloj de sus padres si se encuentran en un mismo rango y que dispare una alarma si el niño se aleja. Debido al bajo costo monetario y de mantenimiento de los sensores Bluetooth LE se impulsará su utilización en lugares públicos. Una aplicación clave puede ser un sistema de ubicación dentro de algún edificio o espacio cerrado (donde no exista señal GPS), en el cual un grupo de sensores ubicados a lo largo de la edificación emitan constante información acerca de su ubicación. Un teléfono celular equipado con la tecnología Bluetooth LE que transite por el rango de algunos sensores le desplegará dicha información a su dueño. En caso que el lugar público se un aeropuerto los sensores también podrían transmitir otro tipo de información adicional como tiempos de vuelo, puertas de abordaje, ofertas especiales de tiendas cercanas, entre otros [23]. Como ya se mencionó anteriormente, la tecnología Bluetooth LE ya se encuentra en uso en el ámbito deportivo. Por ejemplo, una persona que se encuentre ejercitándose puede utilizar su teléfono inteligente equipado con Bluetooth LE como centro de una PAN formada por sus zapatos de correr, una correa de ritmo cardíaco y un reloj deportivo, todos equipados igualmente con chips Bluetooth LE. Alternativamente, el reloj deportivo se puede comunicar con las maquinas del gimnasio que posean Bluetooth LE y transmitir toda la información recaudada al teléfono inteligente. Bluetooth LE también puede ser utilizado de manera cómoda en el hogar para monitorear el ritmo cardíaco y la presión sanguínea. En el hospital puede ser de gran utilidad a los doctores que requieren monitorear a sus pacientes en rehabilitación [23]. 50 3.9.8. Perfil de Monitoreo Cardíaco El presente trabajo se basa en el perfil de monitoreo cardíaco de atletas, por lo tanto se abordará sus características a continuación: El perfil de monitoreo de ritmo cardíaco es usado para permitir la obtención de datos de sensores que implementen el servicio de monitoreo cardíaco. La especificación de dicho perfil es compatible con cualquier dispositivo Bluetooth que incluya servicios GATT y contenga el controlador LE. Para el perfil de monitoreo cardíaco se definen los roles de transmisión y recepción que se deben poseer:  Para el sensor de monitoreo cardíaco (Transmisor), se debe poseer obligatoriamente el servicio de monitoreo cardíaco (Servicio que se encarga de notificar el pulso por segundo) y el servicio de información de dispositivo (Servicio que se encarga de notificar el nivel de batería y características como nombres y marca del dispositivo).  Recolector de los datos (Receptor): Debe implementar obligatoriamente el servicio de monitoreo cardíaco y opcionalmente el de información del dispositivo.  La característica vital del servicio de monitoreo cardíaco se denomina como medición de ritmo cardíaco. La misma es obligatoria dentro del servicio de monitoreo cardíaco en una especificación del mismo. El UUID del servicio de monitoreo cardíaco tendrá el valor de 0x180D [16] y la característica de medición del mismo tendrá el valor de 0x2A37 [16]. La característica de ritmo cardíaco se transmitirá siguiendo el esquema del paquete de la Figura 3.11. 51 Figura 3.11 Estructura del paquete. Servicio monitoreo cardíaco.  En la Figura 3.11 se exponen los campos del paquete de la característica de servicio de medición de ritmo cardíaco, el detalle de los mismos se lista a continuación [16]:  FO (Formato del valor de ritmo cardíaco): Este campo indica si el valor del ritmo cardíaco se encuentra especificado en un entero sin signo de 8 bits (valor 0) o un entero sin signo de 16 bits (valor 1), ambos en unidades de latidos por minuto.  Estado (Estado del sensor de contacto): o Valor 0 (0x00): La propiedad del sensor de contacto no se encuentra soportada por la conexión actual. o Valor 1 (0x01): La propiedad del sensor de contacto no se encuentra soportada por la conexión actual. o Valor 2 (0x10): La propiedad del sensor de contacto es soportada, sin embargo el contacto no es detectado. o Valor 3 (0x11): La propiedad del sensor de contacto es soportada y el contacto ha sido detectado.  EG (Bit de energía consumida): Indica si el campo de energía consumida se encuentra presente (Valor 1) o no (Valor 0) en unidades de Kilo Jules. 52  RR (Intervalo RR): Indica si el campo Intervalo RR se encuentra en el presente en el paquete (Valor 1) o no (Valor 0) en unidades de 1/1024 segundos.  Valor de ritmo cardiiaco: Dependiendo del campo FO este valor tendrá una longitud de 8 o 16 bits donde se almacenará el valor del ritmo cardíaco en un entero sin signo de 8 o 16 bits respectivamente.  Energía consumida: Dependiendo del campo EG este valor estará presente y tendrá una longitud de 16 bits donde se almacena un entero sin signo que envía la energía consumida por el paquete en unidades Kilo Jules.  Intervalo RR: Dependiendo del campo RR este campo almacenará en un entero sin signo de 16 bits el valor del tiempo transcurrido entre cada detección del ritmo cardíaco. Cabe destacar que los campos en la Figura 3.11 se encuentra en orden de octeto más significativos a menos significativos. 53 4. Metodología y Herramientas 4.1. Metodología de Desarrollo de Software Scrum Para estructurar, plantear y controlar el proceso de desarrollo de la aplicación fue utilizada la metodología Scrum, la cual se caracteriza por ser una metodología de desarrollo iterativa e incremental. El principio fundamental del Scrum es reconocer que durante la elaboración del proyecto los clientes pueden cambiar de opinión acerca de lo que realmente necesitan. Estos cambios no esperados no pueden ser canalizados fácilmente. Scrum acepta que el problema no puede ser totalmente definido o entendido en su totalidad desde el inicio del proyecto, por lo tanto se enfoca en maximizar la habilidad del equipo para realizar entregas rápidas y así poder responder a requerimientos emergentes o no planeados. Scrum abre las puertas a organizaciones a ser capaces de auto organizarse por su control de puntos, tareas específicas y granuladas, siguiendo las pautas del desarrollo ágil. La clave principal del Scrum es el planteamiento en la duración del proyecto a desarrollar, de tal manera que el cliente o interesado se encuentre en total conocimiento de la velocidad del grupo de desarrolladores y las fechas estimadas de entrega del proyecto. Con pequeñas reuniones diarias y entregas parciales se logran los tiempos estimados y se pueden capturar requerimientos y funcionalidades no consideradas en el inicio del proyecto. La unidad básica de desarrollo del Scrum se denomina sprint. La misma tiene una duración fija preestablecida. Generalmente el tiempo varía entre una semana y un mes. Cada sprint es precedido por una reunión de planificación, donde se definen las tareas y su puntaje estimado. Este conjunto de tareas representa el objetivo del sprint. 4.1.1. Roles Dueño de Producto (Product Owner) El dueño de producto se encarga de hablar con el cliente y realizar el levantamiento de los requerimientos. Dichos requerimientos son añadidos y priorizados como historias de usuarios en el backlog (Ver Artefactos). Equipo de Desarrollo (Development Team) El equipo de desarrollo se encarga del realizar las actividades descritas en el backlog. Su objetivo es realizar entregas potenciales del producto al final de cada sprint. 54 Maestro Scrum (Scrum Master) El maestro scrum es el encargado de asegurar el correcto cumplimiento de la metodología. No ejerce el papel de líder de equipo, en su defecto cumple con el rol de facilitar al equipo de desarrollo ayuda ante cualquier impedimento que dificulte la entrega pautada al final de cada sprint. 4.1.2. Reuniones Diaria (Daily Scrum) Cada día durante un sprint se lleva a cabo una reunión corta, de a lo sumo quince minutos, para la discusión de las tareas realizadas o por realizar. En dicha reunión cada miembro del equipo responde las siguientes preguntas:  ¿Qué has hecho desde ayer?  ¿Qué tienes planeado hacer hoy?  ¿Existe algún factor que te impida realizar tu trabajo? Refinamiento del Backlog (Backlog Refinement) El objetivo de esta reunión es crear nuevas historias, descomponer historias existentes en tareas más pequeñas, priorizar las mismas y asignarle puntos de acuerdo a su complejidad. Esta reunión es necesaria para poder tener control de las tareas a realizar en el próximo sprint. Planificación de Sprint (Sprint Planning Meeting) Esta reunión se lleva a cabo justo antes del comienzo de un nuevo sprint. En la misma se define el trabajo a ser completado en el siguiente sprint. El resultado de esta reunión es el backlog del próximo sprint. 55 Fin de Ciclo (End of Cycle) Al final de cada sprint se llevan a cabo dos reuniones, la revisión del sprint pasado y su retrospectiva. En la reunión de revisión se analizan las tareas que no pudieron ser completadas, y se presenta el trabajo completado al dueño de producto. En la reunión de retrospectiva los miembros del equipo de desarrollo junto al maestro Scrum discuten sobre el pasado sprint en vía de realizar mejoras a la metodología y al trabajo en general. 4.1.3. Artefactos Backlog del Producto (Product Backlog) El backlog del producto es una lista ordenada de requerimientos necesarios para completar el sistema de manera satisfactoria. Los elementos de la lista son ordenados por el dueño del producto basado en factores como riesgo, valor de negocio, dependencias, entre otros. En general el backlog del producto contiene el “Que” se quiere desarrollar, almacenado en el orden en el cual debe desarrollarse. Cada tarea del backlog tiene un valor estimado de esfuerzo tanto a nivel de negocio como de desarrollo. Estos valores son conocidos como puntos de historia y siguen la secuencia de Fibonacci. Los puntos de historia ayudan al dueño del producto en el establecimiento del orden del backlog. Backlog del Sprint (Sprint Backlog) El backlog del Sprint es el conjunto de tareas planificadas para el sprint. Estas tareas son seleccionadas del backlog del producto y su cantidad depende de la velocidad del equipo de desarrollo. La velocidad del equipo de desarrollo proviene del promedio de puntos realizados por el equipo en sprints anteriores. 4.2. Herramientas de Software Para la realización de la aplicación un conjunto de programas, librerías y tecnologías fueron integrados de tal manera de llevar a cabo los objetivos planteados en este documento. A continuación se listan las herramientas de software utilizadas. 4.2.1. Nodejs Nodejs es una plataforma de software para el desarrollo ágil de aplicaciones de red escalables. Se encuentra construido a partir del motor Javascript V8 desarrollado por Google el 56 cual es implementado en su navegador web Chrome. Utiliza Javascript como lenguaje de programación. Se basa en un modelo de entrada y salida no bloqueante orientado a eventos. Esto permite implementar aplicaciones de intercambio intensivo de datos en tiempo real. Contiene un servidor HTTP integrado lo que permite ejecutar un servidor web sin la necesidad de utilizar algún software adicional. El servidor es totalmente programable lo cual otorga un mayor control sobre su funcionamiento [22]. 4.2.2. MySQL MySQL es un sistema código abierto para el manejo de base de datos relacionales. En la actualidad se encuentra administrado por Oracle. Su código fuente está escrito en los lenguajes C y C++. MySQL trabaja bajo un esquema de múltiples hilos y múltiples usuarios. Es un sistema multi-plataforma (Unix, Windows, Mac OS) y multi-lenguaje (existen librerías de C, Pyhton, PHP, Java, Nodejs entre otra, disponibles para poder conectarse con MySQL) [28]. Es comúnmente utilizado en el ámbito de las aplicaciones web dado a su alto nivel de rendimiento y su característica de ser un software código abierto. MySQL permite la creación de base datos relacionales en servidores web para el almacenamiento de los datos o procesos automatizados [29]. 4.2.3. JavaScript JavaScript es un lenguaje de programación interpretado que puede ser insertado en documentos HTML y procesado por todos los navegadores web actuales [18]. Es un lenguaje de programación multiparadigma, soporta programación orientada a objetos, imperativa y funcional. Comúnmente se utiliza en aplicaciones web para brindar una mayor interacción con el usuario final, controlar el navegador, realizar comunicaciones asíncronas entre el navegador (cliente) y el servidor. Uno de sus principales usos consiste en alterar dinámicamente el contenido desplegado de las aplicaciones web para simular comportamientos simulares a aplicaciones de escritorio [14]. Actualmente también es utilizado para la programación del lado del servidor (Nodejs). 4.2.4. Noble Noble es un módulo desarrollado para Nodejs que permite la interacción con la pila de protocolos de Bluetooth 4.0. Se encuentra desarrollado para trabajar en plataformas Mac OS X 57 y Linux. Noble brinda la capacidad de escanear dispositivos Bluetooth y ejecutar acciones propias de la versión 4.0 de Bluetooth como listar servicios y características. También permite leer, escribir y recibir notificaciones sobre las características de los dispositivos [21]. 4.2.5. Jade Jade es un motor de plantillas desarrollado en Javascript y diseñado originalmente para trabajar con Nodejs, sin embargo, puede ser utilizado con otras plataformas. Su funcionamiento consiste en la compilación de un archivo escrito en un lenguaje de alto nivel (Jade), normalmente más fácil de leer y mantener, la cual genera documentos derivados del XML como HTML, RSS, entre otros [17]. 4.2.6. Bootstrap Bootstrap es un framework de código abierto desarrollado por Twitter. Es una combinación de código CSS y Javascript diseñado para ayudar a construir componentes para la interfaces de las aplicaciones web. Brinda la capacidad de construir rápidamente interfaces elegantes y ricas en funcionalidad. Una de las características más llamativas de Bootstrap es el diseño adaptable el cual le permite a las interfaces ajustarse dinámicamente a la resolución en la cual son presentadas. Bootstrap fue diseñado para soportar HTML5 y CSS3 [27]. 4.2.7. Angularjs Angularjs es un framework Javascript de código abierto mantenido por Google para el desarrollo de aplicaciones web dinámicas. Se adapta muy bien en el desarrollo de aplicaciones web de una página. Su objetivo es facilitar la programación y las pruebas de aplicaciones del lado del cliente a través de la introducción de una estructura modelo, vista y controlador MVC. Básicamente la librería de angular lee el HTML en búsqueda de etiquetas especiales las cuales proporcionan las instrucciones necesarias para vincular ciertos elementos de la página con un modelo representado por variables Javascript. El desarrollador define controladores para manipular los modelos y mantener la lógica de la aplicación. Adicionalmente las variables Javascript que mantienen los modelos pueden ser definidos manualmente o pueden ser obtenidos de recursos JSON estáticos o dinámicos [2]. 58 4.2.8. Git Git es un software libre que se encarga del control distribuido de versiones y la administración de código fuente. Fue inicialmente diseñado y desarrollado por Linus Torvalds para la administración del código fuente del kernel de Linux en el 2005. Cada directorio de trabajo en Git es un repositorio completo con toda la historia sobre cada uno de sus archivos y con plena capacidad de hacer seguimiento de versiones. No depende de acceso a la red ni de un servidor centralizado [15]. 4.2.9. Bitbucket Bitbucket es un servicio web colaborativo desarrollado por Atlassian que permite el alojamiento, administración y la compartición de repositorios Git en la nube. Bitbucket ofrece planes comerciales y cuentas gratis. Se encuentra desarrollado bajo el lenguaje de programación Phython [3]. 4.2.10. Ubuntu Ubuntu es un sistema operativo basado en el kernel de Linux y su distribución Debian desarrollado y mantenido por la comunidad de usuarios. Es distribuido como software libre y de código abierto [24]. La filosofía de Ubuntu se basa en los siguientes principios:  El usuario debe tener la libertad de descargar, ejecutar, copiar, distribuir, estudiar, compartir, cambiar y mejorar su software para cualquier propósito, sin tener que pagar derechos de licencia.  Debe ser capaz de utilizar su software en el idioma de su elección.  Debe ser capaz de utilizar todo el software independientemente de su discapacidad. http://doc.ubuntu-es.org/Filosof%C3%ADa_Ubuntu 59 4.2.11. BlueZ BlueZ es la implementación de la pila de protocolos de Bluetooth para sistemas Linux. BlueZ brinda soporte para el núcleo de las capas y protocolos de Bluetooth. Es flexible, eficiente y fue implementado de manera modular [9].  Entre sus características se pueden encontrar:  Procesamiento de datos multi-hilos  Soporte para múltiplos dispositivos Bluetooth.  Interfaz estándar de sockets para todas las capas.  Soporte de seguridad a nivel de servicio y dispositivo. A partir de la versión 4.1 BlueZ cuenta con soporte para la versión 4.0 de Bluetooth. 4.3. Herramientas de Hardware Para la captura y transmisión del ritmo cardíaco se utilizaron los siguientes componentes de hardware. 4.3.1. Dongle Bluetooth dual-mode. Es un adaptador USB 2.0 capaz de comunicarse con dispositivos Bluetooth 4.0 o con versiones anteriores. 4.3.2. Polar H7 Bluetooth Smart Heart Rate Sensor. Es un sensor de ritmo cardíaco que utiliza Bluetooth 4.0 para la transmisión de sus lecturas a cualquier otro dispositivo Bluetooth 4.0 mediante el perfil estándar de ritmo cardíaco. 60 5. Diseño e Implementación La implementación final del sistema desarrollado en el presente trabajo de investigación (Ver Figura 5.1), consta de un servidor de Nodejs (Ver Nodejs) centralizado corriendo sobre un sistema operativo Ubuntu 12.10 (Ver Ubuntu). En el cual se encuentra conectado un Dongle USB Bluetooth que permite la captura de los datos enviados desde las correas Polar H7. Una vez establecida la comunicación del dongle con las correas transmisoras, el servidor Nodejs se encarga de desplegar en el navegador la interpretación de los datos obtenidos de tal manera que sean entendibles para un usuario final. Figura 5.1 Implementación final del sistema de monitoreo cardíaco. 61 5.1. Requerimientos del Sistema El requerimiento general del sistema plantea la creación de una aplicación para computadoras de escritorio enfocada a la captura del ritmo cardíaco (correas de pecho transmisoras) mediante un receptor Bluetooth 4.0 conectado a la misma por un puerto USB. La aplicación debe ser capaz de mostrar de manera clara y concisa valores útiles para la medición del rendimiento de los atletas que usan las correas transmisoras, además de realizar la persistencia de los datos obtenidos. 5.1.1. Requerimientos Funcionales Los requerimientos funcionales para la creación de la aplicación se listan a continuación:  La aplicación debe permitir la captura de la medición del ritmo cardíaco de múltiples correas transmisoras.  La aplicación deberá tener una interfaz para ingreso de usuarios. En la misma se almacenará información relevante para el cálculo de las calorías quemadas. Sexo, edad y peso son las características necesarias.  La aplicación deberá tener una interfaz de configuración de valores por defecto, que servirán de guía en el cálculo de las calorías quemadas para aquellas personas que no gusten compartir sus datos personales.  La aplicación deberá poseer una interfaz de grupos donde se agreguen usuarios. Dicha interfaz permitirá el control de usuarios según una clase en común o un horario específico.  La aplicación debe ser capaz de mostrar un historial de muestras capturadas. Dichas muestras le permitirán a los usuarios del sistema observar su progreso en cuanto a calorías quemadas y promedio de ritmo cardíaco según actividades pasadas. 62 5.1.2. Requerimientos no Funcionales Los requerimientos no funcionales para la creación de la aplicación se listan a continuación:  Si algún error ocurre durante la transmisión de los datos, el sistema deberá ser capaz de mantener un estado cercano para hacer una recuperación y continuar con la captura.  Un usuario sin experiencia sobre la aplicación deberá poder usarla. Por lo tanto, la aplicación deber ser intuitiva y fácil de usar.  Las correas para la captura de los datos deben transmitir usando Bluetooth 4.0 y su perfil de medición de ritmo cardíaco. 5.2. Diseño de la Solución En base a la sección anterior se consideró como punto de partida la captura de los datos enviados por las correas Bluetooth 4.0. Para este objetivo se seleccionó una correa de pecho marca Polar H7, debido a su alta popularidad y por ser una de las marcas más reconocidas en cuanto monitoreo físico de atletas a nivel mundial. Luego de la captura de los datos, el segundo punto a desarrollar es la interfaz para mostrarlos en una página web usable. Este despliegue de información de las correas detectadas es automático, no existe la necesidad de que el usuario configuré algún tipo de PIN o tenga que realizar una búsqueda de los dispositivos cercanos. Esto se logra haciendo un escaneo constante sobre los dispositivos cercanos que se encuentran enviando el perfil de monitoreo cardíaco a una distancia cercana. En cuanto a los usuarios y/o atletas, se debe permitir el ingreso de los mismos al sistema, es decir, realizar la persistencia de sus datos en una base de datos, de tal manera de poder estimar las calorías quemadas según su peso, edad y sexo. Para aquellos usuarios que no quieran compartir sus datos personales, el sistema cuenta con una interfaz de características predefinidas donde el administrador del sistema podrá configurarlas. Adicionalmente el sistema cuenta con una interfaz para configuración de grupos, la cual permitirá organizar al administrador del sistema los usuarios que se encuentren registrados y poder clasificarlos según su criterio. 63 En cuanto al cálculo de las calorías quemadas, se realizan por tiempo de ejecución de algún tipo de ejercicio y existe un contador que se puede configurar según se tenga estimado el tiempo de una sesión de entrenamiento. Dado el tiempo de duración de la sesión de entrenamiento, la aplicación deberá realizar escrituras periódicas en la base de datos, de tal manera de poder tener algún punto de partida cercano en el dado caso de que algún error inesperado ocurra. Los datos almacenados por las sesiones de ejercicios deben tener alguna vista para la visualización de los históricos según: grupos, usuarios y día de entrenamiento. De esta manera se podrá saber el avance y rendimiento de los atletas en el tiempo. La interfaz principal del sistema tendrá dos modos de visualización, de lista y en forma de cuadros. De esta manera el administrador podrá decidir cuál es la mejor opción a visualizar según el tamaño de la pantalla en la cual se encuentra la aplicación desplegándose. La integración de las vistas y componentes mencionados anteriormente, unidos a las correas de pecho transmisoras y al receptor Bluetooth 4.0, son los que conforman el sistema en el cual se centra este trabajo especial de grado. 5.3. Diagrama de Casos de Usos Una vez descrito el diseño de la solución, se procede al desarrollo del diagrama de casos de uso, el cual sirve para mostrar las funciones de un sistema desde el punto de vista de sus interacciones con el exterior sin entrar ni en la descripción detallada ni en la implementación de sus componentes. 5.3.1. Caso de Uso de Nivel 0 En este nivel se específica y se modela el sistema de manera general, mostrando la interacción de los actores y el rol que desempeñan en el sistema (Ver Figura 5.2 y Tabla 5.1 Actores caso de uso Nivel 0). 64 Figura 5.2 Caso de uso Nivel 0 Tabla 5.1 Actores caso de uso Nivel 0 Atleta: Representado por el usuario que portará la correa transmisora del ritmo cardíaco. Administrador: Actor que representa el encargado del sistema, introduce los datos de los atletas e interactúa de forma directa con la aplicación. 65 5.3.2. Caso de Uso de Nivel 1 Este nivel muestra mayor profundidad y detalles sobre la interacción de los actores y las funcionales del sistema (Ver Figura 5.3, Figura 5.4, 66 Tabla 5.2, Tabla 5.3, Tabla 5.4, Tabla 5.5 y Tabla 5.6). Figura 5.3 Caso de uso Nivel 1. Visualización de Datos 67 Tabla 5.2 Caso de uso Nivel 1. Activar Correa Caso de uso: Activar Correa. Actor: Atleta. Flujo Básico: a) El usuario ajusta la correa de pecho un poco más arriba de su abdomen. b) Coloca la correa en la banda de pecho para iniciar la transmisión. Pre Condiciones: La correa transmisora debe tener batería. Caso de uso: Visualizar Datos. Actor: Atleta. Flujo Básico: El usuario mientras realiza actividad física monitorea su avance según la intensidad del ejercicio. Pre Condiciones: a) La correa transmisora debe estar correctamente ajustada al atleta para poder visualizar los datos. b) La aplicación debe estar posicionada en la vista de monitores activos. 68 Tabla 5.3 Caso de uso Nivel 1. Desactivar Correa Caso de uso: Desactivar Correa. Actor: Atleta. Flujo Básico: a) El usuario remueve el transmisor de la correa. b) Coloca la correa en la banda de pecho para iniciar la transmisión. Pre Condiciones: La correa transmisora debe estar enviando datos en el momento de desactivarla. Post Condiciones: El usuario puede volver a activar la transmisión de la correa en dado caso que lo necesite. 69 Figura 5.4 Caso de uso Nivel 1. Administración del sistema Tabla 5.4 Caso de uso Nivel 1. Configurar Datos Caso de uso: Configurar Datos. Actor: Administrador. Flujo Básico: a) El usuario administrador configura los datos tanto de usuarios como grupos. b) Se preparan cada correa la información para el cálculo de las calorías quemadas según el usuario que la porte. Pre Condiciones: El servidor web debe estar encendido. Post Condiciones: Los cambios realizados pueden ser borrados o editados. 70 Tabla 5.5 Caso de uso Nivel 1. Iniciar Sesión Caso de uso: Iniciar Sesión. Actor: Administrador. Flujo Básico: El usuario administrador realiza la configuración para el inicio se sesión, indicando: Nombre, duración en horas y el grupo. Pre Condiciones: El grupo y los usuarios que entrarán en la sesión de ejercicios deben estar configurados en el sistema. Tabla 5.6 Caso de uso Nivel 1. Detener Sesión Caso de uso: Detener Sesión. Actor: Administrador. Flujo Básico: El usuario administrador presiona el botón de terminar sesión actual, cerrando de esta manera la sesión activa de entrenamiento. Pre Condiciones: Debe existir una sesión activa. 71 5.4. Diagrama Entidad Relación La Figura 5.5 muestra el diagrama de entidad relación de la aplicación con sus tipos de datos. Figura 5.5 Diagrama de Entidad Relación. 72 5.4.1. Tablas Usadas en el Sistema En la construcción de la aplicación fue necesario el desarrollo de un conjunto de tablas que conforman la lógica que hace posible el funcionamiento y la persistencia de la aplicación, las mismas fueron diseñadas para soportar todos los objetivos planteados en el presente trabajo. Dichas tablas serán explicadas a continuación: Tabla Session Mantiene la información necesaria para cada sesión. Interpretando los registros de la misma, es posible saber si existe una sesión activa o no. Almacena duración y hora de inicio de la sesión para poder calcular el cronómetro de la sesión activa. Tabla SessionDet Sus registros son los que hacen posible identificar un usuario en una sesión, así como poder reestablecer la sesión activa en caso de algún error inesperado. Strap Tabla que almacena las correas que se han asociado con el receptor Bluetooth 4.0 donde se encuentre corriendo la aplicación. De esta manera es posible saber el ultimo usuario que uso una correa específica y ahorrar tiempo al administrador en la configuración de las mismas en cada sesión de ejercicio. Group En esta tabla se almacena la organización por grupos del sistema, que son usados en las sesiones para un mayor control de los usuarios registrados en las mismas. User En esta tabla se almacena la información de los usuarios registrados en el sistema, así como sus características principales que servirán de ayuda para los cálculos de calorías quemadas en la aplicación. 73 Group_users Almacena la relación entre los grupos y sus usuarios, de tal manera que se pueda saber que usuarios pertenecen a un grupo dado y permitir que en varios grupos este presente un mismo usuario. DefaultConfig En esta tabla se almacenan los datos por defecto para el cálculo de las calorías quemadas en el sistema. Estos son usados si los campos del usuario registrado se encuentran vacíos o si se trata de un invitado que no será registrado en el sistema. 5.4.2. Lógica de Funcionamiento de la Aplicación Al momento de realizar una captura se realiza una búsqueda en la tabla Session para saber si existe una sesión activa. Si no existe una sesión activa, se pide al usuario la información necesaria para poder hacer la inserción del registro correspondiente a la sesión que se activará inmediatamente. Luego de que la sesión se encuentre activa, a las correas se les configurará automáticamente las características del último usuario registrado en el sistema que haya usado dicha correa. Si se desea cambiar el usuario de una correa específica es posible, ya que se podrán asociar a las correas cualquier usuario perteneciente al grupo de la sesión activa. Luego de la configuración necesaria para cada correa y usuario, el sistema escribirá aproximadamente cada 10 segundos en la tabla SessionDet el registro correspondiente a la captura del promedio de ritmo cardíaco y las calorías quemadas para cada atleta. Este proceso se repetirá tanta cantidad de veces como sea necesario, de tal manera de tener una muestra cercana en el tiempo. Haciendo uso de estos registros en la tabla SessionDet, es posible restaurar el estado de la sesión activa y sus usuarios de manera automática luego de algún error imprevisto. Al finalizar el cronometro contador del tiempo restante de la sesión activa, o haciéndolo manualmente el sistema detendrá la sesión activa, realizando una operación de actualización sobre el registro correspondiente a dicha sesión en la tabla Session, indicando así la culminación de la misma y la finalización del cálculo de las calorías quemadas. 74 5.4.3. Implementación Detallada del manejador Bluetooth La captura de los datos enviados desde la las correas transmisoras es realizada por el servidor donde se encuentra instanciado el servidor web y el servidor de captura de datos Bluetooth 4.0 llamado Noble. Noble es el encargado de lidiar con las correas detectadas tanto en recibir los datos enviados, así como enviar a través de sockets notificaciones al servidor web. Figura 5.6 Método manejador de estados del receptor Bluetooth. Como se detalla en la Figura 5.6, en el método stateChange(), se captura el estado del adaptador Bluetooth 4.0 conectado al sistema. Teniendo en cuenta que si su estado es poweredOn es posible comenzar a escanear a los dispositivos que exporten el servido de monitoreo cardíaco, identificado con el UUID 180d [16]. 75 Figura 5.7 Método de notificación de escaneo Bluetooth. Como se detalla en la Figura 5.7, los métodos scanStart() y scanStop() realizan la función de escanear o detener la búsqueda de dispositivos de Bluetooth 4.0. Los mismos se ejecutan periódicamente de forma constante y así el sistema se asocie o desasocie de las correas transmisoras del ritmo cardíaco según sea el caso. 76 Figura 5.8 Métodos de captura del servicio de ritmo cardíaco. En la Figura 5.8 se detalla el proceso para la captura de la característica del monitoreo cardíaco enviado por las correas transmisoras. Cabe destacar que los servicios que se descubren por el método discover() se encuentran filtrados por la búsqueda iniciada en la Figura 5.6, por lo que solo se descubrirá el servicio de monitoreo cardíaco 180d. Luego del descubrimiento de los servicios exportados, se pasa a la búsqueda de las características, en 77 este caso las características para el servicio 180d. El método encargado de la misma es characteristicsDiscover(). El método read() se encarga de extraer de la característica el paquete con la información del valor del ritmo cardíaco, el cual será enviado mediante un socket al servidor web, el mismo tendrá la tarea de desplegar la información en la interfaz y hacer los cálculos necesarios. Esto se logra haciendo uso del método sockets.emit(). 5.4.4. Implementación de las Interfaces Las interfaces de la aplicación están diseñadas para que sean de fácil uso y entendimiento. A continuación se realiza una breve explicación de las mismas: Figura 5.9 Interfaz para manejo de usuarios. En la Figura 5.9 se puede observar la interfaz de visualización de usuarios del sistema, en la cual se pueden editar, crear y eliminar usuarios. Esta interfaz se realizó en forma de malla para poder aprovechar mejor el espacio de la pantalla en la cual se visualice. 78 Figura 5.10 Formulario de ingreso de usuario. Para la creación y edición de los usuarios se creó un formulario del tipo modal, el cual se puede observar en la Figura 5.10. Los campos sombreados en rojo son requeridos y en los campos de peso, sexo y edad se precargan los valores predefinidos en la interfaz de la Figura 5.14. 79 Figura 5.11 Interfaz de manejo de Grupos En la Figura 5.11 se puede observar la interfaz para creación y organización de grupos y sus usuarios. En la misma se pueden remover o agregar usuarios de un grupo existente, hacer un grupo específico por defecto en el sistema o incluso borrar un grupo con la relación de todos sus usuarios. 80 Figura 5.12 Formulario de ingreso de grupos. Para la creación de un grupo nuevo se creó la interfaz tipo modal representada en la Figura 5.12. Los campos requeridos están sombreados en color rojo. 81 Figura 5.13 Interfaz de información de leyenda para el entendimiento de colores de intensidad del ritmo cardíaco. Para la leyenda de colores según la intensidad del ritmo cardíaco se creó una tabla del tipo leyenda (Ver Figura 5.13). En la misma se encuentra una breve descripción de los rangos de intensidad del ritmo cardíaco y su correspondencia en colores para la aplicación. 82 Figura 5.14 Interfaz de configuración de valores predeterminados para el cálculo de calorías. Para la configuración por defecto de los usuarios se generó una vista donde se podrán editar los valores (Ver Figura 5.14). Dichos valores se encontrarán por defecto en el formulario de nuevos usuarios (Ver Figura 5.10) y en las correas que no tengan algún usuario asignado. 83 Figura 5.15 Interfaz de visualización de monitores cardíacos en modo rectangular. Figura 5.16 Interfaz de visualización de monitores cardíacos en modo lista. En cuanto a la interfaz de las correas transmisoras activas en el sistema, se decidieron realizar dos tipos de interfaces. La interfaz en forma rectangular o de libro se encuentra diseñada para desplegar la aplicación en pantallas grandes y anchas (Ver Figura 5.15), mientras que la interfaz en forma de lista se encuentra diseñada para pantallas más pequeñas donde el espacio es un factor crítico (Ver Figura 5.16). 84 Figura 5.17 Interfaz de visualización de sesiones del sistema. La Figura 5.17 muestra la interfaz de visualización de sesiones, la misma tiene varios filtros en los cuales se pueden especificar el usuario, grupo o día por el que se desea filtrar los registros almacenados en la base de datos. Los valores a mostrar en esta interfaz son el ritmo cardíaco promedio y las calorías quemadas en la sesión de ejercicios en la cual se realizó la captura. 85 6. Pruebas y Análisis de los Datos 6.1. Pruebas de Funcionalidad en Ambiente Simulado El objetivo de estas pruebas es validar el comportamiento del sistema en relación a sus requerimientos y especificaciones. Estas son realizadas principalmente para detectar posibles fallas o errores generados en la fase de programación. Para la aplicación desarrollada fueron realizadas pruebas en ambientes estacionarios sin realizar actividad física, ya que las correas envían datos desde que se conectan al atleta este o no realizando actividad física. El ambiente utilizado para las pruebas de funcionalidad fue un computador con el sistema operativo Ubuntu y utilizando la librería con soporte de Bluetooth 4.0 llamada BlueZ. A continuación sus especificaciones.  Máquina con Sistema Operativo Ubuntu o Versión del sistema operativo Ubuntu 12.04. o 2 GB de Memoria RAM. o 20 GB de Memoria Interna.  Librería BlueZ o Versión de la librería 4.101 Una vez definidos el ambiente y la librería para soporte de Bluetooth 4.0, se pudo dar inicio a las pruebas. En general las pruebas de funcionalidad realizadas fueron las siguientes:  Instalación de la aplicación: Debido a que existen una serie de tecnologías necesarias, es requerido realizar la instalación de Nodejs en su versión 0.8.25 y MySQL Server en su versión 6.0.7. De esta manera, el Servidor Web y el código del Servidor Manejador del dispositivo Bluetooth podrán ejecutarse.  Inicio y finalización del Servidor Web y Servidor Manejador Bluetooth: Para dar inicio a las funciones del Servidor Web y el Servidor Manejador Bluetooth es necesario realizar la instalación de los siguientes paquetes para Nodejs: o Jade: Ejecutando el comando, npm install jade o Orm MySQL: Ejecutando el comando, npm install orm 86 o Noble: Ejecutando el comando, npm install noble o Socket.io: Ejecutando el comando, npm install socket.io Luego de la instalación de todas las dependencias el servidor debería poder iniciarse como se muestra en la Figura 6.1. Figura 6.1 Estado inicial por consola del Servidor Web.  Captura de datos: Para la captura de datos se realizaron pruebas sencillas bajo un nivel de esfuerzo físico muy bajo. De dichas pruebas se obtuvieron resultados como los que se pueden observar en la Figura 6.2. 87 Figura 6.2 Resultados de pruebas en esfuerzo físico mínimo.  Almacenamiento de los datos: Se comprueba mediante consultas SQL que el almacenamiento de los datos se encuentre presente en MySQL (Ver Figura 6.3), esto debido a que los cálculos son realizados en el navegador web del lado del cliente y son enviados al servidor mediante solicitudes de escritura al ORM. Figura 6.3 Ejecución de consulta SQL sobre la Tabla SessionDet. 88 6.2. Pruebas de Funcionalidad en Ambiente Real Para las pruebas en ambiente real se plantearon tres escenarios, en los cuales se mide el alcance de la aplicación y su efectividad con respecto al ambiente donde se realizan las mismas. A continuación se listan las pruebas realizadas según en lugar donde se llevaron a cabo y el tipo de ejercicio realizado:  Barras y paralelas: o Lugar: La carlota. o Día: 24 de septiembre de 2013. o Actores: Diego Pérez y Gabriel Araujo. o Duración de la prueba: 1 hora. En esta prueba se logró obtener un registro constante de los datos, ya que los actores ser encontraban muy cerca del laptop que se encargaba de recolectar el ritmo cardíaco de las correas transmisoras. Cabe destacar que en estos ejercicios existen períodos de descanso, por lo que se calculan las calorías quemadas según el promedio del ritmo cardíaco. En la Figura 6.4 se puede observar el comportamiento de los valores de los actores. Figura 6.4 Resultado de prueba ante ejercicios de barras y paralelas. 89  Fútbol sala: o Lugar: Macaracuay. o Día: 26 de septiembre de 2013. o Actores: Edward De Sousa, Diego Pérez y Gabriel Araujo. o Duración de la prueba: 1,5 horas. En la siguiente prueba no se logró obtener un registro constante de los participantes, dado que a medida que los actores se alejaban del laptop receptor del ritmo cardíaco, la señal se perdía. Sin embargo el sistema era capaz de seguir estimando según el promedio de las capturas de los actores cuando se movilizaban en la cancha a menos de unos quince metros del receptor. Como se puede observar en la Figura 6.5, los datos fueron recolectados pero el ritmo cardíaco no es lo suficientemente preciso por la pérdida de muestras cuando los actores se encontraban lejos del receptor. De los resultados de dicha prueba se puede observar que el alcance de la aplicación está limitado a actividades físicas donde los actores se encuentren cercanos al receptor del ritmo cardíaco, es decir, en actividades estacionarias donde el desplazamiento del individuo sea mínimo. Figura 6.5 Resultado de prueba ante ejercicio de fútbol sala. 90 7. Conclusiones En las últimas décadas el hombre ha tratado de mantener el ejercicio como un escape a la rutina diaria, partiendo del hecho que es una forma de drenar el estrés. Sin embargo, en muchos casos los deportistas necesitan medir su avance en el tiempo y escuchar su cuerpo para poder exigirse un poco más en su rutina de ejercicios. La solución que se presenta en este trabajo es un mundo de posibilidades para la medición de rendimiento de los atletas en múltiples disciplinas, como por ejemplo: Spinning, TRX, Insanity, Trote estacionario, Taebox, entre otros. Se solicitó a múltiples personas ideas en cuanto a la interfaz para agregar características necesarias a la aplicación, en fin de que la misma fuese útil y fácil de utilizar. Los requerimientos planteados en el diseño de la aplicación fueron alcanzados en su totalidad. 7.1. Contribuciones Tecnología de servidor de bajo costo: Debido al alto costo de las correas transmisoras y los teléfonos inteligentes con soporte de Bluetooth 4.0, el presente trabajo ofrece una opción económica para gimnasios que deseen implementar el monitoreo con un receptor de información centralizado, donde el gasto ser realizaría solo en las correas transmisoras. De esta manera podrían incluso organizar a sus clientes y llevar el control de las estadísticas de cada uno en sus rutinas de entrenamiento. Proyecto piloto para la tecnología Bluetooth 4.0: El involucrar la tecnología de Bluetooth 4.0 presentó un fuerte reto, debido a que es una tecnología relativamente nueva y existe poca documentación de aplicaciones funcionales. Aunque colaboró enormemente al sistema que la tecnología es un estándar y se puede encontrar la documentación de la misma fácilmente. Herramienta para el gimnasio de APUCV: La aplicación desarrollada puede ser instalada en el gimnasio del APUCV, además de aportar a la universidad el conocimiento de una tecnología muy reciente en una aplicación completamente funcional. 91 Código fuente visible: El código fuente se encontrará visible a cualquier investigador interesado en el tema, y así pueda entender descubrimiento de los servicios y características de un dispositivo Bluetooth 4.0, así como interpretar el paquete que exporta dichas características. 7.2. Limitaciones Las limitaciones presentes en el desarrollo de la aplicación se listan a continuación:  La arquitectura, ya que la aplicación solo funciona en ambientes Linux. Además, la instalación de la aplicación tiene un conjunto de pasos específicos y complejos.  El sistema es dependiente de la tecnología Bluetooth 4.0. Correas transmisoras que no posean dicha tecnología no podrán ser detectadas por el receptor.  El código de la librería noble usada para la implementación del servidor receptor del ritmo cardíaco se encuentra aún en desarrollo, por lo tanto, aún se encuentra inestable y presenta errores internos. 7.3. Trabajos Futuros En cuanto a trabajos futuros, se plantean las siguientes recomendaciones para mejorar el sistema o desarrollar algún sistema parecido: El código fuente de la librería noble usada para la recepción de los datos enviados de las correas transmisoras se encuentra bajo desarrollo, por lo que en un futuro la misma se encontrará disponible para otros sistemas operativos. Es importante resaltar que el código de la aplicación se encuentra en su totalidad en lenguaje Javascript, por lo tanto es recomendable tener un dominio considerable sobre el lenguaje antes de tratar de extender las funcionalidades de la aplicación. En caso de que a futuro se presenten nuevos requerimientos, la aplicación está organizada en modelos, vistas y controladores. Siguiendo el patrón de diseño MVC se realizó una organización del código muy fácil de entender, de tal manera de que nuevos requerimientos sean fácilmente configurables usando las herramientas ya existentes. Sin embargo, la integración entre las vistas y los controladores se realizó usando Angular-js por lo 92 que es recomendable entender su funcionamiento antes de intentar realizar algún cambio funcional en la aplicación. La implementación del código receptor se puede extrapolar a otros sistemas, debido a que se encuentra programada en Javascript y siguiendo la documentación de noble se puede lograr una migración de la captura de los servicios y características. 93 Referencias Bibliográficas [1] ¿Qué es un pulsómetro?. [En línea] 13 de Noviembre de 2012. http://www.viajoven.com/viajoven/fitness/pulsometro/pulsometro.php [2] An introduction to angular. [En línea] 15 de Agosto 2013. http://www.webdesignerdepot.com/2013/04/an-introduction-to-angularjs/ [3] Atlassian Bitbucket. [En línea] 15 de Agosto 2013. https://bitbucket.org/ [4] Blue Tomorrow. [En línea] 01 de Diciembre de 2012. http://www.bluetomorrow.com/about- bluetooth-technology/history-of-bluetooth/bluetooth-history.html. [5] Bluegiga Tecnhologies. Bluetooth Low Energy Getting Started. Mayo, 2011. [6] BluegigaTecnhologies. Bluetooth Low Energy Technology. Mayo, 2011. [7] Bluetooth SIG. Bluetooth 4.0 Core SPEC. Junio, 2010. [8] Bluetooth. Estándar para la conexión sin cables. [En línea] 10 de Diciembre de 2012. http://www.monografias.com/trabajos11/blue/blue.shtml [9] Bluez About. [En línea] 15 de Agosto 2013. http://www.bluez.org/about/ [10] Como funciona Bluetooth. [En línea] 10 de Diciembre de 2012. http://es.kioskea.net/contents/bluetooth/bluetooth-fonctionnement.php3 [11] CRS. Bluetooth Low Energy. 2011 [12] El electrocardiógrafo. [En línea] 20 de Diciembre de 2012. http://www.scielo.cl/scielo.php?pid=S0034-98872004000200018&script=sci_arttext&tlng [13] Elvis Pfützenreuter. Bluetooth: ATT and GATT. 2011 [14] Flanagan, David; Ferguson, Paula (2006). JavaScript: The Definitive Guide (5th ed.). O'Reilly & Associates. ISBN 0-596-10199-6 [15] Git Book. [En línea] 15 de Agosto 2013. http://git-scm.com/book/en/ [16] Heart Rate Measurement. [En línea] 15 Mayo de 2013. https://developer.bluetooth.org/gatt/characteristics/Pages/CharacteristicViewer.aspx?u=org .bluetooth.characteristic.heart_rate_measurement.xml [17] Jade. [En línea] 15 de Agosto 2013. http://jade-lang.com/ [18] Javascript Introduction. [En línea] 15 de Agosto 2013. http://www.w3schools.com/js/js_intro.asp http://www.viajoven.com/viajoven/fitness/pulsometro/pulsometro.php http://www.webdesignerdepot.com/2013/04/an-introduction-to-angularjs/ https://bitbucket.org/ http://www.bluetomorrow.com/about-bluetooth-technology/history-of-bluetooth/bluetooth-history.html. http://www.bluetomorrow.com/about-bluetooth-technology/history-of-bluetooth/bluetooth-history.html. http://www.monografias.com/trabajos11/blue/blue.shtml http://www.bluez.org/about/ http://es.kioskea.net/contents/bluetooth/bluetooth-fonctionnement.php3 http://www.scielo.cl/scielo.php?pid=S0034-98872004000200018&script=sci_arttext&tlng http://epx.com.br/artigos/bluetooth_gatt.php http://en.wikipedia.org/wiki/O%27Reilly_Media http://en.wikipedia.org/wiki/International_Standard_Book_Number http://en.wikipedia.org/wiki/Special:BookSources/0-596-10199-6 http://git-scm.com/book/en/ https://developer.bluetooth.org/gatt/characteristics/Pages/CharacteristicViewer.aspx?u=org.bluetooth.characteristic.heart_rate_measurement.xml https://developer.bluetooth.org/gatt/characteristics/Pages/CharacteristicViewer.aspx?u=org.bluetooth.characteristic.heart_rate_measurement.xml http://jade-lang.com/ http://www.w3schools.com/js/js_intro.asp 94 [19] Lista de aplicaciones: Un típico auricular Bluetooth de teléfono móvil. [En línea] 05 de Diciembre de 2012. http://wifiw.com/1661/lista-de-aplicaciones-un-tipico-auricular- bluetooth-de-telefono-movil.html [20] Monitores cardíacos y la investigación científica deportiva. [En línea] 08 de Noviembre de 2012. http://www.fitness.com.mx/practica109.htm [21] Noble. [En línea] 15 de Agosto 2013. https://github.com/sandeepmistry/noble [22] Nodejs. [En línea] 15 de Agosto 2013. http://nodejs.org/ [23] Nordic Semiconductor. Bluetooth Low Energy wireless technology backgrounder Version 4. Marzo, 2011 [24] Principios de Ubuntu. [En línea] 15 de Agosto 2013. http://doc.ubuntu- es.org/Sobre_Ubuntu [25] Raija M.T Laukkanen and Paula K. Virtanen. Heart rate monitor: State of the art. Artículo del diario Sports Sciences 16:S3-S7, 1998 [26] Smart Coaching. [En línea] 15 de Noviembre de 2012. http://www.polar.com.co/co- es/smart_coaching [27] What is Bootstrap. [En línea] 15 de Agosto 2013. http://www.inmotionhosting.com/support/edu/joomla-3/using-bootstrap/what-is-bootstrap [28] What is MySQL. [En línea] 15 de Agosto 2013. http://www.bluemoosetech.com/php-and- mysql.php?jid=9&title=What%20is%20MySQL [29] What is MySQL. [En línea] 15 de Agosto 2013. http://www.roseindia.net/mysql/mysql5/what-is-mysql.shtml [30] Wibree. [En línea] 06 de Diciembre de 2012. http://123seminarsonly.com/Seminar- Reports/039/83525054-wibree.docx [31] William Stallings. Wireless Communications and Networks. Second Edition. 2005 http://wifiw.com/1661/lista-de-aplicaciones-un-tipico-auricular-bluetooth-de-telefono-movil.html http://wifiw.com/1661/lista-de-aplicaciones-un-tipico-auricular-bluetooth-de-telefono-movil.html http://www.fitness.com.mx/practica109.htm https://github.com/sandeepmistry/noble http://nodejs.org/ http://doc.ubuntu-es.org/Sobre_Ubuntu http://doc.ubuntu-es.org/Sobre_Ubuntu http://www.polar.com.co/co-es/smart_coaching http://www.polar.com.co/co-es/smart_coaching http://www.inmotionhosting.com/support/edu/joomla-3/using-bootstrap/what-is-bootstrap http://www.bluemoosetech.com/php-and-mysql.php?jid=9&title=What%20is%20MySQL http://www.bluemoosetech.com/php-and-mysql.php?jid=9&title=What%20is%20MySQL http://www.roseindia.net/mysql/mysql5/what-is-mysql.shtml http://123seminarsonly.com/Seminar-Reports/039/83525054-wibree.docx http://123seminarsonly.com/Seminar-Reports/039/83525054-wibree.docx