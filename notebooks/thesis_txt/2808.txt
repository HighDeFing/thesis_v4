TESIS-JOHANAN-CARLOS-2011v91 1 UNIVERSIDAD CENTRAL DE VENEZUELA FACULTAD DE CIENCIAS ESCUELA DE COMPUTACIÓN UNA APLICACIÓN WEB PARA EL MANEJO DE DATOS DE MEDICIONES DE POTENCIAL DE ENERGÍA EÓLICA Trabajo Especial de Grado presentado ante la ilustre Universidad Central de Venezuela Por los Bachilleres: Carlos Cisneros A. C.I: 17146794 Johanán D. Penso H. C.I:13636683 Para optar al título de Licenciado en Computación Tutoras Profa. Joali Moreno Profa. Claudia León Caracas, septiembre de 2011 2 Tabla de Contenido Introducción ................................................................................................................................ 3 CAPITULO 1: MARCO CONCEPTUAL ................................................................................................ 6 Recurso Eólico ............................................................................................................................. 6 1.1 Viento ............................................................................................................................... 6 1.2 Fuerzas Coriolis ................................................................................................................ 6 1.3 Velocidad del Viento ........................................................................................................ 7 1.4 Dirección del Viento ......................................................................................................... 8 1.5 Potencia del Viento .......................................................................................................... 9 Representación de los Datos ....................................................................................................... 9 1.6 Rosa de los vientos ........................................................................................................... 9 1.7 Frecuencia del Viento ..................................................................................................... 10 Instrumentos para Medir el Viento ........................................................................................... 10 1.8 Anemómetro .................................................................................................................. 10 1.9 Veleta ............................................................................................................................. 11 Mediciones de la Velocidad del viento en la práctica ............................................................... 12 El Registrador de Datos (‘Data Logger’). ................................................................................... 12 Parque Eólico ............................................................................................................................. 13 Análisis de Datos Eólicos ........................................................................................................... 14 CAPITULO 2: MARCO METODOLÓGICO ........................................................................................ 15 2.1 Enfoque de Desarrollo Basado en Metodologías Ágiles (AM). ...................................... 15 Desarrollo Ágil Dirigido por Modelos (AMDD). ......................................................................... 18 1.2 Patrón de diseño MVC (Modelo Vista Controlador). ..................................................... 21 CAPITOLO 3: MARCO DE DESARROLLO ......................................................................................... 27 3.1 Análisis de la solución propuesta ................................................................................... 27 3.2 Iteración 0 (Levantamiento de la Información) ............................................................. 27 3.3 Iteración 1 (diseño de la base de datos) ........................................................................ 48 CONCLUSIONES ............................................................................................................................. 72 REFERENCIAS BIBLIOGRÁFICAS ..................................................................................................... 73 ANEXOS ......................................................................................................................................... 75 3 Introducción Actualmente en Venezuela se están diseñando proyectos para la producción de energía alternativa como la eólica. Con la finalidad de mejorar la prestación del servicio eléctrico, en respuesta al aumento de la demanda y el crecimiento poblacional que experimenta el país en las principales ciudades. Estos planes evidentemente reflejan la iniciativa de experimentar energías alternativas libres de contaminación y efectos perjudiciales al planeta. A la vez, son una clara intención de la búsqueda de medios que favorezcan el mejoramiento de la producción eléctrica en el país. Por consiguiente, es necesario desarrollar investigaciones que permitan el conocimiento del potencial eólico en diferentes regiones venezolanas, lo cual aportaría datos valiosos que puedan ser utilizados por las distintas instituciones estatales y municipales, en la materialización de proyectos eólicos dirigidos a suplir en algunos casos la energía proveniente de combustibles fósiles. Para llevar a cabo este tipo de investigaciones, es necesaria la instalación de torres para medir el potencial eólico en determinadas zonas del territorio nacional. En dichas torres son instalados los equipos utilizados para la medición de determinados factores climatológicos y las mediciones obtenidas, son recopiladas por un equipo especializado ubicado en cada torre, para luego ser transmitidas a un computador, donde son depurados para su estudio, y poder así determinar el potencial eólico de una zona en particular. Para facilitar el almacenamiento y manipulación de la información asociada, tanto a los datos recopilados en las torres eólicas, como a los datos de los entes y personas involucrados en la campaña de medición, se propone desarrollar un sistema web que facilite el almacenamiento, consulta y manejo de la información asociada a dicha campaña. Este documento expone cada uno de los componentes realizados en las distintas etapas del desarrollo de software. En el primer capítulo, llamado marco conceptual, se muestra una breve definición de cada uno de los dispositivos y otros conceptos importantes que nos ayude a entender el contexto. Luego, en el siguiente capítulo, se explica paso a paso la metodología utilizada durante el proceso de desarrollo del sistema web, en nuestro caso aplicamos metodologías ágiles. En el tercer capítulo se explica paso a paso cada una de las actividades realizadas y se muestran los artefactos de software generados durante las mismas. Finalmente, se exponen las conclusiones a las que llegamos a lo largo del desarrollo de este trabajo. 4 Problema La cantidad de data generada por los diferentes dispositivos que se encuentran instalados en cada una de las torres de medición eólica, debe ser procesada y depurada para luego ser almacenada y preservada. Dicha cantidad de data crece diariamente y no se cuenta con un sistema que permita automatizar parte del proceso de análisis de los datos y la distribución de los mismos entre los entes involucrados en la campaña de medición eólica. Objetivo General Diseñar e implementar una base de datos que permita almacenar los datos de medición del potencial eólico en Venezuela, conjuntamente con el desarrollo de una aplicación web para mostrar gráficos y estadísticas de los resultados de dichas mediciones. Objetivos Específicos • Identificar las características de los instrumentos para la medición del potencial eólico. • Analizar los elementos y datos necesarios para la medición de potencial eólico en tierra. • Implementar la base de datos para almacenar la información de medición del potencial eólico en Venezuela. • Diseñar la interfaz de la aplicación web. • Desarrollar la aplicación web que permite el manejo y consulta de datos, y la visualización de los resultados de manera gráfica. Justificación de la Aplicación Web a Desarrollar El desarrollo de la aplicación web, permitirá a los usuarios poder consultar y gestionar los datos de manera remota, y en el momento que lo deseen. Al tratarse de una aplicación web el espacio y tiempo ya no serán críticos, dado que los usuarios pueden acceder a ésta, desde cualquier parte del planeta, en cualquier momento que desee y donde se cuente con un dispositivo con conexión a Internet. Adicionalmente, la aplicación le permite a los usuarios encargados de recopilar los datos, almacenarlos en la base de datos de la aplicación con tan solo un clic. Para luego consultar las graficas generadas en los diferentes periodos de tiempo. Esta aplicación, cuenta con un módulo que le permite a las instituciones llevar el registro de las empresas contratadas, estas últimas son las encargadas de hacer el mantenimiento de los equipos en los diferentes emplazamientos 5 Alcance El alcance de este proyecto contempla la elaboración de un sistema web, orientado a las empresas e instituciones involucradas en la campaña de medición del recurso eólico en Venezuela. Este sistema servirá de soporte para el manejo, almacenamiento y procesamiento de la información, para ello consta de una base de datos consistente que permite el almacenamiento de dicha información además de diferentes secciones ó módulos. Un módulo para administrar la información que provee el servicio para el registro, edición y eliminación de las entidades u objetos involucrados en la campaña, como lo son: instituciones, contratistas, contratos, usuarios, emplazamientos (incluye mapas y fotos), datalogger y por último los sensores. Otro módulo de gestión de datos, que permite manipular y consultar los datos generados en cada una de las torres, dicho modulo permite al usuario cargar los datos desde un archivo de texto, bajo un formato especifico, donde luego podrán ser consultados en forma de texto o de forma grafica según sea el deseo de cada usuario. El sistema proveerá un mecanismo de autenticación a los usuarios, para la protección de la información, donde es posible asignar permisos a dichos usuarios según el rol que desempeñan, desactivarlos en cualquier ocasión y eliminarlo de ser necesario. Además provee algún mecanismo para la recuperar la clave de acceso al sistema en caso de pérdida. El sistema contará con una sección donde se muestra a los usuarios toda la información recopilada, respecto al tema de la campaña de medición del potencial eólico en Venezuela. 6 CAPITULO 1: MARCO CONCEPTUAL Para comprender la importancia y alcance de la temática relacionada con el cálculo del potencial eólico, es necesario revisar algunos conceptos, nociones y teorías que explican el fenómeno en estudio. De esta manera, a continuación se presentan un conjunto de definiciones y apreciaciones sobre distintos elementos de la energía eólica. Recurso Eólico 1.1 Viento Según Capel (2002) el viento es el movimiento del aire en la atmósfera, especialmente, en la troposfera, producido por causas naturales. Se trata de un fenómeno meteorológico. La causa de los vientos está en los movimientos de rotación y de traslación terrestres que dan origen, a su vez, a diferencias considerables en la radiación solar o (insolación), principalmente de onda larga (infrarroja o térmica), que es absorbida de manera indirecta por la atmósfera, de acuerdo con la propiedad diatérmica del aire, según la cual la radiación solar sólo calienta indirectamente a la atmósfera ya que los rayos solares pueden atravesar la atmósfera sin calentarla. El autor también expone que los rayos de calor (infrarrojos) reflejados por la superficie terrestre y acuática de la Tierra logran calentar el aire. La insolación es casi la única fuente de calor que puede dar origen al movimiento del aire, es decir, a los vientos. A su vez, el desigual calentamiento del aire da origen a las diferencias de presión y esas diferencias de presión dan origen a los vientos. 1.2 Fuerzas Coriolis De acuerdo con el glosario de www.astronomia.com son fuerzas aparentes, responsables de la desviación de la trayectoria de un cuerpo que se mueve sobre una superficie que rota. En la Tierra, por ejemplo, la trayectoria de un objeto, como un hipotético proyectil disparado desde el Ecuador hacia el polo Norte, en lugar de ir en línea recta, se desvía hacia el Este. Obviamente, si la trayectoria va desde el Ecuador hacia el polo Sur, la fuerza de Coriolis impulsa al cuerpo en dirección Oeste. 7 Figura 1.1: Efecto de Coriolis. Fuente: es.wikipedia.org/wiki/Efecto_Coriolis El ejemplo más nombrado de manifestación del efecto Coriolis se da cuando masas de aire o de agua se desplazan siguiendo meridianos terrestres, y su trayectoria y velocidad se ven modificadas por él. Los vientos o corrientes oceánicas que se desplazan siguiendo un meridiano se desvían acelerando en la dirección de giro (este) si van hacia los polos o al contrario (oeste) si van hacia el ecuador (en el hemisferio norte). La manifestación de estas desviaciones produce, que las borrascas giren en el hemisferio sur en el sentido de las agujas del reloj y, en el hemisferio norte, en sentido contrario. Su nombre se debe al físico francés Gaspard Gustave de Coriolis (1792-1843) que fue el primero en estudiarlas. 1.3 Velocidad del Viento Desde el año 1805, la velocidad del viento, y por consiguiente su fuerza, la determinaban los marinos por la llamada escala de Beaufort, ideada por ese almirante inglés, el cual estableció 12 grados de fuerza del viento, basados en las maniobras que, según el viento que soplaba, habían de hacerse en el aparejo de los navíos a vela. Actualmente, en el mar, se caracterizan los grados por la altura de las olas, y en tierra, por los efectos en los árboles, edificios, entre otros. Las velocidades del viento son fuertemente influenciadas por la rugosidad de la superficie del área circundante, por los obstáculos cercanos (como árboles, faros u otras construcciones) y por los alrededores del terreno local. La velocidad del viento en la Escala de Beaufort puede expresarse por la fórmula: v = 0,837 B 3/2 m/s Donde v es velocidad del viento, y B es el número en la escala de Beaufort. Así mismo, para calcular la v en km/h: B ^ 1,5 * 3 (elevar B a la potencia 1,5 y multiplicar por 3). Para calcular B (para cierto valor de v en km/h): multiplicar v por 3 y calcular la raíz 1,5. Actualmente, se utiliza la escala anemométrica de Beaufort la cual se extendió en 1944, donde se agregaron las Fuerzas 13 a 17. Sin embargo, las Fuerzas 13 a 17 sólo se aplican en casos especiales, como en ciclones tropicales. La escala extendida se usa en Taiwán y en China, que frecuentemente son afectados por tifones. 8 A. Unidades de medición m = metro = 3,28 pies. s = segundo. h = hora. N = Newton. W = vatio. CV= caballo de vapor. J = julio. cal = caloría. tep = tonelada equivalente de petróleo. Hz= hercio (ciclos por segundo). B. Conversión de unidades de velocidad 1 m/s = 3,6 km/h = 2,237 millas/h = 1,944 nudos. 1 nudo = 1 milla náutica/h = 0,5144 m/s = 1,852 km/h = 1,125 millas/h 1.4 Dirección del Viento Se llama dirección del viento el punto del horizonte de donde viene o sopla. Para distinguir uno de otro se les aplica el nombre de los principales rumbos de la brújula, según la conocida rosa de los vientos. Los cuatro puntos principales corresponden a los cardinales: Norte (N), Sur (S), Este (E) y Oeste (W). Se consideran hasta 32 entre estos y los intermedios, aunque los primordiales y más usados son los mostrados en la Figura 1.2.a con su equivalencia en grados del azimuth en la Figura 1.2.b : Figura 1.2.a: Dirección del viento con respecto a los cardinales. Fuente: www.mailxmail.com/curso-fenomenos-meteorologicos/direccion-velocidad-viento 9 Figura 1.2.b: Dirección del viento con respecto a los cardinales. Fuente: www.mailxmail.com/curso-fenomenos-meteorologicos/direccion-velocidad-viento 1.5 Potencia del Viento Arias (2001) indica que la velocidad del viento es muy importante para la cantidad de energía que un aerogenerador puede transformar en electricidad: la cantidad de energía que posee el viento varía con el cubo (la tercera potencia) de la velocidad media del viento; p.ej., si la velocidad del viento se duplica la cantidad de energía que contenga será 2 3 = 2 x 2 x 2 = ocho veces mayor. Representación de los Datos 1.6 Rosa de los vientos De acuerdo con Capel (2002) para mostrar la información sobre las distribuciones de velocidades del viento y la frecuencia de variación de las direcciones del viento, puede dibujarse la rosa de los vientos basándose en observaciones meteorológicas de las velocidades y direcciones del viento. Una rosa de los vientos proporciona información sobre las velocidades relativas del viento en diferentes direcciones, es decir, cada uno de los tres grupos de datos ha sido multiplicado por un número que asegura que la cuña más larga del grupo mide exactamente lo mismo que el radio del círculo más exterior del diagrama mostrado en la Figura 1.3. 10 Figura 1.3: Rosa de los vientos Fuente: www.windpower.org 1.7 Frecuencia del Viento Con la información de velocidad de Viento Promedio en un tiempo determinado, se realiza la construcción de una histograma de velocidades (o también llamado distribución de frecuencias de velocidad), esto se logra al dividir el rango total de velocidades de viento en pequeños intervalos del mismo ancho (generalmente 1 m/s) y se determina el número de horas que la velocidad de viento cae dentro de cada intervalo. Figura 1.4: Histograma de velocidades. Instrumentos para Medir el Viento 1.8 Anemómetro Según Arias (2001) el anemómetro es un aparato meteorológico que se usa para la predicción del tiempo y, específicamente, para medir la velocidad del viento. 11 Figura 1.5: Anemómetro tipo taza semiesférica inventado. Fuente: en.wikipedia.org/wiki/Anemometer Según Yáñez (2000) existe una gran variedad de anemómetros. El objetivo es medir la componente horizontal de la corriente de viento, no alterada, porque ésta es la única relevante para la producción de energía. 1.9 Veleta Una veleta es un dispositivo giratorio que consta de una placa plana vertical que gira libremente, un señalador que indica la dirección del viento y una cruz horizontal que indica los puntos cardinales. Se ubica generalmente en lugares elevados y su diseño puede ser muy variado (figuras de animales, antropomorfas, entre otros). En la figura 1.6 se presentan diferentes tipos de veletas. Figura 1.6: Tipos de veletas Fuente: en.wikipedia.org/wiki/Weather_vane 12 Mediciones de la Velocidad del viento en la práctica Colocando el anemómetro en la parte superior del mástil se minimizan las perturbaciones de las corrientes de aire creadas por el propio mástil. Si el anemómetro está situado en la parte lateral del mástil es fundamental enfocarlos en la dirección de viento dominante para minimizar el abrigo del viento de la torre. Figura 1.7: Clasificación de los vientos según la escala de velocidades. Fuente: www.windpower.org El Registrador de Datos (‘Data Logger’). Las mediciones se registran en los denominados registradores de datos (data logger, en inglés), que son los encargados de almacenar los datos de velocidad captados por anemómetros de copas, y de dirección del viento, utilizando una veleta con potenciómetro; además, se registran datos de temperatura, presión, humedad relativa y radiación en las estaciones que tienen fines meteorológicos. Los datos de velocidad y dirección registrados cada segundo se promedian y almacenan cada diez minutos en una memoria que no necesita energía para almacenar, lo que garantiza que no se pierdan los datos ante una falta de energía. Existen estaciones, que cuentan con suministro energético autónomo mediante un panel solar fotovoltaico, las cuales tienen la posibilidad de trasmitir los datos usando los canales de datos de la telefonía celular en lugares con cobertura, lo que permite una supervisión remota de las condiciones de la estación y obtener las mediciones sin intervenir directamente en el equipo. 13 Figura 1.7: Lectores de datos instalados en las estaciones meteorológicas. Fuente: www.windpower.org Parque Eólico Es una agrupación de aerogeneradores que se utilizan generalmente para la producción de energía eléctrica. El número de aerogeneradores que componen un parque es muy variable, y depende fundamentalmente de la superficie disponible y de las características del viento en el emplazamiento. Antes de montar un parque eólico se estudia el viento en el emplazamiento elegido durante un tiempo que suele ser superior a un año. Para ello se instalan veletas y anemómetros. Con los datos recogidos se traza una rosa de los vientos que indica las direcciones predominantes del viento y su velocidad. Los parques eólicos proporcionan diferente cantidad de energía dependiendo de las diferencias sobre diseño, situación de las turbinas, y por el hecho de que los antiguos diseños de turbinas eran menos eficientes y capaces de adaptarse a los cambios de dirección y velocidad del viento. Como norma general, la separación entre aerogeneradores en un parque eólico es de 5 a 9 diámetros de rotor en la dirección de los vientos dominantes, y de 3 a 5 diámetros de rotor en la dirección perpendicular a los vientos dominantes. Figura 1.8: Distribución de aerogeneradores en un parque eólico. Fuente: www.windpower.org 14 Análisis de Datos Eólicos La red de estaciones climáticas hacen observaciones sinópticas a intervalos de tiempos específicos y se deberá dar una representación satisfactoria de las características climáticas para cualquier tipo de terreno. A partir de las llamadas series cronológicas de datos climatológicos se pueden obtener resúmenes estadísticos de los datos. La selección de datos se puede resumir como sigue: • Período de tiempo suficiente. Al menos un año, pero preferiblemente varios años. • Anemómetro bien expuesto, lejos de edificios y otros obstáculos. Este requisito es a menudo el más difícil de satisfacer. • La descripción precisa de las condiciones y los datos anemométricos de cada 10 minutos o por hora, por ejemplo, los promedios recogidos cada 3 horas a lo largo del día de 24 horas. Es preferible el uso de datos en bruto como primera fuente de datos, ya que esto permite la detección de errores en los datos que puede ser indetectable en los datos ya resumidos. Los datos en brutos deben ser procesados por un programa especializado Las características de los datos son importantes para el tratamiento de una serie temporal de velocidad y dirección del viento que pueden ser convenientemente recogidos por WAsP rellenando un formulario de descripción de datos. 15 CAPITULO 2: MARCO METODOLÓGICO En el ámbito de la ingeniería de software, existen mecanismos para diseñar e implementar las soluciones tecnológicas de una manera rápida y eficaz, en la que los usuarios y clientes se encuentren satisfechos con el producto y que les genere valor a su trabajo. En este capítulo, se presenta la estrategia de desarrollo de software seleccionada para la implementación de la solución planteada. Específicamente, el desarrollo utilizando metodologías ágiles, también se mencionan las diferentes tecnologías a utilizar en la implementación, destacando el uso de software libre. Por esta razón se escogió como lenguaje de programación PHP, acompañado de la librería JQuery para la interfaz y JpGraph para la generación de gráficas. Por otro lado, para la gestión de los datos se usará PostgreSQL como manejador de base de datos. 2.1 Enfoque de Desarrollo Basado en Metodologías Ágiles (AM). Historia En febrero de 2001, tras una reunión celebrada en Utah-EEUU, nace el término ágil aplicado al desarrollo de software. En esta reunión participan un grupo de 17 expertos de la industria del software, incluyendo algunos de los creadores o impulsores de metodologías de software. Su objetivo fue esbozar los valores y principios que deberían permitir a los equipos desarrollar software rápidamente y respondiendo a los cambios que puedan surgir a lo largo del proyecto. Se pretendía ofrecer una alternativa a los procesos de desarrollo de software tradicionales, caracterizados por ser rígidos y dirigidos por la documentación que se genera en cada una de las actividades desarrolladas. Tras esta reunión se creó “The Agile Alliance”, una organización sin fines de lucro, dedicada a promover los conceptos relacionados con el desarrollo ágil de software y ayudar a las organizaciones para que adopten dichos conceptos. El punto de partida fue el Manifiesto Ágil, un documento que resume la filosofía. Según el Manifiesto Ágil (2001) se valora: • Al individuo y las interacciones del equipo de desarrollo sobre el proceso y las herramientas. El equipo integrante es el principal factor de éxito de un proyecto software. Es más importante construir un buen equipo que construir el entorno. • Desarrollar software que funciona más que conseguir una buena documentación. La regla a seguir es no producir documentos a menos que sean necesarios de forma inmediata para tomar una decisión importante. Estos documentos deben ser cortos y 16 centrarse en lo fundamental. • La colaboración con el cliente más que la negociación de un contrato. Se propone que exista una interacción constante entre el cliente y el equipo de desarrollo. Esta colaboración entre ambos será la que marque la marcha del proyecto y asegure su éxito. • Responder a los cambios más que seguir estrictamente un plan. La habilidad de responder a los cambios que puedan surgir a los largo del proyecto (cambios en los requisitos, en la tecnología, en el equipo, etc.) determina también el éxito o fracaso del mismo. Por lo tanto, la planificación no debe ser estricta sino flexible y abierta. Los valores anteriores inspiran los doce principios del manifiesto. Son características que diferencian un proceso ágil de uno tradicional. Los dos primeros principios son generales y resumen gran parte del espíritu ágil. El resto tienen que ver con el proceso a seguir y con el equipo de desarrollo, en cuanto metas a seguir y organización del mismo. Modelado Ágil. Según Scott W. Ambler (2002) el Modelado Ágil (AM) es una metodología basada en la práctica para modelado efectivo de sistemas de software. La metodología AM es una colección de prácticas, guiadas por principios y valores que pueden ser aplicados por profesionales de software en el día a día. AM no es un proceso prescriptivo, ni define procedimientos detallados de cómo crear un tipo de modelo dado. En lugar de eso, sugiere prácticas para ser un modelador efectivo. Esta metodología tiene varios principios que la diferencian sobre las metodologías tradicionales, reflejados en un manifiesto que enuncia cuatro valores que son: • Los individuos y sus relaciones sobre las personas y los procesos. Con este principio se hace manifiesto el énfasis de esta metodología sobre las personas, ya que de ellas es que depende el éxito o el fracaso de un proyecto, es a quienes se debe motivar. • Un Software funcional, que opere correctamente sobre la documentación más completa. Con este principio se trata de decir que lo más importante es que el software trabaje, cumpla con las necesidades de negocio, no hacer de la documentación un fin en sí mismo, ya que esta es solo para dar soporte, no es el objetivo primario del desarrollo, existen situaciones en donde incluso la documentación podría ser innecesaria, por ejemplo una pequeña aplicación emergente, que una vez pasada la emergencia , esta aplicación desaparece, el cargar de documentación de requerimientos, arquitectura, pruebas etc. Podría considerarse de sobra, sin embargo eso no quiere decir que no es necesaria la documentación, esta debe existir pero sólo la suficiente. • Colaboración del cliente sobre el contrato de negocio. Se trata de colaborar con el cliente el mayor tiempo no de luchar con él sobre un contracto minucioso, esto puede ser difícil ya que los clientes no están acostumbrados. Generalmente los clientes trabajan sobre un 17 contrato con el que puedan defenderse si las cosas van mal. • Ser capaz de responder a los cambios y no obsesionarse sobre el seguimiento de un plan. Es tener la capacidad de adaptación, no decir NO A LOS CAMBIOS, aceptar las sugerencias de los usuarios, sin por eso hacer un lado la planificación. Estos valores han dado lugar a doce principios que son: 1. La satisfacción del cliente. 2. Bienvenida a los cambios que puedan ocurrir. 3. Entregar regularmente software que trabaje. 4. Gente de negocios y desarrolladores trabajan diariamente en conjunto. 5. Construcción de proyectos alrededor de individuos motivados para esto. 6. Las comunicaciones cara a cara son las mejores. 7. Software que trabaje es la mejor medida del progreso. 8. Atención continua a la excelencia y al buen diseño. 9. Promover el desarrollo sostenible. 10. Simplicidad. 11. Las mejores arquitecturas, requerimientos, y diseños emergen de equipos auto- organizados. 12. Introspección, los equipos deben regularmente hacerse una revisión hacia sí mismos y sus procesos para intentar mejorar AM. Características de un desarrollo ágil. • Proceso iterativo e incremental. • Mitigación del riesgo mediante iteraciones fijas. • Mejora continua. • Calidad desde el primer día. • Priorización de requerimientos de acuerdo a su valor. • Equipos dedicados y auto-gestionados. • Colaboración continúa con el cliente. • Incorporar al cambio. • Prácticas de desarrollo modernas. Para llevar a cabo el desarrollo de la solución propuesta hemos escogido utilizar la versión ágil de MDD (siglas del ingles model driven development), que permiten minimizar los riesgos de desarrollo, ya que podemos dividir el proyecto en iteraciones cortas (3 a 4 semanas), donde al final de cada iteración se presenta una versión beta del producto y sin errores. Otra razón importante del uso de la metodología ágil, es que ayuda a la rápida certificación de las funcionalidades incorporadas en cada iteración. 18 Desarrollo Ágil Dirigido por Modelos (AMDD). Propuesto por Scott W. Amber (2002), con el AMDD en lugar de desarrollar modelos extensos antes de escribir la primera línea de código se crean modelos ágiles, los cuales son modelos más simples usados para analizar los requerimientos del sistema. AMDD es básicamente una estrategia crítica para ir escalando los procesos de desarrollo ágiles más allá de los proyectos de pequeña envergadura. Figura 2.a: AMDD a través del Modelado de Actividades del Ciclo de Vida del Proyecto (Amber, 2002). La figura 2.1 no corresponde los números de las figuras… representa el ciclo de vida según el modelado ágil para el desarrollo de un sistema, donde cada caja representa una actividad de desarrollo. La primera actividad, la cual representada por las cajas de color verde, está integrada por dos sub-actividades que son: el estudio de las necesidades iniciales y contemplar la arquitectura inicial, las mismas son llevadas a cabo durante la iteración 0 del desarrollo. Las actividades restantes como Modelar Iteración, Tormenta de Modelos y Desarrollo y Pruebas pueden ser llevadas a cabo en cualquier iteración, no hay restricciones para esto, incluyendo en la iteración 0. El tiempo indicado en cada caja representa la duración de una sesión promedio. La figura 2.b refleja como engranan las actividades de AMDD en las iteraciones del ciclo de vida del desarrollo ágil. Es otro modo de mostrar que en un proyecto ágil comienza con algún modelado inicial y que este modelaje sigue ocurriendo en cada una de las iteraciones. 19 Figura 2.b: AMDD a través del ciclo de Vida de desarrollo Ágil (Amber, 2002). En el modelado ágil generalmente durante la primera semana de desarrollo del proyecto se llevan a cabo las investigaciones y análisis necesarios para contemplar el alcance que tendrá el sistema; así como también la arquitectura inicial para su tratamiento. Para esto es indispensable obtener los requerimientos de alto nivel y modelar la arquitectura de lo requerido. El objetivo no es escribir especificaciones detalladas, que sean arriesgadas, sino explorar las necesidades y llegar a una estrategia global. Para proyectos cortos es recomendable hacer este trabajo en horas tempranas y para proyectos grandes que puedan requerir un año o más, se puede tomar la decisión de invertir al menos dos semanas en este esfuerzo. Se recomienda no invertir más tiempo del indicado, ya que se corre el riesgo de modelar algo que acarree demasiados problemas. Etapas que intervienen en el modelado ágil A continuación se explicará en detalle en qué consiste cada una de las etapas que intervienen en el modelado ágil. Contemplar las necesidades iniciales: Su objetivo es construir un entendimiento común, no para escribir documentación detallada. Un factor clave del éxito para lograr contemplar las necesidades iniciales, es utilizar técnicas de modelado que permitan la participación activa de los interesados. Para esta etapa es necesario un modelo que permita realizar el análisis de cómo los usuarios trabajan con el sistema, un modelo inicial del dominio en el que se identifiquen los requerimientos fundamentales de la entidad de negocio y las relaciones, un modelo inicial de interfaz que explore la interfaz de usuario y la usabilidad. Contemplar la arquitectura inicial: El objetivo es tratar de identificar una arquitectura que brinde grandes oportunidades para realizar el desarrollo de la aplicación. Esto es sumamente importante, ya que nos permite establecer la técnica más viable para llevar a cabo el desarrollo del proyecto y proporciona información suficiente para dividir el equipo de trabajo alrededor de la arquitectura. Por el lado de la arquitectura se suelen crear los diagramas de forma libre, aquellos que representen la infraestructura técnica, los modelos iniciales de dominio para 20 explorar las entidades de negocio principales y sus relaciones. En iteraciones posteriores los requerimientos iniciales y la arquitectura inicial deberá evolucionar a medida que van creciendo las definiciones de más partes, pero por los momentos lo importante es obtener el modelado de una arquitectura inicial que permita al grupo de desarrollo ponerse en marcha. Modelado de iteraciones: Al comienzo de la construcción de cada una de las iteraciones para el desarrollo del sistema, el equipo desarrollador deberá estimar y programar que se hará en cada iteración. Figura 2.c: Los Requerimientos Ágiles cambian la Gestión de los Proyectos (Amber, 2002). En la figura 2.c se puede observar los diferentes valores que puede tomar los requerimientos de trabajo en una iteración, el requerimiento de mayor importancia se encuentra en la cima de la pila de requerimientos. Para poder hacer esto con éxito es necesario calcular con exactitud el tiempo de dedicación para cada requerimiento, basándose en la rapidez de las iteraciones previas, cuanto trabajo se logro en ellas, calcular un tiempo estimado de procesamiento de requerimiento. Es importante destacar que para poder estimar el tiempo necesario para realizar un requerimiento se debe entender el trabajo necesario para ponerlo en ejecución, es aquí donde entra en juego el modelado. Tormenta de modelos: El equipo de trabajo se reúne en tiempos relativamente cortos, generalmente no exceden de los 30 minutos, con ayuda de una herramienta de trabajo por ejemplo una pizarra se modela en forma compartida, con el fin de identificar los problemas que se tendrán que resolver, algunos durante este tiempo son identificados y el equipo de trabajo procede a su resolución. 21 Desarrollo y pruebas: Durante el desarrollo es bastante común que el modelado de las ideas dure varios minutos y, a continuación se implemente el código de la aplicación esto puede tardar varias horas o incluso varios días, en esta etapa el equipo de trabajo consume el mayor tiempo. En el modelado ágil los equipos de trabajo tratan de realizar la modelación de sus ideas de la forma más clara y detallada posible, muchas veces esto se realiza junto al cliente para que posteriormente no hayan dificultades o mediante pruebas de desarrollo. Las pruebas conducidas al desarrollo originan pruebas para validar el código de la aplicación y las especificaciones del mismo. Las pruebas del cliente, también llamadas pruebas de aceptación, son realizadas con el fin de mejorar el diseño que se tiene y reforzar los requerimientos. 1.2 Patrón de diseño MVC (Modelo Vista Controlador). Modelo Vista Controlador (MVC) es un estilo de arquitectura de software que separa los datos de una aplicación, la interfaz de usuario, y la lógica de control en tres componentes distintos. El patrón MVC se ve frecuentemente en aplicaciones web, donde la vista es la página HTML y el código que provee de datos dinámicos a la página, el modelo consta de la capa de negocio y la capa de acceso a los datos, y el controlador es el responsable de recibir los eventos provenientes de la vista y obtener resultados provenientes del modelo. Figura 2.1: Patrón de diseño MVC. El Modelo: Incorpora los datos y las reglas de la aplicación. Gran parte del procesamiento de la aplicación tiene lugar en esta parte del patrón de diseño. El modelo también contiene todos los componentes y la base de datos. No se aplica ningún formato a los datos devueltos para la interfaz (o procesador principal) de la aplicación en esta parte del proceso. Los datos devueltos se pueden utilizar para distintas interfaces (o vistas). 22 La Vista: Es la fachada, la parte exterior de la aplicación (la interfaz con la que interactúa el usuario), y representa el contenido del modelo. La interfaz especifica la forma en que se presentan los datos del modelo, produce la vista que utilizará el usuario y permite al usuario acceder a los datos de la aplicación o manipularlos. Si cambia el modelo, la vista se actualiza para reflejar los cambios introduciendo o extrayendo datos (enviando o solicitando datos). Debemos tomar en cuenta las interfaces como parte de la vista del patrón de diseño. El patrón de diseño MVC admite la gestión de diversas vistas. El Controlador: Gestiona los requisitos del modelo y de la vista para procesar y mostrar datos. Suele contener mucho código. Realiza llamadas a cualquier parte del modelo, según las peticiones realizadas por el usuario desde la interfaz (o vista), y contiene código específico de la aplicación. Puesto que este código es específico de la aplicación, no suele ser reutilizable. Sin embargo, el resto de componentes del patrón de diseño sí se pueden reutilizar. El controlador no procesa ni produce ningún dato: recibe la petición del usuario y decide a qué parte del modelo o componentes de la vista necesita llamar, determina dónde se envían los datos y qué formato se aplica a los datos devueltos. El controlador garantiza que las vistas tengan acceso a las partes de los datos del modelo que deben mostrar. Normalmente, el controlador transmite y responde ante cambios que afectan al modelo y a la vista. Las principales ventajas de hacer uso del patrón MVC son: 1. Menor acoplamiento, desacopla las vistas de los modelos y desacopla los modelos de la forma en que se muestran e ingresan los datos. 2. Mayor cohesión, Cada elemento del patrón está altamente especializado en su tarea (la vista en mostrar datos al usuario, el controlador en las entradas y el modelo en su objetivo de negocio). 3. Las vistas proveen mayor flexibilidad y agilidad, Se puede crear múltiples vistas de un modelo, Las vistas pueden anidarse, se puede cambiar el modo en que una vista responde al usuario sin cambiar su representación visual, se puede sincronizar las vistas y las vistas pueden concentrarse en diferentes aspectos del modelo. 4. Mayor facilidad para el desarrollo de clientes ricos en múltiples dispositivos y canales, una vista para cada dispositivo que puede variar según sus capacidades, una vista para la Web y otra para aplicaciones de escritorio. 5. Más claridad de diseño. 6. Facilita el mantenimiento. 23 Tecnologías a utilizar en el desarrollo de la aplicación Basados en las metodologías agiles para llevar a cabo el desarrollo de la aplicación propuesta, es indispensable contar con las tecnologías adecuadas que nos permitan minimizar los tiempos de desarrollo y ser más eficientes en nuestro proceso. Adicionalmente las tecnologías a utilizarse deben ser de código abierto o software libre dado que el cliente final así lo requiere. Por lo se han seleccionado las siguientes tecnologías: Lenguaje de programación PHP PHP proviene de un lenguaje anterior, llamado PHP/FI. PHP/FI fue creado por Rasmus Lerdorf en 1995, inicialmente como un simple conjunto de scripts de Perl para controlar quién accedía a su curriculum online. Llamó a ese conjunto de scripts “Personal Home Page Tools”. Según se requería, Rasmus fue añadiendo más funcionalidad escrita en C que era capaz de comunicarse con bases de datos y permitía a los usuarios desarrollar sencillas aplicaciones Web dinámicas. Rasmus decidió liberar el código fuente de PHP/FI para que cualquiera pudiese utilizarlo, así como arreglar errores y mejorar el código. Entre las características principales del lenguaje se encuentran: • Es un lenguaje multiplataforma. • Capacidad de conexión con la mayoría de los manejadores de base de datos que se utilizan en la actualidad, destaca su conectividad con MySQL y PostgreSQL. • Capacidad de expandir su potencial utilizando la enorme cantidad de módulos o extensiones. • Posee una amplia documentación en su página oficial (http://www.php.net), entre la cual se destaca que todas las funciones del sistema están explicadas y ejemplificadas en un único archivo de ayuda. • Es libre, por lo que se presenta como una alternativa de fácil acceso para todos. • Permite las técnicas de Programación Orientada a Objetos. • Biblioteca nativa de funciones sumamente amplia e incluida. • No requiere definición de tipos de variables. • Tiene manejo de excepciones (desde php5). Sistema manejador de base de datos PostgreSQL PostGreSQL es un sistema de gestión de bases de datos objeto-relacional (ORDBMS) basado en el proyecto POSTGRES, de la universidad de Berkeley. El director de este proyecto es el profesor Michael Stonebraker, y fue patrocinado por Defense Advanced Research Projects Agency (DARPA), el Army Research Office (ARO), el National Science Foundation (NSF), y ESL, Inc. PostGreSQL es una derivación libre (OpenSource) de este proyecto, y utiliza el lenguaje 24 SQL92/SQL99, así como otras características que comentaremos más adelante. Fue el pionero en muchos de los conceptos existentes en el sistema objeto relacional actual, incluido, más tarde en otros sistemas de gestión comerciales. PostGreSQL es un sistema objeto- relacional, ya que incluye características de la orientación a objetos, como puede ser la herencia, tipos de datos, funciones, restricciones, disparadores, reglas e integridad transaccional. A pesar de esto, PostGreSQL no es un sistema de gestión de bases de datos puramente orientado a objetos. PostGreSQL es un sistema de gestión de base de datos relacional orientada a objetos y libre, publicado bajo la licencia BSD. Como muchos otros proyectos de código abierto, el desarrollo de PostgreSQL no es manejado por una sola empresa sino que es dirigido por una comunidad de desarrolladores y organizaciones comerciales las cuales trabajan en su desarrollo. Dicha comunidad es denominada el PGDG (PostGreSQL Global Development Group). Utiliza el lenguaje SQL para llevar a cabo sus búsquedas de información, las bases de datos generadas dentro de servidores de SQL son bases de datos relacionales. Utiliza un modelo cliente/servidor y usa multiprocesos en vez de multi-hilos para garantizar la estabilidad del sistema. Un fallo en uno de los procesos no afectará el resto y el sistema continuará funcionando. A continuación se enumeran las principales características de este gestor de bases de datos: 1. Implementación del estándar SQL92/SQL99. 2. Soporta distintos tipos de datos: además del soporte para los tipos base, también soporta datos de tipo fecha, monetarios, elementos gráficos, datos sobre redes (MAC, IP...), cadenas de bits, etc. También permite la creación de tipos propios. 3. Incorpora una estructura de datos array. 4. Incorpora funciones de diversa índole: manejo de fechas, geométricas, orientadas a operaciones con redes, etc. 5. Permite la declaración de funciones propias, así como la definición de disparadores. 6. Soporta el uso de índices, reglas y vistas. 7. Incluye herencia entre tablas (aunque no entre objetos, ya que no existen), por lo que a este gestor de bases de datos se le incluye entre los gestores objeto- relacionales. 8. Permite la gestión de diferentes usuarios, como también los permisos asignados a cada uno de ellos. Ventajas de PostGreSQL Instalación ilimitada: Es frecuente que las bases de datos comerciales sean instaladas en más servidores de lo que permite la licencia. Algunos proveedores comerciales consideran a esto la 25 principal fuente de incumplimiento de licencia. Con PostgreSQL no hay costo asociado a la licencia del software. Esto tiene varias ventajas adicionales: • Modelos de negocios más rentables con instalaciones a gran escala. • No existe la posibilidad de ser auditado para verificar cumplimiento de licencia en ningún momento. • Flexibilidad para hacer investigación y desarrollo sin necesidad de incurrir en costos adicionales de licenciamiento. JQuery JQuery es una biblioteca o framework de Javascript, creada inicialmente por John Resig, que permite simplificar la manera de interactuar con los documentos HTML, manipular el árbol DOM, manejar eventos, desarrollar animaciones y agregar interacción con la tecnología AJAX a páginas web. Fue presentada el 14 de enero de 2006 en el BarCamp NYC. JQuery, al igual que otras bibliotecas, ofrece una serie de funcionalidades basadas en Javascript que de otra manera requerirían de mucho más código. Es decir, con las funciones propias de esta biblioteca se logran grandes resultados en menos tiempo y espacio. Es un proyecto open-source el cual fue liberado en enero del año 2006. Provee muchas características nuevas a JavaScript, sintaxis simple de aprender, una robusta compatibilidad de plataforma cruzada y todo esto en un pequeño archivo jquery.js. Compatible con los navegadores: • Firefox 2.0+. • Safari 2.0.2+. • Opera 9+. • Internet Explorer 6+. Características: • Selección de elementos DOM. • Interactividad y modificaciones del árbol DOM, incluyendo soporte para CSS 1-3 y un plugin básico de XPath. • Eventos. • Manipulación de la hoja de estilos CSS. • Efectos y animaciones. • AJAX. • Soporta extensiones. • Utilidades varias como obtener información del navegador, operar con Objetos y Arrays, función trim() (elimina los espacios en blanco del principio y final de una cadena de caracteres), etc. • Acceder al documento HTML (DOM = Document Object Model). 26 • Modificar la apariencia de la página. • Modificar el contenido de la página. • Manejar eventos de los elementos de la página. • Crear efectos visuales. • Manipular estilos CSS (Cascading Style Sheets). • AJAX (Asynchronous JavaScript + XML) • Simplificar tareas comunes de JavaScript: manipulación de arrays, iteración de arrays, operar con objetos. • Manipulación en JSON (JavaScript Object Notation). • Programación bajo el paradigma no invasivo. Licencias Podríamos usar cualquier proyecto de jQuery en virtud de los términos de la licencia MIT o de la GNU General Public License (GPL) Versión 2. La licencia MIT se recomienda para la mayoría de los proyectos. Es simple y fácil de entender y lugares casi sin restricciones en lo que puede hacer con un proyecto de jQuery. Si la GPL se adapta a nuestro proyecto somos libres de utilizar un proyecto de jQuery en virtud de esa licencia. 27 CAPITOLO 3: MARCO DE DESARROLLO En este capítulo se presenta la explicación en detalle del ciclo de desarrollo de la aplicación, adoptando el esquema basado en la Metodología Ágil AMDD expuesta, con la finalidad de que se pueda comprender mejor el detalle del sistema y como se sustentan las bases teóricas presentadas en el capítulo anterior. El ciclo de vida del software elaborado mediante el modelado ágil consta de tres etapas primordiales: iniciación, desarrollo en iteraciones y por último liberación del producto. En la etapa inicial se realizó el análisis de requerimientos, se esbozó la arquitectura inicial y la planificación de las sucesivas iteraciones, durante el ciclo de desarrollo de la aplicación. En la segunda etapa, se describen las acciones realizadas para la finalización de un producto exitoso. Finalmente, en la tercera etapa se especifican las actividades realizadas como lo son las pruebas realizadas a la aplicación y puesta en marcha. 3.1 Análisis de la solución propuesta Como se mencionó anteriormente, el objetivo del presente Trabajo Especial de Grado se fundamenta en el desarrollo de una Aplicación Web, que permita el almacenamiento y consulta de manera rápida y efectiva, de los datos generados por los diferentes dispositivos utilizados en el estudio del potencial eólico en Venezuela. Además, gestionar la información de las diferentes entidades tanto públicas como privadas que intervienen en dicho proceso de medición. La aplicación debe cumplir un conjunto de características principales, entre las que se encuentran: poder distinguir los distintos tipos de usuarios según el rol que desempeñe dentro de la institución, permitir a dichos usuarios consultar los datos generados por las torres de medición según su ubicación geográfica. Además de permitir seleccionar el periodo de tiempo a consultar y poder visualizar los resultados. 3.2 Iteración 0 (Levantamiento de la Información) En esta iteración, se realizo el levantamiento y análisis de la información, lo que permitió determinar las distintas funcionalidades que la aplicación debe proveer, los distintos entes y usuarios participantes, además de las relaciones entre los mismos. De igual forma, se pudo determinar la arquitectura la cual como la mayoría de las aplicaciones Web se basará en un esquema Cliente-Servidor, el cual será desarrollado siguiendo en patrón de diseño MVC en PHP. Seguidamente en esta fase, se destacan el conjunto de requerimientos que debe tener la aplicación y la distribución de estos y cómo se desarrolló cada uno de los módulos funcionales, especificando en cual iteración, además de la descripción de la interfaz. En la siguiente figura se detallan las acciones llevadas a cabo en esta iteración 0. 28 Figura 3.1: Iteración 0 del proyecto. Requerimientos funcionales de la aplicación Los requerimientos funcionales, son todos aquellos que describen las distintas funcionalidades que se espera el sistema provea y las interacciones del mismo con su entorno. Previamente se van a nombrar a groso modo, los principales requerimientos funcionales de la aplicación, para luego representar estos requerimientos a través de la realización del modelo de casos de uso. Este modelo nos permite describir cada una de las funcionalidades. • Proveer información general sobre la campaña de medición eólica en Venezuela. • Permitir el registro y manejo de información de los diferentes entes involucrados y los distintos tipos de usuarios del sistema (registrado, administrador, web). • Permitir a los usuarios el acceso a la aplicación mediante la autenticación suministrando su nombre de usuario y su clave, y en dado caso que olvidase la clave, permitirle recuperarla. • Proveer un sistema de almacenamiento eficiente, para los datos resultados de las mediciones realizadas por los diferentes equipos instalados, en cada torre de medición eólica. • Permitir la visualización gráfica de los resultados de mediciones generadas por cada una de las distintas torres. • Proveer un mecanismo que permita llevar el control de los distintos emplazamientos ubicados a lo largo del territorio nacional, permitiendo almacenar información asociada a estos, como lo son: descripción, coordenadas de ubicación, mapas e imágenes. • Permitir llevar el control sobre las empresas contratadas para el mantenimiento de uno o más emplazamientos, permitiendo almacenar información relevante como lo son: datos 29 de la empresa contratada, datos del contrato e informes de los mantenimientos realizados. • Permitir a los usuarios descargar a un archivo, los datos consultados. Requerimientos no funcionales de la aplicación Los requerimientos no funcionales hacen referencia a las características del sistema que aplican de manera general como un todo, más que a rasgos particulares del mismo. Estos requerimientos son adicionales a los requerimientos funcionales que debe cumplir el sistema, y corresponden a aspectos tales como la disponibilidad, mantenibilidad, flexibilidad, escalabilidad, facilidad de uso, entre otras. A continuación, se presenta la descripción de aquellos requerimientos no funcionales que se tomaron en cuenta en la aplicación. Requerimiento Descripción RNF-001 Usabilidad El sistema debe ser lo más sencillo de usar con metáforas adecuadas y fáciles de predecir su funcionalidad, poco propenso a cometer errores. La interfaz del usuario deberá ser tan familiar como sea posible a los usuarios, que han usado otras aplicaciones web. RNF-002 Integridad El sistema debe validar la información contenida en los formularios de ingreso. En el proceso de validación de la información, se deben tener en cuenta aspectos tales como obligatoriedad de campos, longitud de caracteres permitida por campo, manejo de tipos de datos entre otros. RNF-003 Seguridad El acceso al sistema debe estar restringido por el uso de claves asignadas a cada uno de los usuarios. Sólo podrán ingresar al sistema las personas que estén registradas, estos usuarios serán clasificados en varios tipos de usuarios (o roles), con acceso a las opciones de trabajo definidas para cada rol. Solo los usuarios con derechos de administrador podrán acceder a las funciones administrativas. RNF-004 Eficiencia Garantizar la confiabilidad, la seguridad y el desempeño del sistema a los diferentes usuarios a nivel nacional. En este sentido, la información almacenada podrá ser consultada y actualizada permanente y simultáneamente, sin que se afecte el tiempo de respuesta. RNF-005 Robustez El sistema debe poder presentar mensajes de error ante situaciones adversas, que permitan al usuario identificar el tipo de error y comunicarse con el administrador del sistema. Tabla 3.2 : Requerimientos No Funcionales de la Aplicación. 30 Pila de requerimientos funcionales o casos de uso Siguiendo los 12 principios de la Metodología ágil (Manifiesto Ágil 2002), y las diferentes etapas que intervienen en el desarrollo de nuestra aplicación, para lograr determinar el número de iteraciones que se deberán realizar a fin de conseguir el objetivo planteado, se procedió a la captura de los requerimientos del sistema. Los requerimientos fueron distribuidos según el orden de prioridad establecidos por el equipo. El tiempo que se llevó el desarrollo de cada uno de los requerimientos, dependió de la complejidad del mismo; así como también se desarrollo un análisis previo que permitió definir los pasos a seguir para la completitud de cada uno de ellos. Este análisis consistió básicamente, en determinar el nivel de interacción que debía existir entre cada uno de los módulos del sistema y sus necesidades. A continuación, se presenta el conjunto de requerimientos implementados. Pila de casos de uso de la aplicación Diseño y construcción de la base de datos Iteración 1 Registrarse Recuperar clave Autenticarse (manejo de sesión) Administrar datos de usuario Desactivar usuarios Iteración 2 Administrar datos de emplazamiento Administrar datos de instituciones Administrar datos de sensor Administrar datos de datalogger Administrar datos de contratista Iteración 3 Visualizar información sobre la campaña Cargar archivo de datos Cargar fotos y mapas Consultar datos de contratos Consultar datos de emplazamientos Iteración 4 Administrar datos de contrato Visualizar datos eólicos Visualizar gráficas de datos consultados Descargar archivo de datos consultados Descargar datos crudos Iteración 5 Figura 3.1: Pila de requerimientos. 31 Descripciones de los casos de uso A continuación se presenta una vista funcional del sistema basado en los diversos diagramas y definiciones de los casos de uso que conformarán el Sistema. Definiciones, acrónimos y abreviaturas Actor: es una persona, organización, o sistema externo que interactúa con el sistema. Generalmente son usuarios del sistema descritos a través de los roles que los representan dentro de la organización. Caso de Uso (CU): describen las funciones del sistema que son visibles a los usuarios (actores). Son usados para proveer un resumen de todos o parte de los requerimientos funcionales del sistema y comunicar el alcance del proyecto. Include: es la invocación de un CU dentro de otro CU en algún punto en específico (como llamando una función). Extend: extender un CU continúa el comportamiento del CU base, agregando una secuencia de acciones o pasos (estos pueden ir en paralelo a los pasos del CU base). Usuario web: es aquella persona que visita la aplicación web pero aún no ha iniciado sesión, esto puede deberse a varias causas: no se ha registrado, ha perdido su contraseña, o simplemente no se ha autenticado. Por lo tanto este usuario tiene acceso restringido a las funcionalidades del sistema y solo se le permite consultar información a cerca de la campaña de medición del recurso eólico en Venezuela. Usuario registrado: es el usuario que se ha registrado previamente en el sistema, posee las credenciales para autenticarse y acceder a las diferentes funcionalidades del módulo de almacenamiento, consulta y manejo de datos de la aplicación. Administrador: es aquel usuario que tiene permisos para realizar operaciones relacionadas con la administración de la aplicación. 32 Diagrama general de casos de uso Se han dividido los casos de uso por tipo de usuario, los cuales se observan en el siguiente diagrama. La especificación de cada uno de estos tipos de usuarios se encuentra en la siguiente sección del documento. Figura 3.2: Nivel 1 de Casos de Uso. 33 Descripción del caso de uso visualizar Información sobre la campaña: Caso de Uso Nombre: Visualizar datos de campaña Descripción: En el presente caso de uso, el usuario desea conocer más información acerca de la campaña de medición eólica en Venezuela. Precondición: El usuario desea visualizar información acerca de la campaña de medición eólica en Venezuela. Flujo Normal: 1. El usuario se encuentra en la página principal del sistema, selecciona la opción del menú para ver información adicional. 2. Visualiza la información acerca de la campaña. Actor Sistema 1. Se dirige a la página principal del sistema. 3. Selecciona en el menú la opción del menú “Información adicional”. 6. Navega por los diferentes enlaces para visualizar toda la información. 8. Visualiza la información. 2. Muestra la página principal. 4. Muestra la página principal de información acerca de la campaña. 7. El sistema muestra la información contenida en cada uno de los ítems. Flujo Alterno: N/A Post condición: El usuario ha visualizado la información de la campaña de medición eólica en Venezuela. Requerimientos Especiales: N/A Puntos de Extensión: N/A Descripción del caso de uso cargar archivo de datos: Caso de Uso Nombre: Cargar Archivo de Datos Descripción: En el presente caso de uso el usuario con rol de Administrador, previamente autenticado, se le permite cargar en el sistema el archivo que contiene las mediciones eólicas obtenidas en alguna de las torres instaladas. Precondición: El usuario esta registrado en el sistema. El usuario está autenticado en el sistema. El usuario posee el archivo generado por el datalogger con los datos de medición. Flujo Normal: 1. El usuario se encuentra en la página principal del sistema, selecciona la opción de cargar datos del 34 Caso de Uso menú principal. 2. Visualiza el formulario de registro de nuevos archivos de datos, selecciona los archivos a cargar y presiona el botón de guardar. 3. Visualiza un indicador de progreso y luego un mensaje de éxito. Actor Sistema 1. Se dirige a la página principal del usuario. 3. Selecciona en el menú la opción de cargar datos. 5. Indica la ubicación de los archivos y una de breve descripción y presiona el botón de guardar. 7. Visualiza el mensaje de éxito. 2. Muestra la página principal. 4. Muestra la página de carga de datos. 6. El sistema verifica el formato de los archivos y la información de este, luego estos son almacenados en la base de datos. 8. El sistema muestra un mensaje de éxito. Flujo Alterno: 1. El usuario intenta cargar un archivo con el formato incorrecto. Actor Sistema 1. Ingresa los datos de un archivo que no cumple con el formato esperado. 3. Visualiza el mensaje de error. 2. La aplicación valida el formato del archivo y muestra un mensaje indicando lo ocurrido. Flujo Alterno: 2. El usuario intenta cargar un archivo que ya ha sido cargado. Actor Sistema 1. intenta cargar un archivo que ya fue cargado en la aplicación. 3. Visualiza el mensaje que indica lo ocurrido. 2. La aplicación valida que no exista almacenado un archivo con el mismo código y fecha que el archivo que se está intentando cargar. 4. Muestra un mensaje indicando que el archivo ya existe en el sistema. Post condición: El usuario ha cargado en el sistema los archivos de datos, de manera exitosa. Requerimientos Especiales: N/A Puntos de Extensión: N/A Descripción del caso de uso visualizar graficas de datos eólicos: Caso de Uso Nombre: Visualizar graficas de datos Descripción: En el presente caso de uso un usuario registrado en la aplicación, suministra la información necesaria para visualizar los datos eólicos generados por un 35 Caso de Uso emplazamiento, a través de gráficas. Precondición: Deben existir datos cargados en el sistema asociados a dicho emplazamiento, en un periodo de tiempo específico. Flujo Normal: 1. El usuario selecciona en el menú principal la opción de históricos. 2. Selecciona de una lista de opciones, el estado, municipio y emplazamiento a consultar. 3. Luego selecciona el periodo de tiempo y tipos de mediciones que desea visualizar. 4. Visualiza las diferentes graficas generadas por la aplicación. Actor Sistema 1. Se dirige a la página principal da la aplicación. 3. Selecciona en el menú la opción Históricos. 5. Selecciona los datos de la ubicación del emplazamiento. 7. Selecciona el periodo de tiempo y los tipos de mediciones a consultar. 9. Visualiza las graficas y los datos. 2. Muestra la página principal. 4. Muestra la página donde se selecciona el estado, municipio y emplazamiento. 6. El sistema muestra la página donde permite seleccionar el periodo de tiempo en el cual se generaron los datos, y los tipos de mediciones. 8. Genera y muestra cada una de las graficas, además de mostrar los datos consultados. Flujo Alterno: 1. El usuario intenta consultar un periodo de tiempo, donde no exista data cargada. Actor Sistema 1. Selecciona un periodo de tiempo donde no se ha cargado datos eólicos. 3. Visualiza el mensaje. 2. La aplicación valida que exista datos eólicos en ese periodo de tiempo que se ha seleccionado y muestra un mensaje indicando ocurrido. Post condición: El usuario ha visualizado las gráficas generadas por la aplicación. Requerimientos Especiales: N/A Descripción del caso de uso visualizar datos eólicos: Caso de Uso Nombre: Visualizar datos eólicos. Descripción: En el presente caso de uso un usuario registrado en la aplicación, suministra la información necesaria para visualizar tablas con los datos eólicos generados por un emplazamiento. Precondición: Deben existir datos cargados en el sistema asociados a dicho emplazamiento, en un periodo de tiempo específico. Flujo Normal: 36 Caso de Uso 1. El usuario selecciona en el menú principal la opción de históricos. 2. Selecciona de una lista de opciones, el estado, municipio y emplazamiento a consultar. 3. Luego selecciona el periodo de tiempo y tipos de mediciones que desea visualizar. 4. Visualiza las diferentes tablas con los datos generadas por la aplicación. Actor Sistema 1. Se dirige a la página principal da la aplicación. 3. Selecciona en el menú la opción Históricos. 5. Selecciona los datos de la ubicación del emplazamiento. 7. Selecciona el periodo de tiempo y los tipos de mediciones a consultar. 9. Visualiza las tablas con los datos. 2. Muestra la página principal. 4. Muestra la página de formulario, donde se selecciona el estado, municipio y emplazamiento. 6. El sistema muestra la página donde permite seleccionar el periodo de tiempo en el cual se generaron los datos, y los tipos de mediciones. 8. Genera y muestra cada una de las tablas con los datos obtenidos en la consulta. Flujo Alterno: 2. El usuario intenta consultar un periodo de tiempo, donde no exista data cargada. Actor Sistema 2. Selecciona un periodo de tiempo donde no se ha cargado datos eólicos. 4. Visualiza el mensaje. 3. La aplicación valida que exista datos eólicos en ese periodo de tiempo que se ha seleccionado y muestra un mensaje indicando ocurrido. Post condición: El usuario ha visualizado las tablas de datos, generadas por la aplicación. Requerimientos Especiales: N/A Puntos de Extensión: N/A Descripción del caso de uso Descargar datos consultados: Caso de Uso Nombre: Descargar de datos consultados Descripción: En el presente caso de uso el usuario registrado, previamente autenticado, se le permite descargar los datos generados en según los parámetro de la consulta. Precondición: El usuario esta registrado en el sistema. El usuario está autenticado en el sistema. El usuario ha realizado una consulta de datos y desea descargar dichos datos a un archivo. Flujo Normal: 1. El usuario se encuentra en la página de visualización de resultado de una consulta específica, selecciona la opción de descargar datos consultados. 37 Caso de Uso 2. Visualiza el formulario descarga de archivo de datos, selecciona la ubicación de destino del archivo y presiona el botón guardar. 3. Visualiza un mensaje de éxito. Actor Sistema 1. Se encuentra en la página de visualización de resultados y selecciona la opción de descargar archivo de datos crudos. 3. Indica la ubicación de destino, donde desea que se guarde él archivo y presiona el botón guardar. 5. Visualiza el mensaje de éxito. 2. Muestra el formulario de descarga de archivos. 4. El sistema genera un archivo con los datos crudos, y lo guarda en la ubicación indicada por el usuario, luego muestra un mensaje de éxito. Flujo Alterno: N/A Post condición: El usuario ha descargado en el archivo que contiene los datos generados durante la consulta. Descripción del caso de uso Descargar datos crudos: Caso de Uso Nombre: Descarga de datos crudos. Descripción: En el presente caso de uso el usuario registrado, previamente autenticado, se le permite descargar los datos crudos. Precondición: El usuario está registrado en el sistema. El usuario se encuentra autenticado en el sistema. El usuario desea descargar los datos crudos de medición eólica. Flujo Normal: 1. El usuario se encuentra en la página de visualización de resultado de una consulta específica, selecciona la opción de descargar datos crudos. 2. Visualiza el formulario descarga de archivo de datos, selecciona la ubicación del archivo y presiona el botón guardar. 3. Visualiza un mensaje de éxito. Actor Sistema 1. Se encuentra en la página de visualización de resultados y selecciona la opción de descargar archivo de datos crudos. 3. Indica la ubicación de destino, donde desea que se guarde él archivo y presiona el botón guardar. 5. Visualiza el mensaje de éxito. 2. Muestra el formulario de descarga de archivos. 4. El sistema genera un archivo con los datos crudos, y lo guarda en la ubicación indicada por el usuario, luego muestra un mensaje de éxito. 38 Caso de Uso Actor Sistema Post condición: El usuario ha descargado en el archivo que contiene los datos crudos. Requerimientos Especiales: N/A Puntos de Extensión: N/A Descripción del caso de uso administrar datos de usuarios: Caso de Uso Nombre: Administrar datos de usuario Descripción: En el presente caso de uso, un usuario administrador de la aplicación acceda a este bloque de la aplicación para crear/activar/desactivar/eliminar/reenvio de clave a un usuario. Precondición: La institución envió una solicitud con los datos del usuario a crear. El usuario no se encuentra registrado en la aplicación. Flujo Normal: 1. El usuario administrador se ubica en la página de registro de usuario. 2. Rellena el formulario con los datos a ser registrados en el sistema. 3. El sistema almacena los datos y genera un mensaje que indica, que se ha creado en el sistema el usuario satisfactoriamente. Actor Sistema 1. Se dirige a la página de registro de usuarios. 3. Ingresa los datos básicos para ser registrados en el sistema. 6. Visualiza el mensaje de registro exitoso. 2. Muestra el formulario para el ingreso de datos del usuario a registrarse. 4. Valida y registra los datos del usuario y se muestra un mensaje de éxito. Flujo Alterno: 1. El usuario ingresó datos inválidos Actor Sistema 1. Se dirige a la página de registro de usuarios 3. El usuario ingresa datos inválidos. 2. Muestra el formulario para ingresar los datos del usuario a registrarse. 4. Valida y muestra un mensaje indicando que los datos ingresados son inválidos. Flujo Alterno: 2. El usuario a registrar ya existe. Actor Sistema 39 Caso de Uso 1. Se dirige a la página de registro de usuarios 3. Ingresar los datos básicos para ser registrado en el sistema. 5. Visualiza en mensaje. 2. Muestra el formulario para ingresar los datos del usuario a registrarse. 4. Valida que no exista en el sistema un usuario con el mismo correo y cédula, si ya existe se muestra un mensaje indicando que ya existe un usuario con la misma combinación (correo, cédula). Post Condición: El usuario ha sido registrado de manera exitosa. Requerimientos Especiales: N/A Puntos de Extensión: N/A Descripción del caso de uso administrar datos de instituciones: Caso de Uso Nombre: Administrar datos de instituciones Descripción: En el presente caso de uso el usuario con rol de administrador, previamente autenticado, se le permite administrar la información de las instituciones registradas en el sistema. Precondición: El usuario esta registrado en el sistema con el rol de administrador. El usuario está autenticado en el sistema. Flujo Normal: 1. El usuario se encuentra en la página principal del sistema, selecciona la opción de administrar instituciones. 2. Visualiza el formulario de registro y el listado de instituciones registradas en el sistema. Actor Sistema 1. Se dirige a la página principal de la aplicación, selecciona la opción de administrar instituciones. 3. Visualiza la página de administración de instituciones. 2. Muestra la página de administración de instituciones. Flujo Alterno: 1. Se desea registrar una nueva institución. Actor Sistema 1. Ingresa los datos de la nueva institución en el formulario de registro, presiona el botón de guardar. 4. Visualiza la ventana con los datos de institución. 2. Valida la información y la almacena en la base de datos. 3. Muestra un mensaje de éxito. Flujo Alterno: 2. Se desea eliminar una institución existente. Actor Sistema 40 Caso de Uso 1. Visualiza el listado de instituciones registradas, presiona el botón de eliminar asociado a esta. 3. Visualiza el mensaje de éxito. 2. Elimina el registro y muestra un mensaje de éxito. Flujo Alterno: 3. Se desea editar una institución existente. Actor Sistema 1. Visualiza el listado de instituciones registradas, presiona el botón de editar asociado a esta. 3. Visualiza el mensaje de éxito. 2. Edita el registro y presiona el botón de guardar. Post condición: El usuario ha administrado los datos de instituciones. Requerimientos Especiales: N/A Puntos de Extensión: N/A Descripción del caso de uso administrar datos de emplazamientos: Caso de Uso Nombre: Administrar datos de emplazamientos Descripción: En el presente caso de uso el usuario con rol de administrador, previamente autenticado, se le permite gestionar la información de los emplazamientos. Precondición: El usuario esta registrado en el sistema, con el rol de administrador. El usuario está autenticado en el sistema. Flujo Normal: 1. El usuario se encuentra en la página principal del sistema, selecciona la opción de administrar emplazamientos. 2. Visualiza el formulario de registro de emplazamiento. 3. Visualiza la lista de emplazamientos en caso de existir, y selecciona la opción de registrar uno nuevo, o editar uno existente. Actor Sistema 1. Se dirige a la página principal de la aplicación. 3. Selecciona en el menú la opción de registrar nuevo emplazamiento. 5. Ingresa la información respectiva del emplazamiento que desea registrar. 5. Visualiza el mensaje de éxito. 2. Muestra la página de administración de emplazamientos. 4. El sistema muestra el formulario de registro de emplazamiento. 3. Se validan los datos, se guardan en el sistema y se muestra un mensaje de éxito. 41 Caso de Uso Flujo Alterno: 1. El usuario intenta cargar un emplazamiento cuyo código ya fue utilizado en un registro previo. Actor Sistema 1. Ingresa el código de un emplazamiento que ya ha sido registrado. 3. El usuario visualiza el mensaje de error. 2. La aplicación valida el código y emite un mensaje de error. Flujo Alterno: 2. El usuario no ingresa todos los datos requeridos para el registro de un emplazamiento. Actor Sistema 1. No ingresa todos los datos mínimos requeridos para el registro exitoso de un emplazamiento. 4. Visualiza el mensaje de error. 2. Valida que se hayan suministrado todos los datos requeridos, y muestra un mensaje de error informando lo ocurrido. Post condición: El usuario ha cargado en la aplicación la información de un emplazamiento Requerimientos Especiales: N/A Puntos de Extensión: Cargar fotos, Cargar mapas. Descripción del caso de uso Consultar Datos de Emplazamientos: Caso de Uso Nombre: Consultar datos de emplazamiento Descripción: En el presente caso de uso el usuario registrado en el sistema, previamente autenticado, se le permite consultar la información de un emplazamiento en particular. Precondición: El usuario esta registrado en el sistema. El usuario está autenticado en el sistema. El usuario desea consultar información acerca de un emplazamiento existente. Flujo Normal: 1. El usuario se encuentra en la página principal del sistema, selecciona la opción consultar emplazamientos. 2. Selecciona la ubicación y el emplazamiento a consultar. 3. Visualiza una página con la información disponible del emplazamiento. Actor Sistema 1. Se dirige a la página principal del usuario, selecciona la opción en el menú de consultar emplazamiento. 3. Selecciona el estado, municipio, y el emplazamiento 2. Muestra el formulario de consulta. 4. Genera la consulta y muestra una página 42 Caso de Uso que desea consultar. 5. El Visualiza los datos del emplazamiento. con los datos del emplazamiento seleccionado Post condición: El usuario ha visualizado la información del emplazamiento de manera exitosa. Requerimientos Especiales: N/A Puntos de Extensión: N/A Descripción del caso de uso Cargar fotografías: Caso de Uso Nombre: Cargar fotos. Descripción: En el presente caso de uso el usuario con rol de Administrador, se le permite cargar en el sistema fotografías asociadas a un emplazamiento en particular. Precondición: El usuario esta registrado en el sistema. El usuario está autenticado en el sistema. El usuario posee el archivo de la foto que desea cargar. Flujo Normal: 1. El usuario acaba de registrar la información de un emplazamiento, selecciona la opción de cargar fotos. 2. Visualiza el formulario de registro de fotos, selecciona la ubicación de la foto en el directorio y presiona el botón de guardar. 3. Visualiza un mensaje de éxito. Actor Sistema 1. Se ha cargado la información de un emplazamiento, selecciona la opción de cargar foto. 3. Indica la ubicación del archivo y una de breve descripción y presiona el botón de guardar. 5. Visualiza el mensaje de éxito. 2. Muestra el formulario de registro de foto. 4. Almacena el archivo en el sistema y muestra un mensaje de éxito. Flujo Alterno: 1. El usuario intenta cargar un archivo que excede el tamaño máximo permitido. Actor Sistema 1. El usuario intenta cargar una foto que excede el tamaño máximo. 3. El usuario visualiza el mensaje de error. 2. La aplicación valida el tamaño del archivo y muestra un mensaje indicando lo ocurrido. Post condición: El usuario ha cargado exitosamente en el sistema, la foto asociada a un emplazamiento en particular. Requerimientos Especiales: N/A 43 Caso de Uso Puntos de Extensión: N/A Descripción del caso de uso administrar datos de contratista: Caso de Uso Nombre: Administrar datos de contratista Descripción: En el presente caso de uso el usuario con rol de Administrador, se le permite administrar la información de las empresas contratistas. Precondición: El usuario esta registrado en el sistema con el rol de administrador. El usuario está autenticado en el sistema. Flujo Normal: 1. El usuario se encuentra en la página principal del sistema, selecciona la opción de Administrar contratistas. 2. Visualiza el formulario de registro y el listado de empresas contratistas registradas en el sistema. Actor Sistema 1. Se dirige a la página principal de la aplicación, selecciona la opción de administrar contratistas. 3. Visualiza la página de administración de empresas contratistas. 2. Muestra la página de administración de empresas contratistas. Flujo Alterno: 1. Se desea registrar una nueva empresa contratista. Actor Sistema 2. Ingresa los datos de la nueva contratista en el formulario de registro, presiona el botón de guardar. 5. Visualiza la ventana con los datos de la contratista. 4. Valida la información y la almacena en la base de datos. 5. Muestra una ventana con los datos de la contratista registrada. Flujo Alterno: 2. Se desea eliminar una contratista existente. Actor Sistema 1. Visualiza el listado de contratistas registradas, presiona el botón de eliminar asociado a esta. 3. Visualiza el mensaje de éxito. 2. Elimina el registro y muestra un mensaje de éxito. Post condición: El usuario ha administrado los datos de las empresas contratistas. 44 Caso de Uso Requerimientos Especiales: N/A Puntos de Extensión: N/A Descripción del caso de uso autenticarse: Caso de Uso Nombre: Autenticarse Descripción: En el presente caso de uso, un usuario registrado o administrador del sistema procederá a autenticarse para tener acceso a las acciones restringidas de la aplicación Web. Precondición: El usuario esta registrado en el sistema. El usuario desea iniciar sesión y no esta autenticado. Flujo Normal: 1. El usuario ingresa el identificador de usuario y la clave. 2. El sistema valida los datos y muestra la página principal del usuario. Actor Sistema 1. Se dirige a la página de inicio de sesión. 3. Ingresa identificador y la clave. 5. Visualiza la página principal del usuario. 2. Se muestra el formulario de inicio de sesión. 4. Valida los datos ingresados y redirige a la página principal del usuario. Flujo Alterno: 1. El usuario ingresa datos inválidos. Actor Sistema 1. El usuario ingresa datos inválidos. 2. El sistema muestra mensaje de error y le informa al usuario que introduzca correctamente los datos. Flujo Alterno: 2. El usuario no introduce todos los datos obligatorios. Actor Sistema 1. No introduce todos los datos obligatorios 2. Muestra un mensaje informándole al usuario que complete todos los datos para autenticarse Post condición: El usuario se encuentra autenticado en el sistema. Requerimientos Especiales: N/A Puntos de Extensión: N/A 45 Descripción del caso de uso Recuperar Clave: Caso de Uso Nombre: Recuperar contraseña. Descripción: En el presente caso de uso el usuario registrado, ha olvidado su clave de acceso al sistema y tiene la posibilidad de recuperarla Precondición: El usuario esta registrado en el sistema. Flujo Normal: 1. El usuario se encuentra en la página principal de la aplicación, selecciona la opción de recuperar clave. 2. Visualiza el formulario de recuperación de clave. 3. Ingresa la dirección de correo electrónico que uso en el registro y presiona el botón de enviar. 4. Recibe un correo con la clave. Actor Sistema 1. Se dirige a la página principal del usuario, selecciona la opción de recuperar clave. 3. Ingresa la dirección de email que utiliza para acceder a la aplicación y presiona el botón de enviar. 5. Visualiza el mensaje de éxito. 2. Muestra el formulario de recuperación de contraseña. 4. Valida el formato de correo y verifica que la dirección ingresada exista en el sistema, envía un correo con la contraseña y muestra un mensaje de éxito indicando que la contraseña le ha sido enviada. Flujo Alterno: 1. El usuario ingresa una dirección de correo que no está registrada en la aplicación. Actor Sistema 1. El usuario ingresa una dirección de correo no está registrada en la aplicación. 3. Visualiza el mensaje de error. 2. Verifica que la dirección no se encuentra registrada en la base de datos y genera un mensaje indicando el error. Flujo Alterno: 2. El usuario ingresa una dirección de correo con un formato erróneo. Actor Sistema 1. Ingresa una dirección de correo que no cumple con el formato estándar. 3. Visualiza el mensaje de error. 2. La aplicación valida dicho email y muestra un mensaje de error. Post condición: El usuario ha recuperado de manera exitosa su contraseña. Requerimientos Especiales: N/A Puntos de Extensión: N/A 46 Interfaz de la aplicación Una vez que se ha efectuado el análisis de los requerimientos, tanto los funcionales como los no funcionales de la aplicación, se procedió a realizar el modelo de interfaz. Para llevar a cabo el modelado, se tomó en cuenta que la aplicación Web a desarrollar tiene como cliente principal una institución del Estado Venezolano (MENPET), por lo que debe seguir un conjunto de lineamientos y estándares propios de las aplicaciones Web que desarrolla el esa institución. Otro de los aspectos a considerar son los diferentes actores que interactúan en la aplicación (Usuario, Usuario autenticado, Administrador) con la finalidad de crear interfaces que satisfagan las necesidades de cada uno. En el caso de Usuario Administrador debe poseer una interfaz única, donde se le permita administrar (crear, editar o borrar) cada uno de los elementos y entes que intervienen en el proceso de medición del potencial eólico. Clientes del sitio requieren una interfaz que facilite su navegación dentro del sistema. Para lograr todo esto, se utilizaron los patrones de interacción que son una herramienta que ayuda a describir un problema concerniente a la interfaz de usuario, en un contexto dado. Estándar a seguir: Según Oficina de Planificación Estratégica (Caracas, Agosto 2.007). La Oficina de Planificación Estratégica en conjunto con la Oficina de Tecnología e Informática, elaboraron el presente Instructivo Sobre Estándar de Interfaz Gráfico (Ambiente Web), cuyo objetivo es proveer de un estándar de interfaz gráfica que aplicado a un sistema de ejemplo, pueda servir de guía (prototipo) para que los usuarios lo utilicen y tengan una idea próxima del sistema a ser desarrollado; de esa forma se dedica esfuerzo en la lógica de programación y se interconecta con el estándar de interfaz gráfica para su debida producción; de ahí el apoyo relevante que tiene para la Oficina de Tecnología e Informática. Corresponderá a la Oficina de Planificación Estratégica la actualización de esta manual, por ser una unidad asesora en la materia y corresponderá a la Oficina de Auditoría Interna verificar su cumplimiento. Poniendo en uso nuestra conceptualización de prototipos, se presenta a continuación la estructura de la plantilla que deberá ser utilizada en cada una de las secciones del sitio web. La misma está dividida en elementos, las cuales se presentan y describen a continuación: • Encabezado del Sistema: Espacio para el panel de opciones generales del sitio web. El mismo por muy sencillo o complejo que sea debe mostrar al menos el nombre del sistema. 47 • Ruta Usuario: Espacio el cual permitirá mantener informado sobre la sección actual abierta con retornos y la información del usuario autenticado en el sistema. • Contenido: Espacio para la colocación de información general sobre el sitio web, lista de opciones del panel de control, buscadores, resultados de la búsqueda, formas de detalles, modificación, inserción, entre otras cosas. • Encabezado Opciones Generales del Sitio Web: Espacio para mostrar una segunda forma de las opciones generales del sitio web. • Derechos de Autor y Tecnología Utilizada: Espacio para mostrar información sobre el licenciamiento del software, lista de personas que participaron en la creación del software y imágenes asociadas a las tecnologías de información utilizadas. Figura 3.7: Plantilla Reutilizable. 48 Desarrollo de las iteraciones siguientes Como se pudo observar en el diagrama de la pila de requerimientos realizada, el desarrollo de los módulos que conforman la aplicación fue dividido en un conjunto de iteraciones, las cuales serán descritas a continuación. 3.3 Iteración 1 (diseño de la base de datos) Para la generación de el diseño de la base de datos seguimos un Modelo Conceptual de BD Relacionales (Conception des bases de donnees Relationnelles Jacky Akoka et isabelle Comyn-Wattiau Vuibert, Paris 2001, ISBN 2-7117-8678-i) que plantea diferentes métodos tal como el MERISE, que nos habla de un desarrollo por etapas. Las cuales están por formadas por los siguientes pasos: 1) Esquema Conceptual: representa el contenido de la BD en términos conceptuales, independiente de consideraciones informáticas. 2) Nivel Lógico: resulta de la traducción del esquema conceptual a un esquema apropiado a un tipo de BD. En este caso BD relacionales. 3) Nivel Físico: se utiliza para describir los métodos de organización y acceso a la BD. Modelo conceptual de base de datos. En este se describen los objetos principales, sus características y sus relaciones, a través de un formalismo denominado modelo de datos. En este caso utilizaremos el modelo Entidad- Relación (ER) para su representación. 49 Figura 3.3: Diseño conceptual de la base de datos (ER). Descripción de entidades A continuación se detallaran las entidades, son objetos que pueden ser identificados distintivamente. Las entidades son descritas por atributos, características o propiedades. Entre todos los atributos de la entidad, se define un identificador, que es un atributo o conjunto de atributos que permiten determinar una y solo una entidad en el conjunto. a. Emplazamiento Representa la torre instalada con los diferentes sensores y dispositivos, para realizar las mediciones del potencial eólico. Emplazamiento Id Identificador del emplazamiento. Tamaño Tamaño de la torre instalada. Cant_Sensores Cantidad de sensores que posee el emplazamiento. 50 b. Sensor Representa el sensor utilizado para la captura de las diferentes características del viento, para predecir el potencial eólico en una zona. c. Mapa Dicha entidad representa los distintos mapas que pueden ser almacenados acerca de la ubicación específica de un emplazamiento. d. Posición Esta entidad se refiere a las coordenadas geográficas de una posición. e. Data_Logger Representa al Data Logger, equipo encargado de registrar y almacenar los datos provenientes de cada sensor instalados en el emplazamiento. Sensor Id Identificador del sensor. Tipo Tipo de sensor. Fecha_inst Fecha de instalación del sensor. Mapa Id Identificador del mapa Imagen Imagen que representa dicho mapa. Posición Id Identificador de la posición. Coordenadas Coordenadas geográficas de dicha posición. Data_Logger Id Identificador de data logger. Fecha_Inst Fecha de Instalación del equipo. 51 f. Datos_Eólicos Representa los datos eólicos, registrados y almacenados en el data logger provenientes de cada sensor. Fecha_ult_rev Marca Modelo Intervalo_reg Fecha de la última revisión. Marca del dispositivo. Modelo del dispositivo. Intervalo de registro de datos. Datos_Eólicos Id Identificador único del registro. Fecha Fecha en la que se realizó la medición. Hora Hora en la que se realizó la medición. Prom_Vel_1 Promedio de la velocidad del viento proveniente del anemómetro 1. Max_Vel_1 Máxima de la velocidad del viento proveniente del anemómetro 1. Min_Vel_1 Mínima de la velocidad del viento proveniente del anemómetro 1. Desv_Vel_1 Desviación estándar de la velocidad del viento proveniente del anemómetro 1. Prom_Vel_2 Promedio de la velocidad del viento proveniente del anemómetro 2. Max_Vel_2 Máxima de la velocidad del viento proveniente del anemómetro 2. Min_Vel_2 Mínima de la velocidad del viento proveniente del anemómetro 2. Desv_Vel_2 Desviación estándar de la velocidad del viento proveniente del anemómetro 2. Prom_Vel_3 Promedio de la velocidad del viento proveniente del anemómetro 3. Max_Vel_3 Máxima de la velocidad del viento proveniente del anemómetro 3. Min_Vel_3 Mínima de la velocidad del viento proveniente del anemómetro 3. Desv_Vel_3 Desviación estándar de la velocidad del viento proveniente del anemómetro 3. Prom_Dir_1 Promedio de la dirección del viento proveniente de la veleta 1. Max_Dir_1 Máxima de la dirección del viento proveniente de la veleta 1. Min_Dir_1 Mínima de la dirección del viento proveniente de la veleta 1. 52 Desv_Dir_1 Desviación estándar de la dirección del viento proveniente de la veleta 1. Prom_Dir_2 Promedio de la dirección del viento proveniente de la veleta 2. Max_Dir_2 Máxima de la dirección del viento proveniente de la veleta 2. Min_Dir_2 Mínima de la dirección del viento proveniente de la veleta 2. Desv_Dir_2 Desviación estándar de la dirección del viento proveniente de la veleta 2. Prom_Hum Promedio de la humedad relativa proveniente del sensor de humedad. Max_Hum Máxima de la humedad relativa proveniente del sensor de humedad. Min_Hum Mínima de la humedad relativa proveniente del sensor de humedad. Desv_Hum Desviación estándar de la humedad relativa proveniente del sensor de humedad. Prom_Temp Promedio de la temperatura proveniente del sensor de temperatura. Max_Temp Máxima de la temperatura proveniente del sensor de temperatura. Min_Temp Mínima de la temperatura proveniente del sensor de temperatura. Desv_Temp Desviación estándar de la temperatura proveniente del sensor de temperatura. Prom_Pres Promedio de la presión atmosférica proveniente del sensor barométrico. Max_Pres Máxima de la presión atmosférica proveniente del sensor barométrico. Min_Pres Mínima de la presión atmosférica proveniente del sensor barométrico. Desv_Pres Desviación estándar de la presión atmosférica proveniente del sensor barométrico. Prom_Rad Promedio de la radiación solar proveniente del piranómetro. Max_Rad Máxima de la radiación solar proveniente del piranómetro. Min_Rad Mínima de la radiación solar proveniente del piranómetro. Desv_Rad Desviación estándar de la radiación solar proveniente del piranómetro. Prom_Prec Promedio de la precipitación proveniente del sensor de precipitaciones. Max_Prec Máxima de la precipitación proveniente del sensor de precipitaciones. Min_Prec Mínima de la precipitación proveniente del sensor de precipitaciones. Desv_Prec Desviación estándar de la precipitación proveniente del sensor de precipitaciones. 53 g. Velocidad Representa los datos de la velocidad registrada en un emplazamiento dado. h. Dirección Representa los datos sobre la dirección del viento en un emplazamiento en particular. Velocidad Id Identificador único del registro. Fecha Fecha en la que se realizó la medición. Hora Hora en la que se realizó la medición. Prom_Vel Promedio de la velocidad del viento proveniente del anemómetro. Max_Vel Máxima de la velocidad del viento proveniente del anemómetro. Min_Vel Mínima de la velocidad del viento proveniente del anemómetro. Desv_Vel Desviación estándar de la velocidad del viento proveniente del anemómetro. Dirección Id Identificador único del registro. Fecha Fecha en la que se realizó la medición. Hora Hora en la que se realizó la medición. Prom_Dir Promedio de la dirección del viento proveniente de la veleta. Max_Dir Máxima de la dirección del viento proveniente de la veleta. Min_Dir Mínima de la dirección del viento proveniente de la veleta. Desv_Dir Desviación estándar de la dirección del viento proveniente de la veleta. 54 i. Humedad Representa los datos de la humedad relativa registrada en un emplazamiento. j. Temperatura Representa los datos de la temperatura registrada en un emplazamiento. Humedad Id Identificador único del registro. Fecha Fecha en la que se realizó la medición. Hora Hora en la que se realizó la medición. Prom_Hum Promedio de la humedad relativa proveniente del sensor de humedad. Max_Hum Máxima de la humedad relativa proveniente del sensor de humedad. Min_Hum Mínima de la humedad relativa proveniente del sensor de humedad. Desv_Hum Desviación estándar de la humedad relativa proveniente del sensor de humedad. Temperatura Id Identificador único del registro. Fecha Fecha en la que se realizó la medición. Hora Hora en la que se realizó la medición. Prom_Temp Promedio de la temperatura proveniente del sensor de temperatura. Max_Temp Máxima de la temperatura proveniente del sensor de temperatura. Min_Temp Mínima de la temperatura proveniente del sensor de temperatura. Desv_Temp Desviación estándar de la temperatura proveniente del sensor de temperatura. 55 k. Presión Representa los datos de la presión atmosférica registrada en un emplazamiento. l. Radiación Representa los datos de la radiación solar registrada en un emplazamiento. m. Precipitación Representa los datos de la precipitación registrada en un emplazamiento. Presión Id Identificador único del registro. Fecha Fecha en la que se realizó la medición. Hora Hora en la que se realizó la medición. Prom_Pres Promedio de la presión atmosférica proveniente del sensor barométrico. Max_Pres Máxima de la presión atmosférica proveniente del sensor barométrico. Min_Pres Mínima de la presión atmosférica proveniente del sensor barométrico. Desv_Pres Desviación estándar de la presión atmosférica proveniente del sensor barométrico. Radiación Id Identificador único del registro. Fecha Fecha en la que se realizó la medición. Hora Hora en la que se realizó la medición. Prom_Rad Promedio de la radiación solar proveniente del piranómetro. Max_Rad Máxima de la radiación solar proveniente del piranómetro. Min_Rad Mínima de la radiación solar proveniente del piranómetro. Desv_Rad Desviación estándar de la radiación solar proveniente del piranómetro. Precipitación Id Identificador único de registro. Fecha Fecha en la que se realizó la medición. Hora Hora en la que se realizó la medición. 56 n. Empresa_Electrica. Son aquellas empresas que se encargan del montaje de los emplazamientos y todos los equipos que contiene, además de realizar el mantenimiento a cada emplazamiento o de contratar alguna empresa (Empresa_Contratada) que se encargue de ello. o. Empresa_Contratada. Son las empresas contratadas para realizar el mantenimiento a los emplazamientos, cabe destacar que dicho mantenimiento también puede ser realizado por una empresa eléctrica. Prom_Prec Promedio de la precipitación proveniente del sensor de precipitaciones. Max_Prec Máxima de la precipitación proveniente del sensor de precipitaciones. Min_Prec Mínima de la precipitación proveniente del sensor de precipitaciones. Desv_Prec Desviación estándar de la precipitación proveniente del sensor de precipitaciones. Empresa_Eléctrica Id Identificador de la empresa eléctrica. Nombre Nombre de la empresa eléctrica. Dirección Dirección fiscal de la empresa eléctrica. RIF Registro de información fiscal (RIF). Teléfono Teléfono de la empresa eléctrica. Tipo Tipo de empresa (pública o privada). Empresa_Contratada Id Identificador de las empresas contratada para realizar un mantenimiento. Nombre Nombre de la empresa contratada. Dirección Dirección fiscal de la empresa contratada. RIF Registro de información fiscal (RIF). Teléfono Teléfono de la empresa contratada. Tipo Tipo de empresa (pública o privada). 57 p. Usuario Esta entidad se refiere a los usuarios del sistema y los datos asociados a este. q. Datos_Personales Esta entidad representa los datos adicionales del usuario Iteración 2 Durante esta iteración se realizaron las funcionalidades básicas que debe ser provista por una aplicación Web, en donde los usuarios que interactúan con el sistema tienen la necesidad de autenticarse para poder acceder a ciertas acciones que requieren tener algún tipo de privilegios adicionales dentro de este. Entre las funcionalidades desarrolladas se destacan el registro de usuario, iniciar/finalizar sesión, recuperar contraseña y activar-desactivar usuarios. En la figura 3.4 muestra el caso de autenticación a un nivel mayor de detalle. Usuario id Identificador único del registro. clave Clave de usuario para ingresar al sistema. rol Rol dentro del sistema. email Correo electrónico. Datos_Personales Id Identificador único del registro. Nombre Nombre del usuario. Apellido Apellido del usuario. teléfono Teléfono del usuario. Dirección Dirección de domicilio del usuario. 58 Refinamiento de funcionalidades Figura 3.4: Refinamiento de funcionalidad Autenticarse. Descripción de la interfaz Para desarrollar la interfaz se utilizan los patrones de interacción: autenticarse, registrarse y captura de datos para el módulo del perfil de usuario. A continuación se muestran las diferentes interfaces que se generaron para esta primera iteración. Figura 3.5: Modelo de interfaz autenticarse. 59 Al ingresar a la aplicación se le permitirá seleccionar algunas opciones generales en el menú (Históricos, Campaña y otros.), así como también se podrá registrar usuarios en la aplicación, visualizar un listado de usuarios registrados e incluso modificar la información de ser necesario, luego los usuarios podrán autenticarse con un correo electrónico y una clave. Figura 3.6: Modelo de interfaz registrarse. Iteración 3 Durante esta iteración se llevo a cabo el módulo de administración de las instituciones y/o empresas, los emplazamientos y los sensores existentes asociados a cada uno de los emplazamientos. 60 Refinamiento de las funcionalidades Figura 3.7: Refinamiento de funcionalidad Administrar. Descripción del refinamiento Nombre Descripción Listar Existentes El usuario administrador del sitio podrá visualizar el listado de los registros existentes de cada una de las categorías mencionadas (Emplazamiento, Instituciones o empresas, sensores). Ver Información El usuario administrador visualiza la información de un elemento perteneciente a una categoría en particular. Editar Información El usuario administrador se le permite modificar los datos existentes de algún elemento en particular Eliminar Registro El usuario administrador puede eliminar un elemento existente de cualquiera de las categorías. Tabla3. : Refinamiento del requerimiento funcional. Descripción de la interfaz Se utilizan los patrones de interacción descritos una iteración previa. • Captura de datos: utilizado al momento de crear uno de los elementos mencionados • Seleccionar opción de una lista: para modificar o eliminar uno de los elementos. A continuación se presentan las diferentes interfaces generadas en esta iteración: 61 Figura 3.8: Modelo de Interfaz Administrar Elemento. Figura 3.9: Modelo de Interfaz agregar y/o eliminar elemento. 62 Iteración 4 Fueron desarrollados los módulos correspondientes a la administración de los mapas, así como la recopilación y ordenamiento de la información que se muestra sobre la campaña de medición, y por último el componente encargado de cargar el archivo de datos en las diferentes tablas de almacenamiento de nuestra aplicación. Uno de los componentes más importantes de nuestra aplicación es el que se encarga de la lectura y almacenamiento del archivo generado por el datalogger, en dicho archivo se encuentra el conjunto de datos de las mediciones generadas por los diferentes equipos (veleta, anemómetro, termómetro y otros.) instalados en la torre. Dichos datos son almacenados por el datalogger en archivos de texto en un determinado formato, los datos de un archivo no se repiten, es decir cada archivo contiene mediciones únicas por cada intervalo de tiempo. El formato de cada archivo es el siguiente: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 fecha Hora Intervalo_de_medición Versión serial_del_datalogger P ro m V e l 1 M a x v e l 1 M in ve l 1 D e sv v e l 1 P ro m V e l 2 M a x v e l 2 M in ve l 2 D e sv v e l 2 P ro m V e l 3 M a x v e l 3 M in ve l 3 D e sv v e l 3 p ro m D ir 1 M a x d ir 1 M in d ir 1 D e sv d ir 1 p ro m D ir 2 M a x d ir 2 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 M in d ir 2 D e sv d ir 2 p ro m h u m M a x h u m M in h u m D e sv h u m p ro m te m p M a x te m p M in te m p D e sv te m p p ro m ra d ia M a x ra d ia M in ra d ia D e sv ra d ia p ro m p re c M a x p re c M in p re c D e sv p re c Adicionalmente, durante esta iteración se procedió a la recopilación y ordenamiento de la información acerca de la campaña de medición eólica en Venezuela. Dicha información es mostrada en distintas páginas a lo largo de la aplicación a los usuarios que desean saber más acerca de la misma. Para poder llevar a cabo el control y ubicación de los emplazamientos, era necesario poder incluir una foto del sitio o de un mapa que indique la ubicación de éste, adjunto al registro del emplazamiento, para ello se creó el modulo de administración de mapas. 63 Descripción de la Interfaz Se instancian el patrón de interacción: Cargar Archivo. A continuación se presentan las diferentes interfaces generadas en esta iteración: Figura 3.9: Modelo de Interfaz cargar archivos de datos. Figura 3.9: Modelo de Interfaz visualizar datos de la campaña. 64 Figura 3.9: Modelo de Interfaz visualizar mapas. Iteración 5 Finalmente, se presenta la última iteración de la aplicación desarrollada, donde se realizaron los módulos de consulta y descarga de datos y generación de gráficas de resultados. El módulo de consulta de datos y generación de gráficas tiene como objetivo principal, proporcionarles a los usuarios de la aplicación la posibilidad de poder elegir el periodo de tiempo en el cual se generaron los datos, la ubicación en la cual se encuentra instalada la torre de medición y el tipo de grafica que se desea generar. Luego el sistema muestra una vista con los datos y las graficas consultadas. Para llevar a cabo el módulo de generación de gráficas, fue necesario añadir una librería que sirve para crear imágenes con todo tipo de gráficas, dinámicamente desde páginas PHP. Luego, el módulo de descarga de datos, el cual provee a los usuarios la posibilidad de descargar los datos (ya sean los utilizados para generar las graficas o los datos crudos) en un archivo de Excel o texto, para uso profesional. 65 Descripción de la interfaz Se instancian los patrones de interacción mencionados en la iteración 0: • Captura de datos: al momento de seleccionar el periodo y los tipos de graficas que se desean visualizar. • Descarga de archivos: al momento que el usuario desee almacenar los datos en un dispositivo, para uso profesional. Figura 3.9: Modelo de interfaz consultar datos eólicos, primer paso (selección del emplazamiento). Figura 3.9: Modelo de interfaz consultar datos eólicos, segundo paso (selección del periodo temporal). 66 Figura 3.9: Modelo de interfaz visualización de datos consultados. Figura 3.9: Modelo de Interfaz Visualización de graficas de datos. 67 Liberación del Producto En esta sección se presenta una descripción detallada de cómo se llevó a cabo esta última etapa que caracteriza la realización de un software. Se exponen los pasos realizados para montar la aplicación final en producción. Así como también las diferentes pruebas efectuadas a la aplicación. Producto final Una vez que se ha concluido el desarrollo de la aplicación, se procede a realizar la liberación del producto, este proceso se tomó un aproximado de una semana. Para asegurar que efectivamente la aplicación esta en correcto funcionamiento fue necesario efectuar una serie de pasos, los cuales son presentados a continuación • Instalación en el servidor de la base de datos PostgreSQL 8.4 y cargar el script de la aplicación en la base de datos. • Instalación en el servidor de PHP 5.2 o superior. • Carga de los archivos de la aplicación en la carpeta web del servidor. Paquete de Instalación Para lograr desplegar la aplicación en cualquier servidor es necesario realizar una serie de instalaciones de los programas necesarios para su correcto funcionamiento, los cuales son presentados a continuación: • PHP 5.2 o superior el cual puede ser descargado de forma gratuita desde la página oficial http://php.net/. • Sistema manejador de base de datos PostgreSQL 8.4 la cual se encuentra en la página http://www.postgresql.org • Servidor web Apache, se puede encontrar en la siguiente dirección, http://apache.org/. • Cargar el script de la base de datos de la aplicación. 68 Pruebas de la aplicación El proceso de pruebas del software tiene como objetivo principal verificar la calidad del producto final. Durante el desarrollo de la aplicación se llevaron a cabo diferentes pruebas realizadas por el propio desarrollador, las cuales permitieron determinar el correcto funcionamiento del software elaborado. Estas pruebas fueron divididas según el escenario actual y el rol que desempeña en ese instante de tiempo, un usuario de la aplicación. A continuación, la descripción de las pruebas con sus casos validos e inválidos. Cuando se presenten casos inválidos, la interfaz despliega automáticamente un mensaje de error, en caso contrario se realiza la acción deseada exitosamente. Escenario Registro de Usuario Descripción: el registro de usuario se presenta al iniciar la aplicación, permite a los usuarios que no se encuentran aún registrados, la posibilidad de registrarse para poder comenzar a utilizar las funcionalidades que esta brinda. Usuario: usuario no registrado en la aplicación. Escenario Casos Válidos Casos Inválidos Registro de usuarios Introdujo todos los campos requeridos correctamente − El email ingresado no cumpla con las características de una dirección de correo electrónico válido. − Dejo algún campo vacio. − Introdujo de manera errónea el código de validación. Escenario Iniciar Sesión Descripción: permite a un usuario registrado en el sistema poder autenticarse. Usuario: usuarios registrados en la aplicación Escenario Casos Validos Casos Inválidos Iniciar Sesión Ingresa el nombre de usuario y la contraseña correctamente − No ingresó el nombre de usuario. − No ingreso la contraseña. − El nombre de usuario no se 69 encuentra registrado en la aplicación. − Ingreso una contraseña inválida. Figura 3.10: Modelo de Interfaz de mensaje de error al autenticarse. Escenario Cargar Archivo de datos Descripción: permite a los usuarios registrados, la carga de archivos de datos eólicos en la aplicación. 70 Usuarios: usuario registrado en la aplicación. Escenario Casos Válidos Casos Inválidos Carga de archivo de datos El usuario provee la ruta de un archivo válido que no ha sido cargado en la aplicación − No provee una ruta válida de archivo. − El archivo ya ha sido cargado en la aplicación. − El archivo tiene un formato inválido. Figura 3.11: Modelo de Interfaz Visualización de error al cargar archivo existente. Escenario Consultar Datos Eólicos Descripción: permite a los usuarios consultar los datos eólicos generados en un periodo de tiempo específico. Usuarios: usuarios registrados en la aplicación. 71 Escenario Casos Válidos Casos Inválidos Consulta de datos eólicos − El usuario selecciona un periodo de tiempo, una ubicación válida y los tipos de datos a consultar. − El usuario no seleccionó un periodo de tiempo a consultar. − El usuario no seleccionó una locación donde se encuentra. − El usuario no seleccionó ningún tipo de dato a consultar. 72 CONCLUSIONES Durante el proceso de construcción de la aplicación se realizó una conceptualización, diseño y desarrollo del sistema. La solución que ha sido planteada para resolver el problema identificado en la fase de análisis, consistió en el desarrollo de una aplicación Web con una arquitectura Modelo Vista Controlador. Para la generación de el diseño de la base de datos seguimos un Modelo Conceptual de BD Relacionales (Conception des bases de donnees Relationnelles Jacky Akoka et isabelle Comyn- Wattiau Vuibert, Paris 2001, ISBN 2-7117-8678-i) que plantea diferentes métodologias entre ellas se encuentra MERISE, el cual plantea una serie de pasos a seguir, los cuales fueron de gran utilidad para obtener como producto un diseño conceptual bien definido. En lo que respecta a la fase de desarrollo, se utilizaron elementos de tecnología como lo es el AJAX para mayor rapidez de respuesta, lo cual favorece la usabilidad del sistema, así como el uso de hojas de estilos de forma de estandarizar la presentación de las interfaces del sistema. Por otro lado, en lo que concierne al proceso de desarrollo del proyecto, el uso de una metodología de desarrollo ágil basado en modelos, resultó ser una buena estrategia para reducir los riesgos en las etapas tempranas del proyecto y la obtención de resultados observables de manera continua. Con la aplicación desarrollada se logra agilizar el proceso de análisis y generación de graficas (histogramas y rosa de los vientos) con los datos obtenidos por las torres eólicas, permitiéndole a los investigadores de la institución del Estado Venezolano (MENPET), dedicarle mayor tiempo a el análisis detallado de las graficas obtenidas, así como también poder visualizar los datos de una manera más fácil y cómoda. 73 REFERENCIAS BIBLIOGRÁFICAS Asociación Danesa de la Industria Eólica (2003). [Sitio Web en línea]. Disponible: http://www.windpower.org/es/tour/wres/shear.htm. [Consulta: 2009, Abril]. Arias, M. (2001). Geografía aplicada. México: Venesa. Capel, R. (2002). Elementos de la geografía. Bogotá, Colombia: Argos. González, F., Terán, R., Méndez, J., Hernández, A. y Guillén F. (2006, Octubre 26-28). Evaluación del Recurso Eólico en Venezuela: Parte I. I Congreso Petrolero Energético ASME-UNEFA, Puerto Cabello, Venezuela Posso, F. (2002). Energía y ambiente: pasado, presente y futuro, parte dos: sistema energético basado en energías alternativas. En Geoenseñanza, vol 7, pp. 54-73. Táchira, Venezuela: Universidad de Los Andes. Párraga, M. (2005ª, Octubre 30). Energía alternativa en camino. El Universal en línea. Disponible: http://www.eluniversal.com/2005/10/30/eco_art_30201A.shtml. [Consulta: 2009, Abril]. Párraga, M. (2005b, Octubre 30).Vientos de Paraguaná y Los Roques propician proyecto eólico. El Universal en línea. Disponible: http://www.eluniversal.com/2005/10/30/ eco_art_30201D. shtml [Consulta: 2009, Abril]. Romay, L. (s/f). Potencial eólico de América Latina. Disponible: http://www.petroleoyv.com/ website/uploads/potencialeolico.pdf. [Consulta: 2009, Marzo]. Yañez, S. (2000). Medición del viento para realizar un correcto pronóstico energético. En Ammont. Alemania. Programa de aplicación para el análisis y atlas eólico WAsP (2002). [Sitio Web en línea]. Disponible: http://www.wasp.dk/Products/Wasp.html. [Consulta: 2009, Mayo]. "Rosa de los vientos", Enciclopedia Microsoft® Encarta® Online 2009 http://mx.encarta.msn.com © 1997-2009 Microsoft Corporation. Reservados todos los derechos. "Histogramas", Wikipedia Enciclopedia online http://es.wikipedia.org/wiki/Histograma. Manifiesto Ágil (2002) http://www.agilemanifesto.org/iso/es/ [Consulta: 2010, Noviembre] Frez, J. y Frías-Camacho,V., 1998, Distribución de energía sísmica en la región fronteriza de ambas Californias. GEOS, Vol. 18, No. 3, p. 189-196. 74 Poppendieck M., Poppendieck T. “Lean Software Development: An Agile Toolkit for Software Development Managers”. Addison Wesley. 2003. Schwaber K., Beedle M., Martin R.C. (2001) Agile Software Development with SCRUM. Prentice Hall. Fisher, N. (1993). Statistical analysis of circular data. Cambridge Univ. Press, UK, 277 pp. Frez, J. y Frías Camacho V. (1998). Distribución de energía sísmica en la región fronteriza de ambas Californias. GEOS, Vol. 18, No. 3, p. 189-196. Nava, F. (1998). Histogramas repartidos para el análisis de muestras estadísticas escasas. GEOS, Vol. 18, No. 3, p. 174-179. HASTIE, T., TIBSHIRANI, R y FRIEDMAN, J. (2001)The Elements of Sta-tistical Learning. Springer. New York. RAMSAY, J. O. y SILVERMAN, B. W. (1997) Functional Data Analysis. Springer. New York. 75 ANEXOS Diagramas pertinentes Figura 3.4: Diseño lógico parte I 76 Figura 3.5: Diseño lógico parte IITESIS-JOHANAN-CARLOS-2011v91 1 UNIVERSIDAD CENTRAL DE VENEZUELA FACULTAD DE CIENCIAS ESCUELA DE COMPUTACIÓN UNA APLICACIÓN WEB PARA EL MANEJO DE DATOS DE MEDICIONES DE POTENCIAL DE ENERGÍA EÓLICA Trabajo Especial de Grado presentado ante la ilustre Universidad Central de Venezuela Por los Bachilleres: Carlos Cisneros A. C.I: 17146794 Johanán D. Penso H. C.I:13636683 Para optar al título de Licenciado en Computación Tutoras Profa. Joali Moreno Profa. Claudia León Caracas, septiembre de 2011 2 Tabla de Contenido Introducción ................................................................................................................................ 3 CAPITULO 1: MARCO CONCEPTUAL ................................................................................................ 6 Recurso Eólico ............................................................................................................................. 6 1.1 Viento ............................................................................................................................... 6 1.2 Fuerzas Coriolis ................................................................................................................ 6 1.3 Velocidad del Viento ........................................................................................................ 7 1.4 Dirección del Viento ......................................................................................................... 8 1.5 Potencia del Viento .......................................................................................................... 9 Representación de los Datos ....................................................................................................... 9 1.6 Rosa de los vientos ........................................................................................................... 9 1.7 Frecuencia del Viento ..................................................................................................... 10 Instrumentos para Medir el Viento ........................................................................................... 10 1.8 Anemómetro .................................................................................................................. 10 1.9 Veleta ............................................................................................................................. 11 Mediciones de la Velocidad del viento en la práctica ............................................................... 12 El Registrador de Datos (‘Data Logger’). ................................................................................... 12 Parque Eólico ............................................................................................................................. 13 Análisis de Datos Eólicos ........................................................................................................... 14 CAPITULO 2: MARCO METODOLÓGICO ........................................................................................ 15 2.1 Enfoque de Desarrollo Basado en Metodologías Ágiles (AM). ...................................... 15 Desarrollo Ágil Dirigido por Modelos (AMDD). ......................................................................... 18 1.2 Patrón de diseño MVC (Modelo Vista Controlador). ..................................................... 21 CAPITOLO 3: MARCO DE DESARROLLO ......................................................................................... 27 3.1 Análisis de la solución propuesta ................................................................................... 27 3.2 Iteración 0 (Levantamiento de la Información) ............................................................. 27 3.3 Iteración 1 (diseño de la base de datos) ........................................................................ 48 CONCLUSIONES ............................................................................................................................. 72 REFERENCIAS BIBLIOGRÁFICAS ..................................................................................................... 73 ANEXOS ......................................................................................................................................... 75 3 Introducción Actualmente en Venezuela se están diseñando proyectos para la producción de energía alternativa como la eólica. Con la finalidad de mejorar la prestación del servicio eléctrico, en respuesta al aumento de la demanda y el crecimiento poblacional que experimenta el país en las principales ciudades. Estos planes evidentemente reflejan la iniciativa de experimentar energías alternativas libres de contaminación y efectos perjudiciales al planeta. A la vez, son una clara intención de la búsqueda de medios que favorezcan el mejoramiento de la producción eléctrica en el país. Por consiguiente, es necesario desarrollar investigaciones que permitan el conocimiento del potencial eólico en diferentes regiones venezolanas, lo cual aportaría datos valiosos que puedan ser utilizados por las distintas instituciones estatales y municipales, en la materialización de proyectos eólicos dirigidos a suplir en algunos casos la energía proveniente de combustibles fósiles. Para llevar a cabo este tipo de investigaciones, es necesaria la instalación de torres para medir el potencial eólico en determinadas zonas del territorio nacional. En dichas torres son instalados los equipos utilizados para la medición de determinados factores climatológicos y las mediciones obtenidas, son recopiladas por un equipo especializado ubicado en cada torre, para luego ser transmitidas a un computador, donde son depurados para su estudio, y poder así determinar el potencial eólico de una zona en particular. Para facilitar el almacenamiento y manipulación de la información asociada, tanto a los datos recopilados en las torres eólicas, como a los datos de los entes y personas involucrados en la campaña de medición, se propone desarrollar un sistema web que facilite el almacenamiento, consulta y manejo de la información asociada a dicha campaña. Este documento expone cada uno de los componentes realizados en las distintas etapas del desarrollo de software. En el primer capítulo, llamado marco conceptual, se muestra una breve definición de cada uno de los dispositivos y otros conceptos importantes que nos ayude a entender el contexto. Luego, en el siguiente capítulo, se explica paso a paso la metodología utilizada durante el proceso de desarrollo del sistema web, en nuestro caso aplicamos metodologías ágiles. En el tercer capítulo se explica paso a paso cada una de las actividades realizadas y se muestran los artefactos de software generados durante las mismas. Finalmente, se exponen las conclusiones a las que llegamos a lo largo del desarrollo de este trabajo. 4 Problema La cantidad de data generada por los diferentes dispositivos que se encuentran instalados en cada una de las torres de medición eólica, debe ser procesada y depurada para luego ser almacenada y preservada. Dicha cantidad de data crece diariamente y no se cuenta con un sistema que permita automatizar parte del proceso de análisis de los datos y la distribución de los mismos entre los entes involucrados en la campaña de medición eólica. Objetivo General Diseñar e implementar una base de datos que permita almacenar los datos de medición del potencial eólico en Venezuela, conjuntamente con el desarrollo de una aplicación web para mostrar gráficos y estadísticas de los resultados de dichas mediciones. Objetivos Específicos • Identificar las características de los instrumentos para la medición del potencial eólico. • Analizar los elementos y datos necesarios para la medición de potencial eólico en tierra. • Implementar la base de datos para almacenar la información de medición del potencial eólico en Venezuela. • Diseñar la interfaz de la aplicación web. • Desarrollar la aplicación web que permite el manejo y consulta de datos, y la visualización de los resultados de manera gráfica. Justificación de la Aplicación Web a Desarrollar El desarrollo de la aplicación web, permitirá a los usuarios poder consultar y gestionar los datos de manera remota, y en el momento que lo deseen. Al tratarse de una aplicación web el espacio y tiempo ya no serán críticos, dado que los usuarios pueden acceder a ésta, desde cualquier parte del planeta, en cualquier momento que desee y donde se cuente con un dispositivo con conexión a Internet. Adicionalmente, la aplicación le permite a los usuarios encargados de recopilar los datos, almacenarlos en la base de datos de la aplicación con tan solo un clic. Para luego consultar las graficas generadas en los diferentes periodos de tiempo. Esta aplicación, cuenta con un módulo que le permite a las instituciones llevar el registro de las empresas contratadas, estas últimas son las encargadas de hacer el mantenimiento de los equipos en los diferentes emplazamientos 5 Alcance El alcance de este proyecto contempla la elaboración de un sistema web, orientado a las empresas e instituciones involucradas en la campaña de medición del recurso eólico en Venezuela. Este sistema servirá de soporte para el manejo, almacenamiento y procesamiento de la información, para ello consta de una base de datos consistente que permite el almacenamiento de dicha información además de diferentes secciones ó módulos. Un módulo para administrar la información que provee el servicio para el registro, edición y eliminación de las entidades u objetos involucrados en la campaña, como lo son: instituciones, contratistas, contratos, usuarios, emplazamientos (incluye mapas y fotos), datalogger y por último los sensores. Otro módulo de gestión de datos, que permite manipular y consultar los datos generados en cada una de las torres, dicho modulo permite al usuario cargar los datos desde un archivo de texto, bajo un formato especifico, donde luego podrán ser consultados en forma de texto o de forma grafica según sea el deseo de cada usuario. El sistema proveerá un mecanismo de autenticación a los usuarios, para la protección de la información, donde es posible asignar permisos a dichos usuarios según el rol que desempeñan, desactivarlos en cualquier ocasión y eliminarlo de ser necesario. Además provee algún mecanismo para la recuperar la clave de acceso al sistema en caso de pérdida. El sistema contará con una sección donde se muestra a los usuarios toda la información recopilada, respecto al tema de la campaña de medición del potencial eólico en Venezuela. 6 CAPITULO 1: MARCO CONCEPTUAL Para comprender la importancia y alcance de la temática relacionada con el cálculo del potencial eólico, es necesario revisar algunos conceptos, nociones y teorías que explican el fenómeno en estudio. De esta manera, a continuación se presentan un conjunto de definiciones y apreciaciones sobre distintos elementos de la energía eólica. Recurso Eólico 1.1 Viento Según Capel (2002) el viento es el movimiento del aire en la atmósfera, especialmente, en la troposfera, producido por causas naturales. Se trata de un fenómeno meteorológico. La causa de los vientos está en los movimientos de rotación y de traslación terrestres que dan origen, a su vez, a diferencias considerables en la radiación solar o (insolación), principalmente de onda larga (infrarroja o térmica), que es absorbida de manera indirecta por la atmósfera, de acuerdo con la propiedad diatérmica del aire, según la cual la radiación solar sólo calienta indirectamente a la atmósfera ya que los rayos solares pueden atravesar la atmósfera sin calentarla. El autor también expone que los rayos de calor (infrarrojos) reflejados por la superficie terrestre y acuática de la Tierra logran calentar el aire. La insolación es casi la única fuente de calor que puede dar origen al movimiento del aire, es decir, a los vientos. A su vez, el desigual calentamiento del aire da origen a las diferencias de presión y esas diferencias de presión dan origen a los vientos. 1.2 Fuerzas Coriolis De acuerdo con el glosario de www.astronomia.com son fuerzas aparentes, responsables de la desviación de la trayectoria de un cuerpo que se mueve sobre una superficie que rota. En la Tierra, por ejemplo, la trayectoria de un objeto, como un hipotético proyectil disparado desde el Ecuador hacia el polo Norte, en lugar de ir en línea recta, se desvía hacia el Este. Obviamente, si la trayectoria va desde el Ecuador hacia el polo Sur, la fuerza de Coriolis impulsa al cuerpo en dirección Oeste. 7 Figura 1.1: Efecto de Coriolis. Fuente: es.wikipedia.org/wiki/Efecto_Coriolis El ejemplo más nombrado de manifestación del efecto Coriolis se da cuando masas de aire o de agua se desplazan siguiendo meridianos terrestres, y su trayectoria y velocidad se ven modificadas por él. Los vientos o corrientes oceánicas que se desplazan siguiendo un meridiano se desvían acelerando en la dirección de giro (este) si van hacia los polos o al contrario (oeste) si van hacia el ecuador (en el hemisferio norte). La manifestación de estas desviaciones produce, que las borrascas giren en el hemisferio sur en el sentido de las agujas del reloj y, en el hemisferio norte, en sentido contrario. Su nombre se debe al físico francés Gaspard Gustave de Coriolis (1792-1843) que fue el primero en estudiarlas. 1.3 Velocidad del Viento Desde el año 1805, la velocidad del viento, y por consiguiente su fuerza, la determinaban los marinos por la llamada escala de Beaufort, ideada por ese almirante inglés, el cual estableció 12 grados de fuerza del viento, basados en las maniobras que, según el viento que soplaba, habían de hacerse en el aparejo de los navíos a vela. Actualmente, en el mar, se caracterizan los grados por la altura de las olas, y en tierra, por los efectos en los árboles, edificios, entre otros. Las velocidades del viento son fuertemente influenciadas por la rugosidad de la superficie del área circundante, por los obstáculos cercanos (como árboles, faros u otras construcciones) y por los alrededores del terreno local. La velocidad del viento en la Escala de Beaufort puede expresarse por la fórmula: v = 0,837 B 3/2 m/s Donde v es velocidad del viento, y B es el número en la escala de Beaufort. Así mismo, para calcular la v en km/h: B ^ 1,5 * 3 (elevar B a la potencia 1,5 y multiplicar por 3). Para calcular B (para cierto valor de v en km/h): multiplicar v por 3 y calcular la raíz 1,5. Actualmente, se utiliza la escala anemométrica de Beaufort la cual se extendió en 1944, donde se agregaron las Fuerzas 13 a 17. Sin embargo, las Fuerzas 13 a 17 sólo se aplican en casos especiales, como en ciclones tropicales. La escala extendida se usa en Taiwán y en China, que frecuentemente son afectados por tifones. 8 A. Unidades de medición m = metro = 3,28 pies. s = segundo. h = hora. N = Newton. W = vatio. CV= caballo de vapor. J = julio. cal = caloría. tep = tonelada equivalente de petróleo. Hz= hercio (ciclos por segundo). B. Conversión de unidades de velocidad 1 m/s = 3,6 km/h = 2,237 millas/h = 1,944 nudos. 1 nudo = 1 milla náutica/h = 0,5144 m/s = 1,852 km/h = 1,125 millas/h 1.4 Dirección del Viento Se llama dirección del viento el punto del horizonte de donde viene o sopla. Para distinguir uno de otro se les aplica el nombre de los principales rumbos de la brújula, según la conocida rosa de los vientos. Los cuatro puntos principales corresponden a los cardinales: Norte (N), Sur (S), Este (E) y Oeste (W). Se consideran hasta 32 entre estos y los intermedios, aunque los primordiales y más usados son los mostrados en la Figura 1.2.a con su equivalencia en grados del azimuth en la Figura 1.2.b : Figura 1.2.a: Dirección del viento con respecto a los cardinales. Fuente: www.mailxmail.com/curso-fenomenos-meteorologicos/direccion-velocidad-viento 9 Figura 1.2.b: Dirección del viento con respecto a los cardinales. Fuente: www.mailxmail.com/curso-fenomenos-meteorologicos/direccion-velocidad-viento 1.5 Potencia del Viento Arias (2001) indica que la velocidad del viento es muy importante para la cantidad de energía que un aerogenerador puede transformar en electricidad: la cantidad de energía que posee el viento varía con el cubo (la tercera potencia) de la velocidad media del viento; p.ej., si la velocidad del viento se duplica la cantidad de energía que contenga será 2 3 = 2 x 2 x 2 = ocho veces mayor. Representación de los Datos 1.6 Rosa de los vientos De acuerdo con Capel (2002) para mostrar la información sobre las distribuciones de velocidades del viento y la frecuencia de variación de las direcciones del viento, puede dibujarse la rosa de los vientos basándose en observaciones meteorológicas de las velocidades y direcciones del viento. Una rosa de los vientos proporciona información sobre las velocidades relativas del viento en diferentes direcciones, es decir, cada uno de los tres grupos de datos ha sido multiplicado por un número que asegura que la cuña más larga del grupo mide exactamente lo mismo que el radio del círculo más exterior del diagrama mostrado en la Figura 1.3. 10 Figura 1.3: Rosa de los vientos Fuente: www.windpower.org 1.7 Frecuencia del Viento Con la información de velocidad de Viento Promedio en un tiempo determinado, se realiza la construcción de una histograma de velocidades (o también llamado distribución de frecuencias de velocidad), esto se logra al dividir el rango total de velocidades de viento en pequeños intervalos del mismo ancho (generalmente 1 m/s) y se determina el número de horas que la velocidad de viento cae dentro de cada intervalo. Figura 1.4: Histograma de velocidades. Instrumentos para Medir el Viento 1.8 Anemómetro Según Arias (2001) el anemómetro es un aparato meteorológico que se usa para la predicción del tiempo y, específicamente, para medir la velocidad del viento. 11 Figura 1.5: Anemómetro tipo taza semiesférica inventado. Fuente: en.wikipedia.org/wiki/Anemometer Según Yáñez (2000) existe una gran variedad de anemómetros. El objetivo es medir la componente horizontal de la corriente de viento, no alterada, porque ésta es la única relevante para la producción de energía. 1.9 Veleta Una veleta es un dispositivo giratorio que consta de una placa plana vertical que gira libremente, un señalador que indica la dirección del viento y una cruz horizontal que indica los puntos cardinales. Se ubica generalmente en lugares elevados y su diseño puede ser muy variado (figuras de animales, antropomorfas, entre otros). En la figura 1.6 se presentan diferentes tipos de veletas. Figura 1.6: Tipos de veletas Fuente: en.wikipedia.org/wiki/Weather_vane 12 Mediciones de la Velocidad del viento en la práctica Colocando el anemómetro en la parte superior del mástil se minimizan las perturbaciones de las corrientes de aire creadas por el propio mástil. Si el anemómetro está situado en la parte lateral del mástil es fundamental enfocarlos en la dirección de viento dominante para minimizar el abrigo del viento de la torre. Figura 1.7: Clasificación de los vientos según la escala de velocidades. Fuente: www.windpower.org El Registrador de Datos (‘Data Logger’). Las mediciones se registran en los denominados registradores de datos (data logger, en inglés), que son los encargados de almacenar los datos de velocidad captados por anemómetros de copas, y de dirección del viento, utilizando una veleta con potenciómetro; además, se registran datos de temperatura, presión, humedad relativa y radiación en las estaciones que tienen fines meteorológicos. Los datos de velocidad y dirección registrados cada segundo se promedian y almacenan cada diez minutos en una memoria que no necesita energía para almacenar, lo que garantiza que no se pierdan los datos ante una falta de energía. Existen estaciones, que cuentan con suministro energético autónomo mediante un panel solar fotovoltaico, las cuales tienen la posibilidad de trasmitir los datos usando los canales de datos de la telefonía celular en lugares con cobertura, lo que permite una supervisión remota de las condiciones de la estación y obtener las mediciones sin intervenir directamente en el equipo. 13 Figura 1.7: Lectores de datos instalados en las estaciones meteorológicas. Fuente: www.windpower.org Parque Eólico Es una agrupación de aerogeneradores que se utilizan generalmente para la producción de energía eléctrica. El número de aerogeneradores que componen un parque es muy variable, y depende fundamentalmente de la superficie disponible y de las características del viento en el emplazamiento. Antes de montar un parque eólico se estudia el viento en el emplazamiento elegido durante un tiempo que suele ser superior a un año. Para ello se instalan veletas y anemómetros. Con los datos recogidos se traza una rosa de los vientos que indica las direcciones predominantes del viento y su velocidad. Los parques eólicos proporcionan diferente cantidad de energía dependiendo de las diferencias sobre diseño, situación de las turbinas, y por el hecho de que los antiguos diseños de turbinas eran menos eficientes y capaces de adaptarse a los cambios de dirección y velocidad del viento. Como norma general, la separación entre aerogeneradores en un parque eólico es de 5 a 9 diámetros de rotor en la dirección de los vientos dominantes, y de 3 a 5 diámetros de rotor en la dirección perpendicular a los vientos dominantes. Figura 1.8: Distribución de aerogeneradores en un parque eólico. Fuente: www.windpower.org 14 Análisis de Datos Eólicos La red de estaciones climáticas hacen observaciones sinópticas a intervalos de tiempos específicos y se deberá dar una representación satisfactoria de las características climáticas para cualquier tipo de terreno. A partir de las llamadas series cronológicas de datos climatológicos se pueden obtener resúmenes estadísticos de los datos. La selección de datos se puede resumir como sigue: • Período de tiempo suficiente. Al menos un año, pero preferiblemente varios años. • Anemómetro bien expuesto, lejos de edificios y otros obstáculos. Este requisito es a menudo el más difícil de satisfacer. • La descripción precisa de las condiciones y los datos anemométricos de cada 10 minutos o por hora, por ejemplo, los promedios recogidos cada 3 horas a lo largo del día de 24 horas. Es preferible el uso de datos en bruto como primera fuente de datos, ya que esto permite la detección de errores en los datos que puede ser indetectable en los datos ya resumidos. Los datos en brutos deben ser procesados por un programa especializado Las características de los datos son importantes para el tratamiento de una serie temporal de velocidad y dirección del viento que pueden ser convenientemente recogidos por WAsP rellenando un formulario de descripción de datos. 15 CAPITULO 2: MARCO METODOLÓGICO En el ámbito de la ingeniería de software, existen mecanismos para diseñar e implementar las soluciones tecnológicas de una manera rápida y eficaz, en la que los usuarios y clientes se encuentren satisfechos con el producto y que les genere valor a su trabajo. En este capítulo, se presenta la estrategia de desarrollo de software seleccionada para la implementación de la solución planteada. Específicamente, el desarrollo utilizando metodologías ágiles, también se mencionan las diferentes tecnologías a utilizar en la implementación, destacando el uso de software libre. Por esta razón se escogió como lenguaje de programación PHP, acompañado de la librería JQuery para la interfaz y JpGraph para la generación de gráficas. Por otro lado, para la gestión de los datos se usará PostgreSQL como manejador de base de datos. 2.1 Enfoque de Desarrollo Basado en Metodologías Ágiles (AM). Historia En febrero de 2001, tras una reunión celebrada en Utah-EEUU, nace el término ágil aplicado al desarrollo de software. En esta reunión participan un grupo de 17 expertos de la industria del software, incluyendo algunos de los creadores o impulsores de metodologías de software. Su objetivo fue esbozar los valores y principios que deberían permitir a los equipos desarrollar software rápidamente y respondiendo a los cambios que puedan surgir a lo largo del proyecto. Se pretendía ofrecer una alternativa a los procesos de desarrollo de software tradicionales, caracterizados por ser rígidos y dirigidos por la documentación que se genera en cada una de las actividades desarrolladas. Tras esta reunión se creó “The Agile Alliance”, una organización sin fines de lucro, dedicada a promover los conceptos relacionados con el desarrollo ágil de software y ayudar a las organizaciones para que adopten dichos conceptos. El punto de partida fue el Manifiesto Ágil, un documento que resume la filosofía. Según el Manifiesto Ágil (2001) se valora: • Al individuo y las interacciones del equipo de desarrollo sobre el proceso y las herramientas. El equipo integrante es el principal factor de éxito de un proyecto software. Es más importante construir un buen equipo que construir el entorno. • Desarrollar software que funciona más que conseguir una buena documentación. La regla a seguir es no producir documentos a menos que sean necesarios de forma inmediata para tomar una decisión importante. Estos documentos deben ser cortos y 16 centrarse en lo fundamental. • La colaboración con el cliente más que la negociación de un contrato. Se propone que exista una interacción constante entre el cliente y el equipo de desarrollo. Esta colaboración entre ambos será la que marque la marcha del proyecto y asegure su éxito. • Responder a los cambios más que seguir estrictamente un plan. La habilidad de responder a los cambios que puedan surgir a los largo del proyecto (cambios en los requisitos, en la tecnología, en el equipo, etc.) determina también el éxito o fracaso del mismo. Por lo tanto, la planificación no debe ser estricta sino flexible y abierta. Los valores anteriores inspiran los doce principios del manifiesto. Son características que diferencian un proceso ágil de uno tradicional. Los dos primeros principios son generales y resumen gran parte del espíritu ágil. El resto tienen que ver con el proceso a seguir y con el equipo de desarrollo, en cuanto metas a seguir y organización del mismo. Modelado Ágil. Según Scott W. Ambler (2002) el Modelado Ágil (AM) es una metodología basada en la práctica para modelado efectivo de sistemas de software. La metodología AM es una colección de prácticas, guiadas por principios y valores que pueden ser aplicados por profesionales de software en el día a día. AM no es un proceso prescriptivo, ni define procedimientos detallados de cómo crear un tipo de modelo dado. En lugar de eso, sugiere prácticas para ser un modelador efectivo. Esta metodología tiene varios principios que la diferencian sobre las metodologías tradicionales, reflejados en un manifiesto que enuncia cuatro valores que son: • Los individuos y sus relaciones sobre las personas y los procesos. Con este principio se hace manifiesto el énfasis de esta metodología sobre las personas, ya que de ellas es que depende el éxito o el fracaso de un proyecto, es a quienes se debe motivar. • Un Software funcional, que opere correctamente sobre la documentación más completa. Con este principio se trata de decir que lo más importante es que el software trabaje, cumpla con las necesidades de negocio, no hacer de la documentación un fin en sí mismo, ya que esta es solo para dar soporte, no es el objetivo primario del desarrollo, existen situaciones en donde incluso la documentación podría ser innecesaria, por ejemplo una pequeña aplicación emergente, que una vez pasada la emergencia , esta aplicación desaparece, el cargar de documentación de requerimientos, arquitectura, pruebas etc. Podría considerarse de sobra, sin embargo eso no quiere decir que no es necesaria la documentación, esta debe existir pero sólo la suficiente. • Colaboración del cliente sobre el contrato de negocio. Se trata de colaborar con el cliente el mayor tiempo no de luchar con él sobre un contracto minucioso, esto puede ser difícil ya que los clientes no están acostumbrados. Generalmente los clientes trabajan sobre un 17 contrato con el que puedan defenderse si las cosas van mal. • Ser capaz de responder a los cambios y no obsesionarse sobre el seguimiento de un plan. Es tener la capacidad de adaptación, no decir NO A LOS CAMBIOS, aceptar las sugerencias de los usuarios, sin por eso hacer un lado la planificación. Estos valores han dado lugar a doce principios que son: 1. La satisfacción del cliente. 2. Bienvenida a los cambios que puedan ocurrir. 3. Entregar regularmente software que trabaje. 4. Gente de negocios y desarrolladores trabajan diariamente en conjunto. 5. Construcción de proyectos alrededor de individuos motivados para esto. 6. Las comunicaciones cara a cara son las mejores. 7. Software que trabaje es la mejor medida del progreso. 8. Atención continua a la excelencia y al buen diseño. 9. Promover el desarrollo sostenible. 10. Simplicidad. 11. Las mejores arquitecturas, requerimientos, y diseños emergen de equipos auto- organizados. 12. Introspección, los equipos deben regularmente hacerse una revisión hacia sí mismos y sus procesos para intentar mejorar AM. Características de un desarrollo ágil. • Proceso iterativo e incremental. • Mitigación del riesgo mediante iteraciones fijas. • Mejora continua. • Calidad desde el primer día. • Priorización de requerimientos de acuerdo a su valor. • Equipos dedicados y auto-gestionados. • Colaboración continúa con el cliente. • Incorporar al cambio. • Prácticas de desarrollo modernas. Para llevar a cabo el desarrollo de la solución propuesta hemos escogido utilizar la versión ágil de MDD (siglas del ingles model driven development), que permiten minimizar los riesgos de desarrollo, ya que podemos dividir el proyecto en iteraciones cortas (3 a 4 semanas), donde al final de cada iteración se presenta una versión beta del producto y sin errores. Otra razón importante del uso de la metodología ágil, es que ayuda a la rápida certificación de las funcionalidades incorporadas en cada iteración. 18 Desarrollo Ágil Dirigido por Modelos (AMDD). Propuesto por Scott W. Amber (2002), con el AMDD en lugar de desarrollar modelos extensos antes de escribir la primera línea de código se crean modelos ágiles, los cuales son modelos más simples usados para analizar los requerimientos del sistema. AMDD es básicamente una estrategia crítica para ir escalando los procesos de desarrollo ágiles más allá de los proyectos de pequeña envergadura. Figura 2.a: AMDD a través del Modelado de Actividades del Ciclo de Vida del Proyecto (Amber, 2002). La figura 2.1 no corresponde los números de las figuras… representa el ciclo de vida según el modelado ágil para el desarrollo de un sistema, donde cada caja representa una actividad de desarrollo. La primera actividad, la cual representada por las cajas de color verde, está integrada por dos sub-actividades que son: el estudio de las necesidades iniciales y contemplar la arquitectura inicial, las mismas son llevadas a cabo durante la iteración 0 del desarrollo. Las actividades restantes como Modelar Iteración, Tormenta de Modelos y Desarrollo y Pruebas pueden ser llevadas a cabo en cualquier iteración, no hay restricciones para esto, incluyendo en la iteración 0. El tiempo indicado en cada caja representa la duración de una sesión promedio. La figura 2.b refleja como engranan las actividades de AMDD en las iteraciones del ciclo de vida del desarrollo ágil. Es otro modo de mostrar que en un proyecto ágil comienza con algún modelado inicial y que este modelaje sigue ocurriendo en cada una de las iteraciones. 19 Figura 2.b: AMDD a través del ciclo de Vida de desarrollo Ágil (Amber, 2002). En el modelado ágil generalmente durante la primera semana de desarrollo del proyecto se llevan a cabo las investigaciones y análisis necesarios para contemplar el alcance que tendrá el sistema; así como también la arquitectura inicial para su tratamiento. Para esto es indispensable obtener los requerimientos de alto nivel y modelar la arquitectura de lo requerido. El objetivo no es escribir especificaciones detalladas, que sean arriesgadas, sino explorar las necesidades y llegar a una estrategia global. Para proyectos cortos es recomendable hacer este trabajo en horas tempranas y para proyectos grandes que puedan requerir un año o más, se puede tomar la decisión de invertir al menos dos semanas en este esfuerzo. Se recomienda no invertir más tiempo del indicado, ya que se corre el riesgo de modelar algo que acarree demasiados problemas. Etapas que intervienen en el modelado ágil A continuación se explicará en detalle en qué consiste cada una de las etapas que intervienen en el modelado ágil. Contemplar las necesidades iniciales: Su objetivo es construir un entendimiento común, no para escribir documentación detallada. Un factor clave del éxito para lograr contemplar las necesidades iniciales, es utilizar técnicas de modelado que permitan la participación activa de los interesados. Para esta etapa es necesario un modelo que permita realizar el análisis de cómo los usuarios trabajan con el sistema, un modelo inicial del dominio en el que se identifiquen los requerimientos fundamentales de la entidad de negocio y las relaciones, un modelo inicial de interfaz que explore la interfaz de usuario y la usabilidad. Contemplar la arquitectura inicial: El objetivo es tratar de identificar una arquitectura que brinde grandes oportunidades para realizar el desarrollo de la aplicación. Esto es sumamente importante, ya que nos permite establecer la técnica más viable para llevar a cabo el desarrollo del proyecto y proporciona información suficiente para dividir el equipo de trabajo alrededor de la arquitectura. Por el lado de la arquitectura se suelen crear los diagramas de forma libre, aquellos que representen la infraestructura técnica, los modelos iniciales de dominio para 20 explorar las entidades de negocio principales y sus relaciones. En iteraciones posteriores los requerimientos iniciales y la arquitectura inicial deberá evolucionar a medida que van creciendo las definiciones de más partes, pero por los momentos lo importante es obtener el modelado de una arquitectura inicial que permita al grupo de desarrollo ponerse en marcha. Modelado de iteraciones: Al comienzo de la construcción de cada una de las iteraciones para el desarrollo del sistema, el equipo desarrollador deberá estimar y programar que se hará en cada iteración. Figura 2.c: Los Requerimientos Ágiles cambian la Gestión de los Proyectos (Amber, 2002). En la figura 2.c se puede observar los diferentes valores que puede tomar los requerimientos de trabajo en una iteración, el requerimiento de mayor importancia se encuentra en la cima de la pila de requerimientos. Para poder hacer esto con éxito es necesario calcular con exactitud el tiempo de dedicación para cada requerimiento, basándose en la rapidez de las iteraciones previas, cuanto trabajo se logro en ellas, calcular un tiempo estimado de procesamiento de requerimiento. Es importante destacar que para poder estimar el tiempo necesario para realizar un requerimiento se debe entender el trabajo necesario para ponerlo en ejecución, es aquí donde entra en juego el modelado. Tormenta de modelos: El equipo de trabajo se reúne en tiempos relativamente cortos, generalmente no exceden de los 30 minutos, con ayuda de una herramienta de trabajo por ejemplo una pizarra se modela en forma compartida, con el fin de identificar los problemas que se tendrán que resolver, algunos durante este tiempo son identificados y el equipo de trabajo procede a su resolución. 21 Desarrollo y pruebas: Durante el desarrollo es bastante común que el modelado de las ideas dure varios minutos y, a continuación se implemente el código de la aplicación esto puede tardar varias horas o incluso varios días, en esta etapa el equipo de trabajo consume el mayor tiempo. En el modelado ágil los equipos de trabajo tratan de realizar la modelación de sus ideas de la forma más clara y detallada posible, muchas veces esto se realiza junto al cliente para que posteriormente no hayan dificultades o mediante pruebas de desarrollo. Las pruebas conducidas al desarrollo originan pruebas para validar el código de la aplicación y las especificaciones del mismo. Las pruebas del cliente, también llamadas pruebas de aceptación, son realizadas con el fin de mejorar el diseño que se tiene y reforzar los requerimientos. 1.2 Patrón de diseño MVC (Modelo Vista Controlador). Modelo Vista Controlador (MVC) es un estilo de arquitectura de software que separa los datos de una aplicación, la interfaz de usuario, y la lógica de control en tres componentes distintos. El patrón MVC se ve frecuentemente en aplicaciones web, donde la vista es la página HTML y el código que provee de datos dinámicos a la página, el modelo consta de la capa de negocio y la capa de acceso a los datos, y el controlador es el responsable de recibir los eventos provenientes de la vista y obtener resultados provenientes del modelo. Figura 2.1: Patrón de diseño MVC. El Modelo: Incorpora los datos y las reglas de la aplicación. Gran parte del procesamiento de la aplicación tiene lugar en esta parte del patrón de diseño. El modelo también contiene todos los componentes y la base de datos. No se aplica ningún formato a los datos devueltos para la interfaz (o procesador principal) de la aplicación en esta parte del proceso. Los datos devueltos se pueden utilizar para distintas interfaces (o vistas). 22 La Vista: Es la fachada, la parte exterior de la aplicación (la interfaz con la que interactúa el usuario), y representa el contenido del modelo. La interfaz especifica la forma en que se presentan los datos del modelo, produce la vista que utilizará el usuario y permite al usuario acceder a los datos de la aplicación o manipularlos. Si cambia el modelo, la vista se actualiza para reflejar los cambios introduciendo o extrayendo datos (enviando o solicitando datos). Debemos tomar en cuenta las interfaces como parte de la vista del patrón de diseño. El patrón de diseño MVC admite la gestión de diversas vistas. El Controlador: Gestiona los requisitos del modelo y de la vista para procesar y mostrar datos. Suele contener mucho código. Realiza llamadas a cualquier parte del modelo, según las peticiones realizadas por el usuario desde la interfaz (o vista), y contiene código específico de la aplicación. Puesto que este código es específico de la aplicación, no suele ser reutilizable. Sin embargo, el resto de componentes del patrón de diseño sí se pueden reutilizar. El controlador no procesa ni produce ningún dato: recibe la petición del usuario y decide a qué parte del modelo o componentes de la vista necesita llamar, determina dónde se envían los datos y qué formato se aplica a los datos devueltos. El controlador garantiza que las vistas tengan acceso a las partes de los datos del modelo que deben mostrar. Normalmente, el controlador transmite y responde ante cambios que afectan al modelo y a la vista. Las principales ventajas de hacer uso del patrón MVC son: 1. Menor acoplamiento, desacopla las vistas de los modelos y desacopla los modelos de la forma en que se muestran e ingresan los datos. 2. Mayor cohesión, Cada elemento del patrón está altamente especializado en su tarea (la vista en mostrar datos al usuario, el controlador en las entradas y el modelo en su objetivo de negocio). 3. Las vistas proveen mayor flexibilidad y agilidad, Se puede crear múltiples vistas de un modelo, Las vistas pueden anidarse, se puede cambiar el modo en que una vista responde al usuario sin cambiar su representación visual, se puede sincronizar las vistas y las vistas pueden concentrarse en diferentes aspectos del modelo. 4. Mayor facilidad para el desarrollo de clientes ricos en múltiples dispositivos y canales, una vista para cada dispositivo que puede variar según sus capacidades, una vista para la Web y otra para aplicaciones de escritorio. 5. Más claridad de diseño. 6. Facilita el mantenimiento. 23 Tecnologías a utilizar en el desarrollo de la aplicación Basados en las metodologías agiles para llevar a cabo el desarrollo de la aplicación propuesta, es indispensable contar con las tecnologías adecuadas que nos permitan minimizar los tiempos de desarrollo y ser más eficientes en nuestro proceso. Adicionalmente las tecnologías a utilizarse deben ser de código abierto o software libre dado que el cliente final así lo requiere. Por lo se han seleccionado las siguientes tecnologías: Lenguaje de programación PHP PHP proviene de un lenguaje anterior, llamado PHP/FI. PHP/FI fue creado por Rasmus Lerdorf en 1995, inicialmente como un simple conjunto de scripts de Perl para controlar quién accedía a su curriculum online. Llamó a ese conjunto de scripts “Personal Home Page Tools”. Según se requería, Rasmus fue añadiendo más funcionalidad escrita en C que era capaz de comunicarse con bases de datos y permitía a los usuarios desarrollar sencillas aplicaciones Web dinámicas. Rasmus decidió liberar el código fuente de PHP/FI para que cualquiera pudiese utilizarlo, así como arreglar errores y mejorar el código. Entre las características principales del lenguaje se encuentran: • Es un lenguaje multiplataforma. • Capacidad de conexión con la mayoría de los manejadores de base de datos que se utilizan en la actualidad, destaca su conectividad con MySQL y PostgreSQL. • Capacidad de expandir su potencial utilizando la enorme cantidad de módulos o extensiones. • Posee una amplia documentación en su página oficial (http://www.php.net), entre la cual se destaca que todas las funciones del sistema están explicadas y ejemplificadas en un único archivo de ayuda. • Es libre, por lo que se presenta como una alternativa de fácil acceso para todos. • Permite las técnicas de Programación Orientada a Objetos. • Biblioteca nativa de funciones sumamente amplia e incluida. • No requiere definición de tipos de variables. • Tiene manejo de excepciones (desde php5). Sistema manejador de base de datos PostgreSQL PostGreSQL es un sistema de gestión de bases de datos objeto-relacional (ORDBMS) basado en el proyecto POSTGRES, de la universidad de Berkeley. El director de este proyecto es el profesor Michael Stonebraker, y fue patrocinado por Defense Advanced Research Projects Agency (DARPA), el Army Research Office (ARO), el National Science Foundation (NSF), y ESL, Inc. PostGreSQL es una derivación libre (OpenSource) de este proyecto, y utiliza el lenguaje 24 SQL92/SQL99, así como otras características que comentaremos más adelante. Fue el pionero en muchos de los conceptos existentes en el sistema objeto relacional actual, incluido, más tarde en otros sistemas de gestión comerciales. PostGreSQL es un sistema objeto- relacional, ya que incluye características de la orientación a objetos, como puede ser la herencia, tipos de datos, funciones, restricciones, disparadores, reglas e integridad transaccional. A pesar de esto, PostGreSQL no es un sistema de gestión de bases de datos puramente orientado a objetos. PostGreSQL es un sistema de gestión de base de datos relacional orientada a objetos y libre, publicado bajo la licencia BSD. Como muchos otros proyectos de código abierto, el desarrollo de PostgreSQL no es manejado por una sola empresa sino que es dirigido por una comunidad de desarrolladores y organizaciones comerciales las cuales trabajan en su desarrollo. Dicha comunidad es denominada el PGDG (PostGreSQL Global Development Group). Utiliza el lenguaje SQL para llevar a cabo sus búsquedas de información, las bases de datos generadas dentro de servidores de SQL son bases de datos relacionales. Utiliza un modelo cliente/servidor y usa multiprocesos en vez de multi-hilos para garantizar la estabilidad del sistema. Un fallo en uno de los procesos no afectará el resto y el sistema continuará funcionando. A continuación se enumeran las principales características de este gestor de bases de datos: 1. Implementación del estándar SQL92/SQL99. 2. Soporta distintos tipos de datos: además del soporte para los tipos base, también soporta datos de tipo fecha, monetarios, elementos gráficos, datos sobre redes (MAC, IP...), cadenas de bits, etc. También permite la creación de tipos propios. 3. Incorpora una estructura de datos array. 4. Incorpora funciones de diversa índole: manejo de fechas, geométricas, orientadas a operaciones con redes, etc. 5. Permite la declaración de funciones propias, así como la definición de disparadores. 6. Soporta el uso de índices, reglas y vistas. 7. Incluye herencia entre tablas (aunque no entre objetos, ya que no existen), por lo que a este gestor de bases de datos se le incluye entre los gestores objeto- relacionales. 8. Permite la gestión de diferentes usuarios, como también los permisos asignados a cada uno de ellos. Ventajas de PostGreSQL Instalación ilimitada: Es frecuente que las bases de datos comerciales sean instaladas en más servidores de lo que permite la licencia. Algunos proveedores comerciales consideran a esto la 25 principal fuente de incumplimiento de licencia. Con PostgreSQL no hay costo asociado a la licencia del software. Esto tiene varias ventajas adicionales: • Modelos de negocios más rentables con instalaciones a gran escala. • No existe la posibilidad de ser auditado para verificar cumplimiento de licencia en ningún momento. • Flexibilidad para hacer investigación y desarrollo sin necesidad de incurrir en costos adicionales de licenciamiento. JQuery JQuery es una biblioteca o framework de Javascript, creada inicialmente por John Resig, que permite simplificar la manera de interactuar con los documentos HTML, manipular el árbol DOM, manejar eventos, desarrollar animaciones y agregar interacción con la tecnología AJAX a páginas web. Fue presentada el 14 de enero de 2006 en el BarCamp NYC. JQuery, al igual que otras bibliotecas, ofrece una serie de funcionalidades basadas en Javascript que de otra manera requerirían de mucho más código. Es decir, con las funciones propias de esta biblioteca se logran grandes resultados en menos tiempo y espacio. Es un proyecto open-source el cual fue liberado en enero del año 2006. Provee muchas características nuevas a JavaScript, sintaxis simple de aprender, una robusta compatibilidad de plataforma cruzada y todo esto en un pequeño archivo jquery.js. Compatible con los navegadores: • Firefox 2.0+. • Safari 2.0.2+. • Opera 9+. • Internet Explorer 6+. Características: • Selección de elementos DOM. • Interactividad y modificaciones del árbol DOM, incluyendo soporte para CSS 1-3 y un plugin básico de XPath. • Eventos. • Manipulación de la hoja de estilos CSS. • Efectos y animaciones. • AJAX. • Soporta extensiones. • Utilidades varias como obtener información del navegador, operar con Objetos y Arrays, función trim() (elimina los espacios en blanco del principio y final de una cadena de caracteres), etc. • Acceder al documento HTML (DOM = Document Object Model). 26 • Modificar la apariencia de la página. • Modificar el contenido de la página. • Manejar eventos de los elementos de la página. • Crear efectos visuales. • Manipular estilos CSS (Cascading Style Sheets). • AJAX (Asynchronous JavaScript + XML) • Simplificar tareas comunes de JavaScript: manipulación de arrays, iteración de arrays, operar con objetos. • Manipulación en JSON (JavaScript Object Notation). • Programación bajo el paradigma no invasivo. Licencias Podríamos usar cualquier proyecto de jQuery en virtud de los términos de la licencia MIT o de la GNU General Public License (GPL) Versión 2. La licencia MIT se recomienda para la mayoría de los proyectos. Es simple y fácil de entender y lugares casi sin restricciones en lo que puede hacer con un proyecto de jQuery. Si la GPL se adapta a nuestro proyecto somos libres de utilizar un proyecto de jQuery en virtud de esa licencia. 27 CAPITOLO 3: MARCO DE DESARROLLO En este capítulo se presenta la explicación en detalle del ciclo de desarrollo de la aplicación, adoptando el esquema basado en la Metodología Ágil AMDD expuesta, con la finalidad de que se pueda comprender mejor el detalle del sistema y como se sustentan las bases teóricas presentadas en el capítulo anterior. El ciclo de vida del software elaborado mediante el modelado ágil consta de tres etapas primordiales: iniciación, desarrollo en iteraciones y por último liberación del producto. En la etapa inicial se realizó el análisis de requerimientos, se esbozó la arquitectura inicial y la planificación de las sucesivas iteraciones, durante el ciclo de desarrollo de la aplicación. En la segunda etapa, se describen las acciones realizadas para la finalización de un producto exitoso. Finalmente, en la tercera etapa se especifican las actividades realizadas como lo son las pruebas realizadas a la aplicación y puesta en marcha. 3.1 Análisis de la solución propuesta Como se mencionó anteriormente, el objetivo del presente Trabajo Especial de Grado se fundamenta en el desarrollo de una Aplicación Web, que permita el almacenamiento y consulta de manera rápida y efectiva, de los datos generados por los diferentes dispositivos utilizados en el estudio del potencial eólico en Venezuela. Además, gestionar la información de las diferentes entidades tanto públicas como privadas que intervienen en dicho proceso de medición. La aplicación debe cumplir un conjunto de características principales, entre las que se encuentran: poder distinguir los distintos tipos de usuarios según el rol que desempeñe dentro de la institución, permitir a dichos usuarios consultar los datos generados por las torres de medición según su ubicación geográfica. Además de permitir seleccionar el periodo de tiempo a consultar y poder visualizar los resultados. 3.2 Iteración 0 (Levantamiento de la Información) En esta iteración, se realizo el levantamiento y análisis de la información, lo que permitió determinar las distintas funcionalidades que la aplicación debe proveer, los distintos entes y usuarios participantes, además de las relaciones entre los mismos. De igual forma, se pudo determinar la arquitectura la cual como la mayoría de las aplicaciones Web se basará en un esquema Cliente-Servidor, el cual será desarrollado siguiendo en patrón de diseño MVC en PHP. Seguidamente en esta fase, se destacan el conjunto de requerimientos que debe tener la aplicación y la distribución de estos y cómo se desarrolló cada uno de los módulos funcionales, especificando en cual iteración, además de la descripción de la interfaz. En la siguiente figura se detallan las acciones llevadas a cabo en esta iteración 0. 28 Figura 3.1: Iteración 0 del proyecto. Requerimientos funcionales de la aplicación Los requerimientos funcionales, son todos aquellos que describen las distintas funcionalidades que se espera el sistema provea y las interacciones del mismo con su entorno. Previamente se van a nombrar a groso modo, los principales requerimientos funcionales de la aplicación, para luego representar estos requerimientos a través de la realización del modelo de casos de uso. Este modelo nos permite describir cada una de las funcionalidades. • Proveer información general sobre la campaña de medición eólica en Venezuela. • Permitir el registro y manejo de información de los diferentes entes involucrados y los distintos tipos de usuarios del sistema (registrado, administrador, web). • Permitir a los usuarios el acceso a la aplicación mediante la autenticación suministrando su nombre de usuario y su clave, y en dado caso que olvidase la clave, permitirle recuperarla. • Proveer un sistema de almacenamiento eficiente, para los datos resultados de las mediciones realizadas por los diferentes equipos instalados, en cada torre de medición eólica. • Permitir la visualización gráfica de los resultados de mediciones generadas por cada una de las distintas torres. • Proveer un mecanismo que permita llevar el control de los distintos emplazamientos ubicados a lo largo del territorio nacional, permitiendo almacenar información asociada a estos, como lo son: descripción, coordenadas de ubicación, mapas e imágenes. • Permitir llevar el control sobre las empresas contratadas para el mantenimiento de uno o más emplazamientos, permitiendo almacenar información relevante como lo son: datos 29 de la empresa contratada, datos del contrato e informes de los mantenimientos realizados. • Permitir a los usuarios descargar a un archivo, los datos consultados. Requerimientos no funcionales de la aplicación Los requerimientos no funcionales hacen referencia a las características del sistema que aplican de manera general como un todo, más que a rasgos particulares del mismo. Estos requerimientos son adicionales a los requerimientos funcionales que debe cumplir el sistema, y corresponden a aspectos tales como la disponibilidad, mantenibilidad, flexibilidad, escalabilidad, facilidad de uso, entre otras. A continuación, se presenta la descripción de aquellos requerimientos no funcionales que se tomaron en cuenta en la aplicación. Requerimiento Descripción RNF-001 Usabilidad El sistema debe ser lo más sencillo de usar con metáforas adecuadas y fáciles de predecir su funcionalidad, poco propenso a cometer errores. La interfaz del usuario deberá ser tan familiar como sea posible a los usuarios, que han usado otras aplicaciones web. RNF-002 Integridad El sistema debe validar la información contenida en los formularios de ingreso. En el proceso de validación de la información, se deben tener en cuenta aspectos tales como obligatoriedad de campos, longitud de caracteres permitida por campo, manejo de tipos de datos entre otros. RNF-003 Seguridad El acceso al sistema debe estar restringido por el uso de claves asignadas a cada uno de los usuarios. Sólo podrán ingresar al sistema las personas que estén registradas, estos usuarios serán clasificados en varios tipos de usuarios (o roles), con acceso a las opciones de trabajo definidas para cada rol. Solo los usuarios con derechos de administrador podrán acceder a las funciones administrativas. RNF-004 Eficiencia Garantizar la confiabilidad, la seguridad y el desempeño del sistema a los diferentes usuarios a nivel nacional. En este sentido, la información almacenada podrá ser consultada y actualizada permanente y simultáneamente, sin que se afecte el tiempo de respuesta. RNF-005 Robustez El sistema debe poder presentar mensajes de error ante situaciones adversas, que permitan al usuario identificar el tipo de error y comunicarse con el administrador del sistema. Tabla 3.2 : Requerimientos No Funcionales de la Aplicación. 30 Pila de requerimientos funcionales o casos de uso Siguiendo los 12 principios de la Metodología ágil (Manifiesto Ágil 2002), y las diferentes etapas que intervienen en el desarrollo de nuestra aplicación, para lograr determinar el número de iteraciones que se deberán realizar a fin de conseguir el objetivo planteado, se procedió a la captura de los requerimientos del sistema. Los requerimientos fueron distribuidos según el orden de prioridad establecidos por el equipo. El tiempo que se llevó el desarrollo de cada uno de los requerimientos, dependió de la complejidad del mismo; así como también se desarrollo un análisis previo que permitió definir los pasos a seguir para la completitud de cada uno de ellos. Este análisis consistió básicamente, en determinar el nivel de interacción que debía existir entre cada uno de los módulos del sistema y sus necesidades. A continuación, se presenta el conjunto de requerimientos implementados. Pila de casos de uso de la aplicación Diseño y construcción de la base de datos Iteración 1 Registrarse Recuperar clave Autenticarse (manejo de sesión) Administrar datos de usuario Desactivar usuarios Iteración 2 Administrar datos de emplazamiento Administrar datos de instituciones Administrar datos de sensor Administrar datos de datalogger Administrar datos de contratista Iteración 3 Visualizar información sobre la campaña Cargar archivo de datos Cargar fotos y mapas Consultar datos de contratos Consultar datos de emplazamientos Iteración 4 Administrar datos de contrato Visualizar datos eólicos Visualizar gráficas de datos consultados Descargar archivo de datos consultados Descargar datos crudos Iteración 5 Figura 3.1: Pila de requerimientos. 31 Descripciones de los casos de uso A continuación se presenta una vista funcional del sistema basado en los diversos diagramas y definiciones de los casos de uso que conformarán el Sistema. Definiciones, acrónimos y abreviaturas Actor: es una persona, organización, o sistema externo que interactúa con el sistema. Generalmente son usuarios del sistema descritos a través de los roles que los representan dentro de la organización. Caso de Uso (CU): describen las funciones del sistema que son visibles a los usuarios (actores). Son usados para proveer un resumen de todos o parte de los requerimientos funcionales del sistema y comunicar el alcance del proyecto. Include: es la invocación de un CU dentro de otro CU en algún punto en específico (como llamando una función). Extend: extender un CU continúa el comportamiento del CU base, agregando una secuencia de acciones o pasos (estos pueden ir en paralelo a los pasos del CU base). Usuario web: es aquella persona que visita la aplicación web pero aún no ha iniciado sesión, esto puede deberse a varias causas: no se ha registrado, ha perdido su contraseña, o simplemente no se ha autenticado. Por lo tanto este usuario tiene acceso restringido a las funcionalidades del sistema y solo se le permite consultar información a cerca de la campaña de medición del recurso eólico en Venezuela. Usuario registrado: es el usuario que se ha registrado previamente en el sistema, posee las credenciales para autenticarse y acceder a las diferentes funcionalidades del módulo de almacenamiento, consulta y manejo de datos de la aplicación. Administrador: es aquel usuario que tiene permisos para realizar operaciones relacionadas con la administración de la aplicación. 32 Diagrama general de casos de uso Se han dividido los casos de uso por tipo de usuario, los cuales se observan en el siguiente diagrama. La especificación de cada uno de estos tipos de usuarios se encuentra en la siguiente sección del documento. Figura 3.2: Nivel 1 de Casos de Uso. 33 Descripción del caso de uso visualizar Información sobre la campaña: Caso de Uso Nombre: Visualizar datos de campaña Descripción: En el presente caso de uso, el usuario desea conocer más información acerca de la campaña de medición eólica en Venezuela. Precondición: El usuario desea visualizar información acerca de la campaña de medición eólica en Venezuela. Flujo Normal: 1. El usuario se encuentra en la página principal del sistema, selecciona la opción del menú para ver información adicional. 2. Visualiza la información acerca de la campaña. Actor Sistema 1. Se dirige a la página principal del sistema. 3. Selecciona en el menú la opción del menú “Información adicional”. 6. Navega por los diferentes enlaces para visualizar toda la información. 8. Visualiza la información. 2. Muestra la página principal. 4. Muestra la página principal de información acerca de la campaña. 7. El sistema muestra la información contenida en cada uno de los ítems. Flujo Alterno: N/A Post condición: El usuario ha visualizado la información de la campaña de medición eólica en Venezuela. Requerimientos Especiales: N/A Puntos de Extensión: N/A Descripción del caso de uso cargar archivo de datos: Caso de Uso Nombre: Cargar Archivo de Datos Descripción: En el presente caso de uso el usuario con rol de Administrador, previamente autenticado, se le permite cargar en el sistema el archivo que contiene las mediciones eólicas obtenidas en alguna de las torres instaladas. Precondición: El usuario esta registrado en el sistema. El usuario está autenticado en el sistema. El usuario posee el archivo generado por el datalogger con los datos de medición. Flujo Normal: 1. El usuario se encuentra en la página principal del sistema, selecciona la opción de cargar datos del 34 Caso de Uso menú principal. 2. Visualiza el formulario de registro de nuevos archivos de datos, selecciona los archivos a cargar y presiona el botón de guardar. 3. Visualiza un indicador de progreso y luego un mensaje de éxito. Actor Sistema 1. Se dirige a la página principal del usuario. 3. Selecciona en el menú la opción de cargar datos. 5. Indica la ubicación de los archivos y una de breve descripción y presiona el botón de guardar. 7. Visualiza el mensaje de éxito. 2. Muestra la página principal. 4. Muestra la página de carga de datos. 6. El sistema verifica el formato de los archivos y la información de este, luego estos son almacenados en la base de datos. 8. El sistema muestra un mensaje de éxito. Flujo Alterno: 1. El usuario intenta cargar un archivo con el formato incorrecto. Actor Sistema 1. Ingresa los datos de un archivo que no cumple con el formato esperado. 3. Visualiza el mensaje de error. 2. La aplicación valida el formato del archivo y muestra un mensaje indicando lo ocurrido. Flujo Alterno: 2. El usuario intenta cargar un archivo que ya ha sido cargado. Actor Sistema 1. intenta cargar un archivo que ya fue cargado en la aplicación. 3. Visualiza el mensaje que indica lo ocurrido. 2. La aplicación valida que no exista almacenado un archivo con el mismo código y fecha que el archivo que se está intentando cargar. 4. Muestra un mensaje indicando que el archivo ya existe en el sistema. Post condición: El usuario ha cargado en el sistema los archivos de datos, de manera exitosa. Requerimientos Especiales: N/A Puntos de Extensión: N/A Descripción del caso de uso visualizar graficas de datos eólicos: Caso de Uso Nombre: Visualizar graficas de datos Descripción: En el presente caso de uso un usuario registrado en la aplicación, suministra la información necesaria para visualizar los datos eólicos generados por un 35 Caso de Uso emplazamiento, a través de gráficas. Precondición: Deben existir datos cargados en el sistema asociados a dicho emplazamiento, en un periodo de tiempo específico. Flujo Normal: 1. El usuario selecciona en el menú principal la opción de históricos. 2. Selecciona de una lista de opciones, el estado, municipio y emplazamiento a consultar. 3. Luego selecciona el periodo de tiempo y tipos de mediciones que desea visualizar. 4. Visualiza las diferentes graficas generadas por la aplicación. Actor Sistema 1. Se dirige a la página principal da la aplicación. 3. Selecciona en el menú la opción Históricos. 5. Selecciona los datos de la ubicación del emplazamiento. 7. Selecciona el periodo de tiempo y los tipos de mediciones a consultar. 9. Visualiza las graficas y los datos. 2. Muestra la página principal. 4. Muestra la página donde se selecciona el estado, municipio y emplazamiento. 6. El sistema muestra la página donde permite seleccionar el periodo de tiempo en el cual se generaron los datos, y los tipos de mediciones. 8. Genera y muestra cada una de las graficas, además de mostrar los datos consultados. Flujo Alterno: 1. El usuario intenta consultar un periodo de tiempo, donde no exista data cargada. Actor Sistema 1. Selecciona un periodo de tiempo donde no se ha cargado datos eólicos. 3. Visualiza el mensaje. 2. La aplicación valida que exista datos eólicos en ese periodo de tiempo que se ha seleccionado y muestra un mensaje indicando ocurrido. Post condición: El usuario ha visualizado las gráficas generadas por la aplicación. Requerimientos Especiales: N/A Descripción del caso de uso visualizar datos eólicos: Caso de Uso Nombre: Visualizar datos eólicos. Descripción: En el presente caso de uso un usuario registrado en la aplicación, suministra la información necesaria para visualizar tablas con los datos eólicos generados por un emplazamiento. Precondición: Deben existir datos cargados en el sistema asociados a dicho emplazamiento, en un periodo de tiempo específico. Flujo Normal: 36 Caso de Uso 1. El usuario selecciona en el menú principal la opción de históricos. 2. Selecciona de una lista de opciones, el estado, municipio y emplazamiento a consultar. 3. Luego selecciona el periodo de tiempo y tipos de mediciones que desea visualizar. 4. Visualiza las diferentes tablas con los datos generadas por la aplicación. Actor Sistema 1. Se dirige a la página principal da la aplicación. 3. Selecciona en el menú la opción Históricos. 5. Selecciona los datos de la ubicación del emplazamiento. 7. Selecciona el periodo de tiempo y los tipos de mediciones a consultar. 9. Visualiza las tablas con los datos. 2. Muestra la página principal. 4. Muestra la página de formulario, donde se selecciona el estado, municipio y emplazamiento. 6. El sistema muestra la página donde permite seleccionar el periodo de tiempo en el cual se generaron los datos, y los tipos de mediciones. 8. Genera y muestra cada una de las tablas con los datos obtenidos en la consulta. Flujo Alterno: 2. El usuario intenta consultar un periodo de tiempo, donde no exista data cargada. Actor Sistema 2. Selecciona un periodo de tiempo donde no se ha cargado datos eólicos. 4. Visualiza el mensaje. 3. La aplicación valida que exista datos eólicos en ese periodo de tiempo que se ha seleccionado y muestra un mensaje indicando ocurrido. Post condición: El usuario ha visualizado las tablas de datos, generadas por la aplicación. Requerimientos Especiales: N/A Puntos de Extensión: N/A Descripción del caso de uso Descargar datos consultados: Caso de Uso Nombre: Descargar de datos consultados Descripción: En el presente caso de uso el usuario registrado, previamente autenticado, se le permite descargar los datos generados en según los parámetro de la consulta. Precondición: El usuario esta registrado en el sistema. El usuario está autenticado en el sistema. El usuario ha realizado una consulta de datos y desea descargar dichos datos a un archivo. Flujo Normal: 1. El usuario se encuentra en la página de visualización de resultado de una consulta específica, selecciona la opción de descargar datos consultados. 37 Caso de Uso 2. Visualiza el formulario descarga de archivo de datos, selecciona la ubicación de destino del archivo y presiona el botón guardar. 3. Visualiza un mensaje de éxito. Actor Sistema 1. Se encuentra en la página de visualización de resultados y selecciona la opción de descargar archivo de datos crudos. 3. Indica la ubicación de destino, donde desea que se guarde él archivo y presiona el botón guardar. 5. Visualiza el mensaje de éxito. 2. Muestra el formulario de descarga de archivos. 4. El sistema genera un archivo con los datos crudos, y lo guarda en la ubicación indicada por el usuario, luego muestra un mensaje de éxito. Flujo Alterno: N/A Post condición: El usuario ha descargado en el archivo que contiene los datos generados durante la consulta. Descripción del caso de uso Descargar datos crudos: Caso de Uso Nombre: Descarga de datos crudos. Descripción: En el presente caso de uso el usuario registrado, previamente autenticado, se le permite descargar los datos crudos. Precondición: El usuario está registrado en el sistema. El usuario se encuentra autenticado en el sistema. El usuario desea descargar los datos crudos de medición eólica. Flujo Normal: 1. El usuario se encuentra en la página de visualización de resultado de una consulta específica, selecciona la opción de descargar datos crudos. 2. Visualiza el formulario descarga de archivo de datos, selecciona la ubicación del archivo y presiona el botón guardar. 3. Visualiza un mensaje de éxito. Actor Sistema 1. Se encuentra en la página de visualización de resultados y selecciona la opción de descargar archivo de datos crudos. 3. Indica la ubicación de destino, donde desea que se guarde él archivo y presiona el botón guardar. 5. Visualiza el mensaje de éxito. 2. Muestra el formulario de descarga de archivos. 4. El sistema genera un archivo con los datos crudos, y lo guarda en la ubicación indicada por el usuario, luego muestra un mensaje de éxito. 38 Caso de Uso Actor Sistema Post condición: El usuario ha descargado en el archivo que contiene los datos crudos. Requerimientos Especiales: N/A Puntos de Extensión: N/A Descripción del caso de uso administrar datos de usuarios: Caso de Uso Nombre: Administrar datos de usuario Descripción: En el presente caso de uso, un usuario administrador de la aplicación acceda a este bloque de la aplicación para crear/activar/desactivar/eliminar/reenvio de clave a un usuario. Precondición: La institución envió una solicitud con los datos del usuario a crear. El usuario no se encuentra registrado en la aplicación. Flujo Normal: 1. El usuario administrador se ubica en la página de registro de usuario. 2. Rellena el formulario con los datos a ser registrados en el sistema. 3. El sistema almacena los datos y genera un mensaje que indica, que se ha creado en el sistema el usuario satisfactoriamente. Actor Sistema 1. Se dirige a la página de registro de usuarios. 3. Ingresa los datos básicos para ser registrados en el sistema. 6. Visualiza el mensaje de registro exitoso. 2. Muestra el formulario para el ingreso de datos del usuario a registrarse. 4. Valida y registra los datos del usuario y se muestra un mensaje de éxito. Flujo Alterno: 1. El usuario ingresó datos inválidos Actor Sistema 1. Se dirige a la página de registro de usuarios 3. El usuario ingresa datos inválidos. 2. Muestra el formulario para ingresar los datos del usuario a registrarse. 4. Valida y muestra un mensaje indicando que los datos ingresados son inválidos. Flujo Alterno: 2. El usuario a registrar ya existe. Actor Sistema 39 Caso de Uso 1. Se dirige a la página de registro de usuarios 3. Ingresar los datos básicos para ser registrado en el sistema. 5. Visualiza en mensaje. 2. Muestra el formulario para ingresar los datos del usuario a registrarse. 4. Valida que no exista en el sistema un usuario con el mismo correo y cédula, si ya existe se muestra un mensaje indicando que ya existe un usuario con la misma combinación (correo, cédula). Post Condición: El usuario ha sido registrado de manera exitosa. Requerimientos Especiales: N/A Puntos de Extensión: N/A Descripción del caso de uso administrar datos de instituciones: Caso de Uso Nombre: Administrar datos de instituciones Descripción: En el presente caso de uso el usuario con rol de administrador, previamente autenticado, se le permite administrar la información de las instituciones registradas en el sistema. Precondición: El usuario esta registrado en el sistema con el rol de administrador. El usuario está autenticado en el sistema. Flujo Normal: 1. El usuario se encuentra en la página principal del sistema, selecciona la opción de administrar instituciones. 2. Visualiza el formulario de registro y el listado de instituciones registradas en el sistema. Actor Sistema 1. Se dirige a la página principal de la aplicación, selecciona la opción de administrar instituciones. 3. Visualiza la página de administración de instituciones. 2. Muestra la página de administración de instituciones. Flujo Alterno: 1. Se desea registrar una nueva institución. Actor Sistema 1. Ingresa los datos de la nueva institución en el formulario de registro, presiona el botón de guardar. 4. Visualiza la ventana con los datos de institución. 2. Valida la información y la almacena en la base de datos. 3. Muestra un mensaje de éxito. Flujo Alterno: 2. Se desea eliminar una institución existente. Actor Sistema 40 Caso de Uso 1. Visualiza el listado de instituciones registradas, presiona el botón de eliminar asociado a esta. 3. Visualiza el mensaje de éxito. 2. Elimina el registro y muestra un mensaje de éxito. Flujo Alterno: 3. Se desea editar una institución existente. Actor Sistema 1. Visualiza el listado de instituciones registradas, presiona el botón de editar asociado a esta. 3. Visualiza el mensaje de éxito. 2. Edita el registro y presiona el botón de guardar. Post condición: El usuario ha administrado los datos de instituciones. Requerimientos Especiales: N/A Puntos de Extensión: N/A Descripción del caso de uso administrar datos de emplazamientos: Caso de Uso Nombre: Administrar datos de emplazamientos Descripción: En el presente caso de uso el usuario con rol de administrador, previamente autenticado, se le permite gestionar la información de los emplazamientos. Precondición: El usuario esta registrado en el sistema, con el rol de administrador. El usuario está autenticado en el sistema. Flujo Normal: 1. El usuario se encuentra en la página principal del sistema, selecciona la opción de administrar emplazamientos. 2. Visualiza el formulario de registro de emplazamiento. 3. Visualiza la lista de emplazamientos en caso de existir, y selecciona la opción de registrar uno nuevo, o editar uno existente. Actor Sistema 1. Se dirige a la página principal de la aplicación. 3. Selecciona en el menú la opción de registrar nuevo emplazamiento. 5. Ingresa la información respectiva del emplazamiento que desea registrar. 5. Visualiza el mensaje de éxito. 2. Muestra la página de administración de emplazamientos. 4. El sistema muestra el formulario de registro de emplazamiento. 3. Se validan los datos, se guardan en el sistema y se muestra un mensaje de éxito. 41 Caso de Uso Flujo Alterno: 1. El usuario intenta cargar un emplazamiento cuyo código ya fue utilizado en un registro previo. Actor Sistema 1. Ingresa el código de un emplazamiento que ya ha sido registrado. 3. El usuario visualiza el mensaje de error. 2. La aplicación valida el código y emite un mensaje de error. Flujo Alterno: 2. El usuario no ingresa todos los datos requeridos para el registro de un emplazamiento. Actor Sistema 1. No ingresa todos los datos mínimos requeridos para el registro exitoso de un emplazamiento. 4. Visualiza el mensaje de error. 2. Valida que se hayan suministrado todos los datos requeridos, y muestra un mensaje de error informando lo ocurrido. Post condición: El usuario ha cargado en la aplicación la información de un emplazamiento Requerimientos Especiales: N/A Puntos de Extensión: Cargar fotos, Cargar mapas. Descripción del caso de uso Consultar Datos de Emplazamientos: Caso de Uso Nombre: Consultar datos de emplazamiento Descripción: En el presente caso de uso el usuario registrado en el sistema, previamente autenticado, se le permite consultar la información de un emplazamiento en particular. Precondición: El usuario esta registrado en el sistema. El usuario está autenticado en el sistema. El usuario desea consultar información acerca de un emplazamiento existente. Flujo Normal: 1. El usuario se encuentra en la página principal del sistema, selecciona la opción consultar emplazamientos. 2. Selecciona la ubicación y el emplazamiento a consultar. 3. Visualiza una página con la información disponible del emplazamiento. Actor Sistema 1. Se dirige a la página principal del usuario, selecciona la opción en el menú de consultar emplazamiento. 3. Selecciona el estado, municipio, y el emplazamiento 2. Muestra el formulario de consulta. 4. Genera la consulta y muestra una página 42 Caso de Uso que desea consultar. 5. El Visualiza los datos del emplazamiento. con los datos del emplazamiento seleccionado Post condición: El usuario ha visualizado la información del emplazamiento de manera exitosa. Requerimientos Especiales: N/A Puntos de Extensión: N/A Descripción del caso de uso Cargar fotografías: Caso de Uso Nombre: Cargar fotos. Descripción: En el presente caso de uso el usuario con rol de Administrador, se le permite cargar en el sistema fotografías asociadas a un emplazamiento en particular. Precondición: El usuario esta registrado en el sistema. El usuario está autenticado en el sistema. El usuario posee el archivo de la foto que desea cargar. Flujo Normal: 1. El usuario acaba de registrar la información de un emplazamiento, selecciona la opción de cargar fotos. 2. Visualiza el formulario de registro de fotos, selecciona la ubicación de la foto en el directorio y presiona el botón de guardar. 3. Visualiza un mensaje de éxito. Actor Sistema 1. Se ha cargado la información de un emplazamiento, selecciona la opción de cargar foto. 3. Indica la ubicación del archivo y una de breve descripción y presiona el botón de guardar. 5. Visualiza el mensaje de éxito. 2. Muestra el formulario de registro de foto. 4. Almacena el archivo en el sistema y muestra un mensaje de éxito. Flujo Alterno: 1. El usuario intenta cargar un archivo que excede el tamaño máximo permitido. Actor Sistema 1. El usuario intenta cargar una foto que excede el tamaño máximo. 3. El usuario visualiza el mensaje de error. 2. La aplicación valida el tamaño del archivo y muestra un mensaje indicando lo ocurrido. Post condición: El usuario ha cargado exitosamente en el sistema, la foto asociada a un emplazamiento en particular. Requerimientos Especiales: N/A 43 Caso de Uso Puntos de Extensión: N/A Descripción del caso de uso administrar datos de contratista: Caso de Uso Nombre: Administrar datos de contratista Descripción: En el presente caso de uso el usuario con rol de Administrador, se le permite administrar la información de las empresas contratistas. Precondición: El usuario esta registrado en el sistema con el rol de administrador. El usuario está autenticado en el sistema. Flujo Normal: 1. El usuario se encuentra en la página principal del sistema, selecciona la opción de Administrar contratistas. 2. Visualiza el formulario de registro y el listado de empresas contratistas registradas en el sistema. Actor Sistema 1. Se dirige a la página principal de la aplicación, selecciona la opción de administrar contratistas. 3. Visualiza la página de administración de empresas contratistas. 2. Muestra la página de administración de empresas contratistas. Flujo Alterno: 1. Se desea registrar una nueva empresa contratista. Actor Sistema 2. Ingresa los datos de la nueva contratista en el formulario de registro, presiona el botón de guardar. 5. Visualiza la ventana con los datos de la contratista. 4. Valida la información y la almacena en la base de datos. 5. Muestra una ventana con los datos de la contratista registrada. Flujo Alterno: 2. Se desea eliminar una contratista existente. Actor Sistema 1. Visualiza el listado de contratistas registradas, presiona el botón de eliminar asociado a esta. 3. Visualiza el mensaje de éxito. 2. Elimina el registro y muestra un mensaje de éxito. Post condición: El usuario ha administrado los datos de las empresas contratistas. 44 Caso de Uso Requerimientos Especiales: N/A Puntos de Extensión: N/A Descripción del caso de uso autenticarse: Caso de Uso Nombre: Autenticarse Descripción: En el presente caso de uso, un usuario registrado o administrador del sistema procederá a autenticarse para tener acceso a las acciones restringidas de la aplicación Web. Precondición: El usuario esta registrado en el sistema. El usuario desea iniciar sesión y no esta autenticado. Flujo Normal: 1. El usuario ingresa el identificador de usuario y la clave. 2. El sistema valida los datos y muestra la página principal del usuario. Actor Sistema 1. Se dirige a la página de inicio de sesión. 3. Ingresa identificador y la clave. 5. Visualiza la página principal del usuario. 2. Se muestra el formulario de inicio de sesión. 4. Valida los datos ingresados y redirige a la página principal del usuario. Flujo Alterno: 1. El usuario ingresa datos inválidos. Actor Sistema 1. El usuario ingresa datos inválidos. 2. El sistema muestra mensaje de error y le informa al usuario que introduzca correctamente los datos. Flujo Alterno: 2. El usuario no introduce todos los datos obligatorios. Actor Sistema 1. No introduce todos los datos obligatorios 2. Muestra un mensaje informándole al usuario que complete todos los datos para autenticarse Post condición: El usuario se encuentra autenticado en el sistema. Requerimientos Especiales: N/A Puntos de Extensión: N/A 45 Descripción del caso de uso Recuperar Clave: Caso de Uso Nombre: Recuperar contraseña. Descripción: En el presente caso de uso el usuario registrado, ha olvidado su clave de acceso al sistema y tiene la posibilidad de recuperarla Precondición: El usuario esta registrado en el sistema. Flujo Normal: 1. El usuario se encuentra en la página principal de la aplicación, selecciona la opción de recuperar clave. 2. Visualiza el formulario de recuperación de clave. 3. Ingresa la dirección de correo electrónico que uso en el registro y presiona el botón de enviar. 4. Recibe un correo con la clave. Actor Sistema 1. Se dirige a la página principal del usuario, selecciona la opción de recuperar clave. 3. Ingresa la dirección de email que utiliza para acceder a la aplicación y presiona el botón de enviar. 5. Visualiza el mensaje de éxito. 2. Muestra el formulario de recuperación de contraseña. 4. Valida el formato de correo y verifica que la dirección ingresada exista en el sistema, envía un correo con la contraseña y muestra un mensaje de éxito indicando que la contraseña le ha sido enviada. Flujo Alterno: 1. El usuario ingresa una dirección de correo que no está registrada en la aplicación. Actor Sistema 1. El usuario ingresa una dirección de correo no está registrada en la aplicación. 3. Visualiza el mensaje de error. 2. Verifica que la dirección no se encuentra registrada en la base de datos y genera un mensaje indicando el error. Flujo Alterno: 2. El usuario ingresa una dirección de correo con un formato erróneo. Actor Sistema 1. Ingresa una dirección de correo que no cumple con el formato estándar. 3. Visualiza el mensaje de error. 2. La aplicación valida dicho email y muestra un mensaje de error. Post condición: El usuario ha recuperado de manera exitosa su contraseña. Requerimientos Especiales: N/A Puntos de Extensión: N/A 46 Interfaz de la aplicación Una vez que se ha efectuado el análisis de los requerimientos, tanto los funcionales como los no funcionales de la aplicación, se procedió a realizar el modelo de interfaz. Para llevar a cabo el modelado, se tomó en cuenta que la aplicación Web a desarrollar tiene como cliente principal una institución del Estado Venezolano (MENPET), por lo que debe seguir un conjunto de lineamientos y estándares propios de las aplicaciones Web que desarrolla el esa institución. Otro de los aspectos a considerar son los diferentes actores que interactúan en la aplicación (Usuario, Usuario autenticado, Administrador) con la finalidad de crear interfaces que satisfagan las necesidades de cada uno. En el caso de Usuario Administrador debe poseer una interfaz única, donde se le permita administrar (crear, editar o borrar) cada uno de los elementos y entes que intervienen en el proceso de medición del potencial eólico. Clientes del sitio requieren una interfaz que facilite su navegación dentro del sistema. Para lograr todo esto, se utilizaron los patrones de interacción que son una herramienta que ayuda a describir un problema concerniente a la interfaz de usuario, en un contexto dado. Estándar a seguir: Según Oficina de Planificación Estratégica (Caracas, Agosto 2.007). La Oficina de Planificación Estratégica en conjunto con la Oficina de Tecnología e Informática, elaboraron el presente Instructivo Sobre Estándar de Interfaz Gráfico (Ambiente Web), cuyo objetivo es proveer de un estándar de interfaz gráfica que aplicado a un sistema de ejemplo, pueda servir de guía (prototipo) para que los usuarios lo utilicen y tengan una idea próxima del sistema a ser desarrollado; de esa forma se dedica esfuerzo en la lógica de programación y se interconecta con el estándar de interfaz gráfica para su debida producción; de ahí el apoyo relevante que tiene para la Oficina de Tecnología e Informática. Corresponderá a la Oficina de Planificación Estratégica la actualización de esta manual, por ser una unidad asesora en la materia y corresponderá a la Oficina de Auditoría Interna verificar su cumplimiento. Poniendo en uso nuestra conceptualización de prototipos, se presenta a continuación la estructura de la plantilla que deberá ser utilizada en cada una de las secciones del sitio web. La misma está dividida en elementos, las cuales se presentan y describen a continuación: • Encabezado del Sistema: Espacio para el panel de opciones generales del sitio web. El mismo por muy sencillo o complejo que sea debe mostrar al menos el nombre del sistema. 47 • Ruta Usuario: Espacio el cual permitirá mantener informado sobre la sección actual abierta con retornos y la información del usuario autenticado en el sistema. • Contenido: Espacio para la colocación de información general sobre el sitio web, lista de opciones del panel de control, buscadores, resultados de la búsqueda, formas de detalles, modificación, inserción, entre otras cosas. • Encabezado Opciones Generales del Sitio Web: Espacio para mostrar una segunda forma de las opciones generales del sitio web. • Derechos de Autor y Tecnología Utilizada: Espacio para mostrar información sobre el licenciamiento del software, lista de personas que participaron en la creación del software y imágenes asociadas a las tecnologías de información utilizadas. Figura 3.7: Plantilla Reutilizable. 48 Desarrollo de las iteraciones siguientes Como se pudo observar en el diagrama de la pila de requerimientos realizada, el desarrollo de los módulos que conforman la aplicación fue dividido en un conjunto de iteraciones, las cuales serán descritas a continuación. 3.3 Iteración 1 (diseño de la base de datos) Para la generación de el diseño de la base de datos seguimos un Modelo Conceptual de BD Relacionales (Conception des bases de donnees Relationnelles Jacky Akoka et isabelle Comyn-Wattiau Vuibert, Paris 2001, ISBN 2-7117-8678-i) que plantea diferentes métodos tal como el MERISE, que nos habla de un desarrollo por etapas. Las cuales están por formadas por los siguientes pasos: 1) Esquema Conceptual: representa el contenido de la BD en términos conceptuales, independiente de consideraciones informáticas. 2) Nivel Lógico: resulta de la traducción del esquema conceptual a un esquema apropiado a un tipo de BD. En este caso BD relacionales. 3) Nivel Físico: se utiliza para describir los métodos de organización y acceso a la BD. Modelo conceptual de base de datos. En este se describen los objetos principales, sus características y sus relaciones, a través de un formalismo denominado modelo de datos. En este caso utilizaremos el modelo Entidad- Relación (ER) para su representación. 49 Figura 3.3: Diseño conceptual de la base de datos (ER). Descripción de entidades A continuación se detallaran las entidades, son objetos que pueden ser identificados distintivamente. Las entidades son descritas por atributos, características o propiedades. Entre todos los atributos de la entidad, se define un identificador, que es un atributo o conjunto de atributos que permiten determinar una y solo una entidad en el conjunto. a. Emplazamiento Representa la torre instalada con los diferentes sensores y dispositivos, para realizar las mediciones del potencial eólico. Emplazamiento Id Identificador del emplazamiento. Tamaño Tamaño de la torre instalada. Cant_Sensores Cantidad de sensores que posee el emplazamiento. 50 b. Sensor Representa el sensor utilizado para la captura de las diferentes características del viento, para predecir el potencial eólico en una zona. c. Mapa Dicha entidad representa los distintos mapas que pueden ser almacenados acerca de la ubicación específica de un emplazamiento. d. Posición Esta entidad se refiere a las coordenadas geográficas de una posición. e. Data_Logger Representa al Data Logger, equipo encargado de registrar y almacenar los datos provenientes de cada sensor instalados en el emplazamiento. Sensor Id Identificador del sensor. Tipo Tipo de sensor. Fecha_inst Fecha de instalación del sensor. Mapa Id Identificador del mapa Imagen Imagen que representa dicho mapa. Posición Id Identificador de la posición. Coordenadas Coordenadas geográficas de dicha posición. Data_Logger Id Identificador de data logger. Fecha_Inst Fecha de Instalación del equipo. 51 f. Datos_Eólicos Representa los datos eólicos, registrados y almacenados en el data logger provenientes de cada sensor. Fecha_ult_rev Marca Modelo Intervalo_reg Fecha de la última revisión. Marca del dispositivo. Modelo del dispositivo. Intervalo de registro de datos. Datos_Eólicos Id Identificador único del registro. Fecha Fecha en la que se realizó la medición. Hora Hora en la que se realizó la medición. Prom_Vel_1 Promedio de la velocidad del viento proveniente del anemómetro 1. Max_Vel_1 Máxima de la velocidad del viento proveniente del anemómetro 1. Min_Vel_1 Mínima de la velocidad del viento proveniente del anemómetro 1. Desv_Vel_1 Desviación estándar de la velocidad del viento proveniente del anemómetro 1. Prom_Vel_2 Promedio de la velocidad del viento proveniente del anemómetro 2. Max_Vel_2 Máxima de la velocidad del viento proveniente del anemómetro 2. Min_Vel_2 Mínima de la velocidad del viento proveniente del anemómetro 2. Desv_Vel_2 Desviación estándar de la velocidad del viento proveniente del anemómetro 2. Prom_Vel_3 Promedio de la velocidad del viento proveniente del anemómetro 3. Max_Vel_3 Máxima de la velocidad del viento proveniente del anemómetro 3. Min_Vel_3 Mínima de la velocidad del viento proveniente del anemómetro 3. Desv_Vel_3 Desviación estándar de la velocidad del viento proveniente del anemómetro 3. Prom_Dir_1 Promedio de la dirección del viento proveniente de la veleta 1. Max_Dir_1 Máxima de la dirección del viento proveniente de la veleta 1. Min_Dir_1 Mínima de la dirección del viento proveniente de la veleta 1. 52 Desv_Dir_1 Desviación estándar de la dirección del viento proveniente de la veleta 1. Prom_Dir_2 Promedio de la dirección del viento proveniente de la veleta 2. Max_Dir_2 Máxima de la dirección del viento proveniente de la veleta 2. Min_Dir_2 Mínima de la dirección del viento proveniente de la veleta 2. Desv_Dir_2 Desviación estándar de la dirección del viento proveniente de la veleta 2. Prom_Hum Promedio de la humedad relativa proveniente del sensor de humedad. Max_Hum Máxima de la humedad relativa proveniente del sensor de humedad. Min_Hum Mínima de la humedad relativa proveniente del sensor de humedad. Desv_Hum Desviación estándar de la humedad relativa proveniente del sensor de humedad. Prom_Temp Promedio de la temperatura proveniente del sensor de temperatura. Max_Temp Máxima de la temperatura proveniente del sensor de temperatura. Min_Temp Mínima de la temperatura proveniente del sensor de temperatura. Desv_Temp Desviación estándar de la temperatura proveniente del sensor de temperatura. Prom_Pres Promedio de la presión atmosférica proveniente del sensor barométrico. Max_Pres Máxima de la presión atmosférica proveniente del sensor barométrico. Min_Pres Mínima de la presión atmosférica proveniente del sensor barométrico. Desv_Pres Desviación estándar de la presión atmosférica proveniente del sensor barométrico. Prom_Rad Promedio de la radiación solar proveniente del piranómetro. Max_Rad Máxima de la radiación solar proveniente del piranómetro. Min_Rad Mínima de la radiación solar proveniente del piranómetro. Desv_Rad Desviación estándar de la radiación solar proveniente del piranómetro. Prom_Prec Promedio de la precipitación proveniente del sensor de precipitaciones. Max_Prec Máxima de la precipitación proveniente del sensor de precipitaciones. Min_Prec Mínima de la precipitación proveniente del sensor de precipitaciones. Desv_Prec Desviación estándar de la precipitación proveniente del sensor de precipitaciones. 53 g. Velocidad Representa los datos de la velocidad registrada en un emplazamiento dado. h. Dirección Representa los datos sobre la dirección del viento en un emplazamiento en particular. Velocidad Id Identificador único del registro. Fecha Fecha en la que se realizó la medición. Hora Hora en la que se realizó la medición. Prom_Vel Promedio de la velocidad del viento proveniente del anemómetro. Max_Vel Máxima de la velocidad del viento proveniente del anemómetro. Min_Vel Mínima de la velocidad del viento proveniente del anemómetro. Desv_Vel Desviación estándar de la velocidad del viento proveniente del anemómetro. Dirección Id Identificador único del registro. Fecha Fecha en la que se realizó la medición. Hora Hora en la que se realizó la medición. Prom_Dir Promedio de la dirección del viento proveniente de la veleta. Max_Dir Máxima de la dirección del viento proveniente de la veleta. Min_Dir Mínima de la dirección del viento proveniente de la veleta. Desv_Dir Desviación estándar de la dirección del viento proveniente de la veleta. 54 i. Humedad Representa los datos de la humedad relativa registrada en un emplazamiento. j. Temperatura Representa los datos de la temperatura registrada en un emplazamiento. Humedad Id Identificador único del registro. Fecha Fecha en la que se realizó la medición. Hora Hora en la que se realizó la medición. Prom_Hum Promedio de la humedad relativa proveniente del sensor de humedad. Max_Hum Máxima de la humedad relativa proveniente del sensor de humedad. Min_Hum Mínima de la humedad relativa proveniente del sensor de humedad. Desv_Hum Desviación estándar de la humedad relativa proveniente del sensor de humedad. Temperatura Id Identificador único del registro. Fecha Fecha en la que se realizó la medición. Hora Hora en la que se realizó la medición. Prom_Temp Promedio de la temperatura proveniente del sensor de temperatura. Max_Temp Máxima de la temperatura proveniente del sensor de temperatura. Min_Temp Mínima de la temperatura proveniente del sensor de temperatura. Desv_Temp Desviación estándar de la temperatura proveniente del sensor de temperatura. 55 k. Presión Representa los datos de la presión atmosférica registrada en un emplazamiento. l. Radiación Representa los datos de la radiación solar registrada en un emplazamiento. m. Precipitación Representa los datos de la precipitación registrada en un emplazamiento. Presión Id Identificador único del registro. Fecha Fecha en la que se realizó la medición. Hora Hora en la que se realizó la medición. Prom_Pres Promedio de la presión atmosférica proveniente del sensor barométrico. Max_Pres Máxima de la presión atmosférica proveniente del sensor barométrico. Min_Pres Mínima de la presión atmosférica proveniente del sensor barométrico. Desv_Pres Desviación estándar de la presión atmosférica proveniente del sensor barométrico. Radiación Id Identificador único del registro. Fecha Fecha en la que se realizó la medición. Hora Hora en la que se realizó la medición. Prom_Rad Promedio de la radiación solar proveniente del piranómetro. Max_Rad Máxima de la radiación solar proveniente del piranómetro. Min_Rad Mínima de la radiación solar proveniente del piranómetro. Desv_Rad Desviación estándar de la radiación solar proveniente del piranómetro. Precipitación Id Identificador único de registro. Fecha Fecha en la que se realizó la medición. Hora Hora en la que se realizó la medición. 56 n. Empresa_Electrica. Son aquellas empresas que se encargan del montaje de los emplazamientos y todos los equipos que contiene, además de realizar el mantenimiento a cada emplazamiento o de contratar alguna empresa (Empresa_Contratada) que se encargue de ello. o. Empresa_Contratada. Son las empresas contratadas para realizar el mantenimiento a los emplazamientos, cabe destacar que dicho mantenimiento también puede ser realizado por una empresa eléctrica. Prom_Prec Promedio de la precipitación proveniente del sensor de precipitaciones. Max_Prec Máxima de la precipitación proveniente del sensor de precipitaciones. Min_Prec Mínima de la precipitación proveniente del sensor de precipitaciones. Desv_Prec Desviación estándar de la precipitación proveniente del sensor de precipitaciones. Empresa_Eléctrica Id Identificador de la empresa eléctrica. Nombre Nombre de la empresa eléctrica. Dirección Dirección fiscal de la empresa eléctrica. RIF Registro de información fiscal (RIF). Teléfono Teléfono de la empresa eléctrica. Tipo Tipo de empresa (pública o privada). Empresa_Contratada Id Identificador de las empresas contratada para realizar un mantenimiento. Nombre Nombre de la empresa contratada. Dirección Dirección fiscal de la empresa contratada. RIF Registro de información fiscal (RIF). Teléfono Teléfono de la empresa contratada. Tipo Tipo de empresa (pública o privada). 57 p. Usuario Esta entidad se refiere a los usuarios del sistema y los datos asociados a este. q. Datos_Personales Esta entidad representa los datos adicionales del usuario Iteración 2 Durante esta iteración se realizaron las funcionalidades básicas que debe ser provista por una aplicación Web, en donde los usuarios que interactúan con el sistema tienen la necesidad de autenticarse para poder acceder a ciertas acciones que requieren tener algún tipo de privilegios adicionales dentro de este. Entre las funcionalidades desarrolladas se destacan el registro de usuario, iniciar/finalizar sesión, recuperar contraseña y activar-desactivar usuarios. En la figura 3.4 muestra el caso de autenticación a un nivel mayor de detalle. Usuario id Identificador único del registro. clave Clave de usuario para ingresar al sistema. rol Rol dentro del sistema. email Correo electrónico. Datos_Personales Id Identificador único del registro. Nombre Nombre del usuario. Apellido Apellido del usuario. teléfono Teléfono del usuario. Dirección Dirección de domicilio del usuario. 58 Refinamiento de funcionalidades Figura 3.4: Refinamiento de funcionalidad Autenticarse. Descripción de la interfaz Para desarrollar la interfaz se utilizan los patrones de interacción: autenticarse, registrarse y captura de datos para el módulo del perfil de usuario. A continuación se muestran las diferentes interfaces que se generaron para esta primera iteración. Figura 3.5: Modelo de interfaz autenticarse. 59 Al ingresar a la aplicación se le permitirá seleccionar algunas opciones generales en el menú (Históricos, Campaña y otros.), así como también se podrá registrar usuarios en la aplicación, visualizar un listado de usuarios registrados e incluso modificar la información de ser necesario, luego los usuarios podrán autenticarse con un correo electrónico y una clave. Figura 3.6: Modelo de interfaz registrarse. Iteración 3 Durante esta iteración se llevo a cabo el módulo de administración de las instituciones y/o empresas, los emplazamientos y los sensores existentes asociados a cada uno de los emplazamientos. 60 Refinamiento de las funcionalidades Figura 3.7: Refinamiento de funcionalidad Administrar. Descripción del refinamiento Nombre Descripción Listar Existentes El usuario administrador del sitio podrá visualizar el listado de los registros existentes de cada una de las categorías mencionadas (Emplazamiento, Instituciones o empresas, sensores). Ver Información El usuario administrador visualiza la información de un elemento perteneciente a una categoría en particular. Editar Información El usuario administrador se le permite modificar los datos existentes de algún elemento en particular Eliminar Registro El usuario administrador puede eliminar un elemento existente de cualquiera de las categorías. Tabla3. : Refinamiento del requerimiento funcional. Descripción de la interfaz Se utilizan los patrones de interacción descritos una iteración previa. • Captura de datos: utilizado al momento de crear uno de los elementos mencionados • Seleccionar opción de una lista: para modificar o eliminar uno de los elementos. A continuación se presentan las diferentes interfaces generadas en esta iteración: 61 Figura 3.8: Modelo de Interfaz Administrar Elemento. Figura 3.9: Modelo de Interfaz agregar y/o eliminar elemento. 62 Iteración 4 Fueron desarrollados los módulos correspondientes a la administración de los mapas, así como la recopilación y ordenamiento de la información que se muestra sobre la campaña de medición, y por último el componente encargado de cargar el archivo de datos en las diferentes tablas de almacenamiento de nuestra aplicación. Uno de los componentes más importantes de nuestra aplicación es el que se encarga de la lectura y almacenamiento del archivo generado por el datalogger, en dicho archivo se encuentra el conjunto de datos de las mediciones generadas por los diferentes equipos (veleta, anemómetro, termómetro y otros.) instalados en la torre. Dichos datos son almacenados por el datalogger en archivos de texto en un determinado formato, los datos de un archivo no se repiten, es decir cada archivo contiene mediciones únicas por cada intervalo de tiempo. El formato de cada archivo es el siguiente: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 fecha Hora Intervalo_de_medición Versión serial_del_datalogger P ro m V e l 1 M a x v e l 1 M in ve l 1 D e sv v e l 1 P ro m V e l 2 M a x v e l 2 M in ve l 2 D e sv v e l 2 P ro m V e l 3 M a x v e l 3 M in ve l 3 D e sv v e l 3 p ro m D ir 1 M a x d ir 1 M in d ir 1 D e sv d ir 1 p ro m D ir 2 M a x d ir 2 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 M in d ir 2 D e sv d ir 2 p ro m h u m M a x h u m M in h u m D e sv h u m p ro m te m p M a x te m p M in te m p D e sv te m p p ro m ra d ia M a x ra d ia M in ra d ia D e sv ra d ia p ro m p re c M a x p re c M in p re c D e sv p re c Adicionalmente, durante esta iteración se procedió a la recopilación y ordenamiento de la información acerca de la campaña de medición eólica en Venezuela. Dicha información es mostrada en distintas páginas a lo largo de la aplicación a los usuarios que desean saber más acerca de la misma. Para poder llevar a cabo el control y ubicación de los emplazamientos, era necesario poder incluir una foto del sitio o de un mapa que indique la ubicación de éste, adjunto al registro del emplazamiento, para ello se creó el modulo de administración de mapas. 63 Descripción de la Interfaz Se instancian el patrón de interacción: Cargar Archivo. A continuación se presentan las diferentes interfaces generadas en esta iteración: Figura 3.9: Modelo de Interfaz cargar archivos de datos. Figura 3.9: Modelo de Interfaz visualizar datos de la campaña. 64 Figura 3.9: Modelo de Interfaz visualizar mapas. Iteración 5 Finalmente, se presenta la última iteración de la aplicación desarrollada, donde se realizaron los módulos de consulta y descarga de datos y generación de gráficas de resultados. El módulo de consulta de datos y generación de gráficas tiene como objetivo principal, proporcionarles a los usuarios de la aplicación la posibilidad de poder elegir el periodo de tiempo en el cual se generaron los datos, la ubicación en la cual se encuentra instalada la torre de medición y el tipo de grafica que se desea generar. Luego el sistema muestra una vista con los datos y las graficas consultadas. Para llevar a cabo el módulo de generación de gráficas, fue necesario añadir una librería que sirve para crear imágenes con todo tipo de gráficas, dinámicamente desde páginas PHP. Luego, el módulo de descarga de datos, el cual provee a los usuarios la posibilidad de descargar los datos (ya sean los utilizados para generar las graficas o los datos crudos) en un archivo de Excel o texto, para uso profesional. 65 Descripción de la interfaz Se instancian los patrones de interacción mencionados en la iteración 0: • Captura de datos: al momento de seleccionar el periodo y los tipos de graficas que se desean visualizar. • Descarga de archivos: al momento que el usuario desee almacenar los datos en un dispositivo, para uso profesional. Figura 3.9: Modelo de interfaz consultar datos eólicos, primer paso (selección del emplazamiento). Figura 3.9: Modelo de interfaz consultar datos eólicos, segundo paso (selección del periodo temporal). 66 Figura 3.9: Modelo de interfaz visualización de datos consultados. Figura 3.9: Modelo de Interfaz Visualización de graficas de datos. 67 Liberación del Producto En esta sección se presenta una descripción detallada de cómo se llevó a cabo esta última etapa que caracteriza la realización de un software. Se exponen los pasos realizados para montar la aplicación final en producción. Así como también las diferentes pruebas efectuadas a la aplicación. Producto final Una vez que se ha concluido el desarrollo de la aplicación, se procede a realizar la liberación del producto, este proceso se tomó un aproximado de una semana. Para asegurar que efectivamente la aplicación esta en correcto funcionamiento fue necesario efectuar una serie de pasos, los cuales son presentados a continuación • Instalación en el servidor de la base de datos PostgreSQL 8.4 y cargar el script de la aplicación en la base de datos. • Instalación en el servidor de PHP 5.2 o superior. • Carga de los archivos de la aplicación en la carpeta web del servidor. Paquete de Instalación Para lograr desplegar la aplicación en cualquier servidor es necesario realizar una serie de instalaciones de los programas necesarios para su correcto funcionamiento, los cuales son presentados a continuación: • PHP 5.2 o superior el cual puede ser descargado de forma gratuita desde la página oficial http://php.net/. • Sistema manejador de base de datos PostgreSQL 8.4 la cual se encuentra en la página http://www.postgresql.org • Servidor web Apache, se puede encontrar en la siguiente dirección, http://apache.org/. • Cargar el script de la base de datos de la aplicación. 68 Pruebas de la aplicación El proceso de pruebas del software tiene como objetivo principal verificar la calidad del producto final. Durante el desarrollo de la aplicación se llevaron a cabo diferentes pruebas realizadas por el propio desarrollador, las cuales permitieron determinar el correcto funcionamiento del software elaborado. Estas pruebas fueron divididas según el escenario actual y el rol que desempeña en ese instante de tiempo, un usuario de la aplicación. A continuación, la descripción de las pruebas con sus casos validos e inválidos. Cuando se presenten casos inválidos, la interfaz despliega automáticamente un mensaje de error, en caso contrario se realiza la acción deseada exitosamente. Escenario Registro de Usuario Descripción: el registro de usuario se presenta al iniciar la aplicación, permite a los usuarios que no se encuentran aún registrados, la posibilidad de registrarse para poder comenzar a utilizar las funcionalidades que esta brinda. Usuario: usuario no registrado en la aplicación. Escenario Casos Válidos Casos Inválidos Registro de usuarios Introdujo todos los campos requeridos correctamente − El email ingresado no cumpla con las características de una dirección de correo electrónico válido. − Dejo algún campo vacio. − Introdujo de manera errónea el código de validación. Escenario Iniciar Sesión Descripción: permite a un usuario registrado en el sistema poder autenticarse. Usuario: usuarios registrados en la aplicación Escenario Casos Validos Casos Inválidos Iniciar Sesión Ingresa el nombre de usuario y la contraseña correctamente − No ingresó el nombre de usuario. − No ingreso la contraseña. − El nombre de usuario no se 69 encuentra registrado en la aplicación. − Ingreso una contraseña inválida. Figura 3.10: Modelo de Interfaz de mensaje de error al autenticarse. Escenario Cargar Archivo de datos Descripción: permite a los usuarios registrados, la carga de archivos de datos eólicos en la aplicación. 70 Usuarios: usuario registrado en la aplicación. Escenario Casos Válidos Casos Inválidos Carga de archivo de datos El usuario provee la ruta de un archivo válido que no ha sido cargado en la aplicación − No provee una ruta válida de archivo. − El archivo ya ha sido cargado en la aplicación. − El archivo tiene un formato inválido. Figura 3.11: Modelo de Interfaz Visualización de error al cargar archivo existente. Escenario Consultar Datos Eólicos Descripción: permite a los usuarios consultar los datos eólicos generados en un periodo de tiempo específico. Usuarios: usuarios registrados en la aplicación. 71 Escenario Casos Válidos Casos Inválidos Consulta de datos eólicos − El usuario selecciona un periodo de tiempo, una ubicación válida y los tipos de datos a consultar. − El usuario no seleccionó un periodo de tiempo a consultar. − El usuario no seleccionó una locación donde se encuentra. − El usuario no seleccionó ningún tipo de dato a consultar. 72 CONCLUSIONES Durante el proceso de construcción de la aplicación se realizó una conceptualización, diseño y desarrollo del sistema. La solución que ha sido planteada para resolver el problema identificado en la fase de análisis, consistió en el desarrollo de una aplicación Web con una arquitectura Modelo Vista Controlador. Para la generación de el diseño de la base de datos seguimos un Modelo Conceptual de BD Relacionales (Conception des bases de donnees Relationnelles Jacky Akoka et isabelle Comyn- Wattiau Vuibert, Paris 2001, ISBN 2-7117-8678-i) que plantea diferentes métodologias entre ellas se encuentra MERISE, el cual plantea una serie de pasos a seguir, los cuales fueron de gran utilidad para obtener como producto un diseño conceptual bien definido. En lo que respecta a la fase de desarrollo, se utilizaron elementos de tecnología como lo es el AJAX para mayor rapidez de respuesta, lo cual favorece la usabilidad del sistema, así como el uso de hojas de estilos de forma de estandarizar la presentación de las interfaces del sistema. Por otro lado, en lo que concierne al proceso de desarrollo del proyecto, el uso de una metodología de desarrollo ágil basado en modelos, resultó ser una buena estrategia para reducir los riesgos en las etapas tempranas del proyecto y la obtención de resultados observables de manera continua. Con la aplicación desarrollada se logra agilizar el proceso de análisis y generación de graficas (histogramas y rosa de los vientos) con los datos obtenidos por las torres eólicas, permitiéndole a los investigadores de la institución del Estado Venezolano (MENPET), dedicarle mayor tiempo a el análisis detallado de las graficas obtenidas, así como también poder visualizar los datos de una manera más fácil y cómoda. 73 REFERENCIAS BIBLIOGRÁFICAS Asociación Danesa de la Industria Eólica (2003). [Sitio Web en línea]. Disponible: http://www.windpower.org/es/tour/wres/shear.htm. [Consulta: 2009, Abril]. Arias, M. (2001). Geografía aplicada. México: Venesa. Capel, R. (2002). Elementos de la geografía. Bogotá, Colombia: Argos. González, F., Terán, R., Méndez, J., Hernández, A. y Guillén F. (2006, Octubre 26-28). Evaluación del Recurso Eólico en Venezuela: Parte I. I Congreso Petrolero Energético ASME-UNEFA, Puerto Cabello, Venezuela Posso, F. (2002). Energía y ambiente: pasado, presente y futuro, parte dos: sistema energético basado en energías alternativas. En Geoenseñanza, vol 7, pp. 54-73. Táchira, Venezuela: Universidad de Los Andes. Párraga, M. (2005ª, Octubre 30). Energía alternativa en camino. El Universal en línea. Disponible: http://www.eluniversal.com/2005/10/30/eco_art_30201A.shtml. [Consulta: 2009, Abril]. Párraga, M. (2005b, Octubre 30).Vientos de Paraguaná y Los Roques propician proyecto eólico. El Universal en línea. Disponible: http://www.eluniversal.com/2005/10/30/ eco_art_30201D. shtml [Consulta: 2009, Abril]. Romay, L. (s/f). Potencial eólico de América Latina. Disponible: http://www.petroleoyv.com/ website/uploads/potencialeolico.pdf. [Consulta: 2009, Marzo]. Yañez, S. (2000). Medición del viento para realizar un correcto pronóstico energético. En Ammont. Alemania. Programa de aplicación para el análisis y atlas eólico WAsP (2002). [Sitio Web en línea]. Disponible: http://www.wasp.dk/Products/Wasp.html. [Consulta: 2009, Mayo]. "Rosa de los vientos", Enciclopedia Microsoft® Encarta® Online 2009 http://mx.encarta.msn.com © 1997-2009 Microsoft Corporation. Reservados todos los derechos. "Histogramas", Wikipedia Enciclopedia online http://es.wikipedia.org/wiki/Histograma. Manifiesto Ágil (2002) http://www.agilemanifesto.org/iso/es/ [Consulta: 2010, Noviembre] Frez, J. y Frías-Camacho,V., 1998, Distribución de energía sísmica en la región fronteriza de ambas Californias. GEOS, Vol. 18, No. 3, p. 189-196. 74 Poppendieck M., Poppendieck T. “Lean Software Development: An Agile Toolkit for Software Development Managers”. Addison Wesley. 2003. Schwaber K., Beedle M., Martin R.C. (2001) Agile Software Development with SCRUM. Prentice Hall. Fisher, N. (1993). Statistical analysis of circular data. Cambridge Univ. Press, UK, 277 pp. Frez, J. y Frías Camacho V. (1998). Distribución de energía sísmica en la región fronteriza de ambas Californias. GEOS, Vol. 18, No. 3, p. 189-196. Nava, F. (1998). Histogramas repartidos para el análisis de muestras estadísticas escasas. GEOS, Vol. 18, No. 3, p. 174-179. HASTIE, T., TIBSHIRANI, R y FRIEDMAN, J. (2001)The Elements of Sta-tistical Learning. Springer. New York. RAMSAY, J. O. y SILVERMAN, B. W. (1997) Functional Data Analysis. Springer. New York. 75 ANEXOS Diagramas pertinentes Figura 3.4: Diseño lógico parte I 76 Figura 3.5: Diseño lógico parte II