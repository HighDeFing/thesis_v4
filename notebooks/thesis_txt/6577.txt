UNIVERSIDAD CENTRAL DE VENEZUELA FACULTAD DE CIENCIAS ESCUELA DE COMPUTACIÓN Trabajo Especial de Grado presentado ante la Ilustre Universidad Central de Venezuela por los Bachilleres Jesús Armando Romero Isturiz C.I. V-20.483.420 Samuel David Quintero Granadillo C.I. V-18.528.076 Para optar al título de Licenciado en Computación Tutora: Profa. Yosly C. Hernández B Prof Carlos Yanes. Caracas, 09 de octubre de 2017 SISGAE: Sistema Web de Gestión Académica- Administrativa de las actividades de Extensión de la Facultad de Ciencias de la Universidad Central de Venezuela I II Agradecimientos El agradecimiento más importante es para Dios, por brindarme salud y permitirme terminar con éxito esta bonita etapa de mi vida, donde aprendí muchas cosas, conocí excelentes personas y logré alcanzar muchos más objetivos de los que me plantee. A mis padres: Gehnny Isturiz y Armando Romero, por ser mí apoyo en absolutamente todo lo que me propuse a lo largo de la licenciatura. A mis amigas: Rudy Thereze, Alyst Castro, por siempre estar detrás de mí para que terminará la Tesis. A mis colegas y hermanos: Felix Tovar, Humberto Ojedas, Alvaro Paz y Samuel Quintero por el apoyo brindado en el desarrollo de este Trabajo de Grado y en toda mi trayectoria universitaria. Jesús Romero III Agradezco principalmente a Dios por darme vida y salud y por haberme permitido realizar mi carrera en la universidad que siempre soñé, “La Casa que Vence la Sombra” y a la cual le debo todos aquellos conocimientos que me ayudaron a crecer tanto personal como profesionalmente. A mis padres, hermanos, mi abuela y mi novia quienes siempre han sido un apoyo incondicional y estuvieron detrás de mí para que culminara esta etapa con éxito. A mis compañeros y amigos de la Facultad de Ciencias con quienes compartí la mejor etapa de mi vida y que fueron participes de momentos buenos y momentos difíciles durante toda la trayectoria universitaria. Finalmente pero no menos importante, a todos los profesores quienes brindaron sus conocimientos para ser un buen profesional, a mis tutores Yosly Hernández y Carlos Yanes y a todo el personal de la Coordinación de Extensión y Fundaciens-UCV .quienes brindaron su apoyo durante el desarrollo del Trabajo Especial de Grado. Samuel Quintero iv Dedicatoria Este trabajo está dedicado, con mucho amor, a mis Padres, quienes son pilares en todo lo que hoy por hoy he construido y formado; son mi apoyo incondicional, mi admiración y los mejores padres del mundo. GRACIAS, los amo. Jesús Romero. A mis padres, quienes compartieron conmigo los momentos buenos y no tan buenos a lo largo de la carrera, quienes han sido mi apoyo incondicional en todo momento y han sido mi inspiración para ser un profesional. Samuel Quintero. v RESUMEN En la Facultad de Ciencias de la UCV se realizan actividades extracurriculares como Cursos, Talleres y Diplomados, las cuales son administradas por la Coordinación de Extensión en conjunto con FUNDACIENS. Una vez aprobada una actividad por el Consejo de Facultad, el Consejo de Escuela, el Consejo de Extensión y las Comisiones de Extensión se da inicio al proceso académico y administrativo donde realiza el registro de la actividad, preinscripción e inscripción de los participantes, calificación, emisión de certificados, entre otros. Dichas actividades se realizaban de forma manual (planillas) y herramientas ofimáticas, razón por la cual los datos no estaban centralizados y la comunicación entre la Coordinación de Extensión y FUNDACIENS-UCV no era eficiente, ocasionando demoras e inconvenientes durante su ejecución, por tal razón, el objetivo del Trabajo Especial de Grado (TEG), fue el desarrollo de un Sistema Web para la Gestión Académica-Administrativa de las actividades de Extensión. (SisGAE). Este Sistema es de gran importancia para mejorar la comunicación entre los entes relacionados y automatizar los procesos mencionados anteriormente. El desarrollo de SisGAE se realizó empleando una adaptación de la metodología AgilUs (Acosta, 2011) aplicando cada una de sus fases: requisitos, análisis, prototipaje y entrega, utilizando como herramientas de desarrollo los siguientes lenguajes: HTML, CSS (BOOTSTRAP) y JQuery del lado del cliente, PHP con el Framework laravel en su versión 5.1 de lado del servidor, y como manejador de base de datos PostgreSQL. SisGAE está conformado por cuatro (4) roles donde cada uno tiene diferentes funcionalidades: el primero es de Participante que es el encargado de preinscribirse e inscribirse en las actividades. El segundo de Profesor que es el encargado de aprobar las preinscripciones y aprobar o reprobar a los participantes. El tercero es Coordinación de Extensión que es el encargado de abrir las actividades y el cuarto es de tipo FUNDACIENS-UCV que es el encargado de aprobar las inscripciones y pagos de los participantes. Palabras Clave: SISGAE, gestión académica-administrativa, actividades de extensión, Laravel. vi ÍNDICE GENERAL Índice de Figuras ................................................................................................................. ix Índice de tablas .................................................................................................................... xi Introducción .......................................................................................................................... 1 Capítulo I: Problema de Investigación ............................................................................... 3 Contexto de la Investigación ............................................................................................... 3 Planteamiento del problema ................................................................................................ 4 Justificación ...................................................................................................................... 12 Objetivo General ............................................................................................................... 13 Objetivos Específicos ....................................................................................................... 13 Alcance ............................................................................................................................. 13 Metodología de desarrollo ................................................................................................ 14 Ciclo de Desarrollo de AgilUs ...................................................................................... 14 Artefactos ...................................................................................................................... 16 Antecedentes ..................................................................................................................... 16 Capítulo II. Marco Conceptual ......................................................................................... 17 Aplicación Informática ..................................................................................................... 17 Sistema web ...................................................................................................................... 18 Ventajas y desventajas .................................................................................................. 20 Arquitecturas de las aplicaciones web .............................................................................. 22 El Cliente .......................................................................................................................... 22 El Servidor ........................................................................................................................ 23 Tecnologías de Desarrollo Web ........................................................................................ 25 Lenguajes del lado del cliente ........................................................................................... 25 Lenguaje de marcado de hipertexto (HTML) ................................................................... 26 Hoja de estilos en cascada (CSS) ...................................................................................... 27 Lenguaje Javascript y Jquery ............................................................................................ 29 vii Lenguajes del lado del Servidor ........................................................................................ 30 Pre-procesardor de Hipertexto (PHP) ............................................................................... 30 Características del Lenguaje PHP ................................................................................. 31 Patrón de diseño MVC (Modelo Vista Controlador) ........................................................ 33 Frameworks MVC ............................................................................................................ 34 Base de Datos .................................................................................................................... 35 Características de una Base de Datos ............................................................................ 36 Ventajas de una Base de Datos ..................................................................................... 36 Desventajas de una Base de Datos ................................................................................ 37 Sistema de Base de Datos ................................................................................................. 38 Sistema Manejador de Base de Datos ............................................................................... 38 Funciones del SMBD .................................................................................................... 38 PostgreSQL ....................................................................................................................... 39 Características de PostgreSQL ...................................................................................... 39 Licencias ........................................................................................................................... 40 Capítulo III: Marco Aplicativo ......................................................................................... 41 Fase I: Requisitos .............................................................................................................. 41 Entrevistas ......................................................................................................................... 41 Tormentas de ideas ........................................................................................................... 42 Sondeos ............................................................................................................................. 43 Perfil de usuario ............................................................................................................ 44 Listas de Requerimientos Funcionales y No Funcionales ............................................. 45 Requerimientos Funcionales ......................................................................................... 45 Requerimientos comunes para cada perfil de usuario: .................................................. 45 Requerimientos para el perfil Coordinación de Extensión/ Administrador: ................. 46 Requerimientos para el perfil FUNDACIENS-UCV: ................................................... 46 Requerimientos para el perfil Participante: ................................................................... 46 Requerimientos para el perfil Profesor: ........................................................................ 46 Requerimientos No Funcionales ................................................................................... 46 Fase II: Análisis ................................................................................................................ 48 viii Prototipos de Interfaz .................................................................................................... 48 Guías de estilo ............................................................................................................... 49 Modelo de Casos de Uso ............................................................................................... 51 Modelo de objetos del dominio ..................................................................................... 53 Diseño Lógico y Físico de la Base de Datos ................................................................. 54 Plataforma de Desarrollo ............................................................................................... 59 Fase III: Prototipaje .......................................................................................................... 59 Arquitectura del Sistema ............................................................................................... 59 Desarrollo del Sistema ...................................................................................................... 60 Lista de Comprobación ..................................................................................................... 69 Fase IV: Entrega ............................................................................................................... 71 Pruebas de Usabilidad ................................................................................................... 71 Pruebas de Funcionalidad.............................................................................................. 74 Capítulo IV: Resultados ..................................................................................................... 77 Conclusiones ........................................................................................................................ 99 Recomendaciones .............................................................................................................. 101 Referencias ........................................................................................................................ 102 Anexos ................................................................................................................................ 108 Anexo A ............................................................................................................................. 109 ix Índice de Figuras Figura 1. Diagrama de flujo de la apertura, prosecución y finalización de una actividad. .... 8 Figura 2. Planilla de inscripción para cursos, talleres o diplomados ...................................... 9 Figura 3. Comprobante de pago ........................................................................................... 10 Figura 4. Ciclo de Vida de Metodología AgilUs .................................................................. 15 Figura 5 Esquema básico de una aplicación web ................................................................. 19 Figura 6. Tecnologías empleadas en el cliente y en el servidor web.................................... 23 Figura 7. Arquitectura de las aplicaciones web: todo en un servidor ................................... 24 Figura 8. Arquitectura de las aplicaciones web: separación servidor de datos. ................... 24 Figura 9. Arquitectura Modelo Vista Controlador ............................................................... 34 Figura 10. Tormenta de ideas ............................................................................................... 43 Figura 11. Prototipo de interfaz ............................................................................................ 48 Figura 12. Prototipo de interfaz 2 ......................................................................................... 49 Figura 13. Caso de Uso Nivel 0. ........................................................................................... 52 Figura 14. Caso de Uso Nivel 1. ........................................................................................... 53 Figura 15. Diagrama de objeto de Dominio SISGAE. ......................................................... 54 Figura 16. Tablas de la base de datos SISGAE. ................................................................... 55 Figura 17. Modelo Relacional SISGAE. .............................................................................. 58 Figura 18. Arquitectura en tres capas ................................... ¡Error! Marcador no definido. Figura 19. Conexión con la base de datos (1)....................................................................... 61 Figura 20. Conexión con la base de datos (2)....................................................................... 61 Figura 21. Controlador del modelo Registro. ....................................................................... 63 Figura 22. Archivo de rutas SISGAE. .................................................................................. 64 Figura 23. Parte del código para iniciar sesión. .................................................................... 65 Figura 24. Plantilla del header. ............................................................................................. 66 Figura 25. Vista de inicio de sesión. ..................................................................................... 66 Figura 26. Diagrama de flujo de SISGAE ............................................................................ 77 Figura 27. Página de inicio de SISGAE. .............................................................................. 78 Figura 28. Pestaña de Inicio, usuario “participante” ............................................................ 79 Figura 29. Pestaña de Actividades, usuario “participante” .................................................. 79 Figura 30. Confirmar preinscripción, usuario “participante” ............................................... 80 Figura 31. Pestaña de Actividades en curso, todos los roles ................................................ 81 Figura 32. Pestaña Mis Certificados, usuario “participante”................................................ 81 Figura 33. PDF historial de actividades, usuario “participante” .......................................... 82 Figura 34. Modelo de Comprobante, usuario “participante”................................................ 83 Figura 35. Pestaña de Inicio, usuario “Profesor”.................................................................. 84 Figura 36. PDF historial de actividades, usuario “Profesor” ................................................ 84 Figura 37. Pestaña de Validar Preinscripción, usuario “Profesor” ....................................... 85 Figura 38. Interfaz para Validar Preinscripción, usuario “Profesor” ................................... 85 Figura 39. Interfaz para Calificar un participante, usuario “Profesor” ................................. 86 Figura 40. Reporte de Pagos, usuario “Profesor” ................................................................. 87 Figura 41. Pestaña de Inicio, usuario “Coordinación de Extensión”................................... 88 x Figura 42. Pestaña de Abrir Actividad, usuario “Coordinación de Extensión” ................... 89 Figura 43. Interfaz de listado de participantes, usuario “Coordinación de Extensión” ........ 89 Figura 44. Reporte de Pagos, usuario “Coordinación de Extensión ..................................... 90 Figura 45. Pestaña de Administrar – Gestionar Usuarios, usuario “Coordinación de Extensión” ............................................................................................................................ 91 Figura 46. Pestaña de Administrar – Gestionar Actividades, usuario “Coordinación de Extensión” ............................................................................................................................ 92 Figura 47. Pestaña de Reportes, usuario “Coordinación de Extensión” .............................. 92 Figura 48. Interfaz de Reportes, usuario “Coordinación de Extensión” .............................. 93 Figura 49. Reporte de Actividades, usuario “Coordinación de Extensión” ......................... 94 Figura 50. Reporte de participantes, usuario “Coordinación de Extensión” ........................ 95 Figura 51. Pestaña de Inicio, usuario “FUNDACIENS-UCV” ............................................ 96 Figura 52. Pestaña de Validar Inscripción, usuario “FUNDACIENS-UCV” ...................... 96 Figura 53. Interfaz para Validar Inscripción, usuario “FUNDACIENS-UCV” ................... 97 Figura 54. Interfaz para Chequear recaudos, usuario “FUNDACIENS-UCV” ................... 98 xi Índice de tablas Tabla 1. Guía de Estilo de SISGAE ..................................................................................... 51 Tabla 2. Lista de Comprobación de SIGAE ......................................................................... 70 Tabla 3. Estándares de Usabilidad. (Acosta, 2011) .............................................................. 71 Tabla 4. Resultados de Prueba de Usabilidad ...................................................................... 73 Tabla 5.Descripción de CU Iniciar Sesión. ........................................................................ 110 Tabla 6. Descripción de CU Recuperar Contraseña. .......................................................... 111 Tabla 7. Descripción de CU Editar perfil. .......................................................................... 112 Tabla 8.Descripción de CU Editar foto. ............................................................................. 113 Tabla 9. Descripción de CU Cambiar Correo.................................................................... 113 Tabla 10. Descripción de CU Cambiar Contraseña. ........................................................... 114 Tabla 11.Descripción de CU Preinscribir Actividad. ......................................................... 114 Tabla 12.Descripción de CU Inscribir Actividad. .............................................................. 115 Tabla 13. Descripción de CU Abonar Pago. ...................................................................... 115 Tabla 14.Descripción de CU Ver Certificados. .................................................................. 116 Tabla 15. Descripción de CU Generar Historial................................................................. 116 Tabla 16. Descripción de CU Calificar Participante. ......................................................... 117 Tabla 17. Descripción de CU Validar Preinscripción. ....................................................... 118 Tabla 18. Descripción de CU Generar Historial (profesor)................................................ 118 Tabla 19. Descripción de CU Abrir Curso. ........................................................................ 120 Tabla 20. Descripción de CU Generar Reportes. ............................................................... 120 Tabla 21. Descripción de CU Gestionar Actividades. ........................................................ 121 Tabla 22. Descripción de CU Gestionar Usuarios. ............................................................. 121 Tabla 23. Descripción de CU Validar Inscripción. ............................................................ 123 Tabla 24. Descripción de CU Validar Pagos. ..................................................................... 123 1 Introducción Las Tecnologías de Información y Comunicaciones (TIC), han tenido en Venezuela una gran relevancia, ya que el uso de las mismas ha generado avances significativos en los sectores de la educación, la salud, entre otros. Toda organización exitosa, se ha concientizado de la importancia del manejo de las tecnologías de información (TI), y es que han rebasado el papel inicial que tuvieron asignado, pasando de ser simples herramientas que facilitaban la operación en las empresas, a establecerse como factores estratégicos y críticos de éxito para una organización. (Tovar, Castillo, 2015). Los sistemas “Web” se pueden utilizar en cualquier navegador “Web” como por ejemplo “chrome”, “firefox” e “Internet Explorer”, sin importar el sistema operativo. Para utilizar las aplicaciones “Web” es innecesario instalarlas en cada computadora, ya que los usuarios se conectan al servidor donde se aloja el sistema. Debido a que la puesta en práctica de Sistemas de Información facilitan y mejoran los tiempos de respuesta en las tareas dentro de las organizaciones y empresas, se desarrolló el presente Trabajo Especial de Grado (TEG) que lleva como nombre: Sistema “Web” para la Gestión Académica-Administrativa de las Actividades de Extensión (SisGAE). La finalidad de este sistema es brindar mayor sencillez, ahorro de tiempo y material de carga al conjunto de actividades que conlleva el proceso académico y administrativo que representa la formación, capacitación y difusión de la información de los cursos, talleres y diplomados que ofrece la Coordinación de Extensión de la Facultad de Ciencias de la UCV, con el apoyo de FUNDACIENS-UCV, consolidando las acciones y hacerlas efectivas y eficientes. La importancia de este trabajo radica en que SisGAE brindará a la Coordinación de Extensión y a FUNDACIENS-UCV la oportunidad de realizar las actividades académico- administrativas de su programa de formación de talento humano de forma automática, mejorando la eficiencia del proceso y la interacción entre los distintos usuarios que requieren información oportuna y precisa sobre las operaciones administrativas y bancarias 2 en torno al proceso de aprobación de su solicitud de ingreso a los cursos o diplomados y a su inscripción en los mismos. En virtud de lo expuesto el presente Trabajo Especial de Grado (TEG), consta de cuatro (4) capítulos, los cuales corresponden al Problema de Investigación, Marco conceptual, Marco Aplicativo y Resultados, así como también la conclusión, las recomendaciones, las referencias bibliográficas, el Manual Técnico y el manual de Usuarios del Sistema que brindan soporte a SisGAE. 3 Capítulo I: Problema de Investigación En este capítulo se describe el problema que fue identificado en torno a la Gestión Académica y Administrativa de las actividades que ofrece la Coordinación de Extensión de la Facultad de Ciencias de la U.C.V., en conjunto a FUNDACIENS-UCV. Estas actividades son cursos, talleres y diplomados; los planteamientos que justificaron la solución del problema, los objetivos generales y específicos, el alcance y la metodología aplicada en este TEG. Contexto de la Investigación La Coordinación de Extensión de la Facultad de Ciencias de la UCV y FUNDACIENS-UCV ofrecen actividades de orden extracurricular a los miembros de la comunidad nacional, orientadas a su formación profesional, como diplomados, cursos y talleres en sus modalidades presenciales, a distancia o mixtas, con una amplia oferta de posibilidades de participación. Esto en el contexto de la Misión y Visión institucional que señalan, respectivamente: “Contribuir a la solución de los problemas más sentidos de la sociedad venezolana y a la formación integral, principios éticos y desarrollo de la capacidad de servicio de los futuros profesionales y científicos de la Facultad de Ciencias de la UCV, asumiendo su lealtad a la Universidad y al país, a sus valores y a sus tradiciones, entendidos como patrimonio colectivo”, (CEFC, 2013). Y como Visión: “Convertir a la Facultad de Ciencias en una institución líder por excelencia en la promoción, desarrollo y ejecución de la extensión universitaria, contribuyendo a la formación de ciudadanos sensibilizados con los problemas de la sociedad venezolana que afectan su desarrollo como país y preparados para abordar su solución”, (CEFC, 2013). La Coordinación de Extensión de la Facultad de Ciencias de la UCV describe en su página “Web” los siguientes objetivos: 1. Insertar la Extensión en el diseño curricular de la Facultad. 2. Organizar la Coordinación. 4 3. Combinar financiamiento interno y externo para el desarrollo y autogestión de las actividades de extensión:  Comunicación.  Cultura.  Deportes.  Investigación interinstitucional.  Contacto con egresados.  Docencia y cursos de Extensión. 4. Contribuir a la infraestructura, adquisición de equipos y mantenimiento con ingresos extraordinarios. 5. Mantener una estrecha comunicación entre FUNDACIENS-UCV y la Coordinación de Extensión para validar los pagos de los participantes y así permitir su participación en las actividades. Planteamiento del problema Dentro de la Facultad de Ciencias de la UCV se ofertan actividades de extensión tales como: diplomados, talleres y cursos cortos. Su proceso de gestión lo llevan entre la Coordinación de Extensión y FUNDACIENS-UCV, utilizando algunas herramientas ofimáticas y procesos manuales (Tovar, Castillo, 2015). La Coordinación de Extensión es la responsable de la gestión académica; desde la tramitación de la propuesta por parte de la dependencia respectiva o el profesor responsable de la actividad docente, ante el Consejo de Extensión, y luego ante el Consejo de Facultad, para su aval y aprobación de dictado, respectivamente; hasta la coordinación de su ejecución en cuanto a los recursos de infraestructura física y tecnológica necesarios para su desarrollo. Mientras que FUNDACIENS-UCV es la responsable del proceso administrativo relacionado con los procesos de preinscripción, inscripción y pago de honorarios profesionales, equipos, materiales o suministros. La oferta de las actividades, su prosecución y dictado se sigue a través un proceso el cual se describe a continuación. 5 1. Aprobación de la actividad (curso, diplomado o taller). Este proceso se realiza con SIGADEX (Tovar, Castillo, 2015) el cual se explica en la sección de Antecedentes. 2. Registro de la información. La Coordinación de Extensión envía a FUNDACIENS- UCV información sobre la actividad (nombre del curso, objetivos, programa, número de participantes, profesores o facilitadores, cronograma de desarrollo, costo desglosado, etc). 3. Registro administrativo. FUNDACIENS-UCV elabora un libro auxiliar de la actividad para llevar el control de los pagos. 4. Divulgación de la actividad. Actualmente, esto se hace muy poco por falta de personal y de medios para realizar dicha divulgación, como por ejemplo: página “web”, “blog”, “twitter”, o “facebook”. 5. Registro de aspirantes. Recibir lista de aspirantes o preinscritos en el curso, diplomado o taller. 6. Facturación. Solicitud de factura personalizada de cada participante. El participante llena la planilla de inscripción con sus datos: personales, laborales, académicos y administrativos. Estos últimos muy importantes para la facturación. Se elaboran las facturas. 7. El participante paga en cualquiera de los bancos indicados por FUNDACIENS- UCV el costo total de la actividad o una alícuota de la misma acordada con la Coordinación de Extensión. 10. El participante entrega comprobante de pago (depósito bancario o transferencia bancaria que incluya número del comprobante, nombre del banco), con todos los datos del depositante (nombre, cédula, teléfono, dirección fiscal, monto del depósito). 11. Se verifica el ingreso del dinero en el banco en las cuentas bancarias de la Fundación, con los datos del comprobante de pago. 12. Registro en el sistema administrativo. 13. Imprime comprobante de pago del participante. 14. Se entrega información del pago del participante al auxiliar contable. 6 15. Se registra ingreso del pago del participante en libro auxiliar y libro Banco. 16. Se calcula comisión (10% del costo del curso sin contar IVA) y se registra en los libros auxiliares y banco. 17. Se registra el cobro que hace la Coordinación de Extensión (20% de los costos asociados a los gastos operativos del proyecto sin contar con el IVA). 18. Se entrega factura a participante o participante. 19. Se elabora lista final de inscritos. 20. Se reciben los comprobantes de retención, si la empresa que financia el curso es agente de retención de tributos. 21. Se reciben las solicitudes de reintegro en el caso de un depósito indebido. 22. Se reciben las solicitudes de adelanto de gastos firmadas por el responsable del proyecto destinadas a cubrir gastos menores. 23. Se reciben las solicitudes de compra de materiales, suministros o equipos necesarios para apoyar la ejecución del proyecto, firmadas por el responsable del proyecto. 24. Se reciben las solicitudes u órdenes de pago firmadas por el responsable del proyecto para cumplir con los honorarios del personal que labora en el proyecto. 25. Se efectúa la orden de pago para cubrir las solicitudes. 26. Se ejecutan las solicitudes de adelanto de gastos firmadas por el responsable del proyecto destinadas a cubrir gastos menores, direccionadas por el administrador. 27. Se ejecutan las solicitudes de compra de materiales, suministros o equipos necesarios para apoyar la ejecución del proyecto, firmadas por el responsable del proyecto, y direccionadas por el administrador. 28. Se ejecutan las solicitudes u órdenes de pago firmadas por el responsable del proyecto para cumplir con los honorarios del personal que labora en el proyecto, después de ser revisadas y autorizada por el administrador. 7 29. Se revisan y verifican los registros en libros auxiliares el ingreso del depósito, las solicitudes de reintegro y la orden de pago. 30. Se hace seguimiento del cronograma de ejecución del proyecto. 31. Al completar 2 de los módulos se manda la lista para elaborar los Diplomas o certificados de asistencia que se entregaran a cada participante. 8 La figura 1 ilustra un diagrama de actividades con los pasos mencionados anteriormente: Figura 1. Diagrama de flujo de la apertura, prosecución y finalización de una actividad. 9 En la figura 2 se muestra la planilla que se utiliza para la inscripción de talleres cursos y diplomados. . Figura 2. Planilla de inscripción para cursos, talleres o diplomados 10 En la figura 3 se muestra el comprobante de pago que se entrega al participante al verificar el ingreso. Figura 3. Comprobante de pago 11 Los pasos mencionados anteriormente causan los inconvenientes que se describen a continuación: Existe un problema de orden y seguimiento en los procesos que realiza la Coordinación de Extensión y FUNDACIENS-UCV ya que no existe un mecanismo que facilite la comunicación, donde una dependencia pueda estar al tanto de las actividades que realiza la otra. El proceso de divulgación de las actividades no se realiza con frecuencia por falta de medios y por no tener de manera centralizada los datos de los participantes que ya han asistido o cursado alguna de las actividades realizadas por la Coordinación de Extensión. Una vez iniciado el curso, taller o diplomado no existe una forma sencilla para que tanto la Coordinación Extensión como los participantes, profesores y la FUNDACIENS- UCV tengan acceso a información de interés, para ello deben buscar la información en los archivos en físico. De la misma forma al finalizar el curso, taller o diplomado también se requiere de información de interés por parte de los participantes, profesores, la Coordinación de Extensión y FUNDACIENS-UCV. Esto son algunos de los inconvenientes: En el caso de los profesores no existe una forma práctica para saber los cursos que ha dictado anteriormente. Los participantes no tienen una forma fácil para saber cuáles actividades han cursado y finalizado anteriormente y en caso de estar finalizadas poder acceder a un comprobante de finalización. La Coordinación de Extensión y FUNDACIENS-UCV no pueden llevar de forma sencilla el registro de las actividades dictadas por trimestre, semestre y año. Debido a la problemática mencionada anteriormente, surge la siguiente interrogante: ¿Qué mecanismo permite darle un seguimiento las actividades aprobadas por la Coordinación de Extensión desde la inscripción hasta la finalización de las mismas? 12 Justificación Los avances tecnológicos han permitido una mejor utilización de los recursos disponibles en diversas áreas. Con el surgimiento del Internet se han desarrollado Sistemas Web para distintos fines, no sólo en el área comercial, sino también en el área educativa. Lo más interesante de estas aplicaciones es que para poder utilizarlas solo se necesita un computador o dispositivo móvil con acceso a internet por lo que pueden ser utilizadas desde la comodidad del hogar, la oficina de trabajo, la universidad etc. La Coordinación de Extensión maneja grandes cantidades de información a la cual es necesaria acceder con frecuencia y de manera sencilla por lo tanto la inclusión de un sistema web es de gran importancia ya que esta les permitirá el manejo centralizado y seguro de la información. Además SISGAE será un beneficio no solo para la Coordinación de Extensión sino también para los participantes, profesores y FUNDACIENS-UCV ya que también podrán tener acceso a la información referente a cursos, talleres y diplomados en los cuales hayan participado. También es importante destacar que los sistemas web proveen independencia de plataforma, es decir para que se pueda ejecutar sólo se necesita disponer de un navegador web y no es necesario adaptar el código del sistema cada una de ellos. Por esta razón, sin importar el sistema operativo que utilicen los participantes, profesores, Coordinación de Extensión o FUNDACIENS-UCV siempre que dispongan de un navegador web podrán acceder a la aplicación y obtener la información requerida de una manera fácil. Las características mencionadas anteriormente son ventajas para todos los involucrados en las Actividades de Extensión ya que mejoran el tiempo para realizar estas actividades y proporcionan comodidad para el usuario. Además de ordenar todo el proceso administrativo 13 Objetivo General Desarrollar un sistema web para la gestión Académica-Administrativa de las actividades de Extensión de la Facultad de Ciencias de la Universidad Central de Venezuela (SISGAE). Objetivos Específicos Los objetivos específicos son los siguientes: 1. Determinar la arquitectura del Sistema (SISGAE) 2. Desarrollar la interfaz de usuario. 3. Diseñar del modelo lógico y físico de la base de datos. 4. Implementar el sistema web . 5. Aplicar pruebas de funcionalidad y usabilidad. 6. Instalar el sistema en el servidor del Centro de Computación de la Facultad de Ciencias. Alcance Este trabajo especial de grado (TEG) se enfocó en el desarrollo de un sistema web para gestionar las actividades de la Coordinación de Extensión, esta aplicación tendrá diversas funcionalidades de acuerdo a quien ingrese a la misma (manejo de roles), ya que será utilizada por participantes, profesores, la Coordinación de Extensión y FUNDACIENS-UCV, para ello, contará con un módulo de autenticación que gestionara que tipo de usuario está ingresando a la aplicación y de esta manera mostrar las diversas acciones que podrá realizar el usuario al ingresar a la misma. Además el sistema contará con una interfaz adaptativa (responsive) para que sea desplegable en dispositivos móviles. También se incluirán aspectos de accesibilidad como contraste y cambio de tamaño de fuente para personas con discapacidad. Los aspectos principales que abarcó el sistema fue: 14  Control administrativo: la Coordinación de Extensión y FUNDACIENS- UCV pueden consultar los cursos, talleres o diplomados que se estén dictando, abrir y cerrar el proceso de inscripción para quienes quieran participar en las actividades de Extensión, verificar la cantidad de participantes inscritos por cada curso, entre otros.  Control académico: realizar el proceso de inscripción en línea, una vez inscritos pueden visualizar su comprobante de inscripción. Ver el estatus (en proceso, culminado) del curso actual y los cursos realizados anteriormente. De la misma manera los profesores pueden verificar el estatus del curso que este dictando, así como acceder al listado de participantes del curso. Consultar los cursos dictados en fechas anteriores.  Gestión de pagos: FUNDACIENS-UCV puede verificar el estatus de pago del participante para realizar la formalización de la inscripción. Metodología de desarrollo Esta propuesta fue desarrollada aplicando la metodología AgilUs ya que por ser una metodología ágil cuenta con un alto grado de soporte al cambio dentro de los requerimientos, lo que un aspecto natural, inevitable e incluso deseable del desarrollo de un software. Además en sus dos (2) de su fases como lo son “Entrega” y “Prototipaje” involucra mucho al usuario final, por lo que brinda un grado alto de usabilidad del sistema. Ciclo de Desarrollo de AgilUs Según (Acosta, 2011) el proceso de desarrollo de software de AgilUs engloba cinco (5) etapas las cuales son:  Requisitos: se hace el levantamiento de requerimientos, para la cual se realizan actividades como: tormenta de ideas, entrevistas, sondeos o cuestionarios, además se crean los perfiles de usuario y se listan los requerimientos funcionales y no funcionales. 15  Análisis: se utilizan diagramas realizados bajo la notación estándar del Lenguaje de Modelado Unificado (UML, por sus siglas en inglés Unified Modeling Language), específicamente los Modelos de Casos de Uso y Objeto De Dominio, con esto se definen las funcionalidades del sistema.  Prototipaje: se desarrolla un prototipo rápido de la interfaz de usuario a partir de los patrones de interacción, al cual se le van incorporando funcionalidades hasta llegar al producto final.  Entrega: se tiene el software final al que se le realizan pruebas que certifiquen que es un software usable y sin errores, para ello se utilizan las pruebas de aceptación. En la figura 4 se puede apreciar el ciclo de vida de AgilUs, Acosta (2011). Figura 4. Ciclo de Vida de Metodología AgilUs (Acosta, 2011) 16 Artefactos Según Acosta (2011), cada etapa de la metodología, posee sus propios artefactos, a continuación se describen los que se usaron en el proceso de desarrollo de este proyecto: entrevistas, tormentas de ideas, perfil de usuario, guías de estilo, listas de requerimientos funcionales y no funcionales, modelo de casos de uso y de objeto de dominio y pruebas de aceptación. Plantea el desarrollo de un sistema, partiendo de un prototipo de interfaz de usuario y de la evaluación de usabilidad desde el inicio del sistema, por tal razón se decidió utilizar esta metodología, debido a que la usabilidad es importante en el éxito de un software dirigido a un grupo de usuarios, se desarrolló un sistema de fácil uso y aprendizaje, donde el diseño de una interfaz usable fue fundamental. Antecedentes Para el 2015 existe un proceso para la aprobación de las actividades académicas en el cual participan diversas dependencias como el Consejo de Facultad, los Consejos de las respectivas Escuelas, el Consejo de Extensión y las Comisiones de Extensión. Este proceso se realiza de forma automática a través de un sistema web llamado SIGADEX desarrollado por los Licenciados Félix Tovar e Ilvany Castillo el cual almacena en base de datos los cursos aprobados por las dependencias mencionadas anteriormente. Esta data es almacenada con el fin de ser consumida por otra aplicación a través de un servicio web para realizar el proceso de inscripción y seguimiento de los cursos talleres o diplomados que ya han sido aprobados. En este capítulo se enfatizó el problema de investigación que nos condujo a la realización de un Sistema Web como solución, fue definido el objetivo general y los objetivos específicos, para el correcto desarrollo del proyecto, también fue estimado el alcance y seleccionada la metodología a ser utilizada y por último los antecedentes que preceden a SISGAE En el siguiente capítulo se detallará, el sustento teórico de los Sistemas Web y las tecnologías, frameworks y licencias que permitieron el desarrollo de SISGAE 17 Capítulo II. Marco Conceptual En este capítulo se presenta el sustento teórico relacionado con el trabajo de investigación, que sirven de fundamento para el desarrollo del TEG. El mismo se divide en dos grandes secciones, las cuales se describen a continuación: La primera sección, hace referencia a que es una aplicación informatica, que es un Sistema Web, así como también, sus principales características, ventajas y desventajas. Se explica además la arquitectura Cliente-Servidor, sus componentes para luego enumerar sus principales ventajas. Finalmente, se explicará el patrón de diseño MVC (Modelo-Vista- Controlador), que se encarga de separar las funciones del cliente, el servidor Web y el servidor de Base de Datos. La segunda sección, describe los recursos tecnológicos necesarios para el desarrollo de SISGAE, se definen las tecnologías del lado del cliente las cuales son: HTML, CSS, JavaScript, Boostrap, JQuery y AJAX, las tecnologías del lado del servidor, tales como: Apache y PHP y las del servidor de bases de datos PostgreSQL. Aplicación Informática De acuerdo con Benítez (2012) una aplicación informática es un tipo de software que permite al usuario realizar uno o más tipos de trabajo. Son, aquellos programas que permiten la interacción entre usuario y computadora (comunicación), dando opción al usuario a elegir opciones y ejecutar acciones que el programa le ofrece. Existen innumerable cantidad de tipos de aplicaciones. Los procesadores de texto y las hojas de cálculo son ejemplos de aplicaciones informáticas, mientras que los sistemas operativos o los programas de utilidades (que cumplen tareas de mantenimiento) no forman parte de estos programas. Las aplicaciones pueden haber sido desarrolladas a medida (para satisfacer las necesidades específicas de un usuario) o formar parte de un paquete integrado (como el caso de Microsoft Office). De acuerdo con la definición anterior se puede decir que una aplicación informática es un software que permite al usuario realizar una tarea específica a través del uso de una 18 computadora y ayudan al usuario a resolver tareas complicadas como contabilidad, redacción de documentos, entre otras. Sistema web De acuerdo con Luján (2002) un sistema web es un tipo especial de aplicación cliente/ servidor, donde tanto el cliente (el navegador, explorador o visualizador) como el servidor (el servidor web) y el protocolo mediante el que se comunican (HTTP) están estandarizados y no han de ser creados por el programador de aplicaciones. El protocolo HTTP forma parte de la familia de protocolos de comunicaciones TCP/IP, que son los empleados en Internet. Estos protocolos permiten la conexión de sistemas heterogéneos, lo que facilita el intercambio de información entre distintos ordenadores. HTTP se sitúa en el nivel 7 (aplicación) del modelo OSI. "Una aplicación a la que se accede a través de internet u otras redes similares como intranet, que no requiere instalación para los usuarios. Es decir, es una aplicación de software codificada en un lenguaje hecho para los navegadores web en la que es el navegador el que la ejecuta. Estas aplicaciones contienen elementos que permiten interactuar al usuario con la información que contienen" (Enubes, 2013, párr. 1). A su vez, Diccionario de Informática (2012) hace referencia a que es cualquier programa que es accedida vía web por una red como internet o una intranet. De acuerdo a la definiciones anteriores un sistema web se puede definir como un programa al que un usuario accede a través de Internet mediante un navegador web (Internet Explorer, Opera, Mozilla Firefox, Google Chrome, Safari y otros) o una Intranet (red entre computadores que sirve para compartir recursos y tiene uso exclusivo dentro del sitio donde fue creada), la cual se encuentra alojada en un servidor web. http://www.alegsa.com.ar/Dic/aplicacion.php http://www.alegsa.com.ar/Dic/web.php http://www.alegsa.com.ar/Dic/red.php http://www.alegsa.com.ar/Dic/internet.php http://www.alegsa.com.ar/Dic/intranet.php 19 En la figura 5 se puede apreciar el esquema básico de una aplicación web. Figura 5 Esquema básico de una aplicación web Fuente (Lujan, 2002). De acuerdo a los aportes de Diccionario de Informática (2012), Enubes (2013) y Pereda (2007) las características principales de una aplicación web son:  Reside en un Servidor Web.  Se puede acceder a ella desde cualquier lugar y en cualquier momento siempre y cuando se disponga de conexión a Internet.  Es escrita en lenguajes soportados por navegadores web, pues son ellos quienes la ejecutan independientemente del sistema operativo en el que se encuentre.  Puede ser accedida por miles de usuarios a la vez. En el caso de que llegase a actualizarse la aplicación, todos los usuarios estarán al tanto de esta actualización de manera inmediata.  No requiere de la instalación de programas adicionales. Para su acceso, simplemente se requiere hacer uso de un navegador web y conexión a Internet como se comentó anteriormente.  Es Portable, es decir que es capaz de ejecutarse sin importar la plataforma en la que se encuentre.  Es usable, una aplicación web es sencilla y entendible para todos los usuarios. 20 Ventajas y desventajas De acuerdo con Luján (2002), las aplicaciones web presentan las siguientes ventajas y desventajas: Ventajas  El desarrollo explosivo de Internet y en especial de la WWW se debe a la aceptación por todo el mundo de los estándares y tecnologías que emplea: medio de transporte común (TCP/IP), servidor (HTTP) y lenguaje de creación de páginas (HTML) estandarizados.  Muchas empresas han descubierto que las anteriores tecnologías se pueden emplear en las aplicaciones cliente/servidor que emplean. De esta forma nace el concepto de intranet: usar las tecnologías de Internet para implementar las tradicionales aplicaciones cliente/servidor dentro de una empresa. Además, una vez que se tiene una aplicación que funciona en una intranet, aparece la posibilidad de permitir su uso a través de Internet, lo que facilita el teletrabajo o la movilidad de los empleados de una empresa  Una ventaja clave del uso de aplicaciones web es que el problema de gestionar el código en el cliente se reduce drásticamente. Suponiendo que existe un navegador o explorador estándar en cada cliente, todos los cambios, tanto de interfaz como de funcionalidad, que se deseen realizar a la aplicación se realizan cambiando el código que resida en el servidor web. Compárese esto con el coste de tener que actualizar uno por uno el código en cada uno de los clientes (imaginemos que tenemos 2.000 ordenadores clientes). No sólo se ahorra tiempo porque reducimos la actualización a una sólo máquina, sino que no hay que desplazarse de un puesto de trabajo a otro (la empresa puede tener una distribución geográfica amplia). 21  Una segunda ventaja, relacionada con la anterior, es que se evita la gestión de versiones. Se evitan problemas de inconsistencia en las actualizaciones, ya que no existen clientes con distintas versiones de la aplicación.  Una tercera ventaja es que si la empresa ya está usando Internet, no se necesita comprar ni instalar herramientas adicionales para los clientes.  Otra ventaja, es que de cara al usuario, los servidores externos (Internet) e internos (intranet) aparecen integrados, lo que facilita el aprendizaje y uso.  Una última ventaja, pero no menos importante, es la independencia de plataforma. Para que una aplicación web se pueda ejecutar en distintas plataformas (hardware y sistema operativo), sólo se necesita disponer de un navegador para cada una de las plataformas, y no es necesario adaptar el código de la aplicación a cada una de ellas. Además, las aplicaciones web ofrecen una interfaz gráfica de usuario independiente de la plataforma (ya que la plataforma de ejecución es el propio navegador). Desventaja  Una desventaja, que sin embargo está desapareciendo rápidamente, es que la programación en la web no es tan versátil o potente como la tradicional. El lenguaje HTML presenta varias limitaciones, como es el escaso repertorio de controles disponibles para crear formularios. Por otro lado, al principio las aplicaciones web eran básicamente de solo lectura permitían una interacción con el usuario prácticamente nula. Sin embargo, con la aparición de nuevas tecnologías de desarrollo como Java, JavaScript y ASP, esta limitación tiende a desaparecer. 22 Arquitecturas de las aplicaciones web Según Luján (2002) las aplicaciones web se basan en una arquitectura cliente/servidor: por un lado está el cliente (el navegador, explorador o visualizador) y por otro lado el servidor (el servidor web). Existen diversas variantes de la arquitectura básica según como se implementen las diferentes funcionalidades de la parte servidor. De acuerdo con Lerma-Blasco (2013) la arquitectura de las aplicaciones web consta de máquinas conectadas a una red, por lo general, Internet o una Intranet corporativa que sigue el esquema cliente-servidor en nuestro caso de servidores web. Surgió a mediados de la década de 1990, durante la etapa de la Web 1.0 con la aparición de las primeras conexiones de acceso conmutado (RTC, RDSI, GSM, GPRS) y de las etiquetas multimedia del estándar HTML y la incorporación de pequeños programas realizados en Java, llamados applets. El Cliente Según Luján (2002) el cliente web es un programa con el que interacciona el usuario para solicitar a un servidor web el envío de los recursos que desea obtener mediante HTTP. La parte cliente de las aplicaciones web suele estar formada por el código HTML que forma la página web más algo de código ejecutable realizado en lenguaje de script del navegador (JavaScript o VBScript) o mediante pequeños programas (applets) realizados en Java. También se suelen emplear plug-ins que permiten visualizar otros contenidos multimedia (como Macromedia Flash), aunque no se encuentran tan extendidos como las tecnologías anteriores y plantean problemas de incompatibilidad entre distintas plataformas. Por tanto, la misión del cliente web es interpretar las páginas HTML y los diferentes recursos que contienen (imágenes, sonidos, etc.). Lujan (2002) también plantea que las tecnologías que se suelen emplear para programar el cliente web son:  HTML. 23  CSS.  DHTML.  Lenguajes de script: JavaScript, VBScript, etc. El Servidor De acuerdo con Mateu (2004) un servidor web es un programa que atiende y responde a las diversas peticiones de los navegadores, proporcionándoles los recursos que solicitan mediante el protocolo HTTP o el protocolo HTTPS (la versión segura, cifrada y autenticada de HTTP). Un servidor web básico tiene un esquema de funcionamiento muy sencillo, ejecutando de forma infinita el bucle siguiente: 1. Espera peticiones en el puerto TCP asignado (el estándar para HTTP es el 80). 2. Recibe una petición. 3. Busca el recurso en la cadena de petición. 4. Envía el recurso por la misma conexión por donde ha recibido la petición. 5. Vuelve al punto 2. En la figura 6 se muestran algunas de las tecnologías utilizadas tanto en el cliente como en el servidor. Figura 6. Tecnologías empleadas en el cliente y en e l servidor web Fuente (Lujan, 2002). 24 Las arquitecturas más comunes son: Todo en un servidor: un único ordenador aloja el servicio de HTTP, la lógica de negocio y la lógica de datos y los datos. El software que ofrece el servicio de HTTP gestiona también la lógica de negocio. En la figura 7 se presenta la arquitectura de una aplicación web donde la lógica de negocios y la lógica de datos se encuentran en un solo servidor. Figura 7. Arquitectura de las aplicaciones web: todo en un servidor Fuente (Lujan, 2002). Servidor de datos separado: a partir de la arquitectura anterior, se separa la lógica de datos y los datos a un servidor de bases de datos específico En la figura 8 se ilustra la separación del servidor web y el servidor de base de datos Figura 8. Arquitectura de las aplicaciones web: separación servidor de datos. 25 Tecnologías de Desarrollo Web En base a Morales (2011), las tecnologías web son aquellas que proporcionan al desarrollador un conjunto de herramientas que facilitan el desarrollo web. Se dividen en tecnologías del lado del cliente (lenguajes procesados por el navegador web sin ningún tratamiento previo) y del servidor (lenguajes reconocidos, ejecutados e interpretados del lado del servidor y enviados al cliente en un formato comprensible para él). Es importante mencionar que tanto los lenguajes del cliente como los del servidor son independientes, lo cual permite que la página pueda ser alojada en cualquier sitio. Y a su vez, un lenguaje de lado servidor es independiente del navegador utilizado, por lo que no necesitará algún plug-in para visualizar correctamente cualquier página. La tecnología web permite el desarrollo de aplicaciones basadas en el modelo cliente/servidor. Los sistemas basados en tecnología web ofrecen ventajas enormes en cuanto a eficiencia, ya que son flexibles y rápidos. Además puede evitar instalaciones complicadas en sus sistemas informáticos y los requisitos para el hardware necesario son limitados. Actualmente existen una gran variedad de tecnologías que se pueden utilizar en el desarrollo de un sistema web, donde una de sus principales diferencias viene en función de si se ejecutan en el servidor o en el cliente. Lenguajes del lado del cliente Torre (2006) afirma que los lenguajes del lado cliente (entre los cuales no sólo se encuentra HTML sino también Java, JavaScript y CSS que son lenguajes incluidos en el código HTML) son aquellos que pueden ser directamente "digeridos" por el navegador y no necesitan un pre tratamiento. González (2007) expone que un lenguaje del lado del cliente es totalmente independiente del servidor, lo cual permite que la página pueda ser albergada en cualquier sitio. A pesar de esto el producto final no se verá bien si el ordenador del cliente no tiene los complementos adecuados El código tanto del hipertexto como de los scripts, son accesibles por cualquiera y eso puede afectar la seguridad. Matos expone que el código 26 necesario para crear los efectos y funcionalidades se incluye dentro del mismo archivo HTML y generalmente son scripts o plugins. Cuando una página HTML contiene alguna de las tecnologías de cliente, el navegador se encarga de interpretarlas y ejecutarlas para realizar los efectos y funcionalidades. Lenguaje de marcado de hipertexto (HTML) Peralta (2009) señala que el HyperText Markup Language (HTML por sus siglas en inglés) es el lenguaje con el que se definen las páginas web. Se trata de un conjunto de etiquetas que sirven para definir el texto y otros elementos que compondrán una página web. El HTML es un lenguaje de marcación de elementos para la creación de documentos hipertexto, muy fácil de aprender, lo que permite que cualquier persona, aunque no haya programado en la vida, pueda enfrentarse a la tarea de crear una web. HTML es fácil y pronto podremos dominar el lenguaje. Más adelante se conseguirán los resultados profesionales gracias a nuestras capacidades para el diseño y nuestra vena artista, así como a la incorporación de otros lenguajes para definir el formato con el que se tienen que presentar las webs, como CSS (Muller, 2008). Se puede decir que HTML es un lenguaje de marcado fácil de aprender el cual es la base para la realización de casi cualquier desarrollo online. Por ser un lenguaje básico normalmente solo se utiliza para darle la estructura inicial a diseño, pero no se pueden crear diseños o estructuras profesionales por así decirlo, y es por ello que se fueron creando nuevas tecnologías que permiten un diseño profesional y que permiten realizar numerosas acciones dinámicas, interactividad y estilo a la página web o sistema que se está realizando, como lo son el lenguaje CSS y JavaScript. A partir del 2009 se comienza a utilizar la expansión de HTML4, por la nueva versión HTML5, el cual tiene muchas mejoras en cuento a el diseño de la página, también es de una gran ayuda ya que te permite realizar animaciones, con la cual ya no se dependerá 27 de la herramienta FLASH para realizarla, algo que gusto mucho entre los desarrolladores web. Según Ortíz (2009) a diferencia de HTML, HTML5 establece una serie de nuevos elementos y atributos que reflejan el uso típico de los sitios web modernos. Algunos de ellos son técnicamente similares a las etiquetas <div> y <span>, pero tienen un significado semántico, como por ejemplo <nav> (bloque de navegación del sitio web) y <footer>. Otros elementos proporcionan nuevas funcionalidades a través de una interfaz estandarizada, como los elementos <audio> y <video>. Mejora el elemento <canvas>, capaz de renderizar elementos 3D en los navegadores más importantes (Mozilla, Chrome, Opera, Safari e IE). También se puede resaltar que HTML5 está desarrollado con la intención de reflejar mejor la nueva anatomía de los sitios web. Es por eso que hay algunos elementos nuevos, como <header> y <footer>, que están diseñados específicamente para marcar estas partes de la web. Con este desarrollo en el lenguaje ya no es necesario identificar a estos dos elementos con la etiqueta <div> y posee nuevos elementos de <section> y <article> los cuales permitirá a los desarrolladores marcar estas áreas de la página como tal. Además de hacer el código más estructurado, este también tendrá un efecto positivo en tus esfuerzos de SEO ya que para los motores de búsqueda será más fácil el ranking de tu página. Hoja de estilos en cascada (CSS) Córdova (2010) señala que cascading style sheets (CSS por siglas en inglés) es un lenguaje que describe la presentación de los documentos estructurados en hojas de estilo para diferentes métodos de interpretación, es decir, describe cómo se va a mostrar un documento en pantalla, por impresora, por voz (cuando la información es pronunciada a través de un dispositivo de lectura) o en dispositivos táctiles basados en Braille. Por otra parte Romera (2011) señala que el lenguaje CSS es una especificación desarrollada por el W3C (World Wide Web Consortium) para permitir la separación de los 28 contenidos de los documentos escritos en HTML, XML, XHTML, SVG, o XUL de la presentación del documento con las hojas de estilo, incluyendo elementos tales como los colores, fondos, márgenes, bordes, tipos de letra..., modificando as la apariencia de una página web de una forma más sencilla, permitiendo a los desarrolladores controlar el estilo y formato de sus documentos. El lenguaje CSS se basa en una serie de reglas que rigen el estilo de los elementos en los documentos estructurados, y que forman la sintaxis de las hojas de estilo. Cada regla consiste en un selector y una declaración, esta última va entre corchetes y consiste en una propiedad o atributo, y un valor separados por dos puntos (Muller, 2009). Se puede decir que las hojas de estilo en cascada ofrecen la posibilidad de definir las reglas y estilos de representación en diferentes dispositivos, ya sean pantallas de equipos de escritorio, portátiles, móviles, impresoras u otros dispositivos capaces de mostrar contenidos web, por tanto tiene una gran importancia a la hora de realizar cualquier tipo de aplicación web. Ojeda (2011) señala que las hojas de estilo nos permiten definir de manera eficiente la representación de nuestras páginas y es uno de los conocimientos fundamentales que todo diseñador web debe manejar a la perfección para realizar su trabajo. CSS fue utilizado por muchos años, pero a partir del año 2005 se comenzó a definir el sucesor de esta versión, al cual se lo conoce como CSS3. Actualmente en definición, esta versión nos ofrece una gran variedad de opciones muy importantes para las necesidades del diseño web actual. Desde opciones de sombreado y redondeado, hasta funciones avanzadas de movimiento y transformación, CSS3 es el estándar que dominará la web por los siguientes años (Muller, 2009). Uno de los grandes avances de CSS3 con respecto al CSS es que el CSS3 con ayuda del HTML5 ya antes mencionado podemos realizar animación, dejando atrás a la tecnología de FLASH que resultaba muy engorrosa para los desarrolladores ya que no era compatible con dispositivos móviles e IPAD. Otro avance importante con el CSS3 es la 29 facilidad para poder realizar efecto en las capas, de esta manera facilita mucho el trabajo de los desarrolladores al incluir transparencias, bordes, texto, etc. El objetivo inicial de CSS 3, separar el contenido de la forma, se cumplió ya con las primeras especificaciones del lenguaje. Sin embargo, el objetivo de ofrecer un control total a los diseñadores sobre los elementos de la página ha sido más difícil de cubrir. Las especificaciones anteriores del lenguaje tenían muchas utilidades para aplicar estilos a las webs, pero los desarrolladores aún continúan usando trucos diversos para conseguir efectos tan comunes o tan deseados como los bordes redondeados o el sombreado de elementos en la página. Así pues, la novedad más importante que aporta CSS 3, de cara a los desarrolladores de webs, consiste en la incorporación de nuevos mecanismos para mantener un mayor control sobre el estilo con el que se muestran los elementos de las páginas, sin tener que recurrir a trucos o hacks, que a menudo complicaban el código de las web (Centeno, 2011). Lenguaje Javascript y Jquery Según Córdova (2010) Javascript es un lenguaje de programación que se puede utilizar para construir sitios Web y para hacerlos más interactivos. Aunque comparte muchas de las características y de las estructuras del lenguaje Java, fue desarrollado independientemente. El lenguaje Javascript puede interactuar con el código HTML, permitiendo a los programadores web utilizar contenido dinámico. Por ejemplo, hace fácil responder a los acontecimientos iniciados por usuarios (como introducción de datos en formularios) sin tener que comunicarse con el servidor. Según Miller (2009) relata que Javascript es un lenguaje que puede ser utilizado por profesionales y para quienes se inician en el desarrollo y diseño de sitios web. No requiere de compilación ya que el lenguaje funciona del lado del cliente, los navegadores son los encargados de interpretar estos códigos. Se puede decir que sirve principalmente para mejorar la gestión de la interfaz cliente/servidor. Un script JavaScript insertado en un documento HTML permite reconocer 30 y tratar localmente, es decir, en el cliente, los eventos generados por el usuario. Estos eventos pueden ser el recorrido del propio documento HTML o la gestión de un formulario. En el 2006 salió una librería llamada jquery la cual es ampliamente utilizada en la que permite de una manera muy rápida y sencilla reutilizar código javascript y con el cual podemos partir de ahí y realizar tareas mucho más complejas que anteriormente requerían más trabajo. Jhonson (2011) relata que Jquery es un framework de JavaScript para facilitar, entre otros, el acceso a los elementos del DOM, los efectos, interactuar con los documentos HTML, desarrollar animaciones y agregar interacción con la tecnología AJAX a páginas web. jQuery podría ser otro framework más como script.aculo.us, MooTools, YUI pero en cambio disponemos una gran potencia con una facilidad mucho mayor que sus competidores. Lenguajes del lado del Servidor Según Torre (2006) los lenguajes de lado servidor son aquellos que son reconocidos, ejecutados e interpretados por el propio servidor y que se envían al cliente en un formato comprensible para él. Un lenguaje de lado servidor es independiente del cliente por lo que es mucho menos rígido respecto al cambio de un navegador a otro o respecto a las versiones del mismo. La programación del lado del servidor es una tecnología que consiste en el procesamiento de una petición de un usuario mediante la interpretación de un script en el servidor web para generar páginas HTML dinámicamente como respuesta. Álvarez (2001) comenta que los lenguajes del lado servidor más ampliamente utilizados para el desarrollo de páginas dinámicas son el Preprocesador de Hipertexto (PHP) y Perl. Pre-procesardor de Hipertexto (PHP) De acuerdo a PHP (2013) se concluye que Hypertext Pre-processor (PHP por sus siglas en inglés) es un lenguaje de programación de código abierto, interpretado de alto 31 nivel y ejecutado del lado del servidor. Está diseñado originalmente para la creación web de contenido dinámico de una manera rápida y sencilla. Por su flexibilidad, PHP resulta un lenguaje sencillo de aprender, y además es multiplataforma ya que permite que los programas funcionen igual sobre diferentes plataformas. PHP es un lenguaje de programación muy potente, permite crear sitios web dinámicos. Php se instala en el servidor y funciona con versiones de Apache, Microsoft IIs, Netscape Enterprise Server y otros. Características del Lenguaje PHP En base a Arellano (2011) las principales características de PHP son las siguientes:  Es un lenguaje multiplataforma.  Orientado al desarrollo de aplicaciones web dinámicas con acceso a información almacenada en una base de datos.  El código fuente escrito en PHP es invisible al navegador web y al cliente ya que es el servidor el que se encarga de ejecutar el código y enviar su resultado HTML al navegador. Esto hace que la programación en PHP sea segura y confiable.  Capacidad de conexión con la mayoría de los motores de base de datos que se utilizan en la actualidad, destaca su conectividad con MySQL y PostgreSQL.  Capacidad de expandir su potencial utilizando módulos (llamado sext's o extensiones).  Posee una amplia documentación en su sitio web oficial, entre la cual se destaca que todas las funciones del sistema, las cuales están explicadas y ejemplificadas en un único archivo de ayuda.  Es libre, por lo que se presenta como una alternativa de fácil acceso para todos.  Permite aplicar técnicas de programación orientada a objetos.  Biblioteca nativa de funciones sumamente amplia e incluida. http://es.wikipedia.org/wiki/MySQL http://es.wikipedia.org/wiki/PostgreSQL 32  No requiere definición de tipos de variables aunque sus variables se pueden evaluar también por el tipo que estén manejando en tiempo de ejecución.  Tiene manejo de excepciones (desde PHP5).  Si bien PHP no obliga a quien lo usa a seguir una determinada metodología a la hora de programar (muchos otros lenguajes tampoco lo hacen), aun haciéndolo, el programador puede aplicar en su trabajo cualquier técnica de programación o de desarrollo que le permita escribir código ordenado, estructurado y manejable. Un ejemplo de esto son los desarrollos que en PHP se han hecho del patrón de diseño Modelo Vista Controlador (MVC), que permiten separar el tratamiento y acceso a los datos, la lógica de control y la interfaz de usuario en tres componentes independientes.  Como es un lenguaje que se interpreta en ejecución, para ciertos usos puede resultar un inconveniente que el código fuente no pueda ser ocultado. La ofuscación es una técnica que puede dificultar la lectura del código pero no la impide y, en ciertos casos, representa un costo en tiempos de ejecución. González (2009) expresa que Los orígenes de PHP están fechados en torno al año 1995. Sin embargo, fue a partir del año 1999 con la publicación de PHP 4 cuando este lenguaje de programación tomó un verdadero auge. En sus primeros estadios de desarrollo, PHP se denominaba también “Zend Engine”, nombre que provenía del nombre de sus creadores: Zeev Suraski y Andi Gutmans. En el año 2004 fue lanzada la versión 5 de PHP, la cual ofrecía mejoras para aplicaciones en servidores dedicados como por ejemplo un mejor soporte para la programación orientada a objetos y una extensión completamente nueva para el uso de MySQL. Según González, la versión 6 de PHP ha estado en preparación durante largo tiempo en formato de borrador, sin llegar a publicarse. Por ello se propuso que la nueva versión de PHP se llamara PHP 7, dejando PHP 6 como una versión no publicada. PHP es un lenguaje de programación que goza de gran popularidad y difusión. A esta circunstancia hay que añadir el hecho de que páginas web de mucha importancia como http://es.wikipedia.org/wiki/L%C3%B3gica_de_control 33 Wikipedia o Yahoo se apoyan en este lenguaje, lo cual demuestra que es un lenguaje muy potente que puede servir desde para pequeñas páginas web hasta para grandes portales. Patrón de diseño MVC (Modelo Vista Controlador) Murazzo y colegas (2010) definen a la arquitectura MVC como un patrón de arquitectura de aplicación que se separa de los datos de una aplicación, la interfaz de usuario, y la lógica de control en tres componentes distintos. Dicha arquitectura fue introducida como parte de la versión Smalltalk-80 (Smalltalk es un lenguaje de programación). Su objetivo era reducir el esfuerzo de programación necesario en la implementación de sistemas múltiples. Tenemos como principal característica, que el Modelo, las Vistas y los Controladores se tratan como entidades separadas; con esto se logra que cualquier cambio que se produzca en el Modelo se refleje automáticamente en cada una de las Vistas. El componente Modelo es el objeto que representa los datos del programa. Maneja los datos y controla todas sus transformaciones. Este componente no sabe que hay internamente en los otros componentes, ni siquiera contiene referencias a ellos. Es el propio sistema el que tiene encomendada la responsabilidad de mantener enlaces entre el Modelo y sus Vistas, y notificar a las Vistas cuando cambia el Modelo. El componente Vista es el objeto que maneja la presentación visual de los datos representados por el componente Modelo. Genera una representación visual del Modelo y muestra los datos al usuario. El componente Controlador es el objeto que proporciona significado a las órdenes del usuario, actuando sobre los datos representados por el Modelo. Cuando hay cambios se activa, bien sea por cambios en la información del Modelo o por alteraciones de la Vista. 34 En la figura 9 se describe la interacción entre las tres capas: Figura 9. Arquitectura Modelo Vista Controlador (Murazzo, 2010) Frameworks MVC De acuerdo con Sánchez (2011) un framework se puede traducir como estructura; en el sentido que nos ocupa un framework sería un marco de trabajo. MVC son las siglas de Modelo-Vista-Controlador un paradigma de programación de aplicaciones que separa en tres niveles el trabajo: por un lado el modelo que hace referencia a las aplicaciones empresariales conocido como la lógica de negocio (por ejemplo el Sistema Gestor de la Base de Datos); la vista hace referencia al aspecto visual de la aplicación con el usuario; el controlador finalmente es la parte que controla las acciones del usuario y las comunica a los dos apartados anteriores. Es, en definitiva, un modelo de trabajo que facilita la creación de aplicaciones web complejas. Se les conoce también con el nombre de plantillas. A continuación se mencionan algunos de los frameworks utilizados para el desarrollo de aplicaciones web. 35  Ruby on Rails: se trata de un marco de trabajo muy exitoso por la facilidad que tiene de programar y sus buenos resultados visuales. Se puede ejecutar en casi cualquier servidor web, basta con instalar el componente correspondiente.  Apache Struts: el marco de trabajo más famoso para la creación de aplicaciones J2EE. Muy preparado para utilizar con Apache.  Spring: etro marco para trabajar en Java J2EE que tiene bastante éxito. Tiene incluso una versión para las aplicaciones .NET  Django: escrita en Python y pensada para utilizar en ese lenguaje que facilita la creación de aplicaciones web.  Zend: framework escrito para PHP. Uno de los más populares para este lenguaje.  Yii: otro framework PHP de gran crecimiento comercial.  Laravel: framework PHP con influencia de otros frameworks como Ruby on Rails, Sinatra y ASP.NET Una vez definidos los componentes de la arquitectura Modelo Vista Controlador continuación se presentan algunos conceptos básicos de base de datos para profundizar este aspecto. Base de Datos Una Base de Datos (BD) es un repositorio centralizado de datos que permite almacenar y organizar hechos ó eventos y restituirlos a demanda del usuario para producir información. (Date, 2001) Es una colección de datos, que contiene información relevante para una empresa. (Silberschatz, Korth y Sudarshan, 2002). Se puede decir entonces que una BD es un repositorio de datos, que se relacionan entre sí, cuyos datos corresponden a un hecho o evento y que gracias a que existen métodos de extracción para ellos, podemos producir información. 36 Características de una Base de Datos Date (2001) caracteriza a las base de datos como siguen:  Integridad de los datos.  Acceso concurrente a los datos.  Facilidad para el cambio de hardware o software.  Independencia de los datos.  Control centralizado de los datos.  Minimización de la redundancia.  Costo mínimo de almacenamiento y mantenimiento.  Versatilidad para la representación de relaciones.  Establecimiento de medidas de seguridad. Ventajas de una Base de Datos Según Date (2001) las bases de datos poseen las siguientes ventajas:  Los datos pueden compartirse, es posible la integración de diversas aplicaciones que pueden ver los mismos datos (usando la misma BD), si necesidad de crear una BD paralela con los mismos datos.  Redundancia controlada, debido al sistema tradicional de archivos independientes, los datos se duplicaban constantemente lo cual creaba mucha duplicidad de datos y creaba un problema de desperdicio de espacio de almacenamiento, la idea es integrarlas para así eliminar la redundancia.  Inconsistencia, al controlarse la redundancia, se logra la consistencia de los datos, cuando se actualiza un dato, todos los usuarios autorizados de la BD pueden ver el cambio independientemente de que estén trabajando en distintos sistemas. 37  Manejo de transacciones, es una unidad de trabajo lógica, por lo regular comprende varias operaciones de la BD, operaciones de actualización. Estas transacciones están pensadas para tener consistencia de datos pese a fallos del sistema.  Integridad, la BD tiene la capacidad de validar ciertas condiciones cuando los usuarios introducen datos y rechazar entradas que no cumplan con esas condiciones. El ABD es el responsable de establecer esas validaciones.  Seguridad, el ABD al tener control central de los Datos, la BD le provee mecanismos que le permiten crear niveles de seguridad para distintos tipos de Usuarios.  Equilibrar los requerimientos conflictivos, para que la BD trabaje apropiadamente, necesita de una persona o grupo que se encargue de su funcionamiento. El título para esa posición es Administrador de Base de Datos (ABD) y provee la ventaja de que diseña el sistema tomando en mente la necesidad de cada departamento de la empresa. Por lo tanto se beneficia mayormente la empresa aunque algunos departamentos podrían tener leves desventajas debido a su idiosincrasia.  Cumplir estándares, se pueden estandarizar procesos, formas, nombres de datos, formas, etc. Desventajas de una Base de Datos Según Date (2001) las bases de datos poseen las siguientes desventajas:  Los datos son vulnerables sin los controles adecuados.  La integridad de los datos se ve afectada sin los controles adecuados.  La recuperación de una base de datos después de una falla puede requerir bastante tiempo.  Dependiendo de la cantidad de datos se puede ver afectado el rendimiento de acuerdo al manejador que los procese. 38  Es probable que las relaciones entre los datos sean muy complejas. Sistema de Base de Datos Un Sistema de Base de Datos (SBD) es un sistema diseñado para manejar grandes cantidades de datos y producir información. Un SBD es básicamente un sistema computarizado cuyo propósito general es mantener información y hacer que esté disponible cuando se solicite. La información puede ser cualquier cosa que se considere importante para el individuo o la organización a la cual debe servir el sistema. (Date,2001) Sistema Manejador de Base de Datos Un Sistema Manejador de Base de Datos (SMBD) es colección de datos interrelacionados y un conjunto de programas para acceder a dichos datos. (Silberschatz, Korth y Sudarshan, 2002). Un SMBD se apoya en la tecnología para cumplir con el propósito de permitir, a las personas, la manipulación (consultas, actualizaciones, eliminaciones e inserciones) de su información. (Cardoso, 2006). Se puede decir que un SMBD es un sistema que se encarga de almacenar información y que las personas pueden manipularlas mediante operaciones sobre ellos. Funciones del SMBD Date (2001) establece las siguientes funciones:  Definición de datos: debe ser capaz de aceptar definiciones de datos en versión fuente y convertirlas en la versión objeto apropiado. Para hacer esta conversión el SMBD debe incluir un procesador DDL (Lenguajes de definición de datos) como uno de sus componentes. 39  Manipulación de datos: debe estar capacitado para atender las solicitudes del usuario para extraer, actualizar, o ingresar nuevos datos. Para atender estas solicitudes debe tener un procesador DML como otro de sus componentes.  Optimización y ejecución: las peticiones del DML, deben ser procesadas por un componente optimizador, cuya finalidad es determinar una forma eficiente de implementar una petición.  Seguridad e integridad de los datos: debe controlar las solicitudes de los usuarios para rechazar aquellas solicitudes no permitidas para que los datos estén seguros e íntegros.  Recuperación y concurrencia de los datos: el SMBD debe tener un componente que sea un monitor de procesamientos de transacciones, que debe cuidar del cumplimiento de ciertos controles de recuperación y concurrencia.  Diccionario de Datos: debe incluir una función de diccionario de datos, en este caso existen los metadatos que son datos acerca de los datos.  Rendimiento: debe ejecutar todas las funciones recién identificadas en la forma más eficiente posible. PostgreSQL De acuerdo con PostgreSQL. (2010) es un sistema de gestión de bases de datos objeto-relacional, distribuido bajo licencia BSD (Berkeley Software Distribution) y con su código fuente disponible libremente. Es el sistema de gestión de bases de datos de código abierto más potente y robusto del mercado. PostgreSQL utiliza un modelo cliente/servidor y usa multiprocesos en vez de multihilos para garantizar la estabilidad del sistema. Un fallo en uno de los procesos no afectará el resto y el sistema continuará funcionando. Características de PostgreSQL  Soporta el almacenamiento de objetos binarios grandes (gráficos, videos, sonido, entre otros). 40  APIs para programar en C/C++, Java, .Net, Perl, Python, Ruby, Tcl, ODBC, PHP, Lisp, Scheme, Qt y muchos otros.  Numerosos tipos de datos y posibilidad de definir nuevos tipos. Además de los tipos estándares en cualquier base de datos, tenemos disponibles, entre otros, tipos geométricos, de direcciones de red, de cadenas binarias, UUID, XML, matrices, etc.  Copias de seguridad en caliente (Online/hot backups)  Licencia BSD Licencias En la web actual la mayoría de los contenidos son elaborados por usuarios y no por grandes empresas, especialmente en el ámbito educativo. El espíritu de estos contenidos es permitir a los demás usarlos sin restricciones, pero era necesario un marco legal que permitiese su uso sin arriesgar tener a futuro problemas con los derechos de la obra. De acuerdo a CERLAC (2011), licencia se define como un acuerdo de voluntades en virtud del cual el autor o el titular de los derechos patrimoniales, autoriza a otra persona (natural o jurídica) la utilización de la obra estableciendo las condiciones de tiempo, modo y lugar, sin desprenderse de ninguno de sus derechos. Como cierre de este capítulo se puede decir que un Sistema Web es un software que no necesita instalación y que se accede a través de un navegador por medio de internet o una intranet. Se basan en la arquitectura cliente/servidor, por un lado el cliente es el navegador a través del cual se visualiza el sistema y por otra parte el servidor es el programa que está constantemente esperando solicitudes por parte del cliente. Se utilizaron para su desarrollo diversas tecnologías web como por ejemplo HTML, CSS, JavaScript, PHP entre otras, debido a su fácil utilización y ya que están apegadas al marco legal del Sistema. Aunado a ello el sistema estará bajo una licencia de software libre para que en un futuro, tanto el código como el Sistema puedan ser usados con libertad sin ningún inconveniente de Copyright. 41 Capítulo III: Marco Aplicativo En este capítulo se describe la aplicación de la metodología AgilUs para el desarrollo del SISGAE. Consta de cuatro (4) fases, las cuales son: Requisitos, Análisis, Prototipaje y Entrega. Las señaladas fases serán detalladas a continuación. Fase I: Requisitos En esta fase se aplicaron diversas técnicas para la determinación de la información, que permitieron obtener todo lo necesario para hacer el análisis de requerimientos planteados para el SISGAE. Las técnicas que fueron empleadas se describen seguidamente: Entrevistas Esta técnica se aplicó utilizando entrevistas no estructuradas con el objetivo conocer cómo se llevaba a cabo el proceso de gestión académica y administrativa aplicada en las actividades realizadas dentro de la coordinación de extensión, lográndose obtener información acerca de la problemática e identificándose todas y cada una de las necesidades existentes. Al ser una entrevista no estructurada las preguntas fueron surgiendo de acuerdo a las respuestas aportadas por el profesor Yanes de FUNDACIENS-UCV-UCV y el profesor Ernesto Fuenmayor de la Coordinación de Extensión. Se realizaron las siguientes preguntas:  ¿Quién aprueba la actividad?  ¿Cómo se inscriben los aspirantes a cursos?  ¿Cuáles son los requisitos para inscribirse en una actividad?  ¿Cómo se facturan las actividades?  ¿Cómo se inscribe un participante? 42  ¿Cuáles son los datos de las planillas de inscripción? Con las respuestas de dichas interrogantes se pudo obtener más del 50% de los requerimientos funcionales del sistema, además de obtener una visión más clara de la problemática presentada dentro de las instalaciones de la Coordinación de Extensión a la hora promover nuevas actividades. Siguiendo con la fase de requisitos de AgilUs, se presenta la tormenta de ideas realizada durante la entrevista con el profesor Carlos Yanes de FUNDACIENS-UCV, el profesor Ernesto Fuenmayor y la profesora Yosly Hernandez de la Coordinación de Extensión. Tormentas de ideas Una tormenta de ideas es una técnica utilizada para crear la mayor cantidad de ideas posibles en grupo sobre un tema en específico (Duarte, 2008). El Objetivo de realizar esta actividad fue de exponer a los profesores, personal de Coordinación de Extensión y FUNDACIENS-UCV la situación actual de gestión de las actividades académicas, para que luego éstos aportasen ideas que permitieran enriquecer el proceso. En la ¡Error! No se encuentra el origen de la referencia.0 se puede apreciar los érminos más mencionados de dicha tormenta: 43 Figura 10. Tormenta de ideas  Las ideas más relevantes que surgieron fueron las siguientes:  Automatización de Inscripciones.  Poco trabajo manual.  Notificación de participantes interesados en alguna actividad.  Digitalización certificados.  Carga de la información de las actividades.  Manejo de la información de inscripción en digital  Manejo de roles de usuarios.  Gestionar actividades. Continuando con las diversas técnicas de levantamiento de información de la fase de requisitos, se expone el sondeo realizado a los usuarios finales del SISGAE, la cual sirvió como información base para el desarrollo de un sistema completo. Sondeos El sondeo se realizó mediante la utilización de los formularios provistos por Google Forms (Google, 2006), fue efectuado tomando una muestra de ocho (08) personas pertenecientes Coordinación de Extensión de la UCV y FUNDACIENS-UCV-UCV, estas son las encargadas de llevar el control de los participantes de las actividades, darle seguimiento a los pagos, generar los diplomas o certificados, entre otras tareas que conllevan al buen flujo de las actividades. La aplicación de esta técnica tuvo como finalidad obtener diversas opiniones relacionadas con un sistema web usable para el proceso de gestión de las actividades academicas y administrativas de Coordinación de Extensión, ésta permitió facilitar la toma de decisiones acerca de los requerimientos para el desarrollo de SISGAE. Se realizaron un total de siete (5) preguntas, que se describen en los siguientes párrafos: 44 La primera pregunta estaba destinada a conocer la opinión que tenía el personal administrativo con respecto al proceso de gestión de las actividades académicas impartidas por Coordinación de Extensión, esta se formuló de la siguiente forma ¿Cómo catalogaría usted el actual proceso manual de Gestión de las actividades que ofrece la coordinación de extensión?, se utilizo la escala de Likert asignándosele un rango de evaluación del uno (1) al cinco (5), donde el uno (1) se define como malo, el dos (2) como regular, el tres (3) bueno, el cuatro (4) muy bueno y el cinco (5) excelente. Los resultados permitieron valorar cuantitativamente el proceso actual. La segunda pregunta que se elaboro fue: ¿Qué le gustaría que haga el sistema? Con esta se logro tener más claras las ideas con respecto a las necesidades legítimas dentro de proceso de apertura, prosecución y finalización de las actividades. La tercera pregunta se elaboró con la finalidad de saber qué características desearía el usuario que formaran parte del sistema, para ello se utilizo un esquema de selección simple. Seleccione las principales características que desearía que tuviese el sistema, colocando entre las posibles respuestas: confiable, usable, fácil de entender, tolerante a errores, eficiente, práctico, fácil de memorizar y diseño elegante. La cuarta pregunta fue enfocada a los pagos de las actividades, con la finalidad de conocer cómo se maneja este proceso, la pregunta fue: ¿Cuál es la forma de pago de las actividades y como le gustaría que se manejaran los pagos dentro del sistema? Por último, la quinta pregunta se realizo con la finalidad de conocer los aspectos adicionales que le gustarían que tuviera el sistema, así como las sugerencias para que el sistema se le diera el mejor uso posible, la pregunta fue: ¿Qué sugiere que tenga el sistema para que utilizarlo sea de su agrado? Perfil de usuario Los Perfiles de Usuarios son fundamentales en el desarrollo de un sistema, ya que nos permiten conocer los roles desempeñados por los usuarios en el mismo. En el proceso de gestión de actividades, existen cuatro (4) tipos de usuarios, el rol de Coordinación de 45 extensión / Administrador, Profesor, FUNDACIENS-UCV y Participante, cada uno posee responsabilidades distintas durante el proceso, a continuación se describe el cargo de cada una de ellas:  Coordinación de extensión / Administrador: gestionar las actividades y los usuarios, generar reportes y de abrir las actividades.  FUNDACIENS-UCV: validar las inscripciones, validar los pagos de las inscripciones y generar reportes.  Profesor: validar la preinscripción de los participantes, calificar a los participantes, ver el listado de los participantes y generar historial de actividades.  Participante: preinscribirse e inscribirse en las actividades y abonar pago de las actividades. Siguiendo con la fase de requisitos de AgilUs, se describen los requerimientos funcionales y no funcionales identificados aplicados en el sistema. Listas de Requerimientos Funcionales y No Funcionales Durante las reuniones efectuadas con los profesores, personal de Coordinación de Extensión y FUNDACIENS-UCV, se definieron diversos requisitos funcionales y no funcionales, los cuales fueron considerados al momento del desarrollo de las funcionalidades del sistema. Requerimientos Funcionales Seguidamente, se describirán cada uno de los requerimientos funcionales que forman parte del sistema, distribuidos según el perfil de los diferentes usuarios: Requerimientos comunes para cada perfil de usuario:  Iniciar/Cerrar Sesión: realizará el inicio de la sesión con su correo electrónico y contraseña. 46  Editar Perfil: podrá modificar los datos de su perfil.  Modificar contraseña.  Modificar correo electrónico Requerimientos para el perfil Coordinación de Extensión/ Administrador:  Gestión de Usuarios (agregar, eliminar, editar).  Gestión de contenido (agregar, eliminar, editar). Requerimientos para el perfil FUNDACIENS-UCV:  Verificar comprobante de pago  Aprobar inscripción de los participantes Requerimientos para el perfil Participante:  Preinscripción en alguna de las actividades  Inscripción en alguna de las actividades  Ver historial de sus cursos  Generar certificado Requerimientos para el perfil Profesor:  Aprobar preinscripción de los participantes  Gestionar las notas de sus participantes  Ver historial de sus actividades dictadas. Requerimientos No Funcionales Los requerimientos No Funcionales se señalan a continuación:  Usabilidad: el usuario debe ser capaz de desarrollar tareas rápidamente, una vez que se ha aprendido a usar el sistema. El sistema debe plantear ayudas a 47 los usuarios para apoyarlos cuando deban enfrentar los errores que cometen al usar el sistema.  Disponibilidad: se debe permitir usar el sistema en cualquier momento y cualquier ubicación geográfica con conexión a Internet. Cuenta con un nivel de servicio para los usuarios de siete (7) días por veinticuatro (24) horas, a menos que exista algún posible inconveniente externo al sistema.  Mantenibilidad en el tiempo: con el objetivo de poder realizar los cambios necesarios a fin de garantizar la disponibilidad del Sistema. Ofrecer mantenimiento correctivo y preventivo, para soportar el buen funcionamiento estacionario e incremental, por el aumento en el número de usuarios.  Portabilidad: al sistema se puede acceder independientemente de la plataforma que se esté utilizando, solo debe requerir de la disposición de un navegador Web independientemente del sistema operativo.  Escalabilidad: las funcionalidades son implementadas previniendo futuras mejoras sobre las mismas, de manera que pueden ser incorporadas afectando el código existente de la menor forma posible.  Seguridad: toda la información contenida en el sistema esta resguardada contra accesos no autorizados, mediante mecanismos de autenticación y sesiones que no permitan la fuga de información.  Tolerancia a fallas: en el exacto momento que ocurra una falla, ya sea intencional o no, la aplicación debe ser capaz de responder al usuario y volver al estado que se encontraba al momento anterior de ocurrir la falla. Los requerimientos no funcionales mencionados se aplicaron para cada módulo del sistema, los cuales son una abstracción para los usuarios finales, ya que no deben realizar ninguna tarea específica para cumplir con ellos. 48 Una vez culminada la fase de requisitos se continúa con la Fase de Análisis. Fase II: Análisis En esta fase se estudió de la solución desarrollada, en la cual se diseñaron distintos prototipos de interfaz, se especificaron guías de estilo, se realizaron diagramas de casos de uso y objetos de dominio, para así puntualizar las funcionalidades que tendrá el producto desarrollado. A continuación se presentarán cada una de estas actividades. Prototipos de Interfaz Los prototipos de Interfaz, que sirvieron de apoyo para establecer el diseño del Sistema, en la figura 11 se muestra la estructura de la página inicial del sistema, donde se puede apreciar los siguientes ítems.  El encabezado del sistema: con el nombre del sistema los logos de las instituciones participantes en el mismo.  Menú de navegación: donde se permite el acceso a información de los involucrados en el sistema y las actividades que ofrece.  Inicio de sesión: donde se solicita un nombre de usuario y clave al usuario para entrar al sistema.  Pie de página: se muestra información adicional del sistema. Figura 11. Prototipo de interfaz 49 La figura 12 representa la página principal, luego de haber iniciado sesión. Se mantiene el encabezado y se agregó un menú lateral en la parte izquierda, que muestra las opciones disponibles dependiendo el rol con el cual se haya iniciado sesión, desplegando dicho contenido seleccionado en la parte central del sistema. Figura 12. Prototipo de interfaz 2 Una vez mostrado los prototipos de las principales interfaces, se procede a presentar las guías de estilos por las cuales se rige el sistema. Guías de estilo En la Guía de Estilos aplicada, se tomaron en consideración las características relacionadas con el aspecto de la interfaz de usuario. En la tabla 1 se puede observar las imágenes principales de las interfaces como lo son los logos de la escuela de computación, de la UCV, de la facultad de ciencias de la UCV y 50 el de SISGAE. El logo de SISGAE fue realizado con las siglas del mismo, manteniendo una estructura sencilla pero elegante, donde se letra “i” de hace referencia a la parte académica que se maneja dentro del sistema ya que el punto que contiene la “i” fue sustituido por un birrete. La paleta de los colores principales de la interfaz serán colores de varias tonalidades de verdes, los cuales se mantendrán en todo el sistema. Los botones principales son siempre azules para mantener una tonalidad parecida a las partes principales del sistema. La tipografía seleccionada para la aplicación fue Helvetica Neue, cambiando de tamaño solamente para los títulos y subtítulos del sistema. Esta tipografía es del tipo Sans Serif, y fueron utilizados debido a que son letras básicas sin muchos detalles, las cuales son altamente recomendadas para el desarrollo web. Se diseñó una interfaz que fuese lo más simple posible, pero que cumpliera con las funcionalidades descritas anteriormente, se evaluó la posición de los elementos y el tamaño que cada uno debía tener, esto con el fin de no sobrecargar la interfaz y que fuera fácil uso. 51 Tabla 1. Guía de Estilo de SISGAE Procediendo con la Fase de Análisis de AgilUs, se detallaran los casos de uso que permitieron modelar los requerimientos funcionales de SISGAE. Modelo de Casos de Uso A través de los diagramas de Casos de Uso (CU) se presentan los requerimientos funcionales del Sistema, se muestra por cada funcionalidad, una breve descripción y la solución planteada. En la ¡Error! No se encuentra el origen de la referencia.13, se bserva el CU correspondiente al nivel 0 de abstracción, en este se modela el sistema a nivel general, con sus respectivos actores. Guía de Estilo Logos Logo de la Escuela de Computación Logo de la Universidad Central de Venezuela Logo de la Facultad de Ciencias Logo de SISGAE Paleta de Colores Colores Hexadecimal #1CC09F #003265 #000000 #FFFFFF #0d6069 Tipografía "Helvetica Neue", Helvetica, Arial, sans-serif; 52 Figura 13. Caso de Uso Nivel 0. Seguidamente se describen los principales actores de la aplicación:  Participante: inscripción, preinscripción y ver su historial de actividades  Profesor: gestionar contenido de las actividades que imparte, calificar alumnos y ver el historial de sus actividades.  Coordinación de Extensión/ Administrador: responsable en realizar la apertura de actividades, gestionar el contenido de las actividades aprobadas y gestionar los usuarios del sistema  FUNDACIENS-UCV: verificar pagos de los participantes. La ¡Error! No se encuentra el origen de la referencia. se puede observar los casos e uso correspondientes al nivel 1 de abstracción, los cuales presentan las principales funcionalidades del sistema y su interacción con los actores. 53 . Figura 14. Caso de Uso Nivel 1. En la sección de anexos se encuentra la descripción de los casos de uso antes mencionados y los restantes del sistema. Modelo de objetos del dominio El Diagrama de Objetos del Dominio representa los entes que existen en el contexto de SISGAE y la interacción que existe entre ellos, con la finalidad de alcanzar una mejor comprensión tanto del contexto como de los objetos que existen en el Sistema. En la figura número 15 se puede observar el Diagrama de objeto de dominio del sistema web SISGAE, existen tres (4) tipos de usuarios que interactúan con el Sistema: Coordinación de extensión, FUNDACIENS-UCV, profesores y participantes 54 Figura 15. Diagrama de objeto de Dominio SISGAE. Continuando con la Fase de Análisis de AgilUs, se presenta el Diseño Lógico y Físico de la Base De Datos de SISGAE. Diseño Lógico y Físico de la Base de Datos El Sistema Manejador de Base de Datos seleccionado para el desarrollo de SISGAE, fue PostgreSQL porque es una de las base de datos más avanzada del mercado, además que su código fuente es libre, lo que quiere decir que se puede realizar prácticamente lo que se desee con dicho producto. Fue necesario construir un conjunto de tablas que conforman la lógica que hace posible el funcionamiento y la persistencia del sistema, las cuales fueron diseñadas para soportar todos los objetivos planteados en el presente TEG. En la Figura 16 se señalan todas las tablas que interactúan en el sistema. 55 Figura 16. Tablas de la base de datos SISGAE. A continuación se describe el contenido que almacenan cada una de las tables mencionadas anteriormente. 1. abrir_curso: fecha de inicio y fin de preinscripción, fecha de inicio y fin de inscripción, fecha inicio y fin del curso y numero de cuotas para abrir una actividad. 2. Calificación: tipos de calificación cualitativa, como lo son sin calificar, aprobado y reprobado. 3. Costos: tipos de costo de una actividad (directo e indirecto). 4. cuerpo_docente: id de los docentes encargados de una actividad especifica 5. docentes: información personal de los docentes. 6. estatus_curso: posibles estatus de una actividad como lo son abierto, cerrado, cancelado. 56 7. estatus_participante: estatus del participante con respecto a una actividad desde la preinscripción hasta el inicio del curso como lo son preinscripción aceptada, inscripción rechazada, Esperando aprobación de Pago. 8. estructura_costos: montos de los diversos costos de una actividad (matricula, ingresos de la Coordinacion de Extensión, ingresos de FUNDACIENS- UCV). 9. grado_academico: posibles grados académicos para los perfiles de usuario. 10. modulos_actividad: nombres y contenidos de los módulos asociados a una actividad. 11. Pagos: datos de los comprobantes de pago (nombre, número y monto) asociados a una actividad. 12. Participantes: datos personales de los usuarios de la aplicación. 13. password_resets: de manera temporal el email de usuario y el token para restablecer la contraseña. 14. Preinscripción: datos del participante relacionados con la preinscripción e inscripción de una actividad (fecha de preinscripción, fecha de inscripción, requisitos etc.). 15. Roles: nombres de los tipos de usuario que interactúan con la aplicación. 16. Solicitudes: datos principales referentes a una actividad (nombre, tipo, estatus, etc.). 57 En la figura 17 se aprecia el Modelo Relacional de SISGAE. 58 Figura 17. Modelo Relacional SISGAE. 59 Una vez presentado el Diseño Lógico y Físico de la Base de Datos, se procede a presentar la Plataforma de Desarrollo con la cual se trabajó en la implementación del Sistema Plataforma de Desarrollo Las funcionalidades de SISGAE fueron desarrolladas bajo un enfoque web cliente- servidor, utilizando el patrón de diseño MVC y en un ambiente de desarrollo bajo los sistemas operativos Windows 10 y Windows 7. El Sistema Manejador de Bases de Datos usado fue PostgreSQL, y se utilizó el manejador de versiones Git usando como alojamiento SourceTree, realizando diversos respaldos del código, manteniendo estable y funcional en el mencionado repositorio. El lenguaje de desarrollo del lado de servidor del sistema web fue PHP, bajo el Framework Laravel en su versión 5.1. En cuanto a la programación del lado del cliente se utilizó: HTML5, Bootstrap, JavaScript, Ajax, jQuery y jQuery-UI. Una vez descritas todas las tecnologías utilizadas en el desarrollo del Sistema, se sigue con el método AgilUs, y se continúa con la Fase de Prototipaje. Fase III: Prototipaje Arquitectura del Sistema SISGAE se desarrolló bajo una arquitectura Cliente-Servidor de tres capas, siguiendo el patrón Modelo-Vista-Controlador, la cual consistió en mantener por separado la lógica de negocios y la presentación del sistema. La arquitectura de SISGAE se encuentra relacionada con la arquitectura de SIGADEX de la siguiente manera: En la capa de presentación se encuentran los roles asociados a cada uno de los sistemas, en el caso de SISGAE, participante, profesor, Coordinación de Extensión y FUNDACIENS-UCV y en el caso de SIGADEX, docente, director de escuela, presidente 60 de FUNDACIENS, representante del Consejo de Facultad y Presidente de la Coordinación de Extensión. En la capa de negocio, ambos sistemas se encuentran alojados en los servidores del Centro de Computación de la Facultad de Ciencias. Esta capa se encarga de realizar las consultas al Base de datos, procesar las respuestas obtenidas y finalmente mostrar los resultados al usuario. Por último está la capa de datos, la cual es esencial para relación de los sistemas, ya que ambos trabajan con la misma base de datos, de esta forma se puede garantizar que las actividades aprobadas por SIGADEX son las mismas que utiliza SISGAE para su gestión académica. En la figura 18 se puede apreciar gráficamente la arquitectura de SISGAE. Figura 18. Arquitectura SISGAE Desarrollo del Sistema Para el desarrollo de SISGAE se usó la versión del framework Laravel 5.1 del lado del servidor. La razón de esta elección se debe a que Laravel es un framework de código 61 abierto PHP, muy bien documentado, con una amplia comunidad y foros, curva de aprendizaje relativamente baja en comparación de otros frameworks php. En las Figuras 19 se detalla el la conexión a la BD PostgreSQL del sistema. Figura 19. Conexión con la base de datos (1). En la figura 20 se puede apreciar la siguiente configuración para concluir la conexión con la BD PostgreSQL del sistema. Figura 20. Conexión con la base de datos (2) 62 Como estándar al utilizar un ORM los nombres de las tablas deben ser en plural para así establecer la relación con los respectivos Modelos. Luego de haber creado todas las tablas de la base de datos, se procede a crear los Modelos asociados, la tabla con la cual se asocia, definiendo sus relaciones entre los mismos, el nombre de estos archivos debe ser en singular, manteniendo el estándar de ORM. También se crean los controladores asociados a dichos Modelos, para el desarrollo del sistema se creó solamente los que fueron utilizados para el desarrollo de las funcionalidades. En la figura 21 se puede observar el Modelo asociado a la Tabla Registro de los participantes. 63 Figura 21. Controlador del modelo Registro. Luego de tener todos nuestros controladores y modelos creados se pasa a configurar el archivo Routes.php el cual contendrá todas las rutas de acceso del sistema y su controlador asociado, en la Figura 22 se puede apreciar cómo se estructuran: 64 Figura 22. Archivo de rutas SISGAE. Como primera parte de desarrollo de funcionalidades se crea el controlador donde se hace todo lo referente al manejo de sesión en el sistema, inicio y cierre, validar roles y recuperar contraseña. En la Figura 23 se puede apreciar un segmento del código donde se puede ver como se efectuó el proceso de iniciar la sesión en el Sistema y redirigirlo a la vista correspondiente dependiendo del rol que haya seleccionado: 65 Figura 23. Parte del código para iniciar sesión. Siguiendo con el desarrollo de SISGAE, se pasa a crear las vistas del Sistema, se utilizó el motor de plantillas Blade de Laravel el cual facilita la creación de código HTML, así como la inclusión de los códigos CSS, JavaScript y JQuery; con esta se crearon una serie de vistas comunes del Sistema, como el encabezado y el pie de página, haciendo el código reusable y más fácil de leer. En la Figura 24 se observa el código de una de la plantilla base que contiene el encabezado del sistema. 66 Figura 24. Plantilla del header. En la Figura 25 se puede ver parte del código de la vista para iniciar sesión donde se utiliza una plantilla llamada “layouts.master”. Figura 25. Vista de inicio de sesión. 67 Debido a que se utilizó el patrón MVC, se manejó la misma estructura de carpetas que tiene Laravel, separando el modelo, vista y controlador en sus respectivas carpetas. Se crearon seis (26) controladores, a continuación se explica de que se encargan cada uno de ellos: 1. CursosController: la lógica de negocio para mostrar la información de los cursos talleres y diplomados de la coordinación de extensión. 2. CController: la lógica de negocio para mostrar la información de los cursos talleres y diplomados de la coordinación de extensión cuando un usuario no ha iniciado sesión. 3. VerificarController: verificar si un usuario esta registrado en la aplicación al momento de preinscribirse en alguna actividad por primera vez. 4. PreinscripcionAfueraController: realizar el proceso de preinscripción y registro cuando el usuario se está preinscribiendo en una actividad por primera vez. 5. LoginController: verificar la cédula y contraseña proporcionada por el usuario para ingresar a la página de inicio. 6. PerfilController: la lógica de negocio para consultar los datos del usuario logueado y modificarlos si lo desea. 7. PasswordController: realizar el proceso de resetear el password en caso de que el usuario lo haya olvidado. 8. CambioClaveController: realizar el proceso de cambio de contraseña. 9. InicioController: la lógica de negocio para mostrar los botones "preinscribir" e "inscribir" en caso de que el usuario tenga una preinscripción o inscripción disponible así como mostrar el estatus de la actividad en la que se encuentra actualmente el participante. 68 10. InscripcionController: guardar los datos del participante referentes a la inscripción de un usuario en una actividad. 11. ConfirmarController: consultar los datos del curso a inscribir para mostrarlos en la pantalla de confirmación de la inscripción. 12. PreinscripcionController: guardar los datos del participante referentes a la preinscripción de un usuario en una actividad. 13. CertificadoController: verificar si el usuario tiene certificados disponibles. 14. PagosController: almacenar los datos de un pago realizado por un participante en una actividad específica. 15. ProfesorController: mostrar la pantalla de inicio de un participante con el rol de profesor, asi como el curso que se encuentra dictando en la actualidad. 16. ValidarPreinscripcionController: consultar el listado de cursos que el profesor dicta para validar la preinscripción de sus participantes. 17. ListadoController: mostrar al profesor el listado de participantes pertenecientes a una actividad que se está llevando a cabo en la actualidad, asi como realizar el proceso de calificación. 18. RequisitosController: mostrar el listado de participantes inscritos en una actividad específica y ver sus requisitos para validar su inscripción. 19. CoordinacionController: mostrar la página de inicio de un usuario con el rol de Coordinación de Extensión/ Administrador y el listado de cursos que se está dictando en la actualidad. 20. AbrirPreinscripcionController: realizar el proceso de almacenamiento de las fechas de preinscripción, inscripción, inicio y fin de una actividad así como el número de cuotas para realizar los pagos. 69 21. UsuariosController: consultar todos los usuarios de la aplicación para mostrarlos al administrador, permite la eliminación de los mismos y creación de usuarios nuevos. 22. FundacionController: mostrar la página de inicio de un usuario con el rol de FUNDACIENS-UCV y el listado de cursos que se está dictando en la actualidad. 23. ConsultarController: consultar el listado de actividades que se encuentran abiertas en la actualidad para posteriormente ver el listado de participantes inscritos en la misma. 24. InfoCursoController: consultar el listado de participantes inscritos en una actividad para posteriormente ver los comprobantes de pago que ha subido el participante. 25. ComprobanteController: consultar los comprobantes de pago que ha subido el participante como pago de cuota de una actividad específica, asi como el proceso de validación del mismo por parte del usuario con el rol de FUNDACIENS-UCV. 26. PdfController: consultar los datos de un participante referentes a una actividad que haya aprobado para construir el documento en formato PDF asociado al certificado. Lista de Comprobación Se aplicó esta técnica a cinco (5) usuarios del sistema, representantes de los distintos roles, como lo son Coordinación de Extensión, Fundacines, Profesores y Participante, que conforman el grupo de involucrados en el proceso de gestión de SISGAE. Esto permitió identificar fallas en el cumplimiento del control y libertad para el usuario. 70 A las cinco (5) personas señaladas a las cuales se les aplicó esta técnica, se les facilitó la interfaz de usuario del Sistema para la realización de las actividades correspondientes a su rol. En la tabla 2 se observa la lista de comprobación que fue aplicada a los usuarios antes mencionados: Tabla 2. Lista de Comprobación de SIGAE Lista de Comprobación Se cumple No se cumple Reconocer en lugar de recordar. X Usar indicadores visuales. X Flexibilidad en la interfaz de usuario. X Feedback a las acciones del usuario. X Consistencia en apariencia y uso X Evitar palabras coloquiales. X Mostrar al usuario lo que necesita. X Permitir al usuario recuperarse de los errores X Mantener la interfaz simple, sencilla y organizada. X Funciones del sistema claramente visibles. X Permitir al usuario personalizar la IU. X Culminada la fase de Prototipaje se continúa con la siguiente etapa de la metodología, la Fase de Entrega. 71 Fase IV: Entrega Pruebas de Usabilidad Durante esta prueba, se evaluó la usabilidad de SISGAE, considerando los criterios creados por expertos en IHC, que se describen en la tabla 3 Criterio Descripción Accesibilidad El sitio es visible en cualquier configuración que tenga el cliente. Navegabilidad La información debe ser fácil de encontrar, debe haber consistencia en los elementos de navegación. Lenguaje manejado Debe ser fácil de entender, de acuerdo al tipo de usuario al que este dirigido el Sistema. Conceptos utilizados Deben ser adecuados al usuario al que está dirigida el Sistema. Consistencia En los títulos, cabeceras y etiquetas de links. La familiaridad y el reconocimiento deben permitir a los usuarios asociar ciertos elementos con ciertas funcionalidades. Tabla 3. Estándares de Usabilidad. (Acosta, 2011) Las pruebas de usabilidad, se le fueron aplicados a cinco (5) usuarios de los cuatro (4) diferentes roles, las cuales consistieron en un cuestionario donde se empleó la escala de Likert, ante los cuales el usuario debe mostrar su acuerdo o desacuerdo. Fueron utilizadas cinco (5) alternativas de respuestas para cada enunciado: totalmente de acuerdo, de acuerdo, ni de acuerdo ni en desacuerdo y totalmente desacuerdo. Seguidamente, los resultados fueron recabados y totalizados, calculando el promedio obtenido por cada uno de los criterios. En la tabla 4 se describen los resultados de la encuesta. 72 Planteamiento Resultados Gráfico Los títulos, menús y textos del Sistema son legibles. 4/5 (80%) de los usuarios estuvo totalmente de acuerdo y 1/5 (20%) estuvo de acuerdo Los colores utilizados contribuyen a la percepción adecuada del Sistema 3/5 (60%) de los usuarios estuvo de acuerdo y 2/5 (40%) estuvo ni de acuerdo ni en desacuerdo Los descriptores del Sistema son claros y precisos 2/5 (40%) de los usuarios estuvo totalmente de acuerdo y 2/5 (40%) estuvo de acuerdo y 1/5 (20%) ni de acuerdo ni en desacuerdo Se ofrece una organización que facilita la navegación 3/5 (60%) de los usuarios estuvo de acuerdo, 1/5 (20%) Totalmente de acuerdo y 1/5 (20%) estuvo ni de acuerdo ni en 73 Tabla 4. Resultados de Prueba de Usabilidad De esta manera, es posible concluir que los resultados de esta evaluación fueron favorables, ya que se estuvo totalmente de acuerdo (5) o de acuerdo (4) con los planteamientos del cuestionario la mayoría de los criterios tomados en cuenta, lo que indica que tanto SisGAE y las funcionalidades desarrolladas resultan intuitivas y fáciles de usar para los usuarios finales. desacuerdo El diseño del Sistema favorece su uso 3/5 (60%) de los usuarios estuvo totalmente de acuerdo y 2/5 (40%) de acuerdo El Sistema se puede ejecutar de manera intuitiva 3/5 (60%) de los usuarios estuvo totalmente de acuerdo y 2/5 (40%) de acuerdo Es un Sistema fácil de utilizar 4/5 (80%) de los usuarios estuvo totalmente de acuerdo y 1/5 (20%) de acuerdo Los elementos de ayuda disponibles en el Sistema son útiles 4/5 (80%) de los usuarios estuvo de acuerdo y 1/5 (20%) Totalmente de acuerdo 74 Pruebas de Funcionalidad N° Caso de prueba Rol Resultado Esperado Resultado Obtenido 1. Inicio de sesión Todos Redireccionar a la página de inicio correspondiente al rol que está iniciando sesión. El usuario pudo ingresar de manera exitosa a su página de inicio. 2. Recuperar Contraseña Todos El usuario debe recibir un correo con un enlace para luego proceder a colocar su nueva contraseña. El usuario recibió el correo con el enlace y pudo reestablecer su contraseña con éxito. 3. Preinscribir Actividad Participante El usuario debe subir los requisitos exigidos por la actividad en formato pdf, si la operación fue exitosa debe recibir un correo que le indicara que fue preinscrito de manera correcta El usuario logró subir los requisitos y recibió un correo indicando que la preinscripción fue exitosa. 4. Inscribir Actividad Participante El usuario debe subir el comprobante de pago correspondiente al monto de actividad que desea cursar y recibirá un correo indicando que se ha inscrito de forma correcta. El usuario subió el comprobante de pago y recibió un correo indicando que la inscripción fue exitosa. 5. Ver certificado Participante El usuario debe ingresar al menú “Mis Constancias” y presionar el enlace “ver certificado” (en caso de tener actividades culminadas) para que se despliegue una constancia con los datos de la actividad en formato pdf. El usuario hizo click en el enlace “ver certificado” y pudo observar el certificado en formato pdf. 6. Abonar pago Participante El usuario debe subir el comprobante de pago correspondiente a una cuota de la actividad a realizar y recibir un correo indicando que la operación fue exitosa. El usuario subió el comprobante y recibió el correo indicando que la operación fue exitosa 75 N° Caso de prueba Rol Resultado Esperado Resultado Obtenido 7. Validar Preinscripción Profesor El usuario debe hacer click en el icono correspondiente a la opción “validar preinscripción”, el participante recibirá un correo indicando que su preinscripción fue aceptada El usuario presiono el icono “validar preinscripción” y el participante recibió un correo indicando que su preinscripción fue validada con éxito. 8. Rechazar Preinscripción Profesor El usuario debe hacer click en el icono correspondiente a la opción “rechazar preinscripción”, el participante recibirá un correo indicando que su preinscripción fue rechazada y cuál fue el motivo de rechazo. Se rechazó la preinscripción y el participante recibió un correo indicando el motivo de rechazo. 9. Calificar estudiante Profesor El usuario debe ingresar al listado de estudiantes de una actividad en curso, seleccionar el tipo de calificación y el presionar el botón enviar notas se mostrará un mensaje indicando que las notas fueron enviadas con éxito y el usuario de la Coordinación de Extensión recibirá un correo con el listado de estudiantes. Se enviaron las notas y la Coordinación de Extensión recibió un correo con el listado de estudiantes. 10. Validar Inscripción Fundaciens El usuario debe presionar el botón “validar” y el participante recibirá un correo indicando que su pago fue aprobado Se validó la inscripción y el participante recibió un correo indicando que el pago fue aprobado. 76 N° Caso de prueba Rol Resultado Esperado Resultado Obtenido 11. Rechazar Inscripción Fundaciens El usuario debe presionar el botón “rechazar” y el participante recibirá un correo indicando que su pago fue rechazado. Se rechazó la inscripción y el participante recibió un correo indicando que el pago fue rechazado. 12. Abrir Actividad Coordinación de Extensión El usuario procederá seleccionar una actividad, las fechas correspondientes a la preinscripción, inscripción e inicio de la actividad, numero de cuotas, si se emitirá constancia digital o no y recibirá una alerta indicando que la operación fue exitosa. Se abrió la actividad y se recibió la alerta indicando que la operación fue exitosa. 13. Generar Reportes Coordinación de Extensión y Fundaciens El usuario debe seleccionar 2 fechas y observara el listado de actividades en el rango de fechas seleccionadas, dicho listado podrá ser exportado a formato pdf. Se generó el listado de actividades correspondientes a las fechas y pudo ser exportado a formato pdf. 14. Diplomados Coordinación de Extensión El usuario podrá observar el listado de diplomados culminados y exportar a pdf el modelo de diploma correspondiente a un diplomado especifico. Se generó el listado de diplomados y se pudo exportar el modelo de diploma correspondiente. Con la ejecución de las pruebas anteriores, se concluir que SISGAE es un sistema sin errores, ya que los resultados de cada caso de prueba fueron satisfactorios. 77 Capítulo IV: Resultados En el presente capítulo se presenta las interfaces de SISGAE y la descripción de cada una de ellas, separadas por los distintos roles que la conforman como lo son Profesores, Participantes, Coordinación de Extensión y FUNDACIENS-UCV. La Figura 26 es un diagrama de flujo que muestra el comportamiento de SISGAE. Partiendo desde la apertura de una actividad hasta el la finalización de la misma, se puede observar los pasos que debe seguir un participante para cursar una actividad y como intervienen los profesores, Coordinación de Extensión y FUNDACIENS-UCV-UCV en el mismo. Figura 26. Diagrama de flujo de SISGAE 78 Para comenzar se muestra la página de Inicio de SISGAE, la misma es una interfaz en común para todos los usuarios del sistema. En la figura número 27 se puede apreciar en la parte superior izquierda el logo de la UCV y el logo de SISGAE, en la parte central de la aplicación esta la descripción del sistema y un formulario para “iniciar sesión”, debajo de de esta última hay dos enlaces, uno es para recuperar la contraseña, el segundo para registrarse en el sistema, en la parte inferior del sistema se encuentran tres enlaces de importancia como lo son el de la UCV, la Facultad de Ciencias de la UCV y el de Coordinación de Extensión de la UCV. Figura 27. Página de inicio de SISGAE. Seguidamente se presenta las interfaces del rol “Participante”. En la figura 28 se puede apreciar cuando el usuario ya ha iniciado sesión y se encuentra ubicado en la pestaña de “inicio”. En esta se encuentra un diagrama que explica el flujo que debe realizar para poder participar en una actividad. 79 Figura 28. Pestaña de Inicio, usuario “participante” En la figura 29 se puede apreciar cuando el usuario se encuentra en la pestaña de “Actividades”. En esta se visualiza una tabla con el listado de actividades que ofrece SISGAE. Hay una opción para seleccionar la cantidad de cursos a visualizar por página y se puede filtrar por el tipo de actividad. Figura 29. Pestaña de Actividades, usuario “participante” 80 En la figura 30 se puede apreciar cuando el usuario ha seleccionado la opción para preinscribirse en un curso. En esta se visualiza una tabla con la información de la preinscripción y un buscador para cargar los recaudos solicitados para concretar la misma. Figura 30. Confirmar preinscripción, usuario “participante” En la figura 31 se puede apreciar cuando el usuario se encuentra en la pestaña de “Actividades en curso”. En esta se visualizan dos tablas, una con un calendario académico y la otra con información de las actividades que el usuario está realizando. Vale acotar que dicha interfaz mantiene la misma estructura y funcionalidad para todos los roles. 81 Figura 31. Pestaña de Actividades en curso, todos los roles En la figura 32 se puede apreciar cuando el usuario se encuentra en la pestaña de “Mis certificados”. En esta se visualiza una tabla con información de las actividades que el usuario culmino, en la misma existen dos opciones, una para ver el certificado de una actividad con estatus aprobado y una opción para exportar un PDF con toda la información de dicha tabla Figura 32. Pestaña Mis Certificados, usuario “participante” 82 En la figura 33 se puede apreciar el pdf antes mencionado, donde se encentra el resumen de actividades cursadas por el participante. Figura 33. PDF historial de actividades, usuario “participante” En la figura 34 se puede apreciar un modelo del comprobante de una actividad aprobada. 83 Figura 34. Modelo de Comprobante, usuario “participante” Seguidamente se presenta las interfaces del rol “Profesor”. En la figura 35 se puede apreciar cuando el usuario ya ha iniciado sesión y se encuentra ubicado en la pestaña de “inicio”. En esta se encuentra un diagrama que explica todas las posibles opciones que puede realizar en el sistema. 84 Figura 35. Pestaña de Inicio, usuario “Profesor” En la figura 36 se puede apreciar un PDF que se descarga una vez seleccionada la pestaña “Historial”. En esta se visualiza la información que el usuario está dictando. Figura 36. PDF historial de actividades, usuario “Profesor” En la figura 37 se puede apreciar cuando un usuario se encuentra en la pestaña de “Validar Preinscripción”. En esta se visualizan todas las actividades que tiene a su cargo, 85 para posteriormente chequear por actividad si tiene a personas pendientes por validarles la preinscripción. Figura 37. Pestaña de Validar Preinscripción, usuario “Profesor” En la figura 38 se puede apreciar cuando un usuario con rol “profesor” se encuentra en la interfaz para chequear los recaudos de los participantes de determinada actividad y proceder a validar su preinscripción. Para llegar a esta interfaz el usuario debe seleccionar una de las actividades que se muestran en la pestaña de Validar Preinscripción. Figura 38. Interfaz para Validar Preinscripción, usuario “Profesor” 86 En la figura 39 se puede apreciar cuando un usuario con rol “profesor” se encuentra en la interfaz para calificar de los participantes de determinada actividad. Para llegar a esta interfaz el usuario debe seleccionar una de las actividades que se muestran en la pestaña de “Mis actividades en curso”. Figura 39. Interfaz para Calificar un participante, usuario “Profesor” En la figura 40 se puede apreciar un PDF que se descarga al seleccionar el botón “Exportar PDF” que se muestra en la Figura 37. En esta se visualiza el listado de participantes con los pagos que llevan abonados y el restante por cancelar. 87 Figura 40. Reporte de Pagos, usuario “Profesor” Seguidamente se presenta las interfaces del rol “Coordinación de Extensión”. En la figura 41 se puede apreciar cuando el usuario con rol “Coordinación de Extensión” ya ha iniciado sesión y se encuentra ubicado en la pestaña de “inicio”. En esta se encuentra un diagrama que explica todas las posibles opciones que puede realizar en el sistema. 88 Figura 41. Pestaña de Inicio, usuario “Coordinación de Extensión” En la figura 42 se puede apreciar cuando un usuario con rol “Coordinación de Extensión” se encuentra en la pestaña de “Abrir Actividad”. En esta crean las nuevas actividades que se ofrecen al público. 89 Figura 42. Pestaña de Abrir Actividad, usuario “Coordinación de Extensión” En la figura 43 se puede apreciar cuando el usuario con rol “Coordinación de Extensión” se encuentra en la interfaz donde se pueden visualizar la lista de participantes de determinada actividad previamente seleccionada en la pestaña de “Actividades en Curso”. Figura 43. Interfaz de listado de participantes, usua rio “Coordinación de Extensión” 90 En la figura 44 se puede apreciar un PDF que se descarga al seleccionar el botón “Exportar PDF” que se muestra en la Figura 41. En esta se visualiza el listado de participantes con los pagos que llevan abonados y el restante por cancelar. Figura 44. Reporte de Pagos, usuario “Coordinación de Extensión En la figura 45 se puede apreciar cuando el usuario con rol “Coordinación de Extensión” se encuentra en la pestaña de “Administrar – Gestionar Usuarios”. En esta se visualizan todos los usuarios de los distintos roles y se pueden realizar dos opciones con cada uno de ellos, editar su información o eliminarlos. 91 Figura 45. Pestaña de Administrar – Gestionar Usuarios, usuario “Coordinación de Extensión” En la figura 46 se puede apreciar cuando el usuario con rol “Coordinación de Extensión” se encuentra en la pestaña de “Administrar – Gestionar Actividades”. En esta se visualizan todas las actividades y se pueden realizar dos opciones con cada uno de ellas, editar su información o eliminarlas. 92 Figura 46. Pestaña de Administrar – Gestionar Actividades, usuario “Coordinación de Extensión” En la figura 47 se puede apreciar cuando el usuario con rol “Coordinación de Extensión” se encuentra en la pestaña de “Reportes”. En esta se debe colocar un rango de fechas para visualizar todas las actividades impartidas en dicho rango. Figura 47. Pestaña de Reportes, usuario “Coordinación de Extensión” En la figura 48 se puede apreciar cuando el usuario con rol “Coordinación de Extensión” se encuentra en la interfaz donde se visualiza un reporte de actividades. En esta se puede generar dos tipos de PDF, el primero es donde se visualizan todas las actividades 93 en un rango de fechas, este se obtiene seleccionando el botón que dice Exportar PDF, y el otro es un PDF donde se visualizan todos los participantes de una actividad en particular impartida en ese rango de fechas, este se visualiza seleccionando el “ojo” que esta al final de la fila de cada actividad. Figura 48. Interfaz de Reportes, usuario “Coordinación de Extensión” En la figura 49 se puede apreciar un PDF que se descarga al seleccionar el botón “Exportar PDF” que se muestra en la Figura 47. En esta se visualiza el listado de actividades en un rango de fechas previamente seleccionado. 94 Figura 49. Reporte de Actividades, usuario “Coordinación de Extensión” En la figura 50 se puede apreciar un PDF que se descarga al seleccionar el botón “Exportar PDF” que se muestra en la Figura 48. 95 Figura 50. Reporte de participantes, usua rio “Coordinación de Extensión” Seguidamente se presenta las interfaces del rol “FUNDACIENS-UCV”. En la figura 51 se puede apreciar cuando el usuario con rol “Coordinación de Extensión” ya ha iniciado sesión y se encuentra ubicado en la pestaña de “inicio”. En esta se encuentra un diagrama que explica todas las posibles opciones que puede realizar en el sistema. 96 Figura 51. Pestaña de Inicio, usuario “FUNDACIENS -UCV” En la figura 52 se puede apreciar cuando el usuario con rol “Coordinación de Extensión” se encuentra ubicado en la pestaña de “Validar Inscripción”. En esta se visualizan todas las actividades, para posteriormente chequear por actividad si tiene a personas pendientes por validarles la inscripción. Figura 52. Pestaña de Validar Inscripción, usuario “FUNDACIENS -UCV” 97 En la figura 53 se puede apreciar cuando un usuario con rol “FUNDACIENS-UCV” se encuentra en la interfaz donde sale la lista de participantes de determinada actividad, en esta selecciona algún participante para chequear los recaudos y proceder a validar su Inscripción. Para llegar a esta interfaz el usuario debe seleccionar una de las actividades que se muestran en la pestaña de Validar Inscripción. Figura 53. Interfaz para Validar Inscripción, usuario “FUNDACIENS -UCV” En la figura 54 se puede apreciar cuando un usuario con rol “FUNDACIENS-UCV” se encuentra en la interfaz donde se pueden apreciar todos los recaudos de un participante para ser validado. Para llegar a esta interfaz el usuario debe seleccionar “el ojo” (ver en Figura51) que se encuentra en la columna final de un participante. 98 Figura 54. Interfaz para Chequear recaudos, usuario “FUNDACIENS -UCV” 99 Conclusiones Para el logro del objetivo general planteado en este trabajo especial de grado (TEG) correspondiente al desarrollo de una aplicación web, se realizo el Sistema de Gestión Académica - Administrativa de Extensión de la Facultad de Ciencias de la UCV (SISGAE), con el propósito de garantizar la automatización de procesos manuales que se venían realizando en años anteriores. Se dio cumplimiento a cada uno de los objetivos específicos correspondientes al presente TEG de esta manera: Se planteo el desarrollo de una arquitectura en tres capas donde se veía involucrado el Sistema de Gestión de Actividades de Extensión (SIGADEX), el cual provee la información de las actividades aprobadas por los distintos entes involucrados y listas para ser ofertadas al público. La utilización de la metodología AgilUs permitió que el diseño y la construcción de SisGAE se realizara en iteraciones, puesto que dio flexibilidad para implementar cada uno de los requerimientos, además garantizó la participación del usuario en todo el proceso, manifestando éstos en las diversas reuniones su conformidad con el desempeño y con los resultados arrojados por SisGAE. Esta metodología también permitió la implementación de un conjunto de actividades en forma organizada y rápida. Fue posible efectuar las adaptaciones por parte del equipo de desarrollo, atendiendo las necesidades expresadas por el usuario para la implementación del sistema. Las pruebas de usabilidad aplicadas en cada iteración, detectaron errores que se corrigieron de manera inmediata, contando con los aportes de los distintos usuarios del mismo. SisGAE fue desarrollado utilizando tecnologías de desarrollo web de acceso libre. El uso del Framework de PHP, Laravel 5.1, como tecnología del lado del servidor agilizó considerablemente el proceso de desarrollo, debido a que se aprovecharon las diferentes estructuras y métodos predefinidos que posee, los cuales minimizan el tiempo y esfuerzo de codificación. 100 De esta manera, la aplicación de estándares de programación facilitó la obtención de un código legible, proporcionando que el mantenimiento y la evolución de la aplicación sea duradera. Este sistema web permite llevar a cabo procesos de gestión de actividades académicas y administrativas de manera coherente, en vista de que se contribuyó en la reducción de trabajo y de tiempo debido a que estas ahora se realizan de forma sistemática. Como consecuencia, la elaboración de este TEG realizó un aporte significativo a la Coordinación de Extensión de la Facultad de Ciencias de la UCV, optimizando el proceso de Gestión de Actividades Académicas y Administrativas, a través de la puesta en desarrollo de SisGAE. La automatización de inscripción, apertura de actividades, cierre de actividades, sistematización y organización de la información de los cursos, talleres, diplomados, contenido de los antes mencionados, información de los profesores y participantes, permiten que este proceso sea confiable y se realice en un lapso de tiempo prudente. Finalmente se puede afirmar que los resultados obtenidos fueron altamente satisfactorios ya que se logró cubrir con todos los objetivos planteados. 101 Recomendaciones Para que un sistema sea perdurable, es necesario que se efectúen mejoras continuas que le permita adaptarse a las tecnologías de información vigentes y a las necesidades de los usuarios, por tal razón, a continuación se listan una serie de recomendaciones y/o sugerencias que pudieran ser aplicadas a las bases del SISGAE: 1) Realizar la aplicación Móvil de SISGAE, para una mejor portabilidad y rapidez de uso. 2) Ampliar el alcance para su aplicación en los distintos cursos que ofrece UCV 3) Efectuar el debido entrenamiento con los usuarios del sistema, para su correcto uso y rapidez al momento de realizar el trabajo. 4) Mantener actualizada la Base de Datos de los cursos recientes he información de los mismo en el portal web. 5) Implementar funcionalidades de accesibilidad, que permitan la inclusión de los usuarios con discapacidades, como aumentar el tamaño de las fuentes, cambiar el contraste de los colores, entre otros. 6) Agregar un modulo donde el participante al culminar la actividad pueda realizar comentarios sobre los aspectos generales de la misma. 102 Referencias Acosta, E. (2011). AgilUs: un método ágil de desarrollo de software que incorpora la usabilidad. Caracas. Recuperado el 20 de Julio de 2015. Tomado de http://www.ciens.ucv.ve:8080/genasig/sites/interaccion-humano- comp/archivos/234_CLEI_Acosta_Paper.pdf Alistapart. (2010). Responsive Web Design. Recuperado el 22 de Julio de 2015 Tomado de http://alistapart.com/article/responsive-web-design Alvarez, M. A. (12 de Enero de 2015). Introducción Lenguajes Web. Chile: LibrosWeb. Apache. (1 de Abril de 2013). Servidor HTTP Apache. Recuperado el 12 de Agosto de 2015. Tomado de http://projects.apache.org/indexes/releases.html Araujo, L. M. (2008). Tecnologia Web. Lima. Recuperado el 9 de Octubre de 2015 Catalani, E. (20 de Agosto de 2007). Arquitectura Modelo vista controlador (MVC). Recuperado el 20 de Agosto de 2015. Tomado de https://exequielc.wordpress.com/2007/08/20/arquitectura-modelovistacontrolador/ Date, C. (2001). Introducción a los Sistemas de Bases de Datos ( 7 ed.). Prentice Hall. Recuperado el 13 de Agosto de 2015. Denzer, P. (23 de Octubre de 2002). Paper Postgresql. Recuperado el 11 de Octubre tomado de 2015. Tomado de http://www.academia.edu/5583702/Postgresexpo Duarte J. (2008). Social Influences in brainstorming groups Recuperado el 12 de diciembre de 2015. Tomado de: http://books.google.co.ve/books?id=KtHj- IDy4ZAC&pg=PA5&dq=osborn+brainstorming&hl=es- 103 419&sa=X&ei=ooebUe2ML8P00gGxvoDwAw&ved=0CDsQ6AEwAg#v=onepage&q= osborn%20brainstorming&f=false E-ducativa. (20 de Enero de 2000). E-ducativa. Recuperado el 2 de Septiembre de 2015. Tomado de http://e- ducativ.catedu.es/44700165/aula/archivos/repositorio//1000/1057/html/22_componentes_tc nicos_arquitectura_clienteservidor.html Eguíluz, J. (2008). Introducción a JavaScript. febrero: LibrosWeb. Recuperado el 09 de Octubre de 2015 Escofet, C. (2007). El lenguaje SQL. UOC. Formix. (14 de Abril de 2015). Formix. Recuperado el 1 de Septiembre de 2015. Tomado de https://denev66.wordpress.com/2015/04/14/que-es-el-html/ Fowler, M. (2003 ). Patterns of Enterprise Application Architecture. Addison-Wesley Professional. Garret, J. (2 de Febrero de 2006). Ajax: A New Approach to Web Applications. Tomado de http://www.adaptivepath.com/ideas/ajax-new-approach-web-applications Git Book. (20 de Enero de 2009). Git Book. Recuperado el 20 de Agosto de 2015. Tomado de https://git-scm.com/book/es/v1 Good, R. (2005). Ventajas de las aplicaciones web. Recuperado el 16 de feberero de 2015. Tomado de http://www.pixima.net/aplicaciones-web/ventajas-de-las-aplicaciones-web/ Google. (2 de Enero de 2006). Formularios Google. Tomado de https://docs.google.com/templates?type=forms http://www.pixima.net/aplicaciones-web/ventajas-de-las-aplicaciones-web/ 104 Google. (2 de Enero de 2006). Hojas de Calculo de Google. Recuperado el 1 de Agosto de 2015. Tomado de docs.google.com/spreadsheets Graham, P. (Septiembre de 2001). Sistemas Web. Recuperado el 12 de agosto de 2015 .Tomado de http://www.paulgraham.com/road.html Gutiérrez, J. J. (10 de Enero de 2004). Framework. Recuperado el 28 de Julio de 2015. Tomado de http://www.lsi.us.es/~javierj/investigacion_ficheros/Framework.pdf. Halpin, T. (2009). Object-Role Modeling version 2 (ORM 2). San Francisco: Morgan Kaufmann Publishers . Hernández, J. (2014). Análisis y Desarrollo Web. Tomado de https://books.google.co.ve/books?id=nYDVBQAAQBAJ Inmotion Hosting. (05 de Abril de 2013). What is bootstrap. Recuperado el 5 de Agosto de 2015. Tomado de http://www.inmotionhosting.com/support/edu/joomla-3/using- bootstrap/what-is-bootstrap jQuery. (2005 de Marzo de 2005). jQuery. Recuperado el 28 de Agosto de 2015. Tomado de jquery.com jQuery-UI. (20 de Marzo de 2005). jQuery UI. Recuperado el 1 de Septiembre de 2015. Tomado de http://jqueryui.com/ Laravel. (14 de Marzo de 2013). Laravel Framework. Recuperado el 19 de Agosto de 2015. Tomado de http://laravel.com/docs/4.2/introduction#laravel-philosophy 105 Martínez, A. F. (01 de Diciembre de 2009). WUEP:Un Proceso de Evaluación de Usabilidad Web Integrado en el Desarrollo de Software Dirigido por Modelos. Recuperado el 30 de Septiembre de 2015. Tomado de https://riunet.upv.es/bitstream/handle/10251/11924/WUEP%20- %20Un%20Proceso%20de%20Evaluacion%20de%20Usabilidad%20Web%20...pdf?seque nce=1 Mateu, C. (2004). Desarrollo de Aplicaciones Web. UOC. Mora. (2002). Programacion de Aplicaciones Web. Alicante: Editorial Club Universitario. Morales, J. (10 de Octubre de 2011). Recuperado el 27 de Julio de 2015. Tomado de http://www.slideshare.net/JeremiasMorales/22-lenguajes-del-lado-cliente-9782560 Mosquera, N. E. (6 de Mayo de 2009). Sistema de Informacion Web. Sistema de Informacion Web. Pereira. Recuperado el 27 de Julio de 2015 Mozilla Developer Network. (15 de Septiembre de 2005). Recuperado el 28 de Julio de 2015. Tomado de https://developer.mozilla.org/es/docs/Web/CSS Mozilla Developer Network. (20 de Febrero de 2006). HTML5. Recuperado el 15 de Agosto de 2015.Tomado de https://developer.mozilla.org/es/docs/HTML/HTML5 Mozilla Developer Network. (20 de Febrero de 2006). JavaScript. Recuperado el 29 de Agosto de 2015. Tomado de https://developer.mozilla.org/es/docs/Web/JavaScript Navarro, E. (11 de Junio de 2002). Calidad Gestion Procesos en Tecnologias de Informacion. Recuperado el 11 de Octubre de 2015.Tomado de http://www.gestiopolis.com/calidad-gestion-procesos-tecnologias-informacion/ 106 Ojeda, A. N. (2012). Guia Completa de CSS3. Autoedicion. PHP. (2001). Manual de PHP. Recuperado el 03 de Julio de 2015. Tomado de http://php.net/manual/es/intro-whatis.php PostgreSQL. (02 de Octubre de 2010). PostgreSQL. Recuperado el 27 de Agosto de 2015. . Tomado de http://www.postgresql.org.es/sobre_postgresql Potencier, F. (02 de Julio de 2002). Symfony 1.2, la guía definitiva. Recuperado el 25 de Agosto de 2015. Tomado de https://librosweb.es/libro/symfony_1_2/capitulo_2/el_patron_mvc.html PTV Group. (12 de Enero de 2000). vision-traffic.ptvgroup.com. Recuperado el 1 de Septiembre de 2015. Tomado de vision-traffic.ptvgroup.com Puig, J. C. (2013). CSS3 y Javascript avanzado. UOC. ReviBlog. (7 de Enero de 2014). ReviBlog jQuery Calendar. Recuperado el 20 de Agosto de 2015. Tomado de http://reviblog.net/category/jquery/ Robini. (11 de Septiembre de 2007). Cliente-servidor. Recuperado el 15 de Agosto de 2015. Tomado de http://robiniclienteservidor.weebly.com/ventajas---desventajas.html Sánchez, C. (1 de Septiembre de 2004). ONess: un proyecto open source para el negocio textil mayorista desarrollado con tecnologías open source innovadoras. Recuperado el 20 de Agosto de 2015. Tomado de http://oness.sourceforge.net/proyecto/html/index.html Sevilla, U. d. (1 de Enero de 2009). Introducción a las Aplicaciones Web. Recuperado el 1 de Agosto de 2015. Tomado de http://www.lsi.us.es/docencia/get.php?id=3887 107 Silberschatz. (2002). Fundamentos de Base de Datos. España: McGrawHill (Cuarta Edicion). Torre, A. d. (1 de Enero de 2006). Recuperado el 15 de Julio de 2015. . Tomado de Adelat: http://www.adelat.org/media/docum/nuke_publico/lenguajes_del_lado_servidor_o_cliente. html. Tovar, F & Castillo, I. (2015). Sistema Web para la gestión de las actividades académicas de Extensión. (Tesis de Pregrado). Universidad Central de Venezuela. Caracas, Venezuela Uneweb. (1 de Enero de 2003). PostgreSQL: SMBD. Recuperado el 10 de Octubre de 2015. Tomado de http://uneweb.edu.ve/postgre-sql-nivel-1/ Vega, J. (2004). HTML5: Presente en el Desarrollo Web. Recuperado el 10 de Octubre de 2015 VIT. (1 de Enero de 2015). Tienda VIT. Obtenido de http://tienda.vit.gob.ve/cita/login W3. (10 de Enero de 2005). W3. Recuperado el 13 de Agosto de 2015. Tomado de http://www.w3.org/standards/webdesign/htmlcss W3techs. (1 de Agosto de 2015). Recuperado el 1 de Septiembre de 2015. Tomado de http://w3techs.com/ 108 Anexos 109 Anexo A Glosario de Términos Diplomado: estudios no conducentes a la obtención de títulos ni de grados académicos, curricularmente dinámicos y flexibles, de profundización y actualización del conocimiento en diferentes áreas de extensión, que satisface necesidades específicas del contexto social, nacional e internacional. Cursos cortos: es un tipo de educación formal realizados de manera temporal por interés personal dentro del área de las actividades de extensión, pero no para obtener determinada titulación, sino más bien para recibir una experiencia enriquecedora dentro del área seleccionada. Taller: actividades de trabajo en la que se integran la teoría y la práctica, caracterizadas por la investigación, el aprendizaje por descubrimiento y el trabajo en equipo que, en su aspecto externo, se distingue por el acopio (en forma sistematizada) de material especializado acorde con el tema tratado. Educación a distancia: modalidad educativa en la cual los participantes no requieren asistir físicamente al lugar de estudios. En este sistema de enseñanza, el alumno recibe el material de estudio personalmente por correo postal, correo electrónico u otras posibilidades que ofrece Internet), y devuelve, por el mismo mecanismo los ejercicios o trabajos resueltos. Educación presencial: modalidad educativa donde el alumno y el profesor comparten un espacio físico común, y el contexto del aprendizaje se da allí. Educación Mixta: modalidad educativa que se maneja la educación presencial y a distancia simultáneamente fortaleciendo la formación profesional y académica del participante. http://es.wikipedia.org/wiki/Correo_postal http://es.wikipedia.org/wiki/Correo_electr%C3%B3nico http://es.wikipedia.org/wiki/Internet 110 Anexo B Casos de Uso y Descripciones. Caso de Uso Nivel 1 Tabla 5.Descripción de CU Iniciar Sesión. 111 Descripción Caso de uso: CU. 1. Iniciar Sesión. Actor: todos los actores. Precondición: el usuario debe existir en el sistema. Acción: funcionalidad que permite al usuario acceder a la aplicación, mediante su cédula y una contraseña. Condición de Éxito: se enviará al usuario a la página de inicio del sistema. Tabla 6. Descripción de CU Recuperar Contraseña. Descripción Caso de uso: CU. 2. Recuperar Contraseña Actor: todos los actores. Precondición: el usuario debe existir en la aplicación. Acción: funcionalidad que permite al usuario obtener una nueva contraseña para ingresar al sistema en caso de que haya sido olvidada. Condición de Éxito: se enviará al usuario un correo electrónico donde encontrara un link que lo llevara a la página de cambio de contraseña. Si el cambio es exitoso el usuario será logueado en el sistema. 112 Caso de Uso Nivel 1 - Actor Participante Tabla 7. Descripción de CU Editar perfil. Descripción Caso de uso: CU. 3. Editar perfil. Actor: todos los actores. Precondición: el usuario debe estar logueado en el sistema. Acción: funcionalidad que permite al usuario cambiar sus datos personales. Condición de Éxito: se redirecciona a la página de inicio mostrando un mensaje al usuario indicando que el cambio de datos se ha realizado con éxito. 113 Tabla 8.Descripción de CU Editar foto. Descripción Caso de uso: CU. 3. Editar Foto. Actor: todos los actores. Precondición: el usuario debe estar logueado en el sistema. Acción: funcionalidad que permite al usuario cambiar sus datos personales. Condición de Éxito: se redirecciona a la página de inicio mostrando un mensaje al usuario indicando que el cambio de foto se ha realizado con éxito y se observa la nueva foto de perfil. Tabla 9. Descripción de CU Cambiar Correo. Descripción Caso de uso: CU. 5. Cambiar Correo. Actor: todos los actores. Precondición: el usuario debe estar logueado en el sistema. Acción: funcionalidad que permite al usuario cambiar el correo asociado a su cuenta. Condición de Éxito: se muestra un mensaje indicando al usuario que el cambio de correo se ha realizado de manera correcta. 114 Tabla 10. Descripción de CU Cambiar Contraseña. Descripción Caso de uso: CU. 6. Cambiar Contraseña. Actor: todos los actores. Precondición: el usuario debe estar logueado en el sistema. Acción: funcionalidad que permite al usuario cambiar la contraseña de su cuenta. Condición de Éxito: se muestra un mensaje indicando al usuario que el cambio de contraseña se ha realizado de manera correcta. Tabla 11.Descripción de CU Preinscribir Actividad. Descripción Caso de uso: CU. 7. Preinscribir Actividad. Actor: Participante. Precondición: el usuario debe estar logueado en el sistema. Acción: funcionalidad que permite al usuario realizar la preinscripción de una actividad. Condición de Éxito: se redirecciona al usuario a la página de inicio mostrando un mensaje indicando al usuario que la preinscripción se ha realizado de manera correcta y se envía una notificación por correo electrónico. 115 Tabla 12.Descripción de CU Inscribir Actividad. Descripción Caso de uso: CU. 8. Inscribir Actividad. Actor: Participante. Precondición: el usuario debe estar logueado en el sistema. Acción: funcionalidad que permite al usuario realizar la inscripción de una actividad. Condición de Éxito: se redirecciona al usuario a la página de inicio mostrando un mensaje indicando al usuario que la inscripción se ha realizado de manera correcta y se envía una notificación por correo electrónico. Tabla 13. Descripción de CU Abonar Pago. Descripción Caso de uso: CU. 9. Abonar Pago. Actor: Participante. Precondición: el usuario debe estar logueado en el sistema. Acción: funcionalidad que permite al usuario subir el comprobante de pago asociado a una cuota de pago de una actividad. Condición de Éxito: se redirecciona al usuario a la página de inicio mostrando un mensaje indicando al usuario que el comprobante fue enviado con éxito 116 Tabla 14.Descripción de CU Ver Certificados. Descripción Caso de uso: CU. 10. Ver certificados. Actor: Participante. Precondición: el usuario debe estar logueado en el sistema. Acción: funcionalidad que permite al usuario ver el certificado de las actividades que haya aprobado. . Condición de Éxito: se mostrara al usuario un pdf con el certificado de aprobación del curso. Tabla 15. Descripción de CU Generar Historial. Descripción Caso de uso: CU. 11. Generar Historial. Actor: Participante. Precondición: el usuario debe estar logueado en el sistema. Acción: funcionalidad que permite al usuario generar un pdf con el historial de todas las actividades que haya cursado. Condición de Éxito: se mostrará al usuario un pdf con el listado de todas las actividades realizadas. 117 Caso de Uso Nivel 1 - Actor Profesor Tabla 16. Descripción de CU Calificar Participante. Descripción Caso de uso: CU. 11. Calificar participante. Actor: Profesor. Precondición: el usuario debe estar logueado en el sistema. 118 Acción: funcionalidad que permite al profesor calificar al participante en una actividad de forma cualitativa o cuantitativa. Condición de Éxito: se muestra un mensaje al profesor indicando que las notas han sido enviadas con éxito. Tabla 17. Descripción de CU Validar Preinscripción. Descripción Caso de uso: CU. 12. Validar Preinscripción. Actor: Profesor. Precondición: el usuario debe estar logueado en el sistema. Acción: funcionalidad que permite al profesor ver los requisitos ingresados por el participante y posteriormente validar o rechazar su preinscripción. Condición de Éxito: se muestra un mensaje al profesor indicando que el participante ha sido validado con éxito y se envía un correo electrónico al participante indicando que su inscripción ha sido validada o rechazada. Tabla 18. Descripción de CU Generar Historial (profesor). Descripción Caso de uso: CU. 13. Generar Historial. Actor: Profesor. 119 Precondición: el usuario debe estar logueado en el sistema. Acción: funcionalidad que permite al profesor generar un archivo pdf con todas las actividades que ha dictado. Condición de Éxito: se muestra un archivo pdf con él historial de actividades y las fechas en las que estas fueron dictadas. Caso de Uso Nivel 1 - Actor Coordinación de Extensión / Administrador 120 Tabla 19. Descripción de CU Abrir Curso. Descripción Caso de uso: CU. 14. Abrir Curso. Actor: Coordinación de Extensión/ Administrador. Precondición: el usuario debe estar logueado en el sistema. Acción: funcionalidad que permite al usuario realizar la apertura de una actividad, colocando las fechas de preinscripción, inscripción, inicio y fin de la actividad, y el número de cuotas en las que puede ser pagada la actividad por un participante. Condición de Éxito: se muestra un mensaje indicando que la apertura del curso se ha realizado de manera correcta. Tabla 20. Descripción de CU Generar Reportes. Descripción Caso de uso: CU. 15. Generar Reportes. Actor: Coordinación de Extensión/ Administrador - FUNDACIENS-UCV. Precondición: el usuario debe estar logueado en el sistema. Acción: funcionalidad que permite al usuario generar un reporte de las actividades que se han llevado a cabo en una fecha determinada. Condición de Éxito: se muestra un pdf con las actividades realizadas en las fechas indicadas. 121 Tabla 21. Descripción de CU Gestionar Actividades. Descripción Caso de uso: CU. 16. Gestionar Actividades. Actor: Coordinación de Extensión/ Administrador. Precondición: el usuario debe estar logueado en el sistema. Acción: funcionalidad que permite al usuario ver y modificar contenido de las actividades aprobadas, así como activar o desactivar el curso para que este visible su información dentro de la aplicación Condición de Éxito: se muestra un pdf con las actividades realizadas en las fechas indicadas. Tabla 22. Descripción de CU Gestionar Usuarios. Descripción Caso de uso: CU. 17. Gestionar Usuarios. Actor: Coordinación de Extensión/ Administrador. Precondición: el usuario debe estar logueado en el sistema. Acción: funcionalidad que permite ver el listado de usuarios registrados en el sistema, así como agregar y eliminar los mismos. Condición de Éxito: se muestra un mensaje indicando que el usuario ha sido agregado o eliminado de manera correcta. 122 Caso de Uso Nivel 1 - Actor FUNDACIENS-UCV 123 Tabla 23. Descripción de CU Validar Inscripción. Descripción Caso de uso: CU. 18. Validar Inscripción. Actor: FUNDACIENS-UCV. Precondición: el usuario debe estar logueado en el sistema. Acción: funcionalidad que permite ver el listado de participantes inscritos en una actividad para verificar los comprobantes de pago y validar su inscripción. Condición de Éxito: se muestra un mensaje indicando que el comprobante de pago ha sido validado con éxito y se envía una notificación por correo electrónico al participante indicando que su inscripción ha sido aceptada. Tabla 24. Descripción de CU Validar Pagos. Descripción Caso de uso: CU. 19. Validar Pagos. Actor: FUNDACIENS-UCV. Precondición: el usuario debe estar logueado en el sistema. Acción: funcionalidad que permite ver el listado de participantes inscritos en una actividad para verificar los comprobantes de pago en caso de que la actividad permita el pago por cuotas. Condición de Éxito: se muestra un mensaje indicando que el comprobante de pago ha sido validado o rechazado de manera correcta. 124 Anexo C Manual Técnico SisGAE El presente manual tiene el propósito de informar los pasos a seguir para instalar el sistema SISGAE en un servidor Linux para su futuro mantenimiento. 1. Instalar SMBD PostgreSQL El primer paso debe ser instalar la versión de PostgreSQL 9.3. Lo cual se puede realizar mediante consola aplicando el siguiente comando: Luego se debe crear una Base de Datos con el nombre SISGAE, este nombre puede ser modificado por el nombre de su preferencia, pero al hacerlo es necesario realizar una modificación en el archivo de configuraciones globales .env. Una vez instalado PostgreSQL se debe restaurar el SISGAE.backup que se encuentra en la raíz del proyecto. 2. Instalar Apache, PHP y Laravel 5.1 Para la correcta instalación de Laravel 5.1 se requiere tener:  PHP >= 5.5.9  OpenSSL PHP Extension  PDO PHP Extension  Mbstring PHP Extension  Tokenizer PHP Extension Para la instalación de Apache se ejecuta el siguiente comando: 125 Una vez instalado apache, es necesario tener activo el módulo mod_rewrite, ya que es el que permite crear direcciones URL alternativas a las dinámicas generadas por la programación del Sistema Web SISGAE, de tal modo que sean más legibles y fáciles de recordar. Para habilitar dicho módulo se deben seguir los pasos a continuación: 1. Ejecutar el comando: 2. Reiniciar el servidor apache 3. Editar el VirtualHost por defecto: 4. En el archivo del paso anterior buscar la línea “DocumentRoot /var/www/html” y agregar justo debajo el siguiente fragmento de código. 5. Reiniciar nuevamente el servidor apache utilizando el comando del paso 2. 126 6. Para verificar si el módulo mod_rewrite fue instalado correctamente se debe acceder al archivo phpinfo(). 3. Instalar Composer Laravel utiliza Composer para manejar sus dependencias. Para utilizarlo se deben realizar los siguientes pasos: a. Instalar Curl b. Instalar Composer de manera global. Esto hará que se descargue en la carpeta home el archivo composer.phar el cual tendría que ser llamado cada vez que queramos hacer uso de él, para instalarlo de manera global para que Composer pueda ser llamado desde cualquier lugar sin 127 importar la carpeta en la que nos encontremos, es necesario copiar el archivo composer.phar a la carpeta /usr/local/bin y con el siguiente comando: c. Para verificar la instalación se puede teclear “composer” desde la terminal y se observará una ventana similar a la siguiente: 4. Instalar el proyecto Laravel Para instalar SISGAE se debe copiar el directorio “SISGAE” en la ruta “/var/www/html” y dar permisos de escritura a las carpetas siguientes carpetas: a. storage (navegar al directorio raíz de SISGAE para ejecutar el comando) b. comprobantes, perfiles y requisitos (navegar al directorio public para ejcutar el comando) 128 Por último para verificar si el proyecto fue instalado de forma correcta se debe abrir el navegador e ingresar la siguiente url: http://sisgae.desarrollo.ciens.ucv.ve/sisgae/public/ y se observara la página de inicio de SiSGAE. 129 Anexo D Cuestionario de Usabilidad El presente cuestionario tiene como finalidad conocer su opinión con respecto a la usabilidad del “Sistema para la Gestion Académica-Administrativa de las Actividades de Extensión” SisGAE teniendo en cuenta la efectividad, eficiencia y satisfacción con la que el sistema puede ser comprendido, utilizado y atractivo para el usuario. La puntuación tiene la siguiente escala: Totalmente de acuerdo De acuerdo Ni de acuerdo ni en desacuerdo En desacuerdo Totalmente en desacuerdo 5 4 3 2 1 Nº Item 5 4 3 2 1 1 Los títulos, menús y textos del a aplicación son legibles 2 Los colores utilizados contribuyen a la percepción adecuada a la aplicación. 3 Los descriptores del sistema son claros y precisos 4 Se ofrece una organización que facilita la navegación 5 El diseño del sistema favorece su uso 6 El sistema se puede ejecutar de manera intuitiva 7 Es un sistema fácil de utilizar 8 Los elementos de ayuda disponibles en el sistema son útiles Encuesta basada en: Martínez, A. F. (01 de Diciembre de 2009). WUEP: Un Proceso de Evaluación de Usabilidad Web Integrado en el Desarrollo de Software Dirigido por Modelos. 130 Anexo E MANUAL DE USUARIO SisGAE Para registrarse en SisGAE debe realizar los siguientes pasos: 1. Click en el menú actividades: 2. Selecciona una de las actividades (Curso, taller o diplomado) del panel lateral 3. Si la actividad está disponible para preinscripción, al final de la información de la actividad estará el botón “Preinscribir”. Haga click en dicho botón. 131 4. Al hacer click en el botón preinscribir el sistema le pedirá que ingrese su cédula de identidad. Ingrese su cédula y pulse el botón aceptar. 5. Cuando el sistema verifique su cédula se desplegará un formulario donde deberá ingresar sus datos personales, clave de acceso y los requisitos exigidos por la actividad a preinscribir. Una vez ingresados los datos pulse el botón registrar. 6. Verifique la bandeja de entrada del correo ingresado en el paso anterior para confirmar que su registro fue realizado con éxito. 132 7. Al ingresar a SisGAE utilizando su cédula de identidad y su contraseña y observará la pantalla de inicio donde podrá visualizar un diagrama con la explicación de los pasos a realizar para participar en una actividad. 8. En el menú lateral encontrará las siguientes opciones: a. Inicio. b. Actividades. c. Mis Actividades en curso. d. Mis certificados. e. Cambiar Contraseña. 9. En el menú “Actividades” podrá observar una tabla con el listado de actividades que ofrece la Coordinación de Extensión y el botón preinscribir si alguna de estas actividades está disponible para la fecha actual. 133 10. En el menú “Mis Actividades en curso” encontrará una tabla que muestra el listado de actividades que posee activas para la fecha actual con su respectivo estatus. 11. En el menú “Mis certificados” podrá visualizar el historial de actividades que ha cursado incluyendo su estatus, fecha de inicio, fecha de culminación y un enlace para ver el certificado digital en caso de que esté disponible para la actividad. También tendrá la posibilidad de exportar este historial a formato PDF. 134 12. Para finalizar en el menú “Cambiar Contraseña” se desplegara un formulario donde deberá ingresar su contraseña actual, nueva contraseña y confirmación para realizar el cambio de la misma.UNIVERSIDAD CENTRAL DE VENEZUELA FACULTAD DE CIENCIAS ESCUELA DE COMPUTACIÓN Trabajo Especial de Grado presentado ante la Ilustre Universidad Central de Venezuela por los Bachilleres Jesús Armando Romero Isturiz C.I. V-20.483.420 Samuel David Quintero Granadillo C.I. V-18.528.076 Para optar al título de Licenciado en Computación Tutora: Profa. Yosly C. Hernández B Prof Carlos Yanes. Caracas, 09 de octubre de 2017 SISGAE: Sistema Web de Gestión Académica- Administrativa de las actividades de Extensión de la Facultad de Ciencias de la Universidad Central de Venezuela I II Agradecimientos El agradecimiento más importante es para Dios, por brindarme salud y permitirme terminar con éxito esta bonita etapa de mi vida, donde aprendí muchas cosas, conocí excelentes personas y logré alcanzar muchos más objetivos de los que me plantee. A mis padres: Gehnny Isturiz y Armando Romero, por ser mí apoyo en absolutamente todo lo que me propuse a lo largo de la licenciatura. A mis amigas: Rudy Thereze, Alyst Castro, por siempre estar detrás de mí para que terminará la Tesis. A mis colegas y hermanos: Felix Tovar, Humberto Ojedas, Alvaro Paz y Samuel Quintero por el apoyo brindado en el desarrollo de este Trabajo de Grado y en toda mi trayectoria universitaria. Jesús Romero III Agradezco principalmente a Dios por darme vida y salud y por haberme permitido realizar mi carrera en la universidad que siempre soñé, “La Casa que Vence la Sombra” y a la cual le debo todos aquellos conocimientos que me ayudaron a crecer tanto personal como profesionalmente. A mis padres, hermanos, mi abuela y mi novia quienes siempre han sido un apoyo incondicional y estuvieron detrás de mí para que culminara esta etapa con éxito. A mis compañeros y amigos de la Facultad de Ciencias con quienes compartí la mejor etapa de mi vida y que fueron participes de momentos buenos y momentos difíciles durante toda la trayectoria universitaria. Finalmente pero no menos importante, a todos los profesores quienes brindaron sus conocimientos para ser un buen profesional, a mis tutores Yosly Hernández y Carlos Yanes y a todo el personal de la Coordinación de Extensión y Fundaciens-UCV .quienes brindaron su apoyo durante el desarrollo del Trabajo Especial de Grado. Samuel Quintero iv Dedicatoria Este trabajo está dedicado, con mucho amor, a mis Padres, quienes son pilares en todo lo que hoy por hoy he construido y formado; son mi apoyo incondicional, mi admiración y los mejores padres del mundo. GRACIAS, los amo. Jesús Romero. A mis padres, quienes compartieron conmigo los momentos buenos y no tan buenos a lo largo de la carrera, quienes han sido mi apoyo incondicional en todo momento y han sido mi inspiración para ser un profesional. Samuel Quintero. v RESUMEN En la Facultad de Ciencias de la UCV se realizan actividades extracurriculares como Cursos, Talleres y Diplomados, las cuales son administradas por la Coordinación de Extensión en conjunto con FUNDACIENS. Una vez aprobada una actividad por el Consejo de Facultad, el Consejo de Escuela, el Consejo de Extensión y las Comisiones de Extensión se da inicio al proceso académico y administrativo donde realiza el registro de la actividad, preinscripción e inscripción de los participantes, calificación, emisión de certificados, entre otros. Dichas actividades se realizaban de forma manual (planillas) y herramientas ofimáticas, razón por la cual los datos no estaban centralizados y la comunicación entre la Coordinación de Extensión y FUNDACIENS-UCV no era eficiente, ocasionando demoras e inconvenientes durante su ejecución, por tal razón, el objetivo del Trabajo Especial de Grado (TEG), fue el desarrollo de un Sistema Web para la Gestión Académica-Administrativa de las actividades de Extensión. (SisGAE). Este Sistema es de gran importancia para mejorar la comunicación entre los entes relacionados y automatizar los procesos mencionados anteriormente. El desarrollo de SisGAE se realizó empleando una adaptación de la metodología AgilUs (Acosta, 2011) aplicando cada una de sus fases: requisitos, análisis, prototipaje y entrega, utilizando como herramientas de desarrollo los siguientes lenguajes: HTML, CSS (BOOTSTRAP) y JQuery del lado del cliente, PHP con el Framework laravel en su versión 5.1 de lado del servidor, y como manejador de base de datos PostgreSQL. SisGAE está conformado por cuatro (4) roles donde cada uno tiene diferentes funcionalidades: el primero es de Participante que es el encargado de preinscribirse e inscribirse en las actividades. El segundo de Profesor que es el encargado de aprobar las preinscripciones y aprobar o reprobar a los participantes. El tercero es Coordinación de Extensión que es el encargado de abrir las actividades y el cuarto es de tipo FUNDACIENS-UCV que es el encargado de aprobar las inscripciones y pagos de los participantes. Palabras Clave: SISGAE, gestión académica-administrativa, actividades de extensión, Laravel. vi ÍNDICE GENERAL Índice de Figuras ................................................................................................................. ix Índice de tablas .................................................................................................................... xi Introducción .......................................................................................................................... 1 Capítulo I: Problema de Investigación ............................................................................... 3 Contexto de la Investigación ............................................................................................... 3 Planteamiento del problema ................................................................................................ 4 Justificación ...................................................................................................................... 12 Objetivo General ............................................................................................................... 13 Objetivos Específicos ....................................................................................................... 13 Alcance ............................................................................................................................. 13 Metodología de desarrollo ................................................................................................ 14 Ciclo de Desarrollo de AgilUs ...................................................................................... 14 Artefactos ...................................................................................................................... 16 Antecedentes ..................................................................................................................... 16 Capítulo II. Marco Conceptual ......................................................................................... 17 Aplicación Informática ..................................................................................................... 17 Sistema web ...................................................................................................................... 18 Ventajas y desventajas .................................................................................................. 20 Arquitecturas de las aplicaciones web .............................................................................. 22 El Cliente .......................................................................................................................... 22 El Servidor ........................................................................................................................ 23 Tecnologías de Desarrollo Web ........................................................................................ 25 Lenguajes del lado del cliente ........................................................................................... 25 Lenguaje de marcado de hipertexto (HTML) ................................................................... 26 Hoja de estilos en cascada (CSS) ...................................................................................... 27 Lenguaje Javascript y Jquery ............................................................................................ 29 vii Lenguajes del lado del Servidor ........................................................................................ 30 Pre-procesardor de Hipertexto (PHP) ............................................................................... 30 Características del Lenguaje PHP ................................................................................. 31 Patrón de diseño MVC (Modelo Vista Controlador) ........................................................ 33 Frameworks MVC ............................................................................................................ 34 Base de Datos .................................................................................................................... 35 Características de una Base de Datos ............................................................................ 36 Ventajas de una Base de Datos ..................................................................................... 36 Desventajas de una Base de Datos ................................................................................ 37 Sistema de Base de Datos ................................................................................................. 38 Sistema Manejador de Base de Datos ............................................................................... 38 Funciones del SMBD .................................................................................................... 38 PostgreSQL ....................................................................................................................... 39 Características de PostgreSQL ...................................................................................... 39 Licencias ........................................................................................................................... 40 Capítulo III: Marco Aplicativo ......................................................................................... 41 Fase I: Requisitos .............................................................................................................. 41 Entrevistas ......................................................................................................................... 41 Tormentas de ideas ........................................................................................................... 42 Sondeos ............................................................................................................................. 43 Perfil de usuario ............................................................................................................ 44 Listas de Requerimientos Funcionales y No Funcionales ............................................. 45 Requerimientos Funcionales ......................................................................................... 45 Requerimientos comunes para cada perfil de usuario: .................................................. 45 Requerimientos para el perfil Coordinación de Extensión/ Administrador: ................. 46 Requerimientos para el perfil FUNDACIENS-UCV: ................................................... 46 Requerimientos para el perfil Participante: ................................................................... 46 Requerimientos para el perfil Profesor: ........................................................................ 46 Requerimientos No Funcionales ................................................................................... 46 Fase II: Análisis ................................................................................................................ 48 viii Prototipos de Interfaz .................................................................................................... 48 Guías de estilo ............................................................................................................... 49 Modelo de Casos de Uso ............................................................................................... 51 Modelo de objetos del dominio ..................................................................................... 53 Diseño Lógico y Físico de la Base de Datos ................................................................. 54 Plataforma de Desarrollo ............................................................................................... 59 Fase III: Prototipaje .......................................................................................................... 59 Arquitectura del Sistema ............................................................................................... 59 Desarrollo del Sistema ...................................................................................................... 60 Lista de Comprobación ..................................................................................................... 69 Fase IV: Entrega ............................................................................................................... 71 Pruebas de Usabilidad ................................................................................................... 71 Pruebas de Funcionalidad.............................................................................................. 74 Capítulo IV: Resultados ..................................................................................................... 77 Conclusiones ........................................................................................................................ 99 Recomendaciones .............................................................................................................. 101 Referencias ........................................................................................................................ 102 Anexos ................................................................................................................................ 108 Anexo A ............................................................................................................................. 109 ix Índice de Figuras Figura 1. Diagrama de flujo de la apertura, prosecución y finalización de una actividad. .... 8 Figura 2. Planilla de inscripción para cursos, talleres o diplomados ...................................... 9 Figura 3. Comprobante de pago ........................................................................................... 10 Figura 4. Ciclo de Vida de Metodología AgilUs .................................................................. 15 Figura 5 Esquema básico de una aplicación web ................................................................. 19 Figura 6. Tecnologías empleadas en el cliente y en el servidor web.................................... 23 Figura 7. Arquitectura de las aplicaciones web: todo en un servidor ................................... 24 Figura 8. Arquitectura de las aplicaciones web: separación servidor de datos. ................... 24 Figura 9. Arquitectura Modelo Vista Controlador ............................................................... 34 Figura 10. Tormenta de ideas ............................................................................................... 43 Figura 11. Prototipo de interfaz ............................................................................................ 48 Figura 12. Prototipo de interfaz 2 ......................................................................................... 49 Figura 13. Caso de Uso Nivel 0. ........................................................................................... 52 Figura 14. Caso de Uso Nivel 1. ........................................................................................... 53 Figura 15. Diagrama de objeto de Dominio SISGAE. ......................................................... 54 Figura 16. Tablas de la base de datos SISGAE. ................................................................... 55 Figura 17. Modelo Relacional SISGAE. .............................................................................. 58 Figura 18. Arquitectura en tres capas ................................... ¡Error! Marcador no definido. Figura 19. Conexión con la base de datos (1)....................................................................... 61 Figura 20. Conexión con la base de datos (2)....................................................................... 61 Figura 21. Controlador del modelo Registro. ....................................................................... 63 Figura 22. Archivo de rutas SISGAE. .................................................................................. 64 Figura 23. Parte del código para iniciar sesión. .................................................................... 65 Figura 24. Plantilla del header. ............................................................................................. 66 Figura 25. Vista de inicio de sesión. ..................................................................................... 66 Figura 26. Diagrama de flujo de SISGAE ............................................................................ 77 Figura 27. Página de inicio de SISGAE. .............................................................................. 78 Figura 28. Pestaña de Inicio, usuario “participante” ............................................................ 79 Figura 29. Pestaña de Actividades, usuario “participante” .................................................. 79 Figura 30. Confirmar preinscripción, usuario “participante” ............................................... 80 Figura 31. Pestaña de Actividades en curso, todos los roles ................................................ 81 Figura 32. Pestaña Mis Certificados, usuario “participante”................................................ 81 Figura 33. PDF historial de actividades, usuario “participante” .......................................... 82 Figura 34. Modelo de Comprobante, usuario “participante”................................................ 83 Figura 35. Pestaña de Inicio, usuario “Profesor”.................................................................. 84 Figura 36. PDF historial de actividades, usuario “Profesor” ................................................ 84 Figura 37. Pestaña de Validar Preinscripción, usuario “Profesor” ....................................... 85 Figura 38. Interfaz para Validar Preinscripción, usuario “Profesor” ................................... 85 Figura 39. Interfaz para Calificar un participante, usuario “Profesor” ................................. 86 Figura 40. Reporte de Pagos, usuario “Profesor” ................................................................. 87 Figura 41. Pestaña de Inicio, usuario “Coordinación de Extensión”................................... 88 x Figura 42. Pestaña de Abrir Actividad, usuario “Coordinación de Extensión” ................... 89 Figura 43. Interfaz de listado de participantes, usuario “Coordinación de Extensión” ........ 89 Figura 44. Reporte de Pagos, usuario “Coordinación de Extensión ..................................... 90 Figura 45. Pestaña de Administrar – Gestionar Usuarios, usuario “Coordinación de Extensión” ............................................................................................................................ 91 Figura 46. Pestaña de Administrar – Gestionar Actividades, usuario “Coordinación de Extensión” ............................................................................................................................ 92 Figura 47. Pestaña de Reportes, usuario “Coordinación de Extensión” .............................. 92 Figura 48. Interfaz de Reportes, usuario “Coordinación de Extensión” .............................. 93 Figura 49. Reporte de Actividades, usuario “Coordinación de Extensión” ......................... 94 Figura 50. Reporte de participantes, usuario “Coordinación de Extensión” ........................ 95 Figura 51. Pestaña de Inicio, usuario “FUNDACIENS-UCV” ............................................ 96 Figura 52. Pestaña de Validar Inscripción, usuario “FUNDACIENS-UCV” ...................... 96 Figura 53. Interfaz para Validar Inscripción, usuario “FUNDACIENS-UCV” ................... 97 Figura 54. Interfaz para Chequear recaudos, usuario “FUNDACIENS-UCV” ................... 98 xi Índice de tablas Tabla 1. Guía de Estilo de SISGAE ..................................................................................... 51 Tabla 2. Lista de Comprobación de SIGAE ......................................................................... 70 Tabla 3. Estándares de Usabilidad. (Acosta, 2011) .............................................................. 71 Tabla 4. Resultados de Prueba de Usabilidad ...................................................................... 73 Tabla 5.Descripción de CU Iniciar Sesión. ........................................................................ 110 Tabla 6. Descripción de CU Recuperar Contraseña. .......................................................... 111 Tabla 7. Descripción de CU Editar perfil. .......................................................................... 112 Tabla 8.Descripción de CU Editar foto. ............................................................................. 113 Tabla 9. Descripción de CU Cambiar Correo.................................................................... 113 Tabla 10. Descripción de CU Cambiar Contraseña. ........................................................... 114 Tabla 11.Descripción de CU Preinscribir Actividad. ......................................................... 114 Tabla 12.Descripción de CU Inscribir Actividad. .............................................................. 115 Tabla 13. Descripción de CU Abonar Pago. ...................................................................... 115 Tabla 14.Descripción de CU Ver Certificados. .................................................................. 116 Tabla 15. Descripción de CU Generar Historial................................................................. 116 Tabla 16. Descripción de CU Calificar Participante. ......................................................... 117 Tabla 17. Descripción de CU Validar Preinscripción. ....................................................... 118 Tabla 18. Descripción de CU Generar Historial (profesor)................................................ 118 Tabla 19. Descripción de CU Abrir Curso. ........................................................................ 120 Tabla 20. Descripción de CU Generar Reportes. ............................................................... 120 Tabla 21. Descripción de CU Gestionar Actividades. ........................................................ 121 Tabla 22. Descripción de CU Gestionar Usuarios. ............................................................. 121 Tabla 23. Descripción de CU Validar Inscripción. ............................................................ 123 Tabla 24. Descripción de CU Validar Pagos. ..................................................................... 123 1 Introducción Las Tecnologías de Información y Comunicaciones (TIC), han tenido en Venezuela una gran relevancia, ya que el uso de las mismas ha generado avances significativos en los sectores de la educación, la salud, entre otros. Toda organización exitosa, se ha concientizado de la importancia del manejo de las tecnologías de información (TI), y es que han rebasado el papel inicial que tuvieron asignado, pasando de ser simples herramientas que facilitaban la operación en las empresas, a establecerse como factores estratégicos y críticos de éxito para una organización. (Tovar, Castillo, 2015). Los sistemas “Web” se pueden utilizar en cualquier navegador “Web” como por ejemplo “chrome”, “firefox” e “Internet Explorer”, sin importar el sistema operativo. Para utilizar las aplicaciones “Web” es innecesario instalarlas en cada computadora, ya que los usuarios se conectan al servidor donde se aloja el sistema. Debido a que la puesta en práctica de Sistemas de Información facilitan y mejoran los tiempos de respuesta en las tareas dentro de las organizaciones y empresas, se desarrolló el presente Trabajo Especial de Grado (TEG) que lleva como nombre: Sistema “Web” para la Gestión Académica-Administrativa de las Actividades de Extensión (SisGAE). La finalidad de este sistema es brindar mayor sencillez, ahorro de tiempo y material de carga al conjunto de actividades que conlleva el proceso académico y administrativo que representa la formación, capacitación y difusión de la información de los cursos, talleres y diplomados que ofrece la Coordinación de Extensión de la Facultad de Ciencias de la UCV, con el apoyo de FUNDACIENS-UCV, consolidando las acciones y hacerlas efectivas y eficientes. La importancia de este trabajo radica en que SisGAE brindará a la Coordinación de Extensión y a FUNDACIENS-UCV la oportunidad de realizar las actividades académico- administrativas de su programa de formación de talento humano de forma automática, mejorando la eficiencia del proceso y la interacción entre los distintos usuarios que requieren información oportuna y precisa sobre las operaciones administrativas y bancarias 2 en torno al proceso de aprobación de su solicitud de ingreso a los cursos o diplomados y a su inscripción en los mismos. En virtud de lo expuesto el presente Trabajo Especial de Grado (TEG), consta de cuatro (4) capítulos, los cuales corresponden al Problema de Investigación, Marco conceptual, Marco Aplicativo y Resultados, así como también la conclusión, las recomendaciones, las referencias bibliográficas, el Manual Técnico y el manual de Usuarios del Sistema que brindan soporte a SisGAE. 3 Capítulo I: Problema de Investigación En este capítulo se describe el problema que fue identificado en torno a la Gestión Académica y Administrativa de las actividades que ofrece la Coordinación de Extensión de la Facultad de Ciencias de la U.C.V., en conjunto a FUNDACIENS-UCV. Estas actividades son cursos, talleres y diplomados; los planteamientos que justificaron la solución del problema, los objetivos generales y específicos, el alcance y la metodología aplicada en este TEG. Contexto de la Investigación La Coordinación de Extensión de la Facultad de Ciencias de la UCV y FUNDACIENS-UCV ofrecen actividades de orden extracurricular a los miembros de la comunidad nacional, orientadas a su formación profesional, como diplomados, cursos y talleres en sus modalidades presenciales, a distancia o mixtas, con una amplia oferta de posibilidades de participación. Esto en el contexto de la Misión y Visión institucional que señalan, respectivamente: “Contribuir a la solución de los problemas más sentidos de la sociedad venezolana y a la formación integral, principios éticos y desarrollo de la capacidad de servicio de los futuros profesionales y científicos de la Facultad de Ciencias de la UCV, asumiendo su lealtad a la Universidad y al país, a sus valores y a sus tradiciones, entendidos como patrimonio colectivo”, (CEFC, 2013). Y como Visión: “Convertir a la Facultad de Ciencias en una institución líder por excelencia en la promoción, desarrollo y ejecución de la extensión universitaria, contribuyendo a la formación de ciudadanos sensibilizados con los problemas de la sociedad venezolana que afectan su desarrollo como país y preparados para abordar su solución”, (CEFC, 2013). La Coordinación de Extensión de la Facultad de Ciencias de la UCV describe en su página “Web” los siguientes objetivos: 1. Insertar la Extensión en el diseño curricular de la Facultad. 2. Organizar la Coordinación. 4 3. Combinar financiamiento interno y externo para el desarrollo y autogestión de las actividades de extensión:  Comunicación.  Cultura.  Deportes.  Investigación interinstitucional.  Contacto con egresados.  Docencia y cursos de Extensión. 4. Contribuir a la infraestructura, adquisición de equipos y mantenimiento con ingresos extraordinarios. 5. Mantener una estrecha comunicación entre FUNDACIENS-UCV y la Coordinación de Extensión para validar los pagos de los participantes y así permitir su participación en las actividades. Planteamiento del problema Dentro de la Facultad de Ciencias de la UCV se ofertan actividades de extensión tales como: diplomados, talleres y cursos cortos. Su proceso de gestión lo llevan entre la Coordinación de Extensión y FUNDACIENS-UCV, utilizando algunas herramientas ofimáticas y procesos manuales (Tovar, Castillo, 2015). La Coordinación de Extensión es la responsable de la gestión académica; desde la tramitación de la propuesta por parte de la dependencia respectiva o el profesor responsable de la actividad docente, ante el Consejo de Extensión, y luego ante el Consejo de Facultad, para su aval y aprobación de dictado, respectivamente; hasta la coordinación de su ejecución en cuanto a los recursos de infraestructura física y tecnológica necesarios para su desarrollo. Mientras que FUNDACIENS-UCV es la responsable del proceso administrativo relacionado con los procesos de preinscripción, inscripción y pago de honorarios profesionales, equipos, materiales o suministros. La oferta de las actividades, su prosecución y dictado se sigue a través un proceso el cual se describe a continuación. 5 1. Aprobación de la actividad (curso, diplomado o taller). Este proceso se realiza con SIGADEX (Tovar, Castillo, 2015) el cual se explica en la sección de Antecedentes. 2. Registro de la información. La Coordinación de Extensión envía a FUNDACIENS- UCV información sobre la actividad (nombre del curso, objetivos, programa, número de participantes, profesores o facilitadores, cronograma de desarrollo, costo desglosado, etc). 3. Registro administrativo. FUNDACIENS-UCV elabora un libro auxiliar de la actividad para llevar el control de los pagos. 4. Divulgación de la actividad. Actualmente, esto se hace muy poco por falta de personal y de medios para realizar dicha divulgación, como por ejemplo: página “web”, “blog”, “twitter”, o “facebook”. 5. Registro de aspirantes. Recibir lista de aspirantes o preinscritos en el curso, diplomado o taller. 6. Facturación. Solicitud de factura personalizada de cada participante. El participante llena la planilla de inscripción con sus datos: personales, laborales, académicos y administrativos. Estos últimos muy importantes para la facturación. Se elaboran las facturas. 7. El participante paga en cualquiera de los bancos indicados por FUNDACIENS- UCV el costo total de la actividad o una alícuota de la misma acordada con la Coordinación de Extensión. 10. El participante entrega comprobante de pago (depósito bancario o transferencia bancaria que incluya número del comprobante, nombre del banco), con todos los datos del depositante (nombre, cédula, teléfono, dirección fiscal, monto del depósito). 11. Se verifica el ingreso del dinero en el banco en las cuentas bancarias de la Fundación, con los datos del comprobante de pago. 12. Registro en el sistema administrativo. 13. Imprime comprobante de pago del participante. 14. Se entrega información del pago del participante al auxiliar contable. 6 15. Se registra ingreso del pago del participante en libro auxiliar y libro Banco. 16. Se calcula comisión (10% del costo del curso sin contar IVA) y se registra en los libros auxiliares y banco. 17. Se registra el cobro que hace la Coordinación de Extensión (20% de los costos asociados a los gastos operativos del proyecto sin contar con el IVA). 18. Se entrega factura a participante o participante. 19. Se elabora lista final de inscritos. 20. Se reciben los comprobantes de retención, si la empresa que financia el curso es agente de retención de tributos. 21. Se reciben las solicitudes de reintegro en el caso de un depósito indebido. 22. Se reciben las solicitudes de adelanto de gastos firmadas por el responsable del proyecto destinadas a cubrir gastos menores. 23. Se reciben las solicitudes de compra de materiales, suministros o equipos necesarios para apoyar la ejecución del proyecto, firmadas por el responsable del proyecto. 24. Se reciben las solicitudes u órdenes de pago firmadas por el responsable del proyecto para cumplir con los honorarios del personal que labora en el proyecto. 25. Se efectúa la orden de pago para cubrir las solicitudes. 26. Se ejecutan las solicitudes de adelanto de gastos firmadas por el responsable del proyecto destinadas a cubrir gastos menores, direccionadas por el administrador. 27. Se ejecutan las solicitudes de compra de materiales, suministros o equipos necesarios para apoyar la ejecución del proyecto, firmadas por el responsable del proyecto, y direccionadas por el administrador. 28. Se ejecutan las solicitudes u órdenes de pago firmadas por el responsable del proyecto para cumplir con los honorarios del personal que labora en el proyecto, después de ser revisadas y autorizada por el administrador. 7 29. Se revisan y verifican los registros en libros auxiliares el ingreso del depósito, las solicitudes de reintegro y la orden de pago. 30. Se hace seguimiento del cronograma de ejecución del proyecto. 31. Al completar 2 de los módulos se manda la lista para elaborar los Diplomas o certificados de asistencia que se entregaran a cada participante. 8 La figura 1 ilustra un diagrama de actividades con los pasos mencionados anteriormente: Figura 1. Diagrama de flujo de la apertura, prosecución y finalización de una actividad. 9 En la figura 2 se muestra la planilla que se utiliza para la inscripción de talleres cursos y diplomados. . Figura 2. Planilla de inscripción para cursos, talleres o diplomados 10 En la figura 3 se muestra el comprobante de pago que se entrega al participante al verificar el ingreso. Figura 3. Comprobante de pago 11 Los pasos mencionados anteriormente causan los inconvenientes que se describen a continuación: Existe un problema de orden y seguimiento en los procesos que realiza la Coordinación de Extensión y FUNDACIENS-UCV ya que no existe un mecanismo que facilite la comunicación, donde una dependencia pueda estar al tanto de las actividades que realiza la otra. El proceso de divulgación de las actividades no se realiza con frecuencia por falta de medios y por no tener de manera centralizada los datos de los participantes que ya han asistido o cursado alguna de las actividades realizadas por la Coordinación de Extensión. Una vez iniciado el curso, taller o diplomado no existe una forma sencilla para que tanto la Coordinación Extensión como los participantes, profesores y la FUNDACIENS- UCV tengan acceso a información de interés, para ello deben buscar la información en los archivos en físico. De la misma forma al finalizar el curso, taller o diplomado también se requiere de información de interés por parte de los participantes, profesores, la Coordinación de Extensión y FUNDACIENS-UCV. Esto son algunos de los inconvenientes: En el caso de los profesores no existe una forma práctica para saber los cursos que ha dictado anteriormente. Los participantes no tienen una forma fácil para saber cuáles actividades han cursado y finalizado anteriormente y en caso de estar finalizadas poder acceder a un comprobante de finalización. La Coordinación de Extensión y FUNDACIENS-UCV no pueden llevar de forma sencilla el registro de las actividades dictadas por trimestre, semestre y año. Debido a la problemática mencionada anteriormente, surge la siguiente interrogante: ¿Qué mecanismo permite darle un seguimiento las actividades aprobadas por la Coordinación de Extensión desde la inscripción hasta la finalización de las mismas? 12 Justificación Los avances tecnológicos han permitido una mejor utilización de los recursos disponibles en diversas áreas. Con el surgimiento del Internet se han desarrollado Sistemas Web para distintos fines, no sólo en el área comercial, sino también en el área educativa. Lo más interesante de estas aplicaciones es que para poder utilizarlas solo se necesita un computador o dispositivo móvil con acceso a internet por lo que pueden ser utilizadas desde la comodidad del hogar, la oficina de trabajo, la universidad etc. La Coordinación de Extensión maneja grandes cantidades de información a la cual es necesaria acceder con frecuencia y de manera sencilla por lo tanto la inclusión de un sistema web es de gran importancia ya que esta les permitirá el manejo centralizado y seguro de la información. Además SISGAE será un beneficio no solo para la Coordinación de Extensión sino también para los participantes, profesores y FUNDACIENS-UCV ya que también podrán tener acceso a la información referente a cursos, talleres y diplomados en los cuales hayan participado. También es importante destacar que los sistemas web proveen independencia de plataforma, es decir para que se pueda ejecutar sólo se necesita disponer de un navegador web y no es necesario adaptar el código del sistema cada una de ellos. Por esta razón, sin importar el sistema operativo que utilicen los participantes, profesores, Coordinación de Extensión o FUNDACIENS-UCV siempre que dispongan de un navegador web podrán acceder a la aplicación y obtener la información requerida de una manera fácil. Las características mencionadas anteriormente son ventajas para todos los involucrados en las Actividades de Extensión ya que mejoran el tiempo para realizar estas actividades y proporcionan comodidad para el usuario. Además de ordenar todo el proceso administrativo 13 Objetivo General Desarrollar un sistema web para la gestión Académica-Administrativa de las actividades de Extensión de la Facultad de Ciencias de la Universidad Central de Venezuela (SISGAE). Objetivos Específicos Los objetivos específicos son los siguientes: 1. Determinar la arquitectura del Sistema (SISGAE) 2. Desarrollar la interfaz de usuario. 3. Diseñar del modelo lógico y físico de la base de datos. 4. Implementar el sistema web . 5. Aplicar pruebas de funcionalidad y usabilidad. 6. Instalar el sistema en el servidor del Centro de Computación de la Facultad de Ciencias. Alcance Este trabajo especial de grado (TEG) se enfocó en el desarrollo de un sistema web para gestionar las actividades de la Coordinación de Extensión, esta aplicación tendrá diversas funcionalidades de acuerdo a quien ingrese a la misma (manejo de roles), ya que será utilizada por participantes, profesores, la Coordinación de Extensión y FUNDACIENS-UCV, para ello, contará con un módulo de autenticación que gestionara que tipo de usuario está ingresando a la aplicación y de esta manera mostrar las diversas acciones que podrá realizar el usuario al ingresar a la misma. Además el sistema contará con una interfaz adaptativa (responsive) para que sea desplegable en dispositivos móviles. También se incluirán aspectos de accesibilidad como contraste y cambio de tamaño de fuente para personas con discapacidad. Los aspectos principales que abarcó el sistema fue: 14  Control administrativo: la Coordinación de Extensión y FUNDACIENS- UCV pueden consultar los cursos, talleres o diplomados que se estén dictando, abrir y cerrar el proceso de inscripción para quienes quieran participar en las actividades de Extensión, verificar la cantidad de participantes inscritos por cada curso, entre otros.  Control académico: realizar el proceso de inscripción en línea, una vez inscritos pueden visualizar su comprobante de inscripción. Ver el estatus (en proceso, culminado) del curso actual y los cursos realizados anteriormente. De la misma manera los profesores pueden verificar el estatus del curso que este dictando, así como acceder al listado de participantes del curso. Consultar los cursos dictados en fechas anteriores.  Gestión de pagos: FUNDACIENS-UCV puede verificar el estatus de pago del participante para realizar la formalización de la inscripción. Metodología de desarrollo Esta propuesta fue desarrollada aplicando la metodología AgilUs ya que por ser una metodología ágil cuenta con un alto grado de soporte al cambio dentro de los requerimientos, lo que un aspecto natural, inevitable e incluso deseable del desarrollo de un software. Además en sus dos (2) de su fases como lo son “Entrega” y “Prototipaje” involucra mucho al usuario final, por lo que brinda un grado alto de usabilidad del sistema. Ciclo de Desarrollo de AgilUs Según (Acosta, 2011) el proceso de desarrollo de software de AgilUs engloba cinco (5) etapas las cuales son:  Requisitos: se hace el levantamiento de requerimientos, para la cual se realizan actividades como: tormenta de ideas, entrevistas, sondeos o cuestionarios, además se crean los perfiles de usuario y se listan los requerimientos funcionales y no funcionales. 15  Análisis: se utilizan diagramas realizados bajo la notación estándar del Lenguaje de Modelado Unificado (UML, por sus siglas en inglés Unified Modeling Language), específicamente los Modelos de Casos de Uso y Objeto De Dominio, con esto se definen las funcionalidades del sistema.  Prototipaje: se desarrolla un prototipo rápido de la interfaz de usuario a partir de los patrones de interacción, al cual se le van incorporando funcionalidades hasta llegar al producto final.  Entrega: se tiene el software final al que se le realizan pruebas que certifiquen que es un software usable y sin errores, para ello se utilizan las pruebas de aceptación. En la figura 4 se puede apreciar el ciclo de vida de AgilUs, Acosta (2011). Figura 4. Ciclo de Vida de Metodología AgilUs (Acosta, 2011) 16 Artefactos Según Acosta (2011), cada etapa de la metodología, posee sus propios artefactos, a continuación se describen los que se usaron en el proceso de desarrollo de este proyecto: entrevistas, tormentas de ideas, perfil de usuario, guías de estilo, listas de requerimientos funcionales y no funcionales, modelo de casos de uso y de objeto de dominio y pruebas de aceptación. Plantea el desarrollo de un sistema, partiendo de un prototipo de interfaz de usuario y de la evaluación de usabilidad desde el inicio del sistema, por tal razón se decidió utilizar esta metodología, debido a que la usabilidad es importante en el éxito de un software dirigido a un grupo de usuarios, se desarrolló un sistema de fácil uso y aprendizaje, donde el diseño de una interfaz usable fue fundamental. Antecedentes Para el 2015 existe un proceso para la aprobación de las actividades académicas en el cual participan diversas dependencias como el Consejo de Facultad, los Consejos de las respectivas Escuelas, el Consejo de Extensión y las Comisiones de Extensión. Este proceso se realiza de forma automática a través de un sistema web llamado SIGADEX desarrollado por los Licenciados Félix Tovar e Ilvany Castillo el cual almacena en base de datos los cursos aprobados por las dependencias mencionadas anteriormente. Esta data es almacenada con el fin de ser consumida por otra aplicación a través de un servicio web para realizar el proceso de inscripción y seguimiento de los cursos talleres o diplomados que ya han sido aprobados. En este capítulo se enfatizó el problema de investigación que nos condujo a la realización de un Sistema Web como solución, fue definido el objetivo general y los objetivos específicos, para el correcto desarrollo del proyecto, también fue estimado el alcance y seleccionada la metodología a ser utilizada y por último los antecedentes que preceden a SISGAE En el siguiente capítulo se detallará, el sustento teórico de los Sistemas Web y las tecnologías, frameworks y licencias que permitieron el desarrollo de SISGAE 17 Capítulo II. Marco Conceptual En este capítulo se presenta el sustento teórico relacionado con el trabajo de investigación, que sirven de fundamento para el desarrollo del TEG. El mismo se divide en dos grandes secciones, las cuales se describen a continuación: La primera sección, hace referencia a que es una aplicación informatica, que es un Sistema Web, así como también, sus principales características, ventajas y desventajas. Se explica además la arquitectura Cliente-Servidor, sus componentes para luego enumerar sus principales ventajas. Finalmente, se explicará el patrón de diseño MVC (Modelo-Vista- Controlador), que se encarga de separar las funciones del cliente, el servidor Web y el servidor de Base de Datos. La segunda sección, describe los recursos tecnológicos necesarios para el desarrollo de SISGAE, se definen las tecnologías del lado del cliente las cuales son: HTML, CSS, JavaScript, Boostrap, JQuery y AJAX, las tecnologías del lado del servidor, tales como: Apache y PHP y las del servidor de bases de datos PostgreSQL. Aplicación Informática De acuerdo con Benítez (2012) una aplicación informática es un tipo de software que permite al usuario realizar uno o más tipos de trabajo. Son, aquellos programas que permiten la interacción entre usuario y computadora (comunicación), dando opción al usuario a elegir opciones y ejecutar acciones que el programa le ofrece. Existen innumerable cantidad de tipos de aplicaciones. Los procesadores de texto y las hojas de cálculo son ejemplos de aplicaciones informáticas, mientras que los sistemas operativos o los programas de utilidades (que cumplen tareas de mantenimiento) no forman parte de estos programas. Las aplicaciones pueden haber sido desarrolladas a medida (para satisfacer las necesidades específicas de un usuario) o formar parte de un paquete integrado (como el caso de Microsoft Office). De acuerdo con la definición anterior se puede decir que una aplicación informática es un software que permite al usuario realizar una tarea específica a través del uso de una 18 computadora y ayudan al usuario a resolver tareas complicadas como contabilidad, redacción de documentos, entre otras. Sistema web De acuerdo con Luján (2002) un sistema web es un tipo especial de aplicación cliente/ servidor, donde tanto el cliente (el navegador, explorador o visualizador) como el servidor (el servidor web) y el protocolo mediante el que se comunican (HTTP) están estandarizados y no han de ser creados por el programador de aplicaciones. El protocolo HTTP forma parte de la familia de protocolos de comunicaciones TCP/IP, que son los empleados en Internet. Estos protocolos permiten la conexión de sistemas heterogéneos, lo que facilita el intercambio de información entre distintos ordenadores. HTTP se sitúa en el nivel 7 (aplicación) del modelo OSI. "Una aplicación a la que se accede a través de internet u otras redes similares como intranet, que no requiere instalación para los usuarios. Es decir, es una aplicación de software codificada en un lenguaje hecho para los navegadores web en la que es el navegador el que la ejecuta. Estas aplicaciones contienen elementos que permiten interactuar al usuario con la información que contienen" (Enubes, 2013, párr. 1). A su vez, Diccionario de Informática (2012) hace referencia a que es cualquier programa que es accedida vía web por una red como internet o una intranet. De acuerdo a la definiciones anteriores un sistema web se puede definir como un programa al que un usuario accede a través de Internet mediante un navegador web (Internet Explorer, Opera, Mozilla Firefox, Google Chrome, Safari y otros) o una Intranet (red entre computadores que sirve para compartir recursos y tiene uso exclusivo dentro del sitio donde fue creada), la cual se encuentra alojada en un servidor web. http://www.alegsa.com.ar/Dic/aplicacion.php http://www.alegsa.com.ar/Dic/web.php http://www.alegsa.com.ar/Dic/red.php http://www.alegsa.com.ar/Dic/internet.php http://www.alegsa.com.ar/Dic/intranet.php 19 En la figura 5 se puede apreciar el esquema básico de una aplicación web. Figura 5 Esquema básico de una aplicación web Fuente (Lujan, 2002). De acuerdo a los aportes de Diccionario de Informática (2012), Enubes (2013) y Pereda (2007) las características principales de una aplicación web son:  Reside en un Servidor Web.  Se puede acceder a ella desde cualquier lugar y en cualquier momento siempre y cuando se disponga de conexión a Internet.  Es escrita en lenguajes soportados por navegadores web, pues son ellos quienes la ejecutan independientemente del sistema operativo en el que se encuentre.  Puede ser accedida por miles de usuarios a la vez. En el caso de que llegase a actualizarse la aplicación, todos los usuarios estarán al tanto de esta actualización de manera inmediata.  No requiere de la instalación de programas adicionales. Para su acceso, simplemente se requiere hacer uso de un navegador web y conexión a Internet como se comentó anteriormente.  Es Portable, es decir que es capaz de ejecutarse sin importar la plataforma en la que se encuentre.  Es usable, una aplicación web es sencilla y entendible para todos los usuarios. 20 Ventajas y desventajas De acuerdo con Luján (2002), las aplicaciones web presentan las siguientes ventajas y desventajas: Ventajas  El desarrollo explosivo de Internet y en especial de la WWW se debe a la aceptación por todo el mundo de los estándares y tecnologías que emplea: medio de transporte común (TCP/IP), servidor (HTTP) y lenguaje de creación de páginas (HTML) estandarizados.  Muchas empresas han descubierto que las anteriores tecnologías se pueden emplear en las aplicaciones cliente/servidor que emplean. De esta forma nace el concepto de intranet: usar las tecnologías de Internet para implementar las tradicionales aplicaciones cliente/servidor dentro de una empresa. Además, una vez que se tiene una aplicación que funciona en una intranet, aparece la posibilidad de permitir su uso a través de Internet, lo que facilita el teletrabajo o la movilidad de los empleados de una empresa  Una ventaja clave del uso de aplicaciones web es que el problema de gestionar el código en el cliente se reduce drásticamente. Suponiendo que existe un navegador o explorador estándar en cada cliente, todos los cambios, tanto de interfaz como de funcionalidad, que se deseen realizar a la aplicación se realizan cambiando el código que resida en el servidor web. Compárese esto con el coste de tener que actualizar uno por uno el código en cada uno de los clientes (imaginemos que tenemos 2.000 ordenadores clientes). No sólo se ahorra tiempo porque reducimos la actualización a una sólo máquina, sino que no hay que desplazarse de un puesto de trabajo a otro (la empresa puede tener una distribución geográfica amplia). 21  Una segunda ventaja, relacionada con la anterior, es que se evita la gestión de versiones. Se evitan problemas de inconsistencia en las actualizaciones, ya que no existen clientes con distintas versiones de la aplicación.  Una tercera ventaja es que si la empresa ya está usando Internet, no se necesita comprar ni instalar herramientas adicionales para los clientes.  Otra ventaja, es que de cara al usuario, los servidores externos (Internet) e internos (intranet) aparecen integrados, lo que facilita el aprendizaje y uso.  Una última ventaja, pero no menos importante, es la independencia de plataforma. Para que una aplicación web se pueda ejecutar en distintas plataformas (hardware y sistema operativo), sólo se necesita disponer de un navegador para cada una de las plataformas, y no es necesario adaptar el código de la aplicación a cada una de ellas. Además, las aplicaciones web ofrecen una interfaz gráfica de usuario independiente de la plataforma (ya que la plataforma de ejecución es el propio navegador). Desventaja  Una desventaja, que sin embargo está desapareciendo rápidamente, es que la programación en la web no es tan versátil o potente como la tradicional. El lenguaje HTML presenta varias limitaciones, como es el escaso repertorio de controles disponibles para crear formularios. Por otro lado, al principio las aplicaciones web eran básicamente de solo lectura permitían una interacción con el usuario prácticamente nula. Sin embargo, con la aparición de nuevas tecnologías de desarrollo como Java, JavaScript y ASP, esta limitación tiende a desaparecer. 22 Arquitecturas de las aplicaciones web Según Luján (2002) las aplicaciones web se basan en una arquitectura cliente/servidor: por un lado está el cliente (el navegador, explorador o visualizador) y por otro lado el servidor (el servidor web). Existen diversas variantes de la arquitectura básica según como se implementen las diferentes funcionalidades de la parte servidor. De acuerdo con Lerma-Blasco (2013) la arquitectura de las aplicaciones web consta de máquinas conectadas a una red, por lo general, Internet o una Intranet corporativa que sigue el esquema cliente-servidor en nuestro caso de servidores web. Surgió a mediados de la década de 1990, durante la etapa de la Web 1.0 con la aparición de las primeras conexiones de acceso conmutado (RTC, RDSI, GSM, GPRS) y de las etiquetas multimedia del estándar HTML y la incorporación de pequeños programas realizados en Java, llamados applets. El Cliente Según Luján (2002) el cliente web es un programa con el que interacciona el usuario para solicitar a un servidor web el envío de los recursos que desea obtener mediante HTTP. La parte cliente de las aplicaciones web suele estar formada por el código HTML que forma la página web más algo de código ejecutable realizado en lenguaje de script del navegador (JavaScript o VBScript) o mediante pequeños programas (applets) realizados en Java. También se suelen emplear plug-ins que permiten visualizar otros contenidos multimedia (como Macromedia Flash), aunque no se encuentran tan extendidos como las tecnologías anteriores y plantean problemas de incompatibilidad entre distintas plataformas. Por tanto, la misión del cliente web es interpretar las páginas HTML y los diferentes recursos que contienen (imágenes, sonidos, etc.). Lujan (2002) también plantea que las tecnologías que se suelen emplear para programar el cliente web son:  HTML. 23  CSS.  DHTML.  Lenguajes de script: JavaScript, VBScript, etc. El Servidor De acuerdo con Mateu (2004) un servidor web es un programa que atiende y responde a las diversas peticiones de los navegadores, proporcionándoles los recursos que solicitan mediante el protocolo HTTP o el protocolo HTTPS (la versión segura, cifrada y autenticada de HTTP). Un servidor web básico tiene un esquema de funcionamiento muy sencillo, ejecutando de forma infinita el bucle siguiente: 1. Espera peticiones en el puerto TCP asignado (el estándar para HTTP es el 80). 2. Recibe una petición. 3. Busca el recurso en la cadena de petición. 4. Envía el recurso por la misma conexión por donde ha recibido la petición. 5. Vuelve al punto 2. En la figura 6 se muestran algunas de las tecnologías utilizadas tanto en el cliente como en el servidor. Figura 6. Tecnologías empleadas en el cliente y en e l servidor web Fuente (Lujan, 2002). 24 Las arquitecturas más comunes son: Todo en un servidor: un único ordenador aloja el servicio de HTTP, la lógica de negocio y la lógica de datos y los datos. El software que ofrece el servicio de HTTP gestiona también la lógica de negocio. En la figura 7 se presenta la arquitectura de una aplicación web donde la lógica de negocios y la lógica de datos se encuentran en un solo servidor. Figura 7. Arquitectura de las aplicaciones web: todo en un servidor Fuente (Lujan, 2002). Servidor de datos separado: a partir de la arquitectura anterior, se separa la lógica de datos y los datos a un servidor de bases de datos específico En la figura 8 se ilustra la separación del servidor web y el servidor de base de datos Figura 8. Arquitectura de las aplicaciones web: separación servidor de datos. 25 Tecnologías de Desarrollo Web En base a Morales (2011), las tecnologías web son aquellas que proporcionan al desarrollador un conjunto de herramientas que facilitan el desarrollo web. Se dividen en tecnologías del lado del cliente (lenguajes procesados por el navegador web sin ningún tratamiento previo) y del servidor (lenguajes reconocidos, ejecutados e interpretados del lado del servidor y enviados al cliente en un formato comprensible para él). Es importante mencionar que tanto los lenguajes del cliente como los del servidor son independientes, lo cual permite que la página pueda ser alojada en cualquier sitio. Y a su vez, un lenguaje de lado servidor es independiente del navegador utilizado, por lo que no necesitará algún plug-in para visualizar correctamente cualquier página. La tecnología web permite el desarrollo de aplicaciones basadas en el modelo cliente/servidor. Los sistemas basados en tecnología web ofrecen ventajas enormes en cuanto a eficiencia, ya que son flexibles y rápidos. Además puede evitar instalaciones complicadas en sus sistemas informáticos y los requisitos para el hardware necesario son limitados. Actualmente existen una gran variedad de tecnologías que se pueden utilizar en el desarrollo de un sistema web, donde una de sus principales diferencias viene en función de si se ejecutan en el servidor o en el cliente. Lenguajes del lado del cliente Torre (2006) afirma que los lenguajes del lado cliente (entre los cuales no sólo se encuentra HTML sino también Java, JavaScript y CSS que son lenguajes incluidos en el código HTML) son aquellos que pueden ser directamente "digeridos" por el navegador y no necesitan un pre tratamiento. González (2007) expone que un lenguaje del lado del cliente es totalmente independiente del servidor, lo cual permite que la página pueda ser albergada en cualquier sitio. A pesar de esto el producto final no se verá bien si el ordenador del cliente no tiene los complementos adecuados El código tanto del hipertexto como de los scripts, son accesibles por cualquiera y eso puede afectar la seguridad. Matos expone que el código 26 necesario para crear los efectos y funcionalidades se incluye dentro del mismo archivo HTML y generalmente son scripts o plugins. Cuando una página HTML contiene alguna de las tecnologías de cliente, el navegador se encarga de interpretarlas y ejecutarlas para realizar los efectos y funcionalidades. Lenguaje de marcado de hipertexto (HTML) Peralta (2009) señala que el HyperText Markup Language (HTML por sus siglas en inglés) es el lenguaje con el que se definen las páginas web. Se trata de un conjunto de etiquetas que sirven para definir el texto y otros elementos que compondrán una página web. El HTML es un lenguaje de marcación de elementos para la creación de documentos hipertexto, muy fácil de aprender, lo que permite que cualquier persona, aunque no haya programado en la vida, pueda enfrentarse a la tarea de crear una web. HTML es fácil y pronto podremos dominar el lenguaje. Más adelante se conseguirán los resultados profesionales gracias a nuestras capacidades para el diseño y nuestra vena artista, así como a la incorporación de otros lenguajes para definir el formato con el que se tienen que presentar las webs, como CSS (Muller, 2008). Se puede decir que HTML es un lenguaje de marcado fácil de aprender el cual es la base para la realización de casi cualquier desarrollo online. Por ser un lenguaje básico normalmente solo se utiliza para darle la estructura inicial a diseño, pero no se pueden crear diseños o estructuras profesionales por así decirlo, y es por ello que se fueron creando nuevas tecnologías que permiten un diseño profesional y que permiten realizar numerosas acciones dinámicas, interactividad y estilo a la página web o sistema que se está realizando, como lo son el lenguaje CSS y JavaScript. A partir del 2009 se comienza a utilizar la expansión de HTML4, por la nueva versión HTML5, el cual tiene muchas mejoras en cuento a el diseño de la página, también es de una gran ayuda ya que te permite realizar animaciones, con la cual ya no se dependerá 27 de la herramienta FLASH para realizarla, algo que gusto mucho entre los desarrolladores web. Según Ortíz (2009) a diferencia de HTML, HTML5 establece una serie de nuevos elementos y atributos que reflejan el uso típico de los sitios web modernos. Algunos de ellos son técnicamente similares a las etiquetas <div> y <span>, pero tienen un significado semántico, como por ejemplo <nav> (bloque de navegación del sitio web) y <footer>. Otros elementos proporcionan nuevas funcionalidades a través de una interfaz estandarizada, como los elementos <audio> y <video>. Mejora el elemento <canvas>, capaz de renderizar elementos 3D en los navegadores más importantes (Mozilla, Chrome, Opera, Safari e IE). También se puede resaltar que HTML5 está desarrollado con la intención de reflejar mejor la nueva anatomía de los sitios web. Es por eso que hay algunos elementos nuevos, como <header> y <footer>, que están diseñados específicamente para marcar estas partes de la web. Con este desarrollo en el lenguaje ya no es necesario identificar a estos dos elementos con la etiqueta <div> y posee nuevos elementos de <section> y <article> los cuales permitirá a los desarrolladores marcar estas áreas de la página como tal. Además de hacer el código más estructurado, este también tendrá un efecto positivo en tus esfuerzos de SEO ya que para los motores de búsqueda será más fácil el ranking de tu página. Hoja de estilos en cascada (CSS) Córdova (2010) señala que cascading style sheets (CSS por siglas en inglés) es un lenguaje que describe la presentación de los documentos estructurados en hojas de estilo para diferentes métodos de interpretación, es decir, describe cómo se va a mostrar un documento en pantalla, por impresora, por voz (cuando la información es pronunciada a través de un dispositivo de lectura) o en dispositivos táctiles basados en Braille. Por otra parte Romera (2011) señala que el lenguaje CSS es una especificación desarrollada por el W3C (World Wide Web Consortium) para permitir la separación de los 28 contenidos de los documentos escritos en HTML, XML, XHTML, SVG, o XUL de la presentación del documento con las hojas de estilo, incluyendo elementos tales como los colores, fondos, márgenes, bordes, tipos de letra..., modificando as la apariencia de una página web de una forma más sencilla, permitiendo a los desarrolladores controlar el estilo y formato de sus documentos. El lenguaje CSS se basa en una serie de reglas que rigen el estilo de los elementos en los documentos estructurados, y que forman la sintaxis de las hojas de estilo. Cada regla consiste en un selector y una declaración, esta última va entre corchetes y consiste en una propiedad o atributo, y un valor separados por dos puntos (Muller, 2009). Se puede decir que las hojas de estilo en cascada ofrecen la posibilidad de definir las reglas y estilos de representación en diferentes dispositivos, ya sean pantallas de equipos de escritorio, portátiles, móviles, impresoras u otros dispositivos capaces de mostrar contenidos web, por tanto tiene una gran importancia a la hora de realizar cualquier tipo de aplicación web. Ojeda (2011) señala que las hojas de estilo nos permiten definir de manera eficiente la representación de nuestras páginas y es uno de los conocimientos fundamentales que todo diseñador web debe manejar a la perfección para realizar su trabajo. CSS fue utilizado por muchos años, pero a partir del año 2005 se comenzó a definir el sucesor de esta versión, al cual se lo conoce como CSS3. Actualmente en definición, esta versión nos ofrece una gran variedad de opciones muy importantes para las necesidades del diseño web actual. Desde opciones de sombreado y redondeado, hasta funciones avanzadas de movimiento y transformación, CSS3 es el estándar que dominará la web por los siguientes años (Muller, 2009). Uno de los grandes avances de CSS3 con respecto al CSS es que el CSS3 con ayuda del HTML5 ya antes mencionado podemos realizar animación, dejando atrás a la tecnología de FLASH que resultaba muy engorrosa para los desarrolladores ya que no era compatible con dispositivos móviles e IPAD. Otro avance importante con el CSS3 es la 29 facilidad para poder realizar efecto en las capas, de esta manera facilita mucho el trabajo de los desarrolladores al incluir transparencias, bordes, texto, etc. El objetivo inicial de CSS 3, separar el contenido de la forma, se cumplió ya con las primeras especificaciones del lenguaje. Sin embargo, el objetivo de ofrecer un control total a los diseñadores sobre los elementos de la página ha sido más difícil de cubrir. Las especificaciones anteriores del lenguaje tenían muchas utilidades para aplicar estilos a las webs, pero los desarrolladores aún continúan usando trucos diversos para conseguir efectos tan comunes o tan deseados como los bordes redondeados o el sombreado de elementos en la página. Así pues, la novedad más importante que aporta CSS 3, de cara a los desarrolladores de webs, consiste en la incorporación de nuevos mecanismos para mantener un mayor control sobre el estilo con el que se muestran los elementos de las páginas, sin tener que recurrir a trucos o hacks, que a menudo complicaban el código de las web (Centeno, 2011). Lenguaje Javascript y Jquery Según Córdova (2010) Javascript es un lenguaje de programación que se puede utilizar para construir sitios Web y para hacerlos más interactivos. Aunque comparte muchas de las características y de las estructuras del lenguaje Java, fue desarrollado independientemente. El lenguaje Javascript puede interactuar con el código HTML, permitiendo a los programadores web utilizar contenido dinámico. Por ejemplo, hace fácil responder a los acontecimientos iniciados por usuarios (como introducción de datos en formularios) sin tener que comunicarse con el servidor. Según Miller (2009) relata que Javascript es un lenguaje que puede ser utilizado por profesionales y para quienes se inician en el desarrollo y diseño de sitios web. No requiere de compilación ya que el lenguaje funciona del lado del cliente, los navegadores son los encargados de interpretar estos códigos. Se puede decir que sirve principalmente para mejorar la gestión de la interfaz cliente/servidor. Un script JavaScript insertado en un documento HTML permite reconocer 30 y tratar localmente, es decir, en el cliente, los eventos generados por el usuario. Estos eventos pueden ser el recorrido del propio documento HTML o la gestión de un formulario. En el 2006 salió una librería llamada jquery la cual es ampliamente utilizada en la que permite de una manera muy rápida y sencilla reutilizar código javascript y con el cual podemos partir de ahí y realizar tareas mucho más complejas que anteriormente requerían más trabajo. Jhonson (2011) relata que Jquery es un framework de JavaScript para facilitar, entre otros, el acceso a los elementos del DOM, los efectos, interactuar con los documentos HTML, desarrollar animaciones y agregar interacción con la tecnología AJAX a páginas web. jQuery podría ser otro framework más como script.aculo.us, MooTools, YUI pero en cambio disponemos una gran potencia con una facilidad mucho mayor que sus competidores. Lenguajes del lado del Servidor Según Torre (2006) los lenguajes de lado servidor son aquellos que son reconocidos, ejecutados e interpretados por el propio servidor y que se envían al cliente en un formato comprensible para él. Un lenguaje de lado servidor es independiente del cliente por lo que es mucho menos rígido respecto al cambio de un navegador a otro o respecto a las versiones del mismo. La programación del lado del servidor es una tecnología que consiste en el procesamiento de una petición de un usuario mediante la interpretación de un script en el servidor web para generar páginas HTML dinámicamente como respuesta. Álvarez (2001) comenta que los lenguajes del lado servidor más ampliamente utilizados para el desarrollo de páginas dinámicas son el Preprocesador de Hipertexto (PHP) y Perl. Pre-procesardor de Hipertexto (PHP) De acuerdo a PHP (2013) se concluye que Hypertext Pre-processor (PHP por sus siglas en inglés) es un lenguaje de programación de código abierto, interpretado de alto 31 nivel y ejecutado del lado del servidor. Está diseñado originalmente para la creación web de contenido dinámico de una manera rápida y sencilla. Por su flexibilidad, PHP resulta un lenguaje sencillo de aprender, y además es multiplataforma ya que permite que los programas funcionen igual sobre diferentes plataformas. PHP es un lenguaje de programación muy potente, permite crear sitios web dinámicos. Php se instala en el servidor y funciona con versiones de Apache, Microsoft IIs, Netscape Enterprise Server y otros. Características del Lenguaje PHP En base a Arellano (2011) las principales características de PHP son las siguientes:  Es un lenguaje multiplataforma.  Orientado al desarrollo de aplicaciones web dinámicas con acceso a información almacenada en una base de datos.  El código fuente escrito en PHP es invisible al navegador web y al cliente ya que es el servidor el que se encarga de ejecutar el código y enviar su resultado HTML al navegador. Esto hace que la programación en PHP sea segura y confiable.  Capacidad de conexión con la mayoría de los motores de base de datos que se utilizan en la actualidad, destaca su conectividad con MySQL y PostgreSQL.  Capacidad de expandir su potencial utilizando módulos (llamado sext's o extensiones).  Posee una amplia documentación en su sitio web oficial, entre la cual se destaca que todas las funciones del sistema, las cuales están explicadas y ejemplificadas en un único archivo de ayuda.  Es libre, por lo que se presenta como una alternativa de fácil acceso para todos.  Permite aplicar técnicas de programación orientada a objetos.  Biblioteca nativa de funciones sumamente amplia e incluida. http://es.wikipedia.org/wiki/MySQL http://es.wikipedia.org/wiki/PostgreSQL 32  No requiere definición de tipos de variables aunque sus variables se pueden evaluar también por el tipo que estén manejando en tiempo de ejecución.  Tiene manejo de excepciones (desde PHP5).  Si bien PHP no obliga a quien lo usa a seguir una determinada metodología a la hora de programar (muchos otros lenguajes tampoco lo hacen), aun haciéndolo, el programador puede aplicar en su trabajo cualquier técnica de programación o de desarrollo que le permita escribir código ordenado, estructurado y manejable. Un ejemplo de esto son los desarrollos que en PHP se han hecho del patrón de diseño Modelo Vista Controlador (MVC), que permiten separar el tratamiento y acceso a los datos, la lógica de control y la interfaz de usuario en tres componentes independientes.  Como es un lenguaje que se interpreta en ejecución, para ciertos usos puede resultar un inconveniente que el código fuente no pueda ser ocultado. La ofuscación es una técnica que puede dificultar la lectura del código pero no la impide y, en ciertos casos, representa un costo en tiempos de ejecución. González (2009) expresa que Los orígenes de PHP están fechados en torno al año 1995. Sin embargo, fue a partir del año 1999 con la publicación de PHP 4 cuando este lenguaje de programación tomó un verdadero auge. En sus primeros estadios de desarrollo, PHP se denominaba también “Zend Engine”, nombre que provenía del nombre de sus creadores: Zeev Suraski y Andi Gutmans. En el año 2004 fue lanzada la versión 5 de PHP, la cual ofrecía mejoras para aplicaciones en servidores dedicados como por ejemplo un mejor soporte para la programación orientada a objetos y una extensión completamente nueva para el uso de MySQL. Según González, la versión 6 de PHP ha estado en preparación durante largo tiempo en formato de borrador, sin llegar a publicarse. Por ello se propuso que la nueva versión de PHP se llamara PHP 7, dejando PHP 6 como una versión no publicada. PHP es un lenguaje de programación que goza de gran popularidad y difusión. A esta circunstancia hay que añadir el hecho de que páginas web de mucha importancia como http://es.wikipedia.org/wiki/L%C3%B3gica_de_control 33 Wikipedia o Yahoo se apoyan en este lenguaje, lo cual demuestra que es un lenguaje muy potente que puede servir desde para pequeñas páginas web hasta para grandes portales. Patrón de diseño MVC (Modelo Vista Controlador) Murazzo y colegas (2010) definen a la arquitectura MVC como un patrón de arquitectura de aplicación que se separa de los datos de una aplicación, la interfaz de usuario, y la lógica de control en tres componentes distintos. Dicha arquitectura fue introducida como parte de la versión Smalltalk-80 (Smalltalk es un lenguaje de programación). Su objetivo era reducir el esfuerzo de programación necesario en la implementación de sistemas múltiples. Tenemos como principal característica, que el Modelo, las Vistas y los Controladores se tratan como entidades separadas; con esto se logra que cualquier cambio que se produzca en el Modelo se refleje automáticamente en cada una de las Vistas. El componente Modelo es el objeto que representa los datos del programa. Maneja los datos y controla todas sus transformaciones. Este componente no sabe que hay internamente en los otros componentes, ni siquiera contiene referencias a ellos. Es el propio sistema el que tiene encomendada la responsabilidad de mantener enlaces entre el Modelo y sus Vistas, y notificar a las Vistas cuando cambia el Modelo. El componente Vista es el objeto que maneja la presentación visual de los datos representados por el componente Modelo. Genera una representación visual del Modelo y muestra los datos al usuario. El componente Controlador es el objeto que proporciona significado a las órdenes del usuario, actuando sobre los datos representados por el Modelo. Cuando hay cambios se activa, bien sea por cambios en la información del Modelo o por alteraciones de la Vista. 34 En la figura 9 se describe la interacción entre las tres capas: Figura 9. Arquitectura Modelo Vista Controlador (Murazzo, 2010) Frameworks MVC De acuerdo con Sánchez (2011) un framework se puede traducir como estructura; en el sentido que nos ocupa un framework sería un marco de trabajo. MVC son las siglas de Modelo-Vista-Controlador un paradigma de programación de aplicaciones que separa en tres niveles el trabajo: por un lado el modelo que hace referencia a las aplicaciones empresariales conocido como la lógica de negocio (por ejemplo el Sistema Gestor de la Base de Datos); la vista hace referencia al aspecto visual de la aplicación con el usuario; el controlador finalmente es la parte que controla las acciones del usuario y las comunica a los dos apartados anteriores. Es, en definitiva, un modelo de trabajo que facilita la creación de aplicaciones web complejas. Se les conoce también con el nombre de plantillas. A continuación se mencionan algunos de los frameworks utilizados para el desarrollo de aplicaciones web. 35  Ruby on Rails: se trata de un marco de trabajo muy exitoso por la facilidad que tiene de programar y sus buenos resultados visuales. Se puede ejecutar en casi cualquier servidor web, basta con instalar el componente correspondiente.  Apache Struts: el marco de trabajo más famoso para la creación de aplicaciones J2EE. Muy preparado para utilizar con Apache.  Spring: etro marco para trabajar en Java J2EE que tiene bastante éxito. Tiene incluso una versión para las aplicaciones .NET  Django: escrita en Python y pensada para utilizar en ese lenguaje que facilita la creación de aplicaciones web.  Zend: framework escrito para PHP. Uno de los más populares para este lenguaje.  Yii: otro framework PHP de gran crecimiento comercial.  Laravel: framework PHP con influencia de otros frameworks como Ruby on Rails, Sinatra y ASP.NET Una vez definidos los componentes de la arquitectura Modelo Vista Controlador continuación se presentan algunos conceptos básicos de base de datos para profundizar este aspecto. Base de Datos Una Base de Datos (BD) es un repositorio centralizado de datos que permite almacenar y organizar hechos ó eventos y restituirlos a demanda del usuario para producir información. (Date, 2001) Es una colección de datos, que contiene información relevante para una empresa. (Silberschatz, Korth y Sudarshan, 2002). Se puede decir entonces que una BD es un repositorio de datos, que se relacionan entre sí, cuyos datos corresponden a un hecho o evento y que gracias a que existen métodos de extracción para ellos, podemos producir información. 36 Características de una Base de Datos Date (2001) caracteriza a las base de datos como siguen:  Integridad de los datos.  Acceso concurrente a los datos.  Facilidad para el cambio de hardware o software.  Independencia de los datos.  Control centralizado de los datos.  Minimización de la redundancia.  Costo mínimo de almacenamiento y mantenimiento.  Versatilidad para la representación de relaciones.  Establecimiento de medidas de seguridad. Ventajas de una Base de Datos Según Date (2001) las bases de datos poseen las siguientes ventajas:  Los datos pueden compartirse, es posible la integración de diversas aplicaciones que pueden ver los mismos datos (usando la misma BD), si necesidad de crear una BD paralela con los mismos datos.  Redundancia controlada, debido al sistema tradicional de archivos independientes, los datos se duplicaban constantemente lo cual creaba mucha duplicidad de datos y creaba un problema de desperdicio de espacio de almacenamiento, la idea es integrarlas para así eliminar la redundancia.  Inconsistencia, al controlarse la redundancia, se logra la consistencia de los datos, cuando se actualiza un dato, todos los usuarios autorizados de la BD pueden ver el cambio independientemente de que estén trabajando en distintos sistemas. 37  Manejo de transacciones, es una unidad de trabajo lógica, por lo regular comprende varias operaciones de la BD, operaciones de actualización. Estas transacciones están pensadas para tener consistencia de datos pese a fallos del sistema.  Integridad, la BD tiene la capacidad de validar ciertas condiciones cuando los usuarios introducen datos y rechazar entradas que no cumplan con esas condiciones. El ABD es el responsable de establecer esas validaciones.  Seguridad, el ABD al tener control central de los Datos, la BD le provee mecanismos que le permiten crear niveles de seguridad para distintos tipos de Usuarios.  Equilibrar los requerimientos conflictivos, para que la BD trabaje apropiadamente, necesita de una persona o grupo que se encargue de su funcionamiento. El título para esa posición es Administrador de Base de Datos (ABD) y provee la ventaja de que diseña el sistema tomando en mente la necesidad de cada departamento de la empresa. Por lo tanto se beneficia mayormente la empresa aunque algunos departamentos podrían tener leves desventajas debido a su idiosincrasia.  Cumplir estándares, se pueden estandarizar procesos, formas, nombres de datos, formas, etc. Desventajas de una Base de Datos Según Date (2001) las bases de datos poseen las siguientes desventajas:  Los datos son vulnerables sin los controles adecuados.  La integridad de los datos se ve afectada sin los controles adecuados.  La recuperación de una base de datos después de una falla puede requerir bastante tiempo.  Dependiendo de la cantidad de datos se puede ver afectado el rendimiento de acuerdo al manejador que los procese. 38  Es probable que las relaciones entre los datos sean muy complejas. Sistema de Base de Datos Un Sistema de Base de Datos (SBD) es un sistema diseñado para manejar grandes cantidades de datos y producir información. Un SBD es básicamente un sistema computarizado cuyo propósito general es mantener información y hacer que esté disponible cuando se solicite. La información puede ser cualquier cosa que se considere importante para el individuo o la organización a la cual debe servir el sistema. (Date,2001) Sistema Manejador de Base de Datos Un Sistema Manejador de Base de Datos (SMBD) es colección de datos interrelacionados y un conjunto de programas para acceder a dichos datos. (Silberschatz, Korth y Sudarshan, 2002). Un SMBD se apoya en la tecnología para cumplir con el propósito de permitir, a las personas, la manipulación (consultas, actualizaciones, eliminaciones e inserciones) de su información. (Cardoso, 2006). Se puede decir que un SMBD es un sistema que se encarga de almacenar información y que las personas pueden manipularlas mediante operaciones sobre ellos. Funciones del SMBD Date (2001) establece las siguientes funciones:  Definición de datos: debe ser capaz de aceptar definiciones de datos en versión fuente y convertirlas en la versión objeto apropiado. Para hacer esta conversión el SMBD debe incluir un procesador DDL (Lenguajes de definición de datos) como uno de sus componentes. 39  Manipulación de datos: debe estar capacitado para atender las solicitudes del usuario para extraer, actualizar, o ingresar nuevos datos. Para atender estas solicitudes debe tener un procesador DML como otro de sus componentes.  Optimización y ejecución: las peticiones del DML, deben ser procesadas por un componente optimizador, cuya finalidad es determinar una forma eficiente de implementar una petición.  Seguridad e integridad de los datos: debe controlar las solicitudes de los usuarios para rechazar aquellas solicitudes no permitidas para que los datos estén seguros e íntegros.  Recuperación y concurrencia de los datos: el SMBD debe tener un componente que sea un monitor de procesamientos de transacciones, que debe cuidar del cumplimiento de ciertos controles de recuperación y concurrencia.  Diccionario de Datos: debe incluir una función de diccionario de datos, en este caso existen los metadatos que son datos acerca de los datos.  Rendimiento: debe ejecutar todas las funciones recién identificadas en la forma más eficiente posible. PostgreSQL De acuerdo con PostgreSQL. (2010) es un sistema de gestión de bases de datos objeto-relacional, distribuido bajo licencia BSD (Berkeley Software Distribution) y con su código fuente disponible libremente. Es el sistema de gestión de bases de datos de código abierto más potente y robusto del mercado. PostgreSQL utiliza un modelo cliente/servidor y usa multiprocesos en vez de multihilos para garantizar la estabilidad del sistema. Un fallo en uno de los procesos no afectará el resto y el sistema continuará funcionando. Características de PostgreSQL  Soporta el almacenamiento de objetos binarios grandes (gráficos, videos, sonido, entre otros). 40  APIs para programar en C/C++, Java, .Net, Perl, Python, Ruby, Tcl, ODBC, PHP, Lisp, Scheme, Qt y muchos otros.  Numerosos tipos de datos y posibilidad de definir nuevos tipos. Además de los tipos estándares en cualquier base de datos, tenemos disponibles, entre otros, tipos geométricos, de direcciones de red, de cadenas binarias, UUID, XML, matrices, etc.  Copias de seguridad en caliente (Online/hot backups)  Licencia BSD Licencias En la web actual la mayoría de los contenidos son elaborados por usuarios y no por grandes empresas, especialmente en el ámbito educativo. El espíritu de estos contenidos es permitir a los demás usarlos sin restricciones, pero era necesario un marco legal que permitiese su uso sin arriesgar tener a futuro problemas con los derechos de la obra. De acuerdo a CERLAC (2011), licencia se define como un acuerdo de voluntades en virtud del cual el autor o el titular de los derechos patrimoniales, autoriza a otra persona (natural o jurídica) la utilización de la obra estableciendo las condiciones de tiempo, modo y lugar, sin desprenderse de ninguno de sus derechos. Como cierre de este capítulo se puede decir que un Sistema Web es un software que no necesita instalación y que se accede a través de un navegador por medio de internet o una intranet. Se basan en la arquitectura cliente/servidor, por un lado el cliente es el navegador a través del cual se visualiza el sistema y por otra parte el servidor es el programa que está constantemente esperando solicitudes por parte del cliente. Se utilizaron para su desarrollo diversas tecnologías web como por ejemplo HTML, CSS, JavaScript, PHP entre otras, debido a su fácil utilización y ya que están apegadas al marco legal del Sistema. Aunado a ello el sistema estará bajo una licencia de software libre para que en un futuro, tanto el código como el Sistema puedan ser usados con libertad sin ningún inconveniente de Copyright. 41 Capítulo III: Marco Aplicativo En este capítulo se describe la aplicación de la metodología AgilUs para el desarrollo del SISGAE. Consta de cuatro (4) fases, las cuales son: Requisitos, Análisis, Prototipaje y Entrega. Las señaladas fases serán detalladas a continuación. Fase I: Requisitos En esta fase se aplicaron diversas técnicas para la determinación de la información, que permitieron obtener todo lo necesario para hacer el análisis de requerimientos planteados para el SISGAE. Las técnicas que fueron empleadas se describen seguidamente: Entrevistas Esta técnica se aplicó utilizando entrevistas no estructuradas con el objetivo conocer cómo se llevaba a cabo el proceso de gestión académica y administrativa aplicada en las actividades realizadas dentro de la coordinación de extensión, lográndose obtener información acerca de la problemática e identificándose todas y cada una de las necesidades existentes. Al ser una entrevista no estructurada las preguntas fueron surgiendo de acuerdo a las respuestas aportadas por el profesor Yanes de FUNDACIENS-UCV-UCV y el profesor Ernesto Fuenmayor de la Coordinación de Extensión. Se realizaron las siguientes preguntas:  ¿Quién aprueba la actividad?  ¿Cómo se inscriben los aspirantes a cursos?  ¿Cuáles son los requisitos para inscribirse en una actividad?  ¿Cómo se facturan las actividades?  ¿Cómo se inscribe un participante? 42  ¿Cuáles son los datos de las planillas de inscripción? Con las respuestas de dichas interrogantes se pudo obtener más del 50% de los requerimientos funcionales del sistema, además de obtener una visión más clara de la problemática presentada dentro de las instalaciones de la Coordinación de Extensión a la hora promover nuevas actividades. Siguiendo con la fase de requisitos de AgilUs, se presenta la tormenta de ideas realizada durante la entrevista con el profesor Carlos Yanes de FUNDACIENS-UCV, el profesor Ernesto Fuenmayor y la profesora Yosly Hernandez de la Coordinación de Extensión. Tormentas de ideas Una tormenta de ideas es una técnica utilizada para crear la mayor cantidad de ideas posibles en grupo sobre un tema en específico (Duarte, 2008). El Objetivo de realizar esta actividad fue de exponer a los profesores, personal de Coordinación de Extensión y FUNDACIENS-UCV la situación actual de gestión de las actividades académicas, para que luego éstos aportasen ideas que permitieran enriquecer el proceso. En la ¡Error! No se encuentra el origen de la referencia.0 se puede apreciar los érminos más mencionados de dicha tormenta: 43 Figura 10. Tormenta de ideas  Las ideas más relevantes que surgieron fueron las siguientes:  Automatización de Inscripciones.  Poco trabajo manual.  Notificación de participantes interesados en alguna actividad.  Digitalización certificados.  Carga de la información de las actividades.  Manejo de la información de inscripción en digital  Manejo de roles de usuarios.  Gestionar actividades. Continuando con las diversas técnicas de levantamiento de información de la fase de requisitos, se expone el sondeo realizado a los usuarios finales del SISGAE, la cual sirvió como información base para el desarrollo de un sistema completo. Sondeos El sondeo se realizó mediante la utilización de los formularios provistos por Google Forms (Google, 2006), fue efectuado tomando una muestra de ocho (08) personas pertenecientes Coordinación de Extensión de la UCV y FUNDACIENS-UCV-UCV, estas son las encargadas de llevar el control de los participantes de las actividades, darle seguimiento a los pagos, generar los diplomas o certificados, entre otras tareas que conllevan al buen flujo de las actividades. La aplicación de esta técnica tuvo como finalidad obtener diversas opiniones relacionadas con un sistema web usable para el proceso de gestión de las actividades academicas y administrativas de Coordinación de Extensión, ésta permitió facilitar la toma de decisiones acerca de los requerimientos para el desarrollo de SISGAE. Se realizaron un total de siete (5) preguntas, que se describen en los siguientes párrafos: 44 La primera pregunta estaba destinada a conocer la opinión que tenía el personal administrativo con respecto al proceso de gestión de las actividades académicas impartidas por Coordinación de Extensión, esta se formuló de la siguiente forma ¿Cómo catalogaría usted el actual proceso manual de Gestión de las actividades que ofrece la coordinación de extensión?, se utilizo la escala de Likert asignándosele un rango de evaluación del uno (1) al cinco (5), donde el uno (1) se define como malo, el dos (2) como regular, el tres (3) bueno, el cuatro (4) muy bueno y el cinco (5) excelente. Los resultados permitieron valorar cuantitativamente el proceso actual. La segunda pregunta que se elaboro fue: ¿Qué le gustaría que haga el sistema? Con esta se logro tener más claras las ideas con respecto a las necesidades legítimas dentro de proceso de apertura, prosecución y finalización de las actividades. La tercera pregunta se elaboró con la finalidad de saber qué características desearía el usuario que formaran parte del sistema, para ello se utilizo un esquema de selección simple. Seleccione las principales características que desearía que tuviese el sistema, colocando entre las posibles respuestas: confiable, usable, fácil de entender, tolerante a errores, eficiente, práctico, fácil de memorizar y diseño elegante. La cuarta pregunta fue enfocada a los pagos de las actividades, con la finalidad de conocer cómo se maneja este proceso, la pregunta fue: ¿Cuál es la forma de pago de las actividades y como le gustaría que se manejaran los pagos dentro del sistema? Por último, la quinta pregunta se realizo con la finalidad de conocer los aspectos adicionales que le gustarían que tuviera el sistema, así como las sugerencias para que el sistema se le diera el mejor uso posible, la pregunta fue: ¿Qué sugiere que tenga el sistema para que utilizarlo sea de su agrado? Perfil de usuario Los Perfiles de Usuarios son fundamentales en el desarrollo de un sistema, ya que nos permiten conocer los roles desempeñados por los usuarios en el mismo. En el proceso de gestión de actividades, existen cuatro (4) tipos de usuarios, el rol de Coordinación de 45 extensión / Administrador, Profesor, FUNDACIENS-UCV y Participante, cada uno posee responsabilidades distintas durante el proceso, a continuación se describe el cargo de cada una de ellas:  Coordinación de extensión / Administrador: gestionar las actividades y los usuarios, generar reportes y de abrir las actividades.  FUNDACIENS-UCV: validar las inscripciones, validar los pagos de las inscripciones y generar reportes.  Profesor: validar la preinscripción de los participantes, calificar a los participantes, ver el listado de los participantes y generar historial de actividades.  Participante: preinscribirse e inscribirse en las actividades y abonar pago de las actividades. Siguiendo con la fase de requisitos de AgilUs, se describen los requerimientos funcionales y no funcionales identificados aplicados en el sistema. Listas de Requerimientos Funcionales y No Funcionales Durante las reuniones efectuadas con los profesores, personal de Coordinación de Extensión y FUNDACIENS-UCV, se definieron diversos requisitos funcionales y no funcionales, los cuales fueron considerados al momento del desarrollo de las funcionalidades del sistema. Requerimientos Funcionales Seguidamente, se describirán cada uno de los requerimientos funcionales que forman parte del sistema, distribuidos según el perfil de los diferentes usuarios: Requerimientos comunes para cada perfil de usuario:  Iniciar/Cerrar Sesión: realizará el inicio de la sesión con su correo electrónico y contraseña. 46  Editar Perfil: podrá modificar los datos de su perfil.  Modificar contraseña.  Modificar correo electrónico Requerimientos para el perfil Coordinación de Extensión/ Administrador:  Gestión de Usuarios (agregar, eliminar, editar).  Gestión de contenido (agregar, eliminar, editar). Requerimientos para el perfil FUNDACIENS-UCV:  Verificar comprobante de pago  Aprobar inscripción de los participantes Requerimientos para el perfil Participante:  Preinscripción en alguna de las actividades  Inscripción en alguna de las actividades  Ver historial de sus cursos  Generar certificado Requerimientos para el perfil Profesor:  Aprobar preinscripción de los participantes  Gestionar las notas de sus participantes  Ver historial de sus actividades dictadas. Requerimientos No Funcionales Los requerimientos No Funcionales se señalan a continuación:  Usabilidad: el usuario debe ser capaz de desarrollar tareas rápidamente, una vez que se ha aprendido a usar el sistema. El sistema debe plantear ayudas a 47 los usuarios para apoyarlos cuando deban enfrentar los errores que cometen al usar el sistema.  Disponibilidad: se debe permitir usar el sistema en cualquier momento y cualquier ubicación geográfica con conexión a Internet. Cuenta con un nivel de servicio para los usuarios de siete (7) días por veinticuatro (24) horas, a menos que exista algún posible inconveniente externo al sistema.  Mantenibilidad en el tiempo: con el objetivo de poder realizar los cambios necesarios a fin de garantizar la disponibilidad del Sistema. Ofrecer mantenimiento correctivo y preventivo, para soportar el buen funcionamiento estacionario e incremental, por el aumento en el número de usuarios.  Portabilidad: al sistema se puede acceder independientemente de la plataforma que se esté utilizando, solo debe requerir de la disposición de un navegador Web independientemente del sistema operativo.  Escalabilidad: las funcionalidades son implementadas previniendo futuras mejoras sobre las mismas, de manera que pueden ser incorporadas afectando el código existente de la menor forma posible.  Seguridad: toda la información contenida en el sistema esta resguardada contra accesos no autorizados, mediante mecanismos de autenticación y sesiones que no permitan la fuga de información.  Tolerancia a fallas: en el exacto momento que ocurra una falla, ya sea intencional o no, la aplicación debe ser capaz de responder al usuario y volver al estado que se encontraba al momento anterior de ocurrir la falla. Los requerimientos no funcionales mencionados se aplicaron para cada módulo del sistema, los cuales son una abstracción para los usuarios finales, ya que no deben realizar ninguna tarea específica para cumplir con ellos. 48 Una vez culminada la fase de requisitos se continúa con la Fase de Análisis. Fase II: Análisis En esta fase se estudió de la solución desarrollada, en la cual se diseñaron distintos prototipos de interfaz, se especificaron guías de estilo, se realizaron diagramas de casos de uso y objetos de dominio, para así puntualizar las funcionalidades que tendrá el producto desarrollado. A continuación se presentarán cada una de estas actividades. Prototipos de Interfaz Los prototipos de Interfaz, que sirvieron de apoyo para establecer el diseño del Sistema, en la figura 11 se muestra la estructura de la página inicial del sistema, donde se puede apreciar los siguientes ítems.  El encabezado del sistema: con el nombre del sistema los logos de las instituciones participantes en el mismo.  Menú de navegación: donde se permite el acceso a información de los involucrados en el sistema y las actividades que ofrece.  Inicio de sesión: donde se solicita un nombre de usuario y clave al usuario para entrar al sistema.  Pie de página: se muestra información adicional del sistema. Figura 11. Prototipo de interfaz 49 La figura 12 representa la página principal, luego de haber iniciado sesión. Se mantiene el encabezado y se agregó un menú lateral en la parte izquierda, que muestra las opciones disponibles dependiendo el rol con el cual se haya iniciado sesión, desplegando dicho contenido seleccionado en la parte central del sistema. Figura 12. Prototipo de interfaz 2 Una vez mostrado los prototipos de las principales interfaces, se procede a presentar las guías de estilos por las cuales se rige el sistema. Guías de estilo En la Guía de Estilos aplicada, se tomaron en consideración las características relacionadas con el aspecto de la interfaz de usuario. En la tabla 1 se puede observar las imágenes principales de las interfaces como lo son los logos de la escuela de computación, de la UCV, de la facultad de ciencias de la UCV y 50 el de SISGAE. El logo de SISGAE fue realizado con las siglas del mismo, manteniendo una estructura sencilla pero elegante, donde se letra “i” de hace referencia a la parte académica que se maneja dentro del sistema ya que el punto que contiene la “i” fue sustituido por un birrete. La paleta de los colores principales de la interfaz serán colores de varias tonalidades de verdes, los cuales se mantendrán en todo el sistema. Los botones principales son siempre azules para mantener una tonalidad parecida a las partes principales del sistema. La tipografía seleccionada para la aplicación fue Helvetica Neue, cambiando de tamaño solamente para los títulos y subtítulos del sistema. Esta tipografía es del tipo Sans Serif, y fueron utilizados debido a que son letras básicas sin muchos detalles, las cuales son altamente recomendadas para el desarrollo web. Se diseñó una interfaz que fuese lo más simple posible, pero que cumpliera con las funcionalidades descritas anteriormente, se evaluó la posición de los elementos y el tamaño que cada uno debía tener, esto con el fin de no sobrecargar la interfaz y que fuera fácil uso. 51 Tabla 1. Guía de Estilo de SISGAE Procediendo con la Fase de Análisis de AgilUs, se detallaran los casos de uso que permitieron modelar los requerimientos funcionales de SISGAE. Modelo de Casos de Uso A través de los diagramas de Casos de Uso (CU) se presentan los requerimientos funcionales del Sistema, se muestra por cada funcionalidad, una breve descripción y la solución planteada. En la ¡Error! No se encuentra el origen de la referencia.13, se bserva el CU correspondiente al nivel 0 de abstracción, en este se modela el sistema a nivel general, con sus respectivos actores. Guía de Estilo Logos Logo de la Escuela de Computación Logo de la Universidad Central de Venezuela Logo de la Facultad de Ciencias Logo de SISGAE Paleta de Colores Colores Hexadecimal #1CC09F #003265 #000000 #FFFFFF #0d6069 Tipografía "Helvetica Neue", Helvetica, Arial, sans-serif; 52 Figura 13. Caso de Uso Nivel 0. Seguidamente se describen los principales actores de la aplicación:  Participante: inscripción, preinscripción y ver su historial de actividades  Profesor: gestionar contenido de las actividades que imparte, calificar alumnos y ver el historial de sus actividades.  Coordinación de Extensión/ Administrador: responsable en realizar la apertura de actividades, gestionar el contenido de las actividades aprobadas y gestionar los usuarios del sistema  FUNDACIENS-UCV: verificar pagos de los participantes. La ¡Error! No se encuentra el origen de la referencia. se puede observar los casos e uso correspondientes al nivel 1 de abstracción, los cuales presentan las principales funcionalidades del sistema y su interacción con los actores. 53 . Figura 14. Caso de Uso Nivel 1. En la sección de anexos se encuentra la descripción de los casos de uso antes mencionados y los restantes del sistema. Modelo de objetos del dominio El Diagrama de Objetos del Dominio representa los entes que existen en el contexto de SISGAE y la interacción que existe entre ellos, con la finalidad de alcanzar una mejor comprensión tanto del contexto como de los objetos que existen en el Sistema. En la figura número 15 se puede observar el Diagrama de objeto de dominio del sistema web SISGAE, existen tres (4) tipos de usuarios que interactúan con el Sistema: Coordinación de extensión, FUNDACIENS-UCV, profesores y participantes 54 Figura 15. Diagrama de objeto de Dominio SISGAE. Continuando con la Fase de Análisis de AgilUs, se presenta el Diseño Lógico y Físico de la Base De Datos de SISGAE. Diseño Lógico y Físico de la Base de Datos El Sistema Manejador de Base de Datos seleccionado para el desarrollo de SISGAE, fue PostgreSQL porque es una de las base de datos más avanzada del mercado, además que su código fuente es libre, lo que quiere decir que se puede realizar prácticamente lo que se desee con dicho producto. Fue necesario construir un conjunto de tablas que conforman la lógica que hace posible el funcionamiento y la persistencia del sistema, las cuales fueron diseñadas para soportar todos los objetivos planteados en el presente TEG. En la Figura 16 se señalan todas las tablas que interactúan en el sistema. 55 Figura 16. Tablas de la base de datos SISGAE. A continuación se describe el contenido que almacenan cada una de las tables mencionadas anteriormente. 1. abrir_curso: fecha de inicio y fin de preinscripción, fecha de inicio y fin de inscripción, fecha inicio y fin del curso y numero de cuotas para abrir una actividad. 2. Calificación: tipos de calificación cualitativa, como lo son sin calificar, aprobado y reprobado. 3. Costos: tipos de costo de una actividad (directo e indirecto). 4. cuerpo_docente: id de los docentes encargados de una actividad especifica 5. docentes: información personal de los docentes. 6. estatus_curso: posibles estatus de una actividad como lo son abierto, cerrado, cancelado. 56 7. estatus_participante: estatus del participante con respecto a una actividad desde la preinscripción hasta el inicio del curso como lo son preinscripción aceptada, inscripción rechazada, Esperando aprobación de Pago. 8. estructura_costos: montos de los diversos costos de una actividad (matricula, ingresos de la Coordinacion de Extensión, ingresos de FUNDACIENS- UCV). 9. grado_academico: posibles grados académicos para los perfiles de usuario. 10. modulos_actividad: nombres y contenidos de los módulos asociados a una actividad. 11. Pagos: datos de los comprobantes de pago (nombre, número y monto) asociados a una actividad. 12. Participantes: datos personales de los usuarios de la aplicación. 13. password_resets: de manera temporal el email de usuario y el token para restablecer la contraseña. 14. Preinscripción: datos del participante relacionados con la preinscripción e inscripción de una actividad (fecha de preinscripción, fecha de inscripción, requisitos etc.). 15. Roles: nombres de los tipos de usuario que interactúan con la aplicación. 16. Solicitudes: datos principales referentes a una actividad (nombre, tipo, estatus, etc.). 57 En la figura 17 se aprecia el Modelo Relacional de SISGAE. 58 Figura 17. Modelo Relacional SISGAE. 59 Una vez presentado el Diseño Lógico y Físico de la Base de Datos, se procede a presentar la Plataforma de Desarrollo con la cual se trabajó en la implementación del Sistema Plataforma de Desarrollo Las funcionalidades de SISGAE fueron desarrolladas bajo un enfoque web cliente- servidor, utilizando el patrón de diseño MVC y en un ambiente de desarrollo bajo los sistemas operativos Windows 10 y Windows 7. El Sistema Manejador de Bases de Datos usado fue PostgreSQL, y se utilizó el manejador de versiones Git usando como alojamiento SourceTree, realizando diversos respaldos del código, manteniendo estable y funcional en el mencionado repositorio. El lenguaje de desarrollo del lado de servidor del sistema web fue PHP, bajo el Framework Laravel en su versión 5.1. En cuanto a la programación del lado del cliente se utilizó: HTML5, Bootstrap, JavaScript, Ajax, jQuery y jQuery-UI. Una vez descritas todas las tecnologías utilizadas en el desarrollo del Sistema, se sigue con el método AgilUs, y se continúa con la Fase de Prototipaje. Fase III: Prototipaje Arquitectura del Sistema SISGAE se desarrolló bajo una arquitectura Cliente-Servidor de tres capas, siguiendo el patrón Modelo-Vista-Controlador, la cual consistió en mantener por separado la lógica de negocios y la presentación del sistema. La arquitectura de SISGAE se encuentra relacionada con la arquitectura de SIGADEX de la siguiente manera: En la capa de presentación se encuentran los roles asociados a cada uno de los sistemas, en el caso de SISGAE, participante, profesor, Coordinación de Extensión y FUNDACIENS-UCV y en el caso de SIGADEX, docente, director de escuela, presidente 60 de FUNDACIENS, representante del Consejo de Facultad y Presidente de la Coordinación de Extensión. En la capa de negocio, ambos sistemas se encuentran alojados en los servidores del Centro de Computación de la Facultad de Ciencias. Esta capa se encarga de realizar las consultas al Base de datos, procesar las respuestas obtenidas y finalmente mostrar los resultados al usuario. Por último está la capa de datos, la cual es esencial para relación de los sistemas, ya que ambos trabajan con la misma base de datos, de esta forma se puede garantizar que las actividades aprobadas por SIGADEX son las mismas que utiliza SISGAE para su gestión académica. En la figura 18 se puede apreciar gráficamente la arquitectura de SISGAE. Figura 18. Arquitectura SISGAE Desarrollo del Sistema Para el desarrollo de SISGAE se usó la versión del framework Laravel 5.1 del lado del servidor. La razón de esta elección se debe a que Laravel es un framework de código 61 abierto PHP, muy bien documentado, con una amplia comunidad y foros, curva de aprendizaje relativamente baja en comparación de otros frameworks php. En las Figuras 19 se detalla el la conexión a la BD PostgreSQL del sistema. Figura 19. Conexión con la base de datos (1). En la figura 20 se puede apreciar la siguiente configuración para concluir la conexión con la BD PostgreSQL del sistema. Figura 20. Conexión con la base de datos (2) 62 Como estándar al utilizar un ORM los nombres de las tablas deben ser en plural para así establecer la relación con los respectivos Modelos. Luego de haber creado todas las tablas de la base de datos, se procede a crear los Modelos asociados, la tabla con la cual se asocia, definiendo sus relaciones entre los mismos, el nombre de estos archivos debe ser en singular, manteniendo el estándar de ORM. También se crean los controladores asociados a dichos Modelos, para el desarrollo del sistema se creó solamente los que fueron utilizados para el desarrollo de las funcionalidades. En la figura 21 se puede observar el Modelo asociado a la Tabla Registro de los participantes. 63 Figura 21. Controlador del modelo Registro. Luego de tener todos nuestros controladores y modelos creados se pasa a configurar el archivo Routes.php el cual contendrá todas las rutas de acceso del sistema y su controlador asociado, en la Figura 22 se puede apreciar cómo se estructuran: 64 Figura 22. Archivo de rutas SISGAE. Como primera parte de desarrollo de funcionalidades se crea el controlador donde se hace todo lo referente al manejo de sesión en el sistema, inicio y cierre, validar roles y recuperar contraseña. En la Figura 23 se puede apreciar un segmento del código donde se puede ver como se efectuó el proceso de iniciar la sesión en el Sistema y redirigirlo a la vista correspondiente dependiendo del rol que haya seleccionado: 65 Figura 23. Parte del código para iniciar sesión. Siguiendo con el desarrollo de SISGAE, se pasa a crear las vistas del Sistema, se utilizó el motor de plantillas Blade de Laravel el cual facilita la creación de código HTML, así como la inclusión de los códigos CSS, JavaScript y JQuery; con esta se crearon una serie de vistas comunes del Sistema, como el encabezado y el pie de página, haciendo el código reusable y más fácil de leer. En la Figura 24 se observa el código de una de la plantilla base que contiene el encabezado del sistema. 66 Figura 24. Plantilla del header. En la Figura 25 se puede ver parte del código de la vista para iniciar sesión donde se utiliza una plantilla llamada “layouts.master”. Figura 25. Vista de inicio de sesión. 67 Debido a que se utilizó el patrón MVC, se manejó la misma estructura de carpetas que tiene Laravel, separando el modelo, vista y controlador en sus respectivas carpetas. Se crearon seis (26) controladores, a continuación se explica de que se encargan cada uno de ellos: 1. CursosController: la lógica de negocio para mostrar la información de los cursos talleres y diplomados de la coordinación de extensión. 2. CController: la lógica de negocio para mostrar la información de los cursos talleres y diplomados de la coordinación de extensión cuando un usuario no ha iniciado sesión. 3. VerificarController: verificar si un usuario esta registrado en la aplicación al momento de preinscribirse en alguna actividad por primera vez. 4. PreinscripcionAfueraController: realizar el proceso de preinscripción y registro cuando el usuario se está preinscribiendo en una actividad por primera vez. 5. LoginController: verificar la cédula y contraseña proporcionada por el usuario para ingresar a la página de inicio. 6. PerfilController: la lógica de negocio para consultar los datos del usuario logueado y modificarlos si lo desea. 7. PasswordController: realizar el proceso de resetear el password en caso de que el usuario lo haya olvidado. 8. CambioClaveController: realizar el proceso de cambio de contraseña. 9. InicioController: la lógica de negocio para mostrar los botones "preinscribir" e "inscribir" en caso de que el usuario tenga una preinscripción o inscripción disponible así como mostrar el estatus de la actividad en la que se encuentra actualmente el participante. 68 10. InscripcionController: guardar los datos del participante referentes a la inscripción de un usuario en una actividad. 11. ConfirmarController: consultar los datos del curso a inscribir para mostrarlos en la pantalla de confirmación de la inscripción. 12. PreinscripcionController: guardar los datos del participante referentes a la preinscripción de un usuario en una actividad. 13. CertificadoController: verificar si el usuario tiene certificados disponibles. 14. PagosController: almacenar los datos de un pago realizado por un participante en una actividad específica. 15. ProfesorController: mostrar la pantalla de inicio de un participante con el rol de profesor, asi como el curso que se encuentra dictando en la actualidad. 16. ValidarPreinscripcionController: consultar el listado de cursos que el profesor dicta para validar la preinscripción de sus participantes. 17. ListadoController: mostrar al profesor el listado de participantes pertenecientes a una actividad que se está llevando a cabo en la actualidad, asi como realizar el proceso de calificación. 18. RequisitosController: mostrar el listado de participantes inscritos en una actividad específica y ver sus requisitos para validar su inscripción. 19. CoordinacionController: mostrar la página de inicio de un usuario con el rol de Coordinación de Extensión/ Administrador y el listado de cursos que se está dictando en la actualidad. 20. AbrirPreinscripcionController: realizar el proceso de almacenamiento de las fechas de preinscripción, inscripción, inicio y fin de una actividad así como el número de cuotas para realizar los pagos. 69 21. UsuariosController: consultar todos los usuarios de la aplicación para mostrarlos al administrador, permite la eliminación de los mismos y creación de usuarios nuevos. 22. FundacionController: mostrar la página de inicio de un usuario con el rol de FUNDACIENS-UCV y el listado de cursos que se está dictando en la actualidad. 23. ConsultarController: consultar el listado de actividades que se encuentran abiertas en la actualidad para posteriormente ver el listado de participantes inscritos en la misma. 24. InfoCursoController: consultar el listado de participantes inscritos en una actividad para posteriormente ver los comprobantes de pago que ha subido el participante. 25. ComprobanteController: consultar los comprobantes de pago que ha subido el participante como pago de cuota de una actividad específica, asi como el proceso de validación del mismo por parte del usuario con el rol de FUNDACIENS-UCV. 26. PdfController: consultar los datos de un participante referentes a una actividad que haya aprobado para construir el documento en formato PDF asociado al certificado. Lista de Comprobación Se aplicó esta técnica a cinco (5) usuarios del sistema, representantes de los distintos roles, como lo son Coordinación de Extensión, Fundacines, Profesores y Participante, que conforman el grupo de involucrados en el proceso de gestión de SISGAE. Esto permitió identificar fallas en el cumplimiento del control y libertad para el usuario. 70 A las cinco (5) personas señaladas a las cuales se les aplicó esta técnica, se les facilitó la interfaz de usuario del Sistema para la realización de las actividades correspondientes a su rol. En la tabla 2 se observa la lista de comprobación que fue aplicada a los usuarios antes mencionados: Tabla 2. Lista de Comprobación de SIGAE Lista de Comprobación Se cumple No se cumple Reconocer en lugar de recordar. X Usar indicadores visuales. X Flexibilidad en la interfaz de usuario. X Feedback a las acciones del usuario. X Consistencia en apariencia y uso X Evitar palabras coloquiales. X Mostrar al usuario lo que necesita. X Permitir al usuario recuperarse de los errores X Mantener la interfaz simple, sencilla y organizada. X Funciones del sistema claramente visibles. X Permitir al usuario personalizar la IU. X Culminada la fase de Prototipaje se continúa con la siguiente etapa de la metodología, la Fase de Entrega. 71 Fase IV: Entrega Pruebas de Usabilidad Durante esta prueba, se evaluó la usabilidad de SISGAE, considerando los criterios creados por expertos en IHC, que se describen en la tabla 3 Criterio Descripción Accesibilidad El sitio es visible en cualquier configuración que tenga el cliente. Navegabilidad La información debe ser fácil de encontrar, debe haber consistencia en los elementos de navegación. Lenguaje manejado Debe ser fácil de entender, de acuerdo al tipo de usuario al que este dirigido el Sistema. Conceptos utilizados Deben ser adecuados al usuario al que está dirigida el Sistema. Consistencia En los títulos, cabeceras y etiquetas de links. La familiaridad y el reconocimiento deben permitir a los usuarios asociar ciertos elementos con ciertas funcionalidades. Tabla 3. Estándares de Usabilidad. (Acosta, 2011) Las pruebas de usabilidad, se le fueron aplicados a cinco (5) usuarios de los cuatro (4) diferentes roles, las cuales consistieron en un cuestionario donde se empleó la escala de Likert, ante los cuales el usuario debe mostrar su acuerdo o desacuerdo. Fueron utilizadas cinco (5) alternativas de respuestas para cada enunciado: totalmente de acuerdo, de acuerdo, ni de acuerdo ni en desacuerdo y totalmente desacuerdo. Seguidamente, los resultados fueron recabados y totalizados, calculando el promedio obtenido por cada uno de los criterios. En la tabla 4 se describen los resultados de la encuesta. 72 Planteamiento Resultados Gráfico Los títulos, menús y textos del Sistema son legibles. 4/5 (80%) de los usuarios estuvo totalmente de acuerdo y 1/5 (20%) estuvo de acuerdo Los colores utilizados contribuyen a la percepción adecuada del Sistema 3/5 (60%) de los usuarios estuvo de acuerdo y 2/5 (40%) estuvo ni de acuerdo ni en desacuerdo Los descriptores del Sistema son claros y precisos 2/5 (40%) de los usuarios estuvo totalmente de acuerdo y 2/5 (40%) estuvo de acuerdo y 1/5 (20%) ni de acuerdo ni en desacuerdo Se ofrece una organización que facilita la navegación 3/5 (60%) de los usuarios estuvo de acuerdo, 1/5 (20%) Totalmente de acuerdo y 1/5 (20%) estuvo ni de acuerdo ni en 73 Tabla 4. Resultados de Prueba de Usabilidad De esta manera, es posible concluir que los resultados de esta evaluación fueron favorables, ya que se estuvo totalmente de acuerdo (5) o de acuerdo (4) con los planteamientos del cuestionario la mayoría de los criterios tomados en cuenta, lo que indica que tanto SisGAE y las funcionalidades desarrolladas resultan intuitivas y fáciles de usar para los usuarios finales. desacuerdo El diseño del Sistema favorece su uso 3/5 (60%) de los usuarios estuvo totalmente de acuerdo y 2/5 (40%) de acuerdo El Sistema se puede ejecutar de manera intuitiva 3/5 (60%) de los usuarios estuvo totalmente de acuerdo y 2/5 (40%) de acuerdo Es un Sistema fácil de utilizar 4/5 (80%) de los usuarios estuvo totalmente de acuerdo y 1/5 (20%) de acuerdo Los elementos de ayuda disponibles en el Sistema son útiles 4/5 (80%) de los usuarios estuvo de acuerdo y 1/5 (20%) Totalmente de acuerdo 74 Pruebas de Funcionalidad N° Caso de prueba Rol Resultado Esperado Resultado Obtenido 1. Inicio de sesión Todos Redireccionar a la página de inicio correspondiente al rol que está iniciando sesión. El usuario pudo ingresar de manera exitosa a su página de inicio. 2. Recuperar Contraseña Todos El usuario debe recibir un correo con un enlace para luego proceder a colocar su nueva contraseña. El usuario recibió el correo con el enlace y pudo reestablecer su contraseña con éxito. 3. Preinscribir Actividad Participante El usuario debe subir los requisitos exigidos por la actividad en formato pdf, si la operación fue exitosa debe recibir un correo que le indicara que fue preinscrito de manera correcta El usuario logró subir los requisitos y recibió un correo indicando que la preinscripción fue exitosa. 4. Inscribir Actividad Participante El usuario debe subir el comprobante de pago correspondiente al monto de actividad que desea cursar y recibirá un correo indicando que se ha inscrito de forma correcta. El usuario subió el comprobante de pago y recibió un correo indicando que la inscripción fue exitosa. 5. Ver certificado Participante El usuario debe ingresar al menú “Mis Constancias” y presionar el enlace “ver certificado” (en caso de tener actividades culminadas) para que se despliegue una constancia con los datos de la actividad en formato pdf. El usuario hizo click en el enlace “ver certificado” y pudo observar el certificado en formato pdf. 6. Abonar pago Participante El usuario debe subir el comprobante de pago correspondiente a una cuota de la actividad a realizar y recibir un correo indicando que la operación fue exitosa. El usuario subió el comprobante y recibió el correo indicando que la operación fue exitosa 75 N° Caso de prueba Rol Resultado Esperado Resultado Obtenido 7. Validar Preinscripción Profesor El usuario debe hacer click en el icono correspondiente a la opción “validar preinscripción”, el participante recibirá un correo indicando que su preinscripción fue aceptada El usuario presiono el icono “validar preinscripción” y el participante recibió un correo indicando que su preinscripción fue validada con éxito. 8. Rechazar Preinscripción Profesor El usuario debe hacer click en el icono correspondiente a la opción “rechazar preinscripción”, el participante recibirá un correo indicando que su preinscripción fue rechazada y cuál fue el motivo de rechazo. Se rechazó la preinscripción y el participante recibió un correo indicando el motivo de rechazo. 9. Calificar estudiante Profesor El usuario debe ingresar al listado de estudiantes de una actividad en curso, seleccionar el tipo de calificación y el presionar el botón enviar notas se mostrará un mensaje indicando que las notas fueron enviadas con éxito y el usuario de la Coordinación de Extensión recibirá un correo con el listado de estudiantes. Se enviaron las notas y la Coordinación de Extensión recibió un correo con el listado de estudiantes. 10. Validar Inscripción Fundaciens El usuario debe presionar el botón “validar” y el participante recibirá un correo indicando que su pago fue aprobado Se validó la inscripción y el participante recibió un correo indicando que el pago fue aprobado. 76 N° Caso de prueba Rol Resultado Esperado Resultado Obtenido 11. Rechazar Inscripción Fundaciens El usuario debe presionar el botón “rechazar” y el participante recibirá un correo indicando que su pago fue rechazado. Se rechazó la inscripción y el participante recibió un correo indicando que el pago fue rechazado. 12. Abrir Actividad Coordinación de Extensión El usuario procederá seleccionar una actividad, las fechas correspondientes a la preinscripción, inscripción e inicio de la actividad, numero de cuotas, si se emitirá constancia digital o no y recibirá una alerta indicando que la operación fue exitosa. Se abrió la actividad y se recibió la alerta indicando que la operación fue exitosa. 13. Generar Reportes Coordinación de Extensión y Fundaciens El usuario debe seleccionar 2 fechas y observara el listado de actividades en el rango de fechas seleccionadas, dicho listado podrá ser exportado a formato pdf. Se generó el listado de actividades correspondientes a las fechas y pudo ser exportado a formato pdf. 14. Diplomados Coordinación de Extensión El usuario podrá observar el listado de diplomados culminados y exportar a pdf el modelo de diploma correspondiente a un diplomado especifico. Se generó el listado de diplomados y se pudo exportar el modelo de diploma correspondiente. Con la ejecución de las pruebas anteriores, se concluir que SISGAE es un sistema sin errores, ya que los resultados de cada caso de prueba fueron satisfactorios. 77 Capítulo IV: Resultados En el presente capítulo se presenta las interfaces de SISGAE y la descripción de cada una de ellas, separadas por los distintos roles que la conforman como lo son Profesores, Participantes, Coordinación de Extensión y FUNDACIENS-UCV. La Figura 26 es un diagrama de flujo que muestra el comportamiento de SISGAE. Partiendo desde la apertura de una actividad hasta el la finalización de la misma, se puede observar los pasos que debe seguir un participante para cursar una actividad y como intervienen los profesores, Coordinación de Extensión y FUNDACIENS-UCV-UCV en el mismo. Figura 26. Diagrama de flujo de SISGAE 78 Para comenzar se muestra la página de Inicio de SISGAE, la misma es una interfaz en común para todos los usuarios del sistema. En la figura número 27 se puede apreciar en la parte superior izquierda el logo de la UCV y el logo de SISGAE, en la parte central de la aplicación esta la descripción del sistema y un formulario para “iniciar sesión”, debajo de de esta última hay dos enlaces, uno es para recuperar la contraseña, el segundo para registrarse en el sistema, en la parte inferior del sistema se encuentran tres enlaces de importancia como lo son el de la UCV, la Facultad de Ciencias de la UCV y el de Coordinación de Extensión de la UCV. Figura 27. Página de inicio de SISGAE. Seguidamente se presenta las interfaces del rol “Participante”. En la figura 28 se puede apreciar cuando el usuario ya ha iniciado sesión y se encuentra ubicado en la pestaña de “inicio”. En esta se encuentra un diagrama que explica el flujo que debe realizar para poder participar en una actividad. 79 Figura 28. Pestaña de Inicio, usuario “participante” En la figura 29 se puede apreciar cuando el usuario se encuentra en la pestaña de “Actividades”. En esta se visualiza una tabla con el listado de actividades que ofrece SISGAE. Hay una opción para seleccionar la cantidad de cursos a visualizar por página y se puede filtrar por el tipo de actividad. Figura 29. Pestaña de Actividades, usuario “participante” 80 En la figura 30 se puede apreciar cuando el usuario ha seleccionado la opción para preinscribirse en un curso. En esta se visualiza una tabla con la información de la preinscripción y un buscador para cargar los recaudos solicitados para concretar la misma. Figura 30. Confirmar preinscripción, usuario “participante” En la figura 31 se puede apreciar cuando el usuario se encuentra en la pestaña de “Actividades en curso”. En esta se visualizan dos tablas, una con un calendario académico y la otra con información de las actividades que el usuario está realizando. Vale acotar que dicha interfaz mantiene la misma estructura y funcionalidad para todos los roles. 81 Figura 31. Pestaña de Actividades en curso, todos los roles En la figura 32 se puede apreciar cuando el usuario se encuentra en la pestaña de “Mis certificados”. En esta se visualiza una tabla con información de las actividades que el usuario culmino, en la misma existen dos opciones, una para ver el certificado de una actividad con estatus aprobado y una opción para exportar un PDF con toda la información de dicha tabla Figura 32. Pestaña Mis Certificados, usuario “participante” 82 En la figura 33 se puede apreciar el pdf antes mencionado, donde se encentra el resumen de actividades cursadas por el participante. Figura 33. PDF historial de actividades, usuario “participante” En la figura 34 se puede apreciar un modelo del comprobante de una actividad aprobada. 83 Figura 34. Modelo de Comprobante, usuario “participante” Seguidamente se presenta las interfaces del rol “Profesor”. En la figura 35 se puede apreciar cuando el usuario ya ha iniciado sesión y se encuentra ubicado en la pestaña de “inicio”. En esta se encuentra un diagrama que explica todas las posibles opciones que puede realizar en el sistema. 84 Figura 35. Pestaña de Inicio, usuario “Profesor” En la figura 36 se puede apreciar un PDF que se descarga una vez seleccionada la pestaña “Historial”. En esta se visualiza la información que el usuario está dictando. Figura 36. PDF historial de actividades, usuario “Profesor” En la figura 37 se puede apreciar cuando un usuario se encuentra en la pestaña de “Validar Preinscripción”. En esta se visualizan todas las actividades que tiene a su cargo, 85 para posteriormente chequear por actividad si tiene a personas pendientes por validarles la preinscripción. Figura 37. Pestaña de Validar Preinscripción, usuario “Profesor” En la figura 38 se puede apreciar cuando un usuario con rol “profesor” se encuentra en la interfaz para chequear los recaudos de los participantes de determinada actividad y proceder a validar su preinscripción. Para llegar a esta interfaz el usuario debe seleccionar una de las actividades que se muestran en la pestaña de Validar Preinscripción. Figura 38. Interfaz para Validar Preinscripción, usuario “Profesor” 86 En la figura 39 se puede apreciar cuando un usuario con rol “profesor” se encuentra en la interfaz para calificar de los participantes de determinada actividad. Para llegar a esta interfaz el usuario debe seleccionar una de las actividades que se muestran en la pestaña de “Mis actividades en curso”. Figura 39. Interfaz para Calificar un participante, usuario “Profesor” En la figura 40 se puede apreciar un PDF que se descarga al seleccionar el botón “Exportar PDF” que se muestra en la Figura 37. En esta se visualiza el listado de participantes con los pagos que llevan abonados y el restante por cancelar. 87 Figura 40. Reporte de Pagos, usuario “Profesor” Seguidamente se presenta las interfaces del rol “Coordinación de Extensión”. En la figura 41 se puede apreciar cuando el usuario con rol “Coordinación de Extensión” ya ha iniciado sesión y se encuentra ubicado en la pestaña de “inicio”. En esta se encuentra un diagrama que explica todas las posibles opciones que puede realizar en el sistema. 88 Figura 41. Pestaña de Inicio, usuario “Coordinación de Extensión” En la figura 42 se puede apreciar cuando un usuario con rol “Coordinación de Extensión” se encuentra en la pestaña de “Abrir Actividad”. En esta crean las nuevas actividades que se ofrecen al público. 89 Figura 42. Pestaña de Abrir Actividad, usuario “Coordinación de Extensión” En la figura 43 se puede apreciar cuando el usuario con rol “Coordinación de Extensión” se encuentra en la interfaz donde se pueden visualizar la lista de participantes de determinada actividad previamente seleccionada en la pestaña de “Actividades en Curso”. Figura 43. Interfaz de listado de participantes, usua rio “Coordinación de Extensión” 90 En la figura 44 se puede apreciar un PDF que se descarga al seleccionar el botón “Exportar PDF” que se muestra en la Figura 41. En esta se visualiza el listado de participantes con los pagos que llevan abonados y el restante por cancelar. Figura 44. Reporte de Pagos, usuario “Coordinación de Extensión En la figura 45 se puede apreciar cuando el usuario con rol “Coordinación de Extensión” se encuentra en la pestaña de “Administrar – Gestionar Usuarios”. En esta se visualizan todos los usuarios de los distintos roles y se pueden realizar dos opciones con cada uno de ellos, editar su información o eliminarlos. 91 Figura 45. Pestaña de Administrar – Gestionar Usuarios, usuario “Coordinación de Extensión” En la figura 46 se puede apreciar cuando el usuario con rol “Coordinación de Extensión” se encuentra en la pestaña de “Administrar – Gestionar Actividades”. En esta se visualizan todas las actividades y se pueden realizar dos opciones con cada uno de ellas, editar su información o eliminarlas. 92 Figura 46. Pestaña de Administrar – Gestionar Actividades, usuario “Coordinación de Extensión” En la figura 47 se puede apreciar cuando el usuario con rol “Coordinación de Extensión” se encuentra en la pestaña de “Reportes”. En esta se debe colocar un rango de fechas para visualizar todas las actividades impartidas en dicho rango. Figura 47. Pestaña de Reportes, usuario “Coordinación de Extensión” En la figura 48 se puede apreciar cuando el usuario con rol “Coordinación de Extensión” se encuentra en la interfaz donde se visualiza un reporte de actividades. En esta se puede generar dos tipos de PDF, el primero es donde se visualizan todas las actividades 93 en un rango de fechas, este se obtiene seleccionando el botón que dice Exportar PDF, y el otro es un PDF donde se visualizan todos los participantes de una actividad en particular impartida en ese rango de fechas, este se visualiza seleccionando el “ojo” que esta al final de la fila de cada actividad. Figura 48. Interfaz de Reportes, usuario “Coordinación de Extensión” En la figura 49 se puede apreciar un PDF que se descarga al seleccionar el botón “Exportar PDF” que se muestra en la Figura 47. En esta se visualiza el listado de actividades en un rango de fechas previamente seleccionado. 94 Figura 49. Reporte de Actividades, usuario “Coordinación de Extensión” En la figura 50 se puede apreciar un PDF que se descarga al seleccionar el botón “Exportar PDF” que se muestra en la Figura 48. 95 Figura 50. Reporte de participantes, usua rio “Coordinación de Extensión” Seguidamente se presenta las interfaces del rol “FUNDACIENS-UCV”. En la figura 51 se puede apreciar cuando el usuario con rol “Coordinación de Extensión” ya ha iniciado sesión y se encuentra ubicado en la pestaña de “inicio”. En esta se encuentra un diagrama que explica todas las posibles opciones que puede realizar en el sistema. 96 Figura 51. Pestaña de Inicio, usuario “FUNDACIENS -UCV” En la figura 52 se puede apreciar cuando el usuario con rol “Coordinación de Extensión” se encuentra ubicado en la pestaña de “Validar Inscripción”. En esta se visualizan todas las actividades, para posteriormente chequear por actividad si tiene a personas pendientes por validarles la inscripción. Figura 52. Pestaña de Validar Inscripción, usuario “FUNDACIENS -UCV” 97 En la figura 53 se puede apreciar cuando un usuario con rol “FUNDACIENS-UCV” se encuentra en la interfaz donde sale la lista de participantes de determinada actividad, en esta selecciona algún participante para chequear los recaudos y proceder a validar su Inscripción. Para llegar a esta interfaz el usuario debe seleccionar una de las actividades que se muestran en la pestaña de Validar Inscripción. Figura 53. Interfaz para Validar Inscripción, usuario “FUNDACIENS -UCV” En la figura 54 se puede apreciar cuando un usuario con rol “FUNDACIENS-UCV” se encuentra en la interfaz donde se pueden apreciar todos los recaudos de un participante para ser validado. Para llegar a esta interfaz el usuario debe seleccionar “el ojo” (ver en Figura51) que se encuentra en la columna final de un participante. 98 Figura 54. Interfaz para Chequear recaudos, usuario “FUNDACIENS -UCV” 99 Conclusiones Para el logro del objetivo general planteado en este trabajo especial de grado (TEG) correspondiente al desarrollo de una aplicación web, se realizo el Sistema de Gestión Académica - Administrativa de Extensión de la Facultad de Ciencias de la UCV (SISGAE), con el propósito de garantizar la automatización de procesos manuales que se venían realizando en años anteriores. Se dio cumplimiento a cada uno de los objetivos específicos correspondientes al presente TEG de esta manera: Se planteo el desarrollo de una arquitectura en tres capas donde se veía involucrado el Sistema de Gestión de Actividades de Extensión (SIGADEX), el cual provee la información de las actividades aprobadas por los distintos entes involucrados y listas para ser ofertadas al público. La utilización de la metodología AgilUs permitió que el diseño y la construcción de SisGAE se realizara en iteraciones, puesto que dio flexibilidad para implementar cada uno de los requerimientos, además garantizó la participación del usuario en todo el proceso, manifestando éstos en las diversas reuniones su conformidad con el desempeño y con los resultados arrojados por SisGAE. Esta metodología también permitió la implementación de un conjunto de actividades en forma organizada y rápida. Fue posible efectuar las adaptaciones por parte del equipo de desarrollo, atendiendo las necesidades expresadas por el usuario para la implementación del sistema. Las pruebas de usabilidad aplicadas en cada iteración, detectaron errores que se corrigieron de manera inmediata, contando con los aportes de los distintos usuarios del mismo. SisGAE fue desarrollado utilizando tecnologías de desarrollo web de acceso libre. El uso del Framework de PHP, Laravel 5.1, como tecnología del lado del servidor agilizó considerablemente el proceso de desarrollo, debido a que se aprovecharon las diferentes estructuras y métodos predefinidos que posee, los cuales minimizan el tiempo y esfuerzo de codificación. 100 De esta manera, la aplicación de estándares de programación facilitó la obtención de un código legible, proporcionando que el mantenimiento y la evolución de la aplicación sea duradera. Este sistema web permite llevar a cabo procesos de gestión de actividades académicas y administrativas de manera coherente, en vista de que se contribuyó en la reducción de trabajo y de tiempo debido a que estas ahora se realizan de forma sistemática. Como consecuencia, la elaboración de este TEG realizó un aporte significativo a la Coordinación de Extensión de la Facultad de Ciencias de la UCV, optimizando el proceso de Gestión de Actividades Académicas y Administrativas, a través de la puesta en desarrollo de SisGAE. La automatización de inscripción, apertura de actividades, cierre de actividades, sistematización y organización de la información de los cursos, talleres, diplomados, contenido de los antes mencionados, información de los profesores y participantes, permiten que este proceso sea confiable y se realice en un lapso de tiempo prudente. Finalmente se puede afirmar que los resultados obtenidos fueron altamente satisfactorios ya que se logró cubrir con todos los objetivos planteados. 101 Recomendaciones Para que un sistema sea perdurable, es necesario que se efectúen mejoras continuas que le permita adaptarse a las tecnologías de información vigentes y a las necesidades de los usuarios, por tal razón, a continuación se listan una serie de recomendaciones y/o sugerencias que pudieran ser aplicadas a las bases del SISGAE: 1) Realizar la aplicación Móvil de SISGAE, para una mejor portabilidad y rapidez de uso. 2) Ampliar el alcance para su aplicación en los distintos cursos que ofrece UCV 3) Efectuar el debido entrenamiento con los usuarios del sistema, para su correcto uso y rapidez al momento de realizar el trabajo. 4) Mantener actualizada la Base de Datos de los cursos recientes he información de los mismo en el portal web. 5) Implementar funcionalidades de accesibilidad, que permitan la inclusión de los usuarios con discapacidades, como aumentar el tamaño de las fuentes, cambiar el contraste de los colores, entre otros. 6) Agregar un modulo donde el participante al culminar la actividad pueda realizar comentarios sobre los aspectos generales de la misma. 102 Referencias Acosta, E. (2011). AgilUs: un método ágil de desarrollo de software que incorpora la usabilidad. Caracas. Recuperado el 20 de Julio de 2015. Tomado de http://www.ciens.ucv.ve:8080/genasig/sites/interaccion-humano- comp/archivos/234_CLEI_Acosta_Paper.pdf Alistapart. (2010). Responsive Web Design. Recuperado el 22 de Julio de 2015 Tomado de http://alistapart.com/article/responsive-web-design Alvarez, M. A. (12 de Enero de 2015). Introducción Lenguajes Web. Chile: LibrosWeb. Apache. (1 de Abril de 2013). Servidor HTTP Apache. Recuperado el 12 de Agosto de 2015. Tomado de http://projects.apache.org/indexes/releases.html Araujo, L. M. (2008). Tecnologia Web. Lima. Recuperado el 9 de Octubre de 2015 Catalani, E. (20 de Agosto de 2007). Arquitectura Modelo vista controlador (MVC). Recuperado el 20 de Agosto de 2015. Tomado de https://exequielc.wordpress.com/2007/08/20/arquitectura-modelovistacontrolador/ Date, C. (2001). Introducción a los Sistemas de Bases de Datos ( 7 ed.). Prentice Hall. Recuperado el 13 de Agosto de 2015. Denzer, P. (23 de Octubre de 2002). Paper Postgresql. Recuperado el 11 de Octubre tomado de 2015. Tomado de http://www.academia.edu/5583702/Postgresexpo Duarte J. (2008). Social Influences in brainstorming groups Recuperado el 12 de diciembre de 2015. Tomado de: http://books.google.co.ve/books?id=KtHj- IDy4ZAC&pg=PA5&dq=osborn+brainstorming&hl=es- 103 419&sa=X&ei=ooebUe2ML8P00gGxvoDwAw&ved=0CDsQ6AEwAg#v=onepage&q= osborn%20brainstorming&f=false E-ducativa. (20 de Enero de 2000). E-ducativa. Recuperado el 2 de Septiembre de 2015. Tomado de http://e- ducativ.catedu.es/44700165/aula/archivos/repositorio//1000/1057/html/22_componentes_tc nicos_arquitectura_clienteservidor.html Eguíluz, J. (2008). Introducción a JavaScript. febrero: LibrosWeb. Recuperado el 09 de Octubre de 2015 Escofet, C. (2007). El lenguaje SQL. UOC. Formix. (14 de Abril de 2015). Formix. Recuperado el 1 de Septiembre de 2015. Tomado de https://denev66.wordpress.com/2015/04/14/que-es-el-html/ Fowler, M. (2003 ). Patterns of Enterprise Application Architecture. Addison-Wesley Professional. Garret, J. (2 de Febrero de 2006). Ajax: A New Approach to Web Applications. Tomado de http://www.adaptivepath.com/ideas/ajax-new-approach-web-applications Git Book. (20 de Enero de 2009). Git Book. Recuperado el 20 de Agosto de 2015. Tomado de https://git-scm.com/book/es/v1 Good, R. (2005). Ventajas de las aplicaciones web. Recuperado el 16 de feberero de 2015. Tomado de http://www.pixima.net/aplicaciones-web/ventajas-de-las-aplicaciones-web/ Google. (2 de Enero de 2006). Formularios Google. Tomado de https://docs.google.com/templates?type=forms http://www.pixima.net/aplicaciones-web/ventajas-de-las-aplicaciones-web/ 104 Google. (2 de Enero de 2006). Hojas de Calculo de Google. Recuperado el 1 de Agosto de 2015. Tomado de docs.google.com/spreadsheets Graham, P. (Septiembre de 2001). Sistemas Web. Recuperado el 12 de agosto de 2015 .Tomado de http://www.paulgraham.com/road.html Gutiérrez, J. J. (10 de Enero de 2004). Framework. Recuperado el 28 de Julio de 2015. Tomado de http://www.lsi.us.es/~javierj/investigacion_ficheros/Framework.pdf. Halpin, T. (2009). Object-Role Modeling version 2 (ORM 2). San Francisco: Morgan Kaufmann Publishers . Hernández, J. (2014). Análisis y Desarrollo Web. Tomado de https://books.google.co.ve/books?id=nYDVBQAAQBAJ Inmotion Hosting. (05 de Abril de 2013). What is bootstrap. Recuperado el 5 de Agosto de 2015. Tomado de http://www.inmotionhosting.com/support/edu/joomla-3/using- bootstrap/what-is-bootstrap jQuery. (2005 de Marzo de 2005). jQuery. Recuperado el 28 de Agosto de 2015. Tomado de jquery.com jQuery-UI. (20 de Marzo de 2005). jQuery UI. Recuperado el 1 de Septiembre de 2015. Tomado de http://jqueryui.com/ Laravel. (14 de Marzo de 2013). Laravel Framework. Recuperado el 19 de Agosto de 2015. Tomado de http://laravel.com/docs/4.2/introduction#laravel-philosophy 105 Martínez, A. F. (01 de Diciembre de 2009). WUEP:Un Proceso de Evaluación de Usabilidad Web Integrado en el Desarrollo de Software Dirigido por Modelos. Recuperado el 30 de Septiembre de 2015. Tomado de https://riunet.upv.es/bitstream/handle/10251/11924/WUEP%20- %20Un%20Proceso%20de%20Evaluacion%20de%20Usabilidad%20Web%20...pdf?seque nce=1 Mateu, C. (2004). Desarrollo de Aplicaciones Web. UOC. Mora. (2002). Programacion de Aplicaciones Web. Alicante: Editorial Club Universitario. Morales, J. (10 de Octubre de 2011). Recuperado el 27 de Julio de 2015. Tomado de http://www.slideshare.net/JeremiasMorales/22-lenguajes-del-lado-cliente-9782560 Mosquera, N. E. (6 de Mayo de 2009). Sistema de Informacion Web. Sistema de Informacion Web. Pereira. Recuperado el 27 de Julio de 2015 Mozilla Developer Network. (15 de Septiembre de 2005). Recuperado el 28 de Julio de 2015. Tomado de https://developer.mozilla.org/es/docs/Web/CSS Mozilla Developer Network. (20 de Febrero de 2006). HTML5. Recuperado el 15 de Agosto de 2015.Tomado de https://developer.mozilla.org/es/docs/HTML/HTML5 Mozilla Developer Network. (20 de Febrero de 2006). JavaScript. Recuperado el 29 de Agosto de 2015. Tomado de https://developer.mozilla.org/es/docs/Web/JavaScript Navarro, E. (11 de Junio de 2002). Calidad Gestion Procesos en Tecnologias de Informacion. Recuperado el 11 de Octubre de 2015.Tomado de http://www.gestiopolis.com/calidad-gestion-procesos-tecnologias-informacion/ 106 Ojeda, A. N. (2012). Guia Completa de CSS3. Autoedicion. PHP. (2001). Manual de PHP. Recuperado el 03 de Julio de 2015. Tomado de http://php.net/manual/es/intro-whatis.php PostgreSQL. (02 de Octubre de 2010). PostgreSQL. Recuperado el 27 de Agosto de 2015. . Tomado de http://www.postgresql.org.es/sobre_postgresql Potencier, F. (02 de Julio de 2002). Symfony 1.2, la guía definitiva. Recuperado el 25 de Agosto de 2015. Tomado de https://librosweb.es/libro/symfony_1_2/capitulo_2/el_patron_mvc.html PTV Group. (12 de Enero de 2000). vision-traffic.ptvgroup.com. Recuperado el 1 de Septiembre de 2015. Tomado de vision-traffic.ptvgroup.com Puig, J. C. (2013). CSS3 y Javascript avanzado. UOC. ReviBlog. (7 de Enero de 2014). ReviBlog jQuery Calendar. Recuperado el 20 de Agosto de 2015. Tomado de http://reviblog.net/category/jquery/ Robini. (11 de Septiembre de 2007). Cliente-servidor. Recuperado el 15 de Agosto de 2015. Tomado de http://robiniclienteservidor.weebly.com/ventajas---desventajas.html Sánchez, C. (1 de Septiembre de 2004). ONess: un proyecto open source para el negocio textil mayorista desarrollado con tecnologías open source innovadoras. Recuperado el 20 de Agosto de 2015. Tomado de http://oness.sourceforge.net/proyecto/html/index.html Sevilla, U. d. (1 de Enero de 2009). Introducción a las Aplicaciones Web. Recuperado el 1 de Agosto de 2015. Tomado de http://www.lsi.us.es/docencia/get.php?id=3887 107 Silberschatz. (2002). Fundamentos de Base de Datos. España: McGrawHill (Cuarta Edicion). Torre, A. d. (1 de Enero de 2006). Recuperado el 15 de Julio de 2015. . Tomado de Adelat: http://www.adelat.org/media/docum/nuke_publico/lenguajes_del_lado_servidor_o_cliente. html. Tovar, F & Castillo, I. (2015). Sistema Web para la gestión de las actividades académicas de Extensión. (Tesis de Pregrado). Universidad Central de Venezuela. Caracas, Venezuela Uneweb. (1 de Enero de 2003). PostgreSQL: SMBD. Recuperado el 10 de Octubre de 2015. Tomado de http://uneweb.edu.ve/postgre-sql-nivel-1/ Vega, J. (2004). HTML5: Presente en el Desarrollo Web. Recuperado el 10 de Octubre de 2015 VIT. (1 de Enero de 2015). Tienda VIT. Obtenido de http://tienda.vit.gob.ve/cita/login W3. (10 de Enero de 2005). W3. Recuperado el 13 de Agosto de 2015. Tomado de http://www.w3.org/standards/webdesign/htmlcss W3techs. (1 de Agosto de 2015). Recuperado el 1 de Septiembre de 2015. Tomado de http://w3techs.com/ 108 Anexos 109 Anexo A Glosario de Términos Diplomado: estudios no conducentes a la obtención de títulos ni de grados académicos, curricularmente dinámicos y flexibles, de profundización y actualización del conocimiento en diferentes áreas de extensión, que satisface necesidades específicas del contexto social, nacional e internacional. Cursos cortos: es un tipo de educación formal realizados de manera temporal por interés personal dentro del área de las actividades de extensión, pero no para obtener determinada titulación, sino más bien para recibir una experiencia enriquecedora dentro del área seleccionada. Taller: actividades de trabajo en la que se integran la teoría y la práctica, caracterizadas por la investigación, el aprendizaje por descubrimiento y el trabajo en equipo que, en su aspecto externo, se distingue por el acopio (en forma sistematizada) de material especializado acorde con el tema tratado. Educación a distancia: modalidad educativa en la cual los participantes no requieren asistir físicamente al lugar de estudios. En este sistema de enseñanza, el alumno recibe el material de estudio personalmente por correo postal, correo electrónico u otras posibilidades que ofrece Internet), y devuelve, por el mismo mecanismo los ejercicios o trabajos resueltos. Educación presencial: modalidad educativa donde el alumno y el profesor comparten un espacio físico común, y el contexto del aprendizaje se da allí. Educación Mixta: modalidad educativa que se maneja la educación presencial y a distancia simultáneamente fortaleciendo la formación profesional y académica del participante. http://es.wikipedia.org/wiki/Correo_postal http://es.wikipedia.org/wiki/Correo_electr%C3%B3nico http://es.wikipedia.org/wiki/Internet 110 Anexo B Casos de Uso y Descripciones. Caso de Uso Nivel 1 Tabla 5.Descripción de CU Iniciar Sesión. 111 Descripción Caso de uso: CU. 1. Iniciar Sesión. Actor: todos los actores. Precondición: el usuario debe existir en el sistema. Acción: funcionalidad que permite al usuario acceder a la aplicación, mediante su cédula y una contraseña. Condición de Éxito: se enviará al usuario a la página de inicio del sistema. Tabla 6. Descripción de CU Recuperar Contraseña. Descripción Caso de uso: CU. 2. Recuperar Contraseña Actor: todos los actores. Precondición: el usuario debe existir en la aplicación. Acción: funcionalidad que permite al usuario obtener una nueva contraseña para ingresar al sistema en caso de que haya sido olvidada. Condición de Éxito: se enviará al usuario un correo electrónico donde encontrara un link que lo llevara a la página de cambio de contraseña. Si el cambio es exitoso el usuario será logueado en el sistema. 112 Caso de Uso Nivel 1 - Actor Participante Tabla 7. Descripción de CU Editar perfil. Descripción Caso de uso: CU. 3. Editar perfil. Actor: todos los actores. Precondición: el usuario debe estar logueado en el sistema. Acción: funcionalidad que permite al usuario cambiar sus datos personales. Condición de Éxito: se redirecciona a la página de inicio mostrando un mensaje al usuario indicando que el cambio de datos se ha realizado con éxito. 113 Tabla 8.Descripción de CU Editar foto. Descripción Caso de uso: CU. 3. Editar Foto. Actor: todos los actores. Precondición: el usuario debe estar logueado en el sistema. Acción: funcionalidad que permite al usuario cambiar sus datos personales. Condición de Éxito: se redirecciona a la página de inicio mostrando un mensaje al usuario indicando que el cambio de foto se ha realizado con éxito y se observa la nueva foto de perfil. Tabla 9. Descripción de CU Cambiar Correo. Descripción Caso de uso: CU. 5. Cambiar Correo. Actor: todos los actores. Precondición: el usuario debe estar logueado en el sistema. Acción: funcionalidad que permite al usuario cambiar el correo asociado a su cuenta. Condición de Éxito: se muestra un mensaje indicando al usuario que el cambio de correo se ha realizado de manera correcta. 114 Tabla 10. Descripción de CU Cambiar Contraseña. Descripción Caso de uso: CU. 6. Cambiar Contraseña. Actor: todos los actores. Precondición: el usuario debe estar logueado en el sistema. Acción: funcionalidad que permite al usuario cambiar la contraseña de su cuenta. Condición de Éxito: se muestra un mensaje indicando al usuario que el cambio de contraseña se ha realizado de manera correcta. Tabla 11.Descripción de CU Preinscribir Actividad. Descripción Caso de uso: CU. 7. Preinscribir Actividad. Actor: Participante. Precondición: el usuario debe estar logueado en el sistema. Acción: funcionalidad que permite al usuario realizar la preinscripción de una actividad. Condición de Éxito: se redirecciona al usuario a la página de inicio mostrando un mensaje indicando al usuario que la preinscripción se ha realizado de manera correcta y se envía una notificación por correo electrónico. 115 Tabla 12.Descripción de CU Inscribir Actividad. Descripción Caso de uso: CU. 8. Inscribir Actividad. Actor: Participante. Precondición: el usuario debe estar logueado en el sistema. Acción: funcionalidad que permite al usuario realizar la inscripción de una actividad. Condición de Éxito: se redirecciona al usuario a la página de inicio mostrando un mensaje indicando al usuario que la inscripción se ha realizado de manera correcta y se envía una notificación por correo electrónico. Tabla 13. Descripción de CU Abonar Pago. Descripción Caso de uso: CU. 9. Abonar Pago. Actor: Participante. Precondición: el usuario debe estar logueado en el sistema. Acción: funcionalidad que permite al usuario subir el comprobante de pago asociado a una cuota de pago de una actividad. Condición de Éxito: se redirecciona al usuario a la página de inicio mostrando un mensaje indicando al usuario que el comprobante fue enviado con éxito 116 Tabla 14.Descripción de CU Ver Certificados. Descripción Caso de uso: CU. 10. Ver certificados. Actor: Participante. Precondición: el usuario debe estar logueado en el sistema. Acción: funcionalidad que permite al usuario ver el certificado de las actividades que haya aprobado. . Condición de Éxito: se mostrara al usuario un pdf con el certificado de aprobación del curso. Tabla 15. Descripción de CU Generar Historial. Descripción Caso de uso: CU. 11. Generar Historial. Actor: Participante. Precondición: el usuario debe estar logueado en el sistema. Acción: funcionalidad que permite al usuario generar un pdf con el historial de todas las actividades que haya cursado. Condición de Éxito: se mostrará al usuario un pdf con el listado de todas las actividades realizadas. 117 Caso de Uso Nivel 1 - Actor Profesor Tabla 16. Descripción de CU Calificar Participante. Descripción Caso de uso: CU. 11. Calificar participante. Actor: Profesor. Precondición: el usuario debe estar logueado en el sistema. 118 Acción: funcionalidad que permite al profesor calificar al participante en una actividad de forma cualitativa o cuantitativa. Condición de Éxito: se muestra un mensaje al profesor indicando que las notas han sido enviadas con éxito. Tabla 17. Descripción de CU Validar Preinscripción. Descripción Caso de uso: CU. 12. Validar Preinscripción. Actor: Profesor. Precondición: el usuario debe estar logueado en el sistema. Acción: funcionalidad que permite al profesor ver los requisitos ingresados por el participante y posteriormente validar o rechazar su preinscripción. Condición de Éxito: se muestra un mensaje al profesor indicando que el participante ha sido validado con éxito y se envía un correo electrónico al participante indicando que su inscripción ha sido validada o rechazada. Tabla 18. Descripción de CU Generar Historial (profesor). Descripción Caso de uso: CU. 13. Generar Historial. Actor: Profesor. 119 Precondición: el usuario debe estar logueado en el sistema. Acción: funcionalidad que permite al profesor generar un archivo pdf con todas las actividades que ha dictado. Condición de Éxito: se muestra un archivo pdf con él historial de actividades y las fechas en las que estas fueron dictadas. Caso de Uso Nivel 1 - Actor Coordinación de Extensión / Administrador 120 Tabla 19. Descripción de CU Abrir Curso. Descripción Caso de uso: CU. 14. Abrir Curso. Actor: Coordinación de Extensión/ Administrador. Precondición: el usuario debe estar logueado en el sistema. Acción: funcionalidad que permite al usuario realizar la apertura de una actividad, colocando las fechas de preinscripción, inscripción, inicio y fin de la actividad, y el número de cuotas en las que puede ser pagada la actividad por un participante. Condición de Éxito: se muestra un mensaje indicando que la apertura del curso se ha realizado de manera correcta. Tabla 20. Descripción de CU Generar Reportes. Descripción Caso de uso: CU. 15. Generar Reportes. Actor: Coordinación de Extensión/ Administrador - FUNDACIENS-UCV. Precondición: el usuario debe estar logueado en el sistema. Acción: funcionalidad que permite al usuario generar un reporte de las actividades que se han llevado a cabo en una fecha determinada. Condición de Éxito: se muestra un pdf con las actividades realizadas en las fechas indicadas. 121 Tabla 21. Descripción de CU Gestionar Actividades. Descripción Caso de uso: CU. 16. Gestionar Actividades. Actor: Coordinación de Extensión/ Administrador. Precondición: el usuario debe estar logueado en el sistema. Acción: funcionalidad que permite al usuario ver y modificar contenido de las actividades aprobadas, así como activar o desactivar el curso para que este visible su información dentro de la aplicación Condición de Éxito: se muestra un pdf con las actividades realizadas en las fechas indicadas. Tabla 22. Descripción de CU Gestionar Usuarios. Descripción Caso de uso: CU. 17. Gestionar Usuarios. Actor: Coordinación de Extensión/ Administrador. Precondición: el usuario debe estar logueado en el sistema. Acción: funcionalidad que permite ver el listado de usuarios registrados en el sistema, así como agregar y eliminar los mismos. Condición de Éxito: se muestra un mensaje indicando que el usuario ha sido agregado o eliminado de manera correcta. 122 Caso de Uso Nivel 1 - Actor FUNDACIENS-UCV 123 Tabla 23. Descripción de CU Validar Inscripción. Descripción Caso de uso: CU. 18. Validar Inscripción. Actor: FUNDACIENS-UCV. Precondición: el usuario debe estar logueado en el sistema. Acción: funcionalidad que permite ver el listado de participantes inscritos en una actividad para verificar los comprobantes de pago y validar su inscripción. Condición de Éxito: se muestra un mensaje indicando que el comprobante de pago ha sido validado con éxito y se envía una notificación por correo electrónico al participante indicando que su inscripción ha sido aceptada. Tabla 24. Descripción de CU Validar Pagos. Descripción Caso de uso: CU. 19. Validar Pagos. Actor: FUNDACIENS-UCV. Precondición: el usuario debe estar logueado en el sistema. Acción: funcionalidad que permite ver el listado de participantes inscritos en una actividad para verificar los comprobantes de pago en caso de que la actividad permita el pago por cuotas. Condición de Éxito: se muestra un mensaje indicando que el comprobante de pago ha sido validado o rechazado de manera correcta. 124 Anexo C Manual Técnico SisGAE El presente manual tiene el propósito de informar los pasos a seguir para instalar el sistema SISGAE en un servidor Linux para su futuro mantenimiento. 1. Instalar SMBD PostgreSQL El primer paso debe ser instalar la versión de PostgreSQL 9.3. Lo cual se puede realizar mediante consola aplicando el siguiente comando: Luego se debe crear una Base de Datos con el nombre SISGAE, este nombre puede ser modificado por el nombre de su preferencia, pero al hacerlo es necesario realizar una modificación en el archivo de configuraciones globales .env. Una vez instalado PostgreSQL se debe restaurar el SISGAE.backup que se encuentra en la raíz del proyecto. 2. Instalar Apache, PHP y Laravel 5.1 Para la correcta instalación de Laravel 5.1 se requiere tener:  PHP >= 5.5.9  OpenSSL PHP Extension  PDO PHP Extension  Mbstring PHP Extension  Tokenizer PHP Extension Para la instalación de Apache se ejecuta el siguiente comando: 125 Una vez instalado apache, es necesario tener activo el módulo mod_rewrite, ya que es el que permite crear direcciones URL alternativas a las dinámicas generadas por la programación del Sistema Web SISGAE, de tal modo que sean más legibles y fáciles de recordar. Para habilitar dicho módulo se deben seguir los pasos a continuación: 1. Ejecutar el comando: 2. Reiniciar el servidor apache 3. Editar el VirtualHost por defecto: 4. En el archivo del paso anterior buscar la línea “DocumentRoot /var/www/html” y agregar justo debajo el siguiente fragmento de código. 5. Reiniciar nuevamente el servidor apache utilizando el comando del paso 2. 126 6. Para verificar si el módulo mod_rewrite fue instalado correctamente se debe acceder al archivo phpinfo(). 3. Instalar Composer Laravel utiliza Composer para manejar sus dependencias. Para utilizarlo se deben realizar los siguientes pasos: a. Instalar Curl b. Instalar Composer de manera global. Esto hará que se descargue en la carpeta home el archivo composer.phar el cual tendría que ser llamado cada vez que queramos hacer uso de él, para instalarlo de manera global para que Composer pueda ser llamado desde cualquier lugar sin 127 importar la carpeta en la que nos encontremos, es necesario copiar el archivo composer.phar a la carpeta /usr/local/bin y con el siguiente comando: c. Para verificar la instalación se puede teclear “composer” desde la terminal y se observará una ventana similar a la siguiente: 4. Instalar el proyecto Laravel Para instalar SISGAE se debe copiar el directorio “SISGAE” en la ruta “/var/www/html” y dar permisos de escritura a las carpetas siguientes carpetas: a. storage (navegar al directorio raíz de SISGAE para ejecutar el comando) b. comprobantes, perfiles y requisitos (navegar al directorio public para ejcutar el comando) 128 Por último para verificar si el proyecto fue instalado de forma correcta se debe abrir el navegador e ingresar la siguiente url: http://sisgae.desarrollo.ciens.ucv.ve/sisgae/public/ y se observara la página de inicio de SiSGAE. 129 Anexo D Cuestionario de Usabilidad El presente cuestionario tiene como finalidad conocer su opinión con respecto a la usabilidad del “Sistema para la Gestion Académica-Administrativa de las Actividades de Extensión” SisGAE teniendo en cuenta la efectividad, eficiencia y satisfacción con la que el sistema puede ser comprendido, utilizado y atractivo para el usuario. La puntuación tiene la siguiente escala: Totalmente de acuerdo De acuerdo Ni de acuerdo ni en desacuerdo En desacuerdo Totalmente en desacuerdo 5 4 3 2 1 Nº Item 5 4 3 2 1 1 Los títulos, menús y textos del a aplicación son legibles 2 Los colores utilizados contribuyen a la percepción adecuada a la aplicación. 3 Los descriptores del sistema son claros y precisos 4 Se ofrece una organización que facilita la navegación 5 El diseño del sistema favorece su uso 6 El sistema se puede ejecutar de manera intuitiva 7 Es un sistema fácil de utilizar 8 Los elementos de ayuda disponibles en el sistema son útiles Encuesta basada en: Martínez, A. F. (01 de Diciembre de 2009). WUEP: Un Proceso de Evaluación de Usabilidad Web Integrado en el Desarrollo de Software Dirigido por Modelos. 130 Anexo E MANUAL DE USUARIO SisGAE Para registrarse en SisGAE debe realizar los siguientes pasos: 1. Click en el menú actividades: 2. Selecciona una de las actividades (Curso, taller o diplomado) del panel lateral 3. Si la actividad está disponible para preinscripción, al final de la información de la actividad estará el botón “Preinscribir”. Haga click en dicho botón. 131 4. Al hacer click en el botón preinscribir el sistema le pedirá que ingrese su cédula de identidad. Ingrese su cédula y pulse el botón aceptar. 5. Cuando el sistema verifique su cédula se desplegará un formulario donde deberá ingresar sus datos personales, clave de acceso y los requisitos exigidos por la actividad a preinscribir. Una vez ingresados los datos pulse el botón registrar. 6. Verifique la bandeja de entrada del correo ingresado en el paso anterior para confirmar que su registro fue realizado con éxito. 132 7. Al ingresar a SisGAE utilizando su cédula de identidad y su contraseña y observará la pantalla de inicio donde podrá visualizar un diagrama con la explicación de los pasos a realizar para participar en una actividad. 8. En el menú lateral encontrará las siguientes opciones: a. Inicio. b. Actividades. c. Mis Actividades en curso. d. Mis certificados. e. Cambiar Contraseña. 9. En el menú “Actividades” podrá observar una tabla con el listado de actividades que ofrece la Coordinación de Extensión y el botón preinscribir si alguna de estas actividades está disponible para la fecha actual. 133 10. En el menú “Mis Actividades en curso” encontrará una tabla que muestra el listado de actividades que posee activas para la fecha actual con su respectivo estatus. 11. En el menú “Mis certificados” podrá visualizar el historial de actividades que ha cursado incluyendo su estatus, fecha de inicio, fecha de culminación y un enlace para ver el certificado digital en caso de que esté disponible para la actividad. También tendrá la posibilidad de exportar este historial a formato PDF. 134 12. Para finalizar en el menú “Cambiar Contraseña” se desplegara un formulario donde deberá ingresar su contraseña actual, nueva contraseña y confirmación para realizar el cambio de la misma.