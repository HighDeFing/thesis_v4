UNIVERSIDAD CENTRAL DE VENEZUELA FACULTAD DE CIENCIAS ESCUELA DE COMPUTACIÓN Prototipo del Sistema de Gestión de Preparadores de la Escuela de Computación, módulos Gestión de Concursos y Nombramientos. Trabajo Especial de Grado Presentado ante la Ilustre Universidad Central de Venezuela Por los Bachilleres: Gouveia Correia, Rosa Magdalena Ruíz Bernal, Isaura Leinar Para optar al Título de: Licenciado en Computación. T|utores: Prof. Marcel Castro Prof. Robinson Rivas Caracas, 2 de noviembre de 2009 Universidad Central de Venezuela Facultad de Ciencias Escuela de Computación ACTA DEL VEREDICTO Quienes suscriben, miembros del Jurado designado por el Consejo de la Escuela de Computación, para dictaminar sobre el Trabajo Especial de Grado titulado: “Prototipo del Sistema de Gestión de Preparadores de la Escuela de Computación, módulos Gestión de Concursos y Nombramientos” y presentado por las Bachilleres Isaura Leinar Ruíz Bernal, C.I. V- 16.086.910, y Rosa Magdalena Gouveia Correia , C.I. V- 17.962.385, para optar al título de Licenciado en Computación, dejan constancia de lo estipulado a continuación: Leído como fue, dicho trabajo por cada uno de los miembros del Jurado, se fijó el día 02 de Noviembre de 2009 a las 12:00 mediodía, para que sus autores lo defendieran en forma pública, lo que hicieron en el Centro de Computación de la Facultad de Ciencias, mediante una presentación oral del contenido del Trabajo Especial de Grado, luego de lo cual respondieron a las preguntas formuladas. Finalizada la defensa pública del Trabajo Especial de Grado, el Jurado decidió APROBARLO con la nota de: _________. En fé de lo cual se levanta la presente Acta, en la Ciudad Universitaria de Caracas a los dos días del mes de noviembre del año dos mil nueve, dejando también constancia de la que actuó como coordinador del jurado el profesor tutor Marcel Castro. Firmas del Tutor y Jurados examinadores: Prof. Marcel Castro Tutor Prof. Robinson Rivas Tutor Prof. Omaira Rodríguez Jurado Principal Prof. Norelva Niño Jurado principal DEDICATORIA A Dios porque es quien nos da el don de vivir, y por esta razón hoy pude lograr alcanzar esta meta tan anhelada y soñada. A mis padres por brindarme todo el apoyo, la comprensión, por ser mi fuerza, mis guías, mi todo, mami, papi ¡los Amo! Este triunfo se lo dedico a mi tío Jóvito Romero Bernal. Que mejor ejemplo de dedicación, constancia y esmero que usted, quien ha sabido enfrentarse a la vida superando todas las dificultades por las que le ha tocado pasar, “el que persevera vence” y es así. Isaura Ruíz Dedico este proyecto a mis padres, quienes me han apoyado durante toda la carrera a alcanzar esta meta. Rosa Gouveia AGRADECIMIENTOS Dios gracias te doy por permitirme levantarme cada día y brindarme la fuerza y la voluntad para continuar esta meta que un día me planteé, gracias por permitir que las personas que amo y hoy en día están a mi lado, hayan sido testigos de mi constante lucha y perseverancia por lograr y alcanzar mi meta. Gracias por iluminar mi camino y ser mi compañía. Mamá y Papá gracias por ser tan incondicionales, por entenderme, apoyarme, alentarme cuando tantas veces sentí que ya no podía más. Los amo y me siento enormemente agradecida con ustedes por no abandonarme, ni permitirme abandonar la decisión que tomé hace 5 años cuando me propuse comenzar de nuevo. Gracias José, por apoyarme, aunque sea en silencio, supiste entender cuando necesitaba la computadora y llegaba a casa desesperada para hacer algo de la tesis jajaja. Simplemente gracias, hermanito. A mi casi hermana Yohanna Talloli, gracias amiga por escuchar todas mis quejas, lamentos, molestias, por ser tan incondicional, por brindarme aliento cuando más lo necesité, por hacerme ver que en esta vida todo tiene una razón de ser, y que la mejor forma de salir adelante es asumir una actitud de optimismo, de constancia y perseverancia. Gracias Profesor Marcel Castro, por sus consejos, por el apoyo desmesurado que nos brindó a lo largo de este trabajo, por su interés en orientarnos, por entendernos, por la paciencia que sabemos en algunos momentos tuvo que hacer acto de presencia, sencillamente muchas gracias profesor por esa gran ayuda que nos ofreció a lo largo del desarrollo de este tan especial trabajo de grado. Profesor Robinson Rivas, muchísimas gracias por el apoyo brindado y por su orientación. A mi compañera Rosa Gouveia, gracias magui por entenderme, por la paciencia que me tuviste y por el apoyo. A la Universidad Central de Venezuela, por haberme abierto las puertas y permitido disfrutar de la tan maravillosa etapa como estudiante de la Facultad de Ciencias. A mis compañeros, son muchos no los puedo nombrar a todos, pero debo decir que fueron gratos los momentos vividos y el aprendizaje obtenido de las experiencias que como estudiantes tuvimos que enfrentar. Gracias Bere, Alba, mi primonchis Adriana, por estar allí, aunque sea en la distancia pero apoyándome con sus palabras de aliento, gracias por creer en mí. Isaura Ruíz Quiero agradecer a todas las personas, que han confiado en mí y aquellos que han colaborado para la realización de este TEG. A mis tutores Marcel Castro y Robinson Rivas. A mis compañeras de tesis Isaura, Isabelle e Iris. A mis mejores amigos, que siempre estuvieron a mi lado en las buenas y malas. A mi familia, por todo el apoyo incondicional que me han brindado. Y a mí querida UCV. ¡GRACIAS! Rosa Gouveia RESUMEN El propósito de este trabajo especial de grado se orientó en la elaboración de un prototipo del sistema de gestión de preparadores de la Escuela de Computación, enfocado específicamente en el desarrollo de los módulos de gestión de concursos y nombramientos, tomando como base el modelo Workflow propuesto para estos procesos. Para llevar a cabo la implementación de este sistema se uso OpenUp como metodología de desarrollo de software y la herramienta de Ruby on Rails como plataforma de construcción. El resultado obtenido fue la creación de un prototipo encargado de controlar la gestión de los preparadores, específicamente en lo concerniente a los módulos gestión de concurso y gestión de nombramiento. Este prototipo depende de la interacción con la base de datos a través de servicios Web. Dado que el desarrollo de la base de datos del sistema corresponde a un trabajo a futuro, el prototipo fue dotado de una solución preliminar, a través de archivos XML que simulan la capa de datos, con la cual se muestran los resultados a través de la aplicación, mientras se alcanza en otra etapa la implantación del acceso a los datos mediante los servicios Web. Palabras claves: Gestión de preparadores, Gestión por procesos, Workflow, servicios Web, OpenUp, Ruby on Rails. i INDICE GENERAL INTRODUCCIÓN ............................................................................................................... 1 CAPÍTULO 1. MARCO TEÓRICO ..................................................................................... 3 1.1. Gestión por procesos ....................................................................................................................... 3 1.2. Workflow ......................................................................................................................................... 5 1.3. Metodología de desarrollo de software OpenUP ............................................................................ 6 1.4. Herramientas de desarrollo ........................................................................................................... 12 1.5. Servicios Web ................................................................................................................................ 15 CAPÍTULO 2. MARCO APLICATIVO .............................................................................. 20 2.1. Desarrollo de la solución aplicando la metodología OpenUp. ........................................................ 22 2.1.1. Fase de Inicio ............................................................................................................................... 22 2.1.2. Fase de Elaboración .................................................................................................................... 36 2.1.3. Fase de Construcción .................................................................................................................. 40 2.1.4. Fase de Transición ....................................................................................................................... 70 CONCLUSIONES..........................................................................................................................71 RECOMENDACIONES…...….………………………………………………………………………….73 REFERENCIAS ............................................................................................................... 74 ANEXOS……………………………..……………………………………………………………………..76 ii INDICE DE FIGURAS Figura 1. El ciclo de Deming. ............................................................................................. 4 Figura 2. El ciclo de vida de OpenUP/Basic. ...................................................................... 7 Figura 3. Roles dentro de la metodología OpenUp. ............................................................ 9 Figura 4. Tareas y artefactos a cargo del rol Analista. ........................................................ 9 Figura 5. Tareas y artefactos a cargo del rol Arquitecto. .................................................. 10 Figura 6. Tareas y artefactos a cargo del rol Desarrollador. ............................................. 10 Figura 7. Tareas y artefactos a cargo del rol Director del Proyecto. ................................. 11 Figura 8. Tareas y artefactos a cargo del rol Probador o Tester . ..................................... 11 Figura 9. Arquitectura Básica de Ruby on Rails . ............................................................. 13 Figura 10. Estructura de una Aplicación Web en Rails ..................................................... 14 Figura 11. Servicio Web . ................................................................................................. 16 Figura 12. Petición y respuesta de un servicio Web.. ....................................................... 16 Figura 13. Los servicios Web en Funcionamiento. ........................................................... 17 Figura 14. Interfaz de Servicios Web otros sistemas. ....................................................... 17 Figura 15. Estructura de un mensaje SOAP .................................................................... 18 Figura 16. Pila de protocolo de Servicios Web.. ............................................................... 19 Figura 17. Flujo de trabajo de los procesos concurso y nombramiento, parte I ................ 27 Figura 18. Flujo de trabajo de los procesos concurso y nombramiento, parte II. .............. 28 Figura 19 Flujo de trabajo de los procesos concurso y nombramiento, parte III. .............. 29 Figura 20.Flujo de trabajo de los procesos concurso y nombramiento, parte IV. .............. 30 Figura 21. Modelo Conceptual del Sistema de Gestión de Preparadores de la Escuela de Computación. ................................................................................................................... 35 Figura 22. Ubicación de las clases dentro del directorio App en RoR............................... 37 Figura 23 . Arquitectura Sistema de Gestión de Preparadores. ........................................ 40 Figura 24. Pantalla Inicial del Sistema .............................................................................. 45 Figura 25. Pantalla de Bienvenida. ................................................................................... 46 Figura 26. Notificar Apertura de Concurso. ...................................................................... 47 Figura 27. Abrir Concurso. ............................................................................................... 48 Figura 28. Modificar Concurso e Imprimir Anuncio. .......................................................... 49 Figura 29. Consultar Aspirantes inscritos en un Concurso. .............................................. 49 Figura 30. Cargar Notas. .................................................................................................. 50 Figura 31. Seleccionar Ganador(es) del Concurso. .......................................................... 51 Figura 32. Consultar Ganadores del Concurso. ............................................................... 52 iii Figura 33. Generar Aval y añadir observación. ............................................................... 52 Figura 34. Generar Aval y colocar observación. ............................................................... 53 Figura 35. Consultar estatus de los Oficios. ..................................................................... 54 Figura 36. Consultar Concursos Abiertos. ........................................................................ 55 Figura 37. Completar Planilla Concurso. .......................................................................... 55 Figura 38. Consultar Concursos Inscritos y Resultados. .................................................. 56 Figura 39. Consultar Resultados del Concurso. ............................................................... 57 Figura 40. Filtro de búsquedas. ........................................................................................ 58 Figura 41. Consultar Solicitudes. ...................................................................................... 59 Figura 42. Completar datos oficio concurso. ................................................................... 60 Figura 43. Fecha Ingreso del Preparador. ........................................................................ 60 Figura 44. Observaciones del trámite seleccionado. ........................................................ 61 Figura 45. Consultar Oficios por Archivar. ........................................................................ 62 Figura 46. Consultar Solicitudes. ...................................................................................... 63 Figura 47. Notificar Resoluciones a Presupuesto. ............................................................ 63 Figura 48. Filtro para realizar la búsqueda según el tipo de partida presupuestaria que se desee consultar. ............................................................................................................... 64 Figura 49. Consultar Partidas Presupuestarias. ............................................................... 64 Figura 50. Lista de oficios listos a ser discutidos en Consejo de Escuela. ........................ 65 Figura 51. Completar Oficio con Resoluciones. ................................................................ 66 Figura 52. Completar Datos del Oficio. ............................................................................. 67 Figura 53. Actualizar firma Director(a). ............................................................................. 68 iv INDICE DE TABLAS Tabla 1. Descripción de los actores (stakeholders), parte I. ............................................. 23 Tabla 2 Descripción de los actores (stakeholders), parte II. ............................................. 24 Tabla 3 Descripción de los actores o (stakeholders), parte III. ......................................... 25 Tabla 4. Descripción de los símbolos del Workflow, parte I. ............................................. 25 Tabla 5. Descripción de los símbolos del Workflow, parte II. ............................................ 26 Tabla 6. Especificación del proceso concurso, parte I. ..................................................... 31 Tabla 7. Especificación del proceso concurso, parte II. .................................................... 32 Tabla 8. Especificación del proceso nombramiento, parte I. ............................................. 33 Tabla 9. Especificación del proceso nombramiento, parte II. ............................................ 34 Tabla 10. Características y Necesidades, parte I. ............................................................ 35 Tabla 11. Característica y Necesidades, parte II. ............................................................. 36 Tabla 12. Descripción de los servicios Web diseñados para el SGP-EC asociados a los módulos concurso y nombramiento, parte I. ..................................................................... 41 Tabla 13. Descripción de los servicios Web diseñados para el SGP-EC asociados a los módulos concurso y nombramiento, parte II. .................................................................... 42 Tabla 14. Modelos definidos para el manejo de los datos de los módulos concursos y nombramiento, parte I. ..................................................................................................... 43 Tabla 15. Modelos definidos para el manejo de los datos de los módulos concursos y nombramiento, parte II. .................................................................................................... 44 v INDICE DE ANEXOS Anexo 1 Plantilla Visión, parte I. ....................................................................................... 77 Anexo 2. Plantilla Visión continuación, parte II. ................................................................ 78 Anexo 3. Plantilla Visión, parte III. .................................................................................... 79 Anexo 4. Planificación del Proyecto, parte I. .................................................................... 80 Anexo 5. Planificación del Proyecto, parte II. ................................................................... 81 Anexo 6. Lista de Trabajos del Proyecto. ......................................................................... 81 Anexo 7. Descripción de los servicios Web diseñados para el SGP-EC asociados a los módulos concurso y nombramiento, parte I. ..................................................................... 82 Anexo 8. Descripción de los servicios Web diseñados para el SGP-EC asociados a los módulos concurso y nombramiento, parte I. ..................................................................... 83 Anexo 9. Descripción de los servicios Web diseñados para el SGP-EC asociados a los módulos concurso y nombramiento, parte II. .................................................................... 84 Anexo 10. Descripción de los servicios Web diseñados para el SGP-EC asociados a los módulos Retiro y Administrativo, parte III. ........................................................................ 84 Anexo 11. Consultar Ganadores de los Concursos. ......................................................... 85 Anexo 12. Consultar Programación Docente. ................................................................... 85 Anexo 13. Anuncio del Concurso. .................................................................................... 86 Anexo 14. Detalle Planilla Concurso. ............................................................................... 87 Anexo 15. Acta de Preparadores. .................................................................................... 88 Anexo 16. Aval o Solicitud de Excepción. ........................................................................ 89 Anexo 17. Detalle del Oficio. ............................................................................................ 90 Anexo 18. Concursos Anteriores. ..................................................................................... 90 Anexo 19. Oficio Nombramiento. ...................................................................................... 91 Anexo 20. Consultar histórico del estudiante. ................................................................... 92 Anexo 21. Generar constancia preparadores. .................................................................. 92 Anexo 22. Constancia de Preparadores. .......................................................................... 93 Anexo 23. Consultar Oficios Enviados a Presupuesto. ..................................................... 94 Anexo 24. Minuta Complementaria. ................................................................................. 95 1 INTRODUCCIÓN Un preparador se puede definir como un estudiante, que cumpliendo con los requisitos establecidos por la Universidad, colabora bajo la dirección del profesor de una asignatura en las labores de docencia e investigación. Los profesores en la Escuela de Computación, de la Universidad Central de Venezuela, cuentan con este personal de apoyo (los preparadores) para ayudar a los estudiantes a consolidar los conocimientos teóricos impartidos en las aulas de clase, a través de actividades prácticas. Con el fin de garantizar que un estudiante es el indicado para desempeñar el cargo de preparador, éste debe cumplir con una serie de requisitos que son fundamentales en los procesos involucrados en la gestión de preparadores, que comprenden la selección, nombramiento, desempeño del cargo y retiro del preparador. La gestión de preparadores es importante para la Facultad de Ciencias, por ello es pertinente la aplicación eficiente y eficaz de dicha gestión. En la actualidad, la ejecución de esta gestión se realiza de forma manual lo que pudiera ocasionar, en algunos casos, pérdida de los documentos que se generan durante el desarrollo de cada una de sus actividades. Por otra parte, el acceso a la información tanto histórica como actual pudiera no ser expedito, al momento de ser solicitada por algunas de las partes involucradas (preparadores, personal docente y administrativo). Tomando en cuenta lo mencionado, y el hecho de que la Escuela de Computación cuenta con una infraestructura tecnológica capaz de soportar la implantación de un sistema de Información automatizado para la gestión de preparadores, manejado en tiempo real y por los diferentes actores asociados a dicha gestión, se planteó el desarrollo de un prototipo para controlar el flujo de información que se genera durante la ejecución de sus procesos, y así ofrecer la información de manera oportuna al personal docente, administrativo y a los preparadores y/o estudiantes. Se presenta en este trabajo el desarrollo del prototipo del sistema de gestión de preparadores de la Escuela de Computación, enfocado en la automatización de los módulos que permiten la gestión de los concursos y nombramientos de preparadores. Este Trabajo Especial de Grado (TEG) se estructura de la siguiente forma: Capítulo 1. Marco Teórico: Se presentan los conceptos teóricos que ayudaron a comprender el dominio en donde se enmarcó el problema a resolver, considerando la automatización de procesos, comunicación entre aplicaciones y la plataforma empleada para el desarrollo del sistema. Los conceptos abordados fueron: Gestión por Procesos, Workflow, Metodologías y Herramientas para el desarrollo del software. Capítulo 2. Marco Aplicativo: Concentra los aspectos fundamentales para la realización del TEG, abarcando la justificación, el planteamiento del problema, antecedentes, solución propuesta, alcance, objetivo general y objetivos específicos. Adicionalmente, describe el desarrollo de los módulos Concurso y Nombramiento pertenecientes al 2 Sistema de Gestión de Preparadores, tomando en cuenta las fases de la metodología OpenUp. Finalmente, se presentan las conclusiones y recomendaciones para trabajos futuros. 3 CAPÍTULO 1. MARCO TEÓRICO En este capítulo se presentan las bases conceptuales sobre Gestión por Procesos, Workflow, Metodologías y Herramientas para el Desarrollo de Software (OpenUp, Ruby on Rails) y Servicios Web, consideradas para comprender el contexto en el cual se desarrolló el presente TEG. 1.1. Gestión por procesos Para introducir el concepto de gestión por procesos, se debe entender la semántica en el contexto empresarial u organizacional de los vocablos “gestión” y “procesos”. Gestión es sinónimo de administración, dado que ambos términos en su etimología significan acción y efecto de administrar [LD 2004]. Proceso, según indica la norma ISO 9000, es un “Conjunto de actividades mutuamente relacionadas o que interactúan, las cuales transforman elementos de entrada en resultados” [Per 2007]. Las actividades de dicho conjunto se configuran como una secuencia ordenada, repetitiva o cíclica, las cuales generan un producto o resultado cuyo valor es apreciado (estimado) por el cliente o usuario del proceso [Per 2007]. De lo anterior se infiere que la gestión por procesos consiste en la administración integral de los procesos que se ejecutan en toda organización o empresa, lo cual corresponde con las siguientes definiciones: • “La gestión por procesos es un esquema que permite organizar los esfuerzos y la utilización de los recursos, para lograr la satisfacción de los entes vinculados a cada uno de los procesos que definen al sistema organizacional o empresarial“ [Ben 2003]. • “Gestión de una organización basada en la comprensión, el análisis, el seguimiento, la medición y la evaluación del desempeño de los procesos y sus interacciones, para conocer cómo se están realizando las actividades y para determinar dónde están las oportunidades de mejora” [Asocalidad]. Por otra parte, la gestión por procesos en las organizaciones es solo un paso ante la consecución del logro de los objetivos que éstas se plantean. Una organización orientada a procesos, que busca obtener beneficios de su ejercicio, requiere del mantenimiento continuo y control de los procesos de negocio, es decir la administración de éstos implica que su ejecución sea eficiente y efectiva [Mue 2002]. Lo anterior se consigue alineando la gestión de procesos al ciclo de Deming (ver Figura 1), aplicando las fases que lo componen: • Planificar (Plan): los procesos se identifican, se modelan y se optimizan 4 • Ejecutar o realizar (Do): se implantan los procesos y la estructura de la organización se debe amoldar a los mismos • Evaluar (Check): la efectividad de los procesos implantados en la fase anterior, se debe analizar con base en los datos recopilados y los indicadores de gestión generados por la ejecución y los resultados obtenidos. • Actuar (Act) – se establecen lineas de dirección o toma de decisiones al revisar la evaluación de los procesos, considerando los objetivos estratégicos y operativos de la organización. Figura 1. El ciclo de Deming [Mue 2002]. La importancia de la aplicación de la gestión por procesos dentro de una organización, radica en que permite en una forma estructurada, identificar los actores de cada proceso, conocer sus expectativas, definir objetivos e indicadores (de calidad, costo, productividad, entre otras.), coordinando así las diferentes unidades funcionales que intervienen en los procesos. En este sentido [Ben 2003] señala que, “Este esquema de gestión requiere que las partes que lo componen se caractericen por crear relaciones coordinadas, para lograr 5 niveles de eficacia y eficiencia en el sistema, que cumplan con los tres elementos básicos de una gestión de calidad: alcanzar los requerimientos de los clientes finales, en los tiempos establecidos y a los costos presupuestados”. En resumen la gestión por procesos persigue conducir o administrar una organización concentrándose en añadir valor a las entradas y/o salidas de una actividad, con el fin de lograr satisfacer al usuario o cliente final, ya sea interno o externo, buscando generar la calidad necesaria en la gestión empresarial. 1.2. Workflow Los procesos organizacionales insumen, procesan y generan información necesaria para obtener resultados. Cuando los documentos que soportan esta información son manejados dentro de la organización en un lugar distinto al que los produce, se debe tener en cuenta que éstos pueden ser re-utilizados o sufrir transformaciones en su recorrido antes de llegar a su destino final; y esto es lo que se conoce como flujo de trabajo o Workflow. Esta interpretación se basa en [Fer 2005], al citar a Penadés (1999) cuando éste indica que “en un Workflow la información, tareas y documentos pasan de un participante a otro, para que se realicen una serie de acciones de acuerdo con un conjunto de reglas procedimentales”. Para complementar el concepto anterior de Workflow, se presentan las siguientes definiciones: • “Workflow se refiere al flujo de trabajo a seguir para la consecución de una tarea o trabajo predeterminado. Se define como un sistema de secuencia de tareas de un proceso de negocio. Su definición y control puede ser manual, informatizado o mixto. Organiza y controla tareas, recursos y reglas necesarias para completar el proceso de negocio.” [Pixelware] • “Una aplicación de Workflow automatiza la secuencia de acciones, actividades, o tareas utilizadas para la ejecución del proceso, incluyendo el seguimiento del estado de cada una de sus etapas y la aportación de las herramientas necesarias para gestionarlo” [Zor 2007]. • Interpretando lo expuesto en [Kioskea], Workflow se refiere a la gestión de procesos de negocios modelada y automatizada, en función de las tareas que deben llevarse a cabo y los roles involucrados. Las definiciones anteriores hacen diferentes planteamientos que convergen en un mismo punto, y éste consiste en hacer el seguimiento consecutivo a la realización de las tareas, dentro de una organización, mediante el uso de Workflow. Existen varias formas de modelar y automatizar el flujo de trabajo, no obstante el objetivo siempre es el mismo: representar y describir las actividades e identificar a los protagonistas involucrados en el desarrollo de los procesos internos de la organización. 6 Tomando en cuenta lo anterior, la aplicación de un Workflow tiene gran importancia, porque busca la automatización parcial o total de los procesos de negocio [Fer, 2005], al generar información útil y necesaria, asociando individuos y grupos de trabajo con tareas estructuradas y no estructuradas, para manejar de manera efectiva los trabajos que se realizan dentro de una organización, haciendo posible la cooperación entre distintos roles. 1.3. Metodología de desarrollo de software OpenUP Dentro de los objetivos de un proceso de desarrollo de software está el tratar de cumplir las tareas planteadas de la mejor manera, siendo la calidad del producto el factor principal que se desea lograr. El uso de metodologías apropiadas permite controlar el desarrollo en sus diferentes fases, lo que conlleva a minimizar los errores y optimizar el trabajo en cada iteración. La metodología OpenUp surge de la necesidad de coordinar proyectos pequeños con desarrollos ágiles y a la vez documentados; se incorporan técnicas ágiles ofreciendo como resultado un proceso estructurado, robusto, eficiente, liviano y focalizado en la creación de la documentación justa y necesaria. OpenUp es un proceso de desarrollo de software de código abierto, diseñado para pequeños equipos organizados quienes quieren tomar una aproximación ágil del desarrollo. OpenUp es un proceso iterativo que es mínimo, completo, y extensible. [EPF] Prácticas a tomar en la metodología OpenUp está orientado a la realización de reuniones regulares que permiten captar o prevenir posibles riesgos sobre el proyecto y poder así plantear estrategias de mitigación. OpenUp recomienda dividir el proyecto en miniproyectos, iteraciones encajadas en tiempo para demostrar valor incremental y obtener retroalimentación temprana y continua. Muchos elementos necesarios para el desarrollo no se conocen en las fases iníciales, como son las necesidades de los usuarios, los riesgos, comprender las tecnologías del proyecto, o saber cómo trabajar con sus colegas. A medida que se van conociendo estos elementos en su totalidad durante la vida del proyecto se van incorporando, produciendo más iteraciones sobre el mismo. [EPF] Ciclo de vida del desarrollo de software OpenUP se divide en cuatro fases: Inicio, Elaboración, Construcción y Transición, tal como lo ilustra la Figura 2. Cada fase consiste de una o más iteraciones. El ciclo de vida del desarrollo en OpenUp permite evolucionar el producto, durante las diferentes fases en que se elabora el proyecto para obtener retroalimentación continua y mejorada. 7 Figura 2. El ciclo de vida de OpenUP/Basic [EPF]. Fase de Inicio El propósito en esta fase es lograr comprender el dominio del problema a resolver. Hay cuatro objetivos en esta fase que permiten clarificar el alcance, los objetivos del proyecto y la viabilidad de la solución proyectada: • Entender lo que se desea construir determinando la visión, el alcance del sistema y sus límites, y se identifica quién está interesado en el sistema y por qué. • Identificar la funcionalidad clave del sistema, con base en un análisis para conocer cuáles son los requerimientos más críticos. • Determinar al menos una posible solución. Se identifica al menos una arquitectura candidata y su viabilidad. • Entender el costo, el plan y los riesgos asociados al proyecto. Para planear el proyecto se provee un mapa a todo el equipo para que conozca la dirección del proyecto. Éste mapa se adapta a los cambios que pueden surgir en el entorno y a la dinámica e interacción que implica el trabajo en equipo. Se evalúan los riesgos, se determina el tamaño del proyecto y alcance, se definen los objetivos de las iteraciones y se asignan los roles a los miembros del equipo. Antes de culminar esta fase y pasar a la de elaboración, el equipo de desarrollo de software debe responderse de manera afirmativa la siguiente pregunta: ¿Estamos de acuerdo sobre el problema que intentamos resolver? [EPF]. Fase de Elaboración El propósito de esta fase es crear la arquitectura del sistema y sus componentes. Los objetivos de esta fase son: • Obtener un entendimiento detallado de los requerimientos que permitan crear un plan más acorde con la realidad del proyecto. • Diseñar, implementar, validar y establecer la arquitectura. 8 • Mitigar los riesgos esenciales y producir el plan y la estimación de costos. Para poder continuar con la fase de construcción luego de esta fase, el equipo de desarrollo de software debe responderse de manera afirmativa la siguiente pregunta: ¿Estamos de acuerdo en la vista general de la solución y entendemos los riesgos costos y parámetros de planificación razonablemente bien? [EPF]. Fase de Construcción El propósito de esta fase es completar el desarrollo del sistema basado en la arquitectura definida en la fase anterior. Sus objetivos son: • Desarrollar mediante iteraciones un producto completo. Describir los requerimientos que faltan, completar en detalles los diseños, la implementación y la prueba del software. • Minimizar los costos de desarrollo y alcance, optimizando los recursos. Al completar esta fase el equipo de desarrollo de software debe responderse de manera afirmativa la siguiente pregunta: ¿Estamos de acuerdo en que tenemos un sistema que cumple con las necesidades claves de los interesados en el desarrollo del software? [EPF]. Fase de Transición El propósito en esta fase es asegurarse que el software está listo para su pase a producción. Los objetivos de esta fase son los siguientes: • La versión beta del software permite validar que las expectativas del usuario sean satisfechas, lo cual implica realizar refinamiento del código para depurar errores, y mejorar el desempeño del software y su facilidad de uso. • El desarrollo se considera completo luego de realizar varias pruebas con los usuarios, para poder colocar el producto en producción. • Optimizar el desempeño en futuros proyectos a través de lecciones aprendidas al. documentarlas y mejorar el ambiente de los procesos y las herramientas para el proyecto. Para efectuar una transición efectiva, el equipo de desarrollo de software debe responderse de manera afirmativa la siguiente pregunta: ¿Estamos de acuerdo en que podemos entregar el sistema y finalizar el proyecto? [EPF]. 9 Roles dentro de la metodología OpenUp Se establecen diferentes roles para el desarrollo del proyecto, cada uno de ellos tiene bien establecidas sus actividades a ejecutar. Estos son: Analista, Arquitecto, Desarrollador, Director del Proyecto, Parte Interesada o Stakeholder, Probador o Tester, (ver Figura 3) [EPF]. Figura 3. Roles dentro de la metodología OpenUp [EPF]. A continuación se describen los roles mencionados anteriormente, según las definiciones de [EPF]: Analista: Se encarga del levantamiento de información, al interactuar directamente con los clientes y/o usuarios finales involucrados en el proyecto, que permitirá entender el problema a resolver. Su principal responsabilidad consiste en identificar y especificar los requerimientos, capturar y asignar prioridades a los mismos, así como elaborar la visión del proyecto. En la Figura 4 se muestran las tareas y artefactos asociados a este rol. Figura 4. Tareas y artefactos a cargo del rol Analista [EPF]. 10 Arquitecto: Responsable de diseñar la arquitectura del software, lo cual incluye tomar las decisiones técnicas claves que restringen al diseño total y la implementación del proyecto. La Figura 5 ilustra los artefactos y tareas pertinentes a este rol. Figura 5. Tareas y artefactos a cargo del rol Arquitecto [EPF]. Desarrollador: Responsable de desarrollar una parte del sistema, incluyendo su diseño para que se ajuste a la arquitectura. También se encarga de la implementación, realizar las pruebas unitarias e integrar los componentes que son parte de la solución. Las tareas y artefactos relacionados al Desarrollador se pueden observar en la Figura 6. Figura 6. Tareas y artefactos a cargo del rol Desarrollador [EPF]. Director del Proyecto: Lidera la planificación del proyecto, coordina las interacciones con los interesados en el desarrollo del software, y mantiene al equipo de desarrollo enfocado en alcanzar los objetivos del proyecto. Las actividades y los artefactos a cargo del Director del Proyecto se ven reflejados en la Figura 7. 11 Figura 7. Tareas y artefactos a cargo del rol Director del Proyecto [EPF]. Parte interesada o Stakeholder: Representa a grupos de interés cuyas necesidades deben ser satisfechas por el proyecto. Este rol puede ser desempeñado por cualquiera que esté (o potencialmente estará) materialmente afectado por el resultado del proyecto. Probador o Tester: Responsable de las actividades principales del esfuerzo de las pruebas. Estas actividades incluyen identificar, definir, implementar y dirigir las pruebas necesarias, como también verificar los resultados de las pruebas y analizar los resultados. La Figura 8 muestra los artefactos y tareas que debe llevar a cabo quien desempeñe este rol. Figura 8. Tareas y artefactos a cargo del rol Probador o Tester [EPF]. Principales artefactos de la metodología OpenUp La metodología cuenta con una serie de plantillas que sirven como modelos para presentar y especificar a los artefactos necesarios en cada una de las fases. Entre los artefactos más representativos se tiene: • Documento de Visión: Este artefacto provee una visión completa del sistema describiendo los requerimientos en un alto nivel y contemplando las restricciones que pudieran existir. • Plan de Proyecto: Este documento informa los objetivos de las iteraciones y sus hitos e indica cómo será organizado el proyecto y quién desempeñará cada rol. 12 • Lista de elementos de trabajo o Work Item List: Su objetivo principal es registrar las solicitudes de trabajo que potencialmente deberán realizarse en el marco del proyecto, para que el mismo pueda ser priorizado, se estime el esfuerzo y se controle el progreso. • Casos de Uso: Este artefacto captura la secuencia de acciones que el sistema realiza, brindando un resultado observable a los usuarios que interactúan con él. • Plan de Iteración: Su función es informar los objetivos, las asignaciones de trabajo y los criterios de evaluación para la iteración permitiendo así, evaluar el avance del proyecto. • Lista de Riesgos: Contiene un lista de riesgos conocidos con su estado para realizar un seguimiento de los mismos. • Casos de Prueba: Proveen una forma de capturar las entradas, condiciones y resultados esperados del sistema, así como también, identificar sistemáticamente aspectos del software a probar. Otro objetivo de este artefacto es especificar si los resultados esperados fueron alcanzados basados en la verificación de los requerimientos del sistema. 1.4. Herramientas de desarrollo Las herramientas de desarrollo utilizadas en el presente TEG son el lenguaje de programación Ruby y el marco de trabajo (o framework) Ruby on Rails, también conocido como RoR. Ruby es un lenguaje de programación interpretado y orientado a objeto, desarrollado en 1993 por Yukihiro Matsumoto y liberado al público en 1995 bajo una licencia de software libre [Wil 2007]. Se caracteriza por poseer una sintaxis bastante clara que facilita la programación, ya que combina de una forma exitosa “la elegancia conceptual de Smalltalk, la facilidad de uso y de aprendizaje de Python y el pragmatismo de Perl” [Hib 2005]. Aun cuando Ruby es orientado a objeto, posee la versatilidad para desarrollar programas bajo el enfoque procedimental o funcional, lo que le permite ser un metalenguaje con el cual se pueden construir lenguajes de dominio específico [FM 2008], es por ello que han surgido diversos proyectos en ese sentido, siendo RoR el más popular de todos [TH 2006]. RoR es un framework, construido con Ruby, para el desarrollo de aplicaciones Web, cuyo diseño busca facilitar la programación de este tipo de aplicaciones [Rails]. Entre las características más relevantes de este framework se encuentran [TH 2006]: • Arquitectura MVC: La estructura de Rails está basada en el patrón de diseño Modelo-Vista-Controlador o MVC, por lo que las aplicaciones Web elaboradas bajo RoR siguen dicho patrón, obteniendo como beneficio independencia entre la lógica 13 del negocio (Modelo), la interfaz del usuario (Vista) y el control de las acciones internas (Controlador), reduciendo así el acoplamiento entre la capa del modelo del negocio y la de presentación. Esto favorece las labores de depuración y mantenimiento de este tipo de aplicaciones. La Figura 9 ilustra cómo una aplicación Web implementada en RoR atiende una petición. La petición es suministrada a la aplicación, en el servidor Web, mediante el navegador, luego es tomada por el elemento Dispatcher quien se encargará de redireccionar la petición al controlador indicado (interacción Vista-Controlador). Determinada la acción a realizar, el Action Controller (Controlador) envía hacia el Active Record las solicitudes encargadas del procesamiento de datos (interacción Controlador- Modelo), poniéndose en marcha las operaciones de manipulación de datos descritas en la capa Modelo, siendo estas: Creación, Actualización, Eliminación o Búsqueda; operaciones típicas de cualquier sistema interactivo. Luego de realizarse el procesamiento en la Base de Datos, los resultados son enviados nuevamente al Active Record quien los devuelve al Action Controller para que este envíe la respuesta final (interacción Controlador-Vista), ya sea a través de un correo, haciendo uso del Action Mailer, o a través de una vista haciendo uso del Action View. Figura 9. Arquitectura Básica de Ruby on Rails [Dummyonrails a]. 14 • Meta-programación: Al ser un framework elaborado con Ruby, hereda de éste su versatilidad permitiendo aplicar técnicas automáticas de generación de códigos de extensión para la aplicación, sin intervención directa del programador. • Manejo automático entre elementos de tablas y objetos: En el manejo del acceso a Bases de Datos Relacionales (BDR), RoR introduce la tecnología Active Record, la cual se basa en meta-programación para reconocer las columnas de las tablas de una BDR, e incluirlas como atributos en el dominio de objetos de la aplicación. • Convención versus Configuración: Otros frameworks para el desarrollo de aplicaciones Web obligan al programador a construir archivos de configuración para el mantenimiento operativo de la aplicación, lo cual no aplica en Rails ya que provee una notación propia, que sirve de convención, que si es seguida por el desarrollador se pre-establecen los parámetros de configuración de forma transparente. Rails organiza las aplicaciones creando una estructura fija de carpetas (ver Figura 10), con el fin de distribuir las funcionalidades en dos áreas principales [DummyonRails b]: Figura 10. Estructura de una Aplicación Web en Rails [Dummyonrails b] 15 • Directorio Public: Se aloja en esta carpeta todos los elementos públicos de la aplicación. Por defecto, en ella se incluyen imágenes, hojas de estilo CSS, Javascript, etc. También se encuentran en esta carpeta los archivos que representan a los dispatchers, (dispactch.cgi, dispatch.fcgi y dispatch.rb), quienes se encargan de re-direccionar las peticiones de los usuarios desde el navegador hacia la aplicación para que los controllers se encarguen de procesarlas. • Directorio App: Se colocan en esta carpeta los archivos que implementan la codificación de la aplicación siguiendo el patrón MVC, distribuidos en las carpetas que le correspondan de acuerdo al patrón señalado anteriormente (directorios Models, Controllers, Views y Helpers). Adicionalmente a las carpetas mencionadas anteriormente, cabe destacar que en la estructura de directorios de una aplicación Web construida con RoR, también se en encuentra el directorio Config, en el cual se mantienen los archivos de configuración de las bases de datos y del enrutamiento de las peticiones (archivos que re-direccionan las peticiones cargadas al navegador hacia los controladores). En conclusión, Ruby on Rails es un framework que permite de forma sencilla el desarrollo de una aplicación Web, es fácil de comprender y utilizar, no requiere de grandes conocimientos para implementar una aplicación, sólo se requieren nociones básicas sobre la programación orientada a objetos y en la medida en que se va interactuando se irán conociendo las bondades que puede ofrecer Ruby on Rails. Como un buen framework, Rails permite trabajar con un orden en donde se percibe la separación de las capas del patrón MVC. Rails es flexible, ofrece una estructura ordenada que permite repartir las funcionalidades en diferentes áreas dentro de la estructura ofrecida. 1.5. Servicios Web Existen varias definiciones sobre lo que son los servicios Web, entre éstas cabe mencionar la presentada por [Dia]: “Un servicio Web es una aplicación de software identificada mediante una URI, cuyo interfaz (y uso) es capaz de ser definido, descrito y descubierto mediante artefactos XML, y soportar interacciones directas con otras aplicaciones software usando mensajes basados en XML y protocolos basados en Internet”. Según la interpretación dada al concepto expuesto en [STK 2002], un servicio Web permite tener acceso al código de una aplicación usando el estándar de Internet (Ver Figura 11). Si una aplicación puede ser alcanzada a través de una red y usando protocolos como HTTP, XML, SMTP entonces ésta es un servicio Web. 16 Figura 11. Servicio Web [STK 2002]. Siguiendo con la idea que presentan [STK 2002], los servicios Web son sistemas de mensajería que deben ser capaces de enviar y recibir mensajes usando alguna combinación de los protocolos estándares de Internet. La implementación más común de servicios Web, es a través de llamadas a procedimientos que se encuentran disponibles en un servidor. La Figura 12 ilustra el intercambio de los mensajes, el cual se realiza haciendo una petición a un subprograma, que es el servicio Web, con los argumentos necesarios y luego se recibe la respuesta a dicha llamada a través de un mensaje XML. Figura 12. Petición y respuesta de un servicio Web. [Cer 2002]. Es importante recalcar, que este software puede ser alcanzado en Internet por otras aplicaciones. De esta forma, se pueden desarrollar aplicaciones que hagan uso de otras aplicaciones que estén disponibles en Internet interactuando con ellas como se observa en la Figura 13. 17 Figura 13. Los servicios Web en Funcionamiento [W3C]. Tal como señala [Cer 2002], otra característica esencial que define a un servicio Web, es que éste no se encuentra atado a ningún sistema operativo ni lenguaje de programación. En la Figura 14 se observa esta característica. Figura 14. Interfaz de Servicios Web otros sistemas [New 2002]. Estándares para el desarrollo de servicios Web [Dia] expresa que las tecnologías necesarias para el funcionamiento de un servicio Web son: • Formato WSDL (Web Service Description Language). 18 • Protocolo SOAP (Simple Object Access Protocol). • Protocolo de transporte que por lo general es HTTP, que se encarga de transportar los mensajes por Internet. A continuación, se describen algunas de estas tecnologías: SOAP [Dia] plantea la siguiente definición: “SOAP es el acrónimo de Simple Object Access Protocol, es decir, protocolo simple de acceso a objetos. SOAP es un protocolo ligero de mensajes XML que se usa para codificar la información de los mensajes de petición y respuesta de los servicios Web que se envían a través de una red. Los mensajes SOAP son independientes de los sistemas operativos y de los protocolos, y pueden ser transportados usando una variedad de protocolos de Internet, incluyendo SMTP, y HTTP". En la Figura 15 se ve la estructura del protocolo SOAP. XML es básico para la mayoría de los formatos actuales de empaquetamientos de servicios Web, siendo SOAP uno de más utilizados construido en XML. Figura 15. Estructura de un mensaje SOAP [Dia]. WSDL WSDL es el acrónimo de Lenguaje de Descripción de Servicios Web (Web Services Description Language), que es un lenguaje XML usado para describir la interfaz de un servicio Web como un conjunto de métodos capaces de intercambiar mensajes. WSDL se considera parte integral de UDDI (Universal, Description, Discovery and Integration), que es un directorio de servicios Web que permite que se listen, busquen y descubran este tipo de software [Dia]. Por último, para que un servicio Web pueda ser llevado alrededor de la red por la capa de transporte, debe ser "empaquetado" para que las partes involucradas en el intercambio de 19 mensajes puedan entenderlo. Este proceso también es llamado "serialización". La Figura 16 muestra la pila del protocolo de un servicio Web, que está conformada por las tecnologías antes descritas. Figura 16. Pila de protocolo de Servicios Web. [Cer 2002]. 20 CAPÍTULO 2. MARCO APLICATIVO El presente capítulo comprende el planteamiento del problema, antecedentes, solución propuesta, justificación, los objetivos que se persiguen (generales y específicos), así como también, la explicación del desarrollo de la solución aplicando la metodología OpenUp. Planteamiento del Problema En la actualidad la manera como se realizan los procesos administrativos de la gestión de preparadores de la Escuela de Computación no necesariamente satisface las expectativas en cuanto a desempeño y tiempo de respuesta. Todo los procesos de dicha gestión se realizan de forma manual, lo que pudiera ocasionar la pérdida de documentos físicos durante el traslado de una oficina a otra, produciendo demoras innecesarias, y el extenso intercambio de la información podría derivar en errores al generar los documentos de soporte. Por otra parte, la información tanto histórica como actual pudiera no encontrarse disponible de forma expedita, al momento de ser solicitada por algunas de las partes involucradas (preparadores, personal docente y administrativo). Por ahora no existe una forma de evitar que los tiempos de repuesta se minimicen, debido a que como deben realizarse ciertos números de pasos en cada proceso, el tiempo de respuesta se alarga y por ende se retrasa la consecución de los procesos. La solución ante este tipo de problemas se encuentra enmarcada en este capítulo bajo el apartado denominado solución propuesta. Antecedentes Indagando sobre trabajos previos asociados a la gestión de los preparadores en la Facultad de Ciencias, y en especifico en la Escuela de Computación, no se encontraron referencias que den indicios de proyectos de sistemas de información que permitan mejorar los procesos de la gestión de preparadores, por lo que el presente TEG se considera pionero en este ámbito, constituyendo un reto importante que implica un análisis y diseño a profundidad desde el estudio de la situación actual, hasta la elaboración del prototipo y específicamente de los módulos requeridos. Solución Propuesta Dado que la Escuela de Computación cuenta con una infraestructura tecnológica a la cual se le puede sacar suficiente provecho como para implantar un sistema de información automatizado, que permita un manejo eficiente y efectivo de dicha gestión, se consideró oportuno realizar el desarrollo de un prototipo del sistema de gestión de preparadores, que sea capaz de controlar el flujo de información que se genera durante la ejecución de los procesos que conforman a la gestión, así como ofrecer la información de manera oportuna al personal docente (Coordinador), administrativo (Jefe del Departamento, Secretaria del Departamento, Secretaria del Consejo de Escuela y el Asistente 21 Administrativo) y a los preparadores (los Estudiantes). Todos estos usuarios son potenciales del sistema, no obstante los más beneficiados serán el Coordinador, el Jefe del Departamento y el Director, debido a que podrán realizar un mejor y mayor seguimiento sobre cómo se desenvuelve la gestión del concurso y el nombramiento de un preparador. Además, los estudiantes serán beneficiados debido a que los tiempos de respuesta serán más efectivos cuando realicen sus solicitudes como preparadores. El presente trabajo especial de grado corresponde a la implementación del prototipo del Sistema de Gestión de Preparadores de la Escuela de Computación (SGP-EC), en lo concerniente a los módulos de gestión de concursos y nombramientos. Para el debido funcionamiento del prototipo se requiere que otros sistemas sirvan como fuente de datos, siendo estos el sistema CONEST, el servidor de correos institucionales (Tyto), la base de datos socio demográfica y la propia base de datos diseñada para el sistema SGP-EC. Por otra parte el SGP-EC no solo ha de requerir los datos provistos por los otros sistemas mencionados, sino que también deberá suministrar información al sistema de presupuesto de la Facultad de Ciencias. El implantar un sistema de gestión de preparadores para la Escuela de Computación se considera una herramienta de gran utilidad, debido a que este sistema proveerá en tiempo real, de forma efectiva y controlada la información relacionada con los trámites de contratación de preparadores, de este modo se mitigan riesgos de perder información, además de contribuir significativamente en reducir los tiempos de respuesta y ejecución, maximizando la calidad de los procesos en esa gestión. En este proyecto se plantea el análisis y diseño de un sistema de información automatizado que cuenta con los siguientes módulos, entre otros: • Módulo de gestión de concursos. • Módulo de gestión de nombramientos. La frontera del sistema a desarrollar se limita sólo a lo concerniente a la Escuela de Computación, siendo ajeno el desarrollo de otros subsistemas correspondientes a otras áreas, como el Departamento de Recursos Humanos, Departamento de Presupuesto y Control de Estudios. La realización de este proyecto estuvo sujeta al desarrollo de otros proyectos que se llevaron a cabo en paralelo, entre estos se encuentra el sistema que implementa los servicios Web para el acceso a la Base de Datos del SGP-EC, el cual es de suma importancia para el funcionamiento completo del SGP-EC. Dado que los tiempos de culminación entre los sistemas no fueron los mismos, se tuvo que elaborar una solución preliminar para poder mostrar los resultados a través de la aplicación, mientras se logre realizar la comunicación real con los servicios Web. 22 El objetivo general del presente trabajo especial de grado consiste en, desarrollar los módulos de gestión de concursos y nombramientos del sistema de gestión de preparadores de la Escuela de Computación, según el Workflow propuesto para estos procesos. Entre los objetivos específicos se tienen: 1. Hacer una revisión de los requerimientos funcionales, no funcionales y de interfaz del sistema con base en el Workflow de los procesos de gestión de concursos y nombramientos. 2. Definir y especificar los elementos necesarios para la creación de los servicios Web que permitirán el suministro de información de los otros sistemas que deben interactuar con el sistema de gestión de preparadores. 3. Construir los módulos concurso y nombramiento empleando el framenwork Ruby on Rails y la definición de los servicios Web mediante SOAP. 4. Realizar las pruebas de funcionalidad del sistema, llevando a cabo iteraciones con los usuarios. 2.1. Desarrollo de la solución aplicando la metodología OpenUp. Este apartado describe la implementación de los módulos concurso y nombramiento pertenecientes al sistema de gestión de preparadores, tomando en cuenta las fases de la metodología OpenUp, así como también la arquitectura bajo la cual se desarrolló dicho sistema con base en el patrón MVC. Se describe a su vez el mecanismo de integración entre el sistema y la base de datos, mediante el uso de Web Services (SW), bajo la arquitectura SOAP. Dado que este sistema está constituido por varios módulos siendo estos concurso, nombramiento, retiro y administrativo, se acordó establecer un estándar entre los equipos de desarrollo de los módulos mencionados, para la definición y distinción de los nombres de las variables, acciones, controladores, vistas y modelos, considerando la propuesta de [Sua]. A lo largo de este capítulo se explicará la aplicación de cada fase de OpenUp, en el desarrollo de los módulos concurso y nombramiento. 2.1.1. Fase de Inicio En esta fase se recopiló la información necesaria para identificar y conocer los requerimientos expuestos por los usuarios, de las diferentes Escuelas que componen a la Facultad de Ciencias de la Universidad Central de Venezuela, en cuanto a la visión de un sistema que se encargara de gestionar todo lo concerniente a los procesos administrativos de los preparadores. 23 La metodología OpenUp ofrece una serie de artefactos mencionados en el Capítulo 1, entre ellos se encuentra la plantilla Visión del Proyecto (ver Anexos 1, 2 y 3). Esta plantilla se adaptó traduciendo la versión original propuesta por [EPF], para ajustarla al desarrollo del Sistema de Gestión de Preparadores. Algunas preguntas que se hacen en la plantilla Visión del Proyecto tales como: ¿Cuál es el problema?, ¿A quién afecta?, ¿Cuál es su impacto?, ¿Cómo se atiende actualmente?, ¿Cuál sería la solución satisfactoria?, son respondidas en este capítulo en los apartados: planteamiento del problema, solución propuesta, justificación, objetivo general y objetivos específicos. Siguiendo el esquema de la plantilla Visión del Proyecto, los roles de OpenUp asociados a los actores identificados en el desarrollo del sistema son los siguientes: • Director del proyecto: este rol fue asumido por los tutores de este TEG, ya que se encargaron de coordinar, supervisar y revisar el desarrollo del proyecto. • Los roles desarrollador, arquitecto, analista y probador fueron desempeñados de manera indistinta por los tesistas responsables de elaborar y llevar a cabo el presente TEG. • Las Tablas 1 y 2 muestran los stakeholders asociados a la gestión de concurso y nombramiento de un preparador. Nombre Descripción Responsabilidades Director(a) Es la persona encargada de regir y avalar todos los procesos académicos y administrativos de la Escuela de Computación, entre estos la gestión de preparadores. Realizar seguimiento de los procesos relacionados con la gestión de preparadores. Jefe del Departamento Profesor universitario encargado de realizar la programación docente y recibir información de los coordinadores relacionada con los procesos de gestión de preparadurías. Responsable de informar a los coordinadores que deben abrir un concurso según la cantidad de partidas disponibles y la programación docente, así como también, editar la cantidad de preparadores que sean necesarios en una asignatura dada. Tabla 1. Descripción de los actores (stakeHolders), parte I. 24 Nombre Descripción Responsabilidades Secretaria del Departamento Es la persona que además de realizar las funciones propias de apoyo al departamento de la Escuela, se encarga de los trámites administrativos de la gestión de preparadores. Recibir los recaudos del estudiante ganador del concurso e indicar en el sistema si están completos. Generar el oficio, así como también validar que los datos reflejados en este documento sean correctos. Por otra parte, recibe los documentos que el Coordinador genera durante la realización del concurso, tales como el acta y la solicitud de excepción, si aplica el caso. Una vez finalizado el proceso de concurso y nombramiento este rol debe cerciorarse de que la Secretaria del Consejo de Escuela le entregue el oficio sellado y firmado por el Director para luego sacar las copias correspondientes, anexarlo al expediente del preparador para luego indicar a través del sistema que el documento se archivará. También podrá generar constancias de estudio si algún preparador lo requiere. Secretaria de Consejo de Escuela Persona encargada de elaborar las minutas y actas relacionadas con las resoluciones tomadas en las sesiones del Consejo de Escuela. Debe informar y recibir información de los entes relacionados con alguna de sus funciones. Se encarga de imprimir el Oficio una vez que éste ya fue revisado por la Secretaria de Departamento y Asistente Administrativo. A su vez, se encarga de generar la minuta que contendrá todo los nombramientos que serán discutidos en el Consejo de Escuela, así como también es responsable de actualizar las fechas relacionadas con la resolución final emitida por el ente mencionado anteriormente. Coordinador Profesor universitario responsable de organizar las actividades que se deben llevar a cabo durante un período lectivo en la asignatura en la cual fue designado como coordinador. Se encargará de abrir el concurso, cargar las notas de los aspirantes en el sistema, así como también, seleccionar al ganador y generar el acta del o los ganadores del concurso. Estudiante Son estudiantes de pregrado regulares y calificados, que apoyan en el desarrollo de labores docentes, de investigación, administrativas, servicios, deportes, apoyo técnico o cualquier otra equivalente, con una retribución por preparadurías. Llenar la planilla concurso a través del sistema y concursar, luego en el caso de resultar ganador, debe notificar su decisión indicando en el sistema si acepta o no el cargo. Tabla 2 Descripción de los actores (stakeHolders), parte II. 25 Nombre Descripción Responsabilidad Asistente Administrativo Persona encargada de manejar las partidas presupuestarias destinadas a todos los cargos de la Escuela, entre ellos los de los preparadores. Ingresar al sistema para verificar el oficio una vez generado por la Secretaria del Departamento, si el oficio presenta algún error debe notificarlo, en caso contrario debe informarle a la Secretaria del Departamento que ya esta revisado y listo para ser discutido en Consejo de Escuela y así dar continuidad con el proceso de concurso y nombramiento. También puede consultar el detalle del trámite y así conocer en cual fase del proceso se encuentra el oficio. Tabla 3 . Descripción de los actores o (stakeholders), parte III. No se utilizaron los Casos de Uso, para representar el comportamiento del sistema. En su lugar se usó el Workflow, permitiendo al igual que en los Caso de Uso, identificar las actividades o tareas que se realizan, así como también, a los usuarios involucrados en cada proceso, además de permitir, determinar los requerimientos del sistema. El diagrama de Workflow que se presenta en las Figuras 17, 18, 19 y 20, respectivamente, comprende el flujo de las actividades que conforman los procesos de concurso y nombramiento, desde el punto de vista de la automatización de dichos procesos reflejados en el sistema desarrollado, comprendiendo la carga de datos, consultas y envío de información, mostrando las interfaces y roles asociados a las tareas que se realizan actualmente, en combinación con las funcionalidades desarrolladas en el sistema. Las Tablas 4 y 5 muestran la descripción de los elementos que contiene el Workflow, permitiendo una mejor comprensión. Símbolo Descripción Representa los documentos físicos que se manejan en el proceso, tales como: oficio de retiro y carta de renuncia. Representa las actividades que ejecuta el sistema siendo activadas por un rol. Representa las actividades que ejecuta el sistema automáticamente en algún punto del proceso. Tabla 4. Descripción de los símbolos del Workflow, parte I. 26 Símbolo Descripción Representa el envío de una notificación mediante un correo electrónico con información pertinente al evento activado por un rol. Representa la recepción de una notificación enviada mediante un correo electrónico, con información pertinente al evento activado por otro rol. Representa el intercambio de información con sistemas externos, a través de mensajes XML haciendo uso de servicios web. Representa una interfaz de consulta de información. Representa un formulario para la carga de información. Representa una caja negra indicando que lo se ejecuta es transparente al proceso en curso, ya que depende de actividades realizadas por actores externos al sistema. Representa la continuidad del flujo de actividades, utilizando números consecutivos. Inicio Representa el inicio de un proceso. Representa el fin de un proceso. Tabla 5. Descripción de los símbolos del Workflow, parte II. 2 7 F ig u ra 1 7 . F lu jo d e t ra b a jo d e l o s p ro c e s o s c o n c u rs o y n o m b ra m ie n to , p a rt e I 2 8 F ig u ra 1 8 . F lu jo d e t ra b a jo d e l o s p ro c e s o s c o n c u rs o y n o m b ra m ie n to , p a rt e I I. 2 9 F ig u ra 1 9 F lu jo d e t ra b a jo d e l o s p ro c e s o s c o n c u rs o y n o m b ra m ie n to , p a rt e I II . 3 0 F ig u ra 2 0 .F lu jo d e t ra b a jo d e l o s p ro c e s o s c o n c u rs o y n o m b ra m ie n to , p a rt e I V . 31 Visto el diagrama del Workflow, en las Tablas 6 y 7 se muestra la especificación del proceso concurso, y en las Tablas 8 y 9, respectivamente se presenta la especificación del proceso de nombramiento. Proceso Concurso. Descripción Proceso que consiste en una primera fase de llamado a los estudiantes que quisieran concursar para obtener el cargo de preparador. Para ello los estudiantes requieren consignar una serie de requerimientos, presentar una prueba y finalmente de los resultados obtenidos se realiza la selección del estudiante apto para desempeñar el cargo. Actores Involucrados Jefe Departamento. Asistente Administrativa. Coordinador. Estudiante. Secretaria del Departamento. Secretaria de Consejo de Escuela. Directora. Pre-condiciones - Disponer de partidas presupuestarías. - Contar con la Programación Docente del semestre a iniciar: donde se indica que asignaturas serán abiertas en un semestre. - Conocer los cargos vacantes por cada asignatura. - Indicar partidas presupuestarías disponibles y si existe déficit de partidas, con base en la programación docente, se deben solicitar. - Conocer quiénes son los coordinadores de cada asignatura. - Conocer la lista de estudiantes inscritos en el semestre actual. - Conocer las fechas de apertura y culminación del semestre. Tabla 6. Especificación del proceso concurso, parte I. 32 Pre-condiciones - Conocer los requisitos y recaudos necesarios para concursar en cada asignatura: o Dentro de los requisitos a solicitar se tienen: promedio de notas, índice académico y asignaturas aprobadas. o Recaudo a solicitar: "constancia de “OBE” indicando que el estudiante no cuenta con una beca estudiantil. Post-condiciones - Visualizar concursos abiertos por parte de los estudiantes interesados en participar: La información del concurso estará disponible en la cartelera del sistema, además se envía esta información a todos los estudiantes de la Escuela, mediante un correo masivo. - Visualizar información detallada de cada aspirante a concursar: o Debe estar disponible el “kardex” de cada aspirante: éste es un documento, emitido por Control de Estudio, donde se indica la historia académica (asignatura cursada y nota). - Contar con los recaudos físicos de cada aspirante. - Conocer las fechas de apertura y cierre de cada concurso. - Habilitar la planilla de para que los aspirantes se puedan inscribir. Flujos alternos No aplican para este proceso Interacción con otros procesos / módulos - Proceso de nombramiento: el proceso de concurso está relacionado con el proceso de nombramiento debido a que los estudiantes que se registren en la fase de concurso, serán los que se reflejen en el proceso de nombramiento. - Modulo administrativo: la interacción se ve al momento que los estudiantes se autentiquen el sistema para solicitar participar en un concurso. - Sistema “CONEST”: este sistema se encarga de manejar todos los procesos administrativos que lleva a cabo Control de Estudio. La interacción con este sistema es al momento de solicitar el kardex de un estudiante para verificar si cumple con los requisitos para concursar. Tabla 7. Especificación del proceso concurso, parte II. 33 Proceso Nombramiento Descripción Consiste en formalizar la ocupación del cargo preparador por parte del estudiante que resultó ganador en el concurso. Además, comprende la asignación de una partida presupuestaria a la plaza que ha de ocupar el estudiante al cual se le otorga el cargo. Actores involucrados Jefe Departamento Asistente Administrativa Coordinador Estudiante Secretaria del Departamento Secretaria de Consejo de Escuela Directora Pre-condiciones - Conocer los estudiantes inscritos en cada concurso: solo los aspirantes que llenaron la planilla de solicitud de concurso y tengan sus recaudos podrán realizar la evaluación del concurso. - Visualizar información detallada de cada aspirante: información personal del estudiante y “kardex”. - Visualizar la planilla de concurso completada por cada aspirante. - Contar con los recaudos físicos de cada aspirante. - Haber pasado la fecha de cierre del concurso. - Haber cerrado el acceso a la planilla de concurso en el sistema. - Disponer de las herramientas de evaluaciones, desarrolladas por cada coordinador, que se van aplicar a los aspirantes. Esta evaluación consiste en un conjunto de preguntas teóricas y prácticas relacionadas con la asignatura que se desea concursar. - El sistema debe tener almacenado los “kardex” de los estudiantes inscritos para concursar. Tabla 8. Especificación del proceso nombramiento, parte I. 34 Post-condiciones - Haber aplicado las evaluaciones a todos los aspirantes. - Cada Coordinador debe haber llenado la planilla de notas para cada concursante. - El Coordinador deberá haber evaluado el “kardex” de cada concursante y compararlo con los requisitos. - Publicar el ganador de cada concurso: esta información deberá ser publicada en la cartelera y conocida por los estudiantes, tanto los que concursaron como los que no. Generación del Acta de preparadores por parte del coordinador, luego de escoger el ganador. El Acta es un documento que contiene los datos del ganador del concurso y de los otros participantes. - Generación del Oficio de Nombramiento por parte de la Secretaria del Departamento: el oficio es un documento que contiene los datos del ganador del Concurso. - El nombramiento de un preparador se hace efectivo luego de ser aprobado por Consejo de Escuela. Las partidas presupuestarías libres inicialmente, se ocupan con los datos de los ganadores de los concursos. Flujos alternos - En el caso que un concursante no cumple con los requisitos solicitados, el coordinador puede decidir escogerlo como ganador, pero debe genera un Aval: el aval es un documento que justifica un nombramiento de un estudiante que no cumplan con los requisitos, para su posterior aprobación en Consejo de Escuela. - Si un estudiante decide ser preparador “Adhonorem” igualmente debe concursar, pero no ocupará una partida presupuestaría, debido a que ser preparador “Adhonorem” consiste en realizar dicha tarea de forma voluntaria sin fines de lucro. - Si un estudiante concursó para un cambio de dedicación se debe primero procesar el retiro de la dedicación anterior, antes de proceder al nombramiento. Interacción con otros procesos / módulos Los que aplican en los flujos alternos. Tabla 9. Especificación del proceso nombramiento, parte II. 35 La plataforma del sistema apunta a un escenario en donde se realicen los mismos procesos o actividades pero de forma automatizada bajo el entorno Web, tomando en cuenta que se utilizaran las notificaciones vía correo electrónico para recordarles a los usuarios cual es la actividad que deben realizar para continuar con el proceso. La Figura 21, ilustra el modelo conceptual del SGP-EC. Este sistema está constituido por los módulos concurso, nombramiento, retiro y administrativo [GR 2009], [AB 2009], e interactúa con el subsistema de servicios Web, quien actúa como intermediario en la comunicación entre el SGP-EC y los sistemas de Gestión Presupuestaria y CONEST. Figura 21. Modelo Conceptual del Sistema de Gestión de Preparadores de la Escuela de Computación. Las Tablas 10 y 11 corresponden al planteamiento realizado en la plantilla Visión del Proyecto, relacionado con la descripción del producto. En esta tabla se identifican las necesidades de los usuarios y la prioridad de la misma, acompañadas de algunas características. Necesidad Prioridad Características Disminuir el riesgo de perder documentos físicos. 1 Al generar información de forma automatizada, se generan menos documentos y no es necesario intercambiarlos de un escritorio a escritorio, todo se realizar a través del sistema y al momento de generar la documentación se podrá hacer tantas veces como sea requerido. Tabla 10. Características y Necesidades, parte I. 36 Necesidad Prioridad Características Minimizar los tiempos de respuesta. 2 Ofrecer información en tiempo real. Hacer mayor y mejor seguimiento sobre cómo se lleva a cabo la gestión de concursos y nombramientos. 3 Conocer en por cual fase del proceso de concurso o nombramiento se encuentran estos procesos. Tabla 11. Característica y Necesidades, parte II. 2.1.2. Fase de Elaboración En esta fase se definió la arquitectura SGP-EC, así como también el plan de trabajo bajo el cual se desarrolló el sistema. Para elaborar el plan de trabajo se utilizó la plantilla Planificación del Proyecto (ver Anexos 4 y 5) propuesta por OpenUp, en donde se especificó que rol debía cumplir cada desarrollador así como también, el tiempo estimado de duración de cada iteración. También se usó la plantilla Lista de Elementos de Trabajo o Work Item List (ver Anexo 6), en donde se planteó las prioridad de desarrollo para las funcionalidades asociadas a los requerimientos del sistema. Adicionalmente, en esta lista se designó al responsable de implementar cada funcionalidad, estimando el tiempo que tomaría para implementarlas. La arquitectura del SGP-EC se diseñó en 3 capas, siguiendo el patrón MVC (Modelo – Vista – Controlador). La explicación sobre la implementación de la misma se realiza en la fase de construcción señalada en este capítulo. La Capa Modelo Está constituida por un conjunto de clases que sirvieron para representar los objetos encargados de guardar la información, con la cual trabajan los procesos de concurso y nombramiento. Estas clases sirvieron para representar aquellas tablas involucradas en el intercambio de información producto de la interacción del sistema con la capa de servicios Web, debido a que no se contó con una base de datos local. Lo ventajoso de este tipo de solución para simular una base de datos local, es que no es necesario representar todas las tablas existentes en la base de datos, sino solo aquellos objetos que se necesitan para el intercambio de data. En cuanto a la definición del contenido de las clases, éstas están constituidas por solo aquellos campos que se definan en los XML o en los servicios Web, sin tener que mencionar todos los campos existentes en una tabla de la base de datos. Las clases creadas para el intercambio de información entre los módulos concurso y nombramiento del SGP-EC y la base de datos son las siguientes: aspirantes, 37 asignaturas_inscritas, carga_concursos_anteriores, concurso, correos_coordinador, detalle_oficio, docente, emailer, lista_de_objetos, asignatura, menú, oficio_concurso, partida, partidas_asignadas, programación_docente, semestre. La descripción de estas clases se encuentra en la fase de construcción (Tablas 14 y 15). Las clases se encuentran ubicadas en el directorio App en la carpeta Models, de acuerdo a la estructura que RoR establece al proyecto de desarrollo de la aplicación Web, (ver Figura 22). Figura 22. Ubicación de las clases dentro del directorio App en RoR. 38 La capa Vista Los módulos concurso y nombramiento del SGP-EC, están constituidos por un conjunto de vistas encargadas de permitir la solicitud de información a los controladores asociados a cada interfaz así como también la publicación de la misma. Cada vista está asociada a un actor. En la fase de construcción que se señala en este capítulo se muestran algunas de las vistas que conforman el SGP-EC así como también el actor asociado a cada una de éstas. La Capa Controlador Las clases del Controlador responden a la interacción del usuario e invocan a la lógica de la aplicación, que a su vez manipula los datos de las clases del Modelo y muestra los resultados usando las vistas. Los métodos del Controlador son invocados por el usuario usando el navegador Web como se muestra en la Figura 9 en el capítulo 1. Para el desarrollo del SGP-EC, considerando que está constituido por varios módulos, entre ellos el de concurso y nombramiento, se decidió crear un controlador por cada modulo, así como también un controlador encargado de administrar todas las acciones relacionadas con la generación de documentos dentro de los módulos, y un controlador encargado de las funciones comunes existentes entre los módulos del sistema. También se diseño un controlador llamado estudiante en vista que para los estudiantes existen pocas funcionalidades por lo que se consideró conveniente ubicarlas en un solo controlador para separarlas de los otros controladores y hacer el desarrollo de la aplicación modular. Otro controlador desarrollado es el que se encarga de manejar todo lo concerniente a la sesión de los usuarios que pueden tener acceso al SGP-EC, así como también controlar las diferentes actividades a mostrarse en el menú, según el perfil del usuario que ingresa al sistema. Dado que se utilizó como herramienta de desarrollo el framework RoR, este provee dentro del directorio App, específicamente en la carpeta Controllers un archivo llamado Aplication, este es un archivo por defecto que utiliza RoR para que allí se implementen todas las acciones que sean útiles y comunes para los demás controladores existentes en la carpeta Controllers. Basado en esto, es aquí en donde se ubicó e implementó las funciones encargadas de realizar el análisis sintáctico (parser) de las respuestas recibidas en estructura XML por los servicios Web desde la base de datos. En este archivo también se encuentra la función encargada de la paginación, por ser común para todas las vistas en donde se generen reportes que retornen largos listados de información dentro del SGP-EC. Los controladores desarrollados dentro de la aplicación Web son los siguientes: 39 • aplication_controller: contiene las distintas acciones encargadas de realizar el análisis sintáctico (parser) de las respuestas provenientes de la solicitud de data a la base de datos. • comunes_controller: contiene aquellas funciones que son comunes entre los módulos Retiro, Consurso y Nombramiento, como por ejemplo la generación en formato pdf del oficio. • concurso_controller: contiene todas las acciones encargadas de la operabilidad del modulo concurso. • documento_controller: contiene aquellas acciones encargadas de generar documentos como minutas, solicitud de excepciones, entre otros. • estudiante_controller: Este controlador está definido por aquellas acciones que le permiten al estudiante interactuar e interpretar las peticiones o solicitudes que demande este usuario al sistema, específicamente a los módulos concurso y nombramiento. • nombramiento_controller: contiene todas las acciones encargadas de la operatividad del modulo Nombramiento. • sesion_controller: está conformado por todas aquellas acciones encargadas de controlar las variables de sesión, como por ejemplo: la cédula de los usuarios, la Escuela a la cual pertenece el usuario que ha ingresado al sistema, el período actual, entre otros. Para el procesamiento de peticiones se cuenta con un servidor de aplicaciones en el cual será ubicada la aplicación Web, este procesará las transacciones conduciéndolas a los servidores que les corresponde manejarlas, según la petición recibida. Este procesamiento se realizará a través de servicios Web. Para alcanzar el intercambio entre las peticiones hechas desde los módulos concurso y Nombramiento, se desarrollaron 49 servicios Web. Para el manejo de las cuentas de correo se cuenta con un servidor SMTP conocido como Servidor de Correos Tyto. Este contiene todas las cuentas de correos asociadas a los estudiantes de la Facultad de Ciencias de la Universidad Central de Venezuela. Por otra parte, también se cuenta con uno o varios servidores para la base de datos en donde se albergan todos los datos relacionados con los procesos concurso y Nombramiento, así como también los datos de los usuarios del sistema, los roles y las actividades que desempeñan tales usuarios, fechas de la realización de los trámites de un concurso o un nombramiento, así como también la información necesaria para generar documentos que resulten de la realización de algún trámite u actividad. La Figura. 23 muestra la arquitectura final del sistema. 40 Figura 23 . Arquitectura Sistema de Gestión de Preparadores. 2.1.3. Fase de Construcción Con base en la arquitectura definida en la fase de elaboración y siguiendo el patrón MVC, para proporcionarle una estructura al sistema y alcanzar la implementación de los módulos concurso y nombramiento, se utilizó el framework Ruby on Rails, el cual se apoya en dicho patrón, lo cual facilitó definir la estructura y la organización de las capas de la arquitectura. Para el intercambio de datos entre la base de datos y los módulos concurso y nombramiento, se empleó una capa de servicio Web, sustentado en la arquitectura SOAP. Se definieron 49 servicios Web encargados de la solicitud y envío de datos asociados a las peticiones hechas desde el sistema por los usuarios. Los servicios Web se encargan del envío y recepción de datos en respuesta a las solicitudes hechas al servidor de aplicación. Para efectos de este sistema, en el cual no se trabajó con una base de datos local, la finalidad de los servicios Web es la de servir como puente de comunicación entre la base de datos y el SGP-EC asociado a los Módulos concurso y nombramiento. A través de ellos se intercambia la data necesaria para alimentar al sistema. A continuación se muestra en la Tabla 12 y 13 los servicios Web para el SGP-EC, correspondientes a los módulos concurso y nombramiento. 41 Numero Nombre del Servicio Web Descripción 00001 consultar_programacion_docente Devuelve la programación docente para el período actual según la escuela que lo solicite. 00002 actualizar_programacion_docente Actualiza la cantidad de preparadores I y II disponibles en una asignatura en específico para el período actual. 00003 consultar_programacion_docente_coord Devuelve la cantidad de partidas disponibles I y II para una asignatura en particular, más los datos del concurso de esa asignatura, como lugar fecha, hora, jurados. 00004 actualizar_crear_concurso Se crea y actualiza la información relacionada con un concurso. 00005 consultar_correos_estudiantes Retorna la lista de correos de todos los estudiantes, tanto del servidor de correos Tyto como de servidores de correos alternos. 00006 consultar_logueo_usuario Verifica si el login y password son válidos para ese usuario. 00007 consultar_datos_estudiante Devuelve los datos personales y académicos del estudiante, tales como el número de inscripciones que ha realizado desde que ingreso a la Facultad de Ciencias. 00008 actualizar_aspirante_1 Inscribe un estudiante en un concurso 00009 consultar_aspirantes Devuelve los datos personales y académicos de los aspirantes de un concurso para una asignatura en particular. 00010 consultar_kardex Devuelve los datos que conforman el kardex del estudiante. 00011 actualizar_notas_aspirante Actualiza los valores correspondientes a las pruebas del concurso dado un estudiante. 00012 actualizar_aspirante_3 Este servicio web se encarga de actualizar la respuesta de un estudiante ganador de un concurso, (si aceptó o no el cargo). 00013 consultar_ganador Devuelve los datos personales de los ganadores del concurso según la asignatura a la cual pertenezca el coordinador. 00014 actualizar_ganador Actualiza el resultado de un concurso, específicamente los datos relacionados con el estudiante que resulte o no ganador, y en caso de ganar se actualiza el cargo que ocupará. Tabla 12. Descripción de los servicios Web diseñados para el SGP-EC asociados a los módulos concurso y nombramiento, parte I. 42 Número Nombre del Servicio Web Descripción 00015 consultar_oficio Devuelve los valores asociados a los trámites sobre el oficio (nombramiento y retiro) del período actual. 00016 crear_oficio Se crea un oficio para el nombramiento de un estudiante 00017 consultar_correo Devuelve el correo electrónico de un usuario. 00018 actualizar_datos_acta Actualiza los datos asociados al acta de preparadores, como cédula del ganador, coordinador y jurados. 00019 consultar_partidas_concurso Devuelve los nombres de los preparadores que ocuparon la partida ya asignada cuyos estatus sean “no pre- asignable” o “no disponibles”. 00020 consultar_jurados Devuelve los jurados que asistieron al concurso, según la asignatura y el período. Tabla 13. Descripción de los servicios Web diseñados para el SGP-EC asociados a los módulos concurso y nombramiento, parte II. Las tablas que contemplan la descripción de los demás servicios Web definidos para los módulos concurso y nombramiento puede ser consultadas en los anexos. Ver Anexo 7, 8 y 9. También se reutilizaron algunos servicios Web definidos por los módulos de Retiro y Administrativo, ver Anexo 10. A continuación se explica la implementación de cada capa perteneciente a la Arquitectura del Sistema de Gestión de Preparadores. La Capa Modelo En Ruby on Rails las clases de la capa Modelo son gestionadas por la clase ActiveRecord. Por lo general lo único que tiene que hacer el programador es heredar de la clase ActiveRecord::Base y el programa averiguará automáticamente qué tabla usar y qué columnas tiene la misma. Esto quiere decir que Ruby on Rails ofrece un mapeo a la base de datos transparente para el programador. A pesar de ello el SGP-EC no trabaja bajo este estándar ya que no se contó con una base de datos local durante la implementación. 43 La capa de acceso a la base de datos es una aplicación a parte, que forma parte de otro TEG. El modelo de la base de datos es transparente para el SGP-EC y la comunicación se realiza a través de servicios Web, bajo el protocolo SOAP, un estándar abierto para garantizar la interoperabilidad entre aplicaciones independientemente de sus propiedades o de las plataformas sobre las que se instalen. Para la implementación de la capa modelo asociada a los módulos concurso y nombramiento se trabajó con clases. Estas clases no guardan relaciones entre sí, es decir, ellas no se utilizan para representar los objetos existentes o definidos en la base de datos y esto es porque RoR ofrece la posibilidad de trabajar con clases, siendo utilizadas como objetos para guardar en tiempo real la data que es retornada por los SW, es por ello que no es necesario diagramar las clases para representarlas en un diagrama de clases, no existe relación entre ellas como es el caso de la herencia, generalización entre otras. Para el manejo de los datos devueltos se desarrollaron algunos modelos, estos son mencionados a continuación en las Tablas 14 y 15. Nombre Clase Descripción Modulo que utiliza el modelo aspirantes Encargado del manejo de los datos relacionados con el estudiante que se postule como aspirante en un concurso Concurso asignaturas_inscritas Responsable del manejo de los datos relacionados con las asignaturas inscritas en semestre anteriores al que actualmente este cursando un aspirante del concurso, y es utilizado para llenar los datos de la planilla concurso Concurso carga_concursos_anteriores Definido para el histórico de los concursos en los cuales haya participado un estudiante Concurso concurso Contempla todo lo relacionado a un concurso. Con este modelo se manejan los campos para consultar un concurso, la fecha de apertura, cierre, fecha de la prueba, entre otros campos. Concurso correos_coordinador Esta clase es utilizada para manejar las cuentas de correo de los coordinadores. Concurso detalle_oficio Empleada para manejar todos los datos relacionados con el detalle del oficio. Concurso Tabla 14. Modelos definidos para el manejo de los datos de los módulos concursos y nombramiento, parte I. 44 Nombre Clase Descripción Modulo que utiliza el modelo docente Clase utilizada para el manejar los datos de los docentes existentes en una escuela en particular. Se emplea para la selección de los jurados de un concurso en particular. Concurso emailer Esta clase contiene las acciones encargadas de generar los correos para el envío de las diferentes notificiones que son generadas por los módulos concurso y nombramiento. emailer lista_de_objetos Esta es una clase general, creada para colocar los datos de forma temporal en este objeto y así poder acceder a ellos en tiempo real. Concurso y Nombramiento materia Se encarga de obtener las asignaturas que ha cursado un aspirante en los últimos semestres. También es utilizado para mostrar las diferentes asignaturas abiertas en una escuela en particular durante el semestre en curso y así poder facilitar las búsquedas en los filtros de las consultas. Concurso menu Se utiliza para manejar las opciones del menú que estarán disponibles para un usuario según las actividades que tenga definida en el sistema. Concurso Oficio_concurso Contiene los datos relacionados con un oficio generado por el módulo concurso. Concurso Partida Clase utilizada para obtener la data relacionada con el detalle de las partidas, conocer su id-detalle, y la disponibilidad de la misma. Concurso partidas_asignadas Con esta clase se obtienen los datos relacionados sobre las partidas que fueron asignadas y a quién se asigno una partida en particular. Concurso programacion_docente Definida para contener la data relacionada con la programación docente. Concurso Semestre A través de esta clase se obtiene el semestre actual y el semestre anterior con el fin de ofrecerlos como opciones en los filtros desarrollados, para realizar las búsquedas en donde sea necesario. Concurso Tabla 15. Modelos definidos para el manejo de los datos de los módulos concursos y nombramiento, parte II. 45 La Capa Vista En este punto se presentan las pantallas principales del prototipo del SGP-EC, con relación a los módulos concurso y nombramiento. Se describe a su vez la identificación del rol que se encuentra vinculado a dichas pantallas y las funcionalidades del sistema asociadas al mismo. Cada pantalla presentada tiene un área de título o banner, que es igual para todos los usuarios, un menú en el cual las opciones varían dependiendo del perfil del mismo, y un área de contenido donde se muestran las funciones asociadas según la escogencia del usuario en las opciones ofrecidas en el menú. Estas opciones varían para cada rol, debido a que están asociadas con la función que éste desempeñe en el sistema. El usuario antes de interactuar con el sistema debe ingresar el usuario y la clave en la pantalla identificada como Pantalla Inicial del Sistema, ver Figura 24. Luego de ingresar los datos correctamente se carga la pantalla de bienvenida, ilustrada en la Figura 25. Figura 24. Pantalla Inicial del Sistema 46 Figura 25. Pantalla de Bienvenida. Pantallas para el rol de Jefe de Departamento La siguiente pantalla tiene la función de mostrar al Jefe de Departamento la programación docente para el período actual y de esta manera poder notificar a cada Coordinador la apertura y la cantidad de plazas disponibles para ofertar en un concurso. Al guardar la información se envía un correo a los Coordinadores involucrados, notificando que ya pueden abrir su concurso. Ver Figura 26. 47 Figura 26. Notificar Apertura de Concurso. Una vez culminado un concurso el Jefe de Departamento cuenta con la opción en el sistema que le permite visualizar a los estudiantes ganadores, que serán nombrados preparadores para el semestre lectivo. Ver Anexo 11. Pantallas para el rol de Coordinador El Coordinador también puede consultar la programación docente. Aunque solo visualiza la información relacionada a su asignatura. No puede editar los campos. Ver Anexo 12. Este rol es el encargado de Abrir el Concurso, ver Figura 27. Para ello debe especificar la fecha de apertura y cierre del mismo; la fecha de la prueba, lugar y hora del concurso. La cantidad de plazas de preparadores I y II se cargan previamente según lo dispuesto por el Jefe de Departamento, al igual que el jurado 1, el Coordinador de la asignatura, el jurado 2 y 3 deben ser seleccionados. Al guardar los cambios, se genera un correo electrónico destinado a la población estudiantil, que contiene la información relacionada con ese concurso y la URL del sistema en donde pueden consultar los concursos abiertos para el semestre actual, así como también el anuncio del concurso en formato pdf, ver Anexo 13. 48 Figura 27. Abrir Concurso. En la siguiente vista el Coordinador puede modificar la información que introdujo para abrir el concurso del semestre lectivo. (Ver Figura 28). 49 Figura 28. Modificar Concurso e Imprimir Anuncio. A partir del momento en que un estudiante se inscribe en un concurso, el Coordinador de ese concurso puede consultar a los aspirantes del mismo. Además puede visualizar el kardex y planilla de inscripción de los aspirantes. Esto lo realiza en la vista Consultar Aspirantes. Ver Figura 29. La planilla de inscripción al concurso se encuentra como el Anexo 14. Figura 29. Consultar Aspirantes inscritos en un Concurso. 50 El sistema provee la funcionalidad de permitir al Coordinador cargar las notas de los estudiantes que asistieron o no a presentar la prueba del concurso, esta pantalla se muestra en la Figura 30. Con esta interfaz el Coordinador puede indicar quienes asistieron a la prueba y quienes no, lo que permite controlar cuales “kardex” se le solicitaran al sistema CONEST vía servicios Web, de este modo se tiene la información justa y necesaria de solo aquellos estudiantes que asistieron a la prueba, y esto es con el fin de evitar corromper la base de datos con data que no sea necesaria. Esta vista tiene la funcionalidad de que al momento de guardar los datos se genera una notificación vía correo electrónico dirigida a los jurados seleccionados para el concurso, con el fin de informarles sobre los resultados de la prueba. Figura 30. Cargar Notas. El siguiente paso luego de cargar las notas del concurso es Seleccionar al (o a los) ganador(es). Esto se realiza a través de la interfaz que lleva por nombre Seleccionar Ganador, en la cual se visualizan las notas de los estudiantes que participaron y los posibles cargos que puede ocupar el ganador. Si el Coordinador lo requiere, puede consultar el expediente de asignaturas del estudiante en la opción “Ver Kardex”, ofrecida en esta pantalla, que se presenta en la Figura 31. 51 Figura 31. Seleccionar Ganador(es) del Concurso. Luego de seleccionar al (o a los) ganador(es), el Coordinador queda a la espera de la respuesta del estudiante. Esa respuesta la puede visualizar en la vista Consultar Ganadores del Concurso (ver Figura 32). Si el estudiante aceptó el cargo y cumple con los requisitos, el Coordinador genera el Acta de Preparadores en formato pdf, en esta misma vista, al presionar la metáfora (pdf) ubicada en la columna Acción. Si el estudiante por el contrario no cumple con los requisitos, el Coordinador puede generar un aval en el enlace “Generar Aval”. Este enlace lo conduce a la vista Generar Aval - Solicitud de Excepción, ver Figura 33, en la cual selecciona al ganador que desea generarle la solicitud de excepción. El Acta de Preparadores puede ser visualizada en el Anexo 15. Para generar el aval primero debe introducir la razón por la cual desea que ese estudiante ocupe el cargo de preparador sin cumplir con los requisitos o si no lo requiere puede hacer uso de la justificación ya predefinida que se encuentra en la vista, ver Figura 34, y posteriormente se genera el aval en formato pdf. El aval puede ser visualizado en el Anexo 16. 52 Figura 32. Consultar Ganadores del Concurso. Figura 33. Generar Aval y añadir observación. 53 Figura 34. Generar Aval y colocar observación. Un Coordinador puede consultar el estado de los trámites relacionados con la asignatura que dicta en el período lectivo (ver Figura 35). Al seleccionar un oficio específico (columna Ver Detalle) puede visualizar el detalle sobre los diferentes estatus y roles por los cuales ha pasado el documento (ver Anexo 17). Asimismo estas dos vistas están disponibles para los roles Secretaria de Departamento, Asistente Administrativo y Secretaria de Consejo de Escuela, con la diferencia que estos usuarios pueden ver los oficios de cualquiera de las asignaturas dictadas y ofrecidas en un período vigente en la Escuela. 54 Figura 35. Consultar estatus de los Oficios. Pantallas para el rol de Estudiante La interfaz a través de la cual el estudiante puede visualizar los concursos es mostrada en la Figura 36. En ella el estudiante selecciona la asignatura del concurso al cual quiere inscribirse. Esta lo envía a otra vista en donde debe completar los datos de la Planilla Concurso, tal como se muestra en la Figura 37. A partir de ese momento, el Coordinador de esa asignatura, recibe una notificación vía correo electrónico en donde se le informa que existe un nuevo aspirante. 55 Figura 36. Consultar Concursos Abiertos. Figura 37. Completar Planilla Concurso. 56 Un estudiante luego de postularse en una asignatura puede consultar los concursos en los cuales se ha inscrito para el período vigente y generar la Planilla Concurso en formato pdf en cualquier momento. (La planilla de inscripción al concurso se encuentra en el Anexo 14). Esto lo realiza en la vista Consultar Concurso Inscritos (ver Figura 38). Asimismo luego que el Coordinador selecciona al ganador(es) del concurso, el estudiante puede visualizar el resultado del mismo, presionando en la asignatura de ese concurso. Esto lo conduce a la vista Resultados del Concurso (ver Figura 39). Si el estudiante resulta ganador, selecciona la respuesta de aceptar o rechazar el cargo, lo que genera una notificación de resultados vía correo electrónico al Coordinador de esa asignatura informándole sobre la respuesta del ganador. Figura 38. Consultar Concursos Inscritos y Resultados. 57 Figura 39. Consultar Resultados del Concurso. Los estudiantes tienen la posibilidad de consultar el histórico de los concursos en los cuales se han inscrito (ver Anexo 18). Pantallas asociadas al usuario que desempeña las actividades del Rol Secretaria del Departamento. Dado que la Secretaria del Departamento debe hacerle seguimiento a los documentos que son generados en los procesos asociados con la selección de un preparador, específicamente a lo relacionado con concurso y nombramiento. El sistema se diseño tomando en cuenta las diferentes opciones de búsqueda necesarias para conocer el estatus, número de Oficio o nombre de algún estudiante si es necesario, ofreciendo las opciones de búsqueda a través de un filtro, el cual se encargará de facilitar las mismas. Este filtro se muestra en la Figura 40. 58 Figura 40. Filtro de búsquedas. Para que la Secretaria del Departamento genere un oficio puede tomar alguna de las opciones para la búsqueda y seguidamente se genera un reporte con los oficios bajo el estatus solicitud generada en el semestre vigente, para el caso de un nombramiento, si la secretaria escoge la opción Tipo movimiento igual a Nombramiento, se mostrará una vista similar a la de la Figura 41. (En el Anexo 19 se muestra un Oficio como ejemplo). 59 Figura 41. Consultar Solicitudes. La vista anterior, le permite a la Secretaria del Departamento asignarle al oficio el número de oficio, es decir, a partir de este momento se formaliza la generación del oficio para un tipo de movimiento, ya sea si se trata de un aumento de horas, disminución o nombramiento. Esta vista ofrece varias funcionalidades, una de ellas es la mencionada anteriormente, la segunda consiste en colocarle a los oficios de nombramiento la fecha de ingreso en la cual el preparador comenzará a desempeñar sus actividades en el cargo otorgado, la tercera función consiste en colocar una observación al oficio en donde se indique si éste presenta algún error, si esto ocurre se le envía una notificación al Asistente Administrativo y al Administrador del Sistema. Otra de las funciones es la de asignarle al oficio el estatus para el control de trámite colocándole “Oficio enviado al Asistente Administrativo” y como última función se tiene la de notificarle al Asistente Administrativo, vía correo electrónico, que ya el oficio se generó y puede consultarlo para dar validez al documento y continuar con el proceso. En esta vista, en la columna actualizar, se le permite al usuario colocar el número del oficio, como se muestra en la Figura 42 - Completar datos oficio concurso. 60 Figura 42. Completar datos oficio concurso. La Figura 43 muestra la vista en la cual la Secretaria del Departamento puede colocar la fecha de ingreso del preparador. Figura 43. Fecha Ingreso del Preparador. 61 La Figura 44, muestra la vista en la cual se añaden las observaciones en el caso en el que el oficio presente algún error. Figura 44. Observaciones del trámite seleccionado. De igual forma si este rol o usuario necesita consultar el detalle del trámite asociado al oficio, para conocer por cual fase del proceso se encuentra dentro del flujo definido para formalizar un nombramiento, lo puede hacer a través de la vista consultar oficio detalles, previo a visualizar el detalle debe hacer uso del filtro mostrado en la Figura 40, especificando el tipo de búsqueda que desee realizar, posteriormente se genera el reporte tal como se muestra en la Figura 35. Existen más opciones disponibles para este rol, entre ellas se tiene la opción consultar oficios por archivar, esta vista le permite indicar cuales oficio están listos para archivar e indicarle al Asistente Administrativo que se está llevando a cabo esta acción y que pueden ser enviados al Departamento Presupuesto ver Figura 45. 62 Figura 45. Consultar Oficios por Archivar. Como valor agregado al SGP-EC se desarrollaron algunas vistas siendo estas: Consultar historial de preparador, y Generar constancia de preparadores, ver Anexo 20 y 21, respectivamente. El Anexo 22 es la constancia de trabajo del estudiante como preparador en formato pdf. Pantallas asociadas al usuario que desempeña las actividades del Rol Asistente Administrativo. El Asistente Administrativo al igual que la Secretaria del Departamento cuenta con la opción para consultar los oficios generados y añadir observaciones si el oficio presenta algún error en los datos, esta vista se muestra en la Figura 46 y la vista en la cual se añade las observaciones se presenta en la Figura 44. También puede consultar el detalle del oficio al igual que la Secretaria del Departamento, Coordinador y la Directora, tal como se muestra en la Figura 35 – Consultar estatus de los Oficios. Este rol cuenta con la opción “notificar resolución a presupuesto”, permitiéndole enviar una notificación sobre la resolución final al Departamento Presupuesto (ver Figura 47). 63 Figura 46. Consultar Solicitudes. Figura 47. Notificar Resoluciones a Presupuesto. 64 El Asistente Administrativo puede consultar a su vez cuales oficios envió al Departamento Presupuesto, para llevar un control si lo desea (ver Anexo 23). Existe otra opción para este rol, conocida como “Consultar Partidas Presupuestarias”. A través de esta opción el asistente puede consultar cuáles partidas están ocupadas, cuáles van a ser liberadas, cuáles están libres y cuáles partidas serán ocupadas en el semestre vigente. Previo a realizar la consulta es necesario que este rol o usuario, indique el tipo de búsqueda que desea realizar, haciendo uso del filtro que se muestra en la Figura 48. El resultado de la búsqueda se muestra en la Figura 49. Figura 48. Filtro para realizar la búsqueda según el tipo de partida presupuestaria que se desee consultar. Figura 49. Consultar Partidas Presupuestarias. 65 Pantallas asociadas al usuario que desempeña las actividades del Rol Secretaria del Consejo de Escuela. El usuario que desempeñe las actividades de este rol cuenta con la opción dentro del sistema que le permite consultar aquellos oficios que serán discutidos en Consejo de Escuela, esto lo podrá hacer a partir del momento en que recibe la notificación por parte de la Secretaria del Departamento, informándole que ya puede revisar los oficios dado que fueron verificados previamente por el Asistente Administrativo. Esta vista se muestra en la Figura 50. Figura 50. Lista de oficios listos a ser discutidos en Consejo de Escuela. Esta vista le permite al usuario generar la minuta (ver Anexo 24) correspondiente a los oficios que serán discutidos en el Consejo. 66 También el sistema ofrece la opción de completar los oficios con las resoluciones, esto es para indicar si un nombramiento fue aprobado o rechazado. Esta funcionalidad se realiza a través de la vista que tiene por nombre Completar Oficio con Resoluciones (ver Figura 51). Figura 51. Completar Oficio con Resoluciones. En esta vista, Figura 51, se muestra el reporte de los oficios según el parámetro de búsqueda que se haya colocado en el filtro señalado en la Figura 35, pero para completar los campos, se debe hacer click en la columna modificar, específicamente en la metáfora que allí representa la acción de completar. Al hacer click se llega a la vista de la Figura 52. 67 Figura 52. Completar Datos del Oficio. La Secretaria de Consejo de Escuela a través de este sistema puede indicar en la opción “Actualizar firma Director(a)”, que ésta acción se llevó a cabo. De este modo la Secretaria actualiza el estado del oficio y a través de la vista mostrada en la Figura 53, notifica al Asistente Administrativo que ya puede enviar las resoluciones del Oficio al Departamento Presupuesto. 68 Figura 53. Actualizar firma Director(a). De esta manera, se han mostrado todas las vistas y funciones que fueron implementadas dentro del Sistema de Gestión de Preparadores asociado a los Módulos concurso y nombramiento. La Capa Controlador Para la implementación de la esta capa se necesitó definir varios controladores, mencionados en párrafos anteriores. Estos controladores se diseñaron bajo el concepto que para interactuar con la base de datos remota, era necesario comunicarse con una capa intermedia, siendo esta la capa de servicios Web. Es por ello que se crean o desarrollan un conjunto de acciones encargadas de realizar peticiones e interpretar las respuestas obtenidas luego de interactuar con esta capa, con la particularidad de que algunas de estas acciones se implementaron y ubicaron en el archivo aplication_controller, debido a que existen acciones que son comunes para los otros módulos que forman parte del SGP-EC, como es el caso del módulo Retiro. La mayoría de las acciones que allí se encuentran son utilizadas para interpretar las respuestas que se obtienen de la comunicación entre los SW y los controladores, como resultado de las peticiones hechas por los usuarios a través de las vistas. Estas acciones se conocen como parser (analizador sintáctico). Cada analizador sintáctico está identificado según la operación que se necesite hacer. Los analizadores sintácticos se encargan de traducir la respuesta recibida de los SW empleando instrucciones propias de 69 Ruby que permiten extraer la data que es devuelta en formato XML, envuelta en el formato WSDL, para posteriormente colocarla en alguna de las clases definidas en la capa modelo, con el fin de poder manipularla en tiempo real, según sea el caso. Un ejemplo de ello se tiene con el analizador sintáctico denominado parsear_xml_oficios. El oficio es un documento común para los módulos que componen al sistema, por lo que se diseñó esta acción general para que los controladores de cada modulo tuviesen acceso a la misma. Los controladores desarrollados para los módulos concurso y nombramiento se denominan de este modo, y ellos también cuentan con la implementación de acciones utilizadas para “parsear”, además de contener las funciones encargadas de la lógica de negocios para estos procesos. Se decidió hacer esto de este modo porque se trataban de analizadores sintácticos que sólo eran del interés de estos controladores. También existen otros controladores que son para la implementación de la lógica de negocios común entre los módulos que conforman al SGP-EC. Estos controladores se denominan comun_controller y documento_controller. El controlador comun_controller se encarga de la lógica de negocio, que como lo dice su nombre es común entre los módulos existentes, por ejemplo se utiliza en el caso de obtener y procesar los resultados de las búsquedas configuradas por los filtros que se encuentran en los módulos del sistema, así como también cuando se requiere actualizar estados de documentos que se producen en el SGP-EC. Para el manejo y control de la generación de documentos dentro del SGP-EC se desarrolló un controlador llamado documento_controller, en él se encuentran las acciones relacionadas con la manipulación y control de documentos, actas entre otros. Este controlador es utilizado por los módulos que conforman el sistema, debido a que los documentos son el resultado tangible del procesamiento de cierta información que se le solicite al sistema y es común entre los módulos concurso, nombramiento y retiro. Por otro lado, el usuario estudiante, es una figura importante dentro del sistema, debido a que a partir de éste se desencadenan una serie de hechos significativos, que dan lugar a cierto flujo de actividades que añaden valor a las definidas dentro de los procesos concurso y nombramiento. Por lo que a este rol y más que todo a las acciones que se generan a partir de su interacción con el sistema, se decide desarrollar un controlador llamado estudiante_controller. Allí se encuentran las acciones encargadas de manipular y procesar la data y actividades llevadas a cabo dentro del sistema. Entre los controladores definidos para el sistema específicamente para los módulos mencionados anteriormente, se cuenta con el controlador sesion_controller. Este controlador se le puede considerar como el corazón del sistema, porque es en el donde se encuentra toda la lógica de negocios encargada de procesar las actividades que tiene asignado un usuario dentro del sistema. Además, en este controlador se manejan las variables de sesión, entre estas la cédula del usuario, útil para el manejo del log de 70 transacciones, la Escuela a la cual pertenece el usuario, esto es porque el sistema se ideó para ser implantado y ser usado en toda la Facultad de Ciencias, la asignatura del coordinador que está ingresando al sistema, entre otras variables que son de interés dentro de los procesos. De este modo concluye la descripción de la capa controlador, tomando en consideración los aspectos más relevantes para el desarrollo de la lógica de negocio del SGP-EC, y en específico la relacionada con los módulos concurso y nombramiento. 2.1.4. Fase de Transición El sistema desarrollado se ideó tomando en cuenta que al culminarse se integraría con la base de datos que se diseño para alimentar la aplicación. Por lo que durante el desarrollo se utilizaron estructuras que simulan los XML como respuesta ante una solicitud que se realiza desde el sistema, las acciones encargadas de procesar y enviar peticiones al servidor de aplicaciones, para efectos de esta versión, se encuentran comentadas dentro del código. En consecuencia, al momento de ponerlo operativo solo habría que eliminar los comentarios. Actualmente, para realizar las pruebas, la operatividad del sistema es simulada a través de archivos XML, los cuales representan las respuestas enviadas desde el servidor de datos como si en realidad se estuviesen realizando peticiones, estos XML simulan la respuesta o solicitud hecha por cada funcionalidad que compone al SGP-EC, asociada a los módulos concurso y nombramiento. Es importante acotar que este sistema sirve como fuente a otros sistemas, por ejemplo, el sistema de Manejo Presupuestario de Preparadores, el cual a partir del momento en que el documento denominado Oficio se marque con el estatus “Enviado a Presupuesto”, podrá ser procesado por ese sistema. Cuando la base de datos esté operativa, será necesario obviar todos los casos de pruebas que se prepararon para simular la operatividad del SGP-EC. 71 CONCLUSIONES El uso de la metodología OpenUp fue apropiado debido a que se trató de un proyecto de desarrollo de mediano alcance y de pocos participantes, lo que permitió desde un principio determinar el objetivo preciso del proyecto. Así como también, identificar los requerimientos y restricciones, permitiendo un análisis exhaustivo para determinar lo que se necesitaba en la construcción del Sistema de Gestión de Preparadores de la Escuela de Computación (SGP-EC). Ruby on Rails (framework RoR), como herramienta de desarrollo, resulto ser de gran ayuda ya que facilitó la implementación de funcionalidades complejas que quizás en otros lenguajes hubiesen requerido un mayor tiempo. Mientras se construyó el prototipo, el uso de la herramienta brindó un conocimiento enriquecedor en cuanto al desarrollo de aplicaciones Web, al descubrir y conocer las bondades que puede ofrecer este framework debido a su simplicidad. Se pudo evidenciar que es un framework que no requiere de un profundo conocimiento en cuanto a la programación orientada a objetos, sin embargo es un requisito el conocer la filosofía que maneja esta programación. Algo ventajoso sobre este framework es que existe mucha documentación al respecto, lo que permite brindar apoyo en el caso que sea requerido y está muy bien estructurado lo que facilita la organización del código. Con relación al uso de SOAP para la definición de los servicios Web, RoR facilitó la implementación de los analizadores sintácticos conocidos como Parser, haciendo menos complicado la obtención e interpretación de las respuestas que se reciben al invocar los servicios. Para poder utilizar RoR se empleó el entorno de programación (IDE) NetBeans 6.0 que permitió editar el código de una forma más avanzada, al facilitar la interacción con el lenguaje. Con el apoyo de la metodología utilizada y las tecnologías empleadas en el desarrollo del sistema se alcanzó el objetivo general planteado en este TEG, obteniendo como resultado la implementación de los módulos de gestión de concurso y gestión de nombramiento del SGP-EC. Sin embargo, cabe destacar, que la implementación de los mismos depende del desarrollo de los servicios Web para lograr la comunicación del sistema con la base de datos y así implantar el SGP-EC. Es por ello que se desarrolla una solución preliminar en donde se muestra como es el flujo de trabajo simulando la comunicación con la base de datos. Durante el desarrollo del sistema se llevaron a cabo una serie de actividades que contribuyeron satisfactoriamente con la elaboración del presente Trabajo Especial de Grado. Entre dichas actividades son importante mencionar las siguientes: elaboración de una planificación para el desarrollo de las principales funcionalidades del sistema en cuanto a los procesos de concurso y nombramiento, contribución con la definición del 72 modelo de la base de datos, refinación de los requerimientos funcionales y no funcionales del sistema, realización de pruebas con los usuarios en la medida en que se desarrollaba la aplicación, documentación sobre la herramienta de desarrollo empleada, validación de la metodología en la medida en que se construía el sistema, implementación de todo lo relacionado al desarrollo de los módulos de gestión de concurso y gestión de nombramiento, interacción estrecha con los desarrolladores de los otros módulos que conforman el SGP-EC, entre otras actividades. 73 RECOMENDACIONES Se espera que el aporte del SGP-EC, sea la agilización de los tiempos de respuesta y ejecución de los procesos, así como también permitir que se obtengan resultados de una forma eficiente, proveyendo en tiempo real, de forma efectiva y controlada la información relacionada con la gestión de preparadores. El producto de este trabajo especial de grado puede ser considerado como modelo para la implantación de un sistema de información automatizado para la gestión de preparadores en las diferentes escuelas de la Facultad de Ciencias, así como también para las demás facultades de la Universidad Central de Venezuela. A pesar de que el sistema está delimitado a la escuela de computación, el desarrollo y arquitectura del mismo se hizo pensando en su escalabilidad. Es recomendable que si se lograse establecer este sistema en otras escuelas se realicen suficientes pruebas con los usuarios que permitan validar los resultados que se obtengan. Otras recomendaciones a considerar podrían ser las siguientes: • Es necesario que para poner en práctica la implantación del SGP-EC se culmine con el desarrollo de los servicios Web de la gestión de concurso y gestión de nombramiento. • Para futuras mejoras se puede considerar agregar al sistema desarrollado, específicamente al módulo de gestión de nombramiento la opción de generar reportes en los cuales el jefe del departamento y el coordinador puedan conocer la resolución final (Aprobado, Negado o Diferido) del oficio emitida por el Consejo de Escuela. • Otra recomendación sería la de tratar de aplicar un motor de Workflow ya sea haciendo uso del código ya desarrollado o intentar desarrollar el SGP-EC aplicando el motor de Workflow. 74 REFERENCIAS [AB 2009] Aguilar Iris, Bellet Isabelle. Prototipo para la automatización de la Gestión de Preparadores de la Escuela de Computación. Módulos Retiro y Administrativo. Seminario. Escuela de Computación, Facultad de Ciencias, Universidad Central de Venezuela, (2009) [Asocalidad] Asocalidad. Disponible en: HTTP://www.asocalidad.org.ve/diccionario-g.htm#gestionprocesos [Ben 2003] Benavides Luis, J. Gestión por Procesos. Disponible en: HTTP://www.calidadlatina.com/pub/036-JUL-03.pdf [Cer 2002] Cerami Ethan. Web Services Essential. O'Reilly Media, Inc., (2002) [Dia] Díaz T Manuel D. Web Services. Introducción y Escenarios para su Uso. Disponible en: HTTP://www.moisesdaniel.com/es/wri/wsepsu.htm [DummyonRails a] Arquitectura de Rails. Disponible en: HTTP://dummyonRails.lacoctelera.net/post/2007/06/08/arquitectura-Rails [DummyonRails b] Estructura de una aplicación Rails. Disponible en: HTTP://dummyonRails.lacoctelera.net/post/2007/06/08/estructura-una- aplicacion-Rails [EPF] Eclipse Process Framework Project. OpenUp. Disponible en: HTTP://epf.eclipse.org/wikis/OpenUp/index.htm [Fer 2005] Fernández L. Javier D. Sistemas organizacionales. Teoría y práctica. Editorial Universidad Cooperativa de Colombia (Educc), Bogotá, (2005). [FM 2008] Flanagan David, Matsumoto Yukihiro. The Ruby programming language. O'Reilly Media, Inc., (2008). [Hib 2005] Hibbs Cliff. Rolling with Ruby on Rails. Disponible en: HTTP://oreilly.com/Ruby/archive/Rails.html [GR 2009] Gouveia Rosa, Ruiz Isaura. Prototipo para la automatización de la Gestión de Preparadores de la Escuela de Computación. Módulos Concurso y Nombramiento. Seminario. Escuela de Computación, Facultad de Ciencias, Universidad Central de Venezuela, (2009) [Kioskea] Kioskea. Disponible en: HTTP://es.kioskea.net/contents/entreprise/workflow.php3 75 [LD 2004] Laborda C. Leopoldo, De Zuani Elio. Fundamentos de Gestión Empresarial. Valletta Ediciones SRL, Buenos Aires, (2004). [Mue 2004] Muehlen Michael. Workflow - based Process Controlling. Logos, (2004). [New 2002] Newcomer Eric. Understanding Web services: XML, WSDL, SOAP, and UDDI. Pearson Education, Inc., (2002). [Per 2007] Pérez F de V. José. A. Gestión por procesos. ESIC Editorial, Madrid, (2007). [Pixelware] Pixelware. Disponible en: HTTP://www.pixelware.com/workflow-flujo-trabajo.htm [Rails] Rails Project. Disponible en: HTTP://guides.RubyonRails.org/getting_started.html [STK 2002] Snell James, Tidwell Doug, Kulchenko Pavel. Programming Web services with SOAP. O'Reilly Media, Inc., (2002). [Sua] Suárez J. Edgar. Convenciones y Nomenclatura. Disponible en: http://mexicoonrails.com.mx/articles/convenciones-y-nomenclatura [TH 2006] Tate Bruce, Hibbs Curt. Ruby on Rails: up and running. O'Reilly Media, Inc., (2006) [Wil 2007] Williams Justin. Rails solutions: Ruby on Rails made easy. Friends for ED, (2007). [W3C] World Wide Web consortium - W3C. Disponible en: HTTP://www.w3c.es/Divulgacion/GuiasBreves/ServiciosWeb#uso [Zor 2007] Zorrilla C. Unai. Modelando procesos de negocio con Workflow Foundation. Krasis Press, (2007). 76 ANEXOS 77 Anexo 1 Plantilla Visión, parte I. 78 Anexo 2. Plantilla Visión continuación, parte II. 79 Anexo 3. Plantilla Visión, parte III. 80 Anexo 4. Planificación del Proyecto, parte I. Fase It e ra c ió n Objetivo Fecha Inicio y Fecha Fin Duración Estimada Inicio 1 Ø Levantamiento de información. Ø Elaboración y revisión del Workflow. Ø Identificar los riesgos del Sistema. 15/09/2008 20/10/2009 45 días 2 Ø Validación de la información con los usuarios. Ø Identificar las funcionalidades del sistema con el Workflow y los usuarios. Ø Revisión del Workflow. 27/10/2008 02/12/2008 85 días 3 Ø Revisión del Workflow. Ø Revisión de las funcionalidades. 26/01/2009 19/03/2009 45 días Elaboración 1 Ø Definición de la arquitectura. Ø Definición de los Servicios Web. Ø Definición del estilo a utilizar en las vistas del Sistema. Ø Definición de la estructura de las vistas. Ø Definición del estándar de programación. Ø Definición de las funcionalidades comunes con el módulo Administrativo y Retiro. 02/03/2009 27/03/2009 15 días 2 Ø Mitigar los riesgos esenciales, y producir un calendario de las actividades mediante el documento Work Item List. Ø Distribución de las funcionalidades que desarrollará cada integrante del equipo. 30/03/2009 02/04/2009 4 días 3 Ø Realización de pruebas para conocer el lenguaje de programación Ruby y el Framework Rails. Ø Elaboración de las vistas sin funcionalidad, aplicándole el estilo seleccionado. 01/04/2009 20/04/2009 18 días Construcción 1 Ø Comenzar a desarrollar la funcionalidad de las vistas del Sistema. 16/04/2009 28/08/2009 92 días 81 Fase It e ra c ió n Objetivo Fecha Inicio y Fecha Fin Duración Estimada. Ø Mostrar a los tutores y stakeholder o actores del sistema lo que se tiene listo del Sistema. Ø Mejorar la usabilidad del Sistema. Ø Finalizar el desarrollo del producto. 01/09/2009 09/10/2009 29 días Transición 1 Ø Realizar la integración con el módulo Administrativo y Retiro. Ø Montar el Sistema en el ambiente de prueba. 13/10/2009 19/10/2009 6 días Anexo 5. Planificación del Proyecto, parte II. Anexo 6. Lista de Trabajos del Proyecto. 82 Número Nombre Servicio Web Descripción 00021 consultar_tramite_estudiante Dada la cédula de un estudiante, devuelve los trámites que tiene asociados para el periodo actual, por ejemplo un nombramiento. 00022 consultar_concursos_inscritos Devuelve los concursos en los que un estudiante se ha inscrito para el periodo actual 00023 consultar_correos_coordinadores Devuelve los correos de los coordinadores de una escuela. 00024 liberar_partida Consiste en actualizar el estatus de una partida a el de “Disponible” 00025 actualizar_concurso_desierto Cambia el estatus de un concurso a “Desierto” 00026 consultar_aspirante_resultado Dado el concurso y la cédula del participante, devuelve sus resultados, y si ha aceptado algún cargo en el período lectivo. 00027 actualizar_plazas_coordinador Actualiza el número de plazas que quedan disponibles para una asignatura. Por ejemplo, si una asignatura cuenta con 2 plazas para Preparador I y en el Concurso sólo se obtiene un ganador, entonces hay que guardar el registro de que a esa asignatura le queda sólo una plaza disponible para el semestre vigente. 00028 actualizar_incrementar_plaza Incrementa en uno (1) la partida I ó II que le corresponda a una asignatura. Cuando un estudiante es seleccionado ganador se resta esa partida para esa asignatura, pero si más adelante el estudiante rechaza el cargo, hay que incrementar en uno (1) la partida que se decremento en principio. 00029 consultar_concursos_abiertos Consulta los concursos abiertos para el período vigente. 00030 consultar_concursos_anteriores Consultar los concursos anteriores al período actual en los que haya participado un estudiante en específico. Anexo 7. Descripción de los servicios Web diseñados para el SGP-EC asociados a los módulos concurso y nombramiento, parte I. 83 Número Nombre Servicio Web Descripción 00031 actualizar_prepa_campo_obs Se actualiza el campo observaciones del preparador. Esto sucede cuando es necesario generar un aval o solicitud de excepción para el nombramiento de dicho estudiante y se desea colocar la justificación de su nombramiento. 00032 consultar_planilla_concurso Consultar los datos personales de un estudiante, como nombre, cédula, dirección, correo electrónico, teléfono y semestre que estudia. 00033 consultar_campo_obs_prepa Trae la información relacionada a las observaciones hechas por el coordinador para la justificación del nombramiento de un estudiante que no cumpla con los requisitos estipulados. 00034 actualizar_fecha_ingreso Se actualiza el campo fecha ingreso del preparador. La cual corresponde a la fecha en la que el estudiante comienza a desempeñar su cargo como preparador. 00035 eliminar_preparador Se elimina el preparador, dado la cédula y la asignatura, para el período vigente. Esto ocurre cuando un estudiante es seleccionado ganador pero rechaza el cargo. 00036 consultar_detalle_oficio Devuelve el detalle de los estatus y roles por los cuales ha pasado el oficio. 00037 actualizar_campo_requisito_fisico_oficio Es utilizado para llevar el control de cuál estudiante ha de ser nombrado, puesto que ya entregó los requisitos físicos necesarios para el trámite de nombramiento. 00038 consultar_docentes Suministra la información relacionada a los docentes de una escuela y la asignatura según el período vigente. Devolviendo el nombre y la cédula de cada uno de los docentes. Se utiliza para elegir al jurado de un concurso. Anexo 8. Descripción de los servicios Web diseñados para el SGP-EC asociados a los módulos concurso y nombramiento, parte I. 84 Número Nombre Servicio Web Descripción 00039 consultar_jefe_departamento Provee el nombre y la cédula del Jefe de Departamento de una escuela en particular. Es utilizado para asignar a ese usuario como jurado de los concursos de su Escuela. 00040 actualizar_partidas se encarga de actualizar las partidas presupuestaria asignándola al nuevo preparador. 00041 consultar_preparador Indica si un ganador del concurso es preparador actualmente. 00042 solicitar_correo_coordinadores Devuelve los correos de los coordinadores de asignatura según la escuela a la que pertenezcan. 00043 consultar_existe_concurso_abierto Indica si un coordinador en particular tiene algún otro concurso abierto durante el semestre en curso. Anexo 9. Descripción de los servicios Web diseñados para el SGP-EC asociados a los módulos concurso y nombramiento, parte II. Número Nombre Servicio Web Descripción 00003 crear_oficio_detalle Crea el detalle del oficio, es decir, a través de este SW se registra quien lo está procesando, cuando lo hizo y por dónde se encuentra el oficio. 00004 actualizar_preparador Servicio encargado de la actualización de algunos campos en la tabla preparador 00010 consultar_usuarios_del_sistema Devuelve los usuarios del sistema 00011 consultar_actividades_usuario Devuelve las actividades asignadas a un usuario consultando la tabla usuario_actividad y actividad. 00012 consultar_actividades_sistema Devuelve todas las actividades del sistema 00015 consultar_combo Devuelve la lista de uno de los catálogos del sistema para llenar los combos, ya sea el estatus, asignatura y período. Anexo 10. Descripción de los servicios Web diseñados para el SGP-EC asociados a los módulos Retiro y Administrativo, parte III. 85 Anexo 11. Pantalla para el jefe del departamento. Le permite visualizar los resultados obtenidos en el concurso de una asignatura en particular. Anexo 11. Consultar Ganadores de los Concursos. Anexo 12. Pantalla para el coordinador esta pantalla le permite consultar la programación docente, para verificar la cantidad de preparadores necesarios para su asignatura según sea el caso. Anexo 12. Consultar Programación Docente. 86 Anexo 13. Anuncio del Concurso. 87 Anexo 14. Detalle Planilla Concurso. 88 Anexo 15. Acta de Preparadores. 89 Anexo 16. Aval o Solicitud de Excepción. 90 Anexo 17. Detalle del Oficio. Anexo 18. Concursos Anteriores. 91 Anexo 19. Oficio Nombramiento. 92 Anexo 20. Consultar histórico del estudiante. Anexo 21. Generar constancia preparadores. 93 Anexo 22. Constancia de Preparadores. 94 Anexo 23. Consultar Oficios Enviados a Presupuesto. 95 Anexo 24. Minuta Complementaria. INTRODUCCIÓN CAPÍTULO 2. MARCO APLICATIVO Visto el diagrama del Workflow, en las Tablas 6 y 7 se muestra la especificación del proceso concurso, y en las Tablas 8 y 9, Las tablas que contemplan la descripción de los demás servicios Web definidos para los módulos concurso y nombramiento puede s REFERENCIAS