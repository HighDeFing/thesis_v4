Universidad Central de Venezuela Facultad de Ciencias Escuela de Computación Gestor de Objetos de Aprendizaje de Contenidos Abiertos de Tipo Práctico para el Apoyo a la Asignatura Algoritmos y Programación. Trabajo Especial de Grado presentado ante la ilustre Universidad Central de Venezuela Por el bachiller Osner Rebete Guillermo C.I. 20.483.015 Tutores: Prof. Antonio Silva Prof. Iván Flores Caracas, mayo de 2013 iii ACTA Quienes suscriben, miembros del Jurado designado por el Consejo de Escuela de la Escuela de Computación, para examinar el Trabajo Especial de Grado representado por el Bachiller: Osner Rebete Guillermo CI: 20.483.015, con el título: “Creación de un Gestor de Objetos de Aprendizaje de Contenidos Abiertos de Tipo Práctico para el Apoyo de los Laboratorios de Algoritmos y Programación”, a los fines de optar al título de Licenciado en Computación, dejan constancia de lo siguiente: Leído como fue, dicho trabajo por cada uno de los miembros del Jurado, se fijó el día 27 de mayo del 2013, a las 10:00am para que su autor defendiera en forma pública, lo que se hizo en la Sala I de la Escuela de Computación, mediante una presentación oral de su contenido, luego de lo cual respondió a las preguntas formuladas. Finalizada la defensa pública del Trabajo Especial de Grado, el jurado, sin hacerse solidario con la opinión de los autores, decidió aprobarlo con una nota de _____ puntos. En fe de lo cual se levanta la presente Acta, en Caracas a los 27 días del mes de mayo del año 2013. ______________________ Prof. Antonio Silva Tutor ______________________ Prof. Iván Flores Tutor ______________________ Profa. Yosly Hernández Jurado ______________________ Prof. Franklin Sandoval Jurado ii DEDICATORIA Hay personas que no escuchan razones, son ilógicas y egoístas... Aun así ámalas. Si haces el bien, la gente te acusará de tener motivos ocultos y egoístas... Aun así, haz el bien. Si alcanzas el éxito conseguirás enemigos verdaderos y falsos... Aun así alcanza el éxito. El bien que hagas hoy, será olvidado mañana... Aun así, haz el bien. La honradez y la franqueza te harán vulnerable... Aun así, sé honesto y franco. Lo que tomó años construir, podría ser destruido en instantes... Aun así, construye. Muchas personas necesitan ayuda, pero quizás te ataquen si las ayudas... Aun así ayúdalas. Da al mundo lo mejor que tengas y quizás te paguen mal... Aun así, da lo mejor que tengas (Madre Teresa de Calcuta) A Dios, A mi familia Amigos y personas allegadas. iii AGRADECIMIENTOS Antes que nada quiero agradecer a Dios por todo lo que he recibido en diversos aspectos de mi vida, por ayudarme a encontrar el camino y a mantener la fe siempre y permitirme alcanzar todo lo que me he propuesto. Sin duda quiero agradecer a mis padres y hermanos quienes estuvieron allí ofreciéndome su apoyo incondicional en todo momento, les debo quien soy. A mis tutores Antonio Silva e Iván Flores quienes creyeron en mí, me apoyaron y me guiaron para la realización del presente trabajo. A Yosly Hernández quien me ayudó mucho con sus correcciones y sugerencias. Gracias por su ayuda y dedicación. A mi tía y a mí cuñada Lidsay quienes siempre tuvieron palabras de ánimo así como apoyo incondicional. A aquellos profesores, compañeros, amistades y conocidos que me permitieron crecer como persona, reconocer mis errores y nunca olvidar mis raíces. A esta gran casa de estudios que me permitió crecer y a la que perteneceré siempre. Gracias UCV por los mejores momentos que viví en cada uno de tus espacios. Un día soñé con ser UCVista y al momento de escribir estas líneas me di cuenta que sin importar las circunstancias alcancé mi sueño, nada es imposible, Os. iv RESUMEN La asignatura Algoritmos y Programación, es dictada en la Escuela de Computación de la Facultad de Ciencias de la Universidad Central de Venezuela, en ésta se dictan conceptos fundamentales sobre el diseño e implementación de algoritmos. Actualmente no cuentan con una herramienta para crear OA de contenidos abiertos (OACA) de tipo práctico que permita a los estudiantes de la asignatura acceder a estos recursos y además codificar algoritmos y poder probarlos, el presente trabajo muestra la implementación de la solución este problema; un gestor de OACA; el cual permitirá al Grupo Docente de AyP crear OA de Tipo Práctico utilizando patrones tecno- pedagógicos preestablecidos, además, les permitirá complementar los laboratorios de esta asignatura ya que los estudiantes podrán acceder a los recursos y codificar los algoritmos, e incluso estos podrán ser evaluados a través de un examen creado por el docente, que éste podrá corregir posteriormente; las tecnologías utilizadas son Software Libre, con la finalidad de que se puedan agregar o mejorar sus funcionalidades; se utilizó el framework Ruby on Rails para desarrollar la aplicación web, y PostgreSQL para el soporte de la información. Éste gestor cuenta con tres módulos fundamentales: un módulo para la gestión de OACA, uno para la gestión de los exámenes y un módulo para la gestión de los usuarios. PALABRAS CLAVES: Objetos de Aprendizaje, Gestor, Patrones Tecno- Pedagógicos. v ÍNDICE GENERAL DEDICATORIA ................................................................................................ ii AGRADECIMIENTOS ..................................................................................... iii RESUMEN ...................................................................................................... iv ÍNDICE GENERAL .......................................................................................... v ÍNDICE DE FIGURAS ................................................................................... viii ÍNDICE DE TABLAS ....................................................................................... x ÍNDICE DE GRÁFICOS .................................................................................. xi INTRODUCCIÓN ............................................................................................ 1 CAPÍTULO I. PLANTEAMIENTO DEL PROBLEMA ....................................... 3 1.1 El Problema ....................................................................................... 3 1.2 Justificación ....................................................................................... 4 1.3 Objetivo General ................................................................................ 5 1.4 Objetivos Específicos......................................................................... 5 1.5 Alcance .............................................................................................. 5 1.6 Metodología de desarrollo ................................................................. 5 CAPÍTULO II. MARCO CONCEPTUAL .......................................................... 7 2.1 Definición de Objetos de Aprendizaje (OA) ....................................... 7 2.1.1 Características ................................................................................ 8 2.1.2 Clasificación de OA ........................................................................ 8 2.1.3 Ventajas........................................................................................ 12 2.1.4 Estándares para los Objetos de Aprendizaje................................ 12 2.1.4.1 Estándares de catalogación y empaquetado ............................ 14 2.1.4.1.1 Dublín Core (Dublín Metadata Core Element Set, Conjunto Básico de Elementos Metadatos de Dublín) .............................................. 15 2.1.4.1.2 Estándar IEEE-LOM (Learning Object Metadata, Metadatos de Objeto de Aprendizaje) .............................................................................. 17 vi 2.1.4.1.3 Estándar SCORM (Sharable Content Object Reference Model, Modelo de Referencia de Objetos de Contenido Compartible) .................. 19 2.1.5 Patrón Pedagógico ....................................................................... 21 2.1.6 Clasificación de los patrones pedagógicos ................................... 22 2.1.7 Patrón tecno-pedagógico ............................................................. 23 2.1.8 Catálogo de Patrones “Objetos de Aprendizaje para Programación” 24 2.1.9 Actividades de Prácticas de un Proceso de Formación en Línea . 28 2.1.10 Evaluación del Aprendizaje .......................................................... 30 2.1.11 Tipos de Evaluación ..................................................................... 30 2.2 Objetos de Aprendizajes de Contenidos Abiertos (OACA) .............. 32 2.3 Gestor de OA ................................................................................... 32 2.3.1 Comparación entre herramientas de autor CourseLab, Exelearning y Glo Maker v2 .......................................................................................... 33 2.4 Tecnologías de desarrollo web ........................................................ 35 2.4.1 HTML5 .......................................................................................... 35 2.4.2 Ruby on Rails ............................................................................... 36 2.4.3 CSS (Cascading Style Sheets, hojas de estilo en cascada) ......... 36 2.4.4 JavaScript ..................................................................................... 36 2.4.5 jQuery ........................................................................................... 37 2.4.6 Licencias Creative Commons ....................................................... 37 CAPÍTULO III. MARCO APLICATIVO ........................................................... 40 1.1 Etapa 1: Análisis de los Requisitos .................................................. 41 1.1.1 Tormenta de ideas ........................................................................ 41 1.1.2 Análisis de aplicaciones existentes .............................................. 41 1.1.3 Perfil de Usuario ........................................................................... 45 1.1.4 Lista de requerimientos funcionales y no funcionales .................. 45 1.2 Etapa 2: Análisis del sistema ........................................................... 47 1.2.1 Modelo Casos de Uso .................................................................. 47 vii 1.2.2 Modelo Objeto del Dominio .......................................................... 52 1.2.3 Prototipo ....................................................................................... 54 1.2.4 Patrones de Interacción ................................................................ 55 1.3 Etapa 3: Prototipaje ......................................................................... 59 1.3.1 Tecnologías empleadas ............................................................... 59 1.3.2 Licenciamiento .......................................................................... 62 1.3.3 Guías de Estilo ............................................................................. 62 1.3.4 Evaluación Heurística ................................................................... 67 1.4 Etapa 4: Entrega .............................................................................. 70 1.4.1 Pruebas de aceptación ................................................................. 70 1.4.2 Resultados de la prueba de aceptación ....................................... 74 CAPÍTULO IV. RESULTADOS ..................................................................... 84 4.1 Página de inicio del Gestor de OACA .............................................. 84 4.2 Página de la galería de OACA ......................................................... 85 4.3 Página de créditos del Gestor de OACA .......................................... 86 4.4 Módulo de gestión de OACA ........................................................... 87 4.4.1 Patrones tecno-pedagógicos ..................................................... 92 4.4.2 OACA creados utilizando el Gestor de OACA ........................... 94 4.5 Módulo de gestión de usuarios ........................................................ 96 4.6 Módulo de gestión de exámenes ..................................................... 97 CONCLUSIONES ......................................................................................... 99 REFERENCIAS BIBLIOGRÁFICAS ............................................................ 101 ANEXO ....................................................................................................... 111 Patrones de Tarea ................................................................................... 111 Especificación de los Casos de Uso ........................................................ 132 viii ÍNDICE DE FIGURAS Figura 1 Etapas de la metodología de desarrollo AgilUs .............................. 40 Figura 2. Interfaz de la aplicación de Exelearning ........................................ 42 Figura 3. Interfaz de la aplicación Glo Maker V2 .......................................... 43 Figura 4. Interfaz de la aplicación CourseLab ............................................... 44 Figura 5. Nivel 0, diagrama de casos de uso ................................................ 48 Figura 6. Nivel 1, diagrama de casos de uso ................................................ 50 Figura 7. Nivel 2, diagrama de casos de uso ................................................ 51 Figura 8. Modelo de Objetos del Dominio ..................................................... 53 Figura 9. Prototipo del Editor de OA ............................................................. 54 Figura 10. Lenguaje de Patrones del Gestor de OACA ................................ 56 Figura 11. Colores primarios seleccionados ................................................. 62 Figura 12. Botones de la aplicación web ...................................................... 63 Figura 13. Botones de la aplicación .............................................................. 63 Figura 14. Enlaces de la aplicación web ....................................................... 63 Figura 15. Tootilps en la aplicación web ....................................................... 64 Figura 16. Estructura de la interfaz del editor de OACA ............................... 64 Figura 17. Estructura de interfaz del perfil de usuario ................................... 65 Figura 18. Estructura de popups de la aplicación web .................................. 66 Figura 19. Modelo del Cuestionario parte I .................................................. 72 Figura 20. Modelo del Cuestionario parte II .................................................. 73 Figura 21. Vista de la página de inicio del Gestor de OACA ......................... 84 Figura 22. Vista de la galería de OA ............................................................. 85 Figura 23. Vista de los créditos del gestor de OACA .................................... 86 Figura 24. Vista del listado de OA ................................................................. 87 Figura 25. Vista del editor de OA .................................................................. 88 Figura 26. Vista del formulario para editar los metadatos del OA ................. 89 Figura 27. Vista de la página para visualizar los OA ..................................... 90 ix Figura 28. Herramienta para codificar y probar programas .......................... 91 Figura 29. Página de Título del Patrón para crear OA sobre programación . 93 Figura 30. Página de Concepto del Patrón para crear OA sobre programación ............................................................................................................... 93 Figura 31. Página de Ejemplo del Patrón para crear OA sobre programación ............................................................................................................... 94 Figura 32 Lab. 1 Introducción al Ambiente Linux .......................................... 95 Figura 33. Lab. 3 Estructuras Condicionales ................................................ 95 Figura 34. Vista del módulo de gestión de usuarios ..................................... 96 Figura 35. Vista de edición de un examen de un OA .................................... 97 Figura 36. Vista de corrección de los exámenes OA .................................... 98 x ÍNDICE DE TABLAS Tabla 1. Comparación entre herramientas de autor CourseLab, Exelearning y GloMaker V2 .......................................................................................... 33 Tabla 2. Patrón de dominio ........................................................................... 57 Tabla 3. Patrón de Sistema .......................................................................... 57 Tabla 4. Problemas más resaltantes encontrados con la Evaluación Heurística ............................................................................................... 68 xi ÍNDICE DE GRÁFICOS Gráfico 1 Gráfico de Torta: Crear un OA se realiza de una forma intuitiva. .. 74 Gráfico 2 Gráfico de Torta: Insertar imágenes, textos y vídeos dentro del OA se realiza de una forma práctica. ........................................................... 75 Gráfico 3 Gráfico de Torta: Completar el formulario de los metadatos del OA se realiza de forma clara. ....................................................................... 76 Gráfico 4 Gráfico de Torta: Crear el examen para el OA es intuitivo. ........... 77 Gráfico 5 Gráfico de torta: Los pasos para visualizar un OA son claros. ...... 78 Gráfico 6 Gráfico de torta: Los pasos para corregir y visualizar las notas de los exámenes son claros. ....................................................................... 79 Gráfico 7 Gráfico de torta: una vez creado el OA, el OA resultante cumplió con sus expectativas. ............................................................................. 80 Gráfico 8 Gráfico de torta: las pantallas o interfaces de la aplicación son usables. .................................................................................................. 81 Gráfico 9. Gráfico de torta: Los mensajes de ayuda (tooltips) mostrados en los botones y enlaces son apropiados. .................................................. 82 Gráfico 10. Gráfico de torta: Estaría dispuesto a recomendar esta aplicación. ............................................................................................................... 83 1 INTRODUCCIÓN Los Objetos de Aprendizaje (OA) son contenidos informativos que se encuentran organizados con un fin formativo, su diseño se encuentra orientado a la educación virtual u otros entornos virtuales para el aprendizaje y, además, se encuentran sujetos a estándares de catalogación para facilitar su almacenamiento, ubicación y distribución digitalmente (Castillo Cortés, 2009). El Grupo Docente de la asignatura Algoritmos y Programación (AyP) de la Facultad de Ciencias perteneciente a la Universidad Central de Venezuela, desea crear OA de Tipo Práctico que permitan complementar los laboratorios de la asignatura y evaluar el rendimiento de los estudiantes; la Clasificación Pedagógica de los OA establecida por ASTD y SmartForce (2003) señala que un OA de Tipo Práctico es un objeto destinado al autoaprendizaje, con una alta interacción del aprendiz, además, contempla que la simulación de codificación permite a los aprendices practicar y aprender sobre técnicas de programación. El presente Trabajo Especial de Grado (TEG) tiene como objetivo principal desarrollar un gestor de Objetos de Aprendizaje de Contenidos Abiertos (OACA), que permita crear OA de tipo práctico para el apoyo de los laboratorios dictados en la asignatura Algoritmos y Programación (AyP); ésta herramienta será Software Libre; estará orientada al Grupo Docente de AyP y docentes de otras áreas; serán necesarios conocimientos básicos de ofimática para el uso de ésta. Las funcionalidades están orientadas al desarrollo de un OA pequeño, como es un OA de Tipo Práctico definido anteriormente. 2 Este TEG se encuentra estructurado en cuatro capítulos; el primer capítulo abarca El problema, la justificación, el Objetivo General, los Objetivos Específicos el alcance y la metodología de desarrollo seleccionada; el segundo capítulo está compuesto por conceptos, características, estructura, clasificación y ventajas de los OA, adicionalmente, se define lo que es un gestor de OA, se describen y comparan tres herramientas de autor para crear estos recursos, así como algunas tecnologías para el desarrollo de aplicaciones web; el tercer capítulo describe la metodología de desarrollo de software utilizada para el desarrollo de la aplicación, AgilUs. Son llevadas a etapas que comprende la metodología: Análisis de Requisitos, Análisis del Sistema, Prototipaje y Entrega; el quinto capítulo refleja los resultados obtenidos; por último se encuentran las conclusiones obtenidas, las referencias y los anexos. 3 CAPÍTULO I. PLANTEAMIENTO DEL PROBLEMA A continuación se describe El Problema, adicionalmente, se encuentran la Justificación y, los Objetivos General y Específicos planteados por el investigador. 1.1 El Problema En la Escuela de Computación de la Facultad de Ciencias de la Universidad Central de Venezuela, se dicta la asignatura Algoritmos y Programación; en ésta se estudian conceptos fundamentales de programación, técnicas para el diseño de algoritmos y su implementación en lenguajes de programación; el Grupo Docente de esta asignatura desea crear OA de Tipo Práctico para apoyar los laboratorios, con la finalidad de que los estudiantes tengan acceso a éste y puedan codificar y probar los algoritmos que necesiten implementar, en tal sentido, se investigaron algunas de las herramientas de autor existentes. Luego de examinar las herramientas Glo Maker V2, CourseLab y Exelearning, se pudo observar que éstas poseen ciertas limitaciones; entre ellas podemos mencionar que Glo Maker V2 genera recursos que emplean Macromedia Flash, el cual no es Software Libre; CourseLab, sólo funciona bajo plataforma Windows y su versión gratuita es limitada en algunas de sus funciones; y por último Exelearning, ésta no permite personalizar la apariencia de los recursos que genera; la Clasificación Pedagógica de los OA establecida por ASTD y SmartForce (2003) señala que un OA de Tipo Práctico es un objeto destinado al autoaprendizaje, con una alta interacción del aprendiz, además, contempla que la simulación de codificación permite a los aprendices practicar y aprender sobre técnicas de programación, sin embargo ninguna de las herramientas de autor examinadas permite la 4 creación de Objetos de Prácticas para la simulación de codificación tampoco poseen alguna herramienta adicional que permita codificar algún programa. Debido a esta problemática, el investigador se formula la siguiente interrogante: ¿Cómo desarrollar una herramienta que permita crear, almacenar y acceder OACA de Tipo Práctico? 1.2 Justificación El desarrollo de este gestor de OACA es necesario ya que al examinar de las herramientas de autor para crear OA como Glo Maker V2, Exelearning y Courselab; se pudo apreciar que algunas de éstas poseen ciertas limitaciones como el licenciamiento de los recursos generados, el aprovechamiento de los patrones tecno-pedagógicos y la imposibilidad para crear OA de Tipo Práctico donde se puedan codificar y probar algoritmos. El Grupo Docente de AyP desea apoyar los laboratorios de la asignatura con OA de Tipo Práctico con la finalidad de que los estudiantes tengan acceso a éste y puedan codificar y probar los algoritmos que necesiten implementar, sin embargo, debido a las limitaciones antes planteadas, no cuentan con una herramienta que permita generar éste tipo de OA, por lo cual no podrán apoyar los laboratorios. Esta solución busca ofrecer al Grupo Docente de AyP una herramienta de código abierto que les permita generar OA de Contenidos Abiertos de Tipo Práctico con patrones tecno- pedagógicos, cumpliendo con requerimientos de facilidad de uso. 5 1.3 Objetivo General Desarrollar un gestor de Objetos de Aprendizaje de Contenidos Abiertos de tipo práctico para el apoyo de los laboratorios dictados en la asignatura Algoritmos y Programación. 1.4 Objetivos Específicos  Determinar las funcionalidades que proveerá el Gestor de OACA.  Diseñar el Gestor de OACA seleccionando las tecnologías y herramientas que serán empleadas para el desarrollo de éste.  Implementar el Gestor de OACA y los patrones tecno-pedagógicos que tendrá por defecto.  Realizar pruebas y validaciones del Gestor de OACA. 1.5 Alcance Este proyecto se enfocó en el desarrollo de un gestor de OACA, éste está dividido en 3 módulos principales, el primero que es denominado el módulo de gestión de usuarios permite la autenticación, creación, eliminación, modificación y exportación de estos; el segundo módulo, el de gestión de OACA, permite la creación, edición, eliminación, reutilización, visualización y descarga de los OACA; el último y tercer módulo permite la gestión de los exámenes, es decir, la creación, edición, corrección, visualización de notas y llenado de estos. 1.6 Metodología de desarrollo Se propuso utilizar la metodología de desarrollo AgilUs, la cual es descrita por Acosta (2011), ésta hace énfasis en la usabilidad así como en la necesidad de crear software usable, es iterativo e incremental y pone el 6 mayor peso del desarrollo en la consecución de la usabilidad. Esta metodología contempla 4 etapas, las cuales se describen a continuación:  Requisitos: en ésta se realiza el análisis global del problema que se desea solucionar, para ello se estudian los productos similares existentes, se genera un perfil de usuario y se establece la lista de requerimientos a desarrollar. Esta etapa es crucial para el desarrollo del software debido a que un mal análisis de los requisitos desencadenaría un software que no cumple con las necesidades del usuario.  Análisis: en ésta es donde se lleva el análisis de la solución que se desea desarrollar, para tales fines se emplean Diagramas de Casos de Uso así como Modelo de Objetos del Dominio bajo el Lenguaje de Modelado Unificado (UML), su propósito es definir las funcionalidades que proveerá el producto de software a desarrollar.  Prototipaje: en esta etapa es dónde se implementa un prototipo rápido de la interfaz de usuario partiendo de los patrones de interacción, éste va evolucionando hasta convertirse en el producto final. Posteriormente se genera la lista de estilos y se realizan las evaluaciones de usabilidad acordes a la etapa que serían las evaluaciones heurísticas y las listas de comprobación.  Entrega: se realizan las pruebas al sistema con el fin de certificar que la aplicación desarrollada es un software usable y sin errores, por último se pone en producción la aplicación. 7 CAPÍTULO II. MARCO CONCEPTUAL En este capítulo, se estudiarán algunos conceptos fundamentales sobre OA, adicionalmente, se estudiarán algunas tecnologías para el desarrollo de aplicaciones web. 2.1 Definición de Objetos de Aprendizaje (OA) Aunque no existe un consenso sobre la definición de este término, un OA es un contenido informativo que se encuentra organizado con un fin formativo. Está sujeto a estándares de catalogación que permiten facilitar su almacenamiento, ubicación y su distribución digitalmente. Su diseño está orientado específicamente en la educación virtual o en otros entornos virtuales para el aprendizaje. Se caracterizan por la granularidad de los contenidos, su descripción a través de metadatos y la interoperabilidad, con el fin de que pueda ser usado en distintas plataformas con las mismas funcionalidades y ofreciendo transparencia al usuario (Castillo Cortés, 2009). Wiley (2000) señala que los OA son elementos de un nuevo tipo de instrucción que está basada en el computador y además está fundamentada en el paradigma de la programación orientada a objetos. La idea fundamental de los OA es que pueden ser construidos pequeños componentes de instrucción por parte de los diseñadores instruccionales, y éstos pueden ser reutilizados reiteradas veces en diferentes contextos de estudio. Aunado a ello el autor L’Allier (1997) sugiere que los OA no son más que pequeñas estructuras independientes que poseen un objetivo, una actividad y un procedimiento de evaluación (conocido como información interna) Y se le añade una información externa conocida como metadatos para su posterior catalogación. 8 2.1.1 Características Según Aproa (2005) los OA deben poseer ciertas características que garanticen su eficiencia, las mismas son mostradas a continuación: a) Auto-contenido: por si solo el OA debe ser capaz de dar el cumplimiento al objetivo propuesto. b) Interoperable: debe contar con una estructura basada en un lenguaje de programación así como contar con un estándar internacional de interoperabilidad. De forma que garantice su utilización en plataformas con distintos ambientes de programación. c) Reutilizables: que el OA pueda ser utilizado por distintos educadores en diferentes contextos de enseñanza. d) Durable y Actualizable: debe estar respaldados con un repositorio y se vayan adaptando a las necesidades del entorno según esta demande. El OA debe evitar la obsolescencia. e) Fácil acceso y manejo para los usuarios del OA: todos los usuarios deben de estar incluidos y ser tomados en cuenta para que puedan usar el OA. f) Modulares y secuenciales: la modularidad permitirá una mejor relación con otros OA. g) Breves: se debe alcanzar el objetivo final con la mínima cantidad de recursos invertidos. 2.1.2 Clasificación de OA Existen dos formas de clasificar los OA, la primera corresponde a una taxonomía, establecida por Wiley (2000), que lo hace en función de la composición y las posibles combinaciones que se puede hacer con ellos al igual que sus características en términos de número de elementos, 9 reusabilidad y grado de dependencia. Y la segunda en función de su uso pedagógico, ésta fue establecida por ASTD y SmartForce (2003), haciendo énfasis en ésta clasificación los OA pueden ser de la siguiente forma:  Objetos de Instrucción: Son objetos principalmente destinados al apoyo del aprendizaje, el aprendiz juega un rol más bien pasivo. Posee las siguientes sub- categorías: o Lección: combinan textos, imágenes, videos, animaciones, preguntas/ejercicios para crear aprendizaje interactivo. o Workshops: son eventos de aprendizaje en los cuales un experto interactúa con los aprendices. o Seminarios: son eventos en los cuales expertos hablan directamente a los aprendices usando una combinación de audio, video, presentaciones de diapositivas e intercambio de mensajes. o Artículos: son objetos basados en breves textos. o White-papers: son objetos basados en texto, pero con información breve acerca de tópicos complejos. o Casos de estudio: son objetos basados en textos, corresponden a un análisis profundo de una implementación de un software, experiencias pedagógicas, entre otros.  Objetos de colaboración: Son objetos que son desarrollados para la comunicación en ambientes de aprendizaje de tipo colaborativo. Puede ser sub- clasificado de la siguiente manera: o Ejercicios Monitores: son objetos en los cuales se produce un intercambio entre aprendices y un monitor guía experto. 10 Los aprendices requieren realizar tareas que son asignadas por el monitor que demuestren niveles de conocimientos en áreas complejas. o Chats: le permiten a los aprendices compartir experiencias y conocimientos. El intercambio de mensajes es síncrono. o Foros: permiten el intercambio de mensajería asíncrona, la traza de la conversación es llevada en el tiempo. Los foros pueden ser creados por temas específicos. o Reuniones online: se pueden compartir desde documentos hasta computadores para un trabajo en conjunto.  Objetos de prácticas: Son objetos destinados fundamentalmente para el autoaprendizaje, con una alta interacción del aprendiz. Su sub- clasificación es la siguiente: o Simulación juegos de roles: el estudiante interactúa con un ambiente virtual y usualmente cuenta con una amplia variedad de recursos para conseguir su objetivo. o Simulación de software: son diseñados para permitir a los estudiantes practicar tareas complejas asociadas a productos de software específicos. o Simulación de hardware: le permiten a los aprendices adquirir conocimientos respecto a determinadas tareas que se encuentran asociadas al desarrollo de hardware. o Simulación de codificación: permiten a los aprendices practicar y aprender sobre técnicas complejas en la codificación de un programa. o Simulación conceptual: ayudan a los aprendices a relacionar conceptos a través de ejercicios prácticos. 11 o Simulación modelo de negocios: son objetos que permiten al aprendiz el control y manipulación de un rango de variables en una compañía virtual con la finalidad de aprender cómo se administra una situación real así como las implicaciones de sus decisiones. o Laboratorios online: es utilizado para la enseñanza de ciencias básicas o tópicos relativos a tecnologías de la información. o Proyectos de investigación: se encuentran asociados a actividades complejas que promuevan a los aprendices a comprometerse a través de ejercicios en áreas específicas.  Objetos de evaluación Tienen como objetivo conocer el nivel de conocimiento que posee un aprendiz. La sub-clasificación de estos objetos es la siguiente: o Pre evaluación: están destinados a medir el nivel de conocimiento que tiene un determinado aprendiz antes de comenzar el proceso de aprendizaje. o Evaluación de proficiencia: permiten medir si un aprendiz ha asimilado determinados contenidos que permitan deducir una habilidad. o Test de rendimiento: son utilizados para medir la habilidad de un aprendiz en una tarea muy particular. o Test de certificación: generalmente son utilizados al final de un programa orientado a la certificación, son utilizados en dos modos:  Estudio: el objeto es diseñado para que maximice el aprendizaje entregando un listado de los errores. 12  Certificación: el objeto es diseñado de forma similar a un examen final. 2.1.3 Ventajas Los OA alcanzan su máxima expresión cuando tienen de apoyo las tecnologías digitales a su alcance y sobre todo la plataforma web. Con estos elementos completamente integrados buscan apoyar el proceso de enseñanza asistida y aprendizaje, promover la distribución del conocimiento a gran escala y su construcción, impulsando de esta manera en todos los sectores sociales acentuado una adecuada apropiación de la tecnología educativa. Se busca que la población expuesta ante el OA acredite su aprendizaje y para ello se le ofrece un ambiente para que desarrolle libremente una actividad donde pueda incluir los elementos que internalizó en la teoría y la experimentación. Además un factor sumamente importante es socialización de los aprendizajes, esta se produce también cuando se comparten las experiencias de aprendizaje o cuando en grupos o parejas se realizan las actividades propuestas por el OA, las cueles van desde cuestionarios, pasando por autoevaluación y llegando a formas amenas como lo son los juegos didácticos. 2.1.4 Estándares para los Objetos de Aprendizaje Los metadatos ofrecen descripción codificada acerca de determinados datos o recursos, lo que permite que éstos queden identificados y listos para su recuperación en diversos contextos (web, repositorios, entre otros.) con la finalidad de que sean utilizados y que permita su reutilización en diversos entornos según sus necesidades específicas. Los metadatos permiten tener un lenguaje de descripción global, sin embargo pueden surgir distintos 13 inconvenientes como la interoperabilidad sintáctica y semántica, esto se refiere a la compatibilidad y la portabilidad de las distintas descripciones asociadas a los distintos objetos o recursos, como la independencia de barreras técnicas, culturales y de lenguaje que en cierto modo limitan reutilización, su intercambio o su difusión en distintos ámbitos (Instituto Nacional de Estadística, Geografía e Informática de México, 2003). Según López, García, y Pernías Peco (2005) y el Instituto Nacional de Estadística, Geografía e Informática de México (2003) existen diversos organismos públicos así como entidades de índole privada que se han abocado a procesos de elaboración para esquemas de metadatos con la finalidad de reducir las limitaciones que mencionadas anteriormente. Estos esquemas pueden ser definidos como un conjunto de reglas y elementos que son la base o la estructura que permiten constituir del modelo de metadatos. Existen tres tipos de esquemas de metadatos: ● Estándares: son esquemas normalizados, normas de jure (que son aprobadas por organismos oficiales de normalización como ISO, ANSI, entre otros) y que además son adoptadas por distintos sectores afectados. Un ejemplo de estas normas es el estándar Dublín Core (ISO 15836:2003) o también la norma para OA provista por IEEE (IEEE1484.12.1-2002) que fue aprobada por ANSI el 14 de noviembre de 2002. ● Especificaciones: son esquemas aprobados como normas de facto (normas desarrolladas por un conjunto de compañías y que adquiere importancia debido a las condiciones del mercado). Su utilidad radica en hacer llegar a los distintos órganos de normalización, las necesidades de los diversos sectores que se encuentran implicados o afectados. Por ello puede servir, de base para la elaboración de normas, como es el caso del ADL (SCORM). 14 ● Implementaciones: también conocido como perfiles de aplicación, se define como esquemas transformados en atención a las necesidades específicas de determinados sectores o comunidades de usuarios. Éstos recogen diversos elementos de uno o varios estándares y/o especificaciones, y son implementados a través de la aplicaciones de restricciones de uso (número de elementos o repeticiones de los mismo) o también añadiendo extensiones (nuevos elementos o vocabularios/espacios de nombres). Es importante destacar que estos esquemas determinan la sintaxis y la semántica. Cuando se hace referencia a la sintaxis, se quiere decir que establecen los elementos así como el orden de los mismos, el formato del etiquetado o el codificado de los metadatos. Por otra parte la semántica, ofrece recomendaciones para el uso de los distintos elementos, vocabularios especializados o los significados que se pueden adquirir en determinados dominios (como el caso de los perfiles de aplicación). Los metadatos pueden ser incorporados a la descripción de los recursos u objetos de dos formas, una forma interna (a través de la interacción respectiva del código fuente del recurso) y una forma externa (mediante el uso de elementos de descripción en un archivo externo como un archivo XML por ejemplo, o muy bien registros en una base de datos que almacena la dirección web del recurso). 2.1.4.1 Estándares de catalogación y empaquetado Los estándares de catalogación y empaquetado, son estándares muy importantes en el proceso de ensamblaje y distribución de recursos instrucciones. En e-learning los más destacados son el estándar SCORM 15 (Sharable Content Object Reference Model, Modelo de Referencia de Objetos de Contenido Compartible) así como el LOM (Learning Object Metadata, Metadatos de Objeto de Aprendizaje). 2.1.4.1.1 Dublín Core (Dublín Metadata Core Element Set, Conjunto Básico de Elementos Metadatos de Dublín) Según Jiménez (1999) este proyecto tiene un ámbito internacional, es promovido por OCLC (Online Computer Library Center, Centro en Línea de Biblioteca por Computador), y NCSA (National Center for Supercomputer Applications, Centro Nacional para Aplicaciones de Supercomputadora), su objetivo principal es la creación de un conjunto de elementos de datos que permitan describir los documentos electrónicos con la finalidad de facilitar su búsqueda así como su recuperación. Ese conjunto debe ser establecido de forma tal que tanto los autores como los editores de los documentos en Internet tengan la posibilidad de crear sus propios registros de metadatos sin necesidad de poseer determinada información. Está compuesto por un conjunto mínimo de elementos para facilitar la recuperación de la información, son 15 elementos de datos y tiene como punto a favor que el diseño es muy intuitivo por lo que los proveedores de la información pueden codificar sus documentos al mismo tiempo que estos son creados. Los elementos ponen más énfasis en el acceso y recuperación de la información más que en la descripción, por ello se centraron en describir propiedades intrínsecas al recurso tales como autor, materia, actualización entre otras. Otro aspecto es que se basó en el principio de la extensibilidad por ello cada grupo específico puede ampliar al conjunto de elementos básicos para adaptarlo a sus necesidades respectivas, los 15 elementos que lo componen pueden ser observados a continuación: 16 1. Título 2. Autor o creador 3. Materias y palabras clave 4. Descripción 5. Editor 6. Otras contribuciones 7. Fecha 8. Tipo de recurso 9. Formato 10. Identificador del recurso 11. Fuente 12. Idioma 13. Relaciones 14. Alcance 15. Gestión de derechos El autor Hillmann (2003) agrega que Dublín Core es un estándar de metadatos que conlleva dos niveles: simple y cualificado. El nivel simple abarca los 15 elementos mencionados anteriormente, en cambio el cualificado agrega un nuevo elemento que es la audiencia y otro grupo de elementos de matización que son denominados cualificadores, los cuales permiten refinar la semántica de los elementos para que sean útiles para la recuperación y/o recuperación de recursos en Internet. Cuenta con tres principios que permiten entender cómo se debe pensar sobre la relación entre los metadatos con los recursos subyacentes que describen, estos principios son: 17 1. Uno a uno: en general los metadatos de este estándar describen una versión de un recurso en vez de asumir que una versión sustituye a otra. Los recursos son descritos como son sin asumir nada. 2. Simplificación: lo que se desea es que debería ser posible ignorar cualquier calificador y utilizar el valor como si estuviera sin cualificar. Se considera la cualificación solo para matizar no para extender el alcance semántico de una propiedad. 3. Valores apropiados: las mejores prácticas para los elementos particulares o cualificadores, pueden ser diferentes según el contexto. Un desarrollador no puede predecir siempre que será un computador el encargado de interpretar los metadatos, lo que impone ciertas restricciones en la forma en la que los metadatos son construidos sin embargo la necesidad de utilidad para la localización o recuperación debería tenerse en cuenta. 2.1.4.1.2 Estándar IEEE-LOM (Learning Object Metadata, Metadatos de Objeto de Aprendizaje) Los autores Burgos, Galve, García y Sutil (2002) establecen que este estándar define un conjunto de elementos de meta-datos para ser utilizado en la descripción de recursos de aprendizaje. Incluye los nombres de los elementos, los tipos de datos al igual que la longitud de cada campo. IEEE- LOM define una estructura conceptual para los metadatos, requisitos de conformidad sobre cómo deben ser organizados de igual forma define como deben comportarse las aplicaciones sobre los mismos para que ésta pueda ser aceptada por el comité IEEE-LOM. Aunado a ello los autores Canabal, Sarasa y Sacristán (2005) señalan que las etiquetas están estructuradas en (09) categorías distintas: 18 ● General: agrupa la información general que describe un OA en su conjunto. ● Ciclo de Vida: describe la historia al igual que el estado actual que un OA, así como las entidades que han intervenido en su creación y evaluación. ● Meta-metadatos: describe el propio registro de metadatos. Describe como puede ser identificada una instancia de metadatos, quien la creo, como, cuando y con qué referencias. ● Técnica: describe los requisitos y características técnicas del OA. ● Uso Educativo: describe las características educativas y pedagogías del OA. Información didáctica esencial para agentes involucrados en una experiencia educativa de calidad. Como estudiantes, docentes, etc. ● Derechos: describe los derechos de propiedad intelectual y las condiciones de uso que aplican para el OA. ● Relación: permite describir las relaciones existentes en caso de que existan entre un uno o más OA. Para la definición de relaciones múltiples deben utilizarse varias instancias de esta categoría. ● Anotación: permite proporcionar comentarios sobre la utilización pedagógica del OA de igual forma información sobre quien creo el comentario y cuando fue creado, lo que permite a los docentes compartir sus valoraciones sobre el OA, así como recomendaciones de diversa índole. ● Clasificación: describe donde se sitúa el OA sobre un sistema de clasificación concreto. Si se desean definir varias clasificaciones deben tenerse varias instancias de esta etiqueta. 19 2.1.4.1.3 Estándar SCORM (Sharable Content Object Reference Model, Modelo de Referencia de Objetos de Contenido Compartible) Según Bernández (2007) y Wojciech (2010) Es un conjunto de estándares y especificaciones que permite crear OA estructurados. Tiene como finalidad crear contenidos que puedan importarse dentro de sistemas de gestión de aprendizaje diferentes mientras que estos soporten el estándar SCORM. Es desarrollado por ADL (Advanced Distributed Learning, Aprendizaje Distribuido Avanzado) en conjunto con otras organizaciones y actualmente es el estándar más utilizado. SCORM es la unificación de varios estándares, de los cuales toma las características más destacadas de cada uno de ellos, de IMS-LOM (IMS Global Learning Consortium) que es una derivación del IEEE-LOM, recoge la descripción de cursos en XML como una forma para separar contenidos de presentación, de AICC (Aviation Industry CBT Committe) toma el mecanismo para el intercambio de información a través de API (Interfaz de Programación de Aplicaciones). Esta propuesta establece una serie de pasos que pueden ser seguidos para la implementación detallada de contenidos. Tiene como finalidad satisfacer ciertos requisitos para los OA, entre los que destacan: ● Accesibilidad, a través de tecnologías web por ejemplo. ● Adaptabilidad en función de las necesidades de las personas y las organizaciones ● Durabilidad, sin importar la evolución de la tecnología ● Interoperabilidad, para que los OA puedan ser utilizados por distintos tipos de plataformas. ● Reusabilidad, para que puedan ser reutilizados en distintas aplicaciones y/o contextos. 20 Esta especificación divide la tecnología e-learning en componentes funcionales, los dos componentes principales son: 1. LMS, lo considera como un software que consiste en un conjunto de funcionalidades diseñadas para poner a disposición, hacer seguimientos, entregar reportes y gestionar contenidos de aprendizaje. Por otra parte también da la posibilidad de visualizar el progreso e interacción de los aprendices. Sin embargo el estándar SCORM no especifica la funcionalidad dentro del LMS. 2. SCOs (Sharable Content Objects), hace referencia los OA reutilizables y estandarizados, los cuales son una combinación de “Asset”. Su objetivo principal es establecer un modelo de referencia estándar, para la creación de objetos de contenido formativo estructurados y facilitar su transferencia entre distintos sistemas para la gestión del aprendizaje. Esta especificación cuenta con tres componentes básicos: 1. Modelo de agregación de contenidos, que permite asegurar la coherencia en el formato y el conjunto de procedimientos referentes al almacenamiento, identificación, condicionamiento de intercambio y recuperación de contenidos. Es este modelo el que define la metadata del OA (LOM, Learning Object Metada), así como el esquema XML a emplear y el formato comprimido para el empaquetado de todos los ficheros. 2. Entorno de ejecución, se encarga de describir los requisitos que deben ser implementados por el sistema de gestión de aprendizaje (LMS, Learning Management System) para el trabajo con los contenidos. Es importante destacar que este entorno define una API, esta API define una forma estándar para la comunicación entre el sistema y el modelo de datos a ser empleado. 3. Modelo de Secuenciación y navegación, este modelo permite la presentación dinámica del contenido, también describe cómo deben 21 ser interpretadas las reglas de secuenciación introducidas por el desarrollador de contenidos y los eventos de navegación que son lanzados por el usuario o el sistema. Haciendo énfasis en el modelo de agregación de contenidos, este estándar define la sintaxis así como la semántica de los metadatos del OA, por lo que facilita la clasificación del mismo. Lo conforman más de sesenta (60) descriptores que se encuentran agrupados en un esquema conceptual de nueve (09) categorías, como los son: 1. General 2. Ciclo de vida 3. Meta-dato 4. Técnico 5. Educativo 6. Derechos 7. Relación 8. Anotación 9. Clasificación 2.1.5 Patrón Pedagógico Según Rodríguez (2009) describe un problema que se presenta con frecuencia en el proceso de enseñanza-aprendizaje, tiene como finalidad proponer una solución a ese problema, ya que ha sido demostrada su efectividad en contextos similares, de forma que la solución propuesta puede ser puede ser adoptada para problemas que sean semejantes. En general los problemas están relacionados con cualquier aspecto, momento o elemento del proceso como es el caso de la motivación de los aprendices, la selección de los contenidos o materiales, la secuencia de los mismos, la 22 selección de las actividades, la evaluación, el procedimiento de evaluación, entre otros. Los patrones pedagógicos serán presentados de forma que faciliten el aprendizaje a profesores o diseñadores que no son expertos; a través de la descripción del mismo. Están documentados en forma de plantilla y deben contener la descripción de los patrones con un mínimo de elementos genéricos como los listados a continuación:  Nombre del patrón: nombre o expresión corta significativa con respecto al contenido del patrón.  Problema: frase corta para describir el problema concreto de diseño y lo que hace el patrón para resolverlo.  Solución: describe el procedimiento de aplicación del patrón que permite alcanzar al objetivo diseñado. Es posible agregar una representación gráfica de los elementos así como las relaciones constitutivas del patrón, sin embargo no es indispensable. También es posible agregar la descripción de las ventajas y desventajas que conlleva usar el patrón. Es importante acotar que la correcta descripción del patrón pedagógico permitirá la correcta aplicación de acuerdo al problema que se aborda y al contexto. 2.1.6 Clasificación de los patrones pedagógicos Según Pedagogical Patterns Project (2008) los patrones pedagógicos, pueden ser agrupados en las siguientes categorías:  Aprendizaje activo: los patrones de este tipo están basados en un conjunto de actividades que involucran a los aprendices de forma activa. Éste patrón es construido utilizando algún problema en 23 particular que puede ocurrir en un entorno de enseñanza y que además maximice la atención del alumno por estar implicado en la resolución, o por sus experiencias, por su carácter real entre otros.  Aprendizaje experimental: se basa en lo que es necesario aprender a través de la experimentación o a través de las experiencias previas de los aprendices.  Enseñando desde diferentes perspectivas: se basan en el estudio de recursos educativos desde distintas perspectivas por parte de los aprendices, tratando problemas como: preparar al aprendiz para el mundo real, hacer uso de distintas perspectivas por pares (por ej. Usando el personal profesional de empresa). Aunado a ello el autor Zapata (2011) añade dos categorías adicionales las cuales son:  Aprendizaje autónomo  Aprendizaje basado en problemas 2.1.7 Patrón tecno-pedagógico Un patrón en tecno-pedagógico describe un problema que ocurre o se presenta con frecuencia en la enseñanza en un entorno virtual, propone una solución a tal problema en el que ha demostrado su efectividad en contextos similares, de modo que esa solución pueda ser aprovechada sin que su aplicación sea exactamente coincidente con las anteriores, al ser contextualizada. Estos patrones pueden tener un doble enfoque: tecnológico y pedagógico. En definitiva, permite resumir y comunicar la experiencia acumulada en la enseñanza-aprendizaje por medios telemáticos (Rodríguez Jiménez J. , 2009). 24 2.1.8 Catálogo de Patrones “Objetos de Aprendizaje para Programación” Los autores Jones y Boyle (2007) establecieron un Catálogo de Patrones de OA para la Programación a través del análisis de OA existentes que demostraron tener mucho éxito, éstos pueden ser observados a continuación:  Nuevo concepto de programación o Contexto: Los aprendices con frecuencia encuentran dificultades para programar. Si no son comprendidos los conceptos se dificulta el progreso en el aprendizaje de la carrera. o Problema: para aprender un nuevo concepto de programación y ser capaz de aplicarlo en un programa, es importante comenzar desde una posición familiar para el aprendiz. Una vez cómodo con el concepto, se pueden dar ejemplos de programación en el lenguaje que se escoja. Tales ejemplos deben ser explicados con detalle de forma que el aprendiz pueda empezar a aplicar el nuevo concepto en sus propios programas. Por último el aprendiz necesita poder practicar escribir programas propios, pero para que pueda ganar confianza es útil brindar un entorno sencillo en el cual el aprendiz pueda practicar sus conocimientos antes de enfrentar las complejidades de un entorno de programación real. o Solución: usar una secuencia de páginas multimedia para implementar cada una de las etapas de aprendizaje descritas anteriormente. 25  Página de título o Contexto: el aprendiz está por aproximarse a un recurso de aprendizaje que no ha visto previamente. o Problema: es útil que el aprendiz conozca lo que viene para que se pueda preparar y reciba las instrucciones sobre cómo usar el recurso. o Solución: la página de título brinda un espacio para un título y una descripción del recurso.  Página de concepto o Contexto: se le presentará al aprendiz un nuevo concepto referente a programación. o Problema: los conceptos de programación son abstractos y pueden ser difíciles de comprender para el aprendiz. Introducir un concepto similar de la vida cotidiana o de un tema que sea familiar para el alumno puede ayudar a introducir el nuevo concepto. o Solución: ofrecer un recurso que describe el concepto familiar y luego lo relaciona con el concepto de programación.  Página de ejemplo o Contexto: el aprendiz ahora está familiarizado con el concepto, sin embargo no está familiarizado con su implementación particular en el lenguaje de programación. o Problema: el aprendiz desconoce cómo se usará el nuevo concepto en el lenguaje que está aprendiendo. o Solución: se ofrece un ejemplo de implementación del concepto en el lenguaje que está aprendiendo junto a un 26 comentario y una animación que muestra lo que sucede cuando se ejecuta el código de ejemplo.  Página de explicación detallada o Contexto: cuando se está aprendiendo un nuevo concepto de programación es muy importante poder visualizar un programa ejemplo y tener su operación explicada de forma interactiva. o Problema: para ilustrar adecuadamente el concepto o estructura de programación es útil ejecutar o correr el ejemplo. En una clase guiada por un docente esto se lograría fácilmente, sin embargo para el auto-estudio un recurso dedicado necesita ser diseñado de manera que el aprendiz pueda controlar el ritmo y progreso a través del proceso de “ejecución”. o Solución: utilizar la metodología “multi-frame”: donde se muestre un programa ejemplo, o un fragmento del programa se muestra en un cuadro dónde su ejecución se simula resaltando cada sección del código en el orden de ejecución. En la segunda ventana el efecto de la ejecución del programa se demuestra a través de una animación, y en la tercera y última ventana se brinda una explicación de la ejecución. La animación ilustra el código que se está ejecutando resaltando las partes apropiadas del código que se están ejecutando. Al mismo tiempo, la animación también se fracciona y en la ventana de texto se van mostrando cada paso para describir la acción de la línea en particular o sección del código del programa. De esta forma 27 existen tres partes de la página que transcurren a través de una sincronización: el código, el comentario y la animación.  Página de práctica o Contexto: el alumno está ahora familiarizado con el concepto y cómo se implementa en el lenguaje de programación que está aprendiendo. A pesar de ello, los alumnos deben poder escribir sus propios programas lo que habitualmente precisa de mucha atención al detalle debido a que un simple error de escritura puede causar un error. o Problema: los programadores aprendices a menudo encuentran que los estrictos requisitos de sintaxis son un obstáculo para la comprensión. Errores de sintaxis hacen que el programa se vuelva inútil lo que puede acarrear frustración. Esa frustración así como el tiempo necesario para la corrección de errores de sintaxis no tienen estrictamente que ver con el aprendizaje del nuevo concepto, pero reduce la efectividad de la experiencia de aprendizaje. o Solución: brindar un método simple para crear un programa sintácticamente correcto sin la necesidad de escribir un programa real. Esto evita el problema de los errores de sintaxis. Los aprendices podrán estar seguros de haber entendido el nuevo concepto y estarán en posición para crear sus propios programas. 28 2.1.9 Actividades de Prácticas de un Proceso de Formación en Línea El autor González (2005) señala que para poder incorporar interactividad a las unidades de aprendizaje, debe ser posible integrar elementos que permitan controlar y verificar el progreso de un determinado aprendiz. Las actividades a plantear pueden ser de dos tipos, dependiendo de si el proceso formativo cuenta o no con el soporte y seguimiento de un tutor o docente. Existen dos tipos de actividades: 1) Actividades auto-formativas: son aquellas que no requieren del seguimiento o supervisión de un tutor. El alumno puede realizarlas de forma individual y el sistema es el encargado de revisar y presentar los resultados al participante, estas actividades pueden ser:  Secuencias dirigidas (aprendizaje auto guiado): no hay ninguna interacción con el usuario. Los contenidos son presentados al aprendiz de forma predefinida, sea de forma aleatoria o por una preestablecida por el creador de la actividad.  Secuencias guiadas por el propio alumno (aprendizaje autodidacta): permiten al aprendiz escoger los contenidos que desea visualizar. La secuencia puede ser guiada o parcial y pueden ser impuestas ciertas restricciones a forma de prerrequisitos.  Secuencias adaptativas: el sistema es capaz de decidir la forma de secuenciar los contenidos de acuerdo a las características y preferencias del alumno. 29 Las preguntas más comunes que pueden ser incluidas en procesos auto formativo de acuerdo a los estándares son las siguientes:  Identificación lógica  Selección Múltiple (basadas en texto, imagen, audio)  Respuesta Múltiple (basadas en texto, imagen, audio)  Selección Múltiple (con múltiples imágenes y opciones basadas en deslizadores)  Orden de objetos (basadas en texto e imagen)  Rellenar campos vacíos múltiples  Respuestas cortas  Números  Grupos Lógicos 2) Actividades abiertas de tipo individual o colaborativo: Estas actividades no cuentan con una secuenciación, están pensadas para ser utilizadas en procesos de formación en dónde el proceso de corrección y evaluación está previsto a ser llevado a cabo por parte del docente. Aunque no cuentan con un proceso de secuenciación, deben contar con una adecuada planificación así como estructura de forma que permita su comprensión y proceso de realización o desarrollo por parte de los aprendices. Este tipo de actividades deben contar con una clara especificación que abarque los elementos que identifican claramente el tipo de actividad y los objetivos que se requieren cobrar por parte de los aprendices. En consecuencia en cada actividad deberá tenerse en cuenta incorporar características o elementos que faciliten su desarrollo como el título, la fecha de 30 comienzo y culminación, objetivos, lecturas recomendadas, instrucciones, entre otros. 2.1.10 Evaluación del Aprendizaje La evaluación es un proceso sistemático en el que se juzga la calidad o mérito de algo a partir de una determinada información, consiste en comparar los resultados del aprendizaje de los estudiantes con objetivos previamente establecidos. No sólo se centra en los resultados sino en el proceso de enseñanza, por lo que tiene relevancia cómo se ha llevado a cabo tal proceso. La evaluación puede ser tanto información cuantitativa como cualitativa, objetiva como subjetiva (Medina y Verdejo, 2008). 2.1.11 Tipos de Evaluación Según Medina y Verdejo (2008) existen cuatro tipos de evaluación que se encuentran relacionadas y son mostradas a continuación:  Evaluación para la ubicación: o Ayuda a determinar la posición del estudiante en una secuencia instruccional al igual que el modo de instrucción que más le beneficia. o Está relacionada con establecer qué actitudes, conocimientos destrezas y habilidades posee el estudiante que son prerrequisitos para el aprendizaje, antes de iniciar la instrucción. o Normalmente se realiza al comienzo de una unidad o curso.  Evaluación diagnostica o Incluye un proceso detallado para la identificación de las causas que explican la raíz de las dificultades y errores recurrentes en el aprendizaje. 31 o Se identifican las fortalezas y cualidades de los estudiantes de forma que se facilite la formulación de un plan de ayuda remediativa. o Puede ocurrir en cualquier momento de la secuencia instruccional, no todos los estudiantes tienen que ser sometidos a una evaluación diagnostica.  Evaluación formativa o Es utilizada para dar seguimiento, así como revisar el progreso del aprendizaje para realizar cambios o ajustes durante la instrucción. o Tiene como finalidad principal la toma de decisiones respecto a las alternativas de acción y dirección apropiadas a través del proceso instruccional (asignación de tareas especiales, repaso de lecciones, saltar a otro objetivo, continuar con un procedimiento o cambiarlo). o Una de sus funciones es proveer retro comunicación continua con el maestro y con el estudiante sobre sus logros y errores a fin de orientar el aprendizaje hacia los resultados esperados. o Es necesario que sea recabada continuamente información detallada sobre el desarrollo de la instrucción y del aprendizaje de los estudiantes. o Se realiza a lo largo del proceso instruccional y puede ser realizado en cualquier momento del mismo.  Evaluación sumativa o sumaria o Define la forma en la que se juzga el logro de los fines propuestos en la instrucción. o Sirve como base para certificar el dominio, asignar notas o determinar promociones. 32 o Puede realizarse al finalizar un segmento instruccional extenso, como una unidad, un capítulo, un curso, semestre, etc. 2.2 Objetos de Aprendizajes de Contenidos Abiertos (OACA) Son OA que pueden ser libremente utilizados, reusados, adaptados y compartidos en otros contextos. Los contenidos abiertos aportan a los OA valores agregados como es el caso de la libertad y adaptabilidad en contextos de enseñanza, mientras que un contenido abierto podría ser considerado como un OA, no todos los OA pueden ser considerados como contenido abierto debido a que no todos disponen de la libertad requerida para tales fines. Estas nuevas posibilidades dan cabida a que pueda haber un aumento en la calidad de los contenidos en línea debido a que los docentes o instructores pueden elaborar recursos, editar recursos existentes y/o mejorarlos (Wiley, 2007). 2.3 Gestor de OA Según (Rengarajan, 2001) es un sistema basado en web que es utilizado para crear, aprobar, publicar, administrar y almacenar recursos educativos y cursos en línea. Los principales usuarios son los diseñadores instruccionales que utilizan los contenidos para estructurar los cursos, los profesores que utilizan los contenidos para complementar su material de clase e incluso los alumnos en algún momento pueden acceder a la herramienta para desarrollar sus tareas o completar sus conocimientos. Los contenidos usualmente se almacenan como objetos descritos e identificables de forma única. 33 2.3.1 Comparación entre herramientas de autor CourseLab, Exelearning y Glo Maker v2 Se investigó sobre las herramientas de autor Exelearning, CourseLab y Glo Maker V2, a partir de esta información se elaboró un cuadro comparativo donde destacan las diversas características a forma de comparación de las herramientas de autor examinadas, el cual se puede apreciar en la Tabla 1. Tabla 1. Comparación entre herramientas de autor CourseLab, Exelearning y GloMaker V2 Exelearning CourseLab Glo Maker V2 Disponible en varios idiomas. Disponible en inglés. Disponible sólo en inglés. No posee patrones pedagógicos. No posee patrones pedagógicos. Posee dos patrones pedagógicos y un modo libre. Gratuito Versión Gratuita Limitada Gratuito Exporta en formato HTML, texto plano, paquete SCORM Exporta en formato HMTL o CD-ROM, paquetes SCORM y AICC, permite publicación en Internet Los OA pueden ser accedidos desde Internet o desde la computadora. Posee estilos visuales para los recursos generados sin embargo no se pueden personalizar los estilos Se puede personalizar la apariencia. Posee estilos visuales predeterminados que no pueden ser personalizados. 34 Exelearning CourseLab Glo Maker V2 visuales. No se pueden cambiar las fuentes, ni sus tamaños, ni colores. Tampoco se pueden cambiar los tamaños de los elementos. Si es posible cambiar las fuentes, el tamaño e incluso el color. Se puede cambiar la fuente, el tamaño y color. Se pueden cambiar los tamaños de los elementos. No posee plantillas para estructurar el contenido. No posee plantillas para diagramar el contenido. Posee plantillas para diagramar el contenido. Los sitios son generados en HTML. Genera un ejecutable. Los sitios son generados en Flash, que no es software libre. Es multiplataforma Sólo funciona en el sistema operativo Windows. Es multiplataforma porque utiliza Adobe Air sin embargo no es Software Libre. No permite la creación de OA de Tipo práctico que permitan codificar algoritmos y probarlos. No permite la creación de OA de Tipo práctico que permitan codificar algoritmos y probarlos. No permite la creación de OA de Tipo práctico que permitan codificar algoritmos y probarlos. Luego de realizar la comparación se pudo apreciar que Glo Maker V2 es la única herramienta que posee características que se encuentran orientadas a docentes o instructores con poca experiencia ya que provee dos patrones tecno-pedagógicos que facilitan el aprendizaje si no se es experto. 35 En cuanto a los recursos generados, Glo Maker V2 genera los recursos en formato Flash que no es software libre, CourseLab genera un ejecutable que sólo funciona en sistemas operativos Microsoft Windows y Exelearning los genera en formato HTML. Exelearning es la única herramienta que es software libre y que los recursos generados también lo son, sin embargo al igual que CourseLab carece de patrones tecno-pedagógicos predeterminados y carece de personalización de los estilos visuales. En conclusión existen ciertas carencias entre las funcionalidades que provee cada herramienta, y la gran limitante con respecto a recursos orientados a codificación de algoritmos, es que ninguna de las herramientas examinadas permite la creación de OA de Tipo práctico en los que se puedan realizar codificación de algoritmos y prueba de estos. 2.4 Tecnologías de desarrollo web En la actualidad existen diversas herramientas que permiten el desarrollo de aplicaciones web. En este apartado son descritas algunas de las tecnologías que permiten el desarrollo de una aplicación web. 2.4.1 HTML5 Según W3Schools (2012), el lenguaje de marcado de hipertexto o HTML es el lenguaje básico utilizado en la Internet para la definición de las páginas web. Son ficheros con caracteres ASCII, que pueden ser escritos con editores tanto básicos como avanzados. Los ficheros de texto de HTML contienen una serie de etiquetas, las cuales son interpretadas por el navegador. En particular HTML5 es la quinta revisión del lenguaje HTML 36 donde se añaden numerosas mejoras en cuanto a desarrollo y facilidades para que las páginas desarrolladas en este, sean indexadas con facilidad por los diferentes buscadores. 2.4.2 Ruby on Rails Según los autores Solano y Coles (2010), Ruby on Rails es un framework de aplicaciones Web de código abierto, que combina la simplicidad de desarrollar aplicaciones en tiempo real con la cantidad mínima de código y de configuración. Está basado en el principio DRY (Don’t Repeat Yourself, no lo hagas de nuevo). Esto es porque las definiciones en la programación deben realizarse una sola vez. Por otra parte también tiene otro principio fundamental que es “convención sobre configuración” lo que se refiere a que el programador sólo necesita definir aquellas configuraciones que no sean convencionales, es decir la que no se hereda de otras aplicaciones. 2.4.3 CSS (Cascading Style Sheets, hojas de estilo en cascada) Según la W3Schools (2010), CSS es un mecanismo sencillo que permite describir cómo va a ser mostrado un documento por pantalla, como va a ser formateado para su posterior impresión. Son utilizadas para dar estilos a documentos HTML así como XML, lo que permite separar el contenido de la presentación del mismo. 2.4.4 JavaScript Según Sánchez (2012) es un lenguaje para el desarrollo de aplicaciones cliente/servidor a través de Internet. Posee la característica de que es insertado dentro del mismo documento HTML, y no en un programa aparte. Reconoce eventos, que son acciones creadas por los usuarios, lo que 37 permite definir un sistema interactivo. Por ejemplo permite validar campos, verificar que esta información, como en el caso de los formularios sin necesidad de realizar ningún tipo de comunicación a través dela red. A través de código también es posible realizar reproducciones de archivos de audio, realizar modificaciones dinámicamente en la página, entre otros. 2.4.5 jQuery Es un framework para el lenguaje JavaScript, que permite programar sin preocuparse por la distinta variedad de navegadores existentes en el mercado, debido a que funciona con las plataformas más comunes. Ofrece una infraestructura para la creación de aplicaciones complejas del lado del cliente de forma sencilla. Facilita la creación de interfaces de usuario con efectos dinámicos o aplicaciones que hacen del uso de AJAX (Asynchronous JavaScript And XML, JavaScript asíncrono y XML) por ejemplo. El framework tiene licencia para usarlo en cualquier plataforma, personal o comercial de forma gratuita (Tamayo Yero, Lemes Báez, & Naranjo Ortiz, 2011). 2.4.6 Licencias Creative Commons Según Creative Commons (2013) estas licencias permiten compartir y reutilizar las obras bajo ciertas condiciones, el autor autoriza el uso de su obra, sin embargo, su obra continua estando protegida. Las cuatro condiciones de esta licencia son: 1) Reconocimiento: el autor permite copiar, reproducir, distribuir, comunicar públicamente la obra, realizar obras derivadas (traducción, adaptación, entre otros) y hacer de ella un uso comercial siempre y cuando se cite y se reconozca el autor original. 38 2) Sin obra derivada: el autor no permite generar obras derivadas. 3) No comercial: el autor no permite el uso comercial. 4) Compartir igual: el autor permite copiar, reproducir, distribuir, comunicar públicamente la obra, y generar obras derivadas pero bajo la misma licencia. Los seis tipos de licencias son: 1) Reconocimiento: el autor permite copiar, reproducir, distribuir, comunicar públicamente la obra, realizar obras derivadas (traducción, adaptación, etc.) y hacer de ella un uso comercial, siempre y cuando se cite y reconozca al autor original. 2) Reconocimiento - sin obra derivada: el autor permite copiar, reproducir, distribuir, comunicar públicamente la obra, y hacer de ella un uso comercial siempre y cuando siempre y cuando se cite y reconozca al autor original. No permite generar obra derivada. 3) Reconocimiento - sin obra derivada - no comercial: el autor permite copiar, reproducir, distribuir, comunicar públicamente la obra, siempre y cuando siempre y cuando se cite y reconozca al autor original. No permite generar obra derivada ni utilizarla con finalidades comerciales. 4) Reconocimiento - no comercial: el autor permite copiar, reproducir, distribuir, comunicar públicamente la obra, y generar obras derivadas siempre y cuando se cite y reconozca al autor original. No se permite utilizar la obra con fines comerciales. 5) Reconocimiento - no comercial - compartir igual: el autor permite copiar, reproducir, distribuir, comunicar públicamente la obra, y generar obras derivadas siempre y cuando se cite y reconozca al autor original. La distribución de las obras derivadas deberá 39 hacerse bajo una licencia del mismo tipo. No se permite utilizar la obra con fines comerciales. 6) Reconocimiento - compartir igual: el autor permite copiar, reproducir, distribuir, comunicar públicamente la obra, generar obras derivadas y hacer de ellas un uso comercial, siempre y cuando se cite y reconozca al autor original. Se permite la distribución de las obras derivadas pero únicas y exclusivamente con una licencia del mismo tipo. 40 CAPÍTULO III. MARCO APLICATIVO En el presente capítulo se presenta la metodología empleada para el desarrollo de la aplicación: AgilUs. También se mencionan y describen cada una de las etapas de desarrollo del Gestor de OACA. En la Figura 1 se pueden apreciar las cuatro (4) etapas que contempla esta metodología, los cuales se describen a continuación: Figura 1 Etapas de la metodología de desarrollo AgilUs Fuente: (Acosta, AgilUS: Un método ágil de desarrollo de software que incorpora la usabilidad, 2011) 41 1.1 Etapa 1: Análisis de los Requisitos En esta etapa se realizó el análisis global del problema a solucionar; para ello se empleó una tormenta de ideas, se realizó el análisis de las aplicaciones existentes, se determinó el perfil de usuario y se generó la lista de requerimientos funcionales así como no funcionales. 1.1.1 Tormenta de ideas La lluvia de ideas es una herramienta de creatividad empleada con frecuencia en el trabajo en grupo, de forma que el equipo se encarga de generar y clarificar una lista de ideas. Tiene como base que una idea da lugar a otra idea para conseguir una riqueza de información, es una herramienta simple pero efectiva, además, es un mecanismo para promover la participación (Winter, 2000). La tormenta de ideas fue utilizada al comienzo del proceso de desarrollo, se plantearon diversas características que serían deseables en una aplicación para gestionar OACA, éstas se vieron complementadas por las opiniones de los tutores y el investigador. 1.1.2 Análisis de aplicaciones existentes Se realizó un análisis entre las aplicaciones para desarrollar OA existentes en el mercado; para conocer las ventajas que ofrecen, emplearlas en el desarrollo de la aplicación web y minimizar las desventajas que éstas poseen; las aplicaciones analizadas a continuación fueron descritas en el segundo capítulo, éstas son: Exelearning, Glo Maker V2 y CourseLab. 42 a) Exelearning: Figura 2. Interfaz de la aplicación de Exelearning Algunas de las ventajas que se apreciaron al utilizar ésta aplicación fueron:  Ofrece plantillas denominadas iDivices, éstas permiten al usuario agregar nuevos elementos a los objetos de aprendizaje tales como: RSS (Really Simple Syndication, distribución realmente sencilla), Reflexiones, Galería de Imágenes, entre otros.  Permite apreciar cual es la estructura del OA, mostrando el orden de las páginas así como las subpáginas que lo conforman. Las desventajas que se observaron fueron las siguientes:  No se pueden modificar las plantillas, ni los colores de éstas.  Provee muy pocos mensajes de ayuda o tooltips al usuario.  No provee feedback a las acciones del usuario a medida que va realizando las acciones. 43 b) Glo Maker V2: Figura 3. Interfaz de la aplicación Glo Maker V2 Las ventajas que se pudieron denotar al utilizar ésta aplicación fueron:  Utiliza patrones tecno-pedagógicos, le permite al usuario escoger alguno de estos o crear su OA de forma libre.  Permite cambiar entre una vista de planeación donde establece cual será el contenido así como la estructura del OA, a otra vista denominada diseño que es para crear el OA como tal y una última vista que es para ver cómo será el resultado final y poder probarlo.  Provee mensajes de ayuda explicativos para ayudar a los instructores, así como ejemplos.  Provee plantillas para estructurar mejor la información. Las desventajas que se observaron fueron las siguientes:  Los recursos exportados utilizan elementos con Software Propietario.  Sólo está disponible en idioma inglés. 44  La vista de planeación carece de tooltips o elementos que permitan saber que se debe realizar allí. c) CourseLab: Figura 4. Interfaz de la aplicación CourseLab Las ventajas que se observaron al utilizar la aplicación fueron:  Provee un wizard para la creación de nuevos OA que permite escoger tanto la ubicación como la apariencia.  La estructura y la interfaz son muy parecidas a aplicaciones de Microsoft Office; las personas que utilizan éstas herramientas se sentirán familiarizadas reduciendo así la carga cognitiva.  Permite personalizar las plantillas.  Puede ser pre visualizado el resultado final.  Provee tooltips y mensajes de ayuda. Las desventajas que fueron apreciadas fueron:  La versión paga que cuenta con todas las funcionalidades tiene un costo muy elevado.  Está disponible sólo en idioma inglés.  Es compatible sólo con plataformas Microsoft Windows. 45  Los recursos exportados contienen elementos con software propietario. 1.1.3 Perfil de Usuario Los usuarios potenciales que utilizarán la aplicación web son los instructores que deseen gestionar OACA así como los aprendices o estudiantes que accedan a éstos. Los conocimientos que se requieren por parte de estos es el manejo básico de herramientas ofimáticas. 1.1.4 Lista de requerimientos funcionales y no funcionales Una vez realizado el análisis de los sistemas existentes y la comparación de las características que estos proveen, se elaboró la siguiente lista de requerimientos funcionales y no funcionales para el desarrollo del Gestor de OACA:  Requerimientos funcionales: o Es necesario que se pueda crear un OACA utilizando colores y elementos multimedia. o Es importante el uso de los tooltips en los botones de la aplicación web. o Es imprescindible el usuario pueda buscar los OACA. o Es necesario contar con algún patrón tecno-pedagógico preestablecido para que sirva de guía a los instructores. o Se debe poder crear los OACA a través de patrones o modo libre. o Se debe descargar el OACA en un archivo comprimido, con todos los elementos multimedia incluyendo los metadatos 46 LOM (Learning Object Metadata, Metadatos de Objeto de Aprendizaje). o Debe existir una barra de herramientas a la hora de editar los OACA que le permitan a los usuarios dar el formato deseado e insertar los elementos multimedia deseados. o Deben existir mensajes de sugerencia o ayuda que guíen al usuario mientras use la aplicación. o Es importante que el usuario pueda modificar y agregar los metadatos del OACA.  Requerimientos no funcionales: o Es crucial que la aplicación web sea fácil de usar. o Se desea que el resultado final tenga un buen desempeño de forma que los usuarios puedan utilizarla. o Se desea que el producto final sea compatible con la mayoría de los navegadores existentes en el mercado o por lo menos los más utilizados. o La aplicación a desarrollar no necesita de licencias pagas para su uso, ya que será de distribución gratuita. o Es necesario que la aplicación web sea segura. 47 1.2 Etapa 2: Análisis del sistema En esta etapa se realizó el análisis de la aplicación a desarrollar; para ello se emplearon los Casos de Uso, el Modelo de Objetos del Dominio y los Patrones de Interacción del Sistema. 1.2.1 Modelo Casos de Uso Se realizó el Diagrama de Casos de Uso para presentar las funcionalidades del Gestor de OACA. En la Figura 5 se muestra el nivel 0, donde se aprecian los actores con el sistema, descritos a continuación: a) Actor Visitante: este actor podrá ver, listar, buscar y/o descargar los OACA. b) Actor Estudiante: este actor podrá hacer las mismas actividades que el actor visitante, adicionalmente, podrá iniciar sesión y presentar los exámenes que puedan contener los OACA. c) Actor Grupo Docente: este actor podrá realizar las mismas actividades que el Actor Estudiante; podrá crear, modificar, reutilizar OACA, corregir exámenes y visualizar las notas de estos. d) Actor Administrador: este usuario podrá realizar las mismas actividades que el Actor Grupo Docente, aunado a ello, podrá crear, modificar, borrar y/o exportar usuarios. 48 Visitante “Gestor de OA de Contenido Abierto” Grupo Docente Estudiante Administrador Figura 5. Nivel 0, diagrama de casos de uso La Figura 6 muestra el nivel 1 del diagrama, y en éste se abarcan las funcionalidades principales que contempla el Gestor de OACA, las cuales son: a) Ver OA: permitirá al usuario ver el contenido de los OACA. b) Listar OA: permitirá al usuario listar los distintos OACA. c) Buscar OA: permitirá al usuario buscar OACA. d) Descargar OA: permitirá al usuario descargar una copia del OACA. e) Iniciar Sesión: permitirá al usuario iniciar sesión en la aplicación web para realizar diversas operaciones con los OACA. 49 f) Llenar examen de OA: permitirá al usuario llenar el examen del OACA en caso de que contenga alguno. g) Crear OA: permitirá a los con los permisos correspondientes que inicien sesión previamente, crear OACA. h) Modificar OA: permitirá a los usuarios con los permisos correspondientes, que han iniciado sesión, modificar OACA que hayan sido creados por ellos. i) Reutilizar OA: permitirá a los usuarios con los permisos correspondientes crear OACA a partir de la reutilización de OACA existentes. j) Crear examen: permitirá a los usuarios con los permisos correspondientes crear exámenes e incluirlos al OACA respectivo. k) Modificar examen: permitirá a los usuarios con los permisos correspondientes modificar exámenes existentes. l) Corregir examen: permitirá a los usuarios con los permisos correspondientes realizar la corrección de los exámenes. m) Visualizar notas: permitirá a los usuarios con los permisos correspondientes visualizar las notas de los exámenes de sus OACA. n) Cargar estudiantes: permitirá a los usuarios con los permisos correspondientes crear estudiantes de forma masiva, a través de un archivo .CSV. o) Eliminar estudiantes: permitirá a los usuarios con los permisos correspondientes eliminar a todos los usuarios cuyo rol sea “Estudiante”. 50 Generador de OA Visitante Grupo Docente Estudiante Administrador Ver OA Buscar OA Listar OA Descargar OA Iniciar Sesión Llenar examen de OA Crear Usuario Modificar Usuario Borrar Usuario Exportar Usuario Crear OA Modificar OA Reutilizar OA Crear Examen Visualizar notas de examenes Modificar examen Corregir examen Borrar estudiantes Cargar estudiantes Figura 6. Nivel 1, diagrama de casos de uso 51 En la Figura 7 se muestra el nivel 2 del diagrama de casos de uso. Figura 7. Nivel 2, diagrama de casos de uso 52 Es necesario acotar que la descripción de los casos de uso se encuentra en la sección de anexos (véase página 132). 1.2.2 Modelo Objeto del Dominio Este diagrama se realizó para representar los objetos que tienen una correspondencia directa en el área del Gestor de OACA. En la Figura 8 se muestra el Modelo de Objeto del Dominio del Gestor de OACA, en ésta se especifican los siguientes objetos:  Usuario: es un usuario registrado en la aplicación, puede ser Estudiante, Grupo Docente o Administrador.  Perfil: es una página que muestra la información de un usuario previamente registrado.  Foto: es una imagen que es cargada por el usuario.  Galería: es una página que agrupa los OACA que han sido publicados por los usuarios.  OA: es un conjunto de páginas que albergan elementos multimedia. Puede ser basado en un patrón preestablecido o libre.  Examen: es una página que alberga un formulario de preguntas referentes al contenido de un OACA, donde los usuarios pueden colocar sus respuestas.  Página: es un documento de texto plano en formato HTML.  Multimedia: es un recurso que puede ser texto con formato, video o imagen. Entre los objetos antes descritos, se establecen las siguientes relaciones:  Un usuario puede ser Estudiante, Grupo Docente o Administrador.  Un usuario posee un perfil. 53  Cada perfil cuenta con una foto.  Un usuario crea OACA.  Un usuario reutiliza sus propios OACA.  Un OA de Contenidos Abiertos tiene muchas páginas.  Una página alberga muchos elementos multimedia que pueden ser texto, video o imágenes.  Un usuario accede a la galería de OACA.  La galería de OACA muestra muchos OACA.  Un usuario puede realizar un examen que evalúa un OACA. 1 1 Perfil Foto Patrón Libre Páginas Multimedia Texto Video Imagen Examen 1 1 1 0..* 1 1 1 0..* 1 0..*1 0..* 1 1..* 1 1 Usuario Galeria muestra reutiliza crea posee contiene cuenta alberga tiene OA evalua Estudiante Grupo Docente Administrador 1..* 1 1 1 realiza Figura 8. Modelo de Objetos del Dominio 54 1.2.3 Prototipo Durante el análisis de la aplicación una de las primeras actividades realizadas fue el prototipo de las pantallas que son mostradas al usuario. En la Figura 9 se muestra el prototipo del editor de OACA. Figura 9. Prototipo del Editor de OACA Editar Metadatos Contenido Guardar Salir LOGO Insertar Texto Insertar Imagen Insertar Vídeo Barras de Herramientas 55 1.2.4 Patrones de Interacción Los patrones de interacción describen una solución exitosa a un problema recurrente que concierne a la interfaz de usuario (Mahemoff & Johnston, 1998). La Figura 10 presenta el lenguaje de patrones que describe la interfaz de usuario del Gestor de OACA. 56 Figura 10. Lenguaje de Patrones del Gestor de OACA 57 En la Tabla 2 se puede apreciar el patrón de dominio de la aplicación web. Tabla 2. Patrón de dominio Nombre Herramientas de autor para generar OACA Descripción El usuario desea agrupar aquellas herramientas o aplicaciones que permitan crear y editar OA a través del uso de patrones tecno-pedagógicos. Patrones Relacionados Gestor de OACA. Adicionalmente, en la Tabla 3, se muestra el patrón del dominio de la aplicación web. Los demás patrones se encuentran en el Anexo A (véase página 101). Tabla 3. Patrón de Sistema Nombre Gestor de OACA. Problema El docente o instructor desea generar un OA utilizando patrones tecno-pedagógicos de forma simple y rápida sin necesidad de tener conocimientos sobre programación. Solución Desarrollar una aplicación web que le permita a cualquier docente o instructor generar OACA a través del uso de patrones tecno-pedagógicos. Contexto Docentes o instructores que tengan acceso a la aplicación web del Gestor de OACA. Usabilidad Satisfacción del usuario. 58 Minimizar la carga cognitiva. Fácil de aprender. Buen feedback al usuario. Fuerzas El usuario debe poseer conocimientos básicos sobre el uso de herramientas como el navegador y herramientas ofimáticas. Patrones relacionados Crear OACA, Seleccionar Patrón, Agregar Información Básica, Ver Usuarios, Crear Usuario, Gestionar Usuario, Iniciar Sesión, Listar OACA, Buscar OACA, Gestionar OACA, Modificar OACA, Insertar Imagen, Modificar Metadatos, Insertar Video, Insertar Texto, Realizar Examen, Ver Exámenes, Corregir Exámenes, Ver Nota de Examen. Luego de apreciar el patrón de dominio en la Tabla 2 que fue denominado “Herramientas de autor para generar OACA”, es éste el que establece el dominio de la aplicación. Por su parte el patrón de sistema denominado “Gestor de OACA”, que se encuentra en la Tabla 3, permite describir la pantalla principal que observará el usuario y establece los criterios de usabilidad que fueron considerados para el desarrollo del gestor. 59 1.3 Etapa 3: Prototipaje En esta etapa se ejecutó la implementación del sistema, para ello se emplearon las tecnologías seleccionadas previamente y se generó la guía de estilo así como se realizó la evaluación heurística del sistema. 1.3.1 Tecnologías empleadas Para la realización del Gestor de OACA se utilizaron diversas tecnologías, éstas fueron seleccionadas luego de un estudio previo. A continuación se describen con detalle las tecnologías empleadas así como su función dentro del desarrollo del Gestor de OACA y la generación de los OACA: a) HTML5: fue utilizado para estructurar la información que sería mostrada tanto en la aplicación web, como en los OACA generados por ésta. b) Ruby on Rails: este framework se utilizó para la codificación de la aplicación web, específicamente la versión de Ruby 1.9.3p125 y la versión de Rails 3.2. Adicionalmente se emplearon las siguientes gemas o plugins: a. Carrierwave: ésta agregar las funciones de cargar y eliminar imágenes y videos dentro del OACA. b. Bcrypt-ruby: ésta permitió realizar el encriptado de las contraseñas de los usuarios, para que la aplicación fuese más segura. c. Kaminari: ésta permitió realizar el paginado de las listas de OACA mostradas en la galería y en el perfil de usuario; y las listas de usuario así como las listas de exámenes mostradas en el perfil de usuario. 60 d. Pg: permitió trabajar con la Base de Datos PostgreSQL, ya que ésta fue utilizada para el soporte de la información. e. Rubyzip: ésta permitió exportar los OACA en archivos comprimidos zip. f. Awesome Nested Fields: ésta se utilizó para la creación de los exámenes de los OACA y las preguntas de estos. c) CSS3: se utilizó para dar apariencia al Gestor de OACA así como los recursos exportados. Adicionalmente para proveer compatibilidad de la aplicación con la mayoría de los navegadores se utilizaron los siguientes frameworks: a. 960 Grid System: se utilizó para los márgenes y el tamaño de los elementos de las etiquetas HTML del Gestor de OACA. b. Twitter Bootstrap: se empleó para la apariencia de los popups o ventanas modales, los tooltips, la mayoría de los botones de la aplicación así como los campos de los formularios. Fue utilizado tanto para el Gestor de OACA como para los recursos exportados. d) JavaScript: con este lenguaje de programación, se le dio dinamismo al Gestor de OACA así como a los OACA exportados. Además se utilizó el siguiente framework: a. jQuery: se utilizó para realizar consultas al servidor de forma asíncrona y agregar animaciones a las ventanas emergentes, entre otros. Para complementar las funcionalidades de éste, se utilizaron los siguientes plugins: i. Tinymce: éste se utilizó para el editor de OACA, específicamente para proporcionar una barra de formato de texto a la hora de editar el texto insertado en alguna página del recurso. 61 ii. Twitter Bootstrap: se utilizó para proveer los tooltips y algunos efectos de animación y transición. iii. JQuery UI: se empleó para fue utilizado para poder hacer uso de arrastrar y soltar (drag-and-drop) así como del cambio de tamaño de los elementos agregados dentro de una página en el editor de OACA. iv. JQuery Validate: fue utilizado para la validación de los formularios y sus respectivos campos. v. wColorPicker: este plugin fue utilizado para poder cambiar el color de los contenedores de texto, imagen y video al momento de editar los OACA. En cuanto a los recursos generados por parte del Gestor de OACA, estos son exportados en un archivo comprimido zip que posee la siguiente estructura y contenido: a) Archivo “lom.xml”: éste archivo contiene los metadatos LOM (Learning Object Metadata, Metadatos de Objeto de Aprendizaje) asociados al OACA. b) Carpeta “assets”: ésta contiene todos los archivos de hojas de estilo en cascada, imágenes, videos y archivos JavaScript. c) Archivos HTML: son los archivos correspondientes a las páginas que componen el OACA. 62 1.3.2 Licenciamiento A fines de permitir mejoras futuras al gestor de OACA y sus recursos generados, se utilizó la licencia Creative Commons; cualquier persona podrá compartir, copiar, distribuir, ejecutar, comunicar públicamente la obra y hacer obras derivadas; se deben reconocer los créditos de la obra en la forma que lo establezca el autor; no se puede utilizar esta aplicación para fines comerciales; si se altera o transforma esta aplicación, sólo se puede distribuir la aplicación resultante bajo una licencia idéntica a esta (Creative Commons, 2013). 1.3.3 Guías de Estilo Una guía de estilo es un conjunto de recomendaciones opcionales u obligatorias sobre procedimientos de programación que establecen cómo debe comportarse una determinada aplicación y también determina en gran medida la apariencia de la aplicación (Mikes, 1993). a) Colores: Los colores primarios seleccionados, pueden ser apreciados en la Figura 11. R: 234 G: 46 B: 73 #ea2e49 R: 122 G: 197 B: 211 #7ac5d3 R: 51 G: 55 B: 69 #333745 Figura 11. Colores primarios seleccionados 63 b) Botones: al pasar el puntero del mouse sobre algún botón éste debe cambiar su color a gris. Por su parte los botones que estén activos deben ser grises, dando a entender que han sido pulsados para que el usuario sepa que está activo. En la Figura 12 puede ser apreciado el color de un botón cuando pasa el cursor del ratón. Figura 12. Botones de la aplicación web En la Figura 13 se aprecia un botón activo, es decir, que ha sido pulsado por el usuario. Figura 13. Botones de la aplicación c) Enlaces: al pasar el cursor del ratón sobre un enlace éste debe subrayarse. Los enlaces serán de color negro, los enlaces activos estarán en negritas. En la Figura 14 se muestra un enlace cuando el cursor del ratón pasa sobre éste. Figura 14. Enlaces de la aplicación web 64 d) Tooltips: también conocidos como mensajes emergentes, debe ser mostrado como ayuda al usuario al pasar el mouse sobre algún botón o enlace, cabe destacar que los tooltips son una ayuda adicional. Estos deben ser negros con las letras blancas o los que utiliza por defecto el sistema. En la Figura 15 se muestra un ejemplo de un tooltip. Figura 15. Tootilps en la aplicación web e) Estructura de la interfaz del editor de OACA: en la Figura 16 se puede apreciar la estructura de interfaz del editor de OACA. Figura 16. Estructura de la interfaz del editor de OACA  Barra de herramienta superior: debe contener las opciones para guardar el OACA y un botón para salir. Barra de Herramienta Título de la Página 65  Barra de herramienta lateral: debe contener el ícono de la aplicación, seguido de un botón que permita ver las páginas que contiene el OACA, agregar una nueva página, crear un examen y modificar los metadatos del OACA; también debe contar con botones para insertar texto, imagen y video.  Título de la página: debe contener un cuadro de texto cuyo color debe ser igual al fondo y cambiar al posicionarse el ratón. f) Estructura de la interfaz del perfil de usuario: en la Figura 17 es mostrada la estructura de interfaz del perfil de usuario. Figura 17. Estructura de interfaz del perfil de usuario i. Menú de enlaces: contiene los enlaces de las páginas que conforman la aplicación web, debe estar presente en la mayoría de las interfaces: en la del perfil, en la de inicio, en la galería, en créditos y en contacto. ii. Datos del usuario: contiene una imagen personalizada por el usuario y datos sobre éste. Menú de Enlaces Datos del usuario Submenú de enlaces OACA 66 iii. Submenú de enlaces: allí se ubicaran los enlaces gestionar usuarios, OACA, exámenes, buscador y otras opciones, según corresponda. iv. OACA: permite al usuario realizar la visualización, edición, reutilización, descarga y eliminación de los OACA. Todas estas operaciones son mostradas al colocar el cursor del ratón encima de cada elemento listado que representa un OACA. g) Estructura de los popups o ventanas emergentes: en la Figura 18 se puede apreciar la estructura básica de los popups o ventanas emergentes de la aplicación. Figura 18. Estructura de popups de la aplicación web i. Cabecera: debe incluir el título del popup o ventana emergente. ii. Cuerpo: debe incluir el contenido del popup ya sea un formulario o algún texto para notificar algo al usuario. iii. Pie de popup: debe incluir los botones respectivos según la operación que se intente realizar, es importante que sea fácil de entender las acciones que estos realizan. Cabecera Cuerpo Pie de popup 67 1.3.4 Evaluación Heurística Éste método consiste en analizar la conformidad de la interfaz con unos principios reconocidos de usabilidad (heurísticos) a través de la inspección de varios evaluadores. Debido a que es difícil que el desarrollador o un evaluador pueda encontrar todos los problemas de usabilidad en una UI son utilizados evaluadores que se encargan de validar la interfaz partiendo de criterios definidos, es recomendable que sean de tres a cinco evaluadores ya que se consideran suficientes (Granollers Saltiveri, Lorés Vidal, & Cañas Delgado, 2005). Se tomaron los criterios de evaluación de las heurísticas de Nielsen (1994) y fueron los siguientes:  H1: dialogo natural y simple.  H2: hablar el lenguaje del usuario.  H3: minimizar la carga cognitiva.  H4: consistencia.  H5: feedback.  H6: proveer claramente las salidas.  H7: proveer shortcuts (atajos de teclado).  H8: mensajes de error descriptivos.  H9: prevención de errores.  H10: asistencia al usuario. La escala utilizada para la valoración de los problemas fue:  0: no es un problema de usabilidad.  1: problema cosmético.  2: problema menor.  3: problema mayor de usabilidad. 68  4: usabilidad catastrófica, imperativo fijar solución. Esta Evaluación Heurística fue realizada por cuatro estudiantes que cursaron la asignatura IHC perteneciente a la Licenciatura en Computación de la Facultad de Ciencias de la Universidad Central de Venezuela. A cada una de las personas que participó se le dio una planilla, dónde se indicaba el procedimiento y los detalles de éste, posteriormente se comenzó con el recorrido por la aplicación. En la Tabla 4 se encuentran los problemas más resaltantes que se encontraron y que fueron corregidos. Tabla 4. Problemas más resaltantes encontrados con la Evaluación Heurística Problema Heurística Valoración Solución Los iconos de los elementos seleccionados en la lista de OACA no son claros y no se entiende su funcionalidad. H3 y H1 3 Colocar una leyenda junto al ícono para que se entienda mejor la metáfora. Cuando se está editando un OACA, no se sabe cuál es el que se está editando. H3 3 Especificar el nombre del OACA que se está editando y que éste despliegue las páginas que contiene. Cuando se está visualizando un H3 2 Utilizar migajas de pan y mostrar esa 69 Problema Heurística Valoración Solución OACA, no se sabe cuál se está visualizando ni en qué parte del sitio se encuentra el usuario. información allí. Cuando el usuario desea dejar de editar un OACA y presiona el botón “Salir”, no sabe si los cambios fueron guardados o descartados. H5 3 Mostrar una ventana que confirme si se desea salir y que pasará si el usuario acepta salir de la edición. 70 1.4 Etapa 4: Entrega En ésta etapa del desarrollo fueron aplicadas pruebas de aceptación con el objetivo de certificar que la aplicación web desarrollada es un producto de software usable y tolerante a fallas, para finalmente poner a producción dicha aplicación web. 1.4.1 Pruebas de aceptación Según Acosta (2011) el objetivo principal de las pruebas de aceptación es lograr un producto con un alto grado de calidad, éstas pruebas permiten validar que un determinado sistema cumple con el funcionamiento esperado por parte del usuario, por ello el usuario de la aplicación es quien determina su aceptación, desde el punto de vista de su funcionalidad, rendimiento y satisfacción. Para la aplicación web desarrollada como parte de este Trabajo Especial de Grado, se hizo uso de los cuestionarios como prueba de aceptación; se empleó la escala de Likert, en ésta se plantean enunciados positivos y negativos, ante los cuales el individuo debe mostrar su acuerdo o desacuerdo, se utilizaron cinco alternativas de respuestas para cada enunciado: totalmente de acuerdo, de acuerdo, ni de acuerdo ni en desacuerdo, en desacuerdo y totalmente de acuerdo (Fernandez Nogales, 2004). El cuestionario se realizó de forma on-line, empleando la plataforma del servicio web Google Drive (https://drive.google.com), que cuenta con un servicio virtual para tales fines; el cuestionario fue aplicado 4 personas de las 8 personas que conforman el Grupo Docente de Algoritmos y Programación, no fue posible aplicarlo a las 8 personas debido a los constantes paros de 71 actividades efectuados por el personal obrero, que dificultó la realización de la prueba de aceptación. 72 En la Figura 19 se muestra la parte I del modelo del cuestionario utilizado. Figura 19. Modelo del Cuestionario parte I 73 En la Figura 20 se muestra la parte II del modelo del cuestionario aplicado. Figura 20. Modelo del Cuestionario parte II 74 1.4.2 Resultados de la prueba de aceptación Del cuestionario presentado anteriormente, se pudieron obtener los siguientes resultados: En la primera pregunta, que se puede apreciar en el Gráfico 1, el 50% de los usuarios estuvo totalmente de acuerdo con que crear un OA se realiza de forma intuitiva, un 25% indicó que estaba de acuerdo y el 25% restante indicó que no estaba de acuerdo ni en desacuerdo. Gráfico 1 Gráfico de Torta: Crear un OA se realiza de una forma intuitiva. 50% 25% 25% 0% 0% 1. Crear un Objeto de Aprendizaje se realiza de una forma intuitiva. Totalmente de acuerdo De acuerdo Ni de acuerdo ni en desacuerdo En desacuerdo Totalmente en desacuerdo 75 En la pregunta número dos (2), como puede observarse en el Gráfico 2, el 75% de las personas estuvo de acuerdo con que insertar imágenes, textos y videos dentro del OA se realiza de una forma práctica, mientras que el 25% restante estuvo totalmente de acuerdo. Gráfico 2 Gráfico de Torta: Insertar imágenes, textos y vídeos dentro del OA se realiza de una forma práctica. 25% 75% 0% 0% 0% 2. Insertar imágenes, textos y vídeos dentro del OA se realiza de una forma práctica. Totalmente de acuerdo De acuerdo Ni de acuerdo ni en desacuerdo En desacuerdo Totalmente en desacuerdo 76 En la tercera pregunta, el 50% de los usuarios estuvo de acuerdo con que completar el formulario de los metadatos del OA se realiza de forma clara, un 25% no estuvo de acuerdo ni en desacuerdo y el 25% restante estuvo totalmente de acuerdo; los resultados están reflejados en el Gráfico 3. Gráfico 3 Gráfico de Torta: Completar el formulario de los metadatos del OA se realiza de forma clara. 25% 50% 25% 0% 0% 3. Completar el formulario de los metadatos del OA se realiza de forma clara. Totalmente de acuerdo De acuerdo Ni de acuerdo ni en desacuerdo En desacuerdo Totalmente en desacuerdo 77 En la cuarta pregunta, como se refleja en el Gráfico 4, el 75% de los usuarios opinó que estaba de acuerdo con que crear un examen para el OA es intuitivo, mientras que el 25% restante opinó que no estaba de acuerdo ni en desacuerdo. Gráfico 4 Gráfico de Torta: Crear el examen para el OA es intuitivo. 75% 0% 25% 0% 0% 4. Crear el examen para el OA es intuitivo. Totalmente de acuerdo De acuerdo Ni de acuerdo ni en desacuerdo En desacuerdo Totalmente en desacuerdo 78 En la pregunta número cinco (5), el 75% de los usuarios estuvo de acuerdo con que los pasos para visualizar un OA son claros, el 25% restante estuvo totalmente de acuerdo; los resultados están reflejados en el Gráfico 5. Gráfico 5 Gráfico de torta: Los pasos para visualizar un OA son claros. 25% 75% 0% 0% 0% 5. Los pasos para visualizar un OA son claros. Totalmente de acuerdo De acuerdo Ni de acuerdo ni en desacuerdo En desacuerdo Totalmente en desacuerdo 79 En la sexta pregunta, el 75% de los usuarios estuvo totalmente de acuerdo con que los pasos para corregir y visualizar las notas de los exámenes son claros, el 25% restante indicó que estaba de acuerdo; los resultados están reflejados en el Gráfico 6. Gráfico 6 Gráfico de torta: Los pasos para corregir y visualizar las notas de los exámenes son claros. 75% 25% 0% 0% 0% 6. Los pasos para corregir y visualizar las notas de los exámenes son claros. Totalmente de acuerdo De acuerdo Ni de acuerdo ni en desacuerdo En desacuerdo Totalmente en desacuerdo 80 Los resultados de la séptima pregunta se pueden apreciar en el Gráfico 7, en éste el 75% de los usuarios estuvo totalmente de acuerdo con que una vez creado el OA, éste cumplió con sus expectativas; mientras que el 25% restante estuvo de acuerdo. Gráfico 7 Gráfico de torta: una vez creado el OA, el OA resultante cumplió con sus expectativas. 75% 25% 0% 0% 0% 7. Una vez creado el OA, el OA resultante cumplió con sus expectativas. Totalmente de acuerdo De acuerdo Ni de acuerdo ni en desacuerdo En desacuerdo Totalmente en desacuerdo 81 En la pregunta número ocho (8), que puede observarse en el gráfico a continuación, se puede apreciar que el 75% de los usuarios estuvo de acuerdo con que las pantallas o interfaces de la aplicación son usables; mientras que el 25% restante indicó que estaba totalmente de acuerdo. Gráfico 8 Gráfico de torta: las pantallas o interfaces de la aplicación son usables. 25% 75% 0% 0% 0% 8. Las pantallas o interfaces de la aplicación son usables. Totalmente de acuerdo De acuerdo Ni de acuerdo ni en desacuerdo En desacuerdo Totalmente en desacuerdo 82 En la novena pregunta, como se puede apreciar en el Gráfico 9, el 50% de los usuarios opinó que estaba totalmente de acuerdo con que los mensajes de ayuda (tooltips) mostrados en los botones y enlaces son apropiados, el otro 50% opinó que estaba de acuerdo. Gráfico 9. Gráfico de torta: Los mensajes de ayuda (tooltips) mostrados en los botones y enlaces son apropiados. 50% 50% 0% 0% 0% 9. Los mensajes de ayuda (tootilps) mostrados en los botones y enlaces son apropiados. Totalmente de acuerdo De acuerdo Ni de acuerdo ni en desacuerdo En desacuerdo Totalmente en desacuerdo 83 Finalmente en la décima y última pregunta, el 75% de los usuarios estuvo totalmente de acuerdo en recomendar la aplicación, mientras que el 25% restante estuvo de acuerdo; los resultados se pueden apreciar en el Gráfico 10. Gráfico 10. Gráfico de torta: Estaría dispuesto a recomendar esta aplicación. En base a los resultados obtenidos y reflejados en los gráficos anteriores, se puede realizar un promedio de aceptación basándose en las preguntas que califican positivamente así como las preguntas que califican negativamente la aplicación; al hacer este cálculo es posible apreciar que la mayoría de los usuarios tuvo opiniones positivas acerca de los aspectos de usabilidad de la aplicación Gestor de OACA. Es necesario acotar que las preguntas del cuestionario buscaban indagar en opiniones relacionadas con aspectos de usabilidad referidos por Nielsen (1994), en consecuencia, al obtener un mayor número de respuestas favorables, se puede decir que la aplicación es usable. 75% 25% 0% 0% 0% 10. Estaría dispuesto a recomendar esta aplicación. Totalmente de acuerdo De acuerdo Ni de acuerdo ni en desacuerdo En desacuerdo Totalmente en desacuerdo 84 CAPÍTULO IV. RESULTADOS En este capítulo son descritos los resultados en función de la interfaz así como las funcionalidades del Gestor de OACA luego de emplear la metodología de desarrollo de software. La aplicación cuenta con una página de inicio, la galería de OACA y los créditos, adicionalmente, cuenta con tres módulos: el módulo de gestión de usuarios, el módulo de gestión de OACA y el módulo de gestión de exámenes. Por último, se muestra el patrón tecno- pedológico implementado así como los OACA creados empleando éste. 4.1 Página de inicio del Gestor de OACA La Figura 21 muestra la página de inicio de la aplicación web, ésta cuenta con una breve información que describe algunas de las características del gestor. Figura 21. Vista de la página de inicio del Gestor de OACA 85 En la Figura 21 se resaltan las siguientes funcionalidades del Gestor de OA: 1) Menú de enlaces: permite al usuario desplazarse por las interfaces principales de la aplicación. 2) Iniciar sesión: permite al usuario iniciar sesión en el sistema, debe estar previamente registrado. 3) Botón de la galería de OACA: permite dirigirse a la galería de OACA. 4.2 Página de la galería de OACA La Figura 22 presenta la galería de OACA, aquí se listan los distintos recursos que han sido creados con el Gestor de OACA, el usuario podrá visualizar los recursos, descargarlos así como otras operaciones dependiendo de su rol. Figura 22. Vista de la galería de OACA 86 En la Figura 22 se pueden realizar las siguientes funciones: 1) Submenú: permite al usuario organizar los OACA según el nombre o la fecha de creación, así como también buscar dentro de los OACA existentes en la galería. 2) Listado de OACA: allí el usuario puede listar los OACA. 3) OACA: el usuario puede realizar diversas actividades, con poner el cursor del ratón sobre alguno de los OACA listados, como visualizar el recurso y/o descargarlos. 4.3 Página de créditos del Gestor de OACA En la Figura 23 se pueden apreciar los créditos correspondientes a la aplicación. Figura 23. Vista de los créditos del gestor de OACA 87 4.4 Módulo de gestión de OACA La Figura 24 muestra el listado de OACA, dónde el usuario con los privilegios Grupo Docente o Administrador, podrá: crear, reutilizar, modificar, descargar y eliminar OACA, de igual manera, podrá crear un examen al recurso. Figura 24. Vista del listado de OACA En la Figura 24 se pueden apreciar los siguientes elementos: 1) Información básica del usuario: permite al usuario conocer en detalle algunos de sus datos suministrados, así como su rol y su foto de perfil. 2) Submenú: permite al usuario desplazarse entre los diversos módulos de gestión: OACA, Exámenes, Usuarios. En base a su rol de usuario dentro del sistema. Adicionalmente permite utilizar un buscador para encontrar los OACA en el caso del Gestor de OACA y ordenar los recursos. 3) Crear OACA: permite al usuario crear un OACA. 88 4) Listado de OACA: permite al usuario visualizar los OACA que ha creado, adicionalmente le muestra diversas opciones al colocar el cursor del ratón sobre alguno de los elementos. En la Figura 25 se puede apreciar el editor de OACA, donde el usuario con el rol Administrador o Grupo docente, podrá editar los OACA que haya creado o reutilizado; este editor le permitirá agregar, modificar y eliminar las páginas que componen el OACA; insertar texto, insertar video e insertar imágenes dentro de alguna de las páginas del recurso. Figura 25. Vista del editor de OACA La Figura 25 muestra los siguientes elementos: 1) Barra lateral: permite visualizar el contenido del OACA, insertar texto, imágenes y videos dentro del recurso. 2) Contenido del OACA: permite observar el contenido del OACA para su edición, también incluye un botón para editar los metadatos y editar el examen. 3) Título de la página: permite cambiar el título de la página actual. 4) Barra superior: permite guardar así como terminar la edición del OACA. 89 5) Área de trabajo: permite modificar el contenido de la página actual. En la Figura 26 se muestra el formulario que permite editar los metadatos del OACA, éste puede ser accedido por el usuario a través del editor de OACA. Figura 26. Vista del formulario para editar los metadatos del OACA 90 La Figura 27 muestra la interfaz de la página que permite visualizar los OACA, permite al usuario ver el contenido del recurso, ésta cuenta con dos barras una lateral que permite desplazarse a través de cualquier sección del recurso y una inferior que permite ver el contenido siguiente o el anterior, así como regresar a la portada. Si el OACA cuenta con un examen, automáticamente será presentado en la lista de enlaces el enlace correspondiente a la evaluación. Figura 27. Vista de la página para visualizar los OACA La Figura 27 muestra los siguientes elementos: 1) Barra lateral: permite desplazarse entre las páginas que contiene el OACA. 91 2) Evaluación: en caso de que el OACA posea una evaluación, la misma será mostrada de última para que el aprendiz o el estudiante pueda acceder a ésta. 3) Herramientas: permite mostrar a los usuarios que están registrados en el sistema, la consola que permite realizar la codificación de algoritmos así como otras operaciones. 4) Barra inferior: permite al usuario desplazarse a la página siguiente, a la anterior e incluso regresar a la portada. 5) Contenido: permite apreciar el contenido de la página actual perteneciente al OACA. LA Figura 28 presenta la interfaz de la herramienta que permite realizar la codificación de programas. Ésta herramienta es un Applet de Java que permite conectarse a un servidor, al realizar tal conexión es posible codificar programas, sólo está disponible para aquellos usuarios que estén registrados. Figura 28. Herramienta para codificar y probar programas 92 4.4.1 Patrones tecno-pedagógicos La aplicación desarrollada incluye dos patrones que fueron implementados para facilitar la creación de los OACA. a) Características pedagógicas: los contenidos son mostrados de forma explícita, tienen un objetivo definido: apoyar los laboratorios de AyP. En cuanto a la evaluación, el Gestor de OACA permite crear un examen asociado a algún OACA en específico. En cuanto a las actividades éste posee un espacio donde se ubican los ejemplos referidos a la implementación de algoritmos. b) Características tecnológicas: estos son realizados en el lenguaje de programación HTML, por lo cual permiten su reutilización, al ser éste lenguaje un estándar, permite la portabilidad, debido a que la mayoría de los navegadores lo soportan. El primero es el patrón libre, que no cuenta con ningún tipo de plantilla o indicaciones para la creación del recurso. El segundo es el patrón para crear OACA sobre programación, éste se creó empleando el catálogo de patrones “Objetos de Aprendizaje para Programación” que se encuentra en el capítulo I del presente TEG, este patrón incluye tres plantillas que se describen a continuación: a) Página de Título: ésta plantilla brinda un espacio para un título y una descripción del recurso. En la Figura 29 se puede apreciar la página de título. 93 Figura 29. Página de Título del Patrón para crear OACA sobre programación b) Página de Concepto: ésta plantilla ofrece un espacio para describir un concepto familiar y luego lo relaciona con el concepto de programación. En la Figura 30 se puede apreciar esta página. Figura 30. Página de Concepto del Patrón para crear OACA sobre programación c) Página de Ejemplo: ésta plantilla ofrece un espacio para el concepto junto con el ejemplo de implementación en el lenguaje que se está aprendiendo. Puede ser apreciada en la Figura 31. 94 Figura 31. Página de Ejemplo del Patrón para crear OACA sobre programación 4.4.2 OACA creados utilizando el Gestor de OACA Los laboratorios incluidos por defecto en el Gestor de OACA, se realizaron empleando el patrón tecno-pedagógico para crear OACA sobre programación que se implementó previamente. Estos son descritos a continuación: d) Laboratorio 1: se encuentra conformado por la definición de Sistema Operativo, definición de Linux y algunas de sus características, definición del intérprete de comandos; se explican brevemente las etapas de programación, compilación y ejecución de un programa; por último se encuentra una actividad para realizar un programa en C++. En la Figura 32 se muestra una de las secciones de este laboratorio. 95 Figura 32 Lab. 1 Introducción al Ambiente Linux e) Laboratorio 3: éste laboratorio contiene la definición de las estructuras condicionales, condicional simple, condicional compuesto, condicional anidado y selección; cada uno con sus respectivos ejemplos. Adicionalmente, incluye una evaluación que contempla ejercicios prácticos en el lenguaje de programación C++. En la Figura 33 se puede apreciar una de las secciones de este laboratorio. Figura 33. Lab. 3 Estructuras Condicionales 96 4.5 Módulo de gestión de usuarios La Figura 34 presenta el módulo de gestión de usuarios, permite al usuario con perisología de Administrador crear, modificar, exportar y borrar usuarios; también le permite cargar usuarios de forma masiva y borrar todos los usuarios cuyo rol sea estudiante. Figura 34. Vista del módulo de gestión de usuarios La Figura 34 permite apreciar los siguientes elementos: 1) Submenú: permite desplazarse entre los módulos de gestión: OACA, Exámenes y Usuarios, dependiendo del rol del usuario que esté visualizando su perfil. Adicionalmente permite exportar los usuarios, eliminar usuarios cuyo rol sea estudiante y cargar usuarios de forma masiva. 2) Crear usuario: permite crear un usuario. 3) Listado de usuarios: permite listar los usuarios registrados en el sistema, al colocar el cursor del ratón sobre alguno de estos, se podrán realizar operaciones. 97 4.6 Módulo de gestión de exámenes La Figura 35 presenta la interfaz que permite crear un examen para un determinado OACA., ésta permite al usuario adicionar las preguntas y respuestas, así como la ponderación de las mismas. Figura 35. Vista de edición de un examen de un OACA 98 La Figura 36 muestra la vista de corrección de los exámenes, donde se encuentran los exámenes presentados por los usuarios cuyo rol es estudiante, y tanto el usuario con rol Grupo Docente como Administrador, pueden corregir y/o modificar. Una vez corregido los mismos, el estudiante podrá observar la nota obtenida desde su perfil o accediendo nuevamente al examen del OACA que realizó. Figura 36. Vista de corrección de los exámenes OACA La Figura 36 permite apreciar los siguientes elementos: 1) Submenú: permite desplazarse entre los módulos de gestión, adicionalmente permite visualizar los exámenes por corregir así como los exámenes ya corregidos. 2) Listado de exámenes: muestra los exámenes que han sido respondidos por los usuarios permitiendo así como la nota obtenida y otros detalles. 3) Corregir o modificar: permite realizar la corrección de un examen. También permite la modificación de correcciones realizadas previamente. 99 CONCLUSIONES Esta aplicación provee un gestor de OACA, que permite crear OA de Tipo Práctico de Contenidos Abiertos empleando patrones tecno-pedagógicos. A través de este gestor, el Grupo Docente de AyP podrá generar los recursos para apoyar los laboratorios de la asignatura, adicionalmente, permitirá a los estudiantes acceder a una herramienta para emular la consola de Linux y realizar las prácticas de codificación correspondientes. A continuación se muestran las conclusiones obtenidas en base a los objetivos planteados. Trabajar en conjunto con parte del Grupo Docente de manera constante para el desarrollo de la aplicación, facilitó el intercambio de ideas, permitiendo lograr un mejor análisis de los requerimientos, logrando así el cumplimiento de los objetivos del presente TEG referentes a las funcionalidades. El gestor de OACA, tuvo una gran aceptación por parte de los usuarios que participaron en las pruebas de aceptación, gracias a éstas se puede decir que la aplicación es usable; ésta al ser software libre, puede ser modificada, mejorada y/o adaptada para mejorar las funcionalidades que se proveen y/o agregar otras, ya sea por la asignatura de Algoritmos y Programación o alguna otra persona, siempre y cuando se respete la autoría inicial y las obras derivadas mantengan la misma licencia. Las tecnologías empleadas para el desarrollo del gestor juegan un rol importante, debido a que son libres. Con Ruby on Rails y las gemas que se emplearon se logró agilizar desarrollo, en el caso de HTML5 permitió la adición de videos sin necesidad de incorporar algún otro plugin o herramienta. 100 RECOMENDACIONES A continuación se muestran una serie de recomendaciones y/o sugerencias que están fuera del alcance del Trabajo Especial de Grado y que podrían tomarse en cuenta con el objetivo de optimizar y agregar nuevas funcionalidades al Gestor de OACA:  Aunque el gestor de OACA puede utilizar distintos patrones tecno- pedagógicos cargados en la base de datos, el gestor de OACA no dispone de una herramienta para crearlos. Se propone para un trabajo futuro desarrollar un sistema para crear y cargar los patrones tecno-pedagógicos.  El gestor de OACA almacena los metadatos correspondientes a los recursos, sin embargo el buscador interno no los emplea para las búsquedas. Se propone que en un futuro se realice esta mejora en la aplicación.  Agregar actividades como sopa de letras, juegos de memoria entre otros a la hora de editar un OACA.  Incorporar nuevos patrones tecno-pedagógicos.  Para futuros aportes relacionados con la interfaz, se recomienda seguir las guías de estilo para mantener coherencia en la interfaz. 101 REFERENCIAS BIBLIOGRÁFICAS Acosta, A. E. (2011). AgilUS: Un método ágil de desarrollo de software que incorpora la usabilidad. Caracas. Acosta, A. E. (Septiembre de 2011). Lecturas en Ciencias de la Computación. Recuperado el 27 de Julio de 2012, de http://www.ciens.ucv.ve/escueladecomputacion/documentos/archivo/121 Álvarez Rodríguez, F., & Muñoz Arteaga, J. (2007). Fundamentos del Enfoque de Objetos de Aprendizaje. Recuperado el 18 de Septiembre de 2012, de http://ingsw.ccbas.uaa.mx/sitio/images/libro/LIBRO/capitulo1.pdf APROA. (Agosto de 2005). Manual de Buenas Prácticas para el Desarrollo de OA. Recuperado el 8 de Agosto de 2012, de http://formacionprofesional.homestead.com/Objetos_de_aprendizaje.pdf Asamblea Nacional. (2011). Características del Estado Miranda. Recuperado el 26 de Julio de 2012, de http://www.asambleanacional.gov.ve/index.php?option=com_content&view=a rticle&id=24744&Itemid=188&lang=es ASTD y SmartForce. (30 de Septiembre de 2003). A field guide to learning object. Recuperado el 18 de Septiembre de 2012, de http://db.formez.it/fontinor.nsf/c658e3224c300556c1256ae90036d38e/30AE7 A876BD011A7C1256E59003A4943/$file/smartforce.pdf Bandeira, L. (2013). GitHub. Recuperado el 28 de Febrero de 2013, de https://github.com/lailsonbm/awesome_nested_fields Barranco de Areba, J. (2002). Metodología Del Análisis Estructurado de Sistemas. Univ Pontifica Comillas. Battle, L. (2012). jQuizMe. Recuperado el 15 de Octubre de 2012, de http://code.google.com/p/jquizme/ Beltrán Llera, J. (1995). Psicología de la Educación. Marcombo. Bernárdez, M. (2007). Diseño, producción e implementación de e-learning. Bloomington, Indiana - USA: AuthorHouse. Bernardo Carrasco, J. (1997). Hacia una Enseñanza Eficaz. Ediciones Rialp. 102 Bravo Salinas, N. H. (2008). Monteria. Recuperado el 23 de 07 de 2012, de http://www.monteria.gov.co/descargas/educacion/CAPITULOIII.pdf Burgos, J. M., Galve, J., García, J., & Sutil, M. (2002). Modelo Conceptual para la Organización del Aprendizaje. Recuperado el 30 de Mayo de 2012, de http://www.lsi.us.es/iberamia2002/confman/SUBMISSIONS/374-oss- ortuel.PDF Canabal, M., Sarasa , A., & Sacristán, J. C. (2005). LOM-ES: Un perfil de aplicación de LOM. Recuperado el 25 de Abril de 2012, de http://www.proyectoagrega.es/client/documentoLocal/Uso%20de%20Lomes %20en%20Agrega.pdf Canaima Educativo. (2012). Canaima Educativo. Recuperado el 26 de Julio de 2012, de http://www.canaimaeducativo.gob.ve Caprile, S. R. (2010). El camino del conejo: guía práctica para vanzar en el desarrollo con procesadores y módulos Rabbit. Buenos Aires: GAE. Cardoso M., L. I. (2006). Sistemas de Base de Datos II. Caracas: Universidad Católica Andrés Bello. Casillas Santillán, L. A., Gibert Ginestà, M., & Pérez Mora, Ó. (s.f.). Bases de Datos en MySQL. Recuperado el 02 de Julio de 2012, de http://ocw.uoc.edu/computer-science-technology-and-multimedia/bases-de- datos/bases-de-datos/P06_M2109_02151.pdf Castejón Costa, J. L., & Navas Martínez, L. (2009). Aprendizaje, desarrollo y disfunciones. Implicaciones para la enseñanza en la Educación Secundaria. Editorial Club Universitario. Castillo Cortés, J. (25 de Julio de 2009). Los tres escenarios de un objeto de aprendizaje. Recuperado el 5 de Agosto de 2012, de http://www.rieoei.org/deloslectores/2884Castillo.pdf Conesa Caralt, J., & Rius Gavidia, Á. (2010). Introducción a .NET. UOC. Consejo de Desarrollo de las Nacionalidades y Pueblos del Ecuador. (s.f.). CODENPE. Recuperado el 02 de Julio de 2012, de http://www.codenpe.gob.ec/index.php?option=com_content&view=category&l ayout=blog&id=71&Itemid=597 103 Corte Constitucional. (s.f.). Recuperado el 02 de Julio de 2012, de http://www.corteconstitucional.gob.ec/index.php?option=com_content&view= article&id=353&Itemid=7 Courselab. (2012). Courselab. Recuperado el 19 de Septiembre de 2012, de http://download.courselab.com/downloads/clpics/screenshot_01.jpg CourseLab. (2012). Feature List. Recuperado el 19 de Septiembre de 2012, de http://www.courselab.com/db/cle/F195DD4AC34159C34425798B0049FCD7/ doc.html Courselab. (s.f.). Courselab. Obtenido de http://download.courselab.com/downloads/clpics/screenshot_01.jpg Creative Commons. (2013). Creative Commons. Recuperado el 15 de Abril de 2013, de http://creativecommons.org/licenses/by-nc-sa/3.0/deed.es Cuesta Morales, P. (Octubre de 1999). Desarrollo de Aplicaciones Distribuidas basadas en Tecnologías Web. Recuperado el 07 de Mayo de 2012, de http://trevinca.ei.uvigo.es/~pcuesta/publicaciones/TecWeb.pdf Danvers, F. (1994). 700 mots-clefs pour l'éducation. París: Presses Universitaires de Lille. Date, C. J. (2001). Introducción a los Sistemas de Bases de Datos. Pearson Educación. Directorio Ejecutivo de la República Bolivariana de Venezuela. (2004). Cumpliendo las Metas del Milenio. Caracas, Venezuela: CDBpublicaciones. eXe Learning. (1 de Abril de 2012). Manual Online ExeLearning. Recuperado el 19 de Septiembre de 2012, de http://wikieducator.org/Online_manual eXe Learning. (s.f.). eXe Learning. Recuperado el 02 de Julio de 2012, de http://exelearning.net/ Exelearning. (2012). Exelearning. Recuperado el 19 de Septiembre de 2012, de http://exelearning.aprenderenred.net/ Fernandez Nogales, A. (2004). Investigación y técnicas de mercado. ESIC Editorial. Freidder, A. (24 de Julio de 2012). Correo del Orinoco. Recuperado el 26 de Julio de 2012, de http://www.correodelorinoco.gob.ve/nacionales/presidente-chavez- entrega-canaimita-1-millon-800-mil/ 104 FUNDABIT. (s.f.). Ministerio del Poder Popular para la Educación. Recuperado el 20 de Julio de 2012, de http://fundabit.me.gob.ve/proyectos/cpset Fundación Infocentro. (27 de Julio de 2012). Fundación Infocentro. Recuperado el 27 de Julio de 2012, de http://www.infocentro.gob.ve/index.php?id=91 Gallego Rodríguez, A., & Martínez Caro, E. (2008). Estilos de Aprendizaje y E- Learning. Hacia un mayo rendimiento académico. Recuperado el 28 de Junio de 2012, de RED Revista Educativa Digital: http://repositorio.bib.upct.es:8080/jspui/bitstream/10317/982/1/eae.pdf Glo Maker. (27 de Enero de 2012). Glo Maker. Recuperado el 19 de Septiembre de 2012, de http://www.glomaker.org Gobernación de Miranda. (2010). Memoria y Cuenta 2010. Recuperado el 27 de Julio de 2012, de http://www.miranda.gob.ve/images/pdf/memoriaycuenta2010.pdf Gobernación de Miranda. (2011). Memoria y Cuenta. Recuperado el 26 de Julio de 2012, de http://www.miranda.gob.ve/images/pdf/memoria2011.pdf Gobierno en Linea. (s.f.). Gobierno en Linea. Recuperado el 26 de Julio de 2012, de http://gobiernoenlinea.gob.ve/home/venezuelaG_info.dot González Arechabaleta, M. (2005). Cómo desarrollar contenidos para la formación online basados en OA. Recuperado el 18 de Septiembre de 2012, de http://redalyc.uaemex.mx/redalyc/pdf/547/54709604.pdf Granger, M. (2012). Ruby Gems. Recuperado el 15 de Octubre de 2012, de http://rubygems.org/gems/pg Granollers Saltiveri, T., Lorés Vidal, J., & Cañas Delgado, J. J. (2005). Diseño de sistemas interactivos centrados en el usuario. UOC. Grupo de Ingeneria del Software de la Universidad de Sevilla. (Octubre de 2004). Introducción a las Aplicaciones Web. Recuperado el 07 de Mayo de 2012, de http://www.lsi.us.es/docencia/get.php?id=352 Guevara, A. (18 de Julio de 2012). 60% de estudiantes mirandinos tiene deficiencias en matemática. El Nacional. Obtenido de http://www.entornointeligente.com/articulo/1290751/60-de-estudiantes- mirandinos-tiene-deficiencias-en-matematica 105 Hale, C. (2012). Bcrypt-ruby. Recuperado el 15 de Octubre de 2012, de https://github.com/codahale/bcrypt-ruby Hillmann, D. (26 de 08 de 2003). Usando el Dublin Core. Recuperado el 25 de 06 de 2012, de http://www.sedic.es/usando_dublin_core.pdf Instituto Nacional de Estadística, Geografía e Informática de México. (3 de Marzo de 2003). Metadatos Geográficos. Recuperado el 06 de Mayo de 2012, de http://antares.inegi.gob.mx/metadatos/metadat1.htm Instituto Nacional de Estadisticas de Venezuela. (2011). Instituto Nacional de Estadisticas de Venezuela. Recuperado el 26 de Julio de 2012, de http://www.ine.gov.ve/documentos/Demografia/CensodePoblacionyVivienda/ ppt/Resultados_Censo2011.pdf Jaramillo Valbuena, S., Cardona Torres, S. A., & Villa Zapata, D. A. (2008). Programación Avanzada en Java. Quindio - Colombia: Elizcom. Johnson P., F., & Rubio L., J. M. (Febrero de 2009). Base de Datos. Recuperado el 1 de Junio de 2012, de http://www.inf.ucv.cl/~jrubio/docs/2009- 02/ICI%20344/Capitulo%20I.pdf L'Allier, J. (Abril de 1997). Frame of Reference: NETg's Map to Its Products, Their Structures and Core Beliefs. Recuperado el 19 de Septiembre de 2012, de http://web.archive.org/web/20020615192443/http://www.netg.com/research/w hitepapers/frameref.asp Lara, P., & Jimenez, P. (2005). Modelos de Gestión de Contenidos Electrónicos para la Calidad Educativa. Recuperado el 19 de Septiembre de 2012, de http://www.eup.ulpgc.es/XIIICUIEET/Ficheros/Ponencias/23_SEP/Sala_1/PO N-A-65.PDF Lassalle, F. (1999). ¿Qué es una constitución? Obtenido de http://files.unicolmayoristas2010.webnode.es/200000067- 1d6671e605/Lassalle%20Ferdinand%20- %20Que%20Es%20Una%20Constitucion.PDF Lopéz Guzmán, C. (2005). Los Repositorios de Objetos de Aprendizaje como soporte a un entorno e-learning. Recuperado el 25 de Junio de 2012, de 106 http://gredos.usal.es/jspui/bitstream/10366/56649/1/DIA_Repositoriosobjetos. pdf.pdf López Guzmán, C., García Peñalvo, F., & Pernías Peco, P. (Febrero de 2005). Desarrollo de repositorios de objetos de aprendizaje a través de la reutilización de los metadatos de una colección digital: de Dublin Core a IMS. Recuperado el 05 de Mayo de 2012, de RED. Revista de Educación a Distancia, número monográfico II: http://www.um.es/ead/red/M2/lopez27.pdf López Guzmán, C., García Peñalvo, F., & Pernías Peco, P. (s.f.). Desarrollo de repositorios de objetos de aprendizaje a través de la reutilización de los metadatos de una colección digital: de Dublin Core a IMS. Recuperado el 05 de Mayo de 2012, de http://www.um.es/ead/red/M2/lopez27.pdf Mahemoff, M., & Johnston, L. (1998). Pattern Languages for Usability: An Investigation of Alternative Approaches. Asia-Pacific Conference on Human Computer Interaction (APCHI) 98 Proceedings, (págs. 25-31). Shonan Village, Japan. Matsuda, A. (2011). Kaminari. Recuperado el 15 de Octubre de 2012, de https://github.com/amatsuda/kaminari McLeod, R. (2000). Sistemas de Información Gerencial. Pearson Education. Medina, & Verdejo. (2008). Evaluación del Aprendizaje Estudiantil. San Juan, Puerto Rico: Isla Negra Editores. Meritxell Estebanell, M. (2002). Interactividad e Interacción. Revista Latinoamericana de Tecnología Educativa, 23-32. Mikes, S. (1993). Diseño y desarrollo de programas con el sistema X Window. Ediciones Díaz de Santos. Moxiecode Systems AB. (2012). Tinymce. Recuperado el 15 de Octubre de 2012, de http://www.tinymce.com/ MySQL. (12 de Junio de 2012). MySQL 5.0 Reference Manual. Recuperado el 02 de Julio de 2012, de http://dev.mysql.com/doc/refman/5.0/es/index.html Naciones Unidas. (2011). Objetivos del Milenio de la ONU. Recuperado el 26 de Julio de 2012, de http://www.un.org/spanish/millenniumgoals/index.shtml 107 Nicklas, J. (2012). Carrierwave. Recuperado el 12 de Octubre de 2012, de https://github.com/jnicklas/carrierwave Orense Fuentes, M., & Rojas Orduña, M. O. (2008). Cómo triunfar en buscadores. Madrid: ESIC. Orjuela Duarte, A., & Rojas C., M. (Junio de 2008). Las Metodologías de Desarrollo Ágil como una Oportunidad para la Ingeniería del. Recuperado el 02 de Julio de 2012, de http://redalyc.uaemex.mx/redalyc/pdf/1331/133115027022.pdf Pedagogical Patterns Project. (2008). Pedagogical Patterns. The Pedagogical Patterns Project. Recuperado el 18 de Septiembre de 2012, de http://www.pedagogicalpatterns.org/ Pino, J. (27 de Agosto de 2010). Unesco: Venezuela es el primer país del mundo que logra metas de justicia social y educación. Correo del Orinoco. PostgreSQL. (02 de Octubre de 2010). Recuperado el 5 de Junio de 2012, de http://www.postgresql.org.es/sobre_postgresql Puertas Ortega, J., & Orellana Zubieta, F. (s.f.). Un paseo por PHP. Recuperado el 21 de Mayo de 2012, de http://www.php- hispano.net/archivos/Manuales/38/1/Un-paseo-por-PHP1.pdf Python. (01 de Octubre de 2011). Python. Recuperado el 24 de Julio de 2012, de http://wiki.python.org/moin/ Quesada Ugalde, M. (2007). Nuevas tecnologías. Procedimientos básicos e ideas de aplicación en educación especial. Costa Rica: EUNED. Ramírez Prieto, F. (s.f.). Mejora de la Calidad de un curso de formación con metodología e-learning. Recuperado el 02 de Julio de 2012, de http://www.um.es/ead/red/20/ramirez.pdf Ramos Román, I., & Dolado Cosín, J. J. (2007). Técnicas Cuantitativas para la Gestión en la Ingeniería del Software. Netbiblo. Repiso Jiménez, V. O. (1999). Nuevas perspectivas para la catalogación: Metadatos vs. Marc. Recuperado el 25 de Junio de 2012, de http://redc.revistas.csic.es/index.php/redc/article/view/338/546 Restrepo C., L. A., & Hurtado V., R. D. (2003). Recuperado el 23 de Julio de 2012, de http://docencia.udea.edu.co/educacion/lectura_escritura/creditos.html 108 Rodríguez Jiménez, J. M. (2009). Patrones pedagógicos en educación virtual. Recuperado el 12 de Septiembre de 2012, de RED. Revista de Educación a Distancia, número monográfico X: http://www.um.es/ead/red/M10/rodriguez.pdf Sánchez Maza, M. Á. (2012). Innovación y Cualificación. Santoyo Velasco, C. (2005). Análisis y evaluación de habilidades metodológicas, conceptuales y profesionales en la formación del psicólogo. UNAM. Sauvé, L., & Panneton, F. (2003). Les intentions pédagogiques. Boîte à outils. Programme court de 2° cycle en éducation relative à l’environnement. Recuperado el 19 de Septiembre de 2012, de Université du Québec à Montréal (UQAM): http://www.ecominga.uqam.ca/ECOMINGA_2011/PDF/BIBLIOGRAPHIE/GUI DE_LECTURE_7/4/4.Sauve_y_Panneton.pdf Sheng, T. C. (1992). Manual de campo para la ordenación de cuencas hidrográficas. Food & Agriculture Org. Sicilia, M. A. (12 de Febrero de 2005). Reusabilidad y reutilización de objetos didácticos. Recuperado el 26 de Mayo de 2012, de http://www.um.es/ead/red/M2/sicilia46.pdf Simonov, A., Harper, A., Sondergaard, T., & Sugiura, T. (2012). Rubyzip. Recuperado el 15 de Octubre de 2012, de https://github.com/aussiegeek/rubyzip Smith, N. (2012). 960 Grid System. Recuperado el 15 de Octubre de 2012, de http://960.gs/ Solano Murillo, R., & Coles, E. (2010). Ruby on Rails, una forma rápida de hacer aplicaciones web. Recuperado el 26 de Julio de 2012, de http://www.di- mare.com/adolfo/cursos/2007-2/pp-RubyOnRails.pdf Soler, E. (2006). Constructivismo, innovación y enseñanza efectiva. Equinoccio. Soto, L. (2009). Clasificación del Software. Recuperado el 08 de Mayo de 2012, de http://www.mitecnologico.com/Main/ClasificacionDelSoftware Tamayo Yero, M. J., Lemes Báez, J. J., & Naranjo Ortiz, T. (2011). Sistema Integral para el Control de Cuentas de Dominio Provincial. Recuperado el 30 de 109 Mayo de 2012, de http://jornada2011.sld.cu/index.php/jornada/2011/paper/viewFile/105/39 The jQuery Foundation. (2012). jQuery UI. Recuperado el 15 de Octubre de 2012, de http://jqueryui.com/ Twitter. (2012). Bootstrap. Recuperado el 15 de Octubre de 2012, de http://twitter.github.com/bootstrap/index.html Unesco. (2009). Unesco. Recuperado el 26 de Julio de 2012, de http://unesdoc.unesco.org/images/0014/001473/147330s.pdf Unicef. (2007). Todos pueden aprender Lengua y Matemática Primer Ciclo. Buenos Aires - Argentina. W3C. (31 de Agosto de 2012). Accessibility. Recuperado el 24 de Septiembre de 2012, de http://www.w3.org/standards/webdesign/accessibility W3C. (2012). Guía Breve de Tecnologías XML. Recuperado el 28 de Mayo de 2012, de http://www.w3c.es/Divulgacion/GuiasBreves/TecnologiasXML W3C. (s.f.). Guía Breve CSS3. Recuperado el 26 de Mayo de 2012, de http://www.w3c.es/Divulgacion/GuiasBreves/HojasEstilo W3Schools. (2012). HTML5 Introduction. Retrieved Mayo 20, 2012, from http://www.w3schools.com/html5/html5_intro.asp Websanova. (2012). wColorPicker. Recuperado el 15 de Octubre de 2012, de http://www.websanova.com/plugins/websanova/color-picker Websoft Ltd. (s.f.). Course Lab. Recuperado el 02 de Julio de 2012, de http://www.courselab.com/db/cle/root_id/courselab/doc.html Weitzenfeld, A. (2005). Ingenieria de Software Orientada a Objetos Con Uml, Java E Internet. Cengage Learning Editores. Weitzenfeld, A. (2005). Ingeniería de Software Orientada a Objetos Con Uml, Java E Internet. Cengage Learning Editores. Wiley, D. (2000). “Connecting learning objects to instructional design theory: A definition, a metaphor, and a taxonomy. Recuperado el 8 de Agosto de 2012, de http://www.reusability.org/read/#1 Wiley, D. (2007). The Learning Objects Literature. En D. Wiley, The Learning Objects Literature (págs. 346-352). 110 Wiley, D. (2010). Learning Object Design and Sequencing Theory. Recuperado el 5 de Agosto de 2012, de http://www.opencontent.org/docs/dissertation.pdf Winter, R. (2000). Manual de Trabajo en Equipo. Ediciones Díaz de Santos. Wojciech Cellary, E. E. (2010). Software Services for e-World. Buenos Aires, Argentina: Springer. Zaefferer, J. (2012). jQuery Validation. Recuperado el 15 de Octubre de 2012, de https://github.com/jzaefferer/jquery-validation Zapata Ros, M. (3 de Febrero de 2005). Secuenciación de contenidos y objetos de aprendizaje. Recuperado el 18 de Septiembre de 2012, de RED. Revista de Educación a Distancia, número monográfico II.: http://www.um.es/ead/red/M2/zapata47.pdf Zapata Ros, M. (15 de Julio de 2011). Patrones en elearning. Elementos y referencias para la formación. Recuperado el 18 de Septiembre de 2012, de Red, Revista de Educación a Distancia. Número 27: http://www.um.es/ead/red/27/patrones.pdf 111 ANEXO Patrones de Tarea Nombre Crear OA. Problema El usuario administrador/grupo docente desea crear un OA nuevo que pueda ser compartido o visualizado. Solución Mostrar una interfaz inicial que contenga: un menú de enlaces que permitirá acceder a las otras interfaces de la aplicación, un resumen de los datos del usuario, el listado de OA creados por éste. El menú de enlaces dispondrá de un botón para acceder al perfil que posee una lista desplegable con las opciones: crear OA, crear usuario, gestionar OA, gestionar exámenes, gestionar usuarios, actualizar datos, cambiar contraseña y cerrar sesión. El usuario podrá crear un OA a través de la lista desplegable o el listado de OA. 112 Contexto El usuario ha iniciado sesión en la aplicación web. Fuerzas Se le brindan al usuario dos formas para crear OA: una es utilizando la lista de opciones en el menú de enlaces y la otra haciendo clic en la opción “Crear OA” del listado de OA. Usabilidad - Minimizar la carga cognitiva. Consecuencias Muestra un popup para seleccionar el patrón educativo a utilizar. 113 Patrones relacionados Seleccionar patrón, Agregar Información Básica. Nombre Seleccionar Patrón. Problema El usuario administrador/grupo docente desea crear un OA a partir de algún patrón tecno-pedagógico preestablecido. Solución Para solucionar este problema será mostrado un popup que lista los diversos patrones existentes en la aplicación web, mostrando su título y algunos datos disponibles como su descripción permitiendo al usuario verlos a haciendo clic en sus respectivas pestañas. Contexto El usuario está seleccionando el patrón tecno- pedagógico que utilizará para un nuevo OA. Fuerzas Ofrece una breve descripción de los patrones tecno- pedagógicos. Usabilidad - Minimizar la carga cognitiva. - Satisfacción del usuario. 114 Consecuencias El patrón tecno-pedagógico fue seleccionado y puede continuar con el siguiente paso: Agregar Información Básica del OA. Nombre Agregar Información Básica del OA. Problema El usuario administrador/grupo docente desea poder agregar información básica como Título, Idioma y portada antes de comenzar la creación del OA. Solución Para solucionar este problema será mostrado un popup que contiene un formulario con los campos del título, idioma y portada. Contexto El usuario está creando un OA nuevo. Fuerzas Cada campo contará con una marca de agua que indica la información que debe ser introducida. Los campos del formulario son validados y además se muestran mensajes de error en caso de que alguno de los campos esté vacío o exceda el límite de caracteres. 115 Usabilidad - Satisfacción del usuario. - Buen feedback al usuario. - Minimizar la carga cognitiva. Consecuencias La información básica del OA fue agregada. Nombre Ver usuarios. Problema El usuario administrador desea visualizar los usuarios del sistema y poder gestionarlos. Solución Para que el usuario administrador pueda listar los usuarios, debe hacer clic en el enlace “Usuarios” del Submenú de Enlaces; ésta opción le permitirá listar los usuarios que se encuentran registrados. Contexto El usuario ha iniciado sesión y se encuentra en su perfil. Fuerzas Se le muestra al usuario una única opción para acceder a esta funcionalidad, la cual se encuentra en el Submenú de Enlaces. Usabilidad - Menos es más. 116 - Satisfacción del usuario. - Fácil de recordar. Consecuencias El usuario administrador puede listar los usuarios del sistema y gestionarlos. Nombre Crear usuario. Problema El usuario administrador desea crear un nuevo usuario. Solución Para que el usuario administrador pueda crear un nuevo usuario, es necesario que haga clic en el enlace “Crear usuario” que se encuentra en el listado de usuarios, éste le permitirá crear un usuario. Contexto El usuario ha iniciado sesión y se encuentra en su perfil en la sección de “Usuarios”. Fuerzas Se le muestra al usuario una única opción para acceder a esta funcionalidad a través del enlace 117 “Crear usuario” en el listado de usuarios. Usabilidad - Menos es más. - Satisfacción del usuario. - Fácil de recordar. Consecuencias El usuario administrador puede crear usuarios. Patrones relacionados Gestionar usuarios. Nombre Gestionar usuarios. Problema El usuario administrador desea gestionar los usuarios en el sistema. Solución Para que el usuario administrador pueda gestionar usuario, es necesario que coloque el cursor del ratón sobre alguno de los usuarios que se encuentra en el listado de usuarios; podrá eliminarlo o modificar los datos asociados a éste. Contexto El usuario administrador ha iniciado sesión y se encuentra en su perfil en la sección de “Usuarios”. Fuerzas Se le muestra al usuario una única opción para acceder a esta funcionalidad, la cual es colocando el cursor sobre algún usuario en el listado. 118 Usabilidad - Menos es más. - Satisfacción del usuario. - Fácil de recordar. Consecuencias El usuario administrador puede gestionar los usuarios. Patrones relacionados Crear usuario. Nombre Iniciar Sesión. Problema El usuario desea iniciar sesión. Solución Para iniciar sesión el usuario debe hacer clic en el botón “Iniciar Sesión” del menú de enlaces, al hacer clic se desplegará un popup, éste contendrá un formulario con los campos requeridos para el inicio de sesión. Contexto El usuario no ha iniciado sesión y está registrado en 119 el sistema. Fuerzas Se brinda al usuario una única forma de acceder a ésta funcionalidad a través del botón “Iniciar Sesión” que se encuentra en el Menú de Enlaces. Usabilidad - Fácil de recordar. - Minimizar carga cognitiva. Consecuencias El usuario puede iniciar sesión. Nombre Listar OA. Problema El usuario desea listar los OA. Solución Para que el usuario pueda listar los OA; Si es estudiante debe encontrarse en la Galería de OA; En cambio sí es Administrador o Grupo Docente debe encontrarse en la Galería de OA o en su perfil si desea visualizar los OA que ha creado; Los usuarios podrán acceder a estas interfaces a través del Menú de Enlaces. Contexto El usuario se encuentra en la galería o ha iniciado sesión y se encuentra en su perfil. 120 Fuerzas Se le muestra al usuario dos opciones para acceder a esta funcionalidad, haciendo clic en el enlace a la galería o haciendo clic en el botón que lo lleva a su perfil. Usabilidad - Menos es más. - Satisfacción del usuario. - Fácil de recordar. Consecuencias El usuario puede listar los OA. Nombre Gestionar OACA. Problema El usuario desea poder gestionar un OACA. Solución Para que el usuario pueda gestionar un OACA, es necesario que posicione el cursor del ratón sobre el OA; éste observará las opciones disponibles y deberá hacer clic en la opción que desee. Las opciones disponibles son:  Ver OA.  Editar el OA.  Cambiar la portada y otros datos del OA.  Reutilizar el OA.  Crear/Modificar el examen del OA.  Descargar el OA.  Eliminar el OA. 121 Contexto El usuario ha iniciado sesión; se encuentra en la Galería de OA si es Estudiante, Grupo Docente o Administrador; O bien, se encuentra en su perfil si es Grupo Docente o administrador. Fuerzas Se le brinda al usuario dos formas de acceder a esta funcionalidad, con un grupo de botones que se muestran al pasar el cursor del ratón encima de cada OA que es listado. Usabilidad - Menos es más - Fácil de recordar Consecuencias El usuario puede gestionar sus OACA. Nombre Modificar OA. Problema El usuario administrador/grupo docente desea poder modificar las páginas que componen su OA. 122 Solución Para modificar las páginas bastará con seleccionar la página del OA a modificar, a través de la lista desplegable que muestra éstas. Contexto Usuario administrador/grupo docente está editando su OA. Fuerzas Permite listar y acceder a las páginas que componen un OA, además, permite agregar una página o eliminar alguna. Usabilidad -Satisfacción del usuario. -Minimizar carga cognitiva. Consecuencias El usuario puede gestionar las páginas que componen el OA. Patrones relacionados Insertar imagen, insertar selección simple, insertar cuadro de texto, insertar video. 123 Nombre Insertar Imagen. Problema El usuario administrador/grupo docente desea insertar imágenes dentro de las páginas que componen el OA. Solución Para insertar imágenes a alguna de las páginas del OA, el usuario debe hacer clic sobre el botón para insertar imágenes en la barra lateral, lo que hará que se muestre un popup en la que podrá seleccionar la imagen a insertar en su OA, ésta ventana contará con un formulario que le permitirá abrir el selector de archivos mostrando solamente archivos del tipo imagen. Contexto El usuario administrador/grupo docente está editando su OA. Fuerzas Le ofrece la posibilidad al usuario de seleccionar el archivo de imagen que desea insertar en la página. Usabilidad - Buen feedback al usuario. - Minimiza la carga cognitiva. Consecuencias El usuario puede insertar imágenes en las páginas 124 que componen su OA. Nombre Modificar Metadatos. Problema El usuario administrador/grupo docente desea modificar los metadatos asociados a su OA. Solución Para modificar los metadatos asociados al OA, el usuario debe hacer clic sobre el botón “Metadatos OA”, éste se encuentra debajo de la barra de herramientas superior; al hacer clic se desplegará un popup; se podrán ver y modificar los metadatos a través del formulario que éste muestra. Contexto El usuario está editando una página del OA. Fuerzas Le ofrece la posibilidad al usuario administrador/grupo docente de modificar los metadatos asociados al OA. Usabilidad - Buen feedback al usuario. - Minimiza la carga cognitiva. 125 Consecuencias El usuario puede modificar los metadatos de su OA. Nombre Insertar Video. Problema El usuario administrador/grupo docente desea insertar videos dentro de las páginas que componen el OA. Solución Para insertar videos en la página que se encuentra editando del OA, el usuario tendrá que hacer clic en la opción “Insertar Video” de la barra lateral; esto hará que se despliegue un popup, donde podrá seleccionar el video, a través de un formulario, éste permitirá abrir el selector de archivos que mostrará solamente archivos del tipo video. Contexto El usuario está editando un OA. Fuerzas Le ofrece la posibilidad al usuario de seleccionar el archivo de video que desea insertar en la página. Usabilidad - Buen feedback al usuario. - Minimiza la carga cognitiva. Consecuencias El usuario puede insertar videos en las páginas que componen un OA. 126 Nombre Insertar Texto. Problema El usuario administrador/grupo docente desea insertar texto dentro de las páginas que componen el OA. Solución Para insertar texto en la página que está editando del OA, el usuario debe hacer clic sobre el botón “Insertar Texto” de la barra lateral; esto hará que se inserte un cuadro de texto en la página actual. Contexto El usuario está editando un OA. Fuerzas Le ofrece la posibilidad al usuario de insertar un cuadro de texto en la página. Usabilidad - Buen feedback al usuario. - Minimiza la carga cognitiva. Consecuencias El usuario puede insertar texto en las páginas que componen su OA. 127 Nombre Buscar OA. Problema El usuario desea buscar OA. Solución Para buscar OA el usuario deberá ubicar el formulario de búsqueda en el Submenú de Enlaces; ingresar el título del OA y presionar el botón “Buscar OA”. Contexto El usuario ha iniciado sesión, se encuentra en su perfil o en la galería de OA. Fuerzas Se le brinda al usuario dos formas de acceder a esta funcionalidad, la primera en la galería de OA y la segunda en el perfil del usuario. Usabilidad - Satisfacción del usuario. Consecuencias El usuario puede encontrar OA. Nombre Realizar Examen Problema El usuario desea presentar un examen del OA y poder visualizar sus notas. Solución Para presentar un examen, el usuario debe hacer clic en el enlace “Evaluación”; el usuario podrá 128 llenar un formulario con todas las respuestas y guardarlas; una vez enviado el examen el usuario no podrá modificar las respuestas, pero, si podrá ver las calificaciones. Contexto El usuario ha iniciado sesión y está visualizando un OA. Fuerzas Le ofrece al usuario una única opción para realizar la presentación de un examen asociado al OA; El usuario también podrá visualizar la nota de su examen una vez presentado este. Usabilidad - Buen feedback al usuario. - Minimiza la carga cognitiva. Consecuencias El usuario puede presentar los exámenes y consultar las notas obtenidas. Nombre Ver Exámenes. Problema El usuario administrador/grupo docente desea poder listar los exámenes presentados por los estudiantes y corregirlos. 129 Solución Para visualizar los exámenes, el usuario debe hacer clic en el enlace “Exámenes” en el Submenú de Enlaces; el usuario podrá observar un listado con todos los exámenes presentados por los usuarios, adicionalmente, podrá escoger si desea visualizar los exámenes por corregir o los ya corregidos a través del mismo Submenú de Enlaces. Contexto El usuario ha iniciado sesión y está en la sección “Exámenes” de su perfil de usuario. Fuerzas Le ofrece al usuario una única opción para listar los exámenes presentados por los estudiantes. Usabilidad - Buen feedback al usuario. - Minimiza la carga cognitiva. Consecuencias El usuario puede listar los exámenes presentados por los usuarios. Nombre Corregir Examen. 130 Problema El usuario administrador/grupo docente desea corregir los exámenes presentados por los estudiantes. Solución Para corregir un examen el usuario debe hacer clic en el botón “Corregir”; éste se encuentra junto a cada examen en el listado de exámenes; al hacer clic se le desplegará un popup que contendrá un formulario con las preguntas y respuestas del estudiante, allí podrá colocar la nota. Contexto El usuario ha iniciado sesión, ha accedido al listado de exámenes e hizo clic en modificar/corregir algún examen, por lo cual está corrigiendo un examen. Fuerzas Le ofrece al usuario una única opción para corregir o modificar cada uno de los exámenes presentados por los alumnos. Usabilidad - Buen feedback al usuario. - Minimiza la carga cognitiva. Consecuencias El usuario puede corregir los exámenes de los 131 estudiantes. 132 Especificación de los Casos de Uso La siguiente tabla muestra las especificaciones del diagrama de casos de uso. Especificaciones del diagrama de casos de uso Caso de uso 1 Ver OA Actores Visitante, Estudiante, Grupo Docente, Administrador Propósito Mostrarle al usuario el OA. Descripción El usuario accede a visualizar algún OA. Precondiciones Ninguna Postcondiciones El usuario tendrá la información dispuesta en el recurso. Caso de uso 2 Listar OA Actores Visitante, Estudiante, Grupo Docente, Administrador Propósito Mostrarle al usuario que existen en el Gestor de OACA. Descripción El usuario accede a la galería de OA. Precondiciones Ninguna Postcondiciones El usuario podrá ver los OA existentes. Caso de uso 3 Buscar OA Actores Visitante, Estudiante, Grupo Docente, Administrador Propósito Permitirle al usuario ubicar un determinado OA. Descripción El usuario accede a la galería de OA o a su perfil e ingresa las palabras claves del OA a buscar. Precondiciones Para acceder desde su perfil, el usuario debe haber iniciado sesión. Postcondiciones El usuario podrá buscar los OA que desee encontrar. 133 Caso de uso 4 Descargar OA Actores Visitante, Estudiante, Grupo Docente, Administrador Propósito Permitirle al usuario obtener una copia de un determinado OA. Descripción El usuario accede a la galería de OA o a su perfil y en el listado de OA, presiona el botón descargar. Precondiciones Para acceder desde su perfil, el usuario debe haber iniciado sesión. Postcondiciones El usuario obtiene una copia del OA. Caso de uso 5 Iniciar Sesión Actores Estudiante, Grupo Docente, Administrador Propósito Permitirle al usuario iniciar sesión en el sistema. Descripción El usuario accede al formulario de iniciar sesión, rellena los campos e inicia sesión. Precondiciones El usuario debe estar registrado en el sistema. Postcondiciones El usuario ha iniciado sesión, ahora puede acceder a su perfil y tiene acceso a la herramienta que permite emular la consola de Linux. Caso de uso 6 Llenar el examen de OA Actores Estudiante, Grupo Docente, Administrador Propósito Permitirle al usuario rellenar el examen asociado a un OA. Descripción Se le muestra al usuario un formulario con los campos correspondientes al examen del OA que se encuentra visualizando. Precondiciones El usuario debe haber iniciado sesión. Postcondiciones El usuario ha enviado sus respuestas del examen para que sea evaluado por el Grupo Docente. 134 Caso de uso 7 Crear OA Actores Grupo Docente, Administrador Propósito Permitirle al usuario crear OA. Descripción Se le muestra al usuario una ventana emergente, para que rellene los campos básicos para crear un OA. Precondiciones El usuario debe haber iniciado sesión. Postcondiciones El usuario debe utilizar un patrón Caso de uso 7.1 Utilizar patrón Actores Grupo Docente, Administrador Propósito Permitirle al usuario seleccionar el patrón a utilizar para crear el OA. Descripción Se le muestra al usuario los patrones disponibles en el sistema para que seleccione el de su conveniencia. Precondiciones El usuario debe estar creando un OA, y debe haber rellenado y enviado los campos básicos. Postcondiciones El usuario ha creado un OA y está editándolo. Caso de uso 8 Modificar OA Actores Grupo Docente, Administrador Propósito Permitirle al usuario editar un OA. Descripción Se le muestra al usuario el contenido del OA para que pueda editarlo, así como las barras de edición para agregar nuevos elementos y desplazarse entre las páginas que componen el OA. Precondiciones El usuario debe haber seleccionado editar uno de los OA que ha creado o debe haber reutilizado alguno existente. Postcondiciones El usuario ha editado el OA. Caso de uso 8.1 Insertar imagen 135 Actores Grupo Docente, Administrador Propósito Permitirle al usuario insertar una imagen en una página del OA. Descripción Se le muestra al usuario una ventana emergente, donde puede seleccionar una imagen de su computador para cargarla e insertarla en la página que se encuentra editando. Precondiciones El usuario debe estar editando un OA. Postcondiciones El usuario ha insertado una imagen en la página que se encuentra editando. Caso de uso 8.2 Insertar video Actores Grupo Docente, Administrador Propósito Permitirle al usuario insertar un video dentro en la página que se encuentra editando. Descripción Se le muestra al usuario una ventana emergente, donde puede seleccionar el vídeo de su computador para cargarlo e insertarlo en la página que se encuentra editando. Precondiciones El usuario debe estar editando un OA. Postcondiciones El usuario ha insertado un video en la página que se encuentra editando. Caso de uso 8.3 Insertar texto Actores Grupo Docente, Administrador Propósito Permitirle al usuario insertar texto dentro en la página que se encuentra editando. Descripción Se le muestra al usuario un botón que le permite insertar cuadros de texto. Precondiciones El usuario debe estar editando un OA. 136 Postcondiciones El usuario ha insertado texto en la página que se encuentra editando. Caso de uso 8.4 Editar metadatos Actores Grupo Docente, Administrador Propósito Permitirle al usuario editar los metadatos del OA que se encuentra editando. Descripción Se le muestra al usuario una ventana emergente que le permite editar los metadatos del OA. Precondiciones El usuario debe estar editando un OA. Postcondiciones El usuario ha modificado los metadatos del OA. Caso de uso 9 Reutilizar OA Actores Grupo Docente, Administrador Propósito Permitirle al usuario reutilizar los OA existentes en el Gestor de OACA. Descripción El usuario reutiliza un OA manteniendo el cursor del mouse sobre un OA, en la galería o en su perfil y accediendo a la opción correspondiente, se le muestra al usuario una ventana donde puede agregar los datos básicos del OA. Precondiciones El usuario debe encontrarse en la galería o en su perfil y debe haber iniciado sesión. Postcondiciones El usuario ha reutilizado un OA y se encuentra editándolo. Caso de uso 10 Crear examen Actores Grupo Docente, Administrador Propósito Permitirle al usuario crear un examen para un OA. 137 Descripción El usuario crea un examen para un OA manteniendo el cursor del mouse sobre un OA, en la galería o en su perfil y accediendo a la opción correspondiente, se le provee al usuario un formulario para crear las preguntas, respuestas y asignarles una ponderación. Precondiciones El usuario debe haber iniciado sesión y debe haber creado al menos un OA. Postcondiciones El usuario ha creado un examen para un OA. Caso de uso 11 Modificar examen Actores Grupo Docente, Administrador Propósito Permitirle al usuario modificar un examen para un OA. Descripción El usuario modifica un examen para un OA manteniendo el cursor del mouse sobre un OA, en la galería o en su perfil y accediendo a la opción correspondiente, se le provee al usuario un formulario para modificar las preguntas, respuestas y asignarles una ponderación. Precondiciones El usuario debe haber iniciado sesión y debe haber creado al menos un OA. Postcondiciones El usuario ha creado un examen para un OA. Caso de uso 11 Visualizar notas de los exámenes Actores Grupo Docente, Administrador Propósito Permitirle al usuario visualizar las notas de los exámenes. Descripción El usuario accede a la sección de exámenes de su perfil a través del menú, y se le muestran las notas de los OA que han sido presentados y corregidos. Precondiciones El usuario debe haber iniciado sesión. Postcondiciones El usuario ha visualizado las notas. 138 Caso de uso 12 Corregir examen Actores Grupo Docente, Administrador Propósito Permitirle corregir un examen al usuario. Descripción El usuario accede a la sección de exámenes de su perfil a través del menú, y se le muestran los exámenes por corregir, accede a alguno de estos y se le muestra un formulario para realizar la respectiva corrección. Precondiciones El usuario debe haber iniciado sesión. Postcondiciones El usuario ha corregido un examen. Caso de uso 13 Crear usuario Actores Administrador Propósito Permitirle al usuario crear nuevos usuarios en el sistema. Descripción El usuario accede a la sección de usuarios de su perfil a través del menú, y se le muestra la opción correspondiente para crear usuario, posteriormente al hacer clic en ésta, se le mostrará un formulario que le permitirá crear un usuario. Precondiciones El usuario debe haber iniciado sesión. Postcondiciones El usuario ha creado un usuario. Caso de uso 14 Modificar usuario Actores Administrador Propósito Permitirle al usuario modificar usuarios del sistema. Descripción El usuario accede a la sección de usuarios de su perfil a través del menú, y se le muestra la opción correspondiente para editar usuario al colocar el cursor del mouse sobre alguno de los usuarios listados, posteriormente al hacer clic en ésta, se le mostrará un formulario que le permitirá modificar un usuario. 139 Precondiciones El usuario debe haber iniciado sesión. Postcondiciones El usuario ha modificado un usuario. Caso de uso 15 Borrar usuario Actores Administrador Propósito Permitirle al usuario borrar usuarios del sistema. Descripción El usuario accede a la sección de usuarios de su perfil a través del menú, y se le muestra la opción correspondiente para borrar usuario al colocar el cursor del mouse sobre alguno de los usuarios listados, podrá borrarlo. Precondiciones El usuario debe haber iniciado sesión. Postcondiciones El usuario ha eliminado un usuario. Caso de uso 16 Exportar usuario Actores Administrador Propósito Permitirle al usuario exportar usuarios del sistema. Descripción El usuario accede a la sección de usuarios de su perfil a través del menú, y se le muestra la opción correspondiente exportar usuarios. Precondiciones El usuario debe haber iniciado sesión. Postcondiciones El usuario habrá exportado los usuarios en el sistema en un archivo CSV. Caso de uso 17 Cargar estudiantes Actores Administrador Propósito Permitirle al usuario crear usuarios de forma masiva. 140 Descripción El usuario accede a la sección de usuarios de su perfil a través del menú, y se le muestra la opción correspondiente cargar estudiantes, posteriormente al hacer clic se le mostrará una ventana emergente para que seleccione el archivo CSV. Precondiciones El usuario debe haber iniciado sesión y debe cargar el archivo CSV con la información de los estudiantes. Postcondiciones El usuario habrá creado usuarios con el rol estudiante, de forma masiva. Caso de uso 18 Borrar estudiantes Actores Administrador Propósito Permitirle al usuario borrar usuarios de forma masiva. Descripción El usuario accede a la sección de usuarios de su perfil a través del menú, y se le muestra la opción correspondiente borrar estudiantes. Precondiciones El usuario debe haber iniciado sesión. Postcondiciones El usuario habrá borrado estudiantes de forma masiva.