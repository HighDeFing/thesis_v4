Universidad Central de Venezuela Universidad Central de Venezuela Facultad de Ciencias Escuela de Computación Modelo de Sistema de Gestión y Monitoreo para los Puntos de Acceso Inalámbricos Heterogéneos Multifabricante. Caso de Estudio: Facultad de Ciencias de la Universidad Central de Venezuela Trabajo Especial de Grado presentado Por el bachiller: Kendall Rober Navarro Urbina C.I.: 16.412.971 Para optar al Título de Licenciado en Computación Tutora: Prof. Ana Verónica Morales. Caracas, Octubre del 2011 Acta ACTA Quienes suscriben, miembros del jurado designado por el Consejo de la Escuela de Computación de la Facultad de Ciencias de la Universidad Central de Venezuela, para examinar el Trabajo Especial de Grado titulado: Sistema de Administración y Monitoreo para los Punto de acceso Inalámbricos de la Facultad de Ciencias de la Universidad Central de Venezuela, presentado por el bachiller Kendall R. Navarro U., C.I.: 16.412.971, a los fines de optar por el título de Licenciado en Computación, dejan constancia de lo siguiente: Dicho trabajo, leído por cada uno de los miembros del jurado, se fijó el día ________________________________, a las ____________, para que sus autores lo defendieran en forma pública en la Escuela de Computación, mediante una presentación oral de su contenido, luego de lo cual respondieron a las preguntas formuladas. Finalizada la defensa pública del Trabajo Especial de Grado, el jurado decidió aprobarlo con la nota de ___________ puntos. En fe de lo cual se levanta la presente Acta, en Caracas a los treinta y un (31) días del mes de octubre del año dos mil once (2011), dejando constancia de que actuó como coordinador del jurado la Profesora Ana Verónica Morales Bezeira. ______________________________ ______________________________ Prof. Ana Morales Prof. María E. Villapol (Tutor) (Jurado) ______________________________ Prof. Jaime Parada (Jurado) Dedicatoria Dedicatoria. A mis padres, por brindarme su apoyo y estar allí en los momentos en que los necesite, de manera incondicional. A mi hijo, que me da la fuerza necesaria para continuar y ser más cada día, que con su inocencia me inspira a continuar luchando por lo que quiero. A mi compañera, complemento de mí ser. Agradecimientos Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación IV Agradecimientos. A Dios en primer lugar, por bendecir mi vida de tantas maneras. A mi madre por todo el amor y los sacrificios que ha realizado para lograr que alcanzara este preciado logro. Sé que esta meta alcanzada por mi también es un logro para ella. A mi padre, porque gracias a sus lecciones y enseñanzas estoy alcanzando ser mejor persona cada día. A mis hermanos, porque de ustedes aprendo cada día el valor de poder contar siempre con alguien. A mi morenita Elianny López por apoyarme en todo este camino y estar conmigo en los momentos más difíciles de mi vida. Para ti va dedicado este logro que se que compartiremos juntos toda la vida. A mi hijo que gracias a su sonrisa, amor y compañía me llena de energía para continuar este largo camino de éxitos. A mi compadre Andrés “Porfi” Blanco que siempre está conmigo en las buenas y en las malas. A mí cuñado Williams Quevedo por siempre estar cuando lo necesito. A mis suegros que siempre me brindaron su apoyo cuando los necesitaba. A la profesora Ana Morales por brindarme su apoyo en los momentos más difíciles de mi carrera, sin su apoyo este logro hubiera sido imposible. Muchísimas gracias profesora. Muchas personas tocaron mi vida para bien durante mi paso por la Facultad de Ciencias, a todos aquellos con quienes compartí momentos de estudio, como también de “sano ocio”. Gracias por su tiempo y disposición. Agradecimientos Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación V A la ilustre Universidad Central de Venezuela, por brindarme una educación de excelencia, tanto en lo académico como en lo humano. Y por formar parte de mi vidas. Resumen Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación VI Resumen. El presente Trabajo Especial de Grado propone un sistema Web que permita la administración y el monitoreo de los Puntos de Acceso que permiten acceder a Internet de manera inalámbrica dentro de la Facultad de Ciencias de la Universidad Central de Venezuela. De esta manera, todo el proceso de administración y monitoreo se puede realizar de forma sencilla, rápida y de manera centralizada e independiente del fabricante de los equipos. El modelo de sistema de administración y monitoreo de los Puntos de Acceso es capaz de llevar estadísticas que serán presentadas de forma grafica al administrador para que detecte el estado y comportamiento de cada uno de los Puntos de Acceso registrados en la base de datos del sistema. Para el desarrollo de la aplicación, se implementó la Metodología de Desarrollo Rápido de Aplicaciones, en el cual se realizaron procesos iterativos para depurar y mejorar la aplicación, basados en las pruebas, requerimientos y observaciones de los usuarios de la aplicación. El resultado final del análisis fue la creación una interfaz amigable y usable, en el cual el administrador del sistema puede llevar a cabo las tareas de gestión de los dispositivos que conforman la red inalámbrica de la Facultad de Ciencias de forma centralizada. Palabras Clave: Aplicación Web, punto de acceso, Cliente/Servidor, Desarrollo Rápido de Aplicaciones. Índice de Contenidos Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación VII Índice de Contenidos. Índice de Tablas. ........................................................................... IX Índice de Figuras. ........................................................................... X Introducción ................................................................................. 1 Capítulo I. Problema de Investigación. ................................................. 3 1.1 Planteamiento del Problema. ...................................................... 3 1.2 Objetivos. ............................................................................. 4 1.2.1 Objetivo General. ............................................................... 4 1.2.2 Objetivos Específicos. ........................................................ 4 1.3 Justificación e Importancia. ..................................................... 5 Alcance. .................................................................................... 5 1.4 Tecnologías Usadas. ............................................................... 6 Capítulo II. Marco Conceptual. ........................................................... 6 2.1 Aplicaciones Web Cliente/Servidor. ............................................ 7 2.1.1 Aplicaciones Web. ............................................................ 7 2.1.2 Arquitectura Cliente/Servidor .............................................. 7 2.1.3 El Patrón de Diseño MVC (Modelo-Vista-Controlador). .................. 9 2.2 Herramientas tecnológicas para el desarrollo de aplicaciones Web. .... 11 2.2.1 Tecnologías del lado del Cliente. ........................................ 12 2.2.1.1 Lenguaje de marcado de hipertexto (HTML o Hiper Text Markup Language). .......................................................................... 12 2.2.1.2 Cascading Style Spreadsheet (Hojas de Estilo en Cascada). ..... 13 2.2.1.3 JavaScript. .............................................................. 15 2.2.1.4 Ajax. ..................................................................... 16 2.2.1.5 JQuery ................................................................... 17 2.2.2 Tecnologías del Lado del Servidor ........................................ 18 2.2.2.1 Apache ................................................................... 18 2.2.2.2 PHP ....................................................................... 18 2.2.3 Tecnologías del lado del Servidor de Bases de Datos .................. 19 2.2.3.1 MySQL .................................................................... 19 2.3 Herramientas para el Monitoreo y Administración de Redes .............. 21 2.3.1 NMAP .......................................................................... 21 2.3.2 SNMP (Simple Network Management Protocol o Protocolo Simple de Gestión de Redes). ................................................................... 22 Capítulo III. Marco Metodológico ....................................................... 25 3.1. Metodología de Desarrollo de Software ........................................ 25 3.1.1 Metodología ADHOC ........................................................... 25 3.1.1.2 Ventajas de ADHOC. ..................................................... 26 Capítulo IV. Marco Aplicativo. .......................................................... 27 4.1 Proyecto. ............................................................................ 27 4.2 Fases del Proyecto. ................................................................ 28 4.2.1 Fase de Planeación de Requerimientos. ................................... 28 II. Autenticación (Login). ..................................................... 30 Índice de Contenidos Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación VIII III. Recuperar Contraseña. ..................................................... 31 IV. Cambiar Contraseña. ....................................................... 33 V. Administrar Usuario ........................................................ 34 VI. Agregar Usuario ............................................................. 36 VII. Información de Usuario. ................................................... 38 VIII. Editar Usuario ............................................................. 39 IX. Eliminar Usuario. ........................................................... 40 X. Administrar Punto de acceso. ............................................. 41 XI. Agregar Punto de acceso. ................................................. 43 XII. Editar información del Punto de acceso ................................. 47 XIII. Ver información del Punto de acceso. ................................ 48 XIV. Eliminar Punto de acceso. .............................................. 51 4.2.2 Taller de Diseño. ................................................................. 51 Requerimiento 1: Autenticación ................................................... 52 Requerimiento 2: Creación de Usuarios. .......................................... 53 Requerimiento 3: Visualización y Eliminación de Usuarios ..................... 54 Requerimiento 4: Editar información del Usuario. .............................. 55 Requerimiento 5: Agregar Punto de Acceso ...................................... 56 Requerimiento 6: Visualizar y Eliminar Punto de acceso ....................... 57 Requerimiento 7: Editar Punto de acceso ........................................ 58 Requerimiento 8: Opciones administrativas para los Puntos de Acceso ..... 59 Requerimiento 9: Escanear Red .................................................... 62 4.3.3. Implementación. ................................................................ 62 Capítulo V. Escenarios de Prueba ..................................................... 72 Escenario 1. .............................................................................. 72 Escenario 2. .............................................................................. 73 Escenario 3. .............................................................................. 75 Escenario 4. .............................................................................. 77 Conclusiones ............................................................................... 83 Trabajos Futuros .......................................................................... 86 Referencias Bibliográficas ............................................................... 88 Anexos ...................................................................................... 90 Manual de Usuario de la aplicación. ................................................. 90 Requerimientos de instalación y configuración para instalar la aplicación. ... 90 Script de Base de Datos de la aplicación. ........................................... 90 Índice de Tablas Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación IX Índice de Tablas. Tabla 1. Descripción del Caso de Uso Autenticar Usuario. .......................... 31 Tabla 2. Descripción de Caso de Uso Recuperar Contraseña. ....................... 33 Tabla 3. Descripción del Caso de Uso Cambiar Contraseña. ........................ 34 Tabla 4. Descripción Caso de Uso Administrar Usuario .............................. 36 Tabla 5. Descripción Caso de Uso Agregar Usuario. .................................. 37 Tabla 6. Descripción del Caso de Uso Ver información de Usuario. ................ 38 Tabla 7. Descripción del Caso de Uso Editar Usuario. ................................ 40 Tabla 8. Descripción del Caso de Uso Eliminar Usuario. ............................. 41 Tabla 9. Descripción del Caso de Uso Administrar Punto de acceso ............... 43 Tabla 10. Descripción del Caso de Uso Agregar Punto de acceso................... 45 Tabla 11. Descripción del Caso de Uso Agregar Punto de acceso................... 46 Tabla 11. Descripción del Caso de Uso Editar información del Punto de acceso. 48 Tabla 12. Descripción Caso de Uso Ver información del Punto de acceso. ....... 50 Tabla 13. Descripción del Caso de Uso Eliminar Punto de acceso. ................. 51 Índice de Figuras Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación X Índice de Figuras. Figura 1. Arquitectura Cliente-Servidor (Imagen tomada de http://es.sandramarramirez.wikia.com). ............................................... 9 Figura 2. Arquitectura MVC. ............................................................. 10 Figura 3. Red Administrada SNMP ....................................................... 23 Figura 4. Metodología ADHOC ............................................................ 26 Figura 5. Modelo Entidad-Relación del modelo de datos de la aplicación. ....... 29 Figura 6. Caso de Uso Autenticar Usuario (Login) ..................................... 30 Figura 7. Casos de Uso Recuperar Contraseña......................................... 32 Figura 8. Caso de Uso Cambiar Contraseña. ........................................... 34 Figura 9. Caso de uso Administrar Usuario ............................................. 35 Figura 10. Caso de Uso Agregar Usuario ................................................ 37 Figura 11. Caso de Uso Ver información de Usuario. ................................. 38 Figura 12. Caso de Uso Editar Usuario. ................................................. 39 Figura 13. Caso de Uso Eliminar Usuario. .............................................. 41 Figura 14. Caso de Uso Administrar Punto de acceso. ............................... 42 Figura 15. Caso de Uso Agregar Punto de acceso ..................................... 44 Figura 16. Caso de Uso Editar Información de Punto de acceso. ................... 47 Figura 17. Caso de Uso Ver información del Punto de acceso. ..................... 49 Figura 18. Caso de Uso Eliminar Punto de acceso. ................................... 51 Figura 19. Pantalla de Autenticación del Sistema. ................................... 52 Figura 20. Datos almacenados en adm_tusuarios para validar el proceso de autenticación. .............................................................................. 52 Figura 21. Pantalla que permite realizar la creación de un usuario ............... 53 Figura 22. Interfaz de Visualización de Usuario ....................................... 55 Figura 23. Botón de eliminación de Usuario en el Sistema. ......................... 55 Figura 24. Interfaz para la Edición del Usuario. ...................................... 56 Figura 25. Ventana para agregar nuevo Punto de acceso ............................ 57 Figura 26. Interfaz de Visualización de Punto de acceso. ........................... 58 Figura 27. Botón para eliminar un Punto de acceso. ................................. 58 Figura 28. Botón “Editar Router”. ...................................................... 59 Figura 29. Opciones de Administración. ................................................ 59 Figura 30. Comprobación del Estado del Punto de Acceso. ......................... 60 Figura 31. Estadísticas del Punto de Acceso registradas en la BD. ................. 60 Figura 32. Pagina administrativa del Punto de Acceso. .............................. 61 Figura 33. Estadísticas del Punto de Acceso. .......................................... 61 Figura 34. Interfaz de Escanear Red. ................................................... 62 Figura 35. Prueba de Agregar Usuario. ................................................. 63 Figura 36. Interfaz de visualización de Usuarios. ..................................... 64 Figura 37. Prueba de Editar Usuario. ................................................... 64 Figura 38. Datos Modificados para el Usuario josmaguirre. ......................... 65 Figura 39. Prueba de Eliminar Usuario. ................................................ 65 Figura 40. Tabla de Visualización de Usuarios. ........................................ 66 Índice de Figuras Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación XI Figura 41. Tabla adm_tusuarios con los usuarios registrados. ...................... 66 Figura 42. Prueba de Agregar Punto de acceso manual. ............................. 67 Figura 43. Interfaz de Visualización de Punto de acceso. ........................... 67 Figura 44. Interfaz de Modificación de Punto de acceso. ............................ 68 Figura 45. Ventana de Eliminación de Punto de acceso. ............................ 69 Figura 46. Tabla router con los Punto de acceso registrados. ...................... 69 Figura 47. Rastreo de Punto de acceso. ................................................ 70 Figura 48. Resultado del Rastreo del Punto de acceso. .............................. 70 Figura 49. Punto de acceso registrado luego del rastreo. ........................... 71 Figura 50. Inicio de la prueba, Escenario 1. ........................................... 73 Figura 51. Resultado mostrado al usuario en el Escenario 1. ....................... 73 Figura 52. Inicio de la prueba en el Escenario 2. ..................................... 74 Figura 53. Resultado mostrado al usuario en el Escenario 2. ....................... 75 Figura 54. Inicio de la prueba en el Escenario 3. ..................................... 76 Figura 55. Resultado mostrado al usuario en el Escenario 3. ....................... 76 Figura 56. Inicio de la prueba en el Escenario 4. ..................................... 78 Figura 57. Mensaje que se muestra al terminar el rastreo en el Escenario 4. .... 79 Figura 58. Resultado mostrado al usuario en el Escenario 4. ....................... 79 Figura 59. Pantalla para completar los datos del Punto de Acceso en el Escenario 4. ............................................................................................. 80 Figura 60. Resultado de haber registrado un dispositivo dentro de la Base de datos en el Escenario 4. .................................................................. 81 Figura 61. Se muestra la información del dispositivo en la tabla de Puntos de Accesos Registrados en la base de datos Escenario 4. ............................... 82 Introducción Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 1 Introducción Desde la creación de la red ARPANET a finales de los sesenta, el desarrollo y evolución de las redes que permiten la comunicación entre dispositivos ha tenido un enorme crecimiento. Actualmente, existen una gran cantidad de estándares, topologías y protocolos que permiten la comunicación efectiva entre dispositivos interconectados. La necesidad de realizar esta comunicación de manera sencilla llevó al origen de las redes inalámbricas, como extensión para prestar servicio en donde la instalación e implementación de una red cableada no es factible ya sea por cuestiones de costo o especificaciones de infraestructura. Este hecho se remonta a 1979 [1] cuando ingenieros de IBM en Suiza realizaron un experimento que consistía en utilizar enlaces infrarrojos para crear una red local en una fábrica. Este hecho puede considerarse el punto de partida para la evolución de la tecnología inalámbrica. En la actualidad, la Facultad de Ciencias de la Universidad Central de Venezuela cuenta con un conjunto de aplicaciones Web que permiten realizar distintas tareas de manera sencilla, desde procesos de inscripción hasta solicitudes estudiantiles y docentes. Actualmente en la Facultad de Ciencias se encuentran instalados un conjunto de Puntos de Acceso inalámbricos, que permiten el acceso a la intranet de la universidad a los usuarios de la Facultad. La labor de administración y monitoreo de los Puntos de Acceso es llevada manualmente y de forma individual por los administradores de la red, por tal razón dicha tarea se convierte muy tediosa para el administrador de red, ya que debe tener a la mano información fundamental sobre todos los Puntos de Acceso instalados dentro de la Facultad como pueden ser: La dirección IP, la ubicación física, la Mac address, etc. El Trabajo Especial de Grado consiste en utilizar las tecnologías de desarrollo para aplicaciones Web que ayuden a los administradores de la Red de la Facultad de Ciencias de la Universidad Central de Venezuela a gestionar y monitorear de Introducción Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 2 una manera sencilla y centralizada los dispositivos que se encuentran en la Red actual. El presente documento se encuentra estructurado de la siguiente manera: En el Capítulo I se describe el problema de la investigación donde se presenta el contexto del problema relacionado con la gestión y monitoreo de los Puntos de Acceso de la Facultad de Ciencias, así como el objetivo general y los objetivos específicos. En el Capítulo II se presenta el Marco Conceptual, el cual presenta las bases en las que se fundamenta el desarrollo de este trabajo. Se presentan las aplicaciones Web Cliente/Servidor, así como también la arquitectura Cliente/Servidor. Se presentan las tecnologías que van de la mano tanto del Cliente como del servidor, así como las herramientas usadas para el monitoreo de redes. En el Capítulo III se presenta el Marco Metodológico donde se define el método de Desarrollo Rápido de Aplicaciones, su característica, las ventajas y desventajas de la misma. En el Capítulo IV se presenta el Marco Aplicativo el cual especifica el conjunto de actividades realizadas así como los Casos de Uso de cada una de las funcionalidades del sistema. También se definen las iteraciones del método usado y las pruebas realizadas para verificar el funcionamiento de la aplicación. Capitulo I. Problema de Investigación Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 3 Capítulo I. Problema de Investigación. En el siguiente capítulo se expondrá la situación actual en la que se encuentra la Facultad de Ciencias de la Universidad de Venezuela con respecto a la red inalámbrica, y se mostrará el contexto del problema, que consiste en cómo se realiza el monitoreo y administración de los punto de acceso. De igual manera se expondrán los objetivos, general y específicos, la importancia y justificación de implementar un sistema centralizado de administración y monitoreo, así como también el alcance y los límites que se presentan al momento de implementar la solución al problema planteado. 1.1 Planteamiento del Problema. En la actualidad, dentro de la Facultad de Ciencias de la Universidad Central de Venezuela, se encuentran desplegados una serie de puntos de accesos inalámbricos para cubrir espacios críticos donde el acceso a la red por otros medios no es factible. El objetivo de dichos punto de acceso es apoyar las actividades académicas, docentes, de investigación y extensión. Con el tiempo, el despliegue de estos puntos de acceso ha aumentado notoriamente, por lo que se han adquirido dispositivos de diferentes fabricantes y modelos, debido a factores como el presupuesto disponible por la Universidad Central de Venezuela para tal fin, la disponibilidad del mercado venezolano o porque la adquisición de dispositivos de cierto fabricante puede ser de más provecho a la hora de cubrir ciertas necesidades y/o requerimientos tecnológicos. Debido a este crecimiento y diversidad, la tarea de conocer y monitorear el estado de cada punto de acceso, así como realizar las labores de administración y monitoreo de los mismos es una tarea bastante compleja. Para realizar las tareas de monitoreo, es necesario acceder a cada punto de acceso de manera separada, lo cual requiere que el personal de soporte técnico del Centro de Computación quienes son los encargados de realizar dichas tareas, deban conocer Capitulo I. Problema de Investigación Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 4 toda la información de cada uno de los dispositivos, así como su ubicación física dentro de la Facultad de Ciencias, dirección IP para el acceso a la interfaz de configuración de cada dispositivo, nombres de usuario y contraseña asignados a cada uno de estos punto de acceso. Esta situación, en la que el administrador debe estar dentro del rango de servicio de cada Punto de Acceso, así como conocer detalladamente la información de cada dispositivo a monitorear, da como resultado que esta tarea se realice con lentitud y que la misma no sea agradable al administrador. Debido a estos problemas, se planteó la idea de desarrollar e implementar una modelo de sistema Web, la cual permita el monitoreo y administración de cada uno de los Punto de Acceso activos en la red de una manera centralizada, rápida y efectiva, permitiendo también la incorporación de nuevos dispositivos necesarios para ampliar la cobertura dentro de la misma, facilitando la labor general del mantenimiento de la red. 1.2 Objetivos. 1.2.1 Objetivo General. Desarrollar una modelo de sistema Web que permita administrar y monitorear de manera centralizada los Puntos de Acceso que conforman la red inalámbrica de la Facultad de Ciencias de la Universidad Central de Venezuela. 1.2.2 Objetivos Específicos.  Recolectar información acerca de los dispositivos que conforman la red inalámbrica actual.  Analizar la información recolectada acerca de los Puntos de Acceso que se encuentran actualmente en funcionamiento.  Realizar el diseño de la aplicación Web.  Desarrollar módulo de gestión. Capitulo I. Problema de Investigación Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 5  Desarrollar módulo de monitoreo.  Definir escenarios de prueba para validar el comportamiento de la aplicación. 1.3 Justificación e Importancia. En la actualidad la Facultad de Ciencias cuenta con un conjunto de Puntos de Acceso para dar cobertura a lugares donde no existe o no está disponible la red cableada, permitiendo acceso de manera inalámbrica a la red de datos de la Universidad Central de Venezuela e Internet en general a sus estudiantes, docentes, empleados y obreros. El número de estos dispositivos se espera que crezca dentro de la Facultad de Ciencias, debido al costo de los equipos inalámbricos se sabe que la red inalámbrica estará compuesta por diferentes marcas de dispositivos de acuerdo a su precio y al presupuesto manejado para la compra de los equipos. Al no contar con una interfaz común que permita administrar y monitorear el estado de estos dispositivos hace que la labor de administración de la red sea tediosa, lenta y complicada, debido que para poder conocer el estado de toda la red, se debe acceder a cada Punto de Acceso por separado, por tal motivo surge la necesidad de implementar una aplicación Web que permita tener información centralizada de todos los Puntos de Acceso de la red para lograr así una administración eficiente, incrementando la calidad del servicio que se brinda a todos los usuarios. Con esta aplicación la tarea de administrar y monitorear los Puntos de Acceso se podrá realizar de una manera más rápida y eficiente. Alcance. La aplicación Web propuesta debe cubrir las siguientes necesidades:  Administrar y monitorear los Puntos de Accesos que están en la red registrados en la base de datos. Capitulo I. Problema de Investigación Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 6  Editar información acerca de un Punto de Acceso.  Desarrollar modulo de gestión de usuarios.  Desarrollar modulo de contacto con el administrador. 1.4 Tecnologías Usadas. Las tecnologías usadas para realizar el desarrollo de la aplicación Web son las siguientes:  PHP: Hipertext Pre-Procesor o Pre-procesador de Hipertexto, es un leguaje de programación interpretado para la creación de páginas Web.  Ajax: Asynchronous JavaScript and XML o JavaScript asíncrono y XML es un lenguaje de desarrollo de aplicaciones Web enriquecidas (Rich Internet Applications).  JavaScript: lenguaje de programación Web usado para el desarrollo de paginas dinámicas.  Apache: es un servidor Web multiplataforma el cual se utiliza para la publicación de páginas Web HTML. Este conjunto de tecnologías permitieron implementar el conjunto de funcionalidades definidas. El servidor Apache fue utilizado como contenedor para la aplicación, mientras que el modulo PHP permitirá interpretar el desarrollo de las funcionalidades. Los lenguajes Ajax y JavaScript, permitieron dar contenido dinámico a la aplicación. Capítulo II. Marco Conceptual. En este capítulo se definirá de manera detallada las tecnologías utilizadas para el desarrollo e implementación de la solución al problema planteado. Se expondrá la arquitectura Cliente-Servidor, así como el patrón MVC (Modelo-Vista- Controlador). Capitulo II. Marco Conceptual Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 7 Se explicarán las tecnologías que se ejecutan del lado del cliente y del lado del Servidor, así como también tecnologías que permiten el desarrollo de aplicaciones Web. Por último se explicaran las herramientas para el monitoreo de redes y para el descubrimiento de dispositivos dentro de la misma. 2.1 Aplicaciones Web Cliente/Servidor. 2.1.1 Aplicaciones Web. Se denomina Aplicación Web a aquellas aplicaciones que los usuarios pueden utilizar accediendo a un servidor Web a través de Internet o de una Intranet mediante un navegador. En otras palabras, es una aplicación software que se codifica en un lenguaje soportado por los navegadores Web en la que se confía la ejecución al navegador [1]. Una de las ventajas de las aplicaciones Web cargadas desde Internet o Intranet es la facilidad de mantener y actualizar dichas aplicaciones sin la necesidad de distribuir e instalar un software en, potencialmente, miles de clientes. También la posibilidad de ser ejecutadas en múltiples plataformas hace a las Aplicaciones Web una opción muy atractiva a la hora del desarrollo de aplicaciones [1]. Las Aplicaciones Web usan comúnmente una combinación de scripts del lado del servidor (ASP, PHP, etc.) y scripts del lado del cliente (HTML, JavaScript, etc.). Los scripts del lado del cliente se encargan de la presentación de la información mientras que los scripts del lado del servidor se encargan de toda la lógica utilizada para servir la información a los clientes [1]. 2.1.2 Arquitectura Cliente/Servidor El modelo arquitectónico cliente-servidor es un modelo de sistema en el que dicho sistema se organiza como un conjunto de servicios y servidores asociados, http://es.wikipedia.org/wiki/Servidor_web http://es.wikipedia.org/wiki/Internet http://es.wikipedia.org/wiki/Intranet http://es.wikipedia.org/wiki/Navegador_web http://www.alegsa.com.ar/Dic/plataforma.php Capitulo II. Marco Conceptual Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 8 más unos clientes que acceden y usan los servicios. Los principales componentes de este modelo son [2]:  Un conjunto de servidores que ofrecen servicios a otros subsistemas. Ejemplos de servidores son: servidores de impresoras que ofrecen servicios de impresión, servidores de archivos que ofrecen servicios de gestión y servidores de compilación, que ofrecen servicios de compilación de lenguajes de programación.  Un conjunto de clientes que llaman a los servicios ofrecidos por los servidores. Éstos son normalmente subsistemas en sí mismos. Puede haber varias instancias de un programa cliente ejecutándose concurrentemente.  Una red que permite a los clientes acceder a estos servicios. Esto no es estrictamente necesario ya que los clientes y los servidores podrían ejecutarse sobre una única máquina. En la práctica, sin embargo, la mayoría de los sistemas cliente-servidor se implementan como sistemas distribuidos [2]. En la figura 1 podemos observar un ejemplo de arquitectura Cliente/Servidor. Los clientes pueden conocer los nombres de los servidores disponibles y los servicios que éstos proporcionan. Sin embargo, los servidores no necesitan conocer la identidad de los clientes o cuántos clientes tienen. Los clientes acceden a los servicios proporcionados por un servidor a través de llamadas a procedimientos remotos usando un protocolo de petición-respuesta tal como el protocolo HTTP usado en la Red de Amplitud Mundial (WWW). Básicamente, un cliente realiza una petición a un servidor y espera hasta que recibe una respuesta [2]. Capitulo II. Marco Conceptual Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 9 Figura 1. Arquitectura Cliente-Servidor (Imagen tomada de http://es.sandramarramirez.wikia.com). 2.1.3 El Patrón de Diseño MVC (Modelo-Vista-Controlador). Es un patrón de arquitectura de software que separa los datos de una aplicación, la interfaz de usuario, y la lógica de control en tres componentes distintos. El patrón de llamada y retorno MVC se ve frecuentemente en aplicaciones Web, donde la vista es la página HTML y el código que provee de datos dinámicos a la página. El modelo es el Sistema de Gestión de Base de Datos y la lógica de negocio, y el controlador es el responsable de recibir los eventos de entrada desde la vista [3]. Cada vista tiene un objeto controlador asociado que maneja las entradas del usuario y la interacción de los dispositivos. Por lo tanto, un modelo que representa datos numéricos puede tener una vista que represente los datos como un histograma y una vista que presente los datos como una tabla. El modelo se puede editar cambiando los valores en la tabla o alargando o acortando las barras en el histograma. En la figura 2 se puede observar un ejemplo de la arquitectura MVC [3]. http://es.sandramarramirez.wikia.com/ http://es.wikipedia.org/wiki/Arquitectura_de_software http://es.wikipedia.org/wiki/Datos http://es.wikipedia.org/wiki/Interfaz_de_usuario http://es.wikipedia.org/wiki/L%C3%B3gica_de_control http://es.wikipedia.org/wiki/Componentes http://es.wikipedia.org/wiki/Web http://es.wikipedia.org/wiki/HTML http://es.wikipedia.org/wiki/Sistema_de_gesti%C3%B3n_de_base_de_datos http://es.wikipedia.org/wiki/L%C3%B3gica_de_negocio Capitulo II. Marco Conceptual Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 10 Figura 2. Arquitectura MVC. El modelo es el responsable de:  Acceder a la capa de almacenamiento de datos. Lo ideal es que el modelo sea independiente del sistema de almacenamiento.  Define las reglas de negocio (la funcionalidad del sistema). Un ejemplo de regla puede ser: "Si la mercancía pedida no está en el almacén, consultar el tiempo de entrega estándar del proveedor".  Lleva un registro de las vistas y controladores del sistema.  Si estamos ante un modelo activo, notificará a las vistas los cambios que en los datos pueda producir un agente externo (por ejemplo, un fichero batch que actualiza los datos, un temporizador que desencadena una inserción, etc.). Capitulo II. Marco Conceptual Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 11 El controlador es responsable de:  Recibir los eventos de entrada (un clic, un cambio en un campo de texto, etc.).  Contener reglas de gestión de eventos, del tipo "SI Evento Z, entonces Acción W". Estas acciones pueden suponer peticiones al modelo o a las vistas. Una de estas peticiones a las vistas puede ser una llamada al método "Actualizar()". Una petición al modelo puede ser "Obtener_tiempo_de_entrega( nueva_orden_de_venta )". Las vistas son responsables de:  Recibir datos del modelo y mostrarlos al usuario.  Mantener un registro de su controlador asociado (normalmente porque además lo instancia).  Pueden dar el servicio de "Actualización()", para que sea invocado por el controlador o por el modelo (cuando es un modelo activo que informa de los cambios en los datos producidos por otros agentes). 2.2 Herramientas tecnológicas para el desarrollo de aplicaciones Web. En un principio la Web era sencillamente una colección de páginas estáticas, documentos, etc., para su consulta o descarga. El paso inmediatamente posterior en su evolución fue la inclusión de un método para elaborar páginas dinámicas que permitieran que lo mostrado tuviese carácter dinámico (es decir, generado a partir de los datos de la petición). Este método fue conocido como CGI (Common Gateway Interface, Interfaz Común de Entrada) y definía un mecanismo mediante el que se podía pasar información entre el servidor y ciertos programas externos. Los CGIs siguen utilizándose ampliamente; la mayoría de los servidores Web permiten su uso debido a su sencillez. Además, dan total libertad para elegir el lenguaje de programación que se desea emplear [4]. Capitulo II. Marco Conceptual Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 12 Con el paso del tiempo, el mundo Web ha venido evolucionando, con el desarrollo de nuevas tecnologías y lenguajes (tanto del lado del Servidor como del lado del Cliente) los cuales permiten que la interacción entre el usuario y la información sea un poco más dinámica, intuitiva y fácil de manejar [4]. Una de las potencialidades desarrolladas fue la de Sun Microsystems con Java, al permitir incrustar código Java dentro de páginas HTML que el servidor convierte en programas ejecutables JSP (Java Server Pages o “Paginas de Servidor Java”), y un método de programación que se ejecuta del lado del servidor denominado Java Servlet [4]. Una de las Tecnologías más utilizadas actualmente para el desarrollo de aplicaciones Web es el lenguaje PHP. PHP (Hypertext Preprocesor o Pre- procesador de Hipertexto) es un lenguaje interpretado que permite la inclusión de lenguaje HTML dentro de los mismos, con una sintaxis derivada de C y Perl. La ventaja de ser sencillo y muy potente ha contribuido a convertir al lenguaje PHP en una herramienta muy útil para el desarrollo de aplicaciones Web [4]. 2.2.1 Tecnologías del lado del Cliente. 2.2.1.1 Lenguaje de marcado de hipertexto (HTML o Hiper Text Markup Language). HTML o Lenguaje de Marcado de hipertexto, es un estándar reconocido en todo el mundo y cuyas normas define el World Wide Web Consortium, más conocido como W3C. Como se trata de un estándar reconocido por todas las empresas relacionadas con el mundo de Internet, una misma página HTML se visualiza de forma muy similar en cualquier navegador de cualquier sistema operativo [5]. El origen de HTML se remonta a 1980, cuando el físico Tim Berners-Lee, trabajador del CERN (Organización Europea para la Investigación Nuclear) propuso un nuevo sistema de "hipertexto" para compartir documentos [5]. Capitulo II. Marco Conceptual Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 13 Los sistemas de "hipertexto" habían sido desarrollados años antes. En el ámbito de la informática, el "hipertexto" permitía que los usuarios accedieran a la información relacionada con los documentos electrónicos que estaban visualizando. De cierta manera, los primitivos sistemas de "hipertexto" podrían compararse a los enlaces de las páginas Web actuales [5]. El propio W3C 1 define el lenguaje HTML como "un lenguaje reconocido universalmente y que permite publicar información de forma global". Desde su creación, el lenguaje HTML ha pasado de ser un lenguaje utilizado exclusivamente para crear documentos electrónicos a ser un lenguaje que se utiliza en muchas aplicaciones electrónicas como buscadores, tiendas online y banca electrónica. El lenguaje HTML permite a los desarrolladores:  Publicar en línea documentos con cabeceras, textos, tablas, listas, fotos, etc.  Obtener información vía enlaces de Hipertexto (links) con solo un clic.  Construir formularios que pueden desencadenar transacciones en servicios remotos, para la búsqueda de información, hacer reservaciones, ordenar productos, etc.  Se pueden incluir hojas de estilo, clips de video, sonido, y otras aplicaciones directamente en los documentos [5]. 2.2.1.2 Cascading Style Spreadsheet (Hojas de Estilo en Cascada). CSS es un lenguaje de hojas de estilo usado para describir los esquemas de presentación de un documento escrito en un lenguaje de Marcado. Es muy utilizado para las aplicaciones desarrolladas en HTML o XHTML para definir 1 Conocido como Word Wide Web Consortium o Consorcio de la Red de Área Amplia, es un consorcio internacional que produce recomendaciones para la Red de Área Amplia o World Wide Web. Capitulo II. Marco Conceptual Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 14 estilos, aunque también puede ser aplicado para cualquier tipo de documento XML [6]. Las CSS son diseñadas para permitir la separación de lo que es el contenido del documento con la presentación del mismo, como son los paneles, colores y fuentes. Esta separación puede mejorar el acceso al contenido, proveer mayor flexibilidad y control en la especificación de las características de la presentación, permitiendo que múltiples documentos compartan el mismo formato, reduciendo la complejidad y repetición del contenido estructural. CSS puede también permitir que un mismo documento pueda ser presentado en diferentes estilos para diferentes métodos de presentación, sean en pantalla, en impresión, etc [6]. CSS especifica un esquema de prioridad para determinar cual regla de estilo aplica cuando múltiples definiciones de estilos aplican a un mismo elemento. Por esto es llamado cascada, ya que las prioridades son calculadas y asignadas en reglas para que el resultado sea predecible [6]. Las ventajas a la hora de usar CSS son muy variadas, algunas de ellas son:  Control centralizado de la presentación de un documento Web completo con lo que se agiliza de forma considerable la actualización del mismo.  Los navegadores permiten a los usuarios especificar su propia hoja de estilo local, que será aplicada a un documento Web, con lo que aumenta considerablemente la accesibilidad.  Una página puede disponer de diferentes hojas de estilo según el dispositivo que la muestre o, incluso, a elección del usuario.  El documento HTML en sí mismo es más claro de entender y se consigue reducir considerablemente su tamaño. Capitulo II. Marco Conceptual Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 15 2.2.1.3 JavaScript. JavaScript es un lenguaje interpretado orientado a las páginas web, con una sintaxis semejante a la del lenguaje Java [7]. El lenguaje fue inventado por Brendan Eich en la empresa Netscape Communications, que es la que fabricó los primeros navegadores de Internet comerciales. Se utiliza en páginas Web HTML, para realizar tareas y operaciones en el marco de la aplicación cliente (client-side) [7]. JavaScript se considera un lenguaje simple y altamente dinámico. Decir que un lenguaje de programación es dinámico no quiere decir nada desde un punto de vista formal, pero se acepta en algunos círculos que esto se refiere a que es un lenguaje de muy alto nivel, donde muchas operaciones que comúnmente suceden en tiempo de compilación, se realizan en tiempo de ejecución, así como extender los objetos y sus definiciones mientras se ejecuta la aplicación [7]. Algunas de las ventajas importantes del uso de JavaScript son:  El lenguaje de scripting es seguro y fiable porque está en claro que hay que interpretarlo, por lo que puede ser filtrado; para el mismo JavaScript, la seguridad es casi total.  Los scripts tienen capacidad limitada, por razones de seguridad, por lo cual no es posible hacer todo con JavaScript, sino que es necesario usarlo conjuntamente con otros lenguajes evolucionados, posiblemente más seguros.  El código JavaScript se ejecuta en el cliente por lo que el servidor no es solicitado más de lo debido; un script ejecutado en el servidor, sin embargo, sometería al mismo a dura prueba y los servidores de capacidades más limitadas podrían resentir de una continua solicitud por un mayor número de usuarios. Capitulo II. Marco Conceptual Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 16 2.2.1.4 Ajax. AJAX (acrónimo para Asynchronous JavaScript And XML. JavaScript y XML Asíncronos) es un enfoque de desarrollo basado en un conjunto de tecnologías ya existentes, agrupadas para presentar información e interactuar dinámicamente, de manera asíncrona, con un servidor Web [8]. Entre las tecnologías que agrupa AJAX se destacan las siguientes como las principales: HTML y CSS: para la presentación, estructuración y formato del contenido. DOM (Document Object Model): Con el modelo de objetos del documento se logra obtener la estructura del documento HTML. Utilizando esta estructura se pueden agregar, eliminar y modificar, de manera dinámica, elementos de la página mediante el uso de la tecnología JavaScript. XML: Para el intercambio de datos entre el cliente (navegador Web) y el servidor. JavaScript: Mediante esta tecnología del lado del cliente se realizan las peticiones de manera asíncrona y, junto con el manejo del DOM, se logra la interacción dinámica con el usuario. Con AJAX se busca entonces proveer de una mayor riqueza de interacción entre el usuario y la aplicación en comparación con la que proveen las aplicaciones Web tradicionales. Este enfoque cambia el esquema tradicional de interacción con las aplicaciones Web, procurando una mayor velocidad de respuesta hacia el usuario, permitiéndole mantener la interacción con la aplicación inclusive durante tiempos de procesamiento, con elementos de interfaz más dinámicos e interactivos [8]. El enfoque AJAX permite el envío de peticiones al servidor en segundo plano, es decir, sin interrumpir la interacción entre el usuario y la aplicación. Esto disminuye el típico tiempo de espera entre peticiones y permite mantener la Capitulo II. Marco Conceptual Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 17 continuidad en la interacción entre el usuario y la aplicación, lo que le permite al usuario realizar acciones como la modificación de campos de un formulario, despliegue de menús, visualización de datos, entre otros [8]. Luego de enviar una petición y obtener la información requerida (respuesta) del servidor, las aplicaciones AJAX tienen la capacidad de modificar la vista (estructura de la página) dinámicamente sin necesidad de solicitar una página distinta. Esta información obtenida del servidor está constituida típicamente de datos en formato XML o texto plano, no es necesario recibir en cada petición un documento HTML entero, ya que la aplicación AJAX utiliza estos datos para modificar la página sin necesidad de cambiarla por una nueva [8]. 2.2.1.5 JQuery JQuery es una biblioteca o framework de JavaScript que permite simplificar la manera de interactuar con los documentos HTML, manipular el árbol DOM, manejar eventos, desarrollar animaciones y agregar interacción con la técnica AJAX a páginas web [9]. JQuery, al igual que otras bibliotecas, ofrece una serie de funcionalidades basadas en JavaScript que de otra manera requerían de mucho más código, es decir, con las funciones propias de esta biblioteca se logran grandes resultados en menos tiempo y espacio [9]. Las principales características de JQuery son:  Se pueden seleccionar elementos del árbol DOM mediante funciones.  Modificaciones transversales del árbol DOM.  Manipulación de Hojas de Estilo.  Se pueden dar efectos y animaciones a los elementos que conforman el documento.  Es extensible. Capitulo II. Marco Conceptual Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 18 2.2.2 Tecnologías del Lado del Servidor 2.2.2.1 Apache Apache es un servidor Web HTTP de código abierto que garantiza la disponibilidad de la mayoría de los sitios web activos actualmente. El servidor está diseñado para operar sobre las más populares plataformas y sistemas operativos como Linux, Unix, Windows; Solaris, Novell, FreeBSD, Mac OS, OS/2, etc [10]. Existen dos versiones populares acerca del origen del nombre del proyecto. La primera y más aceptada, que el nombre del servidor fue escogido por el nombre de la tribu Nativa Americana APACHE, muy conocidos por su resistencia y habilidades militares. La segunda versión da el nombre por el grupo de parches agregados al núcleo del servidor HTTP NCSA 1.3, lo cual hace al mismo un “servidor parcheado” (en ingles “a patchy server”) [10]. El servidor fue desarrollado por la comunidad de fuente abierta Apache Software Foundation, en donde sus miembros están constantemente añadiendo funcionalidades, con el único propósito de proveer una plataforma segura y extensible que mejore el servicio HTTP de la mano de los estándares HTTP actuales [10]. Las ventajas más conocidas del Servidor Apache son:  Modular  De código abierto  Multi-plataforma  Extensible 2.2.2.2 PHP PHP es un lenguaje de programación interpretado de código abierto y alto nivel usado generalmente para la creación de contenido dinámico para sitios Capitulo II. Marco Conceptual Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 19 Web, el cual puede ser embebido dentro de páginas HTML, es interpretado del lado del servidor. PHP es el acrónimo recursivo de "PHP: Hypertext Preprocessor", (inicialmente se llamó PHP Tools o Personal Home Page Tools) últimamente también es usado para la creación de otro tipo de programas incluyendo aplicaciones con interfaz gráfica [11]. La facilidad de uso que caracteriza a PHP en conjunción con la similitud que tiene con lenguajes más comunes de programación estructurada, como C, Java y Perl, permiten a la mayoría de los programadores experimentados crear aplicaciones complejas con una curva de aprendizaje bastante suave. También les permite involucrarse con aplicaciones de contenido dinámico sin tener que aprender todo un nuevo grupo de funciones y prácticas [11]. PHP tiene la capacidad de ser ejecutado en los principales sistemas operativos del mercado, incluyendo Linux, muchas variantes de Unix (incluyendo HP-UX, Solaris y OpenBSD), Microsoft Windows, Mac OS X, RISC OS, entre otros. PHP soporta la mayoría de servidores Web de hoy en día, incluyendo Apache, Microsoft Internet Information Server (IIS), Personal Web Server, Netscape e iPlanet, Oreilly Website Pro Server, Caudium, Xitami, OmniHTTPd y muchos otros. PHP tiene módulos disponibles para la mayoría de los servidores, para aquellos otros que soporten el estándar CGI, PHP puede ser usado como un procesador CGI [11]. Con PHP se puede hacer cualquier cosa que se pueda hacer con un script CGI, como procesar la información proveniente de formularios, generar páginas con contenidos dinámicos, o enviar y recibir cookies, entre otras cosas [11]. 2.2.3 Tecnologías del lado del Servidor de Bases de Datos 2.2.3.1 MySQL MySQL es un servidor de Base de Datos SQL (Structured Query Language o Lenguaje Estructurado de Consultas) rápido, multi-hilo, multi-usuario y robusto. El servidor MySQL está diseñado para entornos de producción críticos, con alta Capitulo II. Marco Conceptual Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 20 carga de trabajo así como para integrarse en software para ser distribuido. MySQL es una marca registrada de MySQL AB [12]. El software MySQL tiene una doble licencia. Los usuarios pueden elegir entre usar el software MySQL como un producto Open Source bajo los términos de la licencia GNU General Public License o pueden adquirir una licencia comercial estándar de MySQL AB [12]. La siguiente lista describe algunas de las características más importantes del software de base de datos MySQL:  Portabilidad.  Desarrollado en C y en C++.  Probado con un amplio rango de compiladores diferentes.  Funciona en diferentes plataformas (AIX, FreeBSD, HP-UX , GNU/Linux, Mac OS X, Novell Netware , OpenBSD, OS/2, Solaris, Windows).  Usa GNU Automake, Autoconf, y Libtool para portabilidad.  APIs disponibles para C, C++, Eiffel, Java, Perl, PHP, Python, Ruby, y Tcl.  Uso completo de multi-hilos mediante hilos del kernel. Pueden usarse fácilmente múltiple CPUs si están disponibles.  Proporciona sistemas de almacenamientos transaccionales y no transaccionales.  Usa tablas en disco B-tree (MyISAM 2 ) muy rápidas con compresión de índice.  Relativamente sencillo de añadir otro sistema de almacenamiento. Esto es útil si desea añadir una interfaz SQL para una base de datos propia.  Un sistema de reserva de memoria muy rápido basado en hilos. 2 MyISAM es una tecnología usada para el almacenamiento de datos, la cual permite un procesamiento rápido de consultas Capitulo II. Marco Conceptual Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 21  Joins muy rápidos usando un multi-join de un paso optimizado.  Tablas hash en memoria, que son usadas como tablas temporales.  Las funciones SQL están implementadas usando una librería altamente optimizada y deben ser tan rápidas como sea posible. Normalmente no hay reserva de memoria tras toda la inicialización para consultas.  El servidor está disponible como un programa separado para usar en un entorno de red cliente/servidor. También está disponible como biblioteca y puede ser incrustado en aplicaciones autónomas. Dichas aplicaciones pueden usarse por sí mismas o en entornos donde no hay red disponible. 2.3 Herramientas para el Monitoreo y Administración de Redes 2.3.1 NMAP NMAP (Network Mapper o Mapeador de Redes) es una herramienta de código abierto para exploración de red y auditoría de seguridad. Se diseñó para analizar rápidamente grandes redes, aunque funciona muy bien contra equipos individuales. NMAP utiliza paquetes IP "crudos" en formatos originales para determinar qué equipos se encuentran disponibles en una red, qué servicios (nombre y versión de la aplicación) ofrecen, qué sistemas operativos (y sus versiones) ejecutan, qué tipo de filtros de paquetes o cortafuegos se están utilizando así como docenas de otras características. Aunque generalmente se utiliza NMAP en auditorías de seguridad, muchos administradores de redes y sistemas lo encuentran útil para realizar tareas rutinarias, como puede ser el inventariado de la red, la planificación de actualización de servicios y la monitorización del tiempo que los equipos o servicios se mantiene activos [13]. La salida de NMAP es un listado de objetivos analizados, con información adicional para cada uno dependiente de las opciones utilizadas. La información primordial es la “tabla de puertos interesantes”. Dicha tabla lista el número de puerto y protocolo, el nombre más común del servicio, y su estado. El estado Capitulo II. Marco Conceptual Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 22 puede ser open (abierto), filtered (filtrado), closed (cerrado), o unfiltered (no filtrado) [13]. Abierto significa que la aplicación en la máquina destino se encuentra esperando conexiones o paquetes en ese puerto [13]. Filtrado indica que un cortafuego, filtro, u otro obstáculo en la red está bloqueando el acceso a ese puerto, por lo que NMAP no puede saber si se encuentra abierto o cerrado [13]. Los puertos cerrados no tienen ninguna aplicación escuchando en los mismos, aunque podrían abrirse en cualquier momento. Los clasificados como no filtrados son aquellos que responden a los sondeos de NMAP, pero para los que NMAP no puede determinar si se encuentran abiertos o cerrados [13]. NMAP informa de las combinaciones de estado open|filtered y closed|filtered cuando no puede determinar en cuál de los dos estados está un puerto. La tabla de puertos también puede incluir detalles de la versión de la aplicación cuando se ha solicitado detección de versiones. NMAP ofrece información de los protocolos IP soportados, en vez de puertos abiertos [13]. Además de la tabla de puertos interesantes, NMAP puede dar información adicional sobre los objetivos, incluyendo el nombre de DNS según la resolución inversa de la IP, un listado de sistemas operativos posibles, los tipos de dispositivo, y direcciones MAC [13]. 2.3.2 SNMP (Simple Network Management Protocol o Protocolo Simple de Gestión de Redes). El protocolo de administración SNMP es un protocolo a nivel de capa de aplicación que facilita el intercambio y la administración entre dispositivos de red. Es parte de la suite del Protocolo de Control de Transmisión/Protocolo de Internet (TCP/IP). SNMP permite a los administradores de red gestionar el Capitulo II. Marco Conceptual Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 23 funcionamiento de la red, encontrar y resolver problemas de red, así como planificar la expansión de la misma [14]. Existen tres versiones del protocolo: SNMP version1 (SNMPv1), SNMP versión 2 (SNMPv2) y SNMP versión 3 (SNMPv3). Estas versiones poseen un conjunto de características en común, pero SNMPv2 ofrece mejoras, como operaciones adicionales del protocolo y SNMPv3 introduce el modelo de seguridad basado en el usuario (User - Based Security Model) para mensajes de seguridad y el modelo de control de acceso basado en la vista (View - Based Access Control Model) para el control de acceso [14]. Una red administrada por SNMP consiste en tres componentes claves: dispositivos administrados, agentes y sistemas de administración de red (Network Management System) como se puede observar en la figura 3 [14]. Figura 3. Red Administrada SNMP Capitulo II. Marco Conceptual Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 24  Un dispositivo administrado es un nodo de red que contiene un agente SNMP y este reside en una red administrada. Los dispositivos administrados almacenan información de administración, la cual es utilizada por los sistemas de administración de la red usando SNMP. Los dispositivos administrados, algunas veces hacen llamadas a elementos de la red (routers, servidores de acceso, switches, puentes, hubs, hosts o impresoras).  Un agente SNMP es un software de administración de red que reside en un dispositivo administrado. Un agente SNMP posee un conocimiento local de la información de administración y transforma esa información en una forma compatible con el protocolo SNMP.  Un sistema de administración de red ejecuta aplicaciones que controlan y monitorean a los dispositivos administrados. Los sistemas de administración de red proveen el conjunto de recursos de procesamiento y memoria requeridos para la administración de la red. Uno o más de estos sistemas deben existir sobre cualquier red administrada. Capítulo IV. Marco Metodológico Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 25 Capítulo III. Marco Metodológico En el siguiente capítulo se explicara la Metodología usada para el Desarrollo de la Aplicación. Se definirá la metodología ADHOC, el cual es el proceso usado para el desarrollo e implementación de la solución al problema planteado. Se expondrán las fases que forman parte del modelo de desarrollo. 3.1. Metodología de Desarrollo de Software 3.1.1 Metodología ADHOC La metodología ADHOC permite un desarrollo y construcción rápido de la solución planteada. La metodología permite realizar un desarrollo analizando los detalles y necesidades del proyecto para determinar la mejor solución a nivel de arquitectura y tecnología:  Fase Previa: En esta fase se realiza el análisis de los objetivos planteados y los requerimientos necesarios para cubrir dichos objetivos.  Fase de Desarrollo: Esta fase involucra el diseño y construcción de los requerimientos. Esta fase es iterativa, lo que permite que el uso de este modelo de desarrollo sea incremental.  Fase de Pruebas: En esta fase se realizaron todas las pruebas referentes al desarrollo de cada uno de los requerimientos en las iteraciones del taller de diseño. Capítulo IV. Marco Metodológico Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 26 Figura 4. Metodología ADHOC 3.1.1.2 Ventajas de ADHOC.  Se determina cual es la mejor solución a nivel de arquitectura y tecnología.  Iteración permanente con el cliente dentro del desarrollo de la aplicación.  Se garantiza la funcionalidad de la aplicación en distintos escenarios de pruebas. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 27 Capítulo IV. Marco Aplicativo. En este capítulo se explica de manera detallada como se realizo el desarrollo del proyecto. Las fases de la metodología de Desarrollo Rápido de Aplicaciones son definidas y explicadas detalladamente, la Fase de Planeación de Requerimientos, cada una de las Iteraciones del Taller de Diseño así como las pruebas de Implementación del sistema. 4.1 Proyecto. El proyecto consiste en el desarrollo e implementación de una aplicación Web centralizada para la administración y monitoreo de los Punto de acceso de la Facultad de Ciencias de la Universidad Central de Venezuela. Dicha aplicación está desarrollada bajo el lenguaje PHP sobre el framework de desarrollo MVC. Además, se utilizo MySQL como Sistema Manejador de Bases de Datos gracias a la rapidez y sencillo de su funcionamiento para el almacenamiento de los datos y metadatos de dicha aplicación. Para la realización de este proyecto se realizo una adaptación del método de desarrollo ADHOC, por lo que se dividió en tres fases: Planeación de requerimientos, Taller de Diseño (que constituye el diseño y la construcción de la aplicación), fase de implementación y pruebas de funcionamiento. En la primera fase se desarrollaron los Diagramas de Casos de Uso de los requerimientos planteados por los usuarios pertenecientes al Centro de Computación de la Facultad de Ciencias de la Universidad Central de Venezuela, que son los encargados de realizar los procesos de monitoreo y gestión de dichos Puntos de Acceso. En la segunda fase, se realizó la construcción de cada uno de los procesos a nivel de código, realizando iteraciones dependiendo de cada requerimiento en específico, creando así un desarrollo rápido de la aplicación. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 28 En la tercera fase, se realizo un grupo de pruebas para determinar la eficiencia y el feedback con el usuario final de la aplicación, a fin de conocer si la misma cumple con el funcionamiento esperado. 4.2 Fases del Proyecto. 4.2.1 Fase de Planeación de Requerimientos. En esta fase se muestran el modelo de datos definido en base a los procesos que intervienen, una breve descripción de los mismos, algunos problemas que se encontraron y el análisis de la solución hallada mediante el uso de Diagramas de Casos de Uso. I. Modelo de datos El modelo de datos está definido por medio del modelo entidad-relación presente en la figura 5. Allí se pueden observar las estructuras definidas para el manejo de los datos que maneja la aplicación Web. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 29 Figura 5. Modelo Entidad-Relación del modelo de datos de la aplicación. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 30 II. Autenticación (Login). Usuario involucrado: Administrador del Sistema. Este proceso es el punto de partida para el uso del sistema. Todo usuario que necesite realizar un monitoreo o en su defecto la administración de algún dispositivo mediante la aplicación debe estar registrado como un usuario en la misma. Este usuario será el usado para poder ingresar a la misma y poder tomar parte en todos los procesos desarrollados en la aplicación. Cabe destacar que cada usuario en la aplicación posee una información personal asociada, así como también un rol, el cual le permitirá realizar ciertas funciones dentro de la aplicación. Para llevar a cabo dicho requerimiento se planteo una solución que está representada en la Figura 6. Figura 6. Caso de Uso Autenticar Usuario (Login) Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 31 Tabla 1. Descripción del Caso de Uso Autenticar Usuario. Nombre: Autenticar Usuario Actor Administrador del Sistema Descripción Permite realizar la autenticación del usuario. El usuario introduce el Nombre de usuario y la contraseña para acceder al sistema Pre-condición No aplica. Post-condición En el momento de que se realiza la autenticación se verifica si el usuario es válido. Nombre: Verificar Usuario/Contraseña Actor Administrador del Sistema. Descripción Verifica si la información suministrada por el usuario es válida. Pre-condición No aplica. Post-condición Si el usuario es válido se inicia la sesión, en caso contrario se informa al usuario que la información suministrada no es válida. Es importante aclarar que para poder realizar una autenticación exitosa en la aplicación, el usuario debe estar previamente registrado en la misma. Este registro lo realizan los administradores del sistema, los cuales tienen privilegios para la creación de nuevos usuarios. III. Recuperar Contraseña. Usuario involucrado: Administrador del Sistema. Este proceso que se describe en la figura 7 se realiza cuando el usuario desea recuperar la contraseña con la que accede al sistema. Para recuperar la contraseña, se verifica si el correo suministrado por el usuario que hace la petición coincide con los que se encuentran registrados en la base de datos del sistema, para así entonces crear una nueva clave temporal y enviar la misma al correo del usuario. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 32 Figura 7. Casos de Uso Recuperar Contraseña. En la tabla 2 se puede observar la descripción del Caso de Uso Recuperar Contraseña: Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 33 Tabla 2. Descripción de Caso de Uso Recuperar Contraseña. Nombre: Ingresar correo electrónico Actor Administrador del Sistema Descripción Permite que un usuario ingrese su cuenta de correo electrónico asociada a su usuario para realizar la recuperación de la contraseña. Pre-condición No aplica. Post-condición No aplica. Nombre: Validar correo electrónico Actor Administrador del Sistema. Descripción Verifica que el correo electrónico Suministrado por el usuario se encuentre en el sistema. Pre-condición No aplica. Post-condición Si el correo electrónico es Valido se realiza el proceso de creación de clave temporal, en caso contrario, se informa al usuario que el correo electrónico suministrado no es válido. Nombre: Crear contraseña temporal Actor Administrador del Sistema. Descripción Se crea una contraseña temporal para el usuario asociado al correo electrónico suministrado. Pre-condición La cuenta de correo suministrada debe estar asociada a un usuario. Post-condición No aplica. Nombre: Enviar Correo electrónico con clave temporal. Actor Administrador del Sistema. Descripción Se envía al usuario un correo electrónico con la nueva clave temporal. Pre-condición No aplica. Post-condición No aplica. IV. Cambiar Contraseña. Usuarios involucrados: Administrador de Sistema. Este proceso, el cual describe la figura 8, permite a un usuario registrado en el sistema poder cambiar su contraseña. Para poder realizar el cambio de contraseña se requiere colocar la contraseña anterior como requisito para realizar un cambio efectivo. Si esto se cumple se realiza el cambio satisfactorio de la contraseña de usuario y dicha información es registrada. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 34 Figura 8. Caso de Uso Cambiar Contraseña. La descripción de los pasos que se realizan en este proceso se puede observar en la tabla 3: Tabla 3. Descripción del Caso de Uso Cambiar Contraseña. Nombre: Ingresar información solicitada Actor Administrador del Sistema Descripción Permite ingresar la contraseña actual y la nueva contraseña para realizar el cambio Pre-condición No aplica. Post-condición No aplica. Nombre: Validar información Actor Administrador del Sistema. Descripción Verifica que la información suministrada por el usuario es válida. Pre-condición No aplica. Post-condición Si la información es válida se procede a el cambio de contraseña Nombre: Cambiar contraseña Actor Administrador del Sistema. Descripción Se procede a modificar la contraseña asociada al usuario. Pre-condición No aplica. Post-condición No aplica. V. Administrar Usuario Usuarios Involucrados: Administrador del Sistema Por medio de este proceso el administrador del Sistema puede controlar todas las funciones básicas de los usuarios dentro de la aplicación. Por medio de estos procesos se podrá crear, modificar, visualizar y eliminar cualquier usuario en el Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 35 sistema. La siguiente figura (figura 9) y posteriormente la tabla (tabla 4) muestran el modelado y la descripción de los pasos que intervienen en este proceso: Figura 9. Caso de uso Administrar Usuario Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 36 Tabla 4. Descripción Caso de Uso Administrar Usuario Nombre: Agregar Usuario Actor Administrador del Sistema Descripción Permite al administrador agregar un usuario en el sistema Pre-condición Debe estar autenticado en la aplicación. Post-condición No aplica. Nombre: Ver información de Usuario Actor Administrador del Sistema. Descripción Permite al administrador ver toda la información del usuario. Pre-condición Debe estar autenticado en el sistema. Post-condición No aplica. Nombre: Editar Usuario Actor Administrador del Sistema. Descripción Permite al administrador poder modificar la información de un usuario existente en el sistema. Pre-condición Debe estar autenticado en el sistema. Post-condición No aplica. Nombre: Eliminar Usuario Actor Administrador del Sistema. Descripción Permite al administrador eliminar toda la información asociada a un usuario Pre-condición Debe estar autenticado en el sistema. VI. Agregar Usuario Usuarios involucrados: Administrador del Sistema Este proceso permite la creación de un usuario en el sistema. El administrador deberá suministrar cierta información de la persona a la cual se le asignara dicho usuario y se validará si el usuario que se desea registrar es válido (no está registrado ya en la aplicación por ejemplo). Si dicho usuario no está registrado entonces se procederá a la creación de la cuenta asociada al mismo. La siguiente figura (figura 10) se puede observar el Modelo de Caso de Uso de este proceso: Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 37 Figura 10. Caso de Uso Agregar Usuario La descripción de dicho Caso de Uso se puede observar en la tabla 5: Tabla 5. Descripción Caso de Uso Agregar Usuario. Nombre: Ingresar Datos Actor Administrador del Sistema Descripción Se presenta un formulario donde el administrador del sistema podrá introducir la información asociada a la cuenta de usuario a crear Pre-condición Debe estar autenticado en la aplicación. Post-condición Se valida la información suministrada. Nombre: Validar Datos de Usuario Actor Administrador del Sistema. Descripción El sistema valida la información suministrada por el administrador Pre-condición Debe estar autenticado en el sistema. Post-condición Si la información es válida se procede a crear la cuenta, de lo contrario se muestra al administrador que campos suministrados son inválidos. Nombre: Crear Usuario Actor Administrador del Sistema. Descripción Toda la información suministrada por el administrador es registrada y se crea una nueva cuenta de usuario. Pre-condición La información suministrada por el administrador debe ser valida Post-condición No aplica. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 38 VII. Información de Usuario. Usuarios involucrados: Administrador del Sistema. Este proceso permite al administrador visualizar la información de los usuarios registrados en la aplicación. Para ello, se tendrá una lista de usuarios registrados en la cual el administrador podrá seleccionar cualquier usuario de la lista para ver en detalle la información asociada al mismo. El caso de uso asociado a este proceso se puede observar en la figura 11. Figura 11. Caso de Uso Ver información de Usuario. La descripción de dicho Caso de Uso se observa en la siguiente tabla (tabla 6): Tabla 6. Descripción del Caso de Uso Ver información de Usuario. Nombre: Seleccionar Usuario Actor Administrador del Sistema Descripción Proceso donde el administrador del sistema selecciona un usuario de la lista para visualizar la información asociada al mismo Pre-condición Debe estar autenticado en la aplicación. Post-condición No aplica. Nombre: Validar Datos de Usuario Actor Administrador del Sistema. Descripción Al seleccionar el usuario, el sistema recopila la información asociada al usuario seleccionado y es mostrada al administrador Pre-condición Debe estar autenticado en el sistema. Post-condición No aplica. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 39 VIII. Editar Usuario Usuarios involucrados: Administrador del Sistema Este proceso, modelado en la figura 12, permite modificar la información asociada a un usuario si este desea actualizar la misma. El administrador podrá modificar tanto la información propia como la información asociada a otros usuarios. La descripción de dicho proceso se observa en la tabla 7. Figura 12. Caso de Uso Editar Usuario. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 40 Tabla 7. Descripción del Caso de Uso Editar Usuario. Nombre: Seleccionar Usuario Actor Administrador del Sistema Descripción Permite seleccionar un usuario para modificar su información Pre-condición Debe estar autenticado en la aplicación. Post-condición No aplica. Nombre: Modificar información de Usuario Actor Administrador del Sistema. Descripción Permite al administrador poder modificar la información del usuario seleccionado Pre-condición Se debe seleccionar un usuario en especifico Post-condición Se valida que la información suministrada es correcta. Nombre: Validar información de Usuario Actor Administrador del Sistema. Descripción Se valida que la información suministrada sea correcta Pre-condición Debe estar autenticado en el sistema. Post-condición No aplica. Nombre: Actualizar Usuario Actor Administrador del Sistema. Descripción Se registra la nueva información en la BD. Pre-condición Debe estar autenticado en el sistema. Post-condición No aplica. En la fase de construcción y diseño, que se abarcara en la sección de Taller de Diseño, se observa que la creación de un usuario así como la modificación de un usuario ya existente, son módulos íntimamente ligados, ya que tendrán la misma vista aunque para cada proceso se realizaran transacciones diferentes. IX. Eliminar Usuario. Usuarios involucrados: Administrador del Sistema Este proceso permite al administrador del sistema eliminar un usuario registrado en la aplicación. Para ello el usuario debe tener privilegios suficientes para poder eliminar usuarios dentro del sistema. La siguiente figura (figura 13) define el Modelo de Caso de Uso para este proceso: Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 41 Figura 13. Caso de Uso Eliminar Usuario. Cada proceso que interviene en este Caso de Uso se describe en la siguiente tabla (tabla 8): Tabla 8. Descripción del Caso de Uso Eliminar Usuario. Nombre: Seleccionar Usuario Actor Administrador del Sistema Descripción Permite seleccionar un usuario para su eliminación. Pre-condición Debe estar autenticado en la aplicación. Post-condición No aplica. Nombre: Eliminar información del Usuario Actor Administrador del Sistema. Descripción Permite al administrador eliminar toda la información asociada al usuario seleccionado Pre-condición Debe tener privilegios para eliminar usuarios Post-condición No aplica. X. Administrar Punto de acceso. Usuarios involucrados: Administrador del Sistema. Por medio de esta serie de funcionalidades el administrador del sistema puede controlar todo lo referente a los Puntos de Acceso que se gestionan mediante la aplicación. Por medio de los procesos asociados el administrador puede agregar dispositivos (de manera manual o por medio de una búsqueda en la red), Visualizar información acerca del dispositivo (estado, información de gestión, interfaz de configuración), editar la información específica de cada Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 42 dispositivo y eliminar dispositivos administrados. La figura 14 muestra el modelo de Casos de Uso de este proceso. Figura 14. Caso de Uso Administrar Punto de acceso. Dicho modelo se describe en la tabla 9: Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 43 Tabla 9. Descripción del Caso de Uso Administrar Punto de acceso Nombre: Agregar Punto de acceso Actor Administrador del Sistema Descripción Permite agregar un Punto de acceso para su gestión Pre-condición Debe estar autenticado en la aplicación. Post-condición No aplica. Nombre: Editar información del Punto de acceso Actor Administrador del Sistema. Descripción Permite al administrador modificar la información de un Punto de acceso administrado Pre-condición Debe estar autenticado en la aplicación. Post-condición No aplica. Nombre: Ver información del Punto de acceso Actor Administrador del Sistema. Descripción Permite al administrador visualizar la información de gestión y los datos asociados a las estadísticas de un Punto de acceso. Pre-condición Debe estar autenticado en la aplicación. Post-condición No aplica. Nombre: Eliminar Punto de acceso Actor Administrador del Sistema. Descripción Permite al administrador eliminar un Punto de acceso administrado Pre-condición Debe estar autenticado en la aplicación. Post-condición No aplica. XI. Agregar Punto de acceso. Este proceso (figura 15) permite al administrador del sistema poder agregar un dispositivo para su posterior administración. Este proceso tiene dos maneras de realizarse: el administrador puede agregar manualmente la información asociada al Punto de acceso en caso de que este en conocimiento de ello como también puede hacer un rastreo en la red, suministrando una IP perteneciente a la misma (esta IP puede ser una Ipv4, una Ipv6 o una Ipv4 con notación CIDR), y así poder seleccionar del rastreo el dispositivo de red a administrar. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 44 Figura 15. Caso de Uso Agregar Punto de acceso La descripción de los procesos que intervienen en el Caso de Uso son los siguientes: Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 45 Tabla 10. Descripción del Caso de Uso Agregar Punto de acceso Nombre: Ingresar información Manualmente Actor Administrador del Sistema Descripción Permite al administrador incluir un nuevo Punto de acceso para su administración de manera manual, ingresando la información necesaria Pre-condición Debe estar autenticado en la aplicación. Post-condición Se valida la información suministrada por el administrador del sistema Nombre: Validar información del Punto de acceso Actor Administrador del Sistema. Descripción Proceso en el cual se valida que la información suministrada por el administrador del sistema sea correcta y que esta ya no esté registrada con anterioridad Pre-condición Debe estar autenticado en la aplicación. Post-condición En caso de que la información no sea correcta (un campo invalido o la información suministrada ya está registrada) se envía un mensaje al administrador indicando el error presentado Nombre: Buscar Dispositivo Actor Administrador del Sistema. Descripción Permite al administrador del sistema poder realizar un rastreo en la red para la búsqueda de dispositivos. Pre-condición Debe estar autenticado en la aplicación. Post-condición No aplica. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 46 Tabla 11. Descripción del Caso de Uso Agregar Punto de acceso Nombre: Ingresar IP de Red Actor Administrador del Sistema. Descripción El administrador suministra a la aplicación un IP para su rastreo. Dicha IP puede ser incluida en forma de cuatro dígitos entre 0 y 255 separados por el símbolo “.” o en notación CIDR. Pre-condición Debe estar autenticado en la aplicación. Post-condición Se valida la dirección IP Nombre: Validar IP Actor Administrador del Sistema. Descripción Valida que la IP suministrada por el administrador sea valida Pre-condición Debe estar autenticado en la aplicación. Post-condición En caso de que la IP suministrada sea incorrecta se envía un mensaje indicándole al usuario que la IP no es válida. Nombre: Buscar Dispositivo en la Red Actor Administrador del Sistema. Descripción El sistema realizar el rastreo de la red definida por la IP suministrada por el administrador en búsqueda de dispositivos de Red Pre-condición La IP suministrada debe ser válida. Post-condición En caso de no encontrar dispositivos en la red se envía un mensaje indicando que no se encontraron dispositivos de red. En caso contrario se muestra una lista con los dispositivos encontrados. Nombre: Visualizar Dispositivos encontrados Actor Administrador del Sistema. Descripción Se muestra en el sistema la lista de dispositivos administrados en el rastreo Pre-condición Debe estar autenticado en la aplicación. Post-condición Si el usuario selecciona un dispositivo, la información asociada a este es incluida en el formulario para agregar. En caso contrario el usuario puede repetir el proceso de agregar un nuevo dispositivo. Nombre: Crear Punto de acceso Actor Administrador del Sistema. Descripción El administrador procede a agregar un nuevo Punto de acceso con la información suministrada ya sea por el proceso manual o por el rastreo de red. Pre-condición Debe estar autenticado en la aplicación. Post-condición No aplica. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 47 Es necesario acotar que cuando el administrador del sistema introduce una IP para el rastreo, dicho rastreo se realiza solo en esa dirección IP. Para realizar un rastreo de toda la red es necesario que el administrador suministre la IP en notación CIDR, la cual permite al sistema conocer la subred en la cual está dicha dirección y así realizar un rastreo completo de toda la subred asociada. XII. Editar información del Punto de acceso Este proceso permite al administrador tener la facilidad de modificar la información registrada del Punto de acceso en el caso de que ocurra algún cambio (ya sea que dicho punto cambie de subred por ejemplo). El modelo de Casos de Uso de este proceso se puede observar en la siguiente figura (figura 16): Figura 16. Caso de Uso Editar Información de Punto de acceso. La definición del anterior Caso de Uso es la siguiente: Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 48 Tabla 11. Descripción del Caso de Uso Editar información del Punto de acceso. Nombre: Seleccionar Punto de acceso Actor Administrador del Sistema Descripción El administrador del sistema selecciona el Punto de acceso que desea modificar Pre-condición Debe estar autenticado en la aplicación. Post-condición No aplica. Nombre: Modificar información del Punto de acceso Actor Administrador del Sistema. Descripción El administrador realiza los cambios necesario en la información asociada al Punto de acceso Pre-condición Debe estar autenticado en la aplicación. Post-condición No aplica. Nombre: Validar información del Punto de acceso Actor Administrador del Sistema. Descripción Se valida que la información asociada al Punto de acceso sea valida Pre-condición Debe estar autenticado en la aplicación. Post-condición En caso de no ser válida se envía un mensaje al usuario indicando que campo es invalido en el formulario Nombre: Actualizar Punto de acceso Actor Administrador del Sistema. Descripción El sistema registra y actualiza en la base de datos la información del Punto de acceso Pre-condición La información suministrada debe ser válida. Post-condición No aplica. XIII. Ver información del Punto de acceso. Este proceso, definido en la figura 17 permite al administrador poder visualizar toda la información asociada al Punto de acceso. Dicha información es, además de la registrada por el administrador, información para el monitoreo y la gestión del punto registrado. Por medio de diversos procesos asociados a la visualización de la información del Punto de acceso como lo son: ver la interfaz de configuración del Punto de acceso, ver las estadísticas del Punto de acceso y ver la gráfica generada en base a las estadísticas, el administrador puede monitorear y administrar cada punto individualmente, de una manera rápida. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 49 Figura 17. Caso de Uso Ver información del Punto de acceso. La descripción del Caso de Uso anterior se explica detalladamente en la tabla 12: Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 50 Tabla 12. Descripción Caso de Uso Ver información del Punto de acceso. Nombre: Ver información del Punto de acceso Actor Administrador del Sistema Descripción El administrador puede mediante este proceso visualizar toda la información asociada al Punto de acceso. Pre-condición Debe estar autenticado en la aplicación. Post-condición No aplica. Nombre: Verificar Estado del Punto de acceso Actor Administrador del Sistema. Descripción Este proceso realiza un envío de paquetes ICMP (ping) al Punto de acceso seleccionado para verificar si esta activo. Los resultados son mostrados al administrador. Pre-condición Debe estar autenticado en la aplicación. Post-condición No aplica. Nombre: Ver estadísticas del Punto de acceso Actor Administrador del Sistema. Descripción Por medio de este proceso el administrador puede visualizar las veces que se hizo el monitoreo del Punto de acceso para verificar su estado. Pre-condición Debe estar autenticado en la aplicación. Post-condición No aplica. Nombre: Ver graficas de desempeño del Punto de acceso Actor Administrador del Sistema. Descripción Por medio de este proceso el administrador puede visualizar una grafica de la media de tiempos de respuesta del Punto de acceso. Pre-condición Debe estar autenticado en la aplicación. Post-condición No aplica. Nombre: Ver interfaz de configuración del Punto de acceso Actor Administrador del Sistema. Descripción Este proceso permite al administrador poder acceder a la página de configuración del Punto de acceso, la cual permite la gestión del mismo. Pre-condición Debe estar autenticado en la aplicación. Post-condición No aplica. En el momento en el que el administrador entra a la interfaz de configuración del Punto de acceso, el mismo está en un sistema distinto a la aplicación, ya que cada Punto de acceso posee una interfaz distinta. Por esa razón se incluyen las interfaces de configuración como un subsistema de la aplicación a desarrollar. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 51 XIV. Eliminar Punto de acceso. Este proceso (figura 18) permite al administrador eliminar la información asociada al punto de acceso, incluyendo estadísticas recopiladas. Figura 18. Caso de Uso Eliminar Punto de acceso. La descripción asociada a este caso de uso es el siguiente: Tabla 13. Descripción del Caso de Uso Eliminar Punto de acceso. Nombre: Seleccionar Punto de acceso Actor Administrador del Sistema Descripción El administrador selecciona el Punto de acceso que desea eliminar Pre-condición Debe estar autenticado en la aplicación. Post-condición No aplica. Nombre: Eliminar información del Punto de acceso Actor Administrador del Sistema. Descripción El administrador elimina la información asociada al Punto de acceso seleccionado Pre-condición Se debe seleccionar un Punto de acceso. Post-condición No aplica. 4.2.2 Taller de Diseño. A continuación se muestra por cada problema planteado, el diseño y la construcción de cada requerimiento por cada iteración realizada en el proceso de desarrollo. Para dar solución al conjunto de requerimientos se desarrolló e implemento una interfaz propia para la aplicación y se desarrollaron una serie de métodos para adaptar el desarrollo a las necesidades del usuario. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 52 Requerimiento 1: Autenticación Iteración 1: Diseño Para este requerimiento se desarrollo una interfaz que permitiera al usuario poder ingresar el nombre de usuario y contraseña en un formulario, y que este diera acceso en caso de que el usuario este registrado. Figura 19. Pantalla de Autenticación del Sistema. Construcción El proceso de autenticación debe validar si la información suministrada por el usuario es de un usuario registrado en la aplicación. Para ello se creó una tabla llamada adm_tusuarios a nivel de BD donde se almacena la información referente a cada usuario registrado. En la figura 20 se puede observar la información almacenada en dicha tabla. Figura 20. Datos almacenados en adm_tusuarios para validar el proceso de autenticación. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 53 Se realizo un proceso de encriptación del password suministrado por el usuario y luego de ello se realiza una consulta SQL para determinar si la información suministrada por el usuario se encuentra en la tabla adm_tusuarios. Si dicha información se encuentra entonces el usuario esta registrado y tendrá acceso a la aplicación. Requerimiento 2: Creación de Usuarios. Iteración 2: Diseño. Para la creación del usuario, se desarrollo un formulario en el cual el administrador pudiera colocar la información asociada al usuario a crear, así como también la permisología que pudiera tener este sobre las funcionalidades del sistema. En la figura 21 se muestra la interfaz mediante la cual el administrador puede realizar la creación de usuarios: Figura 21. Pantalla que permite realizar la creación de un usuario Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 54 Construcción Para realizar la inserción se tuvo en cuenta diversos aspectos. El primero a considerar es el hecho de que el usuario puede tener ciertos privilegios, los cuales le permiten tener acceso a ciertas funcionalidades en la aplicación. Se definieron de esta manera 2 perfiles: Administrador de Usuarios: Este usuario tiene la capacidad de visualizar y gestionar toda la información referente a los usuarios. Administrador de AP: Este usuario tiene la capacidad de Visualizar y gestionar toda la información referente a los Punto de acceso registrados en la aplicación. Es preciso indicar que estos perfiles no son excluyentes, es decir, un usuario puede poseer un perfil de Administrador de Usuarios y Administrador de AP. En dicho caso, este usuario tendrá la capacidad de manejar y gestionar toda la información manejada por el sistema, así como todas las funcionalidades. Requerimiento 3: Visualización y Eliminación de Usuarios Iteración 3: Diseño. Para el requerimiento de Visualización del Usuario, se diseño una interfaz en la cual el administrador pudiera observar los usuarios en una lista. Dicha lista mostrara la información relevante referente al usuario. Al momento en el que el usuario seleccione un elemento de dicha lista, este podrá ver toda la información asociada al mismo, como se puede observar en la siguiente figura 22. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 55 Figura 22. Interfaz de Visualización de Usuario Para la eliminación del Usuario se tiene un icono de eliminación en cada elemento de la lista que permite realizar la eliminación del usuario. En la figura 23 se muestra el icono que permite realizar la eliminación de un usuario en específico. Figura 23. Botón de eliminación de Usuario en el Sistema. Requerimiento 4: Editar información del Usuario. Iteración 4 Diseño: Para la interfaz de edición, se rehúsa el diseño generado en la creación, ya que se toma como premisa, que para modificar la información de un usuario en específico, se debe mostrar toda la información asociada para que el usuario Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 56 modifique solo lo que él desea. En la figura 24 se observa la similitud de la interfaz en Editar Usuario con la interfaz Agregar Usuario. Figura 24. Interfaz para la Edición del Usuario. Requerimiento 5: Agregar Punto de Acceso Iteración 5: Diseño. Para este requerimiento se desarrollo una ventana en donde el administrador puede introducir información acerca del dispositivo que desea agregar (figura 25), dicha información es registrada directamente en la Base de Datos en una tabla llamada router. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 57 Figura 25. Ventana para agregar nuevo Punto de acceso Este método permite validar la información suministrada por el administrador. La validación se encarga de verificar que dicha información suministrada no tenga redundancia en la Base de Datos, es decir, valida que el usuario no introduzca varias veces la información asociada a un mismo AP. Requerimiento 6: Visualizar y Eliminar Punto de acceso Iteración 6: Diseño. Para Visualizar los Puntos de Acceso administrados por la aplicación se desarrollo una interfaz el cual muestra la información en una lista, donde cada elemento de la misma es un Punto de acceso administrado (figura 26). Al seleccionar un AP, la información asociada es mostrada en su totalidad, de esta manera el administrador puede visualizar toda la información referente al Punto de acceso seleccionado. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 58 Figura 26. Interfaz de Visualización de Punto de acceso. Para la eliminación del Punto de acceso seleccionado, se coloca en la lista de Punto de acceso un icono que representa la tarea de eliminación del mismo (figura 27). Figura 27. Botón para eliminar un Punto de acceso. Requerimiento 7: Editar Punto de acceso Iteración 6: Diseño. Para editar la información del Punto de acceso se coloca un icono de edición en la lista de Puntos de Acceso administrados (figura 28). El administrador solo Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 59 debe seleccionar el Punto de acceso que desea editar para que se muestre la ventana de edición del mismo. Figura 28. Botón “Editar Router”. Requerimiento 8: Opciones administrativas para los Puntos de Acceso Iteración 8: Diseño: Cuando el administrador de Red selecciona un Punto de Acceso de la tabla que lista todos los dispositivos registrados en la Base de Datos se muestra la información del Punto de Acceso y una serie de opciones administrativas que se muestran en la figura 29. Figura 29. Opciones de Administración. Cada una de las opciones pueden ser aplicadas en cualquier momento al Punto de Acceso, la primera opción verifica el estado del dispositivo y su tiempo de respuesta tal como se muestra en la figura 30. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 60 Figura 30. Comprobación del Estado del Punto de Acceso. La segunda opción muestra las estadísticas que ha arrojado el Punto de Acceso cada vez que se ha verificado su estado con la primera opción, la información es mostrada como aparece en la figura 31. Figura 31. Estadísticas del Punto de Acceso registradas en la BD. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 61 Con la tercera opción se puede administrar el Punto de Acceso utilizando la interfaz de configuración provista por el fabricante de forma centralizada, como se muestra en la figura 32. Figura 32. Pagina administrativa del Punto de Acceso. Con la cuarta y última opción se muestra a través de una grafica los picos de respuesta que ha tenido el router dentro de la red las veces que se ha verificado su estado con la opción numero 1, graficando el tiempo medio de respuesta, la hora y fecha en que se realizo la consulta, como se muestra en la figura 33, dicha grafica puede ser descargada en cualquier formato de imagen. Figura 33. Estadísticas del Punto de Acceso. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 62 Requerimiento 9: Escanear Red Iteración 9: Diseño: Para poder realizar un escaneo de la red, con la finalidad de visualizar los Punto de accesos que se encuentran en la misma, se diseño una interfaz (figura 34) donde el administrador pueda introducir una IP de la red que desea escanear en notación CIDR (Enrutamiento entre dominios sin Clases, representa la ultima mejora en el modo como se interpretan las direcciones IP) con la finalidad de determinar en qué subred se va a realizar el rastreo de Punto de acceso. Figura 34. Interfaz de Escanear Red. 4.3.3. Implementación. Para cada proceso desarrollado se muestran a continuación las pruebas realizadas para verificar que la aplicación mantiene un comportamiento correcto: Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 63 a) Agregar, editar y eliminar usuario: Agregar Usuario: Para realizar la prueba de esta funcionalidad se crearon 4 usuarios: josmaguirre, amorales, kendall y dvillavicencio. Estos usuarios corresponden al equipo de desarrollo así como el administrador del sistema. En la figura 35 se muestra la interfaz de Agregar Usuario al momento de realizar la prueba. Figura 35. Prueba de Agregar Usuario. Usuarios agregados: josmaguirre, amorales, kendall, dvillavicencio. Resultado de las pruebas: Exitoso. En la figura 36 se observan los usuarios registrados mediante la interfaz de visualización. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 64 Figura 36. Interfaz de visualización de Usuarios. Editar Usuarios: Para realizar esta prueba se definió realizar la edición de los usuarios josmaguirre y kendall, los cuales corresponden al equipo de desarrollo. Se modifico información como los Módulos que pueden utilizar así como cambio de clave (Figura 37). Figura 37. Prueba de Editar Usuario. Usuarios Editados: josmaguirre, kendall. Resultado de las Pruebas: Exitoso. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 65 En la siguiente figura se muestra la información modificada del usuario josmaguirre (Figura 38): Figura 38. Datos Modificados para el Usuario josmaguirre. Eliminar Usuario: Para realizar la prueba se definió la eliminación del usuario josmaguirre (figura 39). Esta prueba es para verificar que la información asociada al usuario es eliminada en su totalidad del sistema. Figura 39. Prueba de Eliminar Usuario. Usuario eliminado: josmaguirre. Resultado de la prueba: Exitoso. En la siguiente figura se muestra la tabla de visualización de usuarios, en la cual no se presenta el usuario eliminado (Figura 40): Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 66 Figura 40. Tabla de Visualización de Usuarios. A nivel de Base de Datos no se encuentra el usuario josmaguirre, como se muestra en la figura 41: Figura 41. Tabla adm_tusuarios con los usuarios registrados. b) Agregar, editar y eliminar Punto de acceso: Agregar Punto de acceso: Para realizar esta prueba se realizo la agregación de un Punto de acceso local de manera manual, según se muestra en la figura 42: Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 67 Figura 42. Prueba de Agregar Punto de acceso manual. Resultado de la Prueba: Exitoso. Luego de realizar la prueba se puede visualizar la información de dicho punto en la Interfaz de visualización de Punto de acceso (figura 43). Figura 43. Interfaz de Visualización de Punto de acceso. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 68 Editar Punto de acceso: Para esta prueba se realizo la edición manual del Punto de acceso creado “AP Prueba” como se muestra en la figura 44. Se modifico específicamente la MAC address del Punto de acceso. Figura 44. Interfaz de Modificación de Punto de acceso. Resultado de la prueba: Exitoso. Eliminar Punto de acceso: Para esta prueba se procede a la eliminación del Punto de acceso creado “AP Prueba” como se muestra en la figura 45. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 69 Figura 45. Ventana de Eliminación de Punto de acceso. Resultado de la Prueba: Exitoso Para verificar que se ha eliminado en su totalidad el Punto de acceso se observa en la figura 46 la tabla router con los router registrados luego de la eliminación. Figura 46. Tabla router con los Punto de acceso registrados. c) Escanear red: Para esta prueba se realizo un rastreo local de la red, especificando la IP del Punto de acceso que se desea encontrar, como se muestra en la figura 47. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 70 Figura 47. Rastreo de Punto de acceso. Al realizar el rastreo se tuvo como resultado e siguiente dispositivo (Figura 48): Figura 48. Resultado del Rastreo del Punto de acceso. Resultado de la Prueba: Exitoso. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 71 Luego de seleccionar el Punto de acceso encontrado se procede a agregarlo a la lista de Puntos de Acceso administrados. En la siguiente figura se muestra la ventana con la identificación del Punto de acceso agregado satisfactoriamente. Figura 49. Punto de acceso registrado luego del rastreo. Capitulo V. Escenarios de Prueba Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 72 Capítulo V. Escenarios de Prueba En este capítulo se presentan el conjunto de escenarios de prueba utilizados para comprobar el funcionamiento del sistema dentro de diferentes ambientes y topologías de red. Estas pruebas se enfocaron específicamente en el proceso de rastreo de dispositivos, el cual debe ser comprobado en las distintas subredes de la Facultad de Ciencias así como también en el Centro de Computación, el cual tendrá el servidor en el cual la aplicación va a estar en funcionamiento para la administración y monitoreo de los Puntos de Acceso. Escenario 1. Este escenario se realizo en las instalaciones del Laboratorio ICARO. La finalidad de la prueba era comprobar si el rastreo de dispositivos desarrollado era capaz de encontrar dispositivos inalámbricos que se encontraban en ese momento en la red. En el ambiente de la Prueba se tuvieron los siguientes dispositivos: - 1 dispositivo inalámbrico (Router D-LINK, IP 192.168.1.1). - Una computadora personal, la cual iba a actuar como servidor donde se encontraba contenida la aplicación. Dicha computadora recibe servicio de internet gracias al dispositivo D-LINK mencionado anteriormente. Finalidad de la Prueba La finalidad de la prueba era validar que la aplicación fuera capaz de encontrar dispositivos que se encontraran dentro de la misma red en la cual el servidor donde la aplicación estaba prestando servicio se encontraba. Inicio de la Prueba Para el inicio de la prueba se coloco en la opción “Escanear Red” en la página de administración de Puntos de Acceso, la IP del router. No se coloco ningún Capitulo V. Escenarios de Prueba Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 73 número en la notación CIDR, lo que le indica a la aplicación que el rastreo solo se realizara únicamente sobre la IP suministrada como se muestra en la figura 50. Figura 50. Inicio de la prueba, Escenario 1. En la figura 51 se puede observar que el resultado genera una entrada en el archivo XML en cual define que la IP 192.168.1.1 corresponde a un dispositivo D- Link DWL Series. El resultado mostrado a usuario es el siguiente: Figura 51. Resultado mostrado al usuario en el Escenario 1. De esta manera se pudo validar que el rastreo de dispositivos que se encuentran en la misma red se realizo con éxito. Escenario 2. Esta prueba tuvo como finalidad validar que el rastreo de dispositivos en la red se realizara de manera efectiva. Para ello se instalo la aplicación en una Capitulo V. Escenarios de Prueba Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 74 computadora personal ubicada en el Laboratorio de GROUPWARE, que se encuentra en las instalaciones de la Escuela de Computación de la Facultad de Ciencias. En el ambiente de la prueba se tuvieron los siguientes dispositivos: - 1 router inalámbrico (TP-LINK, IP 192.168.0.1). - Una computadora personal del laboratorio, el cual actuó como servidor donde la aplicación estaba contenida. Dicha computadora personal estaba dentro de la misma red en la cual se encontraba el router TP-LINK mencionado anteriormente. Finalidad de la Prueba La finalidad de la prueba era validar que el rastreo de dispositivos que se encuentran dentro de la misma red se realizara de manera satisfactoria. Inicio de la Prueba. Para el inicio de la prueba se coloco en la opción “Escanear Red” de la pagina de administración de punto de acceso, la IP del router. No se coloco ningún número en la notación CIDR, lo que le indica a la aplicación que el rastreo solo se realizara únicamente sobre la IP suministrada como se muestra en la figura 52. Figura 52. Inicio de la prueba en el Escenario 2. Capitulo V. Escenarios de Prueba Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 75 En la figura anterior se puede observar que el resultado genera una entrada en el archivo XML en cual define que la IP 192.168.1.1 corresponde a un dispositivo D-Link DWL Series. El resultado mostrado a usuario se visualiza en la figura 53: Figura 53. Resultado mostrado al usuario en el Escenario 2. Escenario 3. Esta prueba tuvo como finalidad validar que el rastreo de dispositivos en la red se realizara de manera efectiva. Para ello se instalo la aplicación en una computadora personal ubicada en el Centro de Computación, que se encuentra en las instalaciones de la Facultad de Ciencias. En el ambiente de la prueba se tuvieron los siguientes dispositivos: - 1 router inalámbrico (Cisco Linksys WRT54G, IP 192.168.0.2). - Una computadora personal del laboratorio, el cual actuó como servidor donde la aplicación estaba contenida. Dicha computadora personal estaba dentro de la misma red en la cual se encontraba el router TP-LINK mencionado anteriormente. Finalidad de la Prueba La finalidad de la prueba era validar que el rastreo de dispositivos que se encuentran dentro de la misma red se realizara de manera satisfactoria. Capitulo V. Escenarios de Prueba Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 76 Inicio de la Prueba. Para el inicio de la prueba se coloco en la opción “Escanear Red” de la pagina de administración de punto de acceso, la IP del router. No se coloco ningún número en la notación CIDR, lo que le indica a la aplicación que el rastreo solo se realizara únicamente sobre la IP suministrada como se muestra en la figura 54. Figura 54. Inicio de la prueba en el Escenario 3. En la figura anterior se puede observar que el resultado genera una entrada en el archivo XML en cual define que la IP 192.168.0.3 corresponde a un dispositivo Cisco Series. El resultado mostrado a usuario es el siguiente: Figura 55. Resultado mostrado al usuario en el Escenario 3. Capitulo V. Escenarios de Prueba Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 77 Escenario 4. Esta prueba tuvo como finalidad validar que el rastreo de dispositivos en la red se realizara de manera efectiva. Para ello se instalo la aplicación en una computadora personal ubicada en el Centro de Computación, que se encuentra en las instalaciones de la Facultad de Ciencias. En el ambiente de la prueba se tuvieron los siguientes dispositivos: - 1 router inalámbrico (Cisco Linksys WRT54G, IP 192.168.0.2). - Una computadora personal del laboratorio, el cual actuó como servidor donde la aplicación estaba contenida. Dicha computadora personal estaba dentro de la misma red en la cual se encontraba el router TP-LINK mencionado anteriormente. Finalidad de la Prueba La finalidad de la prueba era validar que el rastreo de dispositivos que se encuentran dentro de la misma red se realizara de manera satisfactoria utilizando la notación CIDR para el rastreo de toda la red. Inicio de la Prueba. Para el inicio de la prueba se coloco en la opción “Escanear Red” de la pagina de administración de punto de acceso, la IP del router. Se coloco la notación CIDR 24 para que la aplicación a través del comando NMAP realizara un rastreo completo de toda las subredes que estén conectadas al Centro de Computación como se muestra en la figura 56. Capitulo V. Escenarios de Prueba Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 78 Figura 56. Inicio de la prueba en el Escenario 4. En la figura 65 se puede observar que el resultado genera entradas en el archivo XML en cual define todos los dispositivos encontrados dentro de la red y subredes a través del scan, la aplicación le mostrara todos los dispositivos al administrador de red en cual queda a decisión del administrador que dispositivo almacenar dentro de la base de datos, dicho proceso puede durar varios minutos dependiendo de la notación CIDR utilizada por cual motivo la aplicación informara sobre dicha característica a la hora de culminar el rastreo y se muestran los dispositivos encontrados como sigue en la figura 57 y en la figura 58: Capitulo V. Escenarios de Prueba Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 79 Figura 57. Mensaje que se muestra al terminar el rastreo en el Escenario 4. Figura 58. Resultado mostrado al usuario en el Escenario 4. Capitulo V. Escenarios de Prueba Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 80 En la figura 58 se puede observar que el resultado del rastreo por todo la red escribió varias entradas en el archivo networkScan.xml registrando todos los dispositivos encontrados dentro de la red, antes de mostrarle la información al usuario se descartan los dispositivos que se encuentren registrados en la base de datos de la aplicación, como se observa en la figura 58 muchos de los dispositivos mostrados no son Puntos de Acceso sino celulares, impresoras, scanner y cualquier dispositivo inalámbrico conectado dentro de la red del Centro de Computación de la Facultad de Ciencias, queda de parte del administrador de red analizar los dispositivos mostrados y decidir si registra el dispositivo dentro de la base de datos de la aplicación o obvia la información de dichos dispositivos. Al decidir que dispositivo es necesario almacenarlo dentro de la base de datos se selecciona la opción “Registrar” para almacenar la información del dispositivo, la aplicación se encargara de almacenar la información obtenida del resultado del rastreo como son la dirección IP del dispositivo, la MAC y el distribuidor, el administrador de Red deberá si así lo desea completar la información del Punto de Acceso como se muestra en la figura 59: Figura 59. Pantalla para completar los datos del Punto de Acceso en el Escenario 4. Capitulo V. Escenarios de Prueba Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 81 Al seleccionar la opción continuar se registrara automáticamente la información colocada directamente por la aplicación y si fuera el caso la información suministrada por el administrador de la red, el sistema identificara el router almacenado para que el administrador decida si desea registrar otro dispositivo. Los resultados de la inserción del nuevo dispositivo se mostraran en la pantalla del resultado del Scanning y en la sección de administrar Puntos de Accesos como se muestra en la figura 60 y 61. Figura 60. Resultado de haber registrado un dispositivo dentro de la Base de datos en el Escenario 4. Capitulo V. Escenarios de Prueba Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 82 Figura 61. SE muestra la información del dispositivo en la tabla de Puntos de Accesos Registrados en la base de datos Escenario 4. La aplicación fue instalada en el centro de computación con todos los requisitos para su funcionamiento, el Scanner de la red en el escenario 4 se hizo comenzando con una dirección IP dentro de la red del centro de computación pero según la notación CIDR utilizada NMAP puedo haber escaneado más de una red, todo depende de la topología de la red, por cual motivo el administrador de red debe estar informado de cómo está estructurada toda la red de la Facultad de Ciencias y la forma correcta para administrar la notación CIDR para alcanzar un espacio más amplio para el scanner. Conclusiones Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 83 Conclusiones El Trabajo Especial de Grado consistió en el desarrollo de un modelo de sistema de gestión Web que permita administrar y monitorear los Puntos de Acceso inalámbricos que conforman la red de la Facultad de Ciencias de la Universidad Central de Venezuela de una manera más eficiente y sencilla para los administradores de la red, para tal objetivo se estudio la topología de la red y las posibles herramientas para desarrollar la aplicación. Para cada uno de los objetivos específicos se lograron obtener las siguientes conclusiones:  Recolectar información acerca de los dispositivos que conforman la red inalámbrica actual: Se logro determinar que la topología de la red de la Facultad de Ciencias es una red heterogénea debido a los Puntos de Accesos no siempre son de la misma marca ni del mismo modelo, sino que dependen de muchos factores como por ejemplo: costo y presupuesto disponible.  Analizar la información recolectada acerca de los Puntos de Acceso que se encuentran actualmente en funcionamiento: Con este objetivo se concluyo y se llevo a la tarea de obtener información sobre el estado de los Puntos de Acceso a través de comandos (ping) y si el dispositivo soportaba SNMP poder utilizar el nombre de la comunidad (community name) configurado para el dispositivo.  Para los objetivos específicos como son el diseño de la pagina Web e implementar las funcionalidades contempladas de la aplicación se concluyo de manera exitosa en más de un 85% debido a que se encontraron limitaciones como lo fue el resultado final del Scanning que muestra todo los dispositivos encontrados, donde el requerimiento original solo se quería que tomara los Puntos de Acceso de la red. Conclusiones Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 84 El resultado obtenido a través de las pruebas es una aplicación que cumple con todos los requerimientos planteados al principio de este trabajo. Por tal motivo se espera que la aplicación logre minimizar la dificultad de las tareas de administración y monitoreo de los Puntos de Accesos para los administradores de la red inalámbrica de la Facultad de Ciencias. Aunque nuevos requerimientos fueron surgiendo durante el desarrollo de la aplicación, se lograron abarcar en su totalidad en el resultado final de este trabajo. Ciertas limitantes se encontraron al momento de realizar el taller de diseño, las cuales fueron las siguientes:  Al momento de realizar el escáner de la red, la aplicación muestra al Administrador de la Red todos los dispositivos (Computadoras Personales, Impresoras de Red, routers, etc.) que se encuentran en la misma. Queda de la mano del Administrador discernir cual dispositivo agregará para ser administrado.  Es posible hacer un escáner de una IP en especifico o de un grupo de IP’s dentro de una subred. Queda de parte del Administrador tener conocimiento sobre la notación CIDR para que pueda definir el rango de IP’s en las que desea realizar el rastreo. El método RAD permitió por medio de iteraciones facilitar el desarrollo de la aplicación, puesto que dio flexibilidad para cubrir e implementar cada uno de los requerimientos, así como el poder realizar las pruebas necesarias para asegurar el funcionamiento efectivo de la aplicación. El uso de PHP como tecnología del lado del servidor agilizo considerablemente el proceso de desarrollo de la aplicación, ya que se aprovecharon al máximo las estructuras y métodos predefinidos que posee el lenguaje, los cuales minimizaron el tiempo de codificación. El uso de la herramienta NMAP ha sido muy importante a la hora de realizar el rastreo de la red, ya que permite conocer la información necesitada por la aplicación de una manera sencilla. Conclusiones Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 85 Se espera que con la implementación de esta aplicación, las tareas de administración y monitoreo de la red de la Facultad de Ciencias se realicen de manera más sencilla y efectiva. Trabajos Futuros Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 86 Trabajos Futuros Debido a la importancia e impacto que la aplicación puede llegar a tener dentro de la Facultad de Ciencias se pueden explotar aún más el desarrollo de la aplicación para escalar todos los posibles escenarios y características futuras de la red inalámbrica. Por tal motivo se proponen trabajos futuros de desarrollo como los siguientes:  Terminar de explotar las características y funcionalidades de los comandos SNMP soportados por la aplicación, definir de manera amplia y pensando en el beneficio de la administración de la Red inalámbrica las características que se desean obtener del árbol MIB a través de los comandos SNMP.  Realizar procesos que corran en Background (Tareas independientes de un Usuario) que verifiquen el comportamiento de los Puntos de Acceso cada cierto tiempo y registren en la base de datos los resultados de cada corrida.  Desarrollar aplicaciones o pequeños módulos para dispositivos móviles (Smart Phones), la cual permita realizar el monitoreo de los Puntos de Accesos que se encuentran en la red de la Facultad de Ciencias. Esto permite al administrador poder realizar un monitoreo efectivo de los dispositivos en cualquier lugar de la Facultad de Ciencias.  Obtener estadísticas sobre el comportamiento de la aplicación en producción. Estos objetivos estudiados tanto los implementados como los no implementados, así como también los objetivos que se proponen a futuro, dan prueba de que la aplicación desarrollada para la administración y monitoreo de los Puntos de Acceso que pertenecen a la red de la Facultad Trabajos Futuros Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 87 de Ciencias de la Universidad Central de Venezuela es una aplicación extensible que puede ser explotada para lograr múltiples objetivos. Referencias Bibliográficas Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 88 Referencias Bibliográficas [1] Alegsa, Diccionario de Informática. Consultado el 10 de Junio de 2011. http://www.alegsa.com.ar/Dic/aplicacion%20web.php. [2] Somerville, Ian. Ingeniería del Software, séptima edición. Consultado el 22 de Junio de 2011. [3] Morín, Arley T. Implementación del Patrón clásico de diseño web Modelo- Vista-Controlador (MVC) en PHP. Consultado el 22 de Junio de 2011 http://arleytriana.blogspot.com/2009/07/implementacion-del-patron-clasico- de.html [4] Cibernetia. Historia de las aplicaciones web. Consultado el 30 de Junio de 2011. http://www.cibernetia.com/manuales/introduccion_aplicaciones_web/3_histori a_aplicaciones_web.php [5] Moreno y Villena, Antonio. Historia y características generales. Consultado el 5 de Julio de 2011. http://www.aeemt.com/contenidos_socios/Informatica/Informac_Informat_Tec nolog/AMV_AGI_AEEMT_HTML_Historia.pdf [6] Desarrolloweb. Manual de Hojas de Estilo en Cascada. Consultado el 5 de Julio de 2011. http://www.desarrolloweb.com/manuales/manual-css-hojas-de-estilo.html [7] GS-ZONE. Definición de JavaScript. Consultado el 15 de Julio de 2011. http://www.gs-zone.org/ [8] McLaughlin, B. Introduction to AJAX. Consultado 18 de Mayo de 2010. http://www-128.ibm.com/developerworks/web/library/wa-ajaxintro1.html. http://www.alegsa.com.ar/Dic/aplicacion%20web.php http://arleytriana.blogspot.com/2009/07/implementacion-del-patron-clasico-de.html http://arleytriana.blogspot.com/2009/07/implementacion-del-patron-clasico-de.html http://www.cibernetia.com/manuales/introduccion_aplicaciones_web/3_historia_aplicaciones_web.php http://www.cibernetia.com/manuales/introduccion_aplicaciones_web/3_historia_aplicaciones_web.php http://www.aeemt.com/contenidos_socios/Informatica/Informac_Informat_Tecnolog/AMV_AGI_AEEMT_HTML_Historia.pdf http://www.aeemt.com/contenidos_socios/Informatica/Informac_Informat_Tecnolog/AMV_AGI_AEEMT_HTML_Historia.pdf http://www.desarrolloweb.com/manuales/manual-css-hojas-de-estilo.html http://www.gs-zone.org/ http://www-128.ibm.com/developerworks/web/library/wa-ajaxintro1.html Referencias Bibliográficas Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 89 [9] Manual de Referencia JQuery. Consultado el 22 de Julio de 2011. http://jquery.com/ [10] Manual de Referencia de Apache HTTP Server. Consultado el 26 de Julio de 2011. http://apache.org [11] Gilmore, W. A Programmer’s Introduction to PHP 4.0. Consultado el 15 de Mayo de 2010. http://books.google.co.ve/ [12] Manual de Referencia de MySQL. Consultado el 15 de Julio de 2011. http://dev.mysql.com/doc/refman/5.5/en/ [13] Manual de Referencia de NMAP. Consultado el 26 de Mayo de 2010. http://nmap.org [14] Cisco Systems. “Internetworking Technologies Handbook”. Consultado el 13 de Febrero de 2010. http://www.cisco.com/en/US/docs/internetworking/technology/handbook/ito_ doc.html. [15] Kendall, K. y Kendall, J. Análisis y Diseño de Sistema. Sexta Edición. Pearson Education, México. http://jquery.com/ http://apache.org/ http://books.google.co.ve/ http://dev.mysql.com/doc/refman/5.5/en/ http://nmap.org/ http://www.cisco.com/en/US/docs/internetworking/technology/handbook/ito_doc.html http://www.cisco.com/en/US/docs/internetworking/technology/handbook/ito_doc.html Anexos Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 90 Anexos Manual de Usuario de la aplicación. Requerimientos de instalación y configuración para instalar la aplicación. Script de Base de Datos de la aplicación. file:///E:/Tesis/TEG-Kendall/manual%20de%20instalacion%20y%20requerimientos%20de%20la%20aplicación.docx file:///E:/Tesis/TEG-Kendall/manual%20de%20instalacion%20y%20requerimientos%20de%20la%20aplicación.docx file:///E:/Tesis/TEG-Kendall/manual%20de%20instalacion%20y%20requerimientos%20de%20la%20aplicación.docx file:///E:/Tesis/TEG-Kendall/sistemaadministracion.sqlUniversidad Central de Venezuela Universidad Central de Venezuela Facultad de Ciencias Escuela de Computación Modelo de Sistema de Gestión y Monitoreo para los Puntos de Acceso Inalámbricos Heterogéneos Multifabricante. Caso de Estudio: Facultad de Ciencias de la Universidad Central de Venezuela Trabajo Especial de Grado presentado Por el bachiller: Kendall Rober Navarro Urbina C.I.: 16.412.971 Para optar al Título de Licenciado en Computación Tutora: Prof. Ana Verónica Morales. Caracas, Octubre del 2011 Acta ACTA Quienes suscriben, miembros del jurado designado por el Consejo de la Escuela de Computación de la Facultad de Ciencias de la Universidad Central de Venezuela, para examinar el Trabajo Especial de Grado titulado: Sistema de Administración y Monitoreo para los Punto de acceso Inalámbricos de la Facultad de Ciencias de la Universidad Central de Venezuela, presentado por el bachiller Kendall R. Navarro U., C.I.: 16.412.971, a los fines de optar por el título de Licenciado en Computación, dejan constancia de lo siguiente: Dicho trabajo, leído por cada uno de los miembros del jurado, se fijó el día ________________________________, a las ____________, para que sus autores lo defendieran en forma pública en la Escuela de Computación, mediante una presentación oral de su contenido, luego de lo cual respondieron a las preguntas formuladas. Finalizada la defensa pública del Trabajo Especial de Grado, el jurado decidió aprobarlo con la nota de ___________ puntos. En fe de lo cual se levanta la presente Acta, en Caracas a los treinta y un (31) días del mes de octubre del año dos mil once (2011), dejando constancia de que actuó como coordinador del jurado la Profesora Ana Verónica Morales Bezeira. ______________________________ ______________________________ Prof. Ana Morales Prof. María E. Villapol (Tutor) (Jurado) ______________________________ Prof. Jaime Parada (Jurado) Dedicatoria Dedicatoria. A mis padres, por brindarme su apoyo y estar allí en los momentos en que los necesite, de manera incondicional. A mi hijo, que me da la fuerza necesaria para continuar y ser más cada día, que con su inocencia me inspira a continuar luchando por lo que quiero. A mi compañera, complemento de mí ser. Agradecimientos Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación IV Agradecimientos. A Dios en primer lugar, por bendecir mi vida de tantas maneras. A mi madre por todo el amor y los sacrificios que ha realizado para lograr que alcanzara este preciado logro. Sé que esta meta alcanzada por mi también es un logro para ella. A mi padre, porque gracias a sus lecciones y enseñanzas estoy alcanzando ser mejor persona cada día. A mis hermanos, porque de ustedes aprendo cada día el valor de poder contar siempre con alguien. A mi morenita Elianny López por apoyarme en todo este camino y estar conmigo en los momentos más difíciles de mi vida. Para ti va dedicado este logro que se que compartiremos juntos toda la vida. A mi hijo que gracias a su sonrisa, amor y compañía me llena de energía para continuar este largo camino de éxitos. A mi compadre Andrés “Porfi” Blanco que siempre está conmigo en las buenas y en las malas. A mí cuñado Williams Quevedo por siempre estar cuando lo necesito. A mis suegros que siempre me brindaron su apoyo cuando los necesitaba. A la profesora Ana Morales por brindarme su apoyo en los momentos más difíciles de mi carrera, sin su apoyo este logro hubiera sido imposible. Muchísimas gracias profesora. Muchas personas tocaron mi vida para bien durante mi paso por la Facultad de Ciencias, a todos aquellos con quienes compartí momentos de estudio, como también de “sano ocio”. Gracias por su tiempo y disposición. Agradecimientos Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación V A la ilustre Universidad Central de Venezuela, por brindarme una educación de excelencia, tanto en lo académico como en lo humano. Y por formar parte de mi vidas. Resumen Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación VI Resumen. El presente Trabajo Especial de Grado propone un sistema Web que permita la administración y el monitoreo de los Puntos de Acceso que permiten acceder a Internet de manera inalámbrica dentro de la Facultad de Ciencias de la Universidad Central de Venezuela. De esta manera, todo el proceso de administración y monitoreo se puede realizar de forma sencilla, rápida y de manera centralizada e independiente del fabricante de los equipos. El modelo de sistema de administración y monitoreo de los Puntos de Acceso es capaz de llevar estadísticas que serán presentadas de forma grafica al administrador para que detecte el estado y comportamiento de cada uno de los Puntos de Acceso registrados en la base de datos del sistema. Para el desarrollo de la aplicación, se implementó la Metodología de Desarrollo Rápido de Aplicaciones, en el cual se realizaron procesos iterativos para depurar y mejorar la aplicación, basados en las pruebas, requerimientos y observaciones de los usuarios de la aplicación. El resultado final del análisis fue la creación una interfaz amigable y usable, en el cual el administrador del sistema puede llevar a cabo las tareas de gestión de los dispositivos que conforman la red inalámbrica de la Facultad de Ciencias de forma centralizada. Palabras Clave: Aplicación Web, punto de acceso, Cliente/Servidor, Desarrollo Rápido de Aplicaciones. Índice de Contenidos Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación VII Índice de Contenidos. Índice de Tablas. ........................................................................... IX Índice de Figuras. ........................................................................... X Introducción ................................................................................. 1 Capítulo I. Problema de Investigación. ................................................. 3 1.1 Planteamiento del Problema. ...................................................... 3 1.2 Objetivos. ............................................................................. 4 1.2.1 Objetivo General. ............................................................... 4 1.2.2 Objetivos Específicos. ........................................................ 4 1.3 Justificación e Importancia. ..................................................... 5 Alcance. .................................................................................... 5 1.4 Tecnologías Usadas. ............................................................... 6 Capítulo II. Marco Conceptual. ........................................................... 6 2.1 Aplicaciones Web Cliente/Servidor. ............................................ 7 2.1.1 Aplicaciones Web. ............................................................ 7 2.1.2 Arquitectura Cliente/Servidor .............................................. 7 2.1.3 El Patrón de Diseño MVC (Modelo-Vista-Controlador). .................. 9 2.2 Herramientas tecnológicas para el desarrollo de aplicaciones Web. .... 11 2.2.1 Tecnologías del lado del Cliente. ........................................ 12 2.2.1.1 Lenguaje de marcado de hipertexto (HTML o Hiper Text Markup Language). .......................................................................... 12 2.2.1.2 Cascading Style Spreadsheet (Hojas de Estilo en Cascada). ..... 13 2.2.1.3 JavaScript. .............................................................. 15 2.2.1.4 Ajax. ..................................................................... 16 2.2.1.5 JQuery ................................................................... 17 2.2.2 Tecnologías del Lado del Servidor ........................................ 18 2.2.2.1 Apache ................................................................... 18 2.2.2.2 PHP ....................................................................... 18 2.2.3 Tecnologías del lado del Servidor de Bases de Datos .................. 19 2.2.3.1 MySQL .................................................................... 19 2.3 Herramientas para el Monitoreo y Administración de Redes .............. 21 2.3.1 NMAP .......................................................................... 21 2.3.2 SNMP (Simple Network Management Protocol o Protocolo Simple de Gestión de Redes). ................................................................... 22 Capítulo III. Marco Metodológico ....................................................... 25 3.1. Metodología de Desarrollo de Software ........................................ 25 3.1.1 Metodología ADHOC ........................................................... 25 3.1.1.2 Ventajas de ADHOC. ..................................................... 26 Capítulo IV. Marco Aplicativo. .......................................................... 27 4.1 Proyecto. ............................................................................ 27 4.2 Fases del Proyecto. ................................................................ 28 4.2.1 Fase de Planeación de Requerimientos. ................................... 28 II. Autenticación (Login). ..................................................... 30 Índice de Contenidos Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación VIII III. Recuperar Contraseña. ..................................................... 31 IV. Cambiar Contraseña. ....................................................... 33 V. Administrar Usuario ........................................................ 34 VI. Agregar Usuario ............................................................. 36 VII. Información de Usuario. ................................................... 38 VIII. Editar Usuario ............................................................. 39 IX. Eliminar Usuario. ........................................................... 40 X. Administrar Punto de acceso. ............................................. 41 XI. Agregar Punto de acceso. ................................................. 43 XII. Editar información del Punto de acceso ................................. 47 XIII. Ver información del Punto de acceso. ................................ 48 XIV. Eliminar Punto de acceso. .............................................. 51 4.2.2 Taller de Diseño. ................................................................. 51 Requerimiento 1: Autenticación ................................................... 52 Requerimiento 2: Creación de Usuarios. .......................................... 53 Requerimiento 3: Visualización y Eliminación de Usuarios ..................... 54 Requerimiento 4: Editar información del Usuario. .............................. 55 Requerimiento 5: Agregar Punto de Acceso ...................................... 56 Requerimiento 6: Visualizar y Eliminar Punto de acceso ....................... 57 Requerimiento 7: Editar Punto de acceso ........................................ 58 Requerimiento 8: Opciones administrativas para los Puntos de Acceso ..... 59 Requerimiento 9: Escanear Red .................................................... 62 4.3.3. Implementación. ................................................................ 62 Capítulo V. Escenarios de Prueba ..................................................... 72 Escenario 1. .............................................................................. 72 Escenario 2. .............................................................................. 73 Escenario 3. .............................................................................. 75 Escenario 4. .............................................................................. 77 Conclusiones ............................................................................... 83 Trabajos Futuros .......................................................................... 86 Referencias Bibliográficas ............................................................... 88 Anexos ...................................................................................... 90 Manual de Usuario de la aplicación. ................................................. 90 Requerimientos de instalación y configuración para instalar la aplicación. ... 90 Script de Base de Datos de la aplicación. ........................................... 90 Índice de Tablas Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación IX Índice de Tablas. Tabla 1. Descripción del Caso de Uso Autenticar Usuario. .......................... 31 Tabla 2. Descripción de Caso de Uso Recuperar Contraseña. ....................... 33 Tabla 3. Descripción del Caso de Uso Cambiar Contraseña. ........................ 34 Tabla 4. Descripción Caso de Uso Administrar Usuario .............................. 36 Tabla 5. Descripción Caso de Uso Agregar Usuario. .................................. 37 Tabla 6. Descripción del Caso de Uso Ver información de Usuario. ................ 38 Tabla 7. Descripción del Caso de Uso Editar Usuario. ................................ 40 Tabla 8. Descripción del Caso de Uso Eliminar Usuario. ............................. 41 Tabla 9. Descripción del Caso de Uso Administrar Punto de acceso ............... 43 Tabla 10. Descripción del Caso de Uso Agregar Punto de acceso................... 45 Tabla 11. Descripción del Caso de Uso Agregar Punto de acceso................... 46 Tabla 11. Descripción del Caso de Uso Editar información del Punto de acceso. 48 Tabla 12. Descripción Caso de Uso Ver información del Punto de acceso. ....... 50 Tabla 13. Descripción del Caso de Uso Eliminar Punto de acceso. ................. 51 Índice de Figuras Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación X Índice de Figuras. Figura 1. Arquitectura Cliente-Servidor (Imagen tomada de http://es.sandramarramirez.wikia.com). ............................................... 9 Figura 2. Arquitectura MVC. ............................................................. 10 Figura 3. Red Administrada SNMP ....................................................... 23 Figura 4. Metodología ADHOC ............................................................ 26 Figura 5. Modelo Entidad-Relación del modelo de datos de la aplicación. ....... 29 Figura 6. Caso de Uso Autenticar Usuario (Login) ..................................... 30 Figura 7. Casos de Uso Recuperar Contraseña......................................... 32 Figura 8. Caso de Uso Cambiar Contraseña. ........................................... 34 Figura 9. Caso de uso Administrar Usuario ............................................. 35 Figura 10. Caso de Uso Agregar Usuario ................................................ 37 Figura 11. Caso de Uso Ver información de Usuario. ................................. 38 Figura 12. Caso de Uso Editar Usuario. ................................................. 39 Figura 13. Caso de Uso Eliminar Usuario. .............................................. 41 Figura 14. Caso de Uso Administrar Punto de acceso. ............................... 42 Figura 15. Caso de Uso Agregar Punto de acceso ..................................... 44 Figura 16. Caso de Uso Editar Información de Punto de acceso. ................... 47 Figura 17. Caso de Uso Ver información del Punto de acceso. ..................... 49 Figura 18. Caso de Uso Eliminar Punto de acceso. ................................... 51 Figura 19. Pantalla de Autenticación del Sistema. ................................... 52 Figura 20. Datos almacenados en adm_tusuarios para validar el proceso de autenticación. .............................................................................. 52 Figura 21. Pantalla que permite realizar la creación de un usuario ............... 53 Figura 22. Interfaz de Visualización de Usuario ....................................... 55 Figura 23. Botón de eliminación de Usuario en el Sistema. ......................... 55 Figura 24. Interfaz para la Edición del Usuario. ...................................... 56 Figura 25. Ventana para agregar nuevo Punto de acceso ............................ 57 Figura 26. Interfaz de Visualización de Punto de acceso. ........................... 58 Figura 27. Botón para eliminar un Punto de acceso. ................................. 58 Figura 28. Botón “Editar Router”. ...................................................... 59 Figura 29. Opciones de Administración. ................................................ 59 Figura 30. Comprobación del Estado del Punto de Acceso. ......................... 60 Figura 31. Estadísticas del Punto de Acceso registradas en la BD. ................. 60 Figura 32. Pagina administrativa del Punto de Acceso. .............................. 61 Figura 33. Estadísticas del Punto de Acceso. .......................................... 61 Figura 34. Interfaz de Escanear Red. ................................................... 62 Figura 35. Prueba de Agregar Usuario. ................................................. 63 Figura 36. Interfaz de visualización de Usuarios. ..................................... 64 Figura 37. Prueba de Editar Usuario. ................................................... 64 Figura 38. Datos Modificados para el Usuario josmaguirre. ......................... 65 Figura 39. Prueba de Eliminar Usuario. ................................................ 65 Figura 40. Tabla de Visualización de Usuarios. ........................................ 66 Índice de Figuras Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación XI Figura 41. Tabla adm_tusuarios con los usuarios registrados. ...................... 66 Figura 42. Prueba de Agregar Punto de acceso manual. ............................. 67 Figura 43. Interfaz de Visualización de Punto de acceso. ........................... 67 Figura 44. Interfaz de Modificación de Punto de acceso. ............................ 68 Figura 45. Ventana de Eliminación de Punto de acceso. ............................ 69 Figura 46. Tabla router con los Punto de acceso registrados. ...................... 69 Figura 47. Rastreo de Punto de acceso. ................................................ 70 Figura 48. Resultado del Rastreo del Punto de acceso. .............................. 70 Figura 49. Punto de acceso registrado luego del rastreo. ........................... 71 Figura 50. Inicio de la prueba, Escenario 1. ........................................... 73 Figura 51. Resultado mostrado al usuario en el Escenario 1. ....................... 73 Figura 52. Inicio de la prueba en el Escenario 2. ..................................... 74 Figura 53. Resultado mostrado al usuario en el Escenario 2. ....................... 75 Figura 54. Inicio de la prueba en el Escenario 3. ..................................... 76 Figura 55. Resultado mostrado al usuario en el Escenario 3. ....................... 76 Figura 56. Inicio de la prueba en el Escenario 4. ..................................... 78 Figura 57. Mensaje que se muestra al terminar el rastreo en el Escenario 4. .... 79 Figura 58. Resultado mostrado al usuario en el Escenario 4. ....................... 79 Figura 59. Pantalla para completar los datos del Punto de Acceso en el Escenario 4. ............................................................................................. 80 Figura 60. Resultado de haber registrado un dispositivo dentro de la Base de datos en el Escenario 4. .................................................................. 81 Figura 61. Se muestra la información del dispositivo en la tabla de Puntos de Accesos Registrados en la base de datos Escenario 4. ............................... 82 Introducción Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 1 Introducción Desde la creación de la red ARPANET a finales de los sesenta, el desarrollo y evolución de las redes que permiten la comunicación entre dispositivos ha tenido un enorme crecimiento. Actualmente, existen una gran cantidad de estándares, topologías y protocolos que permiten la comunicación efectiva entre dispositivos interconectados. La necesidad de realizar esta comunicación de manera sencilla llevó al origen de las redes inalámbricas, como extensión para prestar servicio en donde la instalación e implementación de una red cableada no es factible ya sea por cuestiones de costo o especificaciones de infraestructura. Este hecho se remonta a 1979 [1] cuando ingenieros de IBM en Suiza realizaron un experimento que consistía en utilizar enlaces infrarrojos para crear una red local en una fábrica. Este hecho puede considerarse el punto de partida para la evolución de la tecnología inalámbrica. En la actualidad, la Facultad de Ciencias de la Universidad Central de Venezuela cuenta con un conjunto de aplicaciones Web que permiten realizar distintas tareas de manera sencilla, desde procesos de inscripción hasta solicitudes estudiantiles y docentes. Actualmente en la Facultad de Ciencias se encuentran instalados un conjunto de Puntos de Acceso inalámbricos, que permiten el acceso a la intranet de la universidad a los usuarios de la Facultad. La labor de administración y monitoreo de los Puntos de Acceso es llevada manualmente y de forma individual por los administradores de la red, por tal razón dicha tarea se convierte muy tediosa para el administrador de red, ya que debe tener a la mano información fundamental sobre todos los Puntos de Acceso instalados dentro de la Facultad como pueden ser: La dirección IP, la ubicación física, la Mac address, etc. El Trabajo Especial de Grado consiste en utilizar las tecnologías de desarrollo para aplicaciones Web que ayuden a los administradores de la Red de la Facultad de Ciencias de la Universidad Central de Venezuela a gestionar y monitorear de Introducción Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 2 una manera sencilla y centralizada los dispositivos que se encuentran en la Red actual. El presente documento se encuentra estructurado de la siguiente manera: En el Capítulo I se describe el problema de la investigación donde se presenta el contexto del problema relacionado con la gestión y monitoreo de los Puntos de Acceso de la Facultad de Ciencias, así como el objetivo general y los objetivos específicos. En el Capítulo II se presenta el Marco Conceptual, el cual presenta las bases en las que se fundamenta el desarrollo de este trabajo. Se presentan las aplicaciones Web Cliente/Servidor, así como también la arquitectura Cliente/Servidor. Se presentan las tecnologías que van de la mano tanto del Cliente como del servidor, así como las herramientas usadas para el monitoreo de redes. En el Capítulo III se presenta el Marco Metodológico donde se define el método de Desarrollo Rápido de Aplicaciones, su característica, las ventajas y desventajas de la misma. En el Capítulo IV se presenta el Marco Aplicativo el cual especifica el conjunto de actividades realizadas así como los Casos de Uso de cada una de las funcionalidades del sistema. También se definen las iteraciones del método usado y las pruebas realizadas para verificar el funcionamiento de la aplicación. Capitulo I. Problema de Investigación Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 3 Capítulo I. Problema de Investigación. En el siguiente capítulo se expondrá la situación actual en la que se encuentra la Facultad de Ciencias de la Universidad de Venezuela con respecto a la red inalámbrica, y se mostrará el contexto del problema, que consiste en cómo se realiza el monitoreo y administración de los punto de acceso. De igual manera se expondrán los objetivos, general y específicos, la importancia y justificación de implementar un sistema centralizado de administración y monitoreo, así como también el alcance y los límites que se presentan al momento de implementar la solución al problema planteado. 1.1 Planteamiento del Problema. En la actualidad, dentro de la Facultad de Ciencias de la Universidad Central de Venezuela, se encuentran desplegados una serie de puntos de accesos inalámbricos para cubrir espacios críticos donde el acceso a la red por otros medios no es factible. El objetivo de dichos punto de acceso es apoyar las actividades académicas, docentes, de investigación y extensión. Con el tiempo, el despliegue de estos puntos de acceso ha aumentado notoriamente, por lo que se han adquirido dispositivos de diferentes fabricantes y modelos, debido a factores como el presupuesto disponible por la Universidad Central de Venezuela para tal fin, la disponibilidad del mercado venezolano o porque la adquisición de dispositivos de cierto fabricante puede ser de más provecho a la hora de cubrir ciertas necesidades y/o requerimientos tecnológicos. Debido a este crecimiento y diversidad, la tarea de conocer y monitorear el estado de cada punto de acceso, así como realizar las labores de administración y monitoreo de los mismos es una tarea bastante compleja. Para realizar las tareas de monitoreo, es necesario acceder a cada punto de acceso de manera separada, lo cual requiere que el personal de soporte técnico del Centro de Computación quienes son los encargados de realizar dichas tareas, deban conocer Capitulo I. Problema de Investigación Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 4 toda la información de cada uno de los dispositivos, así como su ubicación física dentro de la Facultad de Ciencias, dirección IP para el acceso a la interfaz de configuración de cada dispositivo, nombres de usuario y contraseña asignados a cada uno de estos punto de acceso. Esta situación, en la que el administrador debe estar dentro del rango de servicio de cada Punto de Acceso, así como conocer detalladamente la información de cada dispositivo a monitorear, da como resultado que esta tarea se realice con lentitud y que la misma no sea agradable al administrador. Debido a estos problemas, se planteó la idea de desarrollar e implementar una modelo de sistema Web, la cual permita el monitoreo y administración de cada uno de los Punto de Acceso activos en la red de una manera centralizada, rápida y efectiva, permitiendo también la incorporación de nuevos dispositivos necesarios para ampliar la cobertura dentro de la misma, facilitando la labor general del mantenimiento de la red. 1.2 Objetivos. 1.2.1 Objetivo General. Desarrollar una modelo de sistema Web que permita administrar y monitorear de manera centralizada los Puntos de Acceso que conforman la red inalámbrica de la Facultad de Ciencias de la Universidad Central de Venezuela. 1.2.2 Objetivos Específicos.  Recolectar información acerca de los dispositivos que conforman la red inalámbrica actual.  Analizar la información recolectada acerca de los Puntos de Acceso que se encuentran actualmente en funcionamiento.  Realizar el diseño de la aplicación Web.  Desarrollar módulo de gestión. Capitulo I. Problema de Investigación Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 5  Desarrollar módulo de monitoreo.  Definir escenarios de prueba para validar el comportamiento de la aplicación. 1.3 Justificación e Importancia. En la actualidad la Facultad de Ciencias cuenta con un conjunto de Puntos de Acceso para dar cobertura a lugares donde no existe o no está disponible la red cableada, permitiendo acceso de manera inalámbrica a la red de datos de la Universidad Central de Venezuela e Internet en general a sus estudiantes, docentes, empleados y obreros. El número de estos dispositivos se espera que crezca dentro de la Facultad de Ciencias, debido al costo de los equipos inalámbricos se sabe que la red inalámbrica estará compuesta por diferentes marcas de dispositivos de acuerdo a su precio y al presupuesto manejado para la compra de los equipos. Al no contar con una interfaz común que permita administrar y monitorear el estado de estos dispositivos hace que la labor de administración de la red sea tediosa, lenta y complicada, debido que para poder conocer el estado de toda la red, se debe acceder a cada Punto de Acceso por separado, por tal motivo surge la necesidad de implementar una aplicación Web que permita tener información centralizada de todos los Puntos de Acceso de la red para lograr así una administración eficiente, incrementando la calidad del servicio que se brinda a todos los usuarios. Con esta aplicación la tarea de administrar y monitorear los Puntos de Acceso se podrá realizar de una manera más rápida y eficiente. Alcance. La aplicación Web propuesta debe cubrir las siguientes necesidades:  Administrar y monitorear los Puntos de Accesos que están en la red registrados en la base de datos. Capitulo I. Problema de Investigación Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 6  Editar información acerca de un Punto de Acceso.  Desarrollar modulo de gestión de usuarios.  Desarrollar modulo de contacto con el administrador. 1.4 Tecnologías Usadas. Las tecnologías usadas para realizar el desarrollo de la aplicación Web son las siguientes:  PHP: Hipertext Pre-Procesor o Pre-procesador de Hipertexto, es un leguaje de programación interpretado para la creación de páginas Web.  Ajax: Asynchronous JavaScript and XML o JavaScript asíncrono y XML es un lenguaje de desarrollo de aplicaciones Web enriquecidas (Rich Internet Applications).  JavaScript: lenguaje de programación Web usado para el desarrollo de paginas dinámicas.  Apache: es un servidor Web multiplataforma el cual se utiliza para la publicación de páginas Web HTML. Este conjunto de tecnologías permitieron implementar el conjunto de funcionalidades definidas. El servidor Apache fue utilizado como contenedor para la aplicación, mientras que el modulo PHP permitirá interpretar el desarrollo de las funcionalidades. Los lenguajes Ajax y JavaScript, permitieron dar contenido dinámico a la aplicación. Capítulo II. Marco Conceptual. En este capítulo se definirá de manera detallada las tecnologías utilizadas para el desarrollo e implementación de la solución al problema planteado. Se expondrá la arquitectura Cliente-Servidor, así como el patrón MVC (Modelo-Vista- Controlador). Capitulo II. Marco Conceptual Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 7 Se explicarán las tecnologías que se ejecutan del lado del cliente y del lado del Servidor, así como también tecnologías que permiten el desarrollo de aplicaciones Web. Por último se explicaran las herramientas para el monitoreo de redes y para el descubrimiento de dispositivos dentro de la misma. 2.1 Aplicaciones Web Cliente/Servidor. 2.1.1 Aplicaciones Web. Se denomina Aplicación Web a aquellas aplicaciones que los usuarios pueden utilizar accediendo a un servidor Web a través de Internet o de una Intranet mediante un navegador. En otras palabras, es una aplicación software que se codifica en un lenguaje soportado por los navegadores Web en la que se confía la ejecución al navegador [1]. Una de las ventajas de las aplicaciones Web cargadas desde Internet o Intranet es la facilidad de mantener y actualizar dichas aplicaciones sin la necesidad de distribuir e instalar un software en, potencialmente, miles de clientes. También la posibilidad de ser ejecutadas en múltiples plataformas hace a las Aplicaciones Web una opción muy atractiva a la hora del desarrollo de aplicaciones [1]. Las Aplicaciones Web usan comúnmente una combinación de scripts del lado del servidor (ASP, PHP, etc.) y scripts del lado del cliente (HTML, JavaScript, etc.). Los scripts del lado del cliente se encargan de la presentación de la información mientras que los scripts del lado del servidor se encargan de toda la lógica utilizada para servir la información a los clientes [1]. 2.1.2 Arquitectura Cliente/Servidor El modelo arquitectónico cliente-servidor es un modelo de sistema en el que dicho sistema se organiza como un conjunto de servicios y servidores asociados, http://es.wikipedia.org/wiki/Servidor_web http://es.wikipedia.org/wiki/Internet http://es.wikipedia.org/wiki/Intranet http://es.wikipedia.org/wiki/Navegador_web http://www.alegsa.com.ar/Dic/plataforma.php Capitulo II. Marco Conceptual Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 8 más unos clientes que acceden y usan los servicios. Los principales componentes de este modelo son [2]:  Un conjunto de servidores que ofrecen servicios a otros subsistemas. Ejemplos de servidores son: servidores de impresoras que ofrecen servicios de impresión, servidores de archivos que ofrecen servicios de gestión y servidores de compilación, que ofrecen servicios de compilación de lenguajes de programación.  Un conjunto de clientes que llaman a los servicios ofrecidos por los servidores. Éstos son normalmente subsistemas en sí mismos. Puede haber varias instancias de un programa cliente ejecutándose concurrentemente.  Una red que permite a los clientes acceder a estos servicios. Esto no es estrictamente necesario ya que los clientes y los servidores podrían ejecutarse sobre una única máquina. En la práctica, sin embargo, la mayoría de los sistemas cliente-servidor se implementan como sistemas distribuidos [2]. En la figura 1 podemos observar un ejemplo de arquitectura Cliente/Servidor. Los clientes pueden conocer los nombres de los servidores disponibles y los servicios que éstos proporcionan. Sin embargo, los servidores no necesitan conocer la identidad de los clientes o cuántos clientes tienen. Los clientes acceden a los servicios proporcionados por un servidor a través de llamadas a procedimientos remotos usando un protocolo de petición-respuesta tal como el protocolo HTTP usado en la Red de Amplitud Mundial (WWW). Básicamente, un cliente realiza una petición a un servidor y espera hasta que recibe una respuesta [2]. Capitulo II. Marco Conceptual Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 9 Figura 1. Arquitectura Cliente-Servidor (Imagen tomada de http://es.sandramarramirez.wikia.com). 2.1.3 El Patrón de Diseño MVC (Modelo-Vista-Controlador). Es un patrón de arquitectura de software que separa los datos de una aplicación, la interfaz de usuario, y la lógica de control en tres componentes distintos. El patrón de llamada y retorno MVC se ve frecuentemente en aplicaciones Web, donde la vista es la página HTML y el código que provee de datos dinámicos a la página. El modelo es el Sistema de Gestión de Base de Datos y la lógica de negocio, y el controlador es el responsable de recibir los eventos de entrada desde la vista [3]. Cada vista tiene un objeto controlador asociado que maneja las entradas del usuario y la interacción de los dispositivos. Por lo tanto, un modelo que representa datos numéricos puede tener una vista que represente los datos como un histograma y una vista que presente los datos como una tabla. El modelo se puede editar cambiando los valores en la tabla o alargando o acortando las barras en el histograma. En la figura 2 se puede observar un ejemplo de la arquitectura MVC [3]. http://es.sandramarramirez.wikia.com/ http://es.wikipedia.org/wiki/Arquitectura_de_software http://es.wikipedia.org/wiki/Datos http://es.wikipedia.org/wiki/Interfaz_de_usuario http://es.wikipedia.org/wiki/L%C3%B3gica_de_control http://es.wikipedia.org/wiki/Componentes http://es.wikipedia.org/wiki/Web http://es.wikipedia.org/wiki/HTML http://es.wikipedia.org/wiki/Sistema_de_gesti%C3%B3n_de_base_de_datos http://es.wikipedia.org/wiki/L%C3%B3gica_de_negocio Capitulo II. Marco Conceptual Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 10 Figura 2. Arquitectura MVC. El modelo es el responsable de:  Acceder a la capa de almacenamiento de datos. Lo ideal es que el modelo sea independiente del sistema de almacenamiento.  Define las reglas de negocio (la funcionalidad del sistema). Un ejemplo de regla puede ser: "Si la mercancía pedida no está en el almacén, consultar el tiempo de entrega estándar del proveedor".  Lleva un registro de las vistas y controladores del sistema.  Si estamos ante un modelo activo, notificará a las vistas los cambios que en los datos pueda producir un agente externo (por ejemplo, un fichero batch que actualiza los datos, un temporizador que desencadena una inserción, etc.). Capitulo II. Marco Conceptual Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 11 El controlador es responsable de:  Recibir los eventos de entrada (un clic, un cambio en un campo de texto, etc.).  Contener reglas de gestión de eventos, del tipo "SI Evento Z, entonces Acción W". Estas acciones pueden suponer peticiones al modelo o a las vistas. Una de estas peticiones a las vistas puede ser una llamada al método "Actualizar()". Una petición al modelo puede ser "Obtener_tiempo_de_entrega( nueva_orden_de_venta )". Las vistas son responsables de:  Recibir datos del modelo y mostrarlos al usuario.  Mantener un registro de su controlador asociado (normalmente porque además lo instancia).  Pueden dar el servicio de "Actualización()", para que sea invocado por el controlador o por el modelo (cuando es un modelo activo que informa de los cambios en los datos producidos por otros agentes). 2.2 Herramientas tecnológicas para el desarrollo de aplicaciones Web. En un principio la Web era sencillamente una colección de páginas estáticas, documentos, etc., para su consulta o descarga. El paso inmediatamente posterior en su evolución fue la inclusión de un método para elaborar páginas dinámicas que permitieran que lo mostrado tuviese carácter dinámico (es decir, generado a partir de los datos de la petición). Este método fue conocido como CGI (Common Gateway Interface, Interfaz Común de Entrada) y definía un mecanismo mediante el que se podía pasar información entre el servidor y ciertos programas externos. Los CGIs siguen utilizándose ampliamente; la mayoría de los servidores Web permiten su uso debido a su sencillez. Además, dan total libertad para elegir el lenguaje de programación que se desea emplear [4]. Capitulo II. Marco Conceptual Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 12 Con el paso del tiempo, el mundo Web ha venido evolucionando, con el desarrollo de nuevas tecnologías y lenguajes (tanto del lado del Servidor como del lado del Cliente) los cuales permiten que la interacción entre el usuario y la información sea un poco más dinámica, intuitiva y fácil de manejar [4]. Una de las potencialidades desarrolladas fue la de Sun Microsystems con Java, al permitir incrustar código Java dentro de páginas HTML que el servidor convierte en programas ejecutables JSP (Java Server Pages o “Paginas de Servidor Java”), y un método de programación que se ejecuta del lado del servidor denominado Java Servlet [4]. Una de las Tecnologías más utilizadas actualmente para el desarrollo de aplicaciones Web es el lenguaje PHP. PHP (Hypertext Preprocesor o Pre- procesador de Hipertexto) es un lenguaje interpretado que permite la inclusión de lenguaje HTML dentro de los mismos, con una sintaxis derivada de C y Perl. La ventaja de ser sencillo y muy potente ha contribuido a convertir al lenguaje PHP en una herramienta muy útil para el desarrollo de aplicaciones Web [4]. 2.2.1 Tecnologías del lado del Cliente. 2.2.1.1 Lenguaje de marcado de hipertexto (HTML o Hiper Text Markup Language). HTML o Lenguaje de Marcado de hipertexto, es un estándar reconocido en todo el mundo y cuyas normas define el World Wide Web Consortium, más conocido como W3C. Como se trata de un estándar reconocido por todas las empresas relacionadas con el mundo de Internet, una misma página HTML se visualiza de forma muy similar en cualquier navegador de cualquier sistema operativo [5]. El origen de HTML se remonta a 1980, cuando el físico Tim Berners-Lee, trabajador del CERN (Organización Europea para la Investigación Nuclear) propuso un nuevo sistema de "hipertexto" para compartir documentos [5]. Capitulo II. Marco Conceptual Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 13 Los sistemas de "hipertexto" habían sido desarrollados años antes. En el ámbito de la informática, el "hipertexto" permitía que los usuarios accedieran a la información relacionada con los documentos electrónicos que estaban visualizando. De cierta manera, los primitivos sistemas de "hipertexto" podrían compararse a los enlaces de las páginas Web actuales [5]. El propio W3C 1 define el lenguaje HTML como "un lenguaje reconocido universalmente y que permite publicar información de forma global". Desde su creación, el lenguaje HTML ha pasado de ser un lenguaje utilizado exclusivamente para crear documentos electrónicos a ser un lenguaje que se utiliza en muchas aplicaciones electrónicas como buscadores, tiendas online y banca electrónica. El lenguaje HTML permite a los desarrolladores:  Publicar en línea documentos con cabeceras, textos, tablas, listas, fotos, etc.  Obtener información vía enlaces de Hipertexto (links) con solo un clic.  Construir formularios que pueden desencadenar transacciones en servicios remotos, para la búsqueda de información, hacer reservaciones, ordenar productos, etc.  Se pueden incluir hojas de estilo, clips de video, sonido, y otras aplicaciones directamente en los documentos [5]. 2.2.1.2 Cascading Style Spreadsheet (Hojas de Estilo en Cascada). CSS es un lenguaje de hojas de estilo usado para describir los esquemas de presentación de un documento escrito en un lenguaje de Marcado. Es muy utilizado para las aplicaciones desarrolladas en HTML o XHTML para definir 1 Conocido como Word Wide Web Consortium o Consorcio de la Red de Área Amplia, es un consorcio internacional que produce recomendaciones para la Red de Área Amplia o World Wide Web. Capitulo II. Marco Conceptual Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 14 estilos, aunque también puede ser aplicado para cualquier tipo de documento XML [6]. Las CSS son diseñadas para permitir la separación de lo que es el contenido del documento con la presentación del mismo, como son los paneles, colores y fuentes. Esta separación puede mejorar el acceso al contenido, proveer mayor flexibilidad y control en la especificación de las características de la presentación, permitiendo que múltiples documentos compartan el mismo formato, reduciendo la complejidad y repetición del contenido estructural. CSS puede también permitir que un mismo documento pueda ser presentado en diferentes estilos para diferentes métodos de presentación, sean en pantalla, en impresión, etc [6]. CSS especifica un esquema de prioridad para determinar cual regla de estilo aplica cuando múltiples definiciones de estilos aplican a un mismo elemento. Por esto es llamado cascada, ya que las prioridades son calculadas y asignadas en reglas para que el resultado sea predecible [6]. Las ventajas a la hora de usar CSS son muy variadas, algunas de ellas son:  Control centralizado de la presentación de un documento Web completo con lo que se agiliza de forma considerable la actualización del mismo.  Los navegadores permiten a los usuarios especificar su propia hoja de estilo local, que será aplicada a un documento Web, con lo que aumenta considerablemente la accesibilidad.  Una página puede disponer de diferentes hojas de estilo según el dispositivo que la muestre o, incluso, a elección del usuario.  El documento HTML en sí mismo es más claro de entender y se consigue reducir considerablemente su tamaño. Capitulo II. Marco Conceptual Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 15 2.2.1.3 JavaScript. JavaScript es un lenguaje interpretado orientado a las páginas web, con una sintaxis semejante a la del lenguaje Java [7]. El lenguaje fue inventado por Brendan Eich en la empresa Netscape Communications, que es la que fabricó los primeros navegadores de Internet comerciales. Se utiliza en páginas Web HTML, para realizar tareas y operaciones en el marco de la aplicación cliente (client-side) [7]. JavaScript se considera un lenguaje simple y altamente dinámico. Decir que un lenguaje de programación es dinámico no quiere decir nada desde un punto de vista formal, pero se acepta en algunos círculos que esto se refiere a que es un lenguaje de muy alto nivel, donde muchas operaciones que comúnmente suceden en tiempo de compilación, se realizan en tiempo de ejecución, así como extender los objetos y sus definiciones mientras se ejecuta la aplicación [7]. Algunas de las ventajas importantes del uso de JavaScript son:  El lenguaje de scripting es seguro y fiable porque está en claro que hay que interpretarlo, por lo que puede ser filtrado; para el mismo JavaScript, la seguridad es casi total.  Los scripts tienen capacidad limitada, por razones de seguridad, por lo cual no es posible hacer todo con JavaScript, sino que es necesario usarlo conjuntamente con otros lenguajes evolucionados, posiblemente más seguros.  El código JavaScript se ejecuta en el cliente por lo que el servidor no es solicitado más de lo debido; un script ejecutado en el servidor, sin embargo, sometería al mismo a dura prueba y los servidores de capacidades más limitadas podrían resentir de una continua solicitud por un mayor número de usuarios. Capitulo II. Marco Conceptual Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 16 2.2.1.4 Ajax. AJAX (acrónimo para Asynchronous JavaScript And XML. JavaScript y XML Asíncronos) es un enfoque de desarrollo basado en un conjunto de tecnologías ya existentes, agrupadas para presentar información e interactuar dinámicamente, de manera asíncrona, con un servidor Web [8]. Entre las tecnologías que agrupa AJAX se destacan las siguientes como las principales: HTML y CSS: para la presentación, estructuración y formato del contenido. DOM (Document Object Model): Con el modelo de objetos del documento se logra obtener la estructura del documento HTML. Utilizando esta estructura se pueden agregar, eliminar y modificar, de manera dinámica, elementos de la página mediante el uso de la tecnología JavaScript. XML: Para el intercambio de datos entre el cliente (navegador Web) y el servidor. JavaScript: Mediante esta tecnología del lado del cliente se realizan las peticiones de manera asíncrona y, junto con el manejo del DOM, se logra la interacción dinámica con el usuario. Con AJAX se busca entonces proveer de una mayor riqueza de interacción entre el usuario y la aplicación en comparación con la que proveen las aplicaciones Web tradicionales. Este enfoque cambia el esquema tradicional de interacción con las aplicaciones Web, procurando una mayor velocidad de respuesta hacia el usuario, permitiéndole mantener la interacción con la aplicación inclusive durante tiempos de procesamiento, con elementos de interfaz más dinámicos e interactivos [8]. El enfoque AJAX permite el envío de peticiones al servidor en segundo plano, es decir, sin interrumpir la interacción entre el usuario y la aplicación. Esto disminuye el típico tiempo de espera entre peticiones y permite mantener la Capitulo II. Marco Conceptual Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 17 continuidad en la interacción entre el usuario y la aplicación, lo que le permite al usuario realizar acciones como la modificación de campos de un formulario, despliegue de menús, visualización de datos, entre otros [8]. Luego de enviar una petición y obtener la información requerida (respuesta) del servidor, las aplicaciones AJAX tienen la capacidad de modificar la vista (estructura de la página) dinámicamente sin necesidad de solicitar una página distinta. Esta información obtenida del servidor está constituida típicamente de datos en formato XML o texto plano, no es necesario recibir en cada petición un documento HTML entero, ya que la aplicación AJAX utiliza estos datos para modificar la página sin necesidad de cambiarla por una nueva [8]. 2.2.1.5 JQuery JQuery es una biblioteca o framework de JavaScript que permite simplificar la manera de interactuar con los documentos HTML, manipular el árbol DOM, manejar eventos, desarrollar animaciones y agregar interacción con la técnica AJAX a páginas web [9]. JQuery, al igual que otras bibliotecas, ofrece una serie de funcionalidades basadas en JavaScript que de otra manera requerían de mucho más código, es decir, con las funciones propias de esta biblioteca se logran grandes resultados en menos tiempo y espacio [9]. Las principales características de JQuery son:  Se pueden seleccionar elementos del árbol DOM mediante funciones.  Modificaciones transversales del árbol DOM.  Manipulación de Hojas de Estilo.  Se pueden dar efectos y animaciones a los elementos que conforman el documento.  Es extensible. Capitulo II. Marco Conceptual Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 18 2.2.2 Tecnologías del Lado del Servidor 2.2.2.1 Apache Apache es un servidor Web HTTP de código abierto que garantiza la disponibilidad de la mayoría de los sitios web activos actualmente. El servidor está diseñado para operar sobre las más populares plataformas y sistemas operativos como Linux, Unix, Windows; Solaris, Novell, FreeBSD, Mac OS, OS/2, etc [10]. Existen dos versiones populares acerca del origen del nombre del proyecto. La primera y más aceptada, que el nombre del servidor fue escogido por el nombre de la tribu Nativa Americana APACHE, muy conocidos por su resistencia y habilidades militares. La segunda versión da el nombre por el grupo de parches agregados al núcleo del servidor HTTP NCSA 1.3, lo cual hace al mismo un “servidor parcheado” (en ingles “a patchy server”) [10]. El servidor fue desarrollado por la comunidad de fuente abierta Apache Software Foundation, en donde sus miembros están constantemente añadiendo funcionalidades, con el único propósito de proveer una plataforma segura y extensible que mejore el servicio HTTP de la mano de los estándares HTTP actuales [10]. Las ventajas más conocidas del Servidor Apache son:  Modular  De código abierto  Multi-plataforma  Extensible 2.2.2.2 PHP PHP es un lenguaje de programación interpretado de código abierto y alto nivel usado generalmente para la creación de contenido dinámico para sitios Capitulo II. Marco Conceptual Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 19 Web, el cual puede ser embebido dentro de páginas HTML, es interpretado del lado del servidor. PHP es el acrónimo recursivo de "PHP: Hypertext Preprocessor", (inicialmente se llamó PHP Tools o Personal Home Page Tools) últimamente también es usado para la creación de otro tipo de programas incluyendo aplicaciones con interfaz gráfica [11]. La facilidad de uso que caracteriza a PHP en conjunción con la similitud que tiene con lenguajes más comunes de programación estructurada, como C, Java y Perl, permiten a la mayoría de los programadores experimentados crear aplicaciones complejas con una curva de aprendizaje bastante suave. También les permite involucrarse con aplicaciones de contenido dinámico sin tener que aprender todo un nuevo grupo de funciones y prácticas [11]. PHP tiene la capacidad de ser ejecutado en los principales sistemas operativos del mercado, incluyendo Linux, muchas variantes de Unix (incluyendo HP-UX, Solaris y OpenBSD), Microsoft Windows, Mac OS X, RISC OS, entre otros. PHP soporta la mayoría de servidores Web de hoy en día, incluyendo Apache, Microsoft Internet Information Server (IIS), Personal Web Server, Netscape e iPlanet, Oreilly Website Pro Server, Caudium, Xitami, OmniHTTPd y muchos otros. PHP tiene módulos disponibles para la mayoría de los servidores, para aquellos otros que soporten el estándar CGI, PHP puede ser usado como un procesador CGI [11]. Con PHP se puede hacer cualquier cosa que se pueda hacer con un script CGI, como procesar la información proveniente de formularios, generar páginas con contenidos dinámicos, o enviar y recibir cookies, entre otras cosas [11]. 2.2.3 Tecnologías del lado del Servidor de Bases de Datos 2.2.3.1 MySQL MySQL es un servidor de Base de Datos SQL (Structured Query Language o Lenguaje Estructurado de Consultas) rápido, multi-hilo, multi-usuario y robusto. El servidor MySQL está diseñado para entornos de producción críticos, con alta Capitulo II. Marco Conceptual Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 20 carga de trabajo así como para integrarse en software para ser distribuido. MySQL es una marca registrada de MySQL AB [12]. El software MySQL tiene una doble licencia. Los usuarios pueden elegir entre usar el software MySQL como un producto Open Source bajo los términos de la licencia GNU General Public License o pueden adquirir una licencia comercial estándar de MySQL AB [12]. La siguiente lista describe algunas de las características más importantes del software de base de datos MySQL:  Portabilidad.  Desarrollado en C y en C++.  Probado con un amplio rango de compiladores diferentes.  Funciona en diferentes plataformas (AIX, FreeBSD, HP-UX , GNU/Linux, Mac OS X, Novell Netware , OpenBSD, OS/2, Solaris, Windows).  Usa GNU Automake, Autoconf, y Libtool para portabilidad.  APIs disponibles para C, C++, Eiffel, Java, Perl, PHP, Python, Ruby, y Tcl.  Uso completo de multi-hilos mediante hilos del kernel. Pueden usarse fácilmente múltiple CPUs si están disponibles.  Proporciona sistemas de almacenamientos transaccionales y no transaccionales.  Usa tablas en disco B-tree (MyISAM 2 ) muy rápidas con compresión de índice.  Relativamente sencillo de añadir otro sistema de almacenamiento. Esto es útil si desea añadir una interfaz SQL para una base de datos propia.  Un sistema de reserva de memoria muy rápido basado en hilos. 2 MyISAM es una tecnología usada para el almacenamiento de datos, la cual permite un procesamiento rápido de consultas Capitulo II. Marco Conceptual Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 21  Joins muy rápidos usando un multi-join de un paso optimizado.  Tablas hash en memoria, que son usadas como tablas temporales.  Las funciones SQL están implementadas usando una librería altamente optimizada y deben ser tan rápidas como sea posible. Normalmente no hay reserva de memoria tras toda la inicialización para consultas.  El servidor está disponible como un programa separado para usar en un entorno de red cliente/servidor. También está disponible como biblioteca y puede ser incrustado en aplicaciones autónomas. Dichas aplicaciones pueden usarse por sí mismas o en entornos donde no hay red disponible. 2.3 Herramientas para el Monitoreo y Administración de Redes 2.3.1 NMAP NMAP (Network Mapper o Mapeador de Redes) es una herramienta de código abierto para exploración de red y auditoría de seguridad. Se diseñó para analizar rápidamente grandes redes, aunque funciona muy bien contra equipos individuales. NMAP utiliza paquetes IP "crudos" en formatos originales para determinar qué equipos se encuentran disponibles en una red, qué servicios (nombre y versión de la aplicación) ofrecen, qué sistemas operativos (y sus versiones) ejecutan, qué tipo de filtros de paquetes o cortafuegos se están utilizando así como docenas de otras características. Aunque generalmente se utiliza NMAP en auditorías de seguridad, muchos administradores de redes y sistemas lo encuentran útil para realizar tareas rutinarias, como puede ser el inventariado de la red, la planificación de actualización de servicios y la monitorización del tiempo que los equipos o servicios se mantiene activos [13]. La salida de NMAP es un listado de objetivos analizados, con información adicional para cada uno dependiente de las opciones utilizadas. La información primordial es la “tabla de puertos interesantes”. Dicha tabla lista el número de puerto y protocolo, el nombre más común del servicio, y su estado. El estado Capitulo II. Marco Conceptual Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 22 puede ser open (abierto), filtered (filtrado), closed (cerrado), o unfiltered (no filtrado) [13]. Abierto significa que la aplicación en la máquina destino se encuentra esperando conexiones o paquetes en ese puerto [13]. Filtrado indica que un cortafuego, filtro, u otro obstáculo en la red está bloqueando el acceso a ese puerto, por lo que NMAP no puede saber si se encuentra abierto o cerrado [13]. Los puertos cerrados no tienen ninguna aplicación escuchando en los mismos, aunque podrían abrirse en cualquier momento. Los clasificados como no filtrados son aquellos que responden a los sondeos de NMAP, pero para los que NMAP no puede determinar si se encuentran abiertos o cerrados [13]. NMAP informa de las combinaciones de estado open|filtered y closed|filtered cuando no puede determinar en cuál de los dos estados está un puerto. La tabla de puertos también puede incluir detalles de la versión de la aplicación cuando se ha solicitado detección de versiones. NMAP ofrece información de los protocolos IP soportados, en vez de puertos abiertos [13]. Además de la tabla de puertos interesantes, NMAP puede dar información adicional sobre los objetivos, incluyendo el nombre de DNS según la resolución inversa de la IP, un listado de sistemas operativos posibles, los tipos de dispositivo, y direcciones MAC [13]. 2.3.2 SNMP (Simple Network Management Protocol o Protocolo Simple de Gestión de Redes). El protocolo de administración SNMP es un protocolo a nivel de capa de aplicación que facilita el intercambio y la administración entre dispositivos de red. Es parte de la suite del Protocolo de Control de Transmisión/Protocolo de Internet (TCP/IP). SNMP permite a los administradores de red gestionar el Capitulo II. Marco Conceptual Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 23 funcionamiento de la red, encontrar y resolver problemas de red, así como planificar la expansión de la misma [14]. Existen tres versiones del protocolo: SNMP version1 (SNMPv1), SNMP versión 2 (SNMPv2) y SNMP versión 3 (SNMPv3). Estas versiones poseen un conjunto de características en común, pero SNMPv2 ofrece mejoras, como operaciones adicionales del protocolo y SNMPv3 introduce el modelo de seguridad basado en el usuario (User - Based Security Model) para mensajes de seguridad y el modelo de control de acceso basado en la vista (View - Based Access Control Model) para el control de acceso [14]. Una red administrada por SNMP consiste en tres componentes claves: dispositivos administrados, agentes y sistemas de administración de red (Network Management System) como se puede observar en la figura 3 [14]. Figura 3. Red Administrada SNMP Capitulo II. Marco Conceptual Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 24  Un dispositivo administrado es un nodo de red que contiene un agente SNMP y este reside en una red administrada. Los dispositivos administrados almacenan información de administración, la cual es utilizada por los sistemas de administración de la red usando SNMP. Los dispositivos administrados, algunas veces hacen llamadas a elementos de la red (routers, servidores de acceso, switches, puentes, hubs, hosts o impresoras).  Un agente SNMP es un software de administración de red que reside en un dispositivo administrado. Un agente SNMP posee un conocimiento local de la información de administración y transforma esa información en una forma compatible con el protocolo SNMP.  Un sistema de administración de red ejecuta aplicaciones que controlan y monitorean a los dispositivos administrados. Los sistemas de administración de red proveen el conjunto de recursos de procesamiento y memoria requeridos para la administración de la red. Uno o más de estos sistemas deben existir sobre cualquier red administrada. Capítulo IV. Marco Metodológico Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 25 Capítulo III. Marco Metodológico En el siguiente capítulo se explicara la Metodología usada para el Desarrollo de la Aplicación. Se definirá la metodología ADHOC, el cual es el proceso usado para el desarrollo e implementación de la solución al problema planteado. Se expondrán las fases que forman parte del modelo de desarrollo. 3.1. Metodología de Desarrollo de Software 3.1.1 Metodología ADHOC La metodología ADHOC permite un desarrollo y construcción rápido de la solución planteada. La metodología permite realizar un desarrollo analizando los detalles y necesidades del proyecto para determinar la mejor solución a nivel de arquitectura y tecnología:  Fase Previa: En esta fase se realiza el análisis de los objetivos planteados y los requerimientos necesarios para cubrir dichos objetivos.  Fase de Desarrollo: Esta fase involucra el diseño y construcción de los requerimientos. Esta fase es iterativa, lo que permite que el uso de este modelo de desarrollo sea incremental.  Fase de Pruebas: En esta fase se realizaron todas las pruebas referentes al desarrollo de cada uno de los requerimientos en las iteraciones del taller de diseño. Capítulo IV. Marco Metodológico Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 26 Figura 4. Metodología ADHOC 3.1.1.2 Ventajas de ADHOC.  Se determina cual es la mejor solución a nivel de arquitectura y tecnología.  Iteración permanente con el cliente dentro del desarrollo de la aplicación.  Se garantiza la funcionalidad de la aplicación en distintos escenarios de pruebas. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 27 Capítulo IV. Marco Aplicativo. En este capítulo se explica de manera detallada como se realizo el desarrollo del proyecto. Las fases de la metodología de Desarrollo Rápido de Aplicaciones son definidas y explicadas detalladamente, la Fase de Planeación de Requerimientos, cada una de las Iteraciones del Taller de Diseño así como las pruebas de Implementación del sistema. 4.1 Proyecto. El proyecto consiste en el desarrollo e implementación de una aplicación Web centralizada para la administración y monitoreo de los Punto de acceso de la Facultad de Ciencias de la Universidad Central de Venezuela. Dicha aplicación está desarrollada bajo el lenguaje PHP sobre el framework de desarrollo MVC. Además, se utilizo MySQL como Sistema Manejador de Bases de Datos gracias a la rapidez y sencillo de su funcionamiento para el almacenamiento de los datos y metadatos de dicha aplicación. Para la realización de este proyecto se realizo una adaptación del método de desarrollo ADHOC, por lo que se dividió en tres fases: Planeación de requerimientos, Taller de Diseño (que constituye el diseño y la construcción de la aplicación), fase de implementación y pruebas de funcionamiento. En la primera fase se desarrollaron los Diagramas de Casos de Uso de los requerimientos planteados por los usuarios pertenecientes al Centro de Computación de la Facultad de Ciencias de la Universidad Central de Venezuela, que son los encargados de realizar los procesos de monitoreo y gestión de dichos Puntos de Acceso. En la segunda fase, se realizó la construcción de cada uno de los procesos a nivel de código, realizando iteraciones dependiendo de cada requerimiento en específico, creando así un desarrollo rápido de la aplicación. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 28 En la tercera fase, se realizo un grupo de pruebas para determinar la eficiencia y el feedback con el usuario final de la aplicación, a fin de conocer si la misma cumple con el funcionamiento esperado. 4.2 Fases del Proyecto. 4.2.1 Fase de Planeación de Requerimientos. En esta fase se muestran el modelo de datos definido en base a los procesos que intervienen, una breve descripción de los mismos, algunos problemas que se encontraron y el análisis de la solución hallada mediante el uso de Diagramas de Casos de Uso. I. Modelo de datos El modelo de datos está definido por medio del modelo entidad-relación presente en la figura 5. Allí se pueden observar las estructuras definidas para el manejo de los datos que maneja la aplicación Web. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 29 Figura 5. Modelo Entidad-Relación del modelo de datos de la aplicación. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 30 II. Autenticación (Login). Usuario involucrado: Administrador del Sistema. Este proceso es el punto de partida para el uso del sistema. Todo usuario que necesite realizar un monitoreo o en su defecto la administración de algún dispositivo mediante la aplicación debe estar registrado como un usuario en la misma. Este usuario será el usado para poder ingresar a la misma y poder tomar parte en todos los procesos desarrollados en la aplicación. Cabe destacar que cada usuario en la aplicación posee una información personal asociada, así como también un rol, el cual le permitirá realizar ciertas funciones dentro de la aplicación. Para llevar a cabo dicho requerimiento se planteo una solución que está representada en la Figura 6. Figura 6. Caso de Uso Autenticar Usuario (Login) Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 31 Tabla 1. Descripción del Caso de Uso Autenticar Usuario. Nombre: Autenticar Usuario Actor Administrador del Sistema Descripción Permite realizar la autenticación del usuario. El usuario introduce el Nombre de usuario y la contraseña para acceder al sistema Pre-condición No aplica. Post-condición En el momento de que se realiza la autenticación se verifica si el usuario es válido. Nombre: Verificar Usuario/Contraseña Actor Administrador del Sistema. Descripción Verifica si la información suministrada por el usuario es válida. Pre-condición No aplica. Post-condición Si el usuario es válido se inicia la sesión, en caso contrario se informa al usuario que la información suministrada no es válida. Es importante aclarar que para poder realizar una autenticación exitosa en la aplicación, el usuario debe estar previamente registrado en la misma. Este registro lo realizan los administradores del sistema, los cuales tienen privilegios para la creación de nuevos usuarios. III. Recuperar Contraseña. Usuario involucrado: Administrador del Sistema. Este proceso que se describe en la figura 7 se realiza cuando el usuario desea recuperar la contraseña con la que accede al sistema. Para recuperar la contraseña, se verifica si el correo suministrado por el usuario que hace la petición coincide con los que se encuentran registrados en la base de datos del sistema, para así entonces crear una nueva clave temporal y enviar la misma al correo del usuario. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 32 Figura 7. Casos de Uso Recuperar Contraseña. En la tabla 2 se puede observar la descripción del Caso de Uso Recuperar Contraseña: Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 33 Tabla 2. Descripción de Caso de Uso Recuperar Contraseña. Nombre: Ingresar correo electrónico Actor Administrador del Sistema Descripción Permite que un usuario ingrese su cuenta de correo electrónico asociada a su usuario para realizar la recuperación de la contraseña. Pre-condición No aplica. Post-condición No aplica. Nombre: Validar correo electrónico Actor Administrador del Sistema. Descripción Verifica que el correo electrónico Suministrado por el usuario se encuentre en el sistema. Pre-condición No aplica. Post-condición Si el correo electrónico es Valido se realiza el proceso de creación de clave temporal, en caso contrario, se informa al usuario que el correo electrónico suministrado no es válido. Nombre: Crear contraseña temporal Actor Administrador del Sistema. Descripción Se crea una contraseña temporal para el usuario asociado al correo electrónico suministrado. Pre-condición La cuenta de correo suministrada debe estar asociada a un usuario. Post-condición No aplica. Nombre: Enviar Correo electrónico con clave temporal. Actor Administrador del Sistema. Descripción Se envía al usuario un correo electrónico con la nueva clave temporal. Pre-condición No aplica. Post-condición No aplica. IV. Cambiar Contraseña. Usuarios involucrados: Administrador de Sistema. Este proceso, el cual describe la figura 8, permite a un usuario registrado en el sistema poder cambiar su contraseña. Para poder realizar el cambio de contraseña se requiere colocar la contraseña anterior como requisito para realizar un cambio efectivo. Si esto se cumple se realiza el cambio satisfactorio de la contraseña de usuario y dicha información es registrada. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 34 Figura 8. Caso de Uso Cambiar Contraseña. La descripción de los pasos que se realizan en este proceso se puede observar en la tabla 3: Tabla 3. Descripción del Caso de Uso Cambiar Contraseña. Nombre: Ingresar información solicitada Actor Administrador del Sistema Descripción Permite ingresar la contraseña actual y la nueva contraseña para realizar el cambio Pre-condición No aplica. Post-condición No aplica. Nombre: Validar información Actor Administrador del Sistema. Descripción Verifica que la información suministrada por el usuario es válida. Pre-condición No aplica. Post-condición Si la información es válida se procede a el cambio de contraseña Nombre: Cambiar contraseña Actor Administrador del Sistema. Descripción Se procede a modificar la contraseña asociada al usuario. Pre-condición No aplica. Post-condición No aplica. V. Administrar Usuario Usuarios Involucrados: Administrador del Sistema Por medio de este proceso el administrador del Sistema puede controlar todas las funciones básicas de los usuarios dentro de la aplicación. Por medio de estos procesos se podrá crear, modificar, visualizar y eliminar cualquier usuario en el Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 35 sistema. La siguiente figura (figura 9) y posteriormente la tabla (tabla 4) muestran el modelado y la descripción de los pasos que intervienen en este proceso: Figura 9. Caso de uso Administrar Usuario Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 36 Tabla 4. Descripción Caso de Uso Administrar Usuario Nombre: Agregar Usuario Actor Administrador del Sistema Descripción Permite al administrador agregar un usuario en el sistema Pre-condición Debe estar autenticado en la aplicación. Post-condición No aplica. Nombre: Ver información de Usuario Actor Administrador del Sistema. Descripción Permite al administrador ver toda la información del usuario. Pre-condición Debe estar autenticado en el sistema. Post-condición No aplica. Nombre: Editar Usuario Actor Administrador del Sistema. Descripción Permite al administrador poder modificar la información de un usuario existente en el sistema. Pre-condición Debe estar autenticado en el sistema. Post-condición No aplica. Nombre: Eliminar Usuario Actor Administrador del Sistema. Descripción Permite al administrador eliminar toda la información asociada a un usuario Pre-condición Debe estar autenticado en el sistema. VI. Agregar Usuario Usuarios involucrados: Administrador del Sistema Este proceso permite la creación de un usuario en el sistema. El administrador deberá suministrar cierta información de la persona a la cual se le asignara dicho usuario y se validará si el usuario que se desea registrar es válido (no está registrado ya en la aplicación por ejemplo). Si dicho usuario no está registrado entonces se procederá a la creación de la cuenta asociada al mismo. La siguiente figura (figura 10) se puede observar el Modelo de Caso de Uso de este proceso: Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 37 Figura 10. Caso de Uso Agregar Usuario La descripción de dicho Caso de Uso se puede observar en la tabla 5: Tabla 5. Descripción Caso de Uso Agregar Usuario. Nombre: Ingresar Datos Actor Administrador del Sistema Descripción Se presenta un formulario donde el administrador del sistema podrá introducir la información asociada a la cuenta de usuario a crear Pre-condición Debe estar autenticado en la aplicación. Post-condición Se valida la información suministrada. Nombre: Validar Datos de Usuario Actor Administrador del Sistema. Descripción El sistema valida la información suministrada por el administrador Pre-condición Debe estar autenticado en el sistema. Post-condición Si la información es válida se procede a crear la cuenta, de lo contrario se muestra al administrador que campos suministrados son inválidos. Nombre: Crear Usuario Actor Administrador del Sistema. Descripción Toda la información suministrada por el administrador es registrada y se crea una nueva cuenta de usuario. Pre-condición La información suministrada por el administrador debe ser valida Post-condición No aplica. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 38 VII. Información de Usuario. Usuarios involucrados: Administrador del Sistema. Este proceso permite al administrador visualizar la información de los usuarios registrados en la aplicación. Para ello, se tendrá una lista de usuarios registrados en la cual el administrador podrá seleccionar cualquier usuario de la lista para ver en detalle la información asociada al mismo. El caso de uso asociado a este proceso se puede observar en la figura 11. Figura 11. Caso de Uso Ver información de Usuario. La descripción de dicho Caso de Uso se observa en la siguiente tabla (tabla 6): Tabla 6. Descripción del Caso de Uso Ver información de Usuario. Nombre: Seleccionar Usuario Actor Administrador del Sistema Descripción Proceso donde el administrador del sistema selecciona un usuario de la lista para visualizar la información asociada al mismo Pre-condición Debe estar autenticado en la aplicación. Post-condición No aplica. Nombre: Validar Datos de Usuario Actor Administrador del Sistema. Descripción Al seleccionar el usuario, el sistema recopila la información asociada al usuario seleccionado y es mostrada al administrador Pre-condición Debe estar autenticado en el sistema. Post-condición No aplica. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 39 VIII. Editar Usuario Usuarios involucrados: Administrador del Sistema Este proceso, modelado en la figura 12, permite modificar la información asociada a un usuario si este desea actualizar la misma. El administrador podrá modificar tanto la información propia como la información asociada a otros usuarios. La descripción de dicho proceso se observa en la tabla 7. Figura 12. Caso de Uso Editar Usuario. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 40 Tabla 7. Descripción del Caso de Uso Editar Usuario. Nombre: Seleccionar Usuario Actor Administrador del Sistema Descripción Permite seleccionar un usuario para modificar su información Pre-condición Debe estar autenticado en la aplicación. Post-condición No aplica. Nombre: Modificar información de Usuario Actor Administrador del Sistema. Descripción Permite al administrador poder modificar la información del usuario seleccionado Pre-condición Se debe seleccionar un usuario en especifico Post-condición Se valida que la información suministrada es correcta. Nombre: Validar información de Usuario Actor Administrador del Sistema. Descripción Se valida que la información suministrada sea correcta Pre-condición Debe estar autenticado en el sistema. Post-condición No aplica. Nombre: Actualizar Usuario Actor Administrador del Sistema. Descripción Se registra la nueva información en la BD. Pre-condición Debe estar autenticado en el sistema. Post-condición No aplica. En la fase de construcción y diseño, que se abarcara en la sección de Taller de Diseño, se observa que la creación de un usuario así como la modificación de un usuario ya existente, son módulos íntimamente ligados, ya que tendrán la misma vista aunque para cada proceso se realizaran transacciones diferentes. IX. Eliminar Usuario. Usuarios involucrados: Administrador del Sistema Este proceso permite al administrador del sistema eliminar un usuario registrado en la aplicación. Para ello el usuario debe tener privilegios suficientes para poder eliminar usuarios dentro del sistema. La siguiente figura (figura 13) define el Modelo de Caso de Uso para este proceso: Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 41 Figura 13. Caso de Uso Eliminar Usuario. Cada proceso que interviene en este Caso de Uso se describe en la siguiente tabla (tabla 8): Tabla 8. Descripción del Caso de Uso Eliminar Usuario. Nombre: Seleccionar Usuario Actor Administrador del Sistema Descripción Permite seleccionar un usuario para su eliminación. Pre-condición Debe estar autenticado en la aplicación. Post-condición No aplica. Nombre: Eliminar información del Usuario Actor Administrador del Sistema. Descripción Permite al administrador eliminar toda la información asociada al usuario seleccionado Pre-condición Debe tener privilegios para eliminar usuarios Post-condición No aplica. X. Administrar Punto de acceso. Usuarios involucrados: Administrador del Sistema. Por medio de esta serie de funcionalidades el administrador del sistema puede controlar todo lo referente a los Puntos de Acceso que se gestionan mediante la aplicación. Por medio de los procesos asociados el administrador puede agregar dispositivos (de manera manual o por medio de una búsqueda en la red), Visualizar información acerca del dispositivo (estado, información de gestión, interfaz de configuración), editar la información específica de cada Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 42 dispositivo y eliminar dispositivos administrados. La figura 14 muestra el modelo de Casos de Uso de este proceso. Figura 14. Caso de Uso Administrar Punto de acceso. Dicho modelo se describe en la tabla 9: Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 43 Tabla 9. Descripción del Caso de Uso Administrar Punto de acceso Nombre: Agregar Punto de acceso Actor Administrador del Sistema Descripción Permite agregar un Punto de acceso para su gestión Pre-condición Debe estar autenticado en la aplicación. Post-condición No aplica. Nombre: Editar información del Punto de acceso Actor Administrador del Sistema. Descripción Permite al administrador modificar la información de un Punto de acceso administrado Pre-condición Debe estar autenticado en la aplicación. Post-condición No aplica. Nombre: Ver información del Punto de acceso Actor Administrador del Sistema. Descripción Permite al administrador visualizar la información de gestión y los datos asociados a las estadísticas de un Punto de acceso. Pre-condición Debe estar autenticado en la aplicación. Post-condición No aplica. Nombre: Eliminar Punto de acceso Actor Administrador del Sistema. Descripción Permite al administrador eliminar un Punto de acceso administrado Pre-condición Debe estar autenticado en la aplicación. Post-condición No aplica. XI. Agregar Punto de acceso. Este proceso (figura 15) permite al administrador del sistema poder agregar un dispositivo para su posterior administración. Este proceso tiene dos maneras de realizarse: el administrador puede agregar manualmente la información asociada al Punto de acceso en caso de que este en conocimiento de ello como también puede hacer un rastreo en la red, suministrando una IP perteneciente a la misma (esta IP puede ser una Ipv4, una Ipv6 o una Ipv4 con notación CIDR), y así poder seleccionar del rastreo el dispositivo de red a administrar. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 44 Figura 15. Caso de Uso Agregar Punto de acceso La descripción de los procesos que intervienen en el Caso de Uso son los siguientes: Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 45 Tabla 10. Descripción del Caso de Uso Agregar Punto de acceso Nombre: Ingresar información Manualmente Actor Administrador del Sistema Descripción Permite al administrador incluir un nuevo Punto de acceso para su administración de manera manual, ingresando la información necesaria Pre-condición Debe estar autenticado en la aplicación. Post-condición Se valida la información suministrada por el administrador del sistema Nombre: Validar información del Punto de acceso Actor Administrador del Sistema. Descripción Proceso en el cual se valida que la información suministrada por el administrador del sistema sea correcta y que esta ya no esté registrada con anterioridad Pre-condición Debe estar autenticado en la aplicación. Post-condición En caso de que la información no sea correcta (un campo invalido o la información suministrada ya está registrada) se envía un mensaje al administrador indicando el error presentado Nombre: Buscar Dispositivo Actor Administrador del Sistema. Descripción Permite al administrador del sistema poder realizar un rastreo en la red para la búsqueda de dispositivos. Pre-condición Debe estar autenticado en la aplicación. Post-condición No aplica. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 46 Tabla 11. Descripción del Caso de Uso Agregar Punto de acceso Nombre: Ingresar IP de Red Actor Administrador del Sistema. Descripción El administrador suministra a la aplicación un IP para su rastreo. Dicha IP puede ser incluida en forma de cuatro dígitos entre 0 y 255 separados por el símbolo “.” o en notación CIDR. Pre-condición Debe estar autenticado en la aplicación. Post-condición Se valida la dirección IP Nombre: Validar IP Actor Administrador del Sistema. Descripción Valida que la IP suministrada por el administrador sea valida Pre-condición Debe estar autenticado en la aplicación. Post-condición En caso de que la IP suministrada sea incorrecta se envía un mensaje indicándole al usuario que la IP no es válida. Nombre: Buscar Dispositivo en la Red Actor Administrador del Sistema. Descripción El sistema realizar el rastreo de la red definida por la IP suministrada por el administrador en búsqueda de dispositivos de Red Pre-condición La IP suministrada debe ser válida. Post-condición En caso de no encontrar dispositivos en la red se envía un mensaje indicando que no se encontraron dispositivos de red. En caso contrario se muestra una lista con los dispositivos encontrados. Nombre: Visualizar Dispositivos encontrados Actor Administrador del Sistema. Descripción Se muestra en el sistema la lista de dispositivos administrados en el rastreo Pre-condición Debe estar autenticado en la aplicación. Post-condición Si el usuario selecciona un dispositivo, la información asociada a este es incluida en el formulario para agregar. En caso contrario el usuario puede repetir el proceso de agregar un nuevo dispositivo. Nombre: Crear Punto de acceso Actor Administrador del Sistema. Descripción El administrador procede a agregar un nuevo Punto de acceso con la información suministrada ya sea por el proceso manual o por el rastreo de red. Pre-condición Debe estar autenticado en la aplicación. Post-condición No aplica. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 47 Es necesario acotar que cuando el administrador del sistema introduce una IP para el rastreo, dicho rastreo se realiza solo en esa dirección IP. Para realizar un rastreo de toda la red es necesario que el administrador suministre la IP en notación CIDR, la cual permite al sistema conocer la subred en la cual está dicha dirección y así realizar un rastreo completo de toda la subred asociada. XII. Editar información del Punto de acceso Este proceso permite al administrador tener la facilidad de modificar la información registrada del Punto de acceso en el caso de que ocurra algún cambio (ya sea que dicho punto cambie de subred por ejemplo). El modelo de Casos de Uso de este proceso se puede observar en la siguiente figura (figura 16): Figura 16. Caso de Uso Editar Información de Punto de acceso. La definición del anterior Caso de Uso es la siguiente: Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 48 Tabla 11. Descripción del Caso de Uso Editar información del Punto de acceso. Nombre: Seleccionar Punto de acceso Actor Administrador del Sistema Descripción El administrador del sistema selecciona el Punto de acceso que desea modificar Pre-condición Debe estar autenticado en la aplicación. Post-condición No aplica. Nombre: Modificar información del Punto de acceso Actor Administrador del Sistema. Descripción El administrador realiza los cambios necesario en la información asociada al Punto de acceso Pre-condición Debe estar autenticado en la aplicación. Post-condición No aplica. Nombre: Validar información del Punto de acceso Actor Administrador del Sistema. Descripción Se valida que la información asociada al Punto de acceso sea valida Pre-condición Debe estar autenticado en la aplicación. Post-condición En caso de no ser válida se envía un mensaje al usuario indicando que campo es invalido en el formulario Nombre: Actualizar Punto de acceso Actor Administrador del Sistema. Descripción El sistema registra y actualiza en la base de datos la información del Punto de acceso Pre-condición La información suministrada debe ser válida. Post-condición No aplica. XIII. Ver información del Punto de acceso. Este proceso, definido en la figura 17 permite al administrador poder visualizar toda la información asociada al Punto de acceso. Dicha información es, además de la registrada por el administrador, información para el monitoreo y la gestión del punto registrado. Por medio de diversos procesos asociados a la visualización de la información del Punto de acceso como lo son: ver la interfaz de configuración del Punto de acceso, ver las estadísticas del Punto de acceso y ver la gráfica generada en base a las estadísticas, el administrador puede monitorear y administrar cada punto individualmente, de una manera rápida. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 49 Figura 17. Caso de Uso Ver información del Punto de acceso. La descripción del Caso de Uso anterior se explica detalladamente en la tabla 12: Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 50 Tabla 12. Descripción Caso de Uso Ver información del Punto de acceso. Nombre: Ver información del Punto de acceso Actor Administrador del Sistema Descripción El administrador puede mediante este proceso visualizar toda la información asociada al Punto de acceso. Pre-condición Debe estar autenticado en la aplicación. Post-condición No aplica. Nombre: Verificar Estado del Punto de acceso Actor Administrador del Sistema. Descripción Este proceso realiza un envío de paquetes ICMP (ping) al Punto de acceso seleccionado para verificar si esta activo. Los resultados son mostrados al administrador. Pre-condición Debe estar autenticado en la aplicación. Post-condición No aplica. Nombre: Ver estadísticas del Punto de acceso Actor Administrador del Sistema. Descripción Por medio de este proceso el administrador puede visualizar las veces que se hizo el monitoreo del Punto de acceso para verificar su estado. Pre-condición Debe estar autenticado en la aplicación. Post-condición No aplica. Nombre: Ver graficas de desempeño del Punto de acceso Actor Administrador del Sistema. Descripción Por medio de este proceso el administrador puede visualizar una grafica de la media de tiempos de respuesta del Punto de acceso. Pre-condición Debe estar autenticado en la aplicación. Post-condición No aplica. Nombre: Ver interfaz de configuración del Punto de acceso Actor Administrador del Sistema. Descripción Este proceso permite al administrador poder acceder a la página de configuración del Punto de acceso, la cual permite la gestión del mismo. Pre-condición Debe estar autenticado en la aplicación. Post-condición No aplica. En el momento en el que el administrador entra a la interfaz de configuración del Punto de acceso, el mismo está en un sistema distinto a la aplicación, ya que cada Punto de acceso posee una interfaz distinta. Por esa razón se incluyen las interfaces de configuración como un subsistema de la aplicación a desarrollar. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 51 XIV. Eliminar Punto de acceso. Este proceso (figura 18) permite al administrador eliminar la información asociada al punto de acceso, incluyendo estadísticas recopiladas. Figura 18. Caso de Uso Eliminar Punto de acceso. La descripción asociada a este caso de uso es el siguiente: Tabla 13. Descripción del Caso de Uso Eliminar Punto de acceso. Nombre: Seleccionar Punto de acceso Actor Administrador del Sistema Descripción El administrador selecciona el Punto de acceso que desea eliminar Pre-condición Debe estar autenticado en la aplicación. Post-condición No aplica. Nombre: Eliminar información del Punto de acceso Actor Administrador del Sistema. Descripción El administrador elimina la información asociada al Punto de acceso seleccionado Pre-condición Se debe seleccionar un Punto de acceso. Post-condición No aplica. 4.2.2 Taller de Diseño. A continuación se muestra por cada problema planteado, el diseño y la construcción de cada requerimiento por cada iteración realizada en el proceso de desarrollo. Para dar solución al conjunto de requerimientos se desarrolló e implemento una interfaz propia para la aplicación y se desarrollaron una serie de métodos para adaptar el desarrollo a las necesidades del usuario. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 52 Requerimiento 1: Autenticación Iteración 1: Diseño Para este requerimiento se desarrollo una interfaz que permitiera al usuario poder ingresar el nombre de usuario y contraseña en un formulario, y que este diera acceso en caso de que el usuario este registrado. Figura 19. Pantalla de Autenticación del Sistema. Construcción El proceso de autenticación debe validar si la información suministrada por el usuario es de un usuario registrado en la aplicación. Para ello se creó una tabla llamada adm_tusuarios a nivel de BD donde se almacena la información referente a cada usuario registrado. En la figura 20 se puede observar la información almacenada en dicha tabla. Figura 20. Datos almacenados en adm_tusuarios para validar el proceso de autenticación. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 53 Se realizo un proceso de encriptación del password suministrado por el usuario y luego de ello se realiza una consulta SQL para determinar si la información suministrada por el usuario se encuentra en la tabla adm_tusuarios. Si dicha información se encuentra entonces el usuario esta registrado y tendrá acceso a la aplicación. Requerimiento 2: Creación de Usuarios. Iteración 2: Diseño. Para la creación del usuario, se desarrollo un formulario en el cual el administrador pudiera colocar la información asociada al usuario a crear, así como también la permisología que pudiera tener este sobre las funcionalidades del sistema. En la figura 21 se muestra la interfaz mediante la cual el administrador puede realizar la creación de usuarios: Figura 21. Pantalla que permite realizar la creación de un usuario Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 54 Construcción Para realizar la inserción se tuvo en cuenta diversos aspectos. El primero a considerar es el hecho de que el usuario puede tener ciertos privilegios, los cuales le permiten tener acceso a ciertas funcionalidades en la aplicación. Se definieron de esta manera 2 perfiles: Administrador de Usuarios: Este usuario tiene la capacidad de visualizar y gestionar toda la información referente a los usuarios. Administrador de AP: Este usuario tiene la capacidad de Visualizar y gestionar toda la información referente a los Punto de acceso registrados en la aplicación. Es preciso indicar que estos perfiles no son excluyentes, es decir, un usuario puede poseer un perfil de Administrador de Usuarios y Administrador de AP. En dicho caso, este usuario tendrá la capacidad de manejar y gestionar toda la información manejada por el sistema, así como todas las funcionalidades. Requerimiento 3: Visualización y Eliminación de Usuarios Iteración 3: Diseño. Para el requerimiento de Visualización del Usuario, se diseño una interfaz en la cual el administrador pudiera observar los usuarios en una lista. Dicha lista mostrara la información relevante referente al usuario. Al momento en el que el usuario seleccione un elemento de dicha lista, este podrá ver toda la información asociada al mismo, como se puede observar en la siguiente figura 22. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 55 Figura 22. Interfaz de Visualización de Usuario Para la eliminación del Usuario se tiene un icono de eliminación en cada elemento de la lista que permite realizar la eliminación del usuario. En la figura 23 se muestra el icono que permite realizar la eliminación de un usuario en específico. Figura 23. Botón de eliminación de Usuario en el Sistema. Requerimiento 4: Editar información del Usuario. Iteración 4 Diseño: Para la interfaz de edición, se rehúsa el diseño generado en la creación, ya que se toma como premisa, que para modificar la información de un usuario en específico, se debe mostrar toda la información asociada para que el usuario Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 56 modifique solo lo que él desea. En la figura 24 se observa la similitud de la interfaz en Editar Usuario con la interfaz Agregar Usuario. Figura 24. Interfaz para la Edición del Usuario. Requerimiento 5: Agregar Punto de Acceso Iteración 5: Diseño. Para este requerimiento se desarrollo una ventana en donde el administrador puede introducir información acerca del dispositivo que desea agregar (figura 25), dicha información es registrada directamente en la Base de Datos en una tabla llamada router. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 57 Figura 25. Ventana para agregar nuevo Punto de acceso Este método permite validar la información suministrada por el administrador. La validación se encarga de verificar que dicha información suministrada no tenga redundancia en la Base de Datos, es decir, valida que el usuario no introduzca varias veces la información asociada a un mismo AP. Requerimiento 6: Visualizar y Eliminar Punto de acceso Iteración 6: Diseño. Para Visualizar los Puntos de Acceso administrados por la aplicación se desarrollo una interfaz el cual muestra la información en una lista, donde cada elemento de la misma es un Punto de acceso administrado (figura 26). Al seleccionar un AP, la información asociada es mostrada en su totalidad, de esta manera el administrador puede visualizar toda la información referente al Punto de acceso seleccionado. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 58 Figura 26. Interfaz de Visualización de Punto de acceso. Para la eliminación del Punto de acceso seleccionado, se coloca en la lista de Punto de acceso un icono que representa la tarea de eliminación del mismo (figura 27). Figura 27. Botón para eliminar un Punto de acceso. Requerimiento 7: Editar Punto de acceso Iteración 6: Diseño. Para editar la información del Punto de acceso se coloca un icono de edición en la lista de Puntos de Acceso administrados (figura 28). El administrador solo Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 59 debe seleccionar el Punto de acceso que desea editar para que se muestre la ventana de edición del mismo. Figura 28. Botón “Editar Router”. Requerimiento 8: Opciones administrativas para los Puntos de Acceso Iteración 8: Diseño: Cuando el administrador de Red selecciona un Punto de Acceso de la tabla que lista todos los dispositivos registrados en la Base de Datos se muestra la información del Punto de Acceso y una serie de opciones administrativas que se muestran en la figura 29. Figura 29. Opciones de Administración. Cada una de las opciones pueden ser aplicadas en cualquier momento al Punto de Acceso, la primera opción verifica el estado del dispositivo y su tiempo de respuesta tal como se muestra en la figura 30. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 60 Figura 30. Comprobación del Estado del Punto de Acceso. La segunda opción muestra las estadísticas que ha arrojado el Punto de Acceso cada vez que se ha verificado su estado con la primera opción, la información es mostrada como aparece en la figura 31. Figura 31. Estadísticas del Punto de Acceso registradas en la BD. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 61 Con la tercera opción se puede administrar el Punto de Acceso utilizando la interfaz de configuración provista por el fabricante de forma centralizada, como se muestra en la figura 32. Figura 32. Pagina administrativa del Punto de Acceso. Con la cuarta y última opción se muestra a través de una grafica los picos de respuesta que ha tenido el router dentro de la red las veces que se ha verificado su estado con la opción numero 1, graficando el tiempo medio de respuesta, la hora y fecha en que se realizo la consulta, como se muestra en la figura 33, dicha grafica puede ser descargada en cualquier formato de imagen. Figura 33. Estadísticas del Punto de Acceso. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 62 Requerimiento 9: Escanear Red Iteración 9: Diseño: Para poder realizar un escaneo de la red, con la finalidad de visualizar los Punto de accesos que se encuentran en la misma, se diseño una interfaz (figura 34) donde el administrador pueda introducir una IP de la red que desea escanear en notación CIDR (Enrutamiento entre dominios sin Clases, representa la ultima mejora en el modo como se interpretan las direcciones IP) con la finalidad de determinar en qué subred se va a realizar el rastreo de Punto de acceso. Figura 34. Interfaz de Escanear Red. 4.3.3. Implementación. Para cada proceso desarrollado se muestran a continuación las pruebas realizadas para verificar que la aplicación mantiene un comportamiento correcto: Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 63 a) Agregar, editar y eliminar usuario: Agregar Usuario: Para realizar la prueba de esta funcionalidad se crearon 4 usuarios: josmaguirre, amorales, kendall y dvillavicencio. Estos usuarios corresponden al equipo de desarrollo así como el administrador del sistema. En la figura 35 se muestra la interfaz de Agregar Usuario al momento de realizar la prueba. Figura 35. Prueba de Agregar Usuario. Usuarios agregados: josmaguirre, amorales, kendall, dvillavicencio. Resultado de las pruebas: Exitoso. En la figura 36 se observan los usuarios registrados mediante la interfaz de visualización. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 64 Figura 36. Interfaz de visualización de Usuarios. Editar Usuarios: Para realizar esta prueba se definió realizar la edición de los usuarios josmaguirre y kendall, los cuales corresponden al equipo de desarrollo. Se modifico información como los Módulos que pueden utilizar así como cambio de clave (Figura 37). Figura 37. Prueba de Editar Usuario. Usuarios Editados: josmaguirre, kendall. Resultado de las Pruebas: Exitoso. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 65 En la siguiente figura se muestra la información modificada del usuario josmaguirre (Figura 38): Figura 38. Datos Modificados para el Usuario josmaguirre. Eliminar Usuario: Para realizar la prueba se definió la eliminación del usuario josmaguirre (figura 39). Esta prueba es para verificar que la información asociada al usuario es eliminada en su totalidad del sistema. Figura 39. Prueba de Eliminar Usuario. Usuario eliminado: josmaguirre. Resultado de la prueba: Exitoso. En la siguiente figura se muestra la tabla de visualización de usuarios, en la cual no se presenta el usuario eliminado (Figura 40): Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 66 Figura 40. Tabla de Visualización de Usuarios. A nivel de Base de Datos no se encuentra el usuario josmaguirre, como se muestra en la figura 41: Figura 41. Tabla adm_tusuarios con los usuarios registrados. b) Agregar, editar y eliminar Punto de acceso: Agregar Punto de acceso: Para realizar esta prueba se realizo la agregación de un Punto de acceso local de manera manual, según se muestra en la figura 42: Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 67 Figura 42. Prueba de Agregar Punto de acceso manual. Resultado de la Prueba: Exitoso. Luego de realizar la prueba se puede visualizar la información de dicho punto en la Interfaz de visualización de Punto de acceso (figura 43). Figura 43. Interfaz de Visualización de Punto de acceso. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 68 Editar Punto de acceso: Para esta prueba se realizo la edición manual del Punto de acceso creado “AP Prueba” como se muestra en la figura 44. Se modifico específicamente la MAC address del Punto de acceso. Figura 44. Interfaz de Modificación de Punto de acceso. Resultado de la prueba: Exitoso. Eliminar Punto de acceso: Para esta prueba se procede a la eliminación del Punto de acceso creado “AP Prueba” como se muestra en la figura 45. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 69 Figura 45. Ventana de Eliminación de Punto de acceso. Resultado de la Prueba: Exitoso Para verificar que se ha eliminado en su totalidad el Punto de acceso se observa en la figura 46 la tabla router con los router registrados luego de la eliminación. Figura 46. Tabla router con los Punto de acceso registrados. c) Escanear red: Para esta prueba se realizo un rastreo local de la red, especificando la IP del Punto de acceso que se desea encontrar, como se muestra en la figura 47. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 70 Figura 47. Rastreo de Punto de acceso. Al realizar el rastreo se tuvo como resultado e siguiente dispositivo (Figura 48): Figura 48. Resultado del Rastreo del Punto de acceso. Resultado de la Prueba: Exitoso. Capítulo IV. Marco Aplicativo Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 71 Luego de seleccionar el Punto de acceso encontrado se procede a agregarlo a la lista de Puntos de Acceso administrados. En la siguiente figura se muestra la ventana con la identificación del Punto de acceso agregado satisfactoriamente. Figura 49. Punto de acceso registrado luego del rastreo. Capitulo V. Escenarios de Prueba Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 72 Capítulo V. Escenarios de Prueba En este capítulo se presentan el conjunto de escenarios de prueba utilizados para comprobar el funcionamiento del sistema dentro de diferentes ambientes y topologías de red. Estas pruebas se enfocaron específicamente en el proceso de rastreo de dispositivos, el cual debe ser comprobado en las distintas subredes de la Facultad de Ciencias así como también en el Centro de Computación, el cual tendrá el servidor en el cual la aplicación va a estar en funcionamiento para la administración y monitoreo de los Puntos de Acceso. Escenario 1. Este escenario se realizo en las instalaciones del Laboratorio ICARO. La finalidad de la prueba era comprobar si el rastreo de dispositivos desarrollado era capaz de encontrar dispositivos inalámbricos que se encontraban en ese momento en la red. En el ambiente de la Prueba se tuvieron los siguientes dispositivos: - 1 dispositivo inalámbrico (Router D-LINK, IP 192.168.1.1). - Una computadora personal, la cual iba a actuar como servidor donde se encontraba contenida la aplicación. Dicha computadora recibe servicio de internet gracias al dispositivo D-LINK mencionado anteriormente. Finalidad de la Prueba La finalidad de la prueba era validar que la aplicación fuera capaz de encontrar dispositivos que se encontraran dentro de la misma red en la cual el servidor donde la aplicación estaba prestando servicio se encontraba. Inicio de la Prueba Para el inicio de la prueba se coloco en la opción “Escanear Red” en la página de administración de Puntos de Acceso, la IP del router. No se coloco ningún Capitulo V. Escenarios de Prueba Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 73 número en la notación CIDR, lo que le indica a la aplicación que el rastreo solo se realizara únicamente sobre la IP suministrada como se muestra en la figura 50. Figura 50. Inicio de la prueba, Escenario 1. En la figura 51 se puede observar que el resultado genera una entrada en el archivo XML en cual define que la IP 192.168.1.1 corresponde a un dispositivo D- Link DWL Series. El resultado mostrado a usuario es el siguiente: Figura 51. Resultado mostrado al usuario en el Escenario 1. De esta manera se pudo validar que el rastreo de dispositivos que se encuentran en la misma red se realizo con éxito. Escenario 2. Esta prueba tuvo como finalidad validar que el rastreo de dispositivos en la red se realizara de manera efectiva. Para ello se instalo la aplicación en una Capitulo V. Escenarios de Prueba Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 74 computadora personal ubicada en el Laboratorio de GROUPWARE, que se encuentra en las instalaciones de la Escuela de Computación de la Facultad de Ciencias. En el ambiente de la prueba se tuvieron los siguientes dispositivos: - 1 router inalámbrico (TP-LINK, IP 192.168.0.1). - Una computadora personal del laboratorio, el cual actuó como servidor donde la aplicación estaba contenida. Dicha computadora personal estaba dentro de la misma red en la cual se encontraba el router TP-LINK mencionado anteriormente. Finalidad de la Prueba La finalidad de la prueba era validar que el rastreo de dispositivos que se encuentran dentro de la misma red se realizara de manera satisfactoria. Inicio de la Prueba. Para el inicio de la prueba se coloco en la opción “Escanear Red” de la pagina de administración de punto de acceso, la IP del router. No se coloco ningún número en la notación CIDR, lo que le indica a la aplicación que el rastreo solo se realizara únicamente sobre la IP suministrada como se muestra en la figura 52. Figura 52. Inicio de la prueba en el Escenario 2. Capitulo V. Escenarios de Prueba Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 75 En la figura anterior se puede observar que el resultado genera una entrada en el archivo XML en cual define que la IP 192.168.1.1 corresponde a un dispositivo D-Link DWL Series. El resultado mostrado a usuario se visualiza en la figura 53: Figura 53. Resultado mostrado al usuario en el Escenario 2. Escenario 3. Esta prueba tuvo como finalidad validar que el rastreo de dispositivos en la red se realizara de manera efectiva. Para ello se instalo la aplicación en una computadora personal ubicada en el Centro de Computación, que se encuentra en las instalaciones de la Facultad de Ciencias. En el ambiente de la prueba se tuvieron los siguientes dispositivos: - 1 router inalámbrico (Cisco Linksys WRT54G, IP 192.168.0.2). - Una computadora personal del laboratorio, el cual actuó como servidor donde la aplicación estaba contenida. Dicha computadora personal estaba dentro de la misma red en la cual se encontraba el router TP-LINK mencionado anteriormente. Finalidad de la Prueba La finalidad de la prueba era validar que el rastreo de dispositivos que se encuentran dentro de la misma red se realizara de manera satisfactoria. Capitulo V. Escenarios de Prueba Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 76 Inicio de la Prueba. Para el inicio de la prueba se coloco en la opción “Escanear Red” de la pagina de administración de punto de acceso, la IP del router. No se coloco ningún número en la notación CIDR, lo que le indica a la aplicación que el rastreo solo se realizara únicamente sobre la IP suministrada como se muestra en la figura 54. Figura 54. Inicio de la prueba en el Escenario 3. En la figura anterior se puede observar que el resultado genera una entrada en el archivo XML en cual define que la IP 192.168.0.3 corresponde a un dispositivo Cisco Series. El resultado mostrado a usuario es el siguiente: Figura 55. Resultado mostrado al usuario en el Escenario 3. Capitulo V. Escenarios de Prueba Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 77 Escenario 4. Esta prueba tuvo como finalidad validar que el rastreo de dispositivos en la red se realizara de manera efectiva. Para ello se instalo la aplicación en una computadora personal ubicada en el Centro de Computación, que se encuentra en las instalaciones de la Facultad de Ciencias. En el ambiente de la prueba se tuvieron los siguientes dispositivos: - 1 router inalámbrico (Cisco Linksys WRT54G, IP 192.168.0.2). - Una computadora personal del laboratorio, el cual actuó como servidor donde la aplicación estaba contenida. Dicha computadora personal estaba dentro de la misma red en la cual se encontraba el router TP-LINK mencionado anteriormente. Finalidad de la Prueba La finalidad de la prueba era validar que el rastreo de dispositivos que se encuentran dentro de la misma red se realizara de manera satisfactoria utilizando la notación CIDR para el rastreo de toda la red. Inicio de la Prueba. Para el inicio de la prueba se coloco en la opción “Escanear Red” de la pagina de administración de punto de acceso, la IP del router. Se coloco la notación CIDR 24 para que la aplicación a través del comando NMAP realizara un rastreo completo de toda las subredes que estén conectadas al Centro de Computación como se muestra en la figura 56. Capitulo V. Escenarios de Prueba Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 78 Figura 56. Inicio de la prueba en el Escenario 4. En la figura 65 se puede observar que el resultado genera entradas en el archivo XML en cual define todos los dispositivos encontrados dentro de la red y subredes a través del scan, la aplicación le mostrara todos los dispositivos al administrador de red en cual queda a decisión del administrador que dispositivo almacenar dentro de la base de datos, dicho proceso puede durar varios minutos dependiendo de la notación CIDR utilizada por cual motivo la aplicación informara sobre dicha característica a la hora de culminar el rastreo y se muestran los dispositivos encontrados como sigue en la figura 57 y en la figura 58: Capitulo V. Escenarios de Prueba Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 79 Figura 57. Mensaje que se muestra al terminar el rastreo en el Escenario 4. Figura 58. Resultado mostrado al usuario en el Escenario 4. Capitulo V. Escenarios de Prueba Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 80 En la figura 58 se puede observar que el resultado del rastreo por todo la red escribió varias entradas en el archivo networkScan.xml registrando todos los dispositivos encontrados dentro de la red, antes de mostrarle la información al usuario se descartan los dispositivos que se encuentren registrados en la base de datos de la aplicación, como se observa en la figura 58 muchos de los dispositivos mostrados no son Puntos de Acceso sino celulares, impresoras, scanner y cualquier dispositivo inalámbrico conectado dentro de la red del Centro de Computación de la Facultad de Ciencias, queda de parte del administrador de red analizar los dispositivos mostrados y decidir si registra el dispositivo dentro de la base de datos de la aplicación o obvia la información de dichos dispositivos. Al decidir que dispositivo es necesario almacenarlo dentro de la base de datos se selecciona la opción “Registrar” para almacenar la información del dispositivo, la aplicación se encargara de almacenar la información obtenida del resultado del rastreo como son la dirección IP del dispositivo, la MAC y el distribuidor, el administrador de Red deberá si así lo desea completar la información del Punto de Acceso como se muestra en la figura 59: Figura 59. Pantalla para completar los datos del Punto de Acceso en el Escenario 4. Capitulo V. Escenarios de Prueba Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 81 Al seleccionar la opción continuar se registrara automáticamente la información colocada directamente por la aplicación y si fuera el caso la información suministrada por el administrador de la red, el sistema identificara el router almacenado para que el administrador decida si desea registrar otro dispositivo. Los resultados de la inserción del nuevo dispositivo se mostraran en la pantalla del resultado del Scanning y en la sección de administrar Puntos de Accesos como se muestra en la figura 60 y 61. Figura 60. Resultado de haber registrado un dispositivo dentro de la Base de datos en el Escenario 4. Capitulo V. Escenarios de Prueba Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 82 Figura 61. SE muestra la información del dispositivo en la tabla de Puntos de Accesos Registrados en la base de datos Escenario 4. La aplicación fue instalada en el centro de computación con todos los requisitos para su funcionamiento, el Scanner de la red en el escenario 4 se hizo comenzando con una dirección IP dentro de la red del centro de computación pero según la notación CIDR utilizada NMAP puedo haber escaneado más de una red, todo depende de la topología de la red, por cual motivo el administrador de red debe estar informado de cómo está estructurada toda la red de la Facultad de Ciencias y la forma correcta para administrar la notación CIDR para alcanzar un espacio más amplio para el scanner. Conclusiones Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 83 Conclusiones El Trabajo Especial de Grado consistió en el desarrollo de un modelo de sistema de gestión Web que permita administrar y monitorear los Puntos de Acceso inalámbricos que conforman la red de la Facultad de Ciencias de la Universidad Central de Venezuela de una manera más eficiente y sencilla para los administradores de la red, para tal objetivo se estudio la topología de la red y las posibles herramientas para desarrollar la aplicación. Para cada uno de los objetivos específicos se lograron obtener las siguientes conclusiones:  Recolectar información acerca de los dispositivos que conforman la red inalámbrica actual: Se logro determinar que la topología de la red de la Facultad de Ciencias es una red heterogénea debido a los Puntos de Accesos no siempre son de la misma marca ni del mismo modelo, sino que dependen de muchos factores como por ejemplo: costo y presupuesto disponible.  Analizar la información recolectada acerca de los Puntos de Acceso que se encuentran actualmente en funcionamiento: Con este objetivo se concluyo y se llevo a la tarea de obtener información sobre el estado de los Puntos de Acceso a través de comandos (ping) y si el dispositivo soportaba SNMP poder utilizar el nombre de la comunidad (community name) configurado para el dispositivo.  Para los objetivos específicos como son el diseño de la pagina Web e implementar las funcionalidades contempladas de la aplicación se concluyo de manera exitosa en más de un 85% debido a que se encontraron limitaciones como lo fue el resultado final del Scanning que muestra todo los dispositivos encontrados, donde el requerimiento original solo se quería que tomara los Puntos de Acceso de la red. Conclusiones Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 84 El resultado obtenido a través de las pruebas es una aplicación que cumple con todos los requerimientos planteados al principio de este trabajo. Por tal motivo se espera que la aplicación logre minimizar la dificultad de las tareas de administración y monitoreo de los Puntos de Accesos para los administradores de la red inalámbrica de la Facultad de Ciencias. Aunque nuevos requerimientos fueron surgiendo durante el desarrollo de la aplicación, se lograron abarcar en su totalidad en el resultado final de este trabajo. Ciertas limitantes se encontraron al momento de realizar el taller de diseño, las cuales fueron las siguientes:  Al momento de realizar el escáner de la red, la aplicación muestra al Administrador de la Red todos los dispositivos (Computadoras Personales, Impresoras de Red, routers, etc.) que se encuentran en la misma. Queda de la mano del Administrador discernir cual dispositivo agregará para ser administrado.  Es posible hacer un escáner de una IP en especifico o de un grupo de IP’s dentro de una subred. Queda de parte del Administrador tener conocimiento sobre la notación CIDR para que pueda definir el rango de IP’s en las que desea realizar el rastreo. El método RAD permitió por medio de iteraciones facilitar el desarrollo de la aplicación, puesto que dio flexibilidad para cubrir e implementar cada uno de los requerimientos, así como el poder realizar las pruebas necesarias para asegurar el funcionamiento efectivo de la aplicación. El uso de PHP como tecnología del lado del servidor agilizo considerablemente el proceso de desarrollo de la aplicación, ya que se aprovecharon al máximo las estructuras y métodos predefinidos que posee el lenguaje, los cuales minimizaron el tiempo de codificación. El uso de la herramienta NMAP ha sido muy importante a la hora de realizar el rastreo de la red, ya que permite conocer la información necesitada por la aplicación de una manera sencilla. Conclusiones Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 85 Se espera que con la implementación de esta aplicación, las tareas de administración y monitoreo de la red de la Facultad de Ciencias se realicen de manera más sencilla y efectiva. Trabajos Futuros Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 86 Trabajos Futuros Debido a la importancia e impacto que la aplicación puede llegar a tener dentro de la Facultad de Ciencias se pueden explotar aún más el desarrollo de la aplicación para escalar todos los posibles escenarios y características futuras de la red inalámbrica. Por tal motivo se proponen trabajos futuros de desarrollo como los siguientes:  Terminar de explotar las características y funcionalidades de los comandos SNMP soportados por la aplicación, definir de manera amplia y pensando en el beneficio de la administración de la Red inalámbrica las características que se desean obtener del árbol MIB a través de los comandos SNMP.  Realizar procesos que corran en Background (Tareas independientes de un Usuario) que verifiquen el comportamiento de los Puntos de Acceso cada cierto tiempo y registren en la base de datos los resultados de cada corrida.  Desarrollar aplicaciones o pequeños módulos para dispositivos móviles (Smart Phones), la cual permita realizar el monitoreo de los Puntos de Accesos que se encuentran en la red de la Facultad de Ciencias. Esto permite al administrador poder realizar un monitoreo efectivo de los dispositivos en cualquier lugar de la Facultad de Ciencias.  Obtener estadísticas sobre el comportamiento de la aplicación en producción. Estos objetivos estudiados tanto los implementados como los no implementados, así como también los objetivos que se proponen a futuro, dan prueba de que la aplicación desarrollada para la administración y monitoreo de los Puntos de Acceso que pertenecen a la red de la Facultad Trabajos Futuros Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 87 de Ciencias de la Universidad Central de Venezuela es una aplicación extensible que puede ser explotada para lograr múltiples objetivos. Referencias Bibliográficas Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 88 Referencias Bibliográficas [1] Alegsa, Diccionario de Informática. Consultado el 10 de Junio de 2011. http://www.alegsa.com.ar/Dic/aplicacion%20web.php. [2] Somerville, Ian. Ingeniería del Software, séptima edición. Consultado el 22 de Junio de 2011. [3] Morín, Arley T. Implementación del Patrón clásico de diseño web Modelo- Vista-Controlador (MVC) en PHP. Consultado el 22 de Junio de 2011 http://arleytriana.blogspot.com/2009/07/implementacion-del-patron-clasico- de.html [4] Cibernetia. Historia de las aplicaciones web. Consultado el 30 de Junio de 2011. http://www.cibernetia.com/manuales/introduccion_aplicaciones_web/3_histori a_aplicaciones_web.php [5] Moreno y Villena, Antonio. Historia y características generales. Consultado el 5 de Julio de 2011. http://www.aeemt.com/contenidos_socios/Informatica/Informac_Informat_Tec nolog/AMV_AGI_AEEMT_HTML_Historia.pdf [6] Desarrolloweb. Manual de Hojas de Estilo en Cascada. Consultado el 5 de Julio de 2011. http://www.desarrolloweb.com/manuales/manual-css-hojas-de-estilo.html [7] GS-ZONE. Definición de JavaScript. Consultado el 15 de Julio de 2011. http://www.gs-zone.org/ [8] McLaughlin, B. Introduction to AJAX. Consultado 18 de Mayo de 2010. http://www-128.ibm.com/developerworks/web/library/wa-ajaxintro1.html. http://www.alegsa.com.ar/Dic/aplicacion%20web.php http://arleytriana.blogspot.com/2009/07/implementacion-del-patron-clasico-de.html http://arleytriana.blogspot.com/2009/07/implementacion-del-patron-clasico-de.html http://www.cibernetia.com/manuales/introduccion_aplicaciones_web/3_historia_aplicaciones_web.php http://www.cibernetia.com/manuales/introduccion_aplicaciones_web/3_historia_aplicaciones_web.php http://www.aeemt.com/contenidos_socios/Informatica/Informac_Informat_Tecnolog/AMV_AGI_AEEMT_HTML_Historia.pdf http://www.aeemt.com/contenidos_socios/Informatica/Informac_Informat_Tecnolog/AMV_AGI_AEEMT_HTML_Historia.pdf http://www.desarrolloweb.com/manuales/manual-css-hojas-de-estilo.html http://www.gs-zone.org/ http://www-128.ibm.com/developerworks/web/library/wa-ajaxintro1.html Referencias Bibliográficas Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 89 [9] Manual de Referencia JQuery. Consultado el 22 de Julio de 2011. http://jquery.com/ [10] Manual de Referencia de Apache HTTP Server. Consultado el 26 de Julio de 2011. http://apache.org [11] Gilmore, W. A Programmer’s Introduction to PHP 4.0. Consultado el 15 de Mayo de 2010. http://books.google.co.ve/ [12] Manual de Referencia de MySQL. Consultado el 15 de Julio de 2011. http://dev.mysql.com/doc/refman/5.5/en/ [13] Manual de Referencia de NMAP. Consultado el 26 de Mayo de 2010. http://nmap.org [14] Cisco Systems. “Internetworking Technologies Handbook”. Consultado el 13 de Febrero de 2010. http://www.cisco.com/en/US/docs/internetworking/technology/handbook/ito_ doc.html. [15] Kendall, K. y Kendall, J. Análisis y Diseño de Sistema. Sexta Edición. Pearson Education, México. http://jquery.com/ http://apache.org/ http://books.google.co.ve/ http://dev.mysql.com/doc/refman/5.5/en/ http://nmap.org/ http://www.cisco.com/en/US/docs/internetworking/technology/handbook/ito_doc.html http://www.cisco.com/en/US/docs/internetworking/technology/handbook/ito_doc.html Anexos Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 90 Anexos Manual de Usuario de la aplicación. Requerimientos de instalación y configuración para instalar la aplicación. Script de Base de Datos de la aplicación. file:///E:/Tesis/TEG-Kendall/manual%20de%20instalacion%20y%20requerimientos%20de%20la%20aplicación.docx file:///E:/Tesis/TEG-Kendall/manual%20de%20instalacion%20y%20requerimientos%20de%20la%20aplicación.docx file:///E:/Tesis/TEG-Kendall/manual%20de%20instalacion%20y%20requerimientos%20de%20la%20aplicación.docx file:///E:/Tesis/TEG-Kendall/sistemaadministracion.sql