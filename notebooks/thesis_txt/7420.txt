Universidad Central de Venezuela Facultad de Ciencias Escuela de Computación Aplicación Web para la Gestión Académica - Administrativa del Departamento de Docencia del Instituto de Urbanismo de la Universidad Central de Venezuela Trabajo Especial de Grado Presentado ante la Ilustre Universidad Central de Venezuela Por los Bachilleres Alejandro Moises Barone Cavalieri José Gregorio Castro Lazo Para optar al título de Licenciado en Computación Tutora: Profa. Yosly Hernández Bieliukas Caracas, mayo del 2018 Resumen i Resumen El Departamento de Docencia del Instituto de Urbanismo (DD-IU) de la Facultad de Arquitectura y Urbanismo (FAU) de la Universidad Central de Venezuela es el encargado de albergar y administrar la información relacionada de los diversos programas de postgrado que están adscritos al Instituto. La comunidad de postgrado del IU, está conformada por aproximadamente 180 estudiantes que, junto al personal administrativo, no cuentan de un sistema centralizado que permita mejorar sus procesos académicos - administrativos. Los individuos de dicho instituto deben realizar una cantidad de procesos de forma manual, teniendo que introducir documentos físicos directamente en la entidad, dejando de aprovechar gran parte de tiempo y recursos en el proceso. Por si fuera poco, mucha información se encontraba descentralizada, lo que ocasionaba que obtener un expediente estudiantil resultara un trabajo que requería una reconstrucción elaborada que conllevaba tiempo. Debido a los motivos descritos, el objetivo del presente Trabajo Especial de Grado trató de la implementación de una aplicación web que permitiera gestionar los procesos académicos - administrativos del IU de forma automatizada y centralizada. Dicha aplicación será llamada “SISGIU” cuyas siglas provienen de “Sistema de Gestión del Instituto de Urbanismo”. Para el desarrollo de esta aplicación se utilizaron varias tecnologías, como Django para el desarrollo de la lógica de negocio, ReactJS para las interfaces de usuario y PostgreSQL como Sistema Manejador de Base de Datos, además se utilizó una adaptación de la metodología ágil de desarrollo de software Programación Extrema (XP). Palabras Claves: aplicación web, SISGIU, gestión académica y administrativa, inscripciones, historial académico. Índice General ii Índice General INTRODUCCIÓN .......................................................................................................... 1 CAPÍTULO I .................................................................................................................. 3 PROBLEMA DE INVESTIGACIÓN ................................................................................. 3 1.1 Contexto de la investigación ...................................................................... 3 1.2 Descripción del proceso ............................................................................. 4 1.3 Planteamiento del problema ..................................................................... 5 1.4.1 Objetivo General ....................................................................................... 6 1.4.2 Objetivos Específicos ................................................................................ 7 1.5 Justificación .............................................................................................. 7 1.6 Alcance de la aplicación ............................................................................. 8 1.7 Antecedentes de Aplicaciones Web ........................................................... 8 1.7.1 CONEST ...................................................................................................... 8 1.7.2 CONEST Postgrado .................................................................................. 11 1.7.3 Sistema de Gestión de Pasantías (SIGEPAS) .......................................... 12 1.8 Metodología de Desarrollo ...................................................................... 13 CAPÍTULO II ............................................................................................................... 17 MARCO TEÓRICO ...................................................................................................... 17 2.1 Aplicación Web ....................................................................................... 17 2.1.1 Características de las Aplicaciones Web ................................................ 17 2.1.2 Arquitectura de aplicación web ............................................................. 18 2.1.3 Patrón Arquitectónico: Modelo - Vista - Plantilla .................................. 20 2.1.4 Arquitectura orientada a servicios ......................................................... 21 Índice General iii 2.1.5 Servicios Web .......................................................................................... 22 2.2 Tecnologías Web ..................................................................................... 24 2.2.1 Tecnologías del lado del cliente ............................................................. 24 2.2.2 Tecnologías del lado del Servidor ........................................................... 28 2.2.3 Tecnologías del lado del Servidor de Base de Datos ............................. 29 2.3 Gestión Académica - Administrativa ........................................................ 31 CAPÍTULO III.............................................................................................................. 33 MARCO APLICATIVO ................................................................................................ 33 3.1 Fases del método de Programación Extrema ........................................... 34 3.1.1 Fase de Planificación ............................................................................... 34 3.1.2 Fase de Diseño ........................................................................................ 40 3.1.3 Fase de codificación ................................................................................ 49 3.1.4 Fase de pruebas ...................................................................................... 51 CAPÍTULO IV ............................................................................................................. 66 RESULTADOS ............................................................................................................ 66 4.1 Página Principal ....................................................................................... 69 4.1.1 Sección de créditos ................................................................................. 70 4.2 Sección de Recuperación de Contraseña .................................................. 70 4.2.1 Correo Electrónico de Recuperación de Contraseña ............................. 71 4.2.2 Selección de nueva contraseña .............................................................. 71 4.3 Módulo del Administrador ...................................................................... 72 4.3.1 Inicio del Administrador ......................................................................... 72 4.3.2 Perfil del Administrador ......................................................................... 73 4.4 Módulo de Estudiante ............................................................................. 88 Índice General iv 4.4.1 Inicio de Estudiante ................................................................................. 88 4.4.2 Historial Académico ................................................................................ 90 4.4.3 Constancias ............................................................................................. 90 4.5 Módulo de Personal Docente .................................................................. 92 4.5.1 Inicio de Personal Docente ..................................................................... 92 4.5.2 Cargar Notas ............................................................................................ 94 4.6 Módulo de Personal Administrativo ........................................................ 95 4.6.1 Inicio de Personal Administrativo .......................................................... 95 4.6.2 Módulo de Inscripciones ......................................................................... 97 4.6.3 Módulo de Usuarios ................................................................................ 99 4.6.4 Módulo de Reportes ............................................................................. 102 CONCLUSIONES ...................................................................................................... 110 RECOMENDACIONES .............................................................................................. 112 REFERENCIAS BIBLIOGRÁFICAS Y DIGITALES......................................................... 113 ANEXO A Historias de Usuarios ............................................................................. 116 ANEXO B Prototipos de Interfaz ............................................................................ 121 ANEXO C Manual Técnico ...................................................................................... 129 ANEXO D Manual de Usuario................................................................................. 132 Índice de Figuras v Índice de Figuras Figura 1: Tecnología y usuarios de CONEST.............................................................. 10 Figura 2: Sistema de Gestión Académica CONEST.................................................... 10 Figura 3: Sistema de Gestión Académica CONEST Postgrado .................................. 12 Figura 4: Sistema de Gestión de Pasantías SIGEPAS................................................. 13 Figura 5: Fases del Ciclo de Vida de la metodología XP. ........................................... 14 Figura 6: Comportamiento del patrón de diseño MVC ............................................ 21 Figura 7: Arquitectura SOA básica. ........................................................................... 22 Figura 8: Interoperabilidad de los Servicios Web (W3C). ......................................... 23 Figura 9: Arquitectura MVT de Django ..................................................................... 29 Figura 10: Adaptación de la Metodología XP utilizada para el desarrollo de SISGIU. .............................................................................................................................................. 34 Figura 11: Modelo de Datos Relacional de SISGIU. .................................................. 42 Figura 12: Modelo de tres capas de SISGIU. ............................................................. 44 Figura 13: Prototipo de Interfaz de Página Principal de SISGIU ............................... 45 Figura 14: Prototipo de Interfaz del Inicio de Estudiante. ........................................ 46 Figura 15: Guía de estilos – paleta de colores SISGIU. ............................................. 47 Figura 16: Guía de estilos – Logotipo de SISGIU. ...................................................... 48 Figura 17: Guía de estilos – Iconos utilizados en SISGIU. ......................................... 48 Figura 18: Estructura de directorios del proyecto en Django de SISGIU. ................. 50 Figura 19: Configuración de la Base de Datos de SISGIU. ........................................ 50 Figura 20: Modelo de datos de la clase PersonalDocente de SISGIU implementado en Django. ............................................................................................................................. 51 Figura 21: Modelo de cuestionario de usabilidad .................................................... 60 Figura 22: Cuestionario de usabilidad – Ítem N° 1 ................................................... 61 Figura 23: Cuestionario de usabilidad – Ítem N° 2 ................................................... 61 Figura 24: Cuestionario de usabilidad – Ítem N° 3 ................................................... 62 Figura 25: Cuestionario de usabilidad – Ítem N° 4 ................................................... 62 Figura 26: Cuestionario de usabilidad – Ítem N° 5 ................................................... 63 Índice de Figuras vi Figura 27: Cuestionario de usabilidad – Ítem N° 6 ................................................... 63 Figura 28: Cuestionario de usabilidad – Ítem N° 6 ................................................... 64 Figura 29: Cuestionario de usabilidad – Ítem N° 6 ................................................... 64 Figura 30: Diagrama de Flujo del usuario Estudiante. .............................................. 66 Figura 31: Diagrama de Flujo del usuario Personal Docente. .................................. 67 Figura 32: Diagrama de Flujo del usuario Personal Administrativo. ........................ 68 Figura 33: Diagrama de Flujo del usuario Administrador. ........................................ 69 Figura 34: Página Principal de SISGIU. ...................................................................... 70 Figura 35: Sección de créditos. ................................................................................. 70 Figura 36: Sección de Recuperación de Contraseña. ............................................... 71 Figura 37: Correo Electrónico de Recuperación de Contraseña. .............................. 71 Figura 38: Selección de nueva contraseña de usuario. ............................................ 72 Figura 39: Módulo de Administrador - Inicio ............................................................ 73 Figura 40: Módulo de Administrador - Perfil - Información Básica. ........................ 73 Figura 41: Módulo de Administrador - Perfil - Cambio de Contraseña. ................... 74 Figura 42: Módulo de Administrador - Perfil - Cambio de Foto ............................... 75 Figura 43: Módulo de Administrador - Lista de Estudiantes. ................................... 76 Figura 44: Módulo de Administrador - Agregar Estudiante. .................................... 77 Figura 45: Módulo de Administrador - Editar Estudiante. ....................................... 78 Figura 46: Módulo de Administrador - Eliminar Estudiante. .................................... 79 Figura 47: Módulo de Administrador - Lista de Docentes. ....................................... 79 Figura 48: Módulo de Administrador - Lista de Personal Administrativo. ............... 80 Figura 49: Módulo de Administrador - Lista de Administradores. ........................... 81 Figura 50: Módulo de Administrador - Lista de Asignaturas. ................................... 82 Figura 51: Módulo de Administrador - Agregar Asignatura. .................................... 82 Figura 52: Módulo de Administrador - Editar Asignatura. ....................................... 83 Figura 53: Módulo de Administrador - Eliminar Asignatura. .................................... 83 Figura 54: Módulo de Administrador - Lista de Periodos. ........................................ 84 Figura 55: Módulo de Administrador - Agregar Período. ......................................... 85 Índice de Figuras vii Figura 56: Módulo de Administrador - Editar Período. ............................................ 86 Figura 57: Módulo de Administrador - Confirmar Cambios de Edición de Período. 86 Figura 58: Módulo de Administrador - Eliminar Período. ........................................ 87 Figura 59: Módulo de Administrador - Programación Académica. .......................... 87 Figura 60: Módulo de Estudiante - Inicio de Estudiante por Inscribirse. ................. 88 Figura 61: Módulo de Estudiante - Inicio de Estudiante Inscrito. ............................ 89 Figura 62: Módulo de Estudiante - Inscripción de Período. ..................................... 89 Figura 63: Módulo de Estudiante - Historial Académico. ......................................... 90 Figura 64: Módulo de Estudiante - Constancias. ...................................................... 91 Figura 65: Módulo de Estudiante - Constancia de Estudios. .................................... 92 Figura 66: Módulo Personal Docente - Inicio. .......................................................... 93 Figura 67: Módulo Personal Docente - Planilla de Asignatura. ................................ 94 Figura 68: Módulo Personal Docente - Cargar Notas. .............................................. 95 Figura 69: Módulo Personal Administrativo - Inicio. ................................................ 96 Figura 70: Módulo Personal Docente - Planilla de Estudiantes por Período. .......... 97 Figura 71: Módulo Personal Administrativo - Estatus de Pago de Inscripción de Estudiantes. .......................................................................................................................... 98 Figura 72: Módulo Personal Administrativo - Modificación de Asignaturas Inscritas por Estudiante. ..................................................................................................................... 99 Figura 73: Módulo Personal Administrativo - Datos Personales de Estudiante. .... 100 Figura 74: Módulo Personal Administrativo - Historial Académico de Estudiante. 101 Figura 75: Módulo Personal Administrativo - Datos Personales de Docente. ....... 102 Figura 76: Módulo Personal Administrativo – Reportes ........................................ 103 Figura 77: Módulo Personal Administrativo – Reportes: Asignaturas dictadas ..... 104 Figura 78: Módulo Personal Administrativo – Reportes: Docentes ....................... 105 Figura 79: Módulo Personal Administrativo – Reportes: Estudiantes inscritos. .... 105 Figura 80: Módulo Personal Administrativo – Reportes: Estudiantes aprobados. 106 Figura 81: Módulo Personal Administrativo – Reportes: Estudiantes reprobados. ............................................................................................................................................ 107 Índice de Figuras viii Figura 82: Módulo Personal Administrativo – Reportes: Estudiantes retirados. ... 108 Figura 83: Módulo Personal Administrativo – Reportes: Información detallada del periodo. .............................................................................................................................. 109 Figura 84: Editar Perfil de Estudiante. .................................................................... 121 Figura 85: Inscripción de Estudiante. ...................................................................... 121 Figura 86: Historial Académico de Estudiante. ....................................................... 122 Figura 87: Inicio de Personal Docente. ................................................................... 122 Figura 88: Editar Perfil de Personal Docente. ......................................................... 123 Figura 89: Cargar Notas de los Estudiantes. ........................................................... 123 Figura 90: Módulo de Constancias. ........................................................................ 124 Figura 91: Inicio de Personal Administrativo. ......................................................... 124 Figura 92: Módulo de Estudiantes en Personal Administrativo. ............................ 125 Figura 93: Inicio de Administrador. ........................................................................ 125 Figura 94: Módulo de Usuarios en Administrador. ................................................ 126 Figura 95: Edición de Usuarios en Administrador. ................................................. 126 Figura 96: Módulo de Asignaturas en Administrador. ........................................... 127 Figura 97: Agregar Período. .................................................................................... 127 Figura 98: Editar Período. ....................................................................................... 128 Índice de Tablas ix Índice de Tablas Tabla 1 - Historias de Usuario ......................................................................................... 38 Tabla 2 - Historia de Usuario - Autenticación de usuario ............................................... 39 Tabla 3 - Historia de Usuario - Recuperar Contraseña ................................................... 40 Tabla 4 - Prueba de aceptación - Modo de Autenticación ............................................. 52 Tabla 5 - Prueba de aceptación - Formularios de Agregar y Editar. ............................... 53 Tabla 6 - Prueba de aceptación - Descripción de Periodos ............................................ 54 Tabla 7 - Prueba de aceptación - Visualización de Periodo Actual ................................. 55 Tabla 8 - Prueba de aceptación - Edición de Periodo ..................................................... 56 Tabla 9 - Prueba de aceptación - Agregar Nuevo Usuario .............................................. 56 Tabla 10 - Prueba de aceptación - Agregar Docente ...................................................... 57 Tabla 11 - Prueba de aceptación - Crear Planilla ............................................................ 58 Tabla 12 - Historia de Usuario - Editar Perfil de Usuario .............................................. 116 Tabla 13 - Historia de Usuario - Gestión de Estudiantes. ............................................. 116 Tabla 14 - Historia de Usuario - Gestión de Asignaturas. ............................................. 116 Tabla 15 - Historia de Usuario - Gestión de Periodos ................................................... 117 Tabla 16 - Historia de Usuario - Inscribirse ................................................................... 117 Tabla 17 - Historia de Usuario - Retirar periodo ........................................................... 118 Tabla 18 - Historia de Usuario - Ver historial académico ............................................. 118 Tabla 19 - Historia de Usuario - Descargar constancia ................................................. 118 Tabla 20 - Historia de Usuario - Ver programación académica .................................... 119 Tabla 21 - Historia de Usuario - Cargar notas ............................................................... 119 Tabla 22 - Historia de Usuario - Descargar planilla de estudiantes .............................. 119 Tabla 23 - Historia de Usuario - Modificar inscripción de estudiante .......................... 120 Tabla 24 - Historia de Usuario – Generación de reportes ............................................ 120 INTRODUCCIÓN 1 INTRODUCCIÓN Debido al auge tecnológico -y de internet- de la última década, por la reducción de costos y la disminución del espacio de almacenamiento, se ha venido incrementando la necesidad de automatizar cada vez más procesos cotidianos, de poseer información disponible de forma inmediata y de obtener control sobre los procesos de gestión dentro de las organizaciones, esto, para aumentar la productividad y ayudar a la toma de decisiones. Motivado a la existencia y uso de las aplicaciones Web, se logra mejorar las tareas periódicas realizada por usuarios, traspasando la mayoría de los esfuerzos a computadoras capaces de realizarlo de una forma más rápida y eficaz. Además, permite tener gran parte de la información centralizada, lo que logra la visualización, análisis y edición de ésta de una forma más asequible y accesible. La portabilidad de este tipo de aplicaciones permite que los usuarios, por medio de un navegador web, puedan visualizar y acceder al sistema de una forma más simple. Entre otros beneficios que poseen estas aplicaciones, se tiene: escalabilidad, control, usabilidad, disponibilidad y seguridad. El DD-IU de la Universidad Central de Venezuela, no goza de las ventajas que trae consigo el uso de las aplicaciones Web para mejorar las actividades académicas y administrativas, es por ello que un gran número de procesos, en el que se incluye la inscripción por períodos, se realizan de forma manual y con la ayuda de herramientas ofimáticas, lo que conlleva a una carga de trabajo mayor ocasionando tiempos de respuesta más lentos al personal estudiantil y administrativo. En tal sentido, nació la necesidad de implementar, con ayuda y en conjunto con el IU, una aplicación Web que automatizara y mejorara los procesos académicos y administrativos de la misma. El siguiente Trabajo Especial de Grado se estructura de la siguiente forma: ● Capítulo I - Problema de Investigación: consta del propósito general de la investigación. Se detalla cual es la problemática asociada a los procesos del IU, se presenta y se justifica la solución. Así como también, la definición de los objetivos del Trabajo Especial de Grado, el alcance que comprende y se explica el uso del método de desarrollo ágil Programación Extrema (XP). ● Capítulo II – Marco Teórico: comprende todas las bases teóricas utilizadas en la investigación. Se abarcan todas las definiciones afines al desarrollo de Aplicaciones INTRODUCCIÓN 2 Web y se detallan las herramientas tecnológicas que se emplearon para el desarrollo del sistema. ● Capítulo III - Marco Aplicativo: abarca el proceso de adaptación al método de desarrollo ágil XP, describiendo cada una de las etapas realizadas durante el desarrollo. ● Capítulo IV - Resultados: detalla los resultados obtenidos luego de finalizar la implementación del Trabajo Especial de Grado, describiendo todas las funcionalidades de la aplicación web. Por último, se describen las conclusiones obtenidas tras la elaboración del Trabajo Especial de Grado. También se proponen las recomendaciones y mejoras para futuras implementaciones. CAPÍTULO I PROBLEMA DEINVESTIGACIÓN 3 CAPÍTULO I PROBLEMA DE INVESTIGACIÓN En el presente capítulo se presenta la problemática identificada para el periodo académico II-2017 del IU de la UCV en relación a los procesos de gestión académica- administrativa realizados diariamente, el contexto donde estos se desarrollan, el objetivo general, los objetivos específicos, la justificación, el alcance, antecedentes y la metodología utilizada. 1.1 Contexto de la investigación El 13 de octubre de 1941, se crea la Escuela de Arquitectura adscrita a la UCV. Ésta se encargaba solo de organizar programas de estudio y tramitar títulos obtenidos por arquitectos de otras universidades. En 1944 inician las labores de docencia, y funciona por un periodo de dos años como un Departamento de la Escuela de Ingeniería. En octubre de 1946 vuelve a tener el estatus de Escuela, y estaba adscrita a la Facultad de Ciencias Físicas y Matemáticas. El 20 de octubre de 1953, finalmente se eleva a Facultad de Arquitectura y Urbanismo, teniendo como primer decano al Ingeniero Willy Ossott. En 1957 se inician las actividades docentes en el edificio que actualmente ocupa la Facultad de Arquitectura y Urbanismo, en el campus universitario (Universidad Central de Venezuela [UCV], 2009). El IU se crea en Octubre de 1967 e inicia sus labores de docencia con el Postgrado de Planificación Urbana con la mención Estructura y Economía urbana en el mismo año. Es importante señalar que los estudios de postgrado de la Facultad se rigen por el Reglamento de Estudios de los Postgrados de la UCV y cuenta con el CEP, que se encarga de velar por el funcionamiento de todos los postgrados de la FAU. La presente investigación se realizó en el IU, sin embargo, la CEP es el ente encargado de coordinar y trazar los lineamientos que rigen los estudios de postgrado en dicha facultad (Universidad Central de Venezuela [UCV], 2009). En este sentido, el CEP tiene como misión: CAPÍTULO I PROBLEMA DEINVESTIGACIÓN 4 1. Responder por la capacidad instalada y diversidad del capital intelectual de Postgrado. 2. Garantizar la formación y actualización de técnicos especialistas, profesionales, académicos e investigadores mediante intercambios con pares nacionales e internacionales. 3. Proveer el acceso a los medios tecnológicos y bibliográficos necesarios para mantener y potenciar la capacidad instalada. 4. Proveer de espacios para el libre debate de ideas que procuren la producción de conocimiento y la resolución de problemas vinculados con la sociedad. (Universidad Central de Venezuela [UCV], 2009). Por otro lado, la misión del CEP corresponde a: Procurar a través de la investigación y docencia producida e impartida en los Postgrados de la Facultad de Arquitectura y Urbanismo, ser una institución académica de vanguardia, pública, plural, democrática y eficiente, que promueva la participación y la excelencia en la formación de recursos humanos y en la producción integral de conocimiento científico en las áreas estratégicas de su competencia y, se destaca como referencia tanto a nivel nacional como internacional, contribuyendo al logro de un medio ambiente de calidad y sustentable. Esto es logrado haciendo de los postgrados expresión elevada, calificada y pertinente de un sistema integrado universidad - sociedad para la gestión del saber y la cultura, conjugando a través de la investigación y docencia del postgrado las funciones básicas de la universidad, la cual está socialmente comprometida con una visión de futuro. (Universidad Central de Venezuela [UCV], 2009). 1.2 Descripción del proceso Los programas de Postgrados del IU, se encuentran conformados por: dos especializaciones, tres maestrías y un doctorado. La temporalidad de funcionamiento de dichos programas es diferente, es decir; para especialización y maestrías se maneja CAPÍTULO I PROBLEMA DEINVESTIGACIÓN 5 períodos de 14 semanas a veces denominados trimestres y para doctorado períodos anuales. Para el semestre II-2017, los estudiantes de postgrado del IU, dependiendo del trámite que procuraban realizar, debían dirigirse a dos instancias principales, la Secretaría Docente y el Departamento de Docencia. Si un alumno deseaba solicitar una constancia de notas, se tenía que buscar el expediente en físico del mismo y llenar un documento en Excel, convirtiendo ésta en una tarea no inmediata. Por otro lado, si un estudiante deseaba inscribirse, éste debía realizar un procedimiento manual, llenando una planilla con datos personales, créditos a cursar y asignaturas elegidas, continuando con la entrega de un recibo de pago de inscripción, finalizando con la entrega de dos copias de la factura. En relación a los programas de postgrado, las maestrías y especializaciones son similares en estructura, teniendo como diferencias el proceso de pasantías y las asignaturas electivas. Esto no ocurre con el caso del Doctorado, la situación no es uniforme, dado que plan de estudio es individualizado, cada estudiante se encarga de estructurar un programa académico particular, que comprende tres asignaturas obligatorias, además de la presentación y defensa del proyecto de tesis doctoral. 1.3 Planteamiento del problema La comunidad de postgrado del IU de la FAU está conformada por aproximadamente 180 estudiantes. Éstos, pueden realizar distintos trámites o procesos de gestión académica en control de estudios como: inscripciones de asignaturas, proyectos y trabajos de grado, constancias de estudios, constancias de culminación, notas, programas, entre otros. Para el semestre II-2017, estos procesos son realizados de forma manual y a través de herramientas ofimáticas. El IU consta de 4 jefes de sección de los Postgrado que coordina el Departamento de Docencia, cada uno se encarga de su programa de postgrado como se indica a continuación: ● Planificación Urbana: tienen un solo programa Maestría en Planificación Urbana, Mención Política y Acción Local. ● Diseño Urbano: cuenta con cuatro programas: ○ Maestría en Diseño Urbano Mención Diseño. CAPÍTULO I PROBLEMA DEINVESTIGACIÓN 6 ○ Maestría en Diseño Urbano Mención Gestión. ○ Especialización en Diseño Urbano mención Diseño. ○ Especialización en Diseño Urbano mención Gestión. ● Planificación del transporte: Maestría y Especialización en Planificación del Transporte. ● Doctorado: El Instituto sólo posee Doctorado en Urbanismo. En el transcurso de los últimos semestres, se viene acentuando la carencia de los recursos necesarios para la generación de los informes que elabora la Secretaría Docente y el Departamento de Docencia, tales como: el papel y la tinta de impresora. Esto se debe al incremento en los costos de los materiales, la dificultad para conseguirlos, y la disminución del presupuesto asignado a la UCV. A causa de esto, se viene presentando la imposibilidad de reproducir los informes y, en ocasiones debido al error humano, se han extraviado o traspapelado. Aunado a esto, se presenta el hecho de que estos procesos conllevan una carga de tiempo mayor, convirtiendo las tareas comunes en actividades poco prácticas y con un esfuerzo elevado para los estudiantes y personal administrativo. A todo esto, se agrega una sobrecarga en el resguardo de la información en la institución debido a lo complicado de depurar y eliminar estudiantes que ya no pertenecen a la facultad. Por lo antes expuesto se planteó como pregunta de investigación, ¿Qué mecanismo permite optimizar la gestión académica - administrativa del Instituto de Urbanismo de la Facultad de Arquitectura y Urbanismo de la Universidad Central de Venezuela? 1.4 Objetivos del Trabajo Especial de Grado 1.4.1 Objetivo General Desarrollar una aplicación Web llamada “SISGIU” para la gestión académica - administrativa del Departamento de Docencia del Instituto de Urbanismo de la Universidad Central de Venezuela. CAPÍTULO I PROBLEMA DEINVESTIGACIÓN 7 1.4.2 Objetivos Específicos ● Determinar las funcionalidades que ofrecerá la aplicación web. ● Seleccionar la arquitectura del software de SISGIU. ● Diseñar interfaces de usuario para la implementación de SISGIU. ● Modelar el esquema lógico y físico de la Base de Datos de SISGIU. ● Aplicar pruebas de funcionalidad y usabilidad en SISGIU. ● Implementar el sistema en un servidor de producción del IU de la UCV. 1.5 Justificación Debido al crecimiento exponencial que ha tenido la tecnología y de su uso por parte de la sociedad para resolver situaciones de múltiples índoles a través del internet y distintas aplicaciones que se alojan en éste, se determinó que la solución óptima para el problema planteado en el IU es el desarrollo de una aplicación Web que automatice la gestión académica de los estudiantes de postgrado, abarcando así, gran cantidad de los procesos que, para el día de hoy, se realizan sin la asistencia de un sistema. Esta solución es la ideal debido a que el uso de las herramientas tecnológicas apropiadas podrá acoplarse perfectamente a cada uno de los requerimientos que presentan los procesos de gestión académica, haciendo así, que estos se realicen de forma ágil, cómoda y sencilla. Además, es un requisito explícito del IU contar con un sistema que pueda ser accedido desde un dispositivo inteligente, que sea capaz de gestionar todos los procesos académicos - administrativos dentro de esta institución, haciendo más sencilla las tareas cotidianas dentro de ella. El desarrollo de una aplicación Web resuelve gran parte de los inconvenientes que actualmente posee el IU en sus procesos, brindando beneficios como: los datos se encontraran en un repositorio centralizado y podrán contar con el respaldo de los mismos, la integración de todos los procesos de gestión en una única herramienta, la reducción significativa del uso de papel y tinta de impresión por último, la facilidad de consultar la información de los estudiantes de una manera cómoda y rápida. CAPÍTULO I PROBLEMA DEINVESTIGACIÓN 8 1.6 Alcance de la aplicación SISGIU permite la gestión académica y administrativa del Instituto de Urbanismo de la UCV para los estudiantes, personal docente y administrativo. Esta aplicación contempla diferentes funcionalidades de acuerdo a cada uno de los siguientes roles de usuario: ● Administrador: creación, edición y eliminación de usuarios (estudiantes, personal docente, personal administrativo y administradores), asignaturas y periodos. ● Estudiante: visualización de horario, realizar inscripción, ver historial académico y descargar constancias. ● Personal Docente: descargar planilla de estudiantes de las asignaturas que imparte, cargar notas de estudiantes y descargar constancias. ● Personal Administrativo: descargar planilla de estudiantes de los periodos en curso, así como, editar las asignaturas inscritas, cambiar el estatus de pago de inscripción, ver el historial académico y visualización de información básica de los estudiantes y docentes. Además de las funcionalidades desempeñadas por cada uno de los roles de usuario, existen otras que son globales: Autenticación de usuario, recuperación de contraseña, edición de perfil, visualización de programación académica. 1.7 Antecedentes de Aplicaciones Web Para el desarrollo de SISGIU, se tomaron como antecedentes las aplicaciones descritas a continuación, encargadas de automatizar procesos de gestión académica y administrativa, por lo que guardan relación con respecto a muchos de sus procesos, ya que involucran prácticamente los mismos roles de usuario. La cuales consisten en un sistema que facilita una serie de tareas o procesos a estudiantes, docentes y personal administrativo. 1.7.1 CONEST (CONEST, 2007) Es la aplicación Web encargada de automatizar los procesos administrativos de la gestión académica de la División de Control de Estudios de La Facultad de Ciencias de la Universidad Central de Venezuela. Éste CAPÍTULO I PROBLEMA DEINVESTIGACIÓN 9 fue desarrollado como Trabajo Especial de Grado de la UCV para la gestión académica de los estudiantes de pregrado. Se decidió realizar esta aplicación para mitigar la necesidad de automatizar tareas y procesos académicos (Sulbarán y Pedrozo, 2009). Algunos de los procesos que pueden ser realizados a través de esta aplicación son: la inscripción de estudiantes, la calificación de los mismos por parte de los docentes, generación de reportes y constancias, entre otros. Según CONEST trabaja con los datos de aproximadamente 3600 estudiantes entre las distintas licenciaturas de la Facultad de Ciencias. Este sistema, que se orienta a servicios de usuarios, cuenta con un modelo de datos de 5 millones de registros y 140 tablas que contienen la información de más de 37 mil estudiantes que han pasado por la Facultad. Los servicios prestados por esta aplicación están disponibles las 24 horas del día, todos los días del año y lo único que se necesita para acceder es un navegador web como Chrome o Mozilla. El 28 de abril de 2014 es desplegada la última versión de CONEST, la 3.0.0. El sistema está subdividido por distintos módulos los cuales se encargan de manejar los distintos procesos que se realizan dentro de la División de Control de Estudios de la Facultad de Ciencias (DCE). Entre los numerosos módulos tenemos: administrativo, nuevo ingreso, estudiante, docente, entre otros. Son muchos los beneficios que ha brindado esta aplicación, logrando la reducción de costos por medios físicos como papel y tinta, la mejora en la calidad de los servicios prestados a los usuarios, la optimización de los tiempos de trabajo en los procesos que realiza la DCE, así como también en los procesos que realiza el personal docente y los estudiantes de la facultad. Esta aplicación funciona bajo las reglas del patrón de diseño Modelo Vista Controlador (MVC). Se desarrolló utilizando el framework Ruby on Rails, la base de datos MYSQL y el servidor web Apache, todo corriendo en un servidor con sistema operativo Debian. En la Figura 1 se muestra la tecnología y usuarios del Sistema de Gestión Académica CONEST. CAPÍTULO I PROBLEMA DEINVESTIGACIÓN 10 Figura 1: Tecnología y usuarios de CONEST Fuente: (Sulbarán & Pedrozo, http://saber.ucv.ve, 2014) En la Figura 2 se muestra la interfaz principal del Sistema de Gestión Académica CONEST. Figura 2: Sistema de Gestión Académica CONEST Fuente: (CONEST, 2007) CAPÍTULO I PROBLEMA DEINVESTIGACIÓN 11 1.7.2 CONEST Postgrado Según (Guevara y Zúñiga, 2015), CONEST para los estudios de Postgrado, es una aplicación Web desarrollada como Trabajo Especial de Grado de la UCV con la finalidad de adaptar la existente aplicación Web CONEST para los estudios de pregrado y obtener un producto que sirviera para la gestión académica y administrativa de los estudiantes de Postgrado de la Facultad de Ciencias. Dicha aplicación fue desarrollada a partir del modelo de datos y las tecnologías utilizadas por CONEST 3.0, es decir, se realizó un proceso de adaptación del sistema ya existente. La metodología utilizada para el desarrollo de este sistema fue Programación Extrema (XP) basada en reusabilidad de software y permitiendo la migración de datos automatizada. Una particularidad esencial que posee este sistema con respecto a CONEST 3.0 es el llamado “módulo de postulación”, en el cual un estudiante, luego de ingresar todos sus datos (estudios de pregrado, experiencia laboral y lo que desea cursar), el comité de postgrado evalúa dicho perfil e indica si el estudiante es admitido en el curso especificado o no. En la Figura 3 se muestra la interfaz principal del Sistema de Gestión Académica CONEST de Postgrado. CAPÍTULO I PROBLEMA DEINVESTIGACIÓN 12 Figura 3: Sistema de Gestión Académica CONEST Postgrado Fuente: (http://www.ciens.ucv.ve, s.f.) 1.7.3 Sistema de Gestión de Pasantías (SIGEPAS) El sistema de gestión de pasantías SIGEPAS es una aplicación Web desarrollada en Ruby on Rails como Tesis Especial de Grado para la escuela de computación, es dirigida por la Comisión de Pasantías de la Facultad de Ciencias, ésta proporciona funcionalidades que automatizan parte de los procesos de pasantía, tales como, la formalización de pasantía por parte del pasante, la revisión y evaluación del estudiante por parte de los tutores académicos, la generación de constancias y reportes, entre otros. Todos los procesos siguen unos roles de usuarios, encargados de hacer tareas básicas de acuerdo a que tipo sean: pasante, tutor y administrador. Gracias a este sistema se logró mejorar la organización de los procesos a través del uso de las Tecnologías de Información y Comunicación (TIC) y brindó beneficios en estos procesos a la comunidad estudiantil, docente y persona de la Facultad de Ciencias de la Universidad Central de Venezuela (Herrera, 2016) (Visualizar Figura 4). CAPÍTULO I PROBLEMA DEINVESTIGACIÓN 13 Figura 4: Sistema de Gestión de Pasantías SIGEPAS Fuente: (SIPEGAS, 2017) 1.8 Metodología de Desarrollo Poner en práctica el desarrollo de un software, no resulta una tarea sencilla, es por ello que se debe integrar una metodología que incluya las fases del ciclo de vida del mismo de manera específica y concreta para obtener el resultado esperado, y de calidad. Partiendo de lo expuesto anteriormente, se evidencia la importancia de la adopción de una metodología, por lo cual para el desarrollo del aplicativo web se decidió utilizar una adaptación de la metodología ágil Programación Extrema (XP), ya que es ideal para abordar proyectos pequeños en un corto plazo de tiempo, que pueden presentar cambios a medida que se construye, características básicas de este desarrollo (Wells, 2009). Además, XP ofrece un enfoque liviano y flexible de desarrollo que cubre desde el levantamiento de requerimientos hasta la entrega final, así mismo se caracterizan por ser iterativa e incremental lo cual promueve la realización de entregas pequeñas que briden valor al cliente, para asegurar que los requisitos estén siendo cumplidos a cabalidad, involucrando al mismo durante todo el proceso de desarrollo. (Wake W. , 2002). CAPÍTULO I PROBLEMA DEINVESTIGACIÓN 14 Entre las diferentes metodologías ágiles existentes se escogió XP, ya que, plantea de forma más clara los procesos metodológicos a seguir para la construcción del software bajo un enfoque orientado a objetos, esta cuenta con información suficiente y de mayor uso en la actualidad. La adopción de XP parte del principio de que se trata de un software mediano y un equipo pequeño de trabajo, por lo cual no se ameritó uso de las estrictas y complejas metodologías tradicionales. El ciclo de vida ideal de XP consta de cuatro fases: planificación, diseño, codificación y pruebas; las mismas se pueden apreciar en la Figura 5. Figura 5: Fases del Ciclo de Vida de la metodología XP. Fuente: (Wake J. , 2008) a) Fase de planeación: esta fase inició a través de una reunión con el cliente, en donde se expuso acerca del problema en general y luego se fueron desglosando los procesos de forma más específica, esto con el fin de definir los requerimientos apoyándose en el uso de las historias del usuario, en donde se describieron las características y funcionalidades de la aplicación. Además, en esa primera reunión se acordó mantener comunicación permanente por medio CAPÍTULO I PROBLEMA DEINVESTIGACIÓN 15 de mensajería y reuniones en persona para mostrar avances o cuando fuese estrictamente necesario. Se le explicó que solo se trabajaría bajo una única iteración, mostrando constantemente los avances. b) Fase de diseño: debido a la necesidad de disminuir los tiempos de desarrollo, no se elaboraron tarjetas CRC (Clase-Responsabilidad-Colaboración). Cómo el diseño XP indica el principio de siempre hacerlo todo simple y entendible buscando satisfacer todas las necesidades del cliente, se elaboró un diseño del prototipo de las interfaces de usuario, se trabajó con el modelo y desarrollo de la arquitectura de la aplicación y se definió el modelo de la base de datos. c) Fase de codificación: se desarrollaron cada una de las historias de usuario que fueron previamente definidas. No se tomó en cuenta ningún orden para la creación de dichas historias, simplemente se fue construyendo la aplicación por roles de usuario, empezando con el usuario Administrador. En el momento en que se completaba una funcionalidad, ésta misma era probada por el equipo de desarrollo junto con otras funcionalidades ya existentes que estuvieran relacionadas a la misma, con el fin de buscar errores y posibles refactorizaciones de código. Durante todo el desarrollo del sistema se colocó en práctica la “programación en parejas”, esto ayudó a desarrollar más rápido la aplicación, encontrar errores de forma sencilla, entre otros beneficios. d) Fase de Pruebas: Una vez completada las funcionalidades de la aplicación, se implementaron pruebas unitarias, con el fin de comparar el resultado esperado con el resultado obtenido. Cuando se crearon las interfaces de usuario, fueron analizadas todas las funcionalidades realizando simulaciones de los flujos de los procesos que están abarcados en SISGIU, para encontrar y solucionar los posibles errores que aparecieran. De este modo, finaliza el primer capítulo, el cual permitió dar una explicación de la problemática que existía en el DD-IU, se determinó la solución, la cual consistió en automatizar los procesos de gestión académica y administrativa del IU de la UCV, por CAPÍTULO I PROBLEMA DEINVESTIGACIÓN 16 medio del desarrollo e implementación de una aplicación Web llamada SISGIU que a su vez se llevó a cabo siguiendo una adaptación de la metodología ágil XP y aplicando una arquitectura Cliente-Servidor bajo el modelo de tres capas. CAPÍTULO II MARCO TEÓRICO 17 CAPÍTULO II MARCO TEÓRICO En este capítulo se muestran los conceptos básicos de las aplicaciones Web, los cuales formaron parte fundamental en el desarrollo del presente Trabajo Especial de Grado, también se detallan los elementos y arquitecturas relacionadas al desarrollo SISGIU para la gestión académica-administrativa del IU. 2.1 Aplicación Web Las aplicaciones web, según (Luján, 2002), son un tipo diferente y particular de aplicación cliente/servidor, cuya comunicación se realiza a través del protocolo HTTP. Éste, al formar parte de la familia de protocolos TCP/IP, permite que las aplicaciones se puedan comunicar por internet, extranet o por intranet empresariales. (Blasco, Murcia y Mifsud, 2013) presentan un concepto más actualizado: Las aplicaciones Web son aquellas que se encuentran constituidas por máquinas conectadas a una red, por lo general, Internet o una Intranet corporativa que sigue el esquema cliente- servidor, y la comunicación es realizada a través del protocolo HTTP. Con base a ellos, se puede decir que una aplicación web es aquella que se encuentra alojada en un servidor y se ejecuta en la web, la cual puede ser accedida a través de internet por medio de un navegador realizando solicitudes mediante el protocolo HTTP, es decir, no necesita estar instalada en el computador, solo basta enviar una petición con los datos requeridos y el servidor web se encargará de responderla. 2.1.1 Características de las Aplicaciones Web Las aplicaciones web, según Peñafiel (2013) poseen las siguientes características: ● Simplicidad: Los usuarios pueden acceder de manera simple a la aplicación desde múltiples navegadores. ● Heterogéneo: Al trabajar con servidores centralizados, no es requerido un sistema operativo o software específico en el cliente para usar la aplicación. CAPÍTULO II MARCO TEÓRICO 18 ● Hipermedia: Las aplicaciones web permiten el despliegue y uso de elementos multimedia. ● Distribuido: Una aplicación puede contar con múltiples servidores a nivel mundial interconectados entre sí. ● Concurrente: Soporte de múltiples usuarios dentro de la aplicación. ● Multi Tecnología: Existen muchas tecnologías con las que se puede desarrollar una aplicación web, dándole a los programadores y las empresas un abanico de posibilidades. 2.1.2 Arquitectura de aplicación web Las aplicaciones web están basadas en una arquitectura cliente/servidor. (Sommerville, 2005) la define como un sistema constituido por un conjunto de servicios y servidores asociados y unos clientes que acceden y usan dichos servicios. Según (Microsoft Corporation, 2010), la arquitectura de una aplicación web se basa en un cliente que realiza peticiones HTTP mediante un navegador, en ella se especifica URLs que mapean recursos dentro del servidor web los cuales serán retornados hacia el cliente. 2.1.2.1 Ventajas de la arquitectura cliente/servidor (Márquez y Zulaica, 2004) indican las principales ventajas del esquema cliente/servidor:  Plataformas de hardware cada vez más económicas. Esto contribuye a la posibilidad de usar computadoras mucho más económicas que las requeridas por una solución centralizada. Además, se pueden utilizar componentes, tanto de hardware como de software de distintos fabricantes, lo cual brinda flexibilidad y reduce costos.  La administración se hace más sencilla al ser tratada directamente en el servidor.  Aprovechamiento del ancho de banda de la red al no siempre ser necesario transmitir información gráfica por la misma, debido a que dicha información puede residir en el cliente. CAPÍTULO II MARCO TEÓRICO 19  Rápido mantenimiento y desarrollo de aplicaciones, debido a que se pueden emplear herramientas existentes (por ejemplo, los servidores de SQL).  Brinda escalabilidad de las soluciones debido a su estructura modular que facilita la integración de nuevas tecnologías y crecimiento de infraestructura.  Gracias a la característica que posee el servidor, los recursos yacen centralizados en él, permitiendo una fácil gestión de los mismos. 2.1.2.2 Desventajas de la arquitectura cliente/servidor (Márquez y Zulaica, 2004) Indican las principales desventajas del esquema cliente/servidor:  Dificultad a la hora de diagnosticar fallas, debido a la interacción de diferentes partes de hardware y software, por lo que hace difícil el mantenimiento de estos sistemas.  Pocas herramientas para la administración y ajuste del desempeño de los sistemas.  Se deben hacer verificaciones tanto en el cliente como en el servidor para mantener la seguridad de los sistemas.  Pueden ocurrir problemas de desempeño al presentarse congestión en la red, dificultad de tráfico de datos, etc. 2.1.2.3 Arquitecturas de dos y tres niveles Según (Microsoft Corporation, 2010), una arquitectura de dos niveles hace referencia a una aplicación en la cual la lógica de presentación, lógica de negocio y de acceso a los datos residen en el cliente, mientras que en el servidor únicamente se gestionan los datos. Por otro lado, en una arquitectura de tres niveles, la lógica de presentación, la lógica de negocio y la lógica de datos se encuentran separadas, esto es, la lógica de presentación se ejecutará en el cliente, mientras que las dos restantes podrán estar repartidas entre diferentes procesadores. Es usual que en este CAPÍTULO II MARCO TEÓRICO 20 tipo de aplicaciones exista un servidor que contenga la lógica de negocio y otro que contenga la lógica de datos (Luján, 2002). 2.1.3 Patrón Arquitectónico: Modelo - Vista - Plantilla Según (IBM, s.f.), el patrón de diseño modelo-vista-controlador (MVC) determina que una aplicación se separa en 3 módulos separados en distintos objetos, estos módulos son: un modelo de datos (modelo), información de presentación (vista) y por último información de control (controlador). El modelo contiene únicamente los datos de la aplicación sin ningún tipo de lógica que indique cómo pueden ser presentados al usuario. La vista se encarga de presentar los datos que se encuentran en el modelo al usuario. Ésta sabe cómo acceder a los datos del modelo, pero no sabe el significado, ni lo que el usuario puede hacer para manipularlos. Por último, el controlador, el cual se encuentra entre la vista y el modelo. Responde a los eventos realizados por el usuario en la vista y se encarga de realizar la lógica apropiada a estos. En la mayoría de los casos, la acción que realiza es solicitar datos al modelo. El resultado de esta acción se verá reflejada automáticamente en la vista, ya que ésta se encuentra conectada con el modelo a través de un mecanismo de notificaciones. Una gran parte de las aplicaciones en la actualidad utilizan este patrón, muchas con algunas variaciones. Por ejemplo, algunas aplicaciones combinan la vista y el controlador en una clase, otras, varían sus elementos creando sub patrones con la misma base, como el modelo MVT (Modelo-Vista-Template). Todas las variaciones recomiendan la separación de los datos de su presentación. Los beneficios que este patrón de diseño acarrea son la simplificación de las aplicaciones, el desarrollo modular, mejor entendimiento y reutilización del código. En la Figura 6 se muestra como es el comportamiento de cada uno de los componentes que constituyen este patrón. CAPÍTULO II MARCO TEÓRICO 21 Figura 6: Comportamiento del patrón de diseño MVC Fuente: (Boichu, 2012) 2.1.4 Arquitectura orientada a servicios También conocida como SOA (por sus siglas en inglés, Service Oriented Architecture), es básicamente una colección de varios servicios. Estos servicios, los cuales son funciones bien definidas, auto-contenidas y que no dependen del contexto o del estado de otros servicios, además, se comunican entre sí. La comunicación puede implicar tanto el pase simple de datos como la coordinación de actividades entre dos o más servicios. (Barry, 2016). Se necesita algún medio para la conexión entre los servicios, por ello, las aplicaciones basadas en SOA utilizan tecnología totalmente estándar, como lo son XML, JSON y servicios Web para dicha mensajería, lo que hace el tiempo de aprendizaje de utilización de las mismas más corto. Realizando aplicaciones orientadas a servicio se pueden conectar aplicaciones heterogéneas con el aumento de flexibilidad que supone, y un punto muy importante es que permite que las aplicaciones y las organizaciones interactúen cuando realmente lo requieran, sin necesidad de tener conexiones permanentes. (Gutiérrez y Tortosa, 2005). CAPÍTULO II MARCO TEÓRICO 22 La Figura 7 muestra una arquitectura orientada a servicios básica, donde se puede apreciar un Consumidor de Servicios solicitando un servicio mediante un mensaje a un Proveedor de Servicios. El Proveedor de Servicios devuelve un mensaje de respuesta al Consumidor de Servicios. Las conexiones de solicitud y de la posterior respuesta se definen de forma tal que sea entendible para ambos extremos. A su vez, un Proveedor de Servicios puede ser un Consumidor de Servicios. Figura 7: Arquitectura SOA básica. Fuente: (Barry, 2016) Utilizar la Arquitectura Orientada a Servicios trae grandes beneficios a nivel tecnológico según (Gutiérrez y Tortosa, 2005), como:  Reducción de la complejidad debido a la compatibilidad basada en estándares.  Reutilización de los servicios compartidos que han sido desplegados previamente.  Integración de las aplicaciones heredadas limitando así el coste de mantenimiento.  Beneficios en el desarrollo ya que las aplicaciones son reutilizables. Más fácil de mantener y tienen la capacidad de ampliar las funcionalidades del sistema. 2.1.5 Servicios Web Un servicio web es un conjunto de protocolos y estándares abiertos utilizados para el intercambio de datos entre aplicaciones o sistemas. Los servicios web son utilizados por aplicaciones realizadas en distintos lenguajes de programación y que se ejecutan en diferentes plataformas para interoperar a través de Internet con el fin CAPÍTULO II MARCO TEÓRICO 23 de ofrecer servicios entre ellas. Los proveedores ofrecen sus servicios como procedimientos remotos y los usuarios solicitan un servicio llamando a estos procedimientos a través de la web (W3C). Estos proporcionan mecanismos de comunicación estándares entre diferentes aplicaciones que interactúan entre sí para presentar información dinámica al usuario, para proporcionar interoperabilidad y extensibilidad entre éstas, y que al mismo tiempo sea posible su combinación para realizar operaciones complejas, es necesaria una arquitectura de referencia estándar. La Figura 8 muestra cómo interactúa un conjunto de Servicios Web, donde un usuario (el cliente), a través de una aplicación, solicita información sobre un viaje que desea realizar haciendo una petición a una agencia de viajes que ofrece sus servicios a través de Internet. La agencia de viajes ofrecerá a su cliente (usuario) la información requerida. Para proporcionar al cliente la información que necesita, esta agencia de viajes solicita a su vez información a otros recursos -otros servicios web- en relación con el hotel y la compañía aérea. La agencia de viajes obtendrá información de estos recursos, lo que la convierte a su vez en cliente de esos otros servicios web. Por último, el usuario realizará el pago del viaje a través de la agencia de viajes, que servirá de intermediario entre el usuario y el servicio web que gestionará el pago. Figura 8: Interoperabilidad de los Servicios Web (W3C). Fuente: (W3C, 2018) CAPÍTULO II MARCO TEÓRICO 24 2.2 Tecnologías Web En esta sección se muestran las tecnologías que fueron evaluadas, tanto de funcionalidad como de ventajas, para el desarrollo de la aplicación Web SISGIU. 2.2.1 Tecnologías del lado del cliente Las tecnologías alojadas del lado del cliente, son aquellas que se ejecutan en el navegador del usuario final y permiten mostrar la información, además de presentarla con un buen diseño. 2.2.1.1 HTML Según la (W3C, 2014), HTML (Lenguaje de Marcado de Hipertexto) es el lenguaje de marcado básico para crear documentos y aplicaciones en la web, para el uso de todos, en cualquier lugar y bajo el encargo del Word Wide Web Consortium (W3C). Cada elemento se denota al comienzo por una etiqueta de inicio, tal como "<body>" y una etiqueta final, como por ejemplo "</body>". Luego, los agentes de usuario HTML (por ejemplo, los navegadores web) analizan este marcado, convirtiéndolo en un árbol DOM (Modelo de Objetos de Documento). Un árbol DOM es una representación en memoria de un documento que permite la fácil manipulación de los datos que se encuentran en él. La versión más actual de lenguaje es la 5, la cual es conocida como HTML5. Esta versión ha introducido una gran cantidad de mejoras y ha ampliado sus posibilidades por medio de nuevos elementos que, si bien tienen similitudes con elementos ya existentes, proveen un significado semántico correspondiente a la utilización. También incluye una gran variedad de atributos de control de formularios, elementos gráficos y de multimedia, los cuales eliminan la dependencia de plugins o módulos externos. HTML5 proporciona a los usuarios nuevas API’s (Application Programming Interface) que permite hacer “drag and drop”, CAPÍTULO II MARCO TEÓRICO 25 geolocalización, almacenamiento persistente mediante el localstorage, trabajo en modo off-line, entre otras funcionalidades. 2.2.1.2 CSS De acuerdo a la (W3C, s.f.), las Hojas de Estilo en Cascada (Cascading Style Sheets), es un mecanismo simple que describe cómo se va a mostrar un documento en la pantalla, cómo se va a imprimir, o incluso cómo va a ser pronunciada la información presente en ese documento a través de un dispositivo de lectura. Esta forma de descripción de estilos ofrece a los desarrolladores el control total sobre estilo y formato de sus documentos. CSS se utiliza para dar estilo a documentos HTML y XML, separando el contenido de la presentación. Los estilos definen la forma de mostrar los elementos HTML y XML. CSS permite a los desarrolladores web controlar el estilo y el formato de múltiples páginas al mismo tiempo. Cualquier cambio en el estilo marcado para un elemento en el CSS, afectará a todas las páginas vinculadas a él mismo. Según la (W3C, s.f.), esta tecnología brinda algunos otros beneficios como:  Flexibilidad de poder cambiar una parte o todo el diseño de una página sin necesidad de modificar su contenido.  Reutilización de código ya que generalmente una aplicación Web posee un diseño similar en cada una de sus páginas.  Reducción de los tiempos de carga del sitio en el navegador debido a la separación del diseño y contenido.  Facilidad a la hora de limpiar el código fuente ya que se tiene una hoja de estilo independiente. 2.2.1.3 Bootstrap La (W3C, s.f.) especifica que Bootstrap es un framework de código abierto de HTML, CSS y JS para el desarrollo de aplicaciones responsive y que se basa en el hecho de construir primero para móviles antes que web. CAPÍTULO II MARCO TEÓRICO 26 Bootstrap hace más fácil y rápido el desarrollo front-end web y está hecho para todos los dispositivos y sus diferentes tamaños. Utiliza CSS media queries para escalar aplicaciones y sitios web a teléfonos, tabletas y aplicaciones de escritorio. La documentación de Bootstrap proporciona elementos HTML comúnmente utilizados, HTML personalizados, componentes CSS y plugins de JQuery. (Bootstrap, 2015). Entonces Bootstrap es una excelente opción para el diseño y desarrollo de interfaces de usuario que sean capaces de adaptarse a cualquier tamaño de cualquier dispositivo. Además, este framework ofrece múltiples herramientas que facilitan mucho la creación de cualquier aplicación Web en muy poco tiempo y con un mínimo de esfuerzo. 2.2.1.4 JavaScript JavaScript, según (Ferguson y Flanagan, 2002), es un lenguaje ligero e interpretado, dialecto del estándar ECMAScript, más conocido como el lenguaje de script para páginas web, también usado en muchos entornos sin navegador, tales como node.js o Apache CouchDB. Es un lenguaje script multi-paradigma, basado en prototipos, dinámico, con soporte de estilos de programación funcional, orientado a objetos e imperativo. (Mozilla Developer Network, s.f.). Los objetos se crean programáticamente añadiendo métodos y propiedades a lo que de otra forma serían objetos vacíos en tiempo de ejecución, en contraposición a las definiciones sintácticas de clases comunes en los lenguajes compilados como C++ y Java. Una vez se ha construido un objeto, puede usarse como modelo -o prototipo- para crear objetos similares. En pocas palabras, JavaScript es un lenguaje de programación dinámico que soporta construcción de objetos basado en prototipos. La sintaxis básica es similar a Java y C++ con la intención de reducir el número CAPÍTULO II MARCO TEÓRICO 27 de nuevos conceptos necesarios para aprender el lenguaje, (Mozilla Developer Network, s.f.). Además éste ente indica que, el núcleo de JavaScript, puede extenderse para varios propósitos, complementándolo con objetos adicionales, por ejemplo:  JavaScript del lado del Cliente: extiende el núcleo del lenguaje proporcionando objetos para controlar un navegador y su modelo de objetos (DOM), permitiendo agregar un comportamiento a la página. Por ejemplo, las extensiones del lado del cliente permiten que una aplicación coloque elementos en un formulario HTML y responda a eventos del usuario, tales como clics del ratón, ingreso de datos al formulario y navegación de páginas.  JavaScript del lado del Servidor: extiende el núcleo del lenguaje proporcionando objetos relevantes a la ejecución de JavaScript en un servidor. Por ejemplo, las extensiones del lado del servidor permiten que una aplicación se comunique con una base de datos, proporcionar continuidad de la información de una invocación de la aplicación a otra, o efectuar manipulación de archivos en un servidor. Se quiere usar JavaScript debido a los múltiples beneficios que este conlleva. Algunos de estos beneficios según (Eguíluz, 2008) son los siguientes:  Al ser un lenguaje de script permite crear interfaces con un diseño más atractivo y mayor interactividad.  Permite gestionar diferencias de implementación entre los distintos navegadores.  Posee múltiples frameworks y bibliotecas, las cuales incluso se le darán uso en el desarrollo de esta aplicación Web y se mencionan más adelante en esta sección. CAPÍTULO II MARCO TEÓRICO 28  Brinda como capa de seguridad que los scripts solo pueden ser ejecutados dentro del navegador y con algunas limitaciones.  No pueden comunicarse con recursos que no pertenezcan al mismo dominio desde el que se descargó el script. 2.2.1.5 React (Facebook, 2018) Según su documentación oficial, React es un framework que permite crear interfaces de usuario compuestas para realizar aplicaciones Web robustas del tipo SPA (Single Page Application). Promueve la creación de componentes de UI (User Interface) reusables, encargadas de presentar datos cambiantes a través del tiempo. Una de las características más importantes de este framework es que mantiene un DOM Virtual en Javascript, mucho más rápido que el DOM genérico de los navegadores, permitiendo un despliegue y una actualización más rápida y con un mejor rendimiento. Entre sus varias ventajas se tienen:  Fácil y rápido enlace de datos de dos vías.  Uso de JSX como lenguaje de programación.  DOM Virtual.  Los componentes permiten tener una aplicación más legible.  Licencia open source mantenida por Facebook. 2.2.2 Tecnologías del lado del Servidor Estas corresponden a las tecnologías que se ejecutan en el servidor web, justo antes de que la página sea enviada a través de internet al cliente. Se trata de los accesos a base de datos, conexiones en red, uso de frameworks y otras tareas para crear la página final que verá el cliente. 2.2.2.1 Django Como específica (Suvash, 2006). Django es un framework backend de alto nivel hecho en Python que promueve el desarrollo rápido y diseño limpio de aplicaciones web. Éste abstrae al desarrollador de problemas comunes en la elaboración web, provee facilidades para tareas comunes en CAPÍTULO II MARCO TEÓRICO 29 el ámbito y enfatiza principalmente la ideología DRY (Don’t Repeat Yourself) a lo largo de su elaboración, lo que permite crear páginas dinámicas de manera sencilla. A diferencia de otros frameworks backend, Django sigue una arquitectura MVT (Model-View-Template) (Ver Figura 9), donde el componente template se encarga del despliegue de HTML, mientras que el view, de la lógica antes de generar alguna plantilla. Entre las características más destacables de este framework, tenemos:  Métodos de mapeo de URL a funciones.  Presentación y validación de formularios HTML de manera sencilla.  Conversión de datos de entrada en datos estructurados.  Separación de módulos.  Integración con capas de almacenamiento (discos duros).  Mayor nivel de abstracción. Figura 9: Arquitectura MVT de Django Fuente: (thegeekswatch, 2016) 2.2.3 Tecnologías del lado del Servidor de Base de Datos Son aquellas tecnologías relacionadas con la persistencia de los datos, es decir, se van a encargar de la gestión de los mismos, así como también de brindar dicha información al servidor web cuando sea pertinente. CAPÍTULO II MARCO TEÓRICO 30 2.2.3.1 Sistema gestor de base de datos Sistema Gestor de Bases de Datos (SGBD) es un software que proporciona servicios para la creación, el almacenamiento, el procesamiento y la consulta de la información guardada en base de datos de forma segura y eficiente. Su objetivo principal es evitar la manipulación directa de los datos por parte de los usuarios de la misma. Un SGBD actúa como un intermediario entre las aplicaciones y los datos, oculta la representación interna de los datos y ofrece un conjunto de funciones de más alto nivel. (Villazón, 2014) Los SGBD están diseñados para gestionar grandes cantidades de información. Esta administración implica tanto la definición de estructuras para almacenar los datos, como la provisión de mecanismos para la manipulación de estos. Además, los sistemas de bases de datos deben proporcionar la fiabilidad y seguridad de la información almacenada, a pesar de las caídas del sistema o los intentos de acceso sin autorización. Si los datos van a ser compartidos entre diversos usuarios, el sistema debe encargarse de manejar la concurrencia. (Villazón, 2014) 2.2.3.2 PostgreSQL Según (Denzer, 2012) PostgreSQL es un avanzado sistema bajo licencia BSD de bases de datos relacionales basado en Open Source. PostgreSQL usa el modelo cliente/servidor. Una sesión en PostgreSQL consiste en ejecución de los siguientes procesos.  El servidor, que maneja archivos de bases de datos, acepta conexiones a las aplicaciones cliente, y realiza acciones en la base de datos.  La aplicación cliente, que necesita realizar operaciones en la base de datos. Como es habitual en las aplicaciones cliente/servidor, el cliente y el servidor pueden estar en diferentes máquinas. En este caso, estos se comunican sobre una conexión de red TCP/IP. CAPÍTULO II MARCO TEÓRICO 31 Unas de las ventajas de PostgreSQL, además de ser Open Source, es que puede manejar múltiples conexiones concurrentes y posee mucha documentación. 2.2.3.3 Software CopyRight Según la Intellectual Property Rights Helpdesk (Helpdesk, 2009), las leyes de copyright, en lo referente al software, concede a una organización un gran nivel de propiedad y control sobre el programa que ésta crea. Específicamente se describe como ilegal, para todos excepto el dueño del sistema, correr, copiar, modificar o distribuir el programa, y solo se podrá realizar alguna de las acciones si se tiene permiso del poseedor. Detallando alguno de sus puntos más relevantes, se tiene:  El permiso del propietario del sistema es necesario si se desea ejecutar el programa.  El permiso del propietario del sistema es necesario si se desea copiar el programa por alguna razón (con excepciones a copias de seguridad).  Compilar un programa se considera copia y debe tener permiso por el propietario del sistema.  Descompilar un programa se considera copia y debe tener permiso por el propietario del sistema.  El permiso del propietario del sistema es necesario si se desea modificar el programa.  El permiso del propietario del sistema es necesario si se desea distribuir el programa a terceros. 2.3 Gestión Académica - Administrativa Según (Koontz y Weihrich, 2010) el proceso administrativo comprende las actividades interrelacionadas de: planificación, organización, dirección y control de todas las actividades que implican relaciones humanas y tiempo. Se entiende además, por procesos académicos, la elaboración de planes y programas de estudio, de estrategias didácticas y de procedimientos y medios de CAPÍTULO II MARCO TEÓRICO 32 evaluación y certificación, entre otros, que deben estar a cargo de cuerpos colegiados de docentes, técnicos o ambos, tanto de los planteles como de la dependencia o institución multiplantel de la cual dependen o les otorgó la validez oficial de estudios. (Copeems, 2014) De este modo, finaliza el segundo capítulo, en el cual se explicaron las bases teóricas que sustentan el Trabajo Especial de Grado, como son los conceptos relacionados con aplicaciones Web, arquitectura concerniente con el desarrollo de SISGIU y gestión académica-administrativa del IU. CAPÍTULO III MARCO APLICATIVO 33 CAPÍTULO III MARCO APLICATIVO En el presente capítulo se describe el proceso de creación de SISGIU, el cual fue desarrollado bajo una adaptación del método de desarrollo ágil, Programación Extrema (XP). El método XP está compuesto por cuatro fases: planificación, diseño, codificación y pruebas. Cada una de estas fases fue acoplada a los requerimientos que surgieron para el desarrollo de SISGIU. Durante la etapa de planificación, el equipo de desarrollo acordó que la aplicación se desarrollaría bajo una única iteración, y que constantemente se estarían entregando avances al cliente; todo esto con el fin de acelerar el desarrollo debido al corto plazo de tiempo que se tenía. Con respecto a la fase de diseño, se decidió no utilizar metáforas (puesto que ambos desarrolladores estaban claros sobre todos los elementos y sus relaciones) ni tarjetas CRC (ya que ambos desarrolladores estuvieron presentes en todas las funcionalidades de la aplicación). En la Figura 10 se muestra la única iteración que fue realizada para la creación de SISGIU, junto con las actividades realizadas. CAPÍTULO III MARCO APLICATIVO 34 Figura 10: Adaptación de la Metodología XP utilizada para el desarrollo de SISGIU. 3.1 Fases del método de Programación Extrema 3.1.1 Fase de Planificación Esta fase es la etapa inicial del proyecto; es donde empieza la interacción con el cliente ya sea por medio de reuniones presenciales o remotas, con el fin de definir los requerimientos para la elaboración del sistema. Las reuniones fueron realizadas con Nathalie Naranjo -Docente del Instituto de Urbanismo de la UCV- , Yelitza Mendoza -Directora del Instituto de Urbanismo de la UCV- , Luis González - Auxiliar Docente del Instituto de Urbanismo de la UCV-, Mark Linda -Coordinador Docente del Instituto de Urbanismo de la UCV- y la Profa. Yosly Hernández, CAPÍTULO III MARCO APLICATIVO 35 Docente de la Escuela de Computación de la UCV y tutora de esta investigación. En un principio las profesoras Yelitza Mendoza y Nathalie Naranjo relataron la necesidad existente del Departamento de Docencia del IU de una solución a la gestión académica y administrativa del mismo. Luego de que se llevó a cabo la contextualización de la problemática se realizó una reunión con el fin de definir los requerimientos de los procesos involucrados, en la misma se realizaron algunas preguntas como:  ¿Cómo es el proceso de gestión académica - administrativa actualmente?  Describa el flujo de los procesos involucrados.  ¿Qué roles de usuario están involucrados en dichos procesos?  ¿Cuáles son las actividades de cada rol de usuario dentro de los diferentes procesos? Luego de la entrevista se pudo obtener una visión general de los procesos de gestión más importantes que se realizan en el DD-IU, se identificaron los distintos roles de usuarios que participan durante dichos procesos, los requerimientos funcionales y no funcionales de la aplicación, los mismos se detallan a continuación: 3.1.1.1 Requerimientos Son declaraciones que identifican atributos, capacidades, características y/o cualidades que necesita cumplir un sistema para que tenga valor y utilidad para el usuario. En otras palabras, muestran los elementos y funciones que son necesarias para el desarrollo e implementación del proyecto. Estos se dividen en requerimientos funcionales y no funcionales, y se describen a continuación. 3.1.1.1.1 Requerimientos funcionales A continuación se indican los requerimientos funcionales que fueron identificados para el desarrollo de SISGIU:  Sesiones de usuario (Iniciar/Cerrar Sesión): Permite a cada uno de los diferentes usuarios el inicio y cierre de sesión dentro del CAPÍTULO III MARCO APLICATIVO 36 sistema, a través de la validación de la cédula de identidad o pasaporte y una contraseña.  Editar Perfil de Usuario: Brinda la opción a los usuarios para la edición de datos personales, fotos y contraseña dentro del sistema.  Recuperación de contraseña: Ofrece a los usuarios la posibilidad de recuperar su contraseña en caso de haberla olvidado.  Descarga de constancias en formato PDF: Posibilidad de descargar las constancias existentes en el IU en formato PDF.  Gestión de Usuarios: El usuario Administrador tendrá la posibilidad de visualizar, crear, editar y eliminar información de cada uno de los usuarios pertenecientes al sistema (Estudiantes, Personal Docente, Personal Administrativo y Administradores).  Gestión de Asignaturas: Los Administradores podrán visualizar, crear, editar y eliminar las asignaturas que se cursan en los diferentes tipos de postgrado del IU.  Gestión de Periodos: Los Administradores tendrán la posibilidad de visualizar, crear, editar, eliminar, iniciar y finalizar periodos para cada uno de los diferentes tipos de postgrado.  Inscripción de Periodo: Los Estudiantes gozarán de la opción de realizar su inscripción de forma automatizada, seleccionando las asignaturas que desean cursar.  Retiro de Periodo: El usuario Personal Administrativo podrá retirar el periodo que se encuentra cursando actualmente un estudiante.  Visualizar Historial Académico: Los usuarios Estudiante y Administrativo poseen esta funcionalidad, adaptada de forma distinta. En el caso del estudiante, éste puede visualizar su propio historial, mientras que el usuario administrativo puede CAPÍTULO III MARCO APLICATIVO 37 visualizar el historial de cualquier estudiante perteneciente a SISGIU.  Carga de notas al sistema: Los Docentes podrán cargar las notas de los estudiantes de las asignaturas que éste imparte.  Descargar planilla de estudiantes: Los Docentes tendrán la opción descargar una planilla de cada una de las asignaturas que imparten, ésta contiene la lista de estudiantes inscritos junto con su nota definitiva. El Personal Administrativo podrá descargar la planilla con dichos estudiantes en los periodos activos.  Modificar inscripción de estudiante: El Personal Administrativo podrá modificar la inscripción de un estudiante, agregando o eliminando asignaturas, según sea pertinente. Además tiene la opción de modificar el estado de pago de la inscripción.  Programación Académica: Posibilidad para cualquier rol de usuario de visualizar las asignaturas, horarios, aulas y docentes que dictarán clases en los próximos periodos.  Generación de Reportes: El personal administrativo y docente tendrá la posibilidad de generar reportes con indicadores de cada uno de los periodos existentes. 3.1.1.1.2 Requerimientos no funcionales A continuación se indican los requerimientos no funcionales que posee SISGIU con el fin de producir un software de calidad:  Seguridad: SISGIU provee seguridad en varios aspectos. Contiene permisología detallada para cada rol del sistema. Autenticación, identificación y manejo de sesiones. Almacenamiento de información sensible garantizando su integridad y seguridad. Además, gracias al uso del mapeo objeto- CAPÍTULO III MARCO APLICATIVO 38 relación que provee Django, se evita cualquier tipo de inyección de código en la base de datos.  Portabilidad: SISGIU presenta lo que se conoce como diseño responsivo, permitiendo su visualización en casi cualquier dispositivo móvil de forma correcta. Además, por ser una aplicación web, cuenta con los beneficios de no estar atada a un hardware específico.  Usabilidad: SISGIU mantiene un conjunto de interfaces, que facilitan el uso de cada una a los usuarios. También cuenta con mensajes de alertas e informativos que indican indicios sobres las acciones realizadas en el sistema.  Mantenibilidad: SISGIU también contiene un diseño enfocado a percibir futuros progresos y módulos, permitiendo mejorar aún más procesos de gestión y así enriquecer la experiencia de los usuarios. Además ésta, al proveer un API, permite la integración con otras instituciones de la FAU o de la UCV. 3.1.1.2 Historias de Usuario A continuación, en la Tabla 1 se presentan las quince (15) historias de usuario que nacieron a partir de los requerimientos funcionales para el desarrollo de SISGIU: Tabla 1 - Historias de Usuario Número Nombre 1 Autenticación de usuario 2 Recuperar contraseña 3 Editar perfil de usuario 4 Gestión de estudiantes 5 Gestión de asignaturas 6 Gestión de periodos CAPÍTULO III MARCO APLICATIVO 39 7 Inscribirse 8 Retirar periodo 9 Ver historial académico 10 Descargar constancia 11 Ver programación académica 12 Cargar notas 13 Descargar planilla de estudiantes 14 Modificar inscripción de estudiante 15 Generación de reportes En la Tabla 2 se muestra la historia de usuario N° 1 la cual corresponde al proceso de autenticación de usuarios en SISGIU, en ella se especifica cuáles son los usuarios involucrados, su descripción, la prioridad de negocio y el riesgo de desarrollo. Tabla 2 - Historia de Usuario - Autenticación de usuario Historia de Usuario Número: 1 Usuarios: Administrador, Estudiante, Personal Docente y Personal Administrativo. Nombre: Autenticación de usuarios. Prioridad en Negocio: 1 Riesgo de Desarrollo: Baja. Programador Responsable: Alejandro Barone y José Castro. Descripción: Función que permite a un usuario iniciar y cerrar sesión dentro de SISGIU, utilizando su cédula de identidad o pasaporte y su contraseña. Observaciones: En la Tabla 3 se muestra la historia de usuario N° 2 correspondiente con la funcionalidad de recuperación de contraseña de acceso a SISGIU. CAPÍTULO III MARCO APLICATIVO 40 Tabla 3 - Historia de Usuario - Recuperar Contraseña Historia de Usuario Número: 2 Usuarios: Administrador, Estudiante, Personal Docente y Personal Administrativo. Nombre: Recuperar contraseña. Prioridad en Negocio: 1 Riesgo de Desarrollo: Baja. Programador Responsable: Alejandro Barone y José Castro. Descripción: Función que permite a un usuario recuperar su contraseña en caso de haberla olvidado. Observaciones: Las historias de usuario restantes definidas en SISGIU se encuentran como ANEXO A Historias de Usuarios. 3.1.2 Fase de Diseño Una vez culminada la fase de planificación, donde se obtuvieron los requerimientos de SISGIU, se continuó con el diseño de la aplicación. En esta fase se creó el modelo de datos basado en los requerimientos especificados en la fase anterior, se especificó la arquitectura y se crearon los prototipos de interfaces de usuario de la aplicación. 3.1.2.1 Modelo de Datos En la Figura 11, es presentado el modelo de Datos de la aplicación, el cual representa la relación entre las diferentes entidades. El modelo de datos está compuesto por quince (15) tablas, las cuales son descritas a continuación:  Usuario: se recopila la información general que poseen todos los usuarios.  Estudiante: se almacenan los datos propios de los estudiantes del IU.  Personal_Docente: se guardan los datos propios del personal docente del IU. CAPÍTULO III MARCO APLICATIVO 41  Personal_Administrativo: se recolectan los datos propios del personal administrativo del IU.  Tipo_Postgrado: comprende los diferentes tipos de postgrado que existen en el IU y la cantidad de asignaturas máximas que pueden cursarse por periodo en cada una de estas.  Estado_Estudiante: percibe los diferentes estados en los que puede estar un estudiante (activo, retirado, reincorporado, entre otros).  Asignaturas: contiene la información de todas las asignaturas que se dictan en el IU.  Tipo_Asignatura: registra los diferentes tipos a los que puede pertenecer una asignatura (Obligatoria, Electiva, Clínica).  Prelacion_Asignatura: se almacenan las prelaciones de cada una de las asignaturas que se cursan en el IU.  Periodo: comprende la información de los distintos periodos que se van cursando en el IU.  Estado_Periodo: registra los estados en los que se puede encontrar un periodo (no iniciado, en inscripción, activo, finalizado).  Asignatura_TipoPostgrado: relaciona las asignaturas con los tipos de postgrado a las que pertenecen.  Docente_Asignatura: se acumula la información de todas las asignaturas que se imparten, en cual periodo, que docente la dictó, horarios y aulas.  Estudiante_Asignatura: es la que relaciona a cada uno de los estudiantes con las asignaturas que ha cursado en los distintos periodos, además es donde se almacena su nota definitiva.  Periodo_Estudiante: contiene a cada uno de los estudiantes con los periodos que han cursado. También contiene la información de pago por periodo para cada estudiante. CAPÍTULO III MARCO APLICATIVO 42 Figura 11: Modelo de Datos Relacional de SISGIU. CAPÍTULO III MARCO APLICATIVO 43 3.1.2.2 Tecnologías utilizadas A continuación se presentan las diferentes tecnologías utilizadas en el desarrollo de SISGIU, a nivel de software:  Python 3.5 como lenguaje de programación del lado del servidor. Debido a su legibilidad, fácil integración, posibilidad de desarrollo, librerías y carácter multiplataforma.  Django 2.0 junto al submódulo Django REST Framework del lado del servidor que permite crear API web robustas y rápidas, manteniendo un diseño legible y limpio.  PostgreSQL en su versión 10.1 como Sistema Gestor de Bases de Datos debido a sus características de código abierto y multiplataforma. Además brinda estabilidad y portabilidad con múltiples aplicaciones y posee mucha documentación.  HTTP como protocolo de comunicación y conexión entre los clientes y el servidor. 3.1.2.3 Arquitectura de la aplicación SISGIU está basada en la arquitectura Cliente - Servidor, la cual se describe como un conjunto de clientes realizando peticiones a uno o más servidores que se encargarán de procesar la petición, realizar alguna acción y generar una respuesta. Utiliza un modelo de tres capas integrado por presentación, lógica de negocio y datos. Para la capa de presentación se empleó como tecnología base React, enfocándola en realizar consultas sobre datos del sistema y generar vistas acordes a la información. En conjunto con HTML, CSS y Bootstrap permite crear páginas dinámicas, estructurales y agradables en base a los datos obtenidos, además de poder adaptarse a cualquier tamaño de pantalla, lo cual hace posible la utilización de la aplicación en cualquier dispositivo inteligente. CAPÍTULO III MARCO APLICATIVO 44 En segundo lugar se encuentra la capa de lógica de negocio; en esta capa es alojado el servidor de negociación, el encargado de almacenar y ejecutar la aplicación. En esta capa se empleó el uso del framework Django con un submódulo llamado Django REST, permitiendo crear un API desligada de cualquier vista capaz de procesar información y aceptar peticiones. Finalmente, la capa de datos, se encarga de almacenar, recuperar y asegurar la integridad de los mismos, para su correcta manipulación SISGIU usa el sistema manejador de base de datos, PostgreSQL. En conjunto con el mapeador de objetos que provee Django se logra una interacción ideal entre el API y los datos. En la Figura 12 se muestra un esquema del modelo de tres capas mencionado anteriormente. Figura 12: Modelo de tres capas de SISGIU. 3.1.2.4 Prototipo de interfaz Una vez definido todos los requerimientos funcionales y no funcionales que posee SISGIU, se realizan todos los diferentes prototipos de CAPÍTULO III MARCO APLICATIVO 45 las interfaces de usuario, esto a razón de poder maquetar el diseño de cada vista, logrando declarar las funcionalidades del sistema así como su usabilidad, previo a la codificación de la aplicación. En la Figura 13 se presenta el prototipo inicial de la interfaz de la página principal de SISGIU, en la cual se pueden observar elementos como la cabecera la cual se encuentra en la parte superior y en ella se localizan: El Logo de SISGIU del lado izquierdo superior, un menú de opciones (procesos e información) del lado izquierdo inferior y el logo de la FAU y la UCV del lado derecho. Debajo de la cabecera está ubicado el cuerpo de la aplicación en donde se observa del lado izquierdo un texto informativo que puede variar según lo requiera el DD-IU, y del lado derecho el panel de inicio de sesión de usuarios. Por último, al final de la página se encuentra el footer o “pie de página”, en donde se halla información de contacto y enlaces. Figura 13: Prototipo de Interfaz de Página Principal de SISGIU CAPÍTULO III MARCO APLICATIVO 46 En la Figura 14 se muestra el Inicio del usuario Estudiante, donde se puede observar la misma cabecera que posee la página principal, con la diferencia de que hay un nuevo menú de opciones, la cual corresponde a las diferentes funcionalidades que posee el usuario Estudiante. El cuerpo de la aplicación se divide en dos secciones, el lado izquierdo está compuesta por la foto del estudiante, su nombre, número de identificación, el postgrado al que pertenece y la opción de cerrar sesión. El lado derecho muestra un botón para inscribirse en el próximo periodo (en caso de estar abiertas las inscripciones) o un panel donde se muestran las asignaturas que el estudiante está cursando actualmente. Figura 14: Prototipo de Interfaz del Inicio de Estudiante. CAPÍTULO III MARCO APLICATIVO 47 Los prototipos de usuario restantes definidos para SISGIU, se encuentran como ANEXO B Prototipos de Interfaz. Estos prototipos no fueron mantenidos por completo en el diseño final de SISGIU. 3.1.2.5 Guía de estilos En la Figura 15, es presentada la paleta de colores que fue definida para el desarrollo de SISGIU. Figura 15: Guía de estilos – paleta de colores SISGIU. Todos los módulos de la aplicación mantienen los mismos colores mencionados anteriormente. La idea fue combinar dos tonos de azul para el fondo del menú principal y gris y blanco en las interfaces con el objetivo de brindar una sensación de elegancia y a la vez simplicidad. Como éstos colores son suaves, se prescinde del agotamiento de la vista una vez se utiliza por un periodo prolongado de tiempo. En cuanto a los botones, se decidió mantener la paleta utilizada por el framework Bootstrap, el cual indica que el color rojo representa la eliminación de algún contenido, el azul CAPÍTULO III MARCO APLICATIVO 48 claro es para crear, el verde para editar, el gris para salir de alguna interfaz y el azul más oscuro es para mostrar algún contenido. A continuación, en la Figura 16 es mostrado el logotipo de SISGIU, donde se decidió mantener simple con un tipo de letra sencillo. Figura 16: Guía de estilos – Logotipo de SISGIU. En la Figura 17, se aprecian los iconos utilizados en la aplicación. Figura 17: Guía de estilos – Iconos utilizados en SISGIU. Por último, se especificaron los tipos de fuente a utilizar, los cuales debían ser soportados por la mayoría de los navegadores web; por esto, fueron seleccionadas las sigui: apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol. CAPÍTULO III MARCO APLICATIVO 49 3.1.3 Fase de codificación Esta fase se le dio inicio con el proceso de desarrollar cada una de las historias de usuario e implementar el modelo de datos previamente creado en la fase de diseño. Durante esta fase surgieron muchas dudas que iban siendo aclaradas por el cliente vía remota, a través de correos electrónicos o mensajería de texto. Para el desarrollo del backend fue utilizado el Framework de Python: Django, en conjunto con una dependencia llamada Django REST Framework, para el desarrollo del API. Django, además de permitir la creación de los diferentes servicios de la aplicación, sirvió como integrador de servidor de bases de datos y el servidor Web. Por otro lado, para el desarrollo del frontend o las vistas de usuarios se utilizó el Framework ReactJS el cual permitió realizar todas las llamadas a los servicios provistos por el servidor Web, y representarlos de forma estética a través de otras tecnologías como HTML, CSS, JavaScript y Bootstrap. La creación del proyecto inició a través de un comando de Django llamado “django-admin startproject <nombre_proyecto>”, el cual resultó en la generación de una estructura compuesta por un conjunto de directorios, donde el nombre del proyecto es API SISGIU. Seguido de esto, fue necesario crear diferentes “apps” o aplicaciones que representaban contenedores de las diferentes entidades del modelo de datos. Para la creación de una app se utiliza el comando “python3 manage.py startapp <nombre_app>”. Luego de haber creado las apps necesarias para el desarrollo de SISGIU, la estructura del proyecto de Django quedó de la siguiente forma (Ver Figura 18) CAPÍTULO III MARCO APLICATIVO 50 Figura 18: Estructura de directorios del proyecto en Django de SISGIU. 3.1.3.1 Implementación del Modelo de Datos Una vez finalizada la estructura del proyecto de SISGIU en Django, se procedió a configurar el modelo de datos a utilizar. Por defecto Django está configurado para conectarse con el motor de base de datos MySQL, lo que ameritó cambiar la configuración para poder conectarse a PostgreSQL, siendo necesario abrir el archivo Settings.py ubicado en la App “API” y sustituir la configuración de MySQL con la siguiente (Ver Figura 19): Figura 19: Configuración de la Base de Datos de SISGIU. CAPÍTULO III MARCO APLICATIVO 51 Como Django incluye un ORM (Object-Relational mapping) el proceso de creación de las tablas de la Base de Datos fue diferente a la habitual, ya que éste toma la información que se encuentra en los archivos “models.py” de cada una de las Apps y transforma los datos que allí se encuentran en un formato correcto para poder guardarlo en la base de datos. Esto ayudó mucho a la hora de manipular los datos ya que nunca se tuvo que hacer de forma directa en PostgreSQL sino que se utilizaba el ORM el cual provee primitivas para su manipulación. En la Figura 20, se muestra un ejemplo de un modelo en un archivo “models.py”, donde se presenta la sintaxis que generalmente deben tener las entidades que conforman la base de datos para que estas puedan ser integradas a la misma de manera correcta. Cada tabla en la base de datos se define como una clase dentro de los modelos de Django, por lo cual posee atributos y métodos. Figura 20: Modelo de datos de la clase PersonalDocente de SISGIU implementado en Django. 3.1.4 Fase de pruebas Por medio de esta fase, se concluyó con el ciclo de desarrollo de la aplicación, en donde se buscó evaluar el comportamiento de la misma para determinar si realmente se estaban cumpliendo todos los requerimientos CAPÍTULO III MARCO APLICATIVO 52 especificados en las historias de usuario. Las pruebas utilizadas fueron pruebas de aceptación y pruebas de usabilidad, los encargados de realizar las mismas son usuarios pertenecientes al DD-IU, es decir, futuros usuarios de SISGIU y además completos conocedores de los flujos y procesos que debería abarcar el sistema. A medida que se probó el sistema aparecieron errores y sugerencias, los cuales se corrigieron con el fin de obtener un sistema que cumpliera de forma correcta con las expectativas de funcionalidad y diseño. El detalle de la aplicación de las pruebas se exhibe a continuación. 3.1.4.1 Pruebas de aceptación Fueron realizadas junto con el cliente, en este caso la Profa. Natalie Naranjo y el Coordinador Académico Mark Linda, ambos pertenecientes al DD-IU. La idea de las mismas fue comprobar el cumplimiento de los requerimientos obtenidos en las historias de usuario. Durante dichas reuniones se obtuvo lo siguiente: La primera observación estuvo relacionada a la forma en la que los usuarios realizaban la autenticación. Tabla 4 - Prueba de aceptación - Modo de Autenticación N° Prueba 1 Función Modo de Autenticación Problema El formulario para realizar la autenticación estaba incompleto, puesto que el mecanismo para ingresar al sistema para cualquier usuario era el uso de su cédula de identidad y su contraseña. Sin embargo, el cliente explicó que existen usuarios cuyo único identificador es el número de pasaporte. Aunado eso, también surgió la inquietud de que no se estaba discriminando en si una cédula era de Venezolano o Extranjero. Solución Se realizó un cambio en el modelo de datos, específicamente en la tabla de Usuarios en donde se agregó un nuevo campo llamado “tipo de documento” (V-E-P), también se cambió el tipo de dato del campo cédula por uno alfanumérico. Se cambió el formulario de autenticación de manera que se pudiese seleccionar el tipo de documento a ingresar. El formulario quedó de la siguiente manera: CAPÍTULO III MARCO APLICATIVO 53 En la Tabla 5 se presenta la segunda corrección que se obtuvo, con relación a que todos los formularios de la aplicación no presentaban indicadores de cuales campos son requeridos. Tabla 5 - Prueba de aceptación - Formularios de Agregar y Editar. N° Prueba 2 Función Agregar y Editar Usuarios, Asignaturas y Períodos Problema Todos los formularios mostraban un mensaje de alerta al intentar guardar un formulario indicando qué campos hacían falta para completar dicha acción, pero el cliente sugirió que para ahorrarle la molestia a la persona que estuviera completando el formulario en ese momento se indicara por medio de un asterisco (*) los campos requeridos. Solución Se agregó un asterisco (*) en los campos de los formularios que fuesen requeridos. Además, al final de cada formulario se indicó por medio de un mensaje el significado del asterisco. CAPÍTULO III MARCO APLICATIVO 54 Otro detalle encontrado fue durante la creación de un nuevo periodo lectivo, específicamente en el campo descripción. En la Tabla 6 se puede observar el problema detalle. Tabla 6 - Prueba de aceptación - Descripción de Periodos N° Prueba 3 Función Descripción de Periodos Problema Al crear un nuevo periodo lectivo, en el formulario existía un campo llamado “descripción” el cual estaba dedicado para escribir el número de periodo junto con el rango de fechas de inicio y fin. Para el cliente, esto pareció muy abierto a que cualquiera que manipulara dicho campo, podría escribir la descripción según como a él le pareciera correcto, además de que se prestaba para errores de tipeo. Solución El formulario se cambió por completo, se eliminó el campo “descripción” y en su lugar se agregaron otros tres: “número de periodo”, “fecha de inicio” y “fecha fin”. Esto con el fin de que todas las descripciones de los periodos cumplieran una sintaxis específica. Para esto también fue requerido cambiar el modelo de datos de la tabla “Periodo” para agregar los nuevos campos mencionados anteriormente. El formulario resultante es el siguiente: CAPÍTULO III MARCO APLICATIVO 55 La siguiente corrección tuvo relación con la forma en cómo se mostraba el periodo actual de un tipo de postgrado en las diferentes interfaces de usuario. La Tabla 7 muestra en detalle el problema planteado. Tabla 7 - Prueba de aceptación - Visualización de Periodo Actual N° Prueba 4 Función Visualizar Periodo Actual Problema En las interfaces donde se mostraba el periodo actual, como por ejemplo: Inicio de Estudiante, Inicio de Administrador, Inicio de Personal Docente, Inicio de Personal Administrativo, Historial Académico y algunas constancias únicamente mostraba el tipo de postgrado perteneciente a dicho periodo. El cliente sugirió que fuese más detallado y también apareciera cuando inicia y finaliza el periodo. Solución Se cambió el mensaje de periodo en todos los sitios que fueron requeridos por el cliente quedando de la siguiente forma: Otra situación encontrada por el cliente fue el manejo de aulas por cada periodo. La Tabla 8 representa más información sobre el problema. CAPÍTULO III MARCO APLICATIVO 56 Tabla 8 - Prueba de aceptación - Edición de Periodo N° Prueba 5 Función Edición de periodo Problema Para la edición de los periodos, al momento de definir los horarios de las asignaturas, el aula se manejaba con un campo numérico donde se especificaba donde se impartirá un horario de clases para un docente. El cliente detalló que para los postgrados las aulas son muy reducidas, divididas por pisos en realidad. Solución Se cambió el nombre de aula por piso y se modificó por un campo seleccionable con valores fijos que representan los pisos disponibles para los postgrados. Otra corrección va atada al agregar usuarios dentro del sistema. Más información en la Tabla 9. Tabla 9 - Prueba de aceptación - Agregar Nuevo Usuario N° Prueba 6 Función Agregar Nuevo Usuario Problema Al agregar un nuevo usuario se presentaba un formulario para especificar su información, éste no mostraba qué tipo de usuario se estaba agregando. El cliente solicitó colocar en el título del mismo un mensaje más identificativo. Solución Se agregó en el título del formulario el tipo de usuario que se estaba agregando. CAPÍTULO III MARCO APLICATIVO 57 Una rectificación relevante fue el manejo de docentes coordinadores dentro del sistema. En la Tabla 10 se encuentra el detalle del problema. Tabla 10 - Prueba de aceptación - Agregar Docente N° Prueba 7 Función Agregar Docente Problema En el sistema, al agregar un docente, se podía especificar si éste era coordinador o no. El cliente detalló que era necesario a su vez, si el docente era coordinador, se especificara de qué tipo de postgrado es coordinador. Solución Se realizó un cambio en el modelo de datos, específicamente en la tabla de Personal Docente en donde se agregó un nuevo campo relacionado con los tipos de postgrados del sistema. Además se modificó su formulario para agregar un usuario para que, al marcar la opción de coordinador, se pudiese seleccionar de qué tipo de postgrado era. Otro cambio importante fue la creación de planillas para los docentes dentro del sistema. Más detalle del problema en la Tabla 11. CAPÍTULO III MARCO APLICATIVO 58 Tabla 11 - Prueba de aceptación - Crear Planilla N° Prueba 8 Función Crear Planilla Problema En el sistema, las planillas que generan los docentes en relación a las asignaturas que imparten fueron realizadas -inicialmente- sin ningún tipo de formato guía. El cliente detalló cuál era el formato adecuado para este tipo de planillas. Solución Se realizaron cambios en la generación de planilla para que mostraran una información más similar a la provista por el cliente. Dividiéndola por tipos de postgrado con los estudiantes asociados a cada uno en conjunto con la firma del docente y el coordinador de cada postgrado. 3.1.4.2 Pruebas de usabilidad Buscan medir que la aplicación sea intuitiva, fácil de usar y permita a los usuarios desempeñar cada una de sus funcionalidades de manera eficiente, brindando un grado de satisfacción. También, permiten corroborar que efectivamente se desarrolló un producto de software usable, tolerante a fallas y que cumple con el funcionamiento esperado para poder ser desplegado en producción y utilizado sin ningún riesgo. CAPÍTULO III MARCO APLICATIVO 59 Con el fin de poder medir los niveles de usabilidad de la aplicación se desarrolló una prueba con datos y usuarios reales, específicamente participaron: dos (2) docentes del Instituto de Urbanismo, un (1) personal administrativo y dos (2) usuarios con el rol de administrador. La prueba consistió en la emulación de todos los procesos que brinda SISGIU, desde la gestión de usuarios, asignaturas y periodos, pasando por la inscripción de estudiantes, modificación de la misma, carga de notas y visualización del historial académico, hasta la descarga de constancias, planillas y finalización de periodos. La prueba fue llevada a cabo satisfactoriamente. Una vez finalizada la prueba de los procesos mencionados anteriormente, se aplicó un cuestionario con el propósito de conocer realmente los niveles de usabilidad que posee la aplicación. La encuesta en sí, constó de ocho (8) preguntas relacionadas con criterios de usabilidad. Para la medición de respuestas se utilizó una escala de Linkert, con cinco alternativas de respuestas para cada ítem: totalmente de acuerdo, de acuerdo, ni de acuerdo ni en desacuerdo, en desacuerdo y totalmente en desacuerdo. El cuestionario se realizó mediante un formulario digital hecho a través de la herramienta Google Forms, y fue aplicado a potenciales usuarios de la aplicación. A continuación se muestra el modelo del mismo. (Ver Figura 21) CAPÍTULO III MARCO APLICATIVO 60 Figura 21: Modelo de cuestionario de usabilidad CAPÍTULO III MARCO APLICATIVO 61 A continuación, se presentan los resultados de la encuesta: El ítem N° 1 muestra que el 60% de los usuarios está totalmente de acuerdo y el otro 40% se encuentran de acuerdo con que los contenidos y servicios ofrecidos son precisos y completos. (Ver Figura 22) Figura 22: Cuestionario de usabilidad – Ítem N° 1 La Figura 23 refleja los resultados obtenidos del ítem N° 2 en donde el 83% de los usuarios está totalmente de acuerdo con la estructura general de la aplicación, mientras que el otro 20% se encuentra de acuerdo con dicha estructura. Figura 23: Cuestionario de usabilidad – Ítem N° 2 CAPÍTULO III MARCO APLICATIVO 62 El ítem N° 3 preguntaba si el diseño general del sistema era reconocible, en la Figura 24 se muestran los resultados donde se obtuvo que el 60% de los usuarios está totalmente de acuerdo y el otro 40% se encuentra de acuerdo. Figura 24: Cuestionario de usabilidad – Ítem N° 3 La Figura 25 contiene los resultados del ítem N° 4 relacionado a la coherencia del diseño general del sitio web, donde el 60% está totalmente de acuerdo y el otro 40% se encuentra de acuerdo. Figura 25: Cuestionario de usabilidad – Ítem N° 4 CAPÍTULO III MARCO APLICATIVO 63 El ítem N° 5 preguntaba si la aplicación puede usarse de manera intuitivamente, los resultados reflejaron que el 60% de los encuestados se encuentran totalmente de acuerdo y el otro 40% sólo de acuerdo. (Ver Figura 26) Figura 26: Cuestionario de usabilidad – Ítem N° 5 En la Figura 27 se presenta el ítem N° 6 de la encuesta, en donde se puede observar que el 100% de los encuestados está totalmente de acuerdo con que el logotipo es identificable y suficientemente visible. Figura 27: Cuestionario de usabilidad – Ítem N° 6 CAPÍTULO III MARCO APLICATIVO 64 El ítem N° 7 refleja que el 60% de los encuestados están totalmente de acuerdo con los colores utilizados en la aplicación, y el otro 40% se encuentra de acuerdo. (Ver Figura 28) Figura 28: Cuestionario de usabilidad – Ítem N° 6 La Figura 29 muestra que el 100% de los encuestados está totalmente de acuerdo con que la aplicación contempla una interfaz limpia y sin ruido visual. Figura 29: Cuestionario de usabilidad – Ítem N° 6 CAPÍTULO III MARCO APLICATIVO 65 El presente capítulo definió cómo se llevó a cabo la adaptación de la metodología Programación Extrema (XP), describiendo cada una de sus fases durante el ciclo de proceso de desarrollo de SISGIU. Una vez culminado dicho ciclo, se puede afirmar que se lograron efectuar por completo los objetivos planteados para este Trabajo Especial de Grado. CAPÍTULO IV RESULTADOS 66 CAPÍTULO IV RESULTADOS En el presente capítulo se muestran los resultados del producto obtenido tras la finalización del proceso de desarrollo de la aplicación Web SISGIU. SISGIU está compuesta por cuatro módulos los cuales son: Administrador, Estudiante, Personal Docente y Personal Administrativo. La integración de estos módulos permite llevar a cabo la gestión académica y administrativa del Instituto de Urbanismo de la UCV. En la Figura 30 se presenta el diagrama de flujo del usuario “Estudiante” y los respectivos procesos que éste puede realizar. El estudiante primero debe autenticarse, para seguidamente poder realizar cualquiera de las acciones que le competen, éstas son, realizar su inscripción, en donde éste elige la opción “Inscribirse”, seguidamente debe seleccionar las asignaturas que desea cursar y confirmar la operación. Otra acción que puede efectuar es descargar constancias de inscripción, culminación, notas, entre otras. También, puede gestionar los datos de su perfil, visualizar su historial académico, su horario de clases y la programación académica del próximo periodo. Figura 30: Diagrama de Flujo del usuario Estudiante. CAPÍTULO IV RESULTADOS 67 En la Figura 31 se presenta el diagrama de flujo del usuario “Personal Docente”. Al igual que el estudiante, éste debe pasar por el proceso de autenticación; una vez hecho esto, podrá realizar acciones como la gestión de su perfil, descargar la planilla de estudiantes de las asignaturas que éste imparte, cargar las notas de los mismos, descargar constancias, ver la programación académica y generar reportes. Figura 31: Diagrama de Flujo del usuario Personal Docente. La Figura 32 muestra el diagrama de flujo del usuario “Personal Administrativo”. Nuevamente, éste debe autenticarse en el sistema antes de poder realizar cualquier acción que le corresponda, como: descargar una planilla con los estudiantes inscritos en los periodos en curso, consultar la información básica del personal docente y los estudiantes; de estos últimos, puede visualizar su historial académico, cambiar el estatus de pago de inscripción y modificar la misma de cada uno de ellos. Además, puede gestionar su perfil de igual forma que los dos usuarios descritos anteriormente. Por último, se encuentra la funcionalidad de generación de reportes en donde se descarga en formato PDF información e indicadores de cada periodo luego de haber realizado un filtrado previo. CAPÍTULO IV RESULTADOS 68 Figura 32: Diagrama de Flujo del usuario Personal Administrativo. Finalmente, la Figura 33 muestra el diagrama de flujo del usuario “Administrador”. Éste es el encargado de la gestión de usuarios, asignaturas y períodos (creación, edición y eliminación). Además, es el encargado de iniciar los periodos lectivos y finalizarlos. También puede ver la programación académica y editar su perfil. CAPÍTULO IV RESULTADOS 69 Figura 33: Diagrama de Flujo del usuario Administrador. 4.1 Página Principal La Figura 34 muestra la página principal de la aplicación, en esta se observa que únicamente se encuentra el formulario de inicio de sesión y la opción de recuperación de contraseña. Para ingresar a esta sección no es requerido haber iniciado sesión previamente. CAPÍTULO IV RESULTADOS 70 Figura 34: Página Principal de SISGIU. 4.1.1 Sección de créditos Es donde residen los datos de los desarrolladores de la aplicación así como los datos del tutor del proyecto. (Ver Figura 35) Figura 35: Sección de créditos. 4.2 Sección de Recuperación de Contraseña En la Figura 36 se muestra el panel que permite la opción de restablecer la contraseña de un usuario. CAPÍTULO IV RESULTADOS 71 Figura 36: Sección de Recuperación de Contraseña. 4.2.1 Correo Electrónico de Recuperación de Contraseña En la Figura 37 se muestra el correo electrónico que se le envía al usuario una vez ingresó su número de identificación en la sección de recuperación de contraseña. Figura 37: Correo Electrónico de Recuperación de Contraseña. 4.2.2 Selección de nueva contraseña En la Figura 38 se muestra la fase final de recuperación de contraseña, donde finalmente el usuario debe indicar cuál será su nueva contraseña de ingreso. CAPÍTULO IV RESULTADOS 72 Figura 38: Selección de nueva contraseña de usuario. 4.3 Módulo del Administrador En este módulo se encuentran todas las funcionalidades que le competen al usuario Administrador, las cuales se encuentran distribuidas en submódulos (Inicio, Usuarios, Asignaturas, Periodo y Programación Académica) y se describen a continuación. 4.3.1 Inicio del Administrador En la Figura 39 se presenta la página de inicio del Administrador, en donde se muestra del lado derecho una lista con los periodos que se encuentran en inscripción o activos. Del lado izquierdo se localiza la foto del Administrador, su nombre, cédula o pasaporte, el módulo al cual pertenece y las opciones de ir al perfil y cerrar sesión. CAPÍTULO IV RESULTADOS 73 Figura 39: Módulo de Administrador - Inicio 4.3.2 Perfil del Administrador 4.3.2.1 Información Básica En la Figura 40 se muestra la información básica del Administrador con la capacidad de actualizarla cuando se requiera. Esta sección es similar a la edición de perfil de cualquier usuario. Figura 40: Módulo de Administrador - Perfil - Información Básica. CAPÍTULO IV RESULTADOS 74 4.3.2.2 Cambio de Contraseña En la Figura 41 se presenta la sección de cambio de contraseña del Administrador, donde se muestra un formulario donde se solicita la nueva contraseña y una confirmación de la misma. La interfaz de cambio de contraseña es similar para cada uno de los diferentes usuarios. Figura 41: Módulo de Administrador - Perfil - Cambio de Contraseña. 4.3.2.3 Cambio de Foto En la Figura 42 se presenta la sección de cambio de foto de usuario. El formato de archivo válido para cargar una foto es JPG o PNG. La interfaz de cambio de foto es similar para cada uno de los diferentes usuarios. CAPÍTULO IV RESULTADOS 75 Figura 42: Módulo de Administrador - Perfil - Cambio de Foto 4.3.3 Módulo de Usuarios Se encarga de la gestión de todos los usuarios pertenecientes al sistema, es donde se podrán agregar, editar y eliminar cada uno de ellos según sea requerido. 4.3.3.1 Lista de Estudiantes La Figura 43 presenta el listado de los estudiantes pertenecientes al sistema, esta interfaz permite la realización de búsquedas de estudiantes puntuales (a través de su nombre, apellido o número de identificación). También provee la funcionalidad de agregar nuevos estudiantes al sistema, editar y consultar su información y eliminación de los mismos. Estas últimas funcionalidades se muestran a continuación, dichas funcionalidades son similares para cada uno de los roles de usuario. CAPÍTULO IV RESULTADOS 76 Figura 43: Módulo de Administrador - Lista de Estudiantes. 4.3.3.1.1 Agregar Estudiante Permite agregar nuevos estudiantes al sistema, para ello debe completar el formulario provisto por la aplicación, éste puede ser visualizado en la Figura 44. CAPÍTULO IV RESULTADOS 77 Figura 44: Módulo de Administrador - Agregar Estudiante. 4.3.3.1.2 Editar Estudiante Permite consultar y editar datos específicos de un estudiante, cambiando los campos del formulario que la aplicación despliega. (Ver Figura 45) CAPÍTULO IV RESULTADOS 78 Figura 45: Módulo de Administrador - Editar Estudiante. 4.3.3.1.3 Eliminar Estudiante Provee la opción de eliminar a un estudiante por completo del sistema, en caso de que dicho usuario posea diferentes roles en el sistema, todos serán eliminados. (Ver Figura 46) CAPÍTULO IV RESULTADOS 79 Figura 46: Módulo de Administrador - Eliminar Estudiante. 4.3.3.2 Lista de Docentes La Figura 47 presenta el listado del Personal Docente pertenecientes al sistema, esta interfaz permite la realización de búsquedas de docentes puntuales (a través de su nombre, apellido o número de identificación). También provee la funcionalidad de agregar nuevos docentes al sistema, editar y consultar su información y eliminación de los mismos. Figura 47: Módulo de Administrador - Lista de Docentes. 4.3.3.3 Lista de Personal Administrativo La Figura 48 presenta el listado del Personal Administrativo pertenecientes al sistema, esta interfaz permite la realización de búsquedas CAPÍTULO IV RESULTADOS 80 de usuarios puntuales (a través de su nombre, apellido o número de identificación). También provee la funcionalidad de agregar nuevos usuarios al sistema, editar y consultar su información y eliminación de los mismos. Figura 48: Módulo de Administrador - Lista de Personal Administrativo. 4.3.3.4 Lista de Administradores La Figura 49 presenta el listado de Administradores pertenecientes al sistema, esta interfaz permite la realización de búsquedas de administradores puntuales (a través de su nombre, apellido o número de identificación). También provee la funcionalidad de agregar nuevos administradores al sistema, editar y consultar su información y eliminación de los mismos. CAPÍTULO IV RESULTADOS 81 Figura 49: Módulo de Administrador - Lista de Administradores. 4.3.4 Módulo de Asignaturas Se encarga de la gestión de las asignaturas pertenecientes al sistema, es donde se podrán agregar, editar y eliminar cada una de ellas según sea requerido. 4.3.4.1 Lista de Asignaturas La Figura 50 presenta el listado de Asignaturas pertenecientes al sistema, esta interfaz permite la realización de búsquedas de asignaturas puntuales (a través de su nombre o código). También provee la funcionalidad de agregar nuevas asignaturas al sistema, editar y consultar su información y eliminación de las mismas. CAPÍTULO IV RESULTADOS 82 Figura 50: Módulo de Administrador - Lista de Asignaturas. 4.3.4.1.1 Agregar Asignatura Provee la función de agregar nuevas asignaturas al sistema, para ello debe completar el formulario provisto por la aplicación, éste puede ser visualizado en la Figura 51. Figura 51: Módulo de Administrador - Agregar Asignatura. CAPÍTULO IV RESULTADOS 83 4.3.4.1.2 Editar Asignatura Permite consultar y editar datos específicos de un estudiante, cambiando los campos del formulario que la aplicación despliega. (Ver Figura 52) Figura 52: Módulo de Administrador - Editar Asignatura. 4.3.4.1.3 Eliminar Asignatura Brinda la opción de eliminar a una asignatura por completo del sistema. La aplicación desplegará una interfaz donde se solicitará confirmación por parte del usuario (Ver Figura 53). Figura 53: Módulo de Administrador - Eliminar Asignatura. CAPÍTULO IV RESULTADOS 84 4.3.5 Módulo de Periodos Se encarga de la gestión de todos los períodos pertenecientes al sistema, es donde se podrán agregar, editar, eliminar e iniciar cada uno de ellos según sea requerido. (Ver Figura 54) 4.3.5.1 Lista de Periodos Figura 54: Módulo de Administrador - Lista de Periodos. 4.3.5.1.1 Agregar Período Permite agregar nuevos periodos al sistema, para ello debe completar el formulario provisto por la aplicación, éste puede ser visualizado en la Figura 55. CAPÍTULO IV RESULTADOS 85 Figura 55: Módulo de Administrador - Agregar Período. 4.3.5.1.2 Editar Periodo Se encuentra separada en tres pasos: primero debe seleccionar una asignatura de las permitidas para el tipo de postgrado del periodo previamente escogido. El segundo paso consiste en escoger los horarios correspondientes a la asignatura seleccionada, los horarios consisten en indicar el docente que dará clases sobre la asignatura elegida anteriormente, los días de la semana, horas y el piso donde se dará lugar la clase. (Ver Figura 56) CAPÍTULO IV RESULTADOS 86 Figura 56: Módulo de Administrador - Editar Período. 4.3.5.1.2.1 Confirmar Cambios de Edición de Periodo Corresponde al tercer paso de edición de periodo. Consiste en una interfaz donde se muestran todos los horarios creados en los pasos anteriores, para asegurarse de que no existe ningún error, con la posibilidad de borrar uno a uno los posibles horarios creados de forma errónea y por último un botón de guardar. (Ver Figura 57) Figura 57: Módulo de Administrador - Confirmar Cambios de Edición de Período. CAPÍTULO IV RESULTADOS 87 4.3.5.1.3 Eliminar Periodo Brinda la opción de eliminar un período por completo del sistema. La aplicación desplegará una interfaz donde se solicitará confirmación por parte del usuario (Ver Figura 58). Figura 58: Módulo de Administrador - Eliminar Período. 4.3.6 Módulo de Programación Académica Provee la visualización en detalle de las asignaturas que se van a ofertar para el próximo periodo lectivo, con el fin de que los estudiantes estén informados a la hora de inscribirse, cuales son los horarios y docentes de cada una de ellas. Este módulo se encuentra en todos los roles de usuario. (Ver Figura 59) Figura 59: Módulo de Administrador - Programación Académica. CAPÍTULO IV RESULTADOS 88 4.4 Módulo de Estudiante Se encuentran todas las funcionalidades que le competen al usuario Estudiante, las cuales están distribuidas en diferentes submódulos (Inicio, Historial Académico, Constancias y Programación Académica) y se describen a continuación. 4.4.1 Inicio de Estudiante En la Figura 60 se presenta la página de inicio del Estudiante, en donde se muestra del lado izquierdo su foto, nombre, número de identificación, el módulo al cual pertenece y las opciones de ir al perfil y cerrar sesión. Del lado derecho se muestra un botón que brinda la opción de realizar su inscripción. Éste botón aparece únicamente cuando el periodo en cuestión se encuentra con el estado “en inscripción”. En caso de que el estudiante ya se encuentre cursando actualmente un periodo, se mostrará su horario (Ver Figura 61). Figura 60: Módulo de Estudiante - Inicio de Estudiante por Inscribirse. CAPÍTULO IV RESULTADOS 89 Figura 61: Módulo de Estudiante - Inicio de Estudiante Inscrito. 4.4.1.1 Inscripción de Período Permite agregar las asignaturas que desea cursar durante el próximo periodo, en la Figura 62 se muestra el panel de selección de las mismas donde el estudiante puede agregar o remover asignaturas a conveniencia, tomando en cuenta de que tiene una cantidad máxima de asignaturas para inscribir (esta depende del tipo de postgrado). Figura 62: Módulo de Estudiante - Inscripción de Período. CAPÍTULO IV RESULTADOS 90 4.4.2 Historial Académico Brinda la posibilidad de visualizar el expediente académico. En el mismo se detallan cada uno de los períodos que el estudiante ha cursado, sus notas, y una sección de información estadística que indican sobre su rendimiento en general (Ver Figura 63). Figura 63: Módulo de Estudiante - Historial Académico. 4.4.3 Constancias Provee al usuario la opción de descargar cualquiera de las diferentes constancias disponibles dentro de la aplicación (Ver Figura 64). CAPÍTULO IV RESULTADOS 91 Figura 64: Módulo de Estudiante - Constancias. 4.4.3.1 Constancia de Estudios Permite descargar una constancia de estudios para el estudiante que la solicite, en la Figura 65 se puede observar el PDF de la misma con los datos del estado actual del estudiante. CAPÍTULO IV RESULTADOS 92 Figura 65: Módulo de Estudiante - Constancia de Estudios. 4.5 Módulo de Personal Docente Se encuentran todas las funcionalidades que le competen al usuario Personal Docente, las cuales están distribuidas en submódulos (Inicio, Cargar Notas, Constancias, Programación Académica y Reportes) y se describen a continuación. 4.5.1 Inicio de Personal Docente En la Figura 66 se presenta la página de inicio del Personal Docente, en donde se muestra del lado izquierdo su foto, nombre, número de identificación, el módulo al cual pertenece y las opciones de ir al perfil y cerrar sesión. Del lado derecho se muestra una lista de las asignaturas que imparte el docente junto con CAPÍTULO IV RESULTADOS 93 un botón que permite descargar una planilla con la lista de estudiantes que se encuentran cursando dicha asignatura y sus respectivas notas (Ver Figura 67). Figura 66: Módulo Personal Docente - Inicio. CAPÍTULO IV RESULTADOS 94 Figura 67: Módulo Personal Docente - Planilla de Asignatura. 4.5.2 Cargar Notas Brinda la opción a un docente de cargar las notas de los estudiantes de cualquiera de las asignaturas que éste imparte. Primero debe seleccionar una de sus asignaturas, de modo que se desplegará la lista de los estudiantes de la misma. El docente puede filtrar la lista desplegada a través de una búsqueda (por nombre, apellido y número de identificación). Por último, podrá asignar las notas escribiendo la misma en el campo llamado “Nota” y presionando el botón guardar. (Ver Figura 68) CAPÍTULO IV RESULTADOS 95 Figura 68: Módulo Personal Docente - Cargar Notas. 4.6 Módulo de Personal Administrativo Se encuentran todas las funcionalidades que le competen al usuario Personal Administrativo, las cuales se encuentran en submódulos (Inicio, Inscripciones, Usuarios y Programación Académica) y se describen a continuación. 4.6.1 Inicio de Personal Administrativo En la Figura 69 se presenta la página de inicio del Personal Administrativo, en donde se muestra del lado izquierdo su foto, nombre, número de identificación, el módulo al cual pertenece y las opciones de ir al perfil y cerrar sesión. Del lado derecho se muestra una lista de los periodos activos en cada uno de los tipos de postgrado junto con un botón para descargar una planilla con la lista de estudiantes pertenecientes a dicho periodo (Ver Figura 70). CAPÍTULO IV RESULTADOS 96 Figura 69: Módulo Personal Administrativo - Inicio. CAPÍTULO IV RESULTADOS 97 Figura 70: Módulo Personal Docente - Planilla de Estudiantes por Período. 4.6.2 Módulo de Inscripciones Esta funcionalidad permite cambiar el estado de pago de inscripción de los estudiantes para el próximo periodo, de manera que si al iniciar un periodo, el estudiante tiene un estatus de “pagado” en falso, no podrá cursar el periodo (Ver Figura 71). Además, se muestra un botón para editar la inscripción del estudiante, esto se explica más adelante. CAPÍTULO IV RESULTADOS 98 Figura 71: Módulo Personal Administrativo - Estatus de Pago de Inscripción de Estudiantes. 4.6.2.1 Editar Inscripción de Estudiante Brinda la opción de visualizar información básica del estudiante sin posibilidad de modificarla. También provee un panel de selección de asignaturas que permite modificar las asignaturas que el estudiante inscribió, ya sea para agregar nuevas o remover las ya existentes. (Ver Figura 72) CAPÍTULO IV RESULTADOS 99 Figura 72: Módulo Personal Administrativo - Modificación de Asignaturas Inscritas por Estudiante. 4.6.3 Módulo de Usuarios Brinda la opción de buscar por número de identificación a un Estudiante o un Docente a través de un panel de búsqueda mostrado en la Figura 74, con el fin de poder visualizar sus datos. 4.6.3.1 Búsqueda de Estudiantes En el caso de la búsqueda de estudiantes, al ingresar un número de identificación válido, se desplegará un botón que permite observar todos los datos personales del estudiante (Ver Figura 73). Además, se mostrará el historial Académico del estudiante donde a su vez, al final de la interfaz se CAPÍTULO IV RESULTADOS 100 encuentra un botón que brinda la opción de retirar al estudiante por completo del periodo en curso (Ver Figura 74). Figura 73: Módulo Personal Administrativo - Datos Personales de Estudiante. CAPÍTULO IV RESULTADOS 101 Figura 74: Módulo Personal Administrativo - Historial Académico de Estudiante. 4.6.3.2 Búsqueda de Docentes En el caso de la búsqueda de docentes, al escribir un número de identificación válido, se desplegará un botón que permite observar todos los datos personales del docente (Ver Figura 75). CAPÍTULO IV RESULTADOS 102 Figura 75: Módulo Personal Administrativo - Datos Personales de Docente. 4.6.4 Módulo de Reportes Provee la opción de descargar en formato PDF un reporte con la información de cada uno de los periodos que han existido alguna vez. Este reporte CAPÍTULO IV RESULTADOS 103 puede generarse siguiente un filtrado para que únicamente se muestre información de interés. En la Figura 76 se muestra la interfaz de generación de reportes en donde se observa que primero se debe escoger un tipo de postgrado, seguido de un periodo en específico, y finalmente realizar el filtrado de la información de interés. Figura 76: Módulo Personal Administrativo – Reportes A continuación, se muestra un ejemplo de un reporte donde fueron escogidos todas las opciones pertenecientes al panel de filtrado. CAPÍTULO IV RESULTADOS 104 Figura 77: Módulo Personal Administrativo – Reportes: Asignaturas dictadas CAPÍTULO IV RESULTADOS 105 Figura 78: Módulo Personal Administrativo – Reportes: Docentes Figura 79: Módulo Personal Administrativo – Reportes: Estudiantes inscritos. CAPÍTULO IV RESULTADOS 106 Figura 80: Módulo Personal Administrativo – Reportes: Estudiantes aprobados. CAPÍTULO IV RESULTADOS 107 Figura 81: Módulo Personal Administrativo – Reportes: Estudiantes reprobados. CAPÍTULO IV RESULTADOS 108 Figura 82: Módulo Personal Administrativo – Reportes: Estudiantes retirados. CAPÍTULO IV RESULTADOS 109 Figura 83: Módulo Personal Administrativo – Reportes: Información detallada del periodo. CONCLUSIONES 110 CONCLUSIONES El objetivo planteado en el desarrollo del proyecto constaba de la creación de una aplicación para la gestión de los procesos académicos y administrativos del Departamento de Docencia del Instituto de Urbanismo de La Universidad Central de Venezuela, SISGIU, logra de manera eficiente y eficaz cubrir gran cantidad de los procesos de gestión académicos-administrativos actuales que urgían una modernización y requerían una mejora, como lo son: las inscripciones, la carga de notas, la visualización de expedientes académicos, entre otros. Gracias a la metodología escogida, el desarrollo del sistema resulto ser organizado, partiendo desde el diseño general, continuando con la codificación y manteniendo mejora continua del sistema en base a los detalles destacados por el cliente, lo cual logró que se cumplieran cada uno de los objetivos planeados. Por otro lado, se debe señalar el aporte tecnológico de las herramientas y la metodología utilizada para el desarrollo del sistema, mediante las cuales se logró dar con la solución de manera precisa. El uso del sistema manejador de bases de datos PostgreSQL permitió, de manera sencilla, acoplar la correcta persistencia de datos, resguardando la información de la aplicación de forma ideal. Además, el empleo del framework Django para el desarrollo web proporcionó un desarrollo ágil y efectivo de un API robusto y rápido que, en conjunto con el framework ReactJS, concedió una integración entre la lógica de negocio y las interfaces de usuario ideal para cualquier aplicación web. Aunado a esto, gracias al uso de XP, se diseñó el sistema de manera estructurada e idónea, siguiendo un proceso esquematizado y fácil de utilizar, acoplándose a los cambios que el DD-IU requería. A todo esto, las tecnologías usadas en el desarrollo de este Trabajo Especial de Grado por ser software libre, no implicaron ningún costo monetario. La aplicación desarrollada tiene por nombre “SISGIU”. Fue llevada a cabo siguiendo buenas prácticas de desarrollo, cumpliendo así con propiedades como la escalabilidad, usabilidad, portabilidad, seguridad, entre otras. De manera que su crecimiento, por otros desarrolladores, presentará una tarea sencilla. Por último, se destaca que la implementación de este Trabajo Especial de Grado permitió dar un aporte importante al Departamento de Docencia del Instituto de CONCLUSIONES 111 Urbanismo de la Universidad Central de Venezuela, logrando mejorar, optimizar y modernizar una gran cantidad de procesos académicos - administrativos. RECOMENDACIONES 112 RECOMENDACIONES Aunque SISGIU trae consigo muchos aportes y modernizaciones al DD-IU de la UCV, no queda exento de tener algunas recomendaciones para trabajos futuros en pro de seguir mejorando procesos y evolucionando el sistema. A continuación se presentan algunas de ellas:  Crear un módulo informativo en la página principal con noticias de interés para todos los usuarios de SISGIU.  Añadir un módulo que brinde información estadística para el uso del personal Administrativo y Administradores del IU.  Incorporar un módulo para poder trabajar el Trabajo Especial de Grado, incluyendo la designación de jurados y calificación final.  Integrar un módulo para la gestión de trámites académicos por parte de los estudiantes del IU. Como por ejemplo: retiros, desincorporaciones, pasantías, reconocimiento de créditos, solicitud de jurado para Trabajo Especial de Grado, entre otros. REFERENCIAS BIBLIOGRÁFICAS Y DIGITALES 113 REFERENCIAS BIBLIOGRÁFICAS Y DIGITALES Barry, D. K. (2016). Service Architecture. Obtenido de http://www.service- architecture.com/articles/web-services/service- oriented_architecture_soa_definition.html Blasco, L., Murcia, J., & Mifsud, E. (2013). Aplicaciones web. Madrid: McGraw-Hill. Boichu, K. (2012). Comprendiendo el Patrón Model View Controller (MVC). Obtenido de https://codesystems.wordpress.com/2012/02/26/comprendiendo-el-patron-model- view-controller-mvc/ Bootstrap. (2015). The world's most popular mobile-first and responsive front-end framework. Obtenido de http://getbootstrap.com/ CONEST. (2007). Obtenido de http://conest.ciens.ucv.ve/webapp/ CONEST. (2007). CONEST. Obtenido de http://conest.ciens.ucv.ve/webapp/ Copeems. (2014). http://www.copeems.mx. Obtenido de http://www.copeems.mx/glosario/Glosario-1/P/Procesos-acad%C3%A9micos- internos-73/ Denzer, P. (2012). PostgreSQL. Obtenido de http://profesores.elo.utfsm.cl/~agv/elo330/2s02/projects/denzer/informe.pdf Eguíluz, J. (2008). Introducción a JavaScript. Obtenido de http://www.jesusda.com/docs/ebooks/introduccion_javascript.pdf Facebook. (2018). reactjs. Obtenido de React Official Documentation: https://reactjs.org/docs/ Ferguson, P., & Flanagan, D. (2002). JavaScript: The Definitive Guide. Guevara, E., & Zúñiga, A. (2015). Desarrollo del sistema de gestión académica CONEST para la Coordinación de Postgrado de la Facultad de Ciencias. Módulos de migración de datos, administración e inscripción. Obtenido de http://saber.ucv.ve/bitstream/123456789/13688/1/Tesis.pdf Gutiérrez Gómez, I., & Otón Tortosa, S. (2005). Service Oriented Architecture. Obtenido de http://ftp.informatik.rwth-aachen.de/Publications/CEUR-WS/Vol-132/paper09.pdf REFERENCIAS BIBLIOGRÁFICAS Y DIGITALES 114 Helpdesk, I. (2009). IPR Helpdesk. Obtenido de http://www.innovaccess.eu/sites/default/files/softwarecopyright_0000001105_00.xm l.pdf Herrera, I. (2016). Desarrollo del Sistema de Gestión de Pasantías de la Escuela de Computación de la Facultad de Ciencias bajo el enfoque de Gestión de Procesos de Negocio. Obtenido de http://saber.ucv.ve/bitstream/123456789/14734/1/TEG%20Bonita-SIGEPAS%20- %20Isaac%20Herrera.pdf http://www.ciens.ucv.ve. (s.f.). Obtenido de http://www.ciens.ucv.ve/postulacion_postgrado IBM. (s.f.). IBM Knowledge Center. Patrón de diseño modelo-vista-controlador. Obtenido de https://www.ibm.com/support/knowledgecenter/es/SSZLC2_8.0.0/com.ibm.commerc e.developer.doc/concepts/csdmvcdespat.htm Koontz, & Weihrich. (2010). Administración - Una Perspectiva Global. México: 11° Edición. Luján, S. M. (2002). Programación de Aplicaciones Web. Alicante: ECU. Márquez, B., & Zulaica, J. (2004). Implementación de un reconocedor de voz gratuito al sistema de ayuda a invidentes Dos-Vox en español (tesis de pregrado). Choula. Microsoft Corporation. (2010). Microsoft Application Architecture Guide. Estados Unidos: 2nd Edition. Mozilla Developer Network. (s.f.). Acerca de JavaScript - JavaScript. Obtenido de https://developer.mozilla.org/es/docs/Web/JavaScript/Acerca_de_JavaScript Peñafiel, M. (2013). es.scribd.com. Obtenido de https://es.scribd.com/doc/136052164/APLICACIONES-WEB-pdf Rojo, S. (Abril de 2012). Requerimientos no Funcionales para Aplicaciones Web. Obtenido de http://sedici.unlp.edu.ar/bitstream/handle/10915/33033/Documento_completo.pdf? sequence=1 SIPEGAS. (2017). Obtenido de SIGEPAS: http://www.ciens.ucv.ve/sigepas Sommerville, I. (2005). Ingeniería del Software. Madrid: Pearson. Sulbarán, N., & Pedrozo, G. (Octubre de 2009). Obtenido de Desarrollo de un módulo que permita manejar eventos dentro de los procesos modelados para el prototipo de la aplicación Web de gestión de Procesos Académicos de la Coordinación de Postgrado de la Facultad de Ciencias de la Universidad Central de Venezuela: REFERENCIAS BIBLIOGRÁFICAS Y DIGITALES 115 http://saber.ucv.ve/bitstream/123456789/7688/1/Tesis%20Sulbar%C3%A1n- Pedrozo.pdf Sulbarán, N., & Pedrozo, G. (2014). http://saber.ucv.ve. Obtenido de http://saber.ucv.ve/bitstream/123456789/7688/1/Tesis%20Sulbar%C3%A1n- Pedrozo.pdf Suvash, S. (2006). gti. Obtenido de http://www.gti.bh/Library/assets/djangobookwzy482.pdf thegeekswatch. (2016). Obtenido de https://thegeekswatch.blogspot.com/2016/08/framework-wars-django-vs-ruby-on- rails.html Universidad Central de Venezuela. (2009). Universidad Central de Venezuela. Obtenido de http://www.ucv.ve/organizacion/facultades/facultad-de-arquitectura-y- urbanismo/acerca-de-la-facultad/resena-historica.html Universidad de Alicante. (2006). Qué es una aplicación web por el Departamento de Lenguajes y Sistemas Informáticos. Obtenido de https://rua.ua.es/dspace/bitstream/10045/4412/5/03c-AplicacionesWeb.pdf Villazón, D. R. (2014). Revista jovenclub. Obtenido de https://revista.jovenclub.cu/tendencias- y-tecnologias-web-actuales-considerar/#_ENREF_16 W3C. (2014). Introduction - HTML5. Obtenido de https://www.w3.org/TR/html5/introduction.html#introduction W3C. (2018). W3C. Obtenido de http://www.w3c.es/Divulgacion/GuiasBreves/ServiciosWeb W3C. (s.f.). Guía Breve de CSS. Obtenido de http://www.w3c.es/Divulgacion/GuiasBreves/HojasEstilo W3C. (s.f.). w3 School. Obtenido de https://www.w3schools.com/bootstrap/bootstrap_ref_all_classes.asp Wake, J. (2008). Extreme programming explored. Addison-Wesley. Wake, W. (2002). Extreme programming explored. Addison-Wesley. Wells, D. (2009). Extreme Programming: A gentle introduction. Obtenido de http://www.extremeprogramming.org/ ANEXO A Historias de Usuarios 116 ANEXO A Historias de Usuarios En el siguiente apartado se muestran las diferentes historias de usuario que fueron obtenidas a partir de los requerimientos funcionales de SISGIU. Tabla 12 - Historia de Usuario - Editar Perfil de Usuario Historia de Usuario Número: 3 Usuarios: Administrador, Estudiante, Personal Docente y Personal Administrativo. Nombre: Editar Perfil de Usuario. Prioridad en Negocio: 1 Riesgo de Desarrollo: Baja. Programador Responsable: Alejandro Barone y José Castro. Descripción: Función que permite a un usuario cambiar datos personales como por ejemplo: números de contacto, correo electrónico, contraseña, foto, dirección. Observaciones: Tabla 13 - Historia de Usuario - Gestión de Estudiantes. Historia de Usuario Número: 4 Usuarios: Administrador. Nombre: Gestión de Estudiantes. Prioridad en Negocio: 1 Riesgo de Desarrollo: Baja. Programador Responsable: Alejandro Barone y José Castro. Descripción: Función que permite al usuario visualizar, añadir, editar y eliminar datos de los estudiantes pertenecientes a SISGIU. Observaciones: Tabla 14 - Historia de Usuario - Gestión de Asignaturas. Historia de Usuario ANEXO A Historias de Usuarios 117 Número: 5 Usuarios: Administrador. Nombre: Gestión de Asignaturas. Prioridad en Negocio: 1 Riesgo de Desarrollo: Baja. Programador Responsable: Alejandro Barone y José Castro. Descripción: Función que permite al usuario visualizar, añadir, editar y eliminar datos de las asignaturas pertenecientes a SISGIU. Observaciones: Tabla 15 - Historia de Usuario - Gestión de Periodos Historia de Usuario Número: 6 Usuarios: Administrador. Nombre: Gestión de Periodos Prioridad en Negocio: 1 Riesgo de Desarrollo: Baja. Programador Responsable: Alejandro Barone y José Castro. Descripción: Función que permite al usuario visualizar, añadir, editar, eliminar, iniciar y terminar periodos dentro de la aplicación. Observaciones: En la edición de periodo es donde se asignan las asignaturas que se darán en el mismo, junto con los docentes y los horarios respectivos de cada una. Tabla 16 - Historia de Usuario - Inscribirse Historia de Usuario Número: 7 Usuarios: Estudiante. Nombre: Inscribirse Prioridad en Negocio: 1 Riesgo de Desarrollo: Baja. Programador Responsable: Alejandro Barone y José Castro. Descripción: Función que permite a un usuario inscribir las asignaturas que desea cursar en el próximo periodo. Observaciones: El usuario solo podrá seleccionar asignaturas válidas para él mismo. ANEXO A Historias de Usuarios 118 Tabla 17 - Historia de Usuario - Retirar periodo Historia de Usuario Número: 8 Usuarios: Personal Administrativo. Nombre: Retirar periodo Prioridad en Negocio: 1 Riesgo de Desarrollo: Baja. Programador Responsable: Alejandro Barone y José Castro. Descripción: Función que permite al usuario retirar el periodo actual de un estudiante, y de esta manera retirar todas las asignaturas que éste último tenía inscritas. Observaciones: Este proceso lo realiza el personal administrativo debido a que para poder retirar un periodo debe existir una evaluación previa de una solicitud realizada por un estudiante con el fin de especificar el motivo del retiro. Tabla 18 - Historia de Usuario - Ver historial académico Historia de Usuario Número: 9 Usuarios: Estudiante, Personal Administrativo. Nombre: Ver historial académico Prioridad en Negocio: 1 Riesgo de Desarrollo: Baja. Programador Responsable: Alejandro Barone y José Castro. Descripción: Función que permite al estudiante visualizar su historial académico, mientras que para el Personal Administrativo puede visualizar el historial de cualquier estudiante. Observaciones: Tabla 19 - Historia de Usuario - Descargar constancia Historia de Usuario Número: 10 Usuarios: Estudiante, Personal Docente. Nombre: Descargar constancia Prioridad en Negocio: 1 Riesgo de Desarrollo: Baja. Programador Responsable: Alejandro Barone y José Castro. ANEXO A Historias de Usuarios 119 Descripción: Función que permite al usuario descargar en formato PDF cualquiera de las distintas constancias pertenecientes al IU. Observaciones: Tabla 20 - Historia de Usuario - Ver programación académica Historia de Usuario Número: 11 Usuarios: Administrador, Estudiante, Personal Docente y Personal Administrativo. Nombre: Ver programación académica Prioridad en Negocio: 1 Riesgo de Desarrollo: Baja. Programador Responsable: Alejandro Barone y José Castro. Descripción: Función que permite al usuario visualizar la programación académica del próximo periodo para un tipo de postgrado específico. Observaciones: Tabla 21 - Historia de Usuario - Cargar notas Historia de Usuario Número: 12 Usuarios: Personal Docente. Nombre: Cargar notas Prioridad en Negocio: 1 Riesgo de Desarrollo: Baja. Programador Responsable: Alejandro Barone y José Castro. Descripción: Función que permite al usuario asignar las notas de sus estudiantes en una determinada asignatura. Observaciones: Tabla 22 - Historia de Usuario - Descargar planilla de estudiantes Historia de Usuario Número: 13 Usuarios: Personal Docente, Personal Administrativo. ANEXO A Historias de Usuarios 120 Nombre: Descargar planilla de estudiantes Prioridad en Negocio: 1 Riesgo de Desarrollo: Baja. Programador Responsable: Alejandro Barone y José Castro. Descripción: Función que permite al usuario Personal Docente descargar una planilla en formato PDF que contiene la lista de sus estudiantes de una asignatura en específico con sus respectivas notas, mientras que, el Personal Administrativo puede descargar una planilla con todos los estudiantes que cursan un determinado tipo de postgrado en el periodo actual. Observaciones: Tabla 23 - Historia de Usuario - Modificar inscripción de estudiante Historia de Usuario Número: 14 Usuarios: Personal Administrativo. Nombre: Modificar inscripción de estudiante Prioridad en Negocio: 1 Riesgo de Desarrollo: Baja. Programador Responsable: Alejandro Barone y José Castro. Descripción: Función que permite al usuario cambiar el estado de pago de inscripción de un estudiante y cambiar las asignaturas inscritas por el mismo. Observaciones: Tabla 24 - Historia de Usuario – Generación de reportes Historia de Usuario Número: 15 Usuarios: Personal Administrativo, Personal Docente Nombre: Generación de reportes Prioridad en Negocio: 1 Riesgo de Desarrollo: Baja. Programador Responsable: Alejandro Barone y José Castro. Descripción: Función que permite al usuario generar reportes detallados con información concerniente a cada uno de los periodos dados en el IU. Observaciones: ANEXO B Prototipos de Interfaz 121 ANEXO B Prototipos de Interfaz En el siguiente apartado se muestran todos los prototipos de interfaz de usuario que fueron elaborados en la fase de diseño de la adaptación de la metodología XP. Figura 84: Editar Perfil de Estudiante. Figura 85: Inscripción de Estudiante. ANEXO B Prototipos de Interfaz 122 Figura 86: Historial Académico de Estudiante. Figura 87: Inicio de Personal Docente. ANEXO B Prototipos de Interfaz 123 Figura 88: Editar Perfil de Personal Docente. Figura 89: Cargar Notas de los Estudiantes. ANEXO B Prototipos de Interfaz 124 Figura 90: Módulo de Constancias. Figura 91: Inicio de Personal Administrativo. ANEXO B Prototipos de Interfaz 125 Figura 92: Módulo de Estudiantes en Personal Administrativo. Figura 93: Inicio de Administrador. ANEXO B Prototipos de Interfaz 126 Figura 94: Módulo de Usuarios en Administrador. Figura 95: Edición de Usuarios en Administrador. ANEXO B Prototipos de Interfaz 127 Figura 96: Módulo de Asignaturas en Administrador. Figura 97: Agregar Período. ANEXO B Prototipos de Interfaz 128 Figura 98: Editar Período. ANEXO D Manual de Usuario 129 ANEXO C Manual Técnico A continuación se presenta el manual técnico de la aplicación Web SISGIU, el cual guiará en el proceso de configuración del ambiente necesario para poner en ejecución la misma. Además, se mencionan los requerimientos de software necesarios. Requerimientos: ● Lenguaje de Programación: Python 3.5. ● Manejador de Base de Datos: PostgreSQL 9.5. ● Framework: Django 2.0. ● Manejador de paquetes: npm 5.8.0 ● Entorno de ejecución de JavaScript: Node 8.11.1 Una vez se tenga el proyecto en el equipo se deben seguir una serie de pasos para ejecutar la aplicación SISGIU, descritos a continuación: Pasos para la instalación del backend: Paso 1: Instalar Python con el siguiente comando sudo apt-get install python3 Para verificar que se instaló correctamente puede usar el comando python3 -V y este retornará un mensaje con la versión actual de Python. Paso 2: Descargar el manejador de paquetes de Python “pip” con el siguiente comando sudo apt-get install -y python3-pip Paso 3: Instalar “virtualenv” con el fin de poder crear un entorno virtual sudo pip3 install virtualenv Paso 4: Dirigirse al directorio API SISGIU y Crear un entorno virtual cd /<tu_ruta>/SISGIU/API SISGIU/ virtualenv env Paso 5: Activar el entorno virtual source .env/bin/activate Paso 6: Instalar todas las dependencias que se encuentran en el archivo requirements.txt, incluido Django. pip3 install -r API/requirements.txt ANEXO D Manual de Usuario 130 Paso 7: Instalar el manejador de base de datos PostgreSQL sudo apt-get update sudo apt-get install postgresql postgresql-contrib Paso 8: Cambiar la clave del usuario postgres que se crea por defecto ALTER USER postgres WITH PASSWORD 'nueva_contraseña'; Paso 9: Crear la Base de Datos CREATE DATABASE sisgiu; Paso 10: Ir a /<tu_ruta>/SISGIU/API SISGIU/API/API/settings.py e incluir la configuración de la base de datos Paso 11: Crear un usuario administrador para la aplicación python3 manage.py createsuperuser Paso 12: Correr las migraciones python3 manage.py makemigrations python3 manage.py migrate Paso 13: Ejecutar la aplicación python3 manage.py runserver Pasos para la instalación del frontend: Paso 1: Instalar webpack npm install --save webpack@3.11.0 Paso 2: Si el directorio /node:modules/ existe, debe ser eliminado. Paso 3: Instalar las dependencias que se encuentran en el archivo package.json npm install Paso 4: Ejecutar la aplicación npm start ANEXO D Manual de Usuario 131 Paso 5: Ingresar a SISGIU Ya puede ingresar al navegador web, e ingresar en la barra de búsqueda la dirección de la aplicación. Recordatorio: Cabe destacar que el despliegue descrito es para ambientes locales y no productivos. Para un ambiente productivo deberá editar el archivo del frontend ubicado en ‘/<tu_ruta>/src/js/components/globalVariables.jsx’, modificando la línea no comentada colocándole la dirección IP -y el puerto- donde se está ejecutando el API. También debe editar la variable host_react dentro del settings.py del API por la dirección IP donde se está ejecutando el frontend. ANEXO D Manual de Usuario 132 ANEXO D Manual de Usuario SISGIU está compuesta por cuatro módulos, cada uno dedicado a los diferentes usuarios involucrados en el sistema (Administrador, Estudiante, Personal Docente y Personal Administrativo). 1. Gestionar Usuarios 1.1 Iniciar sesión como Administrador. 1.2 Ir a la pestaña “Usuarios” del menú superior. 1.3 Escoger el tipo de usuario (Administrador, Estudiante, Personal Docente o Personal Administrativo). 1.4 Agregar Usuario a) Hacer clic en el botón con el símbolo más (+). b) Completar el formulario con la información requerida. c) Hacer clic en el botón “Guardar”. 1.5 Editar Usuario a) Hacer clic en el botón con el símbolo del lápiz y el papel. b) Actualizar los campos del formulario que desea cambiar. c) Hacer clic en el botón “Guardar”. 1.6 Eliminar Usuario a) Hacer clic en el botón con el símbolo de la papelera. b) Confirmar que realmente desea realizar la acción. Nota: En el caso de eliminar un rol de usuario, también serán eliminados todos los roles asociados a dicho usuario. 2. Gestionar Asignaturas 2.1 Iniciar sesión como Administrador. 2.2 Ir a la pestaña “Asignaturas” del menú superior. 2.3 Agregar Asignatura a) Hacer clic en el botón con el símbolo más (+). b) Completar el formulario con la información requerida. ANEXO D Manual de Usuario 133 c) Hacer clic en el botón “Guardar”. 2.4 Editar Asignatura a) Hacer clic en el botón con el símbolo del lápiz y el papel. b) Actualizar los campos del formulario que desea cambiar. c) Hacer clic en el botón “Guardar”. 2.5 Eliminar Asignatura a) Hacer clic en el botón con el símbolo de la papelera. b) Confirmar que realmente desea realizar la acción. 3. Gestionar Períodos 3.1 Iniciar sesión como Administrador. 3.2 Ir a la pestaña “Períodos” del menú superior. 3.3 Agregar Período a) Hacer clic en el botón con el símbolo más (+). b) Completar el formulario con la información requerida. c) Hacer clic en el botón “Guardar”. 3.4 Editar Periodo a) Hacer clic en el botón con el símbolo del lápiz y el papel. b) Seleccionar una asignatura. c) Completar el formulario para la descripción del horario de esa asignatura y hacer clic en el botón “Guardar”. d) Repetir el paso b y c hasta culminar con todas las asignaturas y horarios que se abrirán en el periodo. e) Hacer clic en el botón con el símbolo de una flecha a la derecha. f) Confirmar que todas las asignaturas y horarios son correctos haciendo clic en el botón “Guardar”. 3.5 Eliminar Periodo a) Hacer clic en el botón con el símbolo de la papelera. b) Confirmar que realmente desea realizar la acción. 3.6 Cambiar el estatus del periodo a “En Inscripción” a) Hacer clic el botón con el símbolo del cohete. b) Confirmar la operación haciendo clic al botón nuevamente. ANEXO D Manual de Usuario 134 3.7 Cambiar el estatus del periodo a “Activo” a) Ingresar a la pestaña “Inicio” b) Hacer clic en el botón “Finalizar Inscripciones” del periodo que se quiere iniciar. c) Confirmar la operación haciendo clic al botón nuevamente. 3.8 Cambiar estatus del periodo a “Finalizado”. a) Ingresar a la pestaña “Inicio” b) Hacer clic en el botón “Terminar Periodo” del periodo que se quiere finalizar. c) Confirmar la operación haciendo clic al botón nuevamente. 4. Ver Programación académica 4.1 Iniciar sesión con cualquier rol de usuario. 4.2 Ir a la pestaña “Programación Académica”. 4.3 Seleccionar el tipo de postgrado a consultar. 5. Editar Perfil 5.1 Iniciar sesión con cualquier rol de usuario. 5.2 Hacer clic en el botón llamado “Perfil” ubicado en el panel izquierdo. 5.3 Realizar los cambios pertinentes. 5.4 Hacer clic en el botón “Guardar”. 6. Recuperar Contraseña 6.1 Hacer clic en donde dice “Olvidé mi contraseña”. 6.2 Ingresar el número de cédula o pasaporte. 6.3 Hacer clic en el botón que dice “Restablecer”. 6.4 Ingresar al correo electrónico asociado a la cuenta de SISGIU. 6.5 Hacer clic en el enlace que fue enviado por correo desde la aplicación. 6.6 Ingresar la contraseña nueva y la confirmación de la misma. 6.7 Hacer clic en el botón que dice “Aceptar”. 7. Inscribirse 7.1 Iniciar sesión como Estudiante. ANEXO D Manual de Usuario 135 7.2 Seleccionar la pestaña “Inicio”. 7.3 Hacer clic en el botón que dice “Inscribirse”. 7.4 Seleccionar las asignaturas que desea inscribir. 7.5 Hacer clic en el botón que dice “Inscribirse”. 8. Ver Historial Académico 8.1 Iniciar sesión como Estudiante. 8.2 Seleccionar la pestaña “Historial Académico”. 9. Descargar una Constancia 9.1 Iniciar sesión como Estudiante o Docente. 9.2 Seleccionar la pestaña “Constancias”. 9.3 Hacer clic en el botón que dice “Descargar” de la constancia deseada. 10. Descargar Planilla de Estudiantes de una Asignatura 10.1 Iniciar sesión como Docente. 10.2 Ir a la pestaña de “Inicio”. 10.3 Hacer clic en el botón que dice “Descargar Planilla” de la asignatura deseada. 11. Cargar Notas 11.1 Iniciar sesión como Docente. 11.2 Ir a la pestaña “Cargar Notas”. 11.3 Seleccionar una de las asignaturas de las que se imparten clases. 11.4 Escribir las notas de los estudiantes en el campo especificado (Calificación). 11.5 Hacer clic en el botón “Guardar”. 12. Descargar Planilla de Estudiantes de un Tipo de Postgrado en el periodo activo. 12.1 Iniciar sesión como Personal Administrativo. 12.2 Ir a la pestaña “Inicio”. 12.3 Hacer clic en el botón “Descargar Planilla” del tipo de postgrado que se desea. 13. Cambiar Estatus de Pago de Inscripción de un Estudiante. ANEXO D Manual de Usuario 136 13.1 Iniciar sesión como Personal Administrativo. 13.2 Ir a la pestaña “Inscripciones”. 13.3 Seleccionar un tipo de postgrado. 13.4 Buscar el estudiante al cual se desea cambiar el estatus de pago. 13.5 Hacer clic en el botón deslizante. 13.6 Hacer clic en el botón “Guardar”. 14. Editar Inscripción de un Estudiante 14.1 Iniciar sesión como Personal Administrativo. 14.2 Ir a la pestaña “Inscripciones”. 14.3 Seleccionar un tipo de postgrado. 14.4 Buscar el estudiante al cual se desea editar su inscripción. 14.5 Hacer clic en el botón con el símbolo del lápiz y el papel. 14.6 Cambiar las asignaturas que cursará el estudiante en el seleccionador. 14.7 Hacer clic en el botón “Guardar”. 15. Consultar información personal de un Docente o un Estudiante. 15.1 Iniciar sesión como Personal Administrativo. 15.2 Ir a la pestaña “Usuarios”. 15.3 Indicar el número de número de cédula o pasaporte. 15.4 Hacer clic en el botón “Buscar”. 15.5 Hacer clic en el botón “Ver información personal”. 16. Retirar a un Estudiante del Periodo Actual 16.1 Iniciar sesión como Personal Administrativo. 16.2 Ir a la pestaña “Usuarios”. 16.3 Indicar el número de número de cédula o pasaporte. 16.4 Hacer clic en el botón “Buscar”. 16.5 Ir al final del historial académico. 16.6 Hacer clic en el botón “Retirar”. 16.7 Confirmar la realización de la acción. ANEXO D Manual de Usuario 137 A continuación se detallan funciones que se deben hacer en la interfaz administrativa avanzada del sistema. Para acceder a ella es necesario entrar a la dirección IP donde se encuentra el API y entrar a la ruta “/admin”. Cualquier usuario administrador del sistema podrá acceder con sus credenciales a esta sección de la aplicación. 1. Agregar un Tipo de Postgrado 1.1 Hacer clic en el botón “Tipo postgrados” ubicado en la sección Usuario. 1.2 Hacer clic en el botón “Add Tipo Posgtrado +”. 1.3 Completar la información del formulario. 1.4 Hacer clic en el botón “Save”. 2. Agregar un Estado Estudiante 2.1 Hacer clic en el botón “Estado estudiantes” ubicado en la sección Usuarios. 2.2 Hacer clic en el botón “Add Estado estudiante +”. 2.3 Completar la información del formulario. 2.4 Hacer clic en el botón “Save”. 3. Agregar un Tipo Asignatura 3.1 Hacer clic en el botón “Tipo asignaturas” ubicado en la sección Asignatura. 3.2 Hacer clic en el botón “Add Tipo asignatura +”. 3.3 Completar la información del formulario. 3.4 Hacer clic en el botón “Save”. 4. Agregar un Estado Periodo 4.1 Hacer clic en el botón “Estado periodos” ubicado en la sección Periodo. 4.2 Hacer clic en el botón “Add Estado periodo +”. 4.3 Completar la información del formulario. 4.4 Hacer clic en el botón “Save”. 5. Eliminar un rol de Usuario 5.1 Hacer clic en el botón del rol que usted desea eliminar, ubicado en la sección Usuario. ANEXO D Manual de Usuario 138 5.2 Seleccione el usuario al cual le desea eliminar el rol. 5.3 Haga clic en el botón “Delete”. 5.4 Confirme su acción seleccionando el botón “Yes, I’m sure”.