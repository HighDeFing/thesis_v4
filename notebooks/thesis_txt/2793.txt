Capítulo I: La Investigación Generador de marcos de trabajo para la gestión de proyectos de informática Trabajo Especial de Grado presentado ante la Ilustre Universidad Central de Venezuela por los bachilleres: Cesar Enrique Rodríguez López Javier Ernesto Prato Vázquez. Para optar al título de Licenciado en Computación Tutores: Dr. MSc. Fernando Martínez. MSc. Esp. Concettina Di Vasta Caracas, Julio 2011 ACTA Quienes suscriben, miembros del Jurado designado por el Consejo de Escuela de Computación, para examinar el Trabajo Especial de Grado presentado por los bachilleres Cesar Enrique Rodríguez López de C.I 14.158.931 y Javier Ernesto Prato Vázquez de C.I 11.035.461, con el título: “Generador de Marcos de Trabajo para la Gestión de Proyectos de Informática”, a los fines de optar al título de Licenciado en Computación, dejen constancia de lo siguiente: Leído como fue, dicho trabajo por cada uno de los miembros del jurado, se fijó el día 25 de Julio de 2011 a las 04:00 pm, para que su autor lo defendiera en forma pública, lo que hizo en el aula PB3 de la Facultad de Ciencias, mediante una presentación oral de su contenido, luego de lo cual respondió las preguntas formuladas. Finalizada la defensa pública del Trabajo Especial de Grado, el jurado decidió aprobarlo. En fé de lo cual se levanta la presente Acta, en Caracas a los 25 días del mes de Julio del año dos mil once (2011) dejándose también constancia de que actuaron como Coordinadores del Jurado el profesor tutor Fernando Martínez y la Profesora tutora Concettina Di Vasta. Fernando Martínez Tutor Firmante Concettina Di Vasta Tutora Prof. Mayerling Márquez Jurado Magister. Freddy Torres Jurado Universidad Central de Venezuela Facultad de Ciencias Escuela de Computación Generador de Marcos de Trabajo para la Gestión de Proyectos de Informática Tutores: Autores: Dr. MSc. Fernando Martínez. Rodríguez L., Cesar E. 14.158.931 MSc. Esp. Concettina Di Vasta Prato V., Javier E. 11.035.461 Caracas, Julio 2011 Resumen El objetivo principal de este Trabajo Especial de Grado consistió en la elaboración de una aplicación que permita la construcción de un Marco de Trabajo para una organización en Venezuela basado en el Modelo Genérico de Gestión de Proyectos, permitiendo así que los Directores de Proyectos definan un marco de trabajo de manera racional para su organización. Esto se puede hacer en base a algún marco de trabajo ya existente o creando su propio Marco de Trabajo para la gestión de proyectos. Para lograr este objetivo se desarrolló la interfaz de usuario, modelos de datos correspondientes, además del conjunto de funcionalidades que permitieron el desarrollo de la aplicación, así como los manuales de usuario y sistema. Se presentó el proceso de construcción de un Marco de Trabajo específico para la Gestión de Proyectos de Informática soportado por una aplicación llamada “Generador de Marcos de Trabajo para la Gestión de Proyectos”. Esta aplicación permitió describir un conjunto de Marcos de Referencia y Marcos de Trabajo formando una base de conocimiento en Gestión Gerencial y en Gestión Técnica de Proyectos de Informática. Además soporta la construcción de un Marco de Trabajo para la Gestión Gerencial y/o un Marco de Trabajo para la Gestión Técnica, adaptado a las necesidades de organizaciones en Venezuela. El proceso de desarrollo de un nuevo Marco de Trabajo para la Gestión de Proyectos partiendo de una adaptación de los Marcos de Referencia y/o Marcos de Trabajo existentes es una práctica usada por algunas organizaciones en Venezuela. Hecho evidenciado al describir Marcos de Trabajo usados en Venezuela. PALABRAS CLAVES: Proyecto, Proyecto de Informática, Marco de Trabajo, Marco de Referencia. i Índice Índice de Figuras ................................................................................................. iii Índice de Tablas ................................................................................................... iv Introducción .......................................................................................................... 1 Capítulo I: La Investigación ................................................................................... 2 1.1. Antecedentes del Problema ....................................................................... 2 1.2. Planteamiento de Problema ....................................................................... 3 1.3. Formulación del problema de investigación ............................................... 4 1.4. Objetivo General ........................................................................................ 4 1.5 Objetivos Específicos: ................................................................................. 4 1.6 Alcance........................................................................................................ 5 1.7 Justificación e Importancia .......................................................................... 5 1.8 Metodología de investigación usado ........................................................... 7 1.9 Fases de la metodología de investigación................................................... 8 1.10 Plan de Trabajo ......................................................................................... 9 Capítulo II: Marco Conceptual............................................................................. 11 2.1. Proyecto ................................................................................................... 11 2.2. Gerencia de Proyectos ............................................................................. 12 2.3. Proyectos de Informática .......................................................................... 12 2.3.1. Tipos de Proyectos de Informática .................................................... 12 2.4. Gerencia de Proyectos de Informática ..................................................... 12 2.5. Descripción del Modelo IDEF0 ................................................................. 13 2.6. Modelo de Gestión de Proyectos de Informática ...................................... 14 2.6.1. Modelo de la Gestión Gerencial de Proyectos de Informática ........... 16 2.6.2. Modelo de la Gestión Técnica de Proyectos de Informática .............. 17 2.7. Marcos de Referencia para la Gestión de Proyectos ............................... 17 2.8. Marcos de Trabajo para la Gestión de Proyectos .................................... 17 2.9. Plataforma Tecnológica ............................................................................ 18 2.9.1. Modelo Vista Controlador .................................................................. 18 2.9.2 Servidor HTTP Apache ....................................................................... 18 2.9.3 PHP .................................................................................................... 19 2.9.4 Mysql .................................................................................................. 20 2.9.5 Modelo Relacional .............................................................................. 20 2.9.6 Aplicación Web ................................................................................... 21 Capítulo III: Marco Aplicativo .............................................................................. 22 3.1 Fase 1: Conceptualización de la aplicación .............................................. 22 3.2 Fase 2: Análisis de la aplicación ............................................................. 22 3.2.1 Requerimientos Funcionales ............................................................. 22 3.2.2 Requerimientos No Funcionales ....................................................... 23 3.2.3 Diagrama de Casos de Uso ............................................................... 25 3.3 Fase 3: Diseño de la aplicación ............................................................... 28 3.3.1 Diseño de la Base de Datos. ............................................................. 28 3.3.2 Diseño de los elementos estructurales de la aplicación...................... 30 3.4 Fase 4 Entrega: Generador de Marcos de Trabajo para la Gestión de Proyectos. ....................................................................................................... 30 ii 3.5 Fase 5: Pruebas de la aplicación .............................................................. 52 3.6 Arquitectura de la aplicación ..................................................................... 53 Análisis de Resultados ........................................................................................ 54 Conclusiones ...................................................................................................... 55 Referencias ......................................................................................................... 56 ANEXOS ............................................................................................................. 58 Anexo I: Especificación de casos de uso ........................................................ 59 Anexo II: Conjuntos de Pruebas ...................................................................... 74 Anexo III: Manual del Instalación ..................................................................... 77 Anexo IV: Manual del Sistema ........................................................................ 93 Anexo V: Manual de Usuario ......................................................................... 103 Anexo VI: Casos de Prueba en Organizaciones en Venezuela .................... 121 iii Índice de Figuras Figura 1: Causas de Fracasos de los Proyectos. ....................................................... 5 Figura 2. Representación Gráfica del Modelo IDEF0............................................... 14 Figura 3. Descripción del Modelo Genérico de Gestión de Proyectos. Nivel 0 ... 15 Figura 4. Descripción del Modelo Genérico de Gestión de Proyectos Nivel 1 .... 16 Figura 5. Casos de uso: Nivel 1 ................................................................................... 25 Figura 6. Casos de uso: Nivel 2: Autenticar............................................................... 26 Figura 7. Casos de uso: Nivel 2: Gestionar Marcos ................................................. 26 Figura 8. Casos de uso: Nivel 2: Gestionar Usuarios .............................................. 27 Figura 9. Casos de uso: Nivel 2: Gestionar Componentes ..................................... 27 Figura 10. Casos de uso: Nivel 2 Generar Documento ........................................... 28 Figura 11. Modelo Relacional de la Base de Datos diseñada ................................ 29 Figura 12. Diagrama de Clases ................................................................................... 30 Figura 13. Página de Inicio ........................................................................................... 31 Figura 14. Mensaje de error de autenticación ........................................................... 31 Figura 15. Marco de trabajo ......................................................................................... 33 Figura 16. Marco de trabajo Nuevo ............................................................................. 33 Figura 17. Edición de componentes del marco de trabajo ...................................... 34 Figura 18. Filtro de enfoque para listado de marcos ................................................ 34 Figura 19. Listado Plantillas de Marcos...................................................................... 35 Figura 20. Relaciones Entradas - Procesos .............................................................. 36 Figura 21. Relaciones Salidas - Procesos ................................................................. 37 Figura 22. Relaciones Controles - Procesos ............................................................. 37 Figura 23. Relaciones Herramientas - Procesos ...................................................... 38 Figura 24. Relaciones Roles - Procesos .................................................................... 38 Figura 25. Relaciones Enlace ...................................................................................... 39 Figura 26. Relaciones Enlace Paso 1 ......................................................................... 39 Figura 27. Relaciones Enlace Paso 2 ......................................................................... 40 Figura 28. Relaciones Enlace Paso 3 ......................................................................... 40 Figura 29. Relaciones Enlace Paso 4 ......................................................................... 41 Figura 30. Relaciones Enlace Paso 5 ......................................................................... 41 Figura 31. Relaciones Enlace Paso 6 ......................................................................... 42 Figura 32. Relaciones Enlace Paso 7 ......................................................................... 42 Figura 33. Relaciones Enlace Paso 8 ......................................................................... 43 Figura 34. Resumen ...................................................................................................... 44 Figura 35. Resumen Generar PDF ............................................................................. 45 Figura 36. Administrar Usuarios .................................................................................. 48 Figura 37. Nuevo Usuario ............................................................................................. 48 Figura 38. Realizar Búsqueda Usuarios ..................................................................... 49 Figura 39. Administrar Marcos ..................................................................................... 49 Figura 40. Nuevo Marco. Filtro Enfoque..................................................................... 50 Figura 41. Realizar Consulta Marco ............................................................................ 50 Figura 42. Administrar Componente ........................................................................... 51 Figura 43. Nuevo Componente .................................................................................... 51 Figura 44. Nuevo Componente .................................................................................... 53 iv Índice de Tablas Tabla 1. Plan de Trabajo ................................................................................................. 9 Tabla 2. Requerimientos Funcionales ........................................................................ 22 Tabla 3. Diseño de Prueba de Integración................................................................. 74 Tabla 4. Diseño de Prueba de Usabilidad .................................................................. 75 Análisis de Resultados 1 Introducción Estudiando los conceptos de proyecto y gerencia de proyectos se comprende cómo se generan nuevas necesidades para lograr una gerencia de proyectos adecuada y cuando leemos "...organizar y administrar los recursos, de forma tal que un proyecto dado sea terminado completamente dentro de las restricciones de alcance, tiempo y coste planteados a su inicio..." entendemos la urgencia de elaborar herramientas para automatizar el inicio, planificación, ejecución, control y cierre del proyecto. (Degerencia.com,2007) La importancia de la visión de gestión de proyectos dentro de la organización, obliga a la creación de herramientas, la creación del Modelo Genérico de Gestión de Proyectos de Informática, que permita a la gerencia de proyectos definir qué hacer, en forma independiente de cómo hacerlo. (Di Vasta, 2011) Estas ideas sirven de base para este trabajo de investigación, cuyo objetivo principal consiste en la elaboración de una aplicación que permita la construcción de un Marco de Trabajo para una organización en Venezuela basado en el Modelo Genérico de Gestión de Proyectos propuesto en (Di Vasta, 2011), permitiendo así que los Directores de Proyectos definan el marco de trabajo adecuado para su organización. Esto se puede hacer de dos (2) formas, la primera creando uno propio partiendo desde cero o la segunda, en base a algún marco de trabajo o de referencia ya existentes. Este documento describe el proceso de desarrollo de una aplicación para Generar Marcos de trabajo para la Gestión de Proyectos. Para ello se usará un método de desarrollo así como una serie de tecnologías que definen la plataforma de desarrollo a utilizar. El documento se organiza de la siguiente manera: Capítulo I. La Investigación. Define el planteamiento del problema que se desea resolver, cuáles son los objetivos, los límites, el alcance y la justificación e importancia del desarrollo de la aplicación. Capítulo II. Marco Conceptual. Muestra toda la base conceptual de aquellos elementos que permitirán el desarrollo de la aplicación incluyendo el método de desarrollo. Capítulo III. Marco Aplicativo. Explica cómo se aplica el método de desarrollo al caso particular de estudio; desde el análisis inicial, diseño, implementación y pruebas hasta llegar al producto resultado final de la aplicación. Resultados y Conclusiones. Se presentan los resultados y conclusiones sobre la investigación realizada. Capítulo I: La Investigación 2 Capítulo I: La Investigación 1.1. Antecedentes del Problema Un método de gerencia de proyectos proporciona un conjunto estructurado de procedimientos que se usan para guiar a la gerencia y a los líderes de proyecto a tomar las decisiones que los llevará al desarrollo de sus proyectos. Para gestionar eficazmente, dentro de cualquier ambiente de gerencia de proyecto, los líderes del proyecto requieren un conjunto estándar de herramientas, técnicas y procedimientos, así como un lenguaje común que pueda usarse para comunicarse con los interesados del proyecto y los miembros del equipo del proyecto acerca de los planes del proyecto y el progreso obtenido con esos planes. (Cormier,2001) Usar los métodos de proyectos es una estrategia que permite a las organizaciones aumentar al máximo el valor del proyecto para la organización. Un método de proyecto formal permite el trabajo de todos los miembros del equipo a lo largo del ciclo de vida de un proyecto. Todos los miembros de un equipo deben estar familiarizados con él y deben usar el método escogido a lo largo de sus proyectos. Muchos de los métodos de gerencia de proyectos se dirigen a la gerencia de un solo proyecto, sin apreciar que muchos otros proyectos en una organización compitan por los mismos recursos y atención. El método de gerencia de proyecto también debe proporcionarles a los gerentes de proyecto la perspectiva que hay un marco de trabajo de gerencia de proyecto y los métodos asociados presentes en la organización. Por todo lo anteriormente expuesto, tenemos que el eje de un proyecto es la aplicación del método, pero generalmente por falta de tiempo sólo se utiliza para el cumplimiento de normas y etapas y esto nos lleva a definir como un factor crítico muy importante para el desarrollo exitoso de los Proyectos Informáticos, la utilización de métodos. En (Di Vasta, 2011) se presenta un modelo integral en el cual se muestra la Gestión de Proyectos enmarcada bajo dos enfoques: La Gestión Gerencial (GG) y la Gestión Técnica (GT), además se busca definir un Modelo Genérico de Gestión de Proyectos de Informática (MGGPI) que permita a una organización, la comparación, selección de un método y/o creación de un nuevo método adaptado a sus propias necesidades. Desde el año 2008 en la Universidad Central de Venezuela, en el grupo CISI (Centro de Investigación en Sistemas de Información) se están llevando a cabo investigaciones asociadas a la Gerencia de Proyectos en Venezuela. Capítulo I: La Investigación 3 Estas investigaciones van alineadas a desarrollar una cultura de Gerencia de Proyectos en Venezuela. Una de las ideas que surge por parte del Grupo de investigación, fue crear un Modelo Genérico para la Gestión de Proyectos Informática, el cual está siendo desarrollado por la Prof. Concettina Di Vasta en su trabajo de tesis doctoral (Di Vasta, 2011), tutoreado dicho trabajo por el Prof. Fernando Martínez. Para aplicar dicho modelo se requiere la construcción de una herramienta computacional que permita crear un Marco de Trabajo para la Gestión de Proyectos de forma racional para una organización. La construcción del Marco de Trabajo se realiza basado en el Modelo Genérico de Gestión de Proyectos propuesto en (Di Vasta, 2011), permitiendo así que los Directores de Proyectos definan el marco de trabajo adecuado para su organización. 1.2. Planteamiento de Problema En (Di Vasta, 2011) se puede observar que es posible describir detalladamente el Modelo de Gestión Gerencial de proyectos de informática y el Modelo de Gestión Técnica de Proyectos de Informática con el uso de 7 componentes: 1. Características; 2. Roles; 3. Fases/Procesos/Actividades; 4. Entradas, Salidas y Artefactos; 5. Controles; 6. Herramientas; 7. Mejoras y/o evolución. Siendo estos elementos utilizados para hacer descripciones de los marcos de referencia y marcos de trabajo para la gestión de proyectos (Gestión Gerencial y Gestión Técnica) nos hayamos con la carencia de herramientas informáticas que permitan aplicar el Modelo genérico propuesto por (Di Vasta, 2008) a través de la creación de una Base de Conocimientos para almacenar los Marcos de Referencia y Marcos de Trabajo descritos a nivel de la Gestión Gerencial y la Gestión Técnica de la Gestión de Proyectos de Informática, y además se requiere la construcción de una herramienta computacional que permite crear, a organizaciones en Venezuela, un Marco de Trabajo para Gestión de Proyectos de Informática (MTGPI) adaptado a las necesidades del negocio, basado en el modelo genérico. Por otra parte es posible que cada organización pueda generar el marco de trabajo de manera racional adaptado a sus necesidades basándose en los Marcos de Referencia (MR) y Marcos de Trabajo (MT) existentes a nivel Gerencial y a nivel Técnico estudiados en (Di Vasta, 2011). Dado lo anteriormente expuesto, podemos definir como nuestro problema, la inexistencia de una Herramienta computacional que permita automatizar el Modelo Genérico de Gestión de Proyectos de Informática para la generación de un marco de trabajo para organizaciones en Venezuela en base a los Marcos de Referencia y Marcos de Trabajo existentes tanto a nivel Gerencial como a nivel Técnico analizados en (Di Vasta,2011), lo cual constituye una Base de Capítulo I: La Investigación 4 Conocimiento en Gestión Gerencial y en Gestión Técnica de proyectos de informática de desarrollo. 1.3. Formulación del problema de investigación ¿Cómo automatizar el Modelo Genérico de Gestión de Proyectos de Informática, en un ambiente Web y qué beneficios se obtiene al construir Marcos de Trabajo para organizaciones en Venezuela? 1.4. Objetivo General Elaborar una aplicación que permita la construcción de Marcos de Trabajo para organizaciones en Venezuela, basado en el Modelo Genérico de Gestión de Proyectos, considerando la integración de la Gestión Gerencial y la Gestión Técnica de Proyectos. 1.5 Objetivos Específicos: • Desarrollar el marco conceptual relacionado con la gestión de proyectos y el modelo genérico de la gestión de proyectos de informática. • Crear la Base de Conocimiento de Marcos de Trabajos y Marcos de Referencia para la Gestión de Proyectos. • Definir la plataforma que se va a utilizar en el desarrollo de una aplicación, identificando y describiendo los componentes de la misma así como los componentes de reutilización. • Diseñar la base de datos que será utilizada por la aplicación a desarrollar. • Elaborar la interfaz de la aplicación. • Construir la aplicación que soporte el modelo genérico de gestión de proyectos, considerando la gestión gerencial y la gestión técnica de proyectos de informática, así como la integración de ambas gestiones, permitiendo la construcción de un Marco de Trabajo para una organización en Venezuela. • Probar la aplicación para la construcción de un Marco de Trabajo de Gestión de Proyectos en 2 organizaciones en Venezuela. • Elaborar los manuales de usuario, de instalación y de la aplicación. Capítulo I: La Investigación 5 1.6 Alcance • Se desarrollará una aplicación que permita automatización el Modelo Genérico de Gestión de Proyectos de Informática (MGGPI) propuesto por Concettina Di Vasta y Fernando Martínez en (Di Vasta,2011). • La aplicación será desarrollada bajo ambiente Web. • Sobre dos organizaciones en Venezuela.se realizan las pruebas de la aplicación. 1.7 Justificación e Importancia Según se comenta en (Piorun, 2003); entre los motivos que originan el fracaso en el cumplimiento de los proyectos tenemos (Figura 1): • 21 % Cambios en los objetivos definidos a nivel estratégico. • 31% Poca o mala utilización de metodologías de trabajo. • 48% Problemas humanos de conducción, comunicación y conflictos entre la gente. Figura 1: Causas de Fracasos de los Proyectos. Fuente: (Piorun, 2003). Solo una pequeña porción de los proyectos culminan con resultados satisfactorios, esto es, finalizan cumpliendo el objetivo planteado, en los tiempos y con los recursos estimados. Estos resultados hacen referencia a todo tipo de proyecto, pero principalmente en los proyectos de informática. El motivo del Capítulo I: La Investigación 6 fracaso de la amplia porción restante se debe a diversos factores, los cuales se reflejan en costos directos (capital, tiempo, entre otros); así como en costos indirectos, que regularmente son mucho más importantes que los primeros, como podría ser la pérdida de oportunidades de negocio y de crecimiento en la organización. (Montoya, 2006) Uno de los retos al que nos enfrentamos cada día los que trabajamos en el área de informática es el cumplimiento de los tiempos en los proyectos. La falta de un método que guíe el inicio, planificación, ejecución, seguimiento y control, y cierre de los tiempos de los proyectos de informática dificulta los cumplimientos de los mismos y por ende el cumplimiento de los objetivos planteados. (Montoya, 2006) Las mejores prácticas de Métodos de Gestión de Proyectos, permiten concluir el trabajo en menor tiempo, empleando menos recursos y sin ningún sacrificio en la calidad del servicio. (Montoya, 2006) Esta misma variedad de métodos existentes para el desarrollo de proyectos de informática en una misma organización crea la necesidad de la estandarización entre los método usados, lo cual puede llevar a las organizaciones a la migración de métodos de desarrollo hacia un estándar establecido adaptado a las necesidades de los tipos de proyectos llevados a cabo en la organización. (Di Vasta,2007) Todo esto hace necesario una unificación de criterios y un modelo genérico que permita a todas estas organizaciones realizar la gestión de sus proyectos basada en las mejores prácticas existentes a nivel nacional e internacional construyendo un marco de trabajo de forma racional que se adapte a las necesidades de la organización. En (Di Vasta,2011) se presentan las ideas sobre la construcción de un Modelo Genérico para la Gestión de Proyectos de Informática. La no existencia de aplicación que permita construir un marco de trabajo para la gestión de proyectos de organizaciones en Venezuela basado en el Modelo Genérico de Gestión de Proyectos creado, dio origen a este trabajo especial de grado. En vista de lo expuesto anteriormente podemos justificar este trabajo de investigación, ya que con el mismo se obtendrá una aplicación para soportar el modelo genérico de gestión de proyectos de informática de desarrollo, a fin de minimizar uno de los motivos principales de fracasos de la Gestión de proyectos, la falta de utilización de un método, además brindará un aporte para las organizaciones en Venezuela en relación a la utilización de un método acorde a sus necesidades tratando de minimizar los fracasos de los proyectos de informática. Capítulo I: La Investigación 7 Por otra parte este trabajo se puede considerar de vanguardia e innovador ya que al investigar la bibliografía relacionada con las bases conceptuales necesarias para la solución del problema de investigación se abarcan temas de actualidad, entre los cuales tenemos, Gestión Gerencial de Proyectos, Gestión Técnica de Proyectos , Métodos de Gestión Gerencial de Proyectos, Métodos de Gestión Técnica de Proyectos; además se abre un camino de investigación de amplias perspectivas en toda esta área de investigación que está siendo considerada de gran importancia y recibiendo mucha atención a nivel mundial y en el ámbito nacional. Este trabajo aporta un gran valor teórico práctico que contribuye a engrosar los productos alcanzados dentro de la línea de investigación del Centro de Investigación en Sistemas de Información (C.I.S.I.) siendo así un trabajo novedoso dentro de la Universidad Central de Venezuela. 1.8 Metodología de investigación usado La investigación es de tipo proyectiva, este tipo de investigación según (Hurtado de Barrera, 2008) consiste en la “ ..elaboración de una propuesta, un plan, un programa o un modelo, como solución a un problema o necesidad de tipo práctico, ya sea de un grupo social, o de una institución, o de una región geográfica, en un área particular del conocimiento, a partir de un diagnóstico preciso de las necesidades del momento, los procesos explicativos o generadores involucrados y de las tendencias futuras, es decir, con base en los resultados de un proceso investigativo….”. Se indica en (Hurtado de Barrera, 2008) que, para que un proyecto se considere investigación proyectiva, “.. la propuesta debe estar fundamentada en un proceso sistemático de búsqueda e indagación que requiere la descripción, el análisis, la comparación, la explicación y la predicción. A partir del estadio descriptivo se identifican necesidades y se define el evento a modificar; en los estadios comparativo, analítico y explicativo se identifican los procesos causales que han originado las condiciones actuales del evento a modificar, de modo que una explicación plausible del evento permitirá predecir ciertas circunstancias o consecuencias en caso de que se produzcan determinados cambios; el estadio predictivo permitirá identificar tendencias futuras, probabilidades, posibilidades y limitaciones. En función de esta información, el investigador debe diseñar o crear una propuesta capaz de producir los cambios deseados..”. Se analiza el marco conceptual que fundamenta el tema y así elaborar una propuesta que permita a las organizaciones abocadas a la Gestión de Proyectos usar un Marco de Referencia y/o un Marco de Trabajo para desarrollar su propio Marco de Trabajo de Gestión de Proyectos de Informática, integrando la Gestión Gerencial y Gestión Técnica, adaptado a las necesidades de la organización. Capítulo I: La Investigación 8 1.9 Fases de la metodología de investigación Según esta metodología adaptada a tesis de pregrado de acuerdo a Martínez (2003), cumplimos con las siguientes etapas: • Fase de Inicio: En esta etapa se elaboran todas las actividades preliminares del Trabajo Especial de Grado (T.E.G), contiene el 30% de todas las actividades programadas, se realiza el levantamiento de información de forma empírica, documental y analítica. Las actividades de la etapa de inicio son: − Adecuación y pertenencia de la investigación en una línea de investigación específica. − Elaboración y presentación de un Documento de Tema de investigación con Título propuesto, Resumen y Justificación. − Estudios e investigaciones previas relacionadas. − Determinación de la metodología de metodologías a utilizar. • Fase Intermedia: La etapa de desarrollo abarca el 50% de las actividades programadas, esta fase incluye el diagnóstico, la síntesis conceptual, la implementación de la propuesta y la implementación de los resultados. Las actividades de la etapa intermedia son: − Análisis de la situación actual. − Elaboración de la propuesta de solución. − Diseño de la solución. − Implementación del nuevo objeto (sistema, procesos, procedimiento, método). − Implantación del nuevo objeto o un componente. (prototipo, piloto) − Elaboración de un documento de T.E.G. • Fase de Evaluación y Cierre: Comprende la evaluación, promoción y divulgación de los resultados de la investigación. Se procede a evaluar la metodología, métodos, técnicas, procedimientos, y herramientas usadas. También se elaborarán las conclusiones y recomendaciones Capítulo I: La Investigación 9 correspondientes. Finalmente, se entrega y presenta el documento final del T.E.G. ante un jurado examinador, para ser evaluado. 1.10 Plan de Trabajo A continuación se muestra el Plan de trabajo (Tabla 1) con las actividades previstas a desarrolladas en cada una de las fases de la metodología de investigación seleccionada, con su duración respectiva. Tabla 1. Plan de Trabajo Fase Actividades Tiempo de ejecución 1era Fase de Inicio a. Revisión y análisis de documentación sobre la Gestión de Proyectos contemplado en la Guía del PMBOK. b. Elaboración del Seminario con título Análisis del Modelo Genérico de Gestión de Proyectos de Informática. Inicio: Octubre 2008 Fin: Febrero 2009 2da Fase de Desarrollo a. Análisis de resultados obtenidos en la etapa anterior. b. Seleccionar de las herramientas a implementar en la solución propuesta. c. Diseñar la solución propuesta. d. Implementar la herramienta que soporte el modelo genérico de gestión de proyectos de informática seleccionada en la fase anterior siguiendo la metodología de desarrollo determinada en la etapa de inicio. e. Realizar pruebas para cada módulo desarrollado. f. Realizar pruebas a la aplicación en general, una vez desarrollados todos los módulos. g. Elaboración de un documento de T.E.G. Inicio: Marzo 2009 Fin: Enero 2011 Capítulo I: La Investigación 10 Fase Actividades Tiempo de ejecución h. Elaboración de manuales 3era Fase de Evaluación y Cierre a. Elaboración de conclusiones, recomendación. b. Defensa o presentación del T.E.G. ante un jurado examinador. Inicio: Marzo 2011 Fin: Julio 2011 Capítulo II: Marco Conceptual 11 Capítulo II: Marco Conceptual 2.1. Proyecto Es un esfuerzo temporal que se asume con el fin de crear un producto o servicio único. (PMI, 2004). 2.1.1. Características de un Proyecto Temporal: Quiere decir que cada proyecto tiene un comienzo y un término definitivo. Llega a término cuando se han logrado los objetivos del proyecto, o cuando se hace evidente que no será posible cumplir o no se pueden cumplir los objetivos del mismo, o cuando ya no existe la necesidad del proyecto y se termina este. Temporal no necesariamente significa de corta duración; son muchos los proyectos que duran por varios años. Sin embargo, cualquiera sea el caso, la duración de un proyecto es finita; no son esfuerzos continuos. (PMI, 2004) Único: Quiere decir que el producto o servicio es distintivamente diferente de todos los demás. Para muchas organizaciones, los proyectos son una forma de responder a aquellas solicitudes que no se pueden abordar dentro de los límites operacionales normales de la organización. Un proyecto involucra hacer algo que no ha sido hecho antes, lo cual hace que este sea único aún cuando la categoría a la que pertenece sea amplia. Un producto o servicio puede ser único incluso si fuera grande la categoría a la cual pertenece. La presencia de elementos repetitivos no cambia en absoluto el carácter único fundamental del trabajo del proyecto. (PMI, 2004) Elaboración Progresiva: Es una característica de los proyectos, e integra los conceptos de temporal y único. Dado que el producto de cada proyecto es único, las características que distinguen el producto o servicio deben ir elaborándose lentamente. Progresivamente significa “proceder en pasos; continuando uniformemente en incrementos”, mientras que elaborado significa “trabajado con cuidado y detalle; desarrollado meticulosamente”. Estas características distintivas serán definidas ampliamente al comienzo del proyecto, se harán más explícitas y detalladas a medida que el equipo del proyecto desarrolle una comprensión mejor y más clara del producto. (PMI, 2004) La elaboración progresiva de las características del producto debe coordinarse cuidadosamente con la definición adecuada del alcance del proyecto, especialmente si este se ejecuta por medio de un contrato. Una vez definido Capítulo II: Marco Conceptual 12 adecuadamente, el alcance del proyecto – el trabajo a realizar – debe permanecer constante incluso a medida que se vayan elaborando progresivamente las características del producto. (PMI, 2004) 2.2. Gerencia de Proyectos Es definida en (PMI, 2004) como “la aplicación de conocimientos, habilidades, herramientas y técnicas a las actividades del proyecto para satisfacer los requerimientos del proyecto”. Esta es realizada a través del uso de procesos como: inicio, planificación, ejecución, control y cierre. 2.3. Proyectos de Informática Di Vasta (2007) dice que un proyecto es considerado “de Informática” si involucra creación de nuevos procesos automatizados o cambios en el hardware y/o software existente para automatizar procesos, en otros términos, cuando involucre cualquier tipo de tecnología (sistemas de hardware y/o software) aplicadas a organizaciones tanto productivas como de servicios. 2.3.1. Tipos de Proyectos de Informática Siguiendo las ideas expresadas en Di Vasta (2007), se considera la existencia de dos tipos de Proyectos de Informática: a) Proyectos de Informática de Desarrollo, incluyen actividades de creación de nuevos procesos o cambios en los procesos con el fin de desarrollar un sistema de información; y b) Proyectos de Informática de Infraestructura, cuyas actividades incluyen cambios en el hardware y/o infraestructura existente para formar la plataforma física y/o tecnológica necesaria para la automatización de procesos. 2.4. Gerencia de Proyectos de Informática La Gerencia de Proyectos de Informática es la aplicación de conocimientos, habilidades, herramientas y técnicas a las actividades del proyecto de informática para satisfacer los requerimientos del mismo (Di Vasta & Martínez, 2005). Un Gerente de Proyectos de Informática debe proponer mecanismos que permitan mejorar la toma de decisiones durante todo el ciclo de vida de los sistemas. Desde las primeras etapas de factibilidad de los sistemas, pasando por la concepción y ejecución, hasta la operación en las organizaciones. Debe evaluar el sistema desde la perspectiva del usuario, tomando en cuenta el beneficio para la organización y la comunidad al operar dicho software. Del desempeño del Gerente de Proyectos de Informática y del trabajo desempeñado por el equipo de analistas, diseñadores y programadores dependerá la calidad de los sistemas informáticos (Jack, 2000). Capítulo II: Marco Conceptual 13 2.5. Descripción del Modelo IDEF0 El modelo IDEF0 consiste en la descripción gráfica tipo IDEF de cada proceso como una descomposición en actividades, insumos (información, instrucciones); proveedores (miembros del grupo); controles (procedimientos, normas guías, reglas y condiciones); mecanismos (personas con actividades, máquinas, herramientas, computadoras); rendimientos (información y equipos); clientes (miembros del grupo) y retroalimentación (nivel de satisfacción de los clientes y sus necesidades) (National Institute of Standard and Technology, 1993a) (National Institute of Standard and Technology, 1993b). Las componentes estructurales del lenguaje son: Cajas, flechas, reglas y diagramas. • Cajas: Representan actividades o procesos. • Flechas: Representan flujos físicos o de información relativos a las actividades. Los modelos generados con este modelo IDEF0 poseen tres tipos de información: diagramas gráficos, textos y glosario. • Diagramas gráficos: Los diagramas gráficos son el mayor componente del modelo IDEF0, contiene cajas, flechas, interconexiones flechas/cajas y relaciones asociadas. Las cajas representan cada una de las actividades más importantes del sujeto expuesto. Estas actividades son descompuestas en diagramas más detallados hasta que el sujeto este descrito en un nivel suficiente que soporte las metas de un proyecto en particular. El diagrama de mayor nivel (Top - level) proporciona la descripción más general o abstracta del sujeto representado por el modelo. Cada lado de la caja de actividad tiene un significado estándar en la relación caja/flecha. El lado de la caja con la cual la flecha hace interfaz, refleja el rol de la flecha. Flechas que entran por el lado izquierdo ⇒ Entradas Flechas que entran por el lado de arriba ⇒Controles Flechas que salen por el lado derecho ⇒Salidas Flechas conectadas al lado de abajo ⇒ Mecanismos Capítulo II: Marco Conceptual 14 Las entradas son transformadas o consumidas por la actividad, para producir salidas . Los controles son las condiciones requeridas por la actividad para producir salidas correctas. Las salidas son flujos producidos por la actividad. Los mecanismos representan algunos de los medios que soportan la ejecución de la actividad. Algunos medios pueden ser heredados de cajas parientes (recursos, procesos, entre otros). Las flechas de mecanismos que salen de la parte de abajo de la caja son flechas de llamadas, estas flechas permiten compartir detalles entre modelos o entre porciones del mismo modelo. La Figura 2 muestra lo descrito anteriormente. Control Entrada Nombre Salida Actividad Mecanismo Llamada Figura 2. Representación Gráfica del Modelo IDEF0 Fuente: (National Institute of Standard and Technology, 1993a) 2.6. Modelo de Gestión de Proyectos de Informática La Gestión de Proyectos de Informática presenta dos enfoques claramente definidos según (Di Vasta y Martínez, 2005): La Gestión Gerencial, se basa en las áreas consideradas en el PMI, aplicadas a la Gerencia de Proyectos de Informática en específico, y la Gestión Técnica, que cubre aspectos de Gestión de Requerimientos, Gestión de Diseño, Gestión de Construcción, Gestión de Implantación, Gestión de Configuración y Gestión de Cambios en requerimientos. Capítulo II: Marco Conceptual 15 La Gestión Técnica, considera los aspectos de: Gestión de Requerimientos, Gestión de Diseño, Gestión de Construcción, Gestión de Implantación, Gestión de Configuración y Gestión de Cambio (de requerimientos). El Modelo Genérico de Gestión de Proyectos de Informática (Di vasta, 2011) considera los dos enfoques, Gestión Gerencial (GG) y Gestión Técnica (GT), y es de carácter integrador, esto es, se puede ver como dos capas que pueden superponerse en algún(os) proceso(s) llevado(s) a cabo en la GG y/o en la GT. Es decir estos dos enfoques, GG y GT se relacionan, a través de uno o varios procesos definidos, estableciéndose relaciones en función de las entradas, salidas y/o artefactos de los distintos procesos desde uno de los enfoques hacia uno o varios de los procesos definidos en el otro enfoque y/o viceversa. Se muestra en las figuras siguientes la descripción general del Modelo Genérico de Gestión de Proyectos (Figura 3) y los enfoques de Gestión Gerencial y Gestión Técnica en la Figura 4, destacando entradas, salidas, controles y mecanismos usando notación IDEF0. Figura 3. Descripción del Modelo Genérico de Gestión de Proyectos. Nivel 0 Fuente: (Di Vasta, 2008) Capítulo II: Marco Conceptual 16 Figura 4. Descripción del Modelo Genérico de Gestión de Proyectos Nivel 1 Fuente: (Di Vasta, 2008) 2.6.1. Modelo de la Gestión Gerencial de Proyectos de Informática Los Proyectos como un recurso corporativo es un concepto nuevo, pero que cada día es más aceptado. El tratamiento de los proyectos sigue un proceso que da origen a la Gerencia de Proyectos. La descripción del proceso de los Proyectos o Gerencia de Proyectos se realiza a través de un Método de Gerencia de Proyectos. (Di Vasta,2008) La abstracción de los componentes de un método, sean estos procesos, roles, decisiones, información, reglas de proceso, técnicas, entre otros. Permiten definir un modelo genérico. Así, la abstracción de los componentes existentes en los Métodos de Gerencia de Proyectos, debidamente estructurados, los llamaremos Método Genérico de Gerencia de Proyectos. (Di Vasta,2008) 2.6.1.1. Gestión Gerencial Se basa en las áreas del Conocimiento y procesos de la Gestión de Proyectos, es decir, en los aspectos y procesos involucrados en distintos marcos de referencia de Gestión Gerencial reconocidos a nivel nacional e internacional tales como PMI, IPMA, APM, Prince2, entre otros. Mide la calidad de los recursos gerenciales, de las estrategias competitivas, del desarrollo de productos, del control de calidad, de los recursos humanos y del mercadeo a nivel organizacional. Lo que permite tener una mejor percepción del proyecto con respecto a la integración, alcance, tiempo, costos, calidad, recursos humanos, comunicaciones, riesgos y procura. (Di Vasta & Martínez, 2005) Capítulo II: Marco Conceptual 17 2.6.2. Modelo de la Gestión Técnica de Proyectos de Informática Este es un lenguaje o una forma de modelar procesos interrelacionando actores, recursos, controles, entradas y salidas a diferentes niveles de abstracción. Los marcos de referencia y de trabajo de gestión de procesos se modelan así en términos de procesos, que producen salidas de acuerdo a entradas, recursos y controles. Además cada proceso se puede refinar en los mismos términos o describir usando técnicas particulares como tablas de decisiones, algoritmos, heurísticas, reglas de proceso, entre otros. Será utilizado el modelo IDEF0 (Integration Definition for Function Modeling) como notación para definir y caracterizar el Modelo Genérico de los Métodos de Gestión de Proyectos de Informática. 2.6.2.1 Gestión Técnica Considera los aspectos de: Gestión de Requerimientos, Gestión de Diseño, Gestión de Construcción, Gestión de Implantación, Gestión de Configuración y Gestión de Cambio (de requerimientos) (Di Vasta & Martínez, 2005). La Gestión Técnica contempla todo lo relacionado con el desarrollo de Proyectos de Informática: sus métodos y diseño. Este enfoque nos permite conocer e identificar cuál (es) es (son) el (los) método(s) de desarrollo que permiten alcanzar los objetivos planteados, en cada uno de los Proyectos de Informática de manera exitosa. 2.7. Marcos de Referencia para la Gestión de Proyectos Un Marco de Referencia (M.R.) es un marco conceptual para la gestión de proyectos desarrollado teóricamente o producto de la acumulación de experiencias y mejores prácticas para la Gestión de Proyectos. Hay Marcos de Referencia para la Gestión Gerencial y Marcos de Referencia para la Gestión Técnica de Proyectos de Informática. 2.8. Marcos de Trabajo para la Gestión de Proyectos Un Marco de Trabajo (M.T.) es un marco de uso que se utilizan en una organización para la gestión de proyectos. En Venezuela existen organizaciones que tienen Marcos de Trabajo para la Gestión Gerencial y Marcos de Trabajo para la Gestión Técnica de Proyectos de Informática. Capítulo II: Marco Conceptual 18 2.9. Plataforma Tecnológica 2.9.1. Modelo Vista Controlador Modelo Vista Controlador (MVC) es un patrón de arquitectura de software que separa los datos de una aplicación, la interfaz de usuario, y la lógica de control en tres componentes distintos. (MVC, 2011) • Modelo: Esta es la representación específica de la información con la cual el sistema opera. En resumen, el modelo se limita a lo relativo de la vista y su controlador facilitando las presentaciones visuales complejas. El sistema también puede operar con más datos no relativos a la presentación, haciendo uso integrado de otras lógicas de negocio y de datos afines con el sistema modelado. • Vista: Este presenta el modelo en un formato adecuado para interactuar, usualmente la interfaz de usuario. • Controlador: Este responde a eventos, usualmente acciones del usuario, e invoca peticiones al modelo y, probablemente, a la vista. Muchos de los sistemas informáticos utilizan un Sistema de Gestión de Base de Datos para gestionar los datos: en líneas generales del MVC corresponde al modelo. La unión entre capa de presentación y capa de negocio conocido en el paradigma de la Programación por capas representaría la integración entre Vista y su correspondiente Controlador de eventos y acceso a datos, MVC no pretende discriminar entre capa de negocio y capa de presentación pero si pretende separar la capa visual gráfica de su correspondiente programación y acceso a datos, algo que mejora el desarrollo y mantenimiento de la Vista y el Controlador en paralelo, ya que ambos cumplen ciclos de vida muy distintos entre sí. 2.9.2 Servidor HTTP Apache El servidor HTTP Apache es un servidor web HTTP de código abierto para plataformas Unix (BSD, GNU/Linux, etc.), Microsoft Windows, Macintosh y otras, que implementa el protocolo HTTP/1.1 y la noción de sitio virtual. Cuando comenzó su desarrollo en 1995 se basó inicialmente en código del popular NCSA HTTPd 1.3, pero más tarde fue reescrito por completo. Su nombre se debe a que Behelendorf quería que tuviese la connotación de algo que es firme y enérgico pero no agresivo, y la tribu Apache fue la última en rendirse al que pronto se convertiría en gobierno de EEUU, y en esos momentos la preocupación de su grupo era que llegasen las empresas y "civilizasen" el paisaje que habían creado los primeros ingenieros de internet. Además Apache consistía solamente en un conjunto de parches a aplicar al servidor de NCSA. Era, en inglés, a patchy server (un servidor "parcheado").(Apache,2011) Capítulo II: Marco Conceptual 19 El servidor Apache se desarrolla dentro del proyecto HTTP Server (httpd) de la Apache Software Foundation. Apache presenta entre otras características altamente configurables, bases de datos de autenticación y negociado de contenido, pero fue criticado por la falta de una interfaz gráfica que ayude en su configuración. 2.9.3 PHP PHP es un lenguaje de programación interpretado, diseñado originalmente para la creación de páginas web dinámicas. Se usa principalmente para la interpretación del lado del servidor (server-side scripting) pero actualmente puede ser utilizado desde una interfaz de línea de comandos o en la creación de otros tipos de programas incluyendo aplicaciones con interfaz gráfica usando las bibliotecas Qt o GTK+. (PHP,2011) PHP es un acrónimo recursivo que significa PHP Hypertext Pre-processor (inicialmente PHP Tools, o, Personal Home Page Tools). Fue creado originalmente por Rasmus Lerdorf en 1994; sin embargo la implementación principal de PHP es producida ahora por The PHP Group y sirve como el estándar de facto para PHP al no haber una especificación formal. Publicado bajo la PHP License, la Free Software Foundation considera esta licencia como software libre. Puede ser desplegado en la mayoría de los servidores web y en casi todos los sistemas operativos y plataformas sin costo alguno. El lenguaje PHP se encuentra instalado en más de 20 millones de sitios web y en un millón de servidores, el número de sitios en PHP ha compartido algo de su preponderante sitio con otros nuevos lenguajes no tan poderosos desde agosto de 2005. Este mismo sitio web de Wikipedia está desarrollado en PHP. Es también el módulo Apache más popular entre las computadoras que utilizan Apache como servidor web. El gran parecido que posee PHP con los lenguajes más comunes de programación estructurada, como C y Perl, permiten a la mayoría de los programadores crear aplicaciones complejas con una curva de aprendizaje muy corta. También les permite involucrarse con aplicaciones de contenido dinámico sin tener que aprender todo un nuevo grupo de funciones. Permite la conexión a diferentes tipos de servidores de bases de datos tales como MySQL, PostgreSQL, Oracle, ODBC, DB2, Microsoft SQL Server, Firebird y SQLite. Capítulo II: Marco Conceptual 20 2.9.4 Mysql MySQL es un sistema de gestión de bases de datos relacional, multihilo y multiusuario con más de seis millones de instalaciones.1 MySQL AB —desde enero de 2008 una subsidiaria de Sun Microsystems y ésta a su vez de Oracle Corporation desde abril de 2009— desarrolla MySQL como software libre en un esquema de licenciamiento dual. (Mysql,2011) Por un lado se ofrece bajo la GNU GPL para cualquier uso compatible con esta licencia, pero para aquellas empresas que quieran incorporarlo en productos privativos deben comprar a la empresa una licencia específica que les permita este uso. Está desarrollado en su mayor parte en ANSI C. Al contrario de proyectos como Apache, donde el software es desarrollado por una comunidad pública y los derechos de autor del código están en poder del autor individual, MySQL es patrocinado por una empresa privada, que posee el copyright de la mayor parte del código. 2.9.5 Modelo Relacional El modelo relacional para la gestión de una base de datos es un modelo de datos basado en la lógica de predicados y en la teoría de conjuntos. Es el modelo más utilizado en la actualidad para modelar problemas reales y administrar datos dinámicamente. (Modelo,2011) Su idea fundamental es el uso de «relaciones». Estas relaciones podrían considerarse en forma lógica como conjuntos de datos llamados «tuplas». Pese a que ésta es la teoría de las bases de datos relacionales creadas por Edgar Frank Codd, la mayoría de las veces se conceptualiza de una manera más fácil de imaginar, esto es, pensando en cada relación como si fuese una tabla que está compuesta por registros (cada fila de la tabla sería un registro o tupla), y columnas (también llamadas campos). En este modelo todos los datos son almacenados en relaciones, y como cada relación es un conjunto de datos, el orden en el que éstos se almacenen no tiene relevancia (a diferencia de otros modelos como el jerárquico y el de red). Esto tiene la considerable ventaja de que es más fácil de entender y de utilizar por un usuario no experto. La información puede ser recuperada o almacenada por medio de consultas que ofrecen una amplia flexibilidad y poder para administrar la información. Este modelo considera la base de datos como una colección de relaciones. De manera simple, una relación representa una tabla que no es más que un conjunto de filas, cada fila es un conjunto de campos y cada campo representa un valor que interpretado describe el mundo real. Cada fila también se puede Capítulo II: Marco Conceptual 21 denominar tupla o registro y a cada columna también se le puede llamar campo o atributo. Para manipular la información utilizamos un lenguaje relacional, actualmente se cuenta con dos lenguajes formales el Álgebra relacional y el Cálculo relacional. El Álgebra relacional permite describir la forma de realizar una consulta, en cambio, el Cálculo relacional sólo indica lo que se desea devolver. 2.9.6 Aplicación Web En la ingeniería de software se denomina aplicación web a aquellas aplicaciones que los usuarios pueden utilizar accediendo a un servidor web a través de Internet o de una intranet mediante un navegador. En otras palabras, es una aplicación software que se codifica en un lenguaje soportado por los navegadores web en la que se confía la ejecución al navegador. (Aplicacion,2011) Las aplicaciones web son populares debido a lo práctico del navegador web como cliente ligero, a la independencia del sistema operativo, así como a la facilidad para actualizar y mantener aplicaciones web sin distribuir e instalar software a miles de usuarios potenciales. Existen aplicaciones como los webmails, wikis, weblogs, tiendas en línea y la propia Wikipedia que son ejemplos bien conocidos de aplicaciones web. Es importante mencionar que una página Web puede contener elementos que permiten una comunicación activa entre el usuario y la información. Esto permite que el usuario acceda a los datos de modo interactivo, gracias a que la página responderá a cada una de sus acciones, como por ejemplo rellenar y enviar formularios, participar en juegos diversos y acceder a gestores de base de datos de todo tipo. Capítulo III: Marco Aplicativo 22 Capítulo III: Marco Aplicativo 3.1 Fase 1: Conceptualización de la aplicación Los conceptos de Gestión de Proyecto y del Modelo Genérico de Gestión de Proyectos fueron explicados en el Marco Conceptual de este documento. Dado que no existía una herramienta computacional que ayudara a las organizaciones a crear un marco de trabajo para gestionar los proyectos de informática de desarrollo, se crea esta herramienta para facilitar la elaboración del mismo, ya sea usando marcos de referencia y/o marcos de trabajo pre cargados (Base de Conocimiento) en la herramienta o simplemente dejando que el usuario establezca cómo es su marco de trabajo en relación a los componentes establecidos en la herramienta y presentados en el Modelo Genérico de Gestión de Proyectos presentado en (Di Vasta,2008). 3.2 Fase 2: Análisis de la aplicación 3.2.1 Requerimientos Funcionales Tabla 2. Requerimientos Funcionales Referencia Requerimiento Funcional Categoría Req_1 Dependiendo de los roles de los usuarios, la aplicación desplegará funciones para la administración de la aplicación o no. Evidente Req_2 La aplicación permitirá crear marcos de trabajo para organizaciones en Venezuela adaptado a sus necesidades, el cual será generado por el usuario seleccionando las variables para cada uno de los componentes definidos en el Modelo Genérico de Gestión de Proyectos. Evidente Req_3 Los Marcos de Trabajo se podrán construir como una copia de un marco ya pre cargado en la aplicación o se podrán hacer totalmente adaptado a una organización partiendo desde cero, siguiendo los componentes presentados por la herramienta computacional. Evidente Req_4 Los marcos de trabajo construidos podrán considerar los enfoques de gestión gerencial y/o técnico y estos, a su vez, se pueden enlazar entre sí. Evidente Capítulo III: Marco Aplicativo 23 Req_5 Los usuarios podrán ir generando su marco de trabajo de forma progresiva, es decir no debe de generarlo todo en una sola sesión. Evidente Req_6 El rol de administrador de la aplicación deberá proveer la capacidad de generar nuevos, modificar y eliminar componentes, dichos componentes se verán reflejados inmediatamente en todos los marcos de trabajo creados en la aplicación, así como incorporar nuevos marcos de trabajo y/o de referencia que pasan a forman parte de la base de conocimiento de la herramienta. Evidente Req_7 El rol administrador de la aplicación deberá proveer la capacidad de generar, modificar y eliminar usuarios de la aplicación. Evidente Req_8 Los usuarios podrán generar un archivo en formato PDF en el cual quedará reflejado cual es el marco de trabajo que usa su organización. Evidente Req_9 La aplicación debe validar que los usuarios estén registrados para poder acceder a la misma. Oculto 3.2.2 Requerimientos No Funcionales • Desempeño: − Garantizar la confiabilidad y seguridad de la aplicación a los diferentes usuarios. En este sentido la información almacenada podrá ser consultada y actualizada permanente, sin que se afecte el tiempo de respuesta. • Escalabilidad: − La aplicación debe ser construida con un método de desarrollo evolutivo e incremental, permitiendo así que nuevas funcionalidades, requerimiento y módulos sean incorporados sin afectar lo construido anteriormente. − La aplicación debe incorporar aspectos de reutilización de componentes para el desarrollo futuro de nuevos elementos. Capítulo III: Marco Aplicativo 24 • Facilidad de uso e Ingreso de la información: − La aplicación debe ser de fácil uso para todo tipo de usuario desde usuarios expertos hasta usuarios ingenuos, guiando al mismo durante toda la aplicación a través de metáforas sencilla y mensajes de error explicativos, que permitan al usuario identificar correctamente el error y solicitar apoyo al administrador de la aplicación. • Mantenibilidad: − Toda la aplicación deberá estar documentada, cada uno de los componentes que forman parte de la solución propuesta deberán estar debidamente documentados tanto en el código fuente como en los manuales de Instalación, de Sistema y de Usuario (ver Anexo III, IV y V). Esto permite que la aplicación pueda aplicar sus funcionalidades en el tiempo de manera sencilla. • Seguridad: − El acceso a la aplicación se encontrará restringido por el uso de usuario y clave para cada uno de los usuarios válidos. − El acceso de los marcos de trabajo estará restringido para que cada usuario pueda sólo ver los suyos o pueda copiarse otros marcos de trabajo como suyo. • Validación de la información: − La aplicación debe permitir validar la información contenida en los Formularios. En el proceso de validación de la información, se deben tener en cuenta aspectos tales como obligatoriedad de campos, longitud de caracteres permitida por campo, manejo de tipos de datos y caracteres especiales. • Arquitectura: − La aplicación debe ser 100% Web Based (basada en Web) y toda la parametrización así como la administración debe realizarse desde un navegador. − La aplicación debe operar de manera independiente del navegador que se utilice. Capítulo III: Marco Aplicativo 25 • Base de datos: − Es necesario el diseño de la base de datos a utilizar de manera que se mantenga la integridad y consistencia de los datos almacenados en la aplicación. 3.2.3 Diagrama de Casos de Uso Como resultado del análisis de los requerimientos funcionales y no funcionales se obtuvo el siguiente diagrama de casos de uso UML, los cuales especifican las funcionalidades de la aplicación para poder soportar el Modelo Genérico de Gestión de Proyectos. Desde la figura 5 hasta la figura 10 representan los refinamientos de los casos de uso y la especificación de los mismos se presentan en el Anexo I. 1. Autenticar 2. Gestionar Marcos 3. Gestionar Usuarios 4. Gestionar Componentes GMTGPI 5. Generar Documento Usuario Administrador del Software Figura 5. Casos de uso: Nivel 1 Fuente: Autores Capítulo III: Marco Aplicativo 26 Figura 6. Casos de uso: Nivel 2: Autenticar Fuente: Autores 2. Gestionar Marcos 2.2 A partir de uno existente 2.1 Nuevo 2.3 Modificar Marco 2.4 Eliminar Marco 2.3.1 Relacionar Marco Gerencial con Tecnico «extends» «extends» «extends» «uses» «extends» Figura 7. Casos de uso: Nivel 2: Gestionar Marcos Fuente: Autores Capítulo III: Marco Aplicativo 27 Figura 8. Casos de uso: Nivel 2: Gestionar Usuarios Fuente: Autores Figura 9. Casos de uso: Nivel 2: Gestionar Componentes Fuente: Autores Capítulo III: Marco Aplicativo 28 Figura 10. Casos de uso: Nivel 2 Generar Documento Fuente: Autores 3.3 Fase 3: Diseño de la aplicación 3.3.1 Diseño de la Base de Datos. Se seleccionó el modelo relacional para la representación de la base de datos. Para lograr el almacenamiento de toda la información necesaria se crearon las siguientes tablas: • Componente. • DetalleComponente. • Marco. • Marco_DetalleComponente. • Marco_Usuario. • Usuario. • Relacionidef0. • Fase_Detallecomponente. • Actividad. • Fase. Capítulo III: Marco Aplicativo 29 Figura 11. Modelo Relacional de la Base de Datos diseñada Fuente: Autores Capítulo III: Marco Aplicativo 30 3.3.2 Diseño de los elementos estructurales de la aplicación. Se seleccionó el diagrama de clases UML para la representación de los elementos estructurares y sus relaciones. El diagrama de clases resultante de este diseño se muestra en la figura 12. Figura 12. Diagrama de Clases Fuente: Autores 3.4 Fase 4 Entrega: Generador de Marcos de Trabajo para la Gestión de Proyectos. La aplicación permite la autenticación de usuarios (ver Req_9 de la tabla 2), por lo tanto al momento de ingresar al sistema se muestra un formulario que solicita su usuario y contraseña como muestra la Figura 13, una vez ingresados estos datos, se presiona el botón “Ingresar” si los datos son correctos se ingresa a la aplicación; en caso de que ocurra un error se muestra el mensaje correspondiente a la Figura 14. Capítulo III: Marco Aplicativo 31 Figura 13. Página de Inicio Fuente: Autores Figura 14. Mensaje de error de autenticación Fuente: Autores Capítulo III: Marco Aplicativo 32 3.4.1 Iteración 1: Herramienta: Marco de Trabajo. Implementación Los marcos de trabajo pueden ser creados de tres diferentes maneras: creando un marco de trabajo nuevo, a partir de un marco de trabajo pre cargado en la herramienta por un usuario o a partir de un marco de referencia pre cargado por los administradores. Los marcos de trabajos a construir pueden presentar dos (2) enfoques, el enfoque gerencial y el técnico. Un marco de trabajo se considera completo, cuando se ha establecido el marco de trabajo gerencial y se ha enlazado con el marco de trabajo técnico. Diseño de Interfaz En la sección de Marco de Trabajo se tendrán tres (3) opciones: Crear un marco de trabajo nuevo, Crear un marco de trabajo a partir de un marco de trabajo/referencia y Listado de marcos generados por el usuario. El caso Crear un marco de trabajo nuevo pedirá al usuario Nombrar un marco, Darle una descripción y definir el tipo de enfoque Gerencial o Técnico. Luego aparece una pantalla en donde se pueden agregar o eliminar variables a cada componente del marco de trabajo. El caso Crear un marco de trabajo a partir de un marco de trabajo/referencia Ofrece la opción de elegir el enfoque para mostrar un listado de marcos pre cargados en la aplicación a fin de utilizarlos como plantilla para la creación de su propio marco. Luego aparece una pantalla en donde se pueden agregar o eliminar variables a cada componente del marco de trabajo seleccionado como base para construir el marco de trabajo propio. El caso Listado de marcos muestra una lista de los marcos generados por el usuario con las siguientes opciones: Seleccionar/agregar, Ver, Modificar y Eliminar. Capítulo III: Marco Aplicativo 33 Implementación de la interfaz de la herramienta La Figura 15 muestra la interfaz principal del marco de Trabajo con sus diferentes opciones. Figura 15. Marco de trabajo Fuente: Autores La figura 16 muestra la opción de crear un marco nuevo partiendo desde cero, pudiendo seleccionar las variables de los componentes de los marcos de referencia y/o trabajo que forman la base de conocimiento y/o agregar variables propias a los componentes. Figura 16. Marco de trabajo Nuevo Fuente: Autores Capítulo III: Marco Aplicativo 34 La figura 17. Muestra las variables que se le pueden agregar a cada componente del marco de trabajo. Figura 17. Edición de componentes del marco de trabajo Fuente: Autores La figura 18 muestra el Filtro aplicado para seleccionar el enfoque para el listado de marcos cuando creamos un marco de trabajo a partir de un marco de trabajo/referencia. Figura 18. Filtro de enfoque para listado de marcos Fuente: Autores Capítulo III: Marco Aplicativo 35 La figura 19 muestra el listado generado por el filtro de enfoque. Esta pantalla también posee filtro de marcos referenciales y/o de trabajo. Figura 19. Listado Plantillas de Marcos. Fuente: Autores 3.4.2 Iteración 2: Herramienta: Relaciones. Implementación: Es el módulo en el cual se relacionan los procesos con sus entradas, salidas, controles, herramientas y roles, para poder generar el diagrama IDEF0 donde se muestran los procesos y sus relaciones, dicho diagrama se genera en la aplicación. Por otra parte si el usuario tiene un marco de trabajo de enfoque gerencial y uno de enfoque técnico ya creados, en la herramienta de enlace podrá relacionar ambos marcos y así construir un Marco de Trabajo. Diseño de Interfaz En esta herramienta se tendrán seis (6) opciones: entradas, salidas, controles, herramientas, roles y enlace. En las opciones Entradas, Salidas, Controles, Herramientas y Roles el usuario debe seleccionar el proceso al cual se le asignaran las variables de los distintos componentes, una vez seleccionado se cargarán los componente Capítulo III: Marco Aplicativo 36 disponibles para ese marco actual y aparecerá la acción para asignar los componentes seleccionadas al proceso, así como otro para eliminar un componente asociada a un proceso. En la opción Enlace se mostrará una lista con los enlaces ya existentes y además en la opción "crear un enlace nuevo" el cual podrá crear un nuevo enlace entre los Marcos de Trabajo de Gestión Gerencial y los de Gestión Técnica. En la lista de enlaces existentes se dispone de las opciones para ver o eliminar un enlace entre marcos. En caso de seleccionar "crear enlace nuevo", aparece una pantalla en la cual se va narrando la relación que se está creando, para ello la aplicación ira solicitando los datos necesarios para ir construyendo la relación, hasta que la misma está completa y permita guardar los cambios. Implementación de la interfaz de la herramienta La Figura 20 muestra la interfaz para relacionar los procesos con las entradas. Figura 20. Relaciones Entradas - Procesos Fuente: Autores Capítulo III: Marco Aplicativo 37 La Figura 21 muestra la interfaz para relacionar los procesos con las salidas. Figura 21. Relaciones Salidas - Procesos Fuente: Autores La Figura 22 muestra la interfaz para relacionar los procesos con los Controles. Figura 22. Relaciones Controles - Procesos Fuente: Autores Capítulo III: Marco Aplicativo 38 La Figura 23 muestra la interfaz para relacionar los procesos con las herramientas. Figura 23. Relaciones Herramientas - Procesos Fuente: Autores La Figura 24 muestra la interfaz para relacionar los procesos con los roles. Figura 24. Relaciones Roles - Procesos Fuente: Autores Capítulo III: Marco Aplicativo 39 La Figura 25 muestra la interfaz para enlazar los marcos y modificar los enlaces ya creados. Figura 25. Relaciones Enlace Fuente: Autores La Figura 26 muestra la interfaz para crear un marco, empieza la narración y se debe seleccionar primero el proceso a enlazar. Figura 26. Relaciones Enlace Paso 1 Fuente: Autores Capítulo III: Marco Aplicativo 40 La Figura 27 continua la interfaz para crear un marco, ahora se debe seleccionar el artefacto, el cual es salida del proceso a enlazar. Figura 27. Relaciones Enlace Paso 2 Fuente: Autores La Figura 28 continua la interfaz para crear un marco, ahora se debe seleccionar el marco de trabajo a enlazar. Figura 28. Relaciones Enlace Paso 3 Fuente: Autores Capítulo III: Marco Aplicativo 41 La Figura 29 continua la interfaz para crear un marco, ahora se debe seleccionar el proceso del marco de trabajo a enlazar. Figura 29. Relaciones Enlace Paso 4 Fuente: Autores La Figura 30 continua la interfaz para crear el enlace en el sentido contrario, ahora se debe seleccionar el proceso del marco a enlazar que retorna la información al marco de trabajo inicial de donde se parte para establecer el enlace. Figura 30. Relaciones Enlace Paso 5 Fuente: Autores Capítulo III: Marco Aplicativo 42 La Figura 31 continua la interfaz para crear el enlace, ahora se debe seleccionar el artefacto del proceso para continuar creando el enlace. Figura 31. Relaciones Enlace Paso 6 Fuente: Autores La Figura 32 continua la interfaz para continuar con la creación del enlace entre los Marcos de Trabajo de enfoque Gerencial y enfoque Técnico, ahora se debe seleccionar el proceso que recibe el artefacto del marco de trabajo de enlace. Figura 32. Relaciones Enlace Paso 7 Fuente: Autores Capítulo III: Marco Aplicativo 43 La Figura 33 continua la interfaz ahora con la opción para guardar el enlace creado entre los Marcos de Trabajo de enfoque gerencial y técnico. Figura 33. Relaciones Enlace Paso 8 Fuente: Autores 3.4.3 Iteración 3: Herramienta: Resumen. Implementación: Resumen de toda la información cargada en la aplicación, muestra al usuario como está quedando su marco de trabajo. Diseño de Interfaz En la sección de Resumen se tendrán dos (2) Casos: Visualizar marco de trabajo y exportar a PDF. El caso Visualizar marco de trabajo mostrará al usuario como está quedando toda la información que éste ha cargado a la aplicación. El caso Exportar a PDF genera un archivo en formato PDF con el Marco de Trabajo generado por el usuario. Capítulo III: Marco Aplicativo 44 Implementación de la interfaz de la herramienta La Figura 34 muestra la interfaz donde se visualiza la información cargada a la aplicación por el usuario. Figura 34. Resumen Fuente: Autores Capítulo III: Marco Aplicativo 45 La Figura 35 muestra la solicitud para almacenar o ver el archivo PDF. Figura 35. Resumen Generar PDF Fuente: Autores 3.4.4 Iteración 4: Herramienta: Administrar. Implementación: Esta opción sólo está disponible para los usuarios con rol de administrador de la aplicación, sus funciones son: • Crear, modificar y eliminar Usuarios. • Crear, modificar y eliminar Componentes. • Crear, modificar y eliminar Marcos de Trabajo. • Crear, modificar y eliminar Marcos de Referencia. Diseño de Interfaz En la sección Administrar se encuentran tres (3) Módulos: Usuarios, Marcos y Componentes. • En el módulo Usuarios se muestran tres acciones: Nuevo, Realizar Búsqueda y Listado de Usuarios. Capítulo III: Marco Aplicativo 46 − En la acción Nuevo se muestra el formulario con los datos que debemos suministrar para la creación de un nuevo usuario. − En la acción Realizar Búsqueda se muestra el formulario con el cual vamos a filtrar nuestra búsqueda. − En la acción Listado se muestra los usuarios creados y su rol en la aplicación, los cuales presentan tres opciones dentro de la columna acción de cada usuario listado: Ver, Modificar y Eliminar.  En la Acción Ver nos muestra los siguientes datos del usuario seleccionado:  Nombres, Apellidos, Usuario, Correo y Tipo de Usuario.  En la Acción Modificar nos muestra un formulario con los datos del usuario seleccionado, el cual podemos editar a voluntad con la condición de ingresar una clave y comprobarla. Por último dos acciones Guardar y Cancelar.  En la Acción Eliminar se nos abre una ventana con un mensaje “¿Está seguro que desea eliminar el usuario cuyo usuario es:…? Y dos acciones: Aceptar y Cancelar. • En el módulo Marcos se muestran tres acciones: Nuevo, Búsqueda Avanzada y Listado de Marcos. − En la acción Nuevo primero se nos pide el enfoque, luego de elegir nos pide Nombre del Marco y Descripción. − En la acción Búsqueda Avanzada se muestra el formulario con el cual vamos a filtrar nuestra búsqueda y una lista de los marcos ya creados. − En la acciones Listado se muestra los marcos creados, su enfoque y su enlace, a su vez presentan cuatro opciones dentro de la columna acción de cada Marco: Seleccionar/Agregar Ver, Modificar y Eliminar.  En la Acción Seleccionar/Agregar nos muestra un texto que dice: “Agregar marco de trabajo” y nos pide que coloquemos un nombre. por último nos muestra dos acciones: Guardar y Cancelar. Capítulo III: Marco Aplicativo 47  En la Acción Ver nos muestra los siguientes datos del Marco seleccionado:  Nombre, Características, Roles, Procesos, Artefactos, Entradas y Salidas, Herramientas, Controles, Mejoras y/o evolución.  En la Acción Modificar nos muestra un formulario con el nombre y la descripción del Marco seleccionado, los cuales podemos editar a voluntad. Por último dos acciones guardar y cancelar, una vez modificada esta información nos muestra el árbol con todos los componentes del marco.  En la Acción Eliminar se nos abre una ventana con un mensaje “¿Está seguro que desea eliminar el Marco “nombre del marco” cuyo enfoque es: “tipo de enfoque”? Y dos acciones: Aceptar y Cancelar. • En el módulo Componentes se muestran dos acciones: Nuevo Componente y Listado de Componentes. − En la acción Nuevo Componente primero se nos pide el nombre del componente y descripción. − En la acción Listado se muestra los Nombres, su Descripción y tres opciones dentro de la columna acción de cada Componente: Ver, Modificar y Eliminar.  En la Acción Ver nos muestra los siguientes datos del Marco seleccionado:  Nombre y Descripción.  En la Acción Modificar nos muestra un formulario con el nombre y la descripción del Componente seleccionado, los cuales podemos editar a voluntad. Por último dos acciones, guardar y cancelar.  En la Acción Eliminar se nos abre una ventana con un mensaje “¿Está seguro que desea eliminar el Componente “nombre del marco”? Y dos acción, aceptar y cancelar. javascript:this.mostrarArbol2(5); javascript:this.mostrarArbol2(5); Capítulo III: Marco Aplicativo 48 Implementación de la interfaz de la herramienta La Figura 36 muestra la interfaz principal de Administrar Usuarios con sus diferentes casos. Figura 36. Administrar Usuarios Fuente: Autores La Figura 37 muestra la interfaz para agregar nuevo usuario. Figura 37. Nuevo Usuario Fuente: Autores Capítulo III: Marco Aplicativo 49 La Figura 38 muestra la interfaz de búsqueda de Administrar Usuarios. Figura 38. Realizar Búsqueda Usuarios Fuente: Autores La Figura 39 muestra la interfaz principal del Administrar marco de Trabajo con sus diferentes casos. Figura 39. Administrar Marcos Fuente: Autores Capítulo III: Marco Aplicativo 50 La Figura 40 muestra el Filtro de enfoque para listado de marcos cuando creamos un marco de trabajo a partir de un marco de trabajo/referencia. Figura 40. Nuevo Marco. Filtro Enfoque Fuente: Autores La Figura 41 muestra la búsqueda de Administrar Marcos. Figura 41. Realizar Consulta Marco Fuente: Autores Capítulo III: Marco Aplicativo 51 La Figura 42 muestra la interfaz principal de Administrar Componentes con sus diferentes casos. Figura 42. Administrar Componente Fuente: Autores La Figura 43 muestra la interfaz para agregar Componentes. Figura 43. Nuevo Componente Fuente: Autores Capítulo III: Marco Aplicativo 52 3.5 Fase 5: Pruebas de la aplicación 3.5.1 Diseño de Pruebas de Integración Para llevar a cabo esta prueba se diseña una lista con una serie de pasos a realizar basándose en lo propuesto por (Roca, 2005), los cuales abarcan la integración entre ellas, de las diferentes herramientas implementadas en la aplicación. La tabla 2 (ver Anexo II) representa la lista de pasos para llevar a cabo la prueba de integración. Esta prueba fue realizada en la aplicación por los tesistas, para cada uno los resultados fueron los siguientes: Javier Prato: de los 19 pasos de la prueba de integración se encontraron 4 actividades fallidas y 15 exitosas. César Rodríguez: de los 19 pasos de la prueba de integración se encontraron 6 actividades fallidas y 13 exitosas. Luego de evaluar las actividades fallidas se encontraron los errores de funcionamiento y se procedió a iniciar el proceso de corrección de los fallos. Una vez corregidas las actividades que presentaron errores, se aplicó nuevamente la prueba de integración y se obtuvo el 100% de las actividades exitosas. 3.5.2 Diseño de Pruebas de Usabilidad La Guía está estructurada en forma de lista de chequeo para facilitar la práctica de la evaluación (Aragonés, 2005). Como se puede observar, todos los puntos están formulados como preguntas, dónde la respuesta afirmativa implica que no existe un problema de usabilidad, y la negativa que sí. Se plantean una serie de puntos que toda aplicación Web usable y accesible debe cumplir. Una vez realizado el diseño de la prueba de usabilidad tabla 3 (ver Anexo II), se seleccionaron cuatro personas para realizarla, una de estas personas conocen a fondo los términos de Gestión de Proyectos, mientras que las tres restantes tienen conocimientos de computación. Los resultados obtenidos fueron: • Existían algunos íconos que no representan claramente la acción a realizar. Para solucionarlo se cambiaron los íconos que no cumplían con esta característica; se colocaron íconos acorde con lo que representan y se le coloco el título de la acción pertinente. • Existían mensajes de error que no indicaban la acción correctora. Para este caso se clarificó qué acciones deben ser tomadas para corregir el Capítulo III: Marco Aplicativo 53 error. • En los formularios existían problemas de consistencia de interfaz, ubicación de botones y tamaños de los campos. Para lo cual se esquematizaron todos de forma general, se colocaron los botones en las mismas posiciones y los campos de los mismos tamaños. En el Anexo IV se presenta además la prueba de la aplicación en dos organizaciones en Venezuela. 3.6 Arquitectura de la aplicación Figura 44. Nuevo Componente Fuente: Autores Análisis de Resultados 54 Análisis de Resultados Se cumplió con el objetivo del trabajo, el cual fue desarrollar una aplicación Web que generara Marcos de Trabajo para la Gestión de Proyectos de Informática. Se obtuvo conocimientos sobre los términos de Gestión de Proyectos tales como: Proyecto, Gerencia de Proyecto, Proyectos de Informática, Gerencia de proyectos de Informática, Modelo Genérico de Gestión Proyectos de Informática entre otros. Se definió con éxito la plataforma. Quedando seleccionada: Linux Ubuntu 10.10, Apache2, Php 5.3 y MySql 5. Se implementó la interfaz de usuario necesaria y se creó el modelo de base de datos correspondiente para el almacenamiento de información del Generador de Marcos de Trabajo para la Gestión de Proyectos de Informática. Se construyó la herramienta que soporta el modelo genérico de gestión de proyectos considerando tanto la gestión gerencial como la técnica y la integración entre ambos. Dos organizaciones Venezolanas construyeron sus Marcos de Trabajo de Gestión de Proyectos usando la herramienta desarrollada. Se desarrollaron los Manuales de Usuario, Sistema e Instalación, los mismos se cargaron en Moodle. Conclusiones 55 Conclusiones La investigación realizada en el marco conceptual junto al desarrollo explicado en el marco aplicativo dio como resultado una aplicación cuyo nombre es Generador de Marcos de Trabajo para la Gestión de Proyectos de Informática. Esta aplicación está desarrollado bajo un ambiente Web. La aplicación desarrollada brinda los siguientes beneficios: • Interfaz sencilla y amigable. • Pone a la disposición de los usuarios diversos marcos de referencia y marcos de trabajo, para que este pueda observar y estudiar múltiples enfoques y así pueda tomar o usar algunas variables de los Marcos presentados como base de conocimiento, según las necesidades de la organización. • Posibilidad de agregar o quitar variables a los distintos componentes en cualquier momento, de forma tal de hacer la base de conocimiento más robusta a medida que pasa el tiempo. Para llevar a cabo el desarrollo e implementación se utilizó el método de desarrollo de “Entrega por Etapas” adaptada a los requerimientos planteados. Esta metodología permitió llevar a cabo pruebas al finalizar cada iteración dentro de cada una de sus fases, lo cual fue de gran utilidad ya que permitió comprobar el funcionamiento adecuado de cada una de las herramientas una vez implementadas. Las herramientas fueron desarrolladas en software libre y bajo ambiente Web, lo que aporta la gran ventaja de permitir la escalabilidad de la aplicación, ya que los usuarios tienen acceso al código fuente y pueden realizar modificaciones para agregarle las funcionalidades que deseen. Los manuales de usuario y de sistema serán montado en Moodle. Referencias 56 Referencias (Apache,2011) Servidor HTTP Apache. Disponible en: http://es.wikipedia.org/wiki/Servidor_HTTP_Apache (Aplicacion,2011) Aplicación web. Disponible en: http://es.wikipedia.org/wiki/Aplicaci%C3%B3n_web (Aragonés, 2005) (Laboratorio Aragonés de Usabilidad, 2005). Laboratorio Aragonés de Usabilidad. Usabilidad y Accesibilidad de Sitios Web. Lista de Comprobaciones. Disponible en: http://www.laboratoriousabilidad.com/documentos/checklist. pdf (Cormier,2001) Cormier (2001). Proceedings of the Project management institute annual seminars & simposium. Nashville, Tenn,USA. (Degerencia.com, 2007) Gerencia de Proyectos. Disponible en: http://www.degerencia.com/tema/gerencia_de_proyectos (Di Vasta,2007) Di Vasta, Concettina. Modelo Genérico de Gestión Técnica de Proyectos de Informática. Trabajo de Ascenso presentado en la UCV para ascender a la categoría de Agregado. Mención Honorífica. Año 2007 (Di Vasta,2008) Di Vasta, Concettina. Modelo Genérico de Gestión de Proyectos de Informática. Proyecto de Tesis Doctoral presentado y aprobado por el Consejo de la Facultad de Ciencias de la UCV. Año 2008 (Di Vasta,2011) Di Vasta, & Martínez (2011). Modelo Genérico de Gestión de Proyectos de Informática. Tesis Doctoral en Ciencias de la Computación. Universidad Central de Venezuela. Trabajo no publicado, por defender. (Di Vasta y Martínez,2005) Di Vasta C, y Martínez F. Gestión Técnica de Proyectos de Informática. 2005 (Martinez,2003) Dr. Martínez V. Fernando (2003). Metodología de Investigación de Proyectos Factibles. Universidad Nacional Experimental Politécnica de la Fuerza Armada. (UNEFA) Núcleo Caracas. (Modelo,2011) Modelo relacional. Disponible en: http://es.wikipedia.org/wiki/Modelo_relacional Referencias 57 (Montoya,2006) Montoya (2006). Sistema de Gestión de Proyectos (Tesis deBachelor of Science in Systems Engineering, TECANA AMERICAN UNIVERSITY). (Mysql,2011) MySQL. Disponible en: http://es.wikipedia.org/wiki/MySQL (MVC, 2011) Modelo Vista Controlador. Disponible en: http://es.wikipedia.org/wiki/Modelo_Vista_Controlador (National Institute of Standard and Technology, 1993a) National Institute of Standard and Technology. (1993a). Integration Definition for Function Modeling (IDEF0). EUA: Federal Information Processing Publication. (National Institute of Standard and Technology, 1993b) National Institute of Standard and Technology. (1993b). Integration Definition for Information Modeling (IDEF1X). EUA: Federal Information Processing Publication. (PHP,2011) PHP. Disponible en: http://es.wikipedia.org/wiki/PHP (Piorun,2003) Piorun. (2003). De por qué fracasan los Proyectos. Disponible en: http://www.degerencia.com/articulo/por_que_fracasan_los_ proyectos/imp (Project Management Institute,2004) Project Management Institute, Inc. (2004). Guía de los fundamentos de la Gerencia de Proyectos. (Guía del PMBOK). Tercera Edición. 12, 393. (Roca, 2005) Roca (2005). Pruebas de Integración de Productos: Un enfoque práctico. Disponible en: www.greensqa.com/archivos/Art01- PruebasIntegracionv1.pdf 58 ANEXOS Anexo I: Especificaciones de Casos de Uso 59 Anexo I: Especificación de casos de uso A continuación se desglosa la descripción de los Casos de uso presentados anteriormente en el Marco Aplicativo. Los actores especificados cumplen con un conjunto de roles que se explican como sigue: a. Usuario: persona o empresa que interactúa con la aplicación cuya finalidad es generar el marco de trabajo que va a usar para el desarrollo de sus proyectos. b. Administrador de la aplicación: persona o usuario encargado de la instalación, mantenimiento de la aplicación, la data e información de la misma. Posee permisología completa sobre todas las funciones de la aplicación. Tabla 1. Caso de uso: Autenticar Caso de Uso: Autenticar Referencia: 1 Actores: Usuarios y Administrador de software. Descripción: Esta funcionalidad permite iniciar sesión a todas aquellas personas que estén autorizadas y registradas como usuarios válidos del software, por lo que poseen un nombre de usuario y contraseña los cuales son datos necesarios para su ingreso en el sistema. Dependiendo del rol del usuario autenticado el sistema desplegará ciertas funcionalidades permitidas. Caso de Uso relacionado: Curso Típico de Eventos Acción del Actor Respuesta del Sistema 1: Ingresar nombre de usuario y contraseña. 2: Ingreso de usuario exitoso. Ingreso al sistema. Curso Alternativo de Eventos 3: Mensaje indicando datos incorrectos de usuario. Precondición Poscondición Anexo I: Especificaciones de Casos de Uso 60 Tabla 2. Caso de uso: Gestionar Marco Caso de Uso: Gestionar Marco Referencia: 2 Actores: Usuarios y Administrador de software. Descripción: Permite realizar operaciones como crear nuevos marcos, modificarlos o incluso eliminarlos. Caso de uso relacionado: 2.1, 2.2, 2.3, 2.4 Curso Típico de Eventos Acción del Actor Respuesta del Sistema 1: Ejecuta la acción crear nuevo. 2: Selecciona acción crear un marco a partir de uno existente. 3: Ejecuta la acción modificar marco. 4: Selecciona la acción eliminar marco. 1.1: Muestra la interfaz de crear marco nuevo. 2.1: Muestra la interfaz de crear marco a partir de uno existente. 3.1: Muestra interfaz para modificar un marcos. 4.1: Muestra la interfaz de eliminar marcos. Curso Alternativo de Eventos Precondición Haber ingresado con un usuario válido a la aplicación. Poscondición Anexo I: Especificaciones de Casos de Uso 61 Tabla 3. Caso de Uso: Crear Marco Caso de Uso: Crear Marco Nuevo Referencia: 2.1 Actores: Usuarios y Administrador de software. Descripción: Dependiendo del rol del usuario, permitirá crear solo marcos de trabajo o también podrá crear marcos de referencia. Caso de Uso relacionado: Modificar Marco de Trabajo. Curso Típico de Eventos Acción del Actor Respuesta del Sistema 1: Se introduce el nombre del marco, la descripción y se selecciona el enfoque. 2: Mensaje “marco agregado con éxito”. Curso Alternativo de Eventos 1.1: Debe llenar todos los campos. Precondición Tipo de usuario. Poscondición Marco creado es seleccionado como marco de trabajo actual y se redirige a la sección de modificación del mismo. Anexo I: Especificaciones de Casos de Uso 62 Tabla 4. Caso de Uso: A partir de uno existente Caso de Uso: Crear un Marco de Trabajo a partir de uno existente Referencia: 2.2 Actores: Usuarios y Administrador de software. Descripción: El usuario debe seleccionar un marco pre-cargado en el sistema para copiárselo y empezar a partir de allí a hacer las modificaciones deseadas si son necesarias. Caso de Uso relacionado: Curso Típico de Eventos Acción del Actor Respuesta del Sistema 1: Seleccionar el enfoque. 2: Seleccionar el marco base de la lista ofrecida. 3: Introducir el nombre y la descripción del marco. 4: Marco de trabajo creado con éxito. Curso Alternativo de Eventos 1.1: Ventana con mensaje “debe seleccionar un enfoque”. Click en botón aceptar. 3.1: Debe llenar todos los campos. Precondición Poscondición Marco creado es seleccionado como marco de trabajo actual y se redirige a la sección de modificación del mismo. Anexo I: Especificaciones de Casos de Uso 63 Tabla 5. Caso de Uso: Modificar Marco Caso de Uso: Modificar Marco Referencia: 2.3 Actores: Usuarios y Administrador de software. Descripción: Según el rol del usuario, permite modificar la información del marco creado por sí mismo o si eres administrador puedes modificar cualquier marco almacenado en el sistema. Caso de Uso relacionado: Curso Típico de Eventos Acción del Actor Respuesta del Sistema 1: Se introduce el nombre del marco, la descripción y se selecciona el enfoque. 3: Seleccionar variables de componente para añadir o quitar del marco. 2: Mensaje: marco de trabajo actualizado con éxito. Curso Alternativo de Eventos 1.1: Debe llenar todos los campos. Precondición Poscondición Anexo I: Especificaciones de Casos de Uso 64 Tabla 6. Caso de Uso: Relacionar Marco Gerencial con Marco Técnico Caso de Uso: Relacionar Marco Gerencial con Marco Técnico Referencia: 2.3.1 Actores: Usuarios y Administrador de software. Descripción: Los usuarios pueden relacionar el marco de trabajo de enfoque gerencial creado con un marco de trabajo de enfoque técnico si se posee. Caso de Uso relacionado: Curso Típico de Eventos Acción del Actor Respuesta del Sistema 1: Se selecciona el proceso en el marco desde donde se va a realizar el enlace. 2: Selecciona el artefacto con el que se va a enlazar. 3: Selecciona un marco de trabajo. 4: Seleccione un proceso del marco con el que se quiere hacer el enlace. 5: Se selecciona el proceso en el marco desde donde se va a realizar el enlace. 6: Selecciona el artefacto con el que se va a enlazar. 7: Seleccione un proceso del marco con el que se quiere hacer el enlace. 8: Se ejecuta la acción de guardar los cambios. 1.1: Muestra la lista de artefactos relacionados con el proceso seleccionado. 2.1: Muestra la lista de marcos con los que se puede realizar en el enlace. 3.1: Muestra la lista de procesos del marco con el que se realizará el enlace. 4.1: Muestra la lista de procesos del marco desde el que se realizará el enlace de retorno con el marco inicial. 5.1: Muestra la lista de artefactos relacionados con el proceso seleccionado. 6.1: Muestra la lista de procesos del marco inicial. 7.1: Muestra la lista de elementos que conforman el enlace y la acción de guardar los cambios. Anexo I: Especificaciones de Casos de Uso 65 8.1: Muestra un mensaje indicando enlace realizado con éxito. Curso Alternativo de Eventos 1.2, 2.2, 3.2, 4.2, 5.2, 6.2, 7.2: En el párrafo se ejecuta la acción eliminar/deshacer que aparece al lado del texto que se acaba de agregar en el mismo para comenzar desde el paso anterior. Precondición Poscondición Tabla 7. Caso de Uso: Eliminar Marco Caso de Uso: Eliminar Marco Referencia: 2.4 Actores: Usuarios y Administrador de software. Descripción: Los usuarios pueden eliminar sus marcos de trabajo creados, a menos que sea el administrador que es capaz de eliminar cualquier marco. Caso de Uso relacionado: Curso Típico de Eventos Acción del Actor Respuesta del Sistema 2: Selecciona acción aceptar. 1: Muestra mensaje de confirmación de para eliminar el marco de trabajo. 2: Mensaje: marco de trabajo eliminado con éxito. Curso Alternativo de Eventos 2.1: No es posible eliminar el marco cuando está siendo usado por otro usuario. Precondición Poscondición Anexo I: Especificaciones de Casos de Uso 66 Tabla 8. Caso de Uso: Gestionar Usuarios Caso de Uso: Gestionar Usuarios Referencia: 3 Actores: Administrador de software. Descripción: Permite realizar operaciones como crear nuevos marcos, modificarlos o incluso eliminarlos. Caso de uso relacionado: 3.1, 3.2, 3.3, 3.4 Curso Típico de Eventos Acción del Actor Respuesta del Sistema 1: Ejecuta la acción listar usuarios. 2: Selecciona acción crear un usuario. 3: Ejecuta la acción modificar un usuario. 4: Selecciona la acción eliminar un usuario. 1.1: Muestra una lista de los usuarios del sistema. 2.1: Muestra la interfaz para crear un usuario. 3.1: Muestra interfaz para modificar un usuario. 4.1: Muestra la interfaz de eliminar un usuario. Curso Alternativo de Eventos Precondición Haber ingresado con un usuario administrador en la aplicación. Poscondición Anexo I: Especificaciones de Casos de Uso 67 Tabla 9. Caso de Uso: Listar usuarios Caso de Uso: Listar Usuario Referencia: 3.1 Actores: Administrador de software. Descripción: Se listan los usuario usando diferentes criterios de búsqueda. Caso de uso relacionado: Curso Típico de Eventos Acción del Actor Respuesta del Sistema 1: Ejecuta la acción volver. 1.1: Vuelve a la interfaz de gestión de usuarios. Curso Alternativo de Eventos Precondición Haber ingresado con un usuario administrador en la aplicación. Poscondición Tabla 10. Caso de Uso: Crear usuarios Caso de Uso: Crear Usuario Referencia: 3.2 Actores: Administrador de software. Descripción: Permitirá crear usuarios del sistema. Caso de uso relacionado: Curso Típico de Eventos Acción del Actor Respuesta del Sistema 1: Ingresar los datos del usuario. 2: Seleccionar el perfil del usuario. 3: Ejecutar la acción guardar. 3.1: Muestra el mensaje usuario creado con éxito. Curso Alternativo de Eventos 3.2: No se ha podido crear el usuario. Precondición Haber ingresado con un usuario administrador en la aplicación. Poscondición Anexo I: Especificaciones de Casos de Uso 68 Tabla 11. Caso de Uso: Modificar usuarios Caso de Uso: Modificar Usuario Referencia: 3.3 Actores: Administrador de software. Descripción: Permite modificar la información de los usuarios registrados en el sistema. Caso de uso relacionado: Curso Típico de Eventos Acción del Actor Respuesta del Sistema 1: Ingresar los datos del usuario. 2: Seleccionar el perfil del usuario. 3: Ejecutar la acción guardar. 3.1: Muestra el mensaje usuario modificado con éxito. Curso Alternativo de Eventos 3.2: No se ha podido modificar el usuario Precondición Haber ingresado con un usuario administrador en la aplicación. Poscondición Tabla 12. Caso de Uso: Eliminar usuarios Caso de Uso: Eliminar Usuario Referencia: 3.4 Actores: Administrador de software. Descripción: Permite eliminar usuarios registrados en el sistema. Caso de uso relacionado: Curso Típico de Eventos Acción del Actor Respuesta del Sistema 2: Selecciona aceptar. 1: Muestra el mensaje de confirmación de la acción. 2.1: Muestra el mensaje usuario eliminado con éxito. Curso Alternativo de Eventos 2.2: No se ha podido eliminar el usuario. Precondición Haber ingresado con un usuario administrador en la aplicación. Poscondición Anexo I: Especificaciones de Casos de Uso 69 Tabla 13. Caso de Uso: Gestionar Componentes Caso de Uso: Gestionar Usuarios Referencia: 4 Actores: Administrador de software. Descripción: Permite realizar operaciones como crear nuevos componentes, modificarlos o incluso eliminarlos. Caso de uso relacionado: 4.1, 4.2, 4.3, 4.4 Curso Típico de Eventos Acción del Actor Respuesta del Sistema 1: Ejecuta la acción listar componentes. 2: Selecciona acción crear un componente. 3: Ejecuta la acción modificar un componente. 4: Selecciona la acción eliminar un componente. 1.1: Muestra una lista de los componentes registrados en el sistema. 2.1: Muestra la interfaz para crear componente. 3.1: Muestra interfaz para modificar un componente. 4.1: Muestra la interfaz para eliminar un componente. Curso Alternativo de Eventos Precondición Haber ingresado con un usuario administrador en la aplicación. Poscondición Anexo I: Especificaciones de Casos de Uso 70 Tabla 14. Caso de Uso: Listar componentes Caso de Uso: Listar Componentes Referencia: 4.1 Actores: Administrador de software. Descripción: Se listan los componentes registrados en el sistema. Caso de uso relacionado: Curso Típico de Eventos Acción del Actor Respuesta del Sistema 1: Ejecuta la acción volver. 1.1: Vuelve a la interfaz de gestión de componentes. Curso Alternativo de Eventos Precondición Haber ingresado con un usuario administrador en la aplicación. Poscondición Tabla 15. Caso de Uso: Crear componentes Caso de Uso: Crear Componente Referencia: 4.2 Actores: Administrador de software. Descripción: Permitirá crear componentes para los marcos. Caso de uso relacionado: Curso Típico de Eventos Acción del Actor Respuesta del Sistema 1: Ingresar los datos del componente. 2: Ejecutar la acción guardar. 2.1: Muestra el mensaje usuario creado con éxito. Curso Alternativo de Eventos 2.2: No se ha podido crear el usuario. Precondición Haber ingresado con un usuario administrador en la aplicación. Poscondición Anexo I: Especificaciones de Casos de Uso 71 Tabla 16. Caso de Uso: Modificar componentes Caso de Uso: Modificar Componente Referencia: 4.3 Actores: Administrador de software. Descripción: Permite modificar la información de los componentes registrados en el sistema. Caso de uso relacionado: Curso Típico de Eventos Acción del Actor Respuesta del Sistema 1: Ingresar los datos del componente. 2: Ejecutar la acción guardar componente. 2.1: Muestra el mensaje componente modificado con éxito. Curso Alternativo de Eventos 3.2: No se ha podido modificar el usuario. Precondición Haber ingresado con un usuario administrador en la aplicación. Poscondición Tabla 17. Caso de Uso: Eliminar componentes Caso de Uso: Eliminar Componente Referencia: 4.4 Actores: Administrador de software. Descripción: Permite eliminar componentes registrados en el sistema. Caso de uso relacionado: Curso Típico de Eventos Acción del Actor Respuesta del Sistema 2: Selecciona aceptar. 1: Muestra el mensaje de confirmación de la acción. 2.1: muestra el mensaje componente eliminado con éxito. Curso Alternativo de Eventos 2.2: No se ha podido eliminar el usuario. Precondición Haber ingresado con un usuario administrador en la aplicación. Poscondición Anexo I: Especificaciones de Casos de Uso 72 Tabla 18. Caso de Uso: Generar Documento Caso de Uso: Generar Documento Referencia: 5 Actores: Usuarios y Administrador de software. Descripción: Permite visualizar ya sea por pantalla o generar un PDF con la información del marco de trabajo creado. Caso de uso relacionado: Curso Típico de Eventos Acción del Actor Respuesta del Sistema 2: selecciona generar el resumen html 1: Muestra la sección de generar resumen. Curso Alternativo de Eventos Precondición Haber ingresado con un usuario administrador en la aplicación. Poscondición Tabla 19. Caso de Uso: Generar HTML Caso de Uso: Generar HTML Referencia: 5.1 Actores: Usuarios y Administrador de software. Descripción: Permite visualizar por pantalla la información del marco de trabajo creado. Caso de uso relacionado: Curso Típico de Eventos Acción del Actor Respuesta del Sistema 1: Muestra el resumen del documento en formato HTML. Curso Alternativo de Eventos Precondición Haber ingresado con un usuario administrador en la aplicación. Poscondición Anexo I: Especificaciones de Casos de Uso 73 Tabla 20. Caso de Uso: Generar PDF Caso de Uso: Generar PDF Referencia: 5.2 Actores: Usuarios y Administrador de software. Descripción: Permite generar un documento PDF con la información del marco de trabajo creado. Caso de uso relacionado: Curso Típico de Eventos Acción del Actor Respuesta del Sistema 1: Muestra el resumen del documento en PDF. Curso Alternativo de Eventos Precondición Haber ingresado con un usuario administrador en la aplicación. Poscondición Anexo II: Conjunto de Pruebas 74 Anexo II: Conjuntos de Pruebas 1. Diseño de Prueba de Integración Tabla 3. Diseño de Prueba de Integración Fuente: Adaptación realizada por los Autores de (Roca, 2005). Paso Conjunto de Actividades Actividad Observaciones Exitosa Fallida 1 Registrar nuevo usuario. 2 Usar herramienta para recuperar contraseñas. 3 Iniciar sesión como usuario cliente. 4 Crear 5 clientes y 3 administradores. 5 Crear un Marco de Trabajo nuevo. 6 Modificar un Marco de Trabajo existente, agregar variables de componente, crear las relaciones entre las variables. 7 Crear nuevas variables de componente. 8 Generar PDF de un Marco de Trabajo seleccionado. 9 Crear un Marco de Trabajo nuevo a partir de un Marco existente. 10 Iniciar sesión como usuario administrador. 11 Verificar que solo el usuario administrador tenga acceso a las opciones administrativas. 12 Crear un Marco de Referencia nuevo. 13 Modificar un Marco de Referencia existente, agregar variables de componente, crear las relaciones entre las variables. 14 Crear nuevas variables de componente para el marco de referencia. 15 Generar PDF de un Marco de Referencia seleccionado. 16 Crear, modificar y eliminar Componentes. 17 Crear relación entre Marcos de Trabajo. 18 Ver un enlace entre Marcos de Trabajo. 19 Eliminar enlace entre Marcos de Trabajo. Anexo II: Conjunto de Pruebas 75 2. Diseño de Prueba de Integración A continuación aparecen cuatro columnas: • Frecuencia: En esta columna se indicará la frecuencia del problema, ¿es común o no frecuente?. • Impacto: Se evalúa el grado de dificultad que les plantea a los usuarios solucionar ese problema. • Persistencia: Se evalúa si el problema se resuelve la primera vez que se usa el sitio, o si ocurre repetidamente. • Observaciones. En este campo el evaluador puede poner cualquier observación que considere oportuna. Para puntuar la severidad de cada problema se usa una escala de 0 a 4: 0 = No se han detectado errores de este tipo. 1 = Sin importancia. Intentar solucionarlo solo si sobra tiempo. 2 = Problema minoritario, de baja prioridad. 3 =Problema grave, de alta prioridad. Es importante solucionarlo. 4 = Catástrofe. Debe ser solucionado inmediatamente. Tabla 4. Diseño de Prueba de Usabilidad Fuente: (Aragonés, 2005). Usabilidad Frecuencia Impacto Persistencia Observaciones Cada pantalla empieza con un título que describe su contenido. La terminología del menú es constante en todo el sitio. Los iconos que aparecen se identifican claramente con lo que representan. La información está organizada con categorías lógicas, fácilmente memorizables por el usuario. Los mensajes de error están en texto plano, entendible. Si una acción tiene consecuencias, el sistema proporciona información y pide confirmación antes de continuar. Anexo II: Conjunto de Pruebas 76 Usabilidad Frecuencia Impacto Persistencia Observaciones Si la respuesta se retrasa, aparece un mensaje como que el sistema está procesando la acción. Para actividades similares, los diálogos, formularios son similares. Se mantiene una navegación consistente y coherente en todas las pantallas. La distribución de los elementos estructurales se mantiene constante a lo largo de la aplicación. Se dan indicaciones para completar campos problemáticos. Los títulos son descriptivos y distintivos. Los tipos y tamaños de letra son legibles y distinguibles. Si la descripción del error es breve, el usuario puede acceder a información más detallada en línea o a otra autónoma. El mensaje de error informa cuales son las acciones correctoras. Anexo III: Manual de Instalación 77 Anexo III: Manual del Instalación El presente Manual de Instalación está dirigido a cualquier tipo de usuario que desee instalar el Generador de Marcos de Trabajo para la Gestión de Proyectos de Informática (GMTGPI), describiendo paso a paso la correcta instalación del software y guiando al usuario mediante imágenes y explicaciones detalladas de cada procedimiento a seguir. Dicho software es multiplataforma, es decir, puede ser instalado tanto en Linux/Ubuntu como en Windows. A continuación comentamos los programas necesarios para que funcione el GMTGPI, dividiéndolo según la plataforma. Programas Necesarios En Linux Los programas necesarios para que se ejecute el Generador de Marcos De Trabajo para la Gestión de Proyectos de Informática (GMTGPI) en el Sistema Operativo Ubuntu 10.10 son: 1. MySQL 5.0. 2. Apache 2.2. 3. PHP 5.3. 4. GMTGPI 1.0. En Windows Los programas necesarios para que se ejecute el Generador de Marcos de Trabajo para la Gestión de Proyectos de Informática en el Sistema Operativo Windows son: 1. AppServ 2.5.9. 2. GMTGPI 1.0. Anexo III: Manual de Instalación 78 Instalación de Software / Programas en Linux Instalación de Ubuntu 10.10 A continuación se describen los pasos para la instalación de 1. Verificar en el BIOS que el orden de arranque está configurado para que inicie desde la unidad de CD primero. 2. Insertar el primer CD de instalación de Ubuntu 10.10. 3. Una vez que se inicie el instalador, se le mostrará una pantalla inicial de bienvenida. Seleccione instalar Ubuntu. 4. Después de unos instantes se le pedirá que elija su idioma de un lista, seleccione Español. 5. Puede que necesite confirmar su mapa de teclado. Elija el valor propuesto a menos que sepa que no es el adecuado. 6. Ahora espere mientras el instalador de Ubuntu detecta el hardware y carga los otros componentes de la instalación desde el CD. 7. A continuación debe configurar la zona horaria y el reloj. El instalador intentará seleccionar la configuración automáticamente y sólo le preguntará si no puede hacerlo. Tras esta configuración se crean las cuentas de usuarios. 8. Se realiza la instalación de los archivos necesarios para el correcto funcionamiento de Ubuntu. 9. Finalizada la instalación se le solicitará que reinicie el equipo. Extraiga el medio de instalación antes de hacerlo (CD, DVD, pendrive) Instalación de Paquetes Una de las herramientas utilizada para instalar paquetes en un sistema Ubuntu es el programa llamado apt-get, que está dentro del paquete apt. Existen otras interfaces a la gestión de paquetes, como aptitude y synaptic que también se utilizan. La herramienta que se utilizará para la gestión de paquetes en este manual es aptitude. Ubuntu, ya tiene configurado todos las direcciones de repositorios de paquetes necesarios para instalar los requerimientos del GMTGPI. Anexo III: Manual de Instalación 79 Solo es necesario actualizar la lista de paquetes disponible mediante la ejecución del comando: # aptitude update Instalación de MySQL 5.0 Para instalar el paquete MySQL primero iniciamos una consola o terminal con privilegios de root, luego ejecutamos la siguiente instrucción: ~# aptitude install mysql-server-5.0 Comando en consola para instalar servidor de MySQL, Luego de instalado ese paquete, procedemos a instalar el siguiente: ~# aptitude install php5-mysql Comando en consola para instalar módulo de MySQL para PHP. Cuando se configure MySQL Server, colocar como usuario root y sin contraseña como valores por defecto. Si después se desea modificar esta información, se deberá tomar en cuenta que la conexión de ciertas aplicaciones con MySQL se realizan haciendo uso del usuario y la contraseña por lo que tendrá que reconfigurarlas si se cambia dicha información. Instalación de Apache 2.2 Para instalar el paquete APACHE se sigue el mismo procedimiento, primero iniciamos una consola o terminal con privilegios de root, luego ejecutamos la siguiente instrucción: ~# aptitude install apache2 Comando en consola para instalar el servidor HTTP Anexo III: Manual de Instalación 80 Para comprobar que el este paquete fue instalado con éxito, se inicia el navegador web y en la barra de direcciones se coloca: http://localhost Url de verificación en instalación del servidor HTTP (Apache) Si se desplegó un mensaje como el que sigue, la instalación fue exitosa: Página que indica la instalación exitosa de Apache como servidor http El directorio para montar las aplicaciones en el servidor es /var/www, en él se colocan las carpetas de aplicaciones que podrán ser llamadas desde el navegador, por ejemplo si tenemos una carpeta llamada prueba que contiene un archivo prueba.html, basta con colocar dicha carpeta en el directorio mencionado y desde el navegador colocamos el siguiente url en la barra de direcciones: http://localhost/prueba/prueba.html Url que accede a prueba.html de la carpeta prueba ubicada en /var/www Como resultado se desplegará la página prueba.html. Es importante otorgar los permisos necesarios a la carpeta después de copiarla en el directorio /var/www, de lo contrario es posible que no se pueda acceder a ella. Para cambiarle los permisos a la carpeta se utiliza el comando chmod con las opciones necesarias desde la consola de root, por ejemplo: ~/var/www# chmod –R 777 prueba Comando en consola para otorgar permiso a la carpeta prueba Esta instrucción le concederá permiso de acceso total a la carpeta de la aplicación. http://localhost/ Anexo III: Manual de Instalación 81 Instalación de PHP 5 Para instalar el paquete PHP se sigue el mismo procedimiento, primero iniciamos una consola o terminal con privilegios de root, luego ejecutamos la siguiente instrucción: ~# aptitude search php Comando en consola para listar paquetes de PHP 5 El resultado es una lista de paquetes como la siguiente: p php4-uuid - OSSP uuid module for php4 p php4-xapian - Xapian search engine interface for PHP4 p php4-xslt - XSLT module for php4 i php5 - server-side, HTML-embedded scripting lang. p php5-apache2-mod-bt - PHP bindings for mod_bt p php5-auth-pam - A PHP5 extension for PAM authentication p php5-cgi - server-side, HTML-embedded scripting lang. p php5-clamavlib - PHP ClamAV Lib - ClamAV Interface for PHP5 i A php5-cli - command-line interpreter for the php5 script i A php5-common - Common files for packages built from the php i php5-curl - CURL module for php5 p php5-dev - Files for PHP5 module development i php5-gd - GD module for php5 p php5-idn - PHP api for the IDNA library p php5-imagick - ImageMagick module for php5 p php5-imap - IMAP module for php5 Anexo III: Manual de Instalación 82 p php5-interbase - interbase/firebird module for php5 p php5-json - JSON serialiser for PHP5 p php5-ldap - LDAP module for php5 p php5-mapscript - module for php5-cgi to use mapserver p php5-maxdb - PHP extension to access MaxDB databases Listado de paquetes de PHP5 La cual contiene todos los nombres de paquetes que estén relacionados con PHP, en este caso instalaremos el paquete php5. Para instalar dicho paquete se debe ejecutar la siguiente instrucción: ~# aptitude install php5 Comando en consola para instalar el paquete php5 Para comprobar que el este paquete fue instalado con éxito, hay que crear un archivo de extensión .php y montarla en el servidor http, por ejemplo: crear un archivo de nombre info.php con el siguiente código: <?php phpinfo(); ?> Archivo en PHP Luego, guardar dicho archivo en la carpeta /var/www/prueba que fue creada en la sección anterior, finalmente se inicia el navegador Web y en la barra de direcciones se coloca: http://localhost/prueba/info.php Url con la verificación de la instalación de PHP http://localhost/prueba/info.php Anexo III: Manual de Instalación 83 Si se desplegó una página como la que sigue, la instalación fue exitosa: Página de Verificación de Instalación Exitosa de PHP 5 Instalación de GMTGPI 1.0 Para instalar GMTGPI 1.0 primero es necesario instalar la base de datos, para ello se utiliza la consola mysql, la cual se inicia de la siguiente manera: ejecutar el comando mysql en la consola de root, como no tiene contraseña por defecto entrará directamente: ~# mysql mysql> Comando en consola iniciar instalación de la base de datos Desde la consola ejecutamos el script de la base de datos del GMTGPI. Una vez creada la base de datos, se coloca la carpeta de la aplicación GMTGPI en el directorio /var/www, y se le otorgan los permisos a dicha carpeta (como se explicó anteriormente). Finalmente, se inicia el navegador y se coloca la siguiente url (http://localhost/GMTGPI/index.php) en la barra de direcciones: Url que realiza la verificación de la instalación del GMTGPI Anexo III: Manual de Instalación 84 Si se desplegó una página como la que sigue, la instalación fue exitosa: Página Inicio del GMTGPI Instalación de Programas en Windows Instalación de AppServ 2.5.9. El primer paso, es ejecutar el programa de instalación del AppServ 2.5.9 Programa de Instalación del AppServ 2.5.9 En los pasos siguientes, es necesario instalar todos los componentes que provee como lo son: Apache HTTP Server (Servidor HTTP Apache), MySQL Database (Base de datos MySQL), PHP y phpMyAdmin Anexo III: Manual de Instalación 85 Programa de Instalación del AppServ 2.5.9 – Instalación de componentes Posteriormente es necesario indicar el nombre del servidor y un email Programa de Instalación del AppServ 2.5.9 – Configuración inicial Anexo III: Manual de Instalación 86 A continuación se configura el password como root y seguidamente empieza a instalarse los paquetes del AppServ 2.5.9 Programa de Instalación del AppServ 2.5.9 – Configuración password - root La instalación del AppServ 2.5.9 es exitosa si se muestra una pantalla como la siguiente: Programa de Instalación del AppServ 2.5.9 – Instalación exitosa Anexo III: Manual de Instalación 87 Instalación de GMTGPI 1.0. Una vez instalado el AppServ 2.5.9 se inicia el navegador web y se procede a colocar la siguiente url en la barra de direcciones (http://localhost), a continuación se desea crear la base de datos, por lo que se escoge la opción que está seleccionada en la siguiente figura: Página para acceder a la creación de la base de datos Anexo III: Manual de Instalación 88 Al seleccionar la opción señalada anteriormente, nos solicitará el nombre de usuario y la contraseña de MySQL, en nuestro caso es (mysql) Página donde se solicita el nombre de usuario y contraseña de MySQL Al acceder a phpMyAdmin se procede a crear una nueva base de datos, colocamos el nombre y la codificación utf8 Página que crea la base de datos del GMTGPI Anexo III: Manual de Instalación 89 Procedemos a importar el archivo .sql para crear la base de datos, ubicamos la localización del archivo como lo muestra la siguiente figura Página que importa el archivo de la base de datos, para la creación satisfactoria Seguidamente de la creación exitosa de la base de datos, se debe conocer la ruta donde se instaló el AppServ 2.5.9 y esa es por defecto C:\AppServ, a menos que se haya indicado en el programa de instalación otra ruta. Dentro de la carpeta www, se va a colocar el GMTGPI 1.0. Anexo III: Manual de Instalación 90 Ruta del AppServ 2.5.9 en el Sistema Operativo Windows Finalmente se inicia el navegador web para la verificación del acceso al GMTGPI, indicando en la barra de direcciones la siguiente url: http://localhost/GMTGPI, donde GMTGPI es la carpeta del software contenida en C:\AppServ\www, si se muestra la siguiente figura, la instalación de la aplicación ha sido exitosa: Página de Inicio de sesión del GMTGPI Anexo III: Manual de Instalación 91 ¿Dónde se instala el Software? El Generador de Marcos de Trabajo para la Gestión de Proyecto de Informática (carpeta GMTGPI) se debe colocar en la carpeta www del AppServ, para su correcto funcionamiento: Ruta de acceso al software Paquete de directorios del Software La distribución de los directorios del Generador de Marcos de Trabajo para la Gestión de Proyectos de Informática, vienen dados por las carpetas de: clases, controladores, includes, módulos y vistas como lo muestra la siguiente figura: Paquete de directorios del software Anexo III: Manual de Instalación 92 Prueba inicial del Software Para el acceso al Generador de Marcos de Trabajo para la Gestión de Proyectos de Informática, se inicia el navegador web y en la barra de direcciones se coloca la siguiente url: http://localhost/GMTGPI/, siendo GMTGPI la carpeta contenedora del software y que previamente fue ubicada en la ruta C:\AppServ\www\GMTGPI Página de inicio de sesión del software Anexo IV: Manual del Sistema 93 Anexo IV: Manual del Sistema Introducción El Manual del Sistema es el documento que describe el funcionamiento de un sistema y cómo está organizado, el cual va dirigido a usuarios programadores con la finalidad de guiarlos en el manejo y estructura de un sistema en particular. En el presente manual se describe el funcionamiento interno de la aplicación Generador de Marcos de Trabajo para la Gestión de Proyectos, se muestra su estructura de directorios, función de cada carpeta que lo compone y la forma en que se realiza la interconexión entre los archivos. 1 Estructura del Directorio La aplicación Generador de Marcos de Trabajo para la Gestión de Proyectos está compuesto por la siguiente estructura de directorios: Figura 1. Estructura de directorios del SGMTGP. Fuente: GMTGP La idea de esta estructura de directorios es hacer del SGMTGP, un sistema modular y escalable. A continuación se describirá el contenido de cada directorio: • www: usualmente la carpeta raíz del servidor web, en este directorio deben estar todos los archivos que serán usados por el sistema. Anexo IV: Manual del Sistema 94 • gmtgp: es el directorio que contiene todos los archivos para el funcionamiento de la aplicación, tales como scripts, hojas de estilo en cascada e imágenes, el punto de entrada a la aplicación es index.php. Este directorio debe estar contenido en www y dentro hallaremos todo lo que se muestra en la figura 1. • config: en este directorio se hallan los archivos necesarios para configurar la aplicación. • controladores: contiene todos los archivos que reciben los eventos de entrada desde las vistas y realizan la lógica del sistema, estos son de la forma <nombre>.php, donde el <nombre> indica la función o módulo del sistema que maneja ese controlador. • dompdf: este directorio alberga todos los archivos de la librería dompdf necesarios para la generación de PDF. • includes: contiene los archivos y librerías para realizar funciones adicionales que son o bien común a todos los módulos o por su diseño no pueden ser asociados un módulo en particular. • vistas: contiene archivos que son vistas del sistema, es decir aquellas que contienen elementos de interfaz. Las vistas son contenedoras de módulos. En todas las vistas se encuentra la cabecera de la interfaz, el menú principal, el nombre del usuario autenticado y el marco de trabajo actual. En este directorio también se consiguen los siguientes subdirectorios: o images: contiene los iconos e imágenes que son usadas en la interfaz. o js: contiene archivos javascript, usados para validaciones y operaciones del lado del cliente. o style: contiene archivos .css (Cascading Style Sheets, hojas de estilo en cascada) e imágenes que definen estilo a la interfaz del sistema. o app: el directorio app contiene la vista plantilla o layout de la aplicación así como el punto de entrada funcional y menú. o asistente: este directorio provee los scripts php necesario para implementar el asistente de creación de marcos. o componentes: contiene los archivos necesarios para la creación de nuevos componentes de los marcos. Anexo IV: Manual del Sistema 95 o marcos: en este directorio encontraremos los archivos que se usan para la administración de los marcos de trabajo y marcos de referencia. o relaciones: contiene los scripts php que se usan para establecer las relaciones entre variables de componente y las relaciones entre marcos. o resumen: aquí se encuentran los archivos encargados de generar el documento resumen del marco de trabajo o de referencia. o usuarios: todo lo necesario para la administración de usuarios del sistema. o variables: archivos necesarios para la administración de las variables de componente de marcos. • módulos: contiene los archivos para trabajo de tareas específicas de de las vistas y generación de gráficos, aquí se encuentran los archivos necesarios para generar los gráficos del resumen del marco de trabajo. 2 Modularidad del GMTGP Teniendo en cuenta aspectos de seguridad, se diseñó GMTGP dividiendo la aplicación en módulos, este esquema permite especificar la forma en que se van a presentar lo elementos gráficos en una plantilla que se usa para construir la interfaz en diferentes partes de la aplicación. En la sección de entrada o inicio el menú principal, en cada ítem, refiere a cada uno de los módulos sistema, los cuales puede ser invocados, si las condiciones necesarias son dadas, en un marco precargado. La configuración del GMTGP es muy simple y se realiza alterando los valores necesarios en el archivo Configuracion.php, la conexión a la base de datos se realiza tomando la configuración indicada en ese archivo usando la clase Conexión definida en el archivo conexion.php, esta clase es mostrada en la figura 3. Anexo IV: Manual del Sistema 96 Figura 2. Archivo de Configuración del GMTGP. Fuente: Autores. Figura 3. Archivo conexion.php del GMTGP. Fuente: Autores. Anexo IV: Manual del Sistema 97 El archivo index.php es simple y contiene la funcionalidad necesaria para la autenticación del usuario y la redirección al módulo de inicio de la aplicación donde se concentra el grueso de la presentación e interacciones, este módulo inicial contiene el menú tabular y los marcos embebidos para las distintas secciones de la aplicación y se ejecuta mediante el script vistas/app.php. Figura 4. Archivo app.php. Fuente: Autores. Anexo IV: Manual del Sistema 98 El diseño o arte de la interfaz es mostrado constantemente en el marco principal del módulo de inicio y las demás secciones son cargados en un marco html incrustado, en consecuencia cada elemento del sistema necesita muy pocos elementos de diseño aparte de aquellos que permiten mostrar adecuadamente los formularios y tablas: Figura 5. Archivo seguridad/login.php. Fuente: Autores. El archivo que se muestra en la figura 4 es el esquema clásico de un script HTML y PHP combinados, con la cantidad necesaria de estilo, incluido en hojas de estilo en cascada (CSS) para poder dar presentación a los campos del formulario, dejando la tarea pesada de presentación de la vista al marco principal. Anexo IV: Manual del Sistema 99 El acceso a cualquiera de los módulos se realiza a través del módulo inicial de la aplicación (app.php) y el URL visible en el navegador será el mismo en todo momento por que cualquier otro modo de acceso no es sugerido, generalmente llevará a mostrar el módulo de inicio de la aplicación. 3 Módulos de la aplicación Generador de Marcos de Trabajo para la Gestión de Proyectos El GMTGP está compuesta por varios módulos que permiten la gestión de los marcos como herramienta integral. Esta integración, transparente al usuario se caracteriza por ofrecer los siguientes módulos para la gestión de un marco de trabajo existente o uno propio: • Marcos y variables de componentes. • Relaciones entre variables de componentes. • Resumen o documento descriptivo de un marco. • Relaciones entre marcos. • Administración Anexo IV: Manual del Sistema 100 3.1 Marcos y variables de componentes En un marco tendremos un nombre y una descripción como valores descriptivos del mismo y estará compuesto por variables componentes agrupadas por componente y se muestra en forma de árbol (figura 5) sobre el cual podremos operar para agregarle o quitarle elementos (variables de componentes) de los que se encuentren disponibles (figura 6) Figura 6 Fuente: Autores Figura 7 Fuente: Autores Anexo IV: Manual del Sistema 101 Para un componente del marco, como el que se muestra en la figura 6, podremos agregarle más variables de dicho componente usando la funcionalidad integrada en la vista de la figura 7; esto nos llevará a un formulario para añadir variables de componentes 3.2 Relaciones entre variables de componente Este módulo permite establecer la relación entre las distintas variables de componentes y aquellas que se definen como procesos del marco. El proceso es simple y se realiza en las clásicas etapas de selección y registro. La vista proporciona la interfaz adecuada, y el archivo controlador realiza las operaciones necesarias en BD para que se efectúe correctamente la relación. 3.3 Resumen o documento descriptivo de un marco. Este módulo trabaja con el Marco seleccionado actualmente, en un primer paso genera la documentación a partir de la información que consigue del marco en la base de datos, luego procede a dibujar las relaciones de las variables de componente con cada proceso y guardarla en archivos de imágenes que son usadas para mostrar un documento HTML en pantalla, se provee la funcionalidad de exportar el documento generado en PDF usando la librería dompdfque genera PDF a partir de un resultado HTML. 3.4 Relaciones entre marcos. Para realizar la relación entre marcos se ofrece primeramente una lista de los enlaces existente que parten desde el marco actual, esta lista es generada por el archivo vistas/relaciones/rpgindex.php. Ver un enlace existente o Crear un enlace nuevo a un marco se logra mediante el uso de la interfaz que se genera en el archivo ubicado en vistas/relaciones/RelProcesosGestionTecnica.php la interfaz generada es javascript intensiva combinada con Ajax para minimizar las cargas de la página y mantener la concentración del usuario sobre la tarea que se realiza. 3.5 Administración. El módulo de administración realmente es la agrupación lógica de otros tres módulos: • Administración de Usuarios o Añadir usuario: /vistas/usuarios/AddUser.php o Ver, modificar o eliminar usuario: : /vistas/usuarios/Usuarios.php • Administración de Marcos o Nuevo marco: /vistas/marco/nuevo.php o Ver, modificar o eliminar marco: /vistas/marco/modificar.php Anexo IV: Manual del Sistema 102 • Administración de Componentes o Añadir componente: /vistas/componente/AddComponente.php o Ver, modificar o eliminar componente: /vistas/componente/AdmComponente.php Las acciones que se realicen en cualquiera de estos tres módulos tienen ámbito global en el sistema, es decir afectarán cualquiera de los otros módulos. Anexo V: Manual de Usuario 103 Anexo V: Manual de Usuario 1 Ingreso al Sistema En la figura 7 se observa la página de inicio de la aplicación junto con el cuadro de entrada de datos para ingreso como usuario de la misma Figura 8. Interfaz de Ingreso al Sistema. Fuente: Autores Si no posee un usuario para trabajar en la aplicación puede aplicar para obtener una cuenta en el enlace ¿No está registrado? Y llene con sus datos el formulario que presenta el sistema (figura 9) Figura 9. Interfaz de registro de usuario. Fuente: Autores Anexo V: Manual de Usuario 104 Si ya es un usuario registrado pero no recuerda sus datos ingreso haga uso del enlace ¿Olvidó su clave? Donde se le presentará un formulario de solicitud de recuperación de contraseña (figura 10) Figura 10. Interfaz de Recuperación de Contraseña. Fuente: Autores Una vez completado el ingreso al sistema se la presentara la pantalla inicial del mismo (Figura 11) Figura 11. Pantalla inicial al ingresar al sistema. Fuente: Autores El área del sistema se presenta en tres secciones bien definidas: • Identificación: donde se presenta información que identifica a la aplicación, usuario que ingresó al mismo y el marco de trabajo seleccionado actualmente. • Menú tabular: para tener acceso a los distintos módulos del sistema se selecciona la ficha que corresponda. • Área de trabajo: ocupa la mayor parte de la presentación y en ella aparecerá toda la información de utilidad y los formularios necesarios para interactuar con el sistema. Anexo V: Manual de Usuario 105 2 Herramienta Marco de Trabajo Este es el módulo de operaciones sobre los marcos y después de ingresado al sistema lo siguiente que se puede hacer es seleccionar un marco de la lista que se muestra en el área de trabajo como se observa en la figura 12. Figura 12. Lista de Marcos de Trabajo. Fuente: Autores 2.1 Listado y acciones sobre marcos existentes En la figura 12 se observa un listado de los marcos de trabajo existentes en la base de datos para el usuario actual y las distintas acciones que se pueden realizar sobre los mimos, estas acciones son identificadas por iconos en la columna Acción. Figura 13. Acciones permitidas. Fuente: Autores La figura 13 muestra en detalle el significado de cada uno de los iconos de las acciones disponibles para cada marco. Con estas acciones podemos realizar las operaciones básicas: ver, modificar y eliminar sobre el marco asociado. Adicionalmente podemos agregar un marco nuevo a partir de otro ya existente usando la acción que usará como plantilla generadora al marco asociado. Anexo V: Manual de Usuario 106 2.2 Crear un Marco de Trabajo nuevo Arriba de la lista de marcos se hallan dos opciones y una acción que permite tomar un curso de acción según la opción seleccionada. La primera permite el registro de un marco de trabajo nuevo mediante el ingreso de los datos requeridos (figura 14) Figura 14. Crear marco de trabajo nuevo. Fuente: Autores Nótese que aquí se debe seleccionar el enfoque del nuevo marco mediante las opciones Gerencial o Técnico. Una vez que se han llenado los campos adecuadamente se ejecuta la acción Guardar para registrar los datos básicos del marco y proceder a la vista árbol como se muestra en la figuras 15 y 16. Anexo V: Manual de Usuario 107 Figura 15. Mensaje de Marco agregado con éxito. Fuente: Autores Figura 16. Interfaz para agregar variables a los componentes del Marco de Trabajo creado. Fuente: Autores En la vista árbol se muestran del lado izquierdo los componentes disponibles para el marco nuevo y las variables registradas, como es un marco nuevo no posee ninguna por el momento. Del lado derecho se muestran las variables que haya disponibles en el momento para su uso en el nuevo marco. La acción << permite agregar la variable del componente seleccionado del lado derecho al árbol del marco nuevo. La acción >> permite quitar la variable del componente seleccionado del lado del marco nuevo. Anexo V: Manual de Usuario 108 2.3 Crear un Marco de Trabajo a partir de otro ya existente Si en la pantalla de selección de marcos se presiona “Crear un marco a partir de un marco de trabajo/referencia” se procederá a crear un marco nuevo usando un marco ya existente como plantilla generadora, el nuevo marco tendrá todos los componentes, variables de componentes y relaciones entre variables de componente del marco seleccionado como plantilla Figura 17. Opciones para crear Marcos de Trabajo. Fuente: Autores El proceso de creación de un marco de trabajo a partir de otro ya existente se realiza en varios pasos, el primero es seleccionar el enfoque del nuevo marco a generar, figura 18. Figura 18. Filtro para seleccionar el tipo de enfoque del Marco de Trabajo. Fuente: Autores Una vez seleccionado el enfoque, se presenta una lista de marcos para seleccionar de entre ellos el que se usará como plantilla para el nuevo marco, figura 19. Figura 19. Lista de Marcos según la selección realizada. Fuente: Autores La selección se realiza presionando la acción al lado del nombre del marco deseado. Anexo V: Manual de Usuario 109 Una vez seleccionado el marco se debe indicar el nombre del marco: Figura 20. Interfaz para asignar nombre al nuevo marco de trabajo creado. Fuente: Autores Completado este paso se habrá logrado crear un marco de trabajo a partir de otro ya existente Figura 22. Mensaje Nombre de Marco Asignado exitosamente. Fuente: Autores Finalmente se realiza la actualización o modificación del marco recién creado usando la vista árbol: Figura 22. Interfaz para actualizar variables del Marco de Trabajo creado. Fuente: Autores Anexo V: Manual de Usuario 110 3. Modificar un Marco de Trabajo Para modificar un marco de trabajo presionamos la acción del marco asociado deseado de la vista lista de marcos. (Figura 12) Se nos presentará un formulario con los datos básicos del marco seleccionado Figura 23. Interfaz para cargar Nombre y Descripción del Marco de Trabajo creado. Fuente: Autores Realizamos los cambios que haya que hacer, y presionamos Guardar. Finalmente el sistema no mostrará la vista árbol del marco para que se efectúen los cambios necesarios en las variables de componente (Figura 22) 3.1 Agregar o quitar variables del componente existentes En la vista árbol se muestran del lado izquierdo los componentes disponibles para el marco nuevo y las variables registradas, como es un marco nuevo no posee ninguna por el momento. Del lado derecho se muestran las variables que haya disponibles en el momento para su uso en el nuevo marco. La acción << permite agregar la variable del componente seleccionado del lado derecho al árbol del marco nuevo. La acción >> permite quitar la variable del componente seleccionado del lado del marco nuevo. 3.2 Agregar Nuevas variables del componente Para agregar una nueva variable de componente debemos primero seleccionar un componente en el árbol izquierdo (marco de trabajo) y presionamos el botón Anexo V: Manual de Usuario 111 Agregar una Nueva Variable del Componente esto nos mostrará un formulario donde llenaremos los datos de la nueva variable del componente seleccionado: Figura 24. Interfaz para agregar una nueva variable a un componente. Fuente: Autores Al presionar guardar esta nueva variable quedará registrada en nuestra base de datos y asociada al marco de trabajo. 4 Relaciones entre variables del componente Si seleccionamos la opción Relaciones del menú tabular se nos presentará la vista de actualización de relaciones entre variables de componentes: Figura 25. Interfaz para selección de proceso. Fuente: Autores 4.1 Asignar una variable de componente a un proceso Se debe seleccionar el tipo de variable del componente entre las opciones disponibles: Entradas, Salidas, Controles, Herramientas y Roles. Anexo V: Manual de Usuario 112 Se debe seleccionar un proceso del cuadro que muestra los procesos, esto hará que la vista se expanda como lo muestra la figura 26. Figura 26. Interfaz de Asignación de Entradas al proceso seleccionado. Fuente: Autores Luego debe seleccionar la variable del componente de entre las que se muestran en el cuadro de la esquina superior derecha. Se presiona el botón Asignar y en el cuadro inferior “Entradas Asignadas” aparecerá la relación entre el proceso y la variable del componente seleccionada. 4.2 Eliminar la asignación a un proceso de una variable del componente Para eliminar una asignación de una variable del componente a un proceso se debe seleccionar el tipo de variable del componente entre las opciones disponibles: Entradas, Salidas, Controles, Herramientas y Roles. Se debe seleccionar un proceso del cuadro que muestra los procesos, esto hará que la vista se expanda como lo muestra la figura 26. Seleccione la relación que desea eliminar de entre las que se muestran en el cuadro inferior y presione el botón Eliminar. 4.3 Enlazar el marco de trabajo actual a otro marco existente. Para enlazar el marco actual con otro marco presione la opción enlace en la herramienta relaciones, se le presentará la siguiente pantalla: Anexo V: Manual de Usuario 113 Figura 27. Interfaz para crear enlace. Fuente: Autores La primera vez no habrá enlaces listados, para agregar uno nuevo presione sobre “Crear enlace nuevo” inmediatamente se mostrará el asistente de construcción de enlaces: Figura 28. Proceso de Creación de enlace entre Marcos de Trabajo Fuente: Autores Este asistente le irá mostrando cómo se va construyendo el enlace en la medida que vaya haciendo las elecciones adecuadas de las listas desplegables que le son mostradas. Una vez hecha todas las selecciones se le indicara que presione el enlace adecuado para realizar el registro del enlace en la va base de datos: Anexo V: Manual de Usuario 114 Figura 29. Relación entre Marcos de Trabajo creados. Fuente: Autores 5 Resumen 5.1 Generar Resumen de un marco de trabajo El documento resumen que concentra la definición del marco de trabajo de forma gráfica y textual se genera en la opción Resumen del menú principal. Una vez que se presione sobre esta opción se iniciará el proceso de generación del resumen cuyo resultado se muestra en la figura 29. Figura 30. Generación de Documentación sobre el Marco de Trabajo creado Fuente: Autores Anexo V: Manual de Usuario 115 5.2 Exportar el resumen a PDF Una vez generado el resumen, aparecerá en la esquina superior del mismo la acción Exportar PDF, que cuando es ejecutada genera y ofrece las conversión a PDF de el resumen generado. Figura 31. Generación de Documentaciòn en pdf Fuente: Autores 6 Administrar Esta opción no estará disponible si el usuario actual no es un usuario administrador del sistema. Al seleccionar la herramienta Administrar del menú principal se muestran tres ítems para ser administrados: Usuarios, Marcos y Componentes 6.1 Administrar Usuarios En esta sección de la herramienta Administrar se pueden realizar las siguientes acciones: creas, ver, modificar y/o eliminar usuarios. Figura 32. Administrar usuarios Fuente: Autores Anexo V: Manual de Usuario 116 6.1.1 Ver, modificar y eliminar usuarios Presione la acción correspondiente de las que haya disponibles en la columna “Acción” para el usuario deseado para eliminarlo, modificar sus datos o ver su perfil. La figura 33 muestra la vista “ver” perfil de usuario, la figura 34 muestra el formulario de modificación de perfil de usuario. Figura 33. Ver Información del Perfil del Usuario Fuente: Autores Figura 34. Modificación perfil del usuario. Fuente: Autores Anexo V: Manual de Usuario 117 6.1.2 Crear un usuario nuevo Para crear un usuario nuevo presione el botón Nuevo en la vista que se muestra en la figura 35, y se le presentará un formulario para ingreso del perfil del usuario: Figura 35. Creación de Nuevo Usuario. Fuente: Autores 6.2 Administrar Marcos Al seleccionar la opción Marcos se mostrará la lista de los marcos que haya disponible en el sistema: Anexo V: Manual de Usuario 118 Figura 36. Listado de Marcos existentes en la Base de Conocimientos Fuente: Autores 6.2.1 Ver, modificar y eliminar marcos Presione la acción correspondiente de las que haya disponibles en la columna “Acción” para el marco deseado para eliminarlo, modificar sus datos o ver su detalle. Las opciones muestra interfaz iguales a las mostradas en los puntos 2 y 3 de este manual, pero pueden afectar los marcos de referencia que ya existan. 6.2.2 Crear un marco de referencia nuevo Al presionar la acción “nuevo” en la vista que se muestra en la figura 36 se inicia el proceso de creación de un marco de referencia nuevo. Primero seleccionando el enfoque o bien Gerencial o bien Técnico, luego se llenan los datos básicos del marco. Figura 37. Selección del tipo de enfoque para el marco de trabajo Fuente: GMTGP Anexo V: Manual de Usuario 119 Figura 38. Ingreso del nombre y descripción del Marco Fuente: Autores 6.3 Administrar Componentes Al presionar sobre la opción Componentes de la herramienta Administrar se muestra el listado de los componentes que están registrados actualmente en la aplicación: Figura 39. Administrar Componentes. Fuente: Autores 6.3.1 Ver, modificar y eliminar componentes Presione la acción correspondiente de las que haya disponibles en la columna “Acción” para el componente deseado y así eliminarlo, modificar sus datos o ver su detalle. Anexo V: Manual de Usuario 120 Figura 40. Ver detalle Componente Fuente: Autores La siguiente figura muestra el formulario para modificar un componente: Figura 41. Modificar Información del Componente. Fuente: Autores 6.3.2 Crear un componente nuevo Para crear un componente nuevo use la acción Nuevo Componente en la vista que se muestra en la figura 39, y se le presentará un formulario para ingreso del nuevo componente: Figura 42. Crear un nuevo Componente Fuente: Autores Anexo VI: Casos de Prueba en Organizaciones en Venezuela 121 Anexo VI: Casos de Prueba en Organizaciones en Venezuela A continuación se presenta la prueba del Generador de Marcos de Trabajo a dos organizaciones en Venezuela. Para cada Marco de Trabajo, se debe construir uno para la Gestión Gerencial y otro para la Gestión Técnica de Proyectos de Informática. Además se puede observar un diagrama que muestra la relación entre dichos marcos. 1.- Empresa de Estudio SPC, C.A Marco de Trabajo Gestión Gerencial: Gerencial SPC, C.A. Características • Usado para proyectos de áreas de aplicación tan diversas como la de construcción y los fármacos. • Producir Estándares y otras publicaciones de Gerencia de Proyectos. • Proveer Educación en Gerencia de Proyectos. • Facilita oportunidades de intercambio profesional. • Posee una norma de Gerencia de Proyectos principal que es el PMBOK. Ha sido adoptada internacionalmente para definir los procesos necesarios de gerencia para realizar proyectos. Se titula: “A Guide to the Project Management Body of Knowledge”. El PMBOK está traducido a diferentes idiomas. La traducción al español se titula: “Guía de los Fundamentos de la Dirección de Proyectos”. • Incluye las normas básicas de Gerencia de Proyecto. Roles • Director del proyecto: Responsable de dirigir el proyecto. • Cliente/usuario: La persona u organización que utilizará el producto del proyecto. Puede haber múltiples niveles de clientes. En algunas áreas de aplicación, cliente y usuario son sinónimos, mientras que en otras, cliente se refiere a la entidad que adquiere el producto del proyecto, mientras que los usuarios son aquellos que utilizan directamente el producto del proyecto. • Organización ejecutante: La empresa cuyos empleados participan más directamente en el trabajo del proyecto. Anexo VI: Casos de Prueba en Organizaciones en Venezuela 122 • Miembros del equipo del proyecto: El grupo que realiza el trabajo del proyecto. • Equipo de dirección del proyecto: Los miembros del equipo del proyecto que participan directamente en las actividades de dirección del proyecto. • Patrocinador: La persona o el grupo que proporciona los recursos financieros, monetarios o en especie, para el proyecto. • Oficina de Gestión de Proyectos (PMO): Puede ser un interesado si tiene responsabilidad directa o indirecta sobre el resultado del proyecto. Anexo VI: Casos de Prueba en Organizaciones en Venezuela 123 Fases/Procesos/Actividades • Proceso Iniciación: Se establecen descripciones claras de los objetivos del proyecto, incluidas las razones por las cuales un proyecto específico es la mejor solución alternativa para satisfacer los requisitos. Contiene una descripción básica del alcance del proyecto, de los productos entregables, de la duración del proyecto y un pronóstico de los recursos para el análisis de inversión de la organización. Anexo VI: Casos de Prueba en Organizaciones en Venezuela 124 • Proceso Planificación: Desarrollan el plan de gestión del proyecto. Identifican, definen y maduran el alcance, el coste y planifican las actividades del proyecto que se realizan dentro del mismo. Anexo VI: Casos de Prueba en Organizaciones en Venezuela 125 • Proceso Ejecución: Se compone de los procesos utilizados para completar el trabajo definido en el plan de gestión del proyecto a fin de cumplir con los requisitos del mismo. El equipo del proyecto debe determinar cuáles son los procesos necesarios para su desarrollo. También aborda el alcance definido en el enunciado del alcance del proyecto e implementa los cambios aprobados. Anexo VI: Casos de Prueba en Organizaciones en Venezuela 126 • Proceso Seguimiento y Control: Mide y supervisa regularmente el avance, a fin de verificar las variaciones respecto del plan de gestión del proyecto, de tal forma que se tomen medidas correctivas cuando sea necesario para cumplir con los objetivos del proyecto. Anexo VI: Casos de Prueba en Organizaciones en Venezuela 127 • Proceso Cierre: Incluye los procesos utilizados para finalizar formalmente todas las actividades de un proyecto o de una fase de un proyecto, entregar el producto terminado a terceros o cerrar un proyecto cancelado. Anexo VI: Casos de Prueba en Organizaciones en Venezuela 128 Entradas/Artefactos/Salidas • Requisitos del Proyecto. • Producto, servicio o resultado. • Informe de Rendimiento. • Acta de Constitución del Proyecto. • Descripción del alcance y duración del proyecto. • Pronóstico de los recursos. • Enunciado del Alcance del Proyecto Preliminar. • Plan de gestión del proyecto (alcance, costo, actividades). • Cronograma. • EDT (Estructura de desglose del trabajo). • Secuencia, Duración y Costos de las Actividades. • Cambios aprobados. • Propuestas. • Medidas correctivas y preventivas. Herramientas • Técnicas y Herramientas Gestión de Tiempo. • Técnicas y Herramientas Gestión de Costes. • Técnicas y Herramientas Gestión de Recursos Humano. • Técnicas y Herramientas Gestión de Calidad. • Técnicas y Herramientas Gestión de Riesgos. Anexo VI: Casos de Prueba en Organizaciones en Venezuela 129 Controles • Procesos estándar de la organización, como normas, políticas, ciclos de vida del producto y del proyecto estándar, y políticas y procedimientos de calidad. • Guías o requisitos de cierre del proyecto (por ejemplo, auditorías finales del proyecto, evaluaciones del proyecto, validaciones del producto y criterios de aceptación). • Metodología de Dirección de Proyectos. • Guías, instrucciones de trabajo, criterios de evaluación de propuestas y criterios de medición del rendimiento estandarizados. Mejoras • Satisface las necesidades de los interesados. • Se mantiene dentro de los límites presupuestarios. • Sea culmina a tiempo. • Trae beneficios a la empresa. • Complejo para proyectos pequeños. Anexo VI: Casos de Prueba en Organizaciones en Venezuela 130 Enlace entre gestión Gerencial y Técnica Marco de Trabajo Gestión Técnica: Técnico SPC, C.A. Características • El modelo incremental combina elementos del modelo en cascada aplicado en forma iterativa. Aplica secuencias lineales de manera escalonada conforme avanza el tiempo en el calendario, cada secuencia lineal produce incrementos del sistema de información, y en cada incremento se produce un entregable de la aplicación que ser validado por el cliente hasta que el sistema este concluido. • Usado cuando la dotación de personal no está disponible para una implementación completa. El primer incremento se pueden implementar con pocas personas. Si el producto central es bien recibido, se puede añadir más personal. • Este proceso se repite hasta que se elabora el sistema de información completo. • El cliente usa el sistema de información y en base a la utilización y/o evaluación se desarrolla un plan para el incremento siguiente. • Es interactivo. Anexo VI: Casos de Prueba en Organizaciones en Venezuela 131 • El modelo incremental entrega un producto operacional en cada incremento. Roles • Gerente de proyecto: Encargado de dirigir la ejecución de todas las actividades necesarias para la obtención del sistema de información, así como de mantener la comunicación con el cliente y todos los involucrados. • Asegurador de la calidad: Grupo encargado de realizar las pruebas del sistema de información a fin de asegurar que el mismo cumpla con las funciones para las que fue creado. Dichas pruebas son realizadas bajo ciertos estándares. • Documentador: Encargado de velar por asegurarse que todo lo concerniente al sistema de información (modelos de datos, códigos fuentes, manuales de sistemas y de usuarios, entre otros) estén disponibles y de manera tal que sus contenido puede ser comprendido y accedidos por los interesados. • Integrador: Se encarga de unir todos y cada uno de los módulos que componen al sistema de información, a fin de que sea compatible con el Hardware/ Software incluidos en el equipo del cliente. • Desarrollador: Encargado de la construcción de los componentes que formaran parte del nuevo sistema de información. Anexo VI: Casos de Prueba en Organizaciones en Venezuela 132 Fases/Procesos/Actividades • Proceso Análisis: Este método se inicia con las reuniones con el cliente, de las cuales surgen los requerimientos y características que debe cumplir el sistema de información. Si el sistema de información es parte de un sistema mayor, el trabajo comienza estableciendo los requisitos de todos los elementos del sistema y luego asignando algún subconjunto de estos requisitos al sistema a desarrollar. Anexo VI: Casos de Prueba en Organizaciones en Venezuela 133 • Proceso Diseño: El diseño del sistema de información se enfoca en cuatro aspectos: la estructura de los datos, la arquitectura del software, el detalle procedimental y la caracterización de la interfaz. El proceso de diseño traduce los requisitos en una representación del software con la calidad requerida. También se establece la arquitectura total del sistema Anexo VI: Casos de Prueba en Organizaciones en Venezuela 134 • Proceso Codificación: Se traduce el diseño en una forma legible para la máquina, es decir, se construyen los módulos y unidades de software Anexo VI: Casos de Prueba en Organizaciones en Venezuela 135 • Proceso Prueba: Las pruebas se centran en verificar que la entrada definida produce los resultados que realmente se requieren, las mismas son realizadas por parte del cliente. Si el sistema de información contiene alguna falla se realiza un plan que va a contener todos los cambios y funcionalidades extras que formaran parte del nuevo sistema Anexo VI: Casos de Prueba en Organizaciones en Venezuela 136 Entradas/Artefactos/Salidas • Requerimientos y características del sistema. • Requisitos del sistema de información: Artefacto que establece los servicios, restricciones y objetivos que debe cumplir el sistema. • Documentación del Análisis de Requisitos del sistema de información. • Plan de Diseño: Es un documento desarrollado por el analista, provee una descripción comprensiva de la arquitectura del Software del Sistema. • Producto esencial: Primer entregable del sistema, es decir producto operacional que va a contener los requisitos básicos. Es el núcleo del sistema y el punto de partida para la culminación del mismo. • Plan de Incremento: Contiene los cambios que deben ser realizados al sistema en el incremento siguiente de la fase de desarrollo (iteración). Herramientas • Microsoft Project (Planificación). • UML (Modelado). • Designer 2000. • Erwin (Bases de datos). • MAGERIT (Seguridad). Controles • Plan del proyecto, Estándares y Lineamientos. • Secuencia lineal de fases. • Cantidad de Iteraciones hasta alcanzar los objetivos. Mejoras • Los clientes no esperan hasta el fin del desarrollo para utilizar el sistema de información. Pueden empezar a usarlo desde el primer incremento. • Es útil sobre todo cuando el personal necesario para una implementación completa no está disponible. Anexo VI: Casos de Prueba en Organizaciones en Venezuela 137 • Los clientes pueden aclarar los requisitos que no tengan claros conforme ven las entregas del sistema de información. • Se disminuye el riesgo de fracaso de todo el sistema de información, ya que se puede distribuir en cada incremento. • Las partes más importantes del sistema son entregadas primero, por lo cual se realizan más pruebas en estos módulos y se disminuye el riesgo de fallos. • Cada incremento debe ser pequeño para limitar el riesgo (menos de 20.000 líneas). • Cada incremento debe aumentar la funcionalidad. • Es difícil establecer las correspondencias de los requisitos contra los incrementos. • Es difícil detectar las unidades o servicios genéricos para todo el sistema. 2.- Empresa de Estudio Web & Soft Solutions, C.A. Marco de Trabajo Gestión Gerencial: Gerencial Web & Soft Características • Usado para proyectos de áreas de aplicación tan diversas como la de construcción y los fármacos. • Producir Estándares y otras publicaciones de Gerencia de Proyectos. • Proveer Educación en Gerencia de Proyectos. • Facilita oportunidades de intercambio profesional. • Incluye las normas básicas de Gerencia de Proyecto. Roles • Director del proyecto: Responsable de dirigir el proyecto. • Cliente/usuario: La persona u organización que utilizará el producto del proyecto. Puede haber múltiples niveles de clientes. En algunas áreas de aplicación, cliente y usuario son sinónimos, mientras que en otras, cliente se refiere a la entidad que adquiere el producto del proyecto, mientras que Anexo VI: Casos de Prueba en Organizaciones en Venezuela 138 los usuarios son aquellos que utilizan directamente el producto del proyecto. • Miembros del equipo del proyecto: El grupo que realiza el trabajo del proyecto. • Equipo de dirección del proyecto: Los miembros del equipo del proyecto que participan directamente en las actividades de dirección del proyecto. • Patrocinador: La persona o el grupo que proporciona los recursos financieros, monetarios o en especie, para el proyecto. Anexo VI: Casos de Prueba en Organizaciones en Venezuela 139 Fases/Procesos/Actividades • Proceso Iniciación: Se establecen descripciones claras de los objetivos del proyecto, incluidas las razones por las cuales un proyecto específico es la mejor solución alternativa para satisfacer los requisitos. Contiene una descripción básica del alcance del proyecto, de los productos entregables, de la duración del proyecto y un pronóstico de los recursos para el análisis de inversión de la organización. Anexo VI: Casos de Prueba en Organizaciones en Venezuela 140 • Proceso Planificación: Desarrollan el plan de gestión del proyecto. Identifican, definen y maduran el alcance, el coste y planifican las actividades del proyecto que se realizan dentro del mismo. Anexo VI: Casos de Prueba en Organizaciones en Venezuela 141 • Proceso Ejecución: Se compone de los procesos utilizados para completar el trabajo definido en el plan de gestión del proyecto a fin de cumplir con los requisitos del mismo. El equipo del proyecto debe determinar cuáles son los procesos necesarios para su desarrollo. También aborda el alcance definido en el enunciado del alcance del proyecto e implementa los cambios aprobados. Anexo VI: Casos de Prueba en Organizaciones en Venezuela 142 • Proceso Seguimiento y Control: Mide y supervisa regularmente el avance, a fin de verificar las variaciones respecto del plan de gestión del proyecto, de tal forma que se tomen medidas correctivas cuando sea necesario para cumplir con los objetivos del proyecto. Anexo VI: Casos de Prueba en Organizaciones en Venezuela 143 • Proceso Cierre: Incluye los procesos utilizados para finalizar formalmente todas las actividades de un proyecto o de una fase de un proyecto, entregar el producto terminado a terceros o cerrar un proyecto cancelado. Anexo VI: Casos de Prueba en Organizaciones en Venezuela 144 Entradas/Artefactos/Salidas • Requisitos del Proyecto. • Producto, servicio o resultado. • Informe de Rendimiento. • Acta de Constitución del Proyecto. • Descripción del alcance y duración del proyecto. • Pronóstico de los recursos. • Enunciado del Alcance del Proyecto Preliminar. • Plan de gestión del proyecto (alcance, costo, actividades). • Cronograma. • EDT (Estructura de desglose del trabajo). • Secuencia, Duración y Costos de las Actividades. • Cambios aprobados. • Propuestas. • Medidas correctivas y preventivas. Herramientas • Técnicas y Herramientas Gestión de Tiempo. • Técnicas y Herramientas Gestión de Alcance. • Técnicas y Herramientas Gestión de Costes. • Técnicas y Herramientas Gestión de Recursos Humano • Técnicas y Herramientas Gestión de Comunicación. • Técnicas y Herramientas Gestión de Integración. • Técnicas y Herramientas Gestión de Adquisición. Anexo VI: Casos de Prueba en Organizaciones en Venezuela 145 • Técnicas y Herramientas Gestión de Calidad. • Técnicas y Herramientas Gestión de Riesgos. Controles • Procesos estándar de la organización, como normas, políticas, ciclos de vida del producto y del proyecto estándar, y políticas y procedimientos de calidad. • Guías o requisitos de cierre del proyecto (por ejemplo, auditorías finales del proyecto, evaluaciones del proyecto, validaciones del producto y criterios de aceptación). • Metodología de Dirección de Proyectos. • Guías, instrucciones de trabajo, criterios de evaluación de propuestas y criterios de medición del rendimiento estandarizados. Mejoras • Satisface las necesidades de los interesados. • Se mantiene dentro de los límites presupuestarios. • Sea culmina a tiempo. • Trae beneficios a la empresa. • Complejo para proyectos pequeños. Anexo VI: Casos de Prueba en Organizaciones en Venezuela 146 Enlace entre gestión Gerencial y Técnica Marco de Trabajo Gestión Técnica: Técnico Web & Soft Características • Es uno de los más antiguos métodos para el desarrollo de sistemas de información, ha servido de base para la creación de otros métodos de desarrollo, tales como, el Modelo Espiral. En este método el proyecto progresa a través de una secuencia ordenada de pasos, es decir, contempla la realización de fases y actividades secuenciales, es adecuada para el desempeño y seguimiento de objetivos precisos. Podría no ser muy efectiva cuando se requiere mayor dominio, flexibilidad, y recursividad en el desarrollo de sistemas de información. • La mayoría de los errores parecen no estar presentes a lo largo del desarrollo del sistema de información: En este método secuencial la mayoría de los errores parecen no estar presentes a lo largo del desarrollo del sistema de información, ya que progresa con normalidad hasta llegar a la fase de prueba; donde se conocerá con certeza si el sistema cumple todos los requerimientos esperados. En las últimas fases Anexo VI: Casos de Prueba en Organizaciones en Venezuela 147 es donde se sabe con seguridad si la arquitectura que se diseñó es la adecuada. • Es difícil para el cliente establecer al principio todos los requisitos, por lo cual se tienen conflictos en adaptar posibles incertidumbres que pueden existir al comienzo de muchos sistemas de información Roles • Analista y/o Desarrollador: Investiga y obtiene los requerimientos del sistema de información a realizar. Efectúa el análisis de los mismos, diseña la solución, y produce el código del sistema. Además realiza las pruebas y mantenimiento del sistema de información obtenido. Debe existir una adecuada comunicación y coordinación entre el grupo de analistas y el cliente. También podría ser el caso según la magnitud del sistema de información, que no todas las actividades las realice el analista, sino que se cuente con desarrollador(es) quienes diseñan e implementan el sistema. • Cliente: Describe las funcionalidades y requisitos que debe cumplir el sistema de información a desarrollar. Anexo VI: Casos de Prueba en Organizaciones en Venezuela 148 Fases/Procesos/Actividades • Proceso Análisis y Especificación de requerimientos: Los servicios, restricciones y metas del sistema de información se definen a partir de las consultas con los usuarios. Entonces, se definen en detalle y sirven como una especificación del sistema. Anexo VI: Casos de Prueba en Organizaciones en Venezuela 149 • Proceso Diseño del sistema y del software: El proceso de diseño del sistema de información divide los requerimientos en sistemas de hardware y software. Establece una arquitectura completa del sistema. El diseño del sistema de información identifica y describe las abstracciones fundamentales del software y sus relaciones. El diseño se enfoca en cuatro atributos distintos del programa: la estructura de los datos, la arquitectura del software, el detalle procedimental y la caracterización de la interfaz. El proceso de diseño traduce los requisitos en una representación del software con la calidad requerida antes de que inicie la codificación Anexo VI: Casos de Prueba en Organizaciones en Venezuela 150 • Proceso Implementación y pruebas de unidades: Durante esta etapa, el diseño del sistema de información se lleva a cabo como un conjunto o unidades de programas. La prueba de unidades implica verificar que cada una cumpla su especificación Anexo VI: Casos de Prueba en Organizaciones en Venezuela 151 • Proceso Integración y prueba del sistema: Los programas o las unidades individuales de programas se integran y prueban como un sistema completo para asegurar que se cumplan los requerimientos del sistema de información. Después de las pruebas, el sistema de información se entrega al cliente Anexo VI: Casos de Prueba en Organizaciones en Venezuela 152 • Proceso Funcionamiento y mantenimiento: Por lo general (aunque no necesariamente), ésta es la fase más larga del ciclo de vida. El sistema de información se instala y se pone en funcionamiento práctico. El mantenimiento implica corregir errores no descubiertos en las fases anteriores del ciclo de vida, mejorar la implementación de las unidades del sistema y resaltar los servicios del sistema una vez que se descubren nuevos requerimientos. El sistema es puesto en marcha y se realiza la corrección de errores descubiertos. Se identifican nuevos requisitos de parte del cliente, estos podrían ser ampliaciones funcionales o de rendimiento, o si el sistema de información debe adaptarse a cambios del entorno (sistema operativo o dispositivos periféricos) por lo cual se realizan mejoras de implementación. El sistema de información podría sufrir cambios después de ser entregado al cliente Anexo VI: Casos de Prueba en Organizaciones en Venezuela 153 Entradas/Artefactos/Salidas • Requerimientos y características del sistema. • Sistema actualizado: El artefacto que se obtiene en esta fase es el sistema de información verificado y actualizado. • Requisitos del sistema de información: Artefacto que establece los servicios, restricciones y objetivos que debe cumplir del sistema. • Plan de Diseño del Software: Es un documento desarrollado por el analista, provee una descripción comprensiva de la arquitectura del Software del Sistema. • Documentación del Análisis de Requisitos del sistema de información: Documento que especifica detalladamente los requisitos del sistema de información. Este artefacto debe ser aprobado por el usuario. • Sistema de Información completo: El artefacto producido en esta fase es el sistema de información, el cual está listo para ser verificado. • Sistema de Información Verificado: El artefacto que se obtiene en esta fase es el sistema de información completo y verificado. Herramientas • Diccionario de datos, generador de pantallas. • Generador de impresos (formularios, informes). • Lenguaje de consultas no Procedimental, lenguajes de programación visual o de 4ª generación. Controles • Plan del proyecto, Estándares y Lineamientos. • Secuencia ordenada de pasos: Realización de fases y actividades secuenciales. Mejoras • Obliga a completar una fase antes de pasar a la siguiente. • Destaca la planificación temprana, la entrada del cliente y el diseño. Anexo VI: Casos de Prueba en Organizaciones en Venezuela 154 • Incluye la prueba como una etapa propia del ciclo de vida. • Contempla la calidad en cada fase del ciclo de vida. • Es un método sencillo ya que sigue los pasos intuitivos necesarios a la hora de desarrollar el sistema de información. • Se produce documentación en cada fase. • Es muy raro que los proyectos reales sigan el flujo secuencial que propone el modelo. A pesar de que el modelo lineal incluye iteraciones, lo hace de manera indirecta, trayendo como resultado que los cambios confunden mientras el equipo realiza el trabajo. • Resulta difícil para el cliente establecer todos los requisitos de manera explícita. • Se incorpora la incertidumbre presente en el inicio de muchos proyectos. • Inflexibilidad al dividir el proyecto en distintas etapas. • El cliente debe tener paciencia. • La naturaleza lineal del modelo conduce a estados de bloqueo, en los cuales algunos miembros del equipo deben esperar a otros para terminar tareas dependientes. Índice de Figuras Índice de Tablas Introducción Capítulo I: La Investigación 1.1. Antecedentes del Problema 1.2. Planteamiento de Problema 1.3. Formulación del problema de investigación 1.4. Objetivo General 1.5 Objetivos Específicos: 1.6 Alcance 1.7 Justificación e Importancia 1.8 Metodología de investigación usado 1.9 Fases de la metodología de investigación 1.10 Plan de Trabajo Capítulo II: Marco Conceptual 2.1. Proyecto 2.1.1. Características de un Proyecto 2.2. Gerencia de Proyectos 2.3. Proyectos de Informática 2.3.1. Tipos de Proyectos de Informática 2.4. Gerencia de Proyectos de Informática 2.5. Descripción del Modelo IDEF0 2.6.1.1. Gestión Gerencial 2.6.2. Modelo de la Gestión Técnica de Proyectos de Informática 2.6.2.1 Gestión Técnica 2.7. Marcos de Referencia para la Gestión de Proyectos 2.8. Marcos de Trabajo para la Gestión de Proyectos 2.9. Plataforma Tecnológica 2.9.1. Modelo Vista Controlador 2.9.2 Servidor HTTP Apache 2.9.3 PHP 2.9.4 Mysql 2.9.5 Modelo Relacional 2.9.6 Aplicación Web Capítulo III: Marco Aplicativo 3.1 Fase 1: Conceptualización de la aplicación 3.2 Fase 2: Análisis de la aplicación 3.2.1 Requerimientos Funcionales 3.2.2 Requerimientos No Funcionales 3.2.3 Diagrama de Casos de Uso 3.3 Fase 3: Diseño de la aplicación 3.3.1 Diseño de la Base de Datos. 3.3.2 Diseño de los elementos estructurales de la aplicación. 3.4 Fase 4 Entrega: Generador de Marcos de Trabajo para la Gestión de Proyectos. 3.5 Fase 5: Pruebas de la aplicación 3.6 Arquitectura de la aplicación Análisis de Resultados Conclusiones Referencias ANEXOS Anexo I: Especificación de casos de uso Anexo II: Conjuntos de Pruebas Anexo III: Manual del Instalación Anexo IV: Manual del Sistema Anexo V: Manual de Usuario Anexo VI: Casos de Prueba en Organizaciones en Venezuela