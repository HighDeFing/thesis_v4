UNIVERSIDAD CENTRAL DE VENEZUELA FACULTAD DE CIENCIAS ESCUELA DE COMPUTACIÓN DESARROLLO DEL MÓDULO DE GESTIÓN DE EQUIVALENCIA DE ESTUDIOS DEL DEPARTAMENTO DE REVÁLIDAS Y EQUIVALENCIAS DE LA UCV Trabajo Especial de Grado presentado ante la ilustre Universidad Central de Venezuela por el Br. Jean E. Akchar Marchena Para optar por el título de Licenciado en Computación Tutores: Profa. Concettina Di Vasta Prof. Iván Flores Caracas, Octubre de 2019 UNIVERSIDAD CENTRAL DE VENEZUELA FACULTAD DE CIENCIAS ESCUELA DE COMPUTACIÓN DESARROLLO DEL MÓDULO DE GESTIÓN DE EQUIVALENCIA DE ESTUDIOS DEL DEPARTAMENTO DE REVÁLIDAS Y EQUIVALENCIAS DE LA UCV Autor: Br. Jean E. Akchar Marchena Tutores: Profa. Concettina Di Vasta Prof. Iván Flores Fecha: Caracas, septiembre 2019 RESUMEN El proceso de equivalencia de estudios del Departamento de Reválidas y Equivalencias (DRE) de la Universidad Central de Venezuela (UCV) consiste en un estudio de cuales asignaturas cursadas y aprobadas por el tramitante se ajustan con asignaturas que forman parte del plan de estudio de una determinada Facultad, Escuela o Instituto Universitario. Actualmente, no existe un módulo centralizado para dar respuesta a las solicitudes de equivalencia de estudios realizadas por los tramitantes, por lo cual, cada Facultad utiliza diversas herramientas para agilizar los procesos, teniendo que realizar algunas actividades de forma manual, lo cual genera retrasos en los tiempos de respuesta y errores generados por factor humano. Teniendo en cuenta estas dificultades en el proceso de equivalencia de estudios, se desarrolló un módulo web para apoyar la ejecución de las actividades relacionadas al proceso anteriormente descrito, desarrollado con tecnologías de software libre (HTML5, CSS3, Javascript, PHP, Laravel y MySQL) bajo una metodología de desarrollo Proceso Unificado Ágil (AUP). Palabras Clave: equivalencia de estudios, departamento de reválidas y equivalencias, comisión de reválidas y equivalencias, asignaturas equivalentes, aplicación web. ÍNDICE INTRODUCCIÓN ................................................................................................... 1 CAPÍTULO I: PROBEMA DE INVESTIGACIÓN ..................................................... 3 1.1 Planteamiento del problema ..................................................................... 3 1.2 Objetivos del TEG .................................................................................... 8 1.2.1 General ................................................................................................ 8 1.2.2 Específicos........................................................................................... 8 1.3 Solución propuesta ................................................................................... 9 1.4 Justificación de la solución ..................................................................... 10 CAPÍTULO II: MARCO CONCEPTUAL ................................................................ 11 2.1 Antecedentes ......................................................................................... 11 2.1.1 Sistema de Control de Reválidas y Equivalencias (SISCRE) ............ 11 2.1.2 Sistema de Equivalencias (EQU-2016) .............................................. 16 2.2 Arquitectura cliente/servidor ................................................................... 22 2.3 Aplicación Web ....................................................................................... 23 2.3.1 Componentes..................................................................................... 23 2.3.2 Ventajas de las aplicaciones web ...................................................... 25 2.4 Patrón de diseño MVC (Modelo Vista Controlador) ................................ 26 2.4.1 Funcionamiento del patrón MVC ........................................................ 27 2.5 Herramientas tecnológicas para el desarrollo de aplicaciones web ....... 28 2.5.1 Tecnologías del lado del cliente ......................................................... 28 2.5.2 Tecnologías del lado del servidor ...................................................... 32 CAPITULO III: MARCO METODOLÓGICO.......................................................... 38 3.1 Metodologías ágiles vs Metodologías tradicionales ............................... 38 3.2 Proceso Unificado Ágil (AUP)................................................................. 40 3.2.1 Filosofía de AUP ................................................................................ 40 3.2.2 Técnicas ágiles que incluye AUP ....................................................... 41 3.2.3 Fases de AUP .................................................................................... 41 CÁPITULO IV: MARCO APLICATIVO .................................................................. 45 4.1 Fases del proyecto ................................................................................. 45 4.1.1 Fase I: Iniciación ................................................................................ 48 4.1.2 Fase II: Elaboración ............................................................................. 90 4.1.3 Fase III: Construcción .......................................................................... 97 4.1.4 Fase IV: Transición ............................................................................ 120 CONCLUSIONES ............................................................................................... 126 TRABAJOS FUTUROS ...................................................................................... 128 RECOMENDACIONES ...................................................................................... 129 REFERENCIAS BIBLIOGRÁFICAS Y DIGITALES ............................................ 130 ÍNDICE DE FIGURAS Figura 1: Proceso de solicitud de equivalencia de estudios, parte 1. ..................... 6 Figura 2: Proceso de solicitud de equivalencia de estudios, parte 2. ..................... 7 Figura 3: Arquitectura de la solución propuesta. .................................................... 9 Figura 4: Inicio del SISCRE. ................................................................................. 12 Figura 5: Selección de unidad de trabajo del SISCRE. ........................................ 13 Figura 6: Menú principal del SISCRE. .................................................................. 13 Figura 7: Entrada de datos del SISCRE. .............................................................. 14 Figura 8: Agregar una nueva materia al SISCRE. ................................................ 14 Figura 9: Agregar un nuevo profesor al SISCRE.................................................. 15 Figura 10: Consulta de historial de expedientes de estudiantes en SISCRES. .... 15 Figura 11: Entrada de datos EQU-2016. .............................................................. 17 Figura 12: Entrada de materias equivalentes EQU-2016. .................................... 17 Figura 13: Envió de materias al Consejo de Facultad EQU-2016. ....................... 18 Figura 14: Envió de materias al Consejo Universitario EQU-2016. ...................... 19 Figura 15: Memorándum por retraso de respuesta de expedientes EQU-2016. .. 19 Figura 16: Agregar una nueva materia al sistema EQU-2016. ............................. 20 Figura 17: Agregar una nueva universidad al sistema EQU-2016........................ 20 Figura 18: Consulta de reportes de materias equivalentes EQU-2016. ............... 21 Figura 19: Representación gráfica de la arquitectura cliente/servidor. ................. 23 Figura 20: Arquitectura de una aplicación web cliente/servidor............................ 25 Figura 21: Flujo del patrón MVC. .......................................................................... 27 Figura 22: Ejemplo de un documento HTML. ....................................................... 29 Figura 23: Ejemplo de un documento CSS. ......................................................... 30 Figura 24: Ejemplo de un código JavaScript. ....................................................... 31 Figura 25: Fases e hitos de AUP. ......................................................................... 42 Figura 26: Diagrama de casos de uso – perfil solicitante. .................................... 51 Figura 27: Diagrama de casos de uso – perfil PIRE ............................................. 52 Figura 28: Diagrama de casos de uso – perfil PARE y perfil JRE. ....................... 53 Figura 29: Diagrama de casos de uso – perfiles de usuario. ............................... 54 Figura 30: Prototipo – Iniciar sesión. .................................................................... 91 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21995985 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21995986 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21995992 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21995995 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21996011 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21996013 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21996014 Figura 31: Prototipo – Recuperar contraseña. ..................................................... 92 Figura 32: Prototipo – Crear usuario. ................................................................... 93 Figura 33: Prototipo – Secciones generales. ........................................................ 94 Figura 34: Modelo relacional de la base de datos. ............................................... 96 Figura 35: Interfaz – Registrar solicitante. ............................................................ 97 Figura 36: Interfaz – iniciar sesión. ....................................................................... 98 Figura 37: Interfaz - ¿Olvidó su contraseña?. ...................................................... 99 Figura 38: Interfaz – Solicitudes (PARE, PIRE o JRE). ...................................... 100 Figura 39: Interfaz – Añadir solicitud. ................................................................. 101 Figura 40: Solicitud descargada PDF. ................................................................ 102 Figura 41: Interfaz – Comprobantes (PARE, PIRE o JRE). ................................ 103 Figura 42: Interfaz – Editar comprobante. .......................................................... 104 Figura 43: Comprobante descargado. ................................................................ 105 Figura 44: Interfaz – Universidades. ................................................................... 106 Figura 45: Interfaz – Añadir Universidad. ........................................................... 106 Figura 46: Interfaz – Vista previa Universidad. ................................................... 107 Figura 47: Interfaz – Facultades. ........................................................................ 108 Figura 48: Interfaz – Añadir Facultad. ................................................................ 109 Figura 49: Interfaz – Vista previa Facultad ......................................................... 109 Figura 50: Interfaz – Escuelas. ........................................................................... 110 Figura 51: Interfaz – Añadir Escuela. ................................................................. 110 Figura 52: Interfaz – Vista previa Escuela. ......................................................... 111 Figura 53: Interfaz – Carreras. ........................................................................... 111 Figura 54: Interfaz – Añadir Carrera. .................................................................. 112 Figura 55: Interfaz – Vista previa Carrera. ......................................................... 112 Figura 56: Interfaz – Asignaturas. ...................................................................... 113 Figura 57: Interfaz – Añadir Asignatura. ............................................................. 114 Figura 58: Interfaz – Vista previa Asignatura. .................................................... 115 Figura 59: Interfaz – Periodos académicos. ....................................................... 116 Figura 60: Interfaz – Interfaz – Añadir periodo académico. ................................ 117 Figura 61: Interfaz – Usuarios. ........................................................................... 118 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21996022 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21996025 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21996026 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21996027 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21996028 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21996030 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21996031 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21996033 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21996034 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21996036 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21996037 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21996039 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21996040 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21996043 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21996045 Figura 62: Interfaz – Añadir Usuario. .................................................................. 119 Figura 63: Encuesta de experiencia de usuario. ................................................ 121 Figura 64: Resultados pregunta 1. ..................................................................... 122 Figura 65: Resultados pregunta 2. ..................................................................... 122 Figura 66: Resultados pregunta 3. ..................................................................... 123 Figura 67: Resultados pregunta 4. ..................................................................... 123 Figura 68: Resultados pregunta 5. ..................................................................... 124 Figura 69: Resultados pregunta 6. ..................................................................... 124 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21996047 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21996048 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21996049 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21996050 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21996051 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21996052 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21996053 ÍNDICE DE TABLAS Tabla 1: Ventajas y desventajas de la arquitectura cliente/servidor. .................... 22 Tabla 2: Ventajas y desventajas de las aplicaciones web. ................................... 26 Tabla 3: Resumen PHP ........................................................................................ 35 Tabla 4: Resumen MySQL ................................................................................... 37 Tabla 5: Resumen AUP. ....................................................................................... 43 Tabla 6: Planificación Fase I – Iniciación ............................................................. 46 Tabla 7: Planificación Fase II – Elaboración ........................................................ 46 Tabla 8: Planificación Fase III – Construcción ..................................................... 47 Tabla 9: Planificación Fase IV – Transición ......................................................... 48 Tabla 10: Caso de uso – Registrar usuario. ......................................................... 55 Tabla 11: Caso de uso – Iniciar sesión. ............................................................... 55 Tabla 12: Caso de uso – Recuperar contraseña. ................................................. 56 Tabla 13: Caso de uso – Cambiar contraseña. .................................................... 56 Tabla 14: Caso de uso – Modificar datos personales. .......................................... 57 Tabla 15: Caso de uso – Registrar solicitud. ........................................................ 57 Tabla 16: Caso de uso – Consultar mis solicitudes. ............................................. 58 Tabla 17: Caso de uso – Consultar solicitudes. ................................................... 59 Tabla 18: Caso de uso – Ver vista previa solicitud. .............................................. 60 Tabla 19: Caso de uso – Editar solicitud. ............................................................. 60 Tabla 20: Caso de uso – Descargar solicitud. ...................................................... 61 Tabla 21: Caso de uso – Eliminar solicitud. ......................................................... 61 Tabla 22: Caso de uso – Añadir solicitud. ............................................................ 62 Tabla 23: Caso de uso – Añadir comprobante. .................................................... 62 Tabla 24: Caso de uso – Consultar comprobante. ............................................... 63 Tabla 25: Caso de uso – Ver vista previa comprobante. ...................................... 64 Tabla 26: Caso de uso – Editar comprobante. ..................................................... 65 Tabla 27: Caso de uso – Descargar comprobante. .............................................. 65 Tabla 28: Caso de uso – Eliminar comprobante................................................... 66 Tabla 29: Caso de uso – Consultar universidades. .............................................. 67 Tabla 30: Caso de uso – Ver vista previa universidades. ..................................... 68 Tabla 31: Caso de uso – Editar universidades. .................................................... 69 Tabla 32: Caso de uso – Eliminar universidad. .................................................... 69 Tabla 33: Caso de uso – Añadir universidad. ....................................................... 70 Tabla 34: Caso de uso – Añadir facultad ............................................................. 70 Tabla 35: Caso de uso – Eliminar facultad ........................................................... 71 Tabla 36: Caso de uso – Editar facultad .............................................................. 71 Tabla 37: Caso de uso – Ver vista previa facultad ............................................... 72 Tabla 38: Caso de uso – Consultar facultades. .................................................... 73 Tabla 39: Caso de uso – Añadir escuela. ............................................................. 74 Tabla 40: Caso de uso – Eliminar escuela. .......................................................... 74 Tabla 41: Caso de uso – Editar escuela. .............................................................. 75 Tabla 42: Caso de uso – Ver vista previa escuela ............................................... 76 Tabla 43: Caso de uso – Consultar escuelas. ...................................................... 77 Tabla 44: Caso de uso – Añadir carrera. .............................................................. 78 Tabla 45: Caso de uso – Eliminar carrera. ........................................................... 78 Tabla 46: Caso de uso – Editar carrera ................................................................ 79 Tabla 47: Caso de uso – Ver vista previa carrera. ............................................... 79 Tabla 48: Caso de uso – Consultar carreras. ....................................................... 80 Tabla 49: Caso de uso – Añadir asignatura. ........................................................ 81 Tabla 50: Caso de uso – Ver vista previa asignatura. .......................................... 81 Tabla 51: Caso de uso – Editar asignatura .......................................................... 82 Tabla 52: Caso de uso – Eliminar asignatura ....................................................... 82 Tabla 53: Caso de uso – Consultar asignaturas. .................................................. 83 Tabla 54: Caso de uso – Consultar usuarios. ...................................................... 84 Tabla 55: Caso de uso – Ver vista previa usuario. ............................................... 85 Tabla 56: Caso de uso – Editar usuario. .............................................................. 85 Tabla 57: Caso de uso – Eliminar usuario. ........................................................... 86 Tabla 58: Caso de uso – Añadir usuario. ............................................................. 86 Tabla 59: Caso de uso – Consultar períodos académicos. .................................. 87 Tabla 60: Caso de uso – Ver vista previa período académico. ............................ 88 Tabla 61: Caso de uso – Editar período académico. ............................................ 88 Tabla 62: Caso de uso – Eliminar período académico. ........................................ 89 Tabla 63: Caso de uso – Añadir período académico. ........................................... 89 Tabla 64: Tecnologías instaladas. ........................................................................ 90 Tabla 65: Guía de estilos. .................................................................................... 90 1 INTRODUCCIÓN El DRE, adscrito a la Dirección de Registro Estudiantil de la Coordinación de la Secretaria General de la UCV, tiene como principal objetivo tramitar, reconocer y convalidar los títulos otorgados por una universidad nacional, extranjera o institutos nacionales. Este proceso de equivalencias se determina mediante un análisis previo de cuáles asignaturas cursadas y aprobadas por el tramitante, equivalen a asignaturas que forman parte del plan de estudio de una determinada Facultad, Escuela o Instituto universitario. Actualmente, ni el DRE ni las distintas Comisiones de reválidas y equivalencias cuentan con un módulo centralizado para realizar los procesos de equivalencia de estudios, reválida o validez de título y reconocimiento de título no revalidable. Como consecuencia, cada Facultad utiliza distintas herramientas para agilizar las tareas inherentes en los distintos procesos de equivalencia de estudios. Sin embargo, en muchos casos, estas herramientas no cuentan con algunas funcionalidades fundamentales requeridas en los procesos, lo que obliga tanto a los tramitantes como a los empleados del departamento/comisión a realizar algunos procesos de forma manual, generando retrasos en los mismos. En consecuencia, el objetivo de este Trabajo de Especial de Grado (TEG) es desarrollar el Módulo de Gestión de Equivalencia de Estudios del Departamento de Reválidas y Equivalencias, cuyo objetivo es centralizar y gestionar todas aquellas actividades automatizables del proceso de solicitud de equivalencia de estudios de universidades nacionales, extranjeras o institutos nacionales. Este TEG se encuentra estructurado de la siguiente manera: En el capítulo I se describe el planteamiento del problema, los objetivos del TEG, la solución propuesta, la justificación de la solución propuesta y el alcance del TEG. En el capítulo II se describen aspectos teóricos, conceptos, plataformas tecnológicas y herramientas utilizadas para el desarrollo de la solución. 2 En el capítulo III se describe la metodología que fue aplicada durante el desarrollo del TEG y la justificación de su uso. En el capítulo IV se explican y describen las fases de trabajo que se aplicaron para el análisis, diseño e implementación de la solución propuesta usando la metodología seleccionada. Por último, se presentan las conclusiones, trabajos futuros y las referencias bibliográficas utilizadas para este TEG. 3 CAPÍTULO I: PROBEMA DE INVESTIGACIÓN 1.1 Planteamiento del problema El DRE, adscrito Dirección de Registro Estudiantil de la UCV es el ente encargado de tramitar y gestionar las solicitudes de equivalencias de estudios. Esta funcionalidad se basa en otorgar equivalencias de asignaturas aprobadas en Instituciones Universitarias nacionales o extranjeras con asignaturas que forman parte del plan de estudios de la carrera a la que el solicitante desea ingresar en la UCV o a una Institución de Educación Superior Privada. Se entiende por equivalencia: “el resultado del proceso por el cual se determina cuáles asignaturas aprobadas por el solicitante en otra institución se corresponde, al menos en un 75% de sus contenidos programáticos, con asignaturas que forman parte del plan de estudios de la carrera a la que desea ingresar en la UCV” (MANUAL DE NORMAS Y PROCEDIMIENTO DE LA GESTIÓN ACADÉMICA DE LA UNIVERSIDAD CENTRAL DE VENEZUELA, 2016). Actualmente este proceso se lleva a cabo de la siguiente manera: (ver Figura 1 y Figura 2): a) El DRE asigna una cita al solicitante para la recepción de los recaudos necesarios para el trámite. b) El solicitante llena la planilla de solicitud de equivalencias el día y hora fijada en la cita previamente pautada. c) El DRE verifica la documentación recibida. En caso de no estar completa, se devuelve la documentación al solicitante indicándole el motivo de la devolución. En caso contrario, se procede a registrar la solicitud de equivalencias. d) El DRE firma y sella la planilla de solicitud de equivalencia y entrega al solicitante una copia de la misma. e) El DRE archiva una copia de la planilla de solicitud de equivalencias y conforma un expediente de solicitud de equivalencia en conjunto con los recaudos entregados por el solicitante. f) El DRE remite el expediente a la Comisión de Reválidas y Equivalencias (CRE) a la facultad correspondiente. 4 g) La CRE de la Facultad clasifica el expediente de solicitud de equivalencias por escuela correspondiente. h) La CRE archiva el expediente recibido y lo remite a la Sub-Comisión de Reválidas y Equivalencias de la escuela correspondiente. i) La Sub-Comisión de Reválidas y Equivalencias de la escuela realiza un estudio técnico del expediente, identificando las asignaturas equivalentes. j) La Sub-Comisión de Reválidas y Equivalencias de la escuela registra en la planilla comprobante de asignaturas equivalentes aquellas asignaturas consideradas como equivalentes en el expediente estudiado y lo remite a la CRE en conjunto con el expediente. k) La CRE presenta ante el Consejo de Facultad la planilla comprobante de asignaturas equivalentes para su aprobación. l) El Consejo de Facultad revisa y firma la planilla comprobante de asignaturas equivalentes en señal de aprobación. m) El Consejo de Facultad remite al DRE el expediente en conjunto con la planilla comprobante de asignaturas equivalentes. n) El DRE registra la fecha de recepción del expediente y el comprobante de asignaturas equivalentes. o) El DRE verifica que el comprobante de asignaturas equivalentes este llenado correctamente, comparándolos con los datos del expediente. En caso de existir algún error, el comprobante de asignaturas equivalentes es devuelto a la CRE indicando el error para su corrección. En caso contrario, se envía el expediente al Consejo Universitario para su aprobación. p) El Consejo Universitario aprueba el expediente de equivalencia e informa mediante una resolución al DRE. q) El DRE elabora un oficio personalizado donde se participa la aprobación por parte del Consejo Universitario y solicita la firma de cada uno de los oficios y el comprobante de asignaturas equivalentes por parte de la Secretaria General. r) La Secretaria General firma el oficio y el comprobante de asignaturas equivalentes y devuelve al DRE. 5 s) El DRE prepara un sobre cerrado que contiene el oficio firmado por Secretaria y copia del comprobante de asignaturas equivalentes y anexa estos documentos al expediente. t) El DRE entrega al solicitante el sobre cerrado para su información y fines consiguientes. 6 Figura 1: Proceso de solicitud de equivalencia de estudios, parte 1. 7 Figura 2: Proceso de solicitud de equivalencia de estudios, parte 2. 8 En el proceso expuesto, se encuentran los siguientes problemas: • No se cuenta con un sistema en línea para la realización de solicitudes. • No se puede hacer un seguimiento del estatus de ningún tipo de solicitud por parte de ninguna de las partes o personas involucradas hasta el final del proceso. • Las planillas y expedientes se envían en físico, haciendo un gasto extra en materiales de impresión. • Las planillas se llenan a mano, lo cual puede generar retrasos en el proceso e impide su edición en caso de cometer algún error de tipeo. • No se cuenta con un sistema centralizado para el almacenamiento y estudio de los expedientes. 1.2 Objetivos del TEG 1.2.1 General Desarrollar el Módulo de Gestión de Equivalencia de Estudios del Departamento de Reválidas y Equivalencias de la UCV para la gestión y almacenamiento de solicitudes de equivalencia de estudios. 1.2.2 Específicos • Conceptualizar y estructurar el Módulo de Gestión de Equivalencia de Estudios del Departamento de Reválidas y Equivalencias de la UCV. • Analizar los flujos y procesos básicos del proceso de equivalencia de estudios. • Definir una arquitectura tecnológica para el desarrollo de la solución propuesta. • Construir el Módulo de Equivalencia de Estudios del DRE de la UCV. • Realizar validaciones y pruebas necesarias para asegurar el correcto funcionamiento del Módulo de Equivalencia de Estudios. 9 1.3 Solución propuesta Se propone desarrollar el Módulo de Gestión de Equivalencia de Estudios del DRE de la UCV a través de un módulo web, utilizando como metodología de desarrollo AUP, usando herramientas y tecnologías de software libre, estableciendo como base la siguiente arquitectura: Figura 3: Arquitectura de la solución propuesta. La arquitectura de la Figura 3 describe un modelo cliente/servidor, donde el usuario a través de un navegador (el cliente), envía solicitudes al servidor web que se comunica con el cliente a través de la red, posiblemente para hacer petición de una página web alojada en el servidor, el cual se encarga de devolver dicha solicitud. En cuanto a tecnologías, se utiliza para el desarrollo herramientas y tecnologías de software libre. Se utiliza el lenguaje Hypertext Preprocessor (PHP) en conjunto con el marco de trabajo Laravel, como SMBD se utiliza MySQL 5.7, mientras que se aloja toda la aplicación en un servidor Apache. 10 1.4 Justificación de la solución Contar con módulo web seria de vital importancia para solventar la problemática actual del DRE y las Comisiones de Reválidas y Equivalencias de cada Facultad en cuanto al proceso de equivalencia de estudios. Este módulo se encarga de almacenar y gestionar toda la información generada tanto para los tramitantes como para las distintas entidades que intervienen en el proceso de equivalencia de estudios. Con el desarrollo del Módulo de Equivalencia de Estudios, el DRE puede acceder de forma inmediata a la información generada por las distintas Comisiones de Reválidas y Equivalencias, mientras que, para cada una de las comisiones, se tiene un único módulo centralizado que se encarga de gestionar y almacenar toda la información generada durante el proceso de equivalencia de estudios. Por otra parte, se busca reducir el factor de error humano en el trámite de documentos, solicitudes e impresión de planillas, que son los principales factores de retraso del proceso actualmente. 11 CAPÍTULO II: MARCO CONCEPTUAL 2.1 Antecedentes A continuación, se describen las aplicaciones utilizadas actualmente para gestionar los procesos de equivalencia de asignaturas que se llevan a cabo en las distintas Comisiones de Reválidas y Equivalencias de cada Facultad. Estos sistemas sirven de base para esta investigación, ya que permite capturar requerimientos funcionales importantes, para tener en cuenta en el desarrollo del Módulo de Gestión de Equivalencia de Estudios. Actualmente, solo las Facultades de Ingeniería y Ciencias Económicas y Sociales (FaCES) cuentan con un sistema especializado para el proceso de equivalencia de estudios. Ambos sistemas se describen en este capítulo. 2.1.1 Sistema de Control de Reválidas y Equivalencias (SISCRE) Es un sistema de gestión que permite a FaCES tener un mayor y mejor control de los expedientes y solicitudes relacionadas con Reválidas y Equivalencias. Fue instalado y puesto en funcionamiento en el año 1993 por la Unidad de Informática de FaCES. Está diseñado para que funcione en computadoras que soporten el Sistema Operativo de Disco (DOS). Fue desarrollado en un lenguaje llamado CLIPPER y la estructura de datos que utiliza esta soportada con una base de datos. En cuanto a su funcionamiento, SISCRE está basado en la selección de opciones tipo menú. Posee un menú principal que permite al usuario controlar todas las operaciones que brinda el sistema en sí. En cuanto a su estructura, este está dividido en dos módulos: • Equivalencias: en este módulo se realizan las consultas y modificaciones relacionadas a los expedientes de equivalencias de estudio. Posee un menú en el cual se listas las siguientes opciones: recibir del Consejo Universitario, recibir de la Sub-Comisión, recibir del Consejo de Facultad, consultar expedientes y devolución de expedientes. Cada una de estas opciones debe 12 ser ejecutada de una forma particular y ordenada, de manera tal de no generar errores en el almacenamiento de los datos. • Reválidas: en este módulo se realizan las consultas y modificaciones relacionadas a los expedientes de reválidas de títulos. Posee un menú en el cual se listas las siguientes opciones: recibir del Consejo Universitario y solicitud de planillas de exámenes. Al igual que en el módulo anterior, cada una de las opciones deben ser ejecutadas de una forma particular para no generar errores en el almacenamiento de la data. A continuación, se muestran una serie de capturas de pantalla del sistema para observar un poco su funcionamiento. Figura 4: Inicio del SISCRE. La Figura 4 muestra la pantalla de inicio del sistema, en la cual se debe ingresar un código de acceso para acceder a este. 13 Figura 5: Selección de unidad de trabajo del SISCRE. La Figura 5 se observa la pantalla en la cual se escoge la unidad en la cual se va a trabajar. En esta unidad debe de encontrarse el archivo con los datos que cargara el sistema para futuras consultas o modificaciones. Figura 6: Menú principal del SISCRE. La Figura 6 ilustra el menú principal de la aplicación, el cual lista las distintas opciones que brinda el sistema. 14 Figura 7: Entrada de datos del SISCRE. La Figura 7 muestra la interfaz para realizar el llenado de datos una vez que la solicitud de equivalencia llega a la CRE de FaCES. Se requiere la cédula del tramitante, apellidos y nombres del tramitante, nacionalidad del tramitante, número de la planilla, universidad de procedencia, escuela de procedencia, universidad destino, escuela destino, fecha de la solicitud, número del libro y número de folio. La Figura 8 se ilustra la interfaz que se utiliza para ingresar nuevas materias al sistema. Se debe ingresar el código de la escuela, el código de la materia, el nombre abreviado de la materia y el código expandido de la materia. Figura 8: Agregar una nueva materia al SISCRE. 15 Figura 9: Agregar un nuevo profesor al SISCRE. La Figura 9 muestra la interfaz para agregar un nuevo profesor al sistema. Se debe ingresar la cédula del profesor, apellidos y nombres del profesor, nacionalidad del profesor, estatus de actividad del profesor y cargo que ocupa el profesor. Figura 10: Consulta de historial de expedientes de estudiantes en SISCRES. La Figura 10 ilustra la interfaz para consultar el historial de solicitudes de un estudiante. Se realiza mediante el ingreso de la cédula de identidad del estudiante. 16 Las principales desventajas de SISCRE son las siguientes: • No posee validaciones de datos en los campos de entrada de data, por lo cual puede generarse errores en cualquier parte del programa. • Para poder utilizar el sistema, el personal encargado debe trasladarse a la Comisión de Reválidas y Equivalencias de FaCES. • Está desarrollado en un lenguaje antiguo y obsoleto, lo cual trae como consecuencia que su mantenimiento o la incorporación de nuevas funcionalidades sea complicado. • Los tramitantes no conocen el estatus de sus solicitudes, ya que no tienen contacto con el sistema. • En cuanto a interfaz, es bastante pobre, ya que toda la navegación dentro de la aplicación se realiza con menús de opciones que tienen que ser ingresadas solo por teclado. • No permite la anulación o modificación de algún proceso que se esté realizando en ninguna fase del mismo. • Algunos campos del proceso de llenado de materias equivalentes (código de la materia y unidades de crédito) deben ser llenadas con data aleatoria para poder culminar con la generación de la planilla. 2.1.2 Sistema de Equivalencias (EQU-2016) Es un sistema de gestión y monitoreo utilizado por la Facultad de Ingeniería para automatizar los procesos de registro y recuperación de expedientes relacionados con equivalencias de estudios. Fue puesto en funcionamiento en el año 1994. Fue desarrollado en Visual FoxPro y su estructura de datos es una base de datos interna. Cuenta con un ejecutable principal que despliega una serie de opciones que, al ser seleccionadas, llama a los distintos formularios que contienen las funcionalidades a del sistema. A continuación, se muestran una serie de capturas de pantalla del sistema para observar un poco su funcionamiento. 17 La Figura 11 muestra la interfaz para realizar el llenado de datos una vez que la solicitud de equivalencia llega a la CRE de la Facultad de Ingeniería. Se requiere la fecha de entrada de la solicitud, cedula del tramitante, nacionalidad, numero de la solicitud, tipo de solicitud, condición (se maneja internamente por la Facultad), escuela, universidad de procedencia, facultad de procedencia, escuela de procedencia, universidad de destino, facultad de destino y escuela de destino. Figura 12: Entrada de materias equivalentes EQU-2016. La Figura 12 ilustra la interfaz que se utiliza para ingresar las materias que fueron aprobadas como equivalentes para un tramitante. Es importante destacar que este formulario debe ser llenado por el profesor de la Sub-Comisión de Reválidas y Figura 11: Entrada de datos EQU-2016. 18 Equivalencias de la escuela a la cual fue enviado el expediente. Una vez llenado el campo MATERIA EQUIVALENTE, los campos COD (código) y UNI (unidades de crédito) se llenan automáticamente. Figura 13: Envió de materias al Consejo de Facultad EQU-2016. Una vez las materias equivalentes son agregadas al expediente del tramitante, se requiere que estas sean enviadas al Consejo de Facultad para su aprobación. En la Figura 13, podemos observar como el sistema permite seleccionar uno, algunos o todos los expedientes activos hasta la fecha para que sean impresos y enviados al Consejo de Facultad. 19 Figura 14: Envió de materias al Consejo Universitario EQU-2016. En la Figura 14 se ilustra la pantalla de envió de materias al Consejo Universitario, en el cual se agregan de forma automática la fechas en las que el expediente fue enviado y recibido de la Sub-Comisión de Equivalencias, la Comisión de Equivalencias y finalmente del Consejo de Facultad. Figura 15: Memorándum por retraso de respuesta de expedientes EQU-2016. En la Figura 15 podemos observar el formato del memorándum que genera el sistema (en caso de ser necesario) en caso de un expediente no tenga respuesta en los lapsos de tiempo establecidos. 20 Figura 16: Agregar una nueva materia al sistema EQU-2016. La Figura 16 muestra la interfaz para agregar una nueva materia al sistema. Se debe ingresar el nombre de la materia, su código y unidades de crédito. Figura 17: Agregar una nueva universidad al sistema EQU-2016. La Figura 17 ilustra la interfaz para agregar una nueva universidad al sistema. Se debe ingresar el nombre de la universidad. 21 Figura 18: Consulta de reportes de materias equivalentes EQU-2016. En la Figura 18 podemos observar la pantalla en la cual se pueden consultar los expedientes ya estudiados y aprobados por la Comisión de Reválidas y Equivalencias de la Facultad de Ingeniería. Las principales desventajas de EQU-2016 son las siguientes: • No posee documentación. • Para poder utilizar el sistema, el personal encargado debe de trasladarse a la CRE de la Facultad de Ingeniería. • Está desarrollado en un lenguaje antiguo y obsoleto, lo cual trae como consecuencia que su mantenimiento o la incorporación de nuevas funcionalidades sea complicado. • Los tramitantes no conocen el estatus de sus solicitudes, ya que no tienen contacto con el sistema. A continuación, se explican los conceptos relacionados con el desarrollo de una aplicación Web basada en una arquitectura cliente/servidor. 22 2.2 Arquitectura cliente/servidor Cliente/servidor es una arquitectura distribuida que proporciona al usuario final un acceso transparente a las aplicaciones, datos, servicios de computo o cualquier recurso que pueda ser accedido a través de una red sin importar la plataforma (Valle & Gutierrez, 2005). El funcionamiento de esta arquitectura se enfoca en que un cliente realiza una petición al servidor a través de una red de comunicación común. Una vez que el servidor recibe la petición, este la procesa y devuelve una respuesta a través de la red para que posteriormente sea visualizada por el usuario final. La principal ventaja de esta arquitectura es que se definen responsabilidades especificas a cada componente de la arquitectura, garantizando que cada computador/dispositivo pueda ejecutar sus tareas de forma especializada y así facilitar el mantenimiento del sistema. A continuación, se presenta un cuadro comparativo de ventajas y desventajas de esta arquitectura (Hernández & Martínez, 1997): Tabla 1: Ventajas y desventajas de la arquitectura cliente/servidor. Ventajas Desventajas Estructura modular, lo cual facilita la integración de nuevas tecnologías y favorece la escalabilidad de las soluciones. Costo elevado, debido a la complejidad técnica y funcional del servidor. Recursos centralizados, el servidor es el centro de la red y puede administrar los recursos que son comunes a todos los usuarios. El desempeño de la red puede afectar el rendimiento completo del sistema. Administración al nivel del servidor, los clientes requieren menos administración por solo encargarse de mostrar la data. Dependencia total del servidor, ya que si este falla, los clientes no tendrán respuesta a sus solicitudes. Red escalable, es posible quitar o agregar clientes sin afectar el funcionamiento de la red y sin la necesidad de realizar mayores modificaciones. Se requieren de mecanismos adicionales para prevenir cuellos de botella o congestionamiento por parte del servidor. En la Figura 19, podemos ver la representación gráfica de la arquitectura cliente/servidor: 23 Figura 19: Representación gráfica de la arquitectura cliente/servidor. 2.3 Aplicación Web Una aplicación web es un sistema informático que los usuarios manipulan accediendo a un servidor web a través de Internet o Intranet. Las aplicaciones web son populares debido a la practicidad del navegador como cliente ligero. La practicidad con la que se puede actualizar y mantener aplicaciones web sin distribuir e instalar software en miles de potenciales clientes es otra razón de su popularidad, sin dejar de mencionar que al utilizar el protocolo HTTP como red de comunicación entre el cliente y el servidor, se establecen estándares que no tienen que ser creador por el/los programador(es) de la aplicación (Mora, 2002). A continuación, se describen los componentes principales de la arquitectura cliente/servidor orientados a las aplicaciones web. 2.3.1 Componentes El cliente web es un programa llamado comúnmente navegador o explorador (browser en inglés), con el cual interactúan los usuarios para realizar solicitudes de recursos a un servidor web a través del protocolo HTTP. El código de las aplicaciones del cliente web suele estar escrito por código HTML y algún otro lenguaje de script propio del navegador (Mora, 2002). Los navegadores permiten la reproducción de una amplia gama de contenido multimedia (imágenes, videos o audio) para hacer más atractivas y llamativas las interfaces, por lo cual, es necesario en muchos casos, el uso de extensiones o configuraciones especiales para la reproducción de los mismos. En consecuencia, el objetivo del cliente web consiste en interpretar las páginas HTML en conjunto con los diferentes recursos que estas vengan. 24 El servidor web es un programa que está constantemente a la espera de solicitudes realizadas por los clientes web para satisfacer las necesidades de este último. Cuando un usuario entra en una página de Internet, su navegador se comunica con el servidor enviando y recibiendo datos que determinan qué es lo que ve en la pantalla, por ejemplo, una página HTML estática (Mora, 2002). Antes de que el servidor pueda generar una respuesta, es necesario que este realice la ejecución de código de algún lenguaje o tecnología del lado del servidor (PHP o Java, por ejemplo) antes de poder enviar la misma al navegador, lo cual genera automáticamente más solicitudes al servidor. En cuanto a los protocolos de comunicación que se utilizan para la comunicación entre el cliente y el servidor, se utiliza el Protocolo de Transferencia de Hipertexto (en inglés: Hypertext Transfer Protocol o HTTP) o el Protocolo Seguro de Transferencia de Hipertexto (en inglés: Hypertext Transfer Protocol Secure o HTTPS). Cuando un navegador web realiza una petición a un servidor web, dicha petición especifica al servidor que tipo de solicitud se va a realizar (comúnmente, GET o POST) y así, determinar si la petición requiere una comunicación adicional con la base de datos o sencillamente se puede responder a la solicitud con una acción predefinida. Un servidor web puede entregar los contenidos simultáneamente a varios ordenadores o navegadores web a la vez. El rendimiento y velocidad de estas respuestas va atado directamente a la cantidad de solicitudes que tenga el servidor, la velocidad de procesamiento del computador del servidor y la complejidad del contenido de la respuesta (APACHE, 2009). Las aplicaciones web se caracterizan por estar conformadas por tres niveles (ver Figura 20) 25 Figura 20: Arquitectura de una aplicación web cliente/servidor. 2.3.2 Ventajas de las aplicaciones web La principal ventaja de las aplicaciones web es que debido a que son visualizadas a través de navegadores, la gestión de código del lado del cliente se reduce considerablemente, ya que todos los cambios realizados en la aplicación (tanto de interfaz como de funcionalidad) son realizados del lado del servidor web, garantizando que este cambio será visible inmediatamente en todos los clientes que accedan a la aplicación (Mora, 2002). En cuanto a las desventajas, al igual que cualquier aplicación que se base en una arquitectura cliente/servidor, el punto de fallo o eslabón débil del sistema radica en el servidor, debido a que, si este no tiene los mecanismos de seguridad, recursos y configuraciones adecuadas, los usuarios pueden tener una mala experiencia al solicitar recursos de este. En la Tabla 2, se detallará un poco más a fondo las ventajas y desventajas de utilizar una aplicación web. 26 Tabla 2: Ventajas y desventajas de las aplicaciones web. Ventajas Desventajas Las aplicaciones web no requieren ser instaladas en las computadoras de los clientes, ya que estas se visualizan a través de los exploradores. Si no se cuenta con la seguridad adecuada en el servidor, los datos podrían quedar expuestos a cualquier ataque. Son multiplataforma, ya que solo se necesita de un navegador para poder realizar solicitudes al servidor. El rendimiento en general de la aplicación se puede ver degradado si no se cuenta con mecanismos adecuados para el manejo de solicitudes simultaneas. Pueden se puede acceder a ellas desde cualquier computador que cuente con una conexión a internet. El sistema es totalmente dependiente de una red de comunicación para su funcionamiento. Los clientes no requieren actualizaciones, ya que las actualizaciones son realizadas del lado del servidor. 2.4 Patrón de diseño MVC (Modelo Vista Controlador) MCV es un patrón de arquitectura para el diseño de aplicaciones que separa los componentes de la aplicación en tres niveles: interfaces de usuario, lógica de control y lógica de negocio. Al tener la lógica del negocio separada de las interfaces de usuario, se facilita la evolución de cada uno de estos componentes y se incrementa considerablemente la reutilización de código y la flexibilidad al momento de reutilizar los mismos (Mestras Pavon, 2008). A continuación, se describen las funcionalidades de cada capa en MCV (Romero Fernandez & Gonzales Diaz, 2012): • Modelo: es la capa que representa los datos de la aplicación y la lógica del negocio. Además, se encarga de gestionar todos los accesos a los datos: consultas, inserciones, modificaciones o eliminaciones. • Vista: es la capa encargada desplegar la información del modelo a los usuarios finales. 27 • Controlador: es la capa encargada de gestionar las ordenes o interacciones del usuario en la vista sobre el modelo. Es el intermediario entre la vista y el modelo. 2.4.1 Funcionamiento del patrón MVC A continuación, la Figura 21 describe el flujo de interacción que realiza cada una de las capas de MVC para su correcto funcionamiento (Gamma, Helm, Johnson, & Vlissides, 2002): 1. El usuario genera un evento al interactuar con la vista. 2. El controlador recibe dicha petición de la vista y gestiona la misma. 3. El controlador envía al modelo la petición, posiblemente modificándolo de forma adecuada a la acción solicitada por el usuario. 4. El controlador delega a los objetos de la vista la tarea de desplegar la interfaz de usuario, generando la interfaz apropiada de acuerdo a la solicitud que se hizo. 5. La interfaz de usuario espera nuevas interacciones del usuario, comenzando el ciclo nuevamente. Figura 21: Flujo del patrón MVC. 28 2.5 Herramientas tecnológicas para el desarrollo de aplicaciones web A continuación, se describen las tecnologías tanto del lado del cliente, como del lado del servidor, necesarias para el desarrollo de un módulo web. Como, por ejemplo, lenguajes de programación, scripting, estilo, marcado, SMBD, entre otros. 2.5.1 Tecnologías del lado del cliente Este tipo de tecnologías están relacionadas a como los navegadores manejan y procesan los efectos y funcionalidades que se emplean para mostrar de forma agradable y entendible la información a los usuarios. Estas tecnologías se enfocan en la presentación de las páginas en sí, es decir, control de ventanas, presentaciones en las que se pueden mover objetos por la página, control y validación de formularios, cálculos, entre otros. A continuación, se describen una serie de tecnologías del lado del cliente. 2.5.1.1 HyperText Markup Language (HTML) En español, Lenguaje de Marcas de Hipertexto, es un lenguaje de etiquetas que se emplea para dar formato a los sitios web accedidos a través de los navegadores. Estos últimos son capaces de interpretar las etiquetas que conforman una página web para para mostrarlas con el formato y la organización deseada (Mora, 2002). HTML es un estándar en constate evolución para el desarrollo de páginas web, ya que desde 1996 la World Wide Web Consortium (W3C), que es la organización que define la mayoría de los estándares para el desarrollo web, se ha encargado de mejorar y generar constantes revisiones de este lenguaje (HTML 3.0’, HTML 3 y HTML 4) para ampliar la gama de etiqueta que este posee e ir depurando errores tras cada revisión. (Asensio & Menéndez, s.f). La versión más actual es HTML 5, la cual provee características como la inclusión de mucho más sencilla de videos en las páginas web, mejoras de contenido, etiquetado semántico, nuevas características para los formularios, entre otras. 29 Figura 22: Ejemplo de un documento HTML. Para generar código HTML no se necesita la instalación de una aplicación específica, basta con tener un editor de texto para crear y editar este tipo de documentos. Sin embargo, existen herramientas especializadas que poseen una interfaz que permite a los programadores o diseñadores crear código HTML automáticamente, como lo son Dreamweaver de Macromedia de Adobe o inclusive marcos de trabajo (frameworks) escritos en lenguaje de alto nivel como Wordpress. 2.5.1.2 Cascading Style Sheets (CSS) En español, Hojas de estilo en cascada, es un lenguaje de estilos que sirve para crear y definir la presentación de lenguajes de marcado o etiquetas como HTML. Desde 1996, la W3C ha considerado este lenguaje como esencial para el desarrollo de páginas web, ya que CSS permite separar la definición de los contenidos y sus aspectos de presentación en los navegadores, obligando a crear documentos HTML con significado semántico (Mora, 2002). CSS al igual que HTML, es un estándar en constante evolución, ya que la W3C se ha dado a la tarea de mejorar y generar constantes revisiones (CSS 1 y CSS 2) para ampliar la personalización de aspectos como fuentes, alineación, posicionamiento de etiquetas, colores, dimensiones e incluso, el soporte y visualización del mismo documento en dispositivos con características físicas (resoluciones de pantalla) distintos (Asensio & Menéndez, s.f). 30 Su última versión es CSS 3, la cual abre un nuevo abanico de posibilidades para la creación de páginas web mucho más atractivas para el usuario. Dentro de las nuevas características que ofrece tenemos los bordes redondeados, degradados, sombras, animaciones, entre otras. Figura 23: Ejemplo de un documento CSS. Usando HTML, se puede definir el estilo de cada una de las etiquetas que componen el documento, agregando código adicional a cada una de las etiquetas y haciendo un poco engorroso el proceso de lectura del documento para los programadores. Con la incorporación de CSS a las páginas web, se puede tener un documento separado en el cual podemos definir las reglas y estilos de presentación en diferentes dispositivos capaces de mostrar contenido web, además de mejorar considerablemente el mantenimiento de las páginas web en general. 2.5.1.3 JavaScript Es un lenguaje de programación tipo script (secuencia de instrucciones) para la creación de páginas web dinámicas que permiten una mayor interacción con el usuario. Está basado sintácticamente en lenguaje C y es interpretado, por ende, no es necesario compilar los programas para ejecutarlos (pueden ser probados en el navegador sin necesidad de procesos intermedios) (Pavón Mestras, 2012-2013). JavaScript fue declarado como estándar del European Computer Manufacturers Association (ECMA) en 1997, poco tiempo después también fue estandarizado por la International Standard Organization (ISO). En sus inicios, debido a la estructura de objetos que implementaban los navegadores de la época para representar los 31 documentos HTML, no se lograba ajustar con el estándar JavaScript, lo cual generaba muchos problemas de compatibilidad. Para solventar esto, la W3C público un nuevo modelo de objetos para representar el contenido de los documentos HTML en los navegadores llamado DOM (Document Object Model), que fue incorporado por la mayoría de los navegadores para que se trabajase bajo un mismo modelo de objetos que si se adaptase al estándar (Navarrete, 2006-2007). JavasScript es un lenguaje mayormente utilizado para el manejo de interacciones de páginas web. Normalmente, consiste en crear un conjunto de funciones que son llamadas desde el propio HTML o en un documento separado, cuando algún evento sucede. De ese modo, se pueden desencadenar efectos como que un botón cambie de forma al pasar el ratón por encima, abrir una nueva ventana, poder mostrar/ocultar un texto, desplazamiento de imágenes, burbujas de información, operaciones matemáticas o alguna otra acción que sea atractiva y funcional para el usuario. Figura 24: Ejemplo de un código JavaScript. Actualmente, existen un gran número de bibliotecas basadas en este lenguaje, como lo son jQuery, Mootols, Ajax o Foundation, que explotan las características inherentes de JavaScript enfocándose en un punto específico, como pueden ser el manejo de páginas responsive, manejo de fechas o calendarios, gestión de video, interfaces de usuario, manipulación de datos, entre otros. 32 2.5.2 Tecnologías del lado del servidor Hasta el momento, se han descrito distintas tecnologías cuyo objetivo es la presentación de la información de una forma agradable y comprensible para los usuarios finales. En cuanto al procesamiento de la información, existe otro conjunto de lenguajes que se ejecutan e interpretan sobre el servidor para dar respuesta a las peticiones de los usuarios, destacando funciones como accesos a bases de datos u operaciones que no pueden ser realizadas en el código del cliente propiamente. Para el desarrollo del Módulo de Gestión de Equivalencia de Estudios, se realizó un estudio previo de las distintas tecnologías del lado del servidor y fueron seleccionadas las siguientes (Akchar, 2018): 2.5.2.1 Apache Apache es un servidor de páginas web de código abierto y de libre distribución para su uso comercial, desarrollado por la Apache Software Foundation (ASF) en 1999. Es multiplataforma no solo a nivel de sistemas operativos, sino también a nivel de lenguajes de programación, siendo capaz de compilar lenguajes como PHP, Perl, Python, entre otros. Gracias a su diseño modular, permite a los desarrolladores web la capacidad de crear configuraciones personalizadas dependiendo de sus necesidades para la realización de alguna tarea específica (Apache, 2007). 2.5.2.2 PHP Es un lenguaje de tipo script e interpretado el cual puede incrustarse en los documentos HTML y ejecutar sus instrucciones antes de servir las páginas al cliente, garantizando que este último solo vea el resultado que se produce y no el código en sí. Fue creado originalmente en 1995 por Rasmus Lerdorf, pero como PHP está desarrollado en política de código abierto, a lo largo de su historia ha tenido muchas contribuciones de otros desarrolladores, ampliando más sus funcionalidades con el paso del tiempo y teniendo una gran comunidad de usuarios (Mariño Vázquez, 2008). Dentro de sus principales características tenemos (Mariño Vázquez, 2008): 33 • Multiplataforma: es capaz de ser utilizado en cualquier plataforma con el mismo código base, ya que los scripts son ejecutados de manera independiente del SO. • Fácil de usar: su sintaxis es muy similar a la de lenguaje C, por lo cual los desarrolladores con experiencia en este tipo de lenguajes se sentirán más cómodos y tendrán un aprendizaje mucho más rápido. • Múltiples extensiones: cuenta con muchas extensiones del lenguaje que permiten utilizar nuevas bases de datos, protocolos, enlaces a librerías, entre otras. • Conexión con bases de datos: puede interactuar con muchos motores de bases de datos como MySQL, PostgresSQL, Oracle, SQL Server y muchos otros, siempre que se tenga el Open DataBase Connectivity (ODBC) adecuado. • Licencia de código abierto: el código fuente de PHP es libre de ser descargado e inspeccionado por sus usuarios. • Gran comunidad de apoyo: PHP es de código abierto, por lo tanto, tiene una gran comunidad que apoya su desarrollo en colaboración. Existen multitud de páginas, listas de correo y foros de debate cuyo tema de conversación es el manejo de este lenguaje de programación. En la actualidad, existen un gran número de frameworks que facilitan el uso y desarrollo de sitios web desarrollados con PHP. El seleccionado para el desarrollo del Módulo de Gestión de Equivalencias de Estudio fue Laravel (Akchar, 2018). Laravel es un marco de trabajo con una curva de aprendizaje corta, rápido para el desarrollo de aplicaciones web incorporando el patrón MVC. Fue desarrollado por Taylor Otwell en 2011 utilizando componentes de Symfony y tiene una gran influencia de frameworks como Ruby on Rails, Sinatra y ASP.NET MVC. (Organization, 2018) 34 Este framework trabaja bajo las siguientes filosofías: • Desarrollar código PHP de forma elegante y simple, evitando el “código espagueti”. • Brindar a los desarrolladores el uso de una sintaxis elegante y expresiva, combinando características de otros frameworks como Ruby on Rails, Sinatra y ASP.NET. • Actualizar sus funciones a medida que las versiones de PHP avanzan. • Sencillez a la hora de reutilizar código. En cuanto a la arquitectura de aplicación, Laravel está orientado al patrón MVC de forma flexible, instando a los desarrolladores a mantener de forma separada lo que son las vistas, los controladores y el modelo. A continuación, se describirá como sería la correspondencia de MCV con Laravel: • Modelo: proporciona un sistema de mapeo de datos relacional (ORM) llamado Eloquent basado en active record. Eloquent no es de uso obligatorio, ya que también se dispone de otros recursos que facilitan la manipulación de los datos. • Vista: proporciona un sistema de plantillas llamado Blade que permite extender plantillas creadas y secciones en otras vistas en las cuales también tendremos accesibles las variables y con posibilidad de utilizar código PHP en ellas. • Controlador: proporciona la clase Controller, la cual permite realizar la comunicación del modelo y las vistas de forma rápida a través de la definición de métodos que contendrán la lógica de la aplicación. Adicionalmente, Laravel utiliza un tipo de controlador llamado Middleware que se ejecutan antes y después de realizar peticiones a servidor con el fin de realizar un tipo de acción específica, como por ejemplo alguna validación. Adicional a esto, Laravel proporciona una interfaz de línea de comandos (CLI) llamado Artisan. Artisan está basado en el componente Console de Symfony y nos ofrece un conjunto de comandos que nos pueden ayudar a realizar diferentes tareas durante el 35 desarrollo, como crear una migración, crear un modelo, crear un controlador, crear una vista, entre otras. A continuación, se presenta un resumen con las características más destacables de PHP a modo de resumen, según todo lo descrito hasta ahora (ver Tabla 3): Tabla 3: Resumen PHP Variables/Lenguaje PHP Definición Lenguaje de tipo script e interpretado el cual puede incrustarse en los documentos HTML y ejecutar sus instrucciones antes de servir las páginas al cliente. Objetivo Promover el desarrollo de páginas web dinámicas rápidamente. Orden de código Código intrincado y de difícil lectura. Además, es fácil de crear “código espagueti” si no se utiliza un framework. Ventajas - Multiplataforma - Fácil de usar - Mutiles extensiones - Fácil de instalar - Código abierto -Gran comunidad de apoyo Desventajas - La orientación a objetos está incluida a la fuerza, ya que en un principio no se concibió para esto - No se suelen seguir estándares de buenas prácticas de programación - Si no se utiliza un framework donde se sigan un conjunto de buenas prácticas, el código puede quedar desordenado, difícil de leer por quedar incrustado dentro de HTML 36 2.5.2.3 Sistemas Manejadores de Bases de Datos (SMBD) Un Sistema Manejador de Base de Datos son un conjunto de programas que acceden a una colección de datos interrelacionados, con el fin de proporcionar una vía de almacenamiento y recuperación de la data de una forma práctica (Silberschatz, Korth, & Sudarshan, 2002). Estos sistemas sirven de interfaz entre los usuarios y sus datos, ya que se encargan de toda la lógica referente al almacenamiento y acceso de la data, garantizando que los usuarios solo se preocupen en implementar sus modelos de datos y en que desean consultar en un instante de tiempo determinado. En cuanto a los tipos de SMBD, existen los que se ajustan a las bases de datos relacionales y los que se ajustan a las bases de datos no relacionales (NoSQL). En este apartado, solo se trabajará con los SMBD relacionales. La interacción de los usuarios con los SMDB relacionales se realiza a través de un lenguaje de consulta estructurada (SQL), el cual provee un amplio conjunto de instrucciones para la creación, modificación, manipulación de la data almacenada en una base de datos relacional. Adicionalmente, los SMDB relacionales están diseñados para almacenar grandes volúmenes de información, proporcionando, además, los mecanismos de seguridad necesarios para la información almacenada, en caso de caídas del sistema o intentos de accesos sin autorización. Actualmente, existen un gran número de SMBD, muchos de ellos de software privativo como: Oracle Enterpise Edition, Microsoft SQL Server, IBM Informix, Sybase, entre otros. Por otra parte, también tenemos los de software libre como: FireBird, Oracle Express Edition, MySQL, PostgreSQL, entre otros. Luego de haber analizado previamente las distintas opciones de SMBD (Akchar, 2018), se seleccionó MySQL como el SMBD a utilizar para el desarrollo del Módulo de Gestión de Equivalencia de Estudios. 37 MySQL es un sistema SMBD relacional de código abierto, multiplataforma, multihilo y multiusuario desarrollado por MySQL AB. Fue escrito en lenguaje C y C++ y se destaca por su gran adaptación a los distintos entornos de desarrollo, permitiendo la interacción con lenguajes como PHP, Ruby y Java. Actualmente pertenece a Oracle (Sánchez, 2004). Dentro de sus características principales tenemos: • Soporta un ambiente cliente/servidor. • Bajo costo en requerimientos para la elaboración de bases de datos. • Facilidad de configuración e instalación. • Las funciones SQL están implementadas usando una librería altamente optimizada y deben ser tan rápidas como sea posible. • Cuenta con librerías para lenguajes como C, C++, Eiffel, Java, Perl, PHP, Ruby, entre otros. A continuación, se presenta un resumen sobre las características más destacables de MySQL a modo de resumen, según todo lo descrito sobre este SMDB (ver Tabla 4): Tabla 4: Resumen MySQL Variables/SMBD MySQL Definición Es un sistema SMBD relacional de código abierto, multiplataforma, multihilo y multiusuario desarrollado por MySQL AB, escrito en lenguaje C y C++. Características - Soporta un ambiente cliente/servidor. - Bajo costo en requerimientos - Facilidad de configuración e instalación. - Las funciones SQL están implementadas usando una librería altamente optimizada. - Cuenta con librerías para lenguajes como C, C++, Eiffel, Java, Perl, PHP, Ruby, entre otros. Empresas reconocidas Youtube, Twitter, Facebook, Google. 38 CAPITULO III: MARCO METODOLÓGICO 3.1 Metodologías ágiles vs Metodologías tradicionales Son un marco metodológico de trabajo que se enfoca en dar una mayor importancia a las personas involucradas en el proyecto en vez de a los procesos propios del desarrollo. Estas metodologías se caracterizan por el uso de técnicas que agilizan el desarrollo del software, así como de una mayor flexibilidad para adaptarse a los cambios en los requisitos del proyecto. (Carvajal, 2008). El término “ágil” aplicado a las metodologías de desarrollo del software, nace como resultado de una reunión celebrada en febrero de 2011 en Utah-EEUU, cuyo objetivo era definir cuáles eran los valores y principios que se deben tomar en cuenta en el desarrollo del software para adaptarse de forma efectiva a los cambios que se pudiesen generar a lo largo de un proceso de desarrollo, ya que en las metodologías tradicionales era complicado tomar en cuenta un cambio o imprevisto de último momento (Letelier & Sánchez, 2003). Luego de la celebración de esta reunión, se creó The Agile Alliance (La Alianza Ágil), una organización sin fines de lucro cuyo fin es promover los conceptos relacionados con los desarrollos de software ágiles. Esta organización creo un documento que resume la filosofía ágil, llamado El Manifiesto Ágil en el cual se valora lo siguiente (Amaro & Valverde, 2007): • Al individuo y las interacciones del equipo de desarrollo sobre el proceso y las herramientas. Es mejor crear el equipo y que éste configure su propio entorno de desarrollo en base a sus necesidades. • Desarrollar software que funciona más que conseguir una buena documentación. La regla por seguir es “no producir documentos a menos que sean necesarios de forma inmediata para tomar una decisión importante”. • La colaboración con el cliente más que la negociación de un contrato. Se propone que exista una interacción constante entre el cliente y el equipo de desarrollo. • Responder a los cambios más que seguir estrictamente un plan. La habilidad de responder a los cambios que puedan surgir a lo largo del proyecto (cambios en los 39 requisitos, en la tecnología, en el equipo, entre otros.) determina también el éxito o fracaso del mismo. Estos valores inspiraron doce (12) principios fundamentales del manifiesto. Los principios son (Amaro & Valverde, 2007): i. La prioridad es satisfacer al cliente mediante tempranas y continuas entregas de software que le aporte un valor. ii. Dar la bienvenida a los cambios. Se capturan los cambios para que el cliente tenga una ventaja competitiva. iii. Entregar frecuentemente software que funcione desde un par de semanas a un par de meses, con el menor intervalo de tiempo posible entre entregas. iv. La gente del negocio y los desarrolladores deben trabajar juntos a lo largo del proyecto. v. Construir el proyecto en torno a individuos motivados. Darles el entorno y el apoyo que necesitan y confiar en ellos para conseguir finalizar el trabajo. vi. El diálogo cara a cara es el método más eficiente y efectivo para comunicar información dentro de un equipo de desarrollo. vii. El software que funciona es la medida principal de progreso. viii. Los procesos ágiles promueven un desarrollo sostenible. Los promotores, desarrolladores y usuarios deberían ser capaces de mantener una paz constante. ix. La atención continua a la calidad técnica y al buen diseño mejora la agilidad. x. La simplicidad es esencial. xi. Las mejores arquitecturas, requisitos y diseños surgen de los equipos organizados por sí mismos. xii. En intervalos regulares, el equipo reflexiona respecto a cómo llegar a ser más efectivo, y según esto ajusta su comportamiento. Estos principios son características que diferencian un proceso ágil de uno tradicional. Los dos primeros principios son generales y resumen el espíritu ágil. El resto tienen que ver con el proceso a seguir y con el equipo de desarrollo (Amaro & Valverde, 2007). 40 En consecuencia, vemos que las metodologías ágiles se enfocan más en el capital humano y en la calidad del producto que se pretende entregar que en la documentación y procesos propios del desarrollo del software, siempre teniendo presente la satisfacción y opinión del cliente. Luego de haber analizado previamente distintas metodologías ágiles (Akchar, 2018), se seleccionó el Proceso Unificado Ágil (AUP) como metodología para el desarrollo del Módulo de Gestión de Equivalencia de Estudios adaptándolo a las necesidades de este. 3.2 Proceso Unificado Ágil (AUP) El Proceso Unificado Ágil (AUP), es una forma simplificada del Proceso Unificado Rotacional (RUP) que fue desarrollada por Scott Ambler en septiembre del 2005. Se caracteriza por estar dirigido por casos de uso, centrado en la arquitectura y por ser iterativo e incremental. Se enfoca en un simple desarrollo de software utilizando técnicas y conceptos ágiles, como lo son el desarrollo orientado a pruebas, administración de cambios ágiles y la refactorización de base de datos para mejorar la productividad (Cordero, s.f). 3.2.1 Filosofía de AUP AUP se basa en los siguientes principios: • El personal sabe lo que está haciendo: las personas relacionadas con el proyecto no necesariamente tienen que leer toda la documentación realizada, basta con que se facilite una explicación clara y puntual de lo que se debe hacer y entender. Sin embargo, siempre debe de estar presente la documentación detallada en caso de que algún miembro desee leerla. • Simplicidad: las descripciones deben de ser consistentes y concisas. • Agilidad: se ajusta a los valores y principios la Alianza Ágil. • Centrar en actividades de alto valor: la atención debe centrarse en aquellas actividades cuyo valor para el desarrollo sea esencial. 41 • Herramientas independientes: AUP permite el uso de cualquier uso de herramientas. Sin embargo, se recomienda utilizar herramientas que resuelvan los problemas de forma acertada y sin agregar mayores impedimentos. • Adaptación para satisfacer las necesidades: basándonos en el punto anterior, en AUP, no se considera necesario la compra o practica de cursos especializados para adaptarlos a la metodología. 3.2.2 Técnicas ágiles que incluye AUP Algunas de las técnicas ágiles aplicadas en AUP son las siguientes: • Desarrollo dirigido por pruebas: es un enfoque evolutivo para el desarrollo que combina el uso de test-first, en español prueba primero, donde de escribe una prueba antes de desarrollar el código suficiente para cumplir con esa prueba, y refactorización. • Gestión de cambios ágil: se aceptan los cambios que puedan surgir en los requerimientos del sistema durante el desarrollo. • Refactorización de base de datos: se permite realizar cambios en el esquema de base de datos para mejorar su diseño, manteniendo su semántica de comportamiento y de información. • Modelado ágil: se basa en la creación de modelos ágiles lo suficientemente buenos para impulsar los esfuerzos generales del desarrollo. 3.2.3 Fases de AUP En AUP, se establecen 4 fases bien definidas para lograr los objetivos propuestos: • Iniciación: el objetivo de esta fase es generar una comprensión común entre el cliente y el equipo de desarrollo en cuanto al alcance de nuevo sistema. • Elaboración: el objetivo de esta fase es que el equipo de desarrollo se empape de los requisitos del sistema y analizar si son viables con la arquitectura seleccionada. • Construcción: el sistema es desarrollado y probado por completo en el ambiente de desarrollo. 42 • Transición: El objetivo es realizar pruebas, pulir los últimos detalles del producto para luego desplegar el sistema en un ambiente de producción sin fallas. Cada fase de AUP se encuentra reflejada en la Figura 18, incluyendo los objetivos y tareas fundamentales de cada una, también los diferentes hitos por los que pasa el proyecto, como lo son: objetivos del ciclo de vida, arquitectura del ciclo de vida, capacidad de operación inicial y lanzamiento del producto. Cada hito señala el final de una fase y el equipo de trabajo debe considerar tener una revisión de hitos. Figura 25: Fases e hitos de AUP. Copyright 2005 Scott W. Ambler. Traducido y adaptado por Viviana Pérez. 43 A continuación, se presenta una tabla a modo de resumen de la metodología AUP según todo lo descrito anteriormente: Tabla 5: Resumen AUP. Variables/Metodología AUP Definición Es una forma simplificada del Proceso Unificado Rotacional (RUP) que fue desarrollada por Scott Ambler en septiembre del 2005. Se caracteriza por estar dirigido por casos de uso, centrado en la arquitectura y por ser iterativo e incremental. Se enfoca en un simple desarrollo de software utilizando técnicas y conceptos ágiles. Filosofía - El personal sabe lo que está haciendo - Simplicidad - Agilidad - Centrar en actividades de alto valor -Herramientas independientes - Adaptación para satisfacer las necesidades Roles - Modelador ágil - Desarrollo - Administrador del proyecto - Involucrado - Administrador de base de datos ágil - Desplegador - Examinador - Equipo de pruebas - Documentador técnico - Administrador de configuración - Especialista del proceso - Especialista en herramientas Fases - Iniciación - Elaboración - Construcción -Transición 44 Artefactos - Sistema - Código fuente - Pruebas de regresión - Script de instalación - Documentación del sistema - Notas de versión - Modelado de requerimientos - Modelo de diseño Tiempos de entrega Versiones de desarrollo cada dos o tres semanas, mientras que las versiones de producción cada seis, nueve o doce meses. 45 CÁPITULO IV: MARCO APLICATIVO En este capítulo se explican los pasos que se siguieron para la implementación del sistema propuesto como solución del presente TEG, haciendo una adaptación de la metodología AUP. Este módulo permite automatizar algunas tareas del proceso de equivalencia de estudios y minimizar los costos relacionados a la generación de planillas de solicitud de equivalencia de estudio y comprobantes de asignaturas equivalentes. También, este sistema busca reducir el factor de error humano en el trámite de documentos de solicitudes de equivalencia de estudios, que son los principales factores de retraso de dicho proceso. Como primer paso para realizar esta implementación, se definieron las fases en las cuales se abarcan todos los requerimientos del proyecto, tomando como referencia lo establecido en la metodología de desarrollo de software AUP, la cual fue seleccionada ya que es una metodología con fases, actividades y artefactos bien definidos en todas las etapas del desarrollo del software. 4.1 Fases del proyecto El proceso de desarrollo se dividió en 4 fases, según lo establecido en la metodología seleccionada. A continuación, se presenta el plan de proyecto divido por fases: 46 Tabla 6: Planificación Fase I – Iniciación Actividades Tipo de actividad Artefactos Días Fecha de inicio Definición de requerimientos funcionales y no funcionales Modelado Descripción de requerimientos funcionales y no funcionales 3 10/01/2019 Análisis de los perfiles de usuario Modelado Descripción de perfiles de usuario del sistema 1 14/01/2019 Modelado de requerimientos funcionales Modelado Modelo de casos de uso 4 15/01/2019 Instalación y preparación del ambiente de desarrollo Modelado Pruebas Descripción de tecnologías instaladas 1 19/01/2019 Tabla 7: Planificación Fase II – Elaboración Actividades Tipo de actividad Artefactos Días Fecha de inicio Pruebas en el ambiente de desarrollo Pruebas - 1 20-01-2019 Definición de guía de estilos Modelado Guía de estilos 1 21/01/2019 Definición de prototipos de interfaces de usuario Modelado Prototipos 2 22/01/2019 Definición del modelo de base de datos Modelado Modelo entidad- relación Base de datos 4 24/01/2019 47 Tabla 8: Planificación Fase III – Construcción Actividades Tipo de actividad Artefactos Días Fecha de inicio Registrar solicitantes en el sistema Implementación Módulo de registro de solicitantes 2 28/01/2019 Iniciar sesión y ¿olvidó su contraseña? Implementación Módulo de inicio de sesión 3 30/01/2019 Registrar, modificar, eliminar, consultar y generar solicitudes de equivalencia Implementación Módulo de solicitudes 5 02/02/2019 Registrar, modificar, eliminar, consultar y generar comprobantes de asignaturas equivalentes Implementación Módulo de comprobantes 6 07/02/2019 Registrar, modificar, eliminar y consultar universidades Implementación Módulo de universidades 3 13/02/2019 Registrar, modificar, eliminar y consultar facultades Implementación Módulo de facultades 3 16/02/2019 Registrar, modificar, eliminar y consultar escuelas Implementación Módulo de escuelas 3 19/02/2019 Registrar, modificar, eliminar y consultar carreras Implementación Módulo de carreras 3 22/02/2019 Registrar, modificar, eliminar y consultar asignaturas Implementación Módulo de asignaturas 3 25/02/2019 Registrar, modificar, eliminar y consultar períodos académicos Implementación Módulo de períodos académicos 3 28/02/2019 Registrar, modificar, eliminar y consultar usuarios Implementación Módulo de usuarios 3 02/03/2019 48 Tabla 9: Planificación Fase IV – Transición Actividades Tipo de actividad Artefactos Días Fecha de inicio Revisión general de la aplicación Pruebas - 6 05/03/2019 Corrección de defectos Implementación Sistema 10 11/03/2019 Ajustes de documentación del sistema Modelado Ajustes de todos los artefactos generados 4 21/03/2019 Validar documentación del sistema Pruebas - 2 25/03/2019 Pruebas de aceptación Pruebas Encuestas y resultados de las pruebas 10 27/03/2019 4.1.1 Fase I: Iniciación En esta fase se realizaron las siguientes actividades: definición de los requerimientos funcionales y no funcionales del sistema, análisis de los perfiles de cada usuario involucrado en el proceso de equivalencia de estudios, modelado de los requerimientos funcionales a través de un modelo de casos de uso y por último la instalación y preparación del ambiente de desarrollo. 4.1.1.1 Requerimientos funcionales • Registrar solicitantes en el sistema. • Iniciar sesión y cambiar de contraseña para usuarios registrados en el sistema. • Registrar, ver, modificar, y eliminar solicitudes de equivalencia. • Consultar solicitudes de equivalencia por número de la solicitud, cédula de identidad del solicitante, fecha de la solicitud, universidad de procedencia de la solicitud o universidad destino de la solicitud. • Generar solicitudes de equivalentes en formato Portable Document Format (PDF) y hojas tamaño carta. 49 • Registrar, ver, modificar o eliminar comprobantes de asignaturas equivalentes. • Consultar comprobantes de asignaturas equivalentes por número de comprobante, número de solicitud, cédula del solicitante, número de Consejo Universitario, universidad de procedencia o universidad de destino. • Generar los comprobantes de asignaturas equivalentes en formato PDF y hojas tamaño carta. • Registrar, ver, modificar o eliminar universidades. • Consultar universidades por procedencia (nacional o extranjera). • Registrar, ver, modificar o eliminar facultades. • Consultar facultades por universidad. • Registrar, ver, modificar o eliminar escuelas. • Consultar escuelas por universidad o facultad. • Registrar, ver, modificar o eliminar carreras. • Consultar carreras por universidad, facultad o escuela. • Registrar, ver, modificar o eliminar asignaturas. • Consultar asignaturas por universidad, facultad, escuela, carrera o código de la asignatura. • Registrar, ver, modificar o eliminar periodos académicos. • Consultar periodos académicos por facultad. • Registrar, ver, modificar o eliminar usuarios para cada uno de los tipos que existe en el sistema (solicitante, personal interno de revalidas y equivalencias, y personal administrativo de revalidas y equivalencias) • Consultar usuarios por cédula, tipo de usuario o facultad. 4.1.1.2 Requerimientos no funcionales • Usabilidad: las interfaces de la aplicación se diseñan con el fin de ser intuitivas y fáciles de usar. • Escalabilidad: el rendimiento de la aplicación no debe verse degradado por el número de usuarios que la utilicen. 50 • Estabilidad: en caso de ocurrir alguna falla en la aplicación, esta debe ser capaz de enviar un mensaje de error adecuado que indique al usuario el motivo de la falla. • Seguridad: por la naturaleza de la aplicación, no se deben permitir accesos no autorizados, por lo cual es necesario implementar mecanismos de seguridad para garantizar que la data sea accedida solo por aquellas personas autorizadas. 4.1.1.3 Perfiles de usuario El sistema cuenta con varios usuarios clasificados según las acciones que pueden realizar: • Solicitante: persona que realizara solicitudes de equivalencia de estudio al Departamento de Reválidas y Equivalencias de una Facultad. • Personal interno de reválidas y equivalencias (PIRE): personal encargado de realizar algunos de los procesos de gestión de universidades/institutos y solicitudes/comprobantes de asignaturas equivalentes. • Personal administrativo de reválidas y equivalencias (PARE): personal encargado de inspeccionar las acciones del PIRE. Es el encargado de realizar el registro de usuarios (Solicitantes o PIRE). Puede realizar todas las acciones del PIRE y algunos procesos adicionales de la gestión de universidades/institutos y solicitudes/comprobantes de asignaturas equivalentes. • Jefe reválidas y equivalencias (JRE): es el Jefe del Departamento de Reválidas y Equivalencias central. Es el encargado de registrar por Facultad al PARE. Puede realizar todas las acciones del sistema. 51 4.1.1.4 Modelo de casos de uso El modelo de casos de uso permite especificar las funcionalidades y el comportamiento del sistema mediante su interacción con usuarios u otros sistemas. Además, con este modelo se llega a un lenguaje estándar que es entendido tanto por los expertos como por otros usuarios y proporciona el análisis del dominio de la aplicación. A continuación, se presenta el modelo de casos de uso del sistema por perfil de usuario y su respectiva especificación: Figura 26: Diagrama de casos de uso – perfil solicitante. 52 Figura 27: Diagrama de casos de uso – perfil PIRE 53 Figura 28: Diagrama de casos de uso – perfil PARE y perfil JRE. 54 Figura 29: Diagrama de casos de uso – perfiles de usuario. 55 Tabla 10: Caso de uso – Registrar usuario. Identificador y nombre UC1: registrar usuario. Actor(es) Solicitante Descripción Permite al actor registrarse como solicitante en el sistema. Flujo básico 1. El actor selecciona la opción “Registro de usuario”. 2. El actor ingresa los datos personales solicitados. 3. El actor presiona el enlace enviado a su correo electrónico para continuar con el proceso. 4. El actor ingresa los datos personales y de contacto solicitados para culminar el proceso de registro. 4. El sistema verifica los datos en la base de datos. 5. El sistema muestra un mensaje indicando que el registro fue exitoso. Flujo alterno 4. El sistema muestra un mensaje indicando que el registro no fue exitoso y los motivos de dicho resultado. Precondición Postcondición Solicitante registrado en el sistema exitosamente. Puntos de extensión Tabla 11: Caso de uso – Iniciar sesión. Identificador y nombre UC2: iniciar sesión. Actor(es) Solicitante, PIRE, PARE y JRE. Descripción Permite al actor iniciar sesión en el sistema. Flujo básico 1. El actor ingresa su cédula y contraseña. 2. El actor selecciona la opción “Iniciar sesión”. 3. El sistema verifica los datos en la base de datos. 4. El sistema muestra la página principal según el tipo de actor en señal de que los datos ingresados fueron correctos. Flujo alterno 4. El sistema muestra un mensaje indicando que los datos ingresados son incorrectos. Precondición - El actor debe de estar registrado en el sistema. Postcondición Sesión iniciada exitosamente. Puntos de extensión 56 Tabla 12: Caso de uso – Recuperar contraseña. Identificador y nombre UC3: recuperar contraseña. Actor(es) Solicitante, PIRE, PARE y JRE. Descripción Permite al actor recuperar su contraseña. Flujo básico 1. El actor selecciona la opción “¿Olvidó su contraseña?”. 2. El actor ingresa el correo con que se registró en el sistema. 3. El actor presiona el enlace enviado a su correo electrónico para continuar con el proceso. 4. El actor ingresa su nueva contraseña y su confirmación. 5. El sistema verifica los datos en la base de datos. 6. El sistema muestra un mensaje indicando que el cambio de contraseña fue exitoso. Flujo alterno 6. El sistema muestra un mensaje indicando que los datos ingresados son incorrectos. Precondición - El actor debe estar registrado en el sistema. Postcondición Contraseña recuperada exitosamente. Puntos de extensión Tabla 13: Caso de uso – Cambiar contraseña. Identificador y nombre UC4: cambiar contraseña. Actor(es) Solicitante, PIRE, PARE y JRE. Descripción Permite al actor cambiar su contraseña de usuario. Flujo básico 1. El actor selecciona la opción “Mi cuenta”. 2. El actor selecciona la opción “Cambiar contraseña”. 3. El actor ingresa la antigua contraseña, nueva contraseña y confirmación. 4. El sistema verifica los datos en la base de datos. 5. El sistema muestra un mensaje indicando que el cambio de contraseña fue exitoso. Flujo alterno 5. El sistema muestra un mensaje indicando que los datos ingresados son incorrectos. Precondición - El actor debe haber iniciado sesión. Postcondición Contraseña cambiada exitosamente. Puntos de extensión 57 Tabla 14: Caso de uso – Modificar datos personales. Identificador y nombre UC5: modificar datos personales. Actor(es) Solicitante, PIRE, PARE y JRE. Descripción Permite al actor editar sus datos personales. Flujo básico 1. El actor selecciona la opción “Mi cuenta”. 2. El actor selecciona la opción “Actualizar información de cuenta”. 3. El actor ingresa los datos a editar. 4. El sistema verifica los datos ingresados. 5. El sistema muestra un mensaje indicando que los datos fueron editados exitosamente. Flujo alterno 5. El sistema muestra un mensaje indicando que los datos ingresados son incorrectos. Precondición - El actor debe haber iniciado sesión. Postcondición Datos personales editados exitosamente. Puntos de extensión Tabla 15: Caso de uso – Registrar solicitud. Identificador y nombre UC6: registrar solicitud. Actor(es) Solicitante Descripción Permite al actor registrar una solicitud propia. Flujo básico 1. El actor selecciona la opción “Mis Solicitudes”. 2. El actor selecciona la opción “Añadir solicitud”. 3. El actor ingresa los datos de la solicitud (carrera procedencia, carrera destino y opcionalmente las asignaturas a las cuales se desea hacer equivalencia). 4. El sistema verifica los datos en la base de datos. 5. El sistema muestra un mensaje indicando que la solicitud fue registrada exitosamente. Flujo alterno 5. El sistema muestra un mensaje de error indicando que la solicitud no fue registrada y el motivo del resultado. Precondición - El actor debe de haber iniciado sesión. Postcondición Solicitud registrada exitosamente. Puntos de extensión 58 Tabla 16: Caso de uso – Consultar mis solicitudes. Identificador y nombre UC7: consultar mis solicitudes. Actor(es) Solicitante Descripción Permite al actor consultar las solicitudes realizadas por un solicitante. Flujo básico 1. El actor selecciona la opción “Mis Solicitudes”. 2. El sistema verifica los datos en la base de datos. 3. El sistema muestra las solicitudes registradas en el sistema. Flujo alterno Flujo alterno: aplicar filtros a la consulta de solicitudes 2. El actor ingresa los filtros de las solicitudes que desea consultar. 3. El sistema verifica los datos en la base de datos. 4 El sistema muestra las solicitudes registradas que correspondan con los filtros aplicados. Flujo alterno: no existen solicitudes registradas 2. El sistema muestra un mensaje indicando que no hay resultados para la consulta. Precondición - El actor debe haber iniciado sesión. Postcondición Consulta de solicitudes realizada exitosamente. Puntos de extensión 59 Tabla 17: Caso de uso – Consultar solicitudes. Identificador y nombre UC8: consultar solicitudes. Actor(es) PIRE, PARE y JRE. Descripción Permite al actor consultar las solicitudes registradas en el sistema. Flujo básico 1. El actor selecciona la opción “Solicitudes”. 2. El sistema verifica los datos en la base de datos. 3. El sistema muestra las solicitudes registradas en el sistema. Flujo alterno Flujo alterno: aplicar filtros a la consulta de solicitudes 2. El usuario ingresa los filtros de las solicitudes que desea consultar. 3. El sistema verifica los datos en la base de datos. 4. El sistema muestra las solicitudes registradas que correspondan con los filtros aplicados. Flujo alterno: no existen solicitudes registradas 2. El sistema muestra un mensaje indicando que no hay resultados para la consulta. Precondición - El actor debe haber iniciado sesión. Postcondición Consulta de solicitud realizada exitosamente. Puntos de extensión Extends: • UC8.1: ver vista previa solicitud • UC8.2: editar solicitud • UC8.3: descargar solicitud • UC8.4: eliminar solicitud • UC8.5: añadir solicitud • UC:8.6: añadir comprobante 60 Tabla 18: Caso de uso – Ver vista previa solicitud. Identificador y nombre UC8.1: ver vista previa solicitud. Actor(es) PIRE, PARE y JRE. Descripción Permite al actor ver el detalle de una solicitud. Flujo básico 1. El actor selecciona la opción “Solicitudes”. 2. El actor selecciona la opción “Vista previa” de alguna de las solicitudes disponibles. 3. El actor selecciona una solicitud. 4. El sistema verifica los datos en la base de datos. 5. El sistema muestra el detalle de la solicitud seleccionada. Flujo alterno Precondición - El actor debe haber iniciado sesión. Postcondición Consulta de solicitud realizada exitosamente. Puntos de extensión Extends: • UC8.2: editar solicitud • UC8.3: descargar solicitud UC:8.6: añadir comprobante Tabla 19: Caso de uso – Editar solicitud. Identificador y nombre UC8.2: editar solicitud. Actor(es) PIRE, PARE y JRE. Descripción Permite al actor editar los datos de una solicitud. Flujo básico 1. El actor selecciona la opción “Solicitudes”. 2. El actor selecciona la opción “Editar” de alguna de las solicitudes disponibles. 3. El actor ingresa los datos que desea editar de la solicitud (carrea de procedencia, carrera destino, posibles asignaturas equivalentes y documentos entregados por el solicitante). 4. El sistema verifica los datos en la base de datos. 5. El sistema muestra un mensaje indicando que la solicitud fue editada con éxito. Flujo alterno 5. El sistema muestra un mensaje indicando que la solicitud no se pudo editar y los motivos del resultado. Precondición - El actor debe haber iniciado sesión. Postcondición Solicitud editada exitosamente. Puntos de extensión 61 Tabla 20: Caso de uso – Descargar solicitud. Identificador y nombre UC8.3: descargar solicitud. Actor(es) PIRE, PARE y JRE. Descripción Permite al actor descargar una solicitud. Flujo básico 1. El actor selecciona la opción “Solicitudes”. 2. El actor selecciona la opción “Descargar” de alguna de las solicitudes disponibles. 3. El sistema verifica los datos en la base de datos. 4. El sistema descarga la solicitud en formato PDF. Flujo alterno 4. El sistema muestra un mensaje indicando que la solicitud se pudo descargar y los motivos del resultado. Precondición - El actor debe haber iniciado sesión. Postcondición Solicitud descargada exitosamente. Puntos de extensión Tabla 21: Caso de uso – Eliminar solicitud. Identificador y nombre UC8.4: eliminar solicitud. Actor(es) JRE. Descripción Permite al actor eliminar una solicitud. Flujo básico 1. El actor selecciona la opción “Solicitudes”. 2. El actor selecciona la opción “Eliminar” de alguna de las solicitudes disponibles. 3. El sistema verifica los datos en la base de datos. 4. El sistema muestra un mensaje indicando que la solicitud fue eliminada con éxito. Flujo alterno 4. El sistema muestra un mensaje indicando que la solicitud se pudo eliminar y los motivos del resultado. Precondición - El actor debe haber iniciado sesión. Postcondición Solicitud eliminada exitosamente. Puntos de extensión 62 Tabla 22: Caso de uso – Añadir solicitud. Identificador y nombre UC8.5: añadir solicitud. Actor(es) PIRE, PARE y JRE Descripción Permite al actor registrar una solicitud. Flujo básico 1. El actor selecciona la opción “Solicitudes”. 2. El actor selecciona la opción “Añadir Solicitud”. 3. El actor ingresa los datos de la solicitud (cédula del solicitante, carrera procedencia, carrera destino y opcionalmente las asignaturas a las cuales se desea hacer equivalencia). 4. El sistema verifica los datos en la base de datos. 5. El sistema muestra un mensaje indicando que la solicitud fue registrada exitosamente. Flujo alterno 5. El sistema muestra un mensaje de error indicando que la solicitud no fue registrada y el motivo del resultado. Precondición - El actor debe de haber iniciado sesión. Postcondición Solicitud registrada exitosamente. Puntos de extensión Tabla 23: Caso de uso – Añadir comprobante. Identificador y nombre UC8.6: añadir comprobante. Actor(es) PIRE, PARE y JRE Descripción Permite al actor registrar un comprobante para una solicitud. Flujo básico 1. El actor selecciona la opción “Solicitudes”. 2. El actor selecciona la opción “Añadir comprobante” de alguna de las solicitudes registradas. 3. El sistema verifica los datos en la base de datos. 5. El sistema muestra un mensaje indicando que el comprobante fue registrado exitosamente. Flujo alterno 5. El sistema muestra un mensaje de error indicando que el comprobante no fue registrado y el motivo del resultado. Precondición - El actor debe de haber iniciado sesión. Postcondición Comprobante registrado exitosamente. Puntos de extensión 63 Tabla 24: Caso de uso – Consultar comprobante. Identificador y nombre UC9: consultar comprobantes. Actor(es) PIRE, PARE y JRE. Descripción Permite al actor consultar los comprobantes registrados en el sistema. Flujo básico 1. El actor selecciona la opción “Comprobantes”. 2. El sistema verifica los datos en la base de datos. 3. El sistema muestra los comprobantes registrados en el sistema. Flujo alterno Flujo alterno: aplicar filtros a la consulta de comprobantes 2. El actor ingresa los filtros de los comprobantes que desea consultar. 3. El sistema verifica los datos en la base de datos. 4. El sistema muestra los comprobantes registrados que correspondan con los filtros aplicados. Flujo alterno: no existen comprobantes registrados 2. El sistema muestra un mensaje indicando que no hay resultados para la consulta. Precondición - El actor debe haber iniciado sesión. Postcondición Consulta de comprobantes realizada exitosamente. Puntos de extensión Extends: • UC9.1: ver vista previa comprobantes • UC9.2: editar comprobante • UC9.3: descargar comprobante • UC9.4: eliminar comprobante 64 Tabla 25: Caso de uso – Ver vista previa comprobante. Identificador y nombre UC9.1: ver vista previa comprobante. Actor(es) PIRE, PARE y JRE. Descripción Permite al actor ver el detalle de un comprobante. Flujo básico 1. El actor selecciona la opción “Comprobantes”. 2. El actor selecciona la opción “Vista previa” de alguna de los comprobantes disponibles. 3. El sistema verifica los datos en la base de datos. 4. El sistema muestra el detalle del comprobante seleccionado. Flujo alterno Precondición - El actor debe haber iniciado sesión. Postcondición Consulta de comprobante realizada exitosamente. Puntos de extensión Extends: • UC9.2: editar comprobante • UC9.3: descargar comprobante 65 Tabla 26: Caso de uso – Editar comprobante. Identificador y nombre UC9.2: editar comprobante. Actor(es) PIRE, PARE y JRE. Descripción Permite al actor editar los datos de un comprobante. Flujo básico 1. El actor selecciona la opción “Comprobantes”. 2. El actor selecciona la opción “Editar” de alguno de los comprobantes disponibles. 3. El usuario ingresa los datos que desea editar del comprobante (observaciones, fecha de Subcomisión de Equivalencias, fecha de Comisión de equivalencias, fecha de Consejo de Facultad, Fecha de Consejo Universitario, número de Consejo Universitario, fecha del número de Consejo Universitario y las asignaturas equivalentes aprobadas para la solicitud). 4. El sistema verifica los datos en la base de datos. 5. El sistema muestra un mensaje indicando que el comprobante fue editado con éxito. Flujo alterno 5. El sistema muestra un mensaje indicando que el comprobante no se pudo editar y los motivos del resultado. Precondición - El actor debe haber iniciado sesión. Postcondición Comprobante editado exitosamente. Puntos de extensión Tabla 27: Caso de uso – Descargar comprobante. Identificador y nombre UC9.3: descargar comprobante. Actor(es) PIRE, PARE y JRE. Descripción Permite al actor descargar un comprobante. Flujo básico 1. El actor selecciona la opción “Comprobantes”. 2. El actor selecciona la opción “descargar” de alguno de los comprobantes disponibles. 3. El sistema verifica los datos en la base de datos. 4. El sistema descarga el comprobante en formato PDF. Flujo alterno 4. El sistema muestra un mensaje indicando que el comprobante no se pudo descargar y los motivos del resultado. Precondición - El actor debe haber iniciado sesión. Postcondición Comprobante descargado exitosamente. Puntos de extensión 66 Tabla 28: Caso de uso – Eliminar comprobante. Identificador y nombre UC9.4: eliminar comprobante. Actor(es) JRE. Descripción Permite al actor eliminar un comprobante. Flujo básico 1. El actor selecciona la opción “Comprobantes”. 2. El actor selecciona la opción “eliminar” de alguno de los comprobantes disponibles. 3. El sistema verifica los datos en la base de datos. 4. El sistema muestra un mensaje indicando que el comprobante fue eliminado con éxito. Flujo alterno 4. El sistema muestra un mensaje indicando que el comprobante no se pudo eliminar y los motivos del resultado. Precondición - El actor debe haber iniciado sesión. Postcondición Comprobante eliminado exitosamente. Puntos de extensión 67 Tabla 29: Caso de uso – Consultar universidades. Identificador y nombre UC10: consultar universidades. Actor(es) PIRE, PARE y JRE. Descripción Permite al actor consultar las universidades registradas en el sistema. Flujo básico 1. El actor selecciona la opción “Universidades”. 2. El sistema verifica los datos en la base de datos. 3. El sistema muestra las universidades registradas en el sistema. Flujo alterno Flujo alterno: aplicar filtros a la consulta de universidades 2. El actor ingresa los filtros de las universidades que desea consultar. 3. El sistema verifica los datos en la base de datos. 4. El sistema muestra las universidades registradas que correspondan con los filtros aplicados. Flujo alterno: no existen universidades registradas 2. El sistema muestra un mensaje indicando que no hay resultados para la consulta. Precondición - El actor debe haber iniciado sesión. Postcondición Consulta de universidades realizada exitosamente. Puntos de extensión Extends: • UC10.1: ver vista previa universidad • UC10.2: editar universidad • UC10.3: eliminar universidad • UC10.4: añadir universidad • UC10.5: añadir facultad 68 Tabla 30: Caso de uso – Ver vista previa universidades. Identificador y nombre UC10.1: ver vista previa universidad. Actor(es) PIRE, PARE y JRE. Descripción Permite al actor ver el detalle de una universidad. Flujo básico 1. El actor selecciona la opción “Universidades”. 2. El actor selecciona la opción “Vista previa” de alguna de las universidades disponibles. 3. El actor selecciona una universidad. 4. El sistema verifica los datos en la base de datos. 5. El sistema muestra el detalle de la universidad seleccionada. Flujo alterno Precondición - El actor debe haber iniciado sesión. Postcondición Consulta de universidades realizada exitosamente. Puntos de extensión Extends: • UC10.2: editar universidad • UC10.5: añadir facultad • UC10.6: eliminar facultad • UC10.7: editar facultad • UC10.8: ver vista previa facultad 69 Tabla 31: Caso de uso – Editar universidades. Identificador y nombre UC10.2: editar universidad. Actor(es) PIRE, PARE y JRE. Descripción Permite al actor editar los datos de una universidad. Flujo básico 1. El actor selecciona la opción “Universidades”. 2. El actor selecciona la opción “Editar” de alguna de las universidades disponibles. 3. El usuario ingresa los datos que desea editar de la universidad. 4. El sistema verifica los datos en la base de datos. 5. El sistema muestra un mensaje indicando que la universidad fue editada con éxito. Flujo alterno 5. El sistema muestra un mensaje indicando que la universidad no se pudo editar y los motivos del resultado. Precondición - El actor debe haber iniciado sesión. Postcondición Universidad editada exitosamente. Puntos de extensión Tabla 32: Caso de uso – Eliminar universidad. Identificador y nombre UC10.3: eliminar universidad. Actor(es) JRE. Descripción Permite al actor eliminar una universidad. Flujo básico 1. El actor selecciona la opción “Universidades”. 1. El actor selecciona la opción “eliminar” de alguna de las universidades disponibles. 3. El sistema verifica los datos en la base de datos. 4. El sistema muestra un mensaje indicando que la universidad fue eliminada con éxito. Flujo alterno 4. El sistema muestra un mensaje indicando que la universidad no se pudo eliminar y los motivos del resultado. Precondición - El actor debe haber iniciado sesión. Postcondición Universidad eliminada exitosamente. Puntos de extensión 70 Tabla 33: Caso de uso – Añadir universidad. Identificador y nombre UC10.4: añadir universidad. Actor(es) PIRE, PARE y JRE Descripción Permite al actor registrar una universidad. Flujo básico 1. El actor selecciona la opción “Universidades”. 2. El actor selecciona la opción “Añadir Universidad”. 3. El actor ingresa los datos de la universidad. 4. El sistema verifica los datos en la base de datos. 5. El sistema muestra un mensaje indicando que la universidad fue registrada exitosamente. Flujo alterno 5. El sistema muestra un mensaje de error indicando que la universidad no fue registrada y el motivo del resultado. Precondición - El actor debe de haber iniciado sesión. Postcondición Universidad registrada exitosamente. Puntos de extensión Tabla 34: Caso de uso – Añadir facultad Identificador y nombre UC10.5: añadir facultad. Actor(es) PIRE, PARE y JRE Descripción Permite al actor registrar una facultad. Flujo básico 1. El actor selecciona la opción “Facultades”. 2. El actor selecciona la opción “Añadir Facultad”. 3. El actor ingresa los datos de la facultad. 4. El sistema verifica los datos en la base de datos. 5. El sistema muestra un mensaje indicando que la facultad fue registrada exitosamente. Flujo alterno 5. El sistema muestra un mensaje de error indicando que la facultad no fue registrada y el motivo del resultado. Precondición - El actor debe de haber iniciado sesión. Postcondición Facultad registrada exitosamente. Puntos de extensión 71 Tabla 35: Caso de uso – Eliminar facultad Identificador y nombre UC10.6: eliminar facultad. Actor(es) JRE. Descripción Permite al actor eliminar una facultad. Flujo básico 1. El actor selecciona la opción “Facultades”. 2. El actor selecciona la opción “eliminar” de alguna de las facultades disponibles. 3. El sistema verifica los datos en la base de datos. 4. El sistema muestra un mensaje indicando que la facultad fue eliminada con éxito. Flujo alterno 4. El sistema muestra un mensaje indicando que la facultad no se pudo eliminar y los motivos del resultado. Precondición - El actor debe haber iniciado sesión. Postcondición Facultad eliminada exitosamente. Puntos de extensión Tabla 36: Caso de uso – Editar facultad Identificador y nombre UC10.7: editar facultad. Actor(es) PIRE, PARE y JRE. Descripción Permite al actor editar los datos de una facultad. Flujo básico 1. El actor selecciona la opción “Facultades”. 2. El actor selecciona la opción “Editar” de alguna de las facultades disponibles. 3. El usuario ingresa los datos que desea editar de la facultad. 4. El sistema verifica los datos en la base de datos. 5. El sistema muestra un mensaje indicando que la facultad fue editada con éxito. Flujo alterno 5. El sistema muestra un mensaje indicando que la facultad no se pudo editar y los motivos del resultado. Precondición - El actor debe haber iniciado sesión. Postcondición Facultad editada exitosamente. Puntos de extensión 72 Tabla 37: Caso de uso – Ver vista previa facultad Identificador y nombre UC10.8: ver vista previa facultad. Actor(es) PIRE, PARE y JRE. Descripción Permite al actor ver el detalle de una facultad. Flujo básico 1. El actor selecciona la opción “Facultades”. 2. El actor selecciona la opción “Vista previa” de alguna de las facultades disponibles. 3. El sistema verifica los datos en la base de datos. 4. El sistema muestra el detalle de la facultad seleccionada. Flujo alterno Precondición - El actor debe haber iniciado sesión. Postcondición Consulta de facultades realizada exitosamente. Puntos de extensión 73 Tabla 38: Caso de uso – Consultar facultades. Identificador y nombre UC11: consultar facultades. Actor(es) PIRE, PARE y JRE. Descripción Permite al actor consultar las facultades registradas en el sistema. Flujo básico 1. El actor selecciona la opción “Facultades”. 2. El sistema verifica los datos en la base de datos. 3. El sistema muestra las facultades registradas en el sistema. Flujo alterno Flujo alterno: aplicar filtros a la consulta de facultades 2. El actor ingresa los filtros de las facultades que desea consultar. 3. El sistema verifica los datos en la base de datos. 4. El sistema muestra las facultades registradas que correspondan con los filtros aplicados. Flujo alterno: no existen facultades registradas 2. El sistema muestra un mensaje indicando que no hay resultados para la consulta. Precondición - El actor debe haber iniciado sesión. Postcondición Consulta de facultades realizada exitosamente. Puntos de extensión Extends: • UC10.5: añadir facultad • UC10.6: eliminar facultad • UC10.7: editar facultad • UC10.8: ver vista previa facultad • UC11.1: añadir escuela 74 Tabla 39: Caso de uso – Añadir escuela. Identificador y nombre UC11.1: añadir escuela. Actor(es) PIRE, PARE y JRE Descripción Permite al actor registrar una escuela. Flujo básico 1. El actor selecciona la opción “Escuelas”. 2. El actor selecciona la opción “Añadir Escuela”. 3. El actor ingresa los datos de la escuela. 4. El sistema verifica los datos en la base de datos. 5. El sistema muestra un mensaje indicando que la escuela fue registrada exitosamente. Flujo alterno 5. El sistema muestra un mensaje de error indicando que la escuela no fue registrada y el motivo del resultado. Precondición - El actor debe de haber iniciado sesión. Postcondición Escuela registrada exitosamente. Puntos de extensión Tabla 40: Caso de uso – Eliminar escuela. Identificador y nombre UC11.2: eliminar escuela. Actor(es) JRE. Descripción Permite al actor eliminar una escuela. Flujo básico 1. El actor selecciona la opción “Escuelas”. 2. El actor selecciona la opción “eliminar” de alguna de las escuelas disponibles. 3. El sistema verifica los datos en la base de datos. 4. El sistema muestra un mensaje indicando que la escuela fue eliminada con éxito. Flujo alterno 4. El sistema muestra un mensaje indicando que la escuela no se pudo eliminar y los motivos del resultado. Precondición - El actor debe haber iniciado sesión. Postcondición Escuela eliminada exitosamente. Puntos de extensión 75 Tabla 41: Caso de uso – Editar escuela. Identificador y nombre UC11.3: editar escuela. Actor(es) PIRE, PARE y JRE. Descripción Permite al actor editar los datos de una escuela. Flujo básico 1. El actor selecciona la opción “Escuelas”. 2. El actor selecciona la opción “Editar” de alguna de las escuelas disponibles. 3. El usuario ingresa los datos que desea editar de la escuela. 4. El sistema verifica los datos en la base de datos. 5. El sistema muestra un mensaje indicando que la escuela fue editada con éxito. Flujo alterno 5. El sistema muestra un mensaje indicando que la escuela no se pudo editar y los motivos del resultado. Precondición - El actor debe haber iniciado sesión. Postcondición Escuela editada exitosamente. Puntos de extensión 76 Tabla 42: Caso de uso – Ver vista previa escuela Identificador y nombre UC11.4: ver vista previa escuela. Actor(es) PIRE, PARE y JRE. Descripción Permite al actor ver el detalle de una escuela. Flujo básico 1. El actor selecciona la opción “Escuelas”. 2. El actor selecciona la opción “Vista previa” de alguna de las escuelas disponibles. 3. El sistema verifica los datos en la base de datos. 4. El sistema muestra el detalle de la escuela seleccionada. Flujo alterno Precondición - El actor debe haber iniciado sesión. Postcondición Consulta de escuelas realizada exitosamente. Puntos de extensión Extends: • UC11.3: editar escuela • UC12.1: añadir carrera • UC12.2: eliminar carrera • UC12.3: editar carrera • UC12.4: ver vista previa carrera 77 Tabla 43: Caso de uso – Consultar escuelas. Identificador y nombre UC12: consultar escuelas. Actor(es) PIRE, PARE y JRE. Descripción Permite al actor consultar las escuelas registradas en el sistema. Flujo básico 1. El actor selecciona la opción “Escuelas”. 2. El sistema verifica los datos en la base de datos. 3. El sistema muestra las escuelas registradas en el sistema. Flujo alterno Flujo alterno: aplicar filtros a la consulta de escuelas 2. El actor ingresa los filtros de las escuelas que desea consultar. 3. El sistema verifica los datos en la base de datos. 4. El sistema muestra las escuelas registradas que correspondan con los filtros aplicados. Flujo alterno: no existen escuelas registradas 2. El sistema muestra un mensaje indicando que no hay resultados para la consulta. Precondición - El actor debe haber iniciado sesión. Postcondición Consulta de escuelas realizada exitosamente. Puntos de extensión Extends: • UC11.1: añadir escuela • UC11.2: eliminar escuela • UC11.3: editar escuela • UC11.4: ver vista previa escuela • UC12.1: añadir carrera 78 Tabla 44: Caso de uso – Añadir carrera. Identificador y nombre UC12.1: añadir carrera. Actor(es) PIRE, PARE y JRE Descripción Permite al actor registrar una carrera. Flujo básico 1. El actor selecciona la opción “Carreras”. 2. El actor selecciona la opción “Añadir Carrera”. 3. El actor ingresa los datos de la carrera. 4. El sistema verifica los datos en la base de datos. 5. El sistema muestra un mensaje indicando que la carrera fue registrada exitosamente. Flujo alterno 5. El sistema muestra un mensaje de error indicando que la carrera no fue registrada y el motivo del resultado. Precondición - El actor debe de haber iniciado sesión. Postcondición Carrera registrada exitosamente. Puntos de extensión Tabla 45: Caso de uso – Eliminar carrera. Identificador y nombre UC12.2: eliminar carrera. Actor(es) JRE. Descripción Permite al actor eliminar una carrera. Flujo básico 1. El actor selecciona la opción “Carreras”. 2. El actor selecciona la opción “eliminar” de alguna de las carreras disponibles. 3. El sistema verifica los datos en la base de datos. 4. El sistema muestra un mensaje indicando que la carrera fue eliminada con éxito. Flujo alterno 4. El sistema muestra un mensaje indicando que la carrera no se pudo eliminar y los motivos del resultado. Precondición - El actor debe haber iniciado sesión. Postcondición Carrera eliminada exitosamente. Puntos de extensión 79 Tabla 46: Caso de uso – Editar carrera Identificador y nombre UC12.3: editar carrera. Actor(es) PIRE, PARE y JRE. Descripción Permite al actor editar los datos de una carrera. Flujo básico 1. El actor selecciona la opción “Carreras”. 2. El actor selecciona la opción “Editar” de alguna de las carreras disponibles. 3. El usuario ingresa los datos que desea editar de la carrera. 4. El sistema verifica los datos en la base de datos. 5. El sistema muestra un mensaje indicando que la carrera fue editada con éxito. Flujo alterno 5. El sistema muestra un mensaje indicando que la carrera no se pudo editar y los motivos del resultado. Precondición - El actor debe haber iniciado sesión. Postcondición Carrera editada exitosamente. Puntos de extensión Tabla 47: Caso de uso – Ver vista previa carrera. Identificador y nombre UC12.4: ver vista previa carrera. Actor(es) PIRE, PARE y JRE. Descripción Permite al actor ver el detalle de una carrera. Flujo básico 1. El actor selecciona la opción “Carreras”. 2. El actor selecciona la opción “Vista previa” de alguna de las carreras disponibles. 3. El sistema verifica los datos en la base de datos. 4. El sistema muestra el detalle de la carrera seleccionada. Flujo alterno Precondición - El actor debe haber iniciado sesión. Postcondición Consulta de carreras realizada exitosamente. Puntos de extensión Extends: • UC12.3: editar carrera • UC13.1: añadir asignatura • UC13.2: ver vista previa asignatura • UC13.3: editar asignatura • UC13.4: eliminar asignatura 80 Tabla 48: Caso de uso – Consultar carreras. Identificador y nombre UC13: consultar carreras. Actor(es) PIRE, PARE y JRE. Descripción Permite al actor consultar las carreras registradas en el sistema. Flujo básico 1. El actor selecciona la opción “Carreras”. 2. El sistema verifica los datos en la base de datos. 3. El sistema muestra las carreras registradas en el sistema. Flujo alterno Flujo alterno: aplicar filtros a la consulta de carreras 2. El actor ingresa los filtros de las carreras que desea consultar. 3. El sistema verifica los datos en la base de datos. 4. El sistema muestra las carreras registradas que correspondan con los filtros aplicados. Flujo alterno: no existen carreras registradas 2. El sistema muestra un mensaje indicando que no hay resultados para la consulta. Precondición - El actor debe haber iniciado sesión. Postcondición Consulta de carreras realizada exitosamente. Puntos de extensión Extends: • UC12.1: añadir carrera • UC12.2: eliminar carrera • UC12.3: editar carrera • UC12.4: ver vista previa carrera • UC13.1: añadir asignatura 81 Tabla 49: Caso de uso – Añadir asignatura. Identificador y nombre UC13.1: añadir asignatura. Actor(es) PIRE, PARE y JRE Descripción Permite al actor registrar una asignatura. Flujo básico 1. El actor selecciona la opción “Asignaturas”. 2. El actor selecciona la opción “Añadir Asignatura”. 3. El actor ingresa los datos de la asignatura. 4. El sistema verifica los datos en la base de datos. 5. El sistema muestra un mensaje indicando que la asignatura fue registrada exitosamente. Flujo alterno 5. El sistema muestra un mensaje de error indicando que la asignatura no fue registrada y el motivo del resultado. Precondición - El actor debe de haber iniciado sesión. Postcondición Asignatura registrada exitosamente. Puntos de extensión Tabla 50: Caso de uso – Ver vista previa asignatura. Identificador y nombre UC13.2: ver vista previa asignatura. Actor(es) PIRE, PARE y JRE. Descripción Permite al actor ver el detalle de una asignatura. Flujo básico 1. El actor selecciona la opción “Asignaturas”. 2. El actor selecciona la opción “Vista previa” de alguna de las asignaturas disponibles. 3. El sistema verifica los datos en la base de datos. 4. El sistema muestra el detalle de la asignatura seleccionada. Flujo alterno Precondición - El actor debe haber iniciado sesión. Postcondición Consulta de asignaturas realizada exitosamente. Puntos de extensión Extends: • UC13.3: editar asignatura 82 Tabla 51: Caso de uso – Editar asignatura Identificador y nombre UC13.3: editar asignatura. Actor(es) JRE. Descripción Permite al actor editar los datos de una asignatura. Flujo básico 1. El actor selecciona la opción “Asignaturas”. 2. El actor selecciona la opción “Editar” de alguna de las asignaturas disponibles. 3. El usuario ingresa los datos que desea editar de la asignatura. 4. El sistema verifica los datos en la base de datos. 5. El sistema muestra un mensaje indicando que la asignatura fue editada con éxito. Flujo alterno 5. El sistema muestra un mensaje indicando que la asignatura no se pudo editar y los motivos del resultado. Precondición - El actor debe haber iniciado sesión. Postcondición Asignatura editada exitosamente. Puntos de extensión Tabla 52: Caso de uso – Eliminar asignatura Identificador y nombre UC13.4: eliminar asignatura. Actor(es) JRE. Descripción Permite al actor eliminar una asignatura. Flujo básico 1. El actor selecciona la opción “Asignaturas”. 2. El actor selecciona la opción “eliminar” de alguna de las asignaturas disponibles. 3. El sistema verifica los datos en la base de datos. 4. El sistema muestra un mensaje indicando que la asignatura fue eliminada con éxito. Flujo alterno 4. El sistema muestra un mensaje indicando que la asignatura no se pudo eliminar y los motivos del resultado. Precondición - El actor debe haber iniciado sesión. Postcondición Asignatura eliminada exitosamente. Puntos de extensión 83 Tabla 53: Caso de uso – Consultar asignaturas. Identificador y nombre UC14: consultar asignaturas. Actor(es) PIRE, PARE y JRE. Descripción Permite al actor consultar las asignaturas registradas en el sistema. Flujo básico 1. El actor selecciona la opción “Asignaturas”. 2. El sistema verifica los datos en la base de datos. 3. El sistema muestra las asignaturas registradas en el sistema. Flujo alterno Flujo alterno: aplicar filtros a la consulta de asignaturas 2. El usuario ingresa los filtros de las asignaturas que desea consultar. 3. El sistema verifica los datos en la base de datos. 4. El sistema muestra las asignaturas registradas que correspondan con los filtros aplicados. Flujo alterno: no existen asignaturas registradas 2. El sistema muestra un mensaje indicando que no hay resultados para la consulta. Precondición - El actor debe haber iniciado sesión. Postcondición Consulta de asignaturas realizada exitosamente. Puntos de extensión Extends: • UC13.1: añadir asignatura • UC13.2: ver vista previa asignatura • UC13.3: editar asignatura • UC13.4: eliminar asignatura 84 Tabla 54: Caso de uso – Consultar usuarios. Identificador y nombre UC15: consultar usuarios. Actor(es) PIRE, PARE y JRE. Descripción Permite al actor consultar los usuarios registrados en el sistema. Flujo básico 1. El actor selecciona la opción “usuarios”. 2. El sistema verifica los datos en la base de datos. 3. El sistema muestra los usuarios registrados en el sistema. Flujo alterno Flujo alterno: aplicar filtros a la consulta de usuarios 2. El actor ingresa los filtros de los usuarios que desea consultar. 3. El sistema verifica los datos en la base de datos. 4. El sistema muestra los usuarios registrados que correspondan con los filtros aplicados. Flujo alterno: no existen usuarios registrados 2. El sistema muestra un mensaje indicando que no hay resultados para la consulta. Precondición - El actor debe haber iniciado sesión. Postcondición Consulta de usuarios realizada exitosamente. Puntos de extensión Extends: • UC15.1: ver vista previa usuario • UC15.2: editar usuario • UC15.3: eliminar usuario • UC15.4: añadir usuario 85 Tabla 55: Caso de uso – Ver vista previa usuario. Identificador y nombre UC15.1: ver vista previa usuario. Actor(es) PIRE, PARE y JRE. Descripción Permite al actor ver el detalle de un usuario. Flujo básico 1. El actor selecciona la opción “Usuarios”. 2. El actor selecciona la opción “Vista previa” de alguna de los usuarios disponibles. 3. El sistema verifica los datos en la base de datos. 4. El sistema muestra el detalle del usuario seleccionado. Flujo alterno Precondición - El actor debe haber iniciado sesión. Postcondición Consulta de usuario realizada exitosamente. Puntos de extensión Tabla 56: Caso de uso – Editar usuario. Identificador y nombre UC15.2: editar usuario. Actor(es) PIRE, PARE y JRE. Descripción Permite al actor editar los datos de un usuario. Flujo básico 1. El actor selecciona la opción “Usuarios”. 2. El actor selecciona la opción “Editar” de alguno de los usuarios disponibles. 3. El usuario ingresa los datos que desea editar del usuario. 4. El sistema verifica los datos en la base de datos. 5. El sistema muestra un mensaje indicando que el usuario fue editado con éxito. Flujo alterno 5. El sistema muestra un mensaje indicando que el usuario no se pudo editar y los motivos del resultado. Precondición - El actor debe haber iniciado sesión. Postcondición Usuario editado exitosamente. Puntos de extensión 86 Tabla 57: Caso de uso – Eliminar usuario. Identificador y nombre UC15.3: eliminar usuario. Actor(es) PARE y JRE. Descripción Permite al actor eliminar un usuario. Flujo básico 1. El actor selecciona la opción “Usuarios”. 2. El actor selecciona la opción “eliminar” de alguno de los usuarios disponibles. 3. El sistema verifica los datos en la base de datos. 4. El sistema muestra un mensaje indicando que el usuario fue eliminado con éxito. Flujo alterno 4. El sistema muestra un mensaje indicando que el usuario no se pudo eliminar y los motivos del resultado. Precondición - El actor debe haber iniciado sesión. Postcondición Usuario eliminado exitosamente. Puntos de extensión Tabla 58: Caso de uso – Añadir usuario. Identificador y nombre UC15.4: añadir usuario. Actor(es) PIRE, PARE y JRE Descripción Permite al actor registrar un usuario. Flujo básico 1. El actor selecciona la opción “Usuarios”. 2. El actor selecciona la opción “Añadir Usuarios”. 3. El actor ingresa los datos del usuario. 4. El sistema verifica los datos en la base de datos. 5. El sistema muestra un mensaje indicando que el usuario fue registrado exitosamente. Flujo alterno 5. El sistema muestra un mensaje de error indicando que el usuario no fue registrado y el motivo del resultado. Precondición - El actor debe de haber iniciado sesión. Postcondición Usuario registrado exitosamente. Puntos de extensión 87 Tabla 59: Caso de uso – Consultar períodos académicos. Identificador y nombre UC16: consultar períodos académicos. Actor(es) PARE y JRE. Descripción Permite al actor consultar los períodos académicos registrados en el sistema. Flujo básico 1. El actor selecciona la opción “Períodos académicos”. 2. El sistema verifica los datos en la base de datos. 3. El sistema muestra los períodos académicos registrados en el sistema. Flujo alterno Flujo alterno: aplicar filtros a la consulta de períodos académicos 2. El actor ingresa los filtros de los períodos académicos que desea consultar. 3. El sistema verifica los datos en la base de datos. 4. El sistema muestra los períodos académicos registrados que correspondan con los filtros aplicados. Flujo alterno: no existen períodos académicos registrados 2. El sistema muestra un mensaje indicando que no hay resultados para la consulta. Precondición - El actor debe haber iniciado sesión. Postcondición Consulta de períodos académicos realizada exitosamente. Puntos de extensión Extends: • UC16.1: ver vista previa período académico • UC16.2: editar período académico • UC16.3: eliminar período académico • UC16.4: añadir período académico 88 Tabla 60: Caso de uso – Ver vista previa período académico. Identificador y nombre UC16.1: ver vista previa período académico. Actor(es) PARE y JRE. Descripción Permite al actor ver el detalle de un período académico. Flujo básico 1. El actor selecciona la opción “Período académicos”. 2. El actor selecciona la opción “Vista previa” de alguno de los períodos académicos disponibles. 3. El sistema verifica los datos en la base de datos. 4. El sistema muestra el detalle del período académico seleccionado. Flujo alterno Precondición - El actor debe haber iniciado sesión. Postcondición Consulta de período académico realizada exitosamente. Puntos de extensión Tabla 61: Caso de uso – Editar período académico. Identificador y nombre UC16.2: editar período académico. Actor(es) PARE y JRE. Descripción Permite al actor editar los datos de un período académico. Flujo básico 1. El actor selecciona la opción “Período académicos”. 2. El actor selecciona la opción “Editar” de alguno de los períodos académicos disponibles. 3. El actor ingresa los datos que desea editar del período académico. 4. El sistema verifica los datos en la base de datos. 5. El sistema muestra un mensaje indicando que el período académico fue editado con éxito. Flujo alterno 5. El sistema muestra un mensaje indicando que el período académico no se pudo editar y los motivos del resultado. Precondición - El actor debe haber iniciado sesión. Postcondición Período académico editado exitosamente. Puntos de extensión 89 Tabla 62: Caso de uso – Eliminar período académico. Identificador y nombre UC16.3: eliminar período académico. Actor(es) JRE. Descripción Permite al actor eliminar un período académico. Flujo básico 1. El actor selecciona la opción “Período académicos”. 2. El actor selecciona la opción “eliminar” de alguno de los períodos académicos disponibles. 3. El sistema verifica los datos en la base de datos. 4. El sistema muestra un mensaje indicando que el período académico fue eliminado con éxito. Flujo alterno 4. El sistema muestra un mensaje indicando que el período académico no se pudo eliminar y los motivos del resultado. Precondición - El actor debe haber iniciado sesión. Postcondición Período académico eliminado exitosamente. Puntos de extensión Tabla 63: Caso de uso – Añadir período académico. Identificador y nombre UC16.4: añadir período académico. Actor(es) PARE y JRE Descripción Permite al actor registrar un período académico. Flujo básico 1. El actor selecciona la opción “Períodos académico”. 2. El actor selecciona la opción “Añadir Período Académico”. 3. El actor ingresa los datos del período académico. 4. El sistema verifica los datos en la base de datos. 5. El sistema muestra un mensaje indicando que el período académico fue registrado exitosamente. Flujo alterno 5. El sistema muestra un mensaje de error indicando que el período académico no fue registrado y el motivo del resultado. Precondición - El actor debe de haber iniciado sesión. Postcondición Período académico registrado exitosamente. Puntos de extensión 90 4.1.1.5 Tecnologías instaladas A continuación, se describen las tecnologías instaladas para desarrollar el sistema según lo establecido en la arquitectura propuesta: Tabla 64: Tecnologías instaladas. Tecnologías Descripción MySQL 5.7 SMBD utilizado para implementar las estructuras de datos del sistema. PHP 7.2.11 Lenguaje del lado del servidor utilizado para el desarrollo del sistema en combinación con HTML5, CCS3 y JavaScript. Laravel 5.7 Marco de trabajo de PHP utilizado para definir una estructura estándar dentro del proyecto y utilizar sus funcionalidades para agilizar el proceso de desarrollo. Vagrant 2.2.2 Herramienta de software libre utilizada para la virtualización del ambiente de desarrollo. 4.1.2 Fase II: Elaboración En esta fase se realizaron las siguientes actividades: pruebas sobre la arquitectura propuesta en el ambiente previamente instalado, definición de la guía de estilos para el sistema, diseño de prototipos iniciales de las interfaces del sistema y la definición del modelo de datos del sistema. 4.1.2.1 Guía de estilos La guía de estilo presenta todos los aspectos gráficos del sistema, definiendo la paleta de colores y fuentes a utilizar. Tabla 65: Guía de estilos. #333333 #DDDDD #D2D6DE #ECF0F5 #161966 #2E306D #E6141F Fuentes: Source Sans Pro, Sans Serif 91 4.1.2.2 Prototipos A continuación, se presentan los prototipos de interfaces de usuario de las principales funcionalidades de la aplicación: La Figura 30 ilustra el prototipo de interfaz de usuario de inicio de sesión, el cual está distribuido de la siguiente forma: en la parte superior se encuentra un título con el texto “Iniciar sesión”, luego de este se encuentra un recuadro con 2 cajas de texto, las cuales corresponden a la cédula y a la contraseña del usuario. Luego de esto, se encuentra un check para recordar contraseña y finalmente el botón de inicio de sesión. Luego del recuadro, se encuentran 2 enlaces, uno para el proceso de olvido de contraseña y otro para la creación de usuarios en el sistema. Figura 30: Prototipo – Iniciar sesión. 92 Figura 31: Prototipo – Recuperar contraseña. La Figura 31 ilustra el prototipo de interfaz de usuario para recuperar contraseña el cual está distribuido de la siguiente forma: en la parte superior se encuentra un título con el texto “Recuperar contraseña”, luego de este se encuentra una sección donde se indican los pasos a seguir para el proceso de recuperación de contraseña. Luego de esto, se encuentra un recuadro con un campo de texto el cual corresponde al correo electrónico al cual se enviará el enlace y un botón para enviar dicho enlace. Finalmente, se encuentran 2 enlaces, uno para ir a la interfaz de inicio de sesión y otro para ir a la interfaz de creación de usuario. 93 Figura 32: Prototipo – Crear usuario. La Figura 32 ilustra el prototipo de interfaz de usuario para la creación de usuarios el cual está distribuido de la siguiente forma: en la parte superior se encuentra un título con el texto “Crear usuario”, luego de este se encuentra un recuadro con campos de texto que corresponden a los datos básicos de registro de un solicitante y un botón para confirmar la creación del usuario. Finalmente, se encuentran 2 enlaces, uno para ir a la interfaz de recuperación de contraseña y otro para ir a la interfaz de inicio de sesión. 94 Figura 33: Prototipo – Secciones generales. La Figura 33 ilustra el prototipo de interfaz de usuario de las secciones generales el cual está distribuido de la siguiente forma: en la parte superior está conformada por un botón en forma de menú hamburguesa que permite ocultar o desplegar el menú principal ubicado en la parte izquierda y una opción de salir del sistema, en la parte izquierda se encuentra el menú del sistema, el cual a su parte superior presentara el nombre del usuario y una opción para acceder al perfil del usuario que inicio sesión y una opción de salir del sistema y por último, la parte central está compuesta por la información referente al módulo donde se esté actualmente, el cual está compuesto en su parte superior por el nombre de la sección, un botón para crear un nuevo elemento dentro de la sección, los filtros y por ultimo un buscador de texto. Luego de esto, se encuentra una tabla donde se listan los elementos registrados de la sección, mostrando primero las columnas más significativas de la tabla y por último una celda de acciones por fila. Por último, se 95 encuentran las opciones de paginado, estando en la parte izquierda un selector para filtrar el número de registros que se desea visualizar y en la parte derecha botones para seleccionar la página actual que se desea visualizar. 4.1.2.3 Modelo de base de datos Para el almacenamiento del sistema, se diseñó un modelo de base de datos implementado físicamente con el SMDB MySQL, tomando en cuenta las características de los antecedentes recopilados y las planillas de físicas correspondientes a las solicitudes de equivalencia de estudios y a los comprobantes de equivalencia de estudios. Dentro de las entidades principales del sistema se encuentran las que permiten el almacenamiento de los distintos tipos de usuario, las solicitudes de equivalencia de estudios y los comprobantes de equivalencia de estudios. Como resultado se obtuvo el siguiente modelo relacional de base de datos: 96 Figura 34: Modelo relacional de la base de datos. 97 4.1.3 Fase III: Construcción En esta fase se realizaron las actividades relacionadas al desarrollo de las funcionalidades asociadas a los requerimientos previamente definidos del sistema. A continuación, se presentan los resultados obtenidos: 4.1.3.1 Registrar solicitantes Figura 35: Interfaz – Registrar solicitante. En la Figura 35 se ilustra la interfaz del sistema para registrar solicitantes, en la cual se solicitan los siguientes datos: cédula, nombre, apellido y correo. Posteriormente, se envía un correo al usuario con un link al correo ingresado para solicitar los datos personales y de contacto faltantes en el registro. Luego del formulario, se encuentran links para ir a los módulos de ¿Olvidó su contraseña? e iniciar sesión. 98 4.1.3.2 Iniciar sesión Figura 36: Interfaz – iniciar sesión. En la Figura 36 se ilustra la interfaz del sistema para iniciar sesión, en la cual se solicita la cédula y contraseña del usuario para su autenticación. Esta interfaz también contiene un check para recordar contraseña y 2 links para ir a los módulos de ¿Olvidó su contraseña? y crear usuario. 99 4.1.3.3 ¿Olvidó su contraseña? Figura 37: Interfaz - ¿Olvidó su contraseña?. En la Figura 37 se ilustra la interfaz del sistema para la recuperación de contraseña, en el cual se solicita el correo electrónico del usuario para posteriormente enviar un correo con los pasos a seguir para la recuperación de su contraseña. Luego del formulario, se encuentran 2 links para ir a los módulos de inicio de sesión y crear usuario. 100 4.1.3.4 Módulo de solicitudes En la Figura 38 se ilustra la interfaz del sistema correspondiente al módulo de solicitudes para el caso en que el usuario autenticado sea PARE, PIRE o JRE. En esta interfaz se listas las solicitudes registradas en el sistema sin comprobante. En la tabla de datos se encuentran los botones para realizar las acciones de vista previa, editar, eliminar, descargar la solicitud o añadir comprobante de la fila seleccionada. En esta interfaz también se pueden realizar filtros de los resultados obtenidos, bien sea por el buscador ubicado en la parte derecha o por los botones ubicados en la parte superior de la tabla. Figura 38: Interfaz – Solicitudes (PARE, PIRE o JRE). 101 Figura 39: Interfaz – Añadir solicitud. En la Figura 39 se ilustra la interfaz para añadir una nueva solicitud, en la cual se debe ingresar la cédula del solicitante, la carrera de procedencia, la carrera destino de la solicitud y opcionalmente ingresar las asignaturas de la carrera de procedencia a las cuales se desea hacer equivalencia. Al seleccionar la acción de descargar, se descarga la solicitud en formato PDF, tal y como se ilustra en la Figura 40. 102 Figura 40: Solicitud descargada PDF. 103 4.1.3.5 Módulo de comprobantes En la Figura 41 se ilustra la interfaz del sistema correspondiente al módulo de comprobantes para el caso en que el usuario autenticado sea PARE, PIRE o JRE. En la tabla de datos se encuentran los botones para realizar las acciones de vista previa, editar, eliminar o descargar el comprobante de la fila seleccionada. En esta interfaz también se pueden realizar filtros de los resultados obtenidos, bien sea por el buscador ubicado en la parte derecha o por los botones ubicados en la parte superior de la tabla. En la Figura 42 se ilustra la interfaz para editar un comprobante, en el cual se ingresan las fechas asociadas al comprobante, número de Consejo Universitario y las asignaturas equivalentes del comprobante. Figura 41: Interfaz – Comprobantes (PARE, PIRE o JRE). 104 Al seleccionar la acción de descargar, se descarga el comprobante en formato PDF, tal y como se ilustra en la Figura 43. Figura 42: Interfaz – Editar comprobante. 105 Figura 43: Comprobante descargado. 106 4.1.3.6 Módulo de universidades En la Figura 44 se ilustra la interfaz del sistema correspondiente al módulo de universidades. En la tabla de datos se encuentran los botones para realizar las acciones de vista previa, editar, eliminar o añadir facultad a la universidad de la fila seleccionada. En esta interfaz también se pueden realizar filtros de los resultados obtenidos, bien sea por el buscador ubicado en la parte derecha o por los botones ubicados en la parte superior de la tabla. Figura 45: Interfaz – Añadir Universidad. En la Figura 45 se ilustra la interfaz para añadir una nueva universidad, en la cual se debe ingresar el nombre, procedencia, dirección y abreviación de la universidad. Figura 44: Interfaz – Universidades. 107 En la Figura 46, se ilustra la vista previa de una universidad, en la cual se muestran los datos de la universidad y el listado de facultades pertenecientes a esta. Desde esta interfaz, se puede editar la universidad seleccionada, agregar una facultad, ir al detalle de una facultad, editar una facultad o eliminar una facultad. Figura 46: Interfaz – Vista previa Universidad. 108 4.1.3.7 Módulo de facultades En la Figura 47 se ilustra la interfaz del sistema correspondiente al módulo de facultades. En la tabla de datos se encuentran los botones para realizar las acciones de vista previa, editar, eliminar o añadir una escuela a la facultada de la fila seleccionada. En esta interfaz también se pueden realizar filtros de los resultados obtenidos, bien sea por el buscador ubicado en la parte derecha o por los botones ubicados en la parte superior de la tabla. Figura 47: Interfaz – Facultades. 109 Figura 48: Interfaz – Añadir Facultad. En la Figura 48 se ilustra la interfaz para añadir una nueva facultad, en la cual se debe ingresar el nombre y la universidad a la cual pertenece la facultad. En la Figura 49, se ilustra la vista previa de una facultad, en la cual se muestran los datos de la facultad y el listado de escuelas pertenecientes a esta. Desde esta interfaz, se puede editar la facultad seleccionada, agregar una escuela, ir al detalle de una escuela, editar una escuela o eliminar una escuela. Figura 49: Interfaz – Vista previa Facultad 110 4.1.3.8 Módulo de escuelas En la Figura 50 se ilustra la interfaz del sistema correspondiente al módulo de escuelas. En la tabla de datos se encuentran los botones para realizar las acciones de vista previa, editar o eliminar la escuela de la fila seleccionada. En esta interfaz también se pueden realizar filtros de los resultados obtenidos, bien sea por el buscador ubicado en la parte derecha o por los botones ubicados en la parte superior de la tabla. Figura 51: Interfaz – Añadir Escuela. En la Figura 51 se ilustra la interfaz para añadir una nueva escuela, en la cual se debe ingresar el nombre, la universidad y opcionalmente la facultada (en caso de que aplique) de la escuela. Figura 50: Interfaz – Escuelas. 111 En la Figura 52, se ilustra la vista previa de una escuela, en la cual se muestran los datos de la escuela y el listado de carreras pertenecientes a esta. Desde esta interfaz, se puede editar la escuela seleccionada, agregar una carrera, ir al detalle de una carrera, editar una carrera o eliminar una carrera. 4.1.3.9 Módulo de carreras En la Figura 53 se ilustra la interfaz del sistema correspondiente al módulo de carreras. En la tabla de datos se encuentran los botones para realizar las acciones de vista previa, editar eliminar o añadir una asignatura a la carrera de la fila seleccionada. En esta interfaz también se pueden realizar filtros de los resultados obtenidos, bien sea por el buscador ubicado en la parte derecha o por los botones ubicados en la parte superior de la tabla. Figura 52: Interfaz – Vista previa Escuela. Figura 53: Interfaz – Carreras. 112 Figura 54: Interfaz – Añadir Carrera. En la Figura 54 se ilustra la interfaz para añadir una nueva carrera, en la cual se debe ingresar el nombre, universidad, facultad (en caso de que aplique) y la escuela a la cual pertenece la carrera. En la Figura 55, se ilustra la vista previa de una carrera, en la cual se muestran los datos de la carrera y el listado de asignaturas pertenecientes a esta. Desde esta interfaz, se puede editar la carrera seleccionada, agregar una asignatura, ir al detalle de una asignatura, editar una asignatura o eliminar una asignatura. Figura 55: Interfaz – Vista previa Carrera. 113 4.1.3.10 Módulo de asignaturas En la Figura 56 se ilustra la interfaz del sistema correspondiente al módulo de asignaturas. En la tabla de datos se encuentran los botones para realizar las acciones de vista previa, editar o eliminar la asignatura de la fila seleccionada. En esta interfaz también se pueden realizar filtros de los resultados obtenidos, bien sea por el buscador ubicado en la parte derecha o por los botones ubicados en la parte superior de la tabla. Figura 56: Interfaz – Asignaturas. 114 Figura 57: Interfaz – Añadir Asignatura. En la Figura 57 se ilustra la interfaz para añadir una nueva asignatura, en la cual se debe ingresar el nombre, código, descripción, unidades de crédito, universidad, facultad (en caso de que aplique), escuela y la carrera a la cual pertenece la asignatura. 115 Figura 58: Interfaz – Vista previa Asignatura. En la Figura 58, se ilustra la vista previa de una asignatura, en la cual se muestran los datos de la asignatura. Desde esta interfaz, se puede editar la asignatura seleccionada. 116 4.1.3.11 Módulo de periodos académicos En la Figura 59 se ilustra la interfaz del sistema correspondiente al módulo de periodos académicos. En la tabla de datos se encuentran los botones para realizar las acciones de vista previa, editar o eliminar el periodo académico de la fila seleccionada. En esta interfaz también se pueden realizar filtros de los resultados obtenidos, bien sea por el buscador ubicado en la parte derecha o por los botones ubicados en la parte superior de la tabla. Figura 59: Interfaz – Periodos académicos. 117 Figura 60: Interfaz – Interfaz – Añadir periodo académico. En la Figura 60 se ilustra la interfaz para añadir un nuevo periodo académico, en la cual se debe ingresar la facultad, nombre, descripción, decano, nombre del primer representante de la Subcomisión de Equivalencias, nombre del segundo representante de la Subcomisión de Equivalencias, nombre del tercer representante de la Subcomisión de Equivalencias, nombre del primer representante de Comisión de Equivalencias, nombre del segundo representante de Comisión de Equivalencias y nombre del tercer representante de Comisión de Equivalencias del periodo académico. 118 4.1.3.12 Módulo de usuarios En la Figura 61 se ilustra la interfaz del sistema correspondiente al módulo de usuarios. En la tabla de datos se encuentran los botones para realizar las acciones de vista previa, editar o eliminar el usuario de la fila seleccionada. En esta interfaz también se pueden realizar filtros de los resultados obtenidos, bien sea por el buscador ubicado en la parte derecha o por los botones ubicados en la parte superior de la tabla. Figura 61: Interfaz – Usuarios. 119 Figura 62: Interfaz – Añadir Usuario. En la Figura 62 se ilustra la interfaz para añadir un nuevo usuario, en la cual se debe ingresar la cédula, nombre, apellido, lugar de nacimiento, nacionalidad, fecha de nacimiento, género, dirección, teléfono, email, tipo de usuario y facultad (solo en caso de que el tipo de usuario sea PARE o PIRE) del usuario. 120 4.1.4 Fase IV: Transición Una vez culminada la fase de construcción, se llevan a cabo una serie de pruebas unitarias y de integración sobre los distintos módulos del sistema con el fin de validar el correcto funcionamiento de la aplicación, así como también ajustes de la documentación en los casos que aplicase para garantizar que se dio solución a todos los requerimientos establecidos en la solución. Una vez corregidos los errores detectados, se realiza una prueba de aceptación para certificar que la aplicación cumpliera con los objetivos del proceso, tolerancia a fallos y satisfacción de los usuarios. Para estas pruebas, se realiza una encuesta la cual fue el instrumento de evaluación para medir los puntos anteriormente mencionados. Para su aplicación, se seleccionaron 5 estudiantes de la UCV y 5 personas a las cuales se les explico la problemática, el proceso de negocio y luego usaron la aplicación. La Figura 60 muestra la encuesta aplicada. 121 Figura 63: Encuesta de experiencia de usuario. 122 Una vez aplicada la encuesta, se obtuvieron los siguientes resultados: En la Figura 64 se puede observar que el 70% de las personas encuestadas dieron una puntuación de 5 y que un 30% dieron una puntuación de 4, con lo que se considera que las funcionalidades del módulo son intuitivas para los usuarios encuentados. Figura 64: Resultados pregunta 1. Figura 65: Resultados pregunta 2. 123 En la Figura 65 se observa que el 40% de las personas encuentadas dieron una puntuación de 5, un 20% dieron una puntuación de 2 y que un 40% dieron una puntuación de 3, con lo que se considera que el proceso de creación de solicitudes y comprobantes de equivalencia de estudio requiere de un conocimiento previo sobre los pasos implicados en la generación de los mismos. En la Figura 66 se observa que el 70% de las personas encuestadas dieron una puntuación de 5 y que un 30% dio una puntuación de 4, con lo que se considera que los mensajes de apoyo en caso de error dentro del módulo sirven de apoyo al usuario. Figura 66: Resultados pregunta 3. Figura 67: Resultados pregunta 4. 124 En la Figura 67 se observa que el 60% de las personas encuestadas dieron una puntuación de 5, un 30% dieron una puntuacion de 4 y un 10% dieron una puntuación de 3, con lo que se considera que la estructura y distribución de las interfaces de usuario del módulo es adecuada para los usuarios es aceptable. En la Figura 68 se observa que el 60% de las personas encuestadas dieron una puntuación de 5 y un 40% dieron una puntuación de 4, con lo que se considera que las páginas que conforman el módulo son consistentes. Figura 68: Resultados pregunta 5. Figura 69: Resultados pregunta 6. 125 En la Figura 69 se observa que el 80% de las personas encuestadas dieron una puntuación de 5 y que un 20% dieron una puntuación de 4, con lo que se considera que el módulo sirve de apoyo para el proceso de equivalencia de estudios. Tomando en cuenta los resultados obtenidos, se puede destacar que el sistema desarrollado cumple con los requerimientos y necesidades planteadas en este TEG. Como toda creación intelectual, este módulo puede incorporar mejoras a futuro y nuevas funcionalidades creadas en trabajos de grado o pasantías académicas posteriores. 126 CONCLUSIONES Al finalizar el presente TEG, se cumplió satisfactoriamente el objetivo general y cada uno de los objetivos específicos planteados, ya que se logró desarrollar un módulo para la gestión de equivalencias de estudios que era la finalidad principal de esta investigación, y con esto, generar una herramienta única para agilizar las actividades inherentes a dicho proceso. A partir del desarrollo de esta solución, se obtuvo un producto que cumple con los requerimientos planteados en esta investigación y la definición e implementación de la arquitectura tecnológica propuesta de forma satisfactoria. Se logró conocer a detalle el proceso de equivalencia de estudios, lo cual permitió desarrollar de forma satisfactoria el Módulo de Gestión de Equivalencia de Estudios del Departamento de Reválidas y Equivalencias de la UCV. El uso de la metodología AUP hizo que el desarrollo del sistema se llevara a cabo de forma estructurada y organizada, generando documentación útil en cada una de sus fases para garantizar el cumplimiento de todos los requerimientos del sistema. El desarrollo del módulo estuvo basado en un conjunto de herramientas y tecnologías actuales, empleadas según lo definido en la arquitectura de solución propuesta. Se utilizaron los lenguajes de programación PHP y JavaScript, como SMBD se utilizó MySql y por último el framework Laravel 5 del lado del servidor, utilizando el patrón de arquitectura de software MVC. Con la realización de las pruebas de aceptación se obtuvieron opiniones diversas en cuanto a la usabilidad, tolerancia a fallos del sistema y el apoyo que brinda este a los procesos relacionados con la equivalencia de estudios, las cuales fueron tomadas en cuenta para mejorar la experiencia de usuario. 127 Este TEG generó un gran crecimiento personal y profesional. Además, permitió realizar un aporte al Departamento de Reválidas y Equivalencias perteneciente a nuestra casa de estudios. Con el desarrollo del Módulo de Equivalencia de Estudios, el DRE dispondrá de un único módulo centralizado para la gestión de los procesos de equivalencia de estudios, el cual es capaz de almacenar y posteriormente procesar las solicitudes de equivalencia de estudios y los comprobantes de asignaturas equivalentes. También, con este módulo, las solicitudes y comprobantes de asignaturas equivalentes podrán ser generadas de forma digital y física en formato PDF tamaño carta, los cuales reducen el uso de equipos adicionales especializados para la generación física de estos documentos. 128 TRABAJOS FUTUROS Incorporar nuevos módulos para agilizar otros procesos relacionados al Departamento de Reválidas y Equivalencias, como, por ejemplo, la gestión de reválidas de título o validez de título, pudiéndose utilizar este sistema como base para estos desarrollos. 129 RECOMENDACIONES Suministrar apoyo inicial al personal de los distintos Departamentos de Reválidas y Equivalencias con el fin de garantizar de que los procesos realizados por el sistema sean correctos. En caso de que se considere pasar el sistema a producción, establecer medidas de seguridad para garantizar que solo se le asignen credenciales de autenticación en el sistema solo a las personas autorizadas. 130 REFERENCIAS BIBLIOGRÁFICAS Y DIGITALES Akchar, J. (2018). ESTUDIO DE CONCEPTOS, METODOLOGÍAS Y HERRAMIENTAS PARA DESARROLLAR EL MÓDULO DE GESTIÓN DE EQUIVALENCIA DE ESTUDIOS. Caracas. Amaro, S., & Valverde, J. (2007). Metodologías Ágiles. Recuperado el 20 de Septiembre de 2017, de https://uvirtual.unet.edu.ve/pluginfile.php/268695/mod_resource/content/1/Metod ologias%20Agiles.pdf Apache. (2007). HTTP SERVER PROJECT. Obtenido de https://httpd.apache.org/ABOUT_APACHE.html APACHE. (15 de Enero de 2009). Apache-SSL. Obtenido de https://web.archive.org/web/20090314040822/http://www.apache-ssl.org/ Asensio, B., & Menéndez, R. (s.f). Desarrollo Aplicaciones Web. Obtenido de http://www.um.es/docencia/barzana/DAWEB/Lenguaje-de-programacion-HTML- 1.pdf Carvajal, J. (Septiembre de 2008). METODOLOGÍAS ÁGILES: HERRAMIENTAS Y MODELO DE DESARROLLO PARA APLICACIONES. Recuperado el 20 de Septiembre de 2017, de https://upcommons.upc.edu/bitstream/handle/2099.1/5608/50015.pdf?sequence= 1 Cordero, J. (s.f). METODOLOGIAS AGILES - PROCESO UNIFICADO AGIL (AUP). Obtenido de http://m.ingenieriadesoftware.mex.tl/images/18149/METODOLOGIAS%20AGILE S.pdf Gamma, E., Helm, R., Johnson, R., & Vlissides, J. (2002). Patrones de Diseño - Elementos de Software orientado a objetos reutilizables . Madrid: Pearson Educación. Hernández, E., & Martínez, L. (1997). Cliente/servidor. Obtenido de http://clubdeinvestigacion.com/docs/informe23.pdf 131 Letelier, P., & Sánchez, E. (12 de Noviembre de 2003). Metodologías Ágiles en el Desarrollo de Software . Recuperado el 20 de Septiembre de 2017, de http://issi.dsic.upv.es/archives/f-1069167248521/actas.pdf Mariño Vázquez, C. (2008). Programación en PHP. Nivel Báisco. Obtenido de http://administraciondesistemas.pbworks.com/f/Manual_PHP5_Basico.pdf Mestras Pavon, J. (2008). Estructura de las Aplicaciones Orientadas a Objetos - El patrón Modelo-Vista-Controlador. Obtenido de https://www.fdi.ucm.es/profesor/jpavon/poo/2.14.MVC.pdf Mora, S. L. (2002). Programación de aplicaciones web: historia, principios básicos y clientes web. Obtenido de https://gplsi.dlsi.ua.es/~slujan/materiales/pi-cliente2- muestra.pdf Navarrete, T. (2006-2007). El Lenguaje JavaScript. Obtenido de http://www.dtic.upf.edu/~tnavarrete/fcsig/javascript.pdf Organization, R. (19 de Febrero de 2018). Laravel 5 Conceptos básicos y ejemplos. Obtenido de https://www.pdf-manual.es/programacion-web/php/175-libro-laravel- 5-conceptos-basicos-y-ejemplos.html Pardo, E. (Julio de 2014). Manual de Procedimientos. Caracas, Venezuela. Pavón Mestras, J. (2012-2013). Aplicaciones Web/Sistemas Web. Obtenido de https://www.fdi.ucm.es/profesor/jpavon/web/24-JavaScript.pdf RedUsers. (s.f). El Lenguaje Ruby. Obtenido de http://eudev2.uta.cl/rid=1GR0DSG4D- 1Y1NH87-4RQ/ruby.pdf Romero Fernandez, Y., & Gonzales Diaz, Y. (Abril de 2012). Telem@tica - Patrón Modelo-Vista-Controlador. Obtenido de revistatelematica.cujae.edu.cu/index.php/tele/article/download/15/10/0 Ruby Lang Org. (s.f). Acerca de Ruby. Obtenido de https://www.ruby-lang.org/es/about/ Ruby on Rails Guides. (s.f). Obtenido de http://guides.rubyonrails.org Sánchez, J. (2004). MySQL, Guía rapida. Obtenido de http://www.cartagena99.com/recursos/programacion/apuntes/mysql.pdf Silberschatz, A., Korth, H., & Sudarshan, S. (2002). Fundamentos de Base de Datos. Obtenido de 132 https://unefazuliasistemas.files.wordpress.com/2011/04/fundamentos-de-bases- de-datos-silberschatz-korth-sudarshan.pdf The PostgreSQL Global Development Group. (s.f). PostgreSQL 10.1 Documentation. Obtenido de https://www.postgresql.org/files/documentation/pdf/10/postgresql-10- A4.pdf Valle, J. G., & Gutierrez, J. G. (2005). Arquitectura cliente/servidor. Obtenido de http://www.ecotec.edu.ec/documentacion%5Cinvestigaciones%5Cdocentes_y_di rectivos%5Carticulos/5743_TRECALDE_00212.pdf W3Techs. (s.f.). Usage of server-side programming languages for websites. Obtenido de https://w3techs.com/technologies/overview/programming_language/all Wells, D. (1999). The Rules of Extreme Programming. Obtenido de http://www.extremeprogramming.org/rules.htmlUNIVERSIDAD CENTRAL DE VENEZUELA FACULTAD DE CIENCIAS ESCUELA DE COMPUTACIÓN DESARROLLO DEL MÓDULO DE GESTIÓN DE EQUIVALENCIA DE ESTUDIOS DEL DEPARTAMENTO DE REVÁLIDAS Y EQUIVALENCIAS DE LA UCV Trabajo Especial de Grado presentado ante la ilustre Universidad Central de Venezuela por el Br. Jean E. Akchar Marchena Para optar por el título de Licenciado en Computación Tutores: Profa. Concettina Di Vasta Prof. Iván Flores Caracas, Octubre de 2019 UNIVERSIDAD CENTRAL DE VENEZUELA FACULTAD DE CIENCIAS ESCUELA DE COMPUTACIÓN DESARROLLO DEL MÓDULO DE GESTIÓN DE EQUIVALENCIA DE ESTUDIOS DEL DEPARTAMENTO DE REVÁLIDAS Y EQUIVALENCIAS DE LA UCV Autor: Br. Jean E. Akchar Marchena Tutores: Profa. Concettina Di Vasta Prof. Iván Flores Fecha: Caracas, septiembre 2019 RESUMEN El proceso de equivalencia de estudios del Departamento de Reválidas y Equivalencias (DRE) de la Universidad Central de Venezuela (UCV) consiste en un estudio de cuales asignaturas cursadas y aprobadas por el tramitante se ajustan con asignaturas que forman parte del plan de estudio de una determinada Facultad, Escuela o Instituto Universitario. Actualmente, no existe un módulo centralizado para dar respuesta a las solicitudes de equivalencia de estudios realizadas por los tramitantes, por lo cual, cada Facultad utiliza diversas herramientas para agilizar los procesos, teniendo que realizar algunas actividades de forma manual, lo cual genera retrasos en los tiempos de respuesta y errores generados por factor humano. Teniendo en cuenta estas dificultades en el proceso de equivalencia de estudios, se desarrolló un módulo web para apoyar la ejecución de las actividades relacionadas al proceso anteriormente descrito, desarrollado con tecnologías de software libre (HTML5, CSS3, Javascript, PHP, Laravel y MySQL) bajo una metodología de desarrollo Proceso Unificado Ágil (AUP). Palabras Clave: equivalencia de estudios, departamento de reválidas y equivalencias, comisión de reválidas y equivalencias, asignaturas equivalentes, aplicación web. ÍNDICE INTRODUCCIÓN ................................................................................................... 1 CAPÍTULO I: PROBEMA DE INVESTIGACIÓN ..................................................... 3 1.1 Planteamiento del problema ..................................................................... 3 1.2 Objetivos del TEG .................................................................................... 8 1.2.1 General ................................................................................................ 8 1.2.2 Específicos........................................................................................... 8 1.3 Solución propuesta ................................................................................... 9 1.4 Justificación de la solución ..................................................................... 10 CAPÍTULO II: MARCO CONCEPTUAL ................................................................ 11 2.1 Antecedentes ......................................................................................... 11 2.1.1 Sistema de Control de Reválidas y Equivalencias (SISCRE) ............ 11 2.1.2 Sistema de Equivalencias (EQU-2016) .............................................. 16 2.2 Arquitectura cliente/servidor ................................................................... 22 2.3 Aplicación Web ....................................................................................... 23 2.3.1 Componentes..................................................................................... 23 2.3.2 Ventajas de las aplicaciones web ...................................................... 25 2.4 Patrón de diseño MVC (Modelo Vista Controlador) ................................ 26 2.4.1 Funcionamiento del patrón MVC ........................................................ 27 2.5 Herramientas tecnológicas para el desarrollo de aplicaciones web ....... 28 2.5.1 Tecnologías del lado del cliente ......................................................... 28 2.5.2 Tecnologías del lado del servidor ...................................................... 32 CAPITULO III: MARCO METODOLÓGICO.......................................................... 38 3.1 Metodologías ágiles vs Metodologías tradicionales ............................... 38 3.2 Proceso Unificado Ágil (AUP)................................................................. 40 3.2.1 Filosofía de AUP ................................................................................ 40 3.2.2 Técnicas ágiles que incluye AUP ....................................................... 41 3.2.3 Fases de AUP .................................................................................... 41 CÁPITULO IV: MARCO APLICATIVO .................................................................. 45 4.1 Fases del proyecto ................................................................................. 45 4.1.1 Fase I: Iniciación ................................................................................ 48 4.1.2 Fase II: Elaboración ............................................................................. 90 4.1.3 Fase III: Construcción .......................................................................... 97 4.1.4 Fase IV: Transición ............................................................................ 120 CONCLUSIONES ............................................................................................... 126 TRABAJOS FUTUROS ...................................................................................... 128 RECOMENDACIONES ...................................................................................... 129 REFERENCIAS BIBLIOGRÁFICAS Y DIGITALES ............................................ 130 ÍNDICE DE FIGURAS Figura 1: Proceso de solicitud de equivalencia de estudios, parte 1. ..................... 6 Figura 2: Proceso de solicitud de equivalencia de estudios, parte 2. ..................... 7 Figura 3: Arquitectura de la solución propuesta. .................................................... 9 Figura 4: Inicio del SISCRE. ................................................................................. 12 Figura 5: Selección de unidad de trabajo del SISCRE. ........................................ 13 Figura 6: Menú principal del SISCRE. .................................................................. 13 Figura 7: Entrada de datos del SISCRE. .............................................................. 14 Figura 8: Agregar una nueva materia al SISCRE. ................................................ 14 Figura 9: Agregar un nuevo profesor al SISCRE.................................................. 15 Figura 10: Consulta de historial de expedientes de estudiantes en SISCRES. .... 15 Figura 11: Entrada de datos EQU-2016. .............................................................. 17 Figura 12: Entrada de materias equivalentes EQU-2016. .................................... 17 Figura 13: Envió de materias al Consejo de Facultad EQU-2016. ....................... 18 Figura 14: Envió de materias al Consejo Universitario EQU-2016. ...................... 19 Figura 15: Memorándum por retraso de respuesta de expedientes EQU-2016. .. 19 Figura 16: Agregar una nueva materia al sistema EQU-2016. ............................. 20 Figura 17: Agregar una nueva universidad al sistema EQU-2016........................ 20 Figura 18: Consulta de reportes de materias equivalentes EQU-2016. ............... 21 Figura 19: Representación gráfica de la arquitectura cliente/servidor. ................. 23 Figura 20: Arquitectura de una aplicación web cliente/servidor............................ 25 Figura 21: Flujo del patrón MVC. .......................................................................... 27 Figura 22: Ejemplo de un documento HTML. ....................................................... 29 Figura 23: Ejemplo de un documento CSS. ......................................................... 30 Figura 24: Ejemplo de un código JavaScript. ....................................................... 31 Figura 25: Fases e hitos de AUP. ......................................................................... 42 Figura 26: Diagrama de casos de uso – perfil solicitante. .................................... 51 Figura 27: Diagrama de casos de uso – perfil PIRE ............................................. 52 Figura 28: Diagrama de casos de uso – perfil PARE y perfil JRE. ....................... 53 Figura 29: Diagrama de casos de uso – perfiles de usuario. ............................... 54 Figura 30: Prototipo – Iniciar sesión. .................................................................... 91 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21995985 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21995986 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21995992 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21995995 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21996011 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21996013 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21996014 Figura 31: Prototipo – Recuperar contraseña. ..................................................... 92 Figura 32: Prototipo – Crear usuario. ................................................................... 93 Figura 33: Prototipo – Secciones generales. ........................................................ 94 Figura 34: Modelo relacional de la base de datos. ............................................... 96 Figura 35: Interfaz – Registrar solicitante. ............................................................ 97 Figura 36: Interfaz – iniciar sesión. ....................................................................... 98 Figura 37: Interfaz - ¿Olvidó su contraseña?. ...................................................... 99 Figura 38: Interfaz – Solicitudes (PARE, PIRE o JRE). ...................................... 100 Figura 39: Interfaz – Añadir solicitud. ................................................................. 101 Figura 40: Solicitud descargada PDF. ................................................................ 102 Figura 41: Interfaz – Comprobantes (PARE, PIRE o JRE). ................................ 103 Figura 42: Interfaz – Editar comprobante. .......................................................... 104 Figura 43: Comprobante descargado. ................................................................ 105 Figura 44: Interfaz – Universidades. ................................................................... 106 Figura 45: Interfaz – Añadir Universidad. ........................................................... 106 Figura 46: Interfaz – Vista previa Universidad. ................................................... 107 Figura 47: Interfaz – Facultades. ........................................................................ 108 Figura 48: Interfaz – Añadir Facultad. ................................................................ 109 Figura 49: Interfaz – Vista previa Facultad ......................................................... 109 Figura 50: Interfaz – Escuelas. ........................................................................... 110 Figura 51: Interfaz – Añadir Escuela. ................................................................. 110 Figura 52: Interfaz – Vista previa Escuela. ......................................................... 111 Figura 53: Interfaz – Carreras. ........................................................................... 111 Figura 54: Interfaz – Añadir Carrera. .................................................................. 112 Figura 55: Interfaz – Vista previa Carrera. ......................................................... 112 Figura 56: Interfaz – Asignaturas. ...................................................................... 113 Figura 57: Interfaz – Añadir Asignatura. ............................................................. 114 Figura 58: Interfaz – Vista previa Asignatura. .................................................... 115 Figura 59: Interfaz – Periodos académicos. ....................................................... 116 Figura 60: Interfaz – Interfaz – Añadir periodo académico. ................................ 117 Figura 61: Interfaz – Usuarios. ........................................................................... 118 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21996022 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21996025 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21996026 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21996027 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21996028 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21996030 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21996031 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21996033 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21996034 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21996036 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21996037 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21996039 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21996040 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21996043 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21996045 Figura 62: Interfaz – Añadir Usuario. .................................................................. 119 Figura 63: Encuesta de experiencia de usuario. ................................................ 121 Figura 64: Resultados pregunta 1. ..................................................................... 122 Figura 65: Resultados pregunta 2. ..................................................................... 122 Figura 66: Resultados pregunta 3. ..................................................................... 123 Figura 67: Resultados pregunta 4. ..................................................................... 123 Figura 68: Resultados pregunta 5. ..................................................................... 124 Figura 69: Resultados pregunta 6. ..................................................................... 124 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21996047 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21996048 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21996049 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21996050 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21996051 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21996052 file:///C:/Users/Jean/Desktop/Pre%20defensa%20Tesis%20(falta%20poco)/Documento_Tesis%20Jean%20Tinav1(Corregido)(adaptado%20a%20cambios%20del%20sistema).docx%23_Toc21996053 ÍNDICE DE TABLAS Tabla 1: Ventajas y desventajas de la arquitectura cliente/servidor. .................... 22 Tabla 2: Ventajas y desventajas de las aplicaciones web. ................................... 26 Tabla 3: Resumen PHP ........................................................................................ 35 Tabla 4: Resumen MySQL ................................................................................... 37 Tabla 5: Resumen AUP. ....................................................................................... 43 Tabla 6: Planificación Fase I – Iniciación ............................................................. 46 Tabla 7: Planificación Fase II – Elaboración ........................................................ 46 Tabla 8: Planificación Fase III – Construcción ..................................................... 47 Tabla 9: Planificación Fase IV – Transición ......................................................... 48 Tabla 10: Caso de uso – Registrar usuario. ......................................................... 55 Tabla 11: Caso de uso – Iniciar sesión. ............................................................... 55 Tabla 12: Caso de uso – Recuperar contraseña. ................................................. 56 Tabla 13: Caso de uso – Cambiar contraseña. .................................................... 56 Tabla 14: Caso de uso – Modificar datos personales. .......................................... 57 Tabla 15: Caso de uso – Registrar solicitud. ........................................................ 57 Tabla 16: Caso de uso – Consultar mis solicitudes. ............................................. 58 Tabla 17: Caso de uso – Consultar solicitudes. ................................................... 59 Tabla 18: Caso de uso – Ver vista previa solicitud. .............................................. 60 Tabla 19: Caso de uso – Editar solicitud. ............................................................. 60 Tabla 20: Caso de uso – Descargar solicitud. ...................................................... 61 Tabla 21: Caso de uso – Eliminar solicitud. ......................................................... 61 Tabla 22: Caso de uso – Añadir solicitud. ............................................................ 62 Tabla 23: Caso de uso – Añadir comprobante. .................................................... 62 Tabla 24: Caso de uso – Consultar comprobante. ............................................... 63 Tabla 25: Caso de uso – Ver vista previa comprobante. ...................................... 64 Tabla 26: Caso de uso – Editar comprobante. ..................................................... 65 Tabla 27: Caso de uso – Descargar comprobante. .............................................. 65 Tabla 28: Caso de uso – Eliminar comprobante................................................... 66 Tabla 29: Caso de uso – Consultar universidades. .............................................. 67 Tabla 30: Caso de uso – Ver vista previa universidades. ..................................... 68 Tabla 31: Caso de uso – Editar universidades. .................................................... 69 Tabla 32: Caso de uso – Eliminar universidad. .................................................... 69 Tabla 33: Caso de uso – Añadir universidad. ....................................................... 70 Tabla 34: Caso de uso – Añadir facultad ............................................................. 70 Tabla 35: Caso de uso – Eliminar facultad ........................................................... 71 Tabla 36: Caso de uso – Editar facultad .............................................................. 71 Tabla 37: Caso de uso – Ver vista previa facultad ............................................... 72 Tabla 38: Caso de uso – Consultar facultades. .................................................... 73 Tabla 39: Caso de uso – Añadir escuela. ............................................................. 74 Tabla 40: Caso de uso – Eliminar escuela. .......................................................... 74 Tabla 41: Caso de uso – Editar escuela. .............................................................. 75 Tabla 42: Caso de uso – Ver vista previa escuela ............................................... 76 Tabla 43: Caso de uso – Consultar escuelas. ...................................................... 77 Tabla 44: Caso de uso – Añadir carrera. .............................................................. 78 Tabla 45: Caso de uso – Eliminar carrera. ........................................................... 78 Tabla 46: Caso de uso – Editar carrera ................................................................ 79 Tabla 47: Caso de uso – Ver vista previa carrera. ............................................... 79 Tabla 48: Caso de uso – Consultar carreras. ....................................................... 80 Tabla 49: Caso de uso – Añadir asignatura. ........................................................ 81 Tabla 50: Caso de uso – Ver vista previa asignatura. .......................................... 81 Tabla 51: Caso de uso – Editar asignatura .......................................................... 82 Tabla 52: Caso de uso – Eliminar asignatura ....................................................... 82 Tabla 53: Caso de uso – Consultar asignaturas. .................................................. 83 Tabla 54: Caso de uso – Consultar usuarios. ...................................................... 84 Tabla 55: Caso de uso – Ver vista previa usuario. ............................................... 85 Tabla 56: Caso de uso – Editar usuario. .............................................................. 85 Tabla 57: Caso de uso – Eliminar usuario. ........................................................... 86 Tabla 58: Caso de uso – Añadir usuario. ............................................................. 86 Tabla 59: Caso de uso – Consultar períodos académicos. .................................. 87 Tabla 60: Caso de uso – Ver vista previa período académico. ............................ 88 Tabla 61: Caso de uso – Editar período académico. ............................................ 88 Tabla 62: Caso de uso – Eliminar período académico. ........................................ 89 Tabla 63: Caso de uso – Añadir período académico. ........................................... 89 Tabla 64: Tecnologías instaladas. ........................................................................ 90 Tabla 65: Guía de estilos. .................................................................................... 90 1 INTRODUCCIÓN El DRE, adscrito a la Dirección de Registro Estudiantil de la Coordinación de la Secretaria General de la UCV, tiene como principal objetivo tramitar, reconocer y convalidar los títulos otorgados por una universidad nacional, extranjera o institutos nacionales. Este proceso de equivalencias se determina mediante un análisis previo de cuáles asignaturas cursadas y aprobadas por el tramitante, equivalen a asignaturas que forman parte del plan de estudio de una determinada Facultad, Escuela o Instituto universitario. Actualmente, ni el DRE ni las distintas Comisiones de reválidas y equivalencias cuentan con un módulo centralizado para realizar los procesos de equivalencia de estudios, reválida o validez de título y reconocimiento de título no revalidable. Como consecuencia, cada Facultad utiliza distintas herramientas para agilizar las tareas inherentes en los distintos procesos de equivalencia de estudios. Sin embargo, en muchos casos, estas herramientas no cuentan con algunas funcionalidades fundamentales requeridas en los procesos, lo que obliga tanto a los tramitantes como a los empleados del departamento/comisión a realizar algunos procesos de forma manual, generando retrasos en los mismos. En consecuencia, el objetivo de este Trabajo de Especial de Grado (TEG) es desarrollar el Módulo de Gestión de Equivalencia de Estudios del Departamento de Reválidas y Equivalencias, cuyo objetivo es centralizar y gestionar todas aquellas actividades automatizables del proceso de solicitud de equivalencia de estudios de universidades nacionales, extranjeras o institutos nacionales. Este TEG se encuentra estructurado de la siguiente manera: En el capítulo I se describe el planteamiento del problema, los objetivos del TEG, la solución propuesta, la justificación de la solución propuesta y el alcance del TEG. En el capítulo II se describen aspectos teóricos, conceptos, plataformas tecnológicas y herramientas utilizadas para el desarrollo de la solución. 2 En el capítulo III se describe la metodología que fue aplicada durante el desarrollo del TEG y la justificación de su uso. En el capítulo IV se explican y describen las fases de trabajo que se aplicaron para el análisis, diseño e implementación de la solución propuesta usando la metodología seleccionada. Por último, se presentan las conclusiones, trabajos futuros y las referencias bibliográficas utilizadas para este TEG. 3 CAPÍTULO I: PROBEMA DE INVESTIGACIÓN 1.1 Planteamiento del problema El DRE, adscrito Dirección de Registro Estudiantil de la UCV es el ente encargado de tramitar y gestionar las solicitudes de equivalencias de estudios. Esta funcionalidad se basa en otorgar equivalencias de asignaturas aprobadas en Instituciones Universitarias nacionales o extranjeras con asignaturas que forman parte del plan de estudios de la carrera a la que el solicitante desea ingresar en la UCV o a una Institución de Educación Superior Privada. Se entiende por equivalencia: “el resultado del proceso por el cual se determina cuáles asignaturas aprobadas por el solicitante en otra institución se corresponde, al menos en un 75% de sus contenidos programáticos, con asignaturas que forman parte del plan de estudios de la carrera a la que desea ingresar en la UCV” (MANUAL DE NORMAS Y PROCEDIMIENTO DE LA GESTIÓN ACADÉMICA DE LA UNIVERSIDAD CENTRAL DE VENEZUELA, 2016). Actualmente este proceso se lleva a cabo de la siguiente manera: (ver Figura 1 y Figura 2): a) El DRE asigna una cita al solicitante para la recepción de los recaudos necesarios para el trámite. b) El solicitante llena la planilla de solicitud de equivalencias el día y hora fijada en la cita previamente pautada. c) El DRE verifica la documentación recibida. En caso de no estar completa, se devuelve la documentación al solicitante indicándole el motivo de la devolución. En caso contrario, se procede a registrar la solicitud de equivalencias. d) El DRE firma y sella la planilla de solicitud de equivalencia y entrega al solicitante una copia de la misma. e) El DRE archiva una copia de la planilla de solicitud de equivalencias y conforma un expediente de solicitud de equivalencia en conjunto con los recaudos entregados por el solicitante. f) El DRE remite el expediente a la Comisión de Reválidas y Equivalencias (CRE) a la facultad correspondiente. 4 g) La CRE de la Facultad clasifica el expediente de solicitud de equivalencias por escuela correspondiente. h) La CRE archiva el expediente recibido y lo remite a la Sub-Comisión de Reválidas y Equivalencias de la escuela correspondiente. i) La Sub-Comisión de Reválidas y Equivalencias de la escuela realiza un estudio técnico del expediente, identificando las asignaturas equivalentes. j) La Sub-Comisión de Reválidas y Equivalencias de la escuela registra en la planilla comprobante de asignaturas equivalentes aquellas asignaturas consideradas como equivalentes en el expediente estudiado y lo remite a la CRE en conjunto con el expediente. k) La CRE presenta ante el Consejo de Facultad la planilla comprobante de asignaturas equivalentes para su aprobación. l) El Consejo de Facultad revisa y firma la planilla comprobante de asignaturas equivalentes en señal de aprobación. m) El Consejo de Facultad remite al DRE el expediente en conjunto con la planilla comprobante de asignaturas equivalentes. n) El DRE registra la fecha de recepción del expediente y el comprobante de asignaturas equivalentes. o) El DRE verifica que el comprobante de asignaturas equivalentes este llenado correctamente, comparándolos con los datos del expediente. En caso de existir algún error, el comprobante de asignaturas equivalentes es devuelto a la CRE indicando el error para su corrección. En caso contrario, se envía el expediente al Consejo Universitario para su aprobación. p) El Consejo Universitario aprueba el expediente de equivalencia e informa mediante una resolución al DRE. q) El DRE elabora un oficio personalizado donde se participa la aprobación por parte del Consejo Universitario y solicita la firma de cada uno de los oficios y el comprobante de asignaturas equivalentes por parte de la Secretaria General. r) La Secretaria General firma el oficio y el comprobante de asignaturas equivalentes y devuelve al DRE. 5 s) El DRE prepara un sobre cerrado que contiene el oficio firmado por Secretaria y copia del comprobante de asignaturas equivalentes y anexa estos documentos al expediente. t) El DRE entrega al solicitante el sobre cerrado para su información y fines consiguientes. 6 Figura 1: Proceso de solicitud de equivalencia de estudios, parte 1. 7 Figura 2: Proceso de solicitud de equivalencia de estudios, parte 2. 8 En el proceso expuesto, se encuentran los siguientes problemas: • No se cuenta con un sistema en línea para la realización de solicitudes. • No se puede hacer un seguimiento del estatus de ningún tipo de solicitud por parte de ninguna de las partes o personas involucradas hasta el final del proceso. • Las planillas y expedientes se envían en físico, haciendo un gasto extra en materiales de impresión. • Las planillas se llenan a mano, lo cual puede generar retrasos en el proceso e impide su edición en caso de cometer algún error de tipeo. • No se cuenta con un sistema centralizado para el almacenamiento y estudio de los expedientes. 1.2 Objetivos del TEG 1.2.1 General Desarrollar el Módulo de Gestión de Equivalencia de Estudios del Departamento de Reválidas y Equivalencias de la UCV para la gestión y almacenamiento de solicitudes de equivalencia de estudios. 1.2.2 Específicos • Conceptualizar y estructurar el Módulo de Gestión de Equivalencia de Estudios del Departamento de Reválidas y Equivalencias de la UCV. • Analizar los flujos y procesos básicos del proceso de equivalencia de estudios. • Definir una arquitectura tecnológica para el desarrollo de la solución propuesta. • Construir el Módulo de Equivalencia de Estudios del DRE de la UCV. • Realizar validaciones y pruebas necesarias para asegurar el correcto funcionamiento del Módulo de Equivalencia de Estudios. 9 1.3 Solución propuesta Se propone desarrollar el Módulo de Gestión de Equivalencia de Estudios del DRE de la UCV a través de un módulo web, utilizando como metodología de desarrollo AUP, usando herramientas y tecnologías de software libre, estableciendo como base la siguiente arquitectura: Figura 3: Arquitectura de la solución propuesta. La arquitectura de la Figura 3 describe un modelo cliente/servidor, donde el usuario a través de un navegador (el cliente), envía solicitudes al servidor web que se comunica con el cliente a través de la red, posiblemente para hacer petición de una página web alojada en el servidor, el cual se encarga de devolver dicha solicitud. En cuanto a tecnologías, se utiliza para el desarrollo herramientas y tecnologías de software libre. Se utiliza el lenguaje Hypertext Preprocessor (PHP) en conjunto con el marco de trabajo Laravel, como SMBD se utiliza MySQL 5.7, mientras que se aloja toda la aplicación en un servidor Apache. 10 1.4 Justificación de la solución Contar con módulo web seria de vital importancia para solventar la problemática actual del DRE y las Comisiones de Reválidas y Equivalencias de cada Facultad en cuanto al proceso de equivalencia de estudios. Este módulo se encarga de almacenar y gestionar toda la información generada tanto para los tramitantes como para las distintas entidades que intervienen en el proceso de equivalencia de estudios. Con el desarrollo del Módulo de Equivalencia de Estudios, el DRE puede acceder de forma inmediata a la información generada por las distintas Comisiones de Reválidas y Equivalencias, mientras que, para cada una de las comisiones, se tiene un único módulo centralizado que se encarga de gestionar y almacenar toda la información generada durante el proceso de equivalencia de estudios. Por otra parte, se busca reducir el factor de error humano en el trámite de documentos, solicitudes e impresión de planillas, que son los principales factores de retraso del proceso actualmente. 11 CAPÍTULO II: MARCO CONCEPTUAL 2.1 Antecedentes A continuación, se describen las aplicaciones utilizadas actualmente para gestionar los procesos de equivalencia de asignaturas que se llevan a cabo en las distintas Comisiones de Reválidas y Equivalencias de cada Facultad. Estos sistemas sirven de base para esta investigación, ya que permite capturar requerimientos funcionales importantes, para tener en cuenta en el desarrollo del Módulo de Gestión de Equivalencia de Estudios. Actualmente, solo las Facultades de Ingeniería y Ciencias Económicas y Sociales (FaCES) cuentan con un sistema especializado para el proceso de equivalencia de estudios. Ambos sistemas se describen en este capítulo. 2.1.1 Sistema de Control de Reválidas y Equivalencias (SISCRE) Es un sistema de gestión que permite a FaCES tener un mayor y mejor control de los expedientes y solicitudes relacionadas con Reválidas y Equivalencias. Fue instalado y puesto en funcionamiento en el año 1993 por la Unidad de Informática de FaCES. Está diseñado para que funcione en computadoras que soporten el Sistema Operativo de Disco (DOS). Fue desarrollado en un lenguaje llamado CLIPPER y la estructura de datos que utiliza esta soportada con una base de datos. En cuanto a su funcionamiento, SISCRE está basado en la selección de opciones tipo menú. Posee un menú principal que permite al usuario controlar todas las operaciones que brinda el sistema en sí. En cuanto a su estructura, este está dividido en dos módulos: • Equivalencias: en este módulo se realizan las consultas y modificaciones relacionadas a los expedientes de equivalencias de estudio. Posee un menú en el cual se listas las siguientes opciones: recibir del Consejo Universitario, recibir de la Sub-Comisión, recibir del Consejo de Facultad, consultar expedientes y devolución de expedientes. Cada una de estas opciones debe 12 ser ejecutada de una forma particular y ordenada, de manera tal de no generar errores en el almacenamiento de los datos. • Reválidas: en este módulo se realizan las consultas y modificaciones relacionadas a los expedientes de reválidas de títulos. Posee un menú en el cual se listas las siguientes opciones: recibir del Consejo Universitario y solicitud de planillas de exámenes. Al igual que en el módulo anterior, cada una de las opciones deben ser ejecutadas de una forma particular para no generar errores en el almacenamiento de la data. A continuación, se muestran una serie de capturas de pantalla del sistema para observar un poco su funcionamiento. Figura 4: Inicio del SISCRE. La Figura 4 muestra la pantalla de inicio del sistema, en la cual se debe ingresar un código de acceso para acceder a este. 13 Figura 5: Selección de unidad de trabajo del SISCRE. La Figura 5 se observa la pantalla en la cual se escoge la unidad en la cual se va a trabajar. En esta unidad debe de encontrarse el archivo con los datos que cargara el sistema para futuras consultas o modificaciones. Figura 6: Menú principal del SISCRE. La Figura 6 ilustra el menú principal de la aplicación, el cual lista las distintas opciones que brinda el sistema. 14 Figura 7: Entrada de datos del SISCRE. La Figura 7 muestra la interfaz para realizar el llenado de datos una vez que la solicitud de equivalencia llega a la CRE de FaCES. Se requiere la cédula del tramitante, apellidos y nombres del tramitante, nacionalidad del tramitante, número de la planilla, universidad de procedencia, escuela de procedencia, universidad destino, escuela destino, fecha de la solicitud, número del libro y número de folio. La Figura 8 se ilustra la interfaz que se utiliza para ingresar nuevas materias al sistema. Se debe ingresar el código de la escuela, el código de la materia, el nombre abreviado de la materia y el código expandido de la materia. Figura 8: Agregar una nueva materia al SISCRE. 15 Figura 9: Agregar un nuevo profesor al SISCRE. La Figura 9 muestra la interfaz para agregar un nuevo profesor al sistema. Se debe ingresar la cédula del profesor, apellidos y nombres del profesor, nacionalidad del profesor, estatus de actividad del profesor y cargo que ocupa el profesor. Figura 10: Consulta de historial de expedientes de estudiantes en SISCRES. La Figura 10 ilustra la interfaz para consultar el historial de solicitudes de un estudiante. Se realiza mediante el ingreso de la cédula de identidad del estudiante. 16 Las principales desventajas de SISCRE son las siguientes: • No posee validaciones de datos en los campos de entrada de data, por lo cual puede generarse errores en cualquier parte del programa. • Para poder utilizar el sistema, el personal encargado debe trasladarse a la Comisión de Reválidas y Equivalencias de FaCES. • Está desarrollado en un lenguaje antiguo y obsoleto, lo cual trae como consecuencia que su mantenimiento o la incorporación de nuevas funcionalidades sea complicado. • Los tramitantes no conocen el estatus de sus solicitudes, ya que no tienen contacto con el sistema. • En cuanto a interfaz, es bastante pobre, ya que toda la navegación dentro de la aplicación se realiza con menús de opciones que tienen que ser ingresadas solo por teclado. • No permite la anulación o modificación de algún proceso que se esté realizando en ninguna fase del mismo. • Algunos campos del proceso de llenado de materias equivalentes (código de la materia y unidades de crédito) deben ser llenadas con data aleatoria para poder culminar con la generación de la planilla. 2.1.2 Sistema de Equivalencias (EQU-2016) Es un sistema de gestión y monitoreo utilizado por la Facultad de Ingeniería para automatizar los procesos de registro y recuperación de expedientes relacionados con equivalencias de estudios. Fue puesto en funcionamiento en el año 1994. Fue desarrollado en Visual FoxPro y su estructura de datos es una base de datos interna. Cuenta con un ejecutable principal que despliega una serie de opciones que, al ser seleccionadas, llama a los distintos formularios que contienen las funcionalidades a del sistema. A continuación, se muestran una serie de capturas de pantalla del sistema para observar un poco su funcionamiento. 17 La Figura 11 muestra la interfaz para realizar el llenado de datos una vez que la solicitud de equivalencia llega a la CRE de la Facultad de Ingeniería. Se requiere la fecha de entrada de la solicitud, cedula del tramitante, nacionalidad, numero de la solicitud, tipo de solicitud, condición (se maneja internamente por la Facultad), escuela, universidad de procedencia, facultad de procedencia, escuela de procedencia, universidad de destino, facultad de destino y escuela de destino. Figura 12: Entrada de materias equivalentes EQU-2016. La Figura 12 ilustra la interfaz que se utiliza para ingresar las materias que fueron aprobadas como equivalentes para un tramitante. Es importante destacar que este formulario debe ser llenado por el profesor de la Sub-Comisión de Reválidas y Figura 11: Entrada de datos EQU-2016. 18 Equivalencias de la escuela a la cual fue enviado el expediente. Una vez llenado el campo MATERIA EQUIVALENTE, los campos COD (código) y UNI (unidades de crédito) se llenan automáticamente. Figura 13: Envió de materias al Consejo de Facultad EQU-2016. Una vez las materias equivalentes son agregadas al expediente del tramitante, se requiere que estas sean enviadas al Consejo de Facultad para su aprobación. En la Figura 13, podemos observar como el sistema permite seleccionar uno, algunos o todos los expedientes activos hasta la fecha para que sean impresos y enviados al Consejo de Facultad. 19 Figura 14: Envió de materias al Consejo Universitario EQU-2016. En la Figura 14 se ilustra la pantalla de envió de materias al Consejo Universitario, en el cual se agregan de forma automática la fechas en las que el expediente fue enviado y recibido de la Sub-Comisión de Equivalencias, la Comisión de Equivalencias y finalmente del Consejo de Facultad. Figura 15: Memorándum por retraso de respuesta de expedientes EQU-2016. En la Figura 15 podemos observar el formato del memorándum que genera el sistema (en caso de ser necesario) en caso de un expediente no tenga respuesta en los lapsos de tiempo establecidos. 20 Figura 16: Agregar una nueva materia al sistema EQU-2016. La Figura 16 muestra la interfaz para agregar una nueva materia al sistema. Se debe ingresar el nombre de la materia, su código y unidades de crédito. Figura 17: Agregar una nueva universidad al sistema EQU-2016. La Figura 17 ilustra la interfaz para agregar una nueva universidad al sistema. Se debe ingresar el nombre de la universidad. 21 Figura 18: Consulta de reportes de materias equivalentes EQU-2016. En la Figura 18 podemos observar la pantalla en la cual se pueden consultar los expedientes ya estudiados y aprobados por la Comisión de Reválidas y Equivalencias de la Facultad de Ingeniería. Las principales desventajas de EQU-2016 son las siguientes: • No posee documentación. • Para poder utilizar el sistema, el personal encargado debe de trasladarse a la CRE de la Facultad de Ingeniería. • Está desarrollado en un lenguaje antiguo y obsoleto, lo cual trae como consecuencia que su mantenimiento o la incorporación de nuevas funcionalidades sea complicado. • Los tramitantes no conocen el estatus de sus solicitudes, ya que no tienen contacto con el sistema. A continuación, se explican los conceptos relacionados con el desarrollo de una aplicación Web basada en una arquitectura cliente/servidor. 22 2.2 Arquitectura cliente/servidor Cliente/servidor es una arquitectura distribuida que proporciona al usuario final un acceso transparente a las aplicaciones, datos, servicios de computo o cualquier recurso que pueda ser accedido a través de una red sin importar la plataforma (Valle & Gutierrez, 2005). El funcionamiento de esta arquitectura se enfoca en que un cliente realiza una petición al servidor a través de una red de comunicación común. Una vez que el servidor recibe la petición, este la procesa y devuelve una respuesta a través de la red para que posteriormente sea visualizada por el usuario final. La principal ventaja de esta arquitectura es que se definen responsabilidades especificas a cada componente de la arquitectura, garantizando que cada computador/dispositivo pueda ejecutar sus tareas de forma especializada y así facilitar el mantenimiento del sistema. A continuación, se presenta un cuadro comparativo de ventajas y desventajas de esta arquitectura (Hernández & Martínez, 1997): Tabla 1: Ventajas y desventajas de la arquitectura cliente/servidor. Ventajas Desventajas Estructura modular, lo cual facilita la integración de nuevas tecnologías y favorece la escalabilidad de las soluciones. Costo elevado, debido a la complejidad técnica y funcional del servidor. Recursos centralizados, el servidor es el centro de la red y puede administrar los recursos que son comunes a todos los usuarios. El desempeño de la red puede afectar el rendimiento completo del sistema. Administración al nivel del servidor, los clientes requieren menos administración por solo encargarse de mostrar la data. Dependencia total del servidor, ya que si este falla, los clientes no tendrán respuesta a sus solicitudes. Red escalable, es posible quitar o agregar clientes sin afectar el funcionamiento de la red y sin la necesidad de realizar mayores modificaciones. Se requieren de mecanismos adicionales para prevenir cuellos de botella o congestionamiento por parte del servidor. En la Figura 19, podemos ver la representación gráfica de la arquitectura cliente/servidor: 23 Figura 19: Representación gráfica de la arquitectura cliente/servidor. 2.3 Aplicación Web Una aplicación web es un sistema informático que los usuarios manipulan accediendo a un servidor web a través de Internet o Intranet. Las aplicaciones web son populares debido a la practicidad del navegador como cliente ligero. La practicidad con la que se puede actualizar y mantener aplicaciones web sin distribuir e instalar software en miles de potenciales clientes es otra razón de su popularidad, sin dejar de mencionar que al utilizar el protocolo HTTP como red de comunicación entre el cliente y el servidor, se establecen estándares que no tienen que ser creador por el/los programador(es) de la aplicación (Mora, 2002). A continuación, se describen los componentes principales de la arquitectura cliente/servidor orientados a las aplicaciones web. 2.3.1 Componentes El cliente web es un programa llamado comúnmente navegador o explorador (browser en inglés), con el cual interactúan los usuarios para realizar solicitudes de recursos a un servidor web a través del protocolo HTTP. El código de las aplicaciones del cliente web suele estar escrito por código HTML y algún otro lenguaje de script propio del navegador (Mora, 2002). Los navegadores permiten la reproducción de una amplia gama de contenido multimedia (imágenes, videos o audio) para hacer más atractivas y llamativas las interfaces, por lo cual, es necesario en muchos casos, el uso de extensiones o configuraciones especiales para la reproducción de los mismos. En consecuencia, el objetivo del cliente web consiste en interpretar las páginas HTML en conjunto con los diferentes recursos que estas vengan. 24 El servidor web es un programa que está constantemente a la espera de solicitudes realizadas por los clientes web para satisfacer las necesidades de este último. Cuando un usuario entra en una página de Internet, su navegador se comunica con el servidor enviando y recibiendo datos que determinan qué es lo que ve en la pantalla, por ejemplo, una página HTML estática (Mora, 2002). Antes de que el servidor pueda generar una respuesta, es necesario que este realice la ejecución de código de algún lenguaje o tecnología del lado del servidor (PHP o Java, por ejemplo) antes de poder enviar la misma al navegador, lo cual genera automáticamente más solicitudes al servidor. En cuanto a los protocolos de comunicación que se utilizan para la comunicación entre el cliente y el servidor, se utiliza el Protocolo de Transferencia de Hipertexto (en inglés: Hypertext Transfer Protocol o HTTP) o el Protocolo Seguro de Transferencia de Hipertexto (en inglés: Hypertext Transfer Protocol Secure o HTTPS). Cuando un navegador web realiza una petición a un servidor web, dicha petición especifica al servidor que tipo de solicitud se va a realizar (comúnmente, GET o POST) y así, determinar si la petición requiere una comunicación adicional con la base de datos o sencillamente se puede responder a la solicitud con una acción predefinida. Un servidor web puede entregar los contenidos simultáneamente a varios ordenadores o navegadores web a la vez. El rendimiento y velocidad de estas respuestas va atado directamente a la cantidad de solicitudes que tenga el servidor, la velocidad de procesamiento del computador del servidor y la complejidad del contenido de la respuesta (APACHE, 2009). Las aplicaciones web se caracterizan por estar conformadas por tres niveles (ver Figura 20) 25 Figura 20: Arquitectura de una aplicación web cliente/servidor. 2.3.2 Ventajas de las aplicaciones web La principal ventaja de las aplicaciones web es que debido a que son visualizadas a través de navegadores, la gestión de código del lado del cliente se reduce considerablemente, ya que todos los cambios realizados en la aplicación (tanto de interfaz como de funcionalidad) son realizados del lado del servidor web, garantizando que este cambio será visible inmediatamente en todos los clientes que accedan a la aplicación (Mora, 2002). En cuanto a las desventajas, al igual que cualquier aplicación que se base en una arquitectura cliente/servidor, el punto de fallo o eslabón débil del sistema radica en el servidor, debido a que, si este no tiene los mecanismos de seguridad, recursos y configuraciones adecuadas, los usuarios pueden tener una mala experiencia al solicitar recursos de este. En la Tabla 2, se detallará un poco más a fondo las ventajas y desventajas de utilizar una aplicación web. 26 Tabla 2: Ventajas y desventajas de las aplicaciones web. Ventajas Desventajas Las aplicaciones web no requieren ser instaladas en las computadoras de los clientes, ya que estas se visualizan a través de los exploradores. Si no se cuenta con la seguridad adecuada en el servidor, los datos podrían quedar expuestos a cualquier ataque. Son multiplataforma, ya que solo se necesita de un navegador para poder realizar solicitudes al servidor. El rendimiento en general de la aplicación se puede ver degradado si no se cuenta con mecanismos adecuados para el manejo de solicitudes simultaneas. Pueden se puede acceder a ellas desde cualquier computador que cuente con una conexión a internet. El sistema es totalmente dependiente de una red de comunicación para su funcionamiento. Los clientes no requieren actualizaciones, ya que las actualizaciones son realizadas del lado del servidor. 2.4 Patrón de diseño MVC (Modelo Vista Controlador) MCV es un patrón de arquitectura para el diseño de aplicaciones que separa los componentes de la aplicación en tres niveles: interfaces de usuario, lógica de control y lógica de negocio. Al tener la lógica del negocio separada de las interfaces de usuario, se facilita la evolución de cada uno de estos componentes y se incrementa considerablemente la reutilización de código y la flexibilidad al momento de reutilizar los mismos (Mestras Pavon, 2008). A continuación, se describen las funcionalidades de cada capa en MCV (Romero Fernandez & Gonzales Diaz, 2012): • Modelo: es la capa que representa los datos de la aplicación y la lógica del negocio. Además, se encarga de gestionar todos los accesos a los datos: consultas, inserciones, modificaciones o eliminaciones. • Vista: es la capa encargada desplegar la información del modelo a los usuarios finales. 27 • Controlador: es la capa encargada de gestionar las ordenes o interacciones del usuario en la vista sobre el modelo. Es el intermediario entre la vista y el modelo. 2.4.1 Funcionamiento del patrón MVC A continuación, la Figura 21 describe el flujo de interacción que realiza cada una de las capas de MVC para su correcto funcionamiento (Gamma, Helm, Johnson, & Vlissides, 2002): 1. El usuario genera un evento al interactuar con la vista. 2. El controlador recibe dicha petición de la vista y gestiona la misma. 3. El controlador envía al modelo la petición, posiblemente modificándolo de forma adecuada a la acción solicitada por el usuario. 4. El controlador delega a los objetos de la vista la tarea de desplegar la interfaz de usuario, generando la interfaz apropiada de acuerdo a la solicitud que se hizo. 5. La interfaz de usuario espera nuevas interacciones del usuario, comenzando el ciclo nuevamente. Figura 21: Flujo del patrón MVC. 28 2.5 Herramientas tecnológicas para el desarrollo de aplicaciones web A continuación, se describen las tecnologías tanto del lado del cliente, como del lado del servidor, necesarias para el desarrollo de un módulo web. Como, por ejemplo, lenguajes de programación, scripting, estilo, marcado, SMBD, entre otros. 2.5.1 Tecnologías del lado del cliente Este tipo de tecnologías están relacionadas a como los navegadores manejan y procesan los efectos y funcionalidades que se emplean para mostrar de forma agradable y entendible la información a los usuarios. Estas tecnologías se enfocan en la presentación de las páginas en sí, es decir, control de ventanas, presentaciones en las que se pueden mover objetos por la página, control y validación de formularios, cálculos, entre otros. A continuación, se describen una serie de tecnologías del lado del cliente. 2.5.1.1 HyperText Markup Language (HTML) En español, Lenguaje de Marcas de Hipertexto, es un lenguaje de etiquetas que se emplea para dar formato a los sitios web accedidos a través de los navegadores. Estos últimos son capaces de interpretar las etiquetas que conforman una página web para para mostrarlas con el formato y la organización deseada (Mora, 2002). HTML es un estándar en constate evolución para el desarrollo de páginas web, ya que desde 1996 la World Wide Web Consortium (W3C), que es la organización que define la mayoría de los estándares para el desarrollo web, se ha encargado de mejorar y generar constantes revisiones de este lenguaje (HTML 3.0’, HTML 3 y HTML 4) para ampliar la gama de etiqueta que este posee e ir depurando errores tras cada revisión. (Asensio & Menéndez, s.f). La versión más actual es HTML 5, la cual provee características como la inclusión de mucho más sencilla de videos en las páginas web, mejoras de contenido, etiquetado semántico, nuevas características para los formularios, entre otras. 29 Figura 22: Ejemplo de un documento HTML. Para generar código HTML no se necesita la instalación de una aplicación específica, basta con tener un editor de texto para crear y editar este tipo de documentos. Sin embargo, existen herramientas especializadas que poseen una interfaz que permite a los programadores o diseñadores crear código HTML automáticamente, como lo son Dreamweaver de Macromedia de Adobe o inclusive marcos de trabajo (frameworks) escritos en lenguaje de alto nivel como Wordpress. 2.5.1.2 Cascading Style Sheets (CSS) En español, Hojas de estilo en cascada, es un lenguaje de estilos que sirve para crear y definir la presentación de lenguajes de marcado o etiquetas como HTML. Desde 1996, la W3C ha considerado este lenguaje como esencial para el desarrollo de páginas web, ya que CSS permite separar la definición de los contenidos y sus aspectos de presentación en los navegadores, obligando a crear documentos HTML con significado semántico (Mora, 2002). CSS al igual que HTML, es un estándar en constante evolución, ya que la W3C se ha dado a la tarea de mejorar y generar constantes revisiones (CSS 1 y CSS 2) para ampliar la personalización de aspectos como fuentes, alineación, posicionamiento de etiquetas, colores, dimensiones e incluso, el soporte y visualización del mismo documento en dispositivos con características físicas (resoluciones de pantalla) distintos (Asensio & Menéndez, s.f). 30 Su última versión es CSS 3, la cual abre un nuevo abanico de posibilidades para la creación de páginas web mucho más atractivas para el usuario. Dentro de las nuevas características que ofrece tenemos los bordes redondeados, degradados, sombras, animaciones, entre otras. Figura 23: Ejemplo de un documento CSS. Usando HTML, se puede definir el estilo de cada una de las etiquetas que componen el documento, agregando código adicional a cada una de las etiquetas y haciendo un poco engorroso el proceso de lectura del documento para los programadores. Con la incorporación de CSS a las páginas web, se puede tener un documento separado en el cual podemos definir las reglas y estilos de presentación en diferentes dispositivos capaces de mostrar contenido web, además de mejorar considerablemente el mantenimiento de las páginas web en general. 2.5.1.3 JavaScript Es un lenguaje de programación tipo script (secuencia de instrucciones) para la creación de páginas web dinámicas que permiten una mayor interacción con el usuario. Está basado sintácticamente en lenguaje C y es interpretado, por ende, no es necesario compilar los programas para ejecutarlos (pueden ser probados en el navegador sin necesidad de procesos intermedios) (Pavón Mestras, 2012-2013). JavaScript fue declarado como estándar del European Computer Manufacturers Association (ECMA) en 1997, poco tiempo después también fue estandarizado por la International Standard Organization (ISO). En sus inicios, debido a la estructura de objetos que implementaban los navegadores de la época para representar los 31 documentos HTML, no se lograba ajustar con el estándar JavaScript, lo cual generaba muchos problemas de compatibilidad. Para solventar esto, la W3C público un nuevo modelo de objetos para representar el contenido de los documentos HTML en los navegadores llamado DOM (Document Object Model), que fue incorporado por la mayoría de los navegadores para que se trabajase bajo un mismo modelo de objetos que si se adaptase al estándar (Navarrete, 2006-2007). JavasScript es un lenguaje mayormente utilizado para el manejo de interacciones de páginas web. Normalmente, consiste en crear un conjunto de funciones que son llamadas desde el propio HTML o en un documento separado, cuando algún evento sucede. De ese modo, se pueden desencadenar efectos como que un botón cambie de forma al pasar el ratón por encima, abrir una nueva ventana, poder mostrar/ocultar un texto, desplazamiento de imágenes, burbujas de información, operaciones matemáticas o alguna otra acción que sea atractiva y funcional para el usuario. Figura 24: Ejemplo de un código JavaScript. Actualmente, existen un gran número de bibliotecas basadas en este lenguaje, como lo son jQuery, Mootols, Ajax o Foundation, que explotan las características inherentes de JavaScript enfocándose en un punto específico, como pueden ser el manejo de páginas responsive, manejo de fechas o calendarios, gestión de video, interfaces de usuario, manipulación de datos, entre otros. 32 2.5.2 Tecnologías del lado del servidor Hasta el momento, se han descrito distintas tecnologías cuyo objetivo es la presentación de la información de una forma agradable y comprensible para los usuarios finales. En cuanto al procesamiento de la información, existe otro conjunto de lenguajes que se ejecutan e interpretan sobre el servidor para dar respuesta a las peticiones de los usuarios, destacando funciones como accesos a bases de datos u operaciones que no pueden ser realizadas en el código del cliente propiamente. Para el desarrollo del Módulo de Gestión de Equivalencia de Estudios, se realizó un estudio previo de las distintas tecnologías del lado del servidor y fueron seleccionadas las siguientes (Akchar, 2018): 2.5.2.1 Apache Apache es un servidor de páginas web de código abierto y de libre distribución para su uso comercial, desarrollado por la Apache Software Foundation (ASF) en 1999. Es multiplataforma no solo a nivel de sistemas operativos, sino también a nivel de lenguajes de programación, siendo capaz de compilar lenguajes como PHP, Perl, Python, entre otros. Gracias a su diseño modular, permite a los desarrolladores web la capacidad de crear configuraciones personalizadas dependiendo de sus necesidades para la realización de alguna tarea específica (Apache, 2007). 2.5.2.2 PHP Es un lenguaje de tipo script e interpretado el cual puede incrustarse en los documentos HTML y ejecutar sus instrucciones antes de servir las páginas al cliente, garantizando que este último solo vea el resultado que se produce y no el código en sí. Fue creado originalmente en 1995 por Rasmus Lerdorf, pero como PHP está desarrollado en política de código abierto, a lo largo de su historia ha tenido muchas contribuciones de otros desarrolladores, ampliando más sus funcionalidades con el paso del tiempo y teniendo una gran comunidad de usuarios (Mariño Vázquez, 2008). Dentro de sus principales características tenemos (Mariño Vázquez, 2008): 33 • Multiplataforma: es capaz de ser utilizado en cualquier plataforma con el mismo código base, ya que los scripts son ejecutados de manera independiente del SO. • Fácil de usar: su sintaxis es muy similar a la de lenguaje C, por lo cual los desarrolladores con experiencia en este tipo de lenguajes se sentirán más cómodos y tendrán un aprendizaje mucho más rápido. • Múltiples extensiones: cuenta con muchas extensiones del lenguaje que permiten utilizar nuevas bases de datos, protocolos, enlaces a librerías, entre otras. • Conexión con bases de datos: puede interactuar con muchos motores de bases de datos como MySQL, PostgresSQL, Oracle, SQL Server y muchos otros, siempre que se tenga el Open DataBase Connectivity (ODBC) adecuado. • Licencia de código abierto: el código fuente de PHP es libre de ser descargado e inspeccionado por sus usuarios. • Gran comunidad de apoyo: PHP es de código abierto, por lo tanto, tiene una gran comunidad que apoya su desarrollo en colaboración. Existen multitud de páginas, listas de correo y foros de debate cuyo tema de conversación es el manejo de este lenguaje de programación. En la actualidad, existen un gran número de frameworks que facilitan el uso y desarrollo de sitios web desarrollados con PHP. El seleccionado para el desarrollo del Módulo de Gestión de Equivalencias de Estudio fue Laravel (Akchar, 2018). Laravel es un marco de trabajo con una curva de aprendizaje corta, rápido para el desarrollo de aplicaciones web incorporando el patrón MVC. Fue desarrollado por Taylor Otwell en 2011 utilizando componentes de Symfony y tiene una gran influencia de frameworks como Ruby on Rails, Sinatra y ASP.NET MVC. (Organization, 2018) 34 Este framework trabaja bajo las siguientes filosofías: • Desarrollar código PHP de forma elegante y simple, evitando el “código espagueti”. • Brindar a los desarrolladores el uso de una sintaxis elegante y expresiva, combinando características de otros frameworks como Ruby on Rails, Sinatra y ASP.NET. • Actualizar sus funciones a medida que las versiones de PHP avanzan. • Sencillez a la hora de reutilizar código. En cuanto a la arquitectura de aplicación, Laravel está orientado al patrón MVC de forma flexible, instando a los desarrolladores a mantener de forma separada lo que son las vistas, los controladores y el modelo. A continuación, se describirá como sería la correspondencia de MCV con Laravel: • Modelo: proporciona un sistema de mapeo de datos relacional (ORM) llamado Eloquent basado en active record. Eloquent no es de uso obligatorio, ya que también se dispone de otros recursos que facilitan la manipulación de los datos. • Vista: proporciona un sistema de plantillas llamado Blade que permite extender plantillas creadas y secciones en otras vistas en las cuales también tendremos accesibles las variables y con posibilidad de utilizar código PHP en ellas. • Controlador: proporciona la clase Controller, la cual permite realizar la comunicación del modelo y las vistas de forma rápida a través de la definición de métodos que contendrán la lógica de la aplicación. Adicionalmente, Laravel utiliza un tipo de controlador llamado Middleware que se ejecutan antes y después de realizar peticiones a servidor con el fin de realizar un tipo de acción específica, como por ejemplo alguna validación. Adicional a esto, Laravel proporciona una interfaz de línea de comandos (CLI) llamado Artisan. Artisan está basado en el componente Console de Symfony y nos ofrece un conjunto de comandos que nos pueden ayudar a realizar diferentes tareas durante el 35 desarrollo, como crear una migración, crear un modelo, crear un controlador, crear una vista, entre otras. A continuación, se presenta un resumen con las características más destacables de PHP a modo de resumen, según todo lo descrito hasta ahora (ver Tabla 3): Tabla 3: Resumen PHP Variables/Lenguaje PHP Definición Lenguaje de tipo script e interpretado el cual puede incrustarse en los documentos HTML y ejecutar sus instrucciones antes de servir las páginas al cliente. Objetivo Promover el desarrollo de páginas web dinámicas rápidamente. Orden de código Código intrincado y de difícil lectura. Además, es fácil de crear “código espagueti” si no se utiliza un framework. Ventajas - Multiplataforma - Fácil de usar - Mutiles extensiones - Fácil de instalar - Código abierto -Gran comunidad de apoyo Desventajas - La orientación a objetos está incluida a la fuerza, ya que en un principio no se concibió para esto - No se suelen seguir estándares de buenas prácticas de programación - Si no se utiliza un framework donde se sigan un conjunto de buenas prácticas, el código puede quedar desordenado, difícil de leer por quedar incrustado dentro de HTML 36 2.5.2.3 Sistemas Manejadores de Bases de Datos (SMBD) Un Sistema Manejador de Base de Datos son un conjunto de programas que acceden a una colección de datos interrelacionados, con el fin de proporcionar una vía de almacenamiento y recuperación de la data de una forma práctica (Silberschatz, Korth, & Sudarshan, 2002). Estos sistemas sirven de interfaz entre los usuarios y sus datos, ya que se encargan de toda la lógica referente al almacenamiento y acceso de la data, garantizando que los usuarios solo se preocupen en implementar sus modelos de datos y en que desean consultar en un instante de tiempo determinado. En cuanto a los tipos de SMBD, existen los que se ajustan a las bases de datos relacionales y los que se ajustan a las bases de datos no relacionales (NoSQL). En este apartado, solo se trabajará con los SMBD relacionales. La interacción de los usuarios con los SMDB relacionales se realiza a través de un lenguaje de consulta estructurada (SQL), el cual provee un amplio conjunto de instrucciones para la creación, modificación, manipulación de la data almacenada en una base de datos relacional. Adicionalmente, los SMDB relacionales están diseñados para almacenar grandes volúmenes de información, proporcionando, además, los mecanismos de seguridad necesarios para la información almacenada, en caso de caídas del sistema o intentos de accesos sin autorización. Actualmente, existen un gran número de SMBD, muchos de ellos de software privativo como: Oracle Enterpise Edition, Microsoft SQL Server, IBM Informix, Sybase, entre otros. Por otra parte, también tenemos los de software libre como: FireBird, Oracle Express Edition, MySQL, PostgreSQL, entre otros. Luego de haber analizado previamente las distintas opciones de SMBD (Akchar, 2018), se seleccionó MySQL como el SMBD a utilizar para el desarrollo del Módulo de Gestión de Equivalencia de Estudios. 37 MySQL es un sistema SMBD relacional de código abierto, multiplataforma, multihilo y multiusuario desarrollado por MySQL AB. Fue escrito en lenguaje C y C++ y se destaca por su gran adaptación a los distintos entornos de desarrollo, permitiendo la interacción con lenguajes como PHP, Ruby y Java. Actualmente pertenece a Oracle (Sánchez, 2004). Dentro de sus características principales tenemos: • Soporta un ambiente cliente/servidor. • Bajo costo en requerimientos para la elaboración de bases de datos. • Facilidad de configuración e instalación. • Las funciones SQL están implementadas usando una librería altamente optimizada y deben ser tan rápidas como sea posible. • Cuenta con librerías para lenguajes como C, C++, Eiffel, Java, Perl, PHP, Ruby, entre otros. A continuación, se presenta un resumen sobre las características más destacables de MySQL a modo de resumen, según todo lo descrito sobre este SMDB (ver Tabla 4): Tabla 4: Resumen MySQL Variables/SMBD MySQL Definición Es un sistema SMBD relacional de código abierto, multiplataforma, multihilo y multiusuario desarrollado por MySQL AB, escrito en lenguaje C y C++. Características - Soporta un ambiente cliente/servidor. - Bajo costo en requerimientos - Facilidad de configuración e instalación. - Las funciones SQL están implementadas usando una librería altamente optimizada. - Cuenta con librerías para lenguajes como C, C++, Eiffel, Java, Perl, PHP, Ruby, entre otros. Empresas reconocidas Youtube, Twitter, Facebook, Google. 38 CAPITULO III: MARCO METODOLÓGICO 3.1 Metodologías ágiles vs Metodologías tradicionales Son un marco metodológico de trabajo que se enfoca en dar una mayor importancia a las personas involucradas en el proyecto en vez de a los procesos propios del desarrollo. Estas metodologías se caracterizan por el uso de técnicas que agilizan el desarrollo del software, así como de una mayor flexibilidad para adaptarse a los cambios en los requisitos del proyecto. (Carvajal, 2008). El término “ágil” aplicado a las metodologías de desarrollo del software, nace como resultado de una reunión celebrada en febrero de 2011 en Utah-EEUU, cuyo objetivo era definir cuáles eran los valores y principios que se deben tomar en cuenta en el desarrollo del software para adaptarse de forma efectiva a los cambios que se pudiesen generar a lo largo de un proceso de desarrollo, ya que en las metodologías tradicionales era complicado tomar en cuenta un cambio o imprevisto de último momento (Letelier & Sánchez, 2003). Luego de la celebración de esta reunión, se creó The Agile Alliance (La Alianza Ágil), una organización sin fines de lucro cuyo fin es promover los conceptos relacionados con los desarrollos de software ágiles. Esta organización creo un documento que resume la filosofía ágil, llamado El Manifiesto Ágil en el cual se valora lo siguiente (Amaro & Valverde, 2007): • Al individuo y las interacciones del equipo de desarrollo sobre el proceso y las herramientas. Es mejor crear el equipo y que éste configure su propio entorno de desarrollo en base a sus necesidades. • Desarrollar software que funciona más que conseguir una buena documentación. La regla por seguir es “no producir documentos a menos que sean necesarios de forma inmediata para tomar una decisión importante”. • La colaboración con el cliente más que la negociación de un contrato. Se propone que exista una interacción constante entre el cliente y el equipo de desarrollo. • Responder a los cambios más que seguir estrictamente un plan. La habilidad de responder a los cambios que puedan surgir a lo largo del proyecto (cambios en los 39 requisitos, en la tecnología, en el equipo, entre otros.) determina también el éxito o fracaso del mismo. Estos valores inspiraron doce (12) principios fundamentales del manifiesto. Los principios son (Amaro & Valverde, 2007): i. La prioridad es satisfacer al cliente mediante tempranas y continuas entregas de software que le aporte un valor. ii. Dar la bienvenida a los cambios. Se capturan los cambios para que el cliente tenga una ventaja competitiva. iii. Entregar frecuentemente software que funcione desde un par de semanas a un par de meses, con el menor intervalo de tiempo posible entre entregas. iv. La gente del negocio y los desarrolladores deben trabajar juntos a lo largo del proyecto. v. Construir el proyecto en torno a individuos motivados. Darles el entorno y el apoyo que necesitan y confiar en ellos para conseguir finalizar el trabajo. vi. El diálogo cara a cara es el método más eficiente y efectivo para comunicar información dentro de un equipo de desarrollo. vii. El software que funciona es la medida principal de progreso. viii. Los procesos ágiles promueven un desarrollo sostenible. Los promotores, desarrolladores y usuarios deberían ser capaces de mantener una paz constante. ix. La atención continua a la calidad técnica y al buen diseño mejora la agilidad. x. La simplicidad es esencial. xi. Las mejores arquitecturas, requisitos y diseños surgen de los equipos organizados por sí mismos. xii. En intervalos regulares, el equipo reflexiona respecto a cómo llegar a ser más efectivo, y según esto ajusta su comportamiento. Estos principios son características que diferencian un proceso ágil de uno tradicional. Los dos primeros principios son generales y resumen el espíritu ágil. El resto tienen que ver con el proceso a seguir y con el equipo de desarrollo (Amaro & Valverde, 2007). 40 En consecuencia, vemos que las metodologías ágiles se enfocan más en el capital humano y en la calidad del producto que se pretende entregar que en la documentación y procesos propios del desarrollo del software, siempre teniendo presente la satisfacción y opinión del cliente. Luego de haber analizado previamente distintas metodologías ágiles (Akchar, 2018), se seleccionó el Proceso Unificado Ágil (AUP) como metodología para el desarrollo del Módulo de Gestión de Equivalencia de Estudios adaptándolo a las necesidades de este. 3.2 Proceso Unificado Ágil (AUP) El Proceso Unificado Ágil (AUP), es una forma simplificada del Proceso Unificado Rotacional (RUP) que fue desarrollada por Scott Ambler en septiembre del 2005. Se caracteriza por estar dirigido por casos de uso, centrado en la arquitectura y por ser iterativo e incremental. Se enfoca en un simple desarrollo de software utilizando técnicas y conceptos ágiles, como lo son el desarrollo orientado a pruebas, administración de cambios ágiles y la refactorización de base de datos para mejorar la productividad (Cordero, s.f). 3.2.1 Filosofía de AUP AUP se basa en los siguientes principios: • El personal sabe lo que está haciendo: las personas relacionadas con el proyecto no necesariamente tienen que leer toda la documentación realizada, basta con que se facilite una explicación clara y puntual de lo que se debe hacer y entender. Sin embargo, siempre debe de estar presente la documentación detallada en caso de que algún miembro desee leerla. • Simplicidad: las descripciones deben de ser consistentes y concisas. • Agilidad: se ajusta a los valores y principios la Alianza Ágil. • Centrar en actividades de alto valor: la atención debe centrarse en aquellas actividades cuyo valor para el desarrollo sea esencial. 41 • Herramientas independientes: AUP permite el uso de cualquier uso de herramientas. Sin embargo, se recomienda utilizar herramientas que resuelvan los problemas de forma acertada y sin agregar mayores impedimentos. • Adaptación para satisfacer las necesidades: basándonos en el punto anterior, en AUP, no se considera necesario la compra o practica de cursos especializados para adaptarlos a la metodología. 3.2.2 Técnicas ágiles que incluye AUP Algunas de las técnicas ágiles aplicadas en AUP son las siguientes: • Desarrollo dirigido por pruebas: es un enfoque evolutivo para el desarrollo que combina el uso de test-first, en español prueba primero, donde de escribe una prueba antes de desarrollar el código suficiente para cumplir con esa prueba, y refactorización. • Gestión de cambios ágil: se aceptan los cambios que puedan surgir en los requerimientos del sistema durante el desarrollo. • Refactorización de base de datos: se permite realizar cambios en el esquema de base de datos para mejorar su diseño, manteniendo su semántica de comportamiento y de información. • Modelado ágil: se basa en la creación de modelos ágiles lo suficientemente buenos para impulsar los esfuerzos generales del desarrollo. 3.2.3 Fases de AUP En AUP, se establecen 4 fases bien definidas para lograr los objetivos propuestos: • Iniciación: el objetivo de esta fase es generar una comprensión común entre el cliente y el equipo de desarrollo en cuanto al alcance de nuevo sistema. • Elaboración: el objetivo de esta fase es que el equipo de desarrollo se empape de los requisitos del sistema y analizar si son viables con la arquitectura seleccionada. • Construcción: el sistema es desarrollado y probado por completo en el ambiente de desarrollo. 42 • Transición: El objetivo es realizar pruebas, pulir los últimos detalles del producto para luego desplegar el sistema en un ambiente de producción sin fallas. Cada fase de AUP se encuentra reflejada en la Figura 18, incluyendo los objetivos y tareas fundamentales de cada una, también los diferentes hitos por los que pasa el proyecto, como lo son: objetivos del ciclo de vida, arquitectura del ciclo de vida, capacidad de operación inicial y lanzamiento del producto. Cada hito señala el final de una fase y el equipo de trabajo debe considerar tener una revisión de hitos. Figura 25: Fases e hitos de AUP. Copyright 2005 Scott W. Ambler. Traducido y adaptado por Viviana Pérez. 43 A continuación, se presenta una tabla a modo de resumen de la metodología AUP según todo lo descrito anteriormente: Tabla 5: Resumen AUP. Variables/Metodología AUP Definición Es una forma simplificada del Proceso Unificado Rotacional (RUP) que fue desarrollada por Scott Ambler en septiembre del 2005. Se caracteriza por estar dirigido por casos de uso, centrado en la arquitectura y por ser iterativo e incremental. Se enfoca en un simple desarrollo de software utilizando técnicas y conceptos ágiles. Filosofía - El personal sabe lo que está haciendo - Simplicidad - Agilidad - Centrar en actividades de alto valor -Herramientas independientes - Adaptación para satisfacer las necesidades Roles - Modelador ágil - Desarrollo - Administrador del proyecto - Involucrado - Administrador de base de datos ágil - Desplegador - Examinador - Equipo de pruebas - Documentador técnico - Administrador de configuración - Especialista del proceso - Especialista en herramientas Fases - Iniciación - Elaboración - Construcción -Transición 44 Artefactos - Sistema - Código fuente - Pruebas de regresión - Script de instalación - Documentación del sistema - Notas de versión - Modelado de requerimientos - Modelo de diseño Tiempos de entrega Versiones de desarrollo cada dos o tres semanas, mientras que las versiones de producción cada seis, nueve o doce meses. 45 CÁPITULO IV: MARCO APLICATIVO En este capítulo se explican los pasos que se siguieron para la implementación del sistema propuesto como solución del presente TEG, haciendo una adaptación de la metodología AUP. Este módulo permite automatizar algunas tareas del proceso de equivalencia de estudios y minimizar los costos relacionados a la generación de planillas de solicitud de equivalencia de estudio y comprobantes de asignaturas equivalentes. También, este sistema busca reducir el factor de error humano en el trámite de documentos de solicitudes de equivalencia de estudios, que son los principales factores de retraso de dicho proceso. Como primer paso para realizar esta implementación, se definieron las fases en las cuales se abarcan todos los requerimientos del proyecto, tomando como referencia lo establecido en la metodología de desarrollo de software AUP, la cual fue seleccionada ya que es una metodología con fases, actividades y artefactos bien definidos en todas las etapas del desarrollo del software. 4.1 Fases del proyecto El proceso de desarrollo se dividió en 4 fases, según lo establecido en la metodología seleccionada. A continuación, se presenta el plan de proyecto divido por fases: 46 Tabla 6: Planificación Fase I – Iniciación Actividades Tipo de actividad Artefactos Días Fecha de inicio Definición de requerimientos funcionales y no funcionales Modelado Descripción de requerimientos funcionales y no funcionales 3 10/01/2019 Análisis de los perfiles de usuario Modelado Descripción de perfiles de usuario del sistema 1 14/01/2019 Modelado de requerimientos funcionales Modelado Modelo de casos de uso 4 15/01/2019 Instalación y preparación del ambiente de desarrollo Modelado Pruebas Descripción de tecnologías instaladas 1 19/01/2019 Tabla 7: Planificación Fase II – Elaboración Actividades Tipo de actividad Artefactos Días Fecha de inicio Pruebas en el ambiente de desarrollo Pruebas - 1 20-01-2019 Definición de guía de estilos Modelado Guía de estilos 1 21/01/2019 Definición de prototipos de interfaces de usuario Modelado Prototipos 2 22/01/2019 Definición del modelo de base de datos Modelado Modelo entidad- relación Base de datos 4 24/01/2019 47 Tabla 8: Planificación Fase III – Construcción Actividades Tipo de actividad Artefactos Días Fecha de inicio Registrar solicitantes en el sistema Implementación Módulo de registro de solicitantes 2 28/01/2019 Iniciar sesión y ¿olvidó su contraseña? Implementación Módulo de inicio de sesión 3 30/01/2019 Registrar, modificar, eliminar, consultar y generar solicitudes de equivalencia Implementación Módulo de solicitudes 5 02/02/2019 Registrar, modificar, eliminar, consultar y generar comprobantes de asignaturas equivalentes Implementación Módulo de comprobantes 6 07/02/2019 Registrar, modificar, eliminar y consultar universidades Implementación Módulo de universidades 3 13/02/2019 Registrar, modificar, eliminar y consultar facultades Implementación Módulo de facultades 3 16/02/2019 Registrar, modificar, eliminar y consultar escuelas Implementación Módulo de escuelas 3 19/02/2019 Registrar, modificar, eliminar y consultar carreras Implementación Módulo de carreras 3 22/02/2019 Registrar, modificar, eliminar y consultar asignaturas Implementación Módulo de asignaturas 3 25/02/2019 Registrar, modificar, eliminar y consultar períodos académicos Implementación Módulo de períodos académicos 3 28/02/2019 Registrar, modificar, eliminar y consultar usuarios Implementación Módulo de usuarios 3 02/03/2019 48 Tabla 9: Planificación Fase IV – Transición Actividades Tipo de actividad Artefactos Días Fecha de inicio Revisión general de la aplicación Pruebas - 6 05/03/2019 Corrección de defectos Implementación Sistema 10 11/03/2019 Ajustes de documentación del sistema Modelado Ajustes de todos los artefactos generados 4 21/03/2019 Validar documentación del sistema Pruebas - 2 25/03/2019 Pruebas de aceptación Pruebas Encuestas y resultados de las pruebas 10 27/03/2019 4.1.1 Fase I: Iniciación En esta fase se realizaron las siguientes actividades: definición de los requerimientos funcionales y no funcionales del sistema, análisis de los perfiles de cada usuario involucrado en el proceso de equivalencia de estudios, modelado de los requerimientos funcionales a través de un modelo de casos de uso y por último la instalación y preparación del ambiente de desarrollo. 4.1.1.1 Requerimientos funcionales • Registrar solicitantes en el sistema. • Iniciar sesión y cambiar de contraseña para usuarios registrados en el sistema. • Registrar, ver, modificar, y eliminar solicitudes de equivalencia. • Consultar solicitudes de equivalencia por número de la solicitud, cédula de identidad del solicitante, fecha de la solicitud, universidad de procedencia de la solicitud o universidad destino de la solicitud. • Generar solicitudes de equivalentes en formato Portable Document Format (PDF) y hojas tamaño carta. 49 • Registrar, ver, modificar o eliminar comprobantes de asignaturas equivalentes. • Consultar comprobantes de asignaturas equivalentes por número de comprobante, número de solicitud, cédula del solicitante, número de Consejo Universitario, universidad de procedencia o universidad de destino. • Generar los comprobantes de asignaturas equivalentes en formato PDF y hojas tamaño carta. • Registrar, ver, modificar o eliminar universidades. • Consultar universidades por procedencia (nacional o extranjera). • Registrar, ver, modificar o eliminar facultades. • Consultar facultades por universidad. • Registrar, ver, modificar o eliminar escuelas. • Consultar escuelas por universidad o facultad. • Registrar, ver, modificar o eliminar carreras. • Consultar carreras por universidad, facultad o escuela. • Registrar, ver, modificar o eliminar asignaturas. • Consultar asignaturas por universidad, facultad, escuela, carrera o código de la asignatura. • Registrar, ver, modificar o eliminar periodos académicos. • Consultar periodos académicos por facultad. • Registrar, ver, modificar o eliminar usuarios para cada uno de los tipos que existe en el sistema (solicitante, personal interno de revalidas y equivalencias, y personal administrativo de revalidas y equivalencias) • Consultar usuarios por cédula, tipo de usuario o facultad. 4.1.1.2 Requerimientos no funcionales • Usabilidad: las interfaces de la aplicación se diseñan con el fin de ser intuitivas y fáciles de usar. • Escalabilidad: el rendimiento de la aplicación no debe verse degradado por el número de usuarios que la utilicen. 50 • Estabilidad: en caso de ocurrir alguna falla en la aplicación, esta debe ser capaz de enviar un mensaje de error adecuado que indique al usuario el motivo de la falla. • Seguridad: por la naturaleza de la aplicación, no se deben permitir accesos no autorizados, por lo cual es necesario implementar mecanismos de seguridad para garantizar que la data sea accedida solo por aquellas personas autorizadas. 4.1.1.3 Perfiles de usuario El sistema cuenta con varios usuarios clasificados según las acciones que pueden realizar: • Solicitante: persona que realizara solicitudes de equivalencia de estudio al Departamento de Reválidas y Equivalencias de una Facultad. • Personal interno de reválidas y equivalencias (PIRE): personal encargado de realizar algunos de los procesos de gestión de universidades/institutos y solicitudes/comprobantes de asignaturas equivalentes. • Personal administrativo de reválidas y equivalencias (PARE): personal encargado de inspeccionar las acciones del PIRE. Es el encargado de realizar el registro de usuarios (Solicitantes o PIRE). Puede realizar todas las acciones del PIRE y algunos procesos adicionales de la gestión de universidades/institutos y solicitudes/comprobantes de asignaturas equivalentes. • Jefe reválidas y equivalencias (JRE): es el Jefe del Departamento de Reválidas y Equivalencias central. Es el encargado de registrar por Facultad al PARE. Puede realizar todas las acciones del sistema. 51 4.1.1.4 Modelo de casos de uso El modelo de casos de uso permite especificar las funcionalidades y el comportamiento del sistema mediante su interacción con usuarios u otros sistemas. Además, con este modelo se llega a un lenguaje estándar que es entendido tanto por los expertos como por otros usuarios y proporciona el análisis del dominio de la aplicación. A continuación, se presenta el modelo de casos de uso del sistema por perfil de usuario y su respectiva especificación: Figura 26: Diagrama de casos de uso – perfil solicitante. 52 Figura 27: Diagrama de casos de uso – perfil PIRE 53 Figura 28: Diagrama de casos de uso – perfil PARE y perfil JRE. 54 Figura 29: Diagrama de casos de uso – perfiles de usuario. 55 Tabla 10: Caso de uso – Registrar usuario. Identificador y nombre UC1: registrar usuario. Actor(es) Solicitante Descripción Permite al actor registrarse como solicitante en el sistema. Flujo básico 1. El actor selecciona la opción “Registro de usuario”. 2. El actor ingresa los datos personales solicitados. 3. El actor presiona el enlace enviado a su correo electrónico para continuar con el proceso. 4. El actor ingresa los datos personales y de contacto solicitados para culminar el proceso de registro. 4. El sistema verifica los datos en la base de datos. 5. El sistema muestra un mensaje indicando que el registro fue exitoso. Flujo alterno 4. El sistema muestra un mensaje indicando que el registro no fue exitoso y los motivos de dicho resultado. Precondición Postcondición Solicitante registrado en el sistema exitosamente. Puntos de extensión Tabla 11: Caso de uso – Iniciar sesión. Identificador y nombre UC2: iniciar sesión. Actor(es) Solicitante, PIRE, PARE y JRE. Descripción Permite al actor iniciar sesión en el sistema. Flujo básico 1. El actor ingresa su cédula y contraseña. 2. El actor selecciona la opción “Iniciar sesión”. 3. El sistema verifica los datos en la base de datos. 4. El sistema muestra la página principal según el tipo de actor en señal de que los datos ingresados fueron correctos. Flujo alterno 4. El sistema muestra un mensaje indicando que los datos ingresados son incorrectos. Precondición - El actor debe de estar registrado en el sistema. Postcondición Sesión iniciada exitosamente. Puntos de extensión 56 Tabla 12: Caso de uso – Recuperar contraseña. Identificador y nombre UC3: recuperar contraseña. Actor(es) Solicitante, PIRE, PARE y JRE. Descripción Permite al actor recuperar su contraseña. Flujo básico 1. El actor selecciona la opción “¿Olvidó su contraseña?”. 2. El actor ingresa el correo con que se registró en el sistema. 3. El actor presiona el enlace enviado a su correo electrónico para continuar con el proceso. 4. El actor ingresa su nueva contraseña y su confirmación. 5. El sistema verifica los datos en la base de datos. 6. El sistema muestra un mensaje indicando que el cambio de contraseña fue exitoso. Flujo alterno 6. El sistema muestra un mensaje indicando que los datos ingresados son incorrectos. Precondición - El actor debe estar registrado en el sistema. Postcondición Contraseña recuperada exitosamente. Puntos de extensión Tabla 13: Caso de uso – Cambiar contraseña. Identificador y nombre UC4: cambiar contraseña. Actor(es) Solicitante, PIRE, PARE y JRE. Descripción Permite al actor cambiar su contraseña de usuario. Flujo básico 1. El actor selecciona la opción “Mi cuenta”. 2. El actor selecciona la opción “Cambiar contraseña”. 3. El actor ingresa la antigua contraseña, nueva contraseña y confirmación. 4. El sistema verifica los datos en la base de datos. 5. El sistema muestra un mensaje indicando que el cambio de contraseña fue exitoso. Flujo alterno 5. El sistema muestra un mensaje indicando que los datos ingresados son incorrectos. Precondición - El actor debe haber iniciado sesión. Postcondición Contraseña cambiada exitosamente. Puntos de extensión 57 Tabla 14: Caso de uso – Modificar datos personales. Identificador y nombre UC5: modificar datos personales. Actor(es) Solicitante, PIRE, PARE y JRE. Descripción Permite al actor editar sus datos personales. Flujo básico 1. El actor selecciona la opción “Mi cuenta”. 2. El actor selecciona la opción “Actualizar información de cuenta”. 3. El actor ingresa los datos a editar. 4. El sistema verifica los datos ingresados. 5. El sistema muestra un mensaje indicando que los datos fueron editados exitosamente. Flujo alterno 5. El sistema muestra un mensaje indicando que los datos ingresados son incorrectos. Precondición - El actor debe haber iniciado sesión. Postcondición Datos personales editados exitosamente. Puntos de extensión Tabla 15: Caso de uso – Registrar solicitud. Identificador y nombre UC6: registrar solicitud. Actor(es) Solicitante Descripción Permite al actor registrar una solicitud propia. Flujo básico 1. El actor selecciona la opción “Mis Solicitudes”. 2. El actor selecciona la opción “Añadir solicitud”. 3. El actor ingresa los datos de la solicitud (carrera procedencia, carrera destino y opcionalmente las asignaturas a las cuales se desea hacer equivalencia). 4. El sistema verifica los datos en la base de datos. 5. El sistema muestra un mensaje indicando que la solicitud fue registrada exitosamente. Flujo alterno 5. El sistema muestra un mensaje de error indicando que la solicitud no fue registrada y el motivo del resultado. Precondición - El actor debe de haber iniciado sesión. Postcondición Solicitud registrada exitosamente. Puntos de extensión 58 Tabla 16: Caso de uso – Consultar mis solicitudes. Identificador y nombre UC7: consultar mis solicitudes. Actor(es) Solicitante Descripción Permite al actor consultar las solicitudes realizadas por un solicitante. Flujo básico 1. El actor selecciona la opción “Mis Solicitudes”. 2. El sistema verifica los datos en la base de datos. 3. El sistema muestra las solicitudes registradas en el sistema. Flujo alterno Flujo alterno: aplicar filtros a la consulta de solicitudes 2. El actor ingresa los filtros de las solicitudes que desea consultar. 3. El sistema verifica los datos en la base de datos. 4 El sistema muestra las solicitudes registradas que correspondan con los filtros aplicados. Flujo alterno: no existen solicitudes registradas 2. El sistema muestra un mensaje indicando que no hay resultados para la consulta. Precondición - El actor debe haber iniciado sesión. Postcondición Consulta de solicitudes realizada exitosamente. Puntos de extensión 59 Tabla 17: Caso de uso – Consultar solicitudes. Identificador y nombre UC8: consultar solicitudes. Actor(es) PIRE, PARE y JRE. Descripción Permite al actor consultar las solicitudes registradas en el sistema. Flujo básico 1. El actor selecciona la opción “Solicitudes”. 2. El sistema verifica los datos en la base de datos. 3. El sistema muestra las solicitudes registradas en el sistema. Flujo alterno Flujo alterno: aplicar filtros a la consulta de solicitudes 2. El usuario ingresa los filtros de las solicitudes que desea consultar. 3. El sistema verifica los datos en la base de datos. 4. El sistema muestra las solicitudes registradas que correspondan con los filtros aplicados. Flujo alterno: no existen solicitudes registradas 2. El sistema muestra un mensaje indicando que no hay resultados para la consulta. Precondición - El actor debe haber iniciado sesión. Postcondición Consulta de solicitud realizada exitosamente. Puntos de extensión Extends: • UC8.1: ver vista previa solicitud • UC8.2: editar solicitud • UC8.3: descargar solicitud • UC8.4: eliminar solicitud • UC8.5: añadir solicitud • UC:8.6: añadir comprobante 60 Tabla 18: Caso de uso – Ver vista previa solicitud. Identificador y nombre UC8.1: ver vista previa solicitud. Actor(es) PIRE, PARE y JRE. Descripción Permite al actor ver el detalle de una solicitud. Flujo básico 1. El actor selecciona la opción “Solicitudes”. 2. El actor selecciona la opción “Vista previa” de alguna de las solicitudes disponibles. 3. El actor selecciona una solicitud. 4. El sistema verifica los datos en la base de datos. 5. El sistema muestra el detalle de la solicitud seleccionada. Flujo alterno Precondición - El actor debe haber iniciado sesión. Postcondición Consulta de solicitud realizada exitosamente. Puntos de extensión Extends: • UC8.2: editar solicitud • UC8.3: descargar solicitud UC:8.6: añadir comprobante Tabla 19: Caso de uso – Editar solicitud. Identificador y nombre UC8.2: editar solicitud. Actor(es) PIRE, PARE y JRE. Descripción Permite al actor editar los datos de una solicitud. Flujo básico 1. El actor selecciona la opción “Solicitudes”. 2. El actor selecciona la opción “Editar” de alguna de las solicitudes disponibles. 3. El actor ingresa los datos que desea editar de la solicitud (carrea de procedencia, carrera destino, posibles asignaturas equivalentes y documentos entregados por el solicitante). 4. El sistema verifica los datos en la base de datos. 5. El sistema muestra un mensaje indicando que la solicitud fue editada con éxito. Flujo alterno 5. El sistema muestra un mensaje indicando que la solicitud no se pudo editar y los motivos del resultado. Precondición - El actor debe haber iniciado sesión. Postcondición Solicitud editada exitosamente. Puntos de extensión 61 Tabla 20: Caso de uso – Descargar solicitud. Identificador y nombre UC8.3: descargar solicitud. Actor(es) PIRE, PARE y JRE. Descripción Permite al actor descargar una solicitud. Flujo básico 1. El actor selecciona la opción “Solicitudes”. 2. El actor selecciona la opción “Descargar” de alguna de las solicitudes disponibles. 3. El sistema verifica los datos en la base de datos. 4. El sistema descarga la solicitud en formato PDF. Flujo alterno 4. El sistema muestra un mensaje indicando que la solicitud se pudo descargar y los motivos del resultado. Precondición - El actor debe haber iniciado sesión. Postcondición Solicitud descargada exitosamente. Puntos de extensión Tabla 21: Caso de uso – Eliminar solicitud. Identificador y nombre UC8.4: eliminar solicitud. Actor(es) JRE. Descripción Permite al actor eliminar una solicitud. Flujo básico 1. El actor selecciona la opción “Solicitudes”. 2. El actor selecciona la opción “Eliminar” de alguna de las solicitudes disponibles. 3. El sistema verifica los datos en la base de datos. 4. El sistema muestra un mensaje indicando que la solicitud fue eliminada con éxito. Flujo alterno 4. El sistema muestra un mensaje indicando que la solicitud se pudo eliminar y los motivos del resultado. Precondición - El actor debe haber iniciado sesión. Postcondición Solicitud eliminada exitosamente. Puntos de extensión 62 Tabla 22: Caso de uso – Añadir solicitud. Identificador y nombre UC8.5: añadir solicitud. Actor(es) PIRE, PARE y JRE Descripción Permite al actor registrar una solicitud. Flujo básico 1. El actor selecciona la opción “Solicitudes”. 2. El actor selecciona la opción “Añadir Solicitud”. 3. El actor ingresa los datos de la solicitud (cédula del solicitante, carrera procedencia, carrera destino y opcionalmente las asignaturas a las cuales se desea hacer equivalencia). 4. El sistema verifica los datos en la base de datos. 5. El sistema muestra un mensaje indicando que la solicitud fue registrada exitosamente. Flujo alterno 5. El sistema muestra un mensaje de error indicando que la solicitud no fue registrada y el motivo del resultado. Precondición - El actor debe de haber iniciado sesión. Postcondición Solicitud registrada exitosamente. Puntos de extensión Tabla 23: Caso de uso – Añadir comprobante. Identificador y nombre UC8.6: añadir comprobante. Actor(es) PIRE, PARE y JRE Descripción Permite al actor registrar un comprobante para una solicitud. Flujo básico 1. El actor selecciona la opción “Solicitudes”. 2. El actor selecciona la opción “Añadir comprobante” de alguna de las solicitudes registradas. 3. El sistema verifica los datos en la base de datos. 5. El sistema muestra un mensaje indicando que el comprobante fue registrado exitosamente. Flujo alterno 5. El sistema muestra un mensaje de error indicando que el comprobante no fue registrado y el motivo del resultado. Precondición - El actor debe de haber iniciado sesión. Postcondición Comprobante registrado exitosamente. Puntos de extensión 63 Tabla 24: Caso de uso – Consultar comprobante. Identificador y nombre UC9: consultar comprobantes. Actor(es) PIRE, PARE y JRE. Descripción Permite al actor consultar los comprobantes registrados en el sistema. Flujo básico 1. El actor selecciona la opción “Comprobantes”. 2. El sistema verifica los datos en la base de datos. 3. El sistema muestra los comprobantes registrados en el sistema. Flujo alterno Flujo alterno: aplicar filtros a la consulta de comprobantes 2. El actor ingresa los filtros de los comprobantes que desea consultar. 3. El sistema verifica los datos en la base de datos. 4. El sistema muestra los comprobantes registrados que correspondan con los filtros aplicados. Flujo alterno: no existen comprobantes registrados 2. El sistema muestra un mensaje indicando que no hay resultados para la consulta. Precondición - El actor debe haber iniciado sesión. Postcondición Consulta de comprobantes realizada exitosamente. Puntos de extensión Extends: • UC9.1: ver vista previa comprobantes • UC9.2: editar comprobante • UC9.3: descargar comprobante • UC9.4: eliminar comprobante 64 Tabla 25: Caso de uso – Ver vista previa comprobante. Identificador y nombre UC9.1: ver vista previa comprobante. Actor(es) PIRE, PARE y JRE. Descripción Permite al actor ver el detalle de un comprobante. Flujo básico 1. El actor selecciona la opción “Comprobantes”. 2. El actor selecciona la opción “Vista previa” de alguna de los comprobantes disponibles. 3. El sistema verifica los datos en la base de datos. 4. El sistema muestra el detalle del comprobante seleccionado. Flujo alterno Precondición - El actor debe haber iniciado sesión. Postcondición Consulta de comprobante realizada exitosamente. Puntos de extensión Extends: • UC9.2: editar comprobante • UC9.3: descargar comprobante 65 Tabla 26: Caso de uso – Editar comprobante. Identificador y nombre UC9.2: editar comprobante. Actor(es) PIRE, PARE y JRE. Descripción Permite al actor editar los datos de un comprobante. Flujo básico 1. El actor selecciona la opción “Comprobantes”. 2. El actor selecciona la opción “Editar” de alguno de los comprobantes disponibles. 3. El usuario ingresa los datos que desea editar del comprobante (observaciones, fecha de Subcomisión de Equivalencias, fecha de Comisión de equivalencias, fecha de Consejo de Facultad, Fecha de Consejo Universitario, número de Consejo Universitario, fecha del número de Consejo Universitario y las asignaturas equivalentes aprobadas para la solicitud). 4. El sistema verifica los datos en la base de datos. 5. El sistema muestra un mensaje indicando que el comprobante fue editado con éxito. Flujo alterno 5. El sistema muestra un mensaje indicando que el comprobante no se pudo editar y los motivos del resultado. Precondición - El actor debe haber iniciado sesión. Postcondición Comprobante editado exitosamente. Puntos de extensión Tabla 27: Caso de uso – Descargar comprobante. Identificador y nombre UC9.3: descargar comprobante. Actor(es) PIRE, PARE y JRE. Descripción Permite al actor descargar un comprobante. Flujo básico 1. El actor selecciona la opción “Comprobantes”. 2. El actor selecciona la opción “descargar” de alguno de los comprobantes disponibles. 3. El sistema verifica los datos en la base de datos. 4. El sistema descarga el comprobante en formato PDF. Flujo alterno 4. El sistema muestra un mensaje indicando que el comprobante no se pudo descargar y los motivos del resultado. Precondición - El actor debe haber iniciado sesión. Postcondición Comprobante descargado exitosamente. Puntos de extensión 66 Tabla 28: Caso de uso – Eliminar comprobante. Identificador y nombre UC9.4: eliminar comprobante. Actor(es) JRE. Descripción Permite al actor eliminar un comprobante. Flujo básico 1. El actor selecciona la opción “Comprobantes”. 2. El actor selecciona la opción “eliminar” de alguno de los comprobantes disponibles. 3. El sistema verifica los datos en la base de datos. 4. El sistema muestra un mensaje indicando que el comprobante fue eliminado con éxito. Flujo alterno 4. El sistema muestra un mensaje indicando que el comprobante no se pudo eliminar y los motivos del resultado. Precondición - El actor debe haber iniciado sesión. Postcondición Comprobante eliminado exitosamente. Puntos de extensión 67 Tabla 29: Caso de uso – Consultar universidades. Identificador y nombre UC10: consultar universidades. Actor(es) PIRE, PARE y JRE. Descripción Permite al actor consultar las universidades registradas en el sistema. Flujo básico 1. El actor selecciona la opción “Universidades”. 2. El sistema verifica los datos en la base de datos. 3. El sistema muestra las universidades registradas en el sistema. Flujo alterno Flujo alterno: aplicar filtros a la consulta de universidades 2. El actor ingresa los filtros de las universidades que desea consultar. 3. El sistema verifica los datos en la base de datos. 4. El sistema muestra las universidades registradas que correspondan con los filtros aplicados. Flujo alterno: no existen universidades registradas 2. El sistema muestra un mensaje indicando que no hay resultados para la consulta. Precondición - El actor debe haber iniciado sesión. Postcondición Consulta de universidades realizada exitosamente. Puntos de extensión Extends: • UC10.1: ver vista previa universidad • UC10.2: editar universidad • UC10.3: eliminar universidad • UC10.4: añadir universidad • UC10.5: añadir facultad 68 Tabla 30: Caso de uso – Ver vista previa universidades. Identificador y nombre UC10.1: ver vista previa universidad. Actor(es) PIRE, PARE y JRE. Descripción Permite al actor ver el detalle de una universidad. Flujo básico 1. El actor selecciona la opción “Universidades”. 2. El actor selecciona la opción “Vista previa” de alguna de las universidades disponibles. 3. El actor selecciona una universidad. 4. El sistema verifica los datos en la base de datos. 5. El sistema muestra el detalle de la universidad seleccionada. Flujo alterno Precondición - El actor debe haber iniciado sesión. Postcondición Consulta de universidades realizada exitosamente. Puntos de extensión Extends: • UC10.2: editar universidad • UC10.5: añadir facultad • UC10.6: eliminar facultad • UC10.7: editar facultad • UC10.8: ver vista previa facultad 69 Tabla 31: Caso de uso – Editar universidades. Identificador y nombre UC10.2: editar universidad. Actor(es) PIRE, PARE y JRE. Descripción Permite al actor editar los datos de una universidad. Flujo básico 1. El actor selecciona la opción “Universidades”. 2. El actor selecciona la opción “Editar” de alguna de las universidades disponibles. 3. El usuario ingresa los datos que desea editar de la universidad. 4. El sistema verifica los datos en la base de datos. 5. El sistema muestra un mensaje indicando que la universidad fue editada con éxito. Flujo alterno 5. El sistema muestra un mensaje indicando que la universidad no se pudo editar y los motivos del resultado. Precondición - El actor debe haber iniciado sesión. Postcondición Universidad editada exitosamente. Puntos de extensión Tabla 32: Caso de uso – Eliminar universidad. Identificador y nombre UC10.3: eliminar universidad. Actor(es) JRE. Descripción Permite al actor eliminar una universidad. Flujo básico 1. El actor selecciona la opción “Universidades”. 1. El actor selecciona la opción “eliminar” de alguna de las universidades disponibles. 3. El sistema verifica los datos en la base de datos. 4. El sistema muestra un mensaje indicando que la universidad fue eliminada con éxito. Flujo alterno 4. El sistema muestra un mensaje indicando que la universidad no se pudo eliminar y los motivos del resultado. Precondición - El actor debe haber iniciado sesión. Postcondición Universidad eliminada exitosamente. Puntos de extensión 70 Tabla 33: Caso de uso – Añadir universidad. Identificador y nombre UC10.4: añadir universidad. Actor(es) PIRE, PARE y JRE Descripción Permite al actor registrar una universidad. Flujo básico 1. El actor selecciona la opción “Universidades”. 2. El actor selecciona la opción “Añadir Universidad”. 3. El actor ingresa los datos de la universidad. 4. El sistema verifica los datos en la base de datos. 5. El sistema muestra un mensaje indicando que la universidad fue registrada exitosamente. Flujo alterno 5. El sistema muestra un mensaje de error indicando que la universidad no fue registrada y el motivo del resultado. Precondición - El actor debe de haber iniciado sesión. Postcondición Universidad registrada exitosamente. Puntos de extensión Tabla 34: Caso de uso – Añadir facultad Identificador y nombre UC10.5: añadir facultad. Actor(es) PIRE, PARE y JRE Descripción Permite al actor registrar una facultad. Flujo básico 1. El actor selecciona la opción “Facultades”. 2. El actor selecciona la opción “Añadir Facultad”. 3. El actor ingresa los datos de la facultad. 4. El sistema verifica los datos en la base de datos. 5. El sistema muestra un mensaje indicando que la facultad fue registrada exitosamente. Flujo alterno 5. El sistema muestra un mensaje de error indicando que la facultad no fue registrada y el motivo del resultado. Precondición - El actor debe de haber iniciado sesión. Postcondición Facultad registrada exitosamente. Puntos de extensión 71 Tabla 35: Caso de uso – Eliminar facultad Identificador y nombre UC10.6: eliminar facultad. Actor(es) JRE. Descripción Permite al actor eliminar una facultad. Flujo básico 1. El actor selecciona la opción “Facultades”. 2. El actor selecciona la opción “eliminar” de alguna de las facultades disponibles. 3. El sistema verifica los datos en la base de datos. 4. El sistema muestra un mensaje indicando que la facultad fue eliminada con éxito. Flujo alterno 4. El sistema muestra un mensaje indicando que la facultad no se pudo eliminar y los motivos del resultado. Precondición - El actor debe haber iniciado sesión. Postcondición Facultad eliminada exitosamente. Puntos de extensión Tabla 36: Caso de uso – Editar facultad Identificador y nombre UC10.7: editar facultad. Actor(es) PIRE, PARE y JRE. Descripción Permite al actor editar los datos de una facultad. Flujo básico 1. El actor selecciona la opción “Facultades”. 2. El actor selecciona la opción “Editar” de alguna de las facultades disponibles. 3. El usuario ingresa los datos que desea editar de la facultad. 4. El sistema verifica los datos en la base de datos. 5. El sistema muestra un mensaje indicando que la facultad fue editada con éxito. Flujo alterno 5. El sistema muestra un mensaje indicando que la facultad no se pudo editar y los motivos del resultado. Precondición - El actor debe haber iniciado sesión. Postcondición Facultad editada exitosamente. Puntos de extensión 72 Tabla 37: Caso de uso – Ver vista previa facultad Identificador y nombre UC10.8: ver vista previa facultad. Actor(es) PIRE, PARE y JRE. Descripción Permite al actor ver el detalle de una facultad. Flujo básico 1. El actor selecciona la opción “Facultades”. 2. El actor selecciona la opción “Vista previa” de alguna de las facultades disponibles. 3. El sistema verifica los datos en la base de datos. 4. El sistema muestra el detalle de la facultad seleccionada. Flujo alterno Precondición - El actor debe haber iniciado sesión. Postcondición Consulta de facultades realizada exitosamente. Puntos de extensión 73 Tabla 38: Caso de uso – Consultar facultades. Identificador y nombre UC11: consultar facultades. Actor(es) PIRE, PARE y JRE. Descripción Permite al actor consultar las facultades registradas en el sistema. Flujo básico 1. El actor selecciona la opción “Facultades”. 2. El sistema verifica los datos en la base de datos. 3. El sistema muestra las facultades registradas en el sistema. Flujo alterno Flujo alterno: aplicar filtros a la consulta de facultades 2. El actor ingresa los filtros de las facultades que desea consultar. 3. El sistema verifica los datos en la base de datos. 4. El sistema muestra las facultades registradas que correspondan con los filtros aplicados. Flujo alterno: no existen facultades registradas 2. El sistema muestra un mensaje indicando que no hay resultados para la consulta. Precondición - El actor debe haber iniciado sesión. Postcondición Consulta de facultades realizada exitosamente. Puntos de extensión Extends: • UC10.5: añadir facultad • UC10.6: eliminar facultad • UC10.7: editar facultad • UC10.8: ver vista previa facultad • UC11.1: añadir escuela 74 Tabla 39: Caso de uso – Añadir escuela. Identificador y nombre UC11.1: añadir escuela. Actor(es) PIRE, PARE y JRE Descripción Permite al actor registrar una escuela. Flujo básico 1. El actor selecciona la opción “Escuelas”. 2. El actor selecciona la opción “Añadir Escuela”. 3. El actor ingresa los datos de la escuela. 4. El sistema verifica los datos en la base de datos. 5. El sistema muestra un mensaje indicando que la escuela fue registrada exitosamente. Flujo alterno 5. El sistema muestra un mensaje de error indicando que la escuela no fue registrada y el motivo del resultado. Precondición - El actor debe de haber iniciado sesión. Postcondición Escuela registrada exitosamente. Puntos de extensión Tabla 40: Caso de uso – Eliminar escuela. Identificador y nombre UC11.2: eliminar escuela. Actor(es) JRE. Descripción Permite al actor eliminar una escuela. Flujo básico 1. El actor selecciona la opción “Escuelas”. 2. El actor selecciona la opción “eliminar” de alguna de las escuelas disponibles. 3. El sistema verifica los datos en la base de datos. 4. El sistema muestra un mensaje indicando que la escuela fue eliminada con éxito. Flujo alterno 4. El sistema muestra un mensaje indicando que la escuela no se pudo eliminar y los motivos del resultado. Precondición - El actor debe haber iniciado sesión. Postcondición Escuela eliminada exitosamente. Puntos de extensión 75 Tabla 41: Caso de uso – Editar escuela. Identificador y nombre UC11.3: editar escuela. Actor(es) PIRE, PARE y JRE. Descripción Permite al actor editar los datos de una escuela. Flujo básico 1. El actor selecciona la opción “Escuelas”. 2. El actor selecciona la opción “Editar” de alguna de las escuelas disponibles. 3. El usuario ingresa los datos que desea editar de la escuela. 4. El sistema verifica los datos en la base de datos. 5. El sistema muestra un mensaje indicando que la escuela fue editada con éxito. Flujo alterno 5. El sistema muestra un mensaje indicando que la escuela no se pudo editar y los motivos del resultado. Precondición - El actor debe haber iniciado sesión. Postcondición Escuela editada exitosamente. Puntos de extensión 76 Tabla 42: Caso de uso – Ver vista previa escuela Identificador y nombre UC11.4: ver vista previa escuela. Actor(es) PIRE, PARE y JRE. Descripción Permite al actor ver el detalle de una escuela. Flujo básico 1. El actor selecciona la opción “Escuelas”. 2. El actor selecciona la opción “Vista previa” de alguna de las escuelas disponibles. 3. El sistema verifica los datos en la base de datos. 4. El sistema muestra el detalle de la escuela seleccionada. Flujo alterno Precondición - El actor debe haber iniciado sesión. Postcondición Consulta de escuelas realizada exitosamente. Puntos de extensión Extends: • UC11.3: editar escuela • UC12.1: añadir carrera • UC12.2: eliminar carrera • UC12.3: editar carrera • UC12.4: ver vista previa carrera 77 Tabla 43: Caso de uso – Consultar escuelas. Identificador y nombre UC12: consultar escuelas. Actor(es) PIRE, PARE y JRE. Descripción Permite al actor consultar las escuelas registradas en el sistema. Flujo básico 1. El actor selecciona la opción “Escuelas”. 2. El sistema verifica los datos en la base de datos. 3. El sistema muestra las escuelas registradas en el sistema. Flujo alterno Flujo alterno: aplicar filtros a la consulta de escuelas 2. El actor ingresa los filtros de las escuelas que desea consultar. 3. El sistema verifica los datos en la base de datos. 4. El sistema muestra las escuelas registradas que correspondan con los filtros aplicados. Flujo alterno: no existen escuelas registradas 2. El sistema muestra un mensaje indicando que no hay resultados para la consulta. Precondición - El actor debe haber iniciado sesión. Postcondición Consulta de escuelas realizada exitosamente. Puntos de extensión Extends: • UC11.1: añadir escuela • UC11.2: eliminar escuela • UC11.3: editar escuela • UC11.4: ver vista previa escuela • UC12.1: añadir carrera 78 Tabla 44: Caso de uso – Añadir carrera. Identificador y nombre UC12.1: añadir carrera. Actor(es) PIRE, PARE y JRE Descripción Permite al actor registrar una carrera. Flujo básico 1. El actor selecciona la opción “Carreras”. 2. El actor selecciona la opción “Añadir Carrera”. 3. El actor ingresa los datos de la carrera. 4. El sistema verifica los datos en la base de datos. 5. El sistema muestra un mensaje indicando que la carrera fue registrada exitosamente. Flujo alterno 5. El sistema muestra un mensaje de error indicando que la carrera no fue registrada y el motivo del resultado. Precondición - El actor debe de haber iniciado sesión. Postcondición Carrera registrada exitosamente. Puntos de extensión Tabla 45: Caso de uso – Eliminar carrera. Identificador y nombre UC12.2: eliminar carrera. Actor(es) JRE. Descripción Permite al actor eliminar una carrera. Flujo básico 1. El actor selecciona la opción “Carreras”. 2. El actor selecciona la opción “eliminar” de alguna de las carreras disponibles. 3. El sistema verifica los datos en la base de datos. 4. El sistema muestra un mensaje indicando que la carrera fue eliminada con éxito. Flujo alterno 4. El sistema muestra un mensaje indicando que la carrera no se pudo eliminar y los motivos del resultado. Precondición - El actor debe haber iniciado sesión. Postcondición Carrera eliminada exitosamente. Puntos de extensión 79 Tabla 46: Caso de uso – Editar carrera Identificador y nombre UC12.3: editar carrera. Actor(es) PIRE, PARE y JRE. Descripción Permite al actor editar los datos de una carrera. Flujo básico 1. El actor selecciona la opción “Carreras”. 2. El actor selecciona la opción “Editar” de alguna de las carreras disponibles. 3. El usuario ingresa los datos que desea editar de la carrera. 4. El sistema verifica los datos en la base de datos. 5. El sistema muestra un mensaje indicando que la carrera fue editada con éxito. Flujo alterno 5. El sistema muestra un mensaje indicando que la carrera no se pudo editar y los motivos del resultado. Precondición - El actor debe haber iniciado sesión. Postcondición Carrera editada exitosamente. Puntos de extensión Tabla 47: Caso de uso – Ver vista previa carrera. Identificador y nombre UC12.4: ver vista previa carrera. Actor(es) PIRE, PARE y JRE. Descripción Permite al actor ver el detalle de una carrera. Flujo básico 1. El actor selecciona la opción “Carreras”. 2. El actor selecciona la opción “Vista previa” de alguna de las carreras disponibles. 3. El sistema verifica los datos en la base de datos. 4. El sistema muestra el detalle de la carrera seleccionada. Flujo alterno Precondición - El actor debe haber iniciado sesión. Postcondición Consulta de carreras realizada exitosamente. Puntos de extensión Extends: • UC12.3: editar carrera • UC13.1: añadir asignatura • UC13.2: ver vista previa asignatura • UC13.3: editar asignatura • UC13.4: eliminar asignatura 80 Tabla 48: Caso de uso – Consultar carreras. Identificador y nombre UC13: consultar carreras. Actor(es) PIRE, PARE y JRE. Descripción Permite al actor consultar las carreras registradas en el sistema. Flujo básico 1. El actor selecciona la opción “Carreras”. 2. El sistema verifica los datos en la base de datos. 3. El sistema muestra las carreras registradas en el sistema. Flujo alterno Flujo alterno: aplicar filtros a la consulta de carreras 2. El actor ingresa los filtros de las carreras que desea consultar. 3. El sistema verifica los datos en la base de datos. 4. El sistema muestra las carreras registradas que correspondan con los filtros aplicados. Flujo alterno: no existen carreras registradas 2. El sistema muestra un mensaje indicando que no hay resultados para la consulta. Precondición - El actor debe haber iniciado sesión. Postcondición Consulta de carreras realizada exitosamente. Puntos de extensión Extends: • UC12.1: añadir carrera • UC12.2: eliminar carrera • UC12.3: editar carrera • UC12.4: ver vista previa carrera • UC13.1: añadir asignatura 81 Tabla 49: Caso de uso – Añadir asignatura. Identificador y nombre UC13.1: añadir asignatura. Actor(es) PIRE, PARE y JRE Descripción Permite al actor registrar una asignatura. Flujo básico 1. El actor selecciona la opción “Asignaturas”. 2. El actor selecciona la opción “Añadir Asignatura”. 3. El actor ingresa los datos de la asignatura. 4. El sistema verifica los datos en la base de datos. 5. El sistema muestra un mensaje indicando que la asignatura fue registrada exitosamente. Flujo alterno 5. El sistema muestra un mensaje de error indicando que la asignatura no fue registrada y el motivo del resultado. Precondición - El actor debe de haber iniciado sesión. Postcondición Asignatura registrada exitosamente. Puntos de extensión Tabla 50: Caso de uso – Ver vista previa asignatura. Identificador y nombre UC13.2: ver vista previa asignatura. Actor(es) PIRE, PARE y JRE. Descripción Permite al actor ver el detalle de una asignatura. Flujo básico 1. El actor selecciona la opción “Asignaturas”. 2. El actor selecciona la opción “Vista previa” de alguna de las asignaturas disponibles. 3. El sistema verifica los datos en la base de datos. 4. El sistema muestra el detalle de la asignatura seleccionada. Flujo alterno Precondición - El actor debe haber iniciado sesión. Postcondición Consulta de asignaturas realizada exitosamente. Puntos de extensión Extends: • UC13.3: editar asignatura 82 Tabla 51: Caso de uso – Editar asignatura Identificador y nombre UC13.3: editar asignatura. Actor(es) JRE. Descripción Permite al actor editar los datos de una asignatura. Flujo básico 1. El actor selecciona la opción “Asignaturas”. 2. El actor selecciona la opción “Editar” de alguna de las asignaturas disponibles. 3. El usuario ingresa los datos que desea editar de la asignatura. 4. El sistema verifica los datos en la base de datos. 5. El sistema muestra un mensaje indicando que la asignatura fue editada con éxito. Flujo alterno 5. El sistema muestra un mensaje indicando que la asignatura no se pudo editar y los motivos del resultado. Precondición - El actor debe haber iniciado sesión. Postcondición Asignatura editada exitosamente. Puntos de extensión Tabla 52: Caso de uso – Eliminar asignatura Identificador y nombre UC13.4: eliminar asignatura. Actor(es) JRE. Descripción Permite al actor eliminar una asignatura. Flujo básico 1. El actor selecciona la opción “Asignaturas”. 2. El actor selecciona la opción “eliminar” de alguna de las asignaturas disponibles. 3. El sistema verifica los datos en la base de datos. 4. El sistema muestra un mensaje indicando que la asignatura fue eliminada con éxito. Flujo alterno 4. El sistema muestra un mensaje indicando que la asignatura no se pudo eliminar y los motivos del resultado. Precondición - El actor debe haber iniciado sesión. Postcondición Asignatura eliminada exitosamente. Puntos de extensión 83 Tabla 53: Caso de uso – Consultar asignaturas. Identificador y nombre UC14: consultar asignaturas. Actor(es) PIRE, PARE y JRE. Descripción Permite al actor consultar las asignaturas registradas en el sistema. Flujo básico 1. El actor selecciona la opción “Asignaturas”. 2. El sistema verifica los datos en la base de datos. 3. El sistema muestra las asignaturas registradas en el sistema. Flujo alterno Flujo alterno: aplicar filtros a la consulta de asignaturas 2. El usuario ingresa los filtros de las asignaturas que desea consultar. 3. El sistema verifica los datos en la base de datos. 4. El sistema muestra las asignaturas registradas que correspondan con los filtros aplicados. Flujo alterno: no existen asignaturas registradas 2. El sistema muestra un mensaje indicando que no hay resultados para la consulta. Precondición - El actor debe haber iniciado sesión. Postcondición Consulta de asignaturas realizada exitosamente. Puntos de extensión Extends: • UC13.1: añadir asignatura • UC13.2: ver vista previa asignatura • UC13.3: editar asignatura • UC13.4: eliminar asignatura 84 Tabla 54: Caso de uso – Consultar usuarios. Identificador y nombre UC15: consultar usuarios. Actor(es) PIRE, PARE y JRE. Descripción Permite al actor consultar los usuarios registrados en el sistema. Flujo básico 1. El actor selecciona la opción “usuarios”. 2. El sistema verifica los datos en la base de datos. 3. El sistema muestra los usuarios registrados en el sistema. Flujo alterno Flujo alterno: aplicar filtros a la consulta de usuarios 2. El actor ingresa los filtros de los usuarios que desea consultar. 3. El sistema verifica los datos en la base de datos. 4. El sistema muestra los usuarios registrados que correspondan con los filtros aplicados. Flujo alterno: no existen usuarios registrados 2. El sistema muestra un mensaje indicando que no hay resultados para la consulta. Precondición - El actor debe haber iniciado sesión. Postcondición Consulta de usuarios realizada exitosamente. Puntos de extensión Extends: • UC15.1: ver vista previa usuario • UC15.2: editar usuario • UC15.3: eliminar usuario • UC15.4: añadir usuario 85 Tabla 55: Caso de uso – Ver vista previa usuario. Identificador y nombre UC15.1: ver vista previa usuario. Actor(es) PIRE, PARE y JRE. Descripción Permite al actor ver el detalle de un usuario. Flujo básico 1. El actor selecciona la opción “Usuarios”. 2. El actor selecciona la opción “Vista previa” de alguna de los usuarios disponibles. 3. El sistema verifica los datos en la base de datos. 4. El sistema muestra el detalle del usuario seleccionado. Flujo alterno Precondición - El actor debe haber iniciado sesión. Postcondición Consulta de usuario realizada exitosamente. Puntos de extensión Tabla 56: Caso de uso – Editar usuario. Identificador y nombre UC15.2: editar usuario. Actor(es) PIRE, PARE y JRE. Descripción Permite al actor editar los datos de un usuario. Flujo básico 1. El actor selecciona la opción “Usuarios”. 2. El actor selecciona la opción “Editar” de alguno de los usuarios disponibles. 3. El usuario ingresa los datos que desea editar del usuario. 4. El sistema verifica los datos en la base de datos. 5. El sistema muestra un mensaje indicando que el usuario fue editado con éxito. Flujo alterno 5. El sistema muestra un mensaje indicando que el usuario no se pudo editar y los motivos del resultado. Precondición - El actor debe haber iniciado sesión. Postcondición Usuario editado exitosamente. Puntos de extensión 86 Tabla 57: Caso de uso – Eliminar usuario. Identificador y nombre UC15.3: eliminar usuario. Actor(es) PARE y JRE. Descripción Permite al actor eliminar un usuario. Flujo básico 1. El actor selecciona la opción “Usuarios”. 2. El actor selecciona la opción “eliminar” de alguno de los usuarios disponibles. 3. El sistema verifica los datos en la base de datos. 4. El sistema muestra un mensaje indicando que el usuario fue eliminado con éxito. Flujo alterno 4. El sistema muestra un mensaje indicando que el usuario no se pudo eliminar y los motivos del resultado. Precondición - El actor debe haber iniciado sesión. Postcondición Usuario eliminado exitosamente. Puntos de extensión Tabla 58: Caso de uso – Añadir usuario. Identificador y nombre UC15.4: añadir usuario. Actor(es) PIRE, PARE y JRE Descripción Permite al actor registrar un usuario. Flujo básico 1. El actor selecciona la opción “Usuarios”. 2. El actor selecciona la opción “Añadir Usuarios”. 3. El actor ingresa los datos del usuario. 4. El sistema verifica los datos en la base de datos. 5. El sistema muestra un mensaje indicando que el usuario fue registrado exitosamente. Flujo alterno 5. El sistema muestra un mensaje de error indicando que el usuario no fue registrado y el motivo del resultado. Precondición - El actor debe de haber iniciado sesión. Postcondición Usuario registrado exitosamente. Puntos de extensión 87 Tabla 59: Caso de uso – Consultar períodos académicos. Identificador y nombre UC16: consultar períodos académicos. Actor(es) PARE y JRE. Descripción Permite al actor consultar los períodos académicos registrados en el sistema. Flujo básico 1. El actor selecciona la opción “Períodos académicos”. 2. El sistema verifica los datos en la base de datos. 3. El sistema muestra los períodos académicos registrados en el sistema. Flujo alterno Flujo alterno: aplicar filtros a la consulta de períodos académicos 2. El actor ingresa los filtros de los períodos académicos que desea consultar. 3. El sistema verifica los datos en la base de datos. 4. El sistema muestra los períodos académicos registrados que correspondan con los filtros aplicados. Flujo alterno: no existen períodos académicos registrados 2. El sistema muestra un mensaje indicando que no hay resultados para la consulta. Precondición - El actor debe haber iniciado sesión. Postcondición Consulta de períodos académicos realizada exitosamente. Puntos de extensión Extends: • UC16.1: ver vista previa período académico • UC16.2: editar período académico • UC16.3: eliminar período académico • UC16.4: añadir período académico 88 Tabla 60: Caso de uso – Ver vista previa período académico. Identificador y nombre UC16.1: ver vista previa período académico. Actor(es) PARE y JRE. Descripción Permite al actor ver el detalle de un período académico. Flujo básico 1. El actor selecciona la opción “Período académicos”. 2. El actor selecciona la opción “Vista previa” de alguno de los períodos académicos disponibles. 3. El sistema verifica los datos en la base de datos. 4. El sistema muestra el detalle del período académico seleccionado. Flujo alterno Precondición - El actor debe haber iniciado sesión. Postcondición Consulta de período académico realizada exitosamente. Puntos de extensión Tabla 61: Caso de uso – Editar período académico. Identificador y nombre UC16.2: editar período académico. Actor(es) PARE y JRE. Descripción Permite al actor editar los datos de un período académico. Flujo básico 1. El actor selecciona la opción “Período académicos”. 2. El actor selecciona la opción “Editar” de alguno de los períodos académicos disponibles. 3. El actor ingresa los datos que desea editar del período académico. 4. El sistema verifica los datos en la base de datos. 5. El sistema muestra un mensaje indicando que el período académico fue editado con éxito. Flujo alterno 5. El sistema muestra un mensaje indicando que el período académico no se pudo editar y los motivos del resultado. Precondición - El actor debe haber iniciado sesión. Postcondición Período académico editado exitosamente. Puntos de extensión 89 Tabla 62: Caso de uso – Eliminar período académico. Identificador y nombre UC16.3: eliminar período académico. Actor(es) JRE. Descripción Permite al actor eliminar un período académico. Flujo básico 1. El actor selecciona la opción “Período académicos”. 2. El actor selecciona la opción “eliminar” de alguno de los períodos académicos disponibles. 3. El sistema verifica los datos en la base de datos. 4. El sistema muestra un mensaje indicando que el período académico fue eliminado con éxito. Flujo alterno 4. El sistema muestra un mensaje indicando que el período académico no se pudo eliminar y los motivos del resultado. Precondición - El actor debe haber iniciado sesión. Postcondición Período académico eliminado exitosamente. Puntos de extensión Tabla 63: Caso de uso – Añadir período académico. Identificador y nombre UC16.4: añadir período académico. Actor(es) PARE y JRE Descripción Permite al actor registrar un período académico. Flujo básico 1. El actor selecciona la opción “Períodos académico”. 2. El actor selecciona la opción “Añadir Período Académico”. 3. El actor ingresa los datos del período académico. 4. El sistema verifica los datos en la base de datos. 5. El sistema muestra un mensaje indicando que el período académico fue registrado exitosamente. Flujo alterno 5. El sistema muestra un mensaje de error indicando que el período académico no fue registrado y el motivo del resultado. Precondición - El actor debe de haber iniciado sesión. Postcondición Período académico registrado exitosamente. Puntos de extensión 90 4.1.1.5 Tecnologías instaladas A continuación, se describen las tecnologías instaladas para desarrollar el sistema según lo establecido en la arquitectura propuesta: Tabla 64: Tecnologías instaladas. Tecnologías Descripción MySQL 5.7 SMBD utilizado para implementar las estructuras de datos del sistema. PHP 7.2.11 Lenguaje del lado del servidor utilizado para el desarrollo del sistema en combinación con HTML5, CCS3 y JavaScript. Laravel 5.7 Marco de trabajo de PHP utilizado para definir una estructura estándar dentro del proyecto y utilizar sus funcionalidades para agilizar el proceso de desarrollo. Vagrant 2.2.2 Herramienta de software libre utilizada para la virtualización del ambiente de desarrollo. 4.1.2 Fase II: Elaboración En esta fase se realizaron las siguientes actividades: pruebas sobre la arquitectura propuesta en el ambiente previamente instalado, definición de la guía de estilos para el sistema, diseño de prototipos iniciales de las interfaces del sistema y la definición del modelo de datos del sistema. 4.1.2.1 Guía de estilos La guía de estilo presenta todos los aspectos gráficos del sistema, definiendo la paleta de colores y fuentes a utilizar. Tabla 65: Guía de estilos. #333333 #DDDDD #D2D6DE #ECF0F5 #161966 #2E306D #E6141F Fuentes: Source Sans Pro, Sans Serif 91 4.1.2.2 Prototipos A continuación, se presentan los prototipos de interfaces de usuario de las principales funcionalidades de la aplicación: La Figura 30 ilustra el prototipo de interfaz de usuario de inicio de sesión, el cual está distribuido de la siguiente forma: en la parte superior se encuentra un título con el texto “Iniciar sesión”, luego de este se encuentra un recuadro con 2 cajas de texto, las cuales corresponden a la cédula y a la contraseña del usuario. Luego de esto, se encuentra un check para recordar contraseña y finalmente el botón de inicio de sesión. Luego del recuadro, se encuentran 2 enlaces, uno para el proceso de olvido de contraseña y otro para la creación de usuarios en el sistema. Figura 30: Prototipo – Iniciar sesión. 92 Figura 31: Prototipo – Recuperar contraseña. La Figura 31 ilustra el prototipo de interfaz de usuario para recuperar contraseña el cual está distribuido de la siguiente forma: en la parte superior se encuentra un título con el texto “Recuperar contraseña”, luego de este se encuentra una sección donde se indican los pasos a seguir para el proceso de recuperación de contraseña. Luego de esto, se encuentra un recuadro con un campo de texto el cual corresponde al correo electrónico al cual se enviará el enlace y un botón para enviar dicho enlace. Finalmente, se encuentran 2 enlaces, uno para ir a la interfaz de inicio de sesión y otro para ir a la interfaz de creación de usuario. 93 Figura 32: Prototipo – Crear usuario. La Figura 32 ilustra el prototipo de interfaz de usuario para la creación de usuarios el cual está distribuido de la siguiente forma: en la parte superior se encuentra un título con el texto “Crear usuario”, luego de este se encuentra un recuadro con campos de texto que corresponden a los datos básicos de registro de un solicitante y un botón para confirmar la creación del usuario. Finalmente, se encuentran 2 enlaces, uno para ir a la interfaz de recuperación de contraseña y otro para ir a la interfaz de inicio de sesión. 94 Figura 33: Prototipo – Secciones generales. La Figura 33 ilustra el prototipo de interfaz de usuario de las secciones generales el cual está distribuido de la siguiente forma: en la parte superior está conformada por un botón en forma de menú hamburguesa que permite ocultar o desplegar el menú principal ubicado en la parte izquierda y una opción de salir del sistema, en la parte izquierda se encuentra el menú del sistema, el cual a su parte superior presentara el nombre del usuario y una opción para acceder al perfil del usuario que inicio sesión y una opción de salir del sistema y por último, la parte central está compuesta por la información referente al módulo donde se esté actualmente, el cual está compuesto en su parte superior por el nombre de la sección, un botón para crear un nuevo elemento dentro de la sección, los filtros y por ultimo un buscador de texto. Luego de esto, se encuentra una tabla donde se listan los elementos registrados de la sección, mostrando primero las columnas más significativas de la tabla y por último una celda de acciones por fila. Por último, se 95 encuentran las opciones de paginado, estando en la parte izquierda un selector para filtrar el número de registros que se desea visualizar y en la parte derecha botones para seleccionar la página actual que se desea visualizar. 4.1.2.3 Modelo de base de datos Para el almacenamiento del sistema, se diseñó un modelo de base de datos implementado físicamente con el SMDB MySQL, tomando en cuenta las características de los antecedentes recopilados y las planillas de físicas correspondientes a las solicitudes de equivalencia de estudios y a los comprobantes de equivalencia de estudios. Dentro de las entidades principales del sistema se encuentran las que permiten el almacenamiento de los distintos tipos de usuario, las solicitudes de equivalencia de estudios y los comprobantes de equivalencia de estudios. Como resultado se obtuvo el siguiente modelo relacional de base de datos: 96 Figura 34: Modelo relacional de la base de datos. 97 4.1.3 Fase III: Construcción En esta fase se realizaron las actividades relacionadas al desarrollo de las funcionalidades asociadas a los requerimientos previamente definidos del sistema. A continuación, se presentan los resultados obtenidos: 4.1.3.1 Registrar solicitantes Figura 35: Interfaz – Registrar solicitante. En la Figura 35 se ilustra la interfaz del sistema para registrar solicitantes, en la cual se solicitan los siguientes datos: cédula, nombre, apellido y correo. Posteriormente, se envía un correo al usuario con un link al correo ingresado para solicitar los datos personales y de contacto faltantes en el registro. Luego del formulario, se encuentran links para ir a los módulos de ¿Olvidó su contraseña? e iniciar sesión. 98 4.1.3.2 Iniciar sesión Figura 36: Interfaz – iniciar sesión. En la Figura 36 se ilustra la interfaz del sistema para iniciar sesión, en la cual se solicita la cédula y contraseña del usuario para su autenticación. Esta interfaz también contiene un check para recordar contraseña y 2 links para ir a los módulos de ¿Olvidó su contraseña? y crear usuario. 99 4.1.3.3 ¿Olvidó su contraseña? Figura 37: Interfaz - ¿Olvidó su contraseña?. En la Figura 37 se ilustra la interfaz del sistema para la recuperación de contraseña, en el cual se solicita el correo electrónico del usuario para posteriormente enviar un correo con los pasos a seguir para la recuperación de su contraseña. Luego del formulario, se encuentran 2 links para ir a los módulos de inicio de sesión y crear usuario. 100 4.1.3.4 Módulo de solicitudes En la Figura 38 se ilustra la interfaz del sistema correspondiente al módulo de solicitudes para el caso en que el usuario autenticado sea PARE, PIRE o JRE. En esta interfaz se listas las solicitudes registradas en el sistema sin comprobante. En la tabla de datos se encuentran los botones para realizar las acciones de vista previa, editar, eliminar, descargar la solicitud o añadir comprobante de la fila seleccionada. En esta interfaz también se pueden realizar filtros de los resultados obtenidos, bien sea por el buscador ubicado en la parte derecha o por los botones ubicados en la parte superior de la tabla. Figura 38: Interfaz – Solicitudes (PARE, PIRE o JRE). 101 Figura 39: Interfaz – Añadir solicitud. En la Figura 39 se ilustra la interfaz para añadir una nueva solicitud, en la cual se debe ingresar la cédula del solicitante, la carrera de procedencia, la carrera destino de la solicitud y opcionalmente ingresar las asignaturas de la carrera de procedencia a las cuales se desea hacer equivalencia. Al seleccionar la acción de descargar, se descarga la solicitud en formato PDF, tal y como se ilustra en la Figura 40. 102 Figura 40: Solicitud descargada PDF. 103 4.1.3.5 Módulo de comprobantes En la Figura 41 se ilustra la interfaz del sistema correspondiente al módulo de comprobantes para el caso en que el usuario autenticado sea PARE, PIRE o JRE. En la tabla de datos se encuentran los botones para realizar las acciones de vista previa, editar, eliminar o descargar el comprobante de la fila seleccionada. En esta interfaz también se pueden realizar filtros de los resultados obtenidos, bien sea por el buscador ubicado en la parte derecha o por los botones ubicados en la parte superior de la tabla. En la Figura 42 se ilustra la interfaz para editar un comprobante, en el cual se ingresan las fechas asociadas al comprobante, número de Consejo Universitario y las asignaturas equivalentes del comprobante. Figura 41: Interfaz – Comprobantes (PARE, PIRE o JRE). 104 Al seleccionar la acción de descargar, se descarga el comprobante en formato PDF, tal y como se ilustra en la Figura 43. Figura 42: Interfaz – Editar comprobante. 105 Figura 43: Comprobante descargado. 106 4.1.3.6 Módulo de universidades En la Figura 44 se ilustra la interfaz del sistema correspondiente al módulo de universidades. En la tabla de datos se encuentran los botones para realizar las acciones de vista previa, editar, eliminar o añadir facultad a la universidad de la fila seleccionada. En esta interfaz también se pueden realizar filtros de los resultados obtenidos, bien sea por el buscador ubicado en la parte derecha o por los botones ubicados en la parte superior de la tabla. Figura 45: Interfaz – Añadir Universidad. En la Figura 45 se ilustra la interfaz para añadir una nueva universidad, en la cual se debe ingresar el nombre, procedencia, dirección y abreviación de la universidad. Figura 44: Interfaz – Universidades. 107 En la Figura 46, se ilustra la vista previa de una universidad, en la cual se muestran los datos de la universidad y el listado de facultades pertenecientes a esta. Desde esta interfaz, se puede editar la universidad seleccionada, agregar una facultad, ir al detalle de una facultad, editar una facultad o eliminar una facultad. Figura 46: Interfaz – Vista previa Universidad. 108 4.1.3.7 Módulo de facultades En la Figura 47 se ilustra la interfaz del sistema correspondiente al módulo de facultades. En la tabla de datos se encuentran los botones para realizar las acciones de vista previa, editar, eliminar o añadir una escuela a la facultada de la fila seleccionada. En esta interfaz también se pueden realizar filtros de los resultados obtenidos, bien sea por el buscador ubicado en la parte derecha o por los botones ubicados en la parte superior de la tabla. Figura 47: Interfaz – Facultades. 109 Figura 48: Interfaz – Añadir Facultad. En la Figura 48 se ilustra la interfaz para añadir una nueva facultad, en la cual se debe ingresar el nombre y la universidad a la cual pertenece la facultad. En la Figura 49, se ilustra la vista previa de una facultad, en la cual se muestran los datos de la facultad y el listado de escuelas pertenecientes a esta. Desde esta interfaz, se puede editar la facultad seleccionada, agregar una escuela, ir al detalle de una escuela, editar una escuela o eliminar una escuela. Figura 49: Interfaz – Vista previa Facultad 110 4.1.3.8 Módulo de escuelas En la Figura 50 se ilustra la interfaz del sistema correspondiente al módulo de escuelas. En la tabla de datos se encuentran los botones para realizar las acciones de vista previa, editar o eliminar la escuela de la fila seleccionada. En esta interfaz también se pueden realizar filtros de los resultados obtenidos, bien sea por el buscador ubicado en la parte derecha o por los botones ubicados en la parte superior de la tabla. Figura 51: Interfaz – Añadir Escuela. En la Figura 51 se ilustra la interfaz para añadir una nueva escuela, en la cual se debe ingresar el nombre, la universidad y opcionalmente la facultada (en caso de que aplique) de la escuela. Figura 50: Interfaz – Escuelas. 111 En la Figura 52, se ilustra la vista previa de una escuela, en la cual se muestran los datos de la escuela y el listado de carreras pertenecientes a esta. Desde esta interfaz, se puede editar la escuela seleccionada, agregar una carrera, ir al detalle de una carrera, editar una carrera o eliminar una carrera. 4.1.3.9 Módulo de carreras En la Figura 53 se ilustra la interfaz del sistema correspondiente al módulo de carreras. En la tabla de datos se encuentran los botones para realizar las acciones de vista previa, editar eliminar o añadir una asignatura a la carrera de la fila seleccionada. En esta interfaz también se pueden realizar filtros de los resultados obtenidos, bien sea por el buscador ubicado en la parte derecha o por los botones ubicados en la parte superior de la tabla. Figura 52: Interfaz – Vista previa Escuela. Figura 53: Interfaz – Carreras. 112 Figura 54: Interfaz – Añadir Carrera. En la Figura 54 se ilustra la interfaz para añadir una nueva carrera, en la cual se debe ingresar el nombre, universidad, facultad (en caso de que aplique) y la escuela a la cual pertenece la carrera. En la Figura 55, se ilustra la vista previa de una carrera, en la cual se muestran los datos de la carrera y el listado de asignaturas pertenecientes a esta. Desde esta interfaz, se puede editar la carrera seleccionada, agregar una asignatura, ir al detalle de una asignatura, editar una asignatura o eliminar una asignatura. Figura 55: Interfaz – Vista previa Carrera. 113 4.1.3.10 Módulo de asignaturas En la Figura 56 se ilustra la interfaz del sistema correspondiente al módulo de asignaturas. En la tabla de datos se encuentran los botones para realizar las acciones de vista previa, editar o eliminar la asignatura de la fila seleccionada. En esta interfaz también se pueden realizar filtros de los resultados obtenidos, bien sea por el buscador ubicado en la parte derecha o por los botones ubicados en la parte superior de la tabla. Figura 56: Interfaz – Asignaturas. 114 Figura 57: Interfaz – Añadir Asignatura. En la Figura 57 se ilustra la interfaz para añadir una nueva asignatura, en la cual se debe ingresar el nombre, código, descripción, unidades de crédito, universidad, facultad (en caso de que aplique), escuela y la carrera a la cual pertenece la asignatura. 115 Figura 58: Interfaz – Vista previa Asignatura. En la Figura 58, se ilustra la vista previa de una asignatura, en la cual se muestran los datos de la asignatura. Desde esta interfaz, se puede editar la asignatura seleccionada. 116 4.1.3.11 Módulo de periodos académicos En la Figura 59 se ilustra la interfaz del sistema correspondiente al módulo de periodos académicos. En la tabla de datos se encuentran los botones para realizar las acciones de vista previa, editar o eliminar el periodo académico de la fila seleccionada. En esta interfaz también se pueden realizar filtros de los resultados obtenidos, bien sea por el buscador ubicado en la parte derecha o por los botones ubicados en la parte superior de la tabla. Figura 59: Interfaz – Periodos académicos. 117 Figura 60: Interfaz – Interfaz – Añadir periodo académico. En la Figura 60 se ilustra la interfaz para añadir un nuevo periodo académico, en la cual se debe ingresar la facultad, nombre, descripción, decano, nombre del primer representante de la Subcomisión de Equivalencias, nombre del segundo representante de la Subcomisión de Equivalencias, nombre del tercer representante de la Subcomisión de Equivalencias, nombre del primer representante de Comisión de Equivalencias, nombre del segundo representante de Comisión de Equivalencias y nombre del tercer representante de Comisión de Equivalencias del periodo académico. 118 4.1.3.12 Módulo de usuarios En la Figura 61 se ilustra la interfaz del sistema correspondiente al módulo de usuarios. En la tabla de datos se encuentran los botones para realizar las acciones de vista previa, editar o eliminar el usuario de la fila seleccionada. En esta interfaz también se pueden realizar filtros de los resultados obtenidos, bien sea por el buscador ubicado en la parte derecha o por los botones ubicados en la parte superior de la tabla. Figura 61: Interfaz – Usuarios. 119 Figura 62: Interfaz – Añadir Usuario. En la Figura 62 se ilustra la interfaz para añadir un nuevo usuario, en la cual se debe ingresar la cédula, nombre, apellido, lugar de nacimiento, nacionalidad, fecha de nacimiento, género, dirección, teléfono, email, tipo de usuario y facultad (solo en caso de que el tipo de usuario sea PARE o PIRE) del usuario. 120 4.1.4 Fase IV: Transición Una vez culminada la fase de construcción, se llevan a cabo una serie de pruebas unitarias y de integración sobre los distintos módulos del sistema con el fin de validar el correcto funcionamiento de la aplicación, así como también ajustes de la documentación en los casos que aplicase para garantizar que se dio solución a todos los requerimientos establecidos en la solución. Una vez corregidos los errores detectados, se realiza una prueba de aceptación para certificar que la aplicación cumpliera con los objetivos del proceso, tolerancia a fallos y satisfacción de los usuarios. Para estas pruebas, se realiza una encuesta la cual fue el instrumento de evaluación para medir los puntos anteriormente mencionados. Para su aplicación, se seleccionaron 5 estudiantes de la UCV y 5 personas a las cuales se les explico la problemática, el proceso de negocio y luego usaron la aplicación. La Figura 60 muestra la encuesta aplicada. 121 Figura 63: Encuesta de experiencia de usuario. 122 Una vez aplicada la encuesta, se obtuvieron los siguientes resultados: En la Figura 64 se puede observar que el 70% de las personas encuestadas dieron una puntuación de 5 y que un 30% dieron una puntuación de 4, con lo que se considera que las funcionalidades del módulo son intuitivas para los usuarios encuentados. Figura 64: Resultados pregunta 1. Figura 65: Resultados pregunta 2. 123 En la Figura 65 se observa que el 40% de las personas encuentadas dieron una puntuación de 5, un 20% dieron una puntuación de 2 y que un 40% dieron una puntuación de 3, con lo que se considera que el proceso de creación de solicitudes y comprobantes de equivalencia de estudio requiere de un conocimiento previo sobre los pasos implicados en la generación de los mismos. En la Figura 66 se observa que el 70% de las personas encuestadas dieron una puntuación de 5 y que un 30% dio una puntuación de 4, con lo que se considera que los mensajes de apoyo en caso de error dentro del módulo sirven de apoyo al usuario. Figura 66: Resultados pregunta 3. Figura 67: Resultados pregunta 4. 124 En la Figura 67 se observa que el 60% de las personas encuestadas dieron una puntuación de 5, un 30% dieron una puntuacion de 4 y un 10% dieron una puntuación de 3, con lo que se considera que la estructura y distribución de las interfaces de usuario del módulo es adecuada para los usuarios es aceptable. En la Figura 68 se observa que el 60% de las personas encuestadas dieron una puntuación de 5 y un 40% dieron una puntuación de 4, con lo que se considera que las páginas que conforman el módulo son consistentes. Figura 68: Resultados pregunta 5. Figura 69: Resultados pregunta 6. 125 En la Figura 69 se observa que el 80% de las personas encuestadas dieron una puntuación de 5 y que un 20% dieron una puntuación de 4, con lo que se considera que el módulo sirve de apoyo para el proceso de equivalencia de estudios. Tomando en cuenta los resultados obtenidos, se puede destacar que el sistema desarrollado cumple con los requerimientos y necesidades planteadas en este TEG. Como toda creación intelectual, este módulo puede incorporar mejoras a futuro y nuevas funcionalidades creadas en trabajos de grado o pasantías académicas posteriores. 126 CONCLUSIONES Al finalizar el presente TEG, se cumplió satisfactoriamente el objetivo general y cada uno de los objetivos específicos planteados, ya que se logró desarrollar un módulo para la gestión de equivalencias de estudios que era la finalidad principal de esta investigación, y con esto, generar una herramienta única para agilizar las actividades inherentes a dicho proceso. A partir del desarrollo de esta solución, se obtuvo un producto que cumple con los requerimientos planteados en esta investigación y la definición e implementación de la arquitectura tecnológica propuesta de forma satisfactoria. Se logró conocer a detalle el proceso de equivalencia de estudios, lo cual permitió desarrollar de forma satisfactoria el Módulo de Gestión de Equivalencia de Estudios del Departamento de Reválidas y Equivalencias de la UCV. El uso de la metodología AUP hizo que el desarrollo del sistema se llevara a cabo de forma estructurada y organizada, generando documentación útil en cada una de sus fases para garantizar el cumplimiento de todos los requerimientos del sistema. El desarrollo del módulo estuvo basado en un conjunto de herramientas y tecnologías actuales, empleadas según lo definido en la arquitectura de solución propuesta. Se utilizaron los lenguajes de programación PHP y JavaScript, como SMBD se utilizó MySql y por último el framework Laravel 5 del lado del servidor, utilizando el patrón de arquitectura de software MVC. Con la realización de las pruebas de aceptación se obtuvieron opiniones diversas en cuanto a la usabilidad, tolerancia a fallos del sistema y el apoyo que brinda este a los procesos relacionados con la equivalencia de estudios, las cuales fueron tomadas en cuenta para mejorar la experiencia de usuario. 127 Este TEG generó un gran crecimiento personal y profesional. Además, permitió realizar un aporte al Departamento de Reválidas y Equivalencias perteneciente a nuestra casa de estudios. Con el desarrollo del Módulo de Equivalencia de Estudios, el DRE dispondrá de un único módulo centralizado para la gestión de los procesos de equivalencia de estudios, el cual es capaz de almacenar y posteriormente procesar las solicitudes de equivalencia de estudios y los comprobantes de asignaturas equivalentes. También, con este módulo, las solicitudes y comprobantes de asignaturas equivalentes podrán ser generadas de forma digital y física en formato PDF tamaño carta, los cuales reducen el uso de equipos adicionales especializados para la generación física de estos documentos. 128 TRABAJOS FUTUROS Incorporar nuevos módulos para agilizar otros procesos relacionados al Departamento de Reválidas y Equivalencias, como, por ejemplo, la gestión de reválidas de título o validez de título, pudiéndose utilizar este sistema como base para estos desarrollos. 129 RECOMENDACIONES Suministrar apoyo inicial al personal de los distintos Departamentos de Reválidas y Equivalencias con el fin de garantizar de que los procesos realizados por el sistema sean correctos. En caso de que se considere pasar el sistema a producción, establecer medidas de seguridad para garantizar que solo se le asignen credenciales de autenticación en el sistema solo a las personas autorizadas. 130 REFERENCIAS BIBLIOGRÁFICAS Y DIGITALES Akchar, J. (2018). ESTUDIO DE CONCEPTOS, METODOLOGÍAS Y HERRAMIENTAS PARA DESARROLLAR EL MÓDULO DE GESTIÓN DE EQUIVALENCIA DE ESTUDIOS. Caracas. Amaro, S., & Valverde, J. (2007). Metodologías Ágiles. Recuperado el 20 de Septiembre de 2017, de https://uvirtual.unet.edu.ve/pluginfile.php/268695/mod_resource/content/1/Metod ologias%20Agiles.pdf Apache. (2007). HTTP SERVER PROJECT. Obtenido de https://httpd.apache.org/ABOUT_APACHE.html APACHE. (15 de Enero de 2009). Apache-SSL. Obtenido de https://web.archive.org/web/20090314040822/http://www.apache-ssl.org/ Asensio, B., & Menéndez, R. (s.f). Desarrollo Aplicaciones Web. Obtenido de http://www.um.es/docencia/barzana/DAWEB/Lenguaje-de-programacion-HTML- 1.pdf Carvajal, J. (Septiembre de 2008). METODOLOGÍAS ÁGILES: HERRAMIENTAS Y MODELO DE DESARROLLO PARA APLICACIONES. Recuperado el 20 de Septiembre de 2017, de https://upcommons.upc.edu/bitstream/handle/2099.1/5608/50015.pdf?sequence= 1 Cordero, J. (s.f). METODOLOGIAS AGILES - PROCESO UNIFICADO AGIL (AUP). Obtenido de http://m.ingenieriadesoftware.mex.tl/images/18149/METODOLOGIAS%20AGILE S.pdf Gamma, E., Helm, R., Johnson, R., & Vlissides, J. (2002). Patrones de Diseño - Elementos de Software orientado a objetos reutilizables . Madrid: Pearson Educación. Hernández, E., & Martínez, L. (1997). Cliente/servidor. Obtenido de http://clubdeinvestigacion.com/docs/informe23.pdf 131 Letelier, P., & Sánchez, E. (12 de Noviembre de 2003). Metodologías Ágiles en el Desarrollo de Software . Recuperado el 20 de Septiembre de 2017, de http://issi.dsic.upv.es/archives/f-1069167248521/actas.pdf Mariño Vázquez, C. (2008). Programación en PHP. Nivel Báisco. Obtenido de http://administraciondesistemas.pbworks.com/f/Manual_PHP5_Basico.pdf Mestras Pavon, J. (2008). Estructura de las Aplicaciones Orientadas a Objetos - El patrón Modelo-Vista-Controlador. Obtenido de https://www.fdi.ucm.es/profesor/jpavon/poo/2.14.MVC.pdf Mora, S. L. (2002). Programación de aplicaciones web: historia, principios básicos y clientes web. Obtenido de https://gplsi.dlsi.ua.es/~slujan/materiales/pi-cliente2- muestra.pdf Navarrete, T. (2006-2007). El Lenguaje JavaScript. Obtenido de http://www.dtic.upf.edu/~tnavarrete/fcsig/javascript.pdf Organization, R. (19 de Febrero de 2018). Laravel 5 Conceptos básicos y ejemplos. Obtenido de https://www.pdf-manual.es/programacion-web/php/175-libro-laravel- 5-conceptos-basicos-y-ejemplos.html Pardo, E. (Julio de 2014). Manual de Procedimientos. Caracas, Venezuela. Pavón Mestras, J. (2012-2013). Aplicaciones Web/Sistemas Web. Obtenido de https://www.fdi.ucm.es/profesor/jpavon/web/24-JavaScript.pdf RedUsers. (s.f). El Lenguaje Ruby. Obtenido de http://eudev2.uta.cl/rid=1GR0DSG4D- 1Y1NH87-4RQ/ruby.pdf Romero Fernandez, Y., & Gonzales Diaz, Y. (Abril de 2012). Telem@tica - Patrón Modelo-Vista-Controlador. Obtenido de revistatelematica.cujae.edu.cu/index.php/tele/article/download/15/10/0 Ruby Lang Org. (s.f). Acerca de Ruby. Obtenido de https://www.ruby-lang.org/es/about/ Ruby on Rails Guides. (s.f). Obtenido de http://guides.rubyonrails.org Sánchez, J. (2004). MySQL, Guía rapida. Obtenido de http://www.cartagena99.com/recursos/programacion/apuntes/mysql.pdf Silberschatz, A., Korth, H., & Sudarshan, S. (2002). Fundamentos de Base de Datos. Obtenido de 132 https://unefazuliasistemas.files.wordpress.com/2011/04/fundamentos-de-bases- de-datos-silberschatz-korth-sudarshan.pdf The PostgreSQL Global Development Group. (s.f). PostgreSQL 10.1 Documentation. Obtenido de https://www.postgresql.org/files/documentation/pdf/10/postgresql-10- A4.pdf Valle, J. G., & Gutierrez, J. G. (2005). Arquitectura cliente/servidor. Obtenido de http://www.ecotec.edu.ec/documentacion%5Cinvestigaciones%5Cdocentes_y_di rectivos%5Carticulos/5743_TRECALDE_00212.pdf W3Techs. (s.f.). Usage of server-side programming languages for websites. Obtenido de https://w3techs.com/technologies/overview/programming_language/all Wells, D. (1999). The Rules of Extreme Programming. Obtenido de http://www.extremeprogramming.org/rules.html