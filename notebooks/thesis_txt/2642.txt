Implantación de un repositorio institucional de información académica para la UCV Universidad Central de Venezuela Facultad de Ciencias Escuela de Computación Implantación de un repositorio institucional de información académica para la UCV Trabajo Especial de Grado presentado ante la ilustre Universidad Central de Venezuela, por el bachiller: Autor: Alexander Torrealba V. – C.I. 15.794.289 Para optar por el Título de Licenciado en Computación Tutor Académico: Prof. Robinson Rivas Caracas, Septiembre, 2011 1 Agradecimientos Quiero expresar mi agradecimiento por este gran logro, en primer lugar a mi familia quien siempre estuvo allí para apoyarme. Agradecer especialmente a mis padres María y Olmedo quienes me han acompañado durante todas las experiencias de mi vida, con mis aciertos y mis fallos, con mis virtudes y defectos, por todos esos momentos de alegría y sin dejarse vencer por las dificultades. Le agradezco a mi hermana por todas esas peleas que siempre terminan en reconciliación, pero hacen que uno se centre, que pise tierra y que no pierda el rumbo, te quiero mucho Ale. Les agradezco enormemente a mis otros hermanos de alma Lolimar y Víctor, quienes siempre están allí para lo que salga, siempre juntos en las buenas y en las malas. Quiero agradecer especialmente a mi amiga, compañera de vida, y novia, Hailyx, quien siempre estuvo dándome fuerzas, y luchando a mi lado para que todo salga bien. Quiero también agradecer a mi madrina Sara y mi tío Armando, quienes con sus buenos ejemplos de familia, te hacen seguir adelante. Y gradezco especialmente a mi abuela Carmen quien me consiente siempre que puede, y a mi abuelo pablo que está en el cielo cuidándonos, los amo. Le quiero agradecer a todas aquellas personas, amigos que estuvieron pendientes de que este trabajo terminara con éxito, como Milagros, Any, Joska, la profesora Damaris, quienes siempre estuvieron empujando y reganándome en ocasiones. Gracias a todos los compañeros y amigos de la universidad como Daniel, Adrian, Rafael, la profesora María E. Villapol, María Alejandra Abram, los compañeros de Saber UCV y especialmente a mi tutor el profesor Robinson Rivas por darme la oportunidad de trabajar en este proyecto. Gracias. Alexander Torrealba Vetancourt. 2 Resumen En este trabajo se instalaron, configuraron y pusieron en plena operación los sistemas que darán soporte al repositorio institucional de información académica para la UCV, basados en herramientas de software libre. Estos repositorios permitirán recopilar la información académica relacionada con publicaciones, revistas generadas en la UCV, eventos académicos (congresos, seminarios, etc.), así como la documentación de tipo docente generada por los profesores y demás personal de la institución. El sistema se basa en los siguientes módulos: • DSpace: Sistema para administración y preservación de información académica. • OJS: Open Journal System, sistema para gestión y publicación de Revistas electrónicas. • OCS: Open Conference System, sistema para administración y publicación web de eventos, tales como Congresos, seminarios, etc. La implantación de estas plataformas da como resultado un repositorio Institucional completo, conformado por un conjunto de herramientas y servicios destinados a facilitar el almacenamiento, preservación y difusión de la producción intelectual de la comunidad universitaria. E incrementando la visibilidad y el prestigio de esta casa de estudios y sus docentes e investigadores, promoviendo el acceso libre a la información. 3 Índice de Contenido CAPÍTULO 1 .......................................................................................................................................... 10 INTRODUCCIÓN .................................................................................................................................... 10 PROPUESTA.......................................................................................................................................... 13 JUSTIFICACIÓN .................................................................................................................................................. 13 PLANTEAMIENTO DEL PROBLEMA ......................................................................................................................... 13 OBJETIVO GENERAL ........................................................................................................................................... 14 OBJETIVOS ESPECÍFICOS ..................................................................................................................................... 14 ALCANCE ......................................................................................................................................................... 15 CAPÍTULO 2 .......................................................................................................................................... 16 MARCO TEÓRICO .................................................................................................................................. 16 ACCESO ABIERTO (OPEN ACCESS) ........................................................................................................................ 16 Declaración de Budapest ......................................................................................................................... 16 REPOSITORIOS INSTITUCIONALES .......................................................................................................................... 17 Beneficios de los Repositorios Institucionales para la Universidad y los Investigadores ......................... 18 Comparación de Software para Repositorios .......................................................................................... 22 EPRINTS .......................................................................................................................................................... 25 Características de Eprints ........................................................................................................................ 26 FEDORA .......................................................................................................................................................... 27 Características de Fedora ........................................................................................................................ 29 CAPÍTULO 3 .......................................................................................................................................... 32 DSPACE ................................................................................................................................................ 32 RAZONES PARA UTILIZAR DSPACE ......................................................................................................................... 32 DESCRIPCIÓeople ................................................................................................................................................... 37 Grupos...................................................................................................................................................... 38 AUTENTICACIÓN ............................................................................................................................................... 38 AUTORIZACIÓÚSQUEDA Y NAVEGACIÓÓN Y EXPORTACIÓN ............................................................................................................................ 43 4 ESTADÍÍTULO 4 .......................................................................................................................................... 48 OPEN JOURNAL SYSTEM ....................................................................................................................... 48 CARACTERÍSTICAS .............................................................................................................................................. 48 TECNOLOGÍAS................................................................................................................................................... 49 ARQUITECTURA DEL SISTEMA ............................................................................................................................... 49 ROLES ............................................................................................................................................................. 52 CAPÍTULO 5 .......................................................................................................................................... 54 OPEN CONFERENCE SYSTEMS ................................................................................................................ 54 CARACTERÍSTICAS .............................................................................................................................................. 54 TECNOLOGÍAS................................................................................................................................................... 55 ARQUITECTURA DEL SISTEMA ............................................................................................................................... 56 ROLES ............................................................................................................................................................. 57 CAPÍTULO 6 .......................................................................................................................................... 59 IMPLANTACIÓN DE LA PLATAFORMA .................................................................................................... 59 HERRAMIENTAS ................................................................................................................................................ 59 Herramientas de hardware ...................................................................................................................... 59 Herramientas de Software ....................................................................................................................... 59 INSTALACIÓN DE LA PLATAFORMA ........................................................................................................................ 60 Instalación de DSpace .............................................................................................................................. 60 Instalación OJS y OCS ............................................................................................................................... 74 ADAPTACIÓN DE LA PLATAFORMA ......................................................................................................................... 81 Diseño DSpace ......................................................................................................................................... 81 Configuración DSpace .............................................................................................................................. 83 Politicas de Acceso ................................................................................................................................... 86 Diseño OJS ................................................................................................................................................ 87 Configuración OJS .................................................................................................................................... 89 PRUEBAS DE LA PLATAFORMA .............................................................................................................................. 91 Pruebas DSpace ....................................................................................................................................... 91 Pruebas OJS.............................................................................................................................................. 98 TALLERES DE INDUCCIÓN .................................................................................................................................. 101 RESULTADOS ...................................................................................................................................... 102 CONCLUSIÓN ...................................................................................................................................... 103 RECOMENDACIONES ........................................................................................................................................ 103 TRABAJOS FUTUROS ......................................................................................................................................... 103 GLOSARIO DE TÉRMINOS .................................................................................................................... 105 BIBLIOGRAFÍA .................................................................................................................................... 108 5 EPRINTS WIKI ..................................................................................................................................... 109 EPRINTS 3 PRE-LAUNCH BRIEFING ....................................................................................................... 109 EPRINTS 3 - KEY FEATURES AND DEMONSTRATIONS ............................................................................ 109 The Directory of Open Access Repositories - OpenDOAR ....................................................................... 109 ANEXOS ............................................................................................................................................. 110 MANUAL BÁSICO – AUTO ARCHIVO DSPACE ........................................................................................................ 113 6 Índice de Figuras FIGURA 1: INCREMENTO DE LOS REPOSITORIOS INSTITUCIONALES (OPENDOAR) ............................................................... 19 FIGURA 2: PROPORCIÓN DE REPOSITORIOS INSTITUCIONALES POR PAÍS (OPENDOAR) ....................................................... 20 FIGURA 3: PROPORCIÓN DE REPOSITORIOS INSTITUCIONALES POR PAÍS EN SURAMÉRICA (OPENDOAR) ................................ 20 FIGURA 4: SOFTWARE MÁS USADOS EN IMPLEMENTACIÓN DE REPOSITORIOS (OPENDOAR) ............................................... 21 FIGURA 5: MODELO DE OBJETO ............................................................................................................................... 28 FIGURA 6: FLUJOS DE DATOS DE OBJETOS DIGITALES ................................................................................................... 28 FIGURA 7: ARQUITECTURA DEL SISTEMA FEDORA (SIMPLIFICADO) ................................................................................... 30 FIGURA 8: INTERACCIÓN CLIENTE Y SERVICIOS WEB ..................................................................................................... 31 FIGURA 9: MODELO DE DATOS ................................................................................................................................ 34 FIGURA 10: FLUJO DE TRABAJO ................................................................................................................................ 41 FIGURA 11: DINÁMICA DE REPOSITORIO DIGITAL ........................................................................................................ 45 FIGURA 12: ARQUITECTURA DEL SISTEMA .................................................................................................................. 46 FIGURA 13: ARQUITECTURA DEL SISTEMA .................................................................................................................. 50 FIGURA 14: CRECIMIENTO OJS EN EL 2011 ............................................................................................................... 51 FIGURA 15: DISTRIBUCIÓN MUNDIAL DE OJS .............................................................................................................. 51 FIGURA 16: FLUJO DE TRABAJO ................................................................................................................................ 53 FIGURA 17: CRECIMIENTO DE OCS PARA EL 2011 ....................................................................................................... 55 FIGURA 18: ARQUITECTURA DEL SISTEMA .................................................................................................................. 56 FIGURA 19: FLUJO DE TRABAJO ................................................................................................................................ 58 FIGURA 20: APTITUDE INSTALL JDK ............................................................................................................................ 60 FIGURA 21:WGET APACHE MAVEN ............................................................................................................................ 61 FIGURA 22: VIM PROFILE ........................................................................................................................................ 61 FIGURA 23: EDITAR PROFILE .................................................................................................................................... 62 FIGURA 24: MVN -VERSION ..................................................................................................................................... 62 FIGURA 25: WGET APACHE ...................................................................................................................................... 62 FIGURA 26: EDITAR PROFILE 2 .................................................................................................................................. 64 FIGURA 27: ANT -VERSION ...................................................................................................................................... 64 FIGURA 28: WGET TOMCAT ..................................................................................................................................... 64 FIGURA 29:VIM PROFILE ......................................................................................................................................... 64 FIGURA 30: VIM SERVER.XML .................................................................................................................................. 65 FIGURA 31: ADDUSER DSPACE .................................................................................................................................. 66 FIGURA 32: VIM TOMCAT-USERS.XML ....................................................................................................................... 66 FIGURA 33: CHOWN TOMCAT .................................................................................................................................. 66 FIGURA 34: VIM /ETC/INIT.D/TOMCAT ...................................................................................................................... 67 FIGURA 35: INSSERV TOMCAT .................................................................................................................................. 67 FIGURA 36: WGET POSTGRESQL ............................................................................................................................... 68 FIGURA 37: INSTALAR COMPLEMENTOS POSTGRES ....................................................................................................... 68 FIGURA 38: MAKE POSTGRES ................................................................................................................................... 68 FIGURA 39: MEKE INSTALL POSTGRES ........................................................................................................................ 68 FIGURA 40: ADDUSER POSTGRES .............................................................................................................................. 69 FIGURA 41: CHOWN POSTGRES ................................................................................................................................ 69 FIGURA 42: CONFIG POSTGRES ................................................................................................................................. 69 FIGURA 43: INICIAR POSTGRES ................................................................................................................................. 69 FIGURA 44: VIM POSTGRESQL.CONF .......................................................................................................................... 69 7 FIGURA 45: VIM PG_HBA.CONF................................................................................................................................ 69 FIGURA 46: DETENER POSTGRES ............................................................................................................................... 70 FIGURA 47: SCRIPTS POSTGRES ................................................................................................................................ 71 FIGURA 48: CHMOD SCRIPTS POSTGRES ..................................................................................................................... 71 FIGURA 49: WGET DSPACE ...................................................................................................................................... 71 FIGURA 50: CREAR USUARIO EN POSTGRES ................................................................................................................. 71 FIGURA 51: DSPACE.CFG ......................................................................................................................................... 72 FIGURA 52: CHOWN DSPACE.................................................................................................................................... 72 FIGURA 53: COMPILAR DSPACE ................................................................................................................................ 72 FIGURA 54: COPIAR DSPACE AL CONTENEDOR ............................................................................................................. 73 FIGURA 55: COPIAR DSPACE AL CONTENEDOR ............................................................................................................. 73 FIGURA 56: VIM SERVER.XML .................................................................................................................................. 73 FIGURA 57: CREAR CUENTA DE ADMINISTRADOR .......................................................................................................... 73 FIGURA 58: INTERFAZ WEB DSPACE.......................................................................................................................... 74 FIGURA 59:WGET OJS Y OCS .................................................................................................................................... 74 FIGURA 60: DESCOMPRIMIR OJS Y OCS ....................................................................................................................... 74 FIGURA 61: MOVER OJS Y OCS .................................................................................................................................. 75 FIGURA 62: CAMBIO DE PROPIETARIO OJS Y OCS .......................................................................................................... 75 FIGURA 63: PERMISOS PARA OJS............................................................................................................................... 75 FIGURA 64: PERMISOS PARA OCS .............................................................................................................................. 75 FIGURA 65: CREAR ARCHIVO EN OJS Y OCS .................................................................................................................. 75 FIGURA 66: PERMISOS OJS ...................................................................................................................................... 76 FIGURA 67: PERMISOS OCS ...................................................................................................................................... 76 FIGURA 68: INICIAR SESIÓN POSTGRES ....................................................................................................................... 76 FIGURA 69: CREAR USUARIO POSTGRES PARA OJS......................................................................................................... 76 FIGURA 70: CREAR USUARIO POSTGRES PARA OCS ........................................................................................................ 76 FIGURA 71: CREAR BASE DE DATOS OJS Y OCS .............................................................................................................. 77 FIGURA 72: PÁGINA PRINCIPAL DE INSTALACIÓN DEL OJS .............................................................................................. 77 FIGURA 73: REQUERIMIENTOS DEL SISTEMA OJS .......................................................................................................... 77 FIGURA 74: SECCIÓN LOCALES .................................................................................................................................. 78 FIGURA 75: CONFIGURACIÓN DE FICHEROS ................................................................................................................. 78 FIGURA 76: CONFIGURACIÓN DE SEGURIDAD .............................................................................................................. 79 FIGURA 77: CUENTA DE ADMINISTRADOR ................................................................................................................... 79 FIGURA 78: CONFIGURACIÓN ADICIONAL.................................................................................................................... 79 FIGURA 79: WGET PARCHE DE OJS ............................................................................................................................ 80 FIGURA 80: VERIFICAR ACTUALIZACIÓÁMETRO PARA PERMITIR LA VISUALIZACIÓN DE ESTADÍÓN DE ERRORES .................................................................................................... 91 FIGURA 105: ESTRUCTURA TEMÁTICA ........................................................................................................................ 92 FIGURA 106: ENTRAR EN DSPACE ............................................................................................................................. 92 FIGURA 107: MENÚ DSPACE .................................................................................................................................... 93 FIGURA 108: ENTRAR EN DSPACE ............................................................................................................................. 93 FIGURA 109: COMENZAR NUEVO ENVÍO ..................................................................................................................... 94 FIGURA 110: ENVÍO ............................................................................................................................................... 94 FIGURA 111: DESCRIBA SU ÍTEM ............................................................................................................................... 95 FIGURA 112: DESCRIBIR .......................................................................................................................................... 95 FIGURA 113: DESCRIBIR 2 ....................................................................................................................................... 96 FIGURA 114: SUBIR ÍTEM ........................................................................................................................................ 96 FIGURA 115: VERIFICAR ÍTEM .................................................................................................................................. 97 FIGURA 116: ENVÍO FINALIZADO .............................................................................................................................. 98 FIGURA 117: LOGIN OJS ........................................................................................................................................ 98 FIGURA 118: INICIO DE OJS .................................................................................................................................... 99 FIGURA 119: ADMINISTRACIÓN DEL SITIO ................................................................................................................... 99 FIGURA 120: REVISTAS EN OJS .............................................................................................................................. 100 FIGURA 121: CONFIGURACIÓN DE REVISTAS.............................................................................................................. 100 9 Índice de Tablas TABLA 1: REPOSITORIOS INSTITUCIONALES EN VENEZUELA ............................................................................................ 21 TABLA 2: COMPARACIONES ENTRE PLATAFORMAS PARA REPOSITORIOS ............................................................................ 22 TABLA 3: COMPARACIONES ENTRE PLATAFORMAS PARA REPOSITORIOS (CONTINUACIÓN) .................................................... 23 TABLA 4: COMPARACIONES ENTRE PLATAFORMAS PARA REPOSITORIOS (CONTINUACIÓN) .................................................... 23 TABLA 5: COMPARACIONES ENTRE PLATAFORMAS PARA REPOSITORIOS (CONTINUACIÓN) .................................................... 24 TABLA 6: COMPARACIONES ENTRE PLATAFORMAS PARA REPOSITORIOS (CONTINUACIÓN) .................................................... 24 TABLA 7: COMPARACIONES ENTRE PLATAFORMAS PARA REPOSITORIOS (CONTINUACIÓN) .................................................... 25 TABLA 8: COLECCIONES .......................................................................................................................................... 39 TABLA 9: Íapítulo 1 Introducción En la actualidad, existe gran afinidad con los movimientos de acceso libre a la información donde juega un papel importante los repositorios institucionales y las revistas electrónicas, en éstos se publican cualquier tipo de información digital académica de forma gratuita, la mayoría de ellas publicadas con licencias Creative Commons 1 . Para hablar de Acceso libre (Open Access), no olvidar una de las primeras iniciativas como lo fue la Declaración de Budapest (BOAI, 2002) 2 , firmada en el año 2002, por un gran número de organizaciones 3 . Hoy en día este término “Acceso Abierto” se utiliza para referirse a aquel contenido que puede ser consultado de forma libre y gratuita como hace referencia la Declaración de Budapest mencionada anteriormente. Con la llegada del movimiento de libre acceso a la información, se evidenció la necesidad de crear herramientas que ayuden a compartir información académica sin ningún tipo de lucro, dándonos a conocer dos rutas; la dorada que se implementa a través de las revistas electrónicas y la verde que se pone de manifiesto con los repositorios temáticos e institucionales principalmente. Un repositorio Institucional es un conjunto de herramientas y servicios destinados a facilitar el almacenamiento, preservación y difusión de la producción intelectual en un formato digital de una comunidad, cada vez existen más universidades que abren sus repositorios a nivel tanto nacional como internacional. En la actualidad se cuenta con un aproximado de 1690 repositorios institucionales a nivel mundial. En Venezuela solo existen 9 repositorios institucionales registrados, por debajo de Brasil, Ecuador, Colombia y Argentina según datos obtenidos por la autoridad OpenDOAR 4 . Entre los beneficios más resaltantes de los repositorios institucionales, está el acceso abierto a la información, el incremento de la visibilidad, el prestigio de esta casa de estudios y de sus docentes e investigadores, permitiendo el resguardo, preservación y gestión del contenido digital. Existen una amplia gama de plataformas para implantar repositorios, tanto basadas en software comerciales como software libre, entre las comerciales tenemos 1 Creative Commons, http://creativecommons.org/ 2 Budapest Open Access Iniciative (BOAI, 2002), http://www.soros.org/openaccess/read 3 Lista de firmantes en la Declaración de Budapest, http://www.soros.org/openaccess/list_signatures 4 OpenDOAR (Directory of Open Access Repositories), http://www.opendoar.org/ 11 CONTENTdm, Digital Commons, DigiTool, IntraLibrary, Open Repository, VITAL, y entre las libre tenemos DSpace, EPrints, Fedora, Zentity. Y una de las más usadas por su versatilidad, robustez y eficiencia es DSpace, la cual cuenta con más de 770 instalaciones registradas a nivel mundial como Repositorio Institucional. Eprints es un software libre compatible con el protocolo OAI-PMH 5 , es desarrollado por la Universidad Británica de Southmpton en Inglaterra, es una aplicación que cuenta tanto con una interfaz web como con línea de comando o consola. Eprints está basada en una arquitectura de plugins para solucionar diversas tareas. Posee características destacadas como; Importar datos desde otros repositorios, autocompletar para una rápida entrada de datos, esta optimizado para ser indexado por Google Scholar, cuenta con RSS y alertas, entre otras. Fedora es un repositorio de contenido digital flexible con una amplia variedad de usos, como lo son; gestor de activos digitales, repositorio institucional, archivos digitales, sistema de gestión de contenido, editoriales académicas, y bibliotecas digitales. Esta herramienta fue desarrollada por la Universidad de Cornell, New York (Estados Unidos) y la Biblioteca de la Universidad de Virginia, y fue financiado por DARPA (Agencia de Investigación de Proyectos Avanzados de Defensa) y la NSF (National Science Foundation 6 ). Y tiene como características principales; que puede almacenar todo tipo de contenidos, acceso a los datos a través de web, proporciona búsquedas RDF 7 , la interfaz de administración es web, provee servicios OAI-PMH, servicios de búsqueda GSearch 8 a texto completo, entre otras. DSpace es una plataforma de código abierto y es producto de la alianza de HP 9 y el MIT 10 . Esta herramienta permite adaptar el software según sus necesidades, provee herramientas para la administración y preservación de contenidos digitales, soportando una gran cantidad de formatos de contenido digital. Este software es usado como repositorio institucional, repositorio de objetos de aprendizaje, tesis electrónicas, administración de registros electrónicos, preservación digital y publicaciones. DSpace es la plataforma de repositorio más usada, con más de 1000 instalaciones en un ambiente de producción a nivel mundial, según los datos registrados por OpenDoar. 5 OAI-PMH (Open Access Initiative – Protocol Metadata Harvesting), Protocolo de recolección de metadatos. 6 NSF (Fundación Nacional de Ciencias), agencia del Gobierno de Estado Unidos independiente que impulsa investigación y educación en campos de Ciencias y la Ingeniería. 7 RDF (Resource Description Framework), framework para metadatos. 8 gSearch es un ligero plugin de JQuery que ayuda a integrar los resultados de Google con su sitio. 9 HP (Hewlett Packard Company), Empresa de tecnología de la Información. 10 MIT (Massachusetts Institute of Technology), Cambridge, Massachusetts (Estados Unidos). http://web.mit.edu/ 12 Las revistas electrónicas son publicaciones periódicas, generadas con elementos electrónicos, que facilitan su rápida difusión, y tienen un importante ahorro operativo, éstas pueden ser de suscripciones gratuitas o pagas. Cuando se habla de revistas electrónicas, se destaca por su versatilidad la plataforma llamada OJS (Open Journal System) que es un software de código abierto, desarrollado por PKP (Public Knowledge Project) 11 , que tiene la capacidad de gestionar, editar y publicar revistas o documentos periódicos en Internet. Esta herramienta tiene la característica de poder ser instalada y controlada de forma local, es totalmente configurable, con esto nos referimos a que se pueden definir los requerimientos, los editores, los procesos de revisión, toda la gestión es en línea, cuenta con módulos para suscripciones, la indexación se realiza a texto completo, posee herramientas de lectura, y genera notificaciones por correo electrónico. Y por ultimo esta OCS (Open Conference Systems), que es una herramienta de código abierto, desarrollada por PKP, para la administración y publicación web de conferencias, congresos y eventos en general. OCS crea un sitio web para cada evento registrado, gestionando todo lo referente a éste, envía convocatorias, maneja los pagos que realizan los participantes, en el caso de que se requiera, genera debates post evento, entre otras cosas. 11 PKP (Public Knowledge Project), http://pkp.sfu.ca/about 13 Propuesta Justificación Dada la gran producción intelectual de las instituciones académicas en general y de nuestra institución en particular y la falta de medios para resguardar y darle visibilidad a dicha información, surge la necesidad de implementar una plataforma compuesta por herramientas, que nos faciliten el resguardo y la gestión de publicaciones periódicas y eventos de índole académico. La implementación de estas herramientas, permite el acceso abierto a la información allí depositada, es la representación de la actividad intelectual de la comunidad universitaria dándole el prestigio que esto conlleva, además que asegura la preservación del contenido en el tiempo, incrementa la visibilidad de la institución y de los investigadores, posibilita la gestión del contenido de forma efectiva, transparente y promoviendo el intercambio y colaboración entre individuos de la comunidad, universidades y empresas. Además se apoya en el desarrollo y crecimiento de las iniciativas de acceso abierto sin restricciones económicas y de derechos intelectuales como el copyright 12 . Planteamiento del Problema Actualmente la Universidad Central de Venezuela, no cuenta con una plataforma que brinde resguardo en el tiempo, de la producción intelectual de la comunidad universitaria, tampoco cuenta con herramientas para la gestión y publicación de revistas y eventos. En la universidad existe un gran número de obras en todas sus formas, debido al poco presupuesto destinado a la preservación de éstas, se encuentran en un deterioro irreversible, gracias al pasar de los años, y una de las ventajas de los repositorios digitales es que se puede preservar una copia digital de las obras alargando su vida útil. 12 Copyright es un conjunto de derechos exclusivos, concedidos por el Estado al creador de una obra original o a su cesionario por un período limitado de tiempo, esto incluye el derecho a copia, distribución y adaptación del trabajo. 14 De igual forma las revistas de la institución, en algunas ocasiones deben destinar sus recursos para la publicación impresa, dejando a un lado la publicación en la web, ya que la universidad no cuenta con una plataforma destinada a la publicación de revistas electrónicas, estas revistas no poseen los recursos suficientes para costear el alojamiento en la web de sus publicaciones. Considerando lo expuesto anteriormente, surge el interés de implantar una plataforma, basada en software libre que brinde los servicios requeridos por la comunidad universitaria, donde se destacan la preservación y gestión del contenido intelectual producido por esta institución, la gestión y publicación de revistas electrónicas sin ningún tipo de costo adicional y la publicación de eventos académicos, aumentando la visibilidad y el renombre de la universidad. Objetivo General Diseñar e implementar una plataforma tecnológica basada en software libre, que permita la gestión, publicación y difusión de la producción científica, académica e institucional de la Universidad Central de Venezuela, permitiendo a su vez el resguardo del patrimonio intelectual Universitario, garantizando su disponibilidad y preservación en el tiempo. Objetivos Específicos • Estudiar las diferentes plataformas tecnológicas existentes, que permitan la implantación de una plataforma compuesta por repositorio, gestor de revistas y eventos. • Analizar los requerimientos de la comunidad universitaria y definir la estructura temática, para representar la institución en el repositorio. • Construir un prototipo funcional. • Modificar el entorno grafico, adecuándola a los requerimientos de la institución. • Definir políticas de acceso, para el depósito de contenido en el repositorio por parte de la comunidad universitaria. 15 • Diseñar Manuales de Auto Gestión, para la carga del material intelectual generado por la universidad por parte de los usuarios finales (Docentes y Administrativos). • Dictar cursos de inducción al personal Docente y administrativo con la finalidad de familiarizarlos con la interfaz y el proceso de carga de la información. Alcance Esta propuesta de Trabajo Especial de Grado contempla la implantación y adecuación de una plataforma basada en software libre que permita el resguardo, gestión, publicación, recuperación, consulta y difusión de la producción científica, académica e institucional de la Universidad Central de Venezuela. 16 Capítulo 2 Marco Teórico Acceso Abierto (Open Access) Es un movimiento que cuestiona el monopolio, que existe con las grandes editoriales y la distribución de la información. “Paradoja - La investigación financiadas con fondos públicos tienen que pagar para acceder a los resultados de las investigaciones publicadas y la sociedad entera también tiene que pagar (Se paga dos veces)” 13 . Lo que inició como una respuesta a la crisis de las revistas científicas, se convirtió en un movimiento que exigía el acceso abierto a la información o conocimiento científico. Con las siguientes declaraciones se formaliza y ha evolucionado el movimiento del Acceso Abierto (Open Access). Aquí se muestra un fragmento de la declaración de Budapest en el año 2002. Declaración de Budapest “Disponibilidad gratuita en la Internet pública, para que cualquier usuario la pueda leer, descargar, copiar, distribuir, imprimir, con la posibilidad de buscar o enlazar todos los textos de este artículo, recorrerlos para indexación exhaustiva, usarlos como datos para software, o utilizarlos para cualquier otro propósito legal, sin barreras financieras, legales o técnicas, distinta de la fundamental de ganar acceso a la propia Internet” 14 . Existen otras declaraciones importantes como la de “Bethesda Statement on Open Access Publishing” 15 que fue firmada en junio del 2003, y establece dos condiciones para hablar de acceso abierto; los autores dan acceso al trabajo de forma permanente y con ciertos usos permitidos, los trabajos han de estar disponibles de forma inmediata en repositorios estables, mantenidos por instituciones solventes e interoperables. Otra de las declaraciones fue la de “Berlin Declaration on Open Access to Knowledge in the Sciences 13 http://www.slideshare.net/carolina_devolder/ifts-13-tai-3-unidad-2-acceso-abierto 14 Budapest Open Access Iniciative (BOAI, 2002) 15 http://www.earlham.edu/~peters/fos/bethesda.htm 17 and Humanities” 16 , firmada en octubre del 2003, y es la que obtuvo mayor impacto en las políticas científicas, considerando el autoarchivo como una publicación, comprometiendo a las instituciones a poner todos los medios para implantar este mecanismo; promovió cambios en los sistemas de evaluación de las actividades científicas, y tomó como publicaciones no sólo documentos textuales y revisados. En la actualidad el término “acceso abierto” se emplea de manera internacional para referirse a aquel contenido que puede ser consultado de forma libre y gratuita. El movimiento de acceso abierto se implementa o se materializa de varias formas: • Ruta Dorada; a través de revistas electrónicas de acceso abierto o gratuito, el usuario puede consultar los sumarios y los textos completos de los artículos. • Ruta Verde; Con Repositorios temáticos o institucionales donde se almacenan los documentos generados por una comunidad. Y también existen otros medios como sitios web personales, e-books, foros de discusión, blogs, wikis, RSS, y redes personales. Para la implementación de estas rutas existen Software gratuitos como lo son CDSware, DSpace, Eprints, Fedora que sirven con Repositorios, en el área de revistas también contamos con algunas herramientas como lo son OJS, HyperJournal, DPubS, SOPS, y para las bibliotecas digitales esta Greentone entre otros. En los últimos años la popularidad del acceso abierto se ha incrementado y con ello la implantación de revistas electrónicas, repositorios institucionales y temáticos, creadas con la finalidad de poner a disposición las publicaciones que desinteresadamente aportan autores y editores. Repositorios Institucionales Un repositorio institucional es una herramienta compuesta por un grupo de servicios destinados a facilitar el almacenamiento, ordenamiento, preservación y redistribución de los documentos académicos en un formato digital. La organización SPARC 17 lo define como: 16 http://www.zim.mpg.de/openaccess-berlin/berlindeclaration.html 17 Sparc, es una alianza internacional de bibliotecas académicas y de investigación que trabajan para corregir los desequilibrios en el sistema de publicación académica. 18 • Perteneciente a una institución o de carácter institucional. Por el contrario de aquellos repositorios temáticos o bibliotecas digitales, los repositorios institucionales contienes o preservan toda aquella producción intelectual generada por la población activa de la institución. • Ámbito o contenido académico. Esto depende de las metas establecidas por la institución, un repositorio institucional puede contener cualquier producto o trabajo generado por los integrantes de la institución, este contenido puede incluir pre-grado, artículos revisados, monografías, ponencias, tesis, literatura gris, etc. • Acumulativos y perpetuos. Una de las funciones esenciales de los repositorios institucionales es preservar la producción en el tiempo, esto quiere decir que debe de ser acumulativa y perpetua. • Abierto e interactivos. Brindar acceso abierto a la información o al menos el menor número de barreras posible, facilitar el acceso al depósito por parte de la comunidad de investigación, y que los usuarios de la comunidad o fuera de sean capaces de realizar búsquedas y recuperar información del repositorio. El repositorio institucional debe ser capaz de soportar interoperabilidad, con el fin de facilitar el acceso a través de múltiples motores de búsqueda. Clifford Lynch define los Repositorios Institucionales de la siguiente forma: “Un Repositorio Institucional universitario es un conjunto de servicios que ofrece la Universidad a los miembros de su comunidad para la dirección y distribución de materiales digitales creados por la institución y los miembros de esa comunidad. Es esencial un compromiso organizativo para la administración de estos materiales digitales, incluyendo la preservación a largo plazo cuando sea necesario, así como la organización y acceso o su distribución”. Un repositorio institucional es aquel servicio que es prestado por las universidades que tiene como funciones apoyar la investigación, el aprendizaje, gracias a que sigue la línea del “Open Access”, Acceso abierto a la información. Estos servicios gestionan el contenido intelectual de la comunidad, almacenando, preservándolo en el tiempo de forma digital, e interoperable a través del protocolo OAI-PMH, y así aumentar la visibilidad e impacto. Beneficios de los Repositorios Institucionales para la Universidad y los Investigadores A continuación se listan los beneficios más importantes de la implantación de Repositorios Institucionales en las Universidades: 19 • Permiten el acceso abierto. • Representación de la actividad intelectual de la comunidad universitaria. • Producción intelectual en soporte digital: más accesible, recuperable, asegura su permanencia en el tiempo. • Incrementa la visibilidad y en consecuencia el prestigio de una institución. Los repositorios institucionales aumentan la visibilidad de los investigadores y de las instituciones. • Posibilita la gestión de los contenidos digitales de forma más efectiva y transparente. • Reutilización de contenidos en el ámbito de los objetos de aprendizaje. • Apoyo para las tareas de enseñanza y aprendizaje. • Además pueden ser archivos para la memoria institucional. • Un repositorio Institucional facilita la preservación de material, la conservación de colecciones digitalizadas. Según datos obtenidos por la autoridad OpenDOAR, a nivel mundial los repositorios institucionales se han incrementado considerablemente, como se muestra en siguiente grafica. Figura 0.1: Incremento de los Repositorios Institucionales (OpenDOAR) En la actualidad existe un aproximado de 1690 repositorios institucionales, distribuidos de la siguiente forma. 20 Figura 0.2: Proporción de Repositorios Institucionales por País (OpenDOAR) En el grupo de Otros se encuentra Suramérica con un importante aporte de 116 Repositorios institucionales, en donde Venezuela cuenta con 9, como se muestra en la siguiente grafica. Figura 0.3: Proporción de Repositorios Institucionales por País en Suramérica (OpenDOAR) Estos repositorios institucionales localizados en nuestro país son los siguientes(Tabla 1): 21 Repositorios Núm. Publicaciones. Base URL Software Bolivarium 7863 OAI DSpace Publicaciones realizadas por el Centro Jardín Botánico de Mérida 136 HTML Repositorio de Acceso Abierto EDUMED 18 OAI EPrints Repositorio Institucional de la Universidad de Los Andes 18044 OAI DSpace Saber UCAB 41614 OAI DSpace Servicios Bibliotecarios de la Universidad de Los Andes DSpace UCLA - Biblioteca de Administración y Contaduría 790 OAI [Indefinido] UCLA Biblioteca de Medicina 72415 OAI [Indefinido] UDOspace 1091 DSpace Tabla 1: Repositorios Institucionales en Venezuela Entre las plataformas tecnológicas más comunes para implementar un repositorio están: • DSpace (777) • [Indefinidos] (392) • EPrints (322) • Digital Commons (86) • OPUS (55) • dLibra (55) • Diva-Portal (28) • Greenstone (25) • HTML (23) • CONTENTdm (20) • ETD-db (19) • Fedora (17) • SciELO (17) • VITAL (17) • Open Repository (16) • HAL (15) • DigiTool (13) • Cybertesis (12) • XooNIps (12) • CDSWare (10) En la figura 4 se muestra las plataformas más usadas. Figura 0.4: Software más Usados en Implementación de Repositorios (OpenDOAR) 22 Comparación de Software para Repositorios Se debe comparar los Software Libre para averiguar si se adapta a ciertas necesidades particulares. Aquí se muestra un cuadro comparativo de diferentes plataformas de repositorios, realizado por RSP del Reino Unido: En la tabla 2 se muestran los tipos de Ítem soportados (almacenamiento y entrega). Documentos (pdf, doc, ppt,...) Imágenes (jpeg, gif, png,...) Videos (mpeg, avi,...) Audio (mp3, wav,...) Objetos de Aprendizaje (scorm,...) Otros CONTENTdm actual estándar actual estándar actual estándar actual estándar futuro estándar - Digital Commons actual estándar actual estándar actual estándar actual estándar - - DigiTool actual estándar actual estándar actual estándar actual estándar - - DSpace actual estándar actual estándar actual estándar actual estándar opcional Sitio web, dibujos CAD, 3D EPrints actual estándar actual estándar 3ra. versión 3ra. versión 3ra. versión Extensible a otros tipos EQUELLA actual estándar actual estándar actual estándar actual estándar actual estándar Puede almacenar, gestionar todo tipo de contenido Fedora actual estándar actual estándar actual estándar actual estándar actual estándar Puede almacenar gestionar todo t de contenido IntraLibrary actual estándar actual estándar actual estándar actual estándar actual estándar - Open Repository actual estándar actual estándar actual estándar actual estándar opcional Sitio web, dibujos CAD, 3D VITAL actual estándar actual estándar actual estándar actual estándar 3ra. versión - Zentity actual estándar actual estándar actual estándar actual estándar actual estándar Puede almacenar y gestionar todo t de contenido Tabla 2: Comparaciones entre plataformas para repositorios 18 18 http://www.dspace.org/images/publications/repository-software-survey-2009-03.pdf 23 En la tabla 3 se muestran los servicios de noticias soportados. RSS Atom CONTENTdm - - Digital Commons Sí - DigiTool - - DSpace Sí Sí EPrints Sí Sí EQUELLA Sí Sí Fedora Sí Sí IntraLibrary Sí - Open Repository Sí - VITAL Sí Sí Zentity Sí Sí Tabla 3: Comparaciones entre plataformas para repositorios (Continuación). En la tabla 4 se muestran los Sistemas Operativos. Linux Unix Solaris Windows Otros CONTENTdm Linux - Solaris Windows - Digital Commons - - - - Servicios alojados DigiTool Linux Unix Solaris - - DSpace Linux Unix Solaris Windows Mac EPrints Linux Unix Solaris - Mac EQUELLA Linux Unix Solaris Windows Opciones de alojamiento Fedora - Unix Solaris Windows - IntraLibrary Linux Unix Solaris Windows Mac Open Repository - - - - Servicios alojados VITAL Linux Unix Solaris - - Zentity - - - Windows - Tabla 4: Comparaciones entre plataformas para repositorios (Continuación) En la tabla 5 se muestran las Bases de datos MySQL Oracle PostgreSQL Sybase Otro CONTENTdm - - - - Base de datos basada en Texto/XML Digital Commons - - - - Servicios alojados 24 DigiTool - Oracle - - - DSpace - Oracle PostgreSQL - - EPrints MySQL Oracle - - - EQUELLA - - PostgreSQL - SQL Server. Opciones hospedaje Fedora MySQL - PostgreSQL - MS SQL Server IntraLibrary MySQL - - - - Open Repository - - - - Servicios alojados VITAL MySQL Oracle PostgreSQL - - Zentity - - - - MS SQL server 2008 Tabla 5: Comparaciones entre plataformas para repositorios (Continuación) En la tabla 6 se muestran los lenguajes de programación. PHP Perl JavaScript Ajax Otros CONTENTdm PHP - - - - Digital Commons - - - - - DigiTool - - - - - DSpace - - - - Java EPrints - Perl JavaScript Ajax - EQUELLA - - JavaScript Ajax Java Fedora - - - - Java IntraLibrary - - JavaScript Ajax Java Open Repository - - - - - VITAL - Perl JavaScript Ajax - Zentity - - JavaScript - - Tabla 6: Comparaciones entre plataformas para repositorios (Continuación) En la tabla 7 se muestra la interoperabilidad Máquina – Máquina OAI-PMH SWORD SWAP RoMEO Otro CONTENTdm actual estándar - - - Z39.50 Digital Commons actual estándar futuro estándar - - - DigiTool actual estándar - - - - DSpace actual estándar actual estándar futuro estándar - - EPrints actual estándar actual estándar actual estándar opcional FTP, WebDAV, 25 Cloud Storage EQUELLA actual estándar futuro estándar futuro opcional - Z39.50, SRW, WebDAV Fedora actual estándar 3 opcional - SRU/SRW IntraLibrary actual estándar actual estándar - - SRU/SRW Open Repository actual estándar actual estándar actual estándar opcional - VITAL actual estándar - - - - Zentity actual estándar actual estándar - AtomPub, RDFS, OAIORE Tabla 7: Comparaciones entre plataformas para repositorios (Continuación) Nota: Actual: Características de la versión del producto que los usuarios pueden descargar, instalar y utilizar en la actualidad. Futuro: Las funciones que están actualmente en fase de prueba o se han provisto para nuevas versiones. Estándar: Las funciones que vienen instaladas por defecto y cuya eliminación o desactivación requieren un esfuerzo extra. Opcional: Características que viene normalmente en el paquete, pero para usarlas el usuario debe instalar o activar. De un 3ro. : Las funciones que puede realizar utilizando el software o complementos de otros proveedores. [-]: el producto no tiene la función correspondiente. A continuación se describen algunas de las herramientas más populares para la implantación de repositorios institucionales: Eprints EPrints es un software libre compatible con el protocolo OAI-PMH, comparte muchas características que se encuentran en herramientas para gestión de documentos, pero principalmente es utilizada para los repositorios institucionales y revistas científicas. 26 EPrints se ha desarrollado por la Universidad de Southampton, y publicado bajo la licencia GPL, esta herramienta se convirtió en la primera y una de la más usada de su tipo, cuenta con una interfaz altamente configurable, esta herramienta fue lanzada en el año 2000, y es usado actualmente por más de 200 sitios. EPrints fue desarrollado en RedHAt Linux, pero se puede instalar en cualquier distribución de Linux, otros sistemas operativos tipo UNIX como OS-X y también Windows en sus versiones Vista ó XP. EPrints es una aplicación tanto web como por líneas de comandos, basada en la arquitectura LAMP, escrito en lengua Perl, pero basado en una arquitectura de plugin para solucionar tareas como importar, exportar datos, conversión de objetos para mejorar la indexación en los buscadores, y widgets para la interfaz de usuarios. Cuando hablamos de la configuración en el repositorio EPrints, tenemos que hacer modificaciones en los archivos de configuración escritos en Perl o XML, la apariencia de la herramienta es controlada con plantilla HTML, hojas de estilo CSS e imágenes. EPrints se puede visualizar en otros lenguajes cambiando los archivos XML que contienen frases utilizadas en la interfaz, las traducciones existentes son en idioma búlgaro, francés, alemán, húngaro, italiano, japonés, ruso, español y ucraniano. Características de Eprints Administradores de repositorios • Reducir las barreras para los depositantes, mientras que la mejora de la calidad de los metadatos y el valor de su colección. Depositantes • Depósitos de ahorro de tiempo. • Importar datos desde otros repositorios y servicios. • Autocompletar-como-usted-tipo para la entrada rápida de datos. Los investigadores • Optimizado para Google Scholar. • Trabaja con los gerentes de la bibliografía. • Funciona con aplicaciones de escritorio y los nuevos servicios Web 2.0. • RSS y alertas por correo electrónico a mantener al día. 27 Desarrolladores • Bien gestionados, con control de calidad del código marco. • Arquitectura de plugins flexibles para el desarrollo de las extensiones. Webmasters • Se integran fácilmente informes, listas bibliográficas, CV autor y los canales RSS en su presencia en la web corporativa. Instituciones • De alta especificación plataforma depósito de alta visibilidad, alta calidad de las instituciones colecciones de libre acceso. • Cumplir con los mandatos de la investigación financiador de acceso abierto. EPrints presenta una plataforma con una alta calidad, respaldada por un equipo con experiencia en la industria de investigación, biblioteca y publicaciones. Fedora Fedora es el acrónimo de Flexible Extensible Digital Object Repository Architecture. Fedora es un repositorio de contenido digital flexible, con una amplia variedad de usos, como lo son, la de gestor de activos digitales, repositorio institucional, archivos digitales, sistema de gestión de contenido, editoriales académicas, y bibliotecas digitales. El repositorio de Fedora es capaz de almacenar cualquier tipo de contenido digital, como documentos, videos, datos, imágenes, metadato de los contenidos, y estos contenidos pueden estar en cualquier formato. El repositorio de Fedora es un producto de Fedora Commons, una organización sin fines de lucro cuya misión es proporcionar la tecnología que permite el almacenamiento duradero y el acceso a los contenidos digitales del registro de nuestro patrimonio cultural y científico. El repositorio de Fedora es un software libre bajo la licencia Apache 2.0. Esta herramienta fue desarrollada por el departamento de documentación de la Universidad de Cornell y la Biblioteca de la Universidad de Virginia, este proyecto fue financiado por DARPA (Defense Advanced Research Projects Agency, Agencia de Investigación de Proyectos Avanzados de Defensa) y la NSF (National Science Foundation). En esta aplicación, todo el contenido es ges posee componentes (flujo de datos) que contienen tanto la data como los metadatos. Cada flujo de datos puedes ser manejado de manera externa ó directamente por el repositorio, posee accesibilidad web según sea necesario. L cualquier cantidad de datos y metadatos de los componentes en cualquier patrón deseado. La Figura 5 muestra el modelo de datos básicos de un objeto de Fedora digital. Cada objeto está representado por un archivo XML, que contiene información de cómo encontrar todos los componentes del objeto e información importante, necesaria para asegurar su durabilidad a largo plazo. Un objeto de Fedora digital se compo 1. Identificador de objetos digitales: digital. 2. Propiedades del sistema: es necesario para gestionar y realizar el seguimiento del objet 3. Datastream(s): El elemento en un objeto digital de Fedora que representa un elemento de contenido. Figura 28 En esta aplicación, todo el contenido es gestionado como objetos, cada objeto posee componentes (flujo de datos) que contienen tanto la data como los metadatos. Cada flujo de datos puedes ser manejado de manera externa ó directamente por el repositorio, posee accesibilidad web según sea necesario. Los objetos pueden tener cualquier cantidad de datos y metadatos de los componentes en cualquier patrón 5 muestra el modelo de datos básicos de un objeto de Fedora digital. Figura 0.5: Modelo de Objeto Cada objeto está representado por un archivo XML, que contiene información de cómo encontrar todos los componentes del objeto e información importante, necesaria para asegurar su durabilidad a largo plazo. Un objeto de Fedora digital se compone de tres partes: Identificador de objetos digitales: un identificador único y persistente del objeto Propiedades del sistema: Un conjunto de propiedades definidas por el sistema que es necesario para gestionar y realizar el seguimiento del objeto en el repositorio. El elemento en un objeto digital de Fedora que representa un elemento de contenido. Figura 0.6: Flujos de Datos de Objetos Digitales tionado como objetos, cada objeto posee componentes (flujo de datos) que contienen tanto la data como los metadatos. Cada flujo de datos puedes ser manejado de manera externa ó directamente por el os objetos pueden tener cualquier cantidad de datos y metadatos de los componentes en cualquier patrón 5 muestra el modelo de datos básicos de un objeto de Fedora digital. Cada objeto está representado por un archivo XML, que contiene información de cómo encontrar todos los componentes del objeto e información importante, necesaria un identificador único y persistente del objeto Un conjunto de propiedades definidas por el sistema que o en el repositorio. El elemento en un objeto digital de Fedora que representa un 29 Las propiedades básicas que el modelo de objetos definidos para el flujo de datos son los siguientes: • Identificador Datastream: un identificador para el flujo de datos que es único dentro del objeto digital. • Estado: el estado de Datastream inactivo, activo, o eliminados. • Fecha de Creación: la fecha / hora que el Datastream se ha creado. • Fecha de modificación: la fecha / hora que el Datastream fue modificada. • Versionable: un indicador (verdadero / falso). • Etiquetas: una etiqueta descriptiva para el flujo de datos. • Tipo MIME: el tipo MIME de la Datastream. • Identificador de formato: un identificador de formato opcional para el flujo de datos. • Los identificadores alternativos: uno o más identificadores alternativos para el flujo de datos. Estos identificadores pueden ser identificadores locales o identificadores globales. • Checksum: un sello de integridad para el flujo de datos que puede ser el cálculo usando uno de los muchos algoritmos estándar (MD5, SHA-1, etc.). • Contenido Bytestream: El Datastream (como un documento, imagen digital, video, registro de metadatos). • Grupo control: referentes al contenido del flujo de datos. La herramienta cuenta con un registro de auditoría de aquellas acciones que han afectado el objeto. Características de Fedora • Almacenar todo tipo de contenidos y sus metadatos • Acceso a los datos desde la web APIs (REST / SOAP) • Proporcionar búsqueda RDF (SPARQL) • Reconstructor de servicios (recuperación y migración de datos) • Todo el repositorio puede ser reconstruido a partir de los objetos digitales y archivos de contenido. • Modelo de arquitectura por contenido (define los "tipos" de los objetos de acuerdo a su contenido) • Muchas opciones para almacenamiento (sistemas de base de datos y archivo) • Mensajería JMS (sus aplicaciones pueden "escuchar" los eventos del repositorio) • La interfaz de administración es Web • Provee Servicios OAI-PMH • Servicio de búsqueda GSearch (texto completo) • Muestra múltiples interfaces y totalmente Configurables Arquitectura de Fedora Este diagrama muestra en términos generales repositorio. Los usuarios interactúan con el contenido del repositorio a través de las aplicaciones cliente, los navegadores web, programas por lotes, o aplicaciones de servidor. Estas aplicaciones acceden a los datos del repositorio a través de cuatro API’s que Fedora les provee: gestión, acceso, búsqueda (HTTP o SOAP), y el OAI provisto por el API (HTTP). Figura 0 Clientes y la interacción con los servicios we Este diagrama muestra tareas como la inserción de objetos o consultar en el repositorio a través de un cliente web o navegador. Estas aplicaciones clientes el repositorio interactúa con los servicios web para realizar las transformaciones de datos que son requeridas o solicitadas por los usuarios, estos datos transformados son enviados a los usuarios a través de los servicios de interfaz web. 30 Este diagrama muestra en términos generales, la estructura de todo el Los usuarios interactúan con el contenido del repositorio a través de las aplicaciones cliente, los navegadores web, programas por lotes, o aplicaciones de Estas aplicaciones acceden a los datos del repositorio a través de cuatro API’s ue Fedora les provee: gestión, acceso, búsqueda (HTTP o SOAP), y el OAI provisto por el 0.7: Arquitectura del sistema Fedora (simplificado) Clientes y la interacción con los servicios web Este diagrama muestra, de una manera más sencilla como los usuarios realizan tareas como la inserción de objetos o consultar en el repositorio a través de un cliente web o navegador. Estas aplicaciones clientes, interactúan con los servicios web, y a su el repositorio interactúa con los servicios web para realizar las transformaciones de datos que son requeridas o solicitadas por los usuarios, estos datos transformados son enviados a los usuarios a través de los servicios de interfaz web. la estructura de todo el Los usuarios interactúan con el contenido del repositorio a través de las aplicaciones cliente, los navegadores web, programas por lotes, o aplicaciones de Estas aplicaciones acceden a los datos del repositorio a través de cuatro API’s ue Fedora les provee: gestión, acceso, búsqueda (HTTP o SOAP), y el OAI provisto por el de una manera más sencilla como los usuarios realizan tareas como la inserción de objetos o consultar en el repositorio a través de un cliente interactúan con los servicios web, y a su vez el repositorio interactúa con los servicios web para realizar las transformaciones de datos que son requeridas o solicitadas por los usuarios, estos datos transformados son enviados Es importante destacar que los usuarios interactúan con el repositorio a través de la API 19 , y da la sensación, así. Figura En el siguiente capítulo se hablara de la plataforma para repositorio más popular llamada DSpace, ésta es una herramienta de software libre desarrollada por HP y el MIT. 19 API (Application Programming Interface) 31 te destacar que los usuarios interactúan con el repositorio a través de que se está interactuado directamente con el objeto pero no es Figura 0.8: Interacción Cliente y Servicios Web En el siguiente capítulo se hablara de la plataforma para repositorio más popular llamada DSpace, ésta es una herramienta de software libre desarrollada por HP y el MIT. API (Application Programming Interface) te destacar que los usuarios interactúan con el repositorio a través de que se está interactuado directamente con el objeto pero no es En el siguiente capítulo se hablara de la plataforma para repositorio más popular llamada DSpace, ésta es una herramienta de software libre desarrollada por HP y el MIT. 32 Capítulo 3 DSpace DSpace es una plataforma de código abierto que fue liberado en el 2002, bajo la licencia BSD que permite a los usuarios personalizar o extender el software según sus necesidades, este software es producto de una alianza de HP (Hewlett-Packard) y el MIT (Massachusetts Institute of Technology, Instituto tecnológico de Massachusetts). DSpace provee herramientas para la administración y preservación de colecciones digitales, también permite el acceso fácil y abierto de todo tipo de contenido digital. Soporta una gran variedad de datos como libros, tesis, fotografías, videos, datos de investigación, y otras formas de contenido digital. Este software es usado por muchas comunidades de investigación a nivel mundial para satisfacer una gran variedad de necesidades, tales como: • Repositorios Institucionales. • Repositorios de objetos de aprendizaje. • Tesis electrónicas. • Administración de registros electrónicos. • Preservación digital. • Publicaciones. DSpace es la plataforma de repositorio más usada en el mundo según las estadísticas obtenidas por OpenDOAR y ROAR, con las de 700 repositorios instalados en el mundo, y en la página de DSpace muestra más de 1100 instalaciones registradas. Razones para utilizar DSpace Las razones fundamentales para la utilización de esta herramienta esta descrita a continuación: • La más grande comunidad de usuarios y desarrolladores en todo el mundo. • Existen actualmente más de 1000 organizaciones que utilizan DSpace en un ambiente de producción, donde el uso más común es Repositorio Institucional. • Es software libre de código abierto. 33 • La plataforma es de código abierto, disponible de forma gratuita, y puede ser descargado desde el repositorio de software de código abierto SourceForge. Este código esta liberado bajo la licencia open source BSD, esto significa que cualquier particular u organización puede utilizar, modificar, e incluso integrar el código en sus aplicaciones comerciales, sin pagar derechos de licencia, y si el código es mejorado comparta esas modificaciones con la comunidad. Existen más de 100 colaboradores en todo el mundo contribuyendo con código, parches, DSpace es administrado por un pequeño grupo de desarrolladores voluntarios que trabajan en conjunto con la comunidad. • Completamente personalizable para satisfacer sus necesidades. o Las principales formas de personalizar esta plataforma son las siguientes: Personalizar la interfaz de usuario, DSpace ofrece dos opciones de interfaz; la tradicional basada en JSP y Manakin basada en XML. o Personalizar los metadatos; DSpace utiliza Dublin Core20 por defecto, sin embargo puede cambiar o añadir, cualquier campo para personalizarlo según sus requerimientos. o Posibilidad de configurar la búsqueda y la navegación, se puede definir cuales campos se mostraran en la navegación, tales como autor, título, fecha, etc., también puede seleccionar cuales campos de los metadatos realizara las búsquedas. o Capacidad de utilizar los mecanismos de autenticación local, DSpace cuenta con una gran variedad de plugins para la mayoría de los métodos de autenticación, incluyendo: LDAP 21 , Shibboleth 22 , X.509 23 , basados en IP, además DSpace cuenta con su propio sistema de autenticación interna, también puede ser configurado para utilizar varios métodos de autenticación, o crear un plugin de autenticación si utiliza un mecanismo de autenticación personalizado. o Base de datos configurable, se puede elegir entre PostgreSQL y Oracle para la base de datos donde se gestionan los metadatos. o Posibilidad de elegir el idioma por defecto, DSpace está disponible en más de veinte idiomas, puede configurar que DSpace sea compatible con varios idiomas. 20 Dublin Core es un modelo de metadatos, elaborado y auspiciado por la DCMI (Dublin Core Metadata Initiative), http://dublincore.org/ 21 LDAP 22 Shibboleth 23 X.509 34 • Utilizado por el área educativa, gobierno, instituciones privadas y comerciales. • DSpace es utilizado por Instituciones de educación superior, museos, archivos estatales, consorcios y sociedades mercantiles para la gestión de sus archivos digitales. • Puede ser instalado fácilmente • DSpace provee una interfaz web fácilmente configurable, y puede ser instalado en Linux, Mac OSX, Windows. • Se puede preservar y gestionar todo tipo de contenido digital • DSpace puede reconocer y manejar una gran cantidad de formatos y tipos de archivos, como PDF, Word; JPEG, MPEG, archivos TIFF, entre otros, también cuenta con la capacidad de agregar un archivo no reconocido para luego en el futuro identificarlo 24 . Descripción Funcional Figura 0.1: Modelo de Datos DSpace 24 http://www.dspace.org/why-use 35 Diagrama de modelo de datos La forma en la cual los datos están organizados en DSpace, puede reflejar la estructura organizativa. Cada sitio DSpace está dividido en Comunidades, y estas se pueden dividir en sub-comunidades que reflejan lógicamente la estructura típica de la institución. Las comunidades están compuestas por colecciones, que agrupan contenido relacionado con dicha colección, pero una colección puede pertenecer a más de una comunidad. Cada colección se compone de ítems, que son elementos básicos de los archivos, donde cada ítem es propiedad de una colección, adicionalmente un ítem puede aparecer en otras colecciones; sin embargo un ítem le pertenece a una y solo a una colección. Los ítems son adicionalmente sub-divididos en paquetes llamados cadenas de bits o bitstreams. Los Bitstreams son, como su nombre lo sugiere, los usualmente llamados archivos de computadoras. Los bitstreams son estrechamente relacionados por ejemplo con documentos HTML, que están compuestos por el archivo HTML e imágenes, y son organizados en paquetes o bundles. En la práctica la mayoría de los ítems contienen estos paquetes llamados: • ORIGINAL – El paquete con el original depositado. • THUMBNAILS – Miniatura de cualquier imagen de bitstreams. • TEXT – texto completo extraído del Bitstreams original, para la indexación. • LICENSE – contiene la licencia otorgada o aceptada por el depositante, para conceder los derechos especificados en ésta a la institución. • CC_LICENSE – contiene la licencia de distribución, en este caso licencia Creative Commons. Esta licencia especifica que los usuarios pueden descargar el contenido, aparte de otros derechos. Cada Bitstreams es asociado con un formato bitstreams. Debido a que uno de los aspectos importantes en DSpace es la preservación, es importante capturar el formato del archivo depositado. En DSpace, el formato de bitstreams referencia el formato del archivo en particular. Una parte importante de bitstreams es que de forma explícita o implícita este material puede ser interpretado. Por ejemplo, la interpretación de bitstreams codificados en el estándar JPEG para compresión de imágenes estáticas, se define en forma explícita en la norma ISO / IEC 10918-1. La interpretación de Bitstreams en el formato Microsoft Word 2000, se define de forma implícita, haciendo referencia a la aplicación Microsoft Word 2000. Los formatos bitstreams pueden ser más específicos que los tipos MINE o los sufijos de los archivos. Por ejemplo, application/ms-word abarca 36 varias versiones de la aplicación Microsoft Word, cada una de estas versiones produce un bitstreams con características supuestamente diferentes. Cada formato de bitstreams tiene un nivel de soporte, lo que indica que la institución anfitriona es capaz de preservar el contenido en el formato a futuro. Existen tres niveles de soporte para los formatos bitstreams: • Soportado – el formato es reconocido, y la institución confía en que se puede hacer bitstreams de este formato usable en el futuro, permitiendo el uso de diferentes técnicas como la migración y emulación entre otras para asegurar su preservación. • Conocido – el formato es reconocido, y la institución se compromete a preservar el bitstreams tal como esta, obteniendo la mayor información la en un futuro subir al nivel “soportado”. • Sin Soporte – el formato es desconocido, la institución se compromete a preservar el bitstreams tal como está y permitir la recuperación. Cada ítem tiene un registro de metadatos Dublin Core. Otros metadatos pueden ser almacenados en un ítem como un bitstreams en serie, pero almacenamos Dublin Core para todos los ítems y facilitar la interoperabilidad y descubrimiento. El Dublin Core puede ser introducido por lo usuarios finales, o puede ser obtenidos de otros metadatos en el proceso de depósito del contenido. Los ítems pueden ser removidos de DSpace de dos maneras: puede ser “retirado”, lo que significa que el archivo permanece pero es completamente oculto. Y también puede ser “borrado”, en cuyo caso todos los rastros de ese archivo son removidos. Administrador de Plugin El PluginManager es un simple contenedor de componentes. Este administrador crea y organiza los componentes o Plugin, y ayuda a seleccionar un plugin cuando existen muchas opciones posibles, también facilita un control sobre el ciclo de vida de un plugin. Un Plugin es definido por una interfaz en java. Un Plugin es una aplicación que se relaciona con otra para aportar una nueva función generalmente muy específica. 37 Metadatos DSpace cuenta con tres tipos de metadatos: • Metadatos descriptivos: DSpace soporta múltiples esquemas de metadatos para la descripción de los Ítems. DSpace ofrece por defecto un esquema de metadatos Dublin Core. • Metadatos administrativos: Esto incluye los metadatos de preservación, procedencia, y políticas de autorización, la mayoría de estos datos se toman dentro del esquema relacional de DSpace. Algunos de estos metadatos son los tamaños de bitstreams, los tipos MINE. Estos metadatos son replicados en registros Dublin Core para que sea accesible fuera de DSpace. • Metadatos estructurales: Esto incluye información de cómo presentar un artículo, o bitstreams de un ítem, a un usuario final, y las relaciones entre las partes del ítem. Además de algunos metadatos básicos, un bitstreams también cuenta con un “identificador de secuencia” que lo identifica dentro del ítem. Esto se utiliza para producir un “identificador persistente” de bitstreams para cada bitstreams. Adicionalmente la estructura de metadatos puede almacenar una serie de bitstreams, pero DSpace actualmente no tiene soporte nativo para esto. E-People y Grupos Aunque algunas de las funciones se puedan hacer de forma anónima, existen otras que requieren ciertos privilegios. E-People y grupos son la forma en que DSpace identifica a los usuarios de la aplicación para otorgarle privilegios. E-People DSpace contiene la siguiente información sobre cada e-people: • E-mail • Nombre y apellido • Si el usuario es capaz de iniciar sesión en la interfaz web y si necesita un certificado para hacerlo. • Una contraseña (encriptado). 38 • Una lista de colecciones de las cuales quiere recibir notificaciones de ítems nuevos. • Forma de registro, si se realizo el registro de forma automática con datos suministrados por la institución o la persona se registro con el sistema. • El ID de red para el registro LDAP correspondiente, si la autenticación LDAP se utiliza para este E-People. Grupos Los grupos son otro tipo de entidad, a la cual se le pueden conceder permisos en el sistema de autorización. Un grupo es una lista explicita de e-people, cualquier usuario identificado como e-people también se beneficia de los privilegios otorgados al grupo. Sin embargo, una sesión de aplicación se le puede asignar la pertenecía a un grupo sin ser identificado como un e-people. Los administradores también pueden utilizar los grupos de “roles” para gestionar la concesión de privilegios de manera eficiente. Autenticación La autenticación es cuando una sesión de aplicación identifica positivamente como perteneciente a un E-People y/o un grupo. Aquí se destaca algunas de las ventajas del sistema de autenticación que ofrece DSpace: • Separa la autenticación de la interfaz de usuario web. • Modularidad mejorada: los métodos de autenticación son independientes el uno del otro. • Soporta limpiador para la autenticación “implícita” donde el nombre del usuario es buscado en el entorno de la solicitud web, como por ejemplo, en un certificado de cliente X.509. Autorización El sistema de autorización de DSpace se basa en la asociación de acciones que se pueden llevar a cabo con los objetos y las listas de E-People. Las asociaciones de acciones se llaman políticas y las listas de E-People se llaman grupos. Existen dos grupos: los “administradores” que pueden hacer cualquier cosa en el sitio, y los anónimos que es una lista que contienen todos los usuarios del sistema. La asignación de políticas a E-People de 39 esa lista de anónimos le otorga permisos a realizar esa acción. Los permisos tienen que ser explícitos, la falta de un permiso explicito en una política es por defecto “negado”. Los permisos no son conmutados; por ejemplo, si una E-People tiene permisos de lectura sobre un ítem, eso no significa que necesariamente tenga permisos de lectura sobre los paquetes (Bundles) y los Bitstreams. Actualmente las comunidades, colecciones e ítems pueden ser encontradas examinando o utilizando el sistema de búsqueda de la plataforma, independientemente si estas tienen permisos de lectura. Aquí se muestra las acciones: En esta tabla se muestra las acciones que se aplican a las Colecciones. ADD/REMOVE Añadir o eliminar ítems (ADD = permiso para enviar ítem) DEFAULT_ITEM_READ Todos los ítems enviados heredan permisos de lectura DEFAULT_BITSTREAM_READ Todos los Bitstreams de los ítems enviados heredan permisos de lectura. Nota esto tiene efecto en el momento en que se envía el ítem, si un bitstreams es agregado luego no toma esta política. COLLECTION_ADMIN Los administradores de la colección pueden editar un ítem en una colección, retirar el ítem, mapear otro ítem en esta colección. Tabla 8: Colecciones En esta tabla se muestra las acciones que se aplican a los Ítems. ADD/REMOVE Agregar o quitar paquetes (bundles) READ Puede ver el ítem (los metadatos del ítem siempre son visibles) WRITE Puede modificar el ítem Tabla 9: Ítem En esta tabla se muestra la acción que se aplican a los Bundle. ADD/REMOVE Agregar o eliminar un bitstreams de un paquete (bundle) Tabla 10: Bundle En esta tabla se muestra las acciones que se aplican a los Bitstreams. READ Ver bitstreams WRITE Modificar bitstreams Tabla 11: Bitstreams 40 Como se podrá notar, la acción DELETE no está. Para poder eliminar un objeto de los archivos, primero tendríamos que quitar todos los permisos de todos los objetos que contiene a éste. Las políticas se pueden aplicar de forma individual o grupal. Flujo de trabajo Una colección puede tener un máximo de tres pasos en el flujo de trabajo. La secuencia en el flujo de trabajo es de la siguiente forma: la colección recibe un archivo. Si la colección tiene un grupo asignado a este paso, el paso 1 es invocado y el grupo es notificado. De lo contrario el paso 1 es omitido. Del mismo modo los pasos 2 y 3 se llevan a cabo si existe un grupo asignado, el envío será directamente archivado o depositado en la colección correspondiente. Cuando se invoca un paso, el envío se coloca en la cola de trabajos del grupo asociado a este paso. Si uno de los miembros del grupo atiende la tarea, esta es removida de la cola de trabajo, para evitar que otro miembro del grupo atienda esta tarea al mismo tiempo, sin darse cuenta. El miembro del grupo que ha tomado la tarea de la cola, puede llevar a cabo una de estas tres acciones: Flujo de trabajo (Pasos) Posibles acciones 1 Puede aceptar o rechazar el envío 2 Puede editar los metadatos proporcionados por el usuario, pero no puede cambiar los archivos enviados. Puede aceptar o rechazar el envío. 3 Puede editar los metadatos proporcionados por el usuario, pero no puede cambiar los archivos enviados. No podrá rechazar el envío. Tabla 12: Acciones para Flujo de Trabajo En la figura 10 se muestra el flujo de trabajo en DSpace. 41 Figura 0.2: Flujo de Trabajo de DSpace Si un envío es rechazado, el motivo es enviado por correo electrónico al remitente, y este es retornado a la sitio de “Mi DSpace”. El remitente puede hacer las modificaciones pertinentes y realizar el envío nuevamente, con lo cual el proceso comienza de nuevo. Si el envío es aceptado, se pasa al siguiente paso del flujo de trabajo. Si no hay mas pasos a seguir según el flujo de trabajo, el envío es depositado en los archivos del sistema. Una última posibilidad es que el flujo de trabajo sea abortado, esto se puede lograr como administrador desde la interfaz web. Handle Los investigadores necesitan un punto de referencia estable para sus obras. Para ayudar a solucionar este problema, una de las características centrales de DSpace es la creación de un identificador persistente para cada elemento o ítem, colección, y comunidad almacenados en DSpace. DSpace utiliza el Sistema Handle CNRI para la creación de estos identificadores. DSpace utiliza Handle principalmente como un identificador único de manera global. Cada sitio con DSpace necesita obtener un prefijo que va a ser su identificador único para CNRI. Identificadores persistentes de Bitstreams Similar al los handle de los ítems en DSpace, los bitstreams también tienen identificadores persistentes. Son más volátiles que los handle ya que son creados por el 42 servidor y en el caso de que el contenido sea movido a otro servidor u organización este cambiaria. Búsqueda y navegación DSpace permite a los usuarios finales buscar contenido de distintas maneras, incluyendo: • A través de una referencia externa, como Handle. • La búsqueda de una o más palabras extraídas de los metadatos o del texto completo. • La navegación por los títulos, autores, fechas o índices de títulos, con imágenes en miniatura opcionales la búsqueda es un componente esencial en DSpace. Soporta HTML En la actualidad la mayor parte de contenido se soporta de forma simple con cargas y descargas de bitstreams, esto está bien para la mayoría de los formatos como los son PDF, documentos de Microsoft, hojas de cálculo, etc. Pero para documentos HTML es un poco más complicado, debido a las siguientes características: • Las páginas web tienden a consistir de varios archivos • Las páginas web también vincula o incluye contenido de otros sitios, por lo general imperceptible para el usuario. • A menudo las páginas se producen de forma dinámica por el software que se ejecuta en el servidor. Soporta OAI La iniciativa de archivos abiertos ha desarrollado un protocolo para la recolección de metadatos. Esto permite recuperar los metadatos de varias fuentes, y ofrecer servicios con esta información. Este servicio permite a los usuarios acceder a información de un gran número de sitios. DSpace expone sus metadatos Dublin Core de los Ítems que están 43 públicos y accesibles. Además, la estructura de las colecciones es expuesta a través del protocolo OAI. La macro de código abierto OAICat de la organización OCLC (Online Computer Library Center) es usada para proveer esta funcionalidad. DSpace también es compatible con el protocolo OAI-PMH. Soporta Creative Commons DSpace proporciona soporte a las licencias Creative Commons para la distribución de los elementos del repositorio. Esta representa una alternativa al Copyright. Si la opción esta activa en la configuración, los usuarios pueden seleccionar esta licencia Creative Commons en el proceso de envío. Y ésta se usara para la difusión del contenido enviado. Suscripciones Como se menciono anteriormente, los usuarios finales pueden suscribirse a las colecciones con el fin de recibir notificaciones vía correo electrónico de aquellos nuevos elementos depositados en la colección. De lo contrario el usuario no recibirá ninguna notificación. Los RSS de nuevos elementos en las colecciones y comunidades también están disponibles. Importación y Exportación DSpace incluye herramienta para la importación y exportación de elementos por lotes, utilizando una estructura simple, donde se almacenan los metadatos Dublin Core en un archivo XML. Esto es usado para el movimiento de contenido entre DSpace y otros sistemas. También cuenta con una herramienta de exportación basada en METS. Estadísticas DSpace ofrece estadísticas del sistema para el uso del administrador, así como estadísticas a nivel de los elementos o ítems, comunidades y colecciones. El sistema 44 puede generar de forma automática diversos informes estadísticos sobre el contenido y el uso del sistema. Estos son generados mediante el análisis de los registros de DSpace y pueden ser desglosadas mensualmente. El informe incluye las siguientes secciones: • Una visión general personalizada de las actividades en el archivo. Por ejemplo: Número de Ítems archivados, número de visitas a un Bitstreams, número de visitas a páginas de ítems, número de visitas a páginas de colecciones, etc. • Resumen personalizado del contenido de los archivos • Lista de visitas de ítems fallidos • Detalles de acciones realizadas. • Inicio de sesión de usuarios • Búsquedas más populares • Información sobre nivel de registro • Procesamiento de la información. Las estadísticas de acceso muestran: • Total de vistas a la página • Total visitas por mes • Descargas • Visitas por país • Visitas por ciudad Chequeo del Checksum El propósito del chequeo, es verificar que el contenido en el repositorio DSpace no se ha dañado o ha sido manipulado. La función se puede invocar desde una línea de comandos en el momento o a través de algo similar a un cron. Existen opciones para grandes repositorios que no permiten hacer una revisión en una sola corrida. La herramienta es extensible para generar reportes y realizar chequeos por prioridad. 45 Como funciona DSpace En la figura muestra la dinámica de repositorio digital en DSpace. Figura 0.3: Dinámica de Repositorio Digital 25 1.- Interfaz Web facilita el envió de elementos a ser depositados. DSpace fue diseñado para manejar cualquier formato de documentos de texto simple de un conjunto de datos y video digital. 2.- Los archivos de datos, también llamados Bitstream o flujos de bits, son organizados en conjuntos relacionados. Cada Bitstream tiene un formato e información técnica. Esta información técnica se mantiene con cada Bitstream. 3.- Un Ítem es un "archivo atómico" que consiste en agrupar, relacionar contenidos y descripciones asociadas (metadatos). Un Ítem tiene Metadatos, metadatos que son indexados por navegadores y buscadores. Los Ítem son organizados en colecciones de materiales relacionados lógicamente. 25 http://www.dspace.org/images/stories/dspace-diagram.pdf 46 4.- Una comunidad es el nivel más alto de la jerarquía de contenido en DSpace. Que corresponden a partes de la organización, tales como los laboratorios de los departamentos, centros de investigación o escuelas. 5.- La arquitectura modular de DSpace permite la creación de grandes, multidisciplinarios repositorios que en última instancia, se puede ampliar a través de los límites institucionales. 6.- DSpace se ha comprometido a ir más allá de la preservación de archivos ofreciendo una preservación funcional, donde los archivos se mantienen accesibles con sus formatos, media, y aquellos paradigmas que evolucionan en el tiempo manteniendo el mayor numero de formatos posibles. 7.- La interfaz de usuario final permite navegar y buscar los archivos. Una vez que el Ítem es localizado, el archivo formateado en web puede mostrar en un navegador, mientras que otros formatos se pueden descargar y abrir con un programa de aplicación adecuado. Arquitectura del sistema DSpace se organiza en tres capas, cada una de ellas consta de una serie de componentes, que se muestra en la figura. Figura 0.4: Arquitectura del Sistema DSpace 26 26 https://wiki.duraspace.org/display/DSDOC/Architecture 47 La capa de almacenamiento es responsable del almacenamiento físico de los metadatos y contenido. La capa lógica de Negocio se ocupa de gestionar el contenido del archivo, los usuarios, la autorización y el flujo de trabajo. La capa de aplicación contiene componentes que se comunican con el mundo exterior, como por ejemplo, la interfaz de usuario web, el servicio de recolección de metadatos (protocolo OAI). Vale destacar que cada capa invoca a la capa inferior, por ejemplo la capa de aplicación no puede usar directamente la capa de almacenamiento. Cada componente de la capa de lógica de negocio y almacenamiento tiene un API público definido. La unión de los API’s de los componentes se conoce como capa de almacenamiento y las API’s públicas a la capa de lógica de negocios. Estas API’s son clases, objetos, y métodos en java. Es importante destacar que cada capa es confiable. Aunque la lógica para la acción de autenticación es en la capa lógica de negocios, el sistema se basa en una aplicación individual en la capa de aplicación para su correcta y segura autenticación. La razón de ser de este diseño, es que los métodos de autenticación pueden variar entre las diferentes aplicaciones, por ello tiene sentido salir de la lógica y responsabilidad para con estas aplicaciones. El código fuente está organizado para cohesionar estrictamente con esta arquitectura de tres capas. Además, solo los métodos de los componentes de las API´s públicas se les dan un nivel de acceso público. Esto significa que el compilador de java ayuda a asegurar que el código fuente se ajuste a la arquitectura. Otra de las herramientas importantes en el movimiento de acceso libre a la información es aquella que gestiona y publica revistas en la web, y en el siguiente capítulo, mostraremos las características del software mas importante en el área de gestión y publicación de contenidos periódicos, en este caso revistas electrónicas. 48 Capítulo 4 Open Journal System Open Journal System (OJS) es un software de código abierto para la gestión, edición y publicación de revistas electrónicas y documentos periódicos en Internet, desarrollado por el Public Knowledge Project publicado bajo la licencia GNU Public License (GPL) versión 2, para ampliar y mejorar el acceso a la investigación. OJS ayuda en cada una de las etapas del proceso de publicación arbitrada, reduciendo el tiempo y la energía que se le dedican al manejo de las tareas que involucran al proceso editorial de una revista. A través de la publicación y la indexación de la investigación a texto completo, OJS pretende mejorar tanto la calidad académica en cuanto a investigación se refiere. OJS es un sistema de código abierto a disposición de cualquier revista a nivel mundial con el propósito de hacer publicaciones siguiendo el movimiento de acceso libre a la información, esta es una opción viable, ya que aumenta el número de lectores, y con ello contribuye con el bien público a escala mundial. Características A continuación se presentan algunas de las características importantes en OJS (Open Journal System): • OJS es instalado y controlado localmente • El editor configura los requerimientos, los editores de secciones, y los procesos de revisión. • Publicación en línea, revisión por pares, y la gestión de todo el contenido. • Modulo para suscripción • Indexación de texto completo • Herramientas para la lectura del contenido, con base en los campos y elecciones hechas por el editor. • Notificaciones por correo electrónico y la capacidad de comentar por pararte de los lectores. 49 • Completo soporte textual en línea • Modulo de pagos de mensualidades de la revista, donaciones, etc. Tecnologías Estas son las tecnologías que se usan en el desarrollo y ejecución de la herramienta: • Open Journal System está escrito en PHP orientado a objetos, utilizando un sistema de plantilla Smarty para la Interfaz gráfica. Los datos son almacenados en una base de datos SQL. La configuración recomendada para el servidor es la siguiente. • PHP (4.2.x o posterior). • MySQL (3.23.23 o posterior) o PostgreSQL (7.1 p posterior) • Apache (1.3.2x o posterior), Apache2 (2.0.4x o posterior) o Microsoft IIS 6 (PHP 5.x) • Sistema operativo Linux, Solaris, Mac OS X, o Windows. Arquitectura del sistema El diseño de Open Journal System está fuertemente estructurado para el mantenimiento, la flexibilidad, y robustez. Por esta razón puede ser un poco complicado la primera vez que se observa. Tiene que estar familiarizado con la tecnología de Java Beans de Sun o patrones MVC (Model View Control) con la cual tiene mucha similitud. Al igual que en la estructura MVC, el almacenamiento de datos y la presentación, la interfaz de usuario y el control están separadas en diferentes capaz. Las principales categorías están ordenadas del “front-end” para el “back-end”, de la siguiente forma: • Plantillas Smarty, estas son las responsables del ensamblaje de las páginas HTML que visualizan los usuarios. • Clases en Páginas, que reciben peticiones de los navegadores web por parte de los usuarios finales, delega cualquier procesamiento requerido a otras clases, y hace un llamado a las plantillas Smarty apropiadas para generar una respuesta. • Clases para Acciones, estas son utilizadas por las clases en las páginas para llevar a cabo el procesamiento de los requerimientos del usuario. • Clases para modelar, que implementan objetos en PHP representando varias entidades del sistema, tales como usuarios, artículos, revistas. 50 • Objetos para Acceso a los Datos (DAO, Data Access Objects), generalmente provee funciones como actualización, crear, y borrar para sus clases para modelar asociados, son responsables de la interacción con la base de batos. • Clases para soporte, proporcionan funcionalidades básicas, diversas clases y funciones comunes, etc. En la figura se ilustra los diferentes componentes y sus interacciones. Figura 0.1: Arquitectura del Sistema en OJS 27 Según datos recogidos en julio del 2011, por la PKP, existen más de 10.000 instalaciones registradas en el mundo. Como se muestra en la figura. 27 http://pkp.sfu.ca/ojs/docs/technicalreference/2.1/designOverviewIntroduction.html Distribuidas de esta forma en cada uno de los continentes: Asia 678 revistas, Europa 961 América 1343 revistas, Sur América 1537 revistas. En la figura se muestra esta distribución por continentes. 51 Figura 0.2: Crecimiento OJS en el 2011 Distribuidas de esta forma en cada uno de los continentes: Asia 678 revistas, Europa 961 revistas, África 429 revistas, Oceanía 96 revistas, Norte América 1343 revistas, Sur América 1537 revistas. En la figura se muestra esta distribución por continentes. Figura 0.3: Distribución mundial de OJS revistas, África 429 revistas, Oceanía 96 revistas, Norte 52 OJS es un sistema multilingüe, con soporte para más de 19 idiomas totalmente completos y otros 15 en progreso, con los cual permite la publicación de una gran cantidad de revistas en múltiples idiomas. Roles OJS utiliza un sistema de roles integrales para dividir el trabajo entre los usuarios, asignando flujos de trabajo, y limitando el acceso a diferentes partes del sistema. Desde una instalación puede albergar múltiples revistas, y los usuarios pueden tener distintos roles en las diferentes revistas, esto quiere decir que la relación entre usuarios y roles es de muchos a muchos, en otras palabras, un usuario puede tener muchos roles y un rol lo puede cumplir muchos usuarios. Cuando un usuario entra en el sistema, puede ver una lista de roles por cada una de las revistas en la que este suscrito, como también enlaces para cambiar su perfil, contraseña, entre otros. Cada uno de estos roles tiene un flujo de trabajo dentro del proceso de publicación asociado a una revista, estos roles son los siguientes: Gestor de revistas Establece la revista llenando las plantillas y eligiendo opciones; gestiona/importa usuarios, asigna roles, elije las herramientas de lectura, hace la indexación, prepara emails, etc. Editor Asigna a los envíos a los editores y/o editores de sección; supervisa el proceso y decisiones editoriales; armar y publicar números. Editor de sección Rol optativo para asistir en la evaluación por pares y tomar decisiones editoriales sobre los envíos, en colaboración con el editor. Administrador de Subscripciones Establece los distintos tipos de subscripciones y maneja las subscripciones. Revisores / árbitros Es elegido por el Editor o Editor de sección para revisar un envío. Los revisores/árbitros, pueden ser calificados por los Editores o Editores de sección, dependiendo de las políticas de la revista. Corrector Edita los envíos para mejorar la gramática y la claridad, trabaja con el autor/es, certifica seguir el estilo textual y bibliográfico de la revista, produce una copia editada y limpia para el Diagramador. Algunas revistas hacen que 53 el Editor o el Editor de Sección tome este rol. Diagramador Se encarga de transformar las versiones del corrector de estilos en archivos finales diagramados (HTML, PDF, PS, etc.); que dependen del tipo de formato que la revista ha elegido para la publicación electrónica. Tabla 13: Roles En la figura se muestra el proceso de publicación de un artículo, y los roles que están involucrados en cada uno de estos pasos. Figura 0.4: Flujo de Trabajo OJS nos permite controlar todo el proceso de publicación, desde el envió de los manuscritos por parte de los autores, la selección de los revisores, la revisión por parte de los árbitros, la corrección de estilos y sintaxis, la diagramación y maquetación, hasta la publicación e indexación de los buscadores. Por otro lado también existe OCS de la misma familia de PKP, pero tiene la característica de poder gestionar y publicar eventos, de esta herramienta se hablara en el siguiente capítulo. 54 Capítulo 5 Open Conference Systems OCS es una herramienta de código abierto del proyecto PKP (Public Knowledge Project) para la administración y publicación web de conferencias, congreso, eventos, etc. OCS está basada en el código de OJS, es una solución altamente flexible basada en PHP y puede hacer uso de base de datos MySQL o PostgreSQL. Características A continuación se listan algunas características de OCS (Open Conference Systems): • Crea un sitio web para el evento. • Gestión de eventos que tienen lugar más de una vez (por ejemplo anuales). • Redactar y envía convocatorias para las ponencias. • Electrónicamente acepta paper y envía resúmenes. • Permite el envió de los papers para poder editar su trabajo • Permitir que los remitentes editen sus trabajos. • Lleva a cabo revisiones por pares (opcional). • Programar eventos (conferencias). • Registro de los participantes • Manejo de pagos por parte de los participantes (opcional). • Luego del evento se pueden generar debates en línea. • Utilización de plantillas para el envió de correos electrónicos. • Soporte de múltiples idiomas. • Código personalizable, escalable y seguro. Tecnologías Estas son las tecnologías usadas en el desarrollo y ejecución de este software: • Open Conference S sistema de plantilla Smarty para la Interfaz gr una base de datos SQL. La configuración recomendada para el servidor es la siguiente. • PHP (4.2.x o posterior). • MySQL (3.23.23 o posterior) o PostgreSQL (7.1 p posterior) • Apache (1.3.2x o posterior), Apache2 (2.0.4x o posterior) o Microsoft IIS 6 (PHP 5.x) • Sistema operativo Linux, Solaris, Mac OS X, o Windows. A partir de julio del 2011, se tiene regist todo el mundo, estos datos son suministrados por PKP (Public Knowledge Project) muestra en la figura. OCS es un sistema multilingüe, que permite publicar y dar soporte a eventos en una variedad de idiomas, existen 11 idiomas completos y 7 en desarrollo. 55 Estas son las tecnologías usadas en el desarrollo y ejecución de este software: Conference Systems está escrito en PHP orientado a objetos, utilizando un sistema de plantilla Smarty para la Interfaz gráfica. Los datos son almacenados en una base de datos SQL. La configuración recomendada para el servidor es la posterior). MySQL (3.23.23 o posterior) o PostgreSQL (7.1 p posterior) Apache (1.3.2x o posterior), Apache2 (2.0.4x o posterior) o Microsoft IIS 6 (PHP 5.x) Sistema operativo Linux, Solaris, Mac OS X, o Windows. A partir de julio del 2011, se tiene registrado más de 1500 instalaciones de OCS en todo el mundo, estos datos son suministrados por PKP (Public Knowledge Project) Figura 0.1: Crecimiento de OCS para el 2011 stema multilingüe, que permite publicar y dar soporte a eventos en una variedad de idiomas, existen 11 idiomas completos y 7 en desarrollo. Estas son las tecnologías usadas en el desarrollo y ejecución de este software: do a objetos, utilizando un fica. Los datos son almacenados en una base de datos SQL. La configuración recomendada para el servidor es la Apache (1.3.2x o posterior), Apache2 (2.0.4x o posterior) o Microsoft IIS 6 (PHP 5.x) rado más de 1500 instalaciones de OCS en todo el mundo, estos datos son suministrados por PKP (Public Knowledge Project). Y se stema multilingüe, que permite publicar y dar soporte a eventos en una variedad de idiomas, existen 11 idiomas completos y 7 en desarrollo. 56 Arquitectura del sistema El diseño de Open Conference Systems al igual que OJS está fuertemente estructurado para el mantenimiento, la flexibilidad, y robustez. Por las razones anteriormente mencionadas la arquitectura de los dos sistemas son iguales. Esto gracias a que OCS está basado en OJS. En la figura se ilustra los diferentes componentes y sus interacciones. Figura 0.2: Arquitectura del Sistema 28 28 http://pkp.sfu.ca/ojs/docs/technicalreference/2.1/designOverviewIntroduction.html 57 Roles OCS se basa en gran parte del código que se utiliza para Open Journal Systems, es de notar que muchas de las características son idénticas, como el uso de roles, la capacidad de gestionar múltiple eventos, a partir de una sola instalación. Estos roles se describen en las siguiente tabla. Administrador Supervisa toda la instalación, y establece los nuevos sitios para conferencias. Gestor de Conferencia Supervisar el sitio de la conferencia, incluyendo todas las cuentas de usuarios, configura el sitio para la conferencia. Director Gestiona el proceso de envío, edición y publicación de la propuesta para una de las conferencias. El director establece el calendario de conferencia. Manejador de Registros Responsable de las inscripciones a la conferencia Director Supervisor Responsable de la gestión de los envíos de las presentaciones para cada tema propuesto, observando los procesos de revisiones, ediciones y aceptación o rechazo de las presentaciones para la conferencia. Critico Provee las revisiones por pares de las presentaciones de la conferencia. Recomendaran a favor o en contra la inclusión de la presentación de la conferencia. Autor Realiza propuestas a la conferencia y participa en el proceso de revisión y edición. Lector Los usuarios que se registran para leer el evento, sin embargo la mayoría de las conferencias no requieren registro. Tabla 14: Roles En la figura 19 se muestra en flujo de trabajo planteado el OCS (Open Conference Systems). OCS soporta varios procesos de envíos, incluyendo: • Sólo Resúmenes • Sólo Papers • Resumen y Papers con el envío y la revisión de manera simultánea • Resumen del Papers con las rondas de revisión por separado. 58 Figura 0.3: Flujo de Trabajo 29 29 http://pkp.sfu.ca/files/OCSinanHour.pdf 59 Capítulo 6 Implantación de la Plataforma Herramientas Para esta etapa del proyecto, se tiene previsto las siguientes especificaciones tanto de hardware y software a utilizar Herramientas de hardware • Máquina de prueba: • Procesador de 2 núcleos de 3.0 GHz • 4 GB de memoria RAM • 80 GB de disco duro • Máquina de producción: • 2 procesadores de 4 núcleos de 2.66 GHz • 4 GB de memoria RAM • 2 disco duros de 1,5 T Herramientas de Software • Linux Debian 6 • J2SE Software Development Kit (SDK) v. 1.6.23 • Apache2 • Apache Maven 2.2.1 • Apache Ant 1.8.1 • Apache Tomcat • PostgreSQL 9.0.4 60 Instalación de la Plataforma Instalación de DSpace Pre- requisitos: Esta son algunas aplicaciones de terceros, que se requieren para el funcionamiento de la plataforma, ya que este es un código abierto, y utiliza aplicaciones como estas para complementar sus funcionalidades. Instalación de Java Instalar java 6, esta la podemos obtener de la página de Oracle Java (http://java.sun.com/javase/downloads/index.jsp) o hacer una instalación con la versión que está en los repositorios de debían. Esta instalación se tiene que hacer como usuario root del sistema. root@saber:~# aptitude install sun-java6-jdk Figura 0.1: aptitude install jdk Instalación y configuración de Apache Maven Esta es una herramienta que se utiliza para crear y gestionar proyectos basados en java, donde sus principales objetivos son; facilitar el proceso de construcción, proporcionar un sistema de construcción uniforme, dar información de calidad sobre el proyecto, proporcionar pautas para el mejor desarrollo, y permitir la migración a nuevas características. Este paquete es necesario en la primera etapa en donde se arman los paquetes de instalación para las diferentes instancias de DSpace. Esta es una de las características que le da al DSpace flexibilidad a la hora de personalizar la herramienta. Se descarga el paquete que vamos a instalar desde la página del proyecto Apache Maven (Apache Maven 2.2.1). Y luego se descomprime y se mueve a la ruta /usr/local/. root@saber:~# wget http://www.apache.org/dyn/closer.cgi/maven/binaries/apache- maven-2.2.1-bin.tar.gz 61 root@saber:~# tar xvzf apache-maven-2.2.1-bin.tar.gz root@saber:~# mv apache-maven-2.2.1 /usr/local/ Figura 0.2:wget apache maven Se definen las variables de entorno para este paquete en el siguiente archivo de configuración /etc/profile. root@saber:~# vim /etc/profile Figura 0.3: vim profile Se insertar al final del archivo estas líneas o definiciones de variables de entorno. root@saber:~# vim /etc/profile # /etc/profile: system-wide .profile file for the Bourne shell (sh(1)) # and Bourne compatible shells (bash(1), ksh(1), ash(1), ...). if [ "`id -u`" -eq 0 ]; then PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin" else PATH="/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games" fi export PATH if [ "$PS1" ]; then if [ "$BASH" ]; then # The file bash.bashrc already sets the default PS1. # PS1='\h:\w\$ ' if [ -f /etc/bash.bashrc ]; then . /etc/bash.bashrc fi else if [ "`id -u`" -eq 0 ]; then PS1='# ' else PS1='$ ' fi fi fi # The default umask is now handled by pam_umask. # See pam_umask(8) and /etc/login.defs. if [ -d /etc/profile.d ]; then 62 for i in /etc/profile.d/*.sh; do if [ -r $i ]; then . $i fi done unset i fi export MAVEN_HOME=/usr/local/apache-maven-2.2.1 export JAVA_HOME=/usr/lib/jvm/java-6-sun-1.6.0.24/jre export PATH=${JAVA_HOME}/bin:${MAVEN_HOME}/bin:$PATH Figura 0.4: editar profile Se cargar en el sistema las nuevas variables de entorno. Y se verifica si la instalación fue hecha correctamente. root@saber:~# source /etc/profile root@saber:~# mvn –version Apache Maven 2.2.1 (r801777; 2009-08-06 14:46:01-0430) Java version: 1.6.0_24 Java home: /usr/lib/jvm/java-6-sun-1.6.0.24/jre Default locale: en_US, platform encoding: ANSI_X3.4-1968 OS name: "linux" version: "2.6.32-5-xen-amd64" arch: "amd64" Family: "unix" root@saber:~# Figura 0.5: mvn -version Instalación y configuración de Apache Ant Apache Ant es un conjunto de librerías de Java y herramientas en líneas de comando, que ayudan a la construcción de aplicaciones, a través de tareas que permiten compilar, ensamblar, y probar aplicaciones en java. Este proyecto es usado en la segunda etapa del proceso de construcción para la instalación del DSpace. Se descargar de la siguiente dirección http://ant.apache.org, se descomprime el archivo, y luego se mueve a la ruta /usr/local/ root@saber:~# wget http://www.poolsaboveground.com/apache//ant/binaries/apache- ant-1.8.1-bin.tar.gz root@saber:~# tar xvzf apache-ant-1.8.1-bin.tar.gz root@saber:~# mv apache-ant-1.8.1 /usr/local/ Figura 0.6: wget apache 63 Se crea la variable de entorno root@saber:~# vim /etc/profile # /etc/profile: system-wide .profile file for the Bourne shell (sh(1)) # and Bourne compatible shells (bash(1), ksh(1), ash(1), ...). if [ "`id -u`" -eq 0 ]; then PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin" else PATH="/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games" fi export PATH if [ "$PS1" ]; then if [ "$BASH" ]; then # The file bash.bashrc already sets the default PS1. # PS1='\h:\w\$ ' if [ -f /etc/bash.bashrc ]; then . /etc/bash.bashrc fi else if [ "`id -u`" -eq 0 ]; then PS1='# ' else PS1='$ ' fi fi fi # The default umask is now handled by pam_umask. # See pam_umask(8) and /etc/login.defs. if [ -d /etc/profile.d ]; then for i in /etc/profile.d/*.sh; do if [ -r $i ]; then . $i fi done unset i fi export MAVEN_HOME=/usr/local/apache-maven-2.2.1 export ANT_HOME=/usr/local/apache-ant-1.8.1 64 export JAVA_HOME=/usr/lib/jvm/java-6-sun-1.6.0.24/jre export PATH=${JAVA_HOME}/bin:${MAVEN_HOME}/bin:${ANT_HOME}/bin:$PATH Figura 0.7: editar profile 2 Se cargar la nueva variable de entorno y se verifica la instalación. root@saber:~# source /etc/profile root@saber:~# ant -version Apache Ant version 1.8.1 compiled on April 30 2010 Figura 0.8: ant -version Instalación de Apache Tomcat Tomcat es un contenedor o servidor web con soporte de servlets y JSPs. Es una implementación de código abierto, que en sus inicios dio la percepción de no ser una plataforma autónoma y que se utilizaba para entornos de desarrollo o ambientes con pocos requerimientos, hoy en día es utilizado como servidor autónomo con un alto nivel de tráfico y disponibilidad. Podemos descargar la versión 6 de la siguiente dirección http://tomcat.apache.org. Se descomprime el archivo y se mueve el archivo a la siguiente ruta /usr/local/ root@saber:~# wget http://apache.tradebit.com/pub/tomcat/tomcat- 6/v6.0.32/bin/apache-tomcat-6.0.32.tar.gz root@saber:~# tar xvzf apache-tomcat-6.0.32.tar.gz root@saber:~# mv apache-tomcat-6.0.32 /usr/local/ Figura 0.9: wget tomcat Para asegurarse de que Tomcat tiene suficiente memoria para ejecutar DSpace y utilice como predeterminada la codificación de caracteres UTF-8, se coloca esta variable (JAVA_OPTS="-Xmx512M -Xms64M -Dfile.encoding=UTF-8") en el archivo /etc/profile. root@saber: ~# vim /etc/profile Figura 0.10:vim profile También es necesario modificar el archivo de configuración server.xml de Tomcat, para ayudar a la correcta búsqueda y navegación. Tiene que quedar de esta forma root@saber:~# vim /usr/local/apache-tomcat-6.0.32/conf/server.xml 65 <!-- A "Connector" represents an endpoint by which requests are received and responses are returned. Documentation at : Java HTTP Connector: /docs/config/http.html (blocking & non-blocking) Java AJP Connector: /docs/config/ajp.html APR (HTTP/AJP) Connector: /docs/apr.html Define a non-SSL HTTP/1.1 Connector on port 8080 --> <Connector port="8080" protocol="HTTP/1.1" connectionTimeout="20000" redirectPort="8443" maxThreads="150" //Número máximo de sub procesos minSpareThreads="25" //Mínimo numero de hilos maxSpareThreads="75" //Número máximo de hilos enableLookups="false" // Omitir la búsqueda de DNS para el nombre de cliente connectionTimeout="20000" disableUploadTimeout="true" //tiempo de espera más largo para servlets URIEncoding="UTF-8"/> Figura 0.11: vim server.xml Como DSpace tiene que ejecutarse con el mismo usuario del Tomcat, se creara un usuario dspace para Tomcat y DSpace. root@saber:~# adduser dspace Adding user `dspace' ... Adding new group `dspace' (1000) ... Adding new user `dspace' (1000) with group `dspace' ... Creating home directory `/home/dspace' ... Copying files from `/etc/skel' ... Enter new UNIX password: Retype new UNIX password: Enter new UNIX password: Retype new UNIX password: passwd: password updated successfully Changing the user information for dspace Enter the new value, or press ENTER for the default Full Name []: dspace Room Number []: Work Phone []: Home Phone []: Other []: 66 Is the information correct? [Y/n] y Figura 0.12: adduser dspace Se modifica el archivo de configuración tomcat-users.xml de Tomcat para especificar los usuarios y contraseñas para cada role dentro de Tomcat. root@saber:~# vim /usr/local/apache-tomcat-6.0.32/conf/tomcat-users.xml <tomcat-users> <!-- NOTE: By default, no user is included in the "manager-gui" role required to operate the "/manager/html" web application. If you wish to use this app, you must define such a user - the username and password are arbitrary. --> <!-- NOTE: The sample user and role entries below are wrapped in a comment and thus are ignored when reading this file. Do not forget to remove <!.. ..> that surrounds them. --> <role rolename="dspace"/> <role rolename="tomcat"/> <role rolename="manager"/> <role rolename="admin"/> <user username="tomcat" password="tomcat" roles="tomcat,dspace,admin,manager"/> </tomcat-users> Figura 0.13: vim tomcat-users.xml Luego se cambia el dueño del archivo que contiene Apache Tomcat root@saber:~# chown -R dspace:dspace /usr/local/apache-tomcat-6.0.32 Figura 0.14: chown tomcat Se crea el script para iniciar, parar, y reiniciar el servicio root@saber:~# vim /etc/init.d/tomcat #!/bin/bash ### BEGIN INIT INFO # Provides: skeleton # Required-Start: $remote_fs $syslog # Required-Stop: $remote_fs $syslog # Should-Start: $portmap 67 # Should-Stop: $portmap # X-Start-Before: nis # X-Stop-After: nis # Default-Start: 2 3 4 5 # Default-Stop: 0 1 6 # X-Interactive: true # Short-Description: Tomcat initscript # Description: This file should be used to construct scripts to be # placed in /etc/init.d/tomcat ### END INIT INFO # Tomcat Init-Script case $1 in start) su - dspace "/usr/local/apache-tomcat-6.0.32/bin/startup.sh" ;; stop) su - dspace "/usr/local/apache-tomcat-6.0.32/bin/shutdown.sh" ;; restart) su - dspace "/usr/local/apache-tomcat-6.0.32/bin/startup.sh" su - dspace "/usr/local/apache-tomcat-6.0.32/bin/shutdown.sh" ;; esac exit 0 Figura 0.15: vim /etc/init.d/tomcat Se agrega el servicio root@saber:~# insserv tomcat Figura 0.16: insserv tomcat Instalación y configuración de Postgresql PostgreSQL es un sistema de gestión de base de datos relacional orientada a objetos y de código abierto desarrollado por una comunidad llamada PGDG (PostgresSQL Global Development Group), Se descarga de la siguiente página http://www.postgresql.org/. Se descomprime el archivo descargado, y se mueve el directorio a la siguiente dirección /usr/local/ root@ saber:~# wget 68 http://wwwmaster.postgresql.org/redir/198/h/source/v9.0.4/postgresql-9.0.4.tar.gz root@saber:~# tar xvzf postgresql-9.0.4.tar.gz root@saber:~# mv postgresql-9.0.4 /usr/local/ Figura 0.17: wget postgresql Se instala requerimientos de PostgreSQL y luego se dan algunas configuraciones. root@saber:~# aptitude install make gcc g++ build-essential root@saber:~# cd /usr/local/postgresql-9.0.4/ root@saber:/usr/local/postgresql-9.0.4# ./configure --libdir=/usr/lib --without-readline -- without-zlib Figura 0.18: instalar complementos postgres Continuamos con la compilación de la fuente root@ saber:/usr/local/postgresql-9.0.4# make Figura 0.19: make postgres Una vez compilado la fuente, se realizar la instalación del gestor de base de datos PostgreSQL root@ saber:/usr/local/postgresql-9.0.4# make install Figura 0.20: meke install postgres Luego de haber culminado con la instalación de postgres en el sistema, se realiza la configuración del gestor de base de datos Se crea el usuario administrador de PostgreSQL saber:~# adduser postgres Adding user `postgres' ... Adding new group `postgres' (1001) ... Adding new user `postgres' (1001) with group `postgres' ... Creating home directory `/home/postgres' ... Copying files from `/etc/skel' ... Enter new UNIX password: //amacospostgres Retype new UNIX password: passwd: password updated successfully Changing the user information for postgres Enter the new value, or press ENTER for the default 69 Full Name []: PostgreSQL Room Number []: Work Phone []: Home Phone []: Other []: Is the information correct? [Y/n] y Figura 0.21: adduser postgres Se crea el directorio donde se van a guardar los datos y luego se cambia el propietario del directorio creado. root@saber:/usr/local# mkdir pgsql/data root@saber:/usr/local# chown -R postgres pgsql Figura 0.22: chown postgres Se inicia como usuario postgres para luego iniciar el gestor de esta manera, dándole como parámetro el directorio donde va a colocar la data y el tipo de dato que va a manejar. saber:/usr/local# su - postgres postgres@saber:~$ postgres@saber:~$ /usr/local/pgsql/bin/initdb -D /usr/local/pgsql/data -E Unicode Figura 0.23: config postgres Se inicia el gestor de base de datos postgres@saber:~$/usr/local/pgsql/bin/postmaster -D /usr/local/pgsql/data >logfile 2>&1 & Figura 0.24: iniciar postgres Para continuar se realizan unos cambios en los archivos de configuración, en este caso se modifica el archivo postgresql.conf, en el parámetro listen_addresses = '*', para que el servicio pueda escuchar por cualquier IP postgres@saber:~$ vim /usr/local/pgsql/data/postgresql.conf Figura 0.25: vim postgresql.conf Se modifica la seguridad “host all all ip_equipo/24 trust” en el archivo de configuración pg_hba.conf de PostgreSQL root@saber:~# vim /etc/postgresql/8.4/main/pg_hba.conf Figura 0.26: vim pg_hba.conf 70 Se reinicia el gestor PostgreSQL postgres@saber:~$ /usr/local/pgsql/bin/pg_ctl stop -m fast -D /usr/local/pgsql/data/ waiting for server to shut down.... done server stopped [1]+ Done /usr/local/pgsql/bin/postmaster -D /usr/local/pgsql/data > logfile 2>&1 postgres@saber:~$ /usr/local/pgsql/bin/postmaster -D /usr/local/pgsql/data/ & [1] 23305 postgres@saber:~$ LOG: database system was shut down at 2011-04-20 23:48:35 VET LOG: database system is ready to accept connections LOG: autovacuum launcher started Figura 0.27: detener postgres Se crea el script para iniciar, parar, y reiniciar el servicio root@saber:~# vim /etc/init.d/postgres #!/bin/bash ### BEGIN INIT INFO # Provides: skeleton # Required-Start: $remote_fs $syslog # Required-Stop: $remote_fs $syslog # Should-Start: $portmap # Should-Stop: $portmap # X-Start-Before: nis # X-Stop-After: nis # Default-Start: 2 3 4 5 # Default-Stop: 0 1 6 # X-Interactive: true # Short-Description: Example initscript # Description: This file should be used to construct scripts to be # placed in /etc/init.d/tomcat ### END INIT INFO # PostgreSQL Init-Script case $1 in start) su - postgres "/usr/local/pgsql/bin/postmaster -D /usr/local/pgsql/data >logfile 2>&1 &" ;; stop) su - postgres "/usr/local/pgsql/bin/pg_ctl stop -m fast -D /usr/local/pgsql/data/" ;; restart) su - postgres "/usr/local/pgsql/bin/pg_ctl stop -m fast -D /usr/local/pgsql/data/" 71 su - postgres "/usr/local/pgsql/bin/postmaster -D /usr/local/pgsql/data >logfile 2>&1 &" ;; esac exit 0 Figura 0.28: scripts postgres Se cambia los permisos de este archivo para que pueda ser ejecutado se agrega el servicio en el sistema. root@saber:~# chmod 755 /etc/init.d/postgres root@saber:~# insserv postgres Figura 0.29: chmod scripts postgres Instalación y configuración de DSpace Se descarga la versión 1.7.1 de la página http://www.dspace.org/. Se descomprime el archivo. Se mueve al directorio /usr/local/. Y luego se cambia el dueño al directorio dspace root@saber:~#wget http://downloads.sourceforge.net/project/dspace/DSpace%20Stable/1.7.1/dspace-1.7.1- src-release.tar.gz root@saber:~# tar xvzf dspace-1.7.1-src-release.tar.gz root@saber:~# mv dspace-1.7.1-src-release /usr/local/ root@saber:~# chown -R dspace:dspace /usr/local/dspace-1.7.1-src-release Figura 0.30: wget dspace Se inicia con el usuario postgres para poder crear la base de datos dspace propiedad del usuario dspace. Se crear el usuario dspace en la base de datos. Se crear la base de datos perteneciente al usuario creado anteriormente. Y por último se sale de la sesión del usuario administrador de PostgreSQL. root@saber:~# su – postgres postgres@saber:~$ /usr/local/pgsql/bin/createuser -U postgres -d -A -P dspace Enter password for new role: ******* Enter it again: Shall the new role be allowed to create more new roles? (y/n) y postgres@saber:~$ /usr/local/pgsql/bin/createdb -U dspace -E UNICODE dspace v Figura 0.31: crear usuario en postgres 72 Se modifica el archivo de configuración dspace.cfg que se encuentra en /usr/local/dspace- 1.7.1-src-release/ dspace/conf/ dspace.dir – directorio donde va estar ubicada la instalación del DSpace dspace.url – URL completa del servidor dspace.hostname – Nombre del servidor Web dspace.name – Nombre del servicio db.password – contraseña de la base de datos mail.server – Nombre del dominio de tu servidor de correo mail.from.address – Enviado por feedback.recipient – buzón para respuestas mail.admin – correo del administrador del sitio alert.recipient – correo para errores y alertas registration.notify – correo para notificar nuevos registros en el sistema (opcional) Figura 0.32: dspace.cfg Se crea el directorio para la instalación del DSpace. Se coloca como propietario del directorio al usuario dspace. Y se inicia con el usuario dspace. saber:~# mkdir /usr/local/dspace saber:~# chown dspace:dspace /usr/local/dspace saber:~# su - dspace Figura 0.33: chown dspace Se coloca en la siguiente ruta. Para luego generar los paquetes de instalación del DSpace. Se ubica en el directorio donde está la fuente. Se Inicializan los valores en la base de datos e instala el DSpace en el directorio dspace. dspace@saber:~$ cd /usr/local/dspace-1.7.1-src-release/dspace/ dspace@saber:/usr/local/dspace-1.7.1-src-release/dspace$ mvn package dspace@saber:/usr/local/dspace-1.7.1-src-release/dspace /target/dspace-[version]- build.dir dspace@saber:/usr/local/dspace-1.7.1-src-release/dspace/dspace /target/dspace- [version]-build.dir $ ant fresh_install Figura 0.34: compilar dspace Luego para finalizar, tenemos que llevar la aplicación al contenedor web, y se realiza de la siguiente forma: Se lleva todas las aplicaciones web a Tomcat. 73 cp -R /usr/local/dspace/webapps/ * /usr/local/apache-tomcat-6.0.32/webapps/ * Figura 0.35: copiar dspace al contenedor O se copia solamente la aplicación jsp, que está contenida en el directorio jspui cp -R /usr/local/dspace/webapps/jspui /usr/local/ apache-tomcat-6.0.32/webapps/ * Figura 0.36: copiar dspace al contenedor También se modifica el archivo de configuración de Tomcat. dspace@saber:~$ vim /usr/local/apache-tomcat-6.0.32/conf/server.xml … <!-- Define the default virtual host Note: XML Schema validation will not work with Xerces 2.2. --> <Host name="localhost" appBase="/usr/local/dspace/webapps" unpackWARs="true" autoDeploy="true" xmlValidation="false" xmlNamespaceAware="false"> <!-- SingleSignOn valve, share authentication between web applications Documentation at: /docs/config/valve.html --> … Figura 0.37: vim server.xml Se crea el administrador del sistema y se reinicia el Tomcat. dspace@saber:~$ /usr/local/dspace/bin/dspace create-administrator root@saber:~# /etc/init.d/tomcat restart Figura 0.38: crear cuenta de administrador Se coloca en el navegador el URL saber.ucv.ve:8080/jspui 74 Figura 0.39: Interfaz Web Dspace Instalación OJS y OCS La instalación de esta dos herramientas se pueden describir en paralelo, porque OCS está basada en el código de OJS como fue descrito anteriormente. Esto quiere decir que las instalaciones son prácticamente iguales. Se descarga la versión 2.3.4 de OJS de la página http://pkp.sfu.ca/ojs_download, de igual forma se descarga la versión 2.3.3-1 de OCS de la página http://pkp.sfu.ca/ocs_download. root@ saber:~# wget http://pkp.sfu.ca/ojs/download/ojs-2.3.4.tar.gz root@ saber:~# wget http://pkp.sfu.ca/ocs/download/ocs-2.3.3-1.tar.gz Figura 0.40:wget ojs y ocs Se descomprime los archivos descargados root@saber:~# tar xvzf ojs-2.3.4.tar.gz root@saber:~# tar xvzf ocs-2.3.3-1.tar.gz Figura 0.41: descomprimir ojs y ocs 75 Luego se mueven estos archivos a la raíz del contenedor web (Apache) y se renombran los directorios. root@saber:~# mv ojs-2.3.4 /var/www/ root@saber:~# mv /var/www/ojs-2.3.4 /var/www/ojs root@saber:~# mv ocs-2.3.3 /var/www/ root@saber:~# mv /var/www/ocs-2.3.3 /var/www/ojs Figura 0.42: mover ojs y ocs Cambiar el dueño de las carpetas para que pertenezca al usuario de Apache root@saber:~# chown -R www-data:www-data /var/www/ojs root@saber:~# chown -R www-data:www-data /var/www/ocs Figura 0.43: cambio de propietario ojs y ocs Se le otorga permisos de lectura/escritura a los siguientes archivos y/o directorios para cada una de las instalaciones. Esto quiere decir que se le van a otorgar permisos tanto para OJS como OCS. root@saber:~# chmod 755 /var/www/ojs/config.inc.php root@saber:~# chmod 755 /var/www/ojs/public root@saber:~# chmod 755 /var/www/ojs/cache root@saber:~# chmod 755 /var/www/ojs/cache/t_cache root@saber:~# chmod 755 /var/www/ojs/cache/t_compile/ root@saber:~# chmod 755 /var/www/ojs/cache/_db Figura 0.44: permisos para ojs root@saber:~# chmod 755 /var/www/ocs/config.inc.php root@saber:~# chmod 755 /var/www/ocs/public root@saber:~# chmod 755 /var/www/ocs/cache root@saber:~# chmod 755 /var/www/ocs/cache/t_cache root@saber:~# chmod 755 /var/www/ocs/cache/t_compile/ root@saber:~# chmod 755 /var/www/ocs/cache/_db Figura 0.45: permisos para ocs Se Crea un directorio donde se van a subir los archivos root@saber:~# mkdir /var/www/ojs/files root@saber:~# mkdir /var/www/ocs/files Figura 0.46: crear archivo en ojs y ocs 76 Se le otorga los permisos de escritura y se le cambia el dueño root@saber:~# chown www-data:www-data /var/www/ojs/files root@saber:~# chmod 755 /var/www/ojs/files Figura 0.47: permisos ojs root@saber:~# chown www-data:www-data /var/www/ocs/files root@saber:~# chmod 755 /var/www/ocs/files Figura 0.48: permisos ocs Base de Datos para OJS y OCS (PostgreSQL) Se cambia al usuario postgres para poder crear la base de datos ojs y ocs propiedad del usuario ojs y ocs respectivamente. root@saber:~# su – postgres Figura 0.49: iniciar sesión postgres Se crea el usuario ojs y ocs en la base de datos postgres@saber:~$ /usr/local/pgsql/bin/createuser -U postgres -d -A -P ojs Enter password for new role: //amacosdspace Enter it again: Shall the new role be allowed to create more new roles? (y/n) y Figura 0.50: crear usuario postgres para ojs postgres@saber:~$ /usr/local/pgsql/bin/createuser -U postgres -d -A -P ocs Enter password for new role: //amacosdspace Enter it again: Shall the new role be allowed to create more new roles? (y/n) y Figura 0.51: crear usuario postgres para ocs Se crea la base de datos pertenecientes a los usuarios creados anteriormente. Y se finaliza la sesión del usuario administrador de PostgreSQL. postgres@saber:~$ /usr/local/pgsql/bin/createdb -U ojs -E UNICODE ojs postgres@saber:~$ /usr/local/pgsql/bin/createdb -U ocs -E UNICODE ocs postgres@saber:~$ exit Para continuar con la instalación muestra la interfaz web de las herramientas. Se mostrara la interfaz de Se coloca en el navegador el URL saber.ucv.ve/ojs o saber.ucv.ve/ocs En esta interfaz se tiene que seguir paso a paso las indicaciones que se dan en ella. Tales como verificar que los requerimientos del sistema se cumplan, y los pasos pre-instalación. Figura 77 Figura 0.52: crear base de datos ojs y ocs Para continuar con la instalación se abre un navegador y se siguen muestra la interfaz web de las herramientas. Se mostrara la interfaz de oloca en el navegador el URL saber.ucv.ve/ojs o saber.ucv.ve/ocs En esta interfaz se tiene que seguir paso a paso las indicaciones que se dan en Tales como verificar que los requerimientos del sistema se cumplan, y los pasos Figura 0.54: requerimientos del sistema ojs Figura 0.53: Página principal de instalación del OJS se siguen los pasó que OJS. oloca en el navegador el URL saber.ucv.ve/ojs o saber.ucv.ve/ocs (Figura 72) En esta interfaz se tiene que seguir paso a paso las indicaciones que se dan en Tales como verificar que los requerimientos del sistema se cumplan, y los pasos 78 En la sección de locales de la página de instalación del OJS se selecciona la configuración del idioma y codificación de caracteres a usar. Figura 0.55: sección locales En la sección de configuración de ficheros, se debe colocar la carpeta o directorio que se creó con anterioridad para almacenar archivos. Figura 0.56: configuración de ficheros En la sección de configuración de seguridad para la encriptación de contraseñas se selecciona entre dos algoritmos de encriptación el MD5 y el SHA1, para esta instalación se selecciono SHA1. 79 Figura 0.57: configuración de seguridad También se proporcionan los datos, para la cuenta de administrador de la herramienta, otorgar los datos necesarios para la base de datos previamente creada. Figura 0.58: cuenta de administrador Y para finalizar la instalación se ingresa el identificador OAI en la sección de Configuración Adicional. Figura 0.59: configuración adicional 80 Actualización de OJS Para la herramienta OJS (Open Journal Sytems) se realizo actualizaciones de versión para corregir errores y problemas de compatibilidad con los plugins que la conforman, algunos de estos errores son siguientes: • No guarda la configuración del Plugin OpenAds. Este plugin es usado para el complemento de anuncios. • Error en la exportación nativa de los tipos de afiliaciones de autores. • La afiliación local no está incluida en la imputación de usuarios • Añadir una herramienta para que los editores puedan modificar la fecha de las publicaciones. Antes de llevar a cabo el proceso de actualización se realizo un respaldo de los datos almacenados en la herramienta, tanto de la base de datos como del directorio donde está alojado OJS (/var/www/ojs/). Para la actualización se verifico la configuración de PHP, en especial el parámetro llamado max_execution_time que en encuentra en el archivo de configuración php.ini, se coloca un límite alto para no tener problemas con la actualización. Para llevar a cabo la actualización se tienen que realizar dos siguientes pasos: • La descarga de actualización • La actualización de la base de datos Se descarga el parche. Se descomprime el parche. Se mueve a la ruta donde esta OJS root@saber:~# wget http://pkp.sfu.ca/ojs/download/patch/ojs-2.3.4_to_2.3.5.patch.gz root@saber:~# ojs-2.3.4_to_2.3.5.patch.gz root@saber:~#cd /var/www/ojs/ Figura 0.60: wget parche de ojs Se ejecuta el siguiente comando para asegurarse que la actualización se va a ejecutar limpiamente. root@saber:~#patch -p1 --dry-run < /root/ ojs-2.3.4_to_2.3.5.patch Figura 0.61: verificar actualización Se ejecuta el siguiente comando para realizar la actualización. 81 root@saber:~#patch -p1 < /root/ ojs-2.3.4_to_2.3.5.patch Figura 0.62: instalar parche Luego tenemos se realiza la actualización de la base de datos con el siguiente comando desde la raíz de ojs. root@saber:~#php tools/upgrade.php upgrade Figura 0.63: actualizar base de datos Y se concluyen la actualización de OJS (Open Journal System) Adaptación de la plataforma Diseño DSpace El Repositorio Digital DSpace cuenta con dos tipos de interfaz gráfica, una basada en JavaServer Pages (JSP), y otra con framework de Apache Cocoon(XMLUI). En esta etapa del proyecto se va a trabajar con la interfaz web basada en JSP, donde se realizaron modificaciones en sus archivos para adaptar la interfaz a nuestras necesidades. Esta interfaz está dividida en cuatro partes la cabecera, las barra de navegación (derecha e izquierda) y el pie de página. Los archivos modificados son los siguientes: styles.css – este archivo contiene todo los estilos que se utilizan en la interfaz web. navbar-default.jsp – contiene la barra de navegación por defecto de la izquierda. navbar-admin.jsp – contiene la barra de navegación cuando ingresa al sistema el administrador, o cualquier otro usuario con privilegios. location-bar.jsp – esta es la barra que muestra donde se localizas cuando estas navegando en la herramienta. header-default.jsp – contiene el código de la cabecera de la interfaz, donde se hace referencia a los Javascript y hojas de estilos. footer-default.jsp - aquí se encuentra la barra de navegación derecha y el pie de página. 82 Messages.properties – este es el archivo que contiene todo el texto que se debe mostrar en la interfaz web, y en el cual tenemos que colocar aquellos datos que se adapten a nuestros requerimientos. Luego estos archivos son copiados en /usr/local/dspace- 1.7.1/dspace/modules/jspui/src/main/webapp/ en donde serán tomados cuando se recompile la herramienta y sean colocados en /usr/local/dspace/webap/. Otras de las modificaciones importantes es el cambio en el flujo de trabajo de algunos elementos ubicados en comunidades y colecciones específicas como por ejemplo: <form-map> <name-map collection-handle="default" form-name="traditional" /> <name-map collection-handle="123456789/2" form-name="tesis" /> <name-map collection-handle="123456789/3" form-name="tesis" /> <name-map collection-handle="123456789/7" form-name="curriculum" /> <name-map collection-handle="123456789/8" form-name="curriculum" /> </form-map> Figura 0.64: modificar solicitudes en el flujo de trabajo Se configuraron tres tipos de solicitudes de datos, la tradicional, tesis, y curriculum, las cuales se aplican, una por defecto, a la comunidad llamada tesis pregrado y postgrado, y a las colecciones llamadas administrativo y profesores e investigadores, respectivamente. Con estos cambios se tuvo que crear nuevos metadatos para colocar la nueva información solicitada. En la siguiente figura se muestra la nueva interfaz web para el Repositorio Institucional. Figura 0.65: interfaz web DSpace 83 Donde también se colocaron en la parte derecha enlaces a las redes sociales, y de información. También se colocaron enlaces al portal UCV, Revistas (OJS) y Eventos (OCS). Configuración DSpace Para la puesta en marcha de este proyecto, se realizaron algunas configuraciones adicionales para poner en funcionamiento bondades que brinda DSpace, como por ejemplo el envío de correo a los suscriptores alertando nuevos Ítem en el repositorio o el complemento para la indexación de los documentos. Se configuraron las siguientes tareas periódicas: • Envío de correo electrónico a suscriptores • Ejecutar filtros • Ejecutar un chequeo • Enviar un correo con los resultados del chequeo root@saber:~#crontab –e 01* * * /usr/local/dspace/bin/dspace sub-daily 02* * * /usr/local/dspace/bin/dspace filter-media 03* * * /usr/local/dspace/bin/dspace checker –lp 04* * * /usr/local/dspace/bin/dspace checker-emailer –c Figura 0.66: tareas programadas Ya que este servicio va a constar de auto publicación, se coloca la siguiente tarea para que la base de datos optimice los índices y borre por completo los datos eliminados. 204* * * vacuumdb --analyze dspace > /dev/null2>&1 Figura 0.67: vacuumdb base de datos Para obtener de forma periódica las estadísticas se tiene que hacer el análisis con la siguiente tarea. 01* * * /usr/local/dspace /bin/dspace stat-general 01* * * /usr/local/dspace /bin/dspace stat-monthly 02* * * /usr/local/dspace /bin/dspace stat-report-general 02* * * /usr/local/dspace/bin/dspace stat-report-monthly Figura 0.68: tareas programadas 84 Generando estadísticas y reportes generales y mensuales. Con la finalidad de aprovechar la versatilidad de la herramienta, y hacer esta versión una versión multilingüe se configuro el siguiente parámetro para que los usuario finales pudieran usar el repositorio en dos idiomas, pero pueden ser más sin ningún problema. root@saber:~# vim /usr/local/dspace-1.7.1/dspace/config/dspace.cfg … webui.supported.locales = es, en … Figura 0.69: idiomas soportados en la interfaz web Dándoles la posibilidad a los usuarios de elegir el idioma en que desea ver la interfaz web. Destacando que el contenido que está buscando, se mostrara en tantos idiomas como el autor lo deposito en el repositorio. Otras de las configuraciones para el servidor de producción fue el servicio de Handle mencionado anteriormente como una de las características de DSpace. Luego de hacer todas las gestiones para obtener el prefijo que identificará a todos los elementos depositados en el repositorio, se procede a configurar el servicio con el siguiente comando. root@saber:~#/usr/local/dspace/bin/dspace make-handle-config /usr/local/dspace/handle-server Figura 0.70: preparar handle Después de verificar y agregar las siguientes líneas en el archivo de configuración ubicado en /usr /local/dspace/handle-server/config.dct. "storage_type"= "CUSTOM" "storage_class"= "org.dspace.handle.HandlePlugin" Figura 0.71: vim config.dct Se ejecuta el siguiente comando para poner en marcha el servicio de Handle. root@saber:~# /usr/local/dspace/bin/start-handle-server Figura 0.72:iniciar handle Luego se tiene que hacer una actualización de todos los prefijos que tienen los elementos depositados. 85 root@saber:~# /usr/local/dspace/bin/dspace update-handle-prefix 123456789 10872 Figura 0.73:actualizar handle Este proceso genera un archivo llamado sitebndl.zip que debe ser enviado al sitio Handle CNRI para la correcta identificación de todo el contenido del Repositorio Institucional. Dspace cuenta con un script que genera los mapas del sitio y con ello ayudar a la correcta indexación por parte de buscadores. Esta función informa a Google que han sido actualizando el mapa del sitio. Esta función se tiene que ejecutar periódicamente por su alta carga de contenido. Se coloca una tarea periódica. 06* * * /usr/local/dspace/bin/dspace generate-sitemaps Figura 0.74: generar sitemaps DSpace utiliza la aplicación Solr de Apache para generar las estadísticas, no es necesario descargarla, está contenida en el paquete de DSpace. Se tienen que realizar algunas configuraciones con respecto al acceso a la aplicación, y control, estas son las siguientes. Para que DSpace pueda acceder a la aplicación descomentamos en el archivo de configuración llamado dspace.cfg, las siguientes líneas. solr.log.server = ${dspace.baseUrl}/solr/statistics solr.dbfile = ${dspace.dir}/config/GeoLiteCity.dat solr.spiderips.urls = http://iplists.com/google.txt, \ http://iplists.com/inktomi.txt, \ http://iplists.com/lycos.txt, \ http://iplists.com/infoseek.txt, \ http://iplists.com/altavista.txt, \ http://iplists.com/excite.txt, \ http://iplists.com/misc.txt, \ http://iplists.com/non_engines.txt Figura 0.75: vim dspace.cfg 86 En este mismo archivo de configuración se coloco la siguiente variable en falso para que todos los usuarios tengan acceso a las estadísticas del Repositorio. key:_statistics.item.authorization.admin=false Figura 0.76: parámetro para permitir la visualización de estadísticas DSpace tiene la funcionalidad de agregar en la cabecera del sitio los metadatos para que sean indexados por Google Scholar, para que esto pase se configuro en el archivo dspace.cfg el parámetro google-metadata.enable en verdadero. google-metadata.enable = true Figura 0.77: habilitar google scholar Una vez habilitado modificamos las propiedades para que se adaptara a nuestras necesidades en el archivo de configuración google-metadata.properties. En este archivo existe una relación nombre / valor de los metadatos de los elementos dentro del repositorio. Debido a la cantidad de información que en un futuro va a estar depositada aquí, y la gran mayoría de ésta va a ser colocada o cargada por sus autores, se instalo un antivirus (ClamAV) que va a estar monitoreando el contenido que sea depositado en el Repositorio Institucional, dando mayor seguridad a los usuarios que deseen descargar elementos para su consulta, y librándolos de esas molestias. Politicas de Acceso Para el diseño de las políticas de acceso se observo que acuerdo al contenido que se puede depositar, la mejor forma es definir cinco grandes grupos como lo son: Grupo: Docente Permiso para incluir contenido en: Comunidad: Docencia Comunidad: Investigación Comunidad: Talento UCV, Sub Comunidad: Profesores e Investigadores 87 Grupo: Administrativo Permiso para incluir contenido en: Comunidad: Talento UCV, Sub Comunidad: Administrativo Grupo: Institucional Permiso para incluir contenido en: Comunidad: Gestión Grupo: Revistas Permiso para incluir contenido en: Comunidad: Revistas Grupo: Biblioteca Permiso para incluir contenido en: Comunidad: Tesis Diseño OJS Para la adaptación a la nueva interfaz web, se tuvo que modificar plantillas y crear un duplicado de ellas, para que no alteraran el funcionamiento normal de la herramienta y en futuras actualizaciones no existiera ningún tipo de inconvenientes por archivos modificados, y para ellos es necesario trabajar con hojas de estilos y plantillas. Se utilizaron herramientas de edición y creación de estos archivos. Esto consistió en la duplicación y modificación de los siguientes archivos: Ubicación: /var/www/ojs/styles bothSidebar.css - en este archivo se localiza los estilos para el área central de la interfaz web. leftSidebar.css y rightSidebar.css - se localiza los estilos para la barra de navegación de la izquierda y derecha respectivamente. /images – este es uno de los directorio agregados conteniendo las imágenes necesarias para la adaptación de la nueva interfaz web. 88 Ubicación: /var/www/ojs/lib/pkp/styles common.css – se localiza estilos de la herramienta en general, tanto del área de contenido como de las barra de navegación, la cabecera y pie de página. Ubicación: /var/www/ojs/templates/common navbar.tpl – platilla de la barra de navegación. Ubicación: /var/www/ojs/templates/search advancedSearch.tpl – platilla para realizar búsquedas. Ubicación: /var/www/ojs/lib/pkp/templates/common breadcrumbs.tpl – platilla para la ruta de navegación de la herramienta. header.tpl – platilla donde se hacen referencia a los archivos modificados. A cada uno de estos archivos se les realizaron las modificaciones pertinentes y en algunos casos las modificaciones fueron totales para poder obtener como resultado la siguiente interfaz web, y que esta no altere las configuraciones de las revistas alojadas en ella. Figura 0.78: interfaz web OJS 89 Configuración OJS A pesar de que OJS es una herramienta de fácil instalación y mantenimiento se deben de realizar algunos ajustes a través del archivo de configuración config.inc.php, ubicado en la raíz de la instalación, en nuestro caso en /var/www/ojs. Este archivo consta de secciones y aquí se muestra aquellas en las que se realizaron cambios. Tomando en cuenta que para este proyecto se tienen dos servidores unos para pruebas y otro para colocar los servicios en producción, y en cada uno de ellos se configura de manera distinta: Configuración General OJS incluye un script el cual realiza tareas programadas, como el envió de correos electrónicos para el recordatorio de revisiones, en esta sección se coloco este parámetro en “On” y con ello poder habilitarlas tareas programadas. Tomando en cuenta que se tiene que quitar el “;” al principio de la línea para descomentar la opción. scheduled_tasks = On Figura 0.79: habilitar tareas programadas Para que el script se pueda ejecutar de manera periódica se coloco una tarea en el crontab. root@saber:~#crontab –e Figura 0.80: tareas programadas 0 * * * * php /path/to/ojs2/tools/runScheduledTasks.php Figura 0.81: tareas programadas para recordatorios Configuración de la Base de Datos En el servidor de prueba se habilita la depuración para poder visualizar información, advertencias y errores en la interacción con la base de datos. debug = On Figura 0.82: habilitar debug Por el contrario en el servidor de producción se mantiene deshabilitado. 90 Configuración de Seguridad En el servidor de producción se configuro con SSL para el inicio de sesión, y así proporcionar autenticación y privacidad entre los extremos. Habilitando el siguiente parámetro. force_login_ssl = On Figura 0.83: habilitar ssl para login Configuración de Correo Electrónico Para la configuración de Correo electrónico se realizo una configuración previa, el cual consistió en instalar un servicio para el envió de correos llamado Postfix, en el cual se configuro para que enviara todos los correos de este servidor al servidor de correo institucional de la Facultad de Ciencias, el cual se va hacer cargo del envió de estos correo a su destino final. Configuración de Búsquedas OJS cuenta con la habilidad de utilizar aplicaciones de terceros, para realizar una indexación del contenido publicado a texto completo, para ello se realizaron instalaciones previas de estas aplicaciones como por ejemplo pdftotext, entre otras, para poder obtener el texto desde archivos con diferentes formatos. ; PDF index[application/pdf] = "/usr/bin/pdftotext %s -enc UTF-8 -nopgbrk %s - | /usr/bin/tr '[:cntrl:]' ' '" ; PostScript index[application/postscript] = "/usr/bin/pstotext %s -enc UTF-8 -nopgbrk %s - | /usr/bin/tr '[:cntrl:]' ' '" ; Microsoft Word index[application/msword] = "/usr/bin/catdoc %s" Figura 0.84: habilitar aplicaciones para leer documentos Depuración Estas modificaciones se realizaron en el servidor de prueba únicamente. 91 ; Display execution stats in the footer show_stats = On ; Display a stack trace when a fatal error occurs. ; Note that this may expose private information and should be disabled ; for any production system. show_stacktrace = On ; Display an error message when something goes wrong. display_errors = On ; Display deprecation warnings deprecation_warnings = On Figura 0.85: habilitar visualización de errores Pruebas de la plataforma Pruebas DSpace Para la realización de las pruebas se tuvo que tomar algunas consideraciones con respecto a la estructura de éste: Definir el alcance y los objetivos de repositorio, ya que estos afectan la estructura del mismo, saber qué tipo de contenido se quiere tener. Establecer una estructura que facilite la navegación. La estructura que se genero de las reuniones con el personal de saber fue 6 grandes comunidades, Docente, Gestión, Investigación, Revistas, Talento UCV y Tesis. Cada una ella sub dividida en sub comunidades como se muestra es la figura siguiente. 92 Figura 0.86: estructura temática Después de tener un esquema de cómo iba a estar estructurado el Repositorio, nos vamos a la interfaz web, donde vamos a configurar esta estructura, esto se realizo con el perfil de administrados. Figura 0.87: entrar en dspace 93 Luego de configurar cada comunidad, sub comunidad y colecciones se realizaron pruebas con un perfil configurado para docentes como se muestra a continuación. Este perfil tiene permisos para algunas comunidades, sub comunidades y colecciones, como lo son: • Comunidad Talento UCV, sub comunidad docente e investigador, para la carga de Currículum. • Producción Científica, y cada una de sus sub comunidades. • Docencia, escuela de química, y cada una de sus coleccione. Se depositaron documentos en el repositorio Institucional (RI) Saber UCV, donde se realizo un registro previo. Y luego se ingreso en el vínculo “Mi Dspace” Figura 0.88: menú dspace Se ingreso el usuario y contraseña. Figura 0.89: entrar en dspace 94 Se selecciona la opción “comenzar nuevo envío” para verificar que todo se esté depositando sin ningún tipo de error. Figura 0.90: comenzar nuevo envío Se selecciono cada una de las colecciones que aparece en el listado a las cuales se le otorgaron permisos para depositar. Figura 0.91: envío Aparecerá una lista de opciones, para seleccionar o activar de acuerdo a las características del documento a depositar, estas opciones varían según el tipo de colección seleccionada. Pueden aparecer las siguientes opciones o una de ellas: el documento tiene más de un titulo, si el documento contiene más de un archivo, o si el documento ha sido publicado con anterioridad. 95 Figura 0.92: describa su ítem Luego se Ingresan los datos del documento de prueba. Figura 0.93: describir 96 Figura 0.94: describir 2 Se sube o se deposita el documento y se le da una breve descripción. Figura 0.95: subir ítem 97 Se Figura 0.96: verificar ítem Se verifica y se aceptan las licencias hasta completar los envíos. Por último el documento paso por una revisión, esto ocurre en el servidor de producción en estas pruebas se configuro para que el depósito sea aceptado sin pasar por revisores. 98 Figura 0.97: envío finalizado Estos pasos se llevaron a cabo reiteradamente, tratando de forzar el fallo de la aplicación, y sin resultados desfavorables. Pruebas OJS Para realizar las pruebas del correcto funcionamiento de la herramienta se configura la primera revista “Revista de la Facultad de Ciencias Veterinarias, UCV”, para esto ingresamos a la aplicación web que se encuentra alojada en el servidor de prueba. Abrimos un explorador y colocamos el URL, luego escribimos usuario y contraseña del administrador. Figura 0.98: login OJS 99 Al entrar con el perfil de administrador, nos dirigimos a crear la revista ingresando en el Ítem administrador. Figura 0.99: Inicio de OJS Donde aparecerá una sección llamada Gestión de Sitio, e ingresamos en el ítem Revistas alojadas. Figura 0.100: administración del sitio Se secciona el enlace CREAR REVISTA. 100 Figura 0.101: revistas en OJS Se llena el formulario con la información básica sobre la revista, y se le otorga a este usuario administrador el perfil de gestor de esta revista. Figura 0.102: configuración de revistas En el momento en que la revista es creada, el gestor, realiza las configuraciones pertinentes con ayuda de la persona encargada de llevar esta revista en físico, y quien va a 101 tener la responsabilidad de gestionarla en el futuro. Esta configuración se realiza en 5 pasos: • Detalles - en donde se proporciona información como Nombre de la revista, ISSN, contactos, patrocinadores y buscadores. • Políticas - temática, revisión por pares, secciones, privacidad, acceso, seguridad, y temas adicionales. • Envíos - Directrices para autores/as, copyright, e indexación. • Gestión - Acceso y seguridad, planificación, anuncios, edición, formato y pruebas. • Apariencia - Cabecera de la página principal, contenido, cabecera de la revista, pie, barra de navegación y hoja de estilo. El paso siguiente a realizar, es la asignación de los roles a usuarios virtuales, para poder simular el entorno editorial y comprobar que todas las configuraciones están funcionando correctamente. En este proceso se realizaron las siguientes pruebas: La creación de números, los envíos de artículos por parte de los autores, la selección de los revisores, la aprobación o fallo por parte es estos, hasta llegar a la publicación. También se probó las publicaciones expeditas, que son aquellas hechas con número que ya fueron publicados en físico y quieren ser colocados en la web. También se verifico el envió de recordatorios para las revisiones. Talleres de Inducción En el proceso de puesta en marcha de esta herramienta se realizaron 3 talleres con un aproximado de 12 docentes por taller, para la inducción del personal ligado a grupos editoriales de revistas de la UCV, como los son la Revista de la Facultad de Ciencias Veterinarias, Akademos, Revista de la Sociedad Venezolana de Microbiología, entre otras. En estos talleres se le dio una inducción sobre los principales aspectos de OJS, que es OJS, quien lo usa, para que sirve, características, los roles, el proceso editorial dentro de la herramienta, creación, publicación de revistas, ventajas, entre otras. También se les dio prácticas en la creación y publicación de revistas con ambos métodos. 102 Resultados En el presente trabajo especial de grado se implemento un repositorio y algunas herramientas complementarias, presentando un escenario ideal para la recolección, gestión, preservación de la producción científica de la Universidad Central de Venezuela, utilizando herramientas de software libre tales como Dspace, Open Journal System, y Open Conference Systems. Cuyas herramientas pueden ser auto gestionadas, dando la posibilidad al docente o investigador de poder colocar en la plataforma sus publicaciones arbitradas, no arbitradas, trabajos inéditos, material para docencia, ya que la estructura del repositorio nos brinda esa facilidad. Siendo esta estructura orientada a contenido y no a la estructura universitaria, facilita la navegación por el sitio. Con la implantación de las herramientas antes mencionadas se obtuvieron los siguientes resultados: • Se estudiaron algunas de las plataformas tecnológicas existentes, que permitieron la implantación de una plataforma compuesta por repositorio, gestor de revistas y eventos. • Se realizo un análisis de los requerimientos de la comunidad universitaria con el apoyo del personal universitario compuesto por un grupo multi disciplinario, y se definió la estructura temática, que representa a la universidad dentro del repositorio. • Se instalo un prototipo funcional, en donde, se adapto su entorno grafico y se definieron políticas de acceso para la carga de información según los requerimientos de la comunidad. • Se diseñaron manuales de auto gestión, y se dictaron cursos al personal docente y administrativo con la finalidad de que se familiarizaran y se facilitara la carga del material intelectual generado por la universidad. 103 Conclusión Gracias a las bondades de estas plataformas que nos brindan funcionalidades que ayudan a la visibilidad de la universidad. Se logró la configuración de la gestión de revistas y gestión de eventos para contribuir a la preservación y resguardo del patrimonio histórico universitario. Se mantiene la política de acceso libre a la información, ya que todo el contenido está y estará publicado con licencia Cretive Commons. Gracias a este trabajo se pudo comprobar la calidad, robustez, efectividad y eficiencia del software. Y se conformó un grupo interdisciplinario que contribuirá al mantenimiento de la información y la generación de contenidos digitales. A continuación, se especifican las contribuciones, limitaciones y recomendaciones de este trabajo de grado. Posteriormente, se detallaran algunos posibles trabajos futuros que se podrá realizar en este aspecto. Recomendaciones En esta implantación de herramientas para gestionar y preservar la producción intelectual de la Universidad Central de Venezuela, es importante tener en cuenta ciertas consideraciones o recomendaciones: • Mantener actualizada la plataforma, ya que sus comunidades son trabajadores incansables y rápidamente están publicando nuevas actualizaciones incorporando mejoras. • Proporcionar un buen servicio rápido y oportuno. Trabajos futuros Como trabajos futuros se proponen la integración del servicio de autenticación LDAP, donde se tenga el directorio de toda la comunidad universitaria, facilitando la autenticación de los usuarios en los sistemas. 104 También un nuevo desarrollo en la otra interfaz web de DSpace XMLUI, ya que todos los esfuerzos de esta comunidad se están abocando al desarrollo de esta interfaz. La integración de estas herramientas a través de una aplicación como Sword, quien facilita el traslado de los documentos desde herramientas como OJS y OCS hasta el repositorio en DSpace, sin mucho esfuerzo. Por último establecer un mecanismo de balanceo de carga, ya que este promete ser una plataforma con mucha demanda. 105 Glosario de Términos • REST: utiliza únicamente XML y HTTP. Cada URL representa un objeto sobre el que puedes realizar POST, GET, PUT y DELETE (las operaciones típicas del HTTP). • SOAP: es toda una infraestructura basada en XML. Donde cada objeto puede tener métodos definidos por el programador con los parámetros que sean necesarios. • RDF: El Marco de Descripción de Recursos (del inglés Resource Description Framework, RDF) es un framework para metadatos en laWorld Wide Web (WWW), desarrollado por el World Wide Web Consortium (W3C). • SPARQL: acrónimo recursivo del inglés SPARQL Protocol and RDF Query Language. Se trata de un lenguaje estandarizado para la consulta de grafos RDF, normalizados por el RDF Data Access Working Group (DAWG) del Word Wide Web Consortium (W3C). Es una tecnología clave en el desarrollo de la Web Semántica que se constituyó como Recomendación oficial del W3C el 15 de Enero de 2008. • JMS La API Java Message Service (en español servicio de mensajes Java), también conocida por sus siglas JMS, es la solución creada por Sun Microsystems para el uso de colas de mensajes. Este es un estándar de mensajería que permite a los componentes de aplicaciones basados en la plataforma Java2 crear, enviar, recibir y leer mensajes. También hace posible la comunicación confiable de manera síncrona y asíncrona. • GUI La interfaz gráfica de usuario, conocida también como GUI (Graphical User Interface) es un programa informático que actúa como interfaz de usuario, utilizando un conjunto de imágenes y objetos gráficos para representar la información y acciones disponibles en la interfaz. • OAI-PMH El protocolo OAI-PMH (Open Archives Initiative-Protocol Metadata Harvesting), es una herramienta de interoperabilidad independiente de la aplicación que permite realizar el intercambio de información entre puntos (proveedores de servicio), se puedan hacer búsquedas que abarquen la información recopilada en distintos repositorios asociados (proveedores de datos). • gSearch es un ligero plugin de jQuery que nos puede ayudar a integrar los resultados de la búsqueda de Google en nuestro sitio web. 106 • CORDRA es un esfuerzo por definir un marco para la federación de las colecciones digitales. El marco también conocido como "especificación CORDRA" está destinado a ser un proceso abierto, basado en estándares modelo para el diseño e implementación de sistemas de información, incluyendo los registros y repositorios para el propósito de descubrir, compartir y reutilizar la información. • LAMP es un acrónimo de un conjunto de soluciones de software libre, Linux ( sistema operativo ), Apache, MySQL (base de datos) y Perl / PHP / Python , son los componentes principales para construir una alternativa viable de propósito general para servidores web. • OCLC - Fundado en 1967, el OCLC Online Computer Library Center se define como una organización sin fines de lucro, compuesta de miembros, dedicada a prestar servicios bibliotecarios computarizados y de investigación, con el propósito público de facilitar el acceso a la información del mundo y reducir los costos asociados. Al menos 72.000 bibliotecas en 170 utilizan los servicios de OCLC para ubicar, adquirir, catalogar, prestar y preservar material bibliotecario. • El OAICat Software de Código Abierto (OSS) es un proyecto Java Servlet aplicación web que proporciona un marco depósito que cumpla con el Protocolo de Iniciativa de Archivos Abiertos para la Recolección de Metadatos (OAI-PMH) v2.0. • SIP (Standard Ingest Package): Datos empaquetados para alimentar un repositorio. • Dspace: Plataforma Open Source (Software Libre) para desarrollar repositorios digitales. • Blog: Plataforma para publicar bitácoras y sitios Web. • RSS: Estándar de distribución de contenidos. Llamados también Feeds RSS. • Eperson. Dspace: Usuario de Dspace. • Grupo. Dspace: Grupo de usuarios de Dspace con determinados privilegios. • Comunidad. Dspace: Estructura principal de modelado de información en Dspace. • Colección. Dspace: Agrupa documentos por su tipo .Bitstream. 107 • Dspace: Archivo digital con el documento. • Bundle. Dspace: Grupo de Bitstreams. • Handle, handle System. Dspace: Sistema de nombres únicos para direccionar objetos de información en internet. • Workflow. Dspace: Flujo de publicación de un documento en Dspace. • Batch Importer. Dspace: Mecanismo de alimentación masiva de Dspace. • JSP UI. Dspace: Interfaz para Dspace hecha con Servlets Java. • XML UI. Dspace: Interfaz para Dspace hecha en base a XML. • Java: Lenguaje de programación con el que se hizo Dspace. • Servlets: Aplicaciones Java que generan páginas Web. • Tomcat: Servidor de aplicaciones Web hechas en Java. • PostgreSQL: Manejador de Base de Datos Open Source. • Ant: Compilador para programas hechos en lenguaje Java. • Maven: Organizador de proyectos de aplicaciones. 108 Bibliografía TALLER Portal de Revistas Universidad Nacional de La Plata, Disponible en: http://revistas.unlp.edu.ar Página Web de Public Knowledge Project (PKP), Disponible en: http://pkp.sfu.ca Gestión Editorial usando OJS (Open Journal Systems) en Redalyc. Arianna Becerril García, Honorio García Flores. Disponible en: http://www.cudi.edu.mx/aplicaciones/dias_cudi/08_09_26/ariana_becerril.ppt Documentación Open Journal Systems Disponible en: http://pkp.sfu.ca/ojs_documentation Manuales del Open Journal System. Luis Felipe Gomez Dueñas. Disponible en: http://revistasuniversitarias.wordpress.com/category/manuales/ Tony Hernández Pérez, “Open Access: El papel de las bibliotecas institucionales de acceso abierto”, No. 10, 2007. Pág. 185-204 Disponible en: http://digitum.um.es/xmlui/bitstream/10201/4017/3/1191.pdf Remedios Melero, “Open Access y respositorios institucionales”. Disponible en: http://www.iata.csic.es/~bibrem/OPEN_ACCESS/repositorios-articulo- melero.pdf Rodrigo Torréns, “Presente y Futuro de los Repositorios Institucionales”, 27-04-2006. Disponible en: http://www.saber.ula.ve/bitstream/123456789/13336/1/repositorios- institucionales.pdf Página web Fedora Disponible en: http://fedora-commons.org/ Wiki Fedora Disponible en: https://wiki.duraspace.org/display/FEDORACREATE/Tutorial+1+- +Introduction+to+Fedora Wiki DSpace Disponible en: http://es.wikipedia.org/wiki/DSpace 109 Página web jQuery Disponible en: http://plugins.jquery.com/project/gSearch Página web Eprints Disponible en: http://www.eprints.org/ EPrints Wiki Disponible en: http://wiki.eprints.org/w/EPrints_Manual EPrints v3 Briefing Disponible en: http://www.eprints.org/software/v3briefing.php Open Repositories Conference, San Antonio, Texas, USA Disponible en: http://openrepositories.org/ EPrints filestore Disponible en: http://files.eprints.org/ Introducing EPrints 3 Disponible en: http://www.eprints.org/software/v3/ COUNTER Disponible en: http://www.projectcounter.org/ EP3 Requirements Disponible en: http://www.eprints.org/software/v3/v3requirements.php EPrints 3 Pre-Launch Briefing Disponible en: http://www.ariadne.ac.uk/issue50/eprints-v3-rpt/#5 EPrints 3 - Key Features and Demonstrations Disponible en: http://www.eprints.org/software/v3/ Raym Crow,”The Case for Institutional Repositories A SPARC Position Paper”, 2002 Disponible en: http://scholarship.utm.edu/20/1/SPARC_102.pdf Clifford A. Lynch, "Institutional Repositories: Essential Infrastructure for Scholarship in the Digital Age" ARL, no. 226 (February 2003): 1-7. The Directory of Open Access Repositories - OpenDOAR Disponible en: http://www.opendoar.org/ Ranking Web de Repositorios del Mundo Disponible en: http://repositories.webometrics.info/index_es.html 110 Anexos Repositorios por País (Digital Commons) Repositorios por País, en Suramérica (EPrints) 111 Repositorios por País (EPrints) Repositorios por País (Fedora) 112 Repositorios por País (DSpace) Repositorios por País, Suramérica (DSpace) 113 Manual Básico – Auto Archivo DSpace Para depositar documentos en RI Saber UCV, Usted debe registrarse. Para esto, ingrese en el vínculo “Mi Dspace” 114 Una vez ingrese en la opción “Mi Dspace” ingrese su usuario y contraseña. Una vez Activada su cuenta haga clic en “comenzar nuevo envío” 115 Elija la colección sobre la cual tiene permisos como depositante, “recuerde que si no ha solicitado el permiso no podrá continuar”. Haga clic en el botón “siguiente”. Aparecerá un listado de opciones, para seleccionar o activar de acuerdo a las características del documento a depositar, estas opciones varían según el tipo de colección seleccionada. Pueden aparecer las siguientes opciones o una de ellas: el documento tiene más de un titulo, si el documento contiene más de un archivo, o si el documento ha sido publicado con anterioridad. Si el Documento cumple alguna de estas características active la casilla correspondiente, de lo contrario no seleccione ninguna; a continuación haga clic en el botón “siguiente” 116 Ingrese los datos correspondientes y haga clic en el botón “siguiente”. Ingrese los datos correspondientes y haga clic en el botón “siguiente”. 117 Si el documento agregado no cumple con estos requisitos, el documento no será aceptado y usted tendrá que realizar los ajustes correspondientes. Si usted selecciono “CARACTERÍSTICAS DEL DOCUMENTO A DEPOSITAR”, que el documento contiene más de un archivo, aparecerá un botón llamado “añadir otro archivo” debe hacer clic sobre este botón”. Para subir los documentos. El orden como se suban los documentos será como se visualizará en el RI. En este paso observará un botón que indica “mostrar checksums”, hacer clic sobre este botón, esto genera una cadena de caracteres, siendo esto un tipo de control muy simple para proteger la integridad de datos. 118 En este punto usted puede observar y corregir los campos que anteriormente ha colocado. Si necesita corregir algún dato, es necesario hacer clic en el botón “Modificar datos”. Para que el documento pueda ser publicado en Saber UCV, es necesario que Usted autorice la divulgación del documento que ha ingresado, de acuerdo a la política de propiedad intelectual de la Universidad Central de Venezuela. Para aceptar la licencia debe hacer clic en el botón “acepto la licencia”. Al no aceptar la licencia, el documento no será publicado ni aceptado en el repositorio. 119 Usted ha terminado el proceso del autoarchivo; antes de que pueda verlo publicado, el documento pasará a revisión y aprobación por parte de Saber UCV. En caso de no cumplir con los requerimientos, el administrador le enviara vía correo electrónico una notificación con la solicitud de los arreglos correspondientes. Si el documento cumple con los requerimientos del Repositorio Institucional, será aprobado y publicado en la colección a la que pertenece, vía correo electrónico le será enviada la notificación.