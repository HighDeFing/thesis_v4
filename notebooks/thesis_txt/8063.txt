UNIVERSIDAD CENTRAL DE VENEZUELA FACULTAD DE CIENCIAS ESCUELA DE COMPUTACIÓN DESARROLLO DE UN SISTEMA WEB PARA LA GESTIÓN, PLANIFICACIÓN Y MANEJO DE EQUIPOS DE DESARROLLO DE PROYECTOS Trabajo Especial de grado presentado ante la Ilustre Universidad Central de Venezuela Por el bachiller: Gabriel E. Moreno M. C.I. 24530418 para optar por la Licenciatura de Computación Tutor: Prof. Franklin Sandoval Caracas, Enero de 2019 2 Dedicatoria Quisiera dedicarle este trabajo especial de grado en primer lugar a mi familia teniendo la esperanza de poder reencontrarme con ellos. A mi madre, que me dio la vida, la que siempre me ha apoyado e impulsado en mis estudios. A mi padre, que siempre ha estado allí luchando y trabajando todos los días para sacar adelante a nuestra familia. A mi hermana, mi más grande amiga que sin importar nada siempre me daba su apoyo. A mi hermano, que siempre fue un ejemplo a seguir en la vida y una inspiración. A mis tíos, por ser su incondicional apoyo ante cualquier situación que pudiera presentar. A todos aquellos compañeros que me dieron su apoyo y amistad en lo largo de estos años de carrera, por todas esas noches desveladas estudiando, por esas interminables charlas en el cafetín, por todas las aventuras y desventuras que logré vivir a través de mis años de estudio. 3 Agradecimientos Quisiera dar un agradecimiento especial a todas las personas que me han podido apoyar desde el inicio de mis estudios, principalmente a mi familia que con su esfuerzo y presión me ayudaron a concluir mis estudios, sin importar qué tan difícil eran las situaciones en las que me encontraba, sabía que siempre podía contar con ellos para darme apoyo. Gracias en especial al profesor Franklin Sandoval, por su apoyo ante estos momentos de dificultad, por su valiosa ayuda durante el transcurso de la carrera y siempre estar dispuesto a ofrecer su tiempo y esfuerzo desinteresadamente hacia los estudiantes, personalmente por sus palabras de aliento y motivación para poder concluir con este desarrollo, así mismo como con la carrera. Por último, un agradecimiento especial a todos los miembros de la facultad de ciencias de la UCV, ya que con su esfuerzo y dedicación diaria me permitieron poder realizar mis estudios. 4 Universidad Central de Venezuela Facultad de Ciencias Escuela de Computación Desarrollo de un sistema web para la gestión, planificación y manejo de equipos de desarrollo de proyectos Autor: Gabriel Enrique Moreno Montemurro C.I. 24.530.418 gabox0958@gmail.com Tutor: Prof. Franklin Sandoval franklin99.sandoval@gmail.com RESUMEN El presente trabajo se relaciona con el diseño de un sistema web para la administración de proyectos tecnológicos para organizaciones, con un enfoque principal de colaboración para la planificación y gestión adecuada de todas las fases del proyecto que se deben cubrir para la consecución de los objetivos establecidos. Los sistemas de gestión de proyectos son herramientas que permiten a sus usuarios poder gestionar, mantener y desarrollar proyectos y equipos de desarrollo asociado al mismo, según sean sus necesidades. El presente trabajo tiene como objetivo el desarrollo de un sistema web capaz de gestionar tanto distintos proyectos, como distintos equipos de desarrollo. Este sistema se encuentra dirigido tanto a líderes de proyectos como a cualquier miembro de un equipo de desarrollo, el cual permite mejorar y mantener un desarrollo de una forma cómoda, ordenada y visual. Para el desarrollo de dicho sistema se utilizaron las distintas tecnologías PHP (Lenguaje de programación backend), HTML, Javascript y MySQL (Sistema manejador de base de datos). Que fueron utilizadas en el desarrollo de un programa compatible con equipos, interfaces y base de datos para que el sistema tenga un comportamiento funcional elevado. Siendo el funcionamiento del sistema de fácil manejo para ingresar información respecto al avance del proyecto Palabras Clave: Sistemas de gestión de proyectos, equipos de desarrollo, planificador de proyectos. 5 Índice General Introducción.................................................................................................................12 Capítulo I: Problema de Investigación........................................................................14 1.1 Antecedentes del problema...........................................................................14 1.2 Planteamiento del problema.........................................................................15 1.3 Objetivos......................................................................................................16 1.3.1 Objetivo General...................................................................................17 1.3.2 Objetivos Específicos...........................................................................17 1.4 Justificación e importancia...........................................................................17 1.5 Alcance.........................................................................................................18 1.6 Solución........................................................................................................18 Capítulo II: Marco Conceptual....................................................................................19 2.1 Proyecto........................................................................................................19 2.2 Características de un Proyecto.....................................................................19 2.3 Dirección de Proyecto..................................................................................21 2.4 Áreas de Conocimiento de la Dirección de Proyectos.................................24 2.4.1 Gestión de la Integración......................................................................25 2.4.2 Gestión del Alcance..............................................................................27 2.4.3 Gestión del Tiempo...............................................................................28 2.4.4 Gestión de Costes.................................................................................28 2.4.5 Gestión de Calidad................................................................................29 2.4.6 Gestión de Recursos Humanos.............................................................30 2.4.7 Gestión de Comunicación.....................................................................30 2.4.8 Gestión de Riesgos...............................................................................31 2.4.9 Gestión de Adquisiciones.....................................................................32 2.4.10 Gestión de los Interesados..................................................................32 2.5 Software de Gestión de Proyectos................................................................33 2.6 Triángulo de Hierro......................................................................................34 2.7 Aplicaciones Web.........................................................................................35 2.7.1 Servidor................................................................................................37 2.7.2 Cliente...................................................................................................38 2.7.3 Bootstrap...............................................................................................39 2.7.4 PHP.......................................................................................................40 2.8 Base de Datos...............................................................................................41 2.8.1 Sistema Manejador de Base de Datos...................................................41 Capítulo III: Marco Metodológico...............................................................................43 3.1 Métodos de Investigación.............................................................................43 3.2 Etapas de la Metodología de Investigación..................................................46 3.3 Adaptación Metodológica............................................................................47 Capítulo IV: Marco Aplicativo....................................................................................49 4.1 Herramientas de Solución............................................................................49 4.2.1 Herramientas Servidor de la Aplicación...............................................49 4.2.2 Base de Datos.......................................................................................49 6 4.3 Diseño de la Aplicación................................................................................50 4.3.1 Sprint 1.................................................................................................52 4.3.2 Sprint 2.................................................................................................77 4.3.3 Sprint 3.................................................................................................94 4.3.4 Sprint 4...............................................................................................104 4.3.4 Sprint 5................................................................................................114 4.4 Interfaces Finales........................................................................................129 Conclusiones y Recomendaciones.............................................................................137 Referencias Bibliográficas y Digitales......................................................................139 7 Índice de Figuras Figura 1: Triángulo de Hierro, indicando sus tres (3) pilares.......................................34 Figura 2: Esquema básico de una aplicación web.......................................................35 Figura 3: Estructura básica de una petición HTTP.......................................................36 Figura 4: Diagrama del ciclo iterativo de Scrum..........................................................47 Figura 5: Caso de Uso de nivel 1..................................................................................54 Figura 6: UC1-Registro.................................................................................................55 Figura 7: UC2-Login......................................................................................................56 Figura 8: UC3-Cerrar Sesión.........................................................................................57 Figura 9: UC4-Admin Horas..........................................................................................58 Figura 10: UC5-Gestión Proyectos...............................................................................59 Figura 11: UC5.1-Crear Proyecto.................................................................................60 Figura 12: UC5.2-Editar Proyecto.................................................................................61 Figura 13: UC5.3-Eliminar Proyecto.............................................................................62 Figura 14: UC6-Gestión Tareas.....................................................................................63 Figura 15: UC6.1-Crear Tarea.......................................................................................64 Figura 16: UC6.2-Editar Tarea......................................................................................65 Figura 17: UC6.3-Eliminar Tarea..................................................................................66 Figura 18: UC7-Asignar Tareas.....................................................................................67 Figura 19: UC7.1-Crear Asociación..............................................................................68 Figura 20: UC7.2-Eliminar Asociación..........................................................................69 Figura 21: UC8-Admin Usuarios...................................................................................70 Figura 22: UC8.1-Editar Usuario..................................................................................71 Figura 23: UC8.2-Eliminar Usuario...............................................................................72 Figura 24: UC9-Reportes..............................................................................................73 Figura 25: Diagrama de ER de la BD de la aplicación...................................................74 Figura 26: Fragmento de código que permite la conexión con la BD..........................76 Figura 27: Wireframe 1, Vista principal para usuarios administradores.....................78 Figura 28: Wireframe 2, Vista principal para usuarios No administradores................79 Figura 29: Wireframe 3, Vista de inicio de sesión de la aplicación..............................80 Figura 30: Wireframe 4, Vista de registro de la aplicación..........................................81 Figura 31: Wireframe 5, Vista principal de la administración de usuarios..................82 Figura 32: Wireframe 6, Vista de edición de la administración de usuarios...............83 Figura 33: Wireframe 7, Vista principal de la gestión de proyectos............................84 Figura 34: Wireframe 8, Vista de creación de la gestión de proyectos.......................85 Figura 35: Wireframe 9, Vista de edición de la gestión de proyectos.........................86 Figura 36: Wireframe 10, Vista principal de la gestión de tareas................................87 Figura 37: Wireframe 11, Vista de creación de la gestión de tareas...........................88 Figura 38: Wireframe 12, Vista de edición de la gestión de tareas.............................89 Figura 39: Wireframe 13, Vista principal de la asignación de tareas a usuarios.........90 8 Figura 40: Wireframe 14, Vista de creación de la asignación de tareas a usuarios.. . .91 Figura 41: Wireframe 15, Vista principal de la administración de horas.....................92 Figura 42: Wireframe 16, Vista principal de la generación de reportes......................93 Figura 43: Fragmento de código RegistroUsuario.php................................................95 Figura 44: Fragmento de código CerrarSesion.php.....................................................97 Figura 45: Fragmento de código editarUsuario.php....................................................98 Figura 46: Fragmento de código gestionUsuario.php..................................................99 Figura 47: Screenshot mostrando el caso de prueba 6.............................................102 Figura 48: Screenshot mostrando el caso de prueba 7.............................................103 Figura 49: Archivo PDF generado por la vista de Reportes........................................120 Figura 50: Gráfico de la pregunta 1...........................................................................124 Figura 51: Gráfico de la pregunta 2...........................................................................124 Figura 52: Gráfico de la pregunta 3...........................................................................125 Figura 53: Gráfico de la pregunta 4...........................................................................125 Figura 54: Gráfico de la pregunta 5...........................................................................126 Figura 55: Gráfico de la pregunta 6...........................................................................126 Figura 56: Gráfico de la pregunta 7...........................................................................127 Figura 57: Screenshot de la vista principal de gestión de proyecto, mostrando el icono..........................................................................................................................128 Figura 58: Screenshot del calendario con las modificaciones del color....................128 Figura 59: Screenshot de la vista de edición de tareas, mostrando el checkbox en Activo.........................................................................................................................128 Figura 60: Screenshot de la Pagina Principal.............................................................129 Figura 61: Screenshot de la Pagina de Login.............................................................130 Figura 62: Screenshot de la Pagina de Registro.........................................................130 Figura 63: Screenshot de la Pagina Principal Gestión Usuarios.................................131 Figura 64: Screenshot de la Pagina Modificar Usuarios............................................131 Figura 65: Screenshot de la Pagina Principal de Gestión de Proyectos.....................132 Figura 66: Screenshot de la Pagina de Creación de Proyectos..................................132 Figura 67: Screenshot de la Pagina de Modificación de Proyectos...........................133 Figura 68: Screenshot de la Pagina Principal de Gestión de Tareas..........................133 Figura 69: Screenshot de la Pagina de Creación de Tareas........................................134 Figura 70: Screenshot de la Pagina de Modificación de Tareas.................................134 Figura 71: Screenshot de la Pagina Principal de Gestión de Asignaciones................135 Figura 72: Screenshot de la Pagina de Creación de Asignaciones.............................135 Figura 73: Screenshot de la Pagina de Administración de Horas..............................136 Figura 74: Screenshot de la Pagina Principal de Reportes.........................................136 9 Índice de Tablas Tabla 1: Pila de Productos...........................................................................................51 Tabla 2: Sprint 1...........................................................................................................52 Tabla 3: UC1-Registro.................................................................................................55 Tabla 4: UC2-Login.....................................................................................................56 Tabla 5: UC3-Cerrar Sesión.........................................................................................57 Tabla 6: UC4-Admin Horas.........................................................................................58 Tabla 7: UC5-Gestión Proyectos.................................................................................59 Tabla 8: UC5.1-Crear Proyecto...................................................................................60 Tabla 9: UC5.2-Editar Proyecto...................................................................................61 Tabla 10: UC5.3-Eliminar Proyecto............................................................................62 Tabla 11: UC6-Gestión Tareas.....................................................................................63 Tabla 12: UC6.1-Crear Tarea.......................................................................................64 Tabla 13: UC6.2-Editar Tarea......................................................................................65 Tabla 14: UC6.3-Eliminar Tarea..................................................................................66 Tabla 15: UC7-Asignar Tareas.....................................................................................67 Tabla 16: UC7.1-Crear Asociación..............................................................................68 Tabla 17: UC7.2-Eliminar Asociación.........................................................................69 Tabla 18: UC8-Admin Usuarios..................................................................................70 Tabla 19: UC8.1-Editar Usuario..................................................................................71 Tabla 20: UC8.2-Eliminar Usuario..............................................................................72 Tabla 21: UC9-Reportes..............................................................................................73 Tabla 22: Sprint 2.........................................................................................................77 Tabla 23: Sprint 3.........................................................................................................94 Tabla 24: Caso de Prueba 1..........................................................................................99 Tabla 25: Caso de Prueba 2........................................................................................100 Tabla 26: Caso de Prueba 3........................................................................................100 Tabla 27: Caso de Prueba 4........................................................................................101 Tabla 28: Caso de Prueba 5........................................................................................101 Tabla 29: Caso de Prueba 6........................................................................................102 Tabla 30: Caso de Prueba 7........................................................................................103 Tabla 31: Sprint 4.......................................................................................................104 Tabla 32: Caso de Prueba 8........................................................................................109 Tabla 33: Caso de Prueba 9........................................................................................109 Tabla 34: Caso de Prueba 10......................................................................................110 Tabla 35: Caso de Prueba 11......................................................................................110 Tabla 36: Caso de Prueba 12......................................................................................111 Tabla 37: Caso de Prueba 13......................................................................................111 Tabla 38: Caso de Prueba 14......................................................................................112 Tabla 39: Caso de Prueba 15......................................................................................112 Tabla 40: Caso de Prueba 16......................................................................................113 Tabla 41: Caso de Prueba 17......................................................................................113 Tabla 42: Sprint 5.......................................................................................................114 10 Tabla 43: Caso de Prueba 18......................................................................................116 Tabla 44: Caso de Prueba 19......................................................................................117 Tabla 45: Caso de Prueba 20......................................................................................118 Tabla 46: Caso de Prueba 21......................................................................................118 Tabla 47: Caso de Prueba 22......................................................................................121 Tabla 48: Caso de Prueba 23......................................................................................121 Tabla 49: Caso de Prueba 24......................................................................................122 Tabla 50: Caso de Prueba 25......................................................................................122 11 Introducción En un mundo tan competitivo, cambiante y dominante tecnológicamente, es imprescindible para toda organización, empresa o universidad, innovar con soluciones integrales que eleven la competitividad, desarrollo y productividad en los procesos, productos o servicios que satisfagan las necesidades de los consumidores. Pero a la hora de participar en el desarrollo de un proyecto, no solo de computación, sino de cualquier ámbito, el mismo conlleva la coordinación y participación de todas sus partes, las actividades a realizar, el equipo de trabajo, la coordinación de todos estos factores es fundamental para que se pueda nombrar como viable un proyecto. Debido a la naturaleza compleja que conllevan cada uno de los elementos de un proyecto, ya sean, principios, necesidades, motivaciones, incluso el equipo de trabajo que lo integran, la complejidad de un proyecto es prácticamente ineludible, pero con las herramientas y los conocimientos adecuados, pueden ser sostenibles, permitiendo así aumentar las posibilidades de poder concluir dicho proyecto de manera exitosa. Dadas estas consideraciones, se desea desarrollar una aplicación web que permita dar apoyo a la gestión y administración de manera paralela a proyectos, tareas y equipos de trabajos, permitiendo el manejo de distintos tipos de usuarios, además poder generar reportes para poder ayudar al momento de poder consolidar los diferentes datos de forma estructurada. Para poder alcanzar los objetivos planteados en este trabajo especial de grado, se optó por estructurar el siguiente documento de la siguiente manera. Capítulo 1, “Planteamiento del problema”, en el que se describe el problema cuya solución se busca obtener, el alcance y los objetivos de este Trabajo Especial de Grado. Capítulo 2, “Marco Teórico”, en el que se describen los antecedentes, teorías, 12 conceptos y procesos relacionados con el problema a resolver y con la solución planteada. Capítulo 3, “Marco Metodológico”, que describe las metodologías y lineamientos que van a ser considerados para el desarrollo de la solución. Capítulo 4, “Marco Aplicativo”, donde se describe el desarrollo de la aplicación, el uso de la metodología y las principales vistas y funcionalidades, incluyendo además las diferentes pruebas realizadas. Finalmente, se encuentran los resultados y reflexiones del Trabajo Especial de Grado, las referencias Bibliográficas y digitales, y los anexos. 13 Capítulo I: Problema de Investigación En este capítulo se ofrece una descripción concreta del problema en estudio, partiendo de lo general, hasta lo particular, se explica el cuestionamiento y la problemática que dirige la investigación junto a los objetivos, justificación y alcance de la solución. 1.1 Antecedentes del problema Desde el inicio de la humanidad, se han desarrollado proyectos, ya sean tan simples y sencillos que no se tuviera noción de que lo que se estaba emprendiendo era un proyecto como tal, como también con cierto grado de complejidad, aunque con el tiempo, con las influencias de nuevas tecnológicas, la competitividad y calidad de los productos, aumentaron de forma considerable la complejidad de los proyectos y por consiguiente dificultad para el desarrollo, gestión y mantenimiento, esto obligó a las personas a la necesidad de desarrollar métodos y técnicas que les permitan tener ciertas ventajas para el poder manejar y gestionar lo que sería todo el desarrollo de un proyecto. A pesar de la evidente necesidad de mantener, gestionar y controlar el desarrollo de un proyecto, no fue hasta el siglo XX, cuando se da a conocer la Gestión de Proyectos, se podría decir que su inicio como disciplina fue en 1917 con la aparición del Diagrama de Gantt, y a mediados de 1950 las metodologías PERT y CPM, fue en esta década cuando las organizaciones comenzaron a aplicar de manera 14 sistemática las herramientas y técnicas de gestión de proyectos. Esto fue debido, mayormente, al general Bernard Shiriever, el cual es considerado el padre de la Gestión de Proyectos, el cual desarrollo el concepto de concurrencia, permitiendo la integración de todos los elementos del plan de desarrollo en uno solo, lo cual permite poder ejecutar en paralelo las asignaciones en vez de manera secuencial (la cual era la manera acostumbrada), de esta manera reduciendo de forma considerable los tiempos de ejecución y desarrollo de proyectos. No fue hasta 1969 que se funda la organización PMI (Project Management Institute) por un grupo de voluntarios, PMI es una organización sin fines de lucro dedicada al desarrollo de conocimiento, metodologías y procesos para la gestión de proyectos. A partir de ese momento la organización fue creciendo hasta convertirse en la principal organización de gestión de proyectos a nivel mundial. En 1987 PMI publicó la primera edición de la Guía del PMBOK (Project Management Body of Knowledge), en 1998 tanto The American National Standards Institute (ANSI) como el Institute of Electrical and Electronics Engineers (IEEE) reconocieron al PMBOK como un estándar a nivel mundial, a lo largo de todo este tiempo han publicado nuevas entregas de PMBOK, siendo la última la 6ta edición publicada en 2017. 1.2 Planteamiento del problema Para lograr los objetivos fijados en un proyecto o una tarea específica se necesita realizar una planificación adecuada que cumpla con las metas establecidas, siguiendo pasos o fases que ayuden a avanzar, conseguir y corregir las actividades programadas para llegar a producir un producto que sea de interés de la población. Por lo tanto, la creación de una plataforma o sistema para la gestión y administración de proyectos, será de gran ayuda para las organizaciones que tienen 15 poca experiencia y reducida inversión tecnológica para manejar de una forma más clara y fácil el desarrollo total del proyecto para la consecución de metas establecidas. Pero el desarrollo de un proyecto no es sencillo, ya sea de software o de cualquier otro ámbito, conlleva a la comunicación, coordinación y cumplimiento de todas las partes del equipo el cual este trabajando, en especial cuando se desea desarrollar varios proyectos de forma paralela, solo hace falta una sola falla de comunicación o coordinación por parte de cualquiera del equipo para aumentar la complejidad del mismo de manera considerable. Por este hecho planteado, el desarrollo de una aplicación genérica, la cual sea utilizada como herramienta para la gestión de proyectos dentro o fuera de la UCV, que proporcione una ventaja y reduzca los posibles retrasos y errores inherentes al desarrollo del mismo, proporcionaría una ventaja y gran soporte a todas las partes relacionadas al desarrollo de cualquier proyecto, inherente a su naturaleza, además al ser un sistema centralizado que utiliza tecnología web, permite que la información de los proyectos se encuentran actualizadas para todas las partes y proporciona la accesibilidad al mismo para todos los miembros del equipo de desarrollo, dependiendo de sus tareas y actividades asignadas. 1.3 Objetivos Los objetivos de la investigación permiten obtener una perspectiva idónea sobre el alcance del trabajo, la de definición de ellos representará la base de la investigación, estos permitirán la obtención de un conocimiento preciso con el objeto de estudio. De allí que para Tamayo y Tamayo (2014), “... los objetivos permiten expresar el alcance del estudio, lo que se quiere lograr...” (p.53). 16 1.3.1 Objetivo General Desarrollar una aplicación web con el uso de software libre que permita la gestión y administración de distintos proyectos de forma paralela con sus equipos de trabajo. 1.3.2 Objetivos Específicos - Establecer los requerimientos funcionales y no funcionales en el desarrollo de una aplicación web para gestión y administración de distintos proyectos. - Diseñar las distintas interfaces y módulos que conforman la aplicación web para gestión y administración de distintos proyectos. - Desarrollar un prototipo funcional bajo software libre que permita la gestión y administración de distintos proyectos de forma paralela con sus equipos de trabajo. - Establecer un conjunto de pruebas de funcionalidad y usabilidad de la aplicación. 1.4 Justificación e importancia Una herramienta que proporcione las distintas ventajas que otorga un sistema de gestión de proyectos basados en los principios de la guía PMBOK, en un sistema web centralizado e incluyendo una interfaz de usuario amigable y accesible proporcionaría grandes ventajas en el desarrollo de cualquier proyecto, sea de software o de cualquier otro ámbito. El desarrollo de este tipo de herramientas con el uso de tecnologías web otorgan una importante contribución para la dirección de proyectos, ya que, genera beneficios en la optimización de gestión de proyectos, permitiendo a equipos de 17 trabajo tener actualizados y ordenados cualquier proyecto y actividades relacionadas al mismo de forma remota, garantizando de esta forma una coordinación efectiva en todas sus partes, además de permitir su correcta ejecución y finalización, aumentando en gran medida las probabilidades de concluir con el proyecto de forma exitosa. La importancia recaería en que, al ser una aplicación instalada en un servidor centralizado, permite que todas las partes del equipo de trabajo puedan ver y administrar las diferentes actividades relacionadas con el proyecto de forma individual, permitiendo que se encuentren sincronizadas las actividades en el desarrollo del proyecto, y la posibilidad de trabajar de forma paralela con diferentes equipos de trabajo en distintos proyectos independientes unos de otros. 1.5 Alcance El alcance definido para este Trabajo Especial de Grado fue la obtención de conocimientos esenciales para el entendimiento a lo referente al los temas de la gestión y administración de proyectos, además, los conocimientos necesarios sobre distintas herramientas que permitan poder desarrollar una aplicación que sea capaz de poder registrar y administrar a los distintos miembros de un equipo de trabajo, permitiendo además, crear, editar y eliminar tanto proyectos como tareas, incluyendo la capacidad para que los usuarios puedan gestionar horas de trabajo y generar reportes, todo esto bajo el uso de una metodología de desarrollo establecida y definida. 1.6 Solución La investigación propuesta como trabajo especial de grado fue una solución la cual está enfocada en el desarrollo de una aplicación web, que permita la gestión de proyectos, incluyendo la gestión de actividades y de los distintos equipos de trabajos, este desarrollo incluye, pruebas de aceptación y funcionalidad. 18 Capítulo II: Marco Conceptual En este capítulo se abarcará los diferentes conceptos, teorías, procesos y plataformas tecnológicas relacionadas al problema a resolver y a la solución planteada, las cuales son de vital importancia para poder comprender y entender dicho problema. 2.1 Proyecto “Un proyecto es un conjunto ordenado de actividades con el fin de satisfacer ciertas necesidades o resolver problemas específicos. Un proyecto es un plan de trabajo” (GUÍA PARA LA FORMULACIÓN DE PROYECTOS, s.f., p.2). Más específicamente, un proyecto es un esfuerzo temporal el cual se lleva a cabo para poder generar un producto, servicio o resultado único. Los proyectos poseen un inicio y final definido, dicho final se alcanza cuando se cumplen los objetivos establecidos del proyecto, cuando sus objetivos no pueden ser cumplidos, o cuando ya no existe la necesidad que dio origen al proyecto (Alex, 2013). 2.2 Características de un Proyecto Un proyecto posee distintas características particulares, de las cuales se pueden detallar las siguientes: 19 - Es temporal, esto quiere decir que un proyecto tiene un principio y final definido, esto no necesariamente debe ser corta, sino al compromiso del proyecto y a su longevidad. Este final se ha logrado cuando se cumplen los objetivos del proyecto, cuando se deja en claro que estos objetivos no pueden ser alcanzados o cuando la necesidad inicial del proyecto ya no exista y el proyecto tiene que ser cancelado. Esta cualidad temporal no se aplica al producto, servicio o resultado creado por el proyecto, en general, los proyectos se emprenden para crear un resultado duradero. “Los proyectos caducan… Tienen una fecha de comienzo y de finalización. Ese es uno de los motivos que hace que aumente su complejidad y que obligue a que se gestionen adecuadamente” (Muñoz, 2017). - Cada proyecto genera un producto, servicio o resultado único, este resultado no necesariamente es tangible. Es posible que al haber elementos repetitivos en los entregables o incluso en las actividades del proyecto, estas repeticiones no afectan las características fundamentales y únicas del proyecto. Según (Alex, 2013), pueden crear: - Un producto, el cual puede ser un componente de otro elemento, una mejora o un elemento final en sí. - Un servicio, o incluso la capacidad de realizar un servicio, por ejemplo, brindar apoyo a la producción o distribución. - Mejoras en alguna línea de producción o servicios ya existentes. - Un resultado único, tal como una conclusión o un documento. - Un equipo, la realización de proyectos requiere la participación de diferentes personas, generalmente diferentes profesionales en distintas áreas, e incluso pueden estar adscritas a diferentes departamentos o empresas, por lo tanto, suele haber una dificultad añadida para sincronizar no sólo las tareas que deben de realizar, sino 20 también administrar las necesidades y expectativas de cada uno de ellos (Muñoz, 2017). - Elaboración Gradual, esta es una característica internamente relacionada con las características temporales y resultado único de los proyectos, es el desarrollo en distintos pasos e ir aumentando de forma incremental (Alex, 2013). - Su Complejidad, una de las características más importantes que posee un proyecto es que tiene una naturaleza compleja, la cual puede derivar de la dificultad de las tareas que se tienen que realizar, por la necesidad de coordinar distintos recursos o incluso por los riesgos que lleva implícito y que no son sencillos de predecir (Muñoz, 2017). 2.3 Dirección de Proyecto Cualquier proyecto se encuentra compuesto por procesos, estos son llevados a cabos por los distintos integrantes de un equipo de proyecto, y se pueden categorizar en: - Los procesos de dirección de proyecto, los mismos aseguran el avance del proyecto de manera eficaz a largo de su ciclo de vida, por lo general se encuentran relacionados entre sí. Su propósito es iniciar, planificar, ejecutar, supervisar, controlar y cerrar un proyecto. - Los procesos orientados al producto, en estos procesos se especifican y generan el producto del proyecto. Son definidos típicamente por el ciclo de vida del proyecto y varía según el área donde se aplique y la fase del ciclo de vida en la que se encuentre. 21 “Los procesos de la dirección de proyectos y los procesos orientados al producto se superponen y actúan los unos sobre los otros a lo largo de la vida de un proyecto” (Alex, 2013, p.48). Según el (Alex, 2013) la dirección de proyectos es la aplicación de conocimientos, herramientas, habilidades y técnicas sobre las actividades del proyecto para poder cumplir con los requisitos el mismo. Esto se lograría mediante la aplicación e integración de procesos de la dirección de proyectos, estructurado en 5 grupos de procesos, entre los cuales se encuentran: - Grupo de procesos de Inicio, son aquellos procesos realizados para poder definir un nuevo proyecto o fase de un proyecto ya existente. - Grupo de procesos de Planificación, son aquellos procesos que son requeridos para poder establecer el alcance del proyecto, refinar los objetivos y definir el curso de acciones requeridas para poder alcanzar los objetivos propuestos por el proyecto. - Grupo de procesos de Ejecución, son aquellos procesos que se realizan para completa los trabajos definidos en el plan para la dirección del proyecto con el fin de satisfacer las especulaciones del mismo. - Grupo de procesos de Monitoreo y Control, son aquellos procesos requeridos para poder rastrear, revisar y regular el progreso y desempeño del proyecto, para poder identificar las distintas áreas en las que el plan requiera cambios y poder iniciar los cambios correspondientes al mismo. 22 - Grupo de procesos de Cierre, son aquellos procesos realizados para poder finalizar todas las actividades a través de todos los Grupos de Procesos, con el fin de poder cerrar de manera formal el proyecto o alguna fase del mismo. Estos grupos de procesos no son fases del proyecto, cuando se pueden separar proyectos grandes o complejos en distintas fases o sub-proyectos, por lo general, se repetirían todos los procesos del Grupo de Procesos para cada fase o sub- proyecto. Mientras que el dirigir un proyecto, por lo general incluye entre otros aspectos: - Identificación de requisitos. - Enfrentar las diferentes necesidades, inquietudes y expectativas de los involucrados en la planificación y ejecución del proyecto. - Establecer y mantener comunicaciones activas, eficientes y de naturaleza profesional entre los involucrados. - Gestionar y organizar a los interesados para poder cumplir con los requisitos del proyecto y poder realizar los entregables del mismo. - Mantener un balance entre las restricciones ya establecidas en el proyecto, tales como: - El Alcance. - La Calidad. - El Cronograma. - El Presupuesto. - Los Recursos. - El Riesgo. 23 Estos aspectos sobre las restricciones del proyecto son influidos por las características específicas del proyecto y las circunstancias que lo rodean. Las relaciones entre estos factores se encuentran muy relacionados, de tal forma, que si alguno de ellos cambia es probable que al menos uno de los demás se vea afectado. Además, la modificación de los requisitos o los objetivos en el proyecto también podrían generar riesgos adicionales. Debido al potencial de cambio en los proyectos, el desarrollo del plan para la dirección del proyecto es una actividad iterativa, y su elaboración es progresiva a lo largo del ciclo de vida del proyecto, de forma que se puede mejorar y detallar el plan de manera continua, a medida que se encuentre información más detallada y específica, dando así estimaciones más precisas. Además, esto permite definir el trabajo y gestionarlo, como indica el PMBOK, “La elaboración progresiva permite al equipo de dirección del proyecto definir el trabajo y gestionarlo con un mayor nivel de detalle a medida que el proyecto va avanzando” (Alex, 2013, p.6). 2.4 Áreas de Conocimiento de la Dirección de Proyectos “Un Área de Conocimiento representa un conjunto completo de conceptos, términos y actividades que conforman un ámbito profesional, un ámbito de la dirección de proyectos o un área de especialización” (Alex, 2013, p60). Por lo tanto, se pueden describir las Áreas de Conocimiento de la Dirección de Proyectos como las que se encargan de poder describir las prácticas y teorías en las en las cual se fundamenta la dirección de proyectos, Las cuales serían: 24 - Gestión de la Integración. - Gestión del Alcance. - Gestión del Tiempo. - Gestión de Costes. - Gestión de Calidad. - Gestión de Recursos Humanos. - Gestión de Comunicación. - Gestión de Riesgos. - Gestión de Adquisiciones. - Gestión de los Interesados. Estas diez (10) áreas del conocimiento son guías para la gerencia de proyectos en distintos puntos claves, logran de esta forma: - La integridad y buen acople de las distintas áreas de conocimiento en el proyecto. - Controlar riesgos. - El equilibrio de los factores en el triángulo de hierro (alcance, tiempo y costo), obteniendo alta calidad en el proyecto. - Obtener, conseguir o contratar las distintas partes requeridas para poder cumplir con los objetivos del proyecto. - Dirigir los recursos humanos, manteniendo una efectiva entre los miembros del proyecto. En la siguiente sección de este documento, se planteará y explicará de forma detallada cada una de las diez (10) áreas de conocimiento. 2.4.1 Gestión de la Integración 25 La gestión de integración de un proyecto incluye todos los procesos y actividades necesarias para poder identificar, definir, unificar y coordinar los diversos procesos y actividades del proyecto los grupos de procesos de la dirección de proyectos. Consiste en la toma de decisiones sobre donde concentrar recursos y esfuerzos cada día, permitiendo anticipar los posibles problemas antes de que evolucionen hasta ser problemas críticos y por último poder coordinar el trabajo para el bien del proyecto en general. Los procesos que intervienen en el área de integración de proyectos son (Alex, 2013): - Desarrollar el Acta de Constitución del Proyecto. - Desarrollar el Plan para la Dirección del Proyecto. - Dirigir y Gestionar el Trabajo del Proyecto. - Monitorear y Controlar el Trabajo del Proyecto. - Realizar el Control Integrado de Cambios. - Cerrar el Proyecto o Fase. Además, entre las técnicas y herramientas utilizadas en esta área se identifican, se pueden destacar: - Juicio de Expertos. - Sistemas de Información para la gestión de Proyectos. - Técnica del Valor Ganado. - Métodos de Selección de Proyectos. - Metodología de Dirección de Proyectos. 26 2.4.2 Gestión del Alcance En la Gestión del Alcance del Proyecto se encuentran incluidos los distintos procesos necesarios para asegurarse que el mismo incluya todo el trabajo requerido, y sólo el trabajo requerido, para poder completar el proyecto de manera satisfactoria. La gestión del alcance del proyecto se relaciona principalmente con lo que sería definición y administración de lo que se encuentra incluido o no, en el proyecto. Su objetivo general es el manejo cuantitativo del proceso de elaboración progresiva, en la cual se irá desarrollando el proyecto hasta poder cumplir sus objetivos o hasta que se determine que no tiene sentido continuar con el desarrollo del mismo. Los procesos que intervienen en la gestión del alcance del proyecto serían los siguientes: - Planificar la Gestión del Alcance - Recopilar Requisitos - Definir el Alcance - Crear la EDT/WBS - Validar el Alcance - Controlar el Alcance No necesariamente los procesos utilizados en la gestión de alcance son los mismos para cada proyecto como indica “Los procesos que se utilizan para gestionar el alcance del proyecto, así como las herramientas y técnicas de apoyo, pueden variar según el proyecto” (Alex, 2013, p.105) 27 2.4.3 Gestión del Tiempo La gestión del tiempo del proyecto incluye los procesos requeridos para poder administrar la finalización en plazo del proyecto, su objetivo es el poder completar oportunamente los productos y subproductos del proyecto. Su instrumento básico es la planificación de actividades. Es posible que, en algunos proyectos, la estimación de recursos, el establecimiento de la secuencia y la estimación de la duración de las actividades, así como el desarrollo del cronograma, se encuentran estrechamente vinculadas, las cuales se consideran como un proceso único a ser realizado por una persona en un período de tiempo relativamente corto. Los procesos que intervienen en la gestión del tiempo del proyecto serían los siguientes: - Planificar la Gestión del Cronograma. - Definir las Actividades. - Secuenciar las Actividades. - Estimar los Recursos de las Actividades. - Estimar la Duración de las Actividades. - Desarrollar el Cronograma. - Controlar el Cronograma. 2.4.4 Gestión de Costes La gestión de costes de los proyectos incluye los procesos involucrados en la planificación, estimación, preparación del presupuesto y control de costes, de tal forma que se logre concluir el proyecto dentro del presupuesto previamente aprobado. 28 Se ocupa principalmente del coste de los recursos necesarios para poder concluir con las actividades establecidas en el cronograma. Sin embargo, es necesario considerar el efecto de las decisiones del proyecto sobre los costes del uso, mantenimiento y soporte del producto, servicio o resultado del mismo. Esta visión más amplia de la Gestión de los Costes del Proyecto se denomina frecuentemente cálculo de costes del ciclo de vida. Los procesos que intervienen en la gestión de los costos del proyecto serían los siguientes: - Planificar la Gestión de los Costos. - Estimar los Costos. - Determinar el Presupuesto. - Controlar los Costos. 2.4.5 Gestión de Calidad La gestión de calidad del proyecto, es la que se encarga de verificar cualitativamente el proceso de elaboración progresiva, es decir, mientras la gerencia del alcance se encarga de verificar cuanto es el avance del proceso, la gerencia de calidad se encarga por el logro de los atributos de calidad especificados. La gestión de la calidad debe abordar tanto la gestión del proyecto como el producto generado. Mientras que la gestión de la calidad se puede aplicar a cualquier proyecto, independientemente de la naturaleza de su producto resultante, las medidas y técnicas de calidad son específicas debido al tipo de producto resultante. 29 Los procesos que intervienen en la gestión de los costos del proyecto serían los siguientes: - Planificar la Gestión de la Calidad. - Realizar el Aseguramiento de Calidad. - Controlar la Calidad. 2.4.6 Gestión de Recursos Humanos La gestión de recursos humanos es la que se encarga de proveer las técnicas y herramientas para un aprovechamiento efectivo del recurso humano involucrado en el proyecto. Además, esto incluye los procesos que organizan y dirigen al equipo del proyecto. A pesar de la asignación de roles y responsabilidades, los miembros del equipo deberían participar en gran parte de la planificación del proyecto y toma de decisiones del mismo. La participación temprana de los miembros del equipo provee la ventaja de aportar experiencia durante el proceso de planificación, además de fortalecer el compromiso con el proyecto. La cantidad de miembros del equipo del proyecto pueden variar a lo largo del desarrollo del mismo. Los procesos que intervienen en la gestión de recursos humanos del proyecto serían los siguientes: - Planificar la Gestión de los Recursos Humanos. - Adquirir el Equipo del Proyecto. - Desarrollar el Equipo del Proyecto. - Dirigir el Equipo del Proyecto. 2.4.7 Gestión de Comunicación La gestión de comunicación del proyecto incluye los procesos necesarios para poder asegurar la generación, recopilación, distribución, almacenamiento, recuperación y destino final de la información usada en el proyecto en tiempo y 30 forma. Los procesos involucrados con la gestión de comunicación proporcionan los enlaces cruciales entre las personas y la información, necesarios para poder tener comunicaciones exitosas. Es muy probable que el director del proyecto invierta una gran cantidad de tiempo comunicándose con el equipo del proyecto, los interesados, el cliente y el patrocinador. La complejidad del proceso de comunicación es proporcional al número de personas involucradas. Los procesos que intervienen en la gestión de comunicación del proyecto serían los siguientes: - Planificar la Gestión de las Comunicaciones. - Gestionar las Comunicaciones. - Controlar las Comunicaciones. 2.4.8 Gestión de Riesgos La gestión de riesgos de proyectos incluye los diferentes procesos relacionados con la planificación de la gestión, identificación, el análisis, las respuestas, el seguimiento y control de riesgos de un proyecto. La mayoría de estos procesos se actualizan durante el desarrollo del proyecto. Sus objetivos son el aumentar la probabilidad y el impacto de los eventos positivos, y poder disminuir la probabilidad y el impacto de los eventos adversos para el proyecto. Un riesgo puede ser definido como un evento o condición inciertos que, cuando se produce, tiene un efecto positivo o negativo sobre al menos un objetivo del proyecto, como las variables del triángulo de hierro (tiempo, coste, alcance o calidad). En un riesgo es posible tener más de una causa, y si se produce, uno o más impactos. Los procesos que intervienen en la gestión de riesgos del proyecto serían los siguientes: - Planificar la Gestión de los Riesgos. - Identificar los Riesgos. 31 - Realizar el Análisis Cualitativo de Riesgos. - Realizar el Análisis Cuantitativo de Riesgos. - Planificar la Respuesta a los Riesgos. - Controlar los Riesgos. 2.4.9 Gestión de Adquisiciones La gestión de adquisiciones de proyectos incluye los distintos procesos para comprar o adquirir los productos, servicios o resultados necesarios, los cuales se encuentran fuera del equipo del proyecto para poder realizar el trabajo. La organización que esté realizando el proyecto puede ser la compradora o incluso la vendedora de los productos, servicio o resultados bajo un contrato. También incluye la gestión de cualquier contrato que haya sido emitido por una organización externa (comprador) el cual está adquiriendo el proyecto a la organización ejecutante (vendedor), y la administración de las obligaciones que corresponden al equipo del proyecto en virtud los contratos. Los procesos que intervienen en la gestión de adquisiciones del proyecto serían los siguientes: - Planificar la Gestión de las Adquisiciones. - Efectuar las Adquisiciones. - Controlar las Adquisiciones. - Cerrar las Adquisiciones. 2.4.10 Gestión de los Interesados La gestión de los interesados del proyecto incluye los distintos procesos necesarios para poder identificar a las personas, grupos u organizaciones que pueden afectar o ser afectados por el proyecto, para poder analizar las expectativas de los interesados y su impacto en el mismo, y para poder generar y desarrollar 32 estrategias de gestión adecuadas a fin de lograr la participación eficaz de los distintos interesados en las decisiones y en la ejecución del proyecto. También se centra en la comunicación continua con los distintos interesados del proyecto para comprender sus necesidades y expectativas. Encargado de afrontar los incidentes en el momento en que ocurren, gestionando conflictos de intereses y fomentando una adecuada participación de los interesados en las decisiones y actividades del proyecto. Es importante indicar que la satisfacción de los interesados debe gestionarse como uno de los objetivos clave del proyecto. Los procesos que intervienen en la gestión de interesados del proyecto serían los siguientes: - Identificar a los Interesados. - Planificar la Gestión de los Interesados. - Gestionar la Participación de los Interesados. - Controlar la Participación de los Interesados. 2.5 Software de Gestión de Proyectos “El software de gestión de proyectos, tal como una herramienta de software para programación, ayuda a planificar, organizar y gestionar los grupos de recursos, así como a realizar estimaciones de los mismos. Dependiendo de lo sofisticado que sea el software, se podrán definir las estructuras de desglose de recursos, su disponibilidad y sus tarifas, así como diversos calendarios para ayudar en la tarea de optimización del uso de recursos”. (Alex, 2013, p.164). La guía PMBOK indica que la base de un software de gestión de proyecto radica en la creación de una base de datos de conocimientos, comparación d ellos recursos, estimación de los mismos, gestión de los equipos de trabajo del proyecto, actividades, calendarios, gestión de contactos y otras muchas funciones consideradas útiles para lograr una buena gestión de proyectos, todo esto dependería de que tan refinado y trabajado sea este software. 33 2.6 Triángulo de Hierro En la gestión de proyectos, se denomina Triángulo de Hierro o Triángulo mágico, el cual consiste en un Triángulo formado por 3 pilares esenciales los cuales se encuentran en cada una de sus vértices, y que sirven para definir los objetivos del proyecto y los retos a cuáles afrontar (TRIANGULO DE HIERRO EN GESTIÓN DE PROYECTOS, 2017), estos pilares esenciales son los siguientes: - Alcance, se refiere a los entregables al final del proyecto, idealmente se definen al inicio del proyecto y son detallados en el plan inicial del mismo - Coste, son los recursos destinados al proyecto (TRIANGULO DE HIERRO EN GESTIÓN DE PROYECTOS, 2017), esto depende del tipo de proyecto que se esté queriendo realizar. - Plazo o Tiempo, indica cuanto es que durara el proyecto, aunque, no necesariamente todo el alcance tiene que ser entregado al final del proyecto, es posible que sea necesario plazos intermedios en caso caso de que el proyecto se encuentre relacionado con otras actividades (Vela F. y Schmidt S., 2016). Figura 1: Triángulo de Hierro, indicando sus tres (3) pilares. Fuente : (TRIANGULO DE HIERRO EN GESTIÓN DE PROYECTOS, 2017). 34 En la gestión de proyectos, estos tres (3) valores se encuentra internamente relacionados, de tal forma que un cambio en alguno de los tres factores (alcance, tiempo y coste) tienen una recuperación inversa en al menos uno de los dos (2) valores factores (Vela F. y Schmidt S., 2016). Generalmente, en las metodologías ágiles, específicamente la metodología SCRUM, el encargado de la implementación del Triángulo de Hierro es el Scrum Master (TRIANGULO DE HIERRO EN GESTIÓN DE PROYECTOS, 2017). 2.7 Aplicaciones Web Una aplicación web es un tipo especial de aplicación, el cual utiliza un tipo de arquitectura cliente/servidor, donde tanto el cliente (el navegador, explorador o visualizador) como el servidor (el servidor web) y el protocolo mediante el que se comunican (HTTP) están estandarizados y no es necesario crearlos (Luján, S. M., 2001). El protocolo HTTP forma parte de la familia de protocolos de comunicación TCP, los cuales son empleados en Internet. Estos protocolos permiten la conexión de sistemas heterogéneos, lo que permite facilitar el intercambio de información entre dispositivos diferentes. Figura 2: Esquema básico de una aplicación web Fuente: (Luján, S. M., 2002). 35 El proceso completo desde que un usuario solicita una página se define con los siguientes pasos (Luján, S. M., 2002): 1. El usuario especifica al cliente web la dirección de la página la cual quiere acceder, el URL (Universal Resource Locator) a la página a visitar. 2. El cliente establece una conexión con el servidor. 3. El cliente solicita al servidor la página o el recurso que desea acceder. 4. El servidor le retorna dicha página u objeto. 5. Si es una página HTML, el cliente procede a la interpretación de ese código. 6. Se cierra la conexión entre el cliente y el servidor. 7. Se muestra la página al usuario. Figura 3: Estructura básica de una petición HTTP Fuente: (Herrarte, 2012) De forma más específica, (Mateu, C., 2004) explica el funcionamiento del protocolo HTTP de la siguiente forma, el cliente establece una conexión TCP hacia el servidor, hacia el puerto HTTP (o el especificado en la dirección) Envía un comando HTTP de petición de recurso y por la misma conexión el servidor responde con los datos solicitados y con algunas cabeceras informativas. 36 El protocolo define además como codificar el paso de parámetros entre páginas, el túnel de la conexión, define la existencia de servidores intermedios, entre otras funcionalidades. El protocolo HTTP contiene distintas directivas de peticiones, de las cuales se pueden destacar: - GET, es una petición de un recurso específico, es recomendable que no sea usado por aplicaciones que causen efectos, ya que la información se transmite por el URL. - POST, es una petición de un recurso pasando parámetros, estos datos se incrustan en el cuerpo de la petición. - HEAD, es una petición de datos sobre un recurso, obtendrá una respuesta idéntica a una petición GET, pero la respuesta obtenida no devolverá el cuerpo de la petición. - PUT, esta petición permite la creación o envió de un recurso, además de poder crear recursos, también es posible actualizarlos. - DELETE, esta petición indica la eliminación de un recurso. 2.7.1 Servidor Un servidor se puede definir como “un programa que está esperando permanentemente las solicitudes de conexión mediante el protocolo HTTP por parte de los clientes web” (Luján, S. M., 2001). En las aplicaciones web, el servidor está compuesto por: - Páginas Estáticas, los cuales son documentos HTML que siempre mostraran el mismo contenido. 37 - Recursos, los cuales pueden ser archivos multimedia, documentos o cualquier otro tipo de archivo que sea utilizados dentro de la página o puedan ser descargados o ejecutados por el cliente. - Programas o scripts, los cuales son ejecutados cuando el cliente realiza alguna petición, generalmente los scripts retornan páginas HTML, las cuales son las que van a ser interpretadas por el navegador del cliente. - Base de datos, es posible que sea necesario una forma en la cual poder almacenar y acceder a datos de parte del mismo servidor, se utilizan las bases de datos para almacenar datos en el servidor los cuales serán accedidos a través de algún programa o script, aunque es posible que esta base de datos no se encuentre en el mismo computador sino en otro. En caso de que no se almacenen ni se busquen datos, no es necesario una base de datos. 2.7.2 Cliente Se puede definir a un cliente como “un programa con el que interacciona el usuario para solicitar a un servidor web el envío de los recursos que desea obtener mediante HTTP” (Luján, S. M., 2002, p.48). Las tecnologías que se suelen emplear en el cliente web son: - HTML (HyperText Markup Language), el cual es un lenguaje de marcado que posee la estructura de la página a mostrar. - CSS (Cascading Style Sheets), es un lenguaje de hoja de estilos, el cual permite definir y crear la representación gráfica de un documento estructurado escrito en lenguaje de marcado, generalmente del HTML. - Lenguaje de Script, son lenguajes interpretados, los cuales poseen instrucciones que pueden ser ejecutadas con o sin la participación del usuario (Luján, S. M., 2001). 38 Es necesario el uso de estas tecnologías junto a los diferentes recursos (imágenes, sonidos, entre otros) proporcionados por el servidor, los cuales serán interpretados por el navegador para poder generar la página web a mostrar. 2.7.3 Bootstrap Uno de los principales y uno de los mas populares frameworks del lado del cliente utilizados en el mundo, Bootstrap fue creado y diseñado por Twitter, a mediados de 2010 originalmente nombrado como Twitter Blueprint, liberado originalmente el viernes 19 de agosto de 2011, teniendo ya más de veinte (20) lanzamientos, incluida varias reestructuraciones principales (Mark O. y Jacob T,2018). El uso del boostrap proporciona ciertas ventajas a la hora de desarrollar la vista de una aplicación web, las cuales se pueden mencionar (Punto Abierto, 2016): - La curva de aprendizaje permite que su manejo sea asequible y rápido. - Permite el uso de diferentes elementos web, combinando HTML5, CSS y Javascript. - Permite que el diseño a crear sea adaptable, dando una facilidad a la hora de desarrollar una aplicación responsive. - Mantiene un sistema de maquetado a través de columnas, simplificando a la hora de diseño además de ser configurables. - Logra integrarse casi sin problemas a las principales librerías Javascript. - Existe una comunidad muy activa que brinda soporte, ayudas y nuevos plugins. - Permite el uso de Less, el cual logra enriquecer aún más los estilos a desarrollar. 39 2.7.4 PHP Entre los distintos lenguajes utilizados en el servidor para la creación de páginas web dinámicas, uno de ellos que podría destacarse sería PHP (hypertext preprocessor), el cual es un sencillo lenguaje de procinto general, de sintaxis cómoda y similar a otros lenguajes como Pearl, C y C++. Es un lenguaje de programación rápido, interpretado, orientado a objetos y multiplataforma (Mateu, C., 2004). Una de las particulares ventaja de PHP con respecto a otros lenguajes utilizados en servidores, es su gran popularidad, proporcionando gran cantidad de información disponible para el desarrollo de páginas web usando PHP. Además de que el intérprete de PHP, los diversos módulos y la gran cantidad de librerías desarrolladas para PHP son de código abierto, con lo que el programador dispone de una gran cantidad de herramientas para poder desarrollar aplicaciones. “El generador de páginas dinámicas más usado es PHP con 75% de participación en el mercado” (Gutiérrez, 2008, p.40). 2.7.4.1 FPDF Unas de las principales ventajas del uso de PHP, es el gran número de librerías desarrolladas para la misma, en este caso, FPDF es una librería Open Software, escrita en PHP, la cual permite poder generar documentos PDF directamente desde código PHP, sin el uso de librerías externas, teniendo como principales características (FPDF, 2018): - Elección de la unidad de medida, formato de página y márgenes - Gestión de cabeceras y pies de página - Salto de página automático - Salto de línea y justificación del texto automáticos - Admisión de imágenes (JPEG, PNG y GIF) - Colores 40 - Enlaces - Admisión de fuentes TrueType, Type1 y codificación - Compresión de página 2.8 Base de Datos Una Base de Datos podría definirse como una serie de datos organizados y relacionados entre sí, los cuales se encuentran almacenados de una forma estructurada (Pérez V., 2007). Existen distintos tipos de base de datos, los cuales cada uno se encuentra enfocados a la solución de problemas específicos. 2.8.1 Sistema Manejador de Base de Datos A diferencia de la base de datos, el SMBD (sistema manejador de base de datos) es un tipo de software específico, el cual se encarga de servir como interfaz entre la base de datos, el usuario y cualquier otra aplicación que quiera tener acceso a los datos (Pérez V., 2007). Esto indica que el SMBD es el encargado de la definición, manipulación y eliminación de los datos en la base de datos, además de de permitir establecer controles de acceso para los datos y también permite el acceso concurrente a los mismos. El uso de un SMBD proporciona un conjunto de ventajas (Alonso, F. S., 2006), las cuales son: - El SMBD es independiente a los programas utilizados para realizar las consultas de parte de los clientes. - Permite realizar consultas complejas sobre los datos almacenados en la base de datos. - El almacenamiento de los datos de forma eficiente, sin la necesidad de que el usuario sepa la forma de cómo se esté almacenando los datos. - Permite el acceso concurrente de múltiples usuarios autorizados a los datos. 41 - Permite verificar y gestionar a los usuarios que tendrán acceso a la base de datos, este acceso puede ser parcial o total. 42 Capítulo III: Marco Metodológico Teniendo en consideración el problema planteado se propuso el uso una metodología de desarrollo ágil, específicamente la metodología Scrum, la cual permite un desarrollo incremental a través de entregas constantes llamadas Sprints. La ventaja de la utilización de esta metodología está en que al ser una metodología ágil permite un desarrollo más rápido comparado a otro tipo de metodologías más pesadas, una flexibilidad a los cambios, además que proporciona un desarrollo incremental, con la posibilidad de poder tener fases funcionales del mismo a lo largo de su desarrollo, permitiendo una retroalimentación de forma más efectiva. 3.1 Métodos de Investigación La metodología Scrum es una metodología de desarrollo ágil, la cual se encuentra basada en distintos principios (Menzinsky et al.,2016): - Gestión evolutiva del producto. - Calidad de resultados basados en el conocimiento tácito de las personas. - Estrategia de desarrollo incremental a través de iteraciones (Sprints). Se inicia con una visión general del resultado deseado (en este caso la resolución del problema previamente planteado), y a partir de ese punto se 43 especifica y se da detalles de las funcionalidades deseadas. En cada ciclo de desarrollo o iteración definido como Sprint, finalizara con una entrega conformada de una parte operativa del producto denominado Incremento. “La duración de cada sprint puede ser desde una, hasta seis semanas, aunque se recomienda que no exceda de un mes” (Menzinsky et al., 2016, p.16). También el equipo monitoriza la evolución de cada sprint en reuniones diarias de no más de 5 a 15 minutos, donde se revisan el conjunto de trabajos realizados por cada miembro el día anterior, y el previsto para el día actual. Scrum gestiona de forma empírica la evolución del proyecto a través de las siguientes tácticas: - Revisión de Iteraciones, al finalizar cualquier sprint se revisa y verifica funcionalmente el resultado, con todos los implicados del proyecto. La duración del sprint viene dada a esto, ya que permite descubrir planteamientos erróneos, mejorables o malinterpretaciones en el funcionamiento del producto. - Desarrollo incremental, permite obtener al final de cada iteración una porción del producto operativo, lo cual permite además de poder ser usado, ser inspeccionado y evaluado. Durante la construcción se depura el diseño y la arquitectura, y no se cierra en una primera fase del proyecto. - Auto organización, los equipos son auto organizados, lo cual permite tomar decisiones suficientes para poder adoptar soluciones que se consideren como oportunas. - Colaboración, los distintos miembros del equipo colaboran de forma abierta con los demás, según sus capacidades y no según su rol o su puesto. 44 Scrum se encuentra conformado por 3 distintos elementos, de los cuales también se encuentran subdivididos, estos son: - Roles, son todas las personas que intervienen de forma directa o indirectamente con el proyecto, de los cuales se pueden dividir en: - Equipo scrum, lo conforma el grupo de profesionales calificados que realizan el incremento en cada sprint. - Dueño del producto, es el propietario del producto, es quien toma las decisiones del cliente. - Scrum Master, es el responsable de que se mantenga el cumplimiento de las reglas previamente descrita en scrum. - Artefactos, son los elementos los cuales van a ser utilizados para el desarrollo de la aplicación, manteniendo un orden y una estructura definida. - Pila de producto, contiene la lista de los requisitos del usuario, la cual puede ir evolucionando y creciendo con forme se desarrolle el proyecto. - Pila de sprint, es la lista de trabajos la cual debe de ser realizado por el equipo de trabajo en los sprint para poder generar el incremento deseado. - Incremento, es el resultado de un sprint. - Eventos, son los diferentes sucesos que ocurren durante el desarrollo. - Sprint, son las distintas iteraciones que se realizarán durante el desarrollo de un proyecto, Es el núcleo central en el que se basa scrum, genera un avance a un ritmo de tiempos prefijados (Menzinsky et al.,2016). - Reunión de planificación de sprint, son reuniones que marcan el inicio de cada sprint, en la cual se define cual sería el objetivo del mismo y las tareas necesarias para conseguirlo. - Revisión de sprint, se realiza un análisis y se inspecciona el incremento generado, y se adapta la pila del producto de ser necesario. 45 - Retrospectiva del sprint, es una revisión de lo sucedido durante un sprint, el equipo analiza aspectos operativos de la forma de trabajo y crea un plan de mejoras a aplicar para el próximo sprint. 3.2 Etapas de la Metodología de Investigación Scrum al ser una metodología ágil, la cual está enfocada en realizar distintas iteraciones en la que van a ir puliendo el producto resultante en cada una de las iteraciones hasta obtener un producto que satisfaga las necesidades previamente definidas, por lo tanto se podría decir que las distintas etapas en la que se basa la metodología Scrum son: - Etapa de inicio, en esta etapa del desarrollo se realizan: - Se elige un equipo de trabajo, el Scrum Mánager y se define al propietario del producto. - Se define el product backlog (pila del producto), la cual posee los requerimientos iniciales del proyecto. - Planificación de los sprint a realizar, definiendo su prioridad, que tipo de tareas serán necesaria para poder finalizar los mismo, al tener ya definidos los sprint, los mismos integran en el sprint backlog (pila del sprint), la cual contendrá la lista ordenada según sus prioridades de los sprints a realizar. - Etapa de desarrollo, en esta etapa se procede a realizar el primer sprint que se encuentra en el sprint backlog, el primer paso sería la reunión de planificación del sprint. Durante el desarrollo de este sprint se realizarán además Scrum diarios, los cuales son reuniones diarias cortas de no más de 5-10 minutos, estas reuniones son 46 para revisar cuales son las asignaciones realizadas el día anterior y saber cuáles son las actividades asignadas para ese día. Al finalizar cada sprint es necesario realizar una Revisión del sprint para poder comprobar el incremento generado, el propietario del producto comprueba el progreso de la aplicación, revisando y probando el incremento generado en el sprint, dependiendo al resultado de la reunión se pueden refinar lo que sería la pila de producto y la pila del sprint. Dependiendo al resultado de la reunión se procede a refinar la pila de producto y la pila del sprint, y se procede a trabajar el siguiente sprint con mayor prioridad, comenzando otra vez las tareas realizadas en esta etapa. Figura 4: Diagrama del ciclo iterativo de Scrum Fuente: (Menzinsky et al.,2016). Se repetiría de forma iterativa la etapa de desarrollo, cada vez dando un producto más refinado hasta que se cumplan con todos los requisitos del cliente. 3.3 Adaptación Metodológica Para el proceso de desarrollo de la solución planteada se implementó una adaptación de la metodología de desarrollo ágil Scrum, esta adaptación fue debido a 47 las características específicas del proyecto y al equipo de desarrollo, por lo cual fueron modificados u omitidos algunas de las características de esta metodología. Dicha metodología se implementó siguiendo las siguientes fases: - Fase inicial de planificación, en la cual el equipo de trabajo realiza el levantamiento de los requerimientos de la aplicación y se define una arquitectura para su solución. Durante esta fase se crea lo que sería la Pila del Producto, en esta pila se encuentras todas las tareas, funcionalidades y requerimientos que el producto debe de satisfacer. - Fase de desarrollo, en esta fase se comenzó en el desarrollo de los distintos módulos de la aplicación a través de distintas entregas llamadas sprints, las cuales cada una de éstas tiene una corta duración, generalmente de una (1) a dos (2) semanas, donde se culminan las tareas asignadas para ese sprint. Las tareas que son consideradas más complejas y que llevarían más tiempo se subdividen en tareas más pequeñas para poder cumplir los objetivos de cada sprint. Las tareas a trabajar son organizadas por prioridad en una lista llamada product backlog, esta lista se refina y actualiza las prioridades de cada tarea antes de cada sprint. - Fase de pruebas, esta fase comienza luego de dar por culminado la fase de desarrollo, en la cual se realizan pruebas de funcionalidad, las cuales servirán para constatar que la aplicación esté funcionando correctamente y pruebas de aceptabilidad, para conocer el grado de satisfacción de distintos profesionales con la aplicación desarrollada. 48 Capítulo IV: Marco Aplicativo En éste capítulo se definirán y especificarán las principales características que incluirá la propuesta de desarrollo planteada como trabajo especial de grado. Está enfocada en presentar un desarrollo de una herramienta para la gestión de proyecto de software. 4.1 Herramientas de Solución Durante el desarrollo de esta solución se utilizaron distintas herramientas, entre ellas lenguajes de programación, servidor de la aplicación, herramientas para el manejo de base de datos. A continuación, se explicará cada una de las características más resaltantes de cada herramienta y por la cual fueron seleccionadas. 4.2.1 Herramientas Servidor de la Aplicación Se procedió a utilizar el servidor HTTP Apache, ya que además de ser un servidor http de código abierto multiplataforma entre los sistemas operativos más comunes, tiene una muy buena compatibilidad con el lenguaje de programación PHP, también tomando en cuenta su fácil instalación y configuración, además de contar con gran facilidad de conseguir documentación y soporte del mismo. 4.2.2 Base de Datos Se utilizará una base de datos SQL, específicamente utilizando el sistema manejador de base de datos (SMBD) MySQL, debido a la facilidad al momento de 49 realizar la implementación y robustez, además del uso de la aplicación DBeaver, la cual es una herramienta Open Software para la gestión de distintos tipos de base de datos, que será utilizada para facilitar la edición y modificación de la base de datos a usar en la aplicación, además de proporcionar herramientas adicionales, como por ejemplo la creación de distintos diagramas, visualizar el contenido de la base de datos, crear respaldos, entre otras funcionalidades. 4.3 Diseño de la Aplicación El desarrollo de la aplicación comenzó con el levantamiento de los requisitos, para de esta forma poder crear la Pila del Producto, la cual contiene todas las tareas, funcionalidades y requerimientos que tiene que satisfacer la aplicación, además, se describirán en los documentos correspondientes a cada una de los Sprints y las actividades llevadas a cabo para cumplir con los requerimientos. Para este desarrollo de definieron los siguientes requerimientos para el sistema: - Registrarse, los visitantes pueden crearse una cuenta en la aplicación. - Iniciar sesión, los usuarios registrados pueden acceder a la aplicación. - cambiar rol, los usuarios administradores pueden cambiar el rol a otros usuarios registrados en la aplicación. - Cerrar sesión, los usuarios registrados que tengan una sesión activa en el sistema pueden finalizarla. - Gestionar usuarios, los usuarios administradores pueden modificar o eliminar usuarios registrados en la aplicación. - Gestionar proyectos, los usuarios administradores pueden agregar, modificar o eliminar proyectos en la aplicación. - Activar/Desactivar Proyectos, los usuarios administradores pueden indicar si un proyecto registrado en el sistema se encuentra activo o no. 50 - Gestionar Tareas, los usuarios administradores pueden agregar, modificar o eliminar tareas en la aplicación. - Activar/Desactivar Tareas, los usuarios administradores pueden indicar si una tarea registrado en el sistema se encuentra activo o no. - Gestionar Asociaciones, los usuarios administradores pueden agregar o eliminar asociaciones entre proyectos, tareas y usuarios en la aplicación. - Administrar Horas, los usuarios registrados que posean asociación a una tarea y proyecto activos pueden indicar cuantas horas diarias trabajo en la misma. - Generar Reportes, los usuarios administradores pueden generar reportes de los diferentes usuarios registrados en el sistema, utilizando distintos filtros para usuarios, proyectos, tareas y rango de fechas. Tabla 1: Pila de Productos. Descripción Prioridad R1 Desarrollo de casos de uso de la aplicación Alta R2 Diseño y construcción base de datos Alta R3 Configuración del servidor Alta R4 Implementación de conexión con la base de datos Alta R5 Diseño de la interfaz de la página principal Alta R6 Diseño de la interfaz para el login de usuario Alta R7 Diseño de la interfaz para el Registro de usuarios Alta R8 Diseño de la interfaz para la administración de usuarios Alta R9 Diseño de la interfaz para la gestión de proyectos Alta R10 Diseño de la interfaz para la gestión de tareas Alta R11 Diseño de la interfaz para la asignación de tareas a los usuarios Alta R12 Diseño de la interfaz para la administración de las horas asociadas a las tareas Alta R13 Diseño de la interfaz para la generación de reportes Alta R15 Implementación de la vista para el Registro de usuarios Alta R16 Implementación de la vista el login de usuario Alta R17 Implementación de la vista para la administración de usuarios Alta R18 Pruebas de versión Alta R19 Implementación de la vista para la gestión de proyectos Alta R20 Implementación de la vista la gestión de tareas Alta R21 Implementación de la vista la asignación de tareas a los usuarios Alta 51 R22 Pruebas de versión Alta R23 Implementación de la vista para la administración de las horas asociadas a las tareas Alta R24 Pruebas de versión Alta R25 Implementación de la vista para la generación de reportes Alta R26 Pruebas de versión final Alta En la anterior tabla se mostrarán el estado inicial de la pila de productos de la aplicación desarrollada a partir de los requerimientos previamente establecidos, en la cual los requisitos se identificarán unívocamente con la letra “R” junto a un número, indicando el orden en el cual de deber de implementar la aplicación Debido al número de funcionalidades y tareas a realizar, se optó por dividir en cinco (5) Sprints el desarrollo de la aplicación. Al finalizar cada Sprint, se actualizará el estado de la pila de producto con forme a los objetivos y requerimientos cumplidos durante el desarrollo dicho Sprint. 4.3.1 Sprint 1 Las actividades a ser cumplidas durante este primer Sprint corresponden con la siguiente tabla. Tabla 2: Sprint 1. Descripción Prioridad R1 Desarrollo de casos de uso del aplicación Alta R2 Diseño y construcción base de datos Alta R3 Configuración del servidor Alta R4 Implementación de conexión con la base de datos móvil Alta R1 - Desarrollo de casos de uso de la aplicación El diseño de los casos de uso es una de las partes más importantes de la aplicación, ya que es una forma visual y fácil de entender las distintas 52 funcionalidades del mismo, los actores que interactuaran con la aplicación se pueden considerar como: - Administrador, es el usuario el cual tendrá acceso total a la aplicación, permitiéndole realizar actividades y operaciones que se encuentras bloqueadas para otros usuarios. - Cliente, son los usuarios que interactuaran con la aplicación, y poseen privilegios restringidos a distintas funcionalidades del mismo. Ya definido los diferentes usuarios que interactuaran con la aplicación, y luego de determinar los requisitos del mismo, se optó por la creación de un (1) caso de uso de nivel 1 y ocho (8) diagramas de Caso de Uso de nivel 2, para abarcar las distintas funcionalidades de la aplicación de la forma más precisa y comprensible posible. 53 La siguiente figura representa el Caso de Uso de Nivel 1: Figura 5: Caso de Uso de nivel 1. 54 Las siguientes imágenes y tabla corresponden a los diferentes casos de uso de nivel 2 y 3 creados a partir del caso de uso de nivel 1: UC1-Registro. Tabla 3: UC1-Registro. Caso de Uso 1-Registro. Actor Cliente. Descripción Permite al usuario poder registrarse en la aplicación. Flujo Básico 1. El usuario ingresa todos los datos necesarios para el registro. 2. El usuario finaliza el registro dando click a “Registrar”. Flujo Alternativo A. Falta un dato obligatorio: 2. La aplicación avisará al usuario que falta dicho dato. B. La aplicación verifica que por lo menos un (1) dato obligatorio no coincida, ya sea la contraseña o ya se encuentre registrado el usuario en la aplicación. 2. La aplicación redirige al usuario a la vista de Registro y le indica que ha ocurrido un error. Pre-condición No debe de existir un usuario registrado con la misma cédula. Post-condición El usuario es registrado en la aplicación. Figura 6: UC1-Registro. 55 UC2-Login. Tabla 4: UC2-Login Caso de Uso 2-Login. Actor Cliente. Descripción Permite autenticar al usuario en la aplicación. Flujo Básico 1. El usuario ingresa su número de cédula y su contraseña. 2. El usuario finaliza dando click a “acceder”. Flujo Alternativo A. El usuario no se encuentra registrado en la aplicación: 2. La aplicación regresa a la vista de login y le indica al usuario que ha ocurrido un error al intentar iniciar sesión. Pre-condición El usuario debe de estar registrado en la aplicación. Post-condición Se inicia una sesión con los datos suministrados. Figura 7: UC2-Login. 56 UC3-Cerrar Sesión. Tabla 5: UC3-Cerrar Sesión. Caso de Uso 3-Cerrar Sesión. Actor Cliente Descripción Permite al usuario poder cerrar su sesión activa. Flujo Básico 1. El usuario finaliza dando click a “acceder”. Pre-condición  El usuario debe de estar registrado en la aplicación.  Debe de existir una sesión activa del usuario. Post-condición Finalizara la sesión del usuario. Figura 8: UC3-Cerrar Sesión. 57 UC4-Admin Horas. Tabla 6: UC4-Admin Horas. Caso de Uso 4-Admin Horas. Actor Cliente Descripción Permite al usuario poder ingresar las horas trabajadas en una actividad asignada al él. Flujo Básico 1. El usuario selecciona la semana en la que quiere. 2. Ingresa las distintas horas a cada actividad. 3. El usuario finaliza dando click a “Actualizar” Flujo Alternativo A. No hay actividades asignadas al usuario. 1. Se mostrará un mensaje al usuario indicando que no tiene actividades asignadas B. Las sumas de horas de las actividades diarias sobrepasa las 8 horas. 2. Se muestra visualmente que las horas excedieron las 8 diarias. 3. Al momento de dar click en “Actualizar” mandar un mensaje de alerta indicando que sobrepaso las horas. Pre-condición  El usuario debe de estar registrado en la aplicación.  Debe de existir una sesión activa del usuario. Post-condición Finalizara la sesión del usuario. Figura 9: UC4-Admin Horas. 58 UC5-Gestión Proyectos. Tabla 7: UC5-Gestión Proyectos. Caso de Uso 5-Gestión Proyectos. Actor Administrador Descripción Permite al administrador poder crear, editar y eliminar proyectos en la aplicación. Pre-condición  Debe de existir una sesión activa del usuario.  La sesión activa tiene que ser de tipo “administrador”. Figura 10: UC5-Gestión Proyectos. 59 UC5.1-Crear Proyecto. Tabla 8: UC5.1-Crear Proyecto. Caso de Uso 5.1-Crear Proyecto. Actor Administrador Descripción Permite al administrador poder crear un proyecto nuevo en la aplicación. Flujo Básico 1. El usuario ingresa los datos necesarios para la creación del proyecto. 2. El usuario finaliza la creación dando click en “Crear”. Flujo Alternativo A. Falta un dato obligatorio: 2. La aplicación avisará al usuario que falta dicho dato. Pre-condición  Debe de existir una sesión activa del usuario.  La sesión activa tiene que ser de tipo “administrador”. Post-condición Se crear un nuevo proyecto en la aplicación. Figura 11: UC5.1-Crear Proyecto. 60 UC5.2-Editar Proyecto. Tabla 9: UC5.2-Editar Proyecto. Caso de Uso 5.2-Editar Proyecto. Actor Administrador Descripción Permite al administrador poder editar un proyecto en la aplicación. Flujo Básico 1. El usuario selecciona el proyecto que desea editar. 2. El usuario modifica los datos necesarios. 2. El usuario finaliza la edición dando click en “Actualizar”. Flujo Alternativo A. Falta un dato obligatorio: 3. La aplicación avisará al usuario que falta dicho dato. Pre-condición  Debe de existir una sesión activa del usuario.  La sesión activa tiene que ser de tipo “administrador”.  Debe de existir el proyecto a editar Post-condición Se modifica el proyecto seleccionado. Figura 12: UC5.2-Editar Proyecto. 61 UC5.3-Eliminar Proyecto. Tabla 10: UC5.3-Eliminar Proyecto. Caso de Uso 5.3-Eliminar Proyecto. Actor Administrador Descripción Permite al administrador poder eliminar un proyecto en la aplicación. Flujo Básico 1. El usuario selecciona la “X” del proyecto que desea eliminar. Flujo Alternativo A. El proyecto posee tareas asociadas: 1. La aplicación avisará al usuario que no puede eliminar el proyecto ya que aún tiene tareas asociadas. Pre-condición  Debe de existir una sesión activa del usuario.  La sesión activa tiene que ser de tipo “administrador”.  Debe de existir el proyecto a editar Post-condición Se eliminará el proyecto seleccionado. Figura 13: UC5.3-Eliminar Proyecto. 62 UC6-Gestión Tareas. Tabla 11: UC6-Gestión Tareas. Caso de Uso 6-Gestión Tareas. Actor Administrador Descripción Permite al administrador poder crear, editar y eliminar tareas en la aplicación. Pre-condición  Debe de existir una sesión activa del usuario.  La sesión activa tiene que ser de tipo “administrador”. Figura 14: UC6-Gestión Tareas. 63 UC6.1-Crear Tarea. Tabla 12: UC6.1-Crear Tarea. Caso de Uso 6.1-Crear Tarea. Actor Administrador Descripción Permite al administrador poder crear un nueva tarea. Flujo Básico 1. El usuario ingresa los datos necesarios para la creación del proyecto. 2. El usuario selecciona cual proyecto estará asociada a la tarea a crear. 3. El usuario finaliza la creación dando click en “Crear”. Flujo Alternativo A. Falta un dato obligatorio: 3. La aplicación avisará al usuario que falta dicho dato. Pre-condición  Debe de existir una sesión activa del usuario.  La sesión activa tiene que ser de tipo “administrador”.  Es necesario que exista por lo menos un (1) proyecto. Post-condición Se crea una nueva tarea en la aplicación. Figura 15: UC6.1-Crear Tarea. 64 UC6.2-Editar Tarea. Tabla 13: UC6.2-Editar Tarea. Caso de Uso 6.2-Editar Tarea. Actor Administrador Descripción Permite al administrador poder editar una tarea en la aplicación. Flujo Básico 1. El usuario selecciona la tarea que desea editar. 2. El usuario modifica los datos necesarios. 2. El usuario finaliza la edición dando click en “Actualizar”. Flujo Alternativo A. Falta un dato obligatorio: 3. La aplicación avisará al usuario que falta dicho dato. Pre-condición  Debe de existir una sesión activa del usuario.  La sesión activa tiene que ser de tipo “administrador”.  Debe de existir la tarea a editar.  Es necesario que exista por lo menos un (1) proyecto. Post-condición Se modifica el proyecto seleccionado. Figura 16: UC6.2-Editar Tarea. 65 UC6.3-Eliminar Tarea. Tabla 14: UC6.3-Eliminar Tarea. Caso de Uso 6.3-Eliminar Tarea. Actor Administrador Descripción Permite al administrador poder eliminar una tarea de la aplicación. Flujo Básico 1. El usuario selecciona la “X” de la tarea que desea eliminar. Flujo Alternativo A. La tarea se encuentra asignada a un usuario: 1. La aplicación avisará al usuario que no puede eliminar la tarea ya que se encuentra asociada con algún usuario. Pre-condición  Debe de existir una sesión activa del usuario.  La sesión activa tiene que ser de tipo “administrador”.  Debe de existir la tarea a eliminar. Post-condición Se eliminará la tarea seleccionada. Figura 17: UC6.3-Eliminar Tarea. 66 UC7-Asignar Tareas. Tabla 15: UC7-Asignar Tareas. Caso de Uso 7-Asignar Tareas. Actor Administrador Descripción Permite al administrador poder asociar y desasociar tareas a los usuarios. Pre-condición  Debe de existir una sesión activa del usuario.  La sesión activa tiene que ser de tipo “administrador”. Figura 18: UC7-Asignar Tareas. 67 UC7.1-Crear Asociación. Tabla 16: UC7.1-Crear Asociación. Caso de Uso 7.1-Crear Asociación. Actor Administrador Descripción Permite al administrador poder asociar una tarea a un usuario. Flujo Básico 1. El usuario debe de seleccionar a cuál usuario se le va a asignar la tarea. 2. Seleccionar el proyecto que tiene las tareas. 3. Seleccionar la tarea. 4. El usuario finaliza la creación dando click en “Crear”. Flujo Alternativo A. Falta un dato obligatorio: 4. La aplicación avisará al usuario que falta dicho dato. Pre-condición  Debe de existir una sesión activa del usuario.  La sesión activa tiene que ser de tipo “administrador”.  Es necesario que exista por lo menos un (1) proyecto.  Es necesario que exista por lo menos una (1) tarea. Post-condición Se crea una nueva asociación. Figura 19: UC7.1-Crear Asociación. 68 UC7.2-Eliminar Asociación. Tabla 17: UC7.2-Eliminar Asociación. Caso de Uso 7.2-Eliminar Asociación. Actor Administrador Descripción Permite al administrador poder eliminar una asociación de la aplicación. Flujo Básico 1. El usuario selecciona la “X” de la asociación que desea eliminar. Pre-condición  Debe de existir una sesión activa del usuario.  La sesión activa tiene que ser de tipo “administrador”.  Debe de existir la asociación a eliminar. Post-condición Se eliminará la asociación seleccionada. Figura 20: UC7.2-Eliminar Asociación. 69 UC8-Admin Usuarios. Tabla 18: UC8-Admin Usuarios. Caso de Uso 8-Admin Usuarios. Actor Administrador Descripción Permite al administrador poder editar y eliminar usuarios. Pre-condición  Debe de existir una sesión activa del usuario.  La sesión activa tiene que ser de tipo “administrador”. Figura 21: UC8-Admin Usuarios. 70 UC8.1-Editar Usuario. Tabla 19: UC8.1-Editar Usuario. Caso de Uso 8.1-Editar Usuario. Actor Administrador Descripción Permite al administrador poder editar los datos de un usuario. Flujo Básico 1. Se selecciona el usuario a editar. 2. Se modifica los datos necesarios. 3. Se finaliza la edición dando click en “Actualizar”. Flujo Alternativo A. Falta un dato obligatorio: 3. La aplicación avisará al usuario que falta dicho dato. Pre-condición  Debe de existir una sesión activa del usuario.  La sesión activa tiene que ser de tipo “administrador”.  Es necesario que exista el usuario. Post-condición Se actualizan los datos del usuario en la aplicación. Figura 22: UC8.1-Editar Usuario. 71 UC8.2-Eliminar Usuario. Tabla 20: UC8.2-Eliminar Usuario. Caso de Uso 8.2-Eliminar Usuario. Actor Administrador Descripción Permite al administrador poder eliminar a un usuario. Flujo Básico 1. Se selecciona la “X” al usuario que se desea eliminar. Pre-condición  Debe de existir una sesión activa del usuario.  La sesión activa tiene que ser de tipo “administrador”.  Debe de existir el usuario a eliminar. Post-condición Se eliminará el usuario de la aplicación. Figura 23: UC8.2-Eliminar Usuario. 72 UC9-Reportes. Tabla 21: UC9-Reportes. Caso de Uso 9-Reportes. Actor Administrador Descripción Permite al administrador poder crear reportes, usando distintos filtros. Flujo Básico 1. El usuario selecciona los distintos elementos que desea filtrar en el reporte. 2. El usuario le da click en “Generar Reporte”. 3. Se muestra el documento PDF que muestra el reporte con los filtros seleccionados. Pre-condición  Debe de existir una sesión activa del usuario.  La sesión activa tiene que ser de tipo “administrador”. Post-condición Genera un documento PDF. Figura 24: UC9-Reportes. 73 R2-Diseño y construcción base de datos El diseño de la base de datos es una de la parte más importante en el desarrollo de cualquier sistema, ya que un buen diseño a la hora de crear una base de datos puede definir el óptimo funcionamiento y éxito de cualquier software. Figura 25: Diagrama de ER de la BD de la aplicación. 74 R3-Configuración del servidor Las configuraciones realizadas en el servidor fueron relativamente pocas, ya que al ser en un ambiente de desarrollo bajo el sistema operativo GNU/linux, específicamente ubuntu, permite la instalación y configuración de las diferentes herramientas a utilizar de manera sencilla, ya que es tan simple como escribir la siguiente línea de código: Instalación del servidor apache2. sudo apt install apache2 Instalación de la base de datos. sudo apt install mysql-server Instalación del PHP. sudo apt install php-pear php-fpm php-dev php-zip php-curl php- xmlrpc php-gd php-mysql php-mbstring php-xml libapache2-mod-php Se reinicia el servidor: sudo service apache2 restart Ya instalados los distintos elementos necesarios para el funcionamiento del servidor, este se encontrará listo para poder comenzar el desarrollo de la aplicación. 75 R4-Implementación de conexión con la base de datos La conexión de la base de datos con una aplicación web escrita en PHP es relativamente sencilla, ya que PHP viene implementado con primitivas que permiten esta conexión sin la necesidad de librerías externas. Figura 26: Fragmento de código que permite la conexión con la BD. Estas líneas de código permiten realizar la conexión de la aplicación con su respectiva base de datos, estas líneas se encuentran en un archivo llamado config.php, el cual se encargará de la conexión con la base de datos de la aplicación, proporcionando la ventaja de mantener de forma céntrica la configuración y el acceso a la base de datos, permitiendo ser llamada por otros archivos que necesiten conectarse con la base de datos a través de la función include. 76 4.3.2 Sprint 2 Las actividades a ser cumplidas durante este Sprint corresponden con la siguiente tabla. Tabla 22: Sprint 2. Descripción Prioridad R5 Diseño de la interfaz de la página principal Alta R6 Diseño de la interfaz para el login de usuario Alta R7 Diseño de la interfaz para el Registro de usuarios Alta R8 Diseño de la interfaz para la administración de usuarios Alta R9 Diseño de la interfaz para la gestión de proyectos Alta R10 Diseño de la interfaz para la gestión de tareas Alta R11 Diseño de la interfaz para la asignación de tareas a los usuarios Alta R12 Diseño de la interfaz para la administración de las horas asociadas a las tareas Alta R13 Diseño de la interfaz para la generación de reportes Alta Durante este Sprint se concentró, en gran parte, en el diseño gráfico de la aplicación, creando los wireframes pertenecientes a las vistas, que incluirán de forma visual su comportamiento y funcionamiento. 77 R5-Diseño de la interfaz de la página principal El diseño de esta vista se puede dividir entre los diferentes actores que interactúan con la aplicación, los cuales como se nombraron previamente son Admin y Cliente. Figura 27: Wireframe 1, Vista principal para usuarios administradores. 78 Figura 28: Wireframe 2, Vista principal para usuarios No administradores. 79 R6-Diseño de la interfaz para el login de usuario Figura 29: Wireframe 3, Vista de inicio de sesión de la aplicación. Los elementos necesarios para el inicio de sesión son: - Usuario, corresponde a la cédula de identidad del usuario que desea ingresar a la aplicación. - Contraseña, clave creada por el usuario para poder autenticarlo. 80 R7-Diseño de la interfaz para el Registro de usuarios Figura 30: Wireframe 4, Vista de registro de la aplicación. Los elementos necesarios para el registro de usuario son: - CI, cédula de identidad del usuario. - Nombre, Nombre del usuario a registrar. - Apellido, apellido del usuario a registrar. - Teléfono, número telefónico del usuario a registrar. - Correo, correo electrónico del usuario a registrar. - Correo Supervisor, correo electrónico del supervisor directo del usuario. - Contraseña y Repetir Contraseña, es la clave creada por el usuario para acceder a la aplicación, es necesario que estas coincidan para poder seguir con el registro. 81 R8-Diseño de la interfaz para la administración de usuarios El diseño de la interfaz de administración de usuarios se divide en 2 vistas: - Principal, que muestran a los usuarios registrados en la aplicación junto a su información, en esta vista se puede seleccionar un usuario para editar, y se puede eliminar un usuario determinado. - Edición, en la cual se pueden modificar los diferentes datos del usuario previamente seleccionado. Figura 31: Wireframe 5, Vista principal de la administración de usuarios. 82 Figura 32: Wireframe 6, Vista de edición de la administración de usuarios. Los elementos mostrados en la vista de edición de la administración de usuarios son: - CI, campo editable que indica cédula de identidad del usuario. - Nombre, campo editable que indica el nombre del usuario. - Apellido, campo editable que indica el apellido del usuario. - Teléfono, campo editable que indica el número telefónico del usuario. - Correo, campo editable que indica el correo electrónico del usuario. - Correo Supervisor, campo editable que indica el correo electrónico del supervisor directo del usuario. - Tipo de Usuario, Lista de selección que indica que tipo de usuario es el usuario seleccionado. 83 R9-Diseño de la interfaz para la gestión de proyectos El diseño de la interfaz de gestión de proyectos se divide en 3 vistas: - Principal, que muestran a los proyectos registrados en la aplicación junto a su información, en esta vista se puede seleccionar un proyecto para editar, redirigir a la vista de creación de proyectos y eliminar un proyecto determinado. - Creación, en la cual se pueden crear nuevos proyectos, ingresando los datos necesarios para el mismo. - Edición, en la cual se pueden modificar los diferentes datos del proyecto previamente seleccionado. Figura 33: Wireframe 7, Vista principal de la gestión de proyectos. 84 Figura 34: Wireframe 8, Vista de creación de la gestión de proyectos. Los elementos mostrados en la vista de creación de proyectos son: - Nombre, campo editable que indica el nombre del proyecto. - Activo, campo editable que indica si el proyecto se encuentra activo o no. - Días Estimado, campo no editable que indica el número de días estimados para finalizar el proyecto, se calcula automáticamente al seleccionar la fecha de inicio y fin. - Horas Estimadas, campo no editable que indica el número de horas estimados para finalizar el proyecto, se calcula automáticamente al seleccionar la fecha de inicio y fin. - Inicio, campo editable que indica el inicio del proyecto. - Fin, campo editable que indica el fin del proyecto. - Observaciones, campo editable para indica alguna observación. 85 Figura 35: Wireframe 9, Vista de edición de la gestión de proyectos. Los elementos mostrados en la vista de edición de proyectos son: - Id, campo no editable que identifica unívocamente al proyecto. - Nombre, campo editable que indica el nombre del proyecto. - Activo, campo editable que indica si el proyecto se encuentra activo o no. - Días Estimado, campo no editable que indica el número de días estimados para finalizar el proyecto, se calcula automáticamente al seleccionar la fecha de inicio y fin. - Horas Estimadas, campo no editable que indica el número de horas estimados para finalizar el proyecto, se calcula automáticamente al seleccionar la fecha de inicio y fin. - Inicio, campo editable que indica el inicio del proyecto. - Fin, campo editable que indica el fin del proyecto. - Observaciones, campo editable para indica alguna observación. 86 R10-Diseño de la interfaz para la gestión de tareas El diseño de la interfaz de gestión de tareas se divide en 3 vistas: - Principal, que muestran a las tareas registradas en la aplicación junto a su información, en esta vista se puede seleccionar una tarea para poder editarla, redirigir a la vista de creación de tareas y eliminar una tarea determinada. - Creación, en la cual se pueden crear nuevas tareas, ingresando los datos necesarios para la misma. - Edición, en la cual se pueden modificar los diferentes datos de la tarea previamente seleccionada. Figura 36: Wireframe 10, Vista principal de la gestión de tareas. 87 Figura 37: Wireframe 11, Vista de creación de la gestión de tareas. Los elementos mostrados en la vista de creación de tareas de la aplicación son: - Nombre, campo editable que indica el nombre de la tarea. - Activo, campo editable que indica si la tarea se encuentra activa o no. - Días Estimado, campo no editable que indica el número de días estimados para finalizar la tarea, se calcula automáticamente al seleccionar la fecha de inicio y fin. - Horas Estimadas, campo no editable que indica el número de horas estimados para finalizar la tarea, se calcula automáticamente al seleccionar la fecha de inicio y fin. - Inicio, campo editable que indica el inicio de la tarea. - Fin, campo editable que indica el fin de la tarea. - Observaciones, campo editable para indica alguna observación. - Proyecto, campo seleccionable el cual indica a cuál proyecto pertenece la tarea. 88 Figura 38: Wireframe 12, Vista de edición de la gestión de tareas. Los elementos mostrados en la vista de edición de tareas de la aplicación son: - Id, campo no editable que identifica unívocamente a la tarea. - Nombre, campo editable que indica el nombre de la tarea. - Activo, campo editable que indica si la tarea se encuentra activa o no. - Días Estimado, campo no editable que indica el número de días estimados para finalizar la tarea, se calcula automáticamente al seleccionar la fecha de inicio y fin. - Horas Estimadas, campo no editable que indica el número de horas estimados para finalizar la tarea, se calcula automáticamente al seleccionar la fecha de inicio y fin. - Inicio, campo editable que indica el inicio de la tarea. - Fin, campo editable que indica el fin de la tarea. - Observaciones, campo editable para indica alguna observación. - Proyecto, campo seleccionable el cual indica a cual proyecto pertenece la tarea. 89 R11-Diseño de la interfaz para la asignación de tareas a los usuarios El diseño de la interfaz de asignación de tareas a usuarios se divide en 2 vistas: - Principal, que muestran a las tareas asignadas a los usuarios en la aplicación, en esta vista se puede redirigir a la vista de creación de una masignación y eliminar una asignación determinada. - Creación, en la cual se pueden crear nuevas asignaciones, seleccionado el usuario, el proyecto y la tarea. Figura 39: Wireframe 13, Vista principal de la asignación de tareas a usuarios. 90 Figura 40: Wireframe 14, Vista de creación de la asignación de tareas a usuarios. Los elementos mostrados en la vista de edición de tareas de la aplicación son: - Usuario, campo seleccionable el cual indica el usuario que se le asignara la tarea. - Proyecto, campo seleccionable el cual indica el proyecto a cual contendrá las tareas a asignar. - Tarea, campo seleccionable el cual indica la tarea a asignar. 91 R12-Diseño de la interfaz para la administración de las horas asociadas a las tareas El diseño de la interfaz administración de horas asociadas a las tareas se encuentra en 1 sola vista, en la misma se muestran todas las tareas asignadas al usuario de la sesión actual, en esta vista es posible: - Seleccionar la semana que se desea ingresar las horas, al seleccionar la semana mostrara las horas invertidas en las tareas esa semana - Ingresar las horas de los días domingo a sábado (tomando como domingo el primer día de la semana), esto modificara automáticamente las “Horas Totales” y la suma de las horas según el día. - Actualizar, permite guardas las horas en la semana seleccionada. Figura 41: Wireframe 15, Vista principal de la administración de horas. 92 R13-Diseño de la interfaz para la generación de reportes El diseño de la interfaz para la generación de reportes se encuentra en 1 sola vista, la cual contiene los siguientes campos a rellenar para poder filtrar los reportes: - Usuario, campo seleccionable el cual indica que usuario se desea filtrar en el reporte, se encuentra la opción “todos” muestra a todos los usuarios. - Proyecto, campo seleccionable el cual indica que proyecto se desea filtrar en el reporte, se encuentra la opción “todos” muestra a todos los proyectos. - Tarea, campo seleccionable el cual indica que tarea se desea filtrar en el reporte, se encuentra la opción “todos” muestra a todas las tareas. - Fecha Inicio, campo editable que permite indicar desde que fecha se desea filtrar el reporte. - Fecha Fin, campo editable que permite indicar hasta que fecha se desea filtrar el reporte. Figura 42: Wireframe 16, Vista principal de la generación de reportes. 93 4.3.3 Sprint 3 Las actividades a ser cumplidas durante este Sprint corresponden con la siguiente tabla. Tabla 23: Sprint 3. Descripción Prioridad R15 Implementación de la vista para el Registro de usuarios Alta R16 Implementación de la vista el login de usuario Alta R17 Implementación de la vista para la administración de usuarios Alta R18 Pruebas de versión Alta Durante este Sprint se concentró, en gran parte, en el desarrollo de las funcionalidades de la aplicación, incluyendo su representación gráfica, creando las vistas pertenecientes a los puntos R15, R16 y R17, además de sus pruebas funcionales pertinentes en el punto R18, además del diseño del header que será utilizado en la mayoría de las vistas. Es importante destacar que las vistas de la aplicación se encuentran en la raíz del directorio del servidor, mientras que las funcionalidades del mismo que encuentran en una carpeta llamada “procesos” que se encuentra ubicada en la raíz. 94 R15-Implementación de la vista para el Registro de usuarios La implementación de la vista de registro de usuarios corresponde al caso de uso UC1-Registro, esta vista es la que proporciona a los usuarios un formulario el cual le permite poder registrarse en la aplicación, el mismo puede ser accedido desde la vista de login. Para el desarrollo en la aplicación se crearon dos (2) archivos: - registro.php, el cual contiene la vista html y su formulario. Los datos ingresados por el usuario serán enviados utilizando el método post ejecutando RegistroUsuario.php. - RegistroUsuario.php que se encuentra en la carpeta procesos, se encarga de poder realizar las validaciones necesarias a nivel del servidor para poder registrar un usuario, y en caso de que cumpla con las condiciones lo registre en la aplicación. Es importante mencionar que el campo contraseña se cifra utilizando el método de reducción criptográfico md5. En el siguiente fragmento de código se puede ver el query utilizado para la inserción del usuario, ya realizado previamente las validaciones necesarias (contraseña repetida no coincide). Figura 43: Fragmento de código RegistroUsuario.php. 95 R16-Implementación de la vista el login de usuario En esta implementación se encuentra la vista para el login de usuarios, la cual corresponde al caso de uso UC2-Login, la misma proporciona a los usuarios poder iniciar sesión en la aplicación. Para la vista de login se crearon dos (2) archivos en la aplicación: - index.php, que contiene la vista principal del login, ya que el usuario no tendrá acceso a ninguna otra parte de la aplicación hasta que inicie sesión (exceptuando el registro de usuarios). Los datos ingresados por el usuario serán enviados utilizando el método post ejecutando VerificarUsuario.php. - VerificarUsuario.php, el cual se encuentra en la carpeta de procesos, este archivo es el encargado de verificar si los datos subministrados del usuario concuerdan con los datos de un usuario registrado en la aplicación. Es importante indicar que en este punto del desarrollo se crearon los archivos principalAdmin.php y principalUsuario.php, los cuales posen las vistas principales para los usuarios administradores y no administradores respectivamente, estas vistas contienen los diferentes enlaces pertinentes a las funciones que dispone en la aplicación. Por último, también fue creado el archivo CerrarSesion.php, el cual corresponde acaso de uso UC3-Cerrar Sesión, el cual se encuentra en la capeta de procesos, este archivo se encarga de cerrar la sesión actual del usuario, el acceso al mismo se encuentra en el header de la mayoría de las vistas (sin incluir la vista de login ni la de registro). 96 La siguiente fracción de código muestra el proceso de cierre de sesión. Figura 44: Fragmento de código CerrarSesion.php. R17-Implementación de la vista para la administración de usuarios En las vistas para la administración de usuarios corresponde al caso de uso UC8-Admin Usuarios, a la vez se encuentra formada por los casos de uso: - UC8.1-Editar Usuario - UC8.2-Eliminar Usuarios Para la vista de administración de usuarios se crearon cuatro (4) archivos en la aplicación: - gestionUsuario.php, el cual contiene la vista principal de la administración de usuarios, mostrando a los distintos usuarios registrados en la aplicación, permitiendo acceder a la vista editarUsuarios.php y poder eliminar a los mismos usando a través de Usuario_delete.php. - editarUsuario.php, contiene la vista de edición de usuarios, la cual permite editar los diferentes atributos que posea el mismo, la información editada será enviada utilizando el método post, a través de ajax a Usuario_submit.php, permitiendo saber si se ha podido editar el usuario sin la necesidad de abandonar la vista. En el siguiente fragmento de código se puede observar el método utilizado para enviar el objeto Salida que posee los datos en una estructura de Object, como se puede observar, en caso de que la respuesta sea positiva (1) manda un mensaje 97 indicando que se ha guardado con éxito y redirige a la vista de gestionUsuario.php, en caso contrario manda un mensaje de alerta indicando que no se ha podido guardar. Figura 45: Fragmento de código editarUsuario.php. Esta forma de enviar los datos a través de ajax se utilizó de forma recurrente a lo largo del desarrollo de esta aplicación, implementándolo en las diferentes vistas que se encarguen de agregar o editar algún proyecto, tarea, asociación o como en este caso un usuario. - Usuario_submit.php, se encuentra en la carpeta de procesos, es el que se encarga de actualizar al usuario, realizando las verificaciones necesarias para los datos suministrados, respondiendo “1” en caso de que se actualizara el usuario de forma correcta y “0” en caso contrario. - Usuario_delete.php, se encuentra en la carpeta de procesos, permite poder eliminar a un usuario seleccionado, se accede a la misma a través del método get en la vista gestionUsuario.php. 98 En la siguiente sección de código indica la instancia del método Usuario_delete.php en la vista principal gestionUsuario.php. Figura 46: Fragmento de código gestionUsuario.php. R18-Pruebas de versión Todo sistema desarrollado debe de probarse antes de poder ser utilizado, ya que el costo es menos ir se detectan los problemas antes de que el mismo entre en funcionamiento. Una vez desarrollo en esta primera iteración de los requisitos del Sprint Backlog junto con los casos de uso identificados, se procede a realizar las pruebas pertinentes a esta versión de la aplicación. Para garantizar que la versión obtenida sea consistente, se realizaron las siguientes pruebas de aceptación que abarcaran R15, R16 y R17 : Tabla 24: Caso de Prueba 1. Caso de Prueba: 1-Control de acceso a la aplicación. Requisito 16: Implementación de la vista el login de usuario. Descripción: Se ingresa la CI del usuario y contraseña. Luego se presiona sobre el botón Iniciar para obtener acceso a la página principal de la aplicación. Condiciones de Ejecución: Ninguna. Pasos de ejecución: 1. Se inicia la aplicación. 2. Se ingresan la cedula y contraseña del usuario registrado en la aplicación. 3. Se presiona el botón de Iniciar Resultado Esperado: El usuario es autenticado y se visualiza la página principal de la aplicación. Evaluación de la prueba: Ejecución correcta. Se cumplió con el resultado esperado. 99 Tabla 25: Caso de Prueba 2. Caso de Prueba: 2-Acceso a la página principal de usuario administrador y no administrador. Requisito 16: Implementación de la vista el login de usuario. Descripción: Se abre la página principal de usuario administrador y no administrador. Condiciones de Ejecución:  El usuario debe de estar autenticado en el sistema. Pasos de ejecución: 1. El usuario se autentifica en la vista de login. 2. El usuario abre la vista principal. Resultado Esperado: El usuario accede a la vista sin problemas, en caso de intentar acceder a una vista que no cumpla con sus privilegios es redirigido a su vista principal. Evaluación de la prueba: Ejecución correcta. Se cumplió con el resultado esperado para usuarios administradores y usuarios no administradores. Tabla 26: Caso de Prueba 3. Caso de Prueba: 3-Registro de usuario en la aplicación. Requisito 15: Implementación de la vista para el Registro de usuarios. Descripción: Registrar un usuario nuevo en la aplicación. Condiciones de Ejecución:  El usuario a crear no se encuentra registrado en la aplicación. Pasos de ejecución: 1. Se accede a la vista de Registro. 2. Se ingresan los datos obligatorios. 3. Se presiona el botón Registrarse. Resultado Esperado: El usuario es registrado en la aplicación, sin permisos de administrador. Evaluación de la prueba: Ejecución correcta. Se cumplió con el resultado esperado. 100 Tabla 27: Caso de Prueba 4. Caso de Prueba: 4-Edición de Usuario. Requisito 17: Implementación de la vista para la administración de usuarios. Descripción: Editar a un usuario que se encuentre registrado en la aplicación. Condiciones de Ejecución:  El usuario debe de estar autenticado en la aplicación.  El usuario debe tener permisos de administrador.  Debe de existir el usuario a editar en la aplicación. Pasos de ejecución: 1. En la vista principal de administración de usuarios seleccionar el usuario a editar. 2. Se accede a la vista de edición. 3. Se modifican los datos. 4. Se presiona el botón Actualizar. Resultado Esperado: El usuario editado es actualizado en la aplicación. Evaluación de la prueba: Ejecución correcta. Se cumplió con el resultado esperado. Tabla 28: Caso de Prueba 5. Caso de Prueba: 5-Eliminar Usuario. Requisito 17: Implementación de la vista para la administración de usuarios. Descripción: Eliminar a un usuario registrado en la aplicación. Condiciones de Ejecución:  El usuario debe de estar autenticado en la aplicación.  Debe de existir el usuario a eliminar en la aplicación. Pasos de ejecución: 1. En la vista principal de administración de usuarios seleccionar la X asociada al usuario que se desea eliminar. Resultado Esperado: El usuario seleccionado es eliminado de la aplicación. Evaluación de la prueba: Ejecución correcta. Se cumplió con el resultado esperado. 101 Tabla 29: Caso de Prueba 6. Caso de Prueba: 6-Control de acceso a la aplicación, usuario no registrado. Requisito 16: Implementación de la vista el login de usuario. Descripción: Se ingresa una Ci que no se encuentre registrada en la aplicación. Condiciones de Ejecución: Ninguna. Pasos de ejecución: 1. Se inicia la aplicación. 2. Se ingresan la cedula y contraseña en la aplicación. 3. Se presiona el botón de Iniciar Resultado Esperado: Se muestra un mensaje indicando que ha habido un error al intentar iniciar sesión. Evaluación de la prueba: Ejecución correcta. Se cumplió con el resultado esperado. Figura 47: Screenshot mostrando el caso de prueba 6. 102 Tabla 30: Caso de Prueba 7. Caso de Prueba: 7-Cerrar sesión. Requisito 16: Implementación de la vista el login de usuario. Descripción: El usuario cierra su sesión activa en ese momento. Condiciones de Ejecución:  El usuario debe de estar autenticado en la aplicación. Pasos de ejecución: 1. Se presiona el enlace de Cerrar sesión. Resultado Esperado: Se muestra un mensaje indicando que se ha cerrado la sesión correctamente. Evaluación de la prueba: Ejecución correcta. Se cumplió con el resultado esperado. Figura 48: Screenshot mostrando el caso de prueba 7. 103 4.3.4 Sprint 4 Las actividades a ser cumplidas durante este Sprint corresponden con la siguiente tabla. Tabla 31: Sprint 4. Descripción Prioridad R19 Implementación de la vista para la gestión de proyectos Alta R20 Implementación de la vista la gestión de tareas Alta R21 Implementación de la vista la asignación de tareas a los usuarios Alta R22 Pruebas de versión Alta Durante este Sprint se procedió al desarrollo de las funcionalidades y vistas relacionadas a los puntos R19, R20 y R21, incluyendo además las pruebas de versión asociadas al punto R22. Es importante destacar que la implementación de los puntos R19, R20 y R21 son muy similares al punto R17, ya que esas vistas se comportan de una manera muy similar, porque poseen agregación (R19 no la posee), edición (R21 no la posee) y eliminación de un elemento determinado en la base de datos dependiendo de la vista (usuarios, proyectos, tareas y asociaciones). R19-Implementación de la vista para la gestión de proyectos En las vistas para la gestión de proyectos corresponde al caso de uso UC5-Gestión Proyectos, la cual, a su vez se encuentra formada por los casos de uso: - UC5.1-Crear Proyecto. - UC5.2-Editar Proyecto. - UC5.3-Eliminar Proyecto. En la implementación de las vistas para la gestión de proyectos se crearon seis (6) archivos en la aplicación: 104 - gestionProyecto.php, este archivo contiene la vista principal de la gestión de proyectos, mostrando los distintos proyectos que se encuentran activos en la aplicación, permitiendo acceder a la vista de nuevoProyecto.php, a la de editarProyecto.php y poder eliminar un proyecto a través de Proyecto_delete.php. - nuevoProyecto.php, contiene la vista de creación de un nuevo proyecto, permite la creación de los mismo con los diferentes datos suministrados, los datos serán enviados utilizando el método post, a través de ajax a ProyectoNuevo_submit.php, de esta forma pudiendo avisar al usuario si se pudo actualizar dicho proyecto o no, sin la necesidad de recargar la vista. - editarProyecto.php, contiene la vista de edición de proyectos, permite poder editar los diferentes atributos que contenga un proyecto determinado, la información editada será enviada utilizando el método post, a través de ajax a Proyecto_submit.php, de esta forma pudiendo avisar al usuario si se pudo actualizar dicho proyecto o no, sin la necesidad de recargar la vista. - ProyectoNuevo_submit.php, se encuentra en la carpeta de procesos, es el que se encarga de crear un nuevo proyecto, realizando las verificaciones necesarias para los datos suministrados, respondiendo “1” en caso de que se creara el nuevo proyecto de forma correcta y “0” en caso contrario. - Proyecto_submit.php, se encuentra en la carpeta de procesos, muy similar a ProyectoNuevo_submit.php con la diferencia de que el query se utiliza para actualizar y no para crear el proyecto. - Proyecto_delete.php, este archivo se encuentra en la carpeta de procesos, permite poder eliminar un proyecto seleccionado, se accede a la misma a través del método get en la vista gestionProyecto.php. Es importante destacar que si un proyecto tiene tareas o asociaciones, el mismo no podrá ser eliminado hasta que primero sean eliminadas dichas las asociaciones y tareas. 105 R20-Implementación de la vista la gestión de tareas En las vistas para la gestión de proyectos corresponde al caso de uso UC6-Gestión Tareas, la cual, a su vez se encuentra formada por los casos de uso: - UC6.1-Crear Tarea. - UC6.2-Editar Tarea. - UC6.3-Eliminar Tarea. Para la implementación de las vistas para la gestión de tareas se crearon seis (6) archivos en la aplicación: - gestionTarea.php, este archivo contiene la vista principal de la gestión de tareas, mostrando las distintas tareas que se encuentran activas en la aplicación, permitiendo poder acceder a la vista de nuevoTarea.php, a la de editarTarea.php y poder eliminar una tarea a través de Tarea_delete.php. - nuevoTarea.php, contiene la vista de creación de una nueva tarea, permite la creación de las misma con los diferentes datos suministrados, los datos serán enviados utilizando el método post, a través de ajax a TareaNuevo_submit.php, de esta forma pudiendo avisar al usuario si se pudo actualizar dicha tarea o no, sin la necesidad de recargar la vista. - editarTarea.php, contiene la vista de edición de tareas, permite poder editar los diferentes atributos que contenga una tarea determinada, la información editada será enviada utilizando el método post, a través de ajax a Tarea_submit.php, de esta forma pudiendo avisar al usuario si se pudo actualizar dicha tarea o no, sin la necesidad de recargar la vista. - TareaNuevo_submit.php, se encuentra en la carpeta de procesos, es el que se encarga de crear una nueva tarea, realizando las verificaciones necesarias para los 106 datos suministrados, respondiendo “1” en caso de que se creara la tarea de forma correcta y “0” en caso contrario. - Tarea_submit.php, se encuentra en la carpeta de procesos, muy similar a TareaNuevo_submit.php con la diferencia de que el query se utiliza para actualizar y no para crear la tarea. - Tarea_delete.php, este archivo se encuentra en la carpeta de procesos, permite poder eliminar una tarea seleccionada, se accede a la misma a través del método get en la vista gestionTarea.php. Es importante destacar que si una tarea se encuentra asociada a algún usuario, la misma no podrá ser eliminada hasta que primero sean eliminadas dichas asociación. R21-Implementación de la vista la asignación de tareas a los usuarios En las vistas para la asignación de tareas a los usuarios corresponde al caso de uso UC7-Asignar Tareas, la cual, a su vez se encuentra formada por los casos de uso: - UC7.1-Crear Asociación. - UC7.2-Eliminar Asociación. Para la implementación de las vistas para la asignación de tareas a los usuarios se crearon cuatro (4) archivos en la aplicación: - gestionProyectoTarea.php, este archivo contiene la vista principal de la asignación de tareas a los usuarios, mostrando las distintas asociaciones que se encuentran activas en la aplicación, permitiendo poder acceder a la vista de nuevoProyectoTarea.php y poder eliminar una asociación específica a través de ProyectoTarea_delete.php. 107 - nuevoProyectoTarea.php, contiene la vista de creación de una nueva asociación, permite la creación de las mismas seleccionando al usuario, proyecto y la tarea que se desea relacionar, los datos seleccionados serán enviados utilizando el método post, a través de ajax a ProyectoTareaNuevo_submit.php, de esta forma pudiendo avisar al usuario si se pudo crear la nueva asociación o no, sin la necesidad de recargar la vista. - ProyectoTareaNuevo_submit.php, se encuentra en la carpeta de procesos, es el que se encarga de crear una nueva asociación, realizando las verificaciones necesarias para los datos suministrados, respondiendo “1” en caso de que se creara la tarea de forma correcta y “0” en caso contrario. - ProyectoTarea_delete.php, este archivo se encuentra en la carpeta de procesos, permite poder eliminar una asociación, se accede a la misma a través del método get en la vista gestionTarea.php. R22-Pruebas de versión Para garantizar que esta segunda (2ª) versión obtenida sea consistente, la cual abarcara R19, R20 y R21 se realizaron las siguientes pruebas de aceptación: 108 Tabla 32: Caso de Prueba 8. Caso de Prueba: 8-Crear Proyecto. Requisito 19: Implementación de la vista para la gestión de proyectos. Descripción: El usuario crea un nuevo proyecto. Condiciones de Ejecución:  El usuario debe de estar autenticado en la aplicación.  El usuario debe de tener permisos de administrador. Pasos de ejecución: 1. En la vista principal de gestión de proyectos dar click al botón Nuevo Proyecto. 2. Se accede a la vista de creación de proyectos. 3. Ingresar los datos solicitados para la creación del proyecto. 4. Dar click en el botón Crear Resultado Esperado: Se muestra un mensaje indicando que se ha creado el proyecto, regresando a la vista principal de gestión de proyectos. Evaluación de la prueba: Ejecución correcta. Se cumplió con el resultado esperado. Tabla 33: Caso de Prueba 9. Caso de Prueba: 9-Editar Proyecto. Requisito 19: Implementación de la vista para la gestión de proyectos. Descripción: El usuario editar un proyecto. Condiciones de Ejecución:  El usuario debe de estar autenticado en la aplicación.  El usuario debe de tener permisos de administrador.  El proyecto a editar debe de existir en la aplicación. Pasos de ejecución: 1. En la vista principal de gestión de proyectos seleccionar el proyecto que se desea editar. 2. Se accede a la vista de edición. 3. Se modifican los datos. 4. Se presiona el botón Actualizar. Resultado Esperado: Se muestra un mensaje indicando que se ha actualizado el proyecto, regresando a la vista principal de gestión de proyectos. Evaluación de la prueba: Ejecución correcta. Se cumplió con el resultado esperado. 109 Tabla 34: Caso de Prueba 10. Caso de Prueba: 10-Eliminar Proyecto. Requisito 19: Implementación de la vista para la gestión de proyectos. Descripción: El usuario elimina un proyecto. Condiciones de Ejecución:  El usuario debe de estar autenticado en la aplicación.  El usuario debe de tener permisos de administrador.  El proyecto a eliminar debe de existir en la aplicación. Pasos de ejecución: 1. En la vista principal de gestión de proyectos seleccionar la X asociada al proyecto que se desea eliminar. Resultado Esperado: Se muestra un mensaje indicando que se ha eliminado el proyecto, regresando a la vista principal de gestión de proyectos. Evaluación de la prueba: Ejecución correcta. Se cumplió con el resultado esperado. Tabla 35: Caso de Prueba 11. Caso de Prueba: 11-Crear Tarea. Requisito 20: Implementación de la vista la gestión de tareas. Descripción: El usuario crea una nueva tarea. Condiciones de Ejecución:  El usuario debe de estar autenticado en la aplicación.  El usuario debe de tener permisos de administrador.  Debe de existir el proyecto al cual se le desea crear la tarea. Pasos de ejecución: 1. En la vista principal de gestión de tareas dar click al botón Nueva Tarea. 2. Se accede a la vista de creación de tareas. 3. Ingresar los datos solicitados para la creación de la tarea, seleccionando el proyecto al cual pertenecerá la misma. 4. Dar click en el botón Crear Resultado Esperado: Se muestra un mensaje indicando que se ha creado la tarea, regresando a la vista principal de gestión de tareas. Evaluación de la prueba: Ejecución correcta. Se cumplió con el resultado esperado. 110 Tabla 36: Caso de Prueba 12. Caso de Prueba: 12-Editar Tarea. Requisito 20: Implementación de la vista la gestión de tareas. Descripción: El usuario editar una tarea. Condiciones de Ejecución:  El usuario debe de estar autenticado en la aplicación.  El usuario debe de tener permisos de administrador.  La tarea a editar debe de existir en la aplicación. Pasos de ejecución: 1. En la vista principal de gestión de tareas seleccionar la tarea que se desea editar. 2. Se accede a la vista de edición de tareas. 3. Se modifican los datos. 4. Se presiona el botón Actualizar. Resultado Esperado: Se muestra un mensaje indicando que se ha actualizado la tarea, regresando a la vista principal de gestión de tareas. Evaluación de la prueba: Ejecución correcta. Se cumplió con el resultado esperado. Tabla 37: Caso de Prueba 13. Caso de Prueba: 13-Eliminar Tarea. Requisito 20: Implementación de la vista la gestión de tareas. Descripción: El usuario elimina una tarea. Condiciones de Ejecución:  El usuario debe de estar autenticado en la aplicación.  El usuario debe de tener permisos de administrador.  La tarea a eliminar debe de existir en la aplicación. Pasos de ejecución: 1. En la vista principal de gestión de tareas seleccionar la X asociada a la tarea que se desea eliminar. Resultado Esperado: Se muestra un mensaje indicando que se ha eliminado la tarea, regresando a la vista principal de gestión de tareas. Evaluación de la prueba: Ejecución correcta. Se cumplió con el resultado esperado. 111 Tabla 38: Caso de Prueba 14. Caso de Prueba: 14-Crear Asociación. Requisito 21: Implementación de la vista la asignación de tareas a los usuarios. Descripción: El usuario crea una nueva asociación. Condiciones de Ejecución:  El usuario debe de estar autenticado en la aplicación.  El usuario debe de tener permisos de administrador.  Debe de existir el proyecto al cual se le desea asignar.  Debe de existir la tarea la cual se desea asociar.  Debe de existir el usuario que se desea asociar. Pasos de ejecución: 1. En la vista principal de asignaciones dar click al botón Asignar Nueva Tarea. 2. Se accede a la vista de asignaciones. 3. Seleccionar el usuario, el proyecto y la tarea que se desean asociar. 4. Dar click en el botón Crear Resultado Esperado: Se muestra un mensaje indicando que se ha creado la asociación, regresando a la vista principal de gestión de tareas. Evaluación de la prueba: Ejecución correcta. Se cumplió con el resultado esperado. Tabla 39: Caso de Prueba 15. Caso de Prueba: 15-Eliminar Asociación. Requisito 21: Implementación de la vista la asignación de tareas a los usuarios. Descripción: El usuario elimina una asociación. Condiciones de Ejecución:  El usuario debe de estar autenticado en la aplicación.  El usuario debe de tener permisos de administrador.  La asociación a eliminar debe de existir en la aplicación. Pasos de ejecución: 1. En la vista principal de asignaciones, seleccionar la X asociada a la asignación de desea eliminar. Resultado Esperado: Se muestra un mensaje indicando que se ha eliminado la asignación, regresando a la vista principal de asignaciones. Evaluación de la prueba: Ejecución correcta. Se cumplió con el resultado esperado. 112 Tabla 40: Caso de Prueba 16. Caso de Prueba: 16-Eliminar Proyecto con tareas. Requisito 19: Implementación de la vista para la gestión de proyectos. Descripción: El usuario elimina un proyecto que posee tareas asociadas. Condiciones de Ejecución:  El usuario debe de estar autenticado en la aplicación.  El usuario debe de tener permisos de administrador.  El proyecto a eliminar debe de existir en la aplicación.  El proyecto a eliminar debe de tener tareas asignadas. Pasos de ejecución: 1. En la vista principal de gestión de proyectos seleccionar la X asociada al proyecto que se desea eliminar. Resultado Esperado: Se muestra un mensaje indicando que no se pudo eliminar el proyecto, regresando a la vista principal de gestión de proyectos. Evaluación de la prueba: Ejecución correcta. Se cumplió con el resultado esperado. Tabla 41: Caso de Prueba 17. Caso de Prueba: 17-Eliminar Tarea asociada. Requisito 20: Implementación de la vista la gestión de tareas. Descripción: El usuario elimina una tarea que se encuentra asociada a un usuario y proyecto. Condiciones de Ejecución:  El usuario debe de estar autenticado en la aplicación.  El usuario debe de tener permisos de administrador.  La tarea a eliminar debe de existir en la aplicación.  La tarea debe de estar asignada a un usuario. Pasos de ejecución: 1. En la vista principal de gestión de tareas seleccionar la X asociada a la tarea que se desea eliminar. Resultado Esperado: Se muestra un mensaje indicando que se ha ocurrido un error al intentar eliminar la tarea, regresando a la vista principal de gestión de tareas. Evaluación de la prueba: Ejecución correcta. Se cumplió con el resultado esperado. 113 4.3.4 Sprint 5 Las actividades a ser cumplidas durante este Sprint corresponden con la siguiente tabla. Tabla 42: Sprint 5. Descripción Prioridad R23 Implementación de la vista para la administración de las horas asociadas a las tareas Alta R24 Pruebas de versión Alta R25 Implementación de la vista para la generación de reportes Alta R26 Pruebas de versión final Alta Durante este ultimó Sprint se procedió al desarrollo de las funcionalidades y vistas relacionadas a los puntos R23 y R25, incluyendo además las pruebas pertinentes al punto R24 y las pruebas finales R26 dando como finalidad este desarrollo. R23-Implementación de la vista para la administración de las horas asociadas a las tareas La implementación de la vista para la administración de las horas asociadas a las tareas corresponde al caso de uso UC4-Admin Horas, esta vista es la que proporciona a los usuarios registrados en la aplicación poder administrar las horas trabajadas en una tarea en particular en un proyecto en particular. Para el desarrollo de la administración de horas se optó por el almacenamiento de la semana, conteniendo las horas de los días que mismas, de esta forma se puede seleccionar cual es la semana que se desea almacenar, para la creación de la misma se crearon tres (3) archivos: 114 - horasSemana.php, el cual contiene la estructura de la vista html, conteniendo el calendario en el cual se podrá seleccionar la semana que se desea editar, al seleccionar dicha semana (de forma predeterminada, se encuentra seleccionada la semana del día actual) se realizará una petición ajax al archivo HorasSemana.php, el cual complementará la vista con una tabla. - HorasSemana.php, que se encuentra en la carpeta procesos, se encarga de complementar la vista horasSemana.php, enviando una vista la cual indica cual es la semana especifica que fue seleccionada, mostrando una tabla con las tareas asignadas al usuario, permitiendo modificar las horas de los días de la misma, permitiendo enviar vía ajax a HorasSemana_submit.php permitiendo guardar dichas horas en la aplicación. - HorasSemana_submit.php, que se encuentra en la carpeta procesos, se encarga de poder realizar las validaciones necesarias a nivel del servidor para poder guardar las horas ingresadas, y en caso de que cumpla con las condiciones almacenarlas en la aplicación. Se han realizado las validaciones necesarias para mostrar visualmente que las horas ingresadas en los diferentes proyectos no puedan sobrepasar las 8 horas diarias, mostrándolo a nivel visual y a nivel funcional. R24-Pruebas de versión Para garantizar que esta tercera (3ª) versión obtenida sea consistente, la cual abarcara solamente R23, se realizaron las siguientes pruebas de aceptación: 115 Tabla 43: Caso de Prueba 18. Caso de Prueba: 18-Guardar horas de una semana. Requisito 23: Implementación de la vista para la administración de las horas asociadas a las tareas. Descripción: El usuario desea poder guardar las horas de una tarea en una determinada semana. Condiciones de Ejecución:  El usuario debe de estar autenticado en la aplicación.  El usuario debe de estar asignado a una tarea. Pasos de ejecución: 1. En la vista principal de gestión de administración de horas, seleccionar cual es la semana que desea guardar las horas. 2. Se cargará en la vista dicha semana. 3. El usuario ingresa las diferentes horas de cada día en las tareas. 4. El usuario le da click a actualizar. Resultado Esperado: Se muestra un mensaje indicando que se ha podido guardar con éxito dicha semana. Evaluación de la prueba: Ejecución correcta. Se cumplió con el resultado esperado. 116 Tabla 44: Caso de Prueba 19. Caso de Prueba: 19-Editar horas de una semana. Requisito 23: Implementación de la vista para la administración de las horas asociadas a las tareas. Descripción: El usuario desea poder editar las horas de una tarea en una determinada semana. Condiciones de Ejecución:  El usuario debe de estar autenticado en la aplicación.  El usuario debe de estar asignado a una tarea.  La aplicación ya debe de tener guardada hora de la tarea en dicha semana. Pasos de ejecución: 1. En la vista principal de gestión de administración de horas, seleccionar cual es la semana que desea editar las horas. 2. Se cargará en la vista dicha semana, incluyendo las horas almacenadas. 3. El usuario ingresa las diferentes horas de cada día en las tareas. 4. El usuario le da click a actualizar. Resultado Esperado: Se muestra un mensaje indicando que se ha podido guardar con éxito dicha semana. Evaluación de la prueba: Ejecución correcta. Se cumplió con el resultado esperado. 117 Tabla 45: Caso de Prueba 20. Caso de Prueba: 20-Agregar horas de una semana, sobrepasando las 8 horas diarias. Requisito 23: Implementación de la vista para la administración de las horas asociadas a las tareas. Descripción: El usuario desea poder guardar las horas de una tarea en una determinada semana, sobrepasando la restricción de las 8 horas diarias. Condiciones de Ejecución:  El usuario debe de estar autenticado en la aplicación.  El usuario debe de estar asignado a una tarea. Pasos de ejecución: 1. En la vista principal de gestión de administración de horas, seleccionar cual es la semana que desea editar las horas. 2. Se cargará en la vista dicha semana, incluyendo las horas almacenadas. 3. El usuario ingresa las diferentes horas de cada día en las tareas. 4. El usuario le da click a actualizar. Resultado Esperado: Se muestra un mensaje indicando que las horas del día específico no concuerdan. Evaluación de la prueba: Ejecución correcta. Se cumplió con el resultado esperado. Tabla 46: Caso de Prueba 21. Caso de Prueba: 21- Administración de horas sin tareas asignadas. Requisito 23: Implementación de la vista para la administración de las horas asociadas a las tareas. Descripción: El usuario accede a la vista para la administración de las horas pero no pose tareas asignadas. Condiciones de Ejecución:  El usuario debe de estar autenticado en la aplicación. Pasos de ejecución: 1. En la vista principal de gestión de administración de horas, seleccionar cual es la semana que desea editar las horas. 2. Se cargara en la vista dicha semana. Resultado Esperado: Se muestra un mensaje indicando que el usuario no posee ninguna tarea asignada. Evaluación de la prueba: Ejecución correcta. Se cumplió con el resultado esperado. 118 R25-Implementación de la vista para la generación de reportes La implementación de la vista para la generación de reportes corresponde al caso de uso UC9-Reportes, esta vista se encuentra enfocada en la creación de reportes para los administradores, permitiendo seleccionar entre distintas opciones para poder filtrar la información a mostrar, esta información será representada con un documento generado por la propia aplicación pdf. Para la implementación de la funcionalidad se procedió a la utilización de la biblioteca FPDF, la cual permite la creación del documento pdf, en la misma se utilizaron las estructuras celdas (Cell) y multiceldas (MultiCell), las cuales conforman lo que sería la tabla resultante. Para la implementación de la vista de reporte se optó por el uso de dos (2) archivos: - reportes.php, el cual contiene la estructura de la vista html, mostrando los diferentes selects, para poder filtrar la información que se quiera generar el reporte, entre los diferentes elementos para filtrar se encuentran: - Usuario, el usuario que se desea filtrar. - Proyecto, el proyecto que se desea filtrar. - Tarea, la tarea la cual se desea filtrar. - Fecha Inicio y Fecha fin, la cual representa el rango en el cual se almacenaron las horas. Es importante mencionar que se pueden seleccionar más de un filtrado a la vez y las opciones predeterminadas de las selecciones abarcaran a todos los usuarios, proyectos y tareas respectivamente, además, al no agregar fecha de inicio o fin, se asumirá que se desea mostrar los reportes sin restricciones de fechas. Esta 119 información sería enviada utilizando el método post al archivo GenerarReporte.php para poder generar el pdf deseado. - GenerarReporte.php, que se encuentra en la carpeta procesos, es la que se encarga de la generación del reporte tomando los datos suministrados vía post, después de realizar las diferentes búsquedas en la base de datos con su respectivo filtrado, se procede a la creación de las tablas utilizando las estructuras Cell y MultiCell, las cuales crean “celdas” que conforman lo que sería una tabla, la utilización de MultiCell fue debido a que es posible que alguno de los textos que se desea agregar en las celdas sobrepasa el tamaño de la misma, por lo que al utilizar MultiCell, esto permite que el texto se ajuste de forma automática creando sus respectivos saltos de líneas. La siguiente imagen muestra lo que sería un ejemplo de un archivo PDF generado por la vista de registros. Figura 49: Archivo PDF generado por la vista de Reportes 120 R26-Pruebas de versión final Para garantizar que esta cuarta (4ª) y última versión obtenida sea consistente, la cual abarcara solamente R24, se realizaron las siguientes pruebas de aceptación: Tabla 47: Caso de Prueba 22. Caso de Prueba: 22- Generar Reporte. Requisito 25: Implementación de la vista para la generación de reportes. Descripción: El usuario intenta crear un reporte sin seleccionar filtros. Condiciones de Ejecución:  El usuario debe de estar autenticado en la aplicación.  El usuario autenticado debe de tener privilegios de administrador. Pasos de ejecución: 1. En la vista de generación de reportes, dar click en Generar Reporte. 2. Mostrar el archivo pdf. Resultado Esperado: Se generará y mostrará automáticamente el archivo pdf generado. Evaluación de la prueba: Ejecución correcta. Se cumplió con el resultado esperado. Tabla 48: Caso de Prueba 23. Caso de Prueba: 23- Generar Reporte, seleccionando un usuario sin tareas y proyectos asociados. Requisito 25: Implementación de la vista para la generación de reportes. Descripción: El usuario intenta crear un reporte, seleccionando a un usuario, el cual no dispones de una asociación con ninguna tarea o proyecto. Condiciones de Ejecución:  El usuario debe de estar autenticado en la aplicación.  El usuario autenticado debe de tener privilegios de administrador.  Debe de existir el usuario a filtrar. Pasos de ejecución: 1. En la vista de generación de reportes, seleccionar en el selector al usuario que se desea filtrar. Resultado Esperado: Se muestra una alerta indicando que el usuario no posee proyectos o tareas asociadas. Evaluación de la prueba: Ejecución correcta. Se cumplió con el resultado esperado. 121 Tabla 49: Caso de Prueba 24. Caso de Prueba: 24- Generar Reporte, utilizando los filtros. Requisito 25: Implementación de la vista para la generación de reportes. Descripción: El usuario intenta crear un reporte utilizando uno o varios filtros. Condiciones de Ejecución:  El usuario debe de estar autenticado en la aplicación.  El usuario autenticado debe de tener privilegios de administrador. Pasos de ejecución: 1. En la vista de generación de reportes, seleccionar en el selector al usuario que se desea filtrar. 2. Dar click en Generar Reporte. 3. Mostrar el archivo pdf. Resultado Esperado: Se generará y mostrará automáticamente el archivo pdf generado. Evaluación de la prueba: Ejecución correcta. Se cumplió con el resultado esperado. Tabla 50: Caso de Prueba 25. Caso de Prueba: 25- Generar Reporte con fechas incongruentes. Requisito 25: Implementación de la vista para la generación de reportes. Descripción: El usuario intenta crear un reporte, seleccionando una fecha fin menor que una fecha inicio. Condiciones de Ejecución:  El usuario debe de estar autenticado en la aplicación.  El usuario autenticado debe de tener privilegios de administrador. Pasos de ejecución: 1. En la vista de generación de reportes, seleccionar la fecha inicio y la fecha fin. 2. Dar click en Generar Reporte. Resultado Esperado: Se mostrara una alerta indicando que la fecha inicio tiene que ser menor que la fecha fin. Evaluación de la prueba: Ejecución correcta. Se cumplió con el resultado esperado. 122 Pruebas de usabilidad Las pruebas de usabilidad están enfocadas en medir el grado de facilidad de uso y eficiencia de una aplicación, recolectando de esta forma información directamente de parte de los usuarios externos, ya sean profesionales, con conocimiento en el área o personal no experto en el área. Esto se realiza con el fin de poder asegurar la calidad del software en pro de satisfacer al cliente. Para la solución de la aplicación desarrollada, se realizaron una serie de encuestas a usuarios finales para conocer sus impresiones acerca del mismo. La encuesta se aplicó a un grupo de diez (10) profesionales del área de computación. Las preguntas que conforman la encuesta son las siguientes: 1. ¿Le parece consistente el diseño de la aplicación? 2. ¿La interfaz de usuario le parece apropiada? 3. ¿Le resulta fácil navegar a través de las distintas pantallas? 4. ¿Considera sencilla la edición y creación d ellos distintos elementos de la aplicación? 5. ¿Le resulta eficiente el proceso de almacenar horas en la aplicación? 6. ¿Le parece apropiado el generador de reportes de la aplicación? 7. ¿En términos generales, le resulta atractivo la aplicación? Las opciones disponibles como respuesta a estas preguntas son: - Muy de acuerdo - De acuerdo - Algo de acuerdo - En desacuerdo A continuación, se exponen los resultados obtenidos a partir de la realización de la encuesta de aceptación. 123 Para la primera (1ra) pregunta se obtuvieron los resultados mostrados en la siguiente figura, el cincuenta por ciento (50%) manifestó estar “Muy de acuerdo” con esta pregunta y un cincuenta por ciento (50%) “De acuerdo”. Los resultados en el gráfico siguiente. Figura 50: Gráfico de la pregunta 1 Para la segunda (2da) pregunta se obtuvieron los resultados mostrados en la siguiente figura, el cuarenta por ciento (40%) manifestó estar “De acuerdo” con esta pregunta, un treinta por ciento (30%) “Muy de acuerdo”, un veinte por ciento (20%) “Algo de acuerdo” y un diez por ciento (10%) “En desacuerdo”. Los resultados en el gráfico siguiente. Figura 51: Gráfico de la pregunta 2. 124 Para la tercera (3ra) pregunta se obtuvieron los resultados mostrados en la siguiente figura, el setenta por ciento (70%) manifestó estar “De acuerdo” con esta pregunta y un treinta por ciento (30%) “Muy de acuerdo”. Los resultados en el gráfico siguiente. Figura 52: Gráfico de la pregunta 3. Para la cuarta (4ta) pregunta se obtuvieron los resultados mostrados en la siguiente figura, el setenta por ciento (70%) manifestó estar “Muy de acuerdo” con esta pregunta, un veinte por ciento (20%) “Algo de acuerdo” y un diez por ciento (10%) “De acuerdo”. Los resultados en el gráfico siguiente. Figura 53: Gráfico de la pregunta 4. 125 Para la quinta (5ta) pregunta se obtuvieron los resultados mostrados en la siguiente figura, el cuarenta por ciento (40%) manifestó estar “Muy de acuerdo” con esta pregunta, un cuarenta por ciento (40%) “De acuerdo”, un diez por ciento (10%) “Algo de acuerdo” y un diez por ciento (10%) “En desacuerdo”. Los resultados en el gráfico siguiente. Figura 54: Gráfico de la pregunta 5. Para la sexta (6ta) pregunta se obtuvieron los resultados mostrados en la siguiente figura, el sesenta por ciento (60%) manifestó estar “Muy de acuerdo” con esta pregunta, un treinta por ciento (30%) “de acuerdo” y un diez por ciento (10%) “Algo de acuerdo”. Los resultados en el gráfico siguiente. Figura 55: Gráfico de la pregunta 6. 126 Para la séptima (7ma) y última pregunta se obtuvieron los resultados mostrados en la siguiente figura, el setenta por ciento (70%) manifestó estar “De acuerdo” con esta pregunta, un veinte por ciento (20%) “Algo de acuerdo” y un diez por ciento (10%) “En desacuerdo”. Los resultados en el gráfico siguiente. Figura 56: Gráfico de la pregunta 7. Además de las 7 preguntas realizadas anteriormente, se les solicitó a los participantes que dieran una opinión al respecto de la aplicación, de las distintas opiniones y recomendaciones, se optó por la modificación (generalmente visuales) de ciertos aspectos de la aplicación, dichas modificaciones fueron mínimas, las cuales son las siguientes: - Un hipervínculo al nombre de la aplicación, que permita redirigir a la raíz de la aplicación (/). - Un icono de una papelera en el header de las tablas, específicamente en la columna de eliminación, esto aplica a las vistas principales de gestión de proyectos, tareas y asociaciones. 127 Figura 57: Screenshot de la vista principal de gestión de proyecto, mostrando el icono. - Modificar los colores del calendario, para que se asemejen a la estética general de la aplicación . Figura 58: Screenshot del calendario con las modificaciones del color. - Cambiar el imput de tipo “number” a tipo “checkbox” en el dato de “Activo” en la edición y creación de proyectos y tareas. Figura 59: Screenshot de la vista de edición de tareas, mostrando el checkbox en Activo. - Al generar un pdf, el mismo será abierto en una pestaña nueva. De igual forma se realizaron pruebas funcionales sobre la aplicación desde el punto de vista del usuario, en las cuales se probaron las funcionalidades y requerimientos de la aplicación de manera individual, de esta forma determinar los 128 posibles errores y fallas en la aplicación luego de su proceso de desarrollo. Las pruebas fueron comprendidas por las operaciones que el usuario podía realizar y se evaluó el resultado esperado contra el resultado obtenido, estas pruebas fueron realizadas al finalizar el sprint 3, 4 y 5. Las pruebas funcionales realizadas no arrojaron inconveniente alguno en las funcionalidades probadas, por lo que es posible para el usuario cumplir con todos los flujos requeridos para la aplicación. 4.4 Interfaces Finales La aplicación cuenta con un total de 15 vistas, a continuación se describirán las diferentes vistas que posee la aplicación. Página Principal, muestra cuales son las diferentes opciones que disponen en la aplicación a los usuarios que se encuentren en una sesión activa en la aplicación, estas opciones mostradas dependen del nivel de permisos que posea el usuario. Figura 60: Screenshot de la Página Principal. 129 Página de Login, permite a los usuarios poder iniciar sesión en la aplicación utilizando su cedula de identidad y su contraseña. Figura 61: Screenshot de la Página de Login. Página de Registro, permite a los usuarios poder registrarse en la aplicación. Figura 62: Screenshot de la Página de Registro. 130 Página Principal Gestión de Usuarios, muestra a los diferentes usuarios que se encuentran registrado en el sistema, en esta vista se pueden editar y eliminar dichos usuarios. Figura 63: Screenshot de la Página Principal Gestión Usuarios. Página Modificar Usuario, muestra al usuario seleccionado anteriormente, permitiendo poder editar sus datos asociados. Figura 64: Screenshot de la Página Modificar Usuarios. 131 Página Principal de Gestión de Proyectos, muestra los diferentes proyectos registrados en el sistema, permitiendo poder acceder a la vista de creación y edición, además de poder eliminar un proyecto específico. Figura 65: Screenshot de la Página Principal de Gestión de Proyectos. Página de Creación de Proyectos, permite crear un nuevo proyecto, seleccionando el nombre, si el proyecto se encuentra activo o no, el inicio y fin del proyecto y la alguna observación. Figura 66: Screenshot de la Página de Creación de Proyectos. 132 Página de Modificación de Proyectos, muestra el proyecto seleccionado anteriormente, permitiendo poder editar sus datos asociados. Figura 67: Screenshot de la Página de Modificación de Proyectos. Página Principal de Gestión de Tareas, muestra las diferentes tareas registradas en el sistema, permitiendo poder acceder a la vista de creación y edición, además de poder eliminar una tarea en específico. Figura 68: Screenshot de la Página Principal de Gestión de Tareas. 133 Página de Creación de Tareas, permite crear una nueva tarea, seleccionando el nombre, si la tarea se encuentra activa o no, el inicio y fin de la tarea, una observación y al proyecto que pertenecerá dicha tarea. Figura 69: Screenshot de la Página de Creación de Tareas. Página de Modificación de Tareas, muestra la tarea seleccionada anteriormente, permitiendo poder editar sus datos asociados. Figura 70: Screenshot de la Página de Modificación de Tareas. 134 Página Principal de Gestión de Asignaciones, muestra las diferentes asignaciones que se encuentran entre los usuarios, los proyectos y las tareas. Figura 71: Screenshot de la Página Principal de Gestión de Asignaciones. Página de Creación de Asignaciones, permite crear una nueva asignación, seleccionando entre el usuario, el proyecto y la tarea que se deseen relacionar. Figura 72: Screenshot de la Página de Creación de Asignaciones. 135 Página de Administración de Horas, muestra las distintas horas semanales que se encuentran asociadas al usuario de la sesión actual con las tareas y proyectos asignados. Figura 73: Screenshot de la Página de Administración de Horas. Página Principal de Reportes, permite seleccionar varios filtros, los cuales seran utilizados para crear un reporte. Figura 74: Screenshot de la Página Principal de Reportes. 136 Conclusiones y Recomendaciones Una vez completado el objetivo principal del presente Trabajo Especial de Grado, se puede afirmar que se logró exitosamente el desarrollo y construcción de una aplicación para poder dar un apoyo a líderes como a equipos de trabajo que se encuentren participando en el desarrollo de uno o varios proyectos, el mismo, permitiendo poder administrar y gestionar distintos proyectos, tareas, equipos de desarrollo de forma paralela. El estudio previo al desarrollo de la aplicación, ayudó a determinar las características inherentes de cualquier proyecto, debido a que, aunque los mismos tienen necesitases y motivaciones únicas, el planteamiento y estructuración de los proyectos son semejantes, ya que, en su estructura más simple, son objetivos a ser cumplidos a través de una serie de pasos (tareas) asignadas ante los distintos elementos que conforman al equipo de trabajo. Por otra parte, se puede determinar la importancia de lo que fue seleccionar una metodología que cumpla con las necesidades indicadas para este trabajo especial de grado, de seguir los diferentes pasos que conforma dicha metodología de desarrollo permitiendo poder cumplir de manera efectiva los objetivos planteados, específicamente, utilizando a una modificación de la metodología Scrum, que manteniendo su agilidad y flexibilidad permitió un desarrollo rápido y eficiente para la aplicación, manteniendo un control de cada una de las diferentes etapas de desarrollo permitiendo tener estructurado y organizado las diferentes tareas a realizar. La selección de las diferentes tecnologías utilizadas para el desarrollo del Trabajo Especial de Grado fue acertada, ya que se pudieron cumplir con los diferentes requerimientos establecidos previamente. 137 Como recomendaciones para desarrollos futuros: - Agregar responsive a la aplicación, permitiendo a los usuarios poder acceder a la aplicación a través de dispositivos móviles. - Agregar un sistema de notificación de parte de los usuarios ante sus supervisores. - Expandir el sistema de gestión de usuarios, permitiendo recuperar cuentas, recuperar claves y asignar tareas de forma automática tomando en cuenta el correo de su supervisor. 138 Referencias Bibliográficas y Digitales Alex, C. M. (Ed.). (2013). Guía de los Fundamentos de la Dirección de Proyectos, Quinta Edición (Guía del PMBOK). Recuperado de https://www.edu.xunta.gal/centros/cfrpontevedra/aulavirtual2/ pluginfile.php/13688/mod_folder/content/0/ libros_pmbok_guide5th_spanish.pdf?forcedownload=1 Alonso, F. S. (2006). Sistemas de Información Geográfica. Recuperado de http://www.um.es/geograf/sigmur/sigpdf/temario_9.pdf FPDF. (2018). ¿Qué es FPDF?. Recuperado de http://www.fpdf.org/ GUÍA PARA LA FORMULACIÓN DE PROYECTOS. (s.f). Recuperado de http://www.upm.uy/SiteCollectionDocuments/fundacion/GU %C3%8DA-PARA-LA-FORMULACI%C3%93N-DE-PROYECTOS-FUNDACI%C3%93N- UPM.pdf Gutiérrez, C. G. (Ed.). (2008) Cómo funciona la Web. Recuperado de http://www.ciw.cl/libroWeb-NV.pdf Herrarte, P. (2012). Fundamentos de funcionamiento de una aplicación web. Recuperado de http://www.devjoker.com/contenidos/articulos/518/Fundamentos-de- funcionamiento-de-una-aplicacion-web.aspx Luján, S. M. (2001). Programación en Internet: clientes web. Recuperado de https://rua.ua.es/dspace/bitstream/10045/16994/1/sergio_lujan- programacion_en_internet_clientes_web.pdf Luján, S. M. (2002). Programación de aplicaciones web: historia, principios básicos y clientes web. Recuperado de https://rua.ua.es/dspace/bitstream/10045/16995/1/sergio_lujan- programacion_de_aplicaciones_web.pdf 139 https://rua.ua.es/dspace/bitstream/10045/16994/1/sergio_lujan-programacion_en_internet_clientes_web.pdf https://rua.ua.es/dspace/bitstream/10045/16994/1/sergio_lujan-programacion_en_internet_clientes_web.pdf https://rua.ua.es/dspace/bitstream/10045/16995/1/sergio_lujan-programacion_de_aplicaciones_web.pdf https://rua.ua.es/dspace/bitstream/10045/16995/1/sergio_lujan-programacion_de_aplicaciones_web.pdf https://www.edu.xunta.gal/centros/cfrpontevedra/aulavirtual2/pluginfile.php/13688/mod_folder/content/0/libros_pmbok_guide5th_spanish.pdf?forcedownload=1 https://www.edu.xunta.gal/centros/cfrpontevedra/aulavirtual2/pluginfile.php/13688/mod_folder/content/0/libros_pmbok_guide5th_spanish.pdf?forcedownload=1 https://www.edu.xunta.gal/centros/cfrpontevedra/aulavirtual2/pluginfile.php/13688/mod_folder/content/0/libros_pmbok_guide5th_spanish.pdf?forcedownload=1 http://www.devjoker.com/contenidos/articulos/518/Fundamentos-de-funcionamiento-de-una-aplicacion-web.aspx http://www.devjoker.com/contenidos/articulos/518/Fundamentos-de-funcionamiento-de-una-aplicacion-web.aspx http://www.ciw.cl/libroWeb-NV.pdf http://www.upm.uy/SiteCollectionDocuments/fundacion/GU%C3%8DA-PARA-LA-FORMULACI%C3%93N-DE-PROYECTOS-FUNDACI%C3%93N-UPM.pdf http://www.upm.uy/SiteCollectionDocuments/fundacion/GU%C3%8DA-PARA-LA-FORMULACI%C3%93N-DE-PROYECTOS-FUNDACI%C3%93N-UPM.pdf http://www.upm.uy/SiteCollectionDocuments/fundacion/GU%C3%8DA-PARA-LA-FORMULACI%C3%93N-DE-PROYECTOS-FUNDACI%C3%93N-UPM.pdf http://www.um.es/geograf/sigmur/sigpdf/temario_9.pdf Mark Otto, y Jacob Thornton. (2018). About. Recuperado de https://getbootstrap.com/docs/4.1/about/overview/ Mateu, C. (2004). Desarrollo de aplicaciones web. Recuperado de http://libros.metabiblioteca.org/bitstream/001/591/1/004%20Desarrollo%20de %20aplicaciones%20web.pdf Menzinsky, A. et al. (2016). Scrum Manager Troncal I – Scrum Master. Recuperado de http://scrummanager.net/files/scrum_manager.pdf Muñoz, I. (2017). Los proyectos y sus características principales. Recuperado de https://blogs.imf-formacion.com/blog/corporativo/gestion- empresarial/que-son-proyectos-caracteristicas/ Pérez V. (2007). ¿Qué son las bases de datos?. Recuperado de http://www.maestrosdelweb.com/que-son-las-bases-de-datos/ Pérez, A. (2016). ¿Conoces la verdadera historia de la gestión de proyectos?. Recuperado de http://www.ceolevel.com/conoces-la-verdadera-historia-de-la-gestion-de- proyectos Punto Abierto. (2016). Qué es Bootstrap y cuáles son sus ventajas. Recuperado de https://puntoabierto.net/blog/que-es-bootstrap-y-cuales-son- sus-ventajas Tamayo, y Tamayo Mario. (2014). El proceso de la Investigación Científica, (5ª ed) México: Editorial Limusa, Noriega Editores. TRIANGULO DE HIERRO EN GESTIÓN DE PROYECTOS. (2017). Recuperado de http://mobilizaacademy.com/triangulo-hierro-gestion- proyectos/ Vela F. y Schmidt S. (2016). El triángulo de hierro en Gestión de Proyectos. Recuperado de http://gestiondeproyectos-master.com/el-triangulo-de-hierro- en-gestion-de-proyectos/ 140 http://gestiondeproyectos-master.com/el-triangulo-de-hierro-en-gestion-de-proyectos/ http://gestiondeproyectos-master.com/el-triangulo-de-hierro-en-gestion-de-proyectos/ http://www.ceolevel.com/conoces-la-verdadera-historia-de-la-gestion-de-proyectos http://www.ceolevel.com/conoces-la-verdadera-historia-de-la-gestion-de-proyectos http://scrummanager.net/files/scrum_manager.pdf http://mobilizaacademy.com/triangulo-hierro-gestion-proyectos/ http://mobilizaacademy.com/triangulo-hierro-gestion-proyectos/ https://blogs.imf-formacion.com/blog/corporativo/gestion-empresarial/que-son-proyectos-caracteristicas/ https://blogs.imf-formacion.com/blog/corporativo/gestion-empresarial/que-son-proyectos-caracteristicas/ http://libros.metabiblioteca.org/bitstream/001/591/1/004%20Desarrollo%20de%20aplicaciones%20web.pdf http://libros.metabiblioteca.org/bitstream/001/591/1/004%20Desarrollo%20de%20aplicaciones%20web.pdf https://puntoabierto.net/blog/que-es-bootstrap-y-cuales-son-sus-ventajas https://puntoabierto.net/blog/que-es-bootstrap-y-cuales-son-sus-ventajas http://www.maestrosdelweb.com/que-son-las-bases-de-datos/ https://getbootstrap.com/docs/4.1/about/overview/ Violeta, J. M. de la C. (2011). Origen de la gestión de proyectos [Mensaje en un blog]. EOI. Recuperado de http://www.eoi.es/blogs/madeon/2011/12/18/origen-de-la-gestion-de- proyectos/ 141 http://www.eoi.es/blogs/madeon/2011/12/18/origen-de-la-gestion-de-proyectos/ http://www.eoi.es/blogs/madeon/2011/12/18/origen-de-la-gestion-de-proyectos/ 1.1 Antecedentes del problema 1.2 Planteamiento del problema 1.3 Objetivos 1.3.1 Objetivo General 1.3.2 Objetivos Específicos 1.4 Justificación e importancia 1.5 Alcance 1.6 Solución 2.1 Proyecto 2.2 Características de un Proyecto 2.3 Dirección de Proyecto 2.4 Áreas de Conocimiento de la Dirección de Proyectos 2.4.1 Gestión de la Integración 2.4.2 Gestión del Alcance 2.4.3 Gestión del Tiempo 2.4.4 Gestión de Costes 2.4.5 Gestión de Calidad 2.4.6 Gestión de Recursos Humanos 2.4.7 Gestión de Comunicación 2.4.8 Gestión de Riesgos 2.4.9 Gestión de Adquisiciones 2.4.10 Gestión de los Interesados 2.5 Software de Gestión de Proyectos 2.6 Triángulo de Hierro 2.7 Aplicaciones Web 2.7.1 Servidor 2.7.2 Cliente 2.7.3 Bootstrap 2.7.4 PHP 2.7.4.1 FPDF 2.8 Base de Datos 2.8.1 Sistema Manejador de Base de Datos 3.1 Métodos de Investigación 3.2 Etapas de la Metodología de Investigación 3.3 Adaptación Metodológica 4.1 Herramientas de Solución 4.2.1 Herramientas Servidor de la Aplicación 4.2.2 Base de Datos 4.3 Diseño de la Aplicación 4.3.1 Sprint 1 4.3.2 Sprint 2 4.3.3 Sprint 3 4.3.4 Sprint 4 4.3.4 Sprint 5 4.4 Interfaces Finales