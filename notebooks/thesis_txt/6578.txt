Microsoft Word - Tesis_Final.docx UNIVERSIDAD CENTRAL DE VENEZUELA FACULTAD DE CIENCIAS ESCUELA DE COMPUTACIÓN CISI DESARROLLO DE UNA APLICACIÓN WEB PARA EL CONTROL NUTRICIONAL Y DE EJERCICIOS QUE APOYE A LOS INSTRUCTORES FÍSICOS Trabajo Especial de Grado presentado ante la Ilustre Universidad Central de Venezuela por los Bachilleres Johaney Carolina Meza Quinto Anthony Merquiades Herrera Ferrebus Para optar al título de Licenciado en Computación Tutor: Profesor Franklin Sandoval Caracas, julio 2017 DEDICATORIAS Quiero dedicar este trabajo especial de grado primeramente a mis padres y a mis hermanos, ya que han sido mi apoyo y fortaleza todos estos años por brindarme sus consejos e impulsándome a ser cada día mejor. Esto es para ustedes, para que se sientan orgullosos de mí. Madre, Padre y hermanos Carlos y Johana, les agradezco sinceramente por creer en mí y me siento realmente afortunada de tenerlos en mi vida. También dedico este trabajo a toda mi familia en especial a mi abuela y amigos que me han apoyado muchísimo a lo largo de mi carrera y para culminar este proyecto, en especial a Susana Hernández, por ser una amiga y compañera de estudios que me apoyo siempre para que lograra mis objetivos, al igual que a mis amigos Yanny Carolina, Israel Ortiz, José Parada y José Fiore. Dedico también este trabajo a mi novio Jesús Cardozo por estar allí en todo momento, Y por ultimo pero no menos importante a dos personitas que desde el cielo han sido una lucecita y que en vida me dieron mucho Antonio Quinto y Edgar Ruiz, los amaré siempre. Johaney Meza Quinto A mi madre, por el inmensurable esfuerzo que realizaste para apoyarme durante el desarrollo de mi carrera profesional, por tu paciencia y comprensión en los momentos difíciles y tu ayuda incansable. Gracias a tus sacrificios pudimos cumplir nuestros sueños y tenemos la posibilidad de ver hacia el futuro sabiendo que contamos con las herramientas necesarias para construir lo que deseamos. Mis logros son tuyos. A mis viejos amigos Joaquín Alegre, Fernando Morales y "gocho", por tantos momentos de estudio, lágrimas y sonrisas, indudablemente aprendí mucho de ustedes, de no ser por estar allí, la carrera nunca hubiese sido tan especial ni tendría tantos recuerdos. A mi amigo Carlos Riera, el cual me dio tantos regaños y nunca se negó a impartir sus conocimientos, gracias por no permitir que me saliera del camino, diste mano dura y palabras de aliento en el momento justo. A mis compañeros y amigos que siempre tuvieron palabras de ayuda, escucharon los problemas y las victorias. A todos ustedes, que Dios los bendiga y los guarde en todo momento. Anthony Herrera ii AGRADECIMIENTOS Queremos agradecer a todas las personas que de alguna u otra manera estuvieron involucrados en el desarrollo de este Trabajo Especial de Grado. Significa muchísimo para nosotros que nos hayan apoyado en el transcurso de esta travesía, y que hayan contribuido con consejos, conocimiento, entre tantas cosas. Primeramente deseamos agradecer de corazón a nuestros familiares por mantenerse firmes con nosotros e impulsarnos a dar lo mejor de nosotros, ser nuestro apoyo y sostén en todo momento, además de demostrarnos su amor, cariño y preocupación por lograr nuestros objetivos personales y profesionales, especialmente a nuestras madres y padres, ya que ellos desde muy pequeños se preocuparon por educarnos y enseñarnos los principios morales y éticos que nos van a ayudar a lo largo de nuestra carrera profesional y nuestra vida personal. Gracias a nuestros amigos y compañeros por acompañarnos durante este camino, donde crecimos juntos y compartimos tantos momentos llenos de risas, alegría, tristeza, desilusión, angustia, triunfos, entre tantas cosas. Gracias por estar presente y por permitirnos participar con ustedes en todas las experiencias que indudablemente nos enriquecieron. Gracias a nuestro tutor y profesor, Franklin Sandoval, quien se ha caracterizado por ser no sólo un profesor para nosotros, sino una excelente persona y un amigo. Gracias profe por guiarnos en este arduo camino y por brindarnos su apoyo en todo momento. Su entrega y dedicación son invalorables para nosotros como sus alumnos. Nuestros mejores deseos para usted en su carrera profesional y en su vida personal. Muchas bendiciones. Agradecemos a los profesores de la Universidad Central de Venezuela, en especial a la Facultad de Ciencias por recibirnos como sus hijos y por brindarnos todos los conocimientos necesarios, las metodologías y, principalmente las experiencias y la capacidad de análisis para la resolución de situaciones o problemas que se nos puedan presentar en la ciencia de la Computación para caracterizarnos como profesionales exitosos y dar lo mejor de nosotros cada día en nuestra carrera de la vida. iii Universidad Central de Venezuela Facultad de Ciencias Escuela de Computación Centro de Investigación y Sistemas de Información (CISI) RESUMEN El presente trabajo especial de grado tiene como propósito ofrecer una aplicación enfocada al área nutricional y fitness para proveerles a los usuarios la posibilidad de controlar su ingesta calórica. Inicialmente se realizó una revisión bibliográfica y de sistemas usados actualmente para brindar una innovación en el área mencionada. Posteriormente, se desarrolló bajo la metodología de AgilUs una aplicación Web para la planificación de una dieta adaptada a los gustos e intereses de los usuarios y asimismo de una rutina de ejercicios en un periodo de tiempo específico, permitiendo orientar las funcionalidades del sistema a las necesidades e inclinaciones del usuario tomando en cuenta los principios de la usabilidad desde las primeras iteraciones del desarrollo. El sistema le ofrece al usuario realizar una planificación en cuanto a alimentación y ejercicios adaptados a los gustos y características físicas del usuario. Se incluye un módulo de planificación para las recetas deseadas a consumir y los ejercicios a realizar usuario, se genera una lista de compras de acuerdo a la planificación de las recetas escogidas y a los comensales el cual puede ser visualizado al inicio cuando se ingresa; un módulo de Recetas que permite visualizar recetas creadas por defecto y crear y editar recetas personales y un módulo de Ejercicios para visualizar los ejercicios cargados por el entrenador del mismo. El motivo de usar la metodología AgilUs en la realización del software es por ser una metodología centrada en el usuario en todas las fases del desarrollo y porque se basa en los principios de usabilidad que garantiza que la interfaz sea amigable y fácil de usar. Como conclusión final se puede agregar que es factible que el sistema se pueda incorporar como un emprendimiento en el negocio fitness y de salud entre los que se puede nombrar gimnasios y nutricionistas respectivamente, el cual puede ampliarse en el ámbito de gastronomía y abarcar otras áreas de negocio tales como supermercados, restaurantes, entre otros, consiguiendo que la aplicación de la metodología de desarrollo del software sea efectiva y afianzándose como un sistema potencial con nuevos desarrollos a futuro. Palabras Clave: Aplicación Web, NodeJs, Express, AngularJs, PostgreSQL, Bootstrap, AgilUs, Control Nutricional, Recetas, Ejercicios, Plan Nutricional, Instructor físico. iv INDICE GENERAL INTRODUCCIÓN ............................................................................................. 8 CAPÍTULO 1 PROBLEMA DE INVESTIGACIÓN ..................................... 11 1.1 Planteamiento del problema .............................................................. 11 1.2 Objetivos del Trabajo Especial de Grado ........................................ 14 1.2.1 Objetivo General .......................................................................... 14 1.2.2 Objetivos Específicos .................................................................. 15 1.3 Justificación ......................................................................................... 15 1.4 Alcance ................................................................................................. 17 1.5 Metodología de Desarrollo: AgilUs ................................................... 18 CAPÍTULO 2 MARCO CONCEPTUAL ...................................................... 24 2.1 Entrenamiento Físico .......................................................................... 24 2.2 Nutrición ............................................................................................... 25 2.3 Sistemas de información .................................................................... 25 2.3.1 Aplicaciones Web ........................................................................ 26 2.4 Arquitectura Cliente – Servidor ......................................................... 27 2.5 Lenguajes de Programación para Desarrollo Web ........................ 28 2.5.1JavaScript ...................................................................................... 30 2.6 Marcos de Trabajo para el Desarrollo Web (frameworks web) .... 31 2.6.1 AngularJS ..................................................................................... 32 2.7 Servicios Web ...................................................................................... 32 2.8 Servidores web .................................................................................... 34 2.8.1 Node.JS ......................................................................................... 35 2.8.2 Express ......................................................................................... 35 2.9 Git .......................................................................................................... 36 2.10 Sistemas manejadores de bases de datos (SMBD) .................... 37 2.10.1 Bases de Datos Relacionales (SQL) ...................................... 38 CAPÍTULO 3 MARCO APLICATIVO .......................................................... 41 3.1 Fase de requisitos ............................................................................... 43 3.1.1 Tormenta de ideas ....................................................................... 43 v 3.1.2 Encuesta ....................................................................................... 44 3.1.3 Requerimientos Funcionales y No Funcionales ...................... 49 3.1.4 Perfiles de usuario ...................................................................... 50 3.2 Fase de Análisis ...................................................................................... 50 3.2.1 Casos de Uso de FitPlanner ...................................................... 50 3.2.2 Modelo de Objetos del Dominio ................................................ 61 3.2.3 Patrones de interacción .............................................................. 62 3.3 Fase de Prototipaje ............................................................................. 66 3.3.1 Aspectos de Accesibilidad y Sociabilidad ................................ 66 3.3.2 Evaluación Heurística ................................................................. 67 3.3.3 Lista de Comprobación ............................................................... 69 3.4 Fase de Entrega - Resultados .......................................................... 73 3.4.1 Prototipo Funcional de la Aplicación (Capturas) ..................... 73 3.4.2 Pruebas de Aceptación ............................................................... 78 CONCLUSIONES .......................................................................................... 83 RECOMENDACIONES Y TRABAJOS FUTUROS ................................... 85 REFERENCIAS BIBLIOGRÁFICAS ........................................................... 87 ANEXOS ......................................................................................................... 90 vi INDICE DE FIGURA Figura 1. Ciclo de vida en la metodología AgilUs ..................................... 20 Figura 2. Intercambio de mensajes con REST ......................................... 33 Figura 3. Intercambio de mensajes con JSON. ........................................ 34 Figura 4. Los tres estados de Git y sus estados ...................................... 37 Figura 5. Arquitectura de la solución propuesta. ...................................... 41 Figura 6. Modelo de la base de datos. ....................................................... 42 Figura 7. Tormenta de Ideas. ....................................................................... 43 Figura 8. Casos de Nivel 1. .......................................................................... 53 Figura 9. Casos de Uso nivel 2 ................................................................... 56 Figura 10. Modelo de dominio de FitPlanner ............................................. 62 Figura 11. Prototipo Inicial Home de Fitplanner. ....................................... 64 Figura 12. Interfaz de agregar Recetas – Ejercicios. ............................... 65 Figura 13. Interfaz del Home de FitPlanner ............................................... 73 Figura 14. Interfaz de Ver Todas las Recetas ........................................... 74 Figura 15. Interfaz del Menú de Navegación de FitPlanner .................... 75 Figura 16. Interfaz de Ver Ejercicios ........................................................... 75 Figura 17. Interfaz del Detalle de una receta ............................................ 76 Figura 18. Interfaz Planificación del usuario en FitPlanner ..................... 77 Figura 19. Interfaz de Lista de Compras de FitPlanner ........................... 77 Figura 20. Encuesta de Pruebas de Aceptación - FitPlanner ................ 79 Figura 21. Anexo 1. Servicios Gold´s Gym Venezuela ............................ 90 vii INDICE DE TABLA Tabla 1: Popularidad de los lenguajes de programación ........................ 29 Tabla 2: Lenguajes de programación más utilizados en web. ................ 29 Tabla 3: Frameworks web valorados (usuarios). ...................................... 31 Tabla 4: Ranking de los SMBD al mes de enero del año 2017. ............. 38 Tabla 5: Especificación de los casos de uso del nivel 1 – CU #1 .......... 53 Tabla 6: Especificación de los casos de uso del nivel 1 – CU #2 .......... 54 Tabla 7: Especificación de los casos de uso de nivel 2 – CU #3 ........... 57 Tabla 8: Especificación de los casos de uso de nivel 2 – CU #4 ........... 58 Tabla 9: Especificación de los casos de uso de nivel 2 – CU #5 ........... 58 Tabla 10: Especificación de los casos de uso de nivel 2 – CU #6 ......... 59 Tabla 11: Especificación de los casos de uso de nivel 2 – CU #7 ......... 60 Tabla 12: Especificación de los casos de uso de nivel 2 – CU #8 ......... 60 Tabla 13: Detalle de patrón de interacción de selección de fechas ....... 62 Tabla 14: Evaluación Heurística y su análisis ........................................... 69 Tabla 15: Lista de comprobación aplicada ................................................ 72 INTRODUCCIÓN En la actualidad con el gran uso de la tecnología se ha originado la necesidad de tener la información al alcance de la mano para satisfacer todas las inquietudes, dudas, deseos entre otras cosas. Esta tecnología se basa en sistemas de información o aplicaciones que automatizan procesos que deben cumplir un funcionamiento específico tales como entretener, educar, informar, entre otros. No es un secreto que con el pasar del tiempo se incrementa en la sociedad a través de los medios o redes sociales un modelo enfocado a cuidar la salud, cuerpo y mente, de manera que se pueda tener una mejor calidad de vida. Tener un cuerpo perfecto no solo es la preocupación de las mujeres, sino también de los hombres, por tanto, los temas de la salud y la estética, que van de la mano con las dietas para tener una alimentación balanceada son temas muy sonados en el día a día. Actualmente a nivel mundial existe una cantidad considerable de gimnasios, estéticas, nutricionistas que se esfuerzan cada vez más por innovar sus técnicas, métodos y servicios para proveer a sus clientes el mejor de los servicios y de esa forma poder ayudarlos a verse mejor y sentirse mejor. De acuerdo a lo mencionado anteriormente hay un gran interés en los gimnasios y en los instructores de los mismos apoyarse en una aplicación que sea accesible a sus clientes, sencilla de usar y que tenga la función de ofrecer un servicio integral y personalizado donde se tome en cuenta los intereses, gustos y condiciones de cada individuo, y en el que pueda realizarse una planificación de recetas o de dieta balanceada y ejercicios físicos que lo ayude a alcanzar sus objetivos. Una buena alimentación siguiendo con un régimen acorde a las necesidades del cuerpo es esencial para obtener el peso ideal, y como 9 apoyo acompañarlos con ejercicio físico para definir ciertas zonas corporales. Según Pérez (2008), una dieta es el conjunto de las sustancias alimenticias que componen el comportamiento nutricional de los seres vivos. El concepto proviene del griego díaita, que significa “modo de vida”. La dieta, por lo tanto, resulta un hábito y constituye una forma de vivir. Se conoce como ejercicio físico a la realización de movimientos corporales planificados, repetitivos, y en ocasiones supervisados por un instructor, con el objetivo de estar en forma física y gozar de una buena salud. En este Trabajo Especial de Grado se presenta un programa que permita el control de la ingesta calórica diaria a través de la preparación de recetas personalizadas o a gusto del usuario, reduciendo las posibilidades de las decisiones al azar de la alimentación diaria; por otro lado provee una variedad de ejercicios adaptados a cada usuario según sus requerimientos, de forma que le permita apoyarse en la aplicación para realizar una rutina diaria y alcanzar su peso y cuerpo ideal. Entre las justificaciones del desarrollo de esta investigación se puede mencionar la falta de una aplicación web que integre una planificación de régimen nutricional y ejercicios físicos de forma personalizada, tomando en cuenta gustos, condiciones físicas e intereses del usuario; la necesidad que tiene la gran cantidad de gimnasios y de instructores personales de ofrecer un servicio integrado y accesible a sus clientes; y las miles de personas que se suman al mundo fitness y que no tienen una herramienta al alcance que los ayude a planificar su alimentación y ejercicios para lograr su objetivo de sentirse y verse bien Este documento se compone de tres capítulos donde se describe la problemática actual, su justificación y objetivos así como los conceptos necesarios que se relacionan con el desarrollo de la aplicación, la metodología usada y su implementación. A continuación se detalla cada uno de los capítulos. 10 Capítulo I: Problema de Investigación. Se define el problema actual, su solución, así como los objetivos generales y específicos a cumplir en este Trabajo Especial de Grado, y la justificación del mismo. También se describe la metodología AgilUs usada para el desarrollo del software Capítulo II: Marco Conceptual. Se describe los conceptos necesarios referentes a la investigación que dará soporte a los procesos involucrados en el análisis, desarrollo e implementación de la aplicación web para el control nutricional. También se define otros puntos relacionados con el área de nutrición que soporta la construcción del sistema web mencionado. Capítulo III: Marco Aplicativo. Se presenta la metodología adaptada al desarrollo de la aplicación web para el control nutricional y físico del usuario. Se describe todos los pasos involucrados en el desarrollo de la solución planteada, así como los artefactos generados en la realización del software. Por último se presenta las conclusiones, recomendaciones y referencias bibliográficas de la presente investigación. 11 CAPÍTULO 1: PROBLEMA DE INVESTIGACIÓN En este capítulo se describe el contexto del problema, luego se expone el objetivo general y los objetivos específicos, así como la justificación de la realización del presente Trabajo de Especial de Grado. 1.1 Planteamiento del problema Se incrementa de forma notable la cantidad de personas que desean entrar en el mundo fitness o aquellas que se sienten con la necesidad de tener un cuerpo esbelto por lo que la sociedad transmite. En cuerpo sano hay una mente sana, esta consigna muy popular se ha hecho cada vez más impositiva por muchos factores como el bullying, el hecho de quererse ver o imitar a algún(a) modelo(a) que es admirado(a) por la mayoría de las personas, por tratar de encajar mejor en la sociedad y lograr mayor aceptación o simplemente para sentirse saludable y en buenas condiciones físicas. En Latinoamérica hay que destacar que está ocurriendo una superposición alimentaria en la comunidad, es decir, se observa al mismo tiempo el sobrepeso y el bajo peso. Esto se debe a las dietas predominantes en Latinoamérica, en la que prevalecen los alimentos procesados, ricos en grasas saturadas, azúcares y proteínas de origen animal. Según la Dra. López (Fundación Bengoa, 2013) en ese ambiente de carencias y mala alimentación, se presenta la llamada "Doble carga nutricional". Se le da ese nombre porque al mismo tiempo la población sufre de desnutrición y sobrepeso. Estas condiciones, a pesar de ser idealmente antagónicas, tienen un mismo origen: la mala alimentación. 12 Aunque la nutrición es importante para un desempeño físico en la vida cotidiana, es importante resaltar que cuando se realiza una actividad extra como lo es el deporte o ejercicios físicos de alto rendimiento, se logran los objetivos con mayor rapidez ya que se restan calorías que el individuo consume en el día. Es indispensable un buen control en cuanto a la alimentación para cubrir todas las necesidades nutricionales del organismo. De acuerdo con Caraffini (2007), “Mayor tasa de sobrepeso a nivel mundial, vinculación de la alimentación con el placer, fallas en la cantidad y calidad de los alimentos son indicadores que se entremezclan con una mayor conciencia sobre la importancia de una buena nutrición y de la realización de actividad física. Hay más conciencia, pero cada vez cuesta más, y por eso, pese a que cada vez más gente se vuelca a los deportes, a las diversas propuestas recreativas, el sedentarismo se ha incrementado, y junto con él, un grupo de patologías de riesgo asociadas.”. Debido a lo que la sociedad transmite en la actualidad con respecto a sinónimos de belleza y salud se ha incrementado la conciencia y la preocupación por verse y sentirse más saludable y se ven en la necesidad de buscar apoyo profesional y autoayudarse acudiendo a gimnasios y a nutricionistas. En este contexto, la presente investigación se origina porque en la actualidad resulta complicado para los instructores personales de los gimnasios satisfacer la demanda de todos sus miembros o clientes sin un sistema que controle la planificación nutricional y actividades físicas simultáneamente, y a su vez los clientes no tienen un artefacto que los apoye con su interés de examinar su ingesta calórica y alguna rutina de ejercicios para el control de su peso corporal y mantenerse de esta forma saludable de acuerdo a sus condiciones e intereses personales. Vale destacar que se tocan dos puntos importantes en el presente Trabajo de Grado, el de nutrición y/o dietas que se basan en recetas que se 13 puedan elaborar, dando toda la información necesaria en cuanto a valores calóricos se consumen; y el de entrenamiento o ejercicios físicos que acompañan a la dieta permitiéndole al usuario establecer rutinas de ejercicios para mejorar las condiciones físicas y de salud. En el ámbito comercial, en Venezuela uno de los gimnasios más grandes y con más servicios es el Gold’s Gym, que entre ellos ofrece un Personal Trainer, Club de niños para el cuidado de los hijos de los clientes, Nutrición y pro shop (Anexo 1). Sin embargo no cuentan con una aplicación que integre la planificación de un entrenamiento físico y régimen nutricional personalizado que sea adaptable en el tiempo y considere hasta las limitaciones que tiene en cuanto a los alimentos con los que cuenta para preparar una comida en un momento dado. En la mayoría de los casos, es difícil para una persona cambiar una rutina tanto en los ámbitos de entrenamiento físico como nutricionales, por tanto si no se tiene la suficiente dedicación, constancia, voluntad, y tiempo se recurre al fracaso, y se aleja más del objetivo planteado al incurrir en las faltas al gimnasio, y de planificación con las recetas que son aptas para lo que el cuerpo necesita en cuanto a la salud, y peso, entre otras cosas. Por ello es necesaria la implementación de una herramienta que sea accesible en todo momento, y que ayude a planificar el día para obtener en un futuro próximo buenos resultados. Adicionalmente existen factores que en la mayoría de los casos es un inconveniente para las personas que quieren mantenerse en forma, tales como económicos y de tiempo en diferentes casos como por ejemplo horarios de trabajo, mayores responsabilidades en el hogar como las amas de casa que tienen hijos, entre otras cosas que les impiden a las personas programarse para ir diariamente o con mucha frecuencia al gimnasio. Estas causas traen consigo consecuencias tales como la inestabilidad y desorden 14 alimenticio, la ausencia de actividad física tan necesaria para mantener al cuerpo y mente saludable. Hoy en día se puede observar diferentes aplicaciones informáticas que poseen la información necesaria para crear menús de distinta índole, sin tomar en cuenta la ingesta de proteínas, carbohidratos, grasas y calorías, también se tienen aplicaciones (generalmente creadas para deportistas o personas que comenzarán una rutina de ejercicio) en donde sí se estudia estos aspectos, mas no se trata la preparación de las recetas. También existen numerosas aplicaciones que registran una cantidad de ejercicios físicos a realizar pero sin ningún tipo de información nutricional o ingesta calórica. Por lo antes mencionado se plantea la siguiente interrogante ¿Cómo puede diseñarse una aplicación que permita gestionar menús acompañada de su preparación tomando en cuenta la ingesta de las calorías, junto con una rutina de ejercicios de forma personalizada? 1.2 Objetivos del Trabajo Especial de Grado A continuación, se presentan los objetivos: general y específicos que se usarán de guía para el desarrollo de la aplicación propuesta en la investigación. 1.2.1 Objetivo General Desarrollar una aplicación web para el control nutricional y rutina de ejercicios diarios que apoye a los instructores físicos personales y de gimnasios para sus clientes a nivel global en el mercado de habla hispana. 15 1.2.2 Objetivos Específicos • Definir los requerimientos funcionales y no funcionales en el desarrollo de la aplicación web para controlar la ingesta calórica y rutina de ejercicios físicos de los usuarios finales de la misma. • Elaborar el modelo de datos y los diagramas en cuanto a las funcionalidades y comportamiento del sistema. • Desarrollar todos los módulos del sistema que permitan que la aplicación cumpla con el objetivo planteado, tomando en cuenta su correcto despliegue en cuanto al diseño responsive. • Establecer un conjunto de pruebas de usabilidad y validación para evaluar los componentes del software planteado como la solución. 1.3 Justificación Las aplicaciones Web, a medida que pasa el tiempo, van ganando mayor importancia y popularidad debido al rápido avance de la tecnología y a las facilidades que estas ofrecen, tales como la practicidad de los navegadores Web para el acceso de los usuarios y la rapidez para su actualización. Como consecuencia directa de esta popularidad, las aplicaciones Web de hoy día, independientemente de su finalidad, tienden a ser más complejas y utilizadas por un gran número de usuarios, con características diferentes. Dada la situación actual e inquietudes en cuanto a la salud y estética de la población se propuso el desarrollo de una aplicación web para la creación o la selección de menús o recetas de comida, de acuerdo a los gustos y necesidades de usuario en donde el mismo podrá visualizar la información nutricional con los detalles de la ingesta diaria en cuanto a las calorías, proteínas, carbohidratos y grasas consumidas, así como también integrarlo con rutinas de ejercicios físicos que apoya. 16 La aplicación está dirigida a los instructores de gimnasio o personales que deseen generar dietas particulares a cada uno de sus clientes, e incluir rutinas de manera de controlar a sus clientes conociendo su meta como por ejemplo, pérdida de grasa o aumento muscular y brindarle un mejor servicio. A su vez se enfoca en los alumnos de los instructores mencionados previamente entre las edades comprendidas entre 14 y 50 años que deseen tener un control de los alimentos que consumen y que puedan seleccionar o incorporar en su dieta recetas que se adapten a sus intereses y objetivos, también quieren aprender a cocinar de forma inteligente, y con esto socavar con los problemas nutricionales yacentes en nuestras comunidades, alargando así la vida de las personas. Adicionalmente también podrán tener una rutina de ejercicios personalizadas de acuerdo a sus objetivos en cuanto a condiciones físicas y peso corporal. Es importante la variedad de alimentos en el mismo y contemplar la dificultad así como el tiempo de preparación de cada comida, ya que si no hay tiempo para cocinar, será oportuno planificar algo rápido pero sano para esa comida. Según Gottau (2009) establece que los beneficios de planificar un menú son muchos e incluyen mayor facilidad para cuidar la dieta, menos gasto de dinero, alimentación más saludable, y ahorro de tiempo al cocinar. Hay que destacar que una adecuada nutrición en compañía de ejercicios físicos va a influir directamente sobre el estado de salud favorablemente, no sólo porque una buena situación nutricional representa una menor mortalidad, sino también, en cuanto a la prevención de enfermedades. Por éstas y otras razones, y dado que se trata de una comunidad heterogénea, la dieta adquiere un papel relevante para el mantenimiento de la salud con el aumento de la edad. 17 1.4 Alcance La aplicación web permite a los usuarios consultar de acuerdo a su perfil y gustos las recetas que más se adapten y su rutina de ejercicio personalizada de acuerdo a sus características físicas. Está dirigida a entrenadores personales y pertenecientes a gimnasios que quieran controlar a sus alumnos y ofrecerles un servicio integrado y personalizado que sobresalga sobre sus competencias, y a los alumnos de los mismos con edades comprendidas entre 14 y 50 años interesados en planificar su ingesta calórica y establecer un hábito de ejercicios físicos. Dentro de la aplicación se tendrán los siguientes módulos para las diferentes funcionalidades del mismo: • Módulo de registro cada usuario en la aplicación, para así guardar la información necesaria y poder realizar seguimiento a la persona a través del tiempo, teniendo un registro de su alimentación (perfil nutricional). • Módulo de recetas: en esta sección el usuario podrá seleccionar la receta que desee, y visualizará los ingredientes, preparación y su tiempo estimado, a su vez también los valores nutricionales por cada ración y nivel de dificultad de la misma. Además, se podrá crear nuevas recetas, eligiendo los alimentos ya creados en el sistema. Para el funcionamiento correcto de este módulo se cuenta con la participación de un nutricionista. • Módulo de planificación: En este módulo el usuario realiza la planificación de las recetas a consumir y los ejercicios a realizar en un rango de fechas no mayor a dos semanas. Con la información suministrada en este módulo el usuario podrá visualizar una lista de compra con los ingredientes necesarios para la preparación de las comidas seleccionadas. 18 • Módulo de rutina de ejercicios: sección que muestra diferentes rutinas de ejercicios de acuerdo a las características físicas del usuario. Los instructores podrán agregar ejercicios a través de este módulo. 1.5 Metodología de Desarrollo: AgilUs Los cambios y adaptaciones del sistema se determinan en función de los requerimientos. De acuerdo a los principios de metodologías ágiles, las funcionalidades del sistema se van añadiendo progresivamente. La usabilidad debe considerarse en cada etapa de desarrollo. Tal como menciona Acosta (2010), "Son muchos los métodos propuestos para el desarrollo de software y son muchas las herramientas y técnicas con que cuentan los ingenieros de software para realizar su trabajo". Al ser esta la pieza central sobre la cual se trabaja, el sistema va tomando forma de acuerdo a las necesidades del usuario. Las metodologías de desarrollo de software son un conjunto de herramientas, técnicas y artefactos utilizados en el diseño de sistemas de información y aplicaciones, cuyo propósito es facilitar la producción de software de alta calidad. Dichas metodologías se dividen en ágiles y tradicionales. Las metodologías tradicionales hacen mayor énfasis en la planificación y control del proyecto, con especificación precisa de requerimientos y modelado; las metodologías ágiles se caracterizan por ser iterativas e incrementales, fácilmente adaptables a cambios e involucran al usuario en el proceso de desarrollo. Para el desarrollo de la aplicación Web FitPlanner se utilizó la metodología AgilUs, que tiene como principal enfoque el desarrollo centrado en la usabilidad del sistema. Este método está fundamentado en el análisis entrado en el usuario y en la participación de especialistas con el objetivo de evolucionar el software, a fin de producir un software usable. 19 El diseño de la interfaz no solo debe ser atractivo, sino que debe llevarse a cabo tomando en cuenta los tiempos establecidos para el desarrollo, de manera que los mismos se puedan minimizar al máximo para así lograr una mayor productividad. El objetivo que persigue dicho método es el de evolucionar el software, a fin de que éste alcance el mayor grado de usabilidad una vez culminado su desarrollo (Acosta, 2010). Con el método de desarrollo AgilUS se persigue abarcar aspectos de usabilidad integrando las enseñanzas de las áreas de Interacción Humano- Computador con la Ingeniería de Software, dando lugar a un conjunto de buenas prácticas y evaluaciones aplicadas al software. Nuevamente, según Acosta (2010), "se plantea el desarrollo de un sistema partiendo de un prototipo de la interfaz de usuario, y que incorpora la aplicación de diversas técnicas de evaluación de usabilidad desde el inicio del ciclo de vida de la aplicación". Para alcanzar la usabilidad, en cada etapa de desarrollo se considera como eje principal las características y actividades comúnmente realizadas por el usuario, aplicando técnicas de diseño centradas en el mismo; de esta manera se determinan las metas que contemplan cada una de las etapas, así como los objetivos que debe satisfacer el producto final. AgilUS está basado en iteraciones y en cada una abarca diferentes actividades que se ejecutan de manera incremental, priorizando los aspectos de diseño y desarrollo en términos de usabilidad. El aspecto estético de la interfaz toma un lugar protagónico al ser parte fundamental de estudio en todas las etapas del método. La evaluación y análisis de los requisitos y la elaboración de prototipos, son actividades contempladas en este método. Acosta (2010) también menciona que el ciclo de vida de la metodología “está basado en el desarrollo iterativo e incremental de prototipos de alta fidelidad hasta que se convierten en el producto final para entrega”. 20 En cada etapa del ciclo de desarrollo se lleva a cabo de manera incremental e iterativa la mejora del producto y se lleva a cabo la construcción de prototipos que consecutivamente serán mejorados, tomando en cuenta la usabilidad en cada una de las actividades desarrolladas. Dicha usabilidad es un aspecto fundamental en la metodología que debe incluirse en cada etapa de desarrollo; para ello se toma en consideración la evaluación que realiza el usuario luego de interactuar con el sistema. Figura 1. Ciclo de vida en la metodología AgilUs Fuente: Acosta (2010). Como se aprecia en la Fig.1, el ciclo de vida de AgilUS comprende la especificación de requisitos, el análisis de dichos requisitos, la elaboración de prototipos y la entrega del producto final. Cada una de las etapas incluye la construcción de diversos artefactos, que pueden ser sujetos a 21 modificaciones hasta obtener el producto final deseado. A continuación, una descripción de cada etapa: ● Requisitos: se lleva a cabo el levantamiento de requerimientos, generando un perfil de usuario. Cada requerimiento definido se debe desarrollar e implementar para cumplir con las exigencias del usuario. ● Análisis: una vez estipulados los requisitos que persigue el sistema, se debe realizar un análisis sobre los mismos, para determinar de qué manera serán implementados, para lo cual se toman como apoyo los diferentes diagramas realizados bajo la notación estándar del Lenguaje de Modelado Unificado o UML (por sus siglas en inglés: Unified Modeling Language). ● Prototipaje: son elaborados diversos prototipos, incluyendo un prototipo de Interfaz Gráfica de Usuario o GUI (por sus siglas en inglés: Graphical User Interface), facilitado por los diagramas de interacción. En esta etapa, el usuario lleva a cabo la evaluación de los prototipos a fin de conocer si los mismos cumplen con los principios de usabilidad. Para realizar estas inspecciones de usabilidad, se lleva a cabo la elaboración de listas de comprobación, las cuales se utilizan para juzgar los atributos y los métodos de interacción de la interfaz de usuario. También se elaboran guías de estilo con las cuales se determinan las normativas en relación al aspecto de la interfaz y por último se lleva a cabo una evaluación heurística, que consiste en un análisis de los aspectos de usabilidad para determinar si se encuentran o no incluidos en cada elemento de la interfaz de usuario. ● Entrega: consiste en la aplicación de pruebas finales para confirmar que la aplicación cumple con los principios de usabilidad. Posteriormente, la aplicación es pasada a producción. Al considerar los principios de AgilUS y llevar a cabo rigurosamente cada fase del ciclo de vida, se podrá obtener como resultado un producto de calidad cuyo componente 22 principal será la usabilidad. Es importante tener presente durante todo el proceso de desarrollo que es el usuario, y no el cliente o el equipo desarrollador, el protagonista y juez que dictamina si los aspectos de usabilidad son cubiertos por el sistema. Debido a la mínima cantidad de generación de artefactos, los tiempos de desarrollo disminuyen y resulta más fácil incorporar cambios que son considerados necesarios y que van surgiendo a lo largo del ciclo de vida. Mediante el diseño de prototipos que evolucionan en función de las necesidades del usuario, se va refinando la estructura del sistema hasta lograr el producto final. El método de desarrollo AgilUS está orientado a la implementación de los requerimientos surgidos a causa de la participación del usuario final. Entre las características, bondades y buenas prácticas estipuladas en el método, se encuentran: ● Diseño centrado en el usuario (DCU): basado en las preferencias e inclinaciones que presenta el mismo frente al sistema. Continuando con Acosta (2010), “... en el DCU se procura construir el sistema para adaptarse, a través de su interfaz, a cómo el usuario desea trabajar, en lugar de forzar al usuario a cambiar su modo de trabajar para adaptarse a lo que los desarrolladores consideraron apropiado”. Para lograr este diseño, el desarrollador debe realizar varias pruebas con el sistema para determinar si poco a poco se van satisfaciendo las necesidades del usuario. ● Diseño basado en prototipos, donde cada uno es revisado y probado por usuarios finales y especialistas en el área de usabilidad. La construcción de cada prototipo viene dada en función de la respuesta que emiten los usuarios y especialistas ante dicho prototipo, permitiendo de esta manera que se pueda seguir avanzando con la 23 construcción del siguiente prototipo. Este proceso se lleva a cabo de manera cíclica hasta culminar la elaboración del producto final. ● Simplicidad en el desarrollo del sistema, previendo posibles cambios en el futuro. ● Desarrollo incremental, de manera de establecer y cumplir requisitos a medida que se desenvuelve el proyecto. ● Desarrollo iterativo, permitiendo el rediseño e implementación de actividades llevadas a cabo en cada una de las etapas. El objetivo al diseñar e implementar en cada iteración consiste en realizarlo de manera simple para no dejar de un lado la posibilidad de rediseñar. Para determinar si debe llevarse a cabo un rediseño, el usuario evalúa el producto y expone su opinión al desarrollador, quien toma en cuenta dicha opinión conjuntamente con el análisis de las funcionalidades del sistema. ● Usabilidad como requisito esencial para considerar un software de calidad. ● Interacción entre el equipo desarrollador y el usuario, un aspecto vital si se considera la usabilidad en cada etapa, ya que es el usuario quien determina la misma. 24 CAPÍTULO 2: MARCO CONCEPTUAL En esta sección se establece el marco teórico para el desarrollo de una aplicación Web enfocada al control nutricional de la alimentación diaria y ejercicios complementarios. 2.1 Entrenamiento Físico Para Delgado (2008), “El entrenamiento debe ser considerado un proceso pedagógico organizado, de larga duración, cuyo objetivo es el desarrollo de las adaptaciones y su mantenimiento a través del tiempo, en todos los niveles de actividad y a todas edades”. Aun cuando el entrenamiento se puede definir como un intento de mejorar la capacidad físico-deportiva de la persona. Estas mejoras se basan en las respuestas y adaptaciones que se consiguen cuando el organismo se somete a un entrenamiento. La respuesta es una acción o modificación inmediata que se produce al realizar una actividad física y la adaptación es un proceso a largo plazo, que se consigue con las modificaciones morfo-funcionales que sufren los distintos órganos y sistemas. Cuando se realiza actividad física intensa durante el tiempo de esfuerzo se produce un importante desgaste de las estructuras y se utilizan las reservas energéticas que pueden llevar al agotamiento. En el tiempo de recuperación o descanso, se recupera la capacidad funcional, para llegar no solo al nivel inicial, sino incluso sobrepasarlo, de manera que al iniciar un nuevo esfuerzo se pueda realizar con facilidad. 25 2.2 Nutrición Según la OMS la nutrición es la ingesta de alimentos en relación con las necesidades dietéticas del organismo. Una buena nutrición (una dieta suficiente y equilibrada combinada con el ejercicio físico regular) es un elemento fundamental de la buena salud. Una mala nutrición puede reducir la inmunidad, aumentar la vulnerabilidad a las enfermedades, alterar el desarrollo físico y mental, y reducir la productividad. El camino hacia un estilo de vida saludable se consigue a través de la nutrición adecuada. Un desequilibrio en la nutrición puede ser causa de la mala salud, la fatiga y un sistema inmune debilitado. La nutrición juega un papel muy importante en el rendimiento deportivo. Esto se debe a que con la nutrición adecuada se mejora la fuerza, la energía y la agilidad. 2.3 Sistemas de información La sociedad se encuentra repleta de ejemplos de sistemas, tales como una máquina expendedora de café, una fábrica de productos manufacturados, un vehículo, un archivo para documentos, nuestra columna vertebral, entre otras. En el caso de las máquinas de café o bebidas, se puede analizar su funcionamiento para comprender mejor el concepto de sistema. Las monedas entran en el sistema, se compara su valor con el de la bebida seleccionada (objetivo del sistema) y si ambos valores son iguales, se expide la bebida. 26 En lo que respecta a los sistemas propiamente dichos hay un amplio consenso en cuanto a las características que deben tener y maneras de obrar, sin embargo no ocurre lo mismo con el concepto de sistema de información, del cual existen muchas definiciones, matices y escuelas. De todas formas, hablando en términos generales, se puede decir que un sistema de información es un conjunto de componentes que interaccionan entre sí para alcanzar un fin determinado, el cual es satisfacer las necesidades de información de dicha organización. Estos componentes pueden ser personas, datos, actividades o recursos materiales en general, los cuales procesan la información y la distribuyen de manera adecuada, buscando satisfacer las necesidades. El objetivo primordial de un sistema de información es apoyar la toma de decisiones y controlar todo lo que en ella ocurre (Pérez y Gardey, 2008). 2.3.1 Aplicaciones Web De acuerdo a la definición de Rouse (2011), una aplicación web es toda herramienta o programa que se encuentre dentro de un servidor web y el cual puede ser accedido mediante un navegador Web. De igual manera, según Nations (2014): “Una aplicación Web es toda aplicación que utilice un navegador Web como cliente”, tomando en cuenta que un cliente es: “El programa utilizado por una persona para ejecutar la aplicación”. Algunos beneficios de las aplicaciones Web sobre otros tipos de aplicaciones mencionados por dicho autor son: ● Una aplicación Web libera al desarrollador de la responsabilidad de construir un cliente para un tipo específico de computador o sistema operativo, ya que el cliente corre en un navegador Web. 27 ● Las aplicaciones Web generalmente pueden ser accedido desde cualquier navegador: Firefox, Chrome, Explorer, entre otros. ● Las aplicaciones Web comúnmente utilizan una combinación de protocolos del lado del servidor y del lado del cliente, que permiten hacer la carga, almacenamiento y despliegue de la información. Una aplicación Web es entonces cualquier herramienta tecnológica de uso en la Web que pueda ser accedida a través de un navegador, sin importar su nivel de complejidad o la amplitud de las acciones que se lleven a cabo en la misma. 2.4 Arquitectura Cliente – Servidor En Kioskea (2016) se encuentra que Cliente - Servidor es una arquitectura donde los clientes, que son equipos conectados a una red, interactúan con un servidor. Este servidor es también un equipo que tiene como rol proporcionar un conjunto de servicios a los clientes conectados a él. Los servicios son aplicaciones de software que permiten consultar y procesar datos en diferentes presentaciones. Para la Enciclopedia Británica (2015), las computadoras clientes proveen una interfaz de comunicación que permite a los usuarios solicitar un servicio Web al servidor y mostrar los resultados obtenidos del mismo. Los servidores permanentemente están a la espera de solicitudes de clientes y responden a ellas. Los clientes tienden a ser computadoras personales mientras los servidores son máquinas mucho más potentes ya que deben atender las necesidades de muchos clientes simultáneamente. El modelo Cliente - Servidor está conformado por un conjunto de computadoras llamadas clientes que realizan peticiones de servicios e información a una computadora centralizada llamada servidor. El servidor 28 agrupa en un solo lugar información de interés para todos los clientes con los cuales se comunica y, siendo una computadora con una capacidad de procesamiento mucho mayor a las de computadoras personales, puede atender a un gran número de clientes de manera concurrente. 2.5 Lenguajes de Programación para Desarrollo Web Los lenguajes de programación son aquellos lenguajes formales diseñados para realizar procesos que puedan ser ejecutados por máquinas como las computadoras. En el contexto web son aquellos lenguajes formales diseñados para ejecutar instrucciones que definen la lógica, comportamiento y apariencia de un sitio o aplicación web (Kioskea, 2016). Se pueden subdividir en dos categorías principales: Los lenguajes del lado del cliente, los cuales procesan todas las instrucciones directamente en el navegador web, y los lenguajes del lado del servidor, los cuales son aquellos reconocidos, cargados e interpretados por el mismo antes de ser enviados al cliente en un formato comprensible para él y así puedan ser entendidos directamente por el navegador. Entre los lenguajes de programación del lado del servidor se puede mencionar PHP, Java, Python, Ruby, JavaScript, entre otros. En la Tabla 1 se puede observar que según el índice PYPL (2017), el cual se elabora analizando el número de búsquedas en Google de tutoriales sobre un determinado lenguaje, se tiene que JavaScript ha tenido un crecimiento en los últimos años. 29 Fuente: PYPL (2017). Entre los lenguajes de programación del lado del cliente se puede mencionar JavaScript, Flash y Silverlight. En la Tabla 2 se puede observar el porcentaje de sitios web que usan diversos lenguajes de programación del lado del cliente según la W3Techs (2017). Tabla 2: Lenguajes de programación lado del cliente más utilizados en web. Fuente: W3Techs (2017). Tabla 1: Popularidad de los lenguajes de programación 30 Como se puede observar en la Tabla 2, el lenguaje de programación del lado del cliente que goza de mayor popularidad y presencia en la web son JavaScript y sus tecnologías asociadas. Esto se debe a sus principales ventajas como su compatibilidad con los principales navegadores web, buen rendimiento, integración con HTML y CSS, y facilidad de aprendizaje. (Digital Learning, 2012) 2.5.1JavaScript JavaScript es un lenguaje de programación interpretado que puede ser insertado en documentos HTML y procesado por todos los navegadores web actuales. Es un lenguaje de programación multiparadigma, soporta programación orientada a objetos, imperativa y funcional. Comúnmente se utiliza en aplicaciones web para brindar una mayor interacción con el usuario final, controlar el navegador, realizar comunicaciones asíncronas entre el navegador (cliente) y el servidor. Uno de sus principales usos consiste en alterar dinámicamente el contenido desplegado de las aplicaciones web para simular comportamientos simulares a aplicaciones de escritorio (Flanagan, 2011). Actualmente también es utilizado para la programación del lado del servidor (Nodejs). El lenguaje JavaScript a través de los años se ha hecho cabida en el mercado del desarrollo de software. Esta proliferación ha llevado a que JavaScript actualmente sirve de conector entre backend y frontend. Se puede usar tanto del lado del cliente, como del lado del servidor. Gracias a eso, hoy en día es posible crear aplicaciones distribuidas utilizando el mismo lenguaje JavaScript en todas sus fases. Express, AngularJS y Node.js 31 2.6 Marcos de Trabajo para el Desarrollo Web (frameworks web) Un marco de trabajo (framework) para el desarrollo de aplicaciones web es una herramienta diseñada para apoyar el desarrollo de sitios web y sus páginas, aplicaciones o servicios web. Estas herramientas alivian el exceso de diseño y programación asociado con actividades y funcionalidades comúnmente usadas en los desarrollos web. Por ejemplo, muchos proporcionan bibliotecas para acceder a bases de datos, estructuras para plantillas, gestión de sesiones y de usuarios, patrones de diseño para menús, botones, formularios y listados, por lo cual se orientan con frecuencia a facilitar la reutilización de código. En la Tabla 3 se puede visualizar el ranking de los marcos de trabajo para el desarrollo web mejor valorados por los usuarios web según las estadísticas de Github y Stack Overflow. Fuente: HotFrameworks (2017). Tabla 3: Frameworks web valorados (usuarios) en Github y Stack Overflow. 32 2.6.1 AngularJS Angularjs es un framework JavaScript de código abierto mantenido por Google para el desarrollo de aplicaciones web dinámicas. Se adapta muy bien en el desarrollo de aplicaciones web de una página. Su objetivo es facilitar la programación y las pruebas de aplicaciones del lado del cliente a través de la introducción de una estructura modelo, vista y controlador MVC. Básicamente la librería de angular lee el HTML en búsqueda de etiquetas especiales las cuales proporcionan las instrucciones necesarias para vincular ciertos elementos de la página con un modelo representado por variables JavaScript. El desarrollador define controladores para manipular los modelos y mantener la lógica de la aplicación. Adicionalmente las variables JavaScript que mantienen los modelos pueden ser definidos manualmente o pueden ser obtenidos de recursos JSON estáticos o dinámicos (Ralston, 2013). 2.7 Servicios Web Según Albreshne, Fuhrer y Pasquier (2009), un servicio Web es un software que está disponible en Internet y utiliza el estándar XML para el intercambio de datos entre sistemas. Los servicios Web son también colecciones de protocolos y estándares usados para el intercambio de datos entre aplicaciones o sistemas, que son independientes de la plataforma utilizada y que pueden ser implementados en cualquier lenguaje. Los autores proponen que hay tres roles principales asociados a la arquitectura de servicios Web: ● Proveedor de Servicio: Es el encargado de construir el servicio y hacer que éste se encuentre disponible para los consumidores de Internet. ● Consumidor del Servicio: Es el usuario del servicio Web, es el que 33 invoca un servicio Web existente abriendo una conexión en la red y enviando una petición. ● Registro de Servicios: Es un directorio centralizado de servicios, en el que los proveedores o desarrolladores pueden encontrar servicios existentes y publicar nuevos. Los servicios Web son la estructura que permite la interconexión de servicios y peticiones para el intercambio de datos en una plataforma Web y constituyen la base de dicho intercambio. ● Arquitectura REST: De su nombre en inglés Representational State Transfer, REST es un estilo de arquitectura de software que describe cómo recursos en una red son definidos y utilizados, es una arquitectura ampliamente utilizada para la implementación de servicios Web. Tiene un conjunto de comandos básicos sencillos: GET, POST, PUT y DELETE, y sigue un protocolo cliente/servidor por capas que hacen de REST una arquitectura más fácil de usar que SOAP. Figura 2. Intercambio de mensajes con REST Fuente: Adaptado de Barry and Associates (2016). 34 ● Notación JSON: Del inglés JavaScript Object Notation, es una notación utilizada en la descripción de pares nombre/valor utilizados en el intercambio de datos usando servicios Web. Es una notación de fácil utilización y que no depende de un orden específico para su utilización. Esta notación utiliza un subconjunto de JavaScript. Figura 3. Intercambio de mensajes con JSON. Fuente: Adaptado de Barry y Associates (2016). 2.8 Servidores web Un servidor, como la misma palabra indica, es un computador o máquina informática que está al “servicio” de otras máquinas, computadoras 35 o personas llamadas clientes y que le suministran a éstos todo tipo de información. Un servidor web sirve contenido estático a un navegador, carga un archivo y lo sirve a través de la red al navegador de un usuario. Este intercambio es mediado por el navegador y el servidor que hablan el uno con el otro mediante el protocolo HTTP. 2.8.1 Node.JS NodeJs es una plataforma de software para el desarrollo ágil de aplicaciones de red escalables. Se encuentra construido a partir del motor JavaScript V8 desarrollado por Google el cual es implementado en su navegador web Chrome. Utiliza JavaScript como lenguaje de programación. Se basa en un modelo de entrada y salida no bloqueante orientado a eventos. Esto permite implementar aplicaciones de intercambio intensivo de datos en tiempo real. Contiene un servidor HTTP integrado lo que permite ejecutar un servidor web sin la necesidad de utilizar algún software adicional. El servidor es totalmente programable lo cual otorga un mayor control sobre su funcionamiento (Azaustre, 2014). 2.8.2 Express Es un Framework (lado servidor) rápido y flexible, escrito en JavaScript para NodeJs, el cual ofrece los métodos suficientes en JavaScript, para poder manejar las solicitudes o peticiones que se hacen por medio de los métodos del protocolo HTTP, por tanto, permite desarrollar API REST de forma muy rápida (Moya, 2014). 36 2.9 Git Git es un sistema de control de versiones distribuidas, mediantes el cual se puede trabajar a nivel local sin tener que comprometer el repositorio principal a cada cambio que se realicen. Entre las principales características de Git se encuentran: ● Comparando a otros sistemas VCS (subversión y compañía incluidas), su almacenamiento de información no es de forma lineal, es más bien como en forma de ficheros, con el fin de mantener la imagen de todos los archivos antes del momento de cambio. ● La mayoría de cada una de las operaciones son locales. Esto significa que comúnmente solo se utilizarían los archivos locales, es decir del mismo servidor, no es necesario tomar información de otro equipo dentro de la red. ● La perfecta integridad de GIT. No es posible realizar algún cambio al contenido de cualquier archivo sin que lo sepas ● No puedes recibir archivos dañados, o perder información en tránsito sin que GIT lo detecte. ● Es complicado hacer que GIT pueda deshacer y/o eliminar información, generalmente solo introduce información a las bases de datos. 37 Figura 4. Los tres estados de Git y sus estados Fuente: Ramírez J. (2014) 2.10 Sistemas manejadores de bases de datos (SMBD) Es un conjunto de herramientas de software encargado de gestionar la descripción, manipulación y utilización de los datos. Para cada una de las funciones mencionadas anteriormente, el sistema manejador de base de datos (DBMS) utiliza un lenguaje de definición de datos (DDL), un lenguaje de manipulación de datos (DML) y un lenguaje de consulta de datos el lenguaje (SQL en muchos casos) respectivamente. El DBMS también cumple la función de gestionar los permisos correspondientes a cada una de las bases de datos, y garantizar la confiabilidad y seguridad de los mismos. 38 Fuente: DB-Engine (2017). 2.10.1 Bases de Datos Relacionales (SQL) Una base de datos relacional es una colección de elementos de datos organizados en un conjunto de tablas formalmente descritas desde la que se puede acceder a los datos o volver a montarlos de muchas maneras diferentes sin tener que reorganizar las tablas de la base. La base de datos relacional fue inventada por E.F. Codd en IBM en 1970. La interfaz estándar de programa de usuario y aplicación a una base de datos relacional es el lenguaje de consultas estructuradas (SQL). Los comandos de SQL se utilizan tanto para consultas interactivas para obtener información de una base de datos relacional y para la recopilación de datos para los informes. 2.10.1.1 PostgreSql PostgreSQL es un sistema de gestión de bases de datos objeto- relacional, distribuido bajo licencia BSD y con su código fuente disponible libremente. Es el sistema de gestión de bases de datos de código abierto más potente del mercado y en sus últimas versiones no tiene nada que envidiarles a otras bases de datos comerciales. [Mar10] Tabla 4: Ranking de los SMBD más usados al mes de enero del año 2017. 39 PostgreSQL utiliza un modelo cliente/servidor y usa multiprocesos en vez de multihilos para garantizar la estabilidad del sistema. Un fallo en uno de los procesos no afectará el resto y el sistema continuará funcionando. PostgreSQL es un sistema manejador de base de datos (SMBD). Su implementación inicial comenzó en 1986 y es ahora el sistema de base de datos Open Source disponible más avanzado en el mundo. PostgreSQL es un sistema objeto-relacional, ya que incluye características de la orientación a objetos, como puede ser la herencia, tipos de datos, funciones, restricciones, disparadores, reglas e integridad transaccional. La última serie de producción es la 9.6 Sus características técnicas la hacen una de las bases de datos más potentes y robustas del mercado. Su desarrollo comenzó hace más de 16 años, y durante este tiempo, estabilidad, potencia, robustez, facilidad de administración e implementación de estándares han sido las características que más se han tenido en cuenta durante su desarrollo. PostgreSQL funciona muy bien con grandes cantidades de datos y una alta concurrencia de usuarios accediendo a la vez al sistema. Las características más importantes y soportadas por PostgreSQL: Es una base de datos 100% ACID ● Integridad referencial ● Tablespaces ● Nested transactions (savepoints) ● Replicación asincrónica/sincrónica / Streaming replication - Hot Standby ● Two-phase commit ● PITR - point in time recovery ● Copias de seguridad en caliente (Online/hot backups) 40 ● Unicode ● Juegos de caracteres internacionales ● Regionalización por columna ● Multi-Version Concurrency Control (MVCC) ● Multiples métodos de autentificación ● Acceso encriptado vía SSL ● Actualización in-situ integrada (pg_upgrade) ● SE-postgres ● Completa documentación ● Licencia BSD A continuación, se enumeran sus principales ventajas: 1. Implementación del estándar SQL92/SQL99. 2. Soporta distintos tipos de datos: además del soporte para los tipos base, también soporta datos de tipo fecha, monetarios, elementos gráficos, datos sobre redes (MAC, IP …), cadenas de bits, etc. También permite la creación de tipos propios. 3. Incorpora una estructura de datos array. 4. Incorpora funciones de diversa índole: manejo de fechas, geométricas, orientadas a operaciones con redes, etc. 5. Permite la declaración de funciones propias, así como la definición de disparadores. 6. Soporta el uso de índices, reglas y vistas. 7. Incluye herencia entre tablas (aunque no entre objetos, ya que no existen), por lo que a este gestor de bases de datos se le incluye entre los gestores objeto-relacionales. 8. Permite la gestión de diferentes usuarios, como también los permisos asignados a cada uno de ellos. 41 CAPÍTULO 3. MARCO APLICATIVO En este capítulo se describe el proceso y los artefactos generados en la construcción de la aplicación Web FitPlanner, siguiendo con lineamientos de la metodología de desarrollo AgilUs previamente elegida. Se puede observar en la Fig. 5 la arquitectura planteada como solución del desarrollo: Figura 5. Arquitectura de la solución propuesta. Fuente: Creación propia En dicha arquitectura se muestra cómo los usuarios finales interactúan con el sistema FitPlanner a través de las tecnologías usadas. El usuario a través de un navegador web puede ingresar a la aplicación web realizando una petición que el servidor recibirá, luego se realiza la consulta con la Base de datos y se retorna el resultado al usuario final. El sistema se va a desarrollar de la siguiente manera: el Frontend (lado del cliente) con AngularJS, básicamente es lo que se mostrará al usuario en su pantalla. AngularJS hace las llamadas al API REST (Post, Put, 42 Get y Delete) construida con NodeJS y el framework express. Luego este API hace un CRUD (Create, Read, Update y Delete) a la base de datos en PostgreSQL, que a su vez da la respuesta, obteniendo así el API con los datos que se le han pedido en la llamada. Estos datos los envía el API a AngularJS (frontend) en formato JSON y se le mostrará al usuario sin necesidad de recargar la página, puesto que AngularJS mantiene los datos actualizados de la base de datos sin necesidad de actualizar la página web. Adicionalmente se realizó el diseño de la base de datos que soportará el funcionamiento de la aplicación usando PostgreSQL. Figura 6. Modelo de la base de datos. Fuente: Autores (2017) 43 3.1 Fase de requisitos En esta fase se realiza la agrupación de toda la información necesaria para iniciar el desarrollo y se define con el usuario final todos los aspectos que considera de gran importancia y deben ser tomados en cuenta en la realización del presente proyecto. 3.1.1 Tormenta de ideas Tomando en consideración la problemática expuesta y la solución planteada, se realizó una tormenta de ideas entre los desarrolladores de la aplicación web FitPlanner para definir las funciones generales y definiciones que están relacionadas al sistema desarrollado. En la figura se observa el resultado de la misma. Figura 7. Tormenta de Ideas. Fuente: Autores (2017) 44 3.1.2 Encuesta Se realizó una encuesta de 10 preguntas de selección simple y múltiple para investigar las opiniones de un grupo de XX participantes acerca de aspectos importantes que servirán de soporte para la definición de los requerimientos funcionales y no funcionales de la aplicación Web FitPlanner. Para esta indagación se usó la herramienta de Google, Google Forms y puede ser accedida a través del siguiente enlace https://docs.google.com/forms/d/1DoxcDB7IV_UN58yikxy_WNopT- RrgattIwZZV7KKNEs/edit?usp=sharing Los resultados obtenidos de la encuesta son: 45 46 47 48 49 3.1.3 Requerimientos Funcionales y No Funcionales “Los requerimientos funcionales y no funcionales definen las funciones que el sistema será capaz de realizar. Describen las transformaciones que el sistema realiza sobre las entradas para producir salidas” (Agüero, 2012). En esta fase se pudieron establecer los requerimientos que se mencionan a continuación: a. Requerimientos Funcionales 1. Módulo de registro de usuarios 2. Módulo de Planificación que permite organizar las recetas y los ejercicios que el usuario deberá realizar en un período seleccionado por el mismo 3. Módulo de Lista de Compras que le indica al usuario la lista de los ingredientes necesarios para la preparación de las recetas previamente escogidas en un plan correspondiente a un período específico 4. Módulo de recetas que le permite al usuario visualizar todas las recetas incluidas en la aplicación y agregar una propia para su posterior uso 50 5. Módulo de ejercicios que muestra todos los ejercicios físicos cargados en el sistema 6. Diseño responsive en su totalidad para que sea totalmente adaptable en los dispositivos con diferentes resoluciones b. Requerimientos no funcionales 1. Sencillo de usar. 2. Intuitivo 3. Tamaño y estilo de fuente legible 4. Rápido 5. Seguro 3.1.4 Perfiles de usuario Los usuarios de la aplicación son personas con edades comprendidas entre 14 y 50 años debido a que son las más activas físicamente. Los usuarios por lo general están familiarizados con herramientas informáticas, por tanto el desarrollo de la aplicación será lo más práctico y fácil de usar. Se diseñaron modelos de casos de uso para especificar de una mejor manera los usuarios y roles de los usuarios de la aplicación, que permiten mostrar gráficamente la interacción de cada tipo de usuario con el sistema. 3.2 Fase de Análisis 3.2.1 Casos de Uso de FitPlanner “Un caso de uso es una manera de utilizar el sistema o de interactuar con él. Los casos de uso proporcionan una definición de las necesidades a cubrir por un proyecto desde el punto de vista del usuario. Por tanto, es una técnica utilizada a ayudar al cliente a determinar sus necesidades y 51 requisitos.”(Barranco, 2001) Los diagramas de casos de uso de un sistema se utilizan para describir las funcionalidades que tendrá la aplicación y quienes realizarán dichas interacciones. Es por ello que el análisis y desarrollo de artefactos es de suma importancia para que determine una guía para el desarrollo. 3.2.1.1 Actores Los actores que participan la aplicación web FitPlanner se describen a continuación: 1) Usuario Web: Es el actor encargado de llevar a cabo las siguientes acciones dentro de la aplicación: ● Crear perfil de usuario para poder ingresar a la aplicación web. ● Crear, modificar o eliminar un plan de nutrición y ejercicios en un período determinado ● Crear, modificar o eliminar sus datos personales o perfil de usuario en la aplicación. ● Consultar y agregar recetas personales en la aplicación web. ● Consultar ejercicios en la aplicación web. ● Consultar estadísticas de los valores nutricionales de la ingesta que tuvo en un plan previamente creado 2) Instructor: Es el actor encargado de las acciones administrativas de la aplicación. Sus funciones son: ● Crear un perfil de usuario con el que podrá iniciar sesión en la aplicación. 52 ● Crear, modificar o eliminar un plan de nutrición y ejercicios en un período determinado ● Crear, modificar o eliminar sus datos personales o perfil de usuario en la aplicación. ● Crear, modificar o eliminar ejercicios en la aplicación web. ● Consultar estadísticas de los valores nutricionales de la ingesta que tuvo en un plan previamente creado 3) Nutricionista: Es el actor que se encarga de proveer la información nutricional necesaria de todos los alimentos que serán los ingredientes de las recetas de la aplicación FitPlanner: ● Agrega, modifica o elimina ingredientes ● Agrega, modifica o elimina recetas. 4) Administrador: Es el actor encargado de las acciones administrativas de la aplicación. Sus funciones son: ● Crear un perfil de usuario con el que podrá iniciar sesión en la aplicación. ● Cambiar roles de usuarios de la aplicación. ● Gestionar configuraciones de la aplicación. 3.2.1.2 Casos de Uso Nivel 1: 53 Figura 8. Casos de Nivel 1. Fuente: Autores (2017) Tabla 5: Especificación de los casos de uso del nivel 1 – CU #1 Caso de Uso CU #1 Crear Usuario Actor Usuario Descripción El actor se registra para entrar a la aplicación FitPlanner con sus datos personales solicitados por el sistema para la creación de su cuenta de usuario Flujo Básico 1. Inicia en el momento en que el usuario ingresa a la aplicación FitPlanner y hace click en el botón de “Registrarse”. 2. El usuario ingresa los datos solicitados por la aplicación para crear su perfil. 3. Se validan los datos introducidos por el actor, esto quiere decir que cumplan con el formato adecuado, tales como el correo electrónico del usuario, Nombre sin números, entre otros.) 4. En el caso que los datos sean correctos se crea la cuenta y se muestra al usuario un mensaje de creación de cuenta en forma exitosa. Flujo Alterno 1 1. Cuando el actor ingrese algún dato incorrecto, se le muestra un mensaje indicando la causa del error. 2. El usuario puede corregir y verificar los datos que tengan algún error. 3. El actor guarda los datos, para ello debe hacer click en “Guardar”. 54 4. El sistema verifica de nuevo los datos. 5. En el caso que no haya error, se crea la cuenta y se muestra un mensaje al actor de creación de perfil en forma exitosa. Pre-condiciones El usuario debe poseer una cuenta de correo electrónico activa, que no haya sido utilizada para crear alguna otra cuenta en la aplicación. Post- condiciones Para ingresar a la aplicación se colocan los datos solicitados de la cuenta de usuario y se hace click en “Enviar”. Tabla 6: Especificación de los casos de uso del nivel 1 – CU #2 Caso de Uso CU #2 Iniciar Sesión Actor Usuario Descripción El actor inicia la sesión a la aplicación web ingresando su email y contraseña. Flujo Básico 1. Se inicia el caso de uso en el momento en que el usuario ingresa a la aplicación y hace click en el botón de “Enviar”. 2. El usuario ingresa su email y contraseña. 3. El sistema verifica los datos del suministrados del usuario (electrónico y la contraseña). 4. En el caso que sean correctos los datos ingresados se carga toda la información correspondiente al usuario y posterior se le muestra un mensaje de inicio de sesión exitosa. Flujo Alterno 1 1. Cuando el actor ingresa algún dato incorrecto, se le muestra un mensaje indicando el error. 2. El actor puede corregir los datos que tengan error y verificarlos. 3. El actor hace click en el botón “Enviar” para iniciar sesión. 4. Se verifican de nuevo los datos. 5. Si no hay ningún error, se carga la información correspondiente al usuario y se le muestra un mensaje de inicio de sesión de forma exitosa. Pre-condiciones El usuario debe tener una cuenta de usuario activa en la aplicación. Post-condiciones Se le da ingreso al actor a la aplicación. Fuente: Autores (2017) 55 3.2.1.3 Casos de Uso Nivel 2 El modelo de casos de uso de nivel 2 muestra el detalle de los casos de uso a los que tienen acceso los usuarios de la aplicación con sesión activa, así como los casos de uso asociados al actor anónimo que representa el sistema de los socios comerciales. 56 Figura 9. Casos de Uso nivel 2 Fuente: Autores (2017) 57 Tabla 7: Especificación de los casos de uso de nivel 2 – CU #3 Caso de Uso CU #3 Establecer planificación Actor Usuario Web Descripción Caso de uso que le permite al actor realizar una planificación de recetas y ejercicios en un período determinado. Flujo Básico 1. Inicia en el momento que el usuario ingresa a la aplicación y le da click en el enlace “Planificar” ubicado en el menú principal. 2. Se muestra en pantalla la opción de escoger la fecha de inicio y fin de la planificación que se quiere realizar. 3. El actor puede ver y escoger las recetas según su criterio, ingresando los datos solicitados por el sistema como número de comensales, y la clasificación de la comida en el caso que sea desayuno, almuerzo, cena u otro, para proveer la cantidad de ingredientes que necesita el usuario 4. El usuario escoge los ejercicios a realizar en el período especificado. Pre-condiciones 1. El usuario debe haber ingresado exitosamente a la aplicación Post-condiciones 1. Se obtiene un plan de dieta con las recetas y ejercicios seleccionados. 2. Se genera una lista de compras con los ingredientes necesarios para la preparación de las recetas seleccionadas Extiende 1.1 Seleccionar el período del plan de recetas y ejercicios 1.2 Seleccionar Recetas 1.3 Seleccionar ejercicios. 58 Tabla 8: Especificación de los casos de uso de nivel 2 – CU #4 Caso de Uso CU #4 Gestionar Recetas Actor Usuario Web Descripción Permite al actor gestionar las recetas encontradas en la aplicación y agregar nuevas para su posterior uso. Flujo Básico 1. El caso de uso inicia cuando el usuario inicia sesión e ingresa a la sección “Recetas” ubicado en el menú principal derecho. 2. El actor puede agregar nuevas y además puede consultar todas las recetas tanto las publicadas como las propias. Flujo Alterno 1 1. En caso que el usuario no tenga aún ninguna receta creada, se le indica la ausencia de esos datos a través de un mensaje. Pre-condiciones El actor debe tener una cuenta de usuario activa en la aplicación. Post- condiciones 1. Si se crea alguna receta, ésta se almacena en la Base de Datos. 2. El usuario sólo puede modificar las recetas propias agregadas por el mismo actor a la aplicación. Dichas modificaciones se almacenan en la Base de Datos. 3. El actor sólo puede eliminar recetas propias, estas también se borran de la Base de Datos. Extiende 4.1 Ver todas las recetas 4.2 Agregar recetas 4.3 Editar recetas Tabla 9: Especificación de los casos de uso de nivel 2 – CU #5 Caso de Uso CU #5 Gestionar Ejercicios Actor Instructor Descripción Permite al actor agregar, editar, eliminar y consultar los ejercicios físicos en la aplicación FitPlanner. Flujo Básico 1. El caso de uso inicia cuando el actor inicia sesión en la aplicación e ingresa a la misma y hace click en la sección “Ejercicios” ubicado en el menú principal derecho. 2. El usuario realiza la búsqueda de los ejercicios físicos registrados tomando en cuenta algunos patrones de búsqueda y los consulta. 59 Flujo Alterno 1 1. En caso que el usuario no visualice ejercicios con su búsqueda, se le indica la ausencia de esos datos a través de un mensaje. Pre-condiciones El actor debe tener una cuenta de usuario activa en la aplicación y haber iniciado sesión. Post-condiciones Se visualiza los ejercicios según la consulta realizada por el actor Extiende 5.1 Ver ejercicios 5.2 Agregar ejercicios 5.3 Editar ejercicios Tabla 10: Especificación de los casos de uso de nivel 2 – CU #6 Caso de Uso CU #6 Consultar Actor Usuario Web Descripción Este caso le permite al actor consultar todo lo referente a los datos principales de la aplicación, tales como planes realizados, listas de compras y estadísticas nutricionales Flujo Básico 1. Se inicia el caso de uso en el momento en que el usuario ingresa en el Home la aplicación. 2. El actor puede visualizar en la parte superior información general de los consumos (información nutricional) por plan, y en la sección central las planificaciones realizadas y las listas de compras generadas por planes realizados. Pre-condiciones El usuario debe tener una cuenta activa en la aplicación. Post-condiciones Se le permite al usuario consultar la información disponible en la aplicación. Incluye 6.1 Consultar las planificaciones realizadas para un período específico por el actor 6.2 Consultar las listas de compras generadas por los planes registrados por el actor. 6.3 Consultar estadísticas de la ingesta calórica 60 Tabla 11: Especificación de los casos de uso de nivel 2 – CU #7 Caso de Uso CU #7 Gestionar Ingredientes Actor Nutricionista Descripción El caso de uso le permite al usuario gestionar los ingredientes necesarios para elaborar las recetas con su información nutricional. Flujo Básico 1. Se inicia el caso de uso en el momento en que el actor inicia sesión e ingresa a la sección “Alimentos” ubicado en el menú principal derecho. 2. El actor puede gestionar los alimentos para su posterior uso (agregar, modificar y eliminar alimentos - ingredientes). Flujo Alterno 1 1. En el caso que el actor no tenga aún ningún alimento creado, se le indica la ausencia de esos datos a través de un mensaje. Pre-condiciones El usuario debe tener una cuenta de usuario activa en la aplicación. Post-condiciones 1. Si se crea un alimento, éste se almacena en la Base de Datos. 2. El actor sólo puede modificar los alimentos agregados en la aplicación. Dichas modificaciones se almacenan en la Base de Datos. 4. El actor puede eliminar los alimentos, éstos también se borran de la Base de Datos. Extiende 7.1 Ver todas las recetas 7.2 Agregar recetas 7.3 Editar recetas Tabla 12: Especificación de los casos de uso de nivel 2 – CU #8 Caso de Uso CU #8 Gestionar Usuarios Actor Administrador Descripción Se le Permite al usuario gestionar a los usuarios de la aplicación. Flujo Básico 1. Se inicia el caso de uso cuando el administrador ingresa a la sección de Gestión de Usuarios. 2. En el caso de uso, el actor tiene privilegios de las acciones correspondientes a creación, modificación y bloqueo de usuarios de la aplicación. 61 3. El actor le debe asignar un rol a cualquier usuario creado desde su vista del sistema. Esos roles pueden ser: Instructor, Nutricionista o Usuario Web. Pre-condiciones El actor debe poseer una cuenta de usuario activa con permisos de administrador en la aplicación. Post-condiciones Se le permite al actor las acciones de consultar y gestionar los usuarios de la aplicación y sus roles. Extiende 8.1 Crear Usuarios – Incluye: Asignar Rol al Usuario -. 8.2 Editar Usuarios. 8.3 Cambiar Rol de Usuarios. Fuente: Autores, 2017. 3.2.2 Modelo de Objetos del Dominio “Un modelo de dominio es una representación visual de clases conceptuales o de objetos reales en un dominio de interés. Es un conjunto de diagramas de clases, sin definición de operaciones” (Martínez, 2016). Puede utilizarse para capturar y expresar el entendimiento ganado en un área bajo análisis como paso previo al diseño de un sistema. El modelo de dominio es utilizado por el analista como un medio para comprender el sector de negocios al cual el sistema va a servir. El modelo de dominio puede ser tomado como el punto de partida para el diseño del sistema. Cuando se realiza la programación orientada a objetos, el funcionamiento interno del software va a imitar en alguna medida a la realidad, por lo que el mapa de conceptos del modelo de dominio constituye una primera versión del sistema. A continuación se presenta el modelo de dominio de la aplicación: 62 Figura 10. Modelo de dominio de FitPlanner Fuente: Autores (2017) 3.2.3 Patrones de interacción Según define Montero (2016), un patrón de interacción es una ayuda para las aplicaciones y diseñadores de aplicaciones para que la comunicación con el usuario final sea óptima, ya que los mismos definen el comportamiento de componentes fundamentales de la aplicación. Se usó para la selección de fechas un patrón que se especifica a continuación: Tabla 13: Detalle de patrón de interacción de selección de fechas Nombre del Patrón Patrón para selección de fecha para establecer la fecha de inicio y fin de la planificación en Fitplanner 63 URL del Patrón: http://www.daterangepicker.com/ Problema El usuario desea seleccionar una fecha o un rango de fecha en el que desea establecer una planificación de recetas y ejercicios. Solución El patrón permite mostrar un calendario para selección de días o rangos de días de manera sencilla. Usabilidad Para este patrón es fundamental la fácil utilización, fácil memorización y la eficiencia Consecuencias El usuario podrá seleccionar efectivamente la fecha o el rango de fechas deseado de forma sencilla y rápida. Patrones Relacionados El patrón de selección de idioma o país. La estructura del diseño de la interfaz de usuario incluye una sección que incluye la interfaz principal de la aplicación y vistas secundarias de información complementaria como la vista de las Planificaciones realizadas 64 3.2.4 Prototipos en Papel Después de definir los requerimientos funcionales y no funcionales, y tomando en consideración los estándares, se establecieron guías para la implementación y distribución de los elementos en la aplicación, resultando los siguientes prototipos en papel de las principales interfaces: 1) Interfaz del Home: Figura 11. Prototipo Inicial Home de Fitplanner. Fuente: Autores (2017) 65 2) Interfaz de Agregar Recetas - Ejercicios: Figura 12. Interfaz de agregar Recetas – Ejercicios. Fuente: Autores (2017) 3.2.5 Guía de Estilos Logo de la aplicación: Colores principales: 66 Tipografía: Títulos: Roboto Thin Texto: Roboto Light 3.3 Fase de Prototipaje En la fase de Prototipaje se elaboran los prototipos de la aplicación Web y se aplican técnicas de evaluación a los mismos para asegurar que se estén cumpliendo los estándares de desarrollo necesarios para que de esta forma se pueda lograr el uso de los principios básicos de usabilidad en el producto final. 3.3.1 Aspectos de Accesibilidad y Sociabilidad La metodología de desarrollo AgilUs está enfocada en la usabilidad como principio del desarrollo. Tal como lo explica Acosta (2010), “El método AgilUs busca proporcionar un conjunto de actividades organizadas para construir la usabilidad en el diseño de interfaces de usuario durante el desarrollo de un producto de software” (p.5). Es así como, para garantizar la usabilidad del sistema se propusieron los siguientes aspectos de accesibilidad y sociabilidad: a) Accesibilidad El término Accesibilidad en el ámbito Web, según W3C (2016), se refiere a la posibilidad de cualquier persona con algún tipo de discapacidad 67 para hacer uso de una página o aplicación Web. Se incluyeron en FitPlanner las siguientes características tomando en cuenta este aspecto fundamental del desarrollo: - Los textos alternativos a las imágenes, para facilitar el entendimiento y navegación de usuarios que utilicen herramientas de lectura, de manera que aunque la imagen no pueda ser percibida la misma esté siendo descrita correctamente y sea comprensible. Estos textos se incluyeron en el markup de la aplicación de la siguiente forma: <img src="imagen.png" alt="texto descriptivo de la imagen"> b) Sociabilidad La sociabilidad “es una cualidad de las aplicaciones interactivas asociada al aspecto social de la comunicación e interacción entre personas” (p.55) Según Acosta y Zambrano (2015). 3.3.2 Evaluación Heurística La evaluación heurística es un método de ingeniería de usabilidad para conseguir problemas en la interfaz del diseño de usuario según Nielsen (1994). Es una variante de la inspección de usabilidad donde los especialistas en interacción humano-computador juzgan si cada elemento de la interfaz de usuario sigue los principios de usabilidad correctamente. En esta evaluación, un grupo de expertos analiza el sistema, produce una lista de problemas, asocia cada uno de ellos a los elementos de la lista de heurísticas a utilizar y propone posibles soluciones a cada uno de ellos. Actualmente las heurísticas utilizadas son las propuestas por Nielsen ya que incluye los principios suficientes y aceptables para realizar cualquier 68 evaluación de diseño de interfaz. Para realizar esta evaluación son necesarias entre tres y cinco personas expertas (preferiblemente) para así encontrar la mayor cantidad de errores en la interfaz, y una vez identificados los mismos puedan ser corregidos. La lista de criterios generales o heurísticas consta de nueve (9) elementos que se describen a continuación: H1: Consistencia. H2: Minimizar la carga cognitiva. H3: Hablar el lenguaje del usuario. H4: Diálogo natural y simple. H5: Feedback. H6: Proveer claramente las salidas. H7: Proveer Shortcuts. H8: Mensajes de Error descriptivos. H9: Prevención de Errores. H10: Asistencia al Usuario. Luego, se realiza una evaluación numérica que permite estimar la valoración en frecuencia, impacto y persistencia de cada problema. La escala de valoración utilizada fue la siguiente: 0 - No es un problema de usabilidad. 1 - Problema cosmético. 2 - Problema menor. 3 - Problema mayor de usabilidad; importante fijar solución. 4- Usabilidad catastrófica, imperativo fijar solución. 69 Tabla 14: Evaluación Heurística y su análisis 3.3.3 Lista de Comprobación “Las listas de comprobación ayudan a asegurar que los principios de usabilidad sean considerados en el diseño” (Acosta, 2009). Es así como el autor establece una lista de comprobación como sigue: 1) Reconocer en lugar de recordar. 2) Usar indicadores visuales. 3) Utilizar metáforas adecuadas, y en lo posible, las metáforas estándares. 4) Los controles del sistema deben estar claramente visibles y sus funciones identificables. 5) Flexibilidad en la interfaz de usuario. 6) Hacer sentir al usuario que puede tomar decisiones. Problema Heurística Valoración Solución Propuesta En la vista del Home cuando el usuario no tiene planificaciones cargadas, no aparece información H10 3 Colocar algún texto para indicar o imagen para indicar que el usuario no tiene planificaciones hechas e invitarlo a hacerlas En la vista de planificar se permitía la escogencia de fechas sin límite, lo cual hace que se pierda un poco el sentido de las planificaciones y las listas de compra H10 2 Permitir elegir un rango limitado para realizar la planificación En la vista de detalle de las recetas no se tenía claro qué recetas podía editar el usuario H10 2 Proporcionar un mensaje o agregar un ícono que indique que una receta es propia del usuario, por tanto es editable por el mismo 70 7) Proveer feedback a las acciones del usuario. 8) Minimizar las posibilidades de cometer errores. 9) Permitir al usuario la posibilidad de recuperarse de los errores. 10) Mantener la interfaz simple, sencilla y organizada. 11) Permitir al usuario personalizar la IU. 12) Mostrarle al usuario lo que necesita cuando lo necesite. 13) Evitar palabras coloquiales y abreviaturas. 14) Consistencia en apariencia y uso. De esa lista de comprobación se tomaron 7 principios y se propusieron estándares a seguir en el desarrollo: 1. Reconocer en lugar de recordar. Estándar: Cuando el usuario inicia sesión en la aplicación FitPlanner, puede visualizar de forma notable los datos nutricionales referentes a la alimentación correspondiente a la planificación realizada por el mismo, la misma está clasificada en Calorías, Proteínas, Carbohidratos y Grasas. Adicionalmente puede ver su lista de compras generada de acuerdo a las recetas incluidas en la planificación de manera que no tiene que recordar los ingredientes que necesita para preparar sus comidas, sino que consulta en la aplicación FitPlanner para hallas la información deseada. 2. Usar indicadores visuales Estándar: En el momento en que el usuario hace click en cualquier botón cuyo procesamiento no es inmediato o no se muestra rápidamente, se muestra un indicador visual en el banner cambiando de color y llenándose a 71 medida que la página está siendo cargada para indicarle que su requerimiento está siendo procesado. 3. Los controles del sistema deben estar claramente visibles y sus funciones Estándar: En la Home de la aplicación FitPlanner se puede observar la forma de navegación entre las interfaces, a través del menú lateral ubicado al lado izquierdo de la página. * 4. Proveer feedback a las acciones de usuario Estándar: Se muestran mensajes de notificación o errores para establecer una interacción con el usuario 5. Minimizar las posibilidades de cometer errores Estándar: Se realizan las validaciones necesarias para controlar los errores. Se realizan validaciones en el login y registro en cuanto a los datos introducidos. Por ejemplo, cuando el usuario coloca su correo electrónico se verifica que el mismo se haya introducido con el formato correcto Ejemplo: nutricionista@fitplanner.com (Correcto) nutricionista@fit (Incorrecto) 6. Evitar palabras coloquiales y abreviaturas Estándar: Durante el desarrollo se obvió el uso de frases coloquiales como: “Estás confundido” para señalar que el usuario ha cometido un error. Se usó un lenguaje más formal: “El dato introducido es inválido”. 7. Mantener un diseño consistente de una pantalla a otra Estándar: Hubo consistencia entre una interfaz a otra en la aplicación de FitPlanner. Se agregó el logo de la aplicación en la esquina superior izquierda. De igual forma se conserva la misma tipografía y paleta de colores 72 manteniéndose un diseño coherente a lo largo de la página para evitar desorden y confusión en el caso que se haya abandonado accidentalmente la aplicación. Tabla 15: Lista de comprobación aplicada Criterio de comprobación Se cumple No se cumple Reconocer en lugar de recordar X Usar indicadores visuales X Utilizar metáforas adecuadas X Los controles del sistema deben estar claramente visibles y sus funciones identificables X Flexibilidad en la interfaz de usuario X Hacer sentir al usuario que puede tomar decisiones X Proveer feedback a las acciones del usuario X Minimizar las posibilidades de cometer errores X Permitir al usuario recuperarse de los errores X Mantener la interfaz simple, sencilla y organizada X Permitir al usuario personalizar la IU X Mostrarle al usuario lo que necesita cuando lo necesite X Evitar palabras coloquiales y abreviaturas X Consistencia en apariencia y uso X 73 3.4 Fase de Entrega - Resultados En esta fase se muestra el prototipo final de la aplicación FitPlanner, luego de utilizar la metodología de desarrollo AgilUs. A su vez se realizan las pruebas de aceptación 3.4.1 Prototipo Funcional de la Aplicación (Capturas) En cuanto a las interfaces principales de la aplicación FitPlanner se tomaron en cuanto principalmente las realizadas en los prototipos en papel mostrados en la fase de análisis de la metodología usada. Se consideró para el desarrollo de las mismas la guía de estilos establecida, los modelos generados y los estándares aceptados para el desarrollo. a. Interfaz de la Página Principal y Menú de Navegación En la Figura 12 se muestra el Home o Inicio de la aplicación web, la cual está compuesta con un menú lateral ubicado a la izquierda, donde se puede observar todas las opciones que el usuario posee. Figura 13. Interfaz del Home de FitPlanner Fuente: Autores (2017) 74 b. Interfaz de Recetas organizadas por filtros Esta vista es una de las principales de la aplicación Web, en la que el usuario puede seleccionar los criterios de filtrado para visualizar una receta deseada. En este caso se aplican los filtros “Por Ingrediente” y “Por Tipo”. También se tiene la opción de “Agregar Receta”. Figura 14. Interfaz de Ver Todas las Recetas Fuente: Autores (2017) c. Menú de Navegación En la figura 15 se visualiza el menú en la parte lateral izquierda. En Mobile se despliega el menú del lado izquierdo. El menú se presenta legible para el usuario y es fácil de usar. 75 Figura 15. Interfaz del Menú de Navegación de FitPlanner Fuente: Autores (2017) d. Interfaz de Ejercicios Es una de las interfaces principales, en donde se muestran los ejercicios activados por el entrenador del usuario: Figura 16. Interfaz de Ver Ejercicios Fuente: Autores (2017) 76 e. Interfaz de Detalle de Receta La interfaz correspondiente del detalle de la receta, encontrada cuando el usuario clickea “Ver Receta” (Figura 17). En esta vista se ve el detalle de la receta (Ingredientes, Valores Nutricionales, Preparación etc.) para guía al usuario en la preparación de las recetas que seleccione. Figura 17. Interfaz del Detalle de una receta Fuente: Autores (2017) Adicionalmente se presenta la vista de ver la planificación y ver la lista de compras asociada con un plan. Es una interfaz cómoda, accesible y entendible por el usuario 77 Figura 18. Interfaz Planificación del usuario en FitPlanner Fuente: Autores (2017) Figura 19. Interfaz de Lista de Compras de FitPlanner Fuente: Autores (2017) 78 3.4.2 Pruebas de Aceptación Después de la evaluación a la aplicación FitPlanner se realizó una encuesta técnica a usuarios finales con conocimientos en el área de computación para conocer su opinión general sobre la usabilidad y funcionamiento de la misma. La encuesta fue aplicada a un grupo de nueve (9) personas, estudiantes o graduados de computación y la misma puede observarse en la Figura 20, a continuación: 79 Figura 20. Encuesta de Pruebas de Aceptación - FitPlanner Fuente: Autores (2017) Los resultados obtenidos en la encuesta fueron: 80 81 82 83 CONCLUSIONES Al culminar de manera satisfactoria el desarrollo del presente Trabajo Especial de Grado, se pudo lograr el objetivo del desarrollo de una aplicación Web para la planificación de la ingesta calórica a través de recetas y de ejercicios que les permita a los usuarios lograr sentirse mejor y tener una vida más saludable. Se puede destacar que cada día es más popular el tema de la salud y del fitness en la sociedad y surgen cada día nuevos emprendimientos, ideas para brindarles a las personas lo que desean. Gracias a la metodología de desarrollo de software ágil aplicada, se obtuvo la aplicación FitPlanner para ayudar a los usuarios a planificarse de mejor manera en cuanto a su alimentación y tener una rutina de ejercicios que apoye a los instructores de gimnasios y a los usuarios que deseen incluir el hábito de ejercitarse en casa, en el caso que no tengan tiempo o se les dificulte ir diariamente a un gimnasio o salir a caminar. En la actualidad no se consigue una aplicación que integre tanto rutinas alimenticias como de ejercicios físicos. Adicionalmente el sistema le genera una lista de compras al usuario para también darle la facilidad de recordarle qué ingredientes necesita para la preparación de las recetas escogidas en un plan específico. Aplicar de forma adecuada la metodología AgilUs asegura que la aplicación cumple con los estándares de usabilidad necesarios y de calidad que caracterizan a las mejores aplicaciones web. FitPlanner es un prototipo de sistema funcional que tiene un gran potencial en varias áreas principalmente en la de salud específicamente para médicos y nutricionistas; y para otras áreas de negocio como gimnasios, instructores personales y hasta para áreas gastronómicas. Entre sus funciones principales están: creación de perfiles de usuario, la planificación de dietas y ejercicios, la gestión de recetas, y la visualización de ejercicios 84 físicos acordes al usuario sometido previamente a un instructor físico. En el transcurso del desarrollo de la aplicación se encontraron una serie de dificultades como fue agregar las imágenes de los ejercicios de forma que fueran lo más entendibles por el usuario. 85 RECOMENDACIONES Y TRABAJOS FUTUROS Es necesario en todo desarrollo que se evalúe las mejoras que puedan ser anexadas a la aplicación para de esta forma obtener el mayor éxito posible en cuanto al uso una cantidad considerable de personas. Por dicha razón se enuncian las siguientes recomendaciones: a. Se debe realizar alianzas estratégicas con los instructores físicos y gimnasios, usuarios potenciales para establecer un negocio con la aplicación, la cual le brindará beneficios y servirá de apoyo en su labor cotidiana, aumentando su posibilidad de ofrecer a sus clientes un plus donde podrán controlarse de acuerdo a la planificación realizada en la aplicación. b. Realizar la publicidad en áreas en donde la aplicación puede resultar de interés y de rentabilidad para un negocio específico. c. Realizar estudios estadísticos acerca de los datos de interés usados en la aplicación, como por ejemplo recetas más preparadas, ejercicio más realizado, ingrediente más usado, entre otras cosas que resulten beneficiosas para su estudio y ofrecer al cliente un mejor producto que se adapte a sus gustos y deseos. El presente trabajo posee algunas limitaciones que se propone solucionar con la implementación de ampliaciones y mejoras en trabajos futuros, que se describen a continuación: a. Un módulo de sociabilidad, donde puedan ser compartidos por redes sociales las recetas, los ejercicios. Evaluar las recetas y en cierta parte permitir que el usuario agregue comentarios del instructor físico que tiene asignado en la aplicación. 86 b. También se debe ampliarse más a la parte de salud, en el caso de clínicas u hospitales donde se quiere tener un control más estricto al consumo de los pacientes en cuanto a la alimentación. De igual forma se puede enfocar más a las áreas de nutrición y fisiatría, donde es imprescindible las rutinas de dietas y ejercicios respectivamente c. Puede agregarse un módulo de compras directamente con cadenas de supermercados que trabajen con compras online y delivery, de forma que se ofrezca un servicio integrado entre la aplicación y las cadenas de supermercados, donde se pueda visualizar la lista de compras del usuario d. Aplicar Inteligencia de Negocios (Business Intelligence) en el producto para obtener información relevante que pueda contribuir y aportar al sistema y poder ofrecer funcionalidades y servicios que sean adaptables en una sociedad heterogénea y cambiante. Para finalizar, no se descarta la posibilidad de mejora y ampliación de las interfaces de la aplicación para mantener una visión actualizada del negocio y la posible implementación de una aplicación móvil que permita complementar el uso del sistema. 87 REFERENCIAS BIBLIOGRÁFICAS Acosta, A. (2010). AgilUs: Construcción ágil de la usabilidad. Recuperado de: http://www.ciens.ucv.ve:8080/genasig/sites/interaccion-humano- comp/archivos/234_CLEI_Acosta_Paper.pdf Albreshne A, Fuhrer P, y Pasquier, J. (2009). Web Services Technologies: State of the art. Recuperado de: https://diuf.unifr.ch/drupal/softeng/sites/diuf.unifr.ch.drupal.softeng/files/file/ publications/internal/WP09-04.pdf Azaustre, C. (2014). Desarrollo Full Stack JavaScript. El conocido como Stack MEAN. Recuperado de: https://carlosazaustre.es/blog/desarrollo-full- stack-javascript-tambien-conocido-como-mean Barry, D. (2016). Web Services Explained. Recuperado de: http://www.service-architecture.com/articles/web- services/web_services_explained.html Blé, C. (2010); Diseño ágil con TDD. Lulu. Reino Unido Crocco, A. (2016). Menú semanal saludable para toda la familia. Recuperado de: http://www.clarin.com/buena-vida/nutricion/Menu-semanal-saludable- toda-familia_0_BJ6Kz7ji.html DB-Engine. (2017). Popularity of DBMS. Recuperado de: http://db- engines.com/en/ranking Digital Learning. (2012). 10 Razones para aprender JavaScript. Recuperado de: http://www.digitallearning.es/blog/diez-razones-para-aprender- javascript Enciclopedia Británica. (2016). Client-server Architecture. Recuperado de: http://www.britannica.com/technology/client-server-architecture Flanagan, D. (2011); JavaScript: The Definitive Guide. O'Reilly. Estados Unidos de América. Fundación Bengoa (2013). La doble carga de desnutrición y obesidad en Venezuela. Recuperado de: 88 http://www.fundacionbengoa.org/informacion_nutricion/doble-carga- desnutricion-obesidad-venezuela.asp Gottau, G. (2013). Cómo planificar un menú saludable. Recuperado de: https://www.directoalpaladar.com/salud/como-planificar-un-menu- saludable Gottau, G. (2009). Planifica tu menú y verás los beneficios. Recuperado de: https://www.vitonica.com/dietas/planifica-tu-menu-y-veras-los-beneficios Kioskea. (2016). Entorno Cliente/Servidor. Recuperado de: http://es.ccm.net/contents/cliente-servidor-3322219037#148 Leclerqc M, Bohorquez M. (2009). Propuesta Institucional Vidas Móviles. Informe de actividades. Pontificia Universidad Javeriana. Bogotá D.C. Morales A. (2015). Introducción al Stack MEAN y sus componentes: MongoDB, Express, AngularJs y NodeJs. Recuperado de: http://www.funnyfrontend.com/introduccion-stack-mean-parte-1 Moya, R. (2014). MEAN (Mongo-Express-Angular-Node) Desarrollo Full Stack JavaScript (Parte I). Recuperado de: https://jarroba.com/mean- mongo-express-angular-node-desarrollo-full-stack-javascript-parte-i Nations, D. (2014). What is a Web Application?. Recuperado de: https://www.lifewire.com/what-is-a-web-application-3486637 Paramio, C. (2011). Una introducción a MongoDB. Recuperado de: https://www.genbetadev.com/bases-de-datos/una-introduccion-a-mongodb Esaú A. (2015) Conceptos básicos de Git. Recuperado de: https://openwebinars.net/blog/conceptos-basicos-de-git/ Vargas A, Guzmán J (2017) ¿Qué es Git y cuáles son sus características? Recuperado de: http://comunidad.cc/que-es-git Pérez, J. (2008). Dieta. Recuperado de: http://definicion.de/dieta 89 Pérez, J. y Gardey, A. (2008). Sistema de información. Recuperado de: http://definicion.de/sistema-de-informacion PYPL. (2017). PYPL Popularity of Programming Language. Recuperado de: http://pypl.github.io/PYPL.html Ralston, S. (2013). An introduction to AngularJS. Recuperado de: http://www.webdesignerdepot.com/2013/04/an-introduction-to-angularjs Rouse, M. (2011). Web Application. Recuperado de: http://searchsoftwarequality.techtarget.com/definition/Web-application- Web-app W3Techs. (2017). Percentages of websites using various client-side programming languages. Recuperado de: https://w3techs.com/technologies/overview/client_side_language/all Delgado Fernández A. (2008) Entrenamiento físico deportivo y alimentación. Ed. Paidotribo. Tercera edición. México Caraffini D. (2015). Hay más conciencia sobre la salud física y la buena nutrición, pero el sedentarismo avanza. Recopilado de: http://www.unoentrerios.com.ar/la-provincia/hay-mas-conciencia-la-salud- fisica-y-la-buena-nutricion-pero-el-sedentarismo-avanza-n934031.html Montero S. (2016). Patrones de Interacción. Recopilado de: http://ares.cnice.mec.es/informes/21/contenidos/30.htm Nielsen J. (1994). Usability Inspection Methods. New York, USA. Editorial John Wiley & Sons. 90 ANEXOS Figura 21. Anexo 1. Servicios Gold´s Gym Venezuela Fuente: web Gold’s Gym VenezuelaMicrosoft Word - Tesis_Final.docx UNIVERSIDAD CENTRAL DE VENEZUELA FACULTAD DE CIENCIAS ESCUELA DE COMPUTACIÓN CISI DESARROLLO DE UNA APLICACIÓN WEB PARA EL CONTROL NUTRICIONAL Y DE EJERCICIOS QUE APOYE A LOS INSTRUCTORES FÍSICOS Trabajo Especial de Grado presentado ante la Ilustre Universidad Central de Venezuela por los Bachilleres Johaney Carolina Meza Quinto Anthony Merquiades Herrera Ferrebus Para optar al título de Licenciado en Computación Tutor: Profesor Franklin Sandoval Caracas, julio 2017 DEDICATORIAS Quiero dedicar este trabajo especial de grado primeramente a mis padres y a mis hermanos, ya que han sido mi apoyo y fortaleza todos estos años por brindarme sus consejos e impulsándome a ser cada día mejor. Esto es para ustedes, para que se sientan orgullosos de mí. Madre, Padre y hermanos Carlos y Johana, les agradezco sinceramente por creer en mí y me siento realmente afortunada de tenerlos en mi vida. También dedico este trabajo a toda mi familia en especial a mi abuela y amigos que me han apoyado muchísimo a lo largo de mi carrera y para culminar este proyecto, en especial a Susana Hernández, por ser una amiga y compañera de estudios que me apoyo siempre para que lograra mis objetivos, al igual que a mis amigos Yanny Carolina, Israel Ortiz, José Parada y José Fiore. Dedico también este trabajo a mi novio Jesús Cardozo por estar allí en todo momento, Y por ultimo pero no menos importante a dos personitas que desde el cielo han sido una lucecita y que en vida me dieron mucho Antonio Quinto y Edgar Ruiz, los amaré siempre. Johaney Meza Quinto A mi madre, por el inmensurable esfuerzo que realizaste para apoyarme durante el desarrollo de mi carrera profesional, por tu paciencia y comprensión en los momentos difíciles y tu ayuda incansable. Gracias a tus sacrificios pudimos cumplir nuestros sueños y tenemos la posibilidad de ver hacia el futuro sabiendo que contamos con las herramientas necesarias para construir lo que deseamos. Mis logros son tuyos. A mis viejos amigos Joaquín Alegre, Fernando Morales y "gocho", por tantos momentos de estudio, lágrimas y sonrisas, indudablemente aprendí mucho de ustedes, de no ser por estar allí, la carrera nunca hubiese sido tan especial ni tendría tantos recuerdos. A mi amigo Carlos Riera, el cual me dio tantos regaños y nunca se negó a impartir sus conocimientos, gracias por no permitir que me saliera del camino, diste mano dura y palabras de aliento en el momento justo. A mis compañeros y amigos que siempre tuvieron palabras de ayuda, escucharon los problemas y las victorias. A todos ustedes, que Dios los bendiga y los guarde en todo momento. Anthony Herrera ii AGRADECIMIENTOS Queremos agradecer a todas las personas que de alguna u otra manera estuvieron involucrados en el desarrollo de este Trabajo Especial de Grado. Significa muchísimo para nosotros que nos hayan apoyado en el transcurso de esta travesía, y que hayan contribuido con consejos, conocimiento, entre tantas cosas. Primeramente deseamos agradecer de corazón a nuestros familiares por mantenerse firmes con nosotros e impulsarnos a dar lo mejor de nosotros, ser nuestro apoyo y sostén en todo momento, además de demostrarnos su amor, cariño y preocupación por lograr nuestros objetivos personales y profesionales, especialmente a nuestras madres y padres, ya que ellos desde muy pequeños se preocuparon por educarnos y enseñarnos los principios morales y éticos que nos van a ayudar a lo largo de nuestra carrera profesional y nuestra vida personal. Gracias a nuestros amigos y compañeros por acompañarnos durante este camino, donde crecimos juntos y compartimos tantos momentos llenos de risas, alegría, tristeza, desilusión, angustia, triunfos, entre tantas cosas. Gracias por estar presente y por permitirnos participar con ustedes en todas las experiencias que indudablemente nos enriquecieron. Gracias a nuestro tutor y profesor, Franklin Sandoval, quien se ha caracterizado por ser no sólo un profesor para nosotros, sino una excelente persona y un amigo. Gracias profe por guiarnos en este arduo camino y por brindarnos su apoyo en todo momento. Su entrega y dedicación son invalorables para nosotros como sus alumnos. Nuestros mejores deseos para usted en su carrera profesional y en su vida personal. Muchas bendiciones. Agradecemos a los profesores de la Universidad Central de Venezuela, en especial a la Facultad de Ciencias por recibirnos como sus hijos y por brindarnos todos los conocimientos necesarios, las metodologías y, principalmente las experiencias y la capacidad de análisis para la resolución de situaciones o problemas que se nos puedan presentar en la ciencia de la Computación para caracterizarnos como profesionales exitosos y dar lo mejor de nosotros cada día en nuestra carrera de la vida. iii Universidad Central de Venezuela Facultad de Ciencias Escuela de Computación Centro de Investigación y Sistemas de Información (CISI) RESUMEN El presente trabajo especial de grado tiene como propósito ofrecer una aplicación enfocada al área nutricional y fitness para proveerles a los usuarios la posibilidad de controlar su ingesta calórica. Inicialmente se realizó una revisión bibliográfica y de sistemas usados actualmente para brindar una innovación en el área mencionada. Posteriormente, se desarrolló bajo la metodología de AgilUs una aplicación Web para la planificación de una dieta adaptada a los gustos e intereses de los usuarios y asimismo de una rutina de ejercicios en un periodo de tiempo específico, permitiendo orientar las funcionalidades del sistema a las necesidades e inclinaciones del usuario tomando en cuenta los principios de la usabilidad desde las primeras iteraciones del desarrollo. El sistema le ofrece al usuario realizar una planificación en cuanto a alimentación y ejercicios adaptados a los gustos y características físicas del usuario. Se incluye un módulo de planificación para las recetas deseadas a consumir y los ejercicios a realizar usuario, se genera una lista de compras de acuerdo a la planificación de las recetas escogidas y a los comensales el cual puede ser visualizado al inicio cuando se ingresa; un módulo de Recetas que permite visualizar recetas creadas por defecto y crear y editar recetas personales y un módulo de Ejercicios para visualizar los ejercicios cargados por el entrenador del mismo. El motivo de usar la metodología AgilUs en la realización del software es por ser una metodología centrada en el usuario en todas las fases del desarrollo y porque se basa en los principios de usabilidad que garantiza que la interfaz sea amigable y fácil de usar. Como conclusión final se puede agregar que es factible que el sistema se pueda incorporar como un emprendimiento en el negocio fitness y de salud entre los que se puede nombrar gimnasios y nutricionistas respectivamente, el cual puede ampliarse en el ámbito de gastronomía y abarcar otras áreas de negocio tales como supermercados, restaurantes, entre otros, consiguiendo que la aplicación de la metodología de desarrollo del software sea efectiva y afianzándose como un sistema potencial con nuevos desarrollos a futuro. Palabras Clave: Aplicación Web, NodeJs, Express, AngularJs, PostgreSQL, Bootstrap, AgilUs, Control Nutricional, Recetas, Ejercicios, Plan Nutricional, Instructor físico. iv INDICE GENERAL INTRODUCCIÓN ............................................................................................. 8 CAPÍTULO 1 PROBLEMA DE INVESTIGACIÓN ..................................... 11 1.1 Planteamiento del problema .............................................................. 11 1.2 Objetivos del Trabajo Especial de Grado ........................................ 14 1.2.1 Objetivo General .......................................................................... 14 1.2.2 Objetivos Específicos .................................................................. 15 1.3 Justificación ......................................................................................... 15 1.4 Alcance ................................................................................................. 17 1.5 Metodología de Desarrollo: AgilUs ................................................... 18 CAPÍTULO 2 MARCO CONCEPTUAL ...................................................... 24 2.1 Entrenamiento Físico .......................................................................... 24 2.2 Nutrición ............................................................................................... 25 2.3 Sistemas de información .................................................................... 25 2.3.1 Aplicaciones Web ........................................................................ 26 2.4 Arquitectura Cliente – Servidor ......................................................... 27 2.5 Lenguajes de Programación para Desarrollo Web ........................ 28 2.5.1JavaScript ...................................................................................... 30 2.6 Marcos de Trabajo para el Desarrollo Web (frameworks web) .... 31 2.6.1 AngularJS ..................................................................................... 32 2.7 Servicios Web ...................................................................................... 32 2.8 Servidores web .................................................................................... 34 2.8.1 Node.JS ......................................................................................... 35 2.8.2 Express ......................................................................................... 35 2.9 Git .......................................................................................................... 36 2.10 Sistemas manejadores de bases de datos (SMBD) .................... 37 2.10.1 Bases de Datos Relacionales (SQL) ...................................... 38 CAPÍTULO 3 MARCO APLICATIVO .......................................................... 41 3.1 Fase de requisitos ............................................................................... 43 3.1.1 Tormenta de ideas ....................................................................... 43 v 3.1.2 Encuesta ....................................................................................... 44 3.1.3 Requerimientos Funcionales y No Funcionales ...................... 49 3.1.4 Perfiles de usuario ...................................................................... 50 3.2 Fase de Análisis ...................................................................................... 50 3.2.1 Casos de Uso de FitPlanner ...................................................... 50 3.2.2 Modelo de Objetos del Dominio ................................................ 61 3.2.3 Patrones de interacción .............................................................. 62 3.3 Fase de Prototipaje ............................................................................. 66 3.3.1 Aspectos de Accesibilidad y Sociabilidad ................................ 66 3.3.2 Evaluación Heurística ................................................................. 67 3.3.3 Lista de Comprobación ............................................................... 69 3.4 Fase de Entrega - Resultados .......................................................... 73 3.4.1 Prototipo Funcional de la Aplicación (Capturas) ..................... 73 3.4.2 Pruebas de Aceptación ............................................................... 78 CONCLUSIONES .......................................................................................... 83 RECOMENDACIONES Y TRABAJOS FUTUROS ................................... 85 REFERENCIAS BIBLIOGRÁFICAS ........................................................... 87 ANEXOS ......................................................................................................... 90 vi INDICE DE FIGURA Figura 1. Ciclo de vida en la metodología AgilUs ..................................... 20 Figura 2. Intercambio de mensajes con REST ......................................... 33 Figura 3. Intercambio de mensajes con JSON. ........................................ 34 Figura 4. Los tres estados de Git y sus estados ...................................... 37 Figura 5. Arquitectura de la solución propuesta. ...................................... 41 Figura 6. Modelo de la base de datos. ....................................................... 42 Figura 7. Tormenta de Ideas. ....................................................................... 43 Figura 8. Casos de Nivel 1. .......................................................................... 53 Figura 9. Casos de Uso nivel 2 ................................................................... 56 Figura 10. Modelo de dominio de FitPlanner ............................................. 62 Figura 11. Prototipo Inicial Home de Fitplanner. ....................................... 64 Figura 12. Interfaz de agregar Recetas – Ejercicios. ............................... 65 Figura 13. Interfaz del Home de FitPlanner ............................................... 73 Figura 14. Interfaz de Ver Todas las Recetas ........................................... 74 Figura 15. Interfaz del Menú de Navegación de FitPlanner .................... 75 Figura 16. Interfaz de Ver Ejercicios ........................................................... 75 Figura 17. Interfaz del Detalle de una receta ............................................ 76 Figura 18. Interfaz Planificación del usuario en FitPlanner ..................... 77 Figura 19. Interfaz de Lista de Compras de FitPlanner ........................... 77 Figura 20. Encuesta de Pruebas de Aceptación - FitPlanner ................ 79 Figura 21. Anexo 1. Servicios Gold´s Gym Venezuela ............................ 90 vii INDICE DE TABLA Tabla 1: Popularidad de los lenguajes de programación ........................ 29 Tabla 2: Lenguajes de programación más utilizados en web. ................ 29 Tabla 3: Frameworks web valorados (usuarios). ...................................... 31 Tabla 4: Ranking de los SMBD al mes de enero del año 2017. ............. 38 Tabla 5: Especificación de los casos de uso del nivel 1 – CU #1 .......... 53 Tabla 6: Especificación de los casos de uso del nivel 1 – CU #2 .......... 54 Tabla 7: Especificación de los casos de uso de nivel 2 – CU #3 ........... 57 Tabla 8: Especificación de los casos de uso de nivel 2 – CU #4 ........... 58 Tabla 9: Especificación de los casos de uso de nivel 2 – CU #5 ........... 58 Tabla 10: Especificación de los casos de uso de nivel 2 – CU #6 ......... 59 Tabla 11: Especificación de los casos de uso de nivel 2 – CU #7 ......... 60 Tabla 12: Especificación de los casos de uso de nivel 2 – CU #8 ......... 60 Tabla 13: Detalle de patrón de interacción de selección de fechas ....... 62 Tabla 14: Evaluación Heurística y su análisis ........................................... 69 Tabla 15: Lista de comprobación aplicada ................................................ 72 INTRODUCCIÓN En la actualidad con el gran uso de la tecnología se ha originado la necesidad de tener la información al alcance de la mano para satisfacer todas las inquietudes, dudas, deseos entre otras cosas. Esta tecnología se basa en sistemas de información o aplicaciones que automatizan procesos que deben cumplir un funcionamiento específico tales como entretener, educar, informar, entre otros. No es un secreto que con el pasar del tiempo se incrementa en la sociedad a través de los medios o redes sociales un modelo enfocado a cuidar la salud, cuerpo y mente, de manera que se pueda tener una mejor calidad de vida. Tener un cuerpo perfecto no solo es la preocupación de las mujeres, sino también de los hombres, por tanto, los temas de la salud y la estética, que van de la mano con las dietas para tener una alimentación balanceada son temas muy sonados en el día a día. Actualmente a nivel mundial existe una cantidad considerable de gimnasios, estéticas, nutricionistas que se esfuerzan cada vez más por innovar sus técnicas, métodos y servicios para proveer a sus clientes el mejor de los servicios y de esa forma poder ayudarlos a verse mejor y sentirse mejor. De acuerdo a lo mencionado anteriormente hay un gran interés en los gimnasios y en los instructores de los mismos apoyarse en una aplicación que sea accesible a sus clientes, sencilla de usar y que tenga la función de ofrecer un servicio integral y personalizado donde se tome en cuenta los intereses, gustos y condiciones de cada individuo, y en el que pueda realizarse una planificación de recetas o de dieta balanceada y ejercicios físicos que lo ayude a alcanzar sus objetivos. Una buena alimentación siguiendo con un régimen acorde a las necesidades del cuerpo es esencial para obtener el peso ideal, y como 9 apoyo acompañarlos con ejercicio físico para definir ciertas zonas corporales. Según Pérez (2008), una dieta es el conjunto de las sustancias alimenticias que componen el comportamiento nutricional de los seres vivos. El concepto proviene del griego díaita, que significa “modo de vida”. La dieta, por lo tanto, resulta un hábito y constituye una forma de vivir. Se conoce como ejercicio físico a la realización de movimientos corporales planificados, repetitivos, y en ocasiones supervisados por un instructor, con el objetivo de estar en forma física y gozar de una buena salud. En este Trabajo Especial de Grado se presenta un programa que permita el control de la ingesta calórica diaria a través de la preparación de recetas personalizadas o a gusto del usuario, reduciendo las posibilidades de las decisiones al azar de la alimentación diaria; por otro lado provee una variedad de ejercicios adaptados a cada usuario según sus requerimientos, de forma que le permita apoyarse en la aplicación para realizar una rutina diaria y alcanzar su peso y cuerpo ideal. Entre las justificaciones del desarrollo de esta investigación se puede mencionar la falta de una aplicación web que integre una planificación de régimen nutricional y ejercicios físicos de forma personalizada, tomando en cuenta gustos, condiciones físicas e intereses del usuario; la necesidad que tiene la gran cantidad de gimnasios y de instructores personales de ofrecer un servicio integrado y accesible a sus clientes; y las miles de personas que se suman al mundo fitness y que no tienen una herramienta al alcance que los ayude a planificar su alimentación y ejercicios para lograr su objetivo de sentirse y verse bien Este documento se compone de tres capítulos donde se describe la problemática actual, su justificación y objetivos así como los conceptos necesarios que se relacionan con el desarrollo de la aplicación, la metodología usada y su implementación. A continuación se detalla cada uno de los capítulos. 10 Capítulo I: Problema de Investigación. Se define el problema actual, su solución, así como los objetivos generales y específicos a cumplir en este Trabajo Especial de Grado, y la justificación del mismo. También se describe la metodología AgilUs usada para el desarrollo del software Capítulo II: Marco Conceptual. Se describe los conceptos necesarios referentes a la investigación que dará soporte a los procesos involucrados en el análisis, desarrollo e implementación de la aplicación web para el control nutricional. También se define otros puntos relacionados con el área de nutrición que soporta la construcción del sistema web mencionado. Capítulo III: Marco Aplicativo. Se presenta la metodología adaptada al desarrollo de la aplicación web para el control nutricional y físico del usuario. Se describe todos los pasos involucrados en el desarrollo de la solución planteada, así como los artefactos generados en la realización del software. Por último se presenta las conclusiones, recomendaciones y referencias bibliográficas de la presente investigación. 11 CAPÍTULO 1: PROBLEMA DE INVESTIGACIÓN En este capítulo se describe el contexto del problema, luego se expone el objetivo general y los objetivos específicos, así como la justificación de la realización del presente Trabajo de Especial de Grado. 1.1 Planteamiento del problema Se incrementa de forma notable la cantidad de personas que desean entrar en el mundo fitness o aquellas que se sienten con la necesidad de tener un cuerpo esbelto por lo que la sociedad transmite. En cuerpo sano hay una mente sana, esta consigna muy popular se ha hecho cada vez más impositiva por muchos factores como el bullying, el hecho de quererse ver o imitar a algún(a) modelo(a) que es admirado(a) por la mayoría de las personas, por tratar de encajar mejor en la sociedad y lograr mayor aceptación o simplemente para sentirse saludable y en buenas condiciones físicas. En Latinoamérica hay que destacar que está ocurriendo una superposición alimentaria en la comunidad, es decir, se observa al mismo tiempo el sobrepeso y el bajo peso. Esto se debe a las dietas predominantes en Latinoamérica, en la que prevalecen los alimentos procesados, ricos en grasas saturadas, azúcares y proteínas de origen animal. Según la Dra. López (Fundación Bengoa, 2013) en ese ambiente de carencias y mala alimentación, se presenta la llamada "Doble carga nutricional". Se le da ese nombre porque al mismo tiempo la población sufre de desnutrición y sobrepeso. Estas condiciones, a pesar de ser idealmente antagónicas, tienen un mismo origen: la mala alimentación. 12 Aunque la nutrición es importante para un desempeño físico en la vida cotidiana, es importante resaltar que cuando se realiza una actividad extra como lo es el deporte o ejercicios físicos de alto rendimiento, se logran los objetivos con mayor rapidez ya que se restan calorías que el individuo consume en el día. Es indispensable un buen control en cuanto a la alimentación para cubrir todas las necesidades nutricionales del organismo. De acuerdo con Caraffini (2007), “Mayor tasa de sobrepeso a nivel mundial, vinculación de la alimentación con el placer, fallas en la cantidad y calidad de los alimentos son indicadores que se entremezclan con una mayor conciencia sobre la importancia de una buena nutrición y de la realización de actividad física. Hay más conciencia, pero cada vez cuesta más, y por eso, pese a que cada vez más gente se vuelca a los deportes, a las diversas propuestas recreativas, el sedentarismo se ha incrementado, y junto con él, un grupo de patologías de riesgo asociadas.”. Debido a lo que la sociedad transmite en la actualidad con respecto a sinónimos de belleza y salud se ha incrementado la conciencia y la preocupación por verse y sentirse más saludable y se ven en la necesidad de buscar apoyo profesional y autoayudarse acudiendo a gimnasios y a nutricionistas. En este contexto, la presente investigación se origina porque en la actualidad resulta complicado para los instructores personales de los gimnasios satisfacer la demanda de todos sus miembros o clientes sin un sistema que controle la planificación nutricional y actividades físicas simultáneamente, y a su vez los clientes no tienen un artefacto que los apoye con su interés de examinar su ingesta calórica y alguna rutina de ejercicios para el control de su peso corporal y mantenerse de esta forma saludable de acuerdo a sus condiciones e intereses personales. Vale destacar que se tocan dos puntos importantes en el presente Trabajo de Grado, el de nutrición y/o dietas que se basan en recetas que se 13 puedan elaborar, dando toda la información necesaria en cuanto a valores calóricos se consumen; y el de entrenamiento o ejercicios físicos que acompañan a la dieta permitiéndole al usuario establecer rutinas de ejercicios para mejorar las condiciones físicas y de salud. En el ámbito comercial, en Venezuela uno de los gimnasios más grandes y con más servicios es el Gold’s Gym, que entre ellos ofrece un Personal Trainer, Club de niños para el cuidado de los hijos de los clientes, Nutrición y pro shop (Anexo 1). Sin embargo no cuentan con una aplicación que integre la planificación de un entrenamiento físico y régimen nutricional personalizado que sea adaptable en el tiempo y considere hasta las limitaciones que tiene en cuanto a los alimentos con los que cuenta para preparar una comida en un momento dado. En la mayoría de los casos, es difícil para una persona cambiar una rutina tanto en los ámbitos de entrenamiento físico como nutricionales, por tanto si no se tiene la suficiente dedicación, constancia, voluntad, y tiempo se recurre al fracaso, y se aleja más del objetivo planteado al incurrir en las faltas al gimnasio, y de planificación con las recetas que son aptas para lo que el cuerpo necesita en cuanto a la salud, y peso, entre otras cosas. Por ello es necesaria la implementación de una herramienta que sea accesible en todo momento, y que ayude a planificar el día para obtener en un futuro próximo buenos resultados. Adicionalmente existen factores que en la mayoría de los casos es un inconveniente para las personas que quieren mantenerse en forma, tales como económicos y de tiempo en diferentes casos como por ejemplo horarios de trabajo, mayores responsabilidades en el hogar como las amas de casa que tienen hijos, entre otras cosas que les impiden a las personas programarse para ir diariamente o con mucha frecuencia al gimnasio. Estas causas traen consigo consecuencias tales como la inestabilidad y desorden 14 alimenticio, la ausencia de actividad física tan necesaria para mantener al cuerpo y mente saludable. Hoy en día se puede observar diferentes aplicaciones informáticas que poseen la información necesaria para crear menús de distinta índole, sin tomar en cuenta la ingesta de proteínas, carbohidratos, grasas y calorías, también se tienen aplicaciones (generalmente creadas para deportistas o personas que comenzarán una rutina de ejercicio) en donde sí se estudia estos aspectos, mas no se trata la preparación de las recetas. También existen numerosas aplicaciones que registran una cantidad de ejercicios físicos a realizar pero sin ningún tipo de información nutricional o ingesta calórica. Por lo antes mencionado se plantea la siguiente interrogante ¿Cómo puede diseñarse una aplicación que permita gestionar menús acompañada de su preparación tomando en cuenta la ingesta de las calorías, junto con una rutina de ejercicios de forma personalizada? 1.2 Objetivos del Trabajo Especial de Grado A continuación, se presentan los objetivos: general y específicos que se usarán de guía para el desarrollo de la aplicación propuesta en la investigación. 1.2.1 Objetivo General Desarrollar una aplicación web para el control nutricional y rutina de ejercicios diarios que apoye a los instructores físicos personales y de gimnasios para sus clientes a nivel global en el mercado de habla hispana. 15 1.2.2 Objetivos Específicos • Definir los requerimientos funcionales y no funcionales en el desarrollo de la aplicación web para controlar la ingesta calórica y rutina de ejercicios físicos de los usuarios finales de la misma. • Elaborar el modelo de datos y los diagramas en cuanto a las funcionalidades y comportamiento del sistema. • Desarrollar todos los módulos del sistema que permitan que la aplicación cumpla con el objetivo planteado, tomando en cuenta su correcto despliegue en cuanto al diseño responsive. • Establecer un conjunto de pruebas de usabilidad y validación para evaluar los componentes del software planteado como la solución. 1.3 Justificación Las aplicaciones Web, a medida que pasa el tiempo, van ganando mayor importancia y popularidad debido al rápido avance de la tecnología y a las facilidades que estas ofrecen, tales como la practicidad de los navegadores Web para el acceso de los usuarios y la rapidez para su actualización. Como consecuencia directa de esta popularidad, las aplicaciones Web de hoy día, independientemente de su finalidad, tienden a ser más complejas y utilizadas por un gran número de usuarios, con características diferentes. Dada la situación actual e inquietudes en cuanto a la salud y estética de la población se propuso el desarrollo de una aplicación web para la creación o la selección de menús o recetas de comida, de acuerdo a los gustos y necesidades de usuario en donde el mismo podrá visualizar la información nutricional con los detalles de la ingesta diaria en cuanto a las calorías, proteínas, carbohidratos y grasas consumidas, así como también integrarlo con rutinas de ejercicios físicos que apoya. 16 La aplicación está dirigida a los instructores de gimnasio o personales que deseen generar dietas particulares a cada uno de sus clientes, e incluir rutinas de manera de controlar a sus clientes conociendo su meta como por ejemplo, pérdida de grasa o aumento muscular y brindarle un mejor servicio. A su vez se enfoca en los alumnos de los instructores mencionados previamente entre las edades comprendidas entre 14 y 50 años que deseen tener un control de los alimentos que consumen y que puedan seleccionar o incorporar en su dieta recetas que se adapten a sus intereses y objetivos, también quieren aprender a cocinar de forma inteligente, y con esto socavar con los problemas nutricionales yacentes en nuestras comunidades, alargando así la vida de las personas. Adicionalmente también podrán tener una rutina de ejercicios personalizadas de acuerdo a sus objetivos en cuanto a condiciones físicas y peso corporal. Es importante la variedad de alimentos en el mismo y contemplar la dificultad así como el tiempo de preparación de cada comida, ya que si no hay tiempo para cocinar, será oportuno planificar algo rápido pero sano para esa comida. Según Gottau (2009) establece que los beneficios de planificar un menú son muchos e incluyen mayor facilidad para cuidar la dieta, menos gasto de dinero, alimentación más saludable, y ahorro de tiempo al cocinar. Hay que destacar que una adecuada nutrición en compañía de ejercicios físicos va a influir directamente sobre el estado de salud favorablemente, no sólo porque una buena situación nutricional representa una menor mortalidad, sino también, en cuanto a la prevención de enfermedades. Por éstas y otras razones, y dado que se trata de una comunidad heterogénea, la dieta adquiere un papel relevante para el mantenimiento de la salud con el aumento de la edad. 17 1.4 Alcance La aplicación web permite a los usuarios consultar de acuerdo a su perfil y gustos las recetas que más se adapten y su rutina de ejercicio personalizada de acuerdo a sus características físicas. Está dirigida a entrenadores personales y pertenecientes a gimnasios que quieran controlar a sus alumnos y ofrecerles un servicio integrado y personalizado que sobresalga sobre sus competencias, y a los alumnos de los mismos con edades comprendidas entre 14 y 50 años interesados en planificar su ingesta calórica y establecer un hábito de ejercicios físicos. Dentro de la aplicación se tendrán los siguientes módulos para las diferentes funcionalidades del mismo: • Módulo de registro cada usuario en la aplicación, para así guardar la información necesaria y poder realizar seguimiento a la persona a través del tiempo, teniendo un registro de su alimentación (perfil nutricional). • Módulo de recetas: en esta sección el usuario podrá seleccionar la receta que desee, y visualizará los ingredientes, preparación y su tiempo estimado, a su vez también los valores nutricionales por cada ración y nivel de dificultad de la misma. Además, se podrá crear nuevas recetas, eligiendo los alimentos ya creados en el sistema. Para el funcionamiento correcto de este módulo se cuenta con la participación de un nutricionista. • Módulo de planificación: En este módulo el usuario realiza la planificación de las recetas a consumir y los ejercicios a realizar en un rango de fechas no mayor a dos semanas. Con la información suministrada en este módulo el usuario podrá visualizar una lista de compra con los ingredientes necesarios para la preparación de las comidas seleccionadas. 18 • Módulo de rutina de ejercicios: sección que muestra diferentes rutinas de ejercicios de acuerdo a las características físicas del usuario. Los instructores podrán agregar ejercicios a través de este módulo. 1.5 Metodología de Desarrollo: AgilUs Los cambios y adaptaciones del sistema se determinan en función de los requerimientos. De acuerdo a los principios de metodologías ágiles, las funcionalidades del sistema se van añadiendo progresivamente. La usabilidad debe considerarse en cada etapa de desarrollo. Tal como menciona Acosta (2010), "Son muchos los métodos propuestos para el desarrollo de software y son muchas las herramientas y técnicas con que cuentan los ingenieros de software para realizar su trabajo". Al ser esta la pieza central sobre la cual se trabaja, el sistema va tomando forma de acuerdo a las necesidades del usuario. Las metodologías de desarrollo de software son un conjunto de herramientas, técnicas y artefactos utilizados en el diseño de sistemas de información y aplicaciones, cuyo propósito es facilitar la producción de software de alta calidad. Dichas metodologías se dividen en ágiles y tradicionales. Las metodologías tradicionales hacen mayor énfasis en la planificación y control del proyecto, con especificación precisa de requerimientos y modelado; las metodologías ágiles se caracterizan por ser iterativas e incrementales, fácilmente adaptables a cambios e involucran al usuario en el proceso de desarrollo. Para el desarrollo de la aplicación Web FitPlanner se utilizó la metodología AgilUs, que tiene como principal enfoque el desarrollo centrado en la usabilidad del sistema. Este método está fundamentado en el análisis entrado en el usuario y en la participación de especialistas con el objetivo de evolucionar el software, a fin de producir un software usable. 19 El diseño de la interfaz no solo debe ser atractivo, sino que debe llevarse a cabo tomando en cuenta los tiempos establecidos para el desarrollo, de manera que los mismos se puedan minimizar al máximo para así lograr una mayor productividad. El objetivo que persigue dicho método es el de evolucionar el software, a fin de que éste alcance el mayor grado de usabilidad una vez culminado su desarrollo (Acosta, 2010). Con el método de desarrollo AgilUS se persigue abarcar aspectos de usabilidad integrando las enseñanzas de las áreas de Interacción Humano- Computador con la Ingeniería de Software, dando lugar a un conjunto de buenas prácticas y evaluaciones aplicadas al software. Nuevamente, según Acosta (2010), "se plantea el desarrollo de un sistema partiendo de un prototipo de la interfaz de usuario, y que incorpora la aplicación de diversas técnicas de evaluación de usabilidad desde el inicio del ciclo de vida de la aplicación". Para alcanzar la usabilidad, en cada etapa de desarrollo se considera como eje principal las características y actividades comúnmente realizadas por el usuario, aplicando técnicas de diseño centradas en el mismo; de esta manera se determinan las metas que contemplan cada una de las etapas, así como los objetivos que debe satisfacer el producto final. AgilUS está basado en iteraciones y en cada una abarca diferentes actividades que se ejecutan de manera incremental, priorizando los aspectos de diseño y desarrollo en términos de usabilidad. El aspecto estético de la interfaz toma un lugar protagónico al ser parte fundamental de estudio en todas las etapas del método. La evaluación y análisis de los requisitos y la elaboración de prototipos, son actividades contempladas en este método. Acosta (2010) también menciona que el ciclo de vida de la metodología “está basado en el desarrollo iterativo e incremental de prototipos de alta fidelidad hasta que se convierten en el producto final para entrega”. 20 En cada etapa del ciclo de desarrollo se lleva a cabo de manera incremental e iterativa la mejora del producto y se lleva a cabo la construcción de prototipos que consecutivamente serán mejorados, tomando en cuenta la usabilidad en cada una de las actividades desarrolladas. Dicha usabilidad es un aspecto fundamental en la metodología que debe incluirse en cada etapa de desarrollo; para ello se toma en consideración la evaluación que realiza el usuario luego de interactuar con el sistema. Figura 1. Ciclo de vida en la metodología AgilUs Fuente: Acosta (2010). Como se aprecia en la Fig.1, el ciclo de vida de AgilUS comprende la especificación de requisitos, el análisis de dichos requisitos, la elaboración de prototipos y la entrega del producto final. Cada una de las etapas incluye la construcción de diversos artefactos, que pueden ser sujetos a 21 modificaciones hasta obtener el producto final deseado. A continuación, una descripción de cada etapa: ● Requisitos: se lleva a cabo el levantamiento de requerimientos, generando un perfil de usuario. Cada requerimiento definido se debe desarrollar e implementar para cumplir con las exigencias del usuario. ● Análisis: una vez estipulados los requisitos que persigue el sistema, se debe realizar un análisis sobre los mismos, para determinar de qué manera serán implementados, para lo cual se toman como apoyo los diferentes diagramas realizados bajo la notación estándar del Lenguaje de Modelado Unificado o UML (por sus siglas en inglés: Unified Modeling Language). ● Prototipaje: son elaborados diversos prototipos, incluyendo un prototipo de Interfaz Gráfica de Usuario o GUI (por sus siglas en inglés: Graphical User Interface), facilitado por los diagramas de interacción. En esta etapa, el usuario lleva a cabo la evaluación de los prototipos a fin de conocer si los mismos cumplen con los principios de usabilidad. Para realizar estas inspecciones de usabilidad, se lleva a cabo la elaboración de listas de comprobación, las cuales se utilizan para juzgar los atributos y los métodos de interacción de la interfaz de usuario. También se elaboran guías de estilo con las cuales se determinan las normativas en relación al aspecto de la interfaz y por último se lleva a cabo una evaluación heurística, que consiste en un análisis de los aspectos de usabilidad para determinar si se encuentran o no incluidos en cada elemento de la interfaz de usuario. ● Entrega: consiste en la aplicación de pruebas finales para confirmar que la aplicación cumple con los principios de usabilidad. Posteriormente, la aplicación es pasada a producción. Al considerar los principios de AgilUS y llevar a cabo rigurosamente cada fase del ciclo de vida, se podrá obtener como resultado un producto de calidad cuyo componente 22 principal será la usabilidad. Es importante tener presente durante todo el proceso de desarrollo que es el usuario, y no el cliente o el equipo desarrollador, el protagonista y juez que dictamina si los aspectos de usabilidad son cubiertos por el sistema. Debido a la mínima cantidad de generación de artefactos, los tiempos de desarrollo disminuyen y resulta más fácil incorporar cambios que son considerados necesarios y que van surgiendo a lo largo del ciclo de vida. Mediante el diseño de prototipos que evolucionan en función de las necesidades del usuario, se va refinando la estructura del sistema hasta lograr el producto final. El método de desarrollo AgilUS está orientado a la implementación de los requerimientos surgidos a causa de la participación del usuario final. Entre las características, bondades y buenas prácticas estipuladas en el método, se encuentran: ● Diseño centrado en el usuario (DCU): basado en las preferencias e inclinaciones que presenta el mismo frente al sistema. Continuando con Acosta (2010), “... en el DCU se procura construir el sistema para adaptarse, a través de su interfaz, a cómo el usuario desea trabajar, en lugar de forzar al usuario a cambiar su modo de trabajar para adaptarse a lo que los desarrolladores consideraron apropiado”. Para lograr este diseño, el desarrollador debe realizar varias pruebas con el sistema para determinar si poco a poco se van satisfaciendo las necesidades del usuario. ● Diseño basado en prototipos, donde cada uno es revisado y probado por usuarios finales y especialistas en el área de usabilidad. La construcción de cada prototipo viene dada en función de la respuesta que emiten los usuarios y especialistas ante dicho prototipo, permitiendo de esta manera que se pueda seguir avanzando con la 23 construcción del siguiente prototipo. Este proceso se lleva a cabo de manera cíclica hasta culminar la elaboración del producto final. ● Simplicidad en el desarrollo del sistema, previendo posibles cambios en el futuro. ● Desarrollo incremental, de manera de establecer y cumplir requisitos a medida que se desenvuelve el proyecto. ● Desarrollo iterativo, permitiendo el rediseño e implementación de actividades llevadas a cabo en cada una de las etapas. El objetivo al diseñar e implementar en cada iteración consiste en realizarlo de manera simple para no dejar de un lado la posibilidad de rediseñar. Para determinar si debe llevarse a cabo un rediseño, el usuario evalúa el producto y expone su opinión al desarrollador, quien toma en cuenta dicha opinión conjuntamente con el análisis de las funcionalidades del sistema. ● Usabilidad como requisito esencial para considerar un software de calidad. ● Interacción entre el equipo desarrollador y el usuario, un aspecto vital si se considera la usabilidad en cada etapa, ya que es el usuario quien determina la misma. 24 CAPÍTULO 2: MARCO CONCEPTUAL En esta sección se establece el marco teórico para el desarrollo de una aplicación Web enfocada al control nutricional de la alimentación diaria y ejercicios complementarios. 2.1 Entrenamiento Físico Para Delgado (2008), “El entrenamiento debe ser considerado un proceso pedagógico organizado, de larga duración, cuyo objetivo es el desarrollo de las adaptaciones y su mantenimiento a través del tiempo, en todos los niveles de actividad y a todas edades”. Aun cuando el entrenamiento se puede definir como un intento de mejorar la capacidad físico-deportiva de la persona. Estas mejoras se basan en las respuestas y adaptaciones que se consiguen cuando el organismo se somete a un entrenamiento. La respuesta es una acción o modificación inmediata que se produce al realizar una actividad física y la adaptación es un proceso a largo plazo, que se consigue con las modificaciones morfo-funcionales que sufren los distintos órganos y sistemas. Cuando se realiza actividad física intensa durante el tiempo de esfuerzo se produce un importante desgaste de las estructuras y se utilizan las reservas energéticas que pueden llevar al agotamiento. En el tiempo de recuperación o descanso, se recupera la capacidad funcional, para llegar no solo al nivel inicial, sino incluso sobrepasarlo, de manera que al iniciar un nuevo esfuerzo se pueda realizar con facilidad. 25 2.2 Nutrición Según la OMS la nutrición es la ingesta de alimentos en relación con las necesidades dietéticas del organismo. Una buena nutrición (una dieta suficiente y equilibrada combinada con el ejercicio físico regular) es un elemento fundamental de la buena salud. Una mala nutrición puede reducir la inmunidad, aumentar la vulnerabilidad a las enfermedades, alterar el desarrollo físico y mental, y reducir la productividad. El camino hacia un estilo de vida saludable se consigue a través de la nutrición adecuada. Un desequilibrio en la nutrición puede ser causa de la mala salud, la fatiga y un sistema inmune debilitado. La nutrición juega un papel muy importante en el rendimiento deportivo. Esto se debe a que con la nutrición adecuada se mejora la fuerza, la energía y la agilidad. 2.3 Sistemas de información La sociedad se encuentra repleta de ejemplos de sistemas, tales como una máquina expendedora de café, una fábrica de productos manufacturados, un vehículo, un archivo para documentos, nuestra columna vertebral, entre otras. En el caso de las máquinas de café o bebidas, se puede analizar su funcionamiento para comprender mejor el concepto de sistema. Las monedas entran en el sistema, se compara su valor con el de la bebida seleccionada (objetivo del sistema) y si ambos valores son iguales, se expide la bebida. 26 En lo que respecta a los sistemas propiamente dichos hay un amplio consenso en cuanto a las características que deben tener y maneras de obrar, sin embargo no ocurre lo mismo con el concepto de sistema de información, del cual existen muchas definiciones, matices y escuelas. De todas formas, hablando en términos generales, se puede decir que un sistema de información es un conjunto de componentes que interaccionan entre sí para alcanzar un fin determinado, el cual es satisfacer las necesidades de información de dicha organización. Estos componentes pueden ser personas, datos, actividades o recursos materiales en general, los cuales procesan la información y la distribuyen de manera adecuada, buscando satisfacer las necesidades. El objetivo primordial de un sistema de información es apoyar la toma de decisiones y controlar todo lo que en ella ocurre (Pérez y Gardey, 2008). 2.3.1 Aplicaciones Web De acuerdo a la definición de Rouse (2011), una aplicación web es toda herramienta o programa que se encuentre dentro de un servidor web y el cual puede ser accedido mediante un navegador Web. De igual manera, según Nations (2014): “Una aplicación Web es toda aplicación que utilice un navegador Web como cliente”, tomando en cuenta que un cliente es: “El programa utilizado por una persona para ejecutar la aplicación”. Algunos beneficios de las aplicaciones Web sobre otros tipos de aplicaciones mencionados por dicho autor son: ● Una aplicación Web libera al desarrollador de la responsabilidad de construir un cliente para un tipo específico de computador o sistema operativo, ya que el cliente corre en un navegador Web. 27 ● Las aplicaciones Web generalmente pueden ser accedido desde cualquier navegador: Firefox, Chrome, Explorer, entre otros. ● Las aplicaciones Web comúnmente utilizan una combinación de protocolos del lado del servidor y del lado del cliente, que permiten hacer la carga, almacenamiento y despliegue de la información. Una aplicación Web es entonces cualquier herramienta tecnológica de uso en la Web que pueda ser accedida a través de un navegador, sin importar su nivel de complejidad o la amplitud de las acciones que se lleven a cabo en la misma. 2.4 Arquitectura Cliente – Servidor En Kioskea (2016) se encuentra que Cliente - Servidor es una arquitectura donde los clientes, que son equipos conectados a una red, interactúan con un servidor. Este servidor es también un equipo que tiene como rol proporcionar un conjunto de servicios a los clientes conectados a él. Los servicios son aplicaciones de software que permiten consultar y procesar datos en diferentes presentaciones. Para la Enciclopedia Británica (2015), las computadoras clientes proveen una interfaz de comunicación que permite a los usuarios solicitar un servicio Web al servidor y mostrar los resultados obtenidos del mismo. Los servidores permanentemente están a la espera de solicitudes de clientes y responden a ellas. Los clientes tienden a ser computadoras personales mientras los servidores son máquinas mucho más potentes ya que deben atender las necesidades de muchos clientes simultáneamente. El modelo Cliente - Servidor está conformado por un conjunto de computadoras llamadas clientes que realizan peticiones de servicios e información a una computadora centralizada llamada servidor. El servidor 28 agrupa en un solo lugar información de interés para todos los clientes con los cuales se comunica y, siendo una computadora con una capacidad de procesamiento mucho mayor a las de computadoras personales, puede atender a un gran número de clientes de manera concurrente. 2.5 Lenguajes de Programación para Desarrollo Web Los lenguajes de programación son aquellos lenguajes formales diseñados para realizar procesos que puedan ser ejecutados por máquinas como las computadoras. En el contexto web son aquellos lenguajes formales diseñados para ejecutar instrucciones que definen la lógica, comportamiento y apariencia de un sitio o aplicación web (Kioskea, 2016). Se pueden subdividir en dos categorías principales: Los lenguajes del lado del cliente, los cuales procesan todas las instrucciones directamente en el navegador web, y los lenguajes del lado del servidor, los cuales son aquellos reconocidos, cargados e interpretados por el mismo antes de ser enviados al cliente en un formato comprensible para él y así puedan ser entendidos directamente por el navegador. Entre los lenguajes de programación del lado del servidor se puede mencionar PHP, Java, Python, Ruby, JavaScript, entre otros. En la Tabla 1 se puede observar que según el índice PYPL (2017), el cual se elabora analizando el número de búsquedas en Google de tutoriales sobre un determinado lenguaje, se tiene que JavaScript ha tenido un crecimiento en los últimos años. 29 Fuente: PYPL (2017). Entre los lenguajes de programación del lado del cliente se puede mencionar JavaScript, Flash y Silverlight. En la Tabla 2 se puede observar el porcentaje de sitios web que usan diversos lenguajes de programación del lado del cliente según la W3Techs (2017). Tabla 2: Lenguajes de programación lado del cliente más utilizados en web. Fuente: W3Techs (2017). Tabla 1: Popularidad de los lenguajes de programación 30 Como se puede observar en la Tabla 2, el lenguaje de programación del lado del cliente que goza de mayor popularidad y presencia en la web son JavaScript y sus tecnologías asociadas. Esto se debe a sus principales ventajas como su compatibilidad con los principales navegadores web, buen rendimiento, integración con HTML y CSS, y facilidad de aprendizaje. (Digital Learning, 2012) 2.5.1JavaScript JavaScript es un lenguaje de programación interpretado que puede ser insertado en documentos HTML y procesado por todos los navegadores web actuales. Es un lenguaje de programación multiparadigma, soporta programación orientada a objetos, imperativa y funcional. Comúnmente se utiliza en aplicaciones web para brindar una mayor interacción con el usuario final, controlar el navegador, realizar comunicaciones asíncronas entre el navegador (cliente) y el servidor. Uno de sus principales usos consiste en alterar dinámicamente el contenido desplegado de las aplicaciones web para simular comportamientos simulares a aplicaciones de escritorio (Flanagan, 2011). Actualmente también es utilizado para la programación del lado del servidor (Nodejs). El lenguaje JavaScript a través de los años se ha hecho cabida en el mercado del desarrollo de software. Esta proliferación ha llevado a que JavaScript actualmente sirve de conector entre backend y frontend. Se puede usar tanto del lado del cliente, como del lado del servidor. Gracias a eso, hoy en día es posible crear aplicaciones distribuidas utilizando el mismo lenguaje JavaScript en todas sus fases. Express, AngularJS y Node.js 31 2.6 Marcos de Trabajo para el Desarrollo Web (frameworks web) Un marco de trabajo (framework) para el desarrollo de aplicaciones web es una herramienta diseñada para apoyar el desarrollo de sitios web y sus páginas, aplicaciones o servicios web. Estas herramientas alivian el exceso de diseño y programación asociado con actividades y funcionalidades comúnmente usadas en los desarrollos web. Por ejemplo, muchos proporcionan bibliotecas para acceder a bases de datos, estructuras para plantillas, gestión de sesiones y de usuarios, patrones de diseño para menús, botones, formularios y listados, por lo cual se orientan con frecuencia a facilitar la reutilización de código. En la Tabla 3 se puede visualizar el ranking de los marcos de trabajo para el desarrollo web mejor valorados por los usuarios web según las estadísticas de Github y Stack Overflow. Fuente: HotFrameworks (2017). Tabla 3: Frameworks web valorados (usuarios) en Github y Stack Overflow. 32 2.6.1 AngularJS Angularjs es un framework JavaScript de código abierto mantenido por Google para el desarrollo de aplicaciones web dinámicas. Se adapta muy bien en el desarrollo de aplicaciones web de una página. Su objetivo es facilitar la programación y las pruebas de aplicaciones del lado del cliente a través de la introducción de una estructura modelo, vista y controlador MVC. Básicamente la librería de angular lee el HTML en búsqueda de etiquetas especiales las cuales proporcionan las instrucciones necesarias para vincular ciertos elementos de la página con un modelo representado por variables JavaScript. El desarrollador define controladores para manipular los modelos y mantener la lógica de la aplicación. Adicionalmente las variables JavaScript que mantienen los modelos pueden ser definidos manualmente o pueden ser obtenidos de recursos JSON estáticos o dinámicos (Ralston, 2013). 2.7 Servicios Web Según Albreshne, Fuhrer y Pasquier (2009), un servicio Web es un software que está disponible en Internet y utiliza el estándar XML para el intercambio de datos entre sistemas. Los servicios Web son también colecciones de protocolos y estándares usados para el intercambio de datos entre aplicaciones o sistemas, que son independientes de la plataforma utilizada y que pueden ser implementados en cualquier lenguaje. Los autores proponen que hay tres roles principales asociados a la arquitectura de servicios Web: ● Proveedor de Servicio: Es el encargado de construir el servicio y hacer que éste se encuentre disponible para los consumidores de Internet. ● Consumidor del Servicio: Es el usuario del servicio Web, es el que 33 invoca un servicio Web existente abriendo una conexión en la red y enviando una petición. ● Registro de Servicios: Es un directorio centralizado de servicios, en el que los proveedores o desarrolladores pueden encontrar servicios existentes y publicar nuevos. Los servicios Web son la estructura que permite la interconexión de servicios y peticiones para el intercambio de datos en una plataforma Web y constituyen la base de dicho intercambio. ● Arquitectura REST: De su nombre en inglés Representational State Transfer, REST es un estilo de arquitectura de software que describe cómo recursos en una red son definidos y utilizados, es una arquitectura ampliamente utilizada para la implementación de servicios Web. Tiene un conjunto de comandos básicos sencillos: GET, POST, PUT y DELETE, y sigue un protocolo cliente/servidor por capas que hacen de REST una arquitectura más fácil de usar que SOAP. Figura 2. Intercambio de mensajes con REST Fuente: Adaptado de Barry and Associates (2016). 34 ● Notación JSON: Del inglés JavaScript Object Notation, es una notación utilizada en la descripción de pares nombre/valor utilizados en el intercambio de datos usando servicios Web. Es una notación de fácil utilización y que no depende de un orden específico para su utilización. Esta notación utiliza un subconjunto de JavaScript. Figura 3. Intercambio de mensajes con JSON. Fuente: Adaptado de Barry y Associates (2016). 2.8 Servidores web Un servidor, como la misma palabra indica, es un computador o máquina informática que está al “servicio” de otras máquinas, computadoras 35 o personas llamadas clientes y que le suministran a éstos todo tipo de información. Un servidor web sirve contenido estático a un navegador, carga un archivo y lo sirve a través de la red al navegador de un usuario. Este intercambio es mediado por el navegador y el servidor que hablan el uno con el otro mediante el protocolo HTTP. 2.8.1 Node.JS NodeJs es una plataforma de software para el desarrollo ágil de aplicaciones de red escalables. Se encuentra construido a partir del motor JavaScript V8 desarrollado por Google el cual es implementado en su navegador web Chrome. Utiliza JavaScript como lenguaje de programación. Se basa en un modelo de entrada y salida no bloqueante orientado a eventos. Esto permite implementar aplicaciones de intercambio intensivo de datos en tiempo real. Contiene un servidor HTTP integrado lo que permite ejecutar un servidor web sin la necesidad de utilizar algún software adicional. El servidor es totalmente programable lo cual otorga un mayor control sobre su funcionamiento (Azaustre, 2014). 2.8.2 Express Es un Framework (lado servidor) rápido y flexible, escrito en JavaScript para NodeJs, el cual ofrece los métodos suficientes en JavaScript, para poder manejar las solicitudes o peticiones que se hacen por medio de los métodos del protocolo HTTP, por tanto, permite desarrollar API REST de forma muy rápida (Moya, 2014). 36 2.9 Git Git es un sistema de control de versiones distribuidas, mediantes el cual se puede trabajar a nivel local sin tener que comprometer el repositorio principal a cada cambio que se realicen. Entre las principales características de Git se encuentran: ● Comparando a otros sistemas VCS (subversión y compañía incluidas), su almacenamiento de información no es de forma lineal, es más bien como en forma de ficheros, con el fin de mantener la imagen de todos los archivos antes del momento de cambio. ● La mayoría de cada una de las operaciones son locales. Esto significa que comúnmente solo se utilizarían los archivos locales, es decir del mismo servidor, no es necesario tomar información de otro equipo dentro de la red. ● La perfecta integridad de GIT. No es posible realizar algún cambio al contenido de cualquier archivo sin que lo sepas ● No puedes recibir archivos dañados, o perder información en tránsito sin que GIT lo detecte. ● Es complicado hacer que GIT pueda deshacer y/o eliminar información, generalmente solo introduce información a las bases de datos. 37 Figura 4. Los tres estados de Git y sus estados Fuente: Ramírez J. (2014) 2.10 Sistemas manejadores de bases de datos (SMBD) Es un conjunto de herramientas de software encargado de gestionar la descripción, manipulación y utilización de los datos. Para cada una de las funciones mencionadas anteriormente, el sistema manejador de base de datos (DBMS) utiliza un lenguaje de definición de datos (DDL), un lenguaje de manipulación de datos (DML) y un lenguaje de consulta de datos el lenguaje (SQL en muchos casos) respectivamente. El DBMS también cumple la función de gestionar los permisos correspondientes a cada una de las bases de datos, y garantizar la confiabilidad y seguridad de los mismos. 38 Fuente: DB-Engine (2017). 2.10.1 Bases de Datos Relacionales (SQL) Una base de datos relacional es una colección de elementos de datos organizados en un conjunto de tablas formalmente descritas desde la que se puede acceder a los datos o volver a montarlos de muchas maneras diferentes sin tener que reorganizar las tablas de la base. La base de datos relacional fue inventada por E.F. Codd en IBM en 1970. La interfaz estándar de programa de usuario y aplicación a una base de datos relacional es el lenguaje de consultas estructuradas (SQL). Los comandos de SQL se utilizan tanto para consultas interactivas para obtener información de una base de datos relacional y para la recopilación de datos para los informes. 2.10.1.1 PostgreSql PostgreSQL es un sistema de gestión de bases de datos objeto- relacional, distribuido bajo licencia BSD y con su código fuente disponible libremente. Es el sistema de gestión de bases de datos de código abierto más potente del mercado y en sus últimas versiones no tiene nada que envidiarles a otras bases de datos comerciales. [Mar10] Tabla 4: Ranking de los SMBD más usados al mes de enero del año 2017. 39 PostgreSQL utiliza un modelo cliente/servidor y usa multiprocesos en vez de multihilos para garantizar la estabilidad del sistema. Un fallo en uno de los procesos no afectará el resto y el sistema continuará funcionando. PostgreSQL es un sistema manejador de base de datos (SMBD). Su implementación inicial comenzó en 1986 y es ahora el sistema de base de datos Open Source disponible más avanzado en el mundo. PostgreSQL es un sistema objeto-relacional, ya que incluye características de la orientación a objetos, como puede ser la herencia, tipos de datos, funciones, restricciones, disparadores, reglas e integridad transaccional. La última serie de producción es la 9.6 Sus características técnicas la hacen una de las bases de datos más potentes y robustas del mercado. Su desarrollo comenzó hace más de 16 años, y durante este tiempo, estabilidad, potencia, robustez, facilidad de administración e implementación de estándares han sido las características que más se han tenido en cuenta durante su desarrollo. PostgreSQL funciona muy bien con grandes cantidades de datos y una alta concurrencia de usuarios accediendo a la vez al sistema. Las características más importantes y soportadas por PostgreSQL: Es una base de datos 100% ACID ● Integridad referencial ● Tablespaces ● Nested transactions (savepoints) ● Replicación asincrónica/sincrónica / Streaming replication - Hot Standby ● Two-phase commit ● PITR - point in time recovery ● Copias de seguridad en caliente (Online/hot backups) 40 ● Unicode ● Juegos de caracteres internacionales ● Regionalización por columna ● Multi-Version Concurrency Control (MVCC) ● Multiples métodos de autentificación ● Acceso encriptado vía SSL ● Actualización in-situ integrada (pg_upgrade) ● SE-postgres ● Completa documentación ● Licencia BSD A continuación, se enumeran sus principales ventajas: 1. Implementación del estándar SQL92/SQL99. 2. Soporta distintos tipos de datos: además del soporte para los tipos base, también soporta datos de tipo fecha, monetarios, elementos gráficos, datos sobre redes (MAC, IP …), cadenas de bits, etc. También permite la creación de tipos propios. 3. Incorpora una estructura de datos array. 4. Incorpora funciones de diversa índole: manejo de fechas, geométricas, orientadas a operaciones con redes, etc. 5. Permite la declaración de funciones propias, así como la definición de disparadores. 6. Soporta el uso de índices, reglas y vistas. 7. Incluye herencia entre tablas (aunque no entre objetos, ya que no existen), por lo que a este gestor de bases de datos se le incluye entre los gestores objeto-relacionales. 8. Permite la gestión de diferentes usuarios, como también los permisos asignados a cada uno de ellos. 41 CAPÍTULO 3. MARCO APLICATIVO En este capítulo se describe el proceso y los artefactos generados en la construcción de la aplicación Web FitPlanner, siguiendo con lineamientos de la metodología de desarrollo AgilUs previamente elegida. Se puede observar en la Fig. 5 la arquitectura planteada como solución del desarrollo: Figura 5. Arquitectura de la solución propuesta. Fuente: Creación propia En dicha arquitectura se muestra cómo los usuarios finales interactúan con el sistema FitPlanner a través de las tecnologías usadas. El usuario a través de un navegador web puede ingresar a la aplicación web realizando una petición que el servidor recibirá, luego se realiza la consulta con la Base de datos y se retorna el resultado al usuario final. El sistema se va a desarrollar de la siguiente manera: el Frontend (lado del cliente) con AngularJS, básicamente es lo que se mostrará al usuario en su pantalla. AngularJS hace las llamadas al API REST (Post, Put, 42 Get y Delete) construida con NodeJS y el framework express. Luego este API hace un CRUD (Create, Read, Update y Delete) a la base de datos en PostgreSQL, que a su vez da la respuesta, obteniendo así el API con los datos que se le han pedido en la llamada. Estos datos los envía el API a AngularJS (frontend) en formato JSON y se le mostrará al usuario sin necesidad de recargar la página, puesto que AngularJS mantiene los datos actualizados de la base de datos sin necesidad de actualizar la página web. Adicionalmente se realizó el diseño de la base de datos que soportará el funcionamiento de la aplicación usando PostgreSQL. Figura 6. Modelo de la base de datos. Fuente: Autores (2017) 43 3.1 Fase de requisitos En esta fase se realiza la agrupación de toda la información necesaria para iniciar el desarrollo y se define con el usuario final todos los aspectos que considera de gran importancia y deben ser tomados en cuenta en la realización del presente proyecto. 3.1.1 Tormenta de ideas Tomando en consideración la problemática expuesta y la solución planteada, se realizó una tormenta de ideas entre los desarrolladores de la aplicación web FitPlanner para definir las funciones generales y definiciones que están relacionadas al sistema desarrollado. En la figura se observa el resultado de la misma. Figura 7. Tormenta de Ideas. Fuente: Autores (2017) 44 3.1.2 Encuesta Se realizó una encuesta de 10 preguntas de selección simple y múltiple para investigar las opiniones de un grupo de XX participantes acerca de aspectos importantes que servirán de soporte para la definición de los requerimientos funcionales y no funcionales de la aplicación Web FitPlanner. Para esta indagación se usó la herramienta de Google, Google Forms y puede ser accedida a través del siguiente enlace https://docs.google.com/forms/d/1DoxcDB7IV_UN58yikxy_WNopT- RrgattIwZZV7KKNEs/edit?usp=sharing Los resultados obtenidos de la encuesta son: 45 46 47 48 49 3.1.3 Requerimientos Funcionales y No Funcionales “Los requerimientos funcionales y no funcionales definen las funciones que el sistema será capaz de realizar. Describen las transformaciones que el sistema realiza sobre las entradas para producir salidas” (Agüero, 2012). En esta fase se pudieron establecer los requerimientos que se mencionan a continuación: a. Requerimientos Funcionales 1. Módulo de registro de usuarios 2. Módulo de Planificación que permite organizar las recetas y los ejercicios que el usuario deberá realizar en un período seleccionado por el mismo 3. Módulo de Lista de Compras que le indica al usuario la lista de los ingredientes necesarios para la preparación de las recetas previamente escogidas en un plan correspondiente a un período específico 4. Módulo de recetas que le permite al usuario visualizar todas las recetas incluidas en la aplicación y agregar una propia para su posterior uso 50 5. Módulo de ejercicios que muestra todos los ejercicios físicos cargados en el sistema 6. Diseño responsive en su totalidad para que sea totalmente adaptable en los dispositivos con diferentes resoluciones b. Requerimientos no funcionales 1. Sencillo de usar. 2. Intuitivo 3. Tamaño y estilo de fuente legible 4. Rápido 5. Seguro 3.1.4 Perfiles de usuario Los usuarios de la aplicación son personas con edades comprendidas entre 14 y 50 años debido a que son las más activas físicamente. Los usuarios por lo general están familiarizados con herramientas informáticas, por tanto el desarrollo de la aplicación será lo más práctico y fácil de usar. Se diseñaron modelos de casos de uso para especificar de una mejor manera los usuarios y roles de los usuarios de la aplicación, que permiten mostrar gráficamente la interacción de cada tipo de usuario con el sistema. 3.2 Fase de Análisis 3.2.1 Casos de Uso de FitPlanner “Un caso de uso es una manera de utilizar el sistema o de interactuar con él. Los casos de uso proporcionan una definición de las necesidades a cubrir por un proyecto desde el punto de vista del usuario. Por tanto, es una técnica utilizada a ayudar al cliente a determinar sus necesidades y 51 requisitos.”(Barranco, 2001) Los diagramas de casos de uso de un sistema se utilizan para describir las funcionalidades que tendrá la aplicación y quienes realizarán dichas interacciones. Es por ello que el análisis y desarrollo de artefactos es de suma importancia para que determine una guía para el desarrollo. 3.2.1.1 Actores Los actores que participan la aplicación web FitPlanner se describen a continuación: 1) Usuario Web: Es el actor encargado de llevar a cabo las siguientes acciones dentro de la aplicación: ● Crear perfil de usuario para poder ingresar a la aplicación web. ● Crear, modificar o eliminar un plan de nutrición y ejercicios en un período determinado ● Crear, modificar o eliminar sus datos personales o perfil de usuario en la aplicación. ● Consultar y agregar recetas personales en la aplicación web. ● Consultar ejercicios en la aplicación web. ● Consultar estadísticas de los valores nutricionales de la ingesta que tuvo en un plan previamente creado 2) Instructor: Es el actor encargado de las acciones administrativas de la aplicación. Sus funciones son: ● Crear un perfil de usuario con el que podrá iniciar sesión en la aplicación. 52 ● Crear, modificar o eliminar un plan de nutrición y ejercicios en un período determinado ● Crear, modificar o eliminar sus datos personales o perfil de usuario en la aplicación. ● Crear, modificar o eliminar ejercicios en la aplicación web. ● Consultar estadísticas de los valores nutricionales de la ingesta que tuvo en un plan previamente creado 3) Nutricionista: Es el actor que se encarga de proveer la información nutricional necesaria de todos los alimentos que serán los ingredientes de las recetas de la aplicación FitPlanner: ● Agrega, modifica o elimina ingredientes ● Agrega, modifica o elimina recetas. 4) Administrador: Es el actor encargado de las acciones administrativas de la aplicación. Sus funciones son: ● Crear un perfil de usuario con el que podrá iniciar sesión en la aplicación. ● Cambiar roles de usuarios de la aplicación. ● Gestionar configuraciones de la aplicación. 3.2.1.2 Casos de Uso Nivel 1: 53 Figura 8. Casos de Nivel 1. Fuente: Autores (2017) Tabla 5: Especificación de los casos de uso del nivel 1 – CU #1 Caso de Uso CU #1 Crear Usuario Actor Usuario Descripción El actor se registra para entrar a la aplicación FitPlanner con sus datos personales solicitados por el sistema para la creación de su cuenta de usuario Flujo Básico 1. Inicia en el momento en que el usuario ingresa a la aplicación FitPlanner y hace click en el botón de “Registrarse”. 2. El usuario ingresa los datos solicitados por la aplicación para crear su perfil. 3. Se validan los datos introducidos por el actor, esto quiere decir que cumplan con el formato adecuado, tales como el correo electrónico del usuario, Nombre sin números, entre otros.) 4. En el caso que los datos sean correctos se crea la cuenta y se muestra al usuario un mensaje de creación de cuenta en forma exitosa. Flujo Alterno 1 1. Cuando el actor ingrese algún dato incorrecto, se le muestra un mensaje indicando la causa del error. 2. El usuario puede corregir y verificar los datos que tengan algún error. 3. El actor guarda los datos, para ello debe hacer click en “Guardar”. 54 4. El sistema verifica de nuevo los datos. 5. En el caso que no haya error, se crea la cuenta y se muestra un mensaje al actor de creación de perfil en forma exitosa. Pre-condiciones El usuario debe poseer una cuenta de correo electrónico activa, que no haya sido utilizada para crear alguna otra cuenta en la aplicación. Post- condiciones Para ingresar a la aplicación se colocan los datos solicitados de la cuenta de usuario y se hace click en “Enviar”. Tabla 6: Especificación de los casos de uso del nivel 1 – CU #2 Caso de Uso CU #2 Iniciar Sesión Actor Usuario Descripción El actor inicia la sesión a la aplicación web ingresando su email y contraseña. Flujo Básico 1. Se inicia el caso de uso en el momento en que el usuario ingresa a la aplicación y hace click en el botón de “Enviar”. 2. El usuario ingresa su email y contraseña. 3. El sistema verifica los datos del suministrados del usuario (electrónico y la contraseña). 4. En el caso que sean correctos los datos ingresados se carga toda la información correspondiente al usuario y posterior se le muestra un mensaje de inicio de sesión exitosa. Flujo Alterno 1 1. Cuando el actor ingresa algún dato incorrecto, se le muestra un mensaje indicando el error. 2. El actor puede corregir los datos que tengan error y verificarlos. 3. El actor hace click en el botón “Enviar” para iniciar sesión. 4. Se verifican de nuevo los datos. 5. Si no hay ningún error, se carga la información correspondiente al usuario y se le muestra un mensaje de inicio de sesión de forma exitosa. Pre-condiciones El usuario debe tener una cuenta de usuario activa en la aplicación. Post-condiciones Se le da ingreso al actor a la aplicación. Fuente: Autores (2017) 55 3.2.1.3 Casos de Uso Nivel 2 El modelo de casos de uso de nivel 2 muestra el detalle de los casos de uso a los que tienen acceso los usuarios de la aplicación con sesión activa, así como los casos de uso asociados al actor anónimo que representa el sistema de los socios comerciales. 56 Figura 9. Casos de Uso nivel 2 Fuente: Autores (2017) 57 Tabla 7: Especificación de los casos de uso de nivel 2 – CU #3 Caso de Uso CU #3 Establecer planificación Actor Usuario Web Descripción Caso de uso que le permite al actor realizar una planificación de recetas y ejercicios en un período determinado. Flujo Básico 1. Inicia en el momento que el usuario ingresa a la aplicación y le da click en el enlace “Planificar” ubicado en el menú principal. 2. Se muestra en pantalla la opción de escoger la fecha de inicio y fin de la planificación que se quiere realizar. 3. El actor puede ver y escoger las recetas según su criterio, ingresando los datos solicitados por el sistema como número de comensales, y la clasificación de la comida en el caso que sea desayuno, almuerzo, cena u otro, para proveer la cantidad de ingredientes que necesita el usuario 4. El usuario escoge los ejercicios a realizar en el período especificado. Pre-condiciones 1. El usuario debe haber ingresado exitosamente a la aplicación Post-condiciones 1. Se obtiene un plan de dieta con las recetas y ejercicios seleccionados. 2. Se genera una lista de compras con los ingredientes necesarios para la preparación de las recetas seleccionadas Extiende 1.1 Seleccionar el período del plan de recetas y ejercicios 1.2 Seleccionar Recetas 1.3 Seleccionar ejercicios. 58 Tabla 8: Especificación de los casos de uso de nivel 2 – CU #4 Caso de Uso CU #4 Gestionar Recetas Actor Usuario Web Descripción Permite al actor gestionar las recetas encontradas en la aplicación y agregar nuevas para su posterior uso. Flujo Básico 1. El caso de uso inicia cuando el usuario inicia sesión e ingresa a la sección “Recetas” ubicado en el menú principal derecho. 2. El actor puede agregar nuevas y además puede consultar todas las recetas tanto las publicadas como las propias. Flujo Alterno 1 1. En caso que el usuario no tenga aún ninguna receta creada, se le indica la ausencia de esos datos a través de un mensaje. Pre-condiciones El actor debe tener una cuenta de usuario activa en la aplicación. Post- condiciones 1. Si se crea alguna receta, ésta se almacena en la Base de Datos. 2. El usuario sólo puede modificar las recetas propias agregadas por el mismo actor a la aplicación. Dichas modificaciones se almacenan en la Base de Datos. 3. El actor sólo puede eliminar recetas propias, estas también se borran de la Base de Datos. Extiende 4.1 Ver todas las recetas 4.2 Agregar recetas 4.3 Editar recetas Tabla 9: Especificación de los casos de uso de nivel 2 – CU #5 Caso de Uso CU #5 Gestionar Ejercicios Actor Instructor Descripción Permite al actor agregar, editar, eliminar y consultar los ejercicios físicos en la aplicación FitPlanner. Flujo Básico 1. El caso de uso inicia cuando el actor inicia sesión en la aplicación e ingresa a la misma y hace click en la sección “Ejercicios” ubicado en el menú principal derecho. 2. El usuario realiza la búsqueda de los ejercicios físicos registrados tomando en cuenta algunos patrones de búsqueda y los consulta. 59 Flujo Alterno 1 1. En caso que el usuario no visualice ejercicios con su búsqueda, se le indica la ausencia de esos datos a través de un mensaje. Pre-condiciones El actor debe tener una cuenta de usuario activa en la aplicación y haber iniciado sesión. Post-condiciones Se visualiza los ejercicios según la consulta realizada por el actor Extiende 5.1 Ver ejercicios 5.2 Agregar ejercicios 5.3 Editar ejercicios Tabla 10: Especificación de los casos de uso de nivel 2 – CU #6 Caso de Uso CU #6 Consultar Actor Usuario Web Descripción Este caso le permite al actor consultar todo lo referente a los datos principales de la aplicación, tales como planes realizados, listas de compras y estadísticas nutricionales Flujo Básico 1. Se inicia el caso de uso en el momento en que el usuario ingresa en el Home la aplicación. 2. El actor puede visualizar en la parte superior información general de los consumos (información nutricional) por plan, y en la sección central las planificaciones realizadas y las listas de compras generadas por planes realizados. Pre-condiciones El usuario debe tener una cuenta activa en la aplicación. Post-condiciones Se le permite al usuario consultar la información disponible en la aplicación. Incluye 6.1 Consultar las planificaciones realizadas para un período específico por el actor 6.2 Consultar las listas de compras generadas por los planes registrados por el actor. 6.3 Consultar estadísticas de la ingesta calórica 60 Tabla 11: Especificación de los casos de uso de nivel 2 – CU #7 Caso de Uso CU #7 Gestionar Ingredientes Actor Nutricionista Descripción El caso de uso le permite al usuario gestionar los ingredientes necesarios para elaborar las recetas con su información nutricional. Flujo Básico 1. Se inicia el caso de uso en el momento en que el actor inicia sesión e ingresa a la sección “Alimentos” ubicado en el menú principal derecho. 2. El actor puede gestionar los alimentos para su posterior uso (agregar, modificar y eliminar alimentos - ingredientes). Flujo Alterno 1 1. En el caso que el actor no tenga aún ningún alimento creado, se le indica la ausencia de esos datos a través de un mensaje. Pre-condiciones El usuario debe tener una cuenta de usuario activa en la aplicación. Post-condiciones 1. Si se crea un alimento, éste se almacena en la Base de Datos. 2. El actor sólo puede modificar los alimentos agregados en la aplicación. Dichas modificaciones se almacenan en la Base de Datos. 4. El actor puede eliminar los alimentos, éstos también se borran de la Base de Datos. Extiende 7.1 Ver todas las recetas 7.2 Agregar recetas 7.3 Editar recetas Tabla 12: Especificación de los casos de uso de nivel 2 – CU #8 Caso de Uso CU #8 Gestionar Usuarios Actor Administrador Descripción Se le Permite al usuario gestionar a los usuarios de la aplicación. Flujo Básico 1. Se inicia el caso de uso cuando el administrador ingresa a la sección de Gestión de Usuarios. 2. En el caso de uso, el actor tiene privilegios de las acciones correspondientes a creación, modificación y bloqueo de usuarios de la aplicación. 61 3. El actor le debe asignar un rol a cualquier usuario creado desde su vista del sistema. Esos roles pueden ser: Instructor, Nutricionista o Usuario Web. Pre-condiciones El actor debe poseer una cuenta de usuario activa con permisos de administrador en la aplicación. Post-condiciones Se le permite al actor las acciones de consultar y gestionar los usuarios de la aplicación y sus roles. Extiende 8.1 Crear Usuarios – Incluye: Asignar Rol al Usuario -. 8.2 Editar Usuarios. 8.3 Cambiar Rol de Usuarios. Fuente: Autores, 2017. 3.2.2 Modelo de Objetos del Dominio “Un modelo de dominio es una representación visual de clases conceptuales o de objetos reales en un dominio de interés. Es un conjunto de diagramas de clases, sin definición de operaciones” (Martínez, 2016). Puede utilizarse para capturar y expresar el entendimiento ganado en un área bajo análisis como paso previo al diseño de un sistema. El modelo de dominio es utilizado por el analista como un medio para comprender el sector de negocios al cual el sistema va a servir. El modelo de dominio puede ser tomado como el punto de partida para el diseño del sistema. Cuando se realiza la programación orientada a objetos, el funcionamiento interno del software va a imitar en alguna medida a la realidad, por lo que el mapa de conceptos del modelo de dominio constituye una primera versión del sistema. A continuación se presenta el modelo de dominio de la aplicación: 62 Figura 10. Modelo de dominio de FitPlanner Fuente: Autores (2017) 3.2.3 Patrones de interacción Según define Montero (2016), un patrón de interacción es una ayuda para las aplicaciones y diseñadores de aplicaciones para que la comunicación con el usuario final sea óptima, ya que los mismos definen el comportamiento de componentes fundamentales de la aplicación. Se usó para la selección de fechas un patrón que se especifica a continuación: Tabla 13: Detalle de patrón de interacción de selección de fechas Nombre del Patrón Patrón para selección de fecha para establecer la fecha de inicio y fin de la planificación en Fitplanner 63 URL del Patrón: http://www.daterangepicker.com/ Problema El usuario desea seleccionar una fecha o un rango de fecha en el que desea establecer una planificación de recetas y ejercicios. Solución El patrón permite mostrar un calendario para selección de días o rangos de días de manera sencilla. Usabilidad Para este patrón es fundamental la fácil utilización, fácil memorización y la eficiencia Consecuencias El usuario podrá seleccionar efectivamente la fecha o el rango de fechas deseado de forma sencilla y rápida. Patrones Relacionados El patrón de selección de idioma o país. La estructura del diseño de la interfaz de usuario incluye una sección que incluye la interfaz principal de la aplicación y vistas secundarias de información complementaria como la vista de las Planificaciones realizadas 64 3.2.4 Prototipos en Papel Después de definir los requerimientos funcionales y no funcionales, y tomando en consideración los estándares, se establecieron guías para la implementación y distribución de los elementos en la aplicación, resultando los siguientes prototipos en papel de las principales interfaces: 1) Interfaz del Home: Figura 11. Prototipo Inicial Home de Fitplanner. Fuente: Autores (2017) 65 2) Interfaz de Agregar Recetas - Ejercicios: Figura 12. Interfaz de agregar Recetas – Ejercicios. Fuente: Autores (2017) 3.2.5 Guía de Estilos Logo de la aplicación: Colores principales: 66 Tipografía: Títulos: Roboto Thin Texto: Roboto Light 3.3 Fase de Prototipaje En la fase de Prototipaje se elaboran los prototipos de la aplicación Web y se aplican técnicas de evaluación a los mismos para asegurar que se estén cumpliendo los estándares de desarrollo necesarios para que de esta forma se pueda lograr el uso de los principios básicos de usabilidad en el producto final. 3.3.1 Aspectos de Accesibilidad y Sociabilidad La metodología de desarrollo AgilUs está enfocada en la usabilidad como principio del desarrollo. Tal como lo explica Acosta (2010), “El método AgilUs busca proporcionar un conjunto de actividades organizadas para construir la usabilidad en el diseño de interfaces de usuario durante el desarrollo de un producto de software” (p.5). Es así como, para garantizar la usabilidad del sistema se propusieron los siguientes aspectos de accesibilidad y sociabilidad: a) Accesibilidad El término Accesibilidad en el ámbito Web, según W3C (2016), se refiere a la posibilidad de cualquier persona con algún tipo de discapacidad 67 para hacer uso de una página o aplicación Web. Se incluyeron en FitPlanner las siguientes características tomando en cuenta este aspecto fundamental del desarrollo: - Los textos alternativos a las imágenes, para facilitar el entendimiento y navegación de usuarios que utilicen herramientas de lectura, de manera que aunque la imagen no pueda ser percibida la misma esté siendo descrita correctamente y sea comprensible. Estos textos se incluyeron en el markup de la aplicación de la siguiente forma: <img src="imagen.png" alt="texto descriptivo de la imagen"> b) Sociabilidad La sociabilidad “es una cualidad de las aplicaciones interactivas asociada al aspecto social de la comunicación e interacción entre personas” (p.55) Según Acosta y Zambrano (2015). 3.3.2 Evaluación Heurística La evaluación heurística es un método de ingeniería de usabilidad para conseguir problemas en la interfaz del diseño de usuario según Nielsen (1994). Es una variante de la inspección de usabilidad donde los especialistas en interacción humano-computador juzgan si cada elemento de la interfaz de usuario sigue los principios de usabilidad correctamente. En esta evaluación, un grupo de expertos analiza el sistema, produce una lista de problemas, asocia cada uno de ellos a los elementos de la lista de heurísticas a utilizar y propone posibles soluciones a cada uno de ellos. Actualmente las heurísticas utilizadas son las propuestas por Nielsen ya que incluye los principios suficientes y aceptables para realizar cualquier 68 evaluación de diseño de interfaz. Para realizar esta evaluación son necesarias entre tres y cinco personas expertas (preferiblemente) para así encontrar la mayor cantidad de errores en la interfaz, y una vez identificados los mismos puedan ser corregidos. La lista de criterios generales o heurísticas consta de nueve (9) elementos que se describen a continuación: H1: Consistencia. H2: Minimizar la carga cognitiva. H3: Hablar el lenguaje del usuario. H4: Diálogo natural y simple. H5: Feedback. H6: Proveer claramente las salidas. H7: Proveer Shortcuts. H8: Mensajes de Error descriptivos. H9: Prevención de Errores. H10: Asistencia al Usuario. Luego, se realiza una evaluación numérica que permite estimar la valoración en frecuencia, impacto y persistencia de cada problema. La escala de valoración utilizada fue la siguiente: 0 - No es un problema de usabilidad. 1 - Problema cosmético. 2 - Problema menor. 3 - Problema mayor de usabilidad; importante fijar solución. 4- Usabilidad catastrófica, imperativo fijar solución. 69 Tabla 14: Evaluación Heurística y su análisis 3.3.3 Lista de Comprobación “Las listas de comprobación ayudan a asegurar que los principios de usabilidad sean considerados en el diseño” (Acosta, 2009). Es así como el autor establece una lista de comprobación como sigue: 1) Reconocer en lugar de recordar. 2) Usar indicadores visuales. 3) Utilizar metáforas adecuadas, y en lo posible, las metáforas estándares. 4) Los controles del sistema deben estar claramente visibles y sus funciones identificables. 5) Flexibilidad en la interfaz de usuario. 6) Hacer sentir al usuario que puede tomar decisiones. Problema Heurística Valoración Solución Propuesta En la vista del Home cuando el usuario no tiene planificaciones cargadas, no aparece información H10 3 Colocar algún texto para indicar o imagen para indicar que el usuario no tiene planificaciones hechas e invitarlo a hacerlas En la vista de planificar se permitía la escogencia de fechas sin límite, lo cual hace que se pierda un poco el sentido de las planificaciones y las listas de compra H10 2 Permitir elegir un rango limitado para realizar la planificación En la vista de detalle de las recetas no se tenía claro qué recetas podía editar el usuario H10 2 Proporcionar un mensaje o agregar un ícono que indique que una receta es propia del usuario, por tanto es editable por el mismo 70 7) Proveer feedback a las acciones del usuario. 8) Minimizar las posibilidades de cometer errores. 9) Permitir al usuario la posibilidad de recuperarse de los errores. 10) Mantener la interfaz simple, sencilla y organizada. 11) Permitir al usuario personalizar la IU. 12) Mostrarle al usuario lo que necesita cuando lo necesite. 13) Evitar palabras coloquiales y abreviaturas. 14) Consistencia en apariencia y uso. De esa lista de comprobación se tomaron 7 principios y se propusieron estándares a seguir en el desarrollo: 1. Reconocer en lugar de recordar. Estándar: Cuando el usuario inicia sesión en la aplicación FitPlanner, puede visualizar de forma notable los datos nutricionales referentes a la alimentación correspondiente a la planificación realizada por el mismo, la misma está clasificada en Calorías, Proteínas, Carbohidratos y Grasas. Adicionalmente puede ver su lista de compras generada de acuerdo a las recetas incluidas en la planificación de manera que no tiene que recordar los ingredientes que necesita para preparar sus comidas, sino que consulta en la aplicación FitPlanner para hallas la información deseada. 2. Usar indicadores visuales Estándar: En el momento en que el usuario hace click en cualquier botón cuyo procesamiento no es inmediato o no se muestra rápidamente, se muestra un indicador visual en el banner cambiando de color y llenándose a 71 medida que la página está siendo cargada para indicarle que su requerimiento está siendo procesado. 3. Los controles del sistema deben estar claramente visibles y sus funciones Estándar: En la Home de la aplicación FitPlanner se puede observar la forma de navegación entre las interfaces, a través del menú lateral ubicado al lado izquierdo de la página. * 4. Proveer feedback a las acciones de usuario Estándar: Se muestran mensajes de notificación o errores para establecer una interacción con el usuario 5. Minimizar las posibilidades de cometer errores Estándar: Se realizan las validaciones necesarias para controlar los errores. Se realizan validaciones en el login y registro en cuanto a los datos introducidos. Por ejemplo, cuando el usuario coloca su correo electrónico se verifica que el mismo se haya introducido con el formato correcto Ejemplo: nutricionista@fitplanner.com (Correcto) nutricionista@fit (Incorrecto) 6. Evitar palabras coloquiales y abreviaturas Estándar: Durante el desarrollo se obvió el uso de frases coloquiales como: “Estás confundido” para señalar que el usuario ha cometido un error. Se usó un lenguaje más formal: “El dato introducido es inválido”. 7. Mantener un diseño consistente de una pantalla a otra Estándar: Hubo consistencia entre una interfaz a otra en la aplicación de FitPlanner. Se agregó el logo de la aplicación en la esquina superior izquierda. De igual forma se conserva la misma tipografía y paleta de colores 72 manteniéndose un diseño coherente a lo largo de la página para evitar desorden y confusión en el caso que se haya abandonado accidentalmente la aplicación. Tabla 15: Lista de comprobación aplicada Criterio de comprobación Se cumple No se cumple Reconocer en lugar de recordar X Usar indicadores visuales X Utilizar metáforas adecuadas X Los controles del sistema deben estar claramente visibles y sus funciones identificables X Flexibilidad en la interfaz de usuario X Hacer sentir al usuario que puede tomar decisiones X Proveer feedback a las acciones del usuario X Minimizar las posibilidades de cometer errores X Permitir al usuario recuperarse de los errores X Mantener la interfaz simple, sencilla y organizada X Permitir al usuario personalizar la IU X Mostrarle al usuario lo que necesita cuando lo necesite X Evitar palabras coloquiales y abreviaturas X Consistencia en apariencia y uso X 73 3.4 Fase de Entrega - Resultados En esta fase se muestra el prototipo final de la aplicación FitPlanner, luego de utilizar la metodología de desarrollo AgilUs. A su vez se realizan las pruebas de aceptación 3.4.1 Prototipo Funcional de la Aplicación (Capturas) En cuanto a las interfaces principales de la aplicación FitPlanner se tomaron en cuanto principalmente las realizadas en los prototipos en papel mostrados en la fase de análisis de la metodología usada. Se consideró para el desarrollo de las mismas la guía de estilos establecida, los modelos generados y los estándares aceptados para el desarrollo. a. Interfaz de la Página Principal y Menú de Navegación En la Figura 12 se muestra el Home o Inicio de la aplicación web, la cual está compuesta con un menú lateral ubicado a la izquierda, donde se puede observar todas las opciones que el usuario posee. Figura 13. Interfaz del Home de FitPlanner Fuente: Autores (2017) 74 b. Interfaz de Recetas organizadas por filtros Esta vista es una de las principales de la aplicación Web, en la que el usuario puede seleccionar los criterios de filtrado para visualizar una receta deseada. En este caso se aplican los filtros “Por Ingrediente” y “Por Tipo”. También se tiene la opción de “Agregar Receta”. Figura 14. Interfaz de Ver Todas las Recetas Fuente: Autores (2017) c. Menú de Navegación En la figura 15 se visualiza el menú en la parte lateral izquierda. En Mobile se despliega el menú del lado izquierdo. El menú se presenta legible para el usuario y es fácil de usar. 75 Figura 15. Interfaz del Menú de Navegación de FitPlanner Fuente: Autores (2017) d. Interfaz de Ejercicios Es una de las interfaces principales, en donde se muestran los ejercicios activados por el entrenador del usuario: Figura 16. Interfaz de Ver Ejercicios Fuente: Autores (2017) 76 e. Interfaz de Detalle de Receta La interfaz correspondiente del detalle de la receta, encontrada cuando el usuario clickea “Ver Receta” (Figura 17). En esta vista se ve el detalle de la receta (Ingredientes, Valores Nutricionales, Preparación etc.) para guía al usuario en la preparación de las recetas que seleccione. Figura 17. Interfaz del Detalle de una receta Fuente: Autores (2017) Adicionalmente se presenta la vista de ver la planificación y ver la lista de compras asociada con un plan. Es una interfaz cómoda, accesible y entendible por el usuario 77 Figura 18. Interfaz Planificación del usuario en FitPlanner Fuente: Autores (2017) Figura 19. Interfaz de Lista de Compras de FitPlanner Fuente: Autores (2017) 78 3.4.2 Pruebas de Aceptación Después de la evaluación a la aplicación FitPlanner se realizó una encuesta técnica a usuarios finales con conocimientos en el área de computación para conocer su opinión general sobre la usabilidad y funcionamiento de la misma. La encuesta fue aplicada a un grupo de nueve (9) personas, estudiantes o graduados de computación y la misma puede observarse en la Figura 20, a continuación: 79 Figura 20. Encuesta de Pruebas de Aceptación - FitPlanner Fuente: Autores (2017) Los resultados obtenidos en la encuesta fueron: 80 81 82 83 CONCLUSIONES Al culminar de manera satisfactoria el desarrollo del presente Trabajo Especial de Grado, se pudo lograr el objetivo del desarrollo de una aplicación Web para la planificación de la ingesta calórica a través de recetas y de ejercicios que les permita a los usuarios lograr sentirse mejor y tener una vida más saludable. Se puede destacar que cada día es más popular el tema de la salud y del fitness en la sociedad y surgen cada día nuevos emprendimientos, ideas para brindarles a las personas lo que desean. Gracias a la metodología de desarrollo de software ágil aplicada, se obtuvo la aplicación FitPlanner para ayudar a los usuarios a planificarse de mejor manera en cuanto a su alimentación y tener una rutina de ejercicios que apoye a los instructores de gimnasios y a los usuarios que deseen incluir el hábito de ejercitarse en casa, en el caso que no tengan tiempo o se les dificulte ir diariamente a un gimnasio o salir a caminar. En la actualidad no se consigue una aplicación que integre tanto rutinas alimenticias como de ejercicios físicos. Adicionalmente el sistema le genera una lista de compras al usuario para también darle la facilidad de recordarle qué ingredientes necesita para la preparación de las recetas escogidas en un plan específico. Aplicar de forma adecuada la metodología AgilUs asegura que la aplicación cumple con los estándares de usabilidad necesarios y de calidad que caracterizan a las mejores aplicaciones web. FitPlanner es un prototipo de sistema funcional que tiene un gran potencial en varias áreas principalmente en la de salud específicamente para médicos y nutricionistas; y para otras áreas de negocio como gimnasios, instructores personales y hasta para áreas gastronómicas. Entre sus funciones principales están: creación de perfiles de usuario, la planificación de dietas y ejercicios, la gestión de recetas, y la visualización de ejercicios 84 físicos acordes al usuario sometido previamente a un instructor físico. En el transcurso del desarrollo de la aplicación se encontraron una serie de dificultades como fue agregar las imágenes de los ejercicios de forma que fueran lo más entendibles por el usuario. 85 RECOMENDACIONES Y TRABAJOS FUTUROS Es necesario en todo desarrollo que se evalúe las mejoras que puedan ser anexadas a la aplicación para de esta forma obtener el mayor éxito posible en cuanto al uso una cantidad considerable de personas. Por dicha razón se enuncian las siguientes recomendaciones: a. Se debe realizar alianzas estratégicas con los instructores físicos y gimnasios, usuarios potenciales para establecer un negocio con la aplicación, la cual le brindará beneficios y servirá de apoyo en su labor cotidiana, aumentando su posibilidad de ofrecer a sus clientes un plus donde podrán controlarse de acuerdo a la planificación realizada en la aplicación. b. Realizar la publicidad en áreas en donde la aplicación puede resultar de interés y de rentabilidad para un negocio específico. c. Realizar estudios estadísticos acerca de los datos de interés usados en la aplicación, como por ejemplo recetas más preparadas, ejercicio más realizado, ingrediente más usado, entre otras cosas que resulten beneficiosas para su estudio y ofrecer al cliente un mejor producto que se adapte a sus gustos y deseos. El presente trabajo posee algunas limitaciones que se propone solucionar con la implementación de ampliaciones y mejoras en trabajos futuros, que se describen a continuación: a. Un módulo de sociabilidad, donde puedan ser compartidos por redes sociales las recetas, los ejercicios. Evaluar las recetas y en cierta parte permitir que el usuario agregue comentarios del instructor físico que tiene asignado en la aplicación. 86 b. También se debe ampliarse más a la parte de salud, en el caso de clínicas u hospitales donde se quiere tener un control más estricto al consumo de los pacientes en cuanto a la alimentación. De igual forma se puede enfocar más a las áreas de nutrición y fisiatría, donde es imprescindible las rutinas de dietas y ejercicios respectivamente c. Puede agregarse un módulo de compras directamente con cadenas de supermercados que trabajen con compras online y delivery, de forma que se ofrezca un servicio integrado entre la aplicación y las cadenas de supermercados, donde se pueda visualizar la lista de compras del usuario d. Aplicar Inteligencia de Negocios (Business Intelligence) en el producto para obtener información relevante que pueda contribuir y aportar al sistema y poder ofrecer funcionalidades y servicios que sean adaptables en una sociedad heterogénea y cambiante. Para finalizar, no se descarta la posibilidad de mejora y ampliación de las interfaces de la aplicación para mantener una visión actualizada del negocio y la posible implementación de una aplicación móvil que permita complementar el uso del sistema. 87 REFERENCIAS BIBLIOGRÁFICAS Acosta, A. (2010). AgilUs: Construcción ágil de la usabilidad. Recuperado de: http://www.ciens.ucv.ve:8080/genasig/sites/interaccion-humano- comp/archivos/234_CLEI_Acosta_Paper.pdf Albreshne A, Fuhrer P, y Pasquier, J. (2009). Web Services Technologies: State of the art. Recuperado de: https://diuf.unifr.ch/drupal/softeng/sites/diuf.unifr.ch.drupal.softeng/files/file/ publications/internal/WP09-04.pdf Azaustre, C. (2014). Desarrollo Full Stack JavaScript. El conocido como Stack MEAN. Recuperado de: https://carlosazaustre.es/blog/desarrollo-full- stack-javascript-tambien-conocido-como-mean Barry, D. (2016). Web Services Explained. Recuperado de: http://www.service-architecture.com/articles/web- services/web_services_explained.html Blé, C. (2010); Diseño ágil con TDD. Lulu. Reino Unido Crocco, A. (2016). Menú semanal saludable para toda la familia. Recuperado de: http://www.clarin.com/buena-vida/nutricion/Menu-semanal-saludable- toda-familia_0_BJ6Kz7ji.html DB-Engine. (2017). Popularity of DBMS. Recuperado de: http://db- engines.com/en/ranking Digital Learning. (2012). 10 Razones para aprender JavaScript. Recuperado de: http://www.digitallearning.es/blog/diez-razones-para-aprender- javascript Enciclopedia Británica. (2016). Client-server Architecture. Recuperado de: http://www.britannica.com/technology/client-server-architecture Flanagan, D. (2011); JavaScript: The Definitive Guide. O'Reilly. Estados Unidos de América. Fundación Bengoa (2013). La doble carga de desnutrición y obesidad en Venezuela. Recuperado de: 88 http://www.fundacionbengoa.org/informacion_nutricion/doble-carga- desnutricion-obesidad-venezuela.asp Gottau, G. (2013). Cómo planificar un menú saludable. Recuperado de: https://www.directoalpaladar.com/salud/como-planificar-un-menu- saludable Gottau, G. (2009). Planifica tu menú y verás los beneficios. Recuperado de: https://www.vitonica.com/dietas/planifica-tu-menu-y-veras-los-beneficios Kioskea. (2016). Entorno Cliente/Servidor. Recuperado de: http://es.ccm.net/contents/cliente-servidor-3322219037#148 Leclerqc M, Bohorquez M. (2009). Propuesta Institucional Vidas Móviles. Informe de actividades. Pontificia Universidad Javeriana. Bogotá D.C. Morales A. (2015). Introducción al Stack MEAN y sus componentes: MongoDB, Express, AngularJs y NodeJs. Recuperado de: http://www.funnyfrontend.com/introduccion-stack-mean-parte-1 Moya, R. (2014). MEAN (Mongo-Express-Angular-Node) Desarrollo Full Stack JavaScript (Parte I). Recuperado de: https://jarroba.com/mean- mongo-express-angular-node-desarrollo-full-stack-javascript-parte-i Nations, D. (2014). What is a Web Application?. Recuperado de: https://www.lifewire.com/what-is-a-web-application-3486637 Paramio, C. (2011). Una introducción a MongoDB. Recuperado de: https://www.genbetadev.com/bases-de-datos/una-introduccion-a-mongodb Esaú A. (2015) Conceptos básicos de Git. Recuperado de: https://openwebinars.net/blog/conceptos-basicos-de-git/ Vargas A, Guzmán J (2017) ¿Qué es Git y cuáles son sus características? Recuperado de: http://comunidad.cc/que-es-git Pérez, J. (2008). Dieta. Recuperado de: http://definicion.de/dieta 89 Pérez, J. y Gardey, A. (2008). Sistema de información. Recuperado de: http://definicion.de/sistema-de-informacion PYPL. (2017). PYPL Popularity of Programming Language. Recuperado de: http://pypl.github.io/PYPL.html Ralston, S. (2013). An introduction to AngularJS. Recuperado de: http://www.webdesignerdepot.com/2013/04/an-introduction-to-angularjs Rouse, M. (2011). Web Application. Recuperado de: http://searchsoftwarequality.techtarget.com/definition/Web-application- Web-app W3Techs. (2017). Percentages of websites using various client-side programming languages. Recuperado de: https://w3techs.com/technologies/overview/client_side_language/all Delgado Fernández A. (2008) Entrenamiento físico deportivo y alimentación. Ed. Paidotribo. Tercera edición. México Caraffini D. (2015). Hay más conciencia sobre la salud física y la buena nutrición, pero el sedentarismo avanza. Recopilado de: http://www.unoentrerios.com.ar/la-provincia/hay-mas-conciencia-la-salud- fisica-y-la-buena-nutricion-pero-el-sedentarismo-avanza-n934031.html Montero S. (2016). Patrones de Interacción. Recopilado de: http://ares.cnice.mec.es/informes/21/contenidos/30.htm Nielsen J. (1994). Usability Inspection Methods. New York, USA. Editorial John Wiley & Sons. 90 ANEXOS Figura 21. Anexo 1. Servicios Gold´s Gym Venezuela Fuente: web Gold’s Gym Venezuela