UNIVERSIDAD CENTRAL DE VENEZUELA FACULTAD DE CIENCIAS ESCUELA DE COMPUTACIÓN APLICACIÓN WEB PARA LA GESTIÓN DE CONFIGURACIONES DE PLANES, SERVICIOS DE VALOR AGREGADO Y RESTRICCIÓN DE ROLES PARA UNA EMPRESA DE TELEFONÍA Trabajo Especial de Grado Presentado ante la ilustre Universidad Central de Venezuela Por el bachiller: Miguel Ángel Perdigón Orta Tutores: Profa. Yosly Hernández Bieliukas Prof. Leonardo Chacón Caracas, 11 de mayo 2017 i ii RESUMEN La consultora Innovatec C.A. ofrece una variedad de servicios a sus clientes, entres los cuáles se encuentra Telefónica S.A, una de las principales compañías de telecomunicaciones del mundo, administrando sus bases de datos a distancia. El equipo de analistas de prepago, se encarga de desarrollar los requerimientos solicitados por la empresa en las distintas líneas de negocio, entre los cuales destacan los planes, el cierre de los mismos y servicios de valor agregado (SVA) otorgados a los clientes de la plataforma prepago. Este beneficio requiere del desarrollo de un conjunto de actividades tales como la programación de scripts y pruebas de funcionamiento, que consumen una gran cantidad tiempo y un esfuerzo notable por parte del equipo de desarrollo, lo que genera errores y retrasos en las entregas de los requerimientos. El presente Trabajo Especial de Grado tuvo como objetivo realizar una herramienta que permitiera a sus usuarios configurar de forma sencilla todos los tipos de planes, cierres y SVA’s, solicitados en la pila de requerimientos del departamento, con la finalidad de minimizar los errores humanos y reducir el tiempo empleado en la configuración de éstos. La metodología de desarrollo utilizada fue AgilUs y se emplearon tecnologías como NetBeans, Java y Oracle SQL, fue construida una Aplicación Web que permite realizar todo la gestión de los planes, cierres y SVA’s, el cual incluye la codificación de scripts de configuración, la ejecución de los mismos y la validación de post-cambio en la base de datos de pruebas de la empresa. Como valor agregado, los usuarios de la aplicación podrán modificar los script en caso de que sea necesario realizar un cambio muy específico para una configuración. Se puede concluir que el desarrollo de este sistema con el uso de las tecnologías mencionadas brinda una ventaja estratégica en cuanto al costo, tiempo y esfuerzo aplicado por el equipo de trabajo, mejorando la calidad y el desenvolvimiento de los procesos de la gerencia. Los resultados obtenidos se pueden tomar como un punto de partida para desarrollar nuevas aplicaciones que permitan simplificar otras tareas asignadas al equipo de analistas prepago de Innovatec C.A. Palabras Clave: Aplicación Web, Script, SVA, planes de telefonía, Tecnologías web, Telefonía. i ÍNDICE GENERAL INDICE DE FIGURAS .......................................................................................................................................... iv ÍNDICE DE TABLAS ........................................................................................................................................... vii INTRODUCCIÓN ................................................................................................................................................... 1 CAPITULO I ........................................................................................................................................................... 3 PROBLEMA DE INVESTIGACIÓN ..................................................................................................................... 3 1.1 Contexto de Investigación ...................................................................................................................... 3 1.1.1. Equipo de Analistas de Prepago ........................................................................................................ 4 1.2 Planteamiento del Problema ................................................................................................................... 4 1.3 Justificación ........................................................................................................................................... 9 3.2. Objetivo General .................................................................................................................................. 11 1.5. Objetivos específicos .................................................................................................................................. 11 1.6. Antecedentes ............................................................................................................................................... 11 1.7. Alcance ....................................................................................................................................................... 12 1.8. Metodología de Desarrollo ......................................................................................................................... 13 1.8.1 Principios de AgilUs ............................................................................................................................. 13 1.8.2 Ciclo de Vida de AgilUs ....................................................................................................................... 14 CAPITULO II ........................................................................................................................................................ 17 MARCO TEÓRICO .............................................................................................................................................. 17 2.1 Aplicación Web ........................................................................................................................................... 17 2.1.1 Características de las Aplicaciones WEB ............................................................................................. 18 2.1.2 Ventajas de las Aplicaciones WEB....................................................................................................... 19 2.1.3 Desventajas de las Aplicaciones WEB ................................................................................................. 19 2.2 Arquitectura Modelo Vista Controlador ...................................................................................................... 20 2.3Tecnologías de Desarrolloavascript .............................................................................................................................................. 25 2.3.6 Java ....................................................................................................................................................... 26 2.3.7 Netbeans ............................................................................................................................................... 27 2.3.8 Base de Datos ....................................................................................................................................... 29 2.3.9 Sistema Manejador de Bases de Datos ................................................................................................. 29 2.3.9.1 Oracle................................................................................................................................................. 31 2.4 Elementos Promocionales Movistar ............................................................................................................ 31 2.4.1 Planes Movistar .................................................................................................................................... 32 ii 2.4.2 Cierre de Planes Movistar o Restricción de Roles ................................................................................ 32 2.4.3 Servicios de Valor Agregado (SVA) de Movistar ................................................................................ 33 CAPITULO III ...................................................................................................................................................... 35 MARCO APLICATIVO ........................................................................................................................................ 35 3.1 Fase I: Requisitos ......................................................................................................................................... 35 3.1.1 Tormenta de Ideas................................................................................................................................. 35 3.1.2 Perfiles de Usuario ................................................................................................................................ 36 3.1.3 Requerimientos Funcionales y No Funcionales .................................................................................... 37 3.1.3.1 Requerimientos Funcionales .............................................................................................................. 37 3.1.3.2 Requerimientos No Funcionales ........................................................................................................ 38 3.1.4 Arquitectura de la Aplicación Web Autcon .......................................................................................... 38 3.2 Fase II: Análisis ........................................................................................................................................... 39 3.2.1 Prototipo de Interfaz ............................................................................................................................. 39 3.2.2 Guía de Estilos ...................................................................................................................................... 44 3.2.3 Diagrama de Casos de Uso ................................................................................................................... 45 3.2.4 Diagrama Modelo Relacional .............................................................................................................. 48 3.2.4 Diagrama de Clases .............................................................................................................................. 49 3.3 Fase III: Prototipaje ..................................................................................................................................... 55 3.3.1 Desarrollo ............................................................................................................................................. 55 3.4 Fase IV: Entrega .......................................................................................................................................... 59 3.4.1 Pruebas de Usabilidad ........................................................................................................................... 59 3.4.2 Pruebas de Aceptación .......................................................................................................................... 66 CAPITULO IV ...................................................................................................................................................... 75 RESULTADOS ..................................................................................................................................................... 75 4.1 Página de Inicio ........................................................................................................................................... 75 4.2 Gestión de Configuraciones ......................................................................................................................... 76 4.3 Editar Perfil Analista Prepago ..................................................................................................................... 78 4.4 Buscar Configuraciones Previas .................................................................................................................. 78 4.5 Configuración de Plan Nuevo ...................................................................................................................... 79 4.6 Configuración Restricción de Roles ............................................................................................................ 81 4.7 Configuración de Servicio de Valor Agregado Nuevo ................................................................................ 82 4.8 Editar Scripts ............................................................................................................................................... 82 4.9 Administración de Requerimientos.............................................................................................................. 83 4.10 Agregar Analista Prepago .......................................................................................................................... 86 4.11 Ver Lista de Analista ................................................................................................................................. 86 4.12 Editar Perfil ................................................................................................................................................ 87 CONCLUSIONES ................................................................................................................................................. 92 RECOMENDACIONES ....................................................................................................................................... 93 REFERENCIAS BIBLIOGRÁFICAS .................................................................................................................. 94 MANUAL DE ANALISTA PREPAGO ............................................................................................................... 96 iii MANUAL DE ADMINISTRADOR ................................................................................................................... 110 MANUAL DE TECNOLOGÍA ........................................................................................................................... 118 CUESTIONARIO DE USABILIDAD DE AUTCON ........................................................................................ 120 ANEXO A ........................................................................................................................................................... 121 Casos de Uso ................................................................................................................................................... 121 iv INDICE DE FIGURAS Figura 1.Diagrama de flujo para realizar una configuración ....………………….……………7 Figura 2: Ciclo de vida de metodología AgilUs……………………………………….……...15 Figura 3: Arquitectura del modelo vista controlador. Ingeniería del software ….….…..........21 Figura 4: Interfaz de Netbeans.…………………………………………………….…………28 Figura 5: Arquitectura de base de datos …………………………………………….…..........30 Figura 6: Tormenta de ideas producto de conversaciones…………………………….……...36 Figura 7: Arquitectura de la Aplicación Web Autcon………………………………………..39 Figura 8: Prototipo página de inicio de la Aplicación Web Autcon …..………………..........40 Figura 9: Prototipo página principal de los analista Prepago de la Aplicación Web Autcon ..41 Figura 10: Prototipo página de configuración de requerimiento de la Aplicación Web Autcon……………………………………………………………………………………….. 42 Figura 11: Prototipo página de perfil de usuario de la Aplicación Web Autcon …………….43 Figura 12: Prototipo historial de configuraciones realizadas de la Aplicación Web Autcon …………...……………………….……………………………………………….….44 Figura 13: Diagrama de casos de uso nivel 0 del Modulo Analista de Desarrollo …………..46 Figura 14: Diagrama de casos de uso nivel 0 del Módulo Supervisor ……………………….47 Figura 15: Modelo relacional de la base de datos de la Aplicación Web Autcon ……………49 Figura 16: Diagrama de clases de la Aplicación Web AutCon ………………………………50 Figura 17: Extracto 1 diagrama de clases de la Aplicación Web Autcon ……………………51 Figura 18: Extracto 2 diagrama de clases de la Aplicación Web Autcon ……………………52 Figura 19: Extracto 3 diagrama de clases de la Aplicación Web Autcon ……………………52 Figura 20: Extracto 4 diagrama de clases de la Aplicación Web Autcon ……………………53 Figura 21: Extracto 5 diagrama de clases de la Aplicación Web Autcon ……………………54 Figura 22: Código para generar scripts de plan nuevo de la Aplicación Web Autcon ………56 Figura 23: Figura 22: Código para generar scripts de SVA nuevo de la Aplicación Web Autcon……………………………………………….……………………………………......57 Figura 24: Código para generar scripts de Restricción de roles de la Aplicación Web Autcon..……………………………………………………………………………………….57 Figura 25: Código para instalación de scripts de la Aplicación Web Autcon ………………..58 Figura 26: Resultados de prueba de usabilidad en torno a los colores utilizados contribuyen a la percepción de la aplicación....…………………...................................................................61 v Figura 27: Resultados de prueba de usabilidad en torno a los colores utilizados contribuyen a la percepción de la aplicación ………….................................................................................62 Figura 28: Resultados de prueba de usabilidad en torno a los descriptores de la aplicación son claros y precisos.………………..…………………………………………………………….62 Figura 29: Resultados de prueba de usabilidad en torno a si se ofrece una organización que facilita la navegación ………………..………………………………………………………..63 Figura 30: Resultados de prueba de usabilidad en torno al diseño de la aplicación favorece su uso ………………………….....……………………………………………………………..64 Figura 31: Resultados de prueba de usabilidad en torno a la aplicación se puede ejecutar de manera intuitiva..…………..…………………………………………………………………64 Figura 32: Resultados de prueba de usabilidad en torno a si es una aplicación fácil de usar...…………………………...……………………………………………….………….....65 Figura 33: Resultados de prueba de usabilidad en torno a los elementos de ayuda disponible en la aplicación son útiles …...….…….…................................................................................66 Figura 34: Matriz prueba de aceptación 1 de la Aplicación Web Autcon……………………..………………………………………………………………….68 Figura 35: Matriz prueba de aceptación 2 de la Aplicación Web Autcon …………………...69 Figura 36: Matriz prueba de aceptación 3 de la Aplicación Web Autcon ...………………....70 Figura 37: Matriz prueba de aceptación 4 de la Aplicación Web Autcon..…...……………...71 Figura 38: Matriz prueba de aceptación 5 de la Aplicación Web Autcon ...……………........72 Figura 39: Matriz prueba de aceptación 6 de la Aplicación Web Autcon …………………...73 Figura 40: Matriz prueba de aceptación 7 de la Aplicación Web Autcon …………………...74 Figura 41: Página de inicio de la Aplicación Web Autcon ……….………………………….76 Figura 42: Interfaz de configuraciones de la Aplicación Web Autcon …………………...….77 Figura 43: Editar perfil analista prepago de la Aplicación Web Autcon ………………….....78 Figura 44: Buscar configuraciones previas de la Aplicación Web Autcon…………………...79 Figura 45: Configuración de plan nuevo de la Aplicación Web Autcon ………………….…80 Figura 46: Configuración restricción de roles de la Aplicación Web Autcon ……………….81 Figura 47: Configuración de servicio de valor agregado nuevo de la Aplicación Web Autcon ………………………………………………………………………………………..83 Figura 48: Editar scripts de la Aplicación Web Autcon ……………………………………...86 Figura 49: Administración de requerimientos de la Aplicación Web Autcon ……………….85 Figura 50: Agregar nuevo requerimiento de la Aplicación Web Autcon ………………..…..85 vi Figura 51: Agregar analista prepago de la Aplicación Web Autcon …………………….…..86 Figura 52: Lista de analista prepago de la Aplicación Web Autcon ..………………………..87 Figura 53: Editar perfil administrador de la Aplicación Web Autcon …………………...…..88 Figura 54: Flujo de trabajo Autcon, Módulo Analista Prepago ………………………….…..89 Figura 55: Flujo de trabajo Autcon, Módulo Administrador ………………………….……..90 vii ÍNDICE DE TABLAS Tabla 1: Guía de Estilos de la Aplicación Autcon ………………………………………….45 Tabla 2: Especificación del caso de uso: Ingresar al sistema……………………………….47 Tabla 6: Especificación del caso de uso: Gestionar Usuario……………………………......49 1 INTRODUCCIÓN En el mundo de la programación, el uso de lenguajes de alto nivel se hace más pequeño cada día en los tiempos modernos, ya que en los últimos cinco (5) años se usan sistemas que generan gran cantidad de códigos de forma automática. Limitando al usuario a sólo diseñar las interfaces y especificar el flujo de trabajo que tendrá la aplicación. El surgimiento de sistemas que automatizan la creación de programas es impulsado por la necesidad de las empresas en ahorrar tiempo, y que sus productos o herramientas sigan un estándar que facilite el proceso de mantenimiento o actualización. Generando como consecuencia que se reduzcan los costos y tiempos en la cadena de producción, y facilitando la toma de decisiones, ya que permite realizarlas en un tiempo más inmediato gracias a la automatización. Innovatec C.A. no poseía automatizado ningún proceso dentro de su cadena de producción relacionada con el servicio de outsourcing de administración remota de bases de datos, lo que en ocasiones les generaba grandes retrasos debido a que al momento de corregir algún error, se requería cumplir con una serie de procedimientos lentos que le permitían al equipo de analistas de prepago tener en sus manos los scripts para arreglar la falla. Y aún así no existiese algún inconveniente, requiere de tiempo desarrollar los códigos SQL. Mediante el uso de las tecnologías y la metodología de desarrollo AgilUs señalada en este documento, Innovatec C.A. introdujo dentro de su cadena de producción una Aplicación Web llamada Autcon la cual de genera, instala y valida los scripts de forma automática. Reduciendo considerablemente el tiempo de respuesta al momento de que Telefónica S.A solicitara la creación o cierre de un plan, o generar un nuevo servicio de valor agregado. El presente documento de Trabajo Especial de Grado está estructurado en cuatro (4) capítulos, los cuales contienen la siguiente información: 2 Capítulo I: se explica el contexto de investigación, se realiza la descripción del planteamiento del problema. También se describe la justificación de la aplicación, sus antecedentes, objetivo general, objetivos específicos, alcance y la metodología de desarrollo escogida para el proyecto. Capítulo II: en este capítulo se expone todo el marco teórico relacionado a las diferentes tecnologías que fueron utilizadas dentro del desarrollo de la aplicación, tales como bases de datos y lenguajes de programación. Capítulo III: Marco Aplicativo: en este capítulo se describe como fue realizada la aplicación, haciendo uso de la metodología de desarrollo AgilUs y sus elementos. Además, se describe la arquitectura implantada la aplicación, cerrando con las pruebas de usabilidad y aceptación. Capítulo IV: Resultados: se realiza una descripción de la aplicación, mostrando las diferentes vistas, sus funcionalidades y los archivos generados. Para finalizar, se exponen las conclusiones, algunas recomendaciones para futuros desarrollos y las referencias bibliográficas de los autores citados en este documento. 3 CAPITULO I PROBLEMA DE INVESTIGACIÓN En el presente capítulo se exhibe el contexto de investigación, sus antecedentes, y se realiza el planteamiento del problema identificado en el equipo de analistas de prepago de la consultora Innovatec C.A, en lo que se refiere a la configuración de los planes, cierre de éstos o creación de SVA’s, en la plataforma prepago de Telefónica S.A. Por último se expone el objetivo general y los objetivos específicos, se desarrolla la justificación, se describe el impacto que tuvo la solución y se detalla el sistema propuesto para solventar el problema. 1.1 Contexto de Investigación Innovatec C.A. es una consultora que ayuda a sus clientes a simplificar, estandarizar y controlar sus procesos de negocio, para que generen información oportuna y confiable que facilite la toma de decisiones y que les permita cumplir con las normas fiscales exigidas por el país donde operan. Esto lo logran implementando soluciones informáticas integrales conformadas por software, hardware, asesoría y soporte técnico con un adiestramiento, actualización, experimentación e innovación continua de todo nuestro equipo en cada una de sus áreas de especialización. Innovatec. (20015). [Breve resumen de servicios que ofrece la consultora Innovatec C.A.]. Recuperado de https://www.innova-tec.com/ Innovatec C.A. ofrece distintos servicios a sus clientes entres los cueles se encuentra: Sistemas de planificación de recursos empresariales (ERP), desarrollo remoto de aplicaciones Openbravo, soluciones de Comercio, inteligencia y analítica de negocios y Outsourcing en administración de base de datos y desarrollos ORACLE. En el último servicio mencionado se encargan de realizar la administración remota y presencial de bases de datos Oracle, desarrollo a la medida en las herramientas de Oracle, tanto cliente servidor como web, mantenimiento evolutivo y perfectivo de aplicaciones Oracle, así como de sus bases de datos, desarrollos de alto desempeño utilizando Oracle Tuxedo y planificación y ejecución de migraciones de sistemas basados en Oracle. 4 1.1.1. Equipo de Analistas de Prepago El equipo de analistas de prepago es un departamento encargado de la administración de forma remota de las bases de datos de la compañía Telefónica S.A, encargándose tanto de la plataforma prepago como postpago. Entre las configuraciones que realizan el departamento se destaca:  Planes: son una forma de proveer un conjunto de servicios a los clientes con una renta mensual o quincenal (Moncada, 2012).  Cierre de Planes: también conocido como restricción de roles, permite colocar fuera de servicio un plan o restringir su uso (Moncada, 2012).  SVA (Servicios de valor agregado): permiten al cliente tener un servicio adicional a los que ofrece el plan que tiene activado (Moncada, 2012).  Bonos: Son servicios que se gana al cliente con una duración normalmente de un mes, al activarse un evento como el cambio de un plan o la activación de una línea nueva (Moncada, 2012).  Ajustes de precios: Como el nombre lo indica son requerimientos que actualizan los precios de planes o svas (Moncada, 2012).  Concursos: Son requerimiento que permite a los cliente competir por un premio, donde se pueden otorgar distintos servicios (Moncada, 2012). 1.2 Planteamiento del Problema En el departamento de analistas de prepago de la consultora Innovatec C.A. se desarrollan un gran número de configuraciones solicitadas por el cliente Telefónica S.A. La magnitud del trabajo acumulado puede llegar a sobrepasar la capacidad de los desarrolladores, lo que puede ocasionar en retrasos o errores al programar. Entre los requerimientos que son solicitados al equipo, se destaca la creación de planes, cierre de éstos y generar SVA’s para la plataforma prepago. Cuyo objetivo es facilitar a los usuarios de Telefónica S.A. el disfrute y pago de los servicios que ofrece esta compañía de telecomunicaciones. Los planes se pueden clasificar en cuatro tipos: móvil, los cuales 5 pueden ofrecer minutos o segundos, y como adicional mensajes o datos de navegación; fijo, dirigidos a los teléfonos fijos donde se ofrecen minutos o segundos dependiendo del caso; internet móvil, son planes que otorgan únicamente datos de navegación y televisión digital, que permiten tener acceso a una variedad de canales según el caso. El cierre de los planes es simplemente restringir a los clientes de Telefónica S.A. el disfrute de algún plan en específico. Por último, los servicios de valor agregado (SVA) son productos que actúan como un adicional al plan que tiene activado el cliente, éstos pueden ser de minutos, segundos, mensajería de texto o datos de navegación. El proceso de creación de los script inicia cuando el equipo de analistas de prepago recibe la bitácora proveniente del negocio, es decir, de Telefónica S.A. Dicho documento funciona como una especie de interfaz que permite a todas las personas relacionadas con la configuración, puedan identificar rápidamente detalles importantes tales como:  Nombre del plan o SVA  Línea del negocio beneficiada  Monto del Plan o SVA  Compatibilidad con otros SVA’s (sólo en caso de configuración de planes)  Compatibilidad con otros Planes (sólo en caso de configuración de SVA’s)  Beneficios a otorgar  Fecha de inicio de disponibilidad del plan o SVA  Tipo de plan o SVA Una vez identificados los aspectos importantes, el desarrollador procede a realizar los script siguiendo por lo general los siguientes pasos:  Identificar lo que el negocio necesita de la configuración.  Identificar cuáles bases de datos se modificarán y determinar cómo será dicha modificación. El desarrollador tiene varias opciones para realizar esta tarea: - Guiarse de los manuales de configuración: en caso de que el analista tenga dudas sobre la configuración. 6 - Reutilizar y adaptar códigos anteriores similares al actual: en caso de que exista un antecedente con características similares al requerimiento actual. - Desarrollar los script de inicio a fin sin reutilizar código: en caso de que no exista un antecedente.  Desarrollar los script utilizando el lenguaje SQL, cumpliendo con todos los requisitos establecidos en la bitácora.  Realizar las pruebas necesarias en el ambiente de desarrollo para validar y verificar que se cumple con lo solicitado.  Realizar la documentación correspondiente a la instalación de los scripts.  Promover el requerimiento a pruebas.  Solicitar que los script sean instalados en las bases de datos de pruebas.  Corregir los errores o incidencias identificadas en pruebas.  Certificar que los scripts fueron instalados correctamente en el ambiente de pruebas.  Realizar el seguimiento de la entrega hasta que ésta se encuentre en producción. En la figura 1 se puede apreciar el flujo normal de trabajo de un analista prepago, desde el momento en que le llega la bitácora con las especificaciones del nuevo requerimiento. Donde luego debe proceder a buscar una configuración anterior similar con la cual guiarse, o en su defecto crearla por completo. Una vez realizados los script se proceden a instalar en las bases de datos de desarrollo para validar que el comportamiento de los mismos sea el correcto. El siguiente paso es la documentación que está conformado por el documento de instalación, el formato de entrega y la bitácora. Seguidamente se procede a tomar evidencias de que lo instalado funciona correctamente, normalmente se realiza tomando foto capturas del sistema CVSC cuando se está implicado el mismo en el proceso de instalación. Por último se entrega tanto la documentación como los códigos SQL que modificarán la base de datos, y de presentarse un error debe inmediatamente corregirse, en caso contrario se da por finalizado el requerimiento. 7 Figura 1. Diagrama de flujo para realizar una configuración. En el proceso de creación de los requerimientos, existe el riesgo de que se cometan errores tales como:  Omitir segmentos de códigos fundamentales.  Cometer errores de sintaxis o semántica del lenguaje SQL. 8  Cometer errores al introducir en las tablas datos erróneos.  No desarrollar las pruebas de manera adecuada. Las consecuencias de los inconvenientes mencionados, se listan a continuación:  Consumo de tiempo detectando el error producido.  Consumo de tiempo invertido en corregir el problema.  Consumo de tiempo al momento de que equipo de pruebas detecta el error y devuelve la entrega.  Posponer la fecha de producción de la entrega debido al tiempo que lleva detectar y arreglar los errores. Cabe destacar que el proceso de configuración en algunas ocasiones se ven involucradas cuatro (4) bases de datos, las cuales son T1 y T2 cuyo sistema manejador es Oracle, que son donde se configuran todos los elementos necesarios para crear un SVA o un plan nuevo. Las dos últimas son CVSC y TCONECTA las cuáles fueron creadas usando SQL Server, la primera es donde se apoyan los agentes autorizados de Telefónica S.A. para satisfacer las necesidades de sus clientes, y la segunda para restringir el disfrute de los planes. Desde que inicia el proceso de configuración hasta que se le entrega los scripts junto con la documentación al equipo de pruebas, los analistas de prepago pueden tardar entre cinco (5) y seis (6) días. Sin contar el tiempo que conllevaría detectar y corregir errores en el código SQL, retrasando el proceso en al menos dos (2) días más ya que se debe solicitar la devolución de la entrega, y esperar a ser atendido para finalmente empezar a corregir los inconvenientes. Cabe destacar que dichas entregas se realizan con un tiempo mínimo de holgura, entendiéndose por ello, que los coordinadores de Telefónica S.A. junto con el supervisor de analistas se cronograma dos días adicionales para corregir posibles errores. Esto se debe a que las decisiones se toman atendiendo a las necesidades del momento en el mercado venezolano. Es por ello que es prácticamente imposible planificar con tiempo lo que se 9 requiere para el negocio. Inclusive sucede en algunas ocasiones que solicitan modificar la base de datos sin haber estado en la planificación ya que surgen eventos inesperados. Adicionalmente, los inconvenientes mencionados anteriormente no sólo afectan al equipo desarrollo, ya que son parte de una cadena de producción y como eslabón lo que suceda ahí, afectará los procesos que le continúan, siendo pruebas y puesta en producción. Lo que al final degenera en retrasar la fecha para que los clientes de Telefónica S.A. puedan disfrutar del plan o sva prometido, generando la desventaja de tener clientes insatisfechos y pérdidas económicas. Con base a lo expuesto anteriormente se planteó como pregunta de investigación: ¿Qué solución tecnológica permite la automatización y sistematización de los procesos en la configuración de los requerimientos solicitados por una empresa de telefonía? 1.3 Justificación Este Trabajo Especial de Grado nace debido a la necesidad de Innocatec C.A. en optimizar el proceso de desarrollo de planes, así como su cierre y SVA’s en la plataforma prepago de la compañía Telefónica S.A. Para ello se desarrolló una Aplicación Web llamada Autcon, que permitiera a los desarrollares acceder a ésta desde cualquier lugar que con conexión a internet, para luego generar los scripts de configuración, su posterior instalación y por último la validación de cambios en la bases de datos de manera automatizada, intuitiva y rápida. Siendo capaz de reducir el proceso de desarrollo a un (1) día. Telefónica S.A. como cliente de la consultora Innovatec C.A. es muy exigente con respecto a la calidad de las entregas, refiriéndose a que los códigos realizados en el lenguaje SQL no tengan errores. Esto debido a que las configuraciones que constantemente solicita la compañía transnacional, atienden a las necesidades cambiantes del mercado y es 10 imprescindible que estén en perfectas condiciones para no generar retrasos corrigiendo los inconvenientes. A través de una interfaz altamente usable el usuario puede ingresar los datos importantes de la configuración que se indican en la bitácora del negocio, para que así el sistema pueda generar los scripts y enviarlos al correo del desarrollador, con la intención de que éste se encargue de completar la entrega desarrollando la documentación correspondiente. Cómo valor agregado la aplicación realizará la consolidación de la instalación, lo que forma parte de la documentación que se debe realizar en la entrega, proceso importante que consume parte del tiempo vital en el mundo de los negocios. La Aplicación Web contribuye de forma muy significativa en optimizar el proceso de configuración de planes, cierres y SVA’s en la plataforma prepago de la compañía Telefónica S.A. Reduciendo los tiempos de desarrollo y números de errores al mínimo posible, donde el impacto positivo que produce esta aplicación puede hacerse notar de manera inmediata. Otra ventaja de Autcon es que gracias a lo sencillo de su interfaz y a lo intuitivo que es, permite a un analista prepago sin experiencia realizando requerimientos, realizar una entrega prácticamente en el mismo tiempo que un trabajador con años creando planes, svas o restricción de roles, ya que Autcon sólo solicita las características que se encuentran en la bitácora y se encarga de realizar los códigos para terminar una configuración. Autcon como Aplicación Web tiene una alta accesibilidad, facilitando el trabajo a los analistas prepago debido a que puede realizar dichas configuraciones desde cualquier dispositivo que tenga la capacidad de navegar en internet y a cualquier hora. Lo que es una nueva realidad para Innovatec donde se restringía el trabajo en sus oficinas ubicadas en el este de la ciudad de Caracas. 11 3.2.Objetivo General Desarrollar una Aplicación Web para la gestión de configuraciones de planes, servicios de valor agregado y restricción de roles para una empresa de telefonía. 1.5. Objetivos específicos Los objetivos específicos considerados para dar cumplimiento al objetivo general se enumeran a continuación: 1. Identificar requerimientos funcionales y no funcionales de la Aplicación Web Autcon. 2. Construir la arquitectura de la Aplicación Web Autcon. 3. Diseñar la interfaz gráfica y guía de estilos de la Aplicación Web Autcon. 4. Diseñar el modelo lógico y físico de la base de datos de la Aplicación Web Autcon. 5. Integrar la aplicación al sistema de Base de Datos de desarrollo actual de Telefónica S.A. 6. Aplicar pruebas de funcionalidad y usabilidad sobre la Aplicación Web Autcon. 1.6. Antecedentes Antes del año 2017 los analistas de prepago de la consultora Innovatec C.A., al momento de realizar la configuración deben buscar una entrega anterior que tenga características similares a la actual. Dicha búsqueda se realiza en un sistema llamado Dimensions desarrollado por la empresa Serena, el cual funciona como un repositorio centralizado de entregas donde cada una se identifica con un valor alfanumérico que agiliza su ubicación. Éste es accedido por varias empresas relacionadas con la modificación de las bases de datos de Telefónica, por lo que es necesario un usuario y contraseña que lo otorga la transnacional de telecomunicaciones con unos roles asociados, que no permiten que se puedan modificar documentos o archivos que no le corresponden. Continuando con el proceso de configuración, de no existir un antecedente para el requerimiento en curso, se debe optar por crear los script en lenguaje SQL por completo. 12 No existen actualmente aplicaciones que permitan realizar los scripts de configuración de algún requerimiento, además de ejecutarlos y almacenar un registro de esta actividad. Sin embargo, Mangialomini, R. (2016). Aplicación Web para la gestión de los procesos de configuración de promociones en una empresa de Telefonía. Universidad Central de Venezuela Facultad de Ciencias Escuela de Computación, Caracas Venezuela, creó un sistema web que agilizara la creación de promociones para Telefónica S.A., donde los coordinadores de dicha empresa tenían la capacidad de realizar la configuración por ellos mismos, sin necesidad de un equipo de analistas de desarrollo. 1.7. Alcance El alcance establecido para este Trabajo Especial de Grado, fue la creación de una Aplicación Web que facilitara la programación de las configuraciones de nuevos planes, servicios de valor agregado y cierre de planes en la plataforma prepago de la compañía Telefónica S.A. Se abarcaron las siguientes líneas de negocio:  Telefonía móvil  Telefonía fija  Internet móvil  Televisión Digital En particular se trabajó con la plataforma prepago como un primer paso para la automatización de las configuraciones, y no se incluye postpago debido a que contienen clientes y tablas distintas en sus bases de datos, además de que prepago usa una base de datos relacional y postpago de tipo jerárquica, de abarcar ambas haría del proyecto una tarea posiblemente interminable. Con respecto a las líneas de negocio, son todos los tipos de planes que Telefónica otorga. La aplicación que se desarrolló incluyó las siguientes tareas:  Generar todos los códigos SQL necesarios para una configuración. 13  Ejecutar los script en las bases de datos correspondientes para culminar su instalación.  Generar los spools de instalación que validen que todos los registros fueron insertados correctamente.  Permitir modificar los script en caso de ser necesario.  Garantizar un alto grado de seguridad del sistema.  Consolidación de script y pruebas de configuración. 1.8. Metodología de Desarrollo El Trabajo Especial de Grado expuesto fue realizado siguiendo la metodología AgilUs, como un método de desarrollo ágil (por ágiles se entiende que permite construir programas de manera iterativa, incremental y adaptable fácilmente a cambios) que nació en el Centro de Investigación de Software y Sistemas de la Escuela de Computación, Universidad Central de Venezuela, donde el usuario es parte fundamental en el desarrollo del programa, debido a que AgilUs se centra en la usabilidad de las interfaces y ésta sólo puede ser medida a través del usuario y no de los clientes o programadores (Acosta, 2015). Es por ello que esta metodología inicia creando las interfaces y a partir de allí se construye el resto del sistema. Muy al contrario de otros métodos de desarrollo donde dicho detalle se deja al final como un hecho simplemente estético y con poca importancia. Fue elegido AgilUs debido a sus características de ser una metodología altamente flexible, que facilita al desarrollador seleccionar una actividad a realizar de entre las que propone su ciclo de vida. Además de que se adaptó a las circunstancias en la que el Trabajo Especial de Grado nació, donde sólo había un programador, incluyendo la urgencia de realizar una construcción rápida, por supuesto con calidad de un sistema que facilitara y garantizara la calidad de las configuraciones solicitadas por Telefónica S.A. 1.8.1 Principios de AgilUs Para Acosta (2015) AgilUs gira en torno a los siguientes principios: 14  Integra la Interacción Humano Computador (IHC) y la Ingeniería del Software (IS). Ambas se complementan una a la otra, y un diseño centrado en conseguir el mayor grado de usabilidad posible, tiene como consecuencia un producto de calidad (ISO 9126-1).  La usabilidad debe ser lo primordial en el desarrollo del programa es decir, se debe pensar es cómo facilitarle el uso del sistema al usuario, y no en hacerlo más sencillo para el programador. Y en concordancia con el principio anterior, la usabilidad debe estar involucrada desde el comienzo en el desarrollo de la aplicación, para conseguir una calidad óptima.  La usabilidad incide en la utilidad del sistema, ya que en la medida que el software facilite notablemente la obtención de resultados de forma eficiente e intuitiva, se podrá determinar la utilidad del mismo. 1.8.2 Ciclo de Vida de AgilUs El ciclo de vida de la metodología AgilUs es influenciado en un alto grado por el usuario del sistema. Este método consiste en crear de forma incremental e iterativa distintos prototipos altamente funcionales y de alta calidad hasta obtener el producto final deseado, que igualmente en caso de ser necesario, éste puede ser objeto de modificaciones para agregarles otras características que aumenten la usabilidad del sistema (Acosta, 2015). AgilUs está compuesto de cuatro etapas, donde en cada una de ellas se desarrollan distintas actividades que son opcionales dependiendo de las necesidades o las circunstancias en las que se desenvuelva la creación del programa. Dichas etapas tienen como finalidad construir un programa con un alto margen de usabilidad y de manera organizada. En la figura 2, se puede visualizar de manera sencilla como se relacionan las fases de esta metodología, además de sus distintas actividades que se desarrollan en ellas, así como los artefactos que se generan en las mismas. A continuación se procede a explicar cada etapa: 15 Figura 2. Ciclo de Vida de AgilUs. Acosta, E. (2015). AgilUs: Construcción Ágil de la Usabilidad [Figura]. Recuperado de https://www.researchgate.net/publication/267856949 Requisitos: es la primera etapa del ciclo de vida, siendo la más importante ya que de aquí nace el sistema y de hacerse de manera errónea puede terminar en un programa completamente inútil para el usuario. A través de distintas actividades tales como: tormenta de ideas, encuestas, entrevistas, cuestionarios, evaluación de sistemas existentes, perfiles de usuario, requerimientos funcionales y no funcionales, etc; se obtienen los requisitos que desea satisfacer el usuario al usar el futuro sistema. Análisis: es la fase donde se comienza a tomar forma el sistema, debido a que los datos obtenidos en la etapa de requisitos son transformados en artefactos de UML, que pueden ser entendidos rápidamente por los distintos integrantes del equipo de desarrollo, o por un futuro desarrollador que tenga como tarea realizar el mantenimiento del sistema. 16 Prototipaje: se implementan los artefactos generados en la fase anterior para desarrollar prototipos rápidos de las interfaces que tendrá el sistema, teniendo como base los patrones de interacción. Dichas interfaces van aumentando su complejidad y funcionalidad de manera incremental e iterativa hasta llegar al producto final. Entrega: es la última etapa en donde se inician las pruebas sobre el sistema para validar y verificar que cumplen con los requisitos que el usuario planteó en un principio y que funcione correctamente. Una vez comprobado, se procede a liberar el producto. Una vez descrito el contexto del problema que se presentó en la consultora Innovatec C.A., se continúa con el capítulo correspondiente al marco teórico, donde se presenta una serie de fundamentos teóricos importantes que ayudarán a comprender la solución automatizada desarrollada en el presente Trabajo Especial de Grado. 17 CAPITULO II MARCO TEÓRICO El siguiente capítulo tiene como finalidad presentar bases teóricas relacionadas a un ambiente de desarrollo web, que fueron las bases para el desarrollo del TEG. El mismo se divide en tres grandes tópicos, los cuales se describen a continuación. El primer tópico se hace referencia a los conceptos inherentes a una aplicación web, así como también su estructura y sus principales características y ventajas. Se explica la arquitectura cliente servidor y el modelo de desarrollo MVC (Modelo Vista Controlador), que se encarga de separar las funciones del cliente, el servidor web y el servidor de base de datos. El segundo tópico muestra los recursos tecnológicos necesarios para el desarrollo de la aplicación web. Las tecnologías del lado del servidor y las del lado del cliente, HTML, CSS y Javascript, entre otras. Y por último a los elementos promocionales de la empresa Telefónica S.A. que gestiona Autcon. 2.1 Aplicación Web Las aplicaciones web son programas ejecutados desde un servidor remoto dentro de una intranet o internet, pero su intención es simular una aplicación instalada en la computadora huésped. Recientemente las aplicaciones de este tipo se han popularizado, en gran medida debido a que permite ahorrar espacio de memoria en el disco duro, ya que se tiene garantizado que la información almacenada en estos programas no se perderá, y no es necesario realizar alguna configuración en la computadora para poder manipular la aplicación (Ramos, 2014). Las aplicaciones web pueden ser desarrolladas en más de un lenguaje de programación, el único límite con respecto a este aspecto es la capacidad del servidor de interpretar dicho código. Una Aplicación Web es un híbrido entre un programa de escritorio y una página de https://www.google.co.ve/search?espv=2&biw=1440&bih=794&tbm=bks&tbm=bks&q=inauthor:%22Alicia+Ramos+Mart%C3%ADn%22&sa=X&sqi=2&ved=0ahUKEwjT5tPw2oXSAhXE5SYKHSbvAbEQ9AgIHzAB 18 internet, donde su comportamiento es similar al de un sistema local ya que tiene la capacidad de responder en tiempo real y usando recursos del ordenador huésped, pero al mismo tiempo sólo puede manipularse usando un navegador de internet y por supuesto se debe tener acceso a la red mundial (Ramos, 2014). Entonces se puede concluir que una Aplicación Web es un programa distribuido, el cual da la sensación al usuario de estar manipulando el software directamente desde el computador local, mas sin embargo éste puede encontrarse a varios de kilómetros siendo ejecutado en un servidor. Por ende es imprescindible tener una conexión a internet para poder usar las aplicaciones web. 2.1.1 Características de las Aplicaciones WEB La principal característica es su fácil acceso ya que sólo se necesita tener un navegador web confiable y acceso a internet, no se requiere de tener conocimientos en instalaciones de programas. Otra particularidad, es que no es necesario tener espacio de memoria del disco duro de la computadora donde se está usando la aplicación, como se mencionó anteriormente, esto se debe a que los datos son almacenados en bases de datos remotas (Contreras, 2013). También se menciona la portabilidad que poseen este tipo de aplicaciones, ya que se ejecutan en el navegador web y sin importar el ambiente o sistema operativo, por lo que el ambiente sólo debe validarse es en el servidor, donde está instalada realmente la aplicación (Contreras, 2013). Las aplicaciones web se diferencian de otros programas porque son ejecutados desde un navegador de internet, sin embargo dan la sensación al usuario de estar usando un programa instalado de forma local. Por último una Aplicación Web cuenta siempre con la última versión, ya que todos los usuarios deben acceder al mismo servidor para poder hacer uso de la aplicación, y al https://www.google.co.ve/search?espv=2&biw=1440&bih=794&tbm=bks&tbm=bks&q=inauthor:%22Maria+Jesus+Ramos+Mart%C3%ADn%22&sa=X&sqi=2&ved=0ahUKEwjT5tPw2oXSAhXE5SYKHSbvAbEQ9AgIIDAB 19 momento de realizar una modificación que mejore el rendimiento del programa, con hacerlo en dicho servidor es suficiente para que todos tengan el sistema actualizado. 2.1.2 Ventajas de las Aplicaciones WEB La principal ventaja de una Aplicación Web es la reducción del consumo de recursos del computador, ya que la mayoría del procesamiento se realiza en el servidor. Además se garantiza que los datos ingresados en el sistema no se perderán debido al uso de bases de datos remotas (Thierry, 2010). Otra ventaja es que una Aplicación Web puede ser visto desde distintos dispositivos sin tener que realizarse una programación complicada que lleve mucho esfuerzo realizar, ya que con que dichos dispositivos posean un navegador web y conexión a internet será suficiente para poder manipular el programa. 2.1.3 Desventajas de las Aplicaciones WEB También se exponen las desventajas que presenta usar una Aplicación Web, entre las cuales menciona el requisito primordial de tener acceso a internet, sin éste el usuario no puede disfrutar del programa. Otra desventaja relacionada con el internet es la calidad del servicio o la velocidad de bajada que posee el usuario en su hogar u oficina, ya que existen aplicaciones que requieren de una velocidad de internet considerablemente alta para que el uso de ésta cause satisfacción al usuario (Thierry, 2010). Otra desventaja importante es que una Aplicación Web por los momentos no supera en capacidad de procesamiento al de un programa instalado de forma local. Esto se debe a que en el primer caso el procesamiento es compartido por todos los usuarios que estén trabajando con la aplicación, y si el servidor no puede un hardware apto para el tráfico en su hora pico, el servicio decaerá. Situación que se evita en el segundo caso en el que el programa no comparte el procesador con tantos procesos en ejecución. https://www.google.co.ve/search?espv=2&biw=1440&bih=794&tbm=bks&tbm=bks&q=inauthor:%22Thierry+Groussard%22&sa=X&sqi=2&ved=0ahUKEwjT5tPw2oXSAhXE5SYKHSbvAbEQ9AgIOjAG https://www.google.co.ve/search?espv=2&biw=1440&bih=794&tbm=bks&tbm=bks&q=inauthor:%22Thierry+Groussard%22&sa=X&sqi=2&ved=0ahUKEwjT5tPw2oXSAhXE5SYKHSbvAbEQ9AgIOjAG 20 Por último las aplicaciones web están expuestas a hackers que pueden dañar el funcionamiento de la misma o usurpar datos importantes para el usuario. Es por ello que muchos tienen reservas con estos tipos de programas y prefieren los sistemas locales, los cuáles son menos vulnerables en temas de seguridad y acceso. 2.2 Arquitectura Modelo Vista Controlador Es una arquitectura de software desarrollada en la década de los ochentas, cuando empezó a surgir el negocio de las computadoras personales y la demanda de programas aumentó repentinamente. Es por ello que fue importante crear una arquitectura que pudiese construir un sistema lo más rápido posible, el modelo vista controlador (MVC) permite el desarrollo concurrente al dividir una aplicación en tres partes que se pueden programar de manera separada, teniendo una variedad de especialistas trabajando en sus áreas correspondientes (Sommerville, 2005). MVC como se mencionó anteriormente divide al programa en tres partes. La primera es el Modelo donde se almacenan los datos que manejará la aplicación, el cual normalmente consiste de una o varias bases de datos y es necesario establecer un diseño de los mismos, que facilite visualizar por completo el modelo de datos. Luego se encuentra la Vista que como su nombre lo sugiere se refiere al diseño y el comportamiento de las interfaces del programa. Por último se describe el Controlador, el cual es el motor del programa donde están todos los métodos que le dan vida. Es la parte más compleja de desarrollar y por ende la que conlleva más tiempo en terminar, es realizado exclusivamente por programadores. En la figura 3 se ilustra cómo se estructura el modelo vista controlador, donde la vista recibe las entradas del usuario y luego éste dependiendo de las peticiones que recibe, realiza ediciones del modelo o solicita modificaciones de la vista al controlador. Luego el controlador satisface las necesidades de la vista de su modificación, o realiza consultas y actualizaciones del modelo de datos. Por último el modelo sólo sirve como contenedor seguro de la información, y permite su modificación o consulta por los entes autorizados. https://www.google.co.ve/search?sa=X&espv=2&biw=1440&bih=794&tbm=bks&tbm=bks&q=inauthor:%22Ian+Sommerville%22&ved=0ahUKEwiFpMmQz4rSAhWLOiYKHcdTCfoQ9AgIHjAB 21 Figura 3. Arquitectura del modelo vista controlador. Ingeniería del software 2.3Tecnologías de Desarrollo En este apartado se detallarán las tecnologías usadas para el desarrollo de la Aplicación Web Autcon. Desde la construcción de las interfaces hasta el motor que hace funcionar el programa, y al mismo tiempo la elaboración de su base de datos. 2.3.1 HTML El HTML significa Hyper Text Mark up Language, por sus siglas en español lenguaje de marcado de hipertexto. Sirve esencialmente para estructurar documentos, pero no describe la apariencia o el diseño del mismo sino que ofrece las herramientas necesarias para dar formato, según la capacidad del servidor web en el que se almacena la página web y las capacidades del navegador (Pastor, 2006). Es decir, HTML es un lenguaje utilizado para crear el esqueleto de un documento, las partes que lo conforman y la manera en que será visualizado. Esto se hace en función a los tamaños de pantalla, tipos de fuente disponible y a otras capacidades que dependerán del navegador en el cual será visualizado el documento. 22 Los documentos HTML pueden ser visualizados independientemente del sistema operativo que se utilice. Esta es una de las principales ventajas del uso de HTML, y esto se debe a que solo es necesario el uso de un navegador web para su visualización (Pastor, 2006). Otra ventaja importante del HTML, es la facilidad que representa su aprendizaje debido al reducido número de etiquetas que emplea. 2.3.2 HTML5 Es la versión más actualizada de HTML, la cual ofrece mejoras y novedades a las versiones anteriores, permitiendo al desarrollador ahorrar tiempo gracias a que los elementos vienen pre-fabricados. Las novedades son las siguientes: -Un nuevo doctype simplificado y unificado En las versiones anteriores, HTML requería la especificación de más aspectos en el doctype, pero debido a la eliminación de algunos elementos y a la búsqueda de la simplificación, ahora solo es necesario indicar que es un HTML (Van, 2008). -Supresión de etiquetas y atributos de presentación HTML5 elimina algunos elementos usados en versiones anteriores. Unos por obsoletos, otros por redundantes, etc. Ya que no eran usados por los desarrolladores y agregan una complejidad innecesaria a la labor de construcción de una página web. Así mismo aumentando el rendimiento de los navegadores (Van, 2008). -Nuevas etiquetas semánticas Etiquetas que realmente no proponen nuevas funcionalidades, sino que sirven para componer sitios indicando qué son los bloques de código de una web, en lugar de cómo se deben representar (Van, 2008). -Nuevas etiquetas de audio y de video que ya no necesitan más plugins dedicados -Diseño de 2D gracias a la nueva etiqueta <canvas> 23 CANVAS es una etiqueta que genera un lienzo en la página donde realizar cualquier tipo de diseño, soporta dibujo de todo tipo de formas, degradados, imágenes. Es lo más novedoso de HTML5, permitiendo agregar animaciones a la página sin que se consuma recursos del servidor sino de la máquina local (Van, 2008). -Nuevos elementos de formulario Se han creado nuevas etiquetas y se ha añadido soporte a las existentes anteriormente, varias de éstas apuntan hacia una web con semántica, optimizando procesos como por ejemplo el realizado por los buscadores, etiquetas que le den significado al texto que contienen, para así evitar la búsqueda por texto plano que consume tiempo importante. De momento estas son las nuevas etiquetas que ofrece (Van, 2008).  METER: Para trabajar con medidas y escalas.  PROGRESS: Implementa barras de progreso.  DATALIST: Extensión para crear campos con funcionalidad de autocompletar.  KEYGEN: Genera claves pública y privada para encriptación.  OUTPUT: Realizar y mostrar cálculos matemáticos. Pero hablando de novedades en formularios, no debemos dejar de remarcar que HTML5 también trae diversos nuevos usos de INPUT, que nos sirven para especificar qué tipo de información concreta queremos introducir en ellos. Ello proporciona utilidad especial a esos campos INPUT, pensando también en los dispositivos móviles y la forma con la que tratan dichos campos. 24 2.3.3 CSS Cascading Style Sheets (CSS) es una poderosa manera de afectar la presentación de un documento o de una colección de documentos. Obviamente, CSS es inservible sin algún documento (Meyer, 2006). CSS es utilizado para controlar como lucirá el contenido y la apariencia de la interfaz web. Los estilos de los elementos de la página pueden ser detallados en un documento aparte del HTML, y en la cabecera del mismo establecer la ruta donde se encuentra el archivo css del cuál aplicará los cambios especificados. También puede ser introducido dentro del código de la página web a través de etiquetas pre-establecidas por el lenguaje de hipertexto, o bien como atributo de un elemento HTML. Ninguna manera de hacerlo es mejor que la otra, todas funcionan igual, queda de parte del desarrollador cómo se ajusta mejor a sus estándares o necesidades. CSS surge como la necesidad de separar la configuración de la fachada de una Aplicación Web, de la estructuración de las interfaces y elementos que la conformarán, para de esta forma modificarla de manera sencilla, es decir, sin realizar transformaciones traumáticas del código. Además permite que dos profesionales puedan trabajar en conjunto sobre una misma interfaz sin interferir el uno con el otro, dedicándose el primero en la estructura de la página web y el segundo enfocándose en la apariencia, lo que ahorra tiempo. Por ejemplo, un desarrollador web y un diseñador gráfico pueden realizar sus tareas de forma separada sobre una misma página. 2.3.4 CSS3 Es la versión más actualizada y es más poderoso que las primeras versiones de CSS, e introduce numerosos efectos visuales que pueden agregarle un gran dinamismo a la página 25 web, sin consumir un alto costo en recursos del procesador de la máquina huésped (Hyslop, 2013). Una de las novedades de CSS3 es la capacidad de concederle movimiento a imágenes, ya sea rotándolas o desplazándolas de derecha a izquierda o de arriba abajo. Además se puede configurar a la velocidad con que la imagen realizará los traslados o cambios de posición. Concediendo un gran valor agregado a la interfaz sin mucho esfuerzo (Castro, 2013). También se cuenta con el cambio de colores de cualquier elemento HTML, estableciendo cuántas coloraciones formarán parte, el tiempo en el que un tono se mantendrá como el color del elemento, y finalmente la velocidad a la que se producirá el cambio de una tonalidad a otra. Otra característica importante de CSS3 es la de aplicar filtros a las imágenes, permitiendo darle un extra en la apariencia de una foto, al estilo de un programa dedicado a mejorar la cara de una imagen. No menos importante, CSS3 permite cambiar la forma de ciertos elementos HTML, por decir un ejemplo, permitiendo a un botón tener una forma redondeada o errática, dependiendo de las necesidades del desarrollador, nuevamente con instrucciones sencillas. 2.3.5 Javascript Es un lenguaje de programación interpretado con capacidades orientadas a objetos. El núcleo del propósito general del lenguaje ha sido embebido en múltiples navegadores web y mejorados por la programación web con la adición de objetos que representa la ventana del navegador y su contenido (Flanagan, 2002). La versión del lado del cliente permite a JavaScript ejecutar contenido para ser añadido en las páginas web, esto implica que una página web no deberá ser estática, sino que puede incluir programas que interactúen con el usuario, controle el navegador y genere contenido dinámicamente. 26 Es capaz de reconocer eventos (acciones de JavaScript) creados por el usuario, definiendo así un sistema interactivo. Esto permite generar una reacción a las interacciones generadas por el usuario (Sánchez, 2012). Javascript permite el procesamiento de datos del lado del cliente, ahorrando trabajo al servidor y logrando de esta forma que las aplicaciones web sean más rápidas, ya que no tienen que esperar respuesta de la máquina remota. Es por esta razón que el lenguaje es usado normalmente para validar los datos ingresados en un formulario, pero también para procesarlos y convertirlo en información útil al sistema. Por último javascript posee una función “alert” con la cual muestra mensajes al usuario con la finalidad de alertarlo sobre eventos ocurridos en el sistema. Así como también existe otra que permite confirmar con el usuario si desea realizar una acción, dicha función es el “confirm”. 2.3.6 Java Es un lenguaje de programación orientado a objeto el cual tiene un alto grado de independencia de implementación, lo que quiere decir, que el programa hecho en Java es desarrollado una vez y no es necesario realizarle algún cambio o recompilarlo al cambiarlo de ambiente. Esto gracias a su máquina virtual que actúa como una capa que abstrae el software escrito del entorno donde se va a implementar (Gosling, 2001). Java surge de la necesidad de algunos ingenieros, en crear un lenguaje que permitiera solucionar los problemas inherentes al desarrollo de aplicaciones distribuidas en redes con sistemas heterogéneos. Es por ello que apostaron iniciar dicho proyecto con los lenguajes C y C++, lo que al final resultó una tarea engorrosa. Por lo que se decidió crear un entorno de trabajo completamente nuevo (Acosta, 2003). Java es un lenguaje con una sintaxis que deriva de su antecesor C++, pero con menos utilidades de bajo nivel. Intencionalmente parecido a éste para no causar problemas en el https://es.wikipedia.org/wiki/James_Gosling 27 aprendizaje de Java, y mucho más amigable ya que los métodos que vienen en las librerías por defecto, poseen nombres muchos más entendibles que los de C o C++. Java aprovecha la memoria disponible de la máquina, implementando un colector de basura que se encarga de limpiar la memoria RAM de elementos que ya no son necesarios, problema que era muy común en C y C++, ya que la limpieza era manual y provocaba el descuido de los programadores. Java implementa un hilo que desde el momento en que un objeto deja de ser referenciado, es eliminado automáticamente, lo que resulta útil para generar aplicaciones muchas más rápidas. Recientemente Java ha tenido un auge altamente importante en lo que se refiere al desarrollo de aplicaciones web, gracias a su robustez y el alto grado de confianza que los desarrolladores posan sobre él. Además es un lenguaje con un grado de portabilidad alta, lo que hace indiferente el ambiente que ofrezca el servidor. 2.3.7 Netbeans Es un marco de trabajo que facilita en gran medida el desarrollo de programas hechos principalmente en Java, pero también permite desarrollar sistemas en C++. Es un proyecto de código abierto que fue creado con la intención de facilitar a los desarrolladores trabajar con Java, gracias a que Netbeans puede insertar código de manera automática ahorrándole tiempo al programador. Otra bondad del marco de trabajo es que te indica los errores que hay en el código antes de compilarlo, e incluso en algunos casos te ofrece una posible solución (Boudreau, 2002). Netbeans permite que la programación sea más usable, ya que hace un gran uso de iconografía que vuelve posible intuir la función de algún elemento de la interfaz (Glick, 2002). Uno de los principales problemas de este entorno es el alto consumo de recurso del computador, esto debido a la complejidad del programa, lo que incide en la velocidad de procesamiento de la computadora huésped. Afortunadamente, las siguientes versiones han trabajado en reducir dicho dispendio unido al aumento de las capacidades de hardware de los ordenadores, ha confluido en que hoy en día no se presente el inconveniente. https://www.google.co.ve/search?espv=2&biw=1440&bih=794&tbm=bks&tbm=bks&q=inauthor:%22Jesse+Glick%22&sa=X&ved=0ahUKEwi8mt-Gx4XSAhXD6iYKHdFwDyUQ9AgIIDAA 28 Netbeans fue desarrollado usando el lenguaje de programación Java, y al mismo tiempo modularizado, es decir, un conjunto de clases construidas de forma independiente al resto del programa que permite ser agregado o eliminado sin causar una grave alteración al resto del sistema. Es por ello que Netbeans permite instalarles un gran número de extensiones de manera sencilla, sumándole nuevas funcionalidades que garantizarán un producto de calidad (Greene, 2002). En la figura 4 se puede notar como es la interfaz del entorno de trabajo Netbeans. Ubicado del lado izquierdo se encuentran todos los proyectos que el programador está o ha estado desarrollando, fácil de buscar e intuitivo a la hora de abrir los documentos que conforman el proyecto, ya que éstos usan un estilo cascada que facilita la visualización de todos los archivos. Luego en la parte superior se encuentran las opciones que ofrece Netbeans para facilitar el desarrollo de sistemas, como se puede apreciar, la interfaz hace un alto uso de iconografía y al mismo tiempo no es sobrecarga de elementos. Figura 4. Interfaz de Netbeans https://www.google.co.ve/search?espv=2&biw=1440&bih=794&tbm=bks&tbm=bks&q=inauthor:%22Simeon+Greene%22&sa=X&ved=0ahUKEwi8mt-Gx4XSAhXD6iYKHdFwDyUQ9AgIITAA 29 Sin embargo ningún programa está completo sin un sistema confiable donde almacenar los datos. Es a partir de aquí se procede a definir lo que son las bases de datos y los sistemas manejadores de base de datos. 2.3.8 Base de Datos Una base de datos es un conjunto estructurado de datos que representa entidades y sus interrelaciones, la representación será única e integrada, a pesar de que su utilización debe ser diversa y simultánea (Camps, 2002). Es un software que actúa como un repositorio centralizado de datos, el cual facilita el acceso de la información por parte de otros programas. Además de garantizar la integridad y seguridad del recurso almacenado, siendo parte fundamental de cualquier solución de software. También se puede definir como un sistema computarizado para llevar registros, el cual puede ser considerado como una especie de armario electrónico para archivar, es decir, es un depósito o colección de archivos de datos informáticos. Los usuarios de esos sistemas pueden realizar acciones como agregar nuevos datos, actualizarlos o eliminarlos. 2.3.9 Sistema Manejador de Bases de Datos Es un conjunto de programas que actúa como interfaz entre las bases de datos física y el usuario. El sistema manejador de bases de datos (SMBD) interpreta las peticiones de entrada/salida y las envía al sistema operativo para la transferencia de los datos entre la unidad de memoria secundaria y principal. El SMBD es el centro de todas bases de datos ya que posee el control de todas las modificaciones que pueda sufrir (Camps, 2002). Entre las funciones que posee un sistema manejador de bases de datos se tiene:  Manejo de diccionario de datos: Definiciones y relaciones entre los datos  Transformación y presentación de datos: transformación de datos nuevos para que satisfagan la estructura definida.  Seguridad: Fortalecer la seguridad y privacidad de la información. https://www.google.co.ve/search?sa=X&espv=2&biw=1440&bih=755&tbm=bks&tbm=bks&q=inauthor:%22Rafael+Camps+Par%C3%A9%22&ved=0ahUKEwjNm97Z84rSAhXBOyYKHShiAEIQ9AgIIjAB https://www.google.co.ve/search?sa=X&espv=2&biw=1440&bih=755&tbm=bks&tbm=bks&q=inauthor:%22Rafael+Camps+Par%C3%A9%22&ved=0ahUKEwjNm97Z84rSAhXBOyYKHShiAEIQ9AgIIjAB 30  Control de concurrencia: Controla el acceso multiusuario. Consiste en controlar la interacción entre los usuarios concurrentes para no afectar la consistencia de datos.  Integridad de datos: Minimiza la redundancia y maximiza la consistencia. Consiste en contar con mecanismos que permiten el control de la consistencia de los datos, evitando que éstos se vean perjudicados por cambios no autorizados o previstos. En la figura 5 se ilustra la arquitectura de una base de datos que está conformada por una serie de capas de abstracción, donde se puede ver de forma clara como el sistema manejador de bases de datos (SMBD) actúa como especie de interfaz para el usuario, con la intención de abstraerlo de los métodos de acceso que ofrece las bases de datos y facilitar su manipulación, donde al final de esta arquitectura se encuentra la base de datos físicamente, la comunicación entre los elementos es en ambos sentidos, y únicamente con los que se encuentran en la capa superior o inferior inmediata. Figura 5. Arquitectura de base de datos 31 2.3.9.1 Oracle Es un sistema manejador de bases de datos fabricado por Oracle Corporation, el cual usa el lenguaje SQL para definir el esquema de la base de datos que se desea construir, o para realizar la manipulación de la misma. Ya sea ejecutando una inserción de un registro en una o varias tablas, la actualización de algún campo o simplemente la eliminación de elementos (Elmasri, 2003). Oracle también permite el uso lenguaje PL-SQL que funciona como una extensión del SQL, donde se incluye instrucciones como ciclos, condicional, procedimientos y funciones, los cuales permiten automatizar parte del trabajo que se realiza con una base datos. Oracle Corporation se ha encargado de desarrollar librerías para diferentes lenguajes de programación, entre los cuales se menciona Java, cuyo objetivo es facilitar la conexión de un programa con el sistema manejador de bases de datos Oracle, lo cual ha impulsado el potencial de los programas y sistemas construidos desde entonces al permitir un acceso estándar a los datos (Gutiérrez Soto, 2008). Entre las características más resaltantes que posee Oracle se nombran las siguientes:  Seguridad  Interoperabilidad  Portabilidad  Integridad de datos  Soporta concurrencia  Desarrollado para aplicaciones distribuidas  Posee estructura cliente-servidor 2.4 Elementos Promocionales Movistar En este apartado se procederá a detallar los elementos promocionales que Autcon tiene la capacidad de gestionar, como lo son planes, servicios de valor agregado y restricción de roles. 32 2.4.1 Planes Movistar Los planes de Movistar son una forma de ofrecer un conjunto de servicios a los usuarios de la operadora Telefónica, los cuáles deben pagar una renta mensual, o a veces quincenal para seguir disfrutando de los planes. Los planes pueden ofrecer servicios tales como minutos o segundos a Movistar u otras operadoras, mensajería de texto y datos de navegación (Moncada, 2012). Moncada también asegura que los planes tienen cuatro (4) posibles líneas de negocio:  “TELEFONÍA MÓVIL”: donde se pueden disfrutar desde un teléfono móvil y los servicios que ofrecen pueden abarcar los cuatros mencionados anteriormente al mismo tiempo.  “TELEFONÍA FIJA”: aplica para teléfonos fijos y ofrecen minutos o segundos.  “INTERNET MÓVIL”: son utilizados desde dispositivos que funcionan como antena a la que se conecta a las computadoras, y obtienen servicios de internet de forma inalámbrica.  “TELEVISIÓN DIGITAL”: cómo el nombre lo sugiere son planes que ofrecen canales de televisión, donde los clientes reciben la señal digital a través de un decodificador. 2.4.2 Cierre de Planes Movistar o Restricción de Roles Muy a menudo un plan llega a su límite de operación, y debe ser inhabilitado para sustituirlo por otro más adecuado al mercado y a los intereses económicos de Movistar. O también sucede que es necesario que ciertos usuarios dentro del sistema CVSC no tengan acceso al plan. Este sistema es el usado en todos los agentes autorizados Movistar para realizar todas las operaciones necesarias para satisfacer las necesidades de los clientes de Telefónica S.A. Un plan es restringido cuando éste no puede ser visualizado a través de CVSC. Para ello es necesario restringir los roles que tiene cada usuario del sistema (donde un usuario puede 33 tener asignado uno o más roles al mismo tiempo) el acceso al plan (Mesia, 2012). Los roles son las funciones que puede efectuar un usuario dentro de CVSC. Los roles más importantes son:  “ROL BACKOFFICE”  “ROL ISLA RETENCIÓN”  “DISTRIBUIDOR TELPAGO” Un rol está asociado a un plan el cual es al que tendrá acceso o no, y por último tiene relación con un permiso, que puede tener dos valores posibles: ‘RP’ que significa restricción permitida, donde se tendría la capacidad de acceder al plan y por ende, un usuario de CVSC que contenga dicho rol, podrá visualizar el plan. El segundo valor es ‘RNP’ restricción no permitida, que tiene el efecto contrario al caso anterior. 2.4.3 Servicios de Valor Agregado (SVA) de Movistar Es un producto ofrecido por Movistar que complementa o se convierte en un extra para el plan que tiene activo el cliente. La principal razón de la existencia de los SVA, es que existen usuarios de la operadora que no se conforman con lo que ofrecen los planes disponibles en el momento, es por ello que Movistar decidió otorgarles la facilidad a sus clientes de agregar servicios adicionales (Mesia, 2012). Moncada (2012) explica que existen cuatro (4) tipos de servicios adicionales:  Minutos  Segundos  Datos de navegación  Mensajería de Texto Un SVA sólo puede ofrecer únicamente un servicio, es decir, por ejemplo no está permitido que otorgue minutos y mensajería de texto al mismo tiempo, para ello el cliente tendría que contratar un SVA de minutos y otro de mensajería de texto. 34 Luego de estudiar las tecnologías de desarrollo y los aspectos teóricos mencionados en este capítulo, se consideró viable el inicio del desarrollo de la aplicación propuesta como solución al problema. 35 CAPITULO III MARCO APLICATIVO En este capítulo se presenta la aplicación en Autcon a través de AgilUs, metodología ágil en donde la usabilidad, usuarios e interacciones se encuentran en el mismo nivel de importancia que los procesos y herramientas, y que el funcionamiento del software tiene mayor relevancia que una documentación exhaustiva. 3.1 Fase I: Requisitos En esta primera etapa como se explicó en el primer capítulo es la más importante ya que es a partir de aquí que nace el proyecto, y de tomar o entender erróneamente las necesidades del usuario terminará en un programa no deseado. Es por ello que se realizaron unas series de actividades que se explicarán a continuación, con la finalidad de asegurar una captura acertada de los requerimientos. 3.1.1 Tormenta de Ideas La tormenta de idea fue realizado haciendo dos (2) reuniones con los tres (3) analistas de prepago y el supervisor, donde la finalidad era que éstos presentaran sus ideas para cómo debía ser la solución de software que ayudara en la configuración de los planes, cierres y servicios de valor agregado. En la figura 6 se pueden observar las palabras más destacadas que surgieron de dichas conversaciones, dónde la que destaca más es la automatización. Las ideas más importantes que surgieron fueron las siguientes:  Usar formularios para ingresar los datos correspondientes a las configuraciones.  Diseñar interfaces usables que no requirieran de un manual de usuario para poder manejarlas  Tener usuario y contraseña para poder ingresar al sistema  Instalación en las bases de datos de forma automática  Generación de script de forma automática. 36  Generación de spools de instalación de forma automática.  Enviar correo con todos los documentos generados por la aplicación Autcon.  Poder modificar los script antes de ejecutar su instalación. Figura 6. Tormenta de ideas producto de conversaciones 3.1.2 Perfiles de Usuario Los perfiles de usuario son creados para identificar y describir los tipos de usuarios que manipularán el programa. Acosta (2011) afirma que es una actividad muy importante para aquellos proyectos de construcción de software, cuya intención es girar en torno al usuario. Los perfiles de usuario se usan como una referencia a la hora de diseñar las interfaces, ya que es necesario tener en cuenta si la persona posee un alto o bajo grado de destrezas en el uso del computador. Autcon cuenta con solamente dos (2) tipos de usuario, los cuales fueron denominados Analista de prepago y Supervisor. Ambos deben tener una alta destreza al momento de manipular una computadora, un nivel intermedio para el manejo de aplicaciones web y un conocimiento medio en la terminología en configuraciones de requerimientos. El Analista es el encargado de realizar las configuraciones de los planes, cierres o servicios de valor 37 agregado, además de actualizar los datos de conexión con las bases de datos y de modificar los scripts de instalación en caso de ser necesario. Mientras que el Supervisor es el encargado de asignar los requerimientos y crear los usuarios para los desarrolladores. 3.1.3 Requerimientos Funcionales y No Funcionales Producto de las reuniones hechas con los analistas de prepago, se pudo capturar requisitos que se consideraban imprescindibles para una aplicación que agilizara el proceso de configuración de planes, cierre y servicios de valor agregado. A continuación se listan cada uno de ellos. 3.1.3.1 Requerimientos Funcionales Los requerimientos funcionales son aquellos que la aplicación Autcon va a ofrecer a sus usuarios para que puedan realizar las configuraciones de planes, servicios de valor agregado y restricción de roles. Cabe destacar que de aquí nace el diagrama de casos de uso, entre ellas se encuentran:  Iniciar sesión: con la finalidad de tener permiso de Autcon de realizar las configuraciones necesarias tales como planes, cierre y servicios de valor agregado.  Realizar configuración: donde se deben generar los script de instalación, así como sus respectivos spools para validar su correcta inserción, eliminación o actualización de registro dependiendo del caso.  Modificar script: permitir al analista de prepago modificar el código en SQL antes de aprobar su instalación, en caso de que se deba realizar un cambio que la aplicación no esté capacitada de detectar o modificar.  Modificar perfil: donde el usuario de Autcon puede actualizar su correo electrónico, o su clave de acceso a la aplicación. 38 3.1.3.2 Requerimientos No Funcionales Los requerimientos no funcionales permiten que lo mencionado en el punto anterior sea posible, es decir, son los requisitos que permiten juzgar la calidad de las operaciones de la Aplicación Web a desarrollar. A continuación se listan los requerimientos no funcionales capturados de las conversaciones con los analistas de prepago:  Portabilidad: se refiere a la capacidad de un programa de poder trabajar en distintos ambientes sin necesidad de modificaciones o al menos no grandes ni traumáticas. Es la ventaja de Autcon que por ser una Aplicación Web, puede ejecutarse en cualquier sistema operativo sin realizar ninguna modificación al código.  Escalabilidad: se refiere a la capacidad de un software de expandir sus funciones. Autcon debe ser diseñado de tal forma que pueda agregarse nuevas configuraciones de manera sencilla.  Usabilidad: se refiere a la facilidad que tendrá el usuario al manipular el sistema a través de sus interfaces. Autcon fue diseñado con interfaces muy intuitivas donde no hace falta de un manual de uso para su entendimiento.  Seguridad: se refiere a la capacidad que tiene Autcon de no permitir accesos no autorizados o cambios en las bases de datos por parte de agentes externos. Ésto es posible con el uso de usuarios con contraseñas y otras medidas de seguridad.  Mantenibilidad: se refiere a la capacidad que debe tener Autcon de ser fácilmente actualizado por un desarrollador, bien sea para agregar nuevas funcionalidades o para optimizar su funcionamiento. 3.1.4 Arquitectura de la Aplicación Web Autcon Para la solución de la problemática que se presentaba en Innovatec C.A. se decidió implementar una aplicación web que permita realizar de forma automatizada los procesos relacionados con la configuración de planes, servicios de valor agregado y restricción de roles. En la figura 7 se ilustra la arquitectura de dicha solución de software, donde el administrador crea los requerimientos para que luego el analista proceda a ingresar los datos correspondientes a la configuración. Una vez ingresados, la aplicación procede a generar los scripts de instalación para que se ejecuten en la bases de datos, y de esa manera 39 crear los spools de instalación, para luego ser enviado al analista prepago y al mismo tiempo, notificar al administrador el estatus de dicha entrega. Figura 7. Arquitectura de la Aplicación Web Autcon 3.2 Fase II: Análisis Es la etapa donde se comenzó a crear distintos artefactos que guiaron la construcción de Autcon. Donde los que están relacionados con las interfaces tuvieron mucha intervención los usuarios finales. 3.2.1 Prototipo de Interfaz El prototipaje de interfaces permite a los usuarios y desarrolladores una idea de la apariencia que tendrá una aplicación que está en construcción. En el caso de Autcon, estos bosquejos facilitaron que los analistas de prepago pudiesen opinar sobre cómo se debía ver el sistema de automatización de configuraciones. Para ello se empleó una página web 40 llamada Cacoo que dispone de varias opciones para el diseño de interfaces de cualquier tipo. Se comenzó con la página de inicio, donde el analista de prepago debe ingresar sus datos de conexión para tener acceso al sistema e iniciar las configuraciones. En la figura 8 se puede apreciar cual fue el prototipo de dicha interfaz, donde en una fuente de letra considerablemente destacable se encuentra el nombre de la aplicación. Además cuenta con dos (2) campos de texto para el nombre de usuario y su respectiva contraseña, y por su puesto el botón de confirmación “Enviar” para validar que los datos son correctos e ingresar por completo a Autcon. Adicionalmente en la parte superior e inferior se decidió agregar imágenes que decoren la página y que le den color a la misma, los usuarios expresaron que deseaban que fuesen los colores de la consultora Innovatec C.A. para dar ese sentido de propiedad. Figura 8. Prototipo página de inicio de la Aplicación Web Autcon 41 En la figura 9 se muestra el prototipo correspondiente a la página principal de Autcon, donde el analista de desarrollo ingresa una vez éste es autentificado por el sistema. La interfaz está conformada por un título y se encuentra acompañado de cuatro (4) botones en el centro de la página donde los tres (3) primeros los lleva a la página de configuración respectiva. Y de último está “Ver configuraciones terminadas”, el cual hace navegar hacia una interfaz donde el usuario puede buscar los script relacionados con entregas anteriores. Adicionalmente hay tres (3) botones en la parte superior, de derecha a izquierda se encuentra de primer el botón “Cerrar Sesión” que como el nombre lo sugiere le permite al usuario salir de la aplicación de manera segura. Luego se aparece la opción “Perfil”, que permite modificar los datos personales del usuario así como los datos de conexión a las bases de datos y por último el botón “Regresar” cuya función es devolverse a la página anterior. Cabe destacar que el prototipo sugiere que se debe tener un título que destaque con el nombre de la configuración, para evitar confusiones por parte del analista. Figura 9. Prototipo página principal de los analista Prepago de la Aplicación Web Autcon 42 En la figura 10 se aprecia el prototipo correspondiente con la página de configuración de algún requerimiento, donde el analista de prepago introduce los datos importantes provenientes de la bitácora del negocio en un formulario. Al final se encuentra el botón de confirmación “Configurar”, donde se validan que los datos introducidos sean correctos y luego se envían al motor de Autcon, para que éste instale y genere los script relacionados con la configuración en curso. Esta interfaz también se diseñó con los mismos tres (3) botones de la parte superior, para facilitar al usuario el reconocimientos de éstos de manera intuitiva. Figura 10. Prototipo página de configuración de requerimiento de la Aplicación Web Autcon En la figura 11 se presenta el prototipo de la interfaz que corresponde con la modificación del perfil del usuario, para facilitar al analista de prepago actualizar sus datos personales. Al final del formulario se ubica el botón “Guardar” que valida que los datos ingresados sean correctos y son actualizados en la base de datos de Autcon. 43 Igual al prototipo anterior, la interfaz del perfil cuenta con los mismos botones en la parte superior de la ventana exceptuando el botón “Perfil”, ya que no es necesario por razones de no sobrecargar la interfaz, y así evitar confusiones al momento de manipular la aplicación. En las conversaciones realizadas durante la primera etapa de construcción del sistema usando la metodología AgilUs, unas de las ideas que más destacó fue la de mantener lo más sencillo posible la aplicación. Figura 11. Prototipo página de perfil de usuario de la Aplicación Web Autcon En la figura 12 por último se realizó el prototipo correspondiente al historial de todas las configuraciones realizadas, esta interfaz tiene como finalidad poder buscar configuraciones terminadas, ya sea porque por alguna razón el correo electrónico con los script junto con los spools falle, y el analista de desarrollo tenga la opción de poder buscarlas de manera manual. O simplemente para estudiar cómo se realizaron configuraciones anteriores. 44 De la misma manera con la intención de mantener un estándar, se presentan en la parte superior los tres (3) botones ya mencionados y explicados en los últimos cuatro (4) prototipos, los cuales son: “Regresar”, “Perfil” y “Cerrar Sesión”. Figura 12. Prototipo historial de configuraciones realizadas de la Aplicación Web Autcon 3.2.2 Guía de Estilos La guía de estilos es un artefacto usado en la metodología AgilUs. En ella se da una muestra de los colores principales que tendrá la aplicación, la tipografía y el logotipo de la aplicación en construcción. La finalidad de la guía de estilo es simplemente establecer los aspectos más importantes de las interfaces para de esa manera establecer un estándar y así evitar discrepancias entre las ventanas, lo cual daría un mal aspecto al sistema. A continuación en la tabla 1 se presenta la guía de estilos desarrollada durante la elaboración del Trabajo Especial de Grado. Está conformado por el logotipo de la 45 aplicación, seguidamente de los colores principales los cuales son los usados por la empresa Innovatec, para dar la sensación de pertenencia como lo propusieron los analistas prepagos en reuniones durante la primera fase del ciclo de vida de AgilUs. La fuente de letra principal de Autcon, donde se aprecia el tipo de letra y el tamaño. Por último una vista de cómo se ve la página principal de la aplicación. Tabla 1: Guía de Estilos de la Aplicación Autcon Logotipo Colores principales RGB(166,56,56) RGB(132,132,132) RGB(0,0,0) RGB(255,255,255) Tipografía Sans-serif 20px Vista de la página principal 3.2.3 Diagrama de Casos de Uso Dentro de los objetivos específicos establecidos en el primer capítulo, se dispuso en generar el modelo de caso de uso, el cual es un artefacto que permiten comunicar al equipo de desarrollo cuáles son las funcionalidades a las que tiene acceso cada usuario del futuro sistema. A continuación se lista el diagrama junto con una breve explicación. 46 En la figura 13 se muestra el diagrama de casos de usos que se generó para especificar las funcionalidades que tendría Autcon para los analistas prepago. Cómo se puede apreciar, existen cuatro (4) funcionalidades principales que el analista de prepago podrá ejecutar dentro del sistema, donde a su vez estos tienen otras funcionalidades más específicas dentro del marco donde se encuentran. También como parte de fundamental del diagrama de casos de usos, se presentarán las tablas que explican detalladamente cada caso de uso. A través del diagrama de caso de uso se presentan los requerimientos funcionales. A partir del nivel cero (0). Figura 13. Diagrama de casos de uso nivel 0 del Modulo Analista de Desarrollo 47 Tabla 2: Especificación del caso de uso: Ingresar al sistema. Caso de uso 1.- Ingresar al sistema Actor Analista de prepago. Pre-condición Debe estar registrado en el sistema Autcon. Flujo básico El analista de prepago al ingresar a la página de inicio de Autcont, podrá autentificarse ante el sistema o una vez dentro podrá salir de él de forma segura. Post-condición El analista prepago ingresó o se salió del sistema satisfactoriamente. El resto de las tablas correspondientes con los otros casos de usos del Módulo Analista Prepago se encuentran como anexos, específicamente en el anexo A. A continuación en la figura 14 se muestra el segundo diagrama de caso de uso, esta vez para el supervisor de los analistas prepago, donde tiene una (1) funcionalidad en común con los analistas en prepago, gestionar perfil. Ya las otras dos son propias del actor de este diagrama el cual se menciona gestionar usuario y gestionar requerimiento. Más adelante se especificarán estos casos de usos. Figura 14. Diagrama de casos de uso nivel 0 del Módulo Supervisor 48 Tabla 6: Especificación del caso de uso: Gestionar Usuario Caso de uso 3.- Gestionar Usuario Actor Supervisor Pre-condición El Supervisor debe estar autenticado por el sistema Autcon. Flujo básico El Supervisor ingresa los datos del nuevo usuario, es decir, el nombre, correo y contraseña, para luego finalizar confirmando dicho cambio. Que luego podrán ser modificadas más adelante por el dueño de la sesión. Post-condición Debe existir un nuevo usuario para analista prepago. El resto de las tablas correspondientes con los casos de usos del módulo Supervisor, se encuentran como anexos, específicamente en el anexo A. 3.2.4 Diagrama Modelo Relacional El modelo relacional es un diagrama que facilita la visualización de todas las tablas que conforman una base datos,así como sus interrelaciones entre ellas y los campos con sus respectivos tipos de variables que la conforman. El sistema Autcon posee su propia base de datos que almacena información relacionada con los usuarios registrados en el sistema y las configuraciones realizadas. También se incluye los datos de conexión de las bases de datos, vitales para poder hacer realidad las configuraciones requeridas. En la figura 15 se puede apreciar el modelo relacional generado durante la fase tres (3) de AgilUs, durante el desarrollo de Autcon. A continuación se procede a explicar cada entidad:  Usuario: Es el eje de todo el modelo relacional y es la tabla donde se almacena todos los datos personales del usuario  Asignado: forma parte de una relación de muchos a muchos, donde relaciona usuario con requerimiento. Esta tabla como dato propio, guarda la fecha en la que fue concedido la configuración al usuario. 49  Requerimiento: es la entidad donde están los datos relacionados con el requerimiento, incluyendo la fecha de entrega y el estatus del mismo. El último campo posee dos posibles valores, cero (0) que significa que el trabajo está en curso y uno (1) para cuando el analista en prepago haya terminado el requerimiento.  Accede: forma parte de una relación de muchos a muchos, donde se relaciona la tabla usuario con base de dato.  Base de dato: es la tabla que contiene todos los datos de conexión con las base de datos, permitiendo su fácil acceso y cubierto con la seguridad extra que brinda un sistema manejador de base de datos Oracle. Figura 15. Modelo relacional de la base de datos de la Aplicación Web Autcon 3.2.4 Diagrama de Clases Este diagrama es un artefacto del lenguaje unificado de modelo (UML) que facilita la visualización del conjunto de clases que posee un programa, de tal forma que al momento de realizar un mantenimiento o extensión sea más sencillo, ya que se puede visualizar el universo de clases que existen y sus relaciones entre ellas. Para la aplicación Autcon fue 50 necesario realizar un artefacto de este tipo ya que contaba con una gran cantidad de estas entidades. En la figura 16 se ilustra el diagrama de clases de la AutCon. Figura 16. Diagrama de clases de la Aplicación Web AutCon. 51 En la figura 17 que es un extracto de la imagen 15, se encuentran las clases “CreadorScriptT2”, “CreadorScriptT1” y “CreadorScriptCVSC”. Como su nombre lo sugiere son objetos que ayudan a generar segmentos en SQL con un conjunto de métodos que cada uno corresponde con una tabla en sus respectivas bases de datos, ya sea T1, T2 o CVSC; así como también sus contingencias correspondientes. Esto con la finalidad de que se puedan reutilizar los métodos para los distintos tipos de configuraciones y no tener que repetirlos innecesariamente. Figura 17. Extracto 1 diagrama de clases de la Aplicación Web Autcon En la figura 18 se observa la clase “CreadorScriptRoles” que genera archivos en SQL que trabajen en la base de datos TCONECTA. Su existencia tiene la misma razón que las tres explicadas anteriormente. Luego del lado derecho se aprecian el objeto “EnviadorCorreos” que tiene como objetivo centralizar todos los tipos de correos que se pueden enviar desde la aplicación Autcon, creando clases Correo e ingresando en éste datos que permitan estructurar el correo electrónico, y al mismo tiempo abstraer a la clase “ControladorCorreo” de la procedencias o las intenciones que tendrá el mail enviado, esta clase será explicada más adelante. 52 Figura 18. Extracto 2 diagrama de clases de la Aplicación Web Autcon En la figura 19 se presenta “ControladorCorreo” recibe un objeto de tipo Correo, el cual es creado en la clase “EnviadorCorreos”. Su función es simplemente recibir estos datos y configurarlos en un correo electrónico para finalmente enviarlo al destino solicitado. Figura 19. Extracto 3 diagrama de clases de la Aplicación Web Autcon “ConfiguradorCierrePlan” es una clase que se encarga de crear los script en SQL correspondiente con la configuración cierre de plan. Utilizando los métodos que ofrece el objeto “CreadorScriptRoles”, la primera clase mencionada en este párrafo puede generar el archivo de instalación y su contingencia o desinstalación. “ConfiguracionRestriccionRoles” es básicamente un contenedor de datos, con la finalidad de facilitar el manejo de lo que el analista prepago introdujo a través del 53 formulario, para luego ser usado por “ConfiguradorCierrePlan” con la intención de que éste arme el script según lo solicitado. Opción es un objeto responde a la alta complejidad que significa representar la información introducida para cerrar un plan, por ende funciona como un contenedor de datos para “ConfiguracionRestriccionRoles” que a su vez es otro almacenador. Es una gran ventaja tener contenedores de datos como los explicados, ya que éstos a veces son usados para varias configuraciones lo que permitió reutilizar código. Por ejemplo, para crear un plan nuevo también es necesario realizar una restricción de roles, usando las mismas clases que se usan para realizar una configuración de tipo cierre de plan. Por último se aprecia el objeto Archivo, que cómo se podrá inferir es el encargado de leer y escribir archivos. Es intensamente usado al momento de las configuraciones debido a que es éste quién finalmente crea los script y spools, para luego el “EnviadorCorreos” los remita a través de un mail. En la figura 20 en el lado superior derecho se encuentra la clase “HiloEjecutadorSQL” e “HiloEjecutadorRestriccion”, cuya función es ejecutar los códigos en SQL de forma asíncrona al sistema, para de esta forma instalar en las distintas bases de datos de forma concurrente y optimizando el tiempo de configuración, superando enormemente a la capacidad de un analista prepago. Figura 20. Extracto 4 diagrama de clases de la Aplicación Web Autcon 54 Luego en la parte superior izquierda está “CoordinadorHilos”, el cual es un objeto que como su nombre lo sugiere permite coordinar los hilos una vez terminen de instalar en las bases de datos, para luego enviar sus respectivos spools de instalación que generaron, al correo del analista prepago. A la derecha están “ConfiguracionSVA” y “ConfiguracionPlan”, los cuales al igual que “ConfiguracionRestriccionRoles”, son contenedores de datos que facilitan la manipulación y transporte de estos en el sistema Autcon. Cómo se podrá notar en el diagrama de clases completo, figura , la clase que contiene la información de una configuración de un servicio de valor agregado, es utilizada tanto para crear un nuevo SVA como para generar un plan, permitiendo ahorrar líneas de código. Los tres objetos mencionados en este párrafo heredan de la clase “Configuracion”, la cual ayuda a abstraer el tipo de configuración que se está realizando, éste contiene métodos que indican si el objetivo de la instalación es para crear un plan, cerrarlo o generar un nuevo SVA. Después en el centro de la figura 19 está “PuenteBD”, cuya función es actuar de interfaz para los demás objetos para la interacción con las bases de datos, es decir, para realizar inserciones, actualizaciones, eliminaciones o realizar consultas en ellas. Del lado izquierdo de ésta se encuentra “ConexiónBD”, quién otorga a “PuenteBD” las conexiones a las bases de datos con las que operan los analistas de prepago. Ya en la figura 21 se observan las dos últimas clases que faltan por explicar en el diagrama de clases, “ConfiguradorSVA” y “ConfiguradorPlan”, las cuales tienen como función de estructurar los script de instalación y desinstalación correspondientes a sus configuraciones, utilizando las clases creadoras de script para luego ejecutarlas a través de los hilos de ejecución mencionados anteriormente. Figura 21. Extracto 5 diagrama de clases de la Aplicación Web Autcon 55 3.3 Fase III: Prototipaje En esta etapa se inicia la construcción de prototipos que dan una idea general o bosquejo de cómo podrían ser las interfaces de un programa. En esta etapa se desarrolló de manera iterativa e incremental hasta llegar al producto final, esto se debe a que las interfaces pueden sufrir modificaciones a medida que se avance en el desarrollo. Los prototipos iniciales tenían la funcionalidad de autentificarse en el sistema usando un usuario y contraseña, luego se agregó la opción de modificar el perfil de usuario. Lo que le continuó fue la capacidad de Autcon de poder realizar configuraciones de tipo plan, sva y restricción de roles. El penúltimo prototipo se le agregó la funcionalidad de asignar requerimientos desde el lado del administrador y por último la capacidad de buscar configuraciones ya terminadas. 3.3.1 Desarrollo Java fue el lenguaje en el que se desarrolló las funcionalidades del lado del servidor, las razones principales es la alta portabilidad que ofrece gracias a una máquina virtual que posee, que permite abstraer el programa desarrollado en Java del ambiente de ejecución. Además es un lenguaje altamente confiable y muy utilizado en los tiempos modernos, lo que en un futuro puede permitir que Autcon trabaje en conjunto a otros programas desarrollados en Java. El framework o marco de trabajo elegido fue el famoso Netbeans, debido a que facilita el desarrollo de aplicaciones web hechos en Java, detectando los errores y en algunas ocasiones proponiendo soluciones a éstos. También facilita el trabajo creando código automáticamente lo que permite ahorrar tiempo, ya que éstos se crean mucho más rápido de lo que lo haría un desarrollador y sin traspiés que arreglar. En la figura 22 se aprecia el segmento de código que permite crear todos los scripts relacionados con la creación de un plan nuevo. Al comienzo del método se encuentra un condicional que valida el tipo de plan que se va a configurar, ya que cada uno posee una 56 configuración distinta. Al final todos los scripts son almacenados en un arreglo que es retornado por el método para quesea procesado por otra función de la aplicación. Figura 22. Código para generar scripts de plan nuevo de la Aplicación Web Autcon En la figura 23 se muestra el código correspondiente a la generación de todos los scripts relacionado con la creación de un servicio de valor agregado nuevo, el método posee la misma lógica que el explicado anteriormente, todos los scripts son almacenados en un arreglo donde será procesado más adelante, para ser mostrado en la interfaz Editar Perfil. Lo mismo se puede observar en la figura 24 donde se encuentra el código para la generación de script relacionados con la restricción de roles, dicho código sigue la misma lógica de sus dos antecesores. 57 Figura 23. Código para generar scripts de SVA nuevo de la Aplicación Web Autcon Figura 24. Código para generar scripts de Restricción de roles de la Aplicación Web Autcon En la figura 25 se encuentra el método donde confluyen todas las configuraciones, la intención es la de reducir la redundancia de código, ya que resulta completamente ineficiente repetirlo para todas las configuraciones que pueda realizar Autcon. Es aquí donde terminan todos los archivos SQL creados en las funciones anteriores, para luego proceder a ser instaladas. Como un subproceso de la instalación también se generan los spools correspondiente a cada scripts, donde el analista de desarrollo podrá observar si se produjo algún error. 58 Figura 25. Código para instalación de scripts de la Aplicación Web Autcon Cuando se finalizó el desarrollo de la aplicación se procedió a empezar con las pruebas de aceptación para validar que el programa funcione correctamente y satisfaga las necesidades de los usuarios. Se realizó eligiendo datos de entrada para luego observar el comportamiento de Autcon y estudiar su salida de datos, a través de los analistas prepago y supervisores que harían uso de la Aplicación Web. También fue importante verificar la usabilidad de las interfaces de Autcon, que fuesen como lo especificaron en las conversaciones de la primera fase. Igualmente de vital fue observar el comportamiento correcto de los elementos que componían las interfaces y la adecuada navegabilidad de las mismas, para garantizar un producto de calidad. 59 3.4 Fase IV: Entrega Como lo indica Acosta (2015), AgilUs se base en el desarrollo de las interfaces, diseñándolas y construyéndolas con el objetivo de que posean un alto grado de usabilidad, lo que incide en la satisfacción del usuario y garantizando la creación de un software de calidad. En este punto se detalla el proceso de las pruebas de usabilidad y de aceptación, mostrando el resultado de las mismas junto con su explicación. Además de la instalación en los servidores de la consultora Innovatec C.A. 3.4.1 Pruebas de Usabilidad Es por ello que en esta fase de entrega se realizaron pruebas que permitieran medir que tan conforme estuvo el usuario al manipular la aplicación Autcon. Una vez interactuado con el sistema, se les realizaron una serie de preguntas a los futuros beneficiarios donde se enfocaba en aspectos como:  Accesibilidad: el cual es un indicador que mide el porcentaje de usuarios que pueden manipular la aplicación.  Navegabilidad: indica el grado de dificultad que representa ir de una interfaz de la aplicación a otra, así como regresar. El objetivo principal es verificar que sea difícil llegar a perderse en el sistema.  Lenguaje manejado: se refiere a la terminología utilizada en las ventanas de la aplicación. El objetivo ideal es que se adecúen las palabras al tipo de usuario al cual va dirigido la interfaz.  Consistencia: se refiere a que las interfaces deben mantener la uniformidad en toda la aplicación, para así incentivar en el usuario el reconocimiento por encima de recordar o memorizar. Se creó un cuestionario con ocho (8) preguntas basadas en el autor Joaquín Pintos Fernández:  ¿Los títulos, menús y texto de la aplicación son legibles?  ¿Los colores utilizados contribuyen a la percepción de la aplicación? 60  ¿Los descriptores de la aplicación son claros y precisos?  ¿Se ofrece una organización que facilita la navegación?  ¿El diseño de la aplicación favorece su uso?  ¿La aplicación se puede ejecutar de manera intuitiva?  ¿Es una aplicación fácil de usar?  ¿Los elementos de ayuda disponible en la aplicación son útiles? Las respuestas de los usuarios potenciales de Autcon fueron medidas usando la escala de Likert, la cual empieza en 1 y termina en 5, donde el primer valor expresa el mayor rango de aceptación, y por el contrario último hace referencia a estar completamente en desacuerdo. A continuación se presenta la leyenda que le da significado a los números que conforman la escala mencionada anteriormente: 1. Totalmente de acuerdo. 2. De acuerdo 3. Ni de acuerdo ni desacuerdo. 4. En desacuerdo. 5. Totalmente en desacuerdo. Las tablas que continuarán a este párrafo representan gráficamente como se distribuyeron las respuestas de los potentes usuarios de Autcon, luego haber experimentado y conocido el funcionamiento del sistema. Cabe destacar que esta fase del desarrollo es fundamental porque AgilUs se basa en construir el sistema comenzando por las interfaces. En la figura 26 se aprecia como todos los encuestados estuvieron de acuerdo con que los títulos, menús y textos de la aplicación son legibles en la aplicación, esto debido a que el tipo de letra es muy usado y altamente fácil de leer, además de un tamaño adecuado. 61 Figura 26. Resultados de prueba de usabilidad en torno a los títulos, menús y texto de la aplicación son legibles. En la figura 27 se puede notar que la mayoría de los encuestados concordaron en la idea que los colores que usó Autcon ayudan a manipularla, se debe a que no se implementan tonos en elementos de la interfaz, donde es imprescindible recordarlo para saber su función sino por el contrario se trata de que los colores sean intuitivos. Los títulos, menús y textos de la aplicación son legibles Totalmente de acuerdo De acuerdo Ni de acuerdo ni en desacuerdo Desacuerdo Totalmente desacuerdo 62 Figura 27. Resultados de prueba de usabilidad en torno a los colores utilizados contribuyen a la percepción de la aplicación En la figura 28 se observa que la mayoría de los encuestados les pareció que los descriptores de la aplicación son claros y precisos, esto se debe al uso de textos muy descriptivos apoyados con imágenes. Figura 28. Resultados de prueba de usabilidad en torno a los descriptores de la aplicación son claros y precisos Los colores utilizados contribuyen a la percepción adecuada de la aplicación Totalmente de acuerdo De acuerdo Ni de acuerdo ni en desacuerdo Desacuerdo Totalmente desacuerdo Los descriptores de la aplicación son claros y precisos Totalmente de acuerdo De acuerdo Ni de acuerdo ni en desacuerdo Desacuerdo Totalmente desacuerdo 63 En la figura 29 nuevamente un 75% dieron un sí a la pregunta de que si Autcon ofrece una organización que facilita la navegación, se debe a la característica de mantener la aplicación lo más sencilla posible reduciendo al mínimo necesario el número de interfaces. Figura 29. Resultados de prueba de usabilidad en torno a si se ofrece una organización que facilita la navegación En la figura 30 se aprecia el resultado de la encuesta fue absoluto afirmando que el diseño de la aplicación favorece su uso, gracias a la sencillez e intuitivo de sus elementos de navegación y funcionamiento. Se ofrece una organización que facilita la navegación Totalmente de acuerdo De acuerdo Ni de acuerdo ni en desacuerdo Desacuerdo Totalmente desacuerdo 64 Figura 30. Resultados de prueba de usabilidad en torno al diseño de la aplicación favorece su uso Continuando en la figura 31 la mayoría contesto que la aplicación se ejecuta de manera intuitiva, esto se debe a que desde el principio de su concepción como aplicación se tuvo como objetivo dicha característica en sus interfaces. Figura 31. Resultados de prueba de usabilidad en torno a la aplicación se puede ejecutar de manera intuitiva El diseño de la aplicación favorece su uso Totalmente de acuerdo De acuerdo Ni de acuerdo ni en desacuerdo Desacuerdo Totalmente desacuerdo La aplicación se puede ejecutar de manera intuitiva Totalmente de acuerdo De acuerdo Ni de acuerdo ni en desacuerdo Desacuerdo Totalmente desacuerdo 65 En la figura 32 los encuestados coincidieron de manera unánime que la aplicación es fácil de usar, nuevamente debido a que se planteó desde el comienzo que la sencillez y lo intuitivito debería predominar en las interfaces. Figura 32. Resultados de prueba de usabilidad en torno a si es una aplicación fácil de usar Y por último en la figura 33 fue la única pregunta donde la mayoría no contestó afirmativamente, sino que ocurrió un empate a la pregunta de que si los elementos de ayuda de la aplicación son útiles. Donde varios expresaron que muchos de estos elementos estaban de más, lo que redundaba en el intento de dar a conocer al usuario la función de una sección de la interfaz. Es una aplicación fácil de usar Totalmente de acuerdo De acuerdo Ni de acuerdo ni en desacuerdo Desacuerdo Totalmente desacuerdo 66 Figura 33. Resultados de prueba de usabilidad en torno a los elementos de ayuda disponible en la aplicación son útiles Los resultados obtenidos reflejan un alto grado de aceptación de la aplicación Autcon, producto de la toma de requerimientos realizada en la fase primera y de iniciar la construcción del sistema por las interfaces, donde se confirmaban con los usuarios si estaban conformen con los prototipos realizados en la fase tercera. 3.4.2 Pruebas de Aceptación Se realizaron treinta y un (31) pruebas de aceptación en Autcon correspondiente con el modelo AUT como lo sugiere el autor de control de calidad Bertrand, la cual asegura que el comportamiento de un programa o sistema cumple con lo esperado. Este proceso se realiza a través de los usuarios reales del software, donde previamente se deben establecer las pruebas que se realizarán. A continuación se presentarán las matrices desarrolladas durante las pruebas de aceptación. Pero primero es importante aclarar que uno de los campos es denominado ID Requerimiento, el cual tiene siete (7) posibles valores: Los elementos de ayuda disponibles en la aplicación son útiles Totalmente de acuerdo De acuerdo Ni de acuerdo ni en desacuerdo Desacuerdo Totalmente desacuerdo 67  001: es el identificador de las pruebas realizadas a la funcionalidad de edición de perfil del administrador.  002: es el identificador de las pruebas realizadas a la funcionalidad de edición de perfil del analista de prepago.  003: es el identificador de las pruebas realizadas a la funcionalidad de agregar analista de prepago.  004: es el identificador de las pruebas realizadas a la funcionalidad de crear requerimiento.  005: es el identificador de las pruebas realizadas a la funcionalidad de crear un plan.  006: es el identificador de las pruebas realizadas a la funcionalidad de crear un servicio de valor agregado.  007: es el identificador de las pruebas realizadas a la funcionalidad de crear una restricción de roles o cierre de plan. En la figura 34 se encuentra un primer extracto de la matriz con los resultados de las pruebas de aceptación donde los primeros tres (3) corresponde con validar que la sección de modificar el perfil del administrador funcione de manera correcta ante eventos inesperados, cuyo resultado fue satisfactorio, es decir el sistema no colapso y siguió su funcionamiento normal. Las otras dos (2) pruebas corresponden con la funcionalidad de editar perfil del lado del analista prepago, ambas resultaron satisfactorias. 68 Figura 34. Matriz prueba de aceptación 1 de la Aplicación Web Autcon. En la figura 35 es un segundo extracto de la matriz que comprueba que la Aplicación Web Autcon trabaja de manera correcta ante cualquier circunstancia. Los primeros dos casos corresponde con la funcionalidad de edición de perfil del lado del analista prepago, donde ambas resultaron satisfactoria. Las últimas tres (3) pruebas fueron realizadas sobre la sección de agregar analista, las cuales aprobaron. 69 Figura 35. Matriz prueba de aceptación 2 de la Aplicación Web Autcon En la figura 36 está un tercer anexo que muestra en la primera fila la última prueba realizada al momento de agregar un nuevo analista prepago, la cual arrojó un resultado positivo. Luego le continúan tres (3) correspondiente con la creación de requerimientos, donde todas resultaron satisfactoria. Y en la última fila se encuentra la primera prueba realizada a la configuración de un plan, que dio como respuesta un “satisfactorio”. 70 Figura 36. Matriz prueba de aceptación 3 de la Aplicación Web Autcon En la figura 37 corresponde con el extracto de la matriz donde están los resultados de las pruebas realizadas a la sección de configuración de un plan, donde todos culminaron de manera satisfactoria, asegurando que Autcon no colapsará. 71 Figura 37. Matriz prueba de aceptación 4 de la Aplicación Web Autcon En la figura 38 está relacionado con las otras tres (3) pruebas realizadas a la sección de configuración de un nuevo plan, donde también resultaron de manera satisfactoria, es decir, arrojó un resultado esperado y Autcon siguió funcionando. He inician las primeras dos verificaciones de la sección para crear un servicio de valor agregado, las cuales resultaron positivas. 72 Figura 38. Matriz prueba de aceptación 5 de la Aplicación Web Autcon En la figura 39 se encuentra las otras cinco (5) pruebas que se realizaron en la funcionalidad de creación de un nuevo servicio de valor agregado, donde todas resultaron de forma satisfactoria. 73 Figura 39. Matriz prueba de aceptación 6 de la Aplicación Web Autcon En la figura 40 está la matriz con las últimas dos pruebas que se realizaron durante la fase de entrega en el desarrollo e la aplicación Autcon, correspondiente con la sección de configuración de restricción de roles, donde ambas resultaron de manera satisfactoria. 74 Figura 40. Matriz prueba de aceptación 7 de la Aplicación Web Autcon Una vez mostrado parte del código de la aplicación y la estructura del mismo, así como las pruebas que se realizaron en la metodología AgilUs, en el siguiente capítulo se muestran los resultados finales obtenidos en la aplicación. 75 CAPITULO IV RESULTADOS En este capítulo se describirá detalladamente todos los componentes que conforman Autcon. La aplicación está conformado por dos (2) módulos, el referido para el analista prepago y el segundo relacionado con el supervisor, los cuales trabajan en conjunto y se diseñaron de tal forma que el analista de prepago sólo pueda configurar un requerimiento sólo si lo ordena el administrador, y éste último no tenga la capacidad de modificar la base de datos. Adicionalmente se mostrará un diagrama de flujo con la intención de apreciar visualmente el funcionamiento del sistema. Cabe destacar que los usuarios y contraseñas para los analistas de prepago sólo pueden ser creados por el supervisor, y para ello es obligatorio tener una cuenta de correo institucional ya que el sistema sólo acepta dicho dirección para enviar el nombre de usuario y clave secreta. 4.1 Página de Inicio Permite ingresar a la aplicación y validar la autenticidad del personal autorizado utilizando la comparación de la contraseña ingresada con la registrada en la base de datos relacionada con el usuario introducido. En caso de que por alguna razón el usuario no recordase su clave secreta, puede hacer clic en el botón “recordar contraseña” para que el sistema envíe a su correo institucional lo olvidado. En la figura 41 se puede observar cómo es dicha interfaz. Es importante aclarar que esta ventana de ingreso es tanto para los analistas prepago como para el supervisor. 76 Figura 41. Página de inicio de la Aplicación Web Autcon 4.2 Gestión de Configuraciones Es la página principal de los analistas prepago y en primer plano se encuentra la tabla de requerimientos donde se listan todas las entregas que debe realizar, donde cada una de éstas son resaltadas en un color distinto dependiendo de la urgencia con la que es necesitada.  Rojo para entregas retrasadas.  Amarillo para configuraciones que están en el último día de entrega.  Verde para los requerimientos que están con un tiempo de holgura prudente. De todas formas del lado izquierdo se encuentra una leyenda que facilita el entendimiento de los colores que aparecen en la tabla del centro de la interfaz. La tabla de requerimientos está conformada por cuatro (4) campos, comenzando por el nombre del requerimiento, su número de identificación, la fecha de entrega y al final junto 77 con cada requerimiento, se encuentra un botón con forma de engranaje el cual permite al analista iniciar la configuración de la entrega solicitada. También es importante aclarar que en la parte superior izquierda se encuentran las opciones a las que tiene al alcance un analista prepago como lo son: editar perfil, ver configuraciones y cerrar sesión. En la figura 42 se puede apreciar cómo fue diseñada esta interfaz que tiene como objetivo principal, facilitar al analista prepago a llevar un control de las entregas que tiene pendiente por realizar, e iniciarlas de manera intuitiva y sencilla. Figura 42. Interfaz de configuraciones de la Aplicación Web Autcon 78 4.3 Editar Perfil Analista Prepago Esta funcionalidad permite como su nombre lo sugiere permite modificar los datos personales del analista de prepago, entre los cuales se están el nombre, correo, teléfono y la contraseña de manera intuitiva y sencilla. Sólo hace falta cambiar los valores que vienen por defectos en los campos y culminar haciendo clic en el botón “Guardar Perfil”. En la figura 43 se puede apreciar cómo está conformada la interfaz descrita. Figura 43. Editar perfil analista prepago de la Aplicación Web Autcon 4.4 Buscar Configuraciones Previas La interfaz que le permite al analista prepago buscar los scripts que conformaron entregas previas, ya sean para estudiarlas o que por alguna razón el correo con los documentos SQL haya fallado. Está conformado por un campo en donde se debe colocar el nombre completo o parte del requerimiento, para finalmente hacer clic en el botón 79 “buscar”, a continuación se listarían todos los requerimientos que coinciden con el nombre introducido. En la parte superior izquierda está situado un botón con forma de flecha que permite al usuario regresar a la página de configuraciones, que es donde está la tabla de requerimientos pendientes. La figura 44 muestra como está conformada la página destinada a buscar configuraciones previas. Figura 44. Buscar configuraciones previas de la Aplicación Web Autcon 4.5 Configuración de Plan Nuevo Esta interfaz se abre al hacer clic en el botón en forma de engranaje, correspondiente a la entrega de un plan de la tabla de requerimientos. Es la configuración más compleja del sistema ya que en ella abarca las otras dos instalaciones que permite el sistema como lo son: creación de un servicio de valor agregado y restricción de roles. Sin embargo, se 80 diseñó de tal forma de que no fuese abrumador para el analista realizar la configuración, sino por el contrario se le hiciese sencillo automatizando parte del proceso. La ventana está conformada por un formulario dividido en cinco (5) páginas, donde la navegabilidad entre las mismas está determinada por unos botones a la izquierda y derecha del cuerpo del formulario, ubicados en una forma tal que fuese intuitivo para el analista navegar a la página siguiente o anterior. Por último, en la parte superior izquierda se encuentra un botón con forma de flecha apuntando a la izquierda, que permite al analista prepago regresar a la página de configuraciones. En la figura 45 se puede apreciar cómo el analista prepago visualiza la interfaz de configuración de un plan nuevo. Figura 45. Configuración de plan nuevo de la Aplicación Web Autcon 81 4.6 Configuración Restricción de Roles Al igual que la sección de configuración de plan nuevo, está se accede al hacer clic en el botón con forma de engranaje de un requerimiento de restricción de roles. Es la más sencilla ya que requiere de pocos campos y cabe en una página su formulario. Con la intención de mantener la uniformidad, en la parte superior izquierda está el mismo botón mencionado en la interfaz anterior que permite regresar a la página de configuraciones. Al ir insertando los identificadores de los roles, aparece un botón llamado “Ver Listado” que permite visualizar todos los roles que serán configurados como RP (rol permitido o permitir acceso) o RNP (rol no permitido o restringir acceso) según sea indicado en el formulario. En la figura 46 se puede observar cómo fue diseñada esta ventana de configuración. Figura 46. Configuración restricción de roles de la Aplicación Web Autcon 82 4.7 Configuración de Servicio de Valor Agregado Nuevo Esta interfaz permite la configuración de un servicio de valor agregado de forma sencilla a través del llenado de un formulario dividido en dos (2) páginas, al igual que para la creación de un plan, posee dos botones con figuras de flechas que intuitivamente permiten la navegación entre ellas. Igualmente en la parte superior izquierda se encuentra un botón que da la posibilidad al usuario de regresar a la página principal para los analistas prepago. La figura 47 es una muestra de la ventana descrita en esta sección. Figura 47. Configuración de servicio de valor agregado nuevo de la Aplicación Web Autcon 4.8 Editar Scripts Es una interfaz donde desembocan todas las configuraciones, su objetivo final es permitirle al analista de prepago tener la capacidad de modificar el script antes de iniciar su instalación. En la interfaz se despliegan los nombre de todos los archivos sql generados y al 83 hacer clic se muestra el código, no hace falta guardarlo ya que el sistema toma el código directamente de lo que esté escrito en el área de texto y lo ejecuta. En la figura 48 se puede apreciar cómo fue diseñada esta interfaz, al momento de realizar la configuración de un plan de televisión. Figura 48. Editar scripts de la Aplicación Web Autcon 4.9 Administración de Requerimientos Es la interfaz principal del administrador de la aplicación Autcon, en ella aparece una tabla de noticias la cuales está conformada por todos los requerimientos que ha solicitado a los analistas prepago, los cuales son resaltados diferentes colores dependiendo del caso:  Verde: para las entregas que están con un tiempo de holgura prudente. 84  Amarillo: para los requerimientos que todavía no han sido realizadas y están en el último día de entrega.  Rojo: para las configuraciones que ya se encuentran con retrasos de entrega.  Negro: para aquellos requerimientos que ya han sido entregados y su fecha de entrega ya pasó. Igualmente a la izquierda de la tabla de requerimientos se encuentra una leyenda que facilita al usuario comprender el significado de los colores que allí se encuentran. Al final de cada requerimiento hay un botón con forma de un ojo abierto, que permite realizar dos opciones sobre los requerimientos, la primera es eliminar, que permite borrar entregas que aparecen en la tabla de noticias, y la segundo es guardar. Varios de los campos de la tabla son editables y una vez echas la modificación, el administrador debe hacer clic en el botón guardar, para salvar los cambios. Debajo de la tabla de noticias hay un botón llamado “agregar requerimiento” que permite crear una nueva solicitud y asignarlo a un analista de prepago. En la figura 49 se puede apreciar cómo fue diseñada esta interfaz, y en la figura 50 cómo se visualiza la ventana al momento de querer insertar un nuevo requerimiento. 85 Figura 49. Administración de requerimientos de la Aplicación Web Autcon Figura 50. Agregar nuevo requerimiento de la Aplicación Web Autcon 86 4.10 Agregar Analista Prepago Es una interfaz únicamente visible por el administrador y permite crear usuarios de analistas de prepago, donde solamente se aceptarán correos institucionales de la consultora Innovatec C.A. El formulario consta de pocos campos ya que sólo se requiere el nombre, el correo y número de teléfono, ya que el usuario y la contraseña lo genera de forma automática el sistema y lo envía al correo del nuevo miembro. En la figura 51 se muestra cómo es dicha interfaz, y lo sencillo que es crear un nuevo usuario para un analista de prepago. Figura 51. Agregar analista prepago de la Aplicación Web Autcon 4.11 Ver Lista de Analista Es una interfaz sencilla que permite visualizar los datos más importantes de los analistas prepagos que están registrados en Autcon, y de ser necesario se pueden eliminar gracias a un botón con forma de bote de basura al final de cada analista. En la figura 52 se puede apreciar como si visualiza esta tabla. 87 Figura 52. Lista de analista prepago de la Aplicación Web Autcon 4.12 Editar Perfil Es muy similar a la interfaz de edición de datos personales de un analista de prepago, con la diferencia de que aquí no se le permite modificar el nombre al administrador, ya que no es importante para los analistas y aumenta el rendimiento del sistema al no tener que modificar este campo en la base de datos. En la figura 53 se puede observar cómo fue diseña la interfaz descrita en esta sección. 88 Figura 53. Editar perfil administrador de la Aplicación Web Autcon Tras haber mostrado las funcionalidades de la Aplicación Web, se procede a ilustrar y describir detalladamente los flujos de trabajo de Autcon, el primero correspondiente al módulo del analista prepago y el segundo del supervisor o administrador. En la figura 54 se encuentra el flujo de trabajo de la aplicación del lado del analista prepago. Donde se comienza al momento de iniciar sesión, y de no recordar la contraseña te brinca la opción de recordarla enviándola al correo institucional correspondiente al usuario introducido. Una vez dentro de la aplicación se llega a la página principal donde se encuentra la tabla de requerimientos pendientes, aquí se tiene la posibilidad de realizar un requerimiento, editar el perfil del analista prepago o cerrar sesión y salir de Autcon. Si se opta por realizar un requerimiento, indiferentemente de cuál se elija se termina generando sus scripts, teniendo la posibilidad de modificarlos y finalmente instalarlos. En caso de que ocurra un error, la misma se desinstala y luego enviar los spools de instalación al correo institucional del analista prepago. 89 Figura 54. Flujo de trabajo Autcon, Módulo Analista Prepago 90 En la figura 55 está el flujo de trabajo de la aplicación del lado del Administrador o supervisor. Al iniciar sesión como es una interfaz en común para ambos módulos de Autcon se repite este segmento del diagrama. Una vez dentro del sistema cambia ya que el administrador entraría al panel de administración, donde se tiene la posibilidad de gestionar los requerimientos, cuyas acciones disponibles sobre estos son: la de agregar, modificar o eliminar. Si el administrador decide gestionar los analistas puede agregar o eliminar un desarrollador. Y se repiten las opciones de editar perfil y cerrar sesión. Figura 55. Flujo de trabajo Autcon, Módulo Administrador 91 Mediante el uso de esta herramienta, el equipo de desarrollo de la consultora Innovatec C.A consigue simplificar la gestión de las promociones a realizar, evitando incluso que el usuario tenga que programar una solución. Autcon también otorga a sus usuarios la capacidad para recuperar las configuraciones ya realizadas anteriormente, ya sea para obtener nuevamente los archivos de descarga o para utilizarlos como base de un nuevo requerimiento asignado. 92 CONCLUSIONES El uso de tecnologías para la simplificación y automatización de los procesos internos de las empresas, tiene un mayor auge cada día. Ya que éstos ayudan a abaratar los costos y reducir los tiempos de producción en las mismas. En la consultora Innnovatec C.A. la configuración de nuevos planes, servicios de valor agregado y restricción de roles, se hacían de manera manual y muy expuestos a errores, donde la única variable que ayudaba a recudir el tiempo de producción era la experiencia del analista prepago, debido a que entre mayor era su experiencia menor era la probabilidad de que ocurriese un inconveniente con la instalación de los scripts en las bases de datos. Usando la metodología de desarrollo AgilUs se pudo construir una Aplicación Web llamada Autcon, que redujo esa brecha entre analistas con experiencia y sin ella, ya que es la aplicación quien se encarga de desarrollar los archivos e indican claramente a través de sus interfaces, cuales son los datos que se requieren de la bitácora. Así mismo, el tiempo de configuración se redujo al mínimo ya que ahora se realizan en un día de trabajo, y la taza de errores se decreció a un nivel casi inexistente. Autcon facilitó y amplió el radio de acción de los analistas prepago, debido a que rompió con la necesidad de estar en la oficina de Innovatec C.A. para realizar las configuraciones de los planes, SVA’s y restricción de roles, ya que sólo se requiere de una computadora con acceso a internet. Incluso gracias a sus interfaces que poseen un diseño responsive, le permiten a los analistas prepago acceder a la Aplicación Web desde cualquier dispositivo móvil. Este trabajo de investigación puede tomarse como un punto de partida para futuros proyectos dentro de Innovatec C.A. Mediante el uso de las mismas tecnologías, se pueden ampliar y desarrollar nuevas funcionalidades para la gestión de otro tipo de requerimientos realizados por la consultora. 93 RECOMENDACIONES Una vez terminado la construcción de la Aplicación Web, se identificaron varios aspectos que podrían mejorar o ampliar el impacto que puede llegar a tener Autcon. Aclarando que dichos puntos que serán detallados a continuación, no fueron contemplados en este trabajo especial de grado ya que no se encontraban entre los objetivos específicos. Sin embargo, el sistema fue desarrollado sabiendo de la existencia de estos puntos a mejorar, lo que quiere decir que al momento de realizar el mantenimiento se podrá insertar dichos cambios de manera sencilla. A continuación se listan una serie de recomendaciones: 1. Extender la aplicación para la configuración de otros tipos de requerimientos que realizan los analistas prepago. 2. Extender la aplicación para no limitarse con la plataforma prepago, sino también realizar configuraciones en postpago. 3. Permitir que desde la aplicación se puedan realizar consultas y obtener respuestas sobre las bases de datos a los que tiene acceso los analistas de prepago. 4. Extender la aplicación permitiendo que ésta trabaje en conjunto con un gestor documental, que facilite la administración de los documentos generados por Autcon. 94 REFERENCIAS BIBLIOGRÁFICAS Acosta, E. (2015). Agilus: Construcción Ágil de la Usabilidad. Universidad Central de Venezuela. ResearchGate. Recuperado de https://www.researchgate.net/publication/267856949 Alicia Ramos Martín (2014) Aplicaciones Web (2da Edición). Madrid, España: ANAYA. Camps Paré (2002) Bases de datos (2da Edición). Madrid, España: ANAYA Contreras Castañeda (2013) Desarrollo de aplicaciones Web multiplataforma (2da Edición). Madrid, España: Club Universitario. Daniel Pastor Rodríguez (2006) Diseño y Creación HTML 4.1(1ra Edición). Barcelona, España: Lulu. David Flanagan (2002) JavaScript: The Definitive Guide (5ta Edición). California, Estados Unidos: O’Reilly Media Inc. Elmasri (2003) Fundamentals of Database Systems/Oracle 9i Programming (3ra Edición). Wesley, Reino Unido: Addison-Wesley, Inc. Eric Meyer (2006) CSS: The Definitive Guide: The Definitive Guide. California, Estados Unidos: O’Reilly Media Inc. Gabillaud (2014) SQL Server 2014: SQL, TransactSQL : diseño y creación de una base de datos. (2da Edición). Barcelona, España:Ediciones Eni. IanSommerville (2005) Ingeniería del software (2da Edición). Wesley, Reino Unido: Addison-Wesley, Inc. https://www.researchgate.net/publication/267856949 https://www.google.co.ve/search?espv=2&biw=1440&bih=794&tbm=bks&tbm=bks&q=inauthor:%22Alicia+Ramos+Mart%C3%ADn%22&sa=X&sqi=2&ved=0ahUKEwjT5tPw2oXSAhXE5SYKHSbvAbEQ9AgIHzAB https://www.google.co.ve/search?sa=X&espv=2&biw=1440&bih=755&tbm=bks&tbm=bks&q=inauthor:%22Rafael+Camps+Par%C3%A9%22&ved=0ahUKEwjNm97Z84rSAhXBOyYKHShiAEIQ9AgIIjAB https://www.google.co.ve/search?sa=X&espv=2&biw=1440&bih=794&tbm=bks&tbm=bks&q=inauthor:%22Ian+Sommerville%22&ved=0ahUKEwiFpMmQz4rSAhWLOiYKHcdTCfoQ9AgIHjAB 95 James Gosling (2001) El lenguaje de programación Java (5ta Edición). Wesley, Reino Unido: Addison-Wesley, Inc. Luc Van Lancker (2008)HTML5: Los fundamentos del lenguaje (3ra Edición). Barcelona, España:Ediciones Eni. Mesia, A. y Moncada M. (2012) Manual de Configuración de Planes en Base de Datos IVR. (Versión 1.0). Caracas. Telefónica S.A. Mesia, A. y Moncada M. (2012) Manual de Configuración de Restricción de roles en Base de Datos IVR. (Versión 1.0). Caracas. Telefónica S.A. Mesia, A. y Moncada M. (2012) Manual de Configuración de Servicio de Valor Agregado en Base de Datos IVR. (Versión 1.0). Caracas. Telefónica S.A. Miguel Ángel Sánchez Maza (2012) Javascript. Sánchez Acosta (2003) Manual de Java . Thierry Groussard (2010) Java Enterprise Edition: Desarrollo de aplicaciones web con JEE 6. Tim Boudreau y SimeonGreene (2002) NetBeans: TheDefinitiveGuide. Vértice (2009) Diseño básico de páginas web en HTML. https://es.wikipedia.org/wiki/James_Gosling https://www.google.co.ve/search?espv=2&biw=1440&bih=794&tbm=bks&tbm=bks&q=inauthor:%22Thierry+Groussard%22&sa=X&sqi=2&ved=0ahUKEwjT5tPw2oXSAhXE5SYKHSbvAbEQ9AgIOjAG https://www.google.co.ve/search?espv=2&biw=1440&bih=794&tbm=bks&tbm=bks&q=inauthor:%22Simeon+Greene%22&sa=X&ved=0ahUKEwi8mt-Gx4XSAhXD6iYKHdFwDyUQ9AgIITAA 96 MANUAL DE ANALISTA PREPAGO La configuración de un nuevo plan se realiza en las bases de datos t2, t1, CVSC y TCONECTA. Agregar un nuevo servicio de valor agregado en las primeras tres mencionadas, y la restricción de roles se realiza en la base de datos llamada TCONECTA. Para ello, es necesario obtener de la bitácora todas las características que tendrán los nuevos elementos, como por ejemplo el costo, el nombre, los roles a restringir, etc. Este manual tiene como objetivo explicar de forma sencilla, cómo utilizar la aplicación Autcon para realizar cualquiera de las tres configuraciones mencionadas en el párrafo anterior. Donde se ahorra el trabajo de desarrollar los scripts, mas sin embargo el usuario debe ser capaz de identificar los elementos solicitados por el sistema dentro de la bitácora. A continuación se procede a detallar cada interfaz de la aplicación: 97 En la página de inicio se debe introducir el usuario y su clave correspondiente, en caso de no tener cuenta, comuníquese con el administrador o supervisor de analistas para tener acceso a Autcon. Una vez ingresado los datos solicitados hace clic en el botón y entrará a la página principal de los analistas prepago. Si por otro lado no recuerda su contraseña debe ingresar su usuario y seguido presionar en , donde el sistema le enviará automáticamente palabra secreta a su correo institucional. Si tampoco recuerda su usuario, infórmele al administrador o supervisor de analista para que lo ayude. Una vez dentro del sistema se les presenta una tabla en el centro de la página, en la cual deben estar todos los requerimientos pendientes que debe realizar, en el caso de que esté vacía aparecerá un texto indicando “No hay requerimientos pendientes”. En el mismo orden de ideas, el primer campo de la tabla es “Nombre del requerimiento” que como lo sugiere es el calificativo que recibe. Luego “Número del requerimiento”, que es un valor 98 alfanumérico que identifica inequívocamente al requerimiento, seguido de “Fecha de entrega”, la cual indica el término cuando se debe realizar la entrega del requerimiento. Por último un campo que sólo se es visible cuando hay trabajos para los analistas en cola, el cual es un botón en forma de engranaje que al hacer clic sobre él, se abre la página que permite configurar dicho requerimiento, pero se detallará más adelante. Dentro de la misma página principal de los analistas prepago, ubicado en la parte superior izquierda hay un botón . Es un menú despegable que al presionar aparecen una serie acciones que puede realizar el desarrollador de scripts. El primero es , despliega una interfaz permite actualizar los datos personales del analista, entre los cuales se tiene:  Nombre: es el nombre del analista de prepago, y la forma más sencilla que posee el administrador o supervisor de identificarlo en el sistema.  Correo: es el email institucional que proporciona Innovatec C.A., sólo se acepta el que otorga la consultora.  Contraseña: es la clave de acceso al sistema, debe tener máximo 16 caracteres y se permiten tanto letras como números, mayúsculas y minúsculas, así como caracteres especiales. 99  Teléfono: es el número de teléfono personal, con la finalidad de que el supervisor pueda comunicarse rápidamente con el analista. Para modificar dichos campos simplemente con hacer clic sobre ellos, modificar el texto y al finalizar hacer clic en el botón , ya habrás actualizado tu perfil.Es imprescindible terminar la modificación realizando esta última acción, ya que de no hacerlo no se guardarán los cambios. Si desea salir de la interfaz presione la equis ubicado en la parte superior derecha. La siguiente opción del menú despegable es , al hacer clic sobre él se navega a otra interfaz donde en la parte central hay un campo de texto junto con un botón . Como lo indica el descriptor que se encuentra sobre el campo, la idea es ingresar el nombre o parte del nombre de un requerimiento y luego hacer clic en el botón mencionado, donde inmediatamente se listarán los scripts que podrás descargar al seleccionarlos. Para regresar a la interfaz principal, presiona el botón con forma de flecha en la parte superior izquierda . 100 La última opción del menú es , el cual al hacer clic solicitará confirmación de que realmente desea salir del sistema de forma segura. Para confirmar seleccione “Aceptar” y lo devolverá a la página de inicio. Configuración de Plan nuevo El formulario para la configuración de un nuevo plan inicia solicitando el tipo de negocio al cual va dirigido, entre los cuales se tiene  Telefonía móvil  Telefonía fija  Internet móvil  Tv digital 101 Dependiendo de lo elegido se modificarán los botones con forma de llave , los cuales permiten configurar los servicios que ofrecerá el plan. Pero no siempre se configuran los cuatro porque por ejemplo si se está creando un elemento para TV digital éste no posee servicios en llamadas es por esto que no se podrán configurar sva’s de llamadas, mensajes de texto ni de navegación por lo que los mismos botones tendrían la siguiente forma . Luego si seleccionaste un tipo negocio de telefonía móvil o fija, la siguiente opción sería indicar si será un plan en minutos o segundos. Esto modificará nuevamente la pantalla para establecer la unidad en los servicios de llamadas. El cambio sería el siguiente, al elegir minutos se cambiaría a “Cantidad Minutos MM” ó “CantidadMinutos OP” (MM significa Movistar a Movistar y OP otras operadoras), por el contrario de elegirse segundos se mostraría lo siguiente “Cantidad Segundos MM” ó “Cantidad Segundos OP”. El siguiente paso es para todos los tipos de negocio excepto para TV digital ya que no se configura servicios. Para configurar los beneficios que otorgará el plan simplemente con hacer clic en se desplegará una interfaz que solicitará los siguientes campos:  Cantidad: que se refiere al número de minutos, segundos, mensajes de textos o kilobytes de navegación que tendrá el servicio, esto claro depende de lo elegido.  Nombre del cupo: es un campo de la tabla TCupo que permite describir para cuál elemento es el cupo que se va a crear. Los cupos es donde se define si el servicio será de minutos, segundos, sms o kb de navegación. Simplemente es una descripción del registro.  Ccupo: es la clave primaria del cupo a crear.  Nombre SVA: es el nombre del servicio que otorgará el plan. Simplemente es una descripción del registro.  CFeature: es la clave primaria del servicio a crear. 102  Monto: es el precio que cobrará el servicio, es importante colocar el monto sin IVA indicado en la bitácora.  Siglas: son las siglas del servicio a otorgar, normalmente se colocan las iniciales del nombre sva.  Nombre siglas: es el nombre con que se identifican las siglas. Simplemente es una descripción del registro.  PosPantalla: es un número que debe ser menor a 1200, este valor es consultado a Telefónica para asegurar que esté disponible en la base de datos de producción. Una vez culminado, se procede a hacer clic en el botón “Guardar”. Y al cerrarse la interfaz se apreciará que el servicio que se acaba de configurar tendrá ahora la siguiente forma . Lo que quiere decir que ya fue guardada la configuración y está a la esperar para generar el script. Si hace clic sobre él le pedirá confirmación de si realmente desea borrar la configuración del servicio, al presionar “Aceptar” se borrará lo ingresado y cambiará nuevamente a . Para continuar a la siguiente página se presiona , y por supuesto para regresar . Luego prosigue establecer los servicios de valor agregado con los que será compatible el plan, el flujo de trabajo es simple: 103 1. Se introduce el cfeature o identificador del servicio en el campo. 2. Se hace clic sobre , aparecerá un indicándole que se está validando que el cfeature introducido es válido. 3. De ser válido aparecerá un botón como este queal presionarlo se mostrará la lista de cfeature que haz agregado hasta el momento. Si deseas deshacer lo hecho simplemente desseleccionas el cfeature de la lista. Seleccionado Deseleccionado 4. De no existir el servicio, lo indicará con un mensaje. El mismo procedimiento aplica para los paqueticos compatibles con el plan. Al continuar en la siguiente página se configura un servicio que será el correspondiente al televenta del plan, esto siempre y cuando no se haya elegido un plan de televisión digital, de ser así, se configuraría un servicio normal. Aplica casi los mismos campos que para configurar un servicio en la primera parte de la configuración, pero sin incluir el cupo. Se navega a la página siguiente y de haber elegido configurar un plan que no sea de televisión digital, corresponde con la restricción de roles. El procedimiento es el mismo para hacer compatibles los servicios de valor agregado. La diferencia radica en que se debe 104 especificar si el listado de roles serán permitidos (RP) o no permitidos (RNP). Para ello se debe hacer clic en el radio buttom. Para establecerlos como permitidos O declararlos no permitidos Se llega a la última página del formulario donde se establecen los datos del plan como tal:  Nombre: es el nombre del plan indicado en la bitácora.  Nombre del tipo plan: comúnmente es igual al nombre del plan, pero debe ser más corto en longitud. Lo que se hace normalmente es quitar la palabra “plan” del nombre.  CDiseno: es el identificador del plan o clave primaria.  Fecha de inicio: es la fecha en la que entra en vigencia el plan y es indicado en la bit´cora.  Ajustes Rev: está establecido en la bitácora.  Ajustes Cre: está establecido en la bitácora. Una vez llenado los campos se procede a hacer clic en el botón , que como lo sugiere crea los scripts y te lleva a otra interfaz donde podrás detallar los scripts antes de instalar, por su puesto tendrás los permisos para modificarlos en caso de que sea necesario un cambio. En la interfaz llamada “Editar Scripts”, aparecerá un listado con los nombre de los archivos en SQL que desarrolló Autcon, para modificarlos sólo haz clic sobre ellos y 105 aparecerá el texto que podrás modificar, no es necesario guardar, ya que Autcon tomará todo lo que esté escrito allí. Este es un ejemplo del nombre de un script Una vez hecha la modificación, para indicarle al sistema que deseas instalar debeshacer clic en el botón . Te llevará a la página principal de los analistas y Autcon te mostrará un indicando que “En este momento se está instalando los scripts, por favor revise su correo institucional”. Lo que sucederá a continuación es que el sistema una vez termine de instalar en las bases de datos correspondientes, enviará a tu correo institucional los scripts y spools de instalación. Y así en menos de 15 minutos habrás configurado tu primer plan, ¡felicidades! Configuración restricción de roles o cierre de plan La configuración de una restricción de roles comprende un formulario sencillo de una página comenzando con el Cdiseno, que es el identificador o calve primaria de la tabla tdiseno, que con dicho valor se ubica el plan dentro de la base de datos. 106 Para establecer los roles que se van a restringir o habilitar, basta con ingresar el identificador del rol en el campo y luego hacer clic en , aparecerá un texto indicando que se está validando que el idRol introducido sea correcto. Si es válido aparecerá un botón como este . Al presionarlo aparece una lista de roles, que puede deseleccionarlo en caso de que lo requiera. Luego se debe establecer si la lista de roles serán restringidos o habilitados, de la siguiente manera: Para establecerlos como permitidos O declararlos no permitidos Por último se hace clic sobre el botón , para como lo sugiere el texto genere los scripts correspondiente a un cierre de plan o restricción de roles. Los siguientes pasos son los mismos explicados en la sección “Configuración de plan nuevo”. 107 Configuración de servicio de valor agregado nuevo La configuración de un servicio de valor agregado está conformada por dos páginas, donde se procederá a explicar cada campo:  Fecha de inicio: representa el término cuando empieza a estar vigente el elemento.  Unidades a otorgar: establece las unidades que otorgará el servicio, entre los cuales se mencionan: -Minutos a Movistar -Minutos a otras operadoras -Segundos a Movistar -Segundos a otras operadoras -Mensajes de texto -Kilobytes  Cantidad: es la cantidad de unidades que va a otorgar el servicio.  Nombre Cupo: es el nombre del cupo, que describe para quién se creó el elemento. Simplemente es una descripción del registro.  CCupo: es el identificador o clave primaria del cupo.  Nombre SVA: es el nombre del servicio establecido en la bitácora.  Cfeature: es el identificador o clave primaria del servicio. 108 Luego se va a la siguiente página haciendo clic en . Y aparecerán los siguientes campos:  Monto: es el precio que cobrará el servicio por su uso. Cabe destacar que dicho monto es sin iva.  Siglas: son las siglas del servicio, que usualmente se usan las siglas del nombre o las letras que permitan abreviarlo.  Nombre siglas: normalmente se usa el nombre del servicio pero simplificado ya que el campo sólo admite 20 caracteres.  Ajuste Cre: establecido en la bitácora.  Ajuste Rev: establecido en la bitácora.  Pos Pantalla: es un número que debe ser menor a 1200, este valor es consultado a Telefónica para asegurar que esté disponible en la base de datos de producción. Los planes compatibles es el conjunto de cdiseno que identifican a los planes que permitirán agregarle servicios al plan de facturación que posee el cliente. El procedimiento es el siguiente: 1. Se introduce el cdiseno o identificador del plan en el campo. 109 2. Se hace clic sobre , aparecerá un indicándole que se está validando que el cdiseno introducido es válido. 3. De ser válido aparecerá un botón como este que al presionarlo se mostrará la lista de cdisenos que ha agregado hasta el momento. Si deseas deshacer lo hecho simplemente deseleccionas el cdiseno de la lista. Para seleccionar el plan O deseleccionar Por último se hace clic en el botón para generar los scripts y los pasos a seguir son los mismos que los indicados en la sección “Configurar un plan nuevo”. 110 MANUAL DE ADMINISTRADOR El siguiente manual tiene como finalidad instruir al usuario administrador a manipular el sistema, ya que este módulo de Autcon es el más importante debido a que es quién le da vida a la Aplicación Web. El administrador está encargado de gestionar los requerimientos, esto incluye asignarlo, modificarlos y eliminarlos si es necesario. Otra acción es la de administrar los usuarios, ya que es quién los crea y elimina. Se comenzará explicando cómo ingresar al sistema, para ello es importante estar en la página de inicio. Se debe introducir el usuario y su clave correspondiente, una vez ingresado los datos solicitados hace clic en el botón y entrará a la página principal del administrador. Si por otro lado no recuerda su contraseña debe ingresar su usuario y 111 seguido presionar en , donde el sistema le enviará automáticamente palabra secreta a su correo institucional. Al ingresar al sistema lo llevará a la página principal del administrador: En la parte central está la tabla de noticias, que son todos los requerimientos que ha asignado el administrador los últimos catorce (14) días o entregas que todavía tienen estatus de “Desarrollo”. En esta tabla se presentan tres (3) colores para llamar la atención del usuario dependiendo de la urgencia del requerimiento.  Rojo : para indicar que la entrega está atrasada. 112  Amarillo : para indicar que el requerimiento está en el último día de entrega y todavía está en estatus “Desarrollo”.  Verde : para indicar que el requerimiento tiene estatus “Entregado” o todavía posee un tiempo de holgura prudente. Dicha tabla está conformada de varios campos:  Analista Prepago: Es el nombre del analista prepago que está encargado de realizar la configuración asignada.  Nombre del Requerimiento: Es el calificativo que se le da al requerimiento para identificarlo más fácilmente.  Número del Requerimiento: es un valor alfanumérico que identifica inequívocamente la entrega, y la diferencia claramente de entre todas.  Tipo de Requerimiento: es el campo que establece si es un requerimiento para crear un plan nuevo, un servicio de valor agregado o una restricción de roles o cierre de plan.  Fecha de Entrega: Es el término que se establece cuándo debe entregarse el requerimiento asignado.  Estatus: es un valor que puede tener dos valores “Desarrollo” que significa que el requerimiento está en proceso de entregarlo. Y “Entregado” cuyo significado es que la entrega ya está en manos de Telefónica S.A. Existe un último campo que no posee nombre, pero que al final de cada requerimiento aparece un botón con la siguiente forma , al hacer clci sobre el se despliga una interfaz como la siguiente: 113 El botón , permite actualizar los cambios hechos directamente sobre la tabla, ya que el administrador puede editar los campos “Nombre de Requerimiento”, “Número del Requerimiento”, “Tipo de Requerimiento” y “Fecha de entrega”. Siempre y cuando dicho requerimiento se encuentre en estatus “Desarrollo” ó el analista prepago no haya iniciado la configuración. El botón da la posibilidad al administrador de eliminar un requerimiento, siempre y cuando dicha entrega no la haya iniciado el analista prepago. En la parte superior izquierda de la página principal del administrador, existe un botón . El cual es un menú despegable, cuya primera opción es , que como lo sugiere el nombre permite al administrador actualizar sus datos personales que requiere Autcon. 114 El formulario de actualización de datos es corto y está conformado por los siguientes campos:  Nombre: este campo no se puede modificar ya que se requiere poder diferenciar al administrador de los demás usuarios o analistas prepago.  Correo: debe ser el correo institucional proporcionado por la consultora Innovatec C.A.  Contraseña: es la clave de acceso al sistema.  Teléfono: es el número de teléfono personal del administrador Por último una vez modificados los campos de interés, debe culminar presionando el botón . La siguiente opción del menú despegable es , al hacer clic sobre él aparece en la interfaz una lista con todos los analistas inscritos en Autcon. 115 Es una tabla conformada por cuatro (4) campos, que se explicarán a continuación:  Nombre: es el nombre del analista prepago.  Correo: es el correo institucional del analista prepago.  Teléfono: es el número de teléfono personal del analista prepago.  Acción: es la capacidad que posee el administrador de borrar de Autcon algún analista prepago, haciendo clic en el botón . Le aparecerá un mensaje pidiendo confirmación de si realmente desea eliminarlo. Al hacer clic en “Aceptar”, se eliminará al analista prepago del sistema. La siguiente opción dentro del menú despegable es , que le da el poder al administrador de agregar analistas prepago al sistema Autcon. Al hacer clic sobre él aparece la siguiente interfaz: 116 Es un formulario corto con sólo tres (3) campos, que se procederá a explicar:  Nombre: es el nombre del analista prepago, para que el administrador pueda identificarlo fácilmente.  Correo: es el correo institucional que proporciona la consultora Innovatec C.A.  Teléfono: es el número de teléfono personal del nuevo analista prepago. Para culminar el proceso de creación del nuevo usuario, debe hacer clic en el botón . Cabe destacar que Autcon se encargará de generar usuario y contraseña, para luego enviárselo por correo a la dirección electrónica indicada en el formulario. Igualmente importante aclarar, es que el administrador no puede crear un analista prepago con su correo, ya que el sistema no permite que el administrador pueda auto-asignarse requerimientos, esto es por motivos de seguridad. 117 La última opción del menú es , el cual al hacer clic solicitará confirmación de que realmente desea salir del sistema de forma segura. Para confirmar seleccione “Aceptar” y lo devolverá a la página de inicio. 118 MANUAL DE TECNOLOGÍA Desarrollar una Aplicación Web incluye una variedad de tecnologías, las cuáles presentan infinitas posibilidades llegando al punto que un mismo sistema puede realizarse de muchas maneras teniendo exactamente las mismas funcionalidades. Este manual tiene como objetivo especificar y aclarar cuáles tecnologías fueron seleccionadas para desarrollar Autcon. Se inicia especificando que el entorno de desarrollo de Autcon fue realizado en su totalidad usando el IDE NetBeans 8.2, en su versión. El lenguaje del lado del servidor fue JAVA, cuyo jdk tuvo como versión 1.8.0_111, lo mismo aplicó para el jre. Entre las ventajas que presenta haber usado NetBeans 8.2 se señalan los siguientes:  Integración de herramientas web como html5, css3, javascript, jquery y apache tomcat.  Contextualización del código de manera automática.  Solución de errores o sugerencias de forma automáticas.  Auto-completación de código.  Funcionalidades de búsqueda de métodos.  Cambio de nombre de elementos del código de forma automática. -Servidor: apache-tomcat 6.0.48, la razón de esta elección se debe a su alta confiabilidad en situaciones de estrés, y debido también a que la licencia de este servidor es gratuita, además de ser de código abierto. -Java: es un lenguaje altamente confiable además de ser muy usado de forma corporativa por grandes empresas, debido al gran número de aplicaciones y programas que están desarrolladas en este lenguaje, lo que aumenta la posibilidad de interoperar Autcon con otros sistemas en caso de ser necesario. Y por supuesto es un lenguaje sencillo y fácil de comprender. 119 -CSS3: esta versión de CSS posee nuevos elementos que facilitaron en gran medida el desarrollo de las interfaces de Autcon, simplificando significativamente su desarrollo. -Bootstrap v3.3.6: fue seleccionado debido a que facilita la tarea de diseñar interfaces con un sentido responsive. -HTML5: esta versión del lenguaje de etiquetas posee nuevos elementos que facilitan el desarrollo de las interfaces de Autcon, además de tener la capacidad de ejecutarse en cualquier navegador. -Javascript: fue utilizado para hacer dinámica las interfaces de Autcon, principalmente a través del uso de AJAX. -SQL Server Data Tools v14.0.50616.0: Fue seleccionado para funcionar como base de datos local para el sistema Autcon, la razón principal se debió a la intención de mantener los estándares establecidos por Telefónica S.A. 120 CUESTIONARIO DE USABILIDAD DE AUTCON El siguiente cuestionario tiene como objetivo conocer su valiosa opinión acerca de cómo fue su experiencia al manipular el sistema Autcon. Las preguntas giran en torno a varios aspectos como: usabilidad, satisfacción y eficiencia. Se agradece seleccionar la puntuación que corresponda con su opinión de acuerdo a la siguiente escala: Totalmente de acuerdo De acuerdo Ni de acuerdo ni en desacuerdo En desacuerdo Totalmente en desacuerdo 1 2 3 4 5 N° Pregunta 1 2 3 4 5 1 Los títulos, menús y textos de la aplicación son legibles 2 Los colores utilizados contribuyen a la percepción adecuada de la aplicación 3 Los descriptores de la aplicación son claros y precisos 4 Se ofrece una organización que facilita la navegación 5 El diseño de la aplicación favorece su uso 6 La aplicación se puede ejecutar de manera intuitiva 7 Es una aplicación fácil de usar 8 Los elementos de ayuda disponibles en la aplicación son útiles 121 ANEXO A Casos de Uso Tabla 3: Especificación del caso de uso: Realizar configuraciones Caso de uso 2.- Realizar configuraciones Actor Analista de prepago. Pre-condición El analista de prepago debe estar autenticado por el sistema Autcon. Flujo básico El analista de prepago selecciona si desea configurar un plan, cerrarlo o crear un nuevo servicio de valor agregado. Una vez hecho procede a ingresar los datos relacionados con la configuración y por último ejecuta la instalación en las bases de datos Post-condición Debe quedar instalado el nuevo plan o su cierre, o haberse agregado el servicio de valor agregado. Flujo alternativo Antes de confirmar la instalación en las bases de datos, el analista de prepago puede realizar un último cambio en el código Sql. Tabla 4: Especificación del caso de uso: Gestionar Perfil Caso de uso 3.- Gestionar perfil Actor Analista de prepago Pre-condición El analista de prepago debe estar autenticado por el sistema Autcon. Flujo básico El analista de prepago ingresa los datos que desea actualizar de su sesión, y por último ejecuta su actualización. Post-condición Los datos nuevos que ingresó el analista de prepago deben verse reflejados al momento de ingresar nuevamente en la opción de gestión de perfil. 122 Tabla 5: Especificación del caso de uso: Buscar configuraciones Caso de uso 4.- Buscar configuraciones Actor Analista de prepago Pre-condición El analista de prepago debe estar autenticado por el sistema Autcon. Flujo básico El analista de prepago selecciona el archivo a descargar, buscándolo por su nombre. Una vez encontrado procede a iniciar la descarga. Post-condición El analista de prepago descargó el archivo exitosamente. Tabla 7: Especificación del caso de uso: Gestionar Requerimiento Caso de uso 3.- Gestionar Requerimiento Actor Supervisor Pre-condición El Supervisor debe estar autenticado por el sistema Autcon. Flujo básico El Supervisor selecciona los analista prepago, indica la fecha a la que debe estar lista la configuración y el tipo de configuración que se necesita, bien sea crear nuevo plan, sva o cierre de plan. Post-condición Debe existir un nuevo usuario para analista prepago. Tabla 8: Especificación del caso de uso: Gestionar Perfil Supervisor Caso de uso 3.- Gestionar perfil Actor Supervisor Pre-condición El Supervisor debe estar autenticado por el sistema Autcon. Flujo básico El Supervisor ingresa los datos que desea actualizar de su sesión, y por último ejecuta su actualización. Post-condición Los datos nuevos que ingresó el supervisor deben verse reflejados al momento de ingresar nuevamente en la opción de gestión de perfil.