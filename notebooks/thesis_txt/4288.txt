UNIVERSIDAD CENTRAL DE VENEZUELA FACULTAD DE CIENCIAS ESCUELA DE COMPUTACION TRABAJO ESPECIAL DE GRADO: ACTUALIZACION DEL SUBPROCESO DE INSCRIPCION DE LISTAS Y CANDIDATOS PARA LAS ELECCIONES DE REPRESENTANTES ESTUDIANTILES ORGANIZADAS POR LA COMISION ELECTORAL DE LA UCV Trabajo Especial de Grado presentado ante la Ilustre Universidad Central de Venezuela por el Br. Alexis Humberto Colmenares Sosa C.I. 13.864.570 Tutor: Prof. Franklin Sandoval Caracas, Mayo de 2015 2 UNIVERSIDAD CENTRAL DE VENEZUELA FACULTAD DE CIENCIAS ESCUELA DE COMPUTACIÓN ACTA Quienes suscriben, miembros del jurado designado por el Consejo de la Escuela de Computación, para examinar el Trabajo Especial de Grado titulado “ACTUALIZACION DEL SUBPROCESO DE INSCRIPCION DE LISTAS Y CANDIDATOS PARA LAS ELECCIONES DE REPRESENTANTES ESTUDIANTILES ORGANIZADAS POR LA COMISION ELECTORAL DE LA UCV” y presentado por el bachiller: Alexis Humberto Colmenares Sosa, portador de la cedula de identidad: 13.864.570, a los fines de optar al título de Licenciado en Computación, dejamos constancia de lo siguiente: Leído como fue dicho trabajo, por cada uno de los miembros del jurado, se fijó el día __ de ________ de _____, a las ________ horas, para que los autores lo defendieran en forma pública, lo que estos hicieron en la Sala ___ de la Escuela de Computación, mediante una presentación oral de su contenido, luego de lo cual respondieron a las preguntas formuladas. Finalizada la defensa pública del Trabajo Especial de Grado, el jurado decidió aprobar con la nota de ____ puntos. En fe de lo cual se levanta la presente Acta, en Caracas el día ___ de _________ del 2015. _______________________________________ Prof. Franklin Sandoval (Tutor) __________________________________ Prof. Rivas Robinson (Jurado) ___________________________________ Prof. Bottini Adrian (Jurado) 3 ÍNDICE ÍNDICE DE FIGURAS ........................................................................................................................ 5 ÍNDICE DE TABLAS .......................................................................................................................... 9 INTRODUCCIÓN ........................................................................................................................... 10 RESUMEN .................................................................................................................................... 11 CAPITULO 1. PLANTEAMIENTO DEL PROBLEMA............................................................................ 12 1.1. PROCESOS ELECTORALES EN LA UCV.................................................................................. 12 1.2. SITUACION ACTUAL ........................................................................................................... 13 1.3. DESVENTAJAS .................................................................................................................... 15 1.4. SOLUCIÓÓN ELECTORAL....................................................................................................... 24 2.1.1. PERFIL DE LA COMISIÓN ELECTORAL ........................................................................... 24 2.1.2. ESTRUCTURA ORGANIZATIVA ..................................................................................... 24 2.1.3. OBJETIVOS .................................................................................................................. 27 2.1.4. FUNCIONES................................................................................................................. 27 2.1.5. ATRIBUCIONES............................................................................................................ 28 2.2. PROCESOS INVOLUCRADOS EN LOS EVENTOS ELECTORALES.............................................. 29 2.2.1. GENERACIÓN DE REGISTROS ELECTORALES................................................................. 30 2.2.2. INSCRIPCIÓN DE LISTAS Y CANDIDATOS ...................................................................... 32 2.2.3. VOTACIÓN .................................................................................................................. 33 2.2.4. ESCRUTINIO, TOTALIZACIÓN Y ADJUDICACIÓN ............................................................ 33 2.2.5. PROCLAMACIÓN ......................................................................................................... 37 CAPÍTULO 3. MARCO TECNOLÓGICO ............................................................................................ 38 3.1. MySQL ............................................................................................................................... 38 3.1.1. CARACTERÍSTICAS DE MYSQL ...................................................................................... 38 4 3.1.2. VENTAJAS DE MYSQL .................................................................................................. 40 3.1.3. DESVENTAJAS DE MySQL ............................................................................................ 40 3.2. PHP ................................................................................................................................... 41 3.2.1. HISTORIA DE PHP ........................................................................................................ 41 3.2.2. EVOLUCIÓN DE PHP .................................................................................................... 41 3.2.3. ¿QUÉ SE PUEDE HACER CON PHP? .............................................................................. 42 3.2.4. MODO DE FUNCIONAMIENTO DE PHP ........................................................................ 42 CAPÍTULO 4. MARCO METODOLÓÓN DEL MÉTODO DE DESARROLLO DE SOFTWARE .......................................... 50 CAPÍTULO 5. MARCO APLICATIVO ................................................................................................ 52 5.1. ITERACIONES ..................................................................................................................... 52 5.1.1. ITERACIÓN 0 ............................................................................................................... 52 5.1.2. ITERACIÓN 1 ............................................................................................................... 53 5.1.3. ITERACIÓN 2 ............................................................................................................... 60 5.1.3. ITERACIÓN 3 ............................................................................................................... 70 5.2. PRUEBAS DE ACEPTACIÓN ................................................................................................. 84 CONCLUSIONES ............................................................................................................................ 86 RECOMENDACIONES .................................................................................................................... 87 BIBLIOGRAFÍA .............................................................................................................................. 88 ANEXO A ...................................................................................................................................... 89 5 ÍNDICE DE FIGURAS FIGURA 1. DIAGRAMA DE PROCESOS ELECTORALES. ................................................................... 12 FIGURA 2. DIAGRAMA DE FLUJO DE TRABAJO ACTUAL. ............................................................... 13 FIGURA 3. MODELOS DE PLANILLAS DE RECOLECCIÓN DE FIRMAS, POSTULANTES Y POSTULADOS ACTUALES. ........................................................................................................................... 14 FIGURA 4. ESCÁNER PARA PLANILLAS ÓPTICAS OPSCAN 5. .......................................................... 15 FIGURA 5. PORCIÓN DE NUMERACIÓN EN PLANILLA ÓPTICA. ...................................................... 16 FIGURA 6. PORCIÓN DE PLANILLA DE RECOLECCIÓN DE FIRMAS CON CÓDIGO DE BARRAS DE IDENTIFICACIÓN ................................................................................................................... 17 FIGURA 7. CONSULTA DEL NÚMERO DE CÉDULA DEL RESPONSABLE DE LA LISTA. ....................... 17 FIGURA 8. NÚMERO DE IDENTIFICACIÓN DE LA LISTA E ID DE PLANILLA DE RECOLECCIÓN DE FIRMAS. ............................................................................................................................... 18 FIGURA 9. DATOS COMPLETOS DEL TIPO DE LISTA....................................................................... 18 FIGURA 10. VISUALIZACIÓN DE LOS DATOS DE POSTULADOS. ..................................................... 19 FIGURA 11. MODELO DE PLANILLA DE POSTULADOS. .................................................................. 19 FIGURA 12. LECTOR DE CÓDIGOS DE BARRAS. ............................................................................. 21 FIGURA 13. PROPUESTA DE FLUJO DE PROCESOS. ....................................................................... 23 FIGURA 14. ESTRUCTURA ORGANIZATIVA DE LA COMISIÓN ELECTORAL DE LA UCV..................... 25 FIGURA 15. FLUJO DE TRABAJO GENERAL. ................................................................................... 30 FIGURA 16. DETALLE DEL PROCESO DE GENERACIÓN DE REGISTROS ELECTORALES. .................... 31 FIGURA 17. DETALLE DEL PROCESO DE INSCRIPCIÓN DE LISTAS Y CANDIDATOS........................... 33 FIGURA 18. DETALLE DEL PROCESO DE VOTACIÓN. ..................................................................... 33 FIGURA 19. DIAGRAMA DE FLUJO DE LOS PROCESOS DE ESCRUTINIO, TOTALIZACIÓN Y ADJUDICACIÓN. .................................................................................................................... 34 6 FIGURA 20. DETALLE DEL PROCESO DE ESCRUTINIO. ................................................................... 35 FIGURA 21. DETALLE DEL PROCESO DE TOTALIZACIÓN. ............................................................... 36 FIGURA 22. DETALLE DEL PROCESO DE ADJUDICACIÓN. .............................................................. 37 FIGURA 23. DETALLE DEL PROCESO DE PROCLAMACIÓN. ............................................................ 37 FIGURA 24. PROCESO DE SCRUM................................................................................................. 44 FIGURA 25. PROCESO SPRINT. ..................................................................................................... 49 FIGURA 26. PORCIÓN DE DIAGRAMA DE FLUJO DE TRABAJO PARA LA ITERACIÓN 1. ................... 54 FIGURA 27. TABLAS CREADAS PARA LA ETAPA DE GENERACIÓN DE PLANILLAS DE RECOLECCIÓN DE FIRMAS. .......................................................................................................................... 55 FIGURA 28. VISTA PRINCIPAL DEL MÓDULO GENERADOR DE PLANILLAS DE RECOLECCIÓN DE FIRMAS. ............................................................................................................................... 56 FIGURA 29. VISTA DE LOS DATOS DEL REPRESENTANTE DE LA LISTA. ........................................... 56 FIGURA 30. VISTA DEL MENSAJE DE ERROR DE REGISTRO ELECTORAL. ........................................ 57 FIGURA 31. TABLAS CONSULTADAS EN ITERACIÓN 1. .................................................................. 57 FIGURA 32. DETALLE DE LAS LISTAS DESPLEGABLES PARA SELECCIONAR EL CARGO A ELEGIR. ..... 58 FIGURA 33. VISTA DE LOS DATOS DEL CARGO SELECCIONADO POR EL REPRESENTANTE DE LA LISTA. ................................................................................................................................... 59 FIGURA 34. VISTA DE LA PLANILLA YA GENERADA. ...................................................................... 59 FIGURA 35. VISTA DEL ENLACE DE DESCARGA DE ADOBE READER ©. .......................................... 60 FIGURA 36. VISTA DEL MENSAJE DE CONTACTO. ......................................................................... 60 FIGURA 37. PORCIÓN DE FLUJO DE TRABAJO PARA PREINSCRIPCIÓN. ......................................... 62 FIGURA 38. TABLA CREADA PARA LA ETAPA DE PREINSCRIPCIÓN. ............................................... 62 FIGURA 39. VISTA DEL PRIMER PASO DE LA ITERACIÓN 2. ........................................................... 63 FIGURA 40. VISTA DEL MENSAJE DE ERROR EN EL REGISTRO ELECTORAL. .................................... 63 7 FIGURA 41. VISTA DE LA BIENVENIDA Y SOLICITUD DE DATOS DE CONTACTO AL RESPONSABLE DE LA LISTA. .............................................................................................................................. 64 FIGURA 42. VISTA DE SELECCIÓN DE CARGO Y NOMBRE DE LA LISTA. .......................................... 65 FIGURA 43. JAVASCRIPT QUE VERIFICA EL NOMBRE DE LA LISTA AL HACER CLIC EN EL BOTÓN ENVIAR. ................................................................................................................................ 65 FIGURA 44. NORMAS PARA EL NOMBRE DE LA LISTA. .................................................................. 66 FIGURA 45. MENSAJE DE ERROR PARA NOMBRES DE LISTAS YA EXISTENTES PARA EL CARGO SELECCIONADO. ................................................................................................................... 66 FIGURA 46. VISTA DE LOS DATOS DE LA LISTA PARA CONFIRMAR POR EL RESPONSABLE. ............ 67 FIGURA 47. MENSAJE DE CONFIRMACIÓN DEL ENVÍO DEL CORREO ELECTRÓNICO. ..................... 68 FIGURA 48. VISTA DEL CORREO QUE CONTIENE LA INFORMACIÓN DE LA PREINSCRIPCIÓN. ........ 69 FIGURA 49. VISTA DEL MENSAJE DE ERROR EN EL ENVÍO DEL CORREO ELECTRÓNICO. ................ 70 FIGURA 50. PORCIÓN DEL FLUJO DE TRABAJO PARA LA INSCRIPCIÓN DE POSTULADOS. .............. 72 FIGURA 51. PORCIÓN DEL FLUJO DE TRABAJO PARA LA INSCRIPCIÓN DE POSTULANTES. ............. 73 FIGURA 52. ESTRUCTURA DE TABLA DONDE SE ALMACENARÁ TODA LA INFORMACIÓN LOS POSTULADOS O POSTULANTES. ............................................................................................ 74 FIGURA 53. VISTA INICIAL DE LA ETAPA DE INSCRIPCIÓN. ............................................................ 75 FIGURA 54. VISTA DE LA INFORMACIÓN DE LA PREINSCRIPCIÓN. ................................................ 75 FIGURA 55. VISTA DEL MENSAJE DE ERROR EN EL INGRESO A LA INSCRIPCIÓN. ........................... 76 FIGURA 56. VISTA DE LISTADO DE CARGA DE POSTULADOS. ........................................................ 77 FIGURA 57. FORMATO DEL ARCHIVO PARA POSTULADOS A CARGOS DE ESCUELAS ESPECIALES. . 77 FIGURA 58. VISTA DE FORMULARIO DE POSTULADOS DE ESCUELAS ESPECIALES. ........................ 78 FIGURA 59. VISTA DE CONSULTA DE DATOS DE POSTULADOS Y SUS POSIBLES OBSERVACIONES. 78 FIGURA 60. ESTRUCTURA DEL ARCHIVO DE TEXTO CREADO PARA LA INSCRIPCIÓN. .................... 79 8 FIGURA 61. VISTA DE CONFIRMACIÓN DE INSCRIPCIÓN DE POSTULADOS. .................................. 80 FIGURA 62. VISTA DEL FORMULARIO DE INSCRIPCIÓN DE POSTULANTES. ................................... 81 FIGURA 63. VISTA DE CONSULTA DE POSTULANTES. .................................................................... 81 FIGURA 64. VISTA DE INSCRIPCIÓN GUARDADA CON ÉXITO......................................................... 82 FIGURA 65. VISTA DE CONFIRMACIÓN DE ENVÍO DE CORREO ELECTRÓNICO. .............................. 83 FIGURA 66. VISTA DE CORREO DE CONFIRMACIÓN DE INSCRIPCIÓN. .......................................... 83 FIGURA 67. VISTA DE LA PLANILLA DE POSTULACIÓN. ................................................................. 84 9 ÍNDICE DE TABLAS TABLA 1. TABLA DE CONTROL DE ITERACIÓN................................................................................ 50 TABLA 2. TABLA DE CONTROL. ITERACIÓN 1. ................................................................................ 53 TABLA 3. TABLA DE CONTROL. ITERACIÓN 2 ................................................................................. 60 TABLA 4. TABLA DE CONTROL. ITERACIÓN 3 ................................................................................. 71 TABLA 5. CUESTIONARIO DE USABILIDAD PARA SILCUCV. ............................................................ 85 10 INTRODUCCIÓN En los últimos años, los avances tecnológicos aplicados en la realización de eventos electorales ha causado la necesidad de actualización y adquisición de nuevas tecnologías para una mejor y más satisfactoria culminación de dichos eventos. Por esta razón, cómo trabajo especial de grado, se diseñó una solución que permita mejorar el desempeño de uno de los componentes funcionales del actual proceso de elecciones estudiantiles organizados y ejecutados por la Comisión Electoral de la UCV, el subproceso de Inscripciones de Listas y Candidatos. Ésta solución consiste en la actualización del subproceso en sí, con la utilización de herramientas tecnológicas basadas en el uso de Internet y en la creación de documentos digitales, y dándole a los usuarios más protagonismo dentro de dicho subproceso, lo cual podría contribuir a mejorar las condiciones de trabajo dentro de la Comisión Electoral, y al mismo tiempo ayudaría a reducir costos y a mantener la calidad en la realización de futuros eventos electorales. El presente Trabajo Especial de Grado está dividido en cinco capítulos, los cuales se describen seguidamente: Capítulo 1. Planteamiento del Problema: se expone la manera en que se ejecutan los procesos de Elecciones en la actualidad en la Comisión Electoral de la UCV, haciendo énfasis en el subproceso de Inscripción de Listas y Candidatos, explicando sus características principales y sus desventajas, a lo cual se le propone una solución informática detallando los posibles beneficios, objetivos, alcance, entre otros. Capítulo 2. Marco Conceptual: se describe a la Comisión Electoral de la UCV, sus características, actividades, parte del marco legal que rige sus funciones, y los procesos que se ejecutan en los eventos electorales. Capítulo 3. Marco Tecnológico: se detallan las herramientas tecnológicas utilizadas para implementar la solución propuesta, el lenguaje PHP y el Sistema Manejador de Bases de Datos MySQL, su historia, principales características, entre otros. Capítulo 4. Marco Metodológico: se menciona la metodología de diseño de software SCRUM, empleada para la implementación de la solución. Capítulo 5. Marco Aplicativo: se explica la manera en que fue utilizada la metodología mencionada en el capítulo previo y cómo se ajustó al desarrollo de la solución, al igual que se muestran las imágenes resultantes del análisis de la solución y sus respectivas descripciones. 11 UNIVERSIDAD CENTRAL DE VENEZUELA FACULTAD DE CIENCIAS ESCUELA DE COMPUTACION ACTUALIZACION DEL SUBPROCESO DE INSCRIPCION DE LISTAS Y CANDIDATOS PARA LAS ELECCIONES DE REPRESENTANTES ESTUDIANTILES ORGANIZADAS POR LA COMISION ELECTORAL DE LA UCV RESUMEN En la Comisión Electoral de la UCV, existe como problemática la Inscripción de Listas y Candidatos para las elecciones que éste ente convoca, debido a que éste proceso se debe ejecutar de forma manual por el personal administrativo a cargo. El presente trabajo tiene como finalidad desarrollar la actualización del mencionado proceso para la gestión de las inscripciones de los candidatos y sus respectivos requisitos, para ello se procedió a realizar un estudio que permita implementar un sistema basado en formularios web que estará incrustado en la página oficial de la Comisión. La metodología utilizada es SCRUM, que es una metodología ágil de desarrollo de software por etapas o fases. El resultado fue la creación de una serie de formularios en vista web que permitirán descargar las planillas de recolección de firmas, inscribir planchas o listas, e inscribir tanto Postulantes como Postulados, y, finalmente, generar un comprobante electrónico imprimible para certificar la inscripción, que será único para cada inscripción realizada, todo a su vez tomando como insumo principal los datos almacenados en la base de datos del Registro Electoral de la comisión y almacenando los resultados en la misma para garantizar la perdurabilidad de toda la data. Palabras Clave: Formularios Web, Comisión Electoral de la UCV, Inscripción de Listas y Candidatos. 12 CAPITULO 1. PLANTEAMIENTO DEL PROBLEMA 1.1. PROCESOS ELECTORALES EN LA UCV En el presente, los procesos involucrados en los eventos electorales realizados por la Comisión Electoral de la UCV se manejan de forma obsoleta y poco eficiente en comparación a la constante evolución de la tecnología en el mundo entero, que podría permitir mejoras significativas en la ejecución de dichos eventos y ahorros tanto en costos como en insumos necesarios. El paso inicial en cada proceso electoral es el de la Generación de Registros Electorales. Para esto se toman los datos de los profesores, estudiantes y egresados de cada una de las escuelas de todas las facultades de la Universidad y se agrupan para tener conocimiento de los electores que existen dentro del recinto universitario. Posteriormente, se realiza la Inscripción de Listas y Candidatos, que consiste en la postulación de candidatos a los diferentes cargos universitarios. Luego, se produce la Votación donde se le proporciona al elector los medios para seleccionar los candidatos de su preferencia en una elección (Figura 1). Figura 1. Diagrama de Procesos Electorales. 13 Los siguientes pasos en el evento electoral son la realización del Escrutinio que consta del conteo de los votos emitidos y la posterior Totalización para publicar los resultados. Luego se prosigue con la Adjudicación y la Proclamación de los ganadores en las votaciones realizadas. 1.2. SITUACION ACTUAL El proceso actual de inscripción de listas y candidatos a cargos universitarios de estudiantes y egresados es el procedimiento por el cual los candidatos deben cumplir con una serie de requisitos para poder optar por algún cargo al que se quiera postular. Estos candidatos poseen un Responsable el cual realiza todo el proceso de inscripción que comprende desde el retiro de las planillas de inscripción en la sede de la Comisión, pasando por la recolección de firmas y la entrega de los recaudos (Figura 2). Figura 2. Diagrama de Flujo de Trabajo actual. 14 También existen varios entes involucrados en este proceso, entre los que están el Directorio de la Comisión Electoral, la comunidad universitaria y los empleados de la Comisión Electoral. La inscripción de candidatos comienza con la impresión de planillas ópticas, las cuales son encargadas por la Comisión Electoral, a un ente externo a la universidad y que genera costos asociados (Figura 3). Estas planillas se numeran y agrupan en paquetes, específicamente para cada evento diferente, que serán entregadas junto con el instructivo de inscripción a los responsables de las listas de candidatos que optan a ser inscritos en los diferentes eventos electorales por parte del personal de la Recepción de la Comisión. El Responsable de la Lista lleva a cabo el siguiente paso que consiste en llenar las planillas con las firmas y los datos de los postulantes y postulados, que son las personas que están a favor de la inscripción de un candidato y los candidatos, respectivamente, en un tiempo prudencial para la recolecta establecido por la Comisión Electoral. Al concluir este período de tiempo el Responsable de la Lista procede a realizar la entrega formal de las planillas junto a todos los demás recaudos que exige la Comisión. El personal de la Recepción de la Comisión es quien se encarga de recibir estos recaudos efectivamente. Figura 3. Modelos de Planillas de Recolección de Firmas, Postulantes y Postulados actuales. El siguiente paso es ejecutado por El Directorio de la Comisión el cual consiste en revisar los recaudos entregados en el paso anterior y autorizar las inscripciones de listas y candidatos. Seguidamente el Departamento de Computación y Procesos Electorales se dispone a procesar las inscripciones autorizadas por el Directorio de la Comisión actualizando la Base de Datos de Listas y Candidatos, y posteriormente generando el Boletín de Inscripción de Listas y Candidatos Preliminares. 15 Luego, la Comunidad Universitaria realiza la solicitud ante la Comisión de las Impugnaciones de Listas y Candidatos. Estas solicitudes son recopiladas por el personal de la Recepción de la Comisión quienes posteriormente le hacen entrega al Directorio de la Comisión, los cuales revisan dichas solicitudes y toman las decisiones en cuanto a las impugnaciones. Posteriormente, el departamento de Computación y Procesos Electorales procesa las impugnaciones, actualiza nuevamente la Base de Datos de Listas y Candidatos y genera tanto el boletín de decisiones de impugnaciones como el boletín de listas y candidatos definitivos. Consecutivamente se procede al proceso de Votación. 1.3. DESVENTAJAS  Costo de Impresión de Planillas. Las planillas se imprimen con un formato especial para la lectura óptica con los escáneres OPSCAN 5 ó 6. Esta impresión la realiza una empresa externa a la UCV.  Costo de mantenimiento de lectoras ópticas (Figura 4). Figura 4. Escáner para Planillas Ópticas Opscan 5.  Costo de numeración de planillas en cuanto al tóner (Figura 5).  Lectoras ópticas obsoletas y falta de repuestos.  Errores en transcripción de datos. 16 Figura 5. Porción de Numeración en Planilla Óptica.  Aumento en la carga de trabajo para los empleados y trabajadores de la Comisión, sobre todo los últimos días de inscripciones, ya que deben esperar hasta altas horas de la noche para poder finalizar el proceso. 1.4. SOLUCIÓN Gracias a los avances tecnológicos y el Internet, muchos procesos de la vida cotidiana han sido mejorados para aumentar la calidad del trabajo y la calidad de vida en forma general. Por esta razón se propone realizar mejoras en el sistema de Inscripciones de Listas y Candidatos actual a un sistema automatizado a través del uso de una computadora por vía Internet y aprovechando la oportunidad que presenta el nuevo Sistema Electoral que está siendo implementado por el Departamento de Computación y Procesos Electorales. La propuesta comprende el diseño, desarrollo, implementación y mantenimiento de un módulo que podrá integrarse al Sistema Electoral mejorando las distintas etapas que forman parte del proceso de inscripción de listas y candidatos, haciendo uso de los modelos, herramientas y técnicas más usados en el mundo de la computación mediante el uso del Internet. Sistema de Inscripción de Listas y Candidatos (SILCUCV) El Sistema de Inscripción en Línea es un módulo del Sistema Electoral diseñado por el Departamento de Computación y Procesos Electorales de la Comisión Electoral de la UCV, que consiste en un submenú agregado en la página oficial de la Comisión en la que se puede realizar la Inscripción de Listas y Candidatos para cargos universitarios totalmente en línea. El proceso se detalla a continuación:  Cualquier persona de la comunidad universitaria que figure en el Registro Electoral publicado, podrá ingresar en el SILCUCV y el sistema generará automáticamente las planillas de Recolección de Firmas tanto para Listas de Postulantes como para Listas o Planchas Postuladas.  El interesado procederá a imprimir las planillas que necesite para iniciar el proceso de inscripción (Figura 6). 17 Figura 6. Porción de Planilla de Recolección de Firmas con Código de Barras de Identificación  Luego, el interesado será el encargado de recolectar las firmas que llenen las planillas en el tiempo establecido para ese fin tal como lo dispone el Reglamento Electoral de la UCV.  Luego de haber llenado las planillas de Recolección, el Responsable ingresará su número de cédula en SILCUCV (Figura 7). Ésta cédula será verificada dentro del Registro Electoral para corroborar si el Responsable pertenece a la UCV. Si la respuesta es negativa, el Sistema mostrará un mensaje para que el Responsable llene un formulario con sus datos, los cuales serán impresos en pasos siguientes. Si la consulta es positiva, se continúa con el siguiente paso. Figura 7. Consulta del número de cédula del Responsable de la Lista.  El Responsable de la Lista deberá ingresar el ID impreso en la planilla de Recolección de Firmas en SILCUCV y el ID de la Lista para ser verificados dentro de la Base de Datos del sistema (Figura 8). Si son incorrectos, se mostrará un mensaje del error y se dará oportunidad de volver a intentarlo. Si son correctos, se podrá continuar con el siguiente paso.  El Responsable de la Lista completará los datos del tipo de elección y tipo de lista, entre otros, para proseguir con el proceso de inscripción (Figura 9). 18 Figura 8. Número de identificación de la Lista e ID de planilla de Recolección de Firmas. Figura 9. Datos completos del Tipo de Lista.  El Responsable procederá, primeramente, a ingresar los números de cédula de los Postulados, y seguidamente los de los Postulantes. Al ingresar cada grupo de cédulas el Sistema irá verificando si están en el Registro Electoral en el caso de los Postulantes. En el caso de los Postulados, el sistema verificará, además, si cumplen con los requisitos necesarios para ser candidatos. De haber alguna observación, se mostrará el mensaje que corresponda y dará opción para continuar ingresando datos o si se desea modificar algún registro anterior (Figura 10).  El Responsable indicará el momento en que haya culminado el ingreso de los datos. Sí está conforme, el Sistema creará las Planillas de Postulación con los datos anteriores (Figura 11), y enviará un correo electrónico indicando los datos asociados a la Inscripción. Con esta actividad, finaliza el trabajo que será realizado por el Sistema de Inscripciones. Los pasos subsiguientes se mantienen iguales con respecto a la Situación Actual del Proceso ya que son labores que son realizadas por la Comisión Electoral y no forman parte de ésta propuesta. 19 Figura 10. Visualización de los Datos de Postulados. Figura 11. Modelo de Planilla de Postulados.  El Responsable de la Lista será el encargado de descargar, almacenar e imprimir las Planillas de Postulación creadas en el paso anterior. Posteriormente, se dirigirá a la Comisión a consignar todas las planillas impresas desde el Sistema de Inscripciones junto a los demás recaudos necesarios para procesar su inscripción.  La Recepción de la Comisión será la encargada de recibir los recaudos del paso anterior y realizar la lectura de los códigos de barras impresos en las Planillas de Postulación y darle ingreso al Sistema. 20  El Directorio de la Comisión será el ente encargado de verificar los recaudos del paso anterior y autorizar la inscripción.  El Departamento de Computación y Procesos Electorales se encargará de procesar las solicitudes de inscripciones autorizadas para generar los boletines correspondientes. 1.5. OBJETIVO GENERAL Implementar un módulo web basado en formularios que permita la Inscripción de Listas y Candidatos a cargos de representantes estudiantiles, dentro de la plataforma tecnológica de la Comisión Electoral de la UCV en los venideros eventos electorales. 1.6. OBJETIVOS ESPECIFICOS 1. Conceptualizar el actual del proceso de inscripción usado en la Comisión Electoral. 2. Estudiar los requerimientos funcionales y no funcionales implícitos dentro del nuevo diseño. 3. Diseñar formularios web para la captura de la data requerida por la Comisión Electoral para la Inscripción de Listas y Candidatos. 4. Implementar una base de datos en ambiente MySQL para el almacenamiento permanente y la consulta de los datos del registro electoral y de cada elección. 5. Elaborar la documentación de la aplicación. 6. Realizar pruebas en el nuevo sistema. 1.7. ALCANCE La solución propuesta abarcará la captura, consulta, y verificación de los datos de los Postulados y Postulantes, que permitirán la creación de las planillas necesarias con las que se puedan procesar sus inscripciones y su posterior almacenamiento para llevar registros históricos, tomando como base a la población de estudiantes que pertenezcan al Registro Electoral publicado en cada evento específico, lo cual no incluye al personal docente, obrero o administrativo, ni a los Egresados de la UCV. 1.8. REQUISITOS Por parte de la Comisión Electoral:  Una lectora óptica laser o un teclado numérico conectados a una computadora para capturar los códigos de barras de los identificadores de las planillas por parte del personal de la Comisión (Figura 12). 21 Figura 12. Lector de códigos de barras. Por parte del Responsable de la Lista:  Una computadora con conexión a Internet.  Una aplicación para visualizar documentos en formato PDF (Se agregará un enlace que permita descargar un programa para visualizar los documentos PDF en todos los lugares de la página donde se generen planillas).  Una impresora operativa. 1.9. BENEFICIOS Beneficios para la Comisión Electoral  Económicos • Ahorro en Costo de Impresión de planillas. • Reduce el desperdicio del material electoral. • Ahorro en el mantenimiento de lectoras.  De Procesos • Elimina la numeración y distribución de planillas, ya que son propensas a incurrir en errores humanos de transcripción, ya que evita la existencia de lotes de planillas con igual numeración. • Filtra los errores en el llenado de los datos de las planillas para la verificación de condiciones para ser candidatos. • Disminuye la carga de trabajo el último día de inscripción y las salidas a altas horas de la noche (dados los acontecimientos de inseguridad de nuestro país que podrían afectar al personal y a las instalaciones de la Comisión Electoral) • Promueve la modularidad con las demás fases de los procesos operativos involucrados en el sistema electoral de la UCV. Beneficios para la Comunidad Universitaria 22  Acceso desde cualquier parte y en cualquier momento dentro del lapso de inscripción establecido por la Comisión Electoral en el Cronograma Electoral.  Verificación en línea y al momento del ingreso de datos. 1.10. HERRAMIENTAS Y PUESTA EN MARCHA Debido a que la Comisión Electoral cuenta con un sitio web en el que se implementará el nuevo Sistema Electoral, el módulo de inscripciones propuesto debe adaptarse a la mencionada plataforma a través del lenguaje de programación PHP, y los datos serán manipulados bajo el sistema de bases de datos MySQL. También se escogió esta tecnología gracias a que son de código abierto bajo licencia GNU y, como se dijo en apartados anteriores, no generan costos de ningún tipo para la Comisión, y adicionalmente, encajan perfectamente con la plataforma del nuevo sistema. Inicialmente, y para efectos de ésta propuesta, se realizó una investigación ante la Comisión de la manera en que se realizan los eventos electorales y cuáles son las expectativas para un nuevo sistema. En este sentido, se realizaron una serie de entrevistas con el personal de Departamento de Computación y Procesos Electorales de la Comisión para recabar toda la información necesaria y discernir lo que necesitan. En la siguiente figura se muestra el diagrama de procesos que se acordó para la creación del nuevo módulo de inscripciones (Figura 13). En apartados anteriores se describe el funcionamiento propuesto en este flujo de trabajo, en el que el principal cambio que notamos es la implementación de documentos digitales en formato PDF mediante el uso de rutinas y librerías del lenguaje PHP, los cuáles serán impresos por los Responsables de las Listas, y la eliminación de las planillas ópticas. Otro cambio notable es el aumento en la participación de los Responsables de las Listas y la disminución de la carga de trabajo para el personal de la Comisión Electoral. Éste último cambio descrito se debe a que el Sistema de Inscripciones realizará la mayoría de las tareas que hace actualmente el personal de la Comisión, y el Responsable de la Lista también tendrá que realizar nuevas tareas que serán bastante sencillas ya que el Nuevo Sistema de Inscripción le guiará a través de todos los pasos necesarios para llevar a cabo su inscripción. También será necesario almacenar ciertos datos que servirán para corroborar toda la información que provea el Responsable de la Lista en su respectiva inscripción. Por ahora, se propone crear una tabla en una base de datos bajo ambiente MySQL donde se almacene la información personal del Responsable de la Lista, el número de identificación de la Lista, así como una segunda tabla donde se almacene la lista de Postulantes y una tercera con la lista de Postulados, las dos últimas relacionadas con la primera mediante el identificador único de la lista creado por el Sistema de Inscripciones. El sitio web que servirá para ingresar los datos requeridos para las inscripciones será diseñado e implementado en lenguaje PHP y será incrustado dentro de la página oficial de la Comisión y podrá ser accedido desde cualquier computador que tenga conexión a Internet. Dicho site se basará en el uso de formularios y opciones desplegables para ayudar con la introducción de 23 los datos, así como también poseerá verificación de errores y mostrará mensajes describiendo cada caso y una posible solución. Figura 13. Propuesta de Flujo de Procesos. La página web también estará conectada mediante consultas en lenguaje SQL a las bases de datos, tanto del Registro Electoral de la Universidad, como a las tablas que se diseñen para el uso del Sistema de Inscripciones. 24 CAPITULO 2. MARCO CONCEPTUAL 2.1. COMISIÓN ELECTORAL 2.1.1. PERFIL DE LA COMISIÓN ELECTORAL La comisión electoral de la Universidad Central de Venezuela es un ente adscrito al Consejo Universitario y fue creado a través de la Ley de Universidades de fecha 5 de diciembre de 1958. Esta comisión “tiene a su cargo la organización y gestión de los diversos procesos de elecciones universitarias” que se desarrollan en la UCV, como se describe en su Visión: “Esta Comisión tiene como alcance prospectivo estar a la vanguardia de nuevas tecnologías en material Electoral, de manera que las elecciones realizadas por la Institución, se ajusten a las normas pautadas para su ejecución y garanticen validez, confiabilidad y exactitud en sus resultados. Esto porque entre los propósitos de esta Comisión está el de generar confianza en el sistema democrático y que los electores crean en los procesos electorales organizados y ejecutados en esta Dependencia.”(Página Oficial de la Comisión Electoral). 2.1.2. ESTRUCTURA ORGANIZATIVA La Comisión Electoral La Comisión Electoral de la Universidad Central de Venezuela, según el artículo 167 de la Ley de Universidades y el artículo 1 del Reglamento de Elecciones Universitarias de la Universidad Central de Venezuela (REU), está “…integrada por tres (3) profesores designados por el Consejo Universitario; un (1) alumno regular designado por los representantes de los alumnos ante los Consejos de Facultades; y un (1) egresado designado por los representantes de los egresados ante los Consejos de Facultades. Cada uno de los miembros de la Comisión Electoral tendrá un suplente designado en la misma forma y oportunidad que los principales.” La estructura organizativa de la Comisión Electoral se detalla en la Figura 14, la cual fue aprobada por el Consejo Universitario en su sesión ordinaria en fecha 13 de junio de 2007. Aparte de la Comisión Electoral, existen otros organismos electorales que se involucran directamente para dar fiel cumplimiento al Reglamento de Elecciones Universitarias, como son las Subcomisiones Electorales y las Mesas Electorales. 25 Figura 14. Estructura Organizativa de la Comisión Electoral de la UCV. Las Subcomisiones Electorales Las Subcomisiones Electorales son los entes designados por la Comisión Electoral para realizar tareas inherentes a cada facultad. Cada una de estas “estará integrada por dos profesores miembros de la respectiva Asamblea de Facultad y por un estudiante regular de la misma Facultad. En la misma oportunidad la Comisión Electoral nombrará los respectivos suplentes, quienes deberán reunir las condiciones exigidas para los principales.” (Art. 13 de REU). Las Subcomisiones Electorales durarán un año en sus funciones y deberá elegir de su seno un Presidente y designará de fuera de su seno un Secretario, quien debe ser miembro del Personal Docente y de Investigación de la Universidad. El Art. 16 del REU contempla que las atribuciones de cada Subcomisión Electoral son: 1. Nombrar y remover a los integrantes de las mesas electorales e informar, tanto al Decano como a la Comisión Electoral sobre dichos nombramientos y remociones. 26 2. Distribuir entre las mesas electorales el material requerido para las elecciones, y, en caso de que éste no hubiera sido remitido oportunamente, reclamar a la Comisión Electoral. 3. Proponer a la Comisión Electoral los lugares de votación. 4. Levantar las actas de totalización de la respectiva Facultad, según lo dispuesto en el Capítulo V de este Reglamento. 5. Recabar de las mesas electorales las actas de votación y escrutinio y remitirlas a la Comisión Electoral. 6. Informar a la Comisión Electoral de la marcha del proceso electoral y, en especial, de las irregularidades que se hubieran observado. 7. Cumplir con las disposiciones que emanen de la Comisión Electoral. Las Mesas Electorales Las Mesas Electorales son entes designados por cada Subcomisión para velar por el correcto desarrollo del proceso de votación. Cada subcomisión tiene el deber de nombrar tantas mesas electorales sean necesarias para cada facultad y estarán integradas por tres profesores miembros del claustro y un secretario, quien debe ser miembro del personal docente y de investigación de la facultad. Solo en el caso de elecciones de representantes estudiantiles ante el cogobierno universitario, las mesas se integrarán por dos miembros ordinarios del personal docente y de investigación, un estudiante regular y un secretario. Al momento de su instalación, cada mesa electoral elegirá de su seno a un presidente. El Art. 22 del REU contempla que las atribuciones de cada Mesa Electoral son: 1. Presenciar la votación correspondiente con estricta sujeción a lo establecido en el Capítulo III de este Reglamento. 2. Reclamar de la Subcomisión Electoral el material requerido para las elecciones, cuando éste no le hubiera sido entregado oportunamente. 3. Velar por el secreto del voto. A tal efecto, deberá comprobar que el sitio dispuesto para la votación garantiza suficientemente dicho secreto. 4. Colocar en sitio visible en el local de la votación y en día fijado para ella los nombres de los candidatos y de las listas inscritas, con la especificación de los candidatos que las integran. 5. Cuidar del mantenimiento del orden en el lugar de las votaciones, en colaboración con las autoridades respectivas, quienes tomarán las medidas necesarias para garantizarlo, de conformidad con lo dispuesto en el Artículo 6° de la Ley de Universidades. 6. Realizar el escrutinio con estricta sujeción a lo dispuesto en los Capítulos IV y V de este Reglamento. 7. Levantar las actas de votación y de escrutinios, según lo dispuesto en los Capítulos III y V de este Reglamento. 8. Informar a la Subcomisión Electoral de la marcha del proceso electoral y en especial de las irregularidades que se hubieran observado. 27 9. Cumplir con las disposiciones que emanen de la Comisión Electoral y de la Subcomisión respectiva. 2.1.3. OBJETIVOS El propósito de esta Comisión está en generar confianza en el sistema democrático y que los electores crean en los procesos electorales organizados y ejecutados en esta dependencia, alcanzando los siguientes objetivos (Página Oficial de la Comisión):  Tomar las medidas conducentes a la eficaz organización y desarrollo de los procesos electorales.  Garantizar la alternabilidad en los diferentes cargos de las Autoridades Universitarias, de los Decanos, Representantes Profesorales, Estudiantiles y Egresados a los distintos organismos de Cogobierno, una vez vencidos sus respectivos períodos.  Promover la participación democrática de la comunidad profesoral y estudiantil en los procesos electorales. 2.1.4. FUNCIONES Las funciones que debe ejercer la Comisión Electoral de la UCV se detallan seguidamente (Página Oficial de la Comisión):  Mantener actualizados los siguientes registros electorales: Claustro Universitario, Asambleas de Facultades, Estudiantiles por Facultades y Escuelas, Egresados, Registro para elección de autoridades interinas y de los representantes estudiantiles ante los Consejos de Facultades.  Convocar a cada uno de los procesos electorales antes de que estén vencidos los lapsos de duración de los cargos y representaciones.  Planificar, coordinar y dirigir la ejecución de cada uno de los siguientes procesos electorales: • Autoridades Universitarias. • Decanos. • Representantes Profesorales ante el Consejo Universitario, Facultades y Escuelas. • Representantes Estudiantiles ante los organismos de Cogobierno Universitario. • Representantes de los Egresados ante los organismos de Cogobierno Universitario. • Representantes de Estudiantes y Egresados ante la Comisión Electoral.  Elaborar informes de cada una de las elecciones realizadas y remitirlos al Consejo Universitario.  Elaborar las credenciales para los distintos cargos de autoridades, de decanos, representantes profesorales, estudiantiles y egresados, a fin de remitirlos a las instancias correspondientes para su juramentación. 28 2.1.5. ATRIBUCIONES Según el Artículo 9 del Reglamento de Elecciones Universitarias “Son atribuciones de la Comisión Electoral: 1. Tomar las medidas conducentes a la eficaz organización y desarrollo de los procesos electorales. 2. Elaborar y actualizar los registros electorales. 3. Oír y decidir en primera instancia administrativa, las impugnaciones que se formularen en relación con la composición de los registros electorales. 4. Nombrar y remover a los miembros de las Subcomisiones electorales e informar al Decano de la respectiva Facultad sobre dichos nombramientos o remociones. 5. Asegurarse del cumplimiento de sus respectivas funciones por parte de la Subcomisiones Electorales y, en casos de urgencia, asumir directamente el conocimiento de materias correspondientes a dichas Subcomisiones, cuando éstas, por cualquier causa, no hubieren resuelto sobre las mismas. 6. Remitir el Consejo Universitario, cada vez que sea necesario, las listas de los mandatos por finalizar y proponer las fechas de las respectivas elecciones, a fin de proceder a la correspondiente convocatoria. 7. Convocar a elecciones universitarias en los plazos legales. 8. Hacer las convocatorias, participaciones y avisos relativos al proceso electoral. 9. Admitir los candidatos propuestos para las elecciones, previa comprobación de que reúnen las condiciones requeridas para el cargo o representación correspondiente, y de que la postulación se ha hecho de conformidad con la Ley y los Reglamentos. 10. Fijar, previa consulta con la autoridad universitaria respectiva, los locales destinados para las votaciones. El Consejo Universitario será informado de los locales escogidos. 11. Recibir las actas de votación, de escrutinios y de totalización por Facultades y, en el caso de que así fuere necesario, hacer los cómputos pertinentes y elaborar el acta de totalización final. 12. Proclamar a los candidatos electos siguiendo, si fuere el caso, el procedimiento establecido en el Artículo 171 de la Ley de Universidades. 13. Denunciar ante el Consejo Universitario las irregularidades observadas y transmitir aquellas que le hayan sido denunciadas. 14. Calificar la propaganda electoral y, si fuere necesario, ordenar el retiro de la propaganda inapropiada. 15. Preparar y distribuir con la debida anticipación el material necesario para los procesos electorales. 16. Extender las credenciales a los testigos electorales con expresión de la mesa y la elección correspondiente, así como la plancha o candidato que representa. 17. Elaborar para cada proceso electoral, las instrucciones correspondientes para las mesas electorales. 29 18. Organizar y conservar su archivo y los libros, actas y demás recaudos referentes a los procesos electorales. 19. Llevar los protocolos de sus reuniones y archivarlos debidamente. 20. Solicitar a las directivas de los Colegios o Asociaciones Profesionales la designación de los representantes de los egresados, una vez concluidos los lapsos de sus representantes y previa participación al Consejo Universitario. 21. Otorgar la credencial de reconocimiento a los representantes de los egresados, designados por los colegios y asociaciones, una vez verificado el cumplimiento de los requisitos exigidos. 22. Comunicar a las instancias universitarias pertinentes los representantes de los egresados reconocidos por la Comisión para los respectivos organismos de Cogobierno. 23. Convocar, organizar y efectuar la elección para elegir el representante de los egresados ante los Consejos de Facultades que tienen más de un Colegio o Asociación de egresados. 24. Convocar, organizar y efectuar le elección para elegir el representante de los egresados ante el Consejo Universitario. 25. Convocar, organizar y efectuar la elección para elegir el representante de los estudiantes ante la Comisión Electoral entre los Representantes Estudiantiles a los Consejos de Facultad.” 2.2. PROCESOS INVOLUCRADOS EN LOS EVENTOS ELECTORALES En la Comisión Electoral de la UCV intervienen varios procesos en la ejecución de todas las elecciones realizadas dentro de la Universidad. Dichas elecciones están referidas en la Ley de Universidades y en el Reglamento de Elecciones Universitarias de la UCV y se describen a continuación: 1. Elección de Autoridades Universitarias: se elige Rector, Vicerrector Académico, Vicerrector Administrativo y Secretario. 2. Elección de Autoridades de Facultad: se eligen los Decanos correspondientes a cada Facultad. 3. Elección de los Representantes de los Profesores ante el Cogobierno Universitario: se eligen los representantes profesorales al Consejo Universitario, Consejo de Facultad y Consejo de Escuela. 4. Elección de los Representantes de los Estudiantes ante el Cogobierno Universitario: se eligen los representantes estudiantiles al Consejo Universitario, Consejo de Facultad, Asamblea de Facultad y Consejo de Escuela. 5. Elección de los Representantes de los Egresados ante el Cogobierno Universitario: se eligen los representantes de los egresados al Claustro Universitario, Consejo Universitario, Consejo de Facultad, Asamblea de Facultad y Consejo de Escuela. 6. Elección de Candidatos al Consejo de Apelaciones. 7. Elección de los Representantes de los Estudiantes ante la Comisión Electoral. 8. Elección de los Representantes de los Egresados ante la Comisión Electoral. 30 9. Elección de los Representantes ante el Gobierno Estudiantil: para esta elección en particular, la Comisión Electoral presta su apoyo técnico para la realización de las mismas, las cuales se rigen con los mismos procesos establecidos para las elecciones del Cogobierno Universitario. A nivel general, para cada una de las elecciones antes descritas, se sigue un mismo proceso el cual se puede dividir en varios subprocesos, los cuales se representan en la Figura 15. Figura 15. Flujo de Trabajo General. 2.2.1. GENERACIÓN DE REGISTROS ELECTORALES Este proceso se realiza básicamente para dar cumplimiento al Artículo 26 del REU el cual dice que: “Los Registros Electorales serán permanentes, de acuerdo a lo establecido en este Reglamento. Cualquier interesado podrá conocer de su composición en cualquier momento”. Estos registros electorales servirán de base para todos los procesos electorales que se realicen en la UCV y deben ser publicados, como mínimo, en treinta días continuos antes de la respectiva elección (Figura 16). A lo largo del Reglamento de Elecciones Universitarias se identifican varios puntos importantes con respecto a los registros electorales, entre los que podemos mencionar:  No podrá votar quien no aparezca como elector en el Registro Electoral (Art. 25). 31  Ningún elector puede aparecer dos veces en el Registro Electoral preparado para una misma elección. En caso de que para una misma elección, un elector aparezca calificado para votar en dos Escuelas de una misma Facultad o en dos Facultades, ejercerá el derecho a voto solamente en la Escuela o Facultad en que hubiera ingresado primero. En igualdad de circunstancias, la Comisión Electoral dispondrá el lugar donde votará el elector. En caso de que, para una misma elección, un profesor estuviera además legitimado para votar en representación de otro de los sectores de la comunidad universitaria, ejercerá su derecho a voto sólo en su condición de profesor (Art. 32). Figura 16. Detalle del Proceso de Generación de Registros Electorales. Este proceso comprende los subprocesos de Recopilación y Actualización de Registros Electorales, Generación de Registros Electorales Preliminares e Impugnaciones a los Registros Electorales.  Recopilación y Actualización de Registros Electorales: en este subproceso se realiza, primordialmente, el conjunto de tareas necesarias para mantener permanentemente el registro electoral. Esto se hace solicitando a la Secretaría de la UCV, en el caso de los egresados, a los distintos Departamentos de Control de Estudios de todas las Facultades, en el caso de los estudiantes, y a los diferentes Decanatos de todas las Facultades, en el caso de los profesores, todos los datos necesarios para su actualización. Una vez recibidos dichos registros, la Comisión Electoral se encarga de depurarlos e ingresarlos en la base de datos correspondiente.  Generación de Registros Electorales Preliminares: una vez actualizado el Registro Electoral, se genera el Registro Electoral Preliminar que consiste en filtrar la data recopilada en el apartado anterior, tomando como base las condiciones necesarias para ser elector dentro 32 de la Universidad para la elección correspondiente. Las mencionadas condiciones se encuentran contempladas en la Ley de Universidades y en el Reglamento de Elecciones Universitarias de la UCV. Una vez aplicados dichos filtros, se genera un boletín informativo con el contenido del Registro Electoral Preliminar y se abre el lapso de Impugnaciones.  Impugnaciones a los Registros Electorales: durante el lapso de Impugnaciones, cualquier miembro de la comunidad universitaria que posea la cualidad de elector puede objetar la composición del Registro Electoral Preliminar. Existen varios tipos de Impugnaciones: • Por Inclusión: esta se produce debido a la ausencia de algún elector en el Registro. • Por Exclusión: esta se genera dado que un elector considera que él u otro elector no debería estar incluido en el Registro. • Por Cambio de Escuela: se produce cuando un elector considera que, por cursar distintas carreras en paralelo, desea votar en otra Escuela diferente a la que aparece en el Registro, o aparece inscrito en una escuela incorrecta. Este tipo de impugnación se realiza en dos pasos, el primero por exclusión de la escuela actual, y el segundo por inclusión en la escuela deseada. • Por Corrección de Datos: se produce cuando existen errores en los datos personales del elector. 2.2.2. INSCRIPCIÓN DE LISTAS Y CANDIDATOS El proceso de inscripción de Listas y Candidatos, como se refleja en la Figura 17, se alimenta del registro electoral ya depurado correspondiente a la elección a la que sirve como base, cumpliendo con lo establecido en el Artículo 48 del Reglamento de Elecciones Universitarias. Este proceso se conforma por dos tareas que se describen a continuación:  Inscripción de Listas y Candidatos: es el evento por el cual pueden postularse aquellas personas que pertenezcan al Registro Electoral a los cargos a elegir en el evento electoral que organiza la Comisión Electoral. A ésta le corresponde la verificación de las condiciones necesarias para ser candidato.  Impugnaciones de Listas y Candidatos: en este evento se le permite a cualquier persona que pertenezca al Registro Electoral objetar la inscripción de uno o más candidatos o de una plancha, en el evento que esté organizado por la Comisión Electoral. 33 Figura 17. Detalle del Proceso de Inscripción de Listas y Candidatos. 2.2.3. VOTACIÓN El proceso de Votación consiste en facilitar al elector las herramientas necesarias para seleccionar los candidatos de su preferencia durante un evento electoral. En este proceso están involucrados las Subcomisiones Electorales, en el rol de supervisora del proceso a nivel de Facultad, y los Miembros de Mesa, quienes juegan un papel crucial para la operatividad de dicho evento, ya que son los responsables de la ejecución del proceso de Votación en cada mesa que representan (Figura 18). Figura 18. Detalle del Proceso de Votación. 2.2.4. ESCRUTINIO, TOTALIZACIÓN Y ADJUDICACIÓN Aunque los procesos de Escrutinio, Totalización y Adjudicación son procesos bien delimitados a la hora de su ejecución, tienen mucha interoperabilidad entre ellos, por lo cual es necesario definirlos en paralelo (Figura 19). Este procedimiento se mantuvo hasta las más recientes elecciones realizadas en la UCV (Enero 2015). 34 Figura 19. Diagrama de Flujo de los procesos de Escrutinio, Totalización y Adjudicación. El proceso de Escrutinio consiste en el conteo de los votos emitidos por los electores en el proceso de Votación e inicia con el traslado del material electoral junto con las boletas a escrutar al Centro de Operaciones por parte de los miembros de mesa de cada escuela. Los miembros de mesa entregan todo el material utilizado durante el proceso de votación al personal de la Comisión Electoral que se encarga de la Recepción del Material (Figura 20). 35 Figura 20. Detalle del Proceso de Escrutinio. Estas personas separan las boletas utilizadas en el proceso de elección del resto del material electoral y las entregan a los operadores quienes son los encargados de manipular el Sistema SEIUCV que es el sistema electoral que se solía utilizar. Una vez que el operador tiene las boletas comienza a operar el Sistema SEIUCV para escrutar la escuela indicada. Inicialmente, se debe validar que las boletas que posee el operador efectivamente pertenecen a la escuela en la que se encuentran. Para esto se captura y procesa la primera boleta del lote a través de las lectoras ópticas OpScan y se corrobora que la información mostrada por pantalla corresponda con la información de control que tiene la planilla (identificador del evento electoral, facultad y escuela a la que pertenecen). A partir de este momento comienza el proceso de escrutinio de todas las boletas pertenecientes a la escuela, por cada una se procesan sus votos y se muestra el acumulado de votos clasificados por cargo por la pantalla de la estación de trabajo. Una vez procesada una boleta, la lectora óptica marca con un número correlativo y continúa con la siguiente, hasta que se procesen todas las boletas. Una vez procesadas todas las boletas, el operador imprime el Acta de Escrutinio y, simultáneamente, el sistema realiza una totalización parcial de los resultados, esto con el fin de mantener informado al público en general del comportamiento de los resultados. Estas Actas son entregadas a los miembros de mesa quienes de dirigen a una estación donde se encuentra la directiva de la Comisión donde proceden a validar con firma y sello las actas impresas. Por otro lado, el Sistema SEIUCV va realizando la totalización parcial de los resultados, almacenando un archivo en formato .MDB en el Servidor de Totalización. Este sistema va consultando la carpeta local donde se encuentran dichos archivos para ir desplegando los resultados del escrutinio y los resultados parciales de totalización. 36 Figura 21. Detalle del Proceso de Totalización. En el caso que se hayan escrutado todos los entes necesarios (facultad o escuela) para la elección de un cargo se procederá a la Totalización (Figura 21), proceso en el cual se contabilizan todos los votos emitidos para un cargo entre todos los entes que lo eligen, y posteriormente, a la Adjudicación (Figura 22), proceso necesario para dar cumplimiento al Capítulo VI del REU, en el cual se indica que se aplica el sistema de representación personalizada. Además, para la determinación de los puestos obtenidos por las listas y candidatos se toma como base el Art. 171 de la Ley de Universidades, que se cita a continuación: “Salvo el caso de elección de Rector, Vicerrector y Secretario, que será nominal en todos los procesos electorales universitarios donde se elijan dos o más candidatos, funcionará el principio de representación proporcional. A tal efecto se anotará el total de votos válidos para cada lista o plancha de candidatos y cada uno de los totales se dividirá entre uno, dos y tres, y así sucesivamente, hasta obtener para cada uno de ellos el número de cuociente igual al de los candidatos por elegir. Se formará luego una columna final colocando los cuocientes de las distintas planchas en orden decreciente, cualquiera que sea la lista a que pertenezcan, hasta que hubiere tantos cuocientes como candidatos deban ser elegidos. Al lado de cada cuociente se indicará el nombre del candidato y la lista a que corresponde. Cuando resultaren iguales dos o más cuocientes en concurrencia por el último puesto por proveer, se dará preferencia al de la lista que haya obtenido el mayor número de votos, y en caso de empate, decidirá la suerte”. 37 Figura 22. Detalle del Proceso de Adjudicación. 2.2.5. PROCLAMACIÓN En este proceso, y una vez finalizado el lapso de impugnaciones de resultados, se ratifican los cargos adjudicados en el proceso anterior (Figura 23). Un punto de vital importancia en este proceso es la resolución de empates, ya que es aquí donde se toman las decisiones al respecto, basándose en el Artículo 171 de la Ley de Universidades citado anteriormente. Figura 23. Detalle del Proceso de Proclamación. 38 CAPÍTULO 3. MARCO TECNOLÓGICO 3.1. MySQL MySQL es un sistema manejador de bases de datos relacional, multihilo y multiusuario, creado en la década de los 90 por Michael Widenius. MySQL AB es una compañía comercial de software libre, que distribuye y soporta MySQL, y además lo desarrolla bajo un esquema de licencia dual. Por un lado se tiene la licencia GNU GPL (Generic Public License GNU) y por otro, aquellas empresas que desean utilizar este sistema en productos privados, pueden comprar la licencia que les permita su uso. Actualmente MySQL es propiedad de Oracle Corporation, y es el sistema de gestión de bases de datos más popular del mundo con más de 6 millones de instalaciones a lo largo del planeta, con aproximadamente 40 mil descargas del software cada día (Schumacher, R. y Lentz, A., s.f.). MySQL es ampliamente utilizado en aplicaciones Web, en plataformas (Linux/Windows- Apache-MySQL-PHP/Perl/Phyton), y por herramientas de seguimiento de errores. Su popularidad como aplicación Web está muy ligada a PHP, que a menudo aparece en combinación con MySQL, sin embargo existen varias APIs que permiten, a aplicaciones descritas en diversos lenguajes de programación, acceder a las bases de datos MySQL, como son C, C++, Pascal, Delphi (vía dbExpress), Eiffel, Smalltalk, Java (con una implementación nativa del driver de Java), Lisp, Perl, Python, Ruby, REALbasic (Mac), FreeBasic, y Tcl. 3.1.1. CARACTERÍSTICAS DE MYSQL Algunas características del software de bases de datos MySQL son las siguientes (ManrefmySQL, s.f.):  Interioridad y portabilidad • Escrito en C y C++. • Probado en diferentes compiladores. • Es multihilo. Utiliza hilos de kernel, aprovechando así la ventaja de usar multiprocesamiento con varios procesadores. • Proporciona sistemas de almacenamiento transaccional y no transaccional. • Agrupación de transacciones, reuniendo múltiples transacciones de varias conexiones para incrementar el número de transacciones por segundo. • Múltiples motores de almacenamiento (MyISAM, Merge, InnoDB, BDB, Memory/heap, MySQL Cluster, Federated, Archive, CSV, Blackhole y Example en 5.x), permitiendo al usuario escoger la que sea más adecuada para cada tabla de la base de datos. • Ejecuta joins muy rápidos usando un multi-join de un paso optimizado. 39 • Las funciones SQL están implementadas usando una librería altamente optimizada y deben ser tan rápidas como sea posible. Normalmente no hay reserva de memoria tras toda la inicialización para consultas. • El servidor está disponible con un programa separado para usar en un entorno de red cliente/servidor. También está disponible como biblioteca y puede ser incrustado en aplicaciones autónomas.  Tipos de datos • Posee diversos tipos de datos: enteros con/sin signo de 1, 2, 3, 4, y 8 bytes de longitud, float, double, char, varchar, text, blob, date, time, datetime, timestamp, year, set, enum, y tipos espaciales OpenGIS. • Tiene registros de longitud fija y longitud variable.  Sentencias y funciones • Soporte completo para operadores y funciones en las cláusulas de consultas select y where. • Soporte completo para las cláusulas SQL group by y order by. • Soporte para alias en tablas y columnas como lo requiere el estándar SQL. • El comando específico de MySQL show puede usarse para obtener información acerca de la base de datos, el motor de base de datos, tablas e índices. El comando explain puede usarse para determinar cómo el optimizador resuelve una consulta. • Puede mezclar tablas de distintas bases de datos en la misma consulta.  Seguridad • Tiene un sistema de privilegios y contraseñas que es muy flexible y seguro, y que permite verificación basada en el host. Las contraseñas son seguras porque todo el tráfico de contraseñas está encriptado cuando se conecta con un servidor.  Escalabilidad y límites • Soporte a grandes bases de datos. Se tiene MySQL Server con bases de datos que contienen más de 50 millones de registros. • Se permiten hasta 64 índices por tabla. Cada índice puede consistir desde 1 hasta 16 columnas o partes de columnas. El máximo ancho de límite son 1000 bytes. Un índice puede usar prefijos de una columna para los tipos de columna char, varchar, blob, o text.  Conectividad • Los clientes pueden conectar con el servidor MySQL usando sockets TCP/IP en cualquier plataforma. • La interfaz para el conector ODBC (MyODBC) proporciona a MySQL soporte para programas clientes que usen conexiones ODBC (Open Database Connectivity). • La interfaz para el conector J MySQL proporciona soporte para clientes Java que usen conexiones JDBC. Estos clientes pueden ejecutarse en Windows o Unix. El código fuente para el conector J está disponible.  Localización 40 • El servidor puede proporcionar mensajes de error a los clientes en muchos idiomas. • Todos los datos se guardan en el conjunto de caracteres elegido.  Clientes y herramientas • MySQL Server tiene soporte para comandos SQL para chequear, optimizar, y reparar tablas. • Todos los programas MySQL pueden invocarse son las opciones –help o –? Para obtener asistencia en línea. 3.1.2. VENTAJAS DE MYSQL Algunas ventajas que ofrece MySQL son las siguientes (Pecos, D., 2002):  Alta velocidad a la hora de realizar las operaciones, lo que lo hace uno de los gestores que ofrecen mayor rendimiento.  Bajo consumo de recursos para ser ejecutado.  Facilidad de configuración, instalación, administración en comparación a otros SMBD existentes.  Soporta gran cantidad de tipos de datos para las columnas.  Gran portabilidad entre sistemas.  Gestión de usuarios y contraseñas, manteniendo un muy buen nivel de seguridad en los datos. 3.1.3. DESVENTAJAS DE MySQL Algunas desventajas que posee MySQL son las siguientes (Pecos, D., 2002):  Si se tienen muchas tablas en el mismo directorio de base de datos, las operaciones abrir (open), cerrar (close) y crear (create) se hacen muy lentas.  Si se desea ejecutar la sentencia “select” en una gran cantidad de tablas diferentes, existirá una sobrecarga al llenarse la cache, debido a que se deben abrir y cerrar muchas tablas.  Se tiene que procesar cada fila rápidamente para evitar conflictos en el servidor.  No se tiene acceso aleatorio dentro del conjunto de resultados, es decir que las filas solo pueden ser accedidas secuencialmente. Además, se tienen que recuperar todas las filas aún si a la mitad del conjunto de resultados se determina que se ha encontrado la información que se estaba buscando.  Si se escriben funciones definidas por el usuario, deben instalarse ficheros objeto.  Las funciones nativas requieren la modificación de la versión fuente. 41 3.2. PHP 3.2.1. HISTORIA DE PHP PHP comenzó siendo un conjunto de scripts escritos en Perl que permitían a su creador, Rasmus Lerdorf, el control de los accesos a sus Páginas personales. A este conjunto de Scripts se les denominó como Personal Home Page Tools. Poco a poco, Rasmus fue complementando las funcionalidades básicas de sus herramientas escribiendo programas en C. en 1995 decidió liberar el código fuente escrito en C para que cualquiera pudiera utilizarlo e, incluso, colaborar en su mejora. De este modo nació PHP/FI. A finales de 1997 se libera PHP/FI 2.0, pasando de ser el proyecto de una sola persona al desarrollo de un equipo. Tuvo un seguimiento estimado de varios miles de usuarios en todo el mundo, con aproximadamente 50.000 dominios informando que lo tenían instalados, lo que sumaba alrededor del 1% de los dominios de Internet. En junio de 1998 se liberó oficialmente PHP 3.0, anunciado como sucesor oficial de PHP/FI 2.0, a pesar de haber sido completamente reescrito por Andi Gutmans y Zeev Zuraski. Una de las mejores características de PHP 3.0 que trajo a docenas de desarrolladores a unirse y enviar nuevos módulos de extensión, era su gran extensibilidad, además de proveer a los usuarios finales de una sólida infraestructura para muchísimas bases de datos, protocolos, APIs. En su apogeo, PHP 3.0 estaba instalado en aproximadamente un 10% de los servidores Web en Internet. 3.2.2. EVOLUCIÓN DE PHP El siguiente paso en la evolución de PHP consistió en la reescritura de su núcleo, dando lugar a un nuevo motor denominado Zend (acrónimo de los nombres Zeev y Andi). PHP 4.0, basado en este motor, y acoplado con un gran rango de nuevas características adicionales, fue oficialmente liberado en mayo de 2000. Además de la mejora de ejecución de esta versión, PHP 4.0 incluía otras características clave, como el soporte para la mayoría de los servidores Web, sesiones HTTP de forma nativa, ciertas facilidades de orientación a objetos, compatibilidad con las expresiones regulares de Perl, buffers de salida, encriptación, formas más seguras de controlar las entradas de usuarios y muchas nuevas construcciones de lenguaje, entre muchas otras. La última y actual versión de PHP, liberada en julio de 2004, es la 5.0, que está basada en el nuevo motor Zend 2, el cual ha vuelto a ser reescrito por completo. Entre sus características y novedades más resaltantes está el soporte completo para la programación orientada a objetos (que seguramente satisfará a los más apasionados y ortodoxos seguidores de este paradigma de la programación). También incorpora la gestión de excepciones, una nueva librería de XML (libxm12), soporte nativo para el sistema gestor de base de datos SQLite, y mejoras en la gestión de las cadenas de caracteres. PHP 5.0 soporta también MySQLi, una nueva ampliación de MySQL (está 42 diseñada para trabajar con la versión 4.1.2 o superior), la cual, además de la Interfaz habitual, encierra una Interfaz basada en objetos. 3.2.3. ¿QUÉ SE PUEDE HACER CON PHP? Aunque principalmente se utiliza para programar scripts que van a ser ejecutados en servidores Web, no hay que olvidar que puede utilizarse como cualquier otro lenguaje (Perl, C, Python, Shell, entre otros) para escribir programas que se ejecuten desde la línea de comandos, es decir, sin la necesidad de que se ejecute conjuntamente con un servidor Web. De todas formas, es en el entorno Web donde se ha conseguido su mayor aceptación, y es que PHP no sólo nos permite realizar todas las acciones propias de un Script CGI tradicional (procesamiento de formularios, manipulación de cookies, generación de páginas con contenidos dinámicos), sino que también nos proporciona las siguientes posibilidades:  Soporte para múltiples sistemas operativos: Unix (entre otras, Linux, HP-UX, Solaris y OpenBSD), Microsoft Windows, Mac OS X, RISC OS. Actualmente está en preparación para las plataformas IBM OS/390 y AS/400.  Soporte para múltiples servidores Web: Apache, Microsoft Internet Information Server, Personal Web Server, Netscape iPlanet, O´reilly Website Pro Server, Caudium, Xitami, OmniHTTPd y muchos otros.  Soporte para ODBC y extensiones DBX.  Soporte para comunicarse con otros servicios usando protocolos tales como LDAP, IMAP, SNMP, NNTP, POP3, HTTP, COM (en Windows) y muchos otros.  Puede utilizar objetos Java de forma transparente, como objetos PHP.  La extensión de CORBA puede ser utilizada para acceder a objetos remotos.  PHP soporta WDDX para intercambio de datos entre lenguajes de programación Web.  Generación de resultados en múltiples formatos como XHTML, XML, ficheros de imágenes, ficheros PDF y películas Flash.  Manejo de expresiones regulares POSIX Extended o Perl.  Funciones de comercio electrónico como Cybercash, Cybermut Verisign Payflow Pro y CCVS para pasarelas de pago.  Otras extensiones muy interesantes son las funciones del motor de búsquedas mnoGo- search, funciones para pasarelas de IRC, utilidades de compresión (gzip, bz2), convención de calendarios y traducciones. 3.2.4. MODO DE FUNCIONAMIENTO DE PHP El intérprete PHP puede ser ejecutado por el servidor Web de dos modos distintos: como modulo del propio servidor (interfaz SAPI, Server Application Programming Interface) o como programa externo a éste (modo CGI, Common Gateway Interface). 43 A grandes rasgos, ejecutar un programa CGI le supone a la máquina donde se está ejecutando el servidor Web llamar al sistema operativo para que realice las siguientes tareas básicas: cargar el programa en memoria, anotar el programa en la lista de tareas, ejecutar el programa, esperar que termine el programa, descargar el programa de memoria y de la lista de tareas. Tantas veces el cliente pida la ejecución de un programa CGI, tantas veces se repetirán estas acciones en la máquina servidora. Es fácil imaginar que, si el número de peticiones es medio-alto, el rendimiento general de ésta se verá proporcionalmente degradado, no sólo por el número de tareas simultáneas a realizar, sino por la ocupación de la memoria física del equipo servidor con las copias del programa CGI ejecutándose. Por otra parte, podemos pensar en un SAPI como un protocolo que permite acceder directamente a las funciones internas del servidor, por tanto a través del SAPI podemos añadir nuevas funcionalidades a un servidor Web (por ejemplo, entre otros, acceso a base de datos, autenticación de usuarios, cacheado de páginas, generación de imágenes al vuelo). Lo más interesante de ésta característica es que todas estas nuevas funcionalidades se van a ejecutar de forma más rápida y eficiente ya que lo harán en el espacio de memoria del propio servidor. Esto significa que las ejecuciones de los programas las hará el propio servidor Web y, por tanto, serán mucho más rápidas y eficaces (no habrá creación de procesos nuevos ni ocupación extra de la memoria física con copias de éstos). 44 CAPÍTULO 4. MARCO METODOLÓGICO 4.1. SCRUM SCRUM es un método de Desarrollo de Software Ágil creado por Jeff Sutherland y Ken Schwaber en 1995 (Sutherland, J. y Schwaber, K. 2011). SCRUM está centrado en la auto- organización de un equipo de trabajo bajo plazos de entregas quincenales o mensuales llamados Sprints. SCRUM a pesar de ser ampliamente utilizado para desarrollar software también es aplicable para el desarrollo de otros productos comerciales que requieren plazos de entregas breves. Básicamente, en un equipo de desarrollo SCRUM, sus miembros asumen Roles, que determinan sus funciones, derechos y responsabilidades. Los miembros a su vez asisten a reuniones constantes donde se generan artefactos para planificar una iteración quincenal o mensual (Sprint), cuyo principal resultado es un prototipo de software funcional. Las iteraciones se repiten sucesivamente hasta lograr desarrollar un producto con las características deseadas por el cliente (Figura 24). Figura 24. Proceso de SCRUM. 4.1.1. ROLES Un equipo organizado bajo el Método de Desarrollo de Software SCRUM está formado típicamente por un grupo de entre cinco y nueve personas. Sin embargo, SCRUM puede escalar a varios cientos de personas fácilmente, o puede ser usado por equipos individuales. En el equipo SCRUM no se asignan los cargos típicos contemplados tradicionalmente por la ingeniería del software, tales como programador, diseñador, arquitecto de software, tester, entre otros. En su lugar, el equipo SCRUM trabaja colectivamente para ejecutar el volumen de trabajo que se ha comprometido voluntariamente a completar durante una iteración. Este esquema de 45 trabajo se basa en el compromiso que adquiere un miembro con respecto a los demás miembros. La idea es lograr que los miembros de equipo se sientan todos involucrados y comprometidos a trabajar por sus compañeros inmediatos, más que por ser presionados por un cliente o supervisor lejano que desconoce la dinámica interna del grupo de desarrollo. La idea es crear en el equipo la sensación de que todos sus miembros se encuentran juntos en el proyecto, en lugar de que cada individuo trabaje de forma aislada rindiendo cuentas a una autoridad superior. Los roles definidos por SCRUM son: • El Dueño del Producto: es la persona que representa al cliente, bien puede ser un profesional en mercadeo, un gerente de ventas o productos, un usuario experto, etc. Es importante que el Dueño del Producto tenga una idea clara de las características del producto que desea que se desarrolle, tomando en cuenta las tendencias del mercado, la competencia y las tendencias futuras. El Dueño del Producto es el encargado de llenar una lista general con las características deseadas para el producto (Registro del Producto o Product Backlog) ordenadas según su prioridad. A pesar que el Dueño del Producto tiene el derecho a establecer las características del producto, es el equipo de trabajo quién selecciona el monto de trabajo a realizar para implementar las características solicitadas. El Dueño del Producto, por ejemplo, no puede solicitar que se implemente un tercio del Registro del Producto quincenalmente si están planificadas tres iteraciones (un tercio por cada iteración quincenal). El equipo de trabajo es el que mejor conoce la carga de trabajo que pueden manejar por iteración. Del mismo modo, si el equipo de trabajo adquiere el compromiso de implementar las características que ellos se asignaron voluntariamente, el Dueño del Producto tiene el compromiso de no cambiar los requerimientos una vez iniciada la iteración. Los cambios de requerimientos aunque constantes y promovidos por la metodología SCRUM, sólo se permitirán después de completada una iteración, no durante la ejecución de la misma. El Dueño del Producto tendrá el derecho de actualizar el registro del producto sólo antes del inicio de una nueva iteración. • El Maestro SCRUM: es el responsable de asegurarse que el equipo de trabajo sea lo más productivo posible. Para lograr este propósito, el Maestro SCRUM, ayudará al equipo a seguir la metodología SCRUM realizando actividades como organizar las reuniones requeridas, asegurar el buen estado de los artefactos generados, servir de intermediario entre el Dueño del producto y los miembros del equipo, entre otras actividades. El Maestro SCRUM puede ser un gerente de proyectos, pero también puede ser un miembro experimentado de algún equipo SCRUM anterior. Además, el Maestro SCRUM se encargará de remover los factores que impidan que los miembros del equipo puedan 46 realizar el trabajo adecuadamente y de proteger al equipo de trabajo de ser explotado por un Dueño del Producto excesivamente exigente, a su vez de proteger al equipo de sí mismo si en un momento determinado están rindiendo por debajo de sus capacidades. Por tanto, el Maestro SCRUM no sólo debe conocer las capacidades de cada uno de los miembros del equipo sino también la capacidad general del grupo de trabajo. El rol de Maestro SCRUM también puede ser interpretado como un Dueño del Proceso, ya que le mismo ejerce autoridad sobre el proceso SCRUM y no sobre el equipo de trabajo. El Maestro SCRUM podría decidir cambiar el plazo de las iteraciones pero no puede exigir qué trabajo deberá realizar un miembro del equipo durante la próxima iteración. • Equipo de Trabajo: son los principales actores dentro del equipo SCRUM, ya que son los encargados directos de desarrollar el producto. Los miembros del equipo suelen ser programadores, administradores de sistemas, diseñadores, testers, etc. Cada miembro del equipo se compromete con sus compañeros a asumir la carga de trabajo que el mismo considere capaz de realizar. Los miembros del equipo son los que mejor conocen sus habilidades, por tanto, son ellos directamente los que se asignan las cargas de trabajo voluntariamente. Es fundamental que el Equipo de Trabajo conozca muy bien sus capacidades, o que el Maestro SCRUM los ayude a determinarlas. • Terceras Partes: son agentes que aunque no intervienen directamente en el proceso de desarrollo del producto, se ven afectados por el éxito del desarrollo del mismo. Estos agentes pueden ser gerentes, auditores, representantes de otras organizaciones, etc. Básicamente, la idea es que las terceras partes al no estar comprometidas en el desarrollo, ellas solamente están asociadas, no tienen derecho alguno sobre el proceso de desarrollo. Sin embargo, las terceras partes pueden asistir como oyentes a las reuniones SCRUM planificadas, y pueden emitir sugerencias, mas no pueden tomar decisiones. La finalidad es que las reuniones, además de ser el medio mediante el cual se planifican las actividades y se generen artefactos SCRUM, sirvan también como un mecanismo de difusión de información rápido y efectivo. La mejor forma de saber acerca del estado de un proyecto SCRUM es asistiendo a las reuniones planificadas por el equipo de trabajo. 4.1.2. REUNIONES • Reunión de Planificación Sprint: es una reunión donde asisten el Dueño del Producto, el Maestro SCRUM y el equipo de trabajo completo. Ésta se realiza antes del inicio de cada Sprint. Durante la reunión el Dueño del Producto describe las características generales que desea que el producto posea en orden de prioridad, o también llamado Registro del Producto. Los miembros del equipo deben hacer la suficiente cantidad de preguntas como para que una lista detallada de tareas pueda ser elaborada a partir del Registro del Producto. No es requerido que el Dueño del Producto especifique exhaustivamente todas las 47 características deseadas en el producto a partir el primer Sprint, ya que en los Sprints siguientes se puede modificar el Registro del Producto. Una vez establecido el Registro del Producto los miembros del equipo de trabajo seleccionan aquellas características que se implementarán en el Sprint por comenzar. El equipo de trabajo también se debe poner de acuerdo con el Dueño del Producto para establecer una meta general para el Sprint y ésta debe ser breve y auto-descriptiva. Los artefactos generados por la reunión de planificación son: la meta general de Sprint y el Registro del Sprint. El Registro del Sprint estará compuesto a su vez por un conjunto de Historias de Usuario. • Reunión diaria: ésta es llevada a cabo por todos los miembros de equipo, el Maestro SCRUM y el Dueño del Producto. Usualmente es efectuada en la mañana antes de cada jornada de trabajo y no debe durar más de 15 minutos, su carácter es informal y sus asistentes deben ser breves y concisos. El Maestro SCRUM normalmente se limita a preguntar tres cosas a cada miembro del equipo: ¿qué hiciste ayer? ¿qué harás hoy? Y ¿hay algún impedimento que no te permita avanzar? La idea de la reunión no es vigilar si cada miembro del equipo cumple con la planificación, sino que tengan una idea del volumen de trabajo que pueden realizar diariamente. Es responsabilidad del Maestro SCRUM tratar de eliminar todos los obstáculos reportados por los miembros del equipo lo más rápido posible durante la jornada de trabajo. • Reunión de Revisión Sprint: ésta reunión es el resultado natural del Sprint, una vez concluido, los miembros del equipo preparan una presentación de los resultados la cual debe reflejar que la meta general del Sprint fue alcanzada. De no ser el caso es responsabilidad del Maestro SCRUM analizar las razones por las cuales no se cumplió la meta del Sprint. La idea es presentar el prototipo o la característica implementada de forma funcional y sin errores, y que no se lleve más de dos horas de duración para que no consuma tiempo de trabajo valioso para el equipo. • Reunión Retrospectiva: durante ésta reunión el equipo reflexiona acerca de los resultados obtenidos en el Sprint concluido con la finalidad de proponer nuevas formas para mejorar su rendimiento y motivación. La dinámica de la reunión se puede llevar de varias maneras pero usualmente en Maestro SCRUM le pregunta a los miembros del equipo qué se debe empezar a hacer, qué se debe dejar de hacer y qué se debe continuar haciendo. 4.1.3. ARTEFACTOS • Registro del Producto: es una lista de características ordenadas por prioridad. Cada entrada de la lista contiene un ítem con la descripción de las funcionalidades deseadas en el producto. Dicha lista se elabora mediante la realización de una tormenta de ideas entre el Dueño del Producto y el Equipo de Trabajo, ambas partes escriben lo que desean del 48 producto de forma flexible y natural. Esto permite que la primera iteración pueda ser iniciada sin tener que invertir gran cantidad de tiempo y esfuerzo en documentación previa. • Los ítems representados en las entradas de la lista pueden ser: características, errores, trabajo técnico (actualización de plataforma de trabajo, o de versión de bibliotecas, por ejemplo) y adquisición de conocimiento. La forma más usual de expresar cada ítem es mediante una Historia de Usuario, la cual tiene la siguiente sintaxis: Como <algún rol> puede <algún objetivo> de modo que <alguna razón>. • Las Historias de Usuario del Registro del Producto deben ser breves y descriptivas, en realidad es más importante la discusión que el Dueño del Producto y el Equipo de Trabajo hagan sobre las mismas, siendo la Historia de Usuario en sí un recordatorio de dicha discusión. • Meta Sprint: es una descripción breve que representa lo que el equipo de desarrollo desea lograr durante una iteración, ésta es redactada de forma colaborativa entre el Dueño del Producto y el equipo de desarrollo y puede ser utilizada como una descripción resumida de las actividades que está realizando el equipo de desarrollo. El éxito de la iteración se evaluará contra la Meta Sprint, en lugar de contra cada uno de los ítems específicos seleccionados en el Registro del Producto. • Registro del Sprint: consiste en una lista de tareas identificadas por el equipo de trabajo durante la planificación del Sprint, en este evento, el equipo selecciona una cantidad de características a desarrollar del Registro del Producto, expresadas en la forma de Historias de Usuario, e identifica las tareas necesarias para completarlas. El Registro de Sprint puede ser actualizado con una frecuencia diaria por los miembros del equipo a medida que se vayan desarrollando las características, pero se debe tratar de minimizar las veces que se actualiza el registro durante un día. • Lista de Impedimentos: es la lista donde el Maestro SCRUM lleva un seguimiento de todos los bloqueos, impedimentos, inconvenientes, y decisiones pendientes que pudieran representar una amenaza al buen desarrollo del proyecto. El Maestro SCRUM deberá actualizar esta lista diariamente y es su responsabilidad tratar de identificar y resolver todos los problemas que surjan durante el desarrollo. • Incremento: es el prototipo funcional o demo que se planteó desarrollar en la Meta Sprint. El mismo puede ser una nueva versión del producto o una funcionalidad específica lista para ser entregada, totalmente probada y documentada. • Retroalimentación Visual: se trata de todos los artefactos generados durante el proceso de desarrollo que son necesarios para implementar el producto. En esta categoría se agrupan los diagramas entidad-relación, los diagramas físicos de bases de datos, diagramas de flujo, diagramas arquitectónicos, diagramas de objetos de dominio, de clases, casos de uso, entre otros. Sin embargo, SCRUM define un nuevo artefacto llamado Gráfico de Progreso (Burndown Chart) el cual representa el progreso del equipo desarrollando el producto. Éste 49 representa inicialmente la suma de las horas requeridas para completar todas las tareas del Sprint actual, luego diariamente a medida que el equipo de desarrollo completa las tareas. 4.1.4. PROCESOS SPRINT Los Procesos Sprint consisten en la realización de un conjunto de actividades (reuniones, tareas, resolución de impedimentos, entre otros) llevadas a cabo por agentes que asumen roles. Estas actividades generan artefactos necesarios para desarrollar el incremento del Sprint. La figura 25 identifica los elementos de un proceso Sprint y representa como se relacionan dichos elementos durante el ciclo de desarrollo. Figura 25. Proceso Sprint. 50 4.2. MODIFICACIÓN DEL MÉTODO DE DESARROLLO DE SOFTWARE Debido a que el método de desarrollo de software SCRUM no especifica con exactitud qué artefactos deben ser generados en cada iteración, y a que la naturaleza del desarrollo está enmarcada dentro de un contexto académico, es necesario definir un Método de Desarrollo de Software Ágil que permita establecer la planificación de las actividades y artefactos necesarios para lograr la implementación del Sistema de Inscripción de Listas y Candidatos dentro del Sistema Electoral de la Comisión Electoral de la UCV. Para lograr lo antes mencionado se toman en cuenta aspectos considerados por SCRUM, pero también se simplifican otros aspectos y se incluyen otros nuevos. Los principales cambios en el método empleado se describen a continuación: • Roles: los roles del Dueño del Producto y el Maestro SCRUM para el desarrollo de ésta tesis son ejercidos por la tutora institucional. El equipo de trabajo está compuesto por un único miembro, el estudiante que desarrolla éste T.E.G. No se consideran terceras partes involucradas. • Artefactos: el principal artefacto que se tomará de SCRUM es el Registro del Producto, ya que el mismo plantea los requerimientos funcionales a desarrollar necesarios para completar los objetivos específicos planteados por el presente T.E.G. También se fijará una meta Sprint por cada iteración la cual consistirá en una descripción breve de la meta a lograr en cada iteración. Además, cada iteración generará un documento de control a modo de resumen cuyo contenido consistirá en una tabla con el formato presentado en la Tabla 1. En la misma se listan las tareas propuestas para completar la iteración. Adicionalmente, por cada iteración, se describirán cuatro apartados: planificación, diseño, implementación y pruebas, en los casos que apliquen y no necesariamente todos. En estos apartados se explicará cómo se logró implementar cada una de las tareas pertenecientes a la iteración respectiva. Tabla 1. Tabla de control de iteración N° Fecha Tareas Tipo 1 DD/MM/AA Descripción de la Tarea 1 Módulo desarrollado 1 2 DD/MM/AA Descripción de la Tarea 2 Módulo desarrollado 2 n DD/MM/AA Descripción de la Tarea 3 Módulo desarrollado 3 Cada tarea generará posiblemente artefactos adicionales descriptivos del incremento desarrollado, estos artefactos son incluidos dentro de la retroalimentación visual correspondiente a la iteración que correspondan. 51 • Reuniones: de las reuniones planteadas por SCRUM sólo se llevarán a cabo la Reunión de Planificación Sprint y la Reunión de Revisión de Sprint (en ella se puede realizar la evaluación retrospectiva). Debido a que el equipo de trabajo está compuesto por un único integrante, se prescinde de las reuniones diarias, además, la Reunión de Planificación de Sprint de la siguiente iteración puede realizarse inmediatamente después de concluida la Reunión de Revisión Sprint de la iteración anterior. 52 CAPÍTULO 5. MARCO APLICATIVO 5.1. ITERACIONES 5.1.1. ITERACIÓN 0 En esta iteración inicial se establece el Registro del Producto con el dueño del producto y el equipo de trabajo, y posteriormente, el primer Meta Sprint. Meta Sprint: definir los requerimientos funcionales del Sistema de Inscripción de Listas y Candidatos de la UCV (SILCUCV) y establecer las iteraciones necesarias para cumplir su implementación. En esta iteración inicial se establecieron las características generales que deberá tener el sistema para realizar la inscripción de listas y candidatos en los eventos que convoque la Comisión Electoral de la UCV, las que se listan seguidamente: • Para completar una inscripción se deben cumplir tres pasos: generar las planillas de recolección de firmas, realizar la preinscripción del nombre de la lista con su respectivo comprobante, y finalmente, inscribir Postulados y Postulantes, igualmente con su comprobante. • Para generar las planillas de recolección de firmas, el usuario deberá ingresar su número de cédula de identidad para verificar si existe dentro del Registro Electoral de la UCV. • El usuario deberá seleccionar el o los cargos a los cuales desee generar planillas de recolección de firmas, tantas como desee, y éstas deberán ser identificadas unívocamente. • El usuario deberá imprimir las planillas que generó, y que son recaudos necesarios para poder formalizar la inscripción. • En la preinscripción del nombre de la lista, el usuario deberá ingresar nuevamente su número de cédula para verificar, de igual forma, si existe dentro del registro electoral de la UCV, ya que la persona que imprimió las planillas de recolección de firmas no es necesariamente la misma que hará la preinscripción. • El sistema deberá comprobar si existe una lista inscrita previamente con el nombre que propone el Responsable en el momento de la preinscripción y en caso de ser positivo, dar la posibilidad al Responsable de corregir el nombre de su lista. • El usuario deberá seleccionar el cargo para el cual desea preinscribir el nombre de una lista, el cual debe ser único para cada cargo. • El sistema debe generar un comprobante de preinscripción para corroborar el nombre de la lista y el cargo asociado. Éste comprobante debe contener un identificador único para cada preinscripción entre otros datos importantes. • En la inscripción, el usuario deberá ingresar su cédula nuevamente y un identificador que los asocie a una lista de forma única para poder realizar la inscripción, y ésta persona debe ser la misma de la preinscripción. 53 • El usuario deberá ingresar los números de cédulas de cada Postulado y Postulante al cargo por el cual se están inscribiendo para que el sistema pueda verificar los requisitos para cada uno y generar una respuesta. • El sistema generará un comprobante único para cada inscripción. • El sistema deberá poder almacenar los números de planillas de recolección de firmas y el número de cédula de la persona que la generó, así como también, almacenar el nombre de la lista en la preinscripción y un identificador único para cada una. Y por último, almacenar las cédulas de Postulados y Postulantes para cada cargo y lista de forma única. Tomando en consideración los requerimientos planteados en el Registro del Producto se propone un plan de 3 iteraciones sucesivas, una por cada etapa, de una duración aproximada de entre 5 y 6 semanas para completar dichos requerimientos, los que se enumeran a continuación: • Actualización del flujo de trabajo actual. • Diseño e implementación de tablas dentro de la base de datos de la Comisión Electoral. • Implementación de interfaz de formularios web dentro del marco de la página de la Comisión Electoral. • Generación de identificadores y comprobantes electrónicos para las distintas etapas del proceso de inscripciones. 5.1.2. ITERACIÓN 1 Meta Sprint: generar la planilla de Recolección de Firmas para los distintos cargos a elegir. La iteración 1 consistió en el desarrollo del módulo de generación de planillas de recolección de firmas. Esta se llevó a cabo en un plazo de 5 semanas, y cuyas actividades se detallan en la tabla 2. Tabla 2. Tabla de Control. Iteración 1. N° Fecha Tareas Tipo 1 27/10/2014 Actualizar flujo de trabajo para el proceso de impresión de planillas de recolección de firmas Workflow 2 03/11/2014 Agregar modelo del datos para almacenar la data generada Tablas y relaciones en BD 3 06/11/2014 Implementar nuevas tablas en BD Base de Datos 4 10/11/2014 Diseño de interfaz y formularios Interfaz para captura de datos 5 12/11/2014 Desarrollo de Módulo de Planillas de Recolección de Firmas Generar Código DISEÑO Para la actualización del flujo de trabajo actual, se establecieron las características que debe cumplir el usuario como mínimo, en la etapa de generación de planillas de recolección de firmas. Éstas características se describen a continuación: 54 • El usuario deberá ingresar su número de cédula para realizar cualquier operación dentro del sistema, y como requisito mínimo, ésta deberá estar dentro del registro electoral actual. En esta etapa, el usuario, funge como Representante de la Lista. • El usuario deberá escoger el cargo a ser elegido y la respectiva dependencia a la cual pertenece. • El usuario deberá imprimir la planilla con los datos seleccionados en el paso anterior. • El usuario podrá imprimir tantas planillas como desee. En cumplimiento de estas características, se realizó un nuevo flujo de trabajo en el que se ilustran los pasos mencionados anteriormente para completar esta iteración (Figura 26). Como se puede apreciar en el gráfico, se realizan dos verificaciones, una para certificar que la cédula ingresada pertenece al registro electoral, y otra para que el Representante de la Lista pueda confirma que la planilla que va a imprimir sea la que realmente seleccionó, y en el caso de que haya cometido algún error pueda regresar y corregirlo. Figura 26. Porción de diagrama de flujo de trabajo para la iteración 1. 55 En el diseño de las tablas que se incorporarán a la base de datos de la Comisión se estudió el diagrama de bases de datos original, agregando las nuevas tablas que serán utilizadas para generar las planillas de recolección de firmas. El diagrama original de la Comisión consta de 56 tablas para almacenar toda la información referente a los eventos electorales de la UCV. Debido a que las inscripciones se realizaban de manera manual y en papel, no existía ninguna tabla relacionada o destinada a guardar los datos de inscripciones de listas y candidatos. Para almacenar la información de la generación de planillas de recolección de firmas se diseñaron dos tablas: bitacora_insc y planilla_insc, cuya estructura podemos ver en la Figura 27. Figura 27. Tablas creadas para la etapa de generación de planillas de recolección de firmas. La tabla bitácora_insc lleva el registro de qué persona ingresó al módulo y en qué fecha lo hizo, para llevar control histórico de entradas al sistema, así la cédula pertenezca o no al registro electoral de la UCV. La tabla planilla_insc lleva el registro de todas y cada una de las planillas que se generen por el sistema almacenando el número de identificación de la planilla, la cédula del representante de la lista, el evento y la elección a los cuales pertenece la planilla, al igual que la fecha en que se generó. IMPLEMENTACIÓN Para implementar las tablas se utilizó el framework phpMyAdmin de AppServ, el cual permite crear tablas y manipularlas dentro de la base de datos de la Comisión. Para la interfaz se crearon archivos ejecutables en lenguaje PHP los cuales se cargaron en el servidor de la Comisión y se ejecutaron a través de un navegador web. La primera vista solicita al usuario su número de cédula (Figura 28), si se encuentra en el registro electoral, se continúa a la siguiente vista en la que se pueden ver los datos asociados al número de cédula ingresado (Figura 29), sino muestra un mensaje de error (Figura 30). Esto se realiza a través de consultas SQL a la base de datos del registro electoral, específicamente en la tabla persona, donde se almacenan los datos personales de cada persona que pertenezca a la comunidad universitaria de la UCV, como la cédula, nombres y apellidos, fecha 56 de nacimiento, entre otros. Seguidamente, sí existe la cédula en la tabla persona, se consulta dicha cédula en la tabla estudiantepregrado, donde se almacena toda la información académica de la persona que ingresa al sistema, por nombrar algunos, facultad, escuela, créditos inscritos (Figura 31). Figura 28. Vista principal del módulo generador de planillas de recolección de firmas. Figura 29. Vista de los datos del Representante de la Lista. 57 Figura 30. Vista del mensaje de error de registro electoral. Figura 31. Tablas consultadas en iteración 1. 58 Seguidamente se muestran los datos de la elección para generar las planillas correspondientes, mediante listas desplegables dinámicas. Para poder visualizar el contenido de cada lista dinámica, se deberá seleccionar un valor de la lista anterior. Así, seleccionamos el evento, para que pueda cargarse la elección. Luego de seleccionar la elección, se carga la lista de las facultades y sucesivamente las escuelas, en los casos donde apliquen (Figura 32). Figura 32. Detalle de las listas desplegables para seleccionar el cargo a elegir. Estas listas dinámicas se logran mediante consultas a las tablas evento, elección, facultad y escuela, haciendo operaciones en las tres últimas para que coincidan con la selección anterior a cada una. O lo que es lo mismo, se selecciona el evento, con este dato se cargan las elecciones que coincidan con el evento seleccionado, con la elección se cargan las facultades que coincidan tanto con el evento como con la elección, luego se selecciona la facultad y se cargan las escuelas que coincidan tanto con el evento, la elección y la facultad que se seleccionaron anteriormente. También se contemplan los casos más simples de selecciones como en el caso de Consejo Universitario, donde solo se seleccionan el evento y la elección, o en el Consejo de Facultad, donde se suma a la selección la facultad, y así en lo sucesivo. El paso siguiente muestra todos los datos de la elección seleccionados en el paso anterior para confirmarlos con el Representante de la Lista. Si hay alguna incongruencia o error, es posible volver al paso anterior para corregir, en caso contrario, se procede a generar la planilla correspondiente. Es de hacer notar que el botón “Imprimir Planilla” no hace que nuestro navegador avance para poder brindarle al usuario la posibilidad de generar otras planillas sin necesidad de realizar todos los pasos desde el principio nuevamente (Figura 33). 59 Figura 33. Vista de los datos del cargo seleccionado por el representante de la lista. El paso final es la visualización de la planilla generada por el sistema, la cual, dependiendo de la aplicación que tenga el usuario instalada en su computadora para visualizar archivos pdf, se mostrará en una pestaña del navegador (Figura 34), o en el peor caso, solicitará su descarga. Cabe acotar que para tratar de facilitar la visualización de la planilla, se incorpora en todas las vistas un enlace en el cual se podrá hacer clic, y se dirigirá a la página de descargas de la aplicación Adobe Reader © (Figura 35). Figura 34. Vista de la planilla ya generada. 60 Figura 35. Vista del enlace de descarga de Adobe Reader ©. La planilla fue diseñada con la ayuda de la clase FPDF de PHP, la cual se puede descargar desde su página oficial, www.fpdf.org, que es una clase que se referencia desde el archivo php que se esté ejecutando. Igualmente, se muestra en la vista final, un mensaje que invita a los usuarios a contactar a la Comisión vía telefónica o e-mail en los casos en que haya algún problema con las planillas (Figura 36), bien sea por generación o visualización de las mismas. Esto es posible gracias a la implementación de las tablas mencionadas en apartados previos, ya que permite revisar y comprobar si existe algún problema con las planillas generadas y a quién pertenecen. Figura 36. Vista del mensaje de contacto. 5.1.3. ITERACIÓN 2 Meta Sprint: implementación del módulo de preinscripción de listas o planchas. En esta iteración se desarrolló el módulo de preinscripción de listas o planchas que apoyan a los candidatos que se desean postular a un cargo. Esta etapa tuvo una duración de 5 semanas y cuyas actividades se detallan a continuación (Tabla 3). Tabla 3. Tabla de Control. Iteración 2 N° Fecha Tareas Tipo 1 20/10/2014 Actualizar flujo de trabajo para el proceso de preinscripción Workflow 2 27/11/2014 Diseñar modelo del datos para almacenar la data generada Tablas y relaciones en BD 3 30/10/2014 Implementar nuevas tablas en BD Base de Datos 4 03/11/2014 Diseño de interfaz y formularios Interfaz para captura de datos 5 06/11/2014 Desarrollo de Módulo de Preinscripción Generar Código http://www.fpdf.org/ 61 DISEÑO Para esta iteración se actualizó el flujo de trabajo a partir del último paso ejecutado en la iteración anterior, y se establecieron nuevas características y nuevos pasos que los usuarios deberán cumplir para realizar su preinscripción, los cuales de describen seguidamente: • El usuario debe ingresar con su número de cédula, el cual debe estar en el registro electoral de la UCV. En esta etapa, el usuario, cambia su rol de Representante a Responsable de la Lista, y éste será el único que podrá continuar con la presente y las siguientes etapas de la inscripción. • El usuario debe ingresar una dirección de e-mail y un número de teléfono válidos para llevar control de las entradas de nombres de listas en el sistema, e igualmente para recibir los comprobantes correspondientes para cada etapa restante del proceso. • El usuario debe seleccionar el cargo por el cual realiza la preinscripción de la lista o plancha. • El usuario debe ingresar el nombre de su lista cumpliendo con los parámetros establecidos por la Comisión para dichos nombres, los cuales se detallan en el instructivo correspondiente a esta etapa (Anexo A) y también se contemplan en el Boletín N° 036/2005. • El sistema debe corroborar que los nombres de listas no se repitan para un mismo cargo y comprobar que cumplan con las normas establecidas por la Comisión para éste fin. • El sistema debe generar un comprobante de preinscripción de nombre de lista. • El sistema debe almacenar toda la data necesaria para llevar control de las actividades. La actualización del flujo de trabajo que cumple con las características antes mencionadas se muestra en la Figura 37. Como podemos observar en la figura, se realizan tres verificaciones, la primera para confirmar que la cédula ingresada pertenezca al Registro Electoral, la segunda para verificar el nombre de la Lista, y la tercera para confirmar los datos de la preinscripción con el usuario. En todas se muestra un mensaje de error y se le da la oportunidad al usuario de regresar para corregirlo. La tabla preinscripción almacena toda la información referente al responsable y al nombre de la lista: cédula, teléfono, e-mail, nombre de la lista, número de confirmación, entre otros datos importantes. Todos ellos para saber quién hizo qué y cuándo en el proceso de preinscripción de una lista (Figura 38). 62 Figura 37. Porción de flujo de trabajo para Preinscripción. Figura 38. Tabla creada para la etapa de preinscripción. 63 IMPLEMENTACIÓN En la primera vista de esta etapa solicitamos la cédula de identidad del responsable de la lista (Figura 39), quien será a partir de este momento la única persona que podrá continuar con el proceso hasta el final, como se mencionó en apartados anteriores. Si ésta cédula no pertenece al Registro Electoral, se muestra un mensaje del error y se le da la opción al Responsable de regresar e introducir el número correcto (Figura 40). Figura 39. Vista del primer paso de la iteración 2. Figura 40. Vista del mensaje de error en el Registro Electoral. 64 Al igual que en la iteración anterior, se consulta el número de cédula en la tabla persona, y si existe, se consultan los datos del Responsable de la Lista en la tabla estudiante pregrado, haciendo reutilización de código ya probado. En la siguiente vista se da la bienvenida al Responsable y se le solicitan una dirección de correo electrónico válida y un número de teléfono para contactarlo (Figura 41). Figura 41. Vista de la bienvenida y solicitud de datos de contacto al Responsable de la Lista. En la próxima vista se solicitan los datos del cargo a elegir, evento, elección, facultad y escuela, y adicionalmente se solicita el nombre de la lista (Figura 42). Para la selección de los datos del cargo se reutilizó el código de la iteración anterior para las listas dinámicas y se siguieron los mismos términos de selección. 65 Figura 42. Vista de selección de cargo y nombre de la lista. Para validar el nombre de la lista se utilizó un script en lenguaje Javascript en el que se compara el texto introducido con una expresión regular para comprobar que se cumplieran todas las normas establecidas por la Comisión para este fin (Figura 43). Esta expresión regular usada dentro del script analiza el texto introducido por el usuario comparando cada carácter individual con el contenido de la expresión: • A-z: verifica que el carácter introducido sea una letra mayúscula o minúscula entre a y z, o entre A y Z. • 0-9: verifica que el carácter introducido sea un número entre 0 y 9. • Ññ: verifica que el carácter sea Ñ o ñ. • +$: verifica que no sea escrito ningún carácter especial. Figura 43. Javascript que verifica el nombre de la lista al hacer clic en el botón enviar. Las normas se colocan como información importante debajo del campo del nombre de la lista, y se pueden apreciar en la imagen siguiente (Figura 44). 66 Figura 44. Normas para el nombre de la lista. Al hacer clic en el botón Siguiente, el sistema verificará que los datos de la lista no coincidan con alguna preinscripción realizada previamente en la tabla preinscripción mediante una consulta SQL. Si existe coincidencia se muestra un mensaje de error invitando al Responsable a regresar al paso previo para seleccionar un nuevo nombre. En caso contrario se continúa con el proceso (Figura 45). Figura 45. Mensaje de error para nombres de listas ya existentes para el cargo seleccionado. En la vista siguiente se le muestran al Responsable los datos de la preinscripción que se le solicitaron en las vistas previas. Sí está conforme debe hacer clic en “Guardar Lista”, en caso contrario debe seleccionar “Volver” para regresar al paso anterior (Figura 46). 67 Figura 46. Vista de los datos de la lista para confirmar por el Responsable. Al hacer clic en “Guardar Lista”, el Sistema almacena los datos de la vista anterior en la tabla preinscripcion, y configura el cuerpo de un correo electrónico con estos mismos datos que será enviado a la dirección de correo que ingresó el Responsable con una copia a la dirección webceucv2010@gmail.com, la cual es propiedad del Departamento de Computación de la Comisión Electoral de la UCV y fue creada con el fin de mantener contacto con las personas que deseen comunicarse con el Departamento antes mencionado. Esta copia se envía como constancia de que se realizó efectivamente la preinscripción, y el correo original debe ser leído por el Responsable para poder continuar con la siguiente etapa, la Inscripción. A continuación, el Sistema muestra una pantalla con el mensaje de confirmación del envío del correo de la preinscripción (Figura 47). El recurso del correo fue realizado gracias a la colaboración de la Dirección de Tecnología de Información y Comunicaciones de la UCV, ya que nos facilitaron el canal por el cual se hizo posible el envío de los correos electrónicos de las preinscripciones a través de su plataforma tecnológica, y la recomendación del uso de la clase phpmailer de PHP. mailto:webceucv2010@gmail.com 68 Figura 47. Mensaje de confirmación del envío del correo electrónico. La información que contiene el correo se muestra en la Figura 48, presentada seguidamente. El número de confirmación es un valor que se crea a partir del último código creado por el sistema, el cual es hallado mediante una consulta a la tabla preinscripcion. Éste código, al igual que el número de planilla de recolección de firmas (campo id_planilla_insc de la tabla planilla_insc) de la iteración anterior es creado a partir de la fecha configurada en el equipo que se esté utilizando en el momento. El código se compone de la siguiente manera: AAMMDDXXXX, donde • AA: corresponde al año en curso • MM: corresponde al mes en curso • DD: corresponde al día actual • XXXX: corresponde a un número correlativo generado a partir del valor más reciente creado en la tabla. En el caso extremo en que la tabla esté vacía, se genera a partir de 0001. Así para el 1 de Enero de 2015, con la tabla vacía, se genera el número 1501010001, suponiendo que éste valor haya sido el último creado en la tabla, el siguiente sería 1501010002, y así sucesivamente. Este formato minimiza las probabilidades de que un código se repita en el sistema, aunado a esto, también se establece el campo como unique en la tabla correspondiente. 69 Figura 48. Vista del correo que contiene la información de la preinscripción. Si por alguna razón falla el envío del correo en el momento que se genere, el sistema captura está excepción y muestra un mensaje con la descripción del error e invitando al Responsable a ponerse en contacto con la Comisión, tanto por correo electrónico como por teléfono, pero a la vez confirmando que su preinscripción se guardo con éxito, por lo que toda la información fue almacenada correctamente (Figura 49). Como se puede apreciar en la imagen, se colocó el botón “Siguiente”, ya que el Responsable tiene la opción de continuar con la siguiente etapa directamente, la etapa de Inscripción. Pero también es posible cerrar la ventana del navegador y continuar en otro momento ya que se pensó tanto en la continuidad de estas dos etapas como en su segmentación, ésta última dando oportunidad a los Responsables de las Listas para recolectar todos los recaudos que necesita para completar exitosamente su inscripción. 70 Figura 49. Vista del mensaje de error en el envío del correo electrónico. Con la vista anterior, se finaliza el proceso de preinscripción de Listas en el proceso de Inscripción de Listas y Candidatos en el sistema SILCUCV. Es de hacer notar que en las capturas realizadas se aprecian los enlaces “Crear” y “Modificar”, dentro del submenú “Inscripción” en la página de la Comisión, y en éste documento se habla de “Preinscripción” e “Inscripción”, los cuales significan lo mismo respectivamente. Esto se debe a que por el dinamismo de las preinscripciones, se tomó la decisión, entre la tutora institucional y el autor de éste TEG, de cambiar los nombres para facilitar el entendimiento por parte de los usuarios del Sistema. 5.1.3. ITERACIÓN 3 Meta Sprint: implementación del módulo de inscripciones de candidatos. En esta iteración se implementó el módulo de inscripciones de Postulantes y Postulados a cargos a elegir en la elección correspondiente. Tuvo una duración de 6 semanas para su desarrollo, esto debido a las festividades navideñas del año 2014, tal como se muestra en la Tabla 4. 71 Tabla 4. Tabla de Control. Iteración 3 N° Fecha Tareas Tipo 1 01/12/2014 Actualizar flujo de trabajo para el proceso de inscripción Workflow 2 08/12/2014 Diseñar modelo del datos para almacenar la data generada Tablas y relaciones en BD 3 11/12/2014 Implementar nuevas tablas en BD Base de Datos 4 15/12/2014 Diseño de interfaz y formularios Interfaz para captura de datos 5 07/01/2015 Desarrollo de Módulo de Inscripción Generar Código DISEÑO En esta iteración se actualizó el flujo de trabajo a partir del último paso de la iteración previa, lo cual generó nuevas características y se establecieron nuevos pasos que el Responsable deberá cumplir para llevar su inscripción a una culminación exitosa. Estas características se describen a continuación: • El usuario debe ingresar su número de cédula y el número de confirmación enviado por correo electrónico para continuar con el proceso. Si estos datos no son correctos, se da al usuario la posibilidad de corregir en caso de error de tipeo, y si persiste el error no se podrá continuar con la Inscripción y el usuario debe ponerse en contacto con la Comisión. • El sistema debe mostrar la información de las etapas anteriores al usuario para corroborar que sean los correctos, esta información contiene el nombre de la lista y el cargo a elegir, entre otros. • El sistema debe dar opción de inscribir Postulados y Postulantes por separado. En el caso de solo haber Postulados se le informará al Responsable. • Para Postulantes, el sistema debe verificar si sus cédulas existen en el Registro Electoral. Para Postulados, el sistema debe verificar que los candidatos cumplan con las normas establecidas para poder serlo a la vez que pertenezcan al Registro Electoral. • El sistema deberá mostrar si algún Postulado o Postulante tiene alguna observación por la falta de alguno de los requisitos del punto anterior. • El sistema debe poder brindar al usuario la opción de modificar o eliminar las cédulas de su Inscripción tantas veces como el Responsable lo requiera antes de finalizar el proceso de Inscripción. • El sistema debe generar el comprobante de inscripción y enviarlo al correo electrónico del Responsable. • El sistema debe almacenar todos los datos generados por la Inscripción. A continuación se muestra el flujo de trabajo asociado al proceso de Inscripción de Postulados (Figura 50). 72 Figura 50. Porción del flujo de trabajo para la Inscripción de Postulados. En la siguiente imagen se puede apreciar el flujo de trabajo para la Inscripción de Postulantes (Figura 51). Es de hacer notar que el flujo de trabajo completo tuvo que ser seccionado para poder apreciar lo mejor posible lo que describe cada uno en su respectiva etapa. 73 Figura 51. Porción del Flujo de Trabajo para la Inscripción de Postulantes. 74 Para almacenar toda la información de cada Inscripción se diseñó una única tabla que cumple con los requerimientos de dicho proceso. La estructura de esta tabla se muestra en la imagen a continuación (Figura 52). Figura 52. Estructura de tabla donde se almacenará toda la información los Postulados o Postulantes. IMPLEMENTACIÓN La primera vista creada para esta iteración consta del ingreso del número de cédula del Responsable de la Lista y el número de confirmación enviado a su correo luego de completar la preinscripción para poder continuar con el proceso de Inscripción.(Figura 53). Si los datos anteriores son correctos, el sistema muestra la información que corresponde a la preinscripción realizada previamente junto a la opción habilitada para la inscripción por defecto, es decir, Postulados (Figura 54). Esta opción permanecerá habilitada siempre que el usuario no Guarde su lista de Postulados, ya que para inscribir Postulantes, deben haberse inscrito los Postulados previamente. En caso contrario, se muestra un mensaje de error y se invita al Responsable a contactarse con la Comisión Electoral a través de correo electrónico o vía telefónica, además del botón “Volver” (Figura 55). 75 Figura 53. Vista inicial de la etapa de Inscripción. Figura 54. Vista de la información de la Preinscripción. 76 Figura 55. Vista del mensaje de error en el ingreso a la Inscripción. Seguidamente, se muestra el formulario para cargar las cédulas de los Postulados junto al número de planilla de recolección de firmas que se imprimió para la elección seleccionada (Figura 56). La cantidad de cédulas necesarias para completar este paso se toma a través de una consulta en la tabla “eleccion” en el campo maximo_votos el cual contiene la cantidad de Postulados que se necesitan para una elección particular, asociado al campo suplente, el que indica si la cantidad de Postulados tiene suplentes a elegir, por lo que la cantidad de Postulados se multiplica por 2. Por ejemplo, si para la Elección de Consejo Universitario se requiere de 3 Postulados Principales y el valor de suplente es 1, el total de Postulados es 6. En los casos de escuelas especiales en las elecciones de Centros de Estudiantes, se muestran los cargos asociados a cada Postulado en el orden respectivo y se le asigna a cada cédula tanto en el archivo (Figura 57) como en la tabla “candidatos” en el campo “cargo_gob”, e igualmente en el formulario web y la consulta de cédulas de candidatos (Figura 58). Al hacer clic en el botón Consultar, se envían todas las cédulas ingresadas y sus respectivos números de planillas para consultarlos en la base de datos y se verifican los requisitos para ser Postulados, y al mismo tiempo, se almacena toda esta información en un archivo de texto para resguardo. Estos requisitos son, ser estudiante regular, estar en último bienio en su respectiva carrera y no tener más de dos años ejerciendo un cargo de representación estudiantil. El requisito de último bienio no se verifica para las elecciones de Consejo Universitario, Consejo de Facultad, Consejo de Escuela y Coordinación Central de Extensión, para las demás elecciones estudiantiles sí es un requisito necesario. En el caso del requisito de más de dos años en ejercicio de un cargo de representación estudiantil no se verifica para Federación de Centros Universitarios, Asamblea de Facultad y Centros de Estudiantes, mientras que para el resto sí. 77 En la figura siguiente se muestran los resultados de las consultas y las verificaciones anteriores, y adicionalmente algunos mensajes de importancia para completar la inscripción correctamente (Figura 59). Figura 56. Vista de listado de Carga de Postulados. Figura 57. Formato del archivo para Postulados a cargos de escuelas especiales. 78 Figura 58. Vista de Formulario de Postulados de escuelas especiales. Figura 59. Vista de consulta de datos de Postulados y sus posibles observaciones. El archivo de texto creado para resguardar los datos ingresados, se implementó debido a que algunas elecciones requieren una gran cantidad de cédulas (ej. Asamblea de Facultad de Medicina, requiere 138 Postulados Principales más Suplentes, total 276 Postulados, y 80 Postulantes), y esto ayuda a prevenir la perdida repentina de estos datos, así como también 79 permitir a los usuarios realizar cualquier cambio que requieran en sus listas y la cantidad de veces que necesite. La estructura del archivo se muestra a continuación (Figura 60). En este punto, es posible cerrar la aplicación y regresar en cualquier momento para continuar agregando cédulas o realizar cualquier tipo de modificación de la inscripción de Postulados, y esto se podrá hacer siempre y cuando no se presione el botón Guardar Inscripción. Figura 60. Estructura del archivo de texto creado para la inscripción. En la primera línea se almacena la información de la elección: • Identificador del evento: 4 • Identificador de la elección: 030200 • Identificador de Facultad: 0000 • Identificador de Escuela: 0000 • ID en la tabla preinscripción: 648 • ID en la tabla elección: 1 • Nombre de la Lista: COMPUCIENS • Cantidad de Postulados: 6 • Cédula del Responsable de la Lista: V-13864570 • Código de Confirmación: 1504060001 De la segunda línea en adelante, se almacenan los datos de los inscritos: • Posición en la planilla • Cédula de Identidad • Nombre • Observación 80 • Número de planilla de Recolección de Firmas en la que aparece registrado. En la última línea del archivo se almacena la palabra “Guardado”. Esta línea significa que ya el usuario ingresó todas las cédulas que necesita, las consultó y se verificaron los requisitos, y finalmente presiona el botón Guardar Inscripción (Figura 59), con lo que se escribe esta palabra al final del archivo, y se almacenan todas las cédulas en la tabla “Candidato” creada para este fin (Figura 52). El nombre del archivo también contiene información que permite distinguir entre una elección y otra. En el caso de los Postulados el archivo lleva el nombre: “Postulados_’cédula del responsable’_’código de confirmación’.txt”, como se aprecia previamente en la Figura 60. En la siguiente vista nos encontramos con la confirmación de que se guardó la inscripción de los Postulados y la opción de Inscribir Postulantes (Figura 61). Figura 61. Vista de confirmación de inscripción de Postulados. Al hacer clic en Inscribir Postulantes nos dirigimos a la vista del formulario de ingreso de cédulas de Postulantes, que es muy parecido al de Postulados (Figura 62). En este formulario se recaban los mismos datos que en el formulario anterior: cédulas y números de planillas de recolección de firmas. Seguidamente, se realizan las mismas consultas anteriores y se verifican los requisitos para ser Postulantes: ser estudiante regular y pertenecer al ámbito universitario que corresponda con la elección, ejemplo: si es elección de Consejo de Facultad de Ciencias, el Postulante debe pertenecer a la Facultad de Ciencias, o si es Consejo de Escuela de Biología, el Postulante debe 81 pertenecer a la Escuela de Biología. Igualmente, se muestran las observaciones que pueda tener cada cédula (Figura 63). Figura 62. Vista del formulario de inscripción de Postulantes. Figura 63. Vista de consulta de Postulantes. Al igual que en la vista de Postulados, en este punto se puede cerrar el sistema y regresar en cualquier momento para realizar cualquier cambio en la inscripción de Postulantes, hasta que se presione el botón Guardar Inscripción, e igualmente se crea un archivo asociado a la inscripción, 82 en este caso de Postulantes, y que tiene el nombre “Postulantes_’cédula del responsable’_’código de confirmacion’.txt”. Si el usuario hace clic en el botón Guardar Inscripción en cualquiera de los puntos de ingreso de cédulas, el sistema automáticamente escribirá la palabra “Guardado” en el archivo respectivo y no se podrá modificar la inscripción asociada al mismo, ya que se considera que ya se realizó la inscripción. Al hacer esto, el sistema muestra un mensaje indicando que la inscripción se guardó con éxito y el botón “Finalizar Inscripción” (Figura 64). Figura 64. Vista de Inscripción guardada con éxito. El paso siguiente, muestra un mensaje de correo enviado (Figura 65), al igual que en la etapa de Preinscripción, en el que se envía un correo electrónico al Responsable de la Lista en el que se detallan los datos de la elección y las cantidades de cédulas que se ingresaron en la inscripción, tanto de Postulados como de Postulantes, e invitándolo a dirigirse a la sede de la Comisión Electoral para consignar los recaudos y planillas respectivas para finiquitar la Inscripción (Figura 66). Igualmente, se dispone el botón “Imprimir Planilla”, para que el usuario pueda visualizar o descargar la planilla de Postulación de su Lista. Y el paso final para el proceso de Inscripción es donde se muestra la planilla de Postulación que se crea al presionar el botón “Imprimir Planilla”, la cual está hecha en formato .pdf con la clase FPDF de php, al igual que la planilla de recolección de firmas (Figura 67). 83 Figura 65. Vista de confirmación de envío de correo electrónico. Figura 66. Vista de correo de confirmación de inscripción. 84 Figura 67. Vista de la planilla de Postulación. Con esta vista se da por finalizada la actualización del subproceso de inscripciones de listas y candidatos enmarcado dentro del proceso de elecciones realizadas por la Comisión Electoral de la UCV. 5.2. PRUEBAS DE ACEPTACIÓN Luego de finalizar la implementación del sistema SILCUCV, se le realizó un pequeño cuestionario a la Tutora Institucional, quién es la Jefa del Departamento de Computación y Procesos Electorales de la Comisión Electoral y a su vez la encargada de la revisión de los avances y pruebas de la aplicación. Este cuestionario consiste en una serie de preguntas relacionadas con conocer su opinión con respecto a la usabilidad de la aplicación web SILCUCV, la cual se refiere a la efectividad, eficiencia y satisfacción con la que la aplicación puede ser comprendida, utilizada y ser atractiva al usuario. También se relaciona con la organización intencional de la aplicación. A continuación se muestran las preguntas contenidas en el cuestionario y las respuestas concedidas por la Tutora Institucional: 85 Tabla 5. Cuestionario de Usabilidad para SILCUCV. Totalmente de acuerdo De acuerdo Ni de acuerdo ni en desacuerdo En desacuerdo Totalmente en desacuerdo 5 4 3 2 1 N° Ítem 5 4 3 2 1 1 Los títulos, menús y textos de la aplicación son legibles X 2 Los colores utilizados contribuyen a la percepción adecuada de la aplicación X 3 Los identificadores de la aplicación son claros y precisos X 4 Se ofrece una organización que facilita la navegación X 5 El diseño de la aplicación favorece su uso X 6 La aplicación se puede ejecutar de manera intuitiva X 7 Es una aplicación fácil de usar X 8 Los elementos de ayuda en la aplicación son útiles X Como se puede apreciar, las respuestas proporcionadas por la Tutora Institucional fueron satisfactorias ya que en la mayoría de los casos estuvo totalmente de acuerdo con las preguntas planteadas en el cuestionario de usabilidad de la aplicación. Es de hacer notar, que en éste caso en particular no fue posible realizar una encuesta a una mayor cantidad de personas debido a que los usuarios hicieron sus respectivas inscripciones fuera de las instalaciones de la Comisión. 86 CONCLUSIONES En la búsqueda de la solución al problema planteado en los procesos electorales, específicamente en el proceso de Inscripción de Listas y Candidatos para la elección de representantes estudiantiles, se logró obtener la actualización de este proceso mediante la creación de una aplicación basada en formularios web, permitiendo de manera más ágil y eficiente la inscripción de los candidatos. Para cumplir satisfactoriamente los objetivos de esta actualización, se comenzó con la realización de estudios sobre el proceso de inscripción de listas y candidatos, y una vez comprendido, se pudo realizar efectivamente el levantamiento de la información y el análisis de los requerimientos que permitieron establecer los lineamientos más importantes involucrados en el mencionado proceso. Bajo el marco legal propuesto y siguiendo los lineamientos estudiados se logró la solución planteada para resolver la problemática con la utilización de las herramientas estudiadas en el Capítulo 3 de éste T.E.G., dando origen al Sistema de Inscripción de Listas y Candidatos (SILCUCV), el cual fue concebido con la ayuda de la metodología de diseño de software SCRUM brindándole a la Comisión Electoral la oportunidad de obtener mejoras y beneficios en la ejecución de procesos electorales. Finalmente, se creó una aplicación web basada en formularios que permite la inscripción de listas y candidatos a cargos de representantes estudiantiles en los futuros eventos electorales, y el mismo estará integrado al nuevo sistema electoral implementado en las pasadas elecciones de enero de este año, mejorando así el proceso per se y haciendo uso de la tecnología a través de Internet. 87 RECOMENDACIONES A pesar de que el desarrollo de esta aplicación representa un aporte significativo para todas las elecciones realizadas por la Comisión Electoral de la UCV, se pueden considerar algunas mejoras que permitan el constante crecimiento del sistema, es decir: • Optimizar la base de datos realizando mejoras en las estructuras de almacenamiento definidas para los campos de cada una de las tablas que componen el SILCUCV y algunas de las tablas que sirven para consultar los datos usados. • Implementar un módulo de recepción de planillas, tanto de recolección de firmas como de postulación en el que se lean los códigos impresos en ellas para certificar su validez. • Implementar un módulo administrativo en el que se puedan hacer cambios a las inscripciones, bien sea por corrección de errores de los usuarios, corrección de errores de sistema o por impugnaciones de inscripciones. 88 BIBLIOGRAFÍA Gaceta Oficial N° 1.429: Ley de Universidades, Extraordinario. 08-09-1970. Reglamento de Elecciones Universitarias de la Universidad Central de Venezuela. UCV. 31-10- 2007. Universidad Central de Venezuela, Vicerrectorado Administrativo: Manual de Organización de la Universidad Central de Venezuela. Caracas, 2008. Gutiérrez A. y Bravo García, G., PHP 5 a Través de Ejemplos. 1° Edición. Enríquez, A., Maldonado, J., Nakamura, Y., y Nogueron, G., MySQL. Recuperado de http://www.gridmorelos.uaem.mx/~mcruz//cursos/miic/MySQL.pdf. MySQL Reference Manual. (2014). Recuperado de http://dev.mysql.com/doc/. Guevara, J. (2013). Desarrollo de un Motor de Búsquedas para la recuperación de documentos académicos de la Facultad de Ciencias. Caracas, Venezuela: Universidad Central de Venezuela. Recuperado de http://busconest.ciens.ucv.ve/documento/resultado_consulta. Schwaber, K. y Sutherland J. (2013), The Scrum Guide. En Read the SCRUM guide. Recuperado en https://www.scrum.org/. El Proceso Scrum. Imagen recuperada en http://www.reserv.com.ar/metodologia.php. http://www.gridmorelos.uaem.mx/~mcruz/cursos/miic/MySQL.pdf http://dev.mysql.com/doc/ http://busconest.ciens.ucv.ve/documento/resultado_consulta https://www.scrum.org/ http://www.reserv.com.ar/metodologia.php 89 ANEXO A Instructivo para la descarga de planillas de recolección de firmas creado por la Comisión Electoral para el evento Elecciones de Representantes Estudiantiles 2015-2016, disponible en la dirección: http://www.ucv.ve/organizacion/consejo-universitario/comision-electoral-ucv.html, que se muestra a continuación. http://www.ucv.ve/organizacion/consejo-universitario/comision-electoral-ucv.html 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 ÍNDICE DE FIGURAS ÍNDICE DE TABLAS INTRODUCCIÓN RESUMEN CAPITULO 1. PLANTEAMIENTO DEL PROBLEMA 1.1. PROCESOS ELECTORALES EN LA UCV 1.2. SITUACION ACTUAL 1.3. DESVENTAJAS 1.4. SOLUCIÓN 1.5. OBJETIVO GENERAL 1.6. OBJETIVOS ESPECIFICOS 1.7. ALCANCE 1.8. REQUISITOS 1.9. BENEFICIOS 1.10. HERRAMIENTAS Y PUESTA EN MARCHA CAPITULO 2. MARCO CONCEPTUAL 2.1. COMISIÓN ELECTORAL 2.1.1. PERFIL DE LA COMISIÓN ELECTORAL 2.1.2. ESTRUCTURA ORGANIZATIVA La Comisión Electoral Las Subcomisiones Electorales Las Mesas Electorales 2.1.3. OBJETIVOS 2.1.4. FUNCIONES 2.1.5. ATRIBUCIONES 2.2. PROCESOS INVOLUCRADOS EN LOS EVENTOS ELECTORALES 2.2.1. GENERACIÓN DE REGISTROS ELECTORALES 2.2.2. INSCRIPCIÓN DE LISTAS Y CANDIDATOS 2.2.3. VOTACIÓN 2.2.4. ESCRUTINIO, TOTALIZACIÓN Y ADJUDICACIÓN / 2.2.5. PROCLAMACIÓN CAPÍTULO 3. MARCO TECNOLÓGICO 3.1. MySQL 3.1.1. CARACTERÍSTICAS DE MYSQL 3.1.2. VENTAJAS DE MYSQL 3.1.3. DESVENTAJAS DE MySQL 3.2. PHP 3.2.1. HISTORIA DE PHP 3.2.2. EVOLUCIÓN DE PHP 3.2.3. ¿QUÉ SE PUEDE HACER CON PHP? 3.2.4. MODO DE FUNCIONAMIENTO DE PHP CAPÍTULO 4. MARCO METODOLÓGICO 4.1. SCRUM / 4.1.1. ROLES 4.1.2. REUNIONES 4.1.3. ARTEFACTOS 4.1.4. PROCESOS SPRINT 4.2. MODIFICACIÓN DEL MÉTODO DE DESARROLLO DE SOFTWARE CAPÍTULO 5. MARCO APLICATIVO 5.1. ITERACIONES 5.1.1. ITERACIÓN 0 5.1.2. ITERACIÓN 1 DISEÑO IMPLEMENTACIÓN 5.1.3. ITERACIÓN 2 DISEÑO IMPLEMENTACIÓN 5.1.3. ITERACIÓN 3 DISEÑO IMPLEMENTACIÓN 5.2. PRUEBAS DE ACEPTACIÓN CONCLUSIONES RECOMENDACIONES BIBLIOGRAFÍA ANEXO A