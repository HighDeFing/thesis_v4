TEG_HedrasPerez_RocioCarrero 1 UNIVERSIDAD CENTRAL DE VENEZUELA FACULTAD DE CIENCIAS ESCUELA DE COMPUTACIÓN “Desarrollo de un Sistema Web de gestión, control e inscripción de Actividades Extracurriculares para el C.E.A.P.U.C.V.” Trabajo Especial de Grado presentado ante la ilustre Universidad Central de Venezuela, por las bachilleres: Carrero D. Rocio N. C.I.: 16.033.322 Pérez T. Hedras C. C.I.: 16.411.775 Para optar por el Título de Licenciado en Computación Tutora: Prof. Ana Romero Caracas, Octubre de 2008 2 Universidad Central de Venezuela Facultad de Ciencias Escuela de Computación Aplicaciones de la Tecnología en Internet ACTA DEL VEREDICTO Quienes suscriben, Miembros del Jurado designados por el Consejo de Escuela de Computación, para examinar el Trabajo Especial de Grado, presentado por los Bachilleres Hedras C. Pérez T. C.I.: 16.411.775 y Rocio N. Carrero D. C.I.: 16.033.322, con el título “Desarrollo de un Sistema Web de gestión, control e inscripción de Actividades Extracurriculares para el C.E.A.P.U.C.V.”, a los fines de cumplir con el requisito legal para optar al título de Licenciado en Computación, dejan constancia de lo siguiente: Leído como fue dicho trabajo por cada uno de los Miembros del Jurado, se fijó el día 29 de octubre de 2008, a las 10:00 AM, para que sus autores lo defiendan en forma pública, en la Sala I de la Escuela de Computación, mediante la exposición oral de su contenido, y luego de la cual respondieron satisfactoriamente a las preguntas que le fueron formuladas por el Jurado, todo ello conforme a lo dispuesto en la Ley de Universidades y demás normativas vigentes de la Universidad Central de Venezuela. Finalizada la defensa pública del Trabajo Especial de Grado, el jurado decidió aprobarlo. En fe de lo cual se levanta la presente Acta, en Caracas a los 29 días del mes de octubre del año dos mil ocho, dejándose también constancia de que actuó como Coordinador del Jurado la Profesora Tutora Ana Romero. _________________ Prof. Ana Romero (Tutor) ___________________ ___________________ Prof. Marco Gollarza Prof. Wilfredo Rangel (Jurado Principal) (Jurado Principal) 3 AGRADECIMIENTOS A Dios, por ayudarme en los momentos difíciles y por permitirme alcanzar cada una de mis metas. A toda mi familia, en especial a mis padres, Miriam y Jacobo, por haberme brindado todo su amor, apoyo y dedicación. Gracias por sus consejos y por estar allí en los momentos en que más los necesité. Los adoro. A mi novio Carlos, por todo el amor y cariño brindado. Gracias por la comprensión, colaboración y atención incondicional que me has brindado a lo largo de este trabajo de Tesis. Te amo mi vida. A mi amiga y compañera de Tesis Rocio, por toda la confianza y paciencia. Gracias por tu amistad incondicional y por todos los momentos compartidos. Te quiero amiga. A mi tutora Ana Romero, por toda la dedicación, apoyo y ayuda brindada. Gracias por aclarar nuestras dudas y por el tiempo invertido en nosotras durante el desarrollo del Trabajo Especial de Grado. A todos mis amigos por haberme brindado su apoyo, amistad y por darme ánimos de seguir adelante. A todas las personas que de una manera u otra ayudaron en la elaboración de esta investigación. Muchas gracias a todos!! Hedras C. Pérez T. 4 Agradezco a Dios sobre todas las cosas y a la Virgen por haberme dado las fuerzas para llegar a donde estoy en estos momentos. Gracias a toda mi familia, a mis padres Luisa y Pedro por ser el apoyo de cada día y su confianza incondicional, también gracias a mi hermano Johnson por su apoyo total en todas las circunstancias presentadas a lo largo de este Trabajo Especial de Grado. A mi mejor amiga Herlyn por siempre estar conmigo y apoyarme siempre. Muchas gracias a mi prometido y alma gemela Jonathan, sin tus fuerzas y apoyo todo esto fuera algo efímero, gracias por estar incondicional en todos estos momentos, en fin gracias por existir. Gracias a la Profesora y Tutora Ana Romero por brindarnos su sabiduría y corregirnos en cada aspecto de este trabajo, para poder alcanzar esta meta. A mi compañera de tesis Hedras, gracias por soportar mis locuras y por acompañarme en todas estas noches de fuerte trabajo duro que hemos pasado programando y redactando en este Trabajo Especial de Grado. A todos mis compinches de la Universidad que a lo largo de la carrera hemos compartido momentos inolvidables, en especial a: Vanessa, Marla, Yaina, Mafer, Hector y Porfi. Muchas Gracias. Rocio N. Carrero D. 5 TABLA DE CONTENIDO CAPÍTULO I – INTRODUCCIÓN .......................................................................... 15 1.1 PLANTEAMIENTO DEL PROBLEMA ............................................................. 16 1.2 OBJETIVO GENERAL .................................................................................... 17 1.3 OBJETIVOS ESPECÍFICOS ........................................................................... 18 1.4 ALCANCE ....................................................................................................... 18 1.5 JUSTIFICACIÓN ............................................................................................. 19 CAPÍTULO II - MARCO TEÓRICO ....................................................................... 21 2.1 METODOLOGÍAS DE DESARROLLO ............................................................ 21 2.1.1 RATIONAL UNIFIED PROCESS (RUP) ................................................................ 21 2.1.2 PROGRAMACIÓN EXTREMA (XP)....................................................................... 22 2.1.3 DESARROLLO BASADO EN FUNCIONALIDADES (FDD) ......................................... 23 2.2 LENGUAJES DE PROGRAMACIÓN .............................................................. 24 2.2.1 PHP .............................................................................................................. 24 2.2.2 JAVA .............................................................................................................. 26 2.2.3 RUBY ............................................................................................................. 26 2.3 SISTEMAS DE GESTIÓÍTULO III – TECNOLOGÍAS A UTILIZAR ..................................................... 35 3.1 MYSQL ............................................................................................................ 35 3.2 PHP ................................................................................................................. 35 CAPÍTULO IV - MARCO METODOLÓGICO ........................................................ 36 4.1 ESPECIFICACIÓN DE LA METODOLOGÍA DE DESARROLLO ................... 36 4.1.1 CASOS DE USO ............................................................................................... 37 4.1.2 DESARROLLO DE LA METODOLOGÍA FDD .......................................................... 58 4.2 INTERFACES DEL SISTEMA WEB DE GESTIÓN, CONTROL E INSCRIPCIÓN ONLINE ...................................................................................... 105 CAPÍTULO V – CONCLUSIONES ...................................................................... 132 6 6.1 TRABAJOS FUTUROS........................................................................................ 133 7 ÍNDICE DE FIGURAS Figura 2.1 - Diagrama Modelo MVC ...................................................................... 34 Figura 4.1 - Diagrama de casos de uso para el nivel 0 ......................................... 38 Figura 4.2 - Diagrama de casos de uso nivel 1 ..................................................... 39 Figura 4.3 - Diagrama de casos de uso nivel 2: Realizar conciliación ................... 42 Figura 4.4 - Diagrama de casos de uso nivel 2: Administrar gastos de talleres .... 42 Figura 4.5 - Diagrama de caso de uso nivel 2: Consultar reportes ........................ 44 Figura 4.6 - Diagrama de casos de uso nivel 2: Consultar servicios ..................... 46 Figura 4.7 - Diagrama de casos de uso nivel 2: Inscribir ....................................... 47 Figura 4.8 - Diagrama de casos de uso nivel 2: Administrar talleres ..................... 48 Figura 4.9 - Diagrama de casos de uso nivel 2: Administrar usuarios ................... 49 Figura 4.10 - Diagrama de casos de uso nivel 2: Administrar horarios ................. 50 Figura 4.11 - Diagrama de casos de uso nivel 2: Administrar materiales .............. 52 Figura 4.12 - Diagrama de casos de uso nivel 2: Pagar mensualidad .................. 53 Figura 4.13 - Diagrama de casos de uso nivel 3: Validar ..................................... 54 Figura 4.14 - Diagrama de casos de uso nivel 3: Consultar inscritos .................... 55 Figura 4.15 - Diagrama de casos de uso nivel 3: Consultar talleres ..................... 55 Figura 4.16 - Diagrama de casos de uso nivel 3: Consultar talleres abiertos ........ 57 Figura 4.17 - Ciclo de vida de la Metodología FDD ............................................... 59 Figura 4.18 - Diagrama de Clases ......................................................................... 61 Figura 4.19 - Clase asigna_tallerista ..................................................................... 61 Figura 4.20 - Clase cargo de usuarios .................................................................. 61 Figura 4.21 - Clase concepto ................................................................................ 62 Figura 4.22 - Clase estados .................................................................................. 62 Figura 4.23 - Clase etapas .................................................................................... 62 Figura 4.24 - Clase gastos .................................................................................... 62 Figura 4.25 - Clase grados .................................................................................... 62 Figura 4.26 - Clase horario .................................................................................... 63 Figura 4.27 - Clase ingresos ................................................................................. 63 Figura 4.29 - Clase material .................................................................................. 64 Figura 4.30 - Clase meses .................................................................................... 64 Figura 4.31 - Clase pagos ..................................................................................... 64 Figura 4.32 - Clase período ................................................................................... 65 Figura 4.33 - Clase seguridad ............................................................................... 65 Figura 4.34 - Clase taller ....................................................................................... 65 8 Figura 4.35 - Clase taller_etapa ............................................................................ 65 Figura 4.36 - Clase taller_material ........................................................................ 65 Figura 4.37 - Clase talleres_actuales .................................................................... 66 Figura 4.38 - Clase tipo_gasto .............................................................................. 66 Figura 4.39 - Clase alumnos ................................................................................. 66 Figura 4.40 - Clase usuario ................................................................................... 67 Figura 4.41 - Clase padres .................................................................................... 68 Figura 4.42 - Diagrama de objetos del dominio ..................................................... 72 Figura 4.43 - Planificación de las funcionalidades del sistema Web ..................... 78 Figura 4.44 - Realizar conciliación ........................................................................ 79 Figura 4.45 - Administrar gastos de talleres .......................................................... 80 Figura 4.46 - Consular reportes de gastos de talleres ........................................... 81 Figura 4.47 - Consultar reporte de inscritos .......................................................... 81 Figura 4.48 - Consultar comentarios sobre alumnos ............................................. 82 Figura 4.49 - Consultar reporte de talleres ............................................................ 82 Figura 4.50 - Consultar reporte de pagos .............................................................. 83 Figura 4.51 - Consultar reporte de padres ............................................................ 83 Figura 4.52 - Consultar reporte de talleres abiertos .............................................. 84 Figura 4.53 - Autenticar ......................................................................................... 84 Figura 4.54 - Consultar servicios - Consultar Representados ............................... 85 Figura 4.55 - Consultar servicios - Consultar Talleres ........................................... 85 Figura 4.56 - Consultar Servicios – Consultar Solvencia ...................................... 86 Figura 4.57 - Cambiar Contraseña ........................................................................ 86 Figura 4.58 - Inscribir ............................................................................................ 87 Figura 4.59 - Administrar Talleres ......................................................................... 88 Figura 4.60 - Administrar talleres abiertos ............................................................. 89 Figura 4.61 - Administrar horarios ......................................................................... 90 Figura 4.62 - Administrar materiales ..................................................................... 91 Figura 4.63 - Pagar mensualidad .......................................................................... 92 Figura 4.64 - Código Prueba - Administración Usuarios ....................................... 93 Figura 4.65 - Resultados de las Pruebas de Administrar Usuarios ....................... 94 Figura 4.66 - Código de Pruebas de la Administración de Talleres ....................... 94 Figura 4.67 - Resultados de las Pruebas de Administrar Talleres ......................... 95 Figura 4.68 - Código de Pruebas para Administrar Talleres Actuales ................... 95 Figura 4.69 - Resultados de las Pruebas Administrar Talleres Actuales ............... 96 Figura 4.70 - Código Prueba Administrar Horarios ................................................ 96 9 Figura 4.71 - Resultados de las Pruebas Administrar Horarios ............................. 97 Figura 4.72 - Código de Prueba para Administrar Materiales................................ 97 Figura 4.73 - Resultado para las Pruebas Administrar Materiales ........................ 98 Figura 4.74 - Código de Prueba para Administrar Gastos ..................................... 98 Figura 4.75 - Resultados para la Prueba Administrar Gastos ............................... 99 Figura 4.76 - Código de Prueba para los Reportes ............................................... 99 Figura 4.77 - Resultado de las Pruebas de los Reportes .................................... 100 Figura 4.78 - Código Prueba de Conciliación ...................................................... 100 Figura 4.79 - Resultados de la Prueba Conciliación ............................................ 101 Figura 4.80 - Código prueba de Administración de usuarios en módulo de representantes .................................................................................................... 101 Figura 4.81 - Resultado de la prueba de Administración de usuarios en módulo de representantes .................................................................................................... 102 Figura 4.82 - Código de pruebas de consultas y operaciones con los talleres en el módulo del representante .................................................................................... 103 Figura 4.83 - Resultado de las pruebas de consultas y operaciones con los talleres en el módulo del representante .............................................................. 104 Figura 4.84 - Código de las pruebas de consulta de solvencia ........................... 104 Figura 4.85 - Resultado de las pruebas de consulta de solvencia ...................... 105 Figura 4.86 - Interfaz de autenticación de usuarios ............................................ 106 Figura 4.87 - Interfaz de bienvenida al representante ........................................ 106 Figura 4.88 - Interfaz de listado de talleres abiertos ........................................... 107 Figura 4.89 - Interfaz de detalles de talleres ...................................................... 108 Figura 4.90 - Interfaz de listado de representados inscritos en talleres ............. 109 Figura 4.91 - Interfaz de comentarios de talleristas sobre alumnos ................... 109 Figura 4.92 - Interfaz de selección de tipo de solvencia a consultar .................. 110 Figura 4.93 - Interfaz de consulta de solvencia general ..................................... 111 Figura 4.94 - Interfaz de consulta de solvencia por pagos realizados ................ 111 Figura 4.95 - Interfaz del paso 1 de inscripción de talleres ................................ 112 Figura 4.96 - Interfaz del paso 2 de inscripción de talleres ................................ 113 Figura 4.97 - Interfaz del paso 3 de inscripción de talleres ................................ 113 Figura 4.98 - Interfaz de notificación al representante ....................................... 114 Figura 4.99 - Interfaz del paso 4 de incripción de talleres con pago en efectivo 115 Figura 4.100 - Interfaz del paso 4 de inscripción de talleres con pago en depósito ó transferencia bancaria ...................................................................................... 116 Figura 4.101 - Interfaz del paso 1 del pago de mensualidad .............................. 117 Figura 4.102 - Interfaz del paso 2 del pago de mensualidad .............................. 117 10 Figura 4.103 - Interfaz de cambio de contraseña ............................................... 118 Figura 4.104 - Interfaz de Administrador – Iniciar Sesión .................................... 119 Figura 4.105 - Interfaz de Administrador - Principal ............................................ 120 Figura 4.106 - Interfaz de Administrador - Usuarios ............................................ 120 Figura 4.107- Interfaz de Administrador - Modificar Usuario ............................... 121 Figura 4.108 - Interfaz de Administrador - Crear Talleres ................................... 121 Figura 4.109 - Interfaz de Administrador - Modificar Talleres .............................. 122 Figura 4.110 - Interfaz de Administrador - Iniciar Talleres ................................... 123 Figura 4.111 - Interfaz de Administrador - Modificar Talleres Iniciados ............... 124 Figura 4.112 - Interfaz de Administrador - Horarios ............................................ 124 Figura 4.113 - Interfaz de Administrador - Modificar Horarios ............................. 125 Figura 4.114 - Interfaz de Administrador - Materiales ......................................... 125 Figura 4.115 - Interfaz de Administrador - Modificar Materiales .......................... 126 Figura 4.116 - Interfaz de Administrador - Gastos ............................................... 126 Figura 4.117 - Interfaz de Administrador - Modificar Gastos ............................... 127 Figura 4.118 - Interfaz de Administrador - Reporte Talleres ............................... 127 Figura 4.119 - Interfaz de Administrador - Reporte Talleres Abiertos ................. 128 Figura 4.120 - Interfaz de Administrador - Reporte Gastos ................................. 129 Figura 4.121 - Interfaz de Administrador - Reporte Representantes ................... 129 Figura 4.122 - Interfaz de Administrador - Reporte Inscritos ............................... 130 Figura 4.123 - Interfaz de Administrador - Reporte Inscritos Comentarios .......... 130 Figura 4.124 - Interfaz de Administrador - Reporte Pagos .................................. 131 Figura 4.125 - Interfaz de Administrador - Realizar Conciliación......................... 131 11 ÍNDICE DE TABLAS Tabla 4.1 - Especificación del caso de uso: Realizar conciliación ......................... 39 Tabla 4.2 - Especificación del caso de uso: Administrar gastos de talleres .......... 40 Tabla 4.3 - Especificación del caso de uso: Consultar reportes ............................ 40 Tabla 4.4 - Especificación del caso de uso: Autenticar ......................................... 40 Tabla 4.5 - Especificación del caso de uso: Consultar servicios ........................... 40 Tabla 4.6 - Especificación del caso de uso: Cambiar contraseña ......................... 40 Tabla 4.7 - Especificación del caso de uso: Inscribir ............................................. 40 Tabla 4.8 - Especificación del caso de uso: Administrar talleres ........................... 41 Tabla 4.9 - Especificación del caso de uso: Administrar usuarios ......................... 41 Tabla 4.10 - Especificación del caso de uso: Administrar horarios ....................... 41 Tabla 4.11 - Especificación del caso de uso: Administrar materiales .................... 41 Tabla 4.12 - Especificación del caso de uso: Pagar mensualidad ......................... 41 Tabla 4.13 - Especificación del caso de uso: Listar padres ................................... 42 Tabla 4.14 - Especificación del caso de uso: Agregar ........................................... 43 Tabla 4.15 - Especificación del caso de uso: Modificar ......................................... 43 Tabla 4.16 - Especificación del caso de uso: Eliminar .......................................... 43 Tabla 4.17 - Especificación del caso de uso: Consultar talleres ............................ 44 Tabla 4.18 - Especificación del caso de uso: Consultar gastos ............................. 44 Tabla 4.19 - Especificación del caso de uso: Consultar padres ............................ 45 Tabla 4.20 - Especificación del caso de uso: Consultar inscritos .......................... 45 Tabla 4.21 - Especificación del caso de uso: Consultar pagos ............................. 45 Tabla 4.22 - Especificación del caso de uso: Consultar representados ................ 46 Tabla 4.23 - Especificación del caso de uso: Consultar talleres ............................ 46 Tabla 4.24 - Especificación del caso de uso: Consultar solvencia ........................ 47 Tabla 4.25 - Especificación del caso de uso: Listar representados ....................... 47 Tabla 4.26 - Especificación del caso de uso: Consultar talleres ............................ 48 Tabla 4.27 - Especificación del caso de uso: Consultar talleres abiertos .............. 48 Tabla 4.28 - Especificación del caso de uso: Consultar ........................................ 49 Tabla 4.29 - Especificación del caso de uso: Agregar ........................................... 49 Tabla 4.30 - Especificación del caso de uso: Modificar ......................................... 50 Tabla 4.31 - Especificación del caso de uso: Eliminar .......................................... 50 Tabla 4.32 - Especificación del caso de uso: Consultar ........................................ 51 Tabla 4.33 - Especificación del caso de uso: Agregar ........................................... 51 Tabla 4.34 - Especificación del caso de uso: Modificar ......................................... 51 12 Tabla 4.35 - Especificación del caso de uso: Eliminar .......................................... 51 Tabla 4.36 - Especificación del caso de uso: Consultar ........................................ 52 Tabla 4.37 - Especificación del caso de uso: Agregar ........................................... 52 Tabla 4.38 - Especificación del caso de uso: Modificar ......................................... 53 Tabla 4.39 - Especificación del caso de uso: Eliminar .......................................... 53 Tabla 4.40 - Especificación del caso de uso: Listar representados ....................... 54 Tabla 4.41 - Especificación del caso de uso: Validar ............................................ 54 Tabla 4.42 - Especificación del caso de uso: Consultar comentarios .................... 55 Tabla 4.43 - Especificación del caso de uso: Agregar ........................................... 56 Tabla 4.44 - Especificación del caso de uso: Modificar ......................................... 56 Tabla 4.45 - Especificación del caso de uso: Eliminar .......................................... 56 Tabla 4.46 - Especificación del caso de uso: Abrir ................................................ 57 Tabla 4.47 - Especificación del caso de uso: Modificar ......................................... 57 Tabla 4.48 - Especificación del caso de uso: Eliminar .......................................... 58 Tabla 4.49 - Tabla de Features por prioridades .................................................... 77 13 RESUMEN TITULO: Desarrollo de un Sistema Web de gestión, control e inscripción de Actividades Extracurriculares para el C.E.A.P.U.C.V. AUTORES: Rocio N. Carrero D. Hedras C. Pérez T. TUTOR: Prof. Ana Romero. Hoy en día el uso de las Tecnologías de Información y Comunicación, para lograr un sistema automatizado, son un recurso indispensable para obtener un mejor desempeño en todas las áreas de trabajo a nivel mundial, ya que estas permiten dejar a un lado los métodos manuales para así llevar a cabo sus tareas de una forma más rápida y eficiente. Este hecho es el punto de partida para el desarrollo de este trabajo de investigación en el cual se desarrollará un Sistema para la automatizar la gestión e Inscripción online de actividades extracurriculares del Centro Educativo de la Asociación de Profesores de la U.C.V. (C.E.A.P.U.C.V.), en el cual se utilizarán herramientas de código abierto para su desarrollo, como : el sistema manejador de Base de Datos MySQL, el cual permite entre otras cosas, un bajo costo en requerimientos para la elaboración de bases de datos, ya que debido a su bajo consumo de procesamiento , puede ser ejecutado en una máquina con pocos requerimientos de memoria y procesador sin ningún problema; otra herramienta de código abierto utilizada es el Lenguaje Hypertext Pre-Processor PHP, el cual brinda diferentes ventajas a la hora de desarrollar programas, una de las principales es que es un lenguaje interpretado el cual no necesita compilación ni 14 la utilización de ninguna máquina virtual para su funcionamiento, aparte de esto, es uno de los lenguajes más populares que se utilizan actualmente en el mercado, dado que su costo para el hospedaje y mantenimiento de sitios Webs es mínimo. Otro punto importante en la investigación fue la selección de la metodología, la cual debía estar adaptada al desarrollo, en torno a esto se realizó una investigación entre las metodologías más utilizadas, entre las cuales figuran: Proceso Racional Unificado (RUP),Programación Extrema (XP) y Desarrollo Basado en Funcionalidades (FDD), para llegar a la conclusión de utilizar esta última nombrada, ya que por tratarse de una aplicación Web de pequeña escala, con pocos integrantes y en la cual las funcionalidades era su principal objetivo, esta metodología con procesos ágiles la cual provee documentación, era la más apropiada para comenzar el desarrollo; la documentación necesaria aplicada en esta metodología para esta aplicación serán: diagramas de objetos, diagrama de entidad Relación, diagramas de secuencias y por último, aunque no se plantea dentro de la metodología, se utilizó la recolección de datos, para poder esquematizar esto se realizarán los diagramas de Casos de Uso. El objetivo principal de este desarrollo, es ofrecer al colegio C.E.A.P.U.C.V., la oportunidad de obtener una ventana a la tecnología de hoy en día para aplicarla de forma eficiente en el desarrollo de sus actividades dentro del ámbito de las actividades extracurriculares dadas en esta institución, para que así puedan obtener un gran número de ventajas dentro del ámbito académico y económico. 15 INTRODUCCIÓN Hoy en día son más las instituciones que se plantean automatizar sus procesos mediante el uso de aplicaciones que simplifiquen sus actividades diarias. Actualmente el C.E.A.P.U.C.V. requiere de una aplicación que permita llevar la administración de actividades extracurriculares, ya que en la actualidad no poseen ningún proceso para esto; de igual forma presentan inconvenientes por la forma en que se está llevando a cabo el sistema de inscripción manual de las actividades. Por esta razón surge el interés de desarrollar una aplicación Web que permita, gestionar y administrar las actividades extracurriculares y posea un módulo de inscripción en línea. A continuación se va a presentar el Trabajo Especial de Grado sobre este desarrollo, en el cual se presentará el esquema general el cual estará compuesto por: Capítulo I: Se planteará el problema a abordar, así como sus objetivos generales y específicos, para luego así poder definir el alcance y justificación que van a definir el desarrollo de esta aplicación. Capítulo II: Dentro de este capítulo se abordará el marco metodológico del Trabajo Especial de Grado, en el cual se explicarán las diferentes tecnologías, herramientas y metodologías utilizadas para desarrollo de aplicaciones. Capítulo III: Se desarrollarán a plenitud las herramientas tecnológicas a utilizar en el desarrollo de este Sistema Web en línea para la gestión e inscripción del Colegio C.E.A.P.U.C.V. Capítulo IV: En este capítulo se comenzará con una breve justificación de la metodología elegida para el desarrollo, para luego continuar con el desglose de cada una de sus fases que se proponen dentro de esta. Luego de finalizar con toda la investigación y desarrollo de este Trabajo Especial de Grado, se llegará a una conclusión y a trabajos futuros para lograr un Sistema Web más completo. 16 CAPÍTULO I – PROBLEMA El Centro Educativo de la Asociación de Profesores de la UCV (C.E.A.P.U.C.V.), se encuentra ubicado en Colinas de Bello Monte, su campus está integrado por familiares de profesores de la UCV e integrantes de la comunidad del Colegio. EL C.E.A.P.U.C.V. se ha encargado de impartir una excelente formación académica a sus estudiantes y aparte de ésto han creado un conjunto de actividades extracurriculares para así lograr un desarrollo integral en sus estudiantes, entre estas actividades extracurriculares se encuentran: baloncesto, fútbol, costura, cerámica, danza árabe, danza contemporánea, cuenta cuentos, arte y expresión plástica, entre otros. Dado que el Colegio no posee un presupuesto para sobrellevar los gastos de estos cursos, los representantes realizan un aporte mensual monetario dependiendo del curso donde se encuentre inscrito su representado. Este aporte es gestionado por el C.E.A.P.U.C.V. de forma manual, lo cual conlleva a no controlar los retrasos en los pagos de manera eficiente, ya que es difícil ubicar cuales son los representantes que no han cancelado, trayendo como consecuencia que muchas veces el colegio tenga que subsidiar estos gastos de otras partidas presupuestarias para continuar con los cursos. Lo anteriormente descrito abarca solamente el ámbito económico, sin embargo con todas las facilidades que hoy nos ofrece la tecnología, es posible minimizar la incomodidad de los representantes de asistir personalmente al colegio a inscribir a sus representados, y además dirigirse a un banco a cancelar su cuota. Otra consideración a tomar en cuenta de la gestión manual, es que los instructores en algunas ocasiones no reciben a tiempo el listado actualizado de integrantes de cada curso. Todos estos aspectos nombrados anteriormente, han llevado al Colegio C.E.A.P.U.C.V., a la idea de no continuar dictando estas actividades extracurriculares a sus alumnos, ya que con la desorganización de pagos, los representantes no se ven en la obligación de cancelar sus cuotas a tiempo, 17 cancelando estas siempre final del año escolar, por lo cual el colegio tiene que subsidiar durante todo un año todos los gastos que generan estas actividades extracurriculares, en los últimos años el colegio se ha dado cuenta que su presupuesto anual no les permite seguir subsidiando estas actividades. Esto traería como consecuencia, que los alumnos del C.E.P.U.C.V. se queden sin sus actividades extracurriculares, perdiendo así una forma de esparcimiento dentro de su educación y crecimiento como personas. Para dar solucionar estos inconvenientes, se plantea el diseño de una aplicación Web a fin de automatizar el proceso de Administración de las actividades extracurriculares, que incluya el proceso de inscripción y pago en línea. Mediante esta herramienta el colegio podrá controlar los pagos de los representantes y detallar los ingresos y egresos de cada una de sus actividades extracurriculares, por otro lado, otorgaría una gran facilidad y comodidad a los padres al realizar la inscripción y pagos mensuales de los talleres online, para que así los pagos sean más recurrentes y el colegio pueda mantener sus actividades extracurriculares para sus alumnos. 1.2 OBJETIVO GENERAL Desarrollar un Sistema Web de gestión, control e inscripción de Actividades Extracurriculares para el C.E.A.P.U.C.V, con la finalidad de automatizar los procesos, que actualmente se realizan de forma manual y presencial en el Colegio. Mediante este Sistema Web se espera lograr que el Colegio pueda llevar un mayor control de pagos en las actividades extracurriculares, así como su gestión; en cuanto a la inscripción se tiene la perspectiva que el representante podrá introducir los datos del pago (deposito y transferencia) de forma online para posteriormente el Colegio pueda validarlos, evitando así, la incomodidad de ir personalmente a realizar la inscripción y de dirigirse a alguna entidad financiera para realizar la operación. 18 1.3 OBJETIVOS ESPECÍFICOS � Identificar los requerimientos solicitados por los usuarios del sistema, mediante los Casos de Uso. � Determinar la metodología más apropiada a utilizar, tomando en cuenta las características del sistema. � Analizar los requerimientos de los usuarios del sistema para cumplir con los objetivos propuestos. � Diseñar una aplicación Web que permita a los miembros de la comunidad del C.E.A.P.U.C.V. administrar las actividades extracurriculares vía Web de forma rápida y eficiente. � Desarrollar la aplicación Web que cumpla los estándares de usabilidad. � Realizar pruebas con la finalidad de comprobar el correcto funcionamiento del sistema Web desarrollado. � Adiestrar a los administradores del sistema con el propósito dominar los pasos y procedimientos a seguir en el sistema Web de administración de actividades extracurriculares. 1.4 ALCANCE A fin de dar solución a la problemática planteada por los miembros de la comunidad del C.E.A.P.U.C.V. y para efectos de este trabajo se tomará en cuenta el levantamiento de requerimientos elaborado con el personal directivo del colegio antes mencionado, el cual solicitó un sistema Web que permita la administración, control e inscripción vía Web de las actividades extracurriculares que se imparten a los estudiantes en la C.E.A.P.U.C.V. 19 No sólo se deben tomar en cuenta los requerimientos funcionales con los que debe contar la aplicación, sino que se hace preciso considerar los principios de usabilidad a la hora de elaborar su diseño, a fin de facilitarle al usuario las tareas que la aplicación le provee. Entre las funcionalidades principales con las que contará la aplicación se tienen: � Inicio de sesión. � Agregar, modificar y eliminar actividades extracurriculares. � Inscripción de estudiantes en actividades extracurriculares. � Modificación de inscripción. � Visualizar pago de actividades extracurriculares. � Consultar cuentas por pagar y por cobrar. � Consultar representantes deudores. � Agregar, modificar y eliminar talleristas. 1.5 JUSTIFICACIÓN El desarrollo del sistema de gestión, control e inscripción, se justifica debido a la falta de automatización del sistema de inscripción de actividades extracurriculares, ya que actualmente los representantes deben dirigirse a la institución a realizar la inscripción y a la entidad bancaria a cancelar el pago correspondiente. Por otro lado, se justifica la creación del sistema Web debido a la inexistencia de un proceso de gestión y control de actividades extracurriculares, el cual permita agregar, modificar y eliminar talleres, usuarios, horarios, materiales, entre otros. Así mismo en la institución del C.E.A.P.U.C.V. existe la carencia de un proceso que permita realizar consultas en tiempo real de la información, que permita consultar reportes de pagos de representantes realizados, alumnos inscritos en talleres, representantes solventes y deudores. Cabe destacar que la institución al 20 no poseer un listado de representantes deudores, ocasiona que el C.E.A.P.U.C.V. deba suplir la carencia, con dinero destinado a otras áreas de la institución, lo cual produce un desnivel en su presupuesto anual. Aunado a lo mencionado anteriormente, se tiene la reducción de costos en tiempo, los cuales se consumían realizando estos procesos manualmente. 21 CAPÍTULO II - MARCO TEÓRICO Una metodología de desarrollo tiene como objetivo elevar la calidad del software a través de una mayor transparencia y control sobre el proceso. A continuación se describen tres metodologías de desarrollo: Rational Unified Process (RUP), Programación Extrema (XP) y Desarrollo Basado en Funcionalidades (FDD), a fin de decidir cuál es la metodología que mejor se adapta al desarrollo del Sistema Web propuesto, y así obtener los resultados esperados en el tiempo adecuado. 2.1 METODOLOGÍAS DE DESARROLLO 2.1.1 Rational Unified Process (RUP) RUP es un proceso para el desarrollo de software, el cual proporciona un enfoque disciplinado para asignar tareas y responsabilidades dentro de una organización de desarrollo. Su objetivo es garantizar la producción de software de alta calidad que se ajuste a las necesidades de los usuarios finales. Este proceso va dedicado especialmente a grandes proyectos, ya que deben repartirse 32 roles y generar muchos documentos finales, los cuales pueden generar beneficio para la reutilización de código, pero muchas veces en proyectos pequeños provocan mayores incrementos en tiempo y costos. RUP es una guía de cómo utilizar eficazmente el Lenguaje Unificado de Modelado (UML). El UML es un lenguaje estándar que permite comunicar claramente los requisitos, arquitecturas y diseños. Según [1], esta metodología se caracteriza por tener una documentación exhaustiva y su prioridad es seguir con el plan de proyecto que se detalla a continuación en sus cuatro fases: � Fase Inicial: durante esta fase se hace un plan de fases, se identifican los riesgos y se delimita el alcance del proyecto. Para lograr ésto, hay que identificar todas las entidades externas con que el sistema 22 interactúa (actores). Ésto implica la identificación de los principales casos de uso. � Fase de Elaboración: durante esta fase se desarrolla el plan del proyecto y se eliminan los elementos de mayor riesgo del proyecto. Abarca los flujos de trabajo de requerimientos, el refinamiento del modelo de negocios, análisis, diseño y una parte de implementación orientado a la arquitectura. � Fase de Construcción: esta fase se concentra en la elaboración de un producto totalmente operativo y eficiente mediante una serie de iteraciones y en la elaboración del manual de usuario. � Fase de Transición: en esta fase el software es entregado a los usuarios finales. Suelen surgir problemas que obliguen a desarrollar nuevas versiones, corregir algunos problemas ó terminar las características que se aplazaron. Por tratarse de un proceso pesado, no está adecuado a los cambios volátiles que puedan ocurrir durante la vida del proyecto, ya que la documentación se vería afectada. 2.1.2 Programación Extrema (XP) En [2] se realiza una comparación entre las metodologías tradicionales vs. las ágiles. Allí definen a la metodología de Programación Extrema (XP), como una metodología ágil, la cual se basa en un desarrollo iterativo e incremental, con una aplicación de pruebas unitarias continuas y de regresión. Una de sus características relevantes es basarse en la programación en parejas, ya que el código es revisado y discutido mientras se realiza; las reuniones con los usuarios se realizan de forma frecuente y recomiendan que uno de ellos trabaje en conjunto con los programadores. Es una de las metodologías ágiles más usada, ya que se destaca por adaptarse a los errores que puedan ocurrir en cada iteración y no por prevenirlos antes de comenzar a programar. 23 Un factor que predomina en esta metodología son las historias de usuarios que representan las funcionalidades del sistema, las cuales son realizadas por el usuario integrado en el equipo de programación. El artículo [3] describe las 12 fases de esta metodología, las cuales son: � Planeación en la cual deben interactuar los desarrolladores y el cliente. � Entrega de iteraciones pequeñas, cada cierto tiempo. � Manejo de las metáforas para lograr entender los elementos del sistema y las relaciones entre ellos. � Diseño con las funcionalidades estrictamente necesarias. � Pruebas continuas sobre cada unidad de código, con la presencia del cliente. � Mantener una depuración y simplificación constante del sistema. � Programación en pares. � Propiedad colectiva del código, ésto quiere decir que cualquier participante del proyecto puede modificar el código en cualquier momento. � Integración continúa. � Semana de 40 horas. � El cliente debe estar disponible localmente. 2.1.3 Desarrollo basado en funcionalidades (FDD) En [4] hablan que la metodología de Desarrollo Basado en Funcionalidades (FDD) fue diseñado por Peter Coad, Erich Lefebvre y Jeff De Luca, y es un proceso que se encuentra en el medio de las metodologías tradicionales y ágiles para el desarrollo de sistemas, en el cual no se realiza énfasis en la obtención de 24 los requerimientos, sino en cómo se realiza la fase de diseño y desarrollo. Propone cierre de fases cada 2 semanas con entregables tangibles, ya que es pensado para proyectos relativamente cortos. Se basa en un proceso iterativo con iteraciones cortas que producen un software funcional. El proceso consta de cinco pasos: � Desarrollo de un modelo general. � Construcción de la lista de funcionalidades. � Planificación en base a las funcionalidades. � Diseñar en base a las funcionalidades definidas. � Implementar en base a las mismas funcionalidades. Según [5] esta metodología es considerada como un proceso ligero, que también utiliza documentación, solo la necesaria para el entendimiento inmediato de alguna persona ajena al proyecto. 2.2 LENGUAJES DE PROGRAMACIÓN Hoy en día existen diversas tecnologías para el desarrollo de Aplicaciones Web, las cuales han ido surgiendo debido a las tendencias y necesidades de las plataformas. A continuación se muestran las características más resaltantes de tres tecnologías basadas en código abierto, como lo son: PHP, Java y Ruby, a fin de seleccionar uno de ellos para el desarrollo de la aplicación del Sistema Web de control, gestión e inscripción de Actividades Extracurriculares. 2.2.1 PHP De acuerdo al sitio oficial de PHP [6], PHP (Hypertext Pre-Processor) es un lenguaje de código abierto, interpretado, de alto nivel, que se utiliza mayormente 25 dentro de las páginas Web y que es ejecutado principalmente en el servidor. Posee licencia de Software libre, puede ser desplegado en la mayoría de los servidores Web y en casi todos los sistemas operativos y plataformas sin costo alguno. PHP se encuentra instalado en más de 20 millones de sitios Web y en un millón de servidores. Es también el módulo más utilizado en los servidores apache. Cuando el cliente hace una petición al servidor para que le envíe una página Web, el servidor ejecuta el intérprete de PHP. Éste procesa el script solicitado que generará el contenido de manera dinámica (por ejemplo obteniendo información de una base de datos). El resultado es enviado por el intérprete al servidor, quien a su vez se lo envía al cliente. Mediante extensiones es también posible la generación de archivos PDF, FLASH, así como imágenes en diferentes formatos. Permite la conexión a diferentes tipos de servidores de bases de datos tales como MySQL, Postgres, Oracle, ODBC, DB2, Microsoft SQL Server, Firebird y SQLite. La última versión es el PHP5 el cual brinda soporte al lenguaje Orientado a Objetos, Mysql y XML. 1) Características Principales: � Es un lenguaje multiplataforma. � Capacidad de conexión con la mayoría de los manejadores de base de datos que se utilizan en la actualidad, destaca su conectividad con MySQL. � Capacidad de expandir su potencial utilizando la enorme cantidad de módulos (llamados ext's o extensiones). � Posee una amplia documentación en su página oficial, entre la cual se destaca que todas las funciones del sistema están explicadas y ejemplificadas en un único archivo de ayuda. � Es libre, por lo que se presenta como una alternativa de fácil acceso para todos. 26 � Permite las técnicas de Programación Orientada a Objetos. � Biblioteca nativa de funciones sumamente amplia e incluida. � No requiere definición de tipos de variables. � Tiene manejo de excepciones (desde php5). 2.2.2 Java De acuerdo a [7] describen a Java como un lenguaje de programación orientado a objetos el cual fue desarrollado por la empresa Sun Microsystems a principios de los años 90. La base para su desarrollo fue a partir de la sintaxis de los lenguajes C y C++, pero tiene un modelo de objetos más simple y elimina herramientas de bajo nivel, que suelen inducir a muchos errores, como la manipulación directa de punteros o memoria. Las aplicaciones Java están típicamente compiladas en un bytecode, aunque la compilación en código de máquina nativo también es posible. En el tiempo de ejecución, el bytecode es normalmente interpretado o compilado a código nativo para la ejecución, aunque la ejecución directa por hardware del bytecode por un procesador Java también es posible. La máquina virtual de Java es necesaria para poder desarrollar en este lenguaje, hasta los momentos Sun es el propietario y las empresas para poder utilizarlo deben comprar la licencia. 2.2.3 Ruby De acuerdo a [8] Ruby es un lenguaje de programación interpretado, reflexivo y orientado a objetos, creado por el programador japonés Yukihiro Matsumoto, quien comenzó a trabajar en Ruby en 1993, y lo presentó públicamente en 1995. Combina una sintaxis inspirada en Python, Perl con características de 27 programación orientada a objetos similares a Smalltalk. Comparte también funcionalidad con otros lenguajes de programación como Lisp, Lua, Dylan y CLU. Ruby es un lenguaje de programación interpretado en una sola pasada y su implementación oficial es distribuida bajo una licencia de software libre. Ruby ha sido descrito como un lenguaje de programación multiparadigma: permite programación procedural (definiendo funciones y variables fuera de las clases haciéndolas parte del objeto raíz Object), con orientación a objetos, (todo es un objeto) o funcionalmente. En estos momentos Ruby se encuentra en pleno crecimiento, lo cual hace que exista poca documentación sobre la misma. 2.3 SISTEMAS DE GESTIÓN DE BASES DE DATOS Un Sistema de Gestión de Base de Datos (DBMS, por sus siglas en inglés) es una aplicación que controla la organización, almacenamiento, gestión y recuperación de datos en una base de datos. Uno de los propósitos principales de un DBMS es proporcionar a los usuarios una visión abstracta de los datos. Es decir, el sistema esconde ciertos detalles de cómo se almacenan y mantienen los datos. A continuación se presentan tres alternativas de DBMS muy conocidas, a fin de elegir una de ellas, en base a sus características y ventajas, para el desarrollo de la aplicación del Sistema Web de control, gestión e inscripción de Actividades Extracurriculares. 2.3.1 MySQL Según [9] MySQL es un sistema de gestión de bases de datos relacionales, confiables, muy rápidos y fáciles de usar. MySQL es un motor de base de datos 28 de código abierto, por lo que es posible para cualquier usar y modificar el software, debido a esto es muy popular su uso en aplicaciones Web. 1) Características de MySQL Las principales características de este gestor de bases de datos son las siguientes: � MySQL está escrito en C y en C++, ha sido probado por múltiples compiladores distintos y puede trabajar en distintas plataformas. � Permite manejar gran cantidad de tipos de datos para las columnas. � Utiliza el lenguaje SQL para realizar consultas a la base de datos. � Permite gestionar grandes volúmenes de datos. Existen bases de datos en MySQL Server que contienen 50 millones de registros. � Es multihilo, por lo cual puede beneficiarse de sistemas multiprocesador, usando varias CPU si están disponibles. � Basada en una arquitectura cliente/servidor que resulta muy eficaz. 2) Ventajas de MySQL Las ventajas más relevantes que posee MySQL son: � Permite un acceso a las bases de datos de forma simultánea por varios usuarios y/o aplicaciones. � Velocidad al realizar las operaciones, lo que le hace uno de los gestores con mejor rendimiento. � Brinda seguridad, en forma de permisos y privilegios, es decir, los usuarios tendrán permiso para consultar o modificar determinadas tablas. De esta forma es posible compartir información sin que peligre la integridad de la base de datos. � Bajo costo en requerimientos para la elaboración de bases de datos, ya que debido a su bajo consumo puede ser ejecutado en una máquina con escasos recursos sin ningún problema. 29 � Facilidad de configuración e instalación. � Posee gran portabilidad. � Baja probabilidad de corromper datos, incluso si los errores no se producen en el propio gestor, sino en el sistema en el que está. � Es posible conectarse a MySQL usando sockets TCP/IP en cualquier plataforma. Para establecer una conexión en sistemas Windows los clientes pueden usar pipes, mientras que en sistemas Unix, son usados los ficheros socket Unix. � Permite manejar registros de longitud fija o variable. 3) Desventajas de MySQL � Existe un gran porcentaje de utilidades de MySQL que no están documentadas. � No es intuitivo, como otros programas de sistema de gestión de base de datos (Por Ejemplo: Microsoft Access). � Requiere de amplios conocimientos del lenguaje SQL para poder explotar sus características. 2.3.2 Oracle Oracle es un Sistema Manejador de Base de Datos Relacional (RDBMS) basado en la tecnología cliente/servidor y es considerado el mayor y más usado RDBMS en el mundo. El SDBMS de Oracle es muy potente, motivo por el cual para obtener un rendimiento correcto, es necesaria la intervención de una administrador de base de datos. 1) Características de Oracle � Oracle soporta bases de datos de todos los tamaños, desde severas cantidades de bytes y gigabytes en tamaño. � Soporta aproximadamente unos 17 idiomas. 30 � Oracle soporta una arquitectura cliente/servidor, es decir, establece un proceso entre bases de datos del servidor y el cliente para la aplicación de programas. � Oracle se ejecuta en más de 80 arquitecturas de hardware y software distintos sin necesidad de cambiar una sola línea de código, esto es gracias a que más del 80% de los códigos internos de Oracle son iguales a los establecidos en todas las plataformas de sistemas operativos. 2) Ventajas de Oracle � Es mucho más robusto y proporciona mayor almacenamiento que SQL Server. � Es el motor de base de datos relacional más usado a nivel mundial. � Puede ejecutarse en multitud de sistemas operativos. � Posee interacción en cualquier plataforma (Windows, Unix, Macintosh y Mainframes). � Soporta un lenguaje de diseño de bases de datos muy completo (PL/SQL) que permite implementar diseños activos, con triggers y procedimientos almacenados. � Permite el uso de particiones para mejorar la eficiencia, y existen versiones que admiten la administración de bases de datos distribuidas. � Oracle es mucho más versátil, permite correr y manejar más transacciones que MySQL. 3) Desventajas de Oracle � Elevado precio, motivo por el cual suele ser usado en empresas muy grandes y multinacionales. � Requiere de amplios conocimientos del lenguaje SQL para poder explotar sus características. 31 � El software Oracle es muy pesado, por lo tanto el equipo donde vaya a ser instalado debe tener un buen rendimiento. 2.3.3 PostgreSQL En [10] se comenta que PostgreSQL es un potente Sistema Manejador de Base de Datos Objeto Relacional (ORDBMS por sus siglas en inglés) de código abierto. Cuenta con más de 15 años de activo desarrollo y una probada arquitectura que se ha ganado una sólida reputación de fiabilidad, integridad de datos y corrección. Se ejecuta en todos los principales sistemas operativos, incluyendo Windows, Linux, UNIX (Mac OS X, Solaris, entre otros). También soporta el almacenamiento de grandes objetos, incluyendo imágenes, sonidos o vídeo. 1) Características de PostgreSQL � Puede ser utilizado, modificado y distribuido por todo el mundo de forma gratuita para cualquier propósito, ya sea privado, comercial o académico. � Dispone de sofisticadas funciones como el acceso concurrente multiversión (MVCC por sus siglas en inglés). Es decir, mientras un proceso actualiza una tabla, otros acceden a la misma tabla sin necesidad de bloqueos. Cada usuario posee la última versión de la data que haya tenido commit. � Es altamente escalable, tanto en la enorme cantidad de datos que puede manejar como en el número de usuarios concurrentes que puede albergar. Hay sistemas activos PostgreSQL en entornos de producción que manejan más de 4 terabytes de datos. 2) Ventajas de PostgreSQL � No hay gastos asociados de licencias para el software. 32 � Multiplataforma, PostgreSQL está disponible en 34 plataformas Unix en la última versión estable y en Windows. � Está diseñado para ambientes de alto volumen ofreciendo buena respuesta en ambientes con gran cantidad de datos. � Es extensible, ya que el código fuente está disponible para todos sin costo alguno. 3) Desventajas de PostgreSQL � Es más lento que otros servidores. � No soporta jerárquica (sólo almacena tablas no otras bases de datos). � El tamaño máximo de la fila se limita a 8k. � Está limitado a 32 conexiones. � Carece del comando para suprimir columnas. 2.4 SERVIDOR WEB Los Servidores Web son programas que utilizan el protocolo HTTP (Hipertext Transfer Protocol). Este protocolo se encarga de transferir las páginas Web o HTML, el Servidor Web se ejecuta en un computador y siempre se mantiene a la espera de una petición por parte del cliente, para los fines del desarrollo del Sistema Web de Gestión y Control de Actividades Extracurriculares del C.E.A.P.U.C.V se utilizará el Servidor Web de Apache, el cual se detallará a continuación. Apache En la página oficial del Servidor HTTP Apache [11], se indica que es un software de código abierto que opera en sistemas operativos como UNIX, Windows NT, entre otros. Apache, es el servidor HTTP más popular desde abril de 1996 y se desarrolla dentro del proyecto de la Apache Software Foundation. Este proyecto 33 tiene como objetivo crear un código fuente sólido, funcional y de libre distribución para implementar un servidor Web (HTTP). 1) Ventajas � Software libre, puede ser descargado gratuitamente en Internet, a través de la página principal de Apache. � Multiplataforma, ya que es usado en plataformas como UNIX, Windows, entre otras. � Popular, ya que existe gran cantidad de documentación relacionada con él. � Configurable, su código fuente está disponible para la comunidad con la finalidad de mejorarlo constantemente. 2.5 PATRONES DE ARQUITECTURA DE SOFTWARE Los patrones de arquitecturas de software, son soluciones que se presentaron a problemas concurrentes y particulares en el diseño de una aplicación, el objetivo de estos patrones, es mejorar la calidad de diseño del sistema, hacerlo más flexible y encapsular su complejidad, el patrón de arquitectura a usar en el desarrollo de éste Sistema será el Modelo Vista Controlador, el cual se definirá a continuación. Modelo Vista Controlador (MVC) En el Trabajo Especial de Grado de Desarrollo de un Sistema para Administrar las Actividades Extracurriculares del C.E.A.P.U.C.V., utilizando Herramientas de Código Abierto, destacan la mayor importancia de este modelo por ser capaz de separar la lógica de negocio de la presentación, colocando como intermediario un componente al cual llaman Controlador. Todo ésto se realiza con el fin de poder 34 obtener clases reusables o simplemente si se desea realizar algún cambio en algunas de las vistas, ésto se realiza sin necesidad de involucrar otras clases. Consta de tres elementos Modelo-Vista-Controlador, tal como lo muestra su nombre y como se indica en [12]: � Modelo: Es el que posee la lógica de la aplicación, es el único componente que tiene relación con la Base de Datos. � Vista: Se encarga de la presentación de la aplicación, es la visualización de lo que el modelo realizo y llega a través del controlador, de igual forma cuando un usuario ingresa datos a través de ésta, es enviada al controlador. � Controlador: Es la parte de la aplicación que toma la información ingresada por el usuario a través de la vista y la envía al modelo, a su vez es quien deja la información lista para vista. Figura 2.1 - Diagrama Modelo MVC En la Figura 2.1 obtenida de [13] se puede observar como es el proceso del Modelo-Vista-Controlador, en la cual se recibe una petición a través de la red al controlador, el cual envía la información al modelo para ser procesada y retorna a el mismo la respuesta para así actualizar la vista con los nuevos cambios a ser mostrados al usuario. 35 CAPÍTULO III – TECNOLOGÍAS A UTILIZAR Las tecnologías hoy en día son la base del desarrollo de cualquier aplicación, ya que mediante ellas se puede lograr, entre otras cosas, la programación y la comunicación entre los datos con la aplicación; como lo es en el caso de los manejadores de base de datos, en este capítulo se presentarán las tecnologías a utilizar para el desarrollo de éste Sistema Web. 3.1 MySQL El sistema manejador de bases de datos es la parte más importante de un sistema de base de datos ya que se encarga de ejecutar todas las operaciones sobre la base de datos además de llevar a cabo funciones como: control de concurrencia, seguridad, integridad, respaldo y recuperación de datos. Para el desarrollo del sistema Web se utilizará MySQL como manejador de base de datos ya que permite manejar con facilidad grandes volúmenes de información, posee gran velocidad a la hora de realizar operaciones ofreciendo así mayor rendimiento, puede ser ejecutado en máquinas con escasos recursos sin ningún problema, esto gracias a su bajo consumo. Además, MySQL es fácil de aprender y de utilizar. 3.2 PHP Se tomó la decisión de utilizar el lenguaje de programación PHP, primero porque fue un requerimiento del cliente y segundo porque es fácil de desarrollar e implementar, aparte que ofrece mayores hospedajes Web a mejores precios, ya que por ser Software libre no se debe pagar ningún tipo de licencia como en el caso de Java. Y lleva mucho tiempo en el mercado en contradicción con Ruby, lo cual trae como ventaja que exista mayor documentación en la Web para abordar cualquier problema que pueda surgir en el trayecto del desarrollo del sistema. 36 CAPÍTULO IV - MARCO METODOLÓGICO Desarrollar un buen software depende de un sinnúmero de actividades y etapas, donde el impacto de elegir la mejor metodología es trascendental para el éxito del sistema. Con el fin de dar cumplimiento a los objetivos establecidos, se propone el uso de una metodología de trabajo que permita hacer el proceso de desarrollo de software más rápido y eficiente. La metodología propuesta para el desarrollo de los procesos, es Feature Driven Development (FDD) ya que, se trata de un proceso ligero el cual posee la documentación necesaria para el desarrollo del mismo y permite el trabajo de los desarrolladores de forma distribuida, teniendo sesiones de trabajos cada cierto tiempo para compartir impresiones y apoyarse. El punto de la documentación fue de gran importancia a la hora de elegir la metodología adecuada, ya que RUP por ser una metodología muy robusta, carga a los desarrolladores con trabajo por el exceso de documentación y XP es lo contrario, no requiere tanta documentación. Otro punto a favor de esta metodología, es que la relación con el cliente se realiza en el primer módulo cuando se solicitan los requerimientos y luego durante el desarrollo, solo si ocurre algún cambio de alcance por parte del cliente. A continuación, se presenta la descripción de los flujos de trabajo del proceso que componen las 5 fases de la metodología FDD, para llevar a cabo el desarrollo e implementación de la aplicación Web. 4.1 ESPECIFICACIÓN DE LA METODOLOGÍA DE DESARROLLO Esta metodología se basa en un proceso iterativo, en el cual se van desarrollando las funcionalidades en intervalos pequeños de tiempo, la cantidad de funcionalidades y el tiempo que toma cada una de ellas es lo que determinara la cantidad de iteraciones del proceso, sin embargo si se consigue con alguna funcionalidad cuyo tiempo de desarrollo sea mayor a dos semanas, ésta se debe 37 subdividir en más ítems. A diferencia de las otras metodologías, ésta sólo provee pasos para las fases de diseño y construcción, por lo tanto para la parte del análisis se realizará una entrevista con el cliente para tomar sus inquietudes y requerimientos del sistema, para luego proceder a realizar un diagrama de casos de usos, el cual enfatizará todas las funcionalidades pedidas por el cliente, sus dependencias y descomposición. Luego de tener en claro los requerimientos y encontrarse dentro del contexto del proyecto, se comienzan a desarrollar las etapas de la FDD. A continuación se comenzará con el desarrollo de la metodología, comenzando por el proceso de análisis. 4.1.1 Casos de uso Mediante el diagrama de casos de uso se pretende modelar el sistema a desarrollar para el C.E.A.P.U.C.V., con sus funcionalidades y las interacciones que este va a presentar con sus usuarios (actores). CASOS DE USO – NIVEL 0 En este caso de uso, se modela el sistema a nivel general, con sus respectivos actores. (Ver Figura 4.1). Descripción de Actores: � Usuario Administrador Financiero: son los usuarios que tienen como función la administración de los gastos por cada taller y el otorgamiento de la solvencia de pagos al padre. � Usuario Coordinador: son los usuarios que tienen como función administrar los talleres y talleristas del plantel y la asignación de los talleristas a los talleres. � Usuario Director: son los usuarios que pueden consultar la información del sistema. 38 � Usuario Tallerista: son los usuarios que modifican información limitada de los talleres y que emiten comentarios de los estudiantes que tienen a su cargo en los talleres. � Usuario Padres: son los usuarios que realizan la inscripción de sus representados en los talleres que brinda el plantel. Figura 4.2 - Diagrama de casos de uso para el nivel 0 CASOS DE USO – NIVEL 1 En la Figura 4.2 se muestran los casos de uso correspondientes al nivel 1 de abstracción, los cuales presentan las principales funcionalidades de la aplicación y su interacción con los actores. En la Tabla 4.1, Tabla 4.2, Tabla 4.3, Tabla 4.4, Tabla 4.5, Tabla 4.6, Tabla 4.7, Tabla 4.8, Tabla 4.9, Tabla 4.10, Tabla 4.11 y Tabla 4.12 se detalla la especificación para cada caso de uso del nivel 1. 39 Figura 4.3 - Diagrama de casos de uso nivel 1 Caso de uso 1.- Realizar conciliación Actores Administrador financiero Descripción Funcionalidad que permite al Administrador financiero, dar solvencia a los padres una vez realizado el pago de talleres de sus representados. Tabla 4.1 - Especificación del caso de uso: Realizar conciliación Caso de uso 2.- Administrar gastos de talleres Actores Administrador financiero Descripción Funcionalidad a través de la cual el Administrador financiero agrega, modifica y elimina los gastos que generan los talleres que brinda el plantel. 40 Tabla 4.2 - Especificación del caso de uso: Administrar gastos de talleres Caso de uso 3.- Consultar reportes Actores Administrador financiero, Director, Tallerista, Coordinador Descripción Funcionalidad a través de la cual los usuarios consultan estudiantes inscritos en talleres, padres solventes y deudores, pagos al plantel y gastos del plantel y comentarios emitidos por los talleristas sobre los estudiantes. Tabla 4.3 - Especificación del caso de uso: Consultar reportes Caso de uso 4.- Autenticar Actores Administrador financiero, Padres, Director, Tallerista, Coordinador, Médico Descripción Funcionalidad que permite a los usuarios acceder al Sitio Web, mediante un nombre de usuario y una contraseña. Tabla 4.4 - Especificación del caso de uso: Autenticar Caso de uso 5.- Consultar servicios Actores Padres Descripción Funcionalidad que permite a los padres consultar sus representados, los talleres y su solvencia. Tabla 4.5 - Especificación del caso de uso: Consultar servicios Caso de uso 6.- Cambiar contraseña Actores Administrador financiero, Padres, Director, Tallerista, Coordinador Descripción Funcionalidad a través de la cual todos los usuarios cambian su contraseña de acceso al sistema. Tabla 4.6 - Especificación del caso de uso: Cambiar contraseña Caso de uso 7.- Inscribir Actores Padres Descripción Funcionalidad a través de la cual los padres inscriben a sus representados en los talleres que ofrece el plantel. Tabla 4.7 - Especificación del caso de uso: Inscribir 41 Caso de uso 8.- Administrar talleres Actores Tallerista, Coordinador Descripción Funcionalidad que permite al coordinador del plantel agregar, modificar y eliminar talleres, así como también asignar talleristas a talleres, y al tallerista editar información limitada de los talleres. Tabla 4.8 - Especificación del caso de uso: Administrar talleres Caso de uso 9.- Administrar usuarios Actores Coordinador Descripción Funcionalidad a través de la cual el coordinador del plantel agrega, modifica y elimina los usuarios del sistema. Tabla 4.9 - Especificación del caso de uso: Administrar usuarios Caso de uso 10.- Administrar horarios Actores Coordinador Descripción Funcionalidad a través de la cual el coordinador del plantel agrega, modifica y elimina los horarios que en que los talleres serán impartidos. Tabla 4.10 - Especificación del caso de uso: Administrar horarios Caso de uso 11.- Administrar materiales Actores Coordinador Descripción Funcionalidad a través de la cual el coordinador del plantel agrega, modifica y elimina los materiales pertenecientes a los talleres. Tabla 4.11 - Especificación del caso de uso: Administrar materiales Caso de uso 12.- Pagar mensualidad Actores Padres Descripción Funcionalidad a través de la cual los padres cancelan la mensualidad de sus representados inscritos en talleres que presta el plantel. Tabla 4.12 - Especificación del caso de uso: Pagar mensualidad 42 CASOS DE USO – NIVEL 2 En la Figura 4.3 se muestra el caso de uso Realizar conciliación en un segundo nivel de abstracción. Luego, se muestra la especificación correspondiente en la Tabla 4.13. Figura 4.4 - Diagrama de casos de uso nivel 2: Realizar conciliación Caso de uso 1.1. Listar padres Actores Administrador financiero Pre-condición El usuario debe estar autenticado y debe haber seleccionado un rango de fechas Descripción Lista los padres cuyo pago de talleres no ha sido validado ó ha sido erróneo. Post-condición Se da la opción para validar si los padres han hecho el pago de talleres. Tabla 4.13 - Especificación del caso de uso: Listar padres En la Figura 4.4 se observa el detalle del caso de uso Administrar gastos de talleres en un segundo nivel de abstracción. Luego, se muestra la especificación correspondiente en las Tablas 4.14, Tabla 4.15 y Tabla 4.16. Figura 4.5 - Diagrama de casos de uso nivel 2: Administrar gastos de talleres 43 Caso de uso 2.1. Agregar Actores Administrador financiero Pre-condición El usuario debe estar autenticado. Debe existir al menos un taller y un tipo de gasto en la base de datos. Descripción Agrega gastos por cada taller, de los siguientes tipos: pago a talleristas, transportistas, extraordinarios y de materiales. Se debe especificar el monto y la fecha de pago. Post-condición El registro queda almacenado en la base de datos. Tabla 4.14 - Especificación del caso de uso: Agregar Caso de uso 2.2. Modificar Actores Administrador financiero Pre-condición El usuario debe estar autenticado y debe existir al menos un gasto de taller a modificar. Descripción Se selecciona el gasto objeto de modificación, se realizan los cambios correspondientes y se presiona la opción Modificar. Post-condición Los cambios del registro se almacenan en la base de datos. Tabla 4.15 - Especificación del caso de uso: Modificar Caso de uso 2.3. Eliminar Actores Administrador financiero Pre-condición El usuario debe estar autenticado y debe existir al menos un gasto de taller a eliminar. Descripción Se selecciona el gasto objeto de eliminación y se presiona la opción Eliminar. Post-condición El registro es eliminado de la base de datos. Tabla 4.16 - Especificación del caso de uso: Eliminar En la Figura 4.5 se observa el detalle del caso de uso Consultar reportes en un segundo nivel de abstracción. Posteriormente, se muestra la especificación correspondiente en la Tabla 4.17, Tabla 4.18, Tabla 4.19, Tabla 4.20 y Tabla 4.21. 44 Figura 4.6 - Diagrama de caso de uso nivel 2: Consultar reportes Caso de uso 3.1. Consultar talleres Actores Administrador financiero, Director Pre-condición El usuario debe estar autenticado. Deben existir talleres para consultar su información. Descripción Permitirá realizar la búsqueda contra la base de datos, para listar todos los talleres que se encuentren abiertos. Post-condición Muestra al usuario un listado de talleres. Tabla 4.17 - Especificación del caso de uso: Consultar talleres Caso de uso 3.2. Consultar gastos Actores Administrador financiero, Director Pre-condición El usuario debe estar autenticado. Descripción Se selecciona el taller abierto objeto de la consulta y se especifica un rango de fechas para así realizar la búsqueda contra la base de datos, y listar todos los gastos del taller especificado. Post-condición Muestra al usuario un listado de gastos por taller. Tabla 4.18 - Especificación del caso de uso: Consultar gastos Caso de uso 3.3. Consultar padres Actores Administrador financiero, Director 45 Pre-condición El usuario debe estar autenticado. Descripción Permite realizar la búsqueda contra la base de datos, para listar todos los padres que se encuentren registrados en el sistema. El sistema permite mostrar los representan que se encuentran solventes y deudores. Post-condición Muestra al usuario un listado con los padres de los estudiantes del plantel. Tabla 4.19 - Especificación del caso de uso: Consultar padres Caso de uso 3.4. Consultar inscritos Actores Administrador financiero, Director, Tallerista, Coordinador Pre-condición El usuario debe estar autenticado. Descripción Se listan los talleres abiertos actualmente y al seleccionar un taller se mostrarán los estudiantes que se encuentran inscritos en él. Post-condición Muestra al usuario un listado con los estudiantes que se encuentran inscritos en el taller seleccionado. Tabla 4.20 - Especificación del caso de uso: Consultar inscritos Caso de uso 3.5. Consultar pagos Actores Administrador financiero, Director Pre-condición El usuario debe estar autenticado. Descripción Permite realizar la búsqueda contra la base de datos, para listar todos los pagos de talleres que han hecho los padres en un rango de fecha especificado. Post-condición Se muestra al usuario un listado con los pagos efectuados por los padres. Tabla 4.21 - Especificación del caso de uso: Consultar pagos En la Figura 4.6 se observa el detalle del caso de uso Consultar servicios en un segundo nivel de abstracción. En las Tablas 4.22, Tabla 4.23 y Tabla 4.24, se muestra la especificación correspondiente para cada caso de uso. 46 Figura 4.7 - Diagrama de casos de uso nivel 2: Consultar servicios Caso de uso 5.1. Consultar representados Actores Padres Pre-condición El usuario debe estar autenticado. Descripción Funcionalidad que permite a los padres visualizar la información de sus representados en el plantel. Post-condición Se muestra al padre un listado con sus representados indicando en que taller(es) se encuentra inscrito y el estado de su inscripción. Tabla 4.22 - Especificación del caso de uso: Consultar representados Caso de uso 5.2. Consultar talleres Actores Padres Pre-condición El usuario debe estar autenticado. Deben existir talleres para consultar su información. Descripción Funcionalidad por medio de la cual los padres consultan los talleres abiertos por el plantel en el período escolar actual. Post-condición Se muestra al padre un listado de talleres abiertos. Tabla 4.23 - Especificación del caso de uso: Consultar talleres Caso de uso 5.3. Consultar solvencia Actores Padres Pre-condición El usuario debe estar autenticado. Descripción Funcionalidad que permite a los padres conocer su estado en cuanto a la solvencia de los talleres de sus representados en el período escolar actual. Los estados pueden tomar los siguientes valores: pendiente, confirmado, rechazado por monto, rechazado por número 47 de voucher. Post-condición Se muestra al padre el estado que posee actualmente. Tabla 4.24 - Especificación del caso de uso: Consultar solvencia En la Figura 4.7 se observa el detalle del caso de uso Inscribir en un segundo nivel de abstracción. Posteriormente, se muestra la especificación correspondiente en la Tabla 4.25. Figura 4.8 - Diagrama de casos de uso nivel 2: Inscribir Caso de uso 7.1. Listar representados Actores Padres Pre-condición El usuario debe estar autenticado y en caso de cancelar con depósito ó transferencia bancaria debe poseer la información de éstos a mano. Descripción Se listan los representados del padre logueado a fin de que seleccione uno de ellos y se le asigne algún taller disponible. Luego de haber asignado todos los talleres deseados a sus representados deberá finalizar la inscripción indicando el método de pago (efectivo, depósito bancario ó transferencia bancaria). En caso de pagar con depósito o transferencia bancaria deberá introducir el número de depósito ó transferencia, así como también indicar el banco emisor. En caso contrario el padre deberá acudir al plantel a realizar el pago en efectivo. Post-condición Los estudiantes inscritos en talleres quedan en estado pendiente hasta que el administrador financiero realice la conciliación de pagos de padres. Tabla 4.25 - Especificación del caso de uso: Listar representados 48 En la Figura 4.8 se observa el detalle del caso de uso Administrar talleres en un segundo nivel de abstracción. A continuación, se muestra la especificación correspondiente en la Tabla 4.26 y Tabla 4.27. Figura 4.9 - Diagrama de casos de uso nivel 2: Administrar talleres Caso de uso 8.1. Consultar talleres Actores Coordinador Pre-condición El usuario debe estar autenticado. Descripción Funcionalidad que permite listar los talleres que imparte el plantel. Post-condición Se muestra un listado de talleres al usuario. Tabla 4.26 - Especificación del caso de uso: Consultar talleres Caso de uso 8.2. Consultar talleres abiertos Actores Coordinador, tallerista Pre-condición El usuario debe estar autenticado. Descripción Permite consultar los talleres que se encuentra abiertos actualmente para el período escolar, y en los cuales los estudiantes pueden inscribirse. Post-condición Se muestra un listado de talleres abiertos al usuario. Tabla 4.27 - Especificación del caso de uso: Consultar talleres abiertos En la Figura 4.9 se observa el detalle del caso de uso Administrar usuarios en un segundo nivel de abstracción. Posteriormente, se muestra la especificación correspondiente en la Tabla 4.28, Tabla 4.29, Tabla 4.30 y Tabla 4.31. 49 Figura 4.10 - Diagrama de casos de uso nivel 2: Administrar usuarios Caso de uso 9.1. Consultar Actores Coordinador Pre-condición El usuario debe estar autenticado. Descripción Permite realizar la búsqueda contra la base de datos, para listar todos los usuarios del sistema del tipo: director, administrador financiero, coordinador y tallerista. Post-condición Se muestra al usuario un listado de usuarios del sistema. Tabla 4.28 - Especificación del caso de uso: Consultar Caso de uso 9.2. Agregar Actores Coordinador Pre-condición El usuario debe estar autenticado y haber consultado el listado de usuarios del sistema. Descripción Se completa la información básica del usuario como cédula, nombre, apellido, correo electrónico y nombre de usuario. Post-condición El registro queda almacenado en la base de datos y se le enviará un correo al usuario indicándole su contraseña, la cual podrá ser cambiada posteriormente. Tabla 4.29 - Especificación del caso de uso: Agregar Caso de uso 9.3. Modificar Actores Coordinador Pre-condición El usuario debe estar autenticado y haber consultado el listado de usuarios. Debe existir por lo menos un usuario 50 a modificar. Descripción Funcionalidad por medio de la cual se selecciona el usuario, se presiona la opción Modificar y se editan los datos correspondientes del usuario. Post-condición Los cambios del registro se almacenan en la base de datos. Tabla 4.30 - Especificación del caso de uso: Modificar Caso de uso 9.4. Eliminar Actores Coordinador Pre-condición El usuario debe estar autenticado y haber consultado el listado de usuarios. Debe existir por lo menos un usuario a eliminar. Descripción A través de esta funcionalidad, se selecciona un usuario del listado, se presiona la opción Eliminar y se confirma la eliminación del usuario de la base de datos. Post-condición El registro es eliminado de la base de datos. Tabla 4.31 - Especificación del caso de uso: Eliminar En la Figura 4.10 se observa el detalle del caso de uso Administrar horarios en un segundo nivel de abstracción. Posteriormente, se muestra la especificación correspondiente en la Tabla 4.32, Tabla 4.33, Tabla 4.34 y Tabla 4.35. Figura 4.11 - Diagrama de casos de uso nivel 2: Administrar horarios Caso de uso 10.1. Consultar 51 Actores Coordinador Pre-condición El usuario debe estar autenticado. Descripción Permite realizar la búsqueda contra la base de datos, para listar todos los horarios para talleres que existen en el sistema. Post-condición Se muestra al usuario un listado de horarios de talleres. Tabla 4.32 - Especificación del caso de uso: Consultar Caso de uso 10.2. Agregar Actores Coordinador Pre-condición El usuario debe estar autenticado. Descripción Se completa el campo descripción del horario, en el cual se deben especificar los días de la semana y la fecha de inicio y fin del taller. Post-condición El registro queda almacenado en la base de datos. Tabla 4.33 - Especificación del caso de uso: Agregar Caso de uso 10.3. Modificar Actores Coordinador Pre-condición El usuario debe estar autenticado. Y debe existir un horario en la base de datos a modificar. Descripción Funcionalidad por medio de la cual se selecciona el horario, se presiona la opción Modificar y se editan los datos correspondientes del horario. Post-condición Los cambios del registro se almacenan en la base de datos. Tabla 4.34 - Especificación del caso de uso: Modificar Caso de uso 10.4. Eliminar Actores Coordinador Pre-condición El usuario debe estar autenticado. Descripción A través de esta funcionalidad, se selecciona un horario del listado, se presiona la opción Eliminar y se confirma la eliminación del horario de la base de datos. Post-condición El registro es eliminado de la base de datos. Tabla 4.35 - Especificación del caso de uso: Eliminar 52 En la Figura 4.11 se observa el detalle del caso de uso Administrar materiales en un segundo nivel de abstracción. Luego, se muestra la especificación correspondiente en la Tabla 4.36, Tabla 4.37, Tabla 4.38 y Tabla 4.39. Figura 4.12 - Diagrama de casos de uso nivel 2: Administrar materiales Caso de uso 11.1. Consultar Actores Coordinador Pre-condición El usuario debe estar autenticado. Descripción Permite realizar la búsqueda contra la base de datos, para listar todos los materiales de talleres que existen en el sistema. Post-condición Se muestra al usuario un listado de materiales de talleres. Tabla 4.36 - Especificación del caso de uso: Consultar Caso de uso 11.2. Agregar Actores Coordinador Pre-condición El usuario debe estar autenticado. Descripción Se completa la información necesaria del material tal como: nombre, descripción y costo. Post-condición El registro queda almacenado en la base de datos. Tabla 4.37 - Especificación del caso de uso: Agregar Caso de uso 11.3. Modificar Actores Coordinador 53 Pre-condición El usuario debe estar autenticado y debe existir por lo menos un material en la base de datos a modificar. Descripción Funcionalidad por medio de la cual se selecciona el material, se presiona la opción Modificar y se editan los datos correspondientes del material. Post-condición Los cambios del registro se almacenan en la base de datos. Tabla 4.38 - Especificación del caso de uso: Modificar Caso de uso 11.4. Eliminar Actores Coordinador Pre-condición El usuario debe estar autenticado. Descripción A través de esta funcionalidad, se selecciona un material del listado, se presiona la opción Eliminar y se confirma la eliminación del material de la base de datos. Post-condición El registro es eliminado de la base de datos. Tabla 4.39 - Especificación del caso de uso: Eliminar En la Figura 4.12 se observa el detalle del caso de uso Pagar mensualidad en un segundo nivel de abstracción. A continuación, se muestra la especificación correspondiente en la Tabla 4.40. Figura 4.13 - Diagrama de casos de uso nivel 2: Pagar mensualidad Caso de uso 12.1. Listar representados Actores Padres Pre-condición El usuario debe estar autenticado y en caso de cancelar con depósito ó transferencia bancaria debe poseer la información de éstos a mano. Descripción Se listan los representados del padre logueado a fin de que seleccione uno de ellos y se listen los talleres que el padre debe cancelar por concepto de mensualidad. Posteriormente deberá finalizar el pago de la mensualidad 54 indicando el método de pago (efectivo, depósito bancario ó transferencia bancaria). En caso de pagar con depósito o transferencia bancaria deberá introducir el número de depósito ó transferencia, así como también indicar el banco emisor. En caso contrario el padre deberá acudir al plantel a realizar el pago en efectivo. Post-condición Los estudiantes en talleres cuyo pago de mensualidad fue realizado quedan en estado pendiente hasta que el administrador financiero realice la conciliación de pagos de padres. Tabla 4.40 - Especificación del caso de uso: Listar representados CASOS DE USO – NIVEL 3 En la Figura 4.13 se observa el detalle del caso de uso Listar padres en un tercer nivel de abstracción. Luego, se muestra la especificación correspondiente en la Tabla 4.41. Figura 4.14 - Diagrama de casos de uso nivel 3: Validar Caso de uso 1.1.1. Validar Actores Administrador financiero Pre-condición Haber validado los pagos realizados por los padres Descripción Formaliza la inscripción de los representados, cambiando su estado a Inscrito y el estado del padre es cambiado a Solvente. Post-condición Se envía un correo electrónico a cada padre validado indicándole su nuevo estado y el de sus representados. Tabla 4.41 - Especificación del caso de uso: Validar En la Figura 4.14 se observa el detalle del caso de uso Consultar inscritos en un tercer nivel de abstracción. Posteriormente, se muestra la especificación correspondiente en la Tabla 4.42. 55 Figura 4.15 - Diagrama de casos de uso nivel 3: Consultar inscritos Caso de uso 3.4.1. Consultar comentarios Actores Coordinador, Tallerista Pre-condición El usuario debe haber seleccionado un estudiante perteneciente a un taller abierto. Descripción Tanto el coordinador como el tallerista pueden consultar los comentarios que emite un tallerista a un estudiante perteneciente a su taller. Si el usuario es tallerista tendrá la opción de emitir algún comentario al estudiante en cuestión. Post-condición Se muestran los comentarios de talleristas acerca de un estudiante en particular. Tabla 4.42 - Especificación del caso de uso: Consultar comentarios En la Figura 4.15 se observa el detalle del caso de uso Consultar talleres en un tercer nivel de abstracción. Posteriormente, se muestra la especificación correspondiente en la Tabla 4.43, Tabla 4.44 y Tabla 4.45. Figura 4.16 - Diagrama de casos de uso nivel 3: Consultar talleres Caso de uso 8.1.1. Agregar Actores Coordinador Pre-condición Debe existir por lo menos un período para agregar el taller, el cual puede ser: mensual, trimestral, semestral ó 56 anual. Descripción Luego de haber consultado los talleres existentes, se presiona la opción Agregar y se completan los datos básicos de los talleres. Post-condición El registro queda almacenado en la base de datos. Tabla 4.43 - Especificación del caso de uso: Agregar Caso de uso 8.1.2. Modificar Actores Coordinador Pre-condición Debe existir por lo menos un taller. Descripción Luego de haber consultado los talleres existentes, se presiona la opción Modificar y se realizan los cambios en los campos correspondientes de talleres. Post-condición Los cambios del registro se almacenan en la base de datos. Tabla 4.44 - Especificación del caso de uso: Modificar Caso de uso 8.1.3. Eliminar Actores Coordinador Pre-condición Debe existir por lo menos un taller. Descripción Luego de haber consultado los talleres existentes, se presiona la opción Eliminar y se confirma la eliminación del taller existente. Post-condición El registro es eliminado de la base de datos. Tabla 4.45 - Especificación del caso de uso: Eliminar En la Figura 4.16 se observa el detalle del caso de uso Consultar talleres abiertos en un tercer nivel de abstracción. Posteriormente, se muestra la especificación correspondiente en la Tabla 4.46, Tabla 4.47 y Tabla 4.48. 57 Figura 4.17 - Diagrama de casos de uso nivel 3: Consultar talleres abiertos Caso de uso 8.2.1. Abrir Actores Coordinador Pre-condición El taller debe existir en la tabla de talleres donde se encuentra la información básica del taller, como por ejemplo: descripción, objetivos, capacidad, inscripción, mensualidad, entre otros. Descripción Se indica la fecha de inicio y termino del taller, el horario en el cual será impartido y se realiza la asignación del tallerista al taller. Post-condición El taller es abierto y está disponible para que los padres puedan inscribir a sus representados. Tabla 4.46 - Especificación del caso de uso: Abrir Caso de uso 8.2.2. Modificar Actores Coordinador, tallerista Pre-condición El taller debe estar abierto. Descripción Al seleccionar el taller abierto y presionar la opción Modificar se podrán realizar los cambios pertinentes sobre el taller. El coordinador podrá modificar toda la información, mientras que el tallerista tendrá acceso limitado y podrá editar únicamente la descripción, objetivos y materiales. Post-condición Los cambios del registro se almacenan en la base de datos. Tabla 4.47 - Especificación del caso de uso: Modificar Caso de uso 8.2.3. Eliminar Actores Coordinador Pre-condición El taller debe estar abierto. 58 Descripción Luego de haber consultado los talleres abiertos existentes, se presiona la opción Eliminar y se confirma la eliminación del taller existente. Post-condición El registro es eliminado de la base de datos. Tabla 4.48 - Especificación del caso de uso: Eliminar 4.1.2 Desarrollo de la Metodología FDD Luego de tener en claro los requerimientos otorgados por los diagramas de Casos de Uso, se va a tratar con cuidado el punto de las funcionalidades, ya que como se discutió anteriormente la FDD se basa en ellas, en [14] hablan de una jerarquía entre estas funcionalidades, primero se tiene las features, las cuales son las funcionalidades específicas, luego el eslabón de las features set las cuales son las que poseen características en común con el sistema. Por último se tiene las majors features sets las cuales agrupan a las features set, poseen un nivel más alto de abstracción al cliente. La idea de desarrollar en base a estas jerarquías de funcionalidades, es obtener un vocabulario común entre los desarrolladores a la hora de comunicarse con el cliente, para así desarrollar conjuntamente un modelo de negocio en común. La jerarquía de las funcionalidades provee el siguiente formato: � features: <acción> el <resultado><de|para|sobre|por>un<objeto> � features set: <acción><-ando>un<objeto> � features majors: Administración de <objeto> Según se describe en [14], el ciclo de vida de la metodología FDD va guiado por 5 fases, uno de ellos se realizará tantas veces como sean necesarias las iteraciones, así como se muestra en la Figura 4.17 tomada de la misma fuente. 59 Figura 4.18 - Ciclo de vida de la Metodología FDD 60 1) Desarrollar un modelo global En [15], proponen esta actividad con el fin de obtener un conocimiento global de la aplicación, se realiza un bosquejo de las definiciones de las restricciones, un esbozo de las funcionalidades y una lista de los elementos no funcionales. Para ésto se va a desarrollar un diagrama de clases, en donde se plasmarán todos los objetos, sus relaciones y acciones, en conjunto se realizará una lista con los requerimientos no funcionales, se presentará una lista preliminar de las funcionalidades del sistema, para finalizar para obtener el dominio general de la aplicación se desarrollará el modelo objeto del dominio. a) Diagrama de Clases Mediante este diagrama se puede representar la realidad del problema mediante las entidades u objetos, expresando sus atributos y acciones que poseen cada uno, así como las relaciones con los demás entes. En [16], definen a una clase como un artefacto de modelado que define un conjunto de objetos que comparte los mismos atributos: � Atributos (Conocimiento). � Operaciones (Responsabilidad). � Relaciones (Entrelazamiento). � Semántica (Relevancia). A continuación en la Figura 4.18 se muestra el Diagrama de Clases a utilizar para el desarrollo del Sistema Web de Gestión e Inscripción online de talleres, en el cual se presentan solo los nombres de las entidades y sus relaciones, para luego en las Figuras 4.19 a la Figura 4.41 se muestran en detalle cada objeto con sus atributos y acciones. 61 Figura 4.19 - Diagrama de Clases Figura 4.20 - Clase asigna_tallerista Figura 4.21 - Clase cargo de usuarios 62 Figura 4.22 - Clase concepto Figura 4.23 - Clase estados Figura 4.24 - Clase etapas Figura 4.25 - Clase gastos Figura 4.26 - Clase grados 63 Figura 4.27 - Clase horario Figura 4.28 - Clase ingresos Figura 4.28 - Clase inscripción 64 Figura 4.29 - Clase material Figura 4.30 - Clase meses Figura 4.31 - Clase pagos 65 Figura 4.32 - Clase período Figura 4.33 - Clase seguridad Figura 4.34 - Clase taller Figura 4.35 - Clase taller_etapa Figura 4.36 - Clase taller_material 66 Figura 4.37 - Clase talleres_actuales Figura 4.38 - Clase tipo_gasto Figura 4.39 - Clase alumnos 67 Figura 4.40 - Clase usuario 68 Figura 4.41 - Clase padres b) Funcionalidades del sistema A continuación se presenta una lista preliminar de las funcionalidades del Sistema, esta lista nos da una idea de lo que abarcará el sistema de administración de talleres C.E.A.P.U.C.V.: � Iniciar sesión � Realizar inscripción � Modificar inscripción 69 � Consultar solvencia � Cambiar contraseña � Dar solvencia al representante � Administrar gastos de talleres � Consultar reportes de talleristas, estudiantes, estudiantes por taller, entre otros � Consultar servicios � Consultar talleres � Consultar gastos � Consultar representantes � Consultar Representantes solventes y deudores � Consultar estudiantes inscritos � Agregar y consultar comentarios de estudiantes hechos por talleristas � Consultar pagos � Agregar, modificar y eliminar � Asignar talleristas a talleres � Administrar talleres � Administrar usuarios (talleristas, coordinador, director, administrador financiero) � Administrar horarios de talleres � Administrar materiales de talleres 70 c) Requerimientos no funcionales Los requerimientos no funcionales, son los que van a permitir la eficiencia y productividad de la aplicación, de acuerdo a la lista de requerimientos funcionales mostradas, se toman los requerimientos no funcionales más destacados dentro de la aplicación de Administración de Talleres e Inscripción del C.E.A.P.U.C.V. son: � Fiabilidad: Este requerimiento tiene que ver con la confianza que los usuarios deben esperar las respuestas del sistema, en el aspecto técnico. Ésto es para que la funcionalidad del sistema no se vea afectada por agentes externos. � Los aspectos en calidad a considerar en este punto son: � Capacidad de tolerar errores. � Capacidad de recuperarse de los errores. � Capacidad de tolerar sobrecarga de información o usuarios. � Los requerimientos no funcionales encontrados dentro de esta categoría son: � Garantizar capacidad de capturar errores. � Mantenibilidad: Este requisito está relacionado con el hecho de realizar modificaciones o cambios al sistema, sin que ésto implique un gasto de recursos exagerados por parte de la organización. Se desea que el mantenimiento del sistema sea relativamente sencillo. � Los criterios a realizar son: � Uso de un modelo unificado de desarrollo. � Documento del diseño y de la solución. � Algunos de los requerimientos son: � Realizar un manual de referencia para el manejo del sistema. 71 � Seguir una metodología para el diseño y el desarrollo. � Usabilidad: este requisito se refiere a la presentación que debe tener el sistema para interactuar con los usuarios, las cuales deben otorgar facilidad al cliente. � Las características generales son: � Facilidad de uso. � Diseño de interfaz de usuarios. � Los requerimientos son: � Utilizar el idioma castellano para los mensajes y textos en la interfaz. � Seguir parámetros de diseño de interfaces. d) Modelo Objeto del Dominio En el documento [17], explican el Modelo Objeto del Dominio, como un contenedor de objetos de dominio de la aplicación, en el cual se describen sus relaciones. Estos objetos representan clases conceptuales del dominio del problema. En la Figura 4.42 se muestra el Objeto del Dominio del Sistema del Sistema Web de Gestión e Inscripción de Talleres del C.E.A.P.U.C.V. 72 Figura 4.42 - Diagrama de objetos del dominio Descripción de los Objetos que intervienen: � Usuario: Representa la información común de los usuarios del plantel. Entre ellos se encuentran: director, coordinador, tallerista y administrador financiero. � Administrador financiero: Representa la información de los usuarios del plantel que pueden administrar gastos por cada taller y dar solvencia al padre. � Coordinador: Representa la información de los coordinadores del plantel que tienen como función administrar los talleres y talleristas, así como también la asignación de talleristas a los talleres. 73 � Tallerista: Representa la información de los talleristas del plantel que imparten los talleres, que modifican características de los mismos, y que emiten comentarios de sus estudiantes. � Padres: Representa la información de los padres que pueden inscribir a sus representados en talleres y pueden consultar su solvencia. � Alumnos: Representa la información de los estudiantes del plantel que pueden ser inscritos en talleres. � Director: Representa la información del usuario del plantel que puede consultar la información. � Taller: Actividad extracurricular que imparten los talleristas del plantel a sus estudiantes. Contiene la información básica de cada taller. � Talleres Actuales: Talleres que actualmente se encuentran abiertos y disponibles para inscripciones de alumnos. � Material: Objeto que representa los materiales a ser utilizados por los estudiantes en los talleres, los cuales son asignados por los talleristas. � Inscripción: Actividad por medio de la cual los padres escogen talleres a sus representados. � Solvencia: Actividad por medio de la cual los padres son liberados de deudas una vez se haya verificado su pago de los talleres. � Gastos: Valores que indican los gastos por cada taller que se imparte en el plantel, entre los cuales se encuentran: pago a talleristas, transportistas, extraordinarios, de materiales, entre otros. � Pagos: Valores que indican los pagos de talleres realizados por los padres, mediante los métodos de pago: efectivo, depósito bancario, transferencia bancaria, cheques, entre otros. � Período: Intervalo de tiempo que indica los tipos y pagos de talleres, entre los cuales se encuentran: mensual, trimestral, semestral, anual. 74 � Horario: Indica los días de la semana y las horas en que los talleres serán impartidos por los talleristas correspondientes. � Estados: Valor que indica el estatus en que se encuentra la inscripción de los alumnos en los talleres. Puede tomar el valor de Pendiente y Confirmado. � Ingresos: Objeto que representa la información económica suministrada por los padres al momento de realizar la inscripción. Entre ellos se encuentran: método de pago, entidad bancaria, período a cancelar, monto, entre otros. � Concepto: Valor que indica el motivo por el cual un padre realiza un pago de talleres. El concepto puede ser: Inscripción, mensualidad, inscripción más mensualidad. � Meses: Objeto que indica los meses del año para así llevar el control de los mismos en los pagos de los talleres efectuados por los padres. � Cargo: Indica el tipo de cuenta que posee un usuario. Puede tomar los siguientes valores: director, coordinador, tallerista, administrador financiero. � Tipo gasto: Indica los tipos de gastos que pueden existir por cada taller. Entre ellos se encuentran: pago a talleristas, transportistas, extraordinarios y de materiales. � Seguridad: Objeto que contiene los datos necesarios para que los usuarios puedan iniciar sesión en el sistema Web. � Etapas: Objeto que indica las etapas existentes en la Institución, entre ellas están: Educación Inicial, Primera Etapa, Segunda Etapa y Ciclo Diversificado. � Grados: Objeto que indica los grados en los que se subdividen las etapas, entre ellos se encuentran: 1er Grupo, 2do Grupo, 3er Grupo, 4to Grupo, 1er Grado, 2do Grado, 3er Grado, 4to Grado, 5to Grado, 75 6to Grado, 7mo Grado, 8vo Grado, 9no Grado, 1ero Año Ciencias y 2do Año Ciencias. � Taller etapa: Indica los talleres que pertenecen a una etapa de educación de la Institución. 2) Construcción de lista de funcionalidades Los casos de uso, el modelo de objeto y el diagrama de clases, son documentos que ayudan a la realización de esta lista de funcionalidades, anteriormente se mostró un esbozo de las funcionalidades a realizar, en esta fase se propone realizar la lista de funcionalidades de acuerdo a la jerarquía de funcionalidades y se realiza la priorización basado en la satisfacción del cliente, como se muestra en la Tabla 4.49, en donde se listan las funcionalidades, se coloco una prioridad A para todas (debe tener), por lo tanto solo se colocara el orden de implementación por cada mayor feature. Nombre Jerarquía Prioridad Administración de usuarios. (Mayor feature set) II Listando usuarios. (feature set) Eliminando usuarios. (feature set) Creando usuarios. (feature set) Asignar un rol a un usuario. (feature) Modificando usuarios. (feature set) Administración de talleres (Mayor feature set) III Listando talleres. (feature set) Eliminando talleres. (feature set) Creando talleres. (feature set) Agregar materiales a un taller. (feature) Agregar horario a un taller. (feature) Abriendo talleres. (feature set) 76 Asignar un tallerista a un taller. (feature) Asignar un horario a un taller. (feature) Modificando talleres. (feature set) Administrar horarios (Mayor feature set) VI Listando horarios. (feature set) Eliminando horarios. (feature set) Creando horarios. (feature set) Modificando horarios. (feature set) Administrar materiales (Mayor feature set) V Listando materiales. (feature set) Eliminando materiales. (feature set) Creando materiales. (feature set) Modificando materiales. (feature set) Administrar gastos. (Mayor feature set) VI Listando gastos (feature set) Eliminando gastos. (feature set) Creando gastos. (feature set) Modificando gastos. (feature set) Administrar pagos. (Mayor feature set) VII Listando pagos. (feature set) Revisar pagos para dar solvencia a un usuario. (feature) Enviar correo para notificar estado de solvencia otorgada al usuario. (feature) Administrando reportes. (Mayor feature set) V Realizando reportes por estudiantes. (feature set) Listar estudiantes por taller. (feature) Mostar comentarios de los estudiantes. (feature) Agregar comentarios de estudiantes. (feature) 77 Eliminar comentarios de estudiantes. (feature) Realizando reportes por talleres. (feature set) Calcular número de inscritos por taller (feature) Listar inscritos de un taller. (feature) Calcular total talleres abiertos. (feature) Realizando reportes por representantes. (feature set) Listar representantes con deudas. (feature) Listar representantes sin deudas. (feature) Realizando reportes de pagos. (feature set) Listar los pagos por períodos de tiempo. (feature) Calcular monto total de pagos en un período de tiempo. (feature) Listar estudiantes que pertenecen a un representante. (feature) Listar talleres abiertos. (feature) Consultando Inscritos. (feature set) Listar estudiantes inscritos que pertenecen a algún taller. (feature) III Consultando talleres. (feature set) Listar talleres abiertos. (feature) Consultar solvencia de un representante. (feature) Autenticar usuarios (feature) I Cambiar contraseña (feature) II Tabla 4.49 - Tabla de Features por prioridades 3) Planteamiento por rasgos En esta fase, se realiza la planificación de alto nivel de las funcionalidades, tomando en cuenta su prioridad y colocando sus respectivos responsables. En la Figura 4.43 se observa la planificación realizada en el cual se colocaron todas las majors features, asignándole un responsable para el desarrollo, un orden y un 78 tiempo estipulado para su finalización. Figura 4.43 - Planificación de las funcionalidades del sistema Web 4) Diseñar por funcionalidades En esta fase se comienza a realizar la parte productiva del proceso, donde se da inicio a la planificación planteada anteriormente, según [16] cada programador comienza a desarrollar por rasgos con un tiempo no mayor a 2 semanas por cada uno, este proceso iterativo incluye, el diagrama de secuencias por cada funcionalidad para verificar que el diseño pueda ser implementado. En esta fase también se coloca el diagrama de clases actualizado, para este desarrollo el diagrama de clases no sufrió modificaciones, por lo tanto no fue colocado dentro de la misma. A continuación se presentan los diagramas de secuencia por cada caso de uso. 79 Figura 4.44 - Realizar conciliación En la Figura 4.44 se muestra la funcionalidad Realizar Conciliación, en donde el Administrador Financiero selecciona un rango de fechas y un estado (Pendiente, Rechazado, Confirmado) y se le mostrará un reporte de todos los pagos realizados por los representantes, para luego ser evaluados por el usuario. 80 Figura 4.45 - Administrar gastos de talleres En la Figura 4.45 se muestra el diagrama de secuencia de Administrar gastos de talleres, en el cual el Administrador Financiero podrá listar, modificar, agregar y eliminar los gastos relacionados con un taller. 81 Figura 4.46 - Consular reportes de gastos de talleres En la Figura 4.46 se observa el diagrama de secuencia de Consultar reportes de gastos de talleres, en el cual el Usuario dado un período podrá observar los gastos de cada taller y el total de gastos en ese período. Figura 4.47 - Consultar reporte de inscritos En la Figura 4.47 se observa el diagrama de secuencia para consultar reportes de inscritos, en el cual el usuario específica un taller para luego mostrar el reporte de inscritos asociados a ese taller. 82 Figura 4.48 - Consultar comentarios sobre alumnos En la Figura 4.48 se muestra la opción que el usuario posee luego de listar el reporte de inscritos para poder visualizar y editar los comentarios de un alumno relacionados a un taller. Figura 4.49 - Consultar reporte de talleres En la Figura 4.49 se observa el diagrama de consultar reporte de talleres, con el cual se listarán todos los talleres y la cantidad de talleres que posee abiertos. 83 Figura 4.50 - Consultar reporte de pagos En la Figura 4.50 se muestra el reporte de pagos dado un período de tiempo y un tipo (Deudas, Crédito), donde se específica el representante y el monto pagado o por pagar y da la opción de enviar una notificación vía mail en caso de ser deudor. Figura 4.51 - Consultar reporte de padres En la Figura 4.51, dada una cédula de un padre se obtiene la lista de representados con la cantidad de talleres en los cuales están inscritos actualmente. 84 Figura 4.52 - Consultar reporte de talleres abiertos En la Figura 4.52, se muestra el diagrama de secuencia de consultar reporte de talleres abiertos, en el cual se listarán y se indicará la cantidad de inscritos, así como el dinero obtenido. Figura 4.53 - Autenticar En la Figura 4.53 se observa el diagrama de secuencia de iniciar sesión, en el cual se validan los datos del usuario para ingresar al sistema. 85 Figura 4.54 - Consultar servicios - Consultar Representados En la Figura 4.54 se muestra el diagrama de secuencia de consultar representados en el cual dado el padre autenticado se le listarán sus representados. Figura 4.55 - Consultar servicios - Consultar Talleres En la Figura 4.55 se muestra el diagrama de secuencia de consultar talleres en el cual se listarán los talleres disponibles en el colegio. 86 Figura 4.56 - Consultar Servicios – Consultar Solvencia En la Figura 4.56 se presenta el diagrama de secuencia de consultar solvencia, aquí se mostrará el estado del pago de acuerdo a todos sus representados. Figura 4.57 - Cambiar Contraseña En la Figura 4.57 se muestra el diagrama de secuencia para cambiar contraseña. 87 Figura 4.58 - Inscribir En la Figura 4.58, se observa el diagrama de secuencia se muestra el proceso de inscripción que debe realizar el representante por cada representado, para seleccionar los cursos e introducir los datos del pago. 88 Figura 4.59 - Administrar Talleres En la Figura 4.59 se muestra el diagrama de secuencia para administrar talleres, en el cual se agrega, lista, modifica y elimina. 89 Figura 4.60 - Administrar talleres abiertos En la Figura 4.60, se observa el diagrama de secuencia de Administrar talleres abiertos en el cual dado un taller creado se puede listar, agregar, modificar y eliminar. 90 Figura 4.61 - Administrar horarios En la Figura 4.61 se muestra el diagrama de secuencia de administrar horarios, en el cual se podrá listar, agregar y modificar. 91 Figura 4.62 - Administrar materiales En la Figura 4.62 se observa el diagrama de secuencia de Administrar materiales, en la cual se podrá consultar, agregar, modificar o eliminar un material para luego ser relacionado con un taller en su creación. 92 Figura 4.63 - Pagar mensualidad En la Figura 4.63 se muestra el diagrama de secuencia de Pagar mensualidad, en donde los Padres al seleccionar un representado podrán cancelar las mensualidades de los talleres asociados. 5) Construir por funcionalidades En la parte de construcción de las funcionalidades, se va a realizar la inspección de código mediante las pruebas unitarias de las funcionalidades más relevantes. Para realizar las pruebas unitarias se utilizará un Plugin de Eclipse llamado SimpleTest, con esta herramienta, se crean las pruebas unitarias de cada funcionalidad para luego correr un script de validación que nos indicará el funcionamiento de las mismas. a) Administración de Usuarios: Las pruebas de Administrar usuarios fueron divididas en sus funcionalidades referentes a este, las cuales son: iniciar sesión, agregar, modificar y eliminar usuarios, cambiar contraseña, consultar usuario y listar usuarios; tal como se muestra en la Figura 4.64 donde se encuentra el código de pruebas, estas 93 últimas pruebas para listar y consultar solo se van a colocar en el documento de pruebas una sola vez ya que es la misma función utilizada para los demás casos, pero con parámetros distintos. En la Figura 4.65 se muestran los resultados de la prueba, las cuales no tuvieron ningún problema. Figura 4.64 - Código Prueba - Administración Usuarios 94 Figura 4.65 - Resultados de las Pruebas de Administrar Usuarios b) Administración de Talleres En la Figura 4.66, se muestra el código de prueba de Administración de Talleres en el cual se realizan las pruebas por cada funcionalidad: crear, modificar y eliminar taller. Al realizar las pruebas se pudo constatar que se debía colocar una restricción a la hora de eliminar un taller, la cual es no eliminar un taller si existen talleres abiertos asociados y que se encuentren vigentes con la fecha. Las pruebas se realizaron con éxito, como se muestra en la Figura 4.67. Figura 4.66 - Código de Pruebas de la Administración de Talleres 95 Figura 4.67 - Resultados de las Pruebas de Administrar Talleres c) Administración de Talleres Actuales (Talleres por iniciar o iniciados) En la Figura 4.68, se muestra el código de prueba de Administración de Talleres Actuales en el cual se realizan las pruebas por cada funcionalidad: crear, modificar y eliminar taller actual. Al realizar las pruebas se pudo constatar que se debía colocar una restricción a la hora de eliminar un taller actual, la cual es no eliminar un taller actual si existen alumnos asociados a él y la fecha de término no ha finalizado. Las pruebas se realizaron con éxito, como se muestra en la Figura 4.69. Figura 4.68 - Código de Pruebas para Administrar Talleres Actuales 96 Figura 4.69 - Resultados de las Pruebas Administrar Talleres Actuales d) Administración de Horarios En la Figura 4.70, se muestra el código de prueba de Administración de Horarios en el cual se realizan las pruebas por cada funcionalidad: crear, modificar y eliminar. Las pruebas se realizaron con éxito, como se muestra en la Figura 4.71. Figura 4.70 - Código Prueba Administrar Horarios 97 Figura 4.71 - Resultados de las Pruebas Administrar Horarios e) Administración de Materiales En la Figura 4.72, se muestra el código de prueba de Administración de Materiales en el cual se realizan las pruebas por cada funcionalidad: crear, modificar y eliminar. Las pruebas se realizaron con éxito, como se muestra en la Figura 4.73. Figura 4.72 - Código de Prueba para Administrar Materiales 98 Figura 4.73 - Resultado para las Pruebas Administrar Materiales f) Administración de Gastos En la Figura 4.74, se muestra el código de prueba de Administración de Gastos en el cual se realizan las pruebas por cada funcionalidad: crear, modificar y eliminar. Las pruebas se realizaron con éxito, como se muestra en la Figura 4.75. Figura 4.74 - Código de Prueba para Administrar Gastos 99 Figura 4.75 - Resultados para la Prueba Administrar Gastos g) Reportes En la Figura 4.76, se muestra el código de prueba de los Reportes a generar en el cual se realizan las pruebas por cada tipo de reporte: talleres, talleres actuales, representantes, inscritos y pagos; de igual forma se encuentra el código prueba de listar y modificar comentarios del alumno, ya que esta funcionalidad se deriva del Reporte de Inscritos. Las pruebas se realizaron con éxito, como se muestra en la Figura 4.77. Figura 4.76 - Código de Prueba para los Reportes 100 Figura 4.77 - Resultado de las Pruebas de los Reportes h) Conciliación En la Figura 4.78, se muestra el código de prueba de Conciliación, el cual se realizan las pruebas para listar las conciliaciones dado los parámetros y para realizar la validación en la que se le envía el correo electrónico al usuario. Las pruebas se realizaron con éxito, como se muestra en la Figura 4.79. Figura 4.78 - Código Prueba de Conciliación 101 Figura 4.79 - Resultados de la Prueba Conciliación i) Administración de usuarios en módulo de representantes En la Figura 4.80, se muestra el código de pruebas unitarias para la Administración de usuarios en el módulo del representante. Las pruebas realizadas incluyen el inicio de sesión del usuario en el sistema y el cambio de contraseña. El resultado de las pruebas fue exitoso, como se muestra en la Figura 4.81. Figura 4.80 - Código prueba de Administración de usuarios en módulo de representantes 102 Figura 4.81 - Resultado de la prueba de Administración de usuarios en módulo de representantes j) Consultas y operaciones relacionadas con talleres en módulo de representantes En la Figura 4.82, se muestra el código de pruebas unitarias para las consultas y operaciones relacionadas con los talleres en el módulo del representante. Las pruebas realizadas incluyen consultar los talleres actuales, consultar los detalles de los talleres actuales, consultar los representados inscritos, realizar inscripción de talleres y efectuar el pago de mensualidades. El resultado de las pruebas fue exitoso, como se muestra en la Figura 4.83. 103 Figura 4.82 - Código de pruebas de consultas y operaciones con los talleres en el módulo del representante 104 Figura 4.83 - Resultado de las pruebas de consultas y operaciones con los talleres en el módulo del representante k) Consulta de solvencia en módulo de representantes En la Figura 4.84, se muestra el código de pruebas unitarias para la consulta de solvencia de talleres en el módulo del representante. Las pruebas realizadas incluyen consultar solvencia general y consultar solvencia por pagos realizados en un intervalo de tiempo. El resultado de las pruebas fue exitoso, como se muestra en la Figura 4.85. Figura 4.84 - Código de las pruebas de consulta de solvencia 105 Figura 4.85 - Resultado de las pruebas de consulta de solvencia 4.2 INTERFACES DEL SISTEMA WEB DE GESTIÓN, CONTROL E INSCRIPCIÓN ONLINE A continuación se colocarán todas las interfaces del Sistema Web de Gestión, Control e Inscripción online con las cuales los usuarios interactuarán para poder realizar todas las funcionalidades. Como el Sistema se compone de dos módulos, el administrativo y el de usuarios, se colocarán por separado estas interfaces, para un mayor orden. 4.1.2 Interfaces del módulo de Usuario (Representantes del Colegio). Las siguientes figuras conforman el Sistema de Inscripción de Talleres del C.E.A.P.U.C.V., donde los representantes podrán realizar la inscripción de sus representados en los talleres que ofrece la Institución y podrán realizar el pago de las mensualidades de dichos talleres. 106 Figura 4.86 - Interfaz de autenticación de usuarios En la Figura 4.86 se presenta la interfaz de autenticación de usuarios del Sistema de Inscripción de Talleres del C.E.A.P.U.C.V. Figura 4.87 - Interfaz de bienvenida al representante En la Figura 4.87 se muestra la interfaz de bienvenida al representante, la cual 107 presenta un breve recordatorio al usuario antes de iniciar la inscripción ó el pago de la mensualidad de los talleres de sus representados. Además se muestra el menú con las acciones que se pueden llevar a cabo en el Sistema. Figura 4.88 - Interfaz de listado de talleres abiertos En la Figura 4.88 se muestra la interfaz de talleres abiertos actualmente por la Institución, en los cuales los representantes podrán inscribir a sus representados. Se muestra la fecha en que inicia y culmina el taller y se da la opción para que se consulten los detalles del taller. 108 Figura 4.89 - Interfaz de detalles de talleres En la Figura 4.89 se muestran otras características de los talleres abiertos actualmente en la Institución, para que puedan ser consultadas por el representante. 109 Figura 4.90 - Interfaz de listado de representados inscritos en talleres En la Figura 4.90 se muestra la Interfaz donde se podrán consultar los representados inscritos en los talleres. Se da la opción para que el representante consulte los comentarios que los talleristas emiten sobre sus representados por cada taller. Figura 4.91 - Interfaz de comentarios de talleristas sobre alumnos En la Figura 4.91 se muestra la interfaz de los comentarios que emiten los 110 talleristas sobre los alumnos, a fin de que el representante haga seguimiento a las actividades realizadas por su representado y observe su rendimiento. Figura 4.92 - Interfaz de selección de tipo de solvencia a consultar En la Figura 4.92 se muestra la interfaz utilizada para que el representante consulte su solvencia. Se indican 2 tipos de solvencia: solvencia por pagos, en donde tendrá que indicar un rango de fechas para consultar los pagos realizados en ese intervalo; y solvencia general, la cual le indicará su estado solvente o deudor. 111 Figura 4.93 - Interfaz de consulta de solvencia general En la Figura 4.93 se muestra la interfaz de consulta de la solvencia general. Aquí el representante podrá consultar por cada taller de su representado si su estado es solvente o deudor; y en caso de ser deudor se le indicará los meses pendientes por el pago y el monto pendiente. Figura 4.94 - Interfaz de consulta de solvencia por pagos realizados 112 En la Figura 4.94 se muestra la interfaz de consulta de solvencia por pagos, en donde el representante podrá verificar el estado actual del pago realizado por los talleres de cada representado. Figura 4.95 - Interfaz del paso 1 de inscripción de talleres En la Figura 4.95 se muestra la interfaz del proceso de inscripción en el paso número uno. En este paso, el representante deberá escoger uno de los representados listados a fin de inscribirlo en alguno de los talleres que ofrece la Institución. 113 Figura 4.96 - Interfaz del paso 2 de inscripción de talleres En la Figura 4.96 se muestra la interfaz del segundo paso de la inscripción de talleres. En este paso se listan los talleres que el representado seleccionado puede cursar, en base al grado al que pertenezca actualmente. El representante podrá consultar los detalles de cada taller para luego inscribir a su representado en él. Figura 4.97 - Interfaz del paso 3 de inscripción de talleres En la Figura 4.97 se muestra la interfaz del detalle de taller escogido. Si el representante está de acuerdo con las características del taller podrá agregar dicho taller a su representado. De lo contrario, podrá devolverse a la página anterior y seleccionar otro taller. 114 Figura 4.98 - Interfaz de notificación al representante En la Figura 4.98 se muestra la interfaz de notificación de inscripción del taller al representante. En este punto, el representante podrá seguir inscribiendo a su representado en talleres mediante la opción de Continuar, ó por el contrario, podrá culminar la inscripción mediante la opción Finalizar. 115 Figura 4.99 - Interfaz del paso 4 de incripción de talleres con pago en efectivo En la Figura 4.99 se muestra la interfaz de formalización de inscripción. En este paso, se muestran todos los talleres que el representante inscribió a su representado seleccionado. Si el representante no está de acuerdo con algún taller podrá eliminarlo. Además se piden los datos del pago, en donde el representante deberá seleccionar el tipo de pago para cancelar las inscripciones. En este caso el tipo de pago es Efectivo, y el representante deberá dirigirse a la Institución a fin de cancelar el monto pendiente. 116 Figura 4.100 - Interfaz del paso 4 de inscripción de talleres con pago en depósito ó transferencia bancaria Al igual que en la figura anterior, en la Figura 4.100 se muestran todos los talleres que el representante inscribió a su representado seleccionado. La diferencia está en el tipo de pago seleccionado, ya que si selecciona Depósito ó Transferencia Bancaria, deberá seleccionar el banco de la Institución a donde realizó la operación, el número de la operación la fecha y el monto de pago. 117 Figura 4.101 - Interfaz del paso 1 del pago de mensualidad En la Figura 4.101 se muestra la interfaz del paso número uno del proceso de pago de mensualidad. En este punto, el representante deberá seleccionar un representado a fin de realizar el pago correspondiente a los talleres inscritos. Figura 4.102 - Interfaz del paso 2 del pago de mensualidad 118 En la Figura 4.102, se muestra la interfaz del paso número dos del pago de mensualidad. En este punto se listan los talleres en los cuales está inscrito el representado seleccionado y el representante deberá indicar los meses que desee cancelar por cada taller. Posteriormente, deberá especificar los datos para efectuar el pago; sólo se presenta la opción de pago en Depósito ó Transferencia Bancaria, junto con el nombre del banco, número de operación, fecha y monto del pago realizado. Figura 4.103 - Interfaz de cambio de contraseña En la Figura 4.103 se muestra la interfaz donde el representante podrá cambiar su contraseña. Es importante que el representante conozca que al cambiar esta contraseña, estará cambiando su contraseña de acceso al Sistema de Inscripción de Materias del C.E.A.P.U.C.V. 119 4.1.3 Interfaces del módulo Administración (Personal del Colegio). A continuación se presentarán las interfaces del módulo de Administración, mediante el cual podrán tener acceso, el Administrador Financiero, el Tallerista, el Coordinador de talleres, el Director y el Subdirector. A fines de este documento, las pantallas a mostrar van a ser de un usuario con el rol de Super Administrador el cual podrá acceder a todas las funcionalidades. Figura 4.104 - Interfaz de Administrador – Iniciar Sesión En la Figura 4.104 se observa el inicio del módulo de Administración para el personal del Colegio C.E.A.P.U.C.V, en cual se debe iniciar sesión con el correo electrónico y con la clave enviada al correo electrónico por el Administrador Financiero. 120 Figura 4.105 - Interfaz de Administrador - Principal En la Figura 4.105 se observa la página principal del Sistema, en el cual se muestran las opciones principales. Figura 4.106 - Interfaz de Administrador - Usuarios En la Figura 4.106 se tiene la página de usuarios, con la cual el Administrador Financiero podrá, agregar, modificar y eliminar a usuarios del Sistema. 121 Figura 4.107- Interfaz de Administrador - Modificar Usuario En la Figura 4.107 se encuentra la pantalla de modificar, la cual es la misma para agregar a un usuario, sin traer datos precargados. Aquí se pueden modificar todos sus campos menos la cédula de identidad y se selecciona un perfil para asociarlo. Figura 4.108 - Interfaz de Administrador - Crear Talleres En la Figura 4.108 se muestra la funcionalidad Crear Talleres, en el cual se listaran todos los talleres creados, permitiendo agregar, modificar y eliminar, este último siempre y cuando no posea ningún taller actual asociado. 122 Figura 4.109 - Interfaz de Administrador - Modificar Talleres En la Figura 4.109 se encuentra la pantalla de modificar talleres, la cual es la misma para agregar un taller, sin traer datos precargados. Aquí se pueden modificar todos sus campos, se puede indicar el período de pagos (Semanal, mensual, trimestral, semestral, anual) y seleccionar los materiales necesarios, los cuales se seleccionan de la lista de materiales. 123 Figura 4.110 - Interfaz de Administrador - Iniciar Talleres En la Figura 4.110 se listan los talleres iniciados, hasta el momento, donde se podrá, agregar, modificar y eliminar, esta última siempre y cuando no posea alumnos inscritos y el taller se encuentre en curso. 124 Figura 4.111 - Interfaz de Administrador - Modificar Talleres Iniciados En la Figura 4.111 se encuentra la pantalla de modificar talleres iniciados, la cual es la misma para agregar un taller iniciado, sin traer datos precargados. Aquí se pueden modificar todos sus campos, seleccionar el período mediante un calendario, seleccionar las etapas validas para este taller, y los demás campos inherentes al taller iniciado. Figura 4.112 - Interfaz de Administrador - Horarios 125 En la Figura 4.112 se listan los horarios, donde se podrá, agregar, modificar y eliminar. Figura 4.113 - Interfaz de Administrador - Modificar Horarios En la Figura 4.113 se encuentra la pantalla de modificar horarios, la cual es la misma para agregar un horario, sin traer datos precargados. Figura 4.114 - Interfaz de Administrador - Materiales En la Figura 4.114 se listan los materiales, donde se podrá, agregar, modificar y eliminar. 126 Figura 4.115 - Interfaz de Administrador - Modificar Materiales En la Figura 4.115 se encuentra la pantalla de modificar materiales, la cual es la misma para agregar un material, sin traer datos precargados. Figura 4.116 - Interfaz de Administrador - Gastos En la Figura 4.116 se listan los gastos creados por el administrador financiero asociado a un taller determinado, donde se podrá, agregar, modificar y eliminar. 127 Figura 4.117 - Interfaz de Administrador - Modificar Gastos En la Figura 4.117 se encuentra la pantalla de modificar gastos, la cual es la misma para agregar un gasto, sin traer datos precargados. Figura 4.118 - Interfaz de Administrador - Reporte Talleres En la Figura 4.118 se muestra un reporte de los talleres existentes y la cantidad de talleres abiertos que posee. 128 Figura 4.119 - Interfaz de Administrador - Reporte Talleres Abiertos En la Figura 4.119 se muestra un reporte de los talleres abiertos, con sus horarios, números de alumnos inscritos, el tallerista asignado y la cantidad de dinero pagada por los representantes para ese taller. Al final se puede observar el total ingresos y total inscritos. 129 Figura 4.120 - Interfaz de Administrador - Reporte Gastos En la Figura 4.120 se muestra un reporte de los gastos, en el cual se puede elegir obtener los gastos por un período de tiempo o por un taller dado, en este caso es por un período de tiempo seleccionado. Figura 4.121 - Interfaz de Administrador - Reporte Representantes En la Figura 4.121 se muestra un reporte por un representante dado anteriormente mediante el número de cédula, para listar sus representados asociados a talleres y si posee alguna deuda. 130 Figura 4.122 - Interfaz de Administrador - Reporte Inscritos En la Figura 4.122 se muestra un reporte de inscritos por un taller seleccionado anteriormente, para listar sus inscritos asociados y poder acceder a los comentarios. Figura 4.123 - Interfaz de Administrador - Reporte Inscritos Comentarios En la Figura 4.123 luego de presionar el botón ver de la ventana anterior se muestran los comentarios de ese alumno para ese taller, con la posibilidad de modificarlos. 131 Figura 4.124 - Interfaz de Administrador - Reporte Pagos En la Figura 4.124 luego de seleccionar un período de tiempo y un tipo (deuda o créditos), se listarán los representantes que poseen deudas y se le podrá enviar una notificación vía correo electrónico de esta deuda. Figura 4.125 - Interfaz de Administrador - Realizar Conciliación En la Figura 4.125 luego de seleccionar un período de tiempo y un estado (pendiente, erróneo o exitoso), se listarán los representantes han realizado sus pagos con todos los datos pertinentes para que el Administrador Financiero pueda validarlos y evaluarlos según sea el caso de los estados, luego de evaluarlos se le enviara una notificación vía mail y a la página de usuario en donde se indicará cual fue el resultado. 132 CONCLUSIONES Este Sistema va dirigido directamente al personal que administra los talleres en el C.E.A.P.U.C.V. y a todos los representantes de dicho Colegio, con el cual podrán llevar de una forma eficiente todos sus procesos relacionados a estas actividades, destacando el proceso de inscripción, el cual otorgará a los representantes una mayor facilidad y rapidez a la hora de inscribir a sus representados y seguir el control de estos talleres. La aplicación provee un sistema de reportes de suma importancia para el personal del Colegio, ya que mediante ellos podrán llevar el control de las inscripciones, ingresos y egresos que le proporcionan estos talleres. Para lograr el desarrollo de este Sistema Web se realizaron investigaciones sobre las metodologías más utilizadas para el desarrollo estas, se llego a la conclusión de el uso de la metodología basada en funcionalidades (FDD), ya que se torna ligera y fácil de aplicar cuando se trata de proyectos Web a pequeña escala y otorga diferentes artefactos de información los cuales sirven de guía a lo largo del desarrollo. Otro punto a favor de esta metodología es poder trabajar en base a las funcionalidades de la aplicación para así poder lograr mayor motivación por parte de los desarrolladores al poder visualizar los alcances de una forma más rápida y a obtener un vocabulario para poder manejarse con el cliente. Al finalizar la aplicación se realizaron una serie de pruebas unitarias, teniendo como apoyo el plugin SimpleTest de Eclipse el cual permite realizar las clases de pruebas y realizar un script para probarlas y así poder entregarle al cliente una aplicación con garantía, estas pruebas se llevaron a cabo de forma exitosa, determinando el buen funcionamiento de toda la aplicación por cada funcionalidad. 133 Trabajos Futuros Las siguientes son una serie de recomendaciones que bien podrían ser tomadas en cuenta con el fin de optimizar y agregar nuevas funcionalidades al Sistema Web de Gestión, Control e Inscripción. Debido a que en un tiempo con la cantidad de estudiante se puede tornar engorroso la forma en que se realiza la conciliación y de que siempre va a existir el error humano, se propone que para un trabajo futuro se realice un sistema de pagos online mediante tarjeta de debito y crédito para que este dinero se acredite automáticamente en la cuenta del Colegio C.E.A.P.U.C.V. Dado que en la parte de la herramienta inscripción del colegio se encuentra la funcionalidad de agregar una Ficha médica por cada estudiante, se propone que en el futuro se realice una consulta para los talleristas para poder acceder a esa data desde esta aplicación Web de Gestión, Control e Inscripción. 134 REFERENCIAS [1] Rational Unified Process. Best Practices for Software Development Teams. Disponible en: http://www.ibm.com/developerworks/rational/library/content/03July/1000/1251/125 1_bestpractices_TP026B.pdf. (Consultado: Junio, 2008) [2] Figueroa, Roberth G.; Solís, Camilo J; Cabrera, Armando A. Metodologías tradiciones Vs. Metodologías ágiles. Disponible en: http://209.85.215.104/search?q=cache:FadvJFoZqoAJ:adonisnet.files.wordpress. com/2008/06/articulo-metodologia-de-sw- formato.doc+metodologia+XP+vs+metodologia+RUP&hl=es&ct=clnk&cd=1&gl=ve &client=firefox-a]. (Consultado: Mayo, 2008) [3] González Campos, Saúl; Fernández, Luis Felipe. Programación Extrema: Prácticas, aceptación y controversias. Disponible en: http://www.uacj.mx/IIT/CULCYT/mayo-agosto2006/8ArtProg.pdf (Consultado, Mayo, 2008) [4] Gutiérrez, Sarah; Zapata, Hernán; Arias, Juan Pablo; Zambrano, Cristian. FDD: Feature Driven Development. Desarrollo Basado en Funcionalidades. Disponible en: pisis.unalmed.edu.co/cursos/material/3004582/1/PresentacionFDD.ppt (Consultado: Junio, 2008) 135 [5] Metodologías RUP y XP - [PROCESOS DE DESAROLLO]. Disponible en: http://jackopc.blogspot.com/2007/05/metodologias-rup-y-xp-procesos-de.html (Consultado: Abril, 2008) [6] ¿Qué se puede hacer con PHP? Disponible en: http://www.php.net/manual/es/intro-whatcando.php (Consultado: Julio, 2008) [7] Java Language Specification. Third Edition. Disponible en: http://java.sun.com/docs/books/jls/third_edition/html/intro.html (Consultado: Julio, 2008) [8] Acerca de Ruby. Disponible en: http://www.ruby-lang.org/es/about/ (Consultado: Julio, 2008) [9] Historia de MySQL. Disponible en: http://dev.mysql.com/doc/refman/5.0/es/history.html (Consultado: Junio, 2008) [10] PostgreSQL. Disponible en: http://www.postgresql.org (Consultado: Julio, 2008) [11] Apache. HTTP Server Project. http://httpd.apache.org/ (Consultado: Julio, 2008) [12] Java BluePrints. Model-View-Controller. 2000-2002 Sun Microsystems, Inc. All Rights Reserved. Disponible en: http://java.sun.com/blueprints/patterns/MVC-detailed.html (Consultado: Agosto, 2008) 136 [13] Patrón MVC. Disponible en: http://redacademica.com.mx/blog/wp- content/uploads/2008/03/patronmvc.png (Consultado: Octubre, 2008) [14] Schenone Marcelo Hernán. Diseño de una Metodología Ágil de Desarrollo de Software. Disponible en: http://materias.fi.uba.ar/7500/schenone- tesisdegradoingenieriainformatica.pdf (Consultado: Septiembre, 2008) [15] Dosil, Federico. Procesos Ágiles. Disponible en: http://www.google.co.ve/url?sa=t&source=web&ct=res&cd=1&url=http%3A%2F% 2Fwww.fing.edu.uy%2Finco%2Fcursos%2Fgestsoft%2FPresentaciones%2FProc esos%2520Agiles%2520- %2520G4%2FProcesos%2520Agiles.doc&ei=Kp36SN6SHJuiefWm- T8&usg=AFQjCNE6dw8O6mb_GqUBwt_uGMeaFTKwoA&sig2=E0JFuwjO67I880 9zv9VCsw (Consultado: Septiembre, 2008) [16] Vilalta, Josep. Diagramas de Clases. Disponible en: http://64.233.169.104/search?q=cache:CuOwKQJ9QQUJ:www.vico.org/aRecurso sPrivats/UML_TRAD/talleres/mapas/UMLTRAD_101A/LinkedDocuments/UML_di agClases.pdf+Diagramas+de+Clases&hl=es&ct=clnk&cd=3&gl=ve&client=firefox- a (Consultado: Octubre, 2008) [17] Grupo Docente de Aplicaciones con la Tecnología Internet Escuela de Computación, Universidad Central de Venezuela. Metodología para Construcción de Aplicaciones Web.TEG_HedrasPerez_RocioCarrero 1 UNIVERSIDAD CENTRAL DE VENEZUELA FACULTAD DE CIENCIAS ESCUELA DE COMPUTACIÓN “Desarrollo de un Sistema Web de gestión, control e inscripción de Actividades Extracurriculares para el C.E.A.P.U.C.V.” Trabajo Especial de Grado presentado ante la ilustre Universidad Central de Venezuela, por las bachilleres: Carrero D. Rocio N. C.I.: 16.033.322 Pérez T. Hedras C. C.I.: 16.411.775 Para optar por el Título de Licenciado en Computación Tutora: Prof. Ana Romero Caracas, Octubre de 2008 2 Universidad Central de Venezuela Facultad de Ciencias Escuela de Computación Aplicaciones de la Tecnología en Internet ACTA DEL VEREDICTO Quienes suscriben, Miembros del Jurado designados por el Consejo de Escuela de Computación, para examinar el Trabajo Especial de Grado, presentado por los Bachilleres Hedras C. Pérez T. C.I.: 16.411.775 y Rocio N. Carrero D. C.I.: 16.033.322, con el título “Desarrollo de un Sistema Web de gestión, control e inscripción de Actividades Extracurriculares para el C.E.A.P.U.C.V.”, a los fines de cumplir con el requisito legal para optar al título de Licenciado en Computación, dejan constancia de lo siguiente: Leído como fue dicho trabajo por cada uno de los Miembros del Jurado, se fijó el día 29 de octubre de 2008, a las 10:00 AM, para que sus autores lo defiendan en forma pública, en la Sala I de la Escuela de Computación, mediante la exposición oral de su contenido, y luego de la cual respondieron satisfactoriamente a las preguntas que le fueron formuladas por el Jurado, todo ello conforme a lo dispuesto en la Ley de Universidades y demás normativas vigentes de la Universidad Central de Venezuela. Finalizada la defensa pública del Trabajo Especial de Grado, el jurado decidió aprobarlo. En fe de lo cual se levanta la presente Acta, en Caracas a los 29 días del mes de octubre del año dos mil ocho, dejándose también constancia de que actuó como Coordinador del Jurado la Profesora Tutora Ana Romero. _________________ Prof. Ana Romero (Tutor) ___________________ ___________________ Prof. Marco Gollarza Prof. Wilfredo Rangel (Jurado Principal) (Jurado Principal) 3 AGRADECIMIENTOS A Dios, por ayudarme en los momentos difíciles y por permitirme alcanzar cada una de mis metas. A toda mi familia, en especial a mis padres, Miriam y Jacobo, por haberme brindado todo su amor, apoyo y dedicación. Gracias por sus consejos y por estar allí en los momentos en que más los necesité. Los adoro. A mi novio Carlos, por todo el amor y cariño brindado. Gracias por la comprensión, colaboración y atención incondicional que me has brindado a lo largo de este trabajo de Tesis. Te amo mi vida. A mi amiga y compañera de Tesis Rocio, por toda la confianza y paciencia. Gracias por tu amistad incondicional y por todos los momentos compartidos. Te quiero amiga. A mi tutora Ana Romero, por toda la dedicación, apoyo y ayuda brindada. Gracias por aclarar nuestras dudas y por el tiempo invertido en nosotras durante el desarrollo del Trabajo Especial de Grado. A todos mis amigos por haberme brindado su apoyo, amistad y por darme ánimos de seguir adelante. A todas las personas que de una manera u otra ayudaron en la elaboración de esta investigación. Muchas gracias a todos!! Hedras C. Pérez T. 4 Agradezco a Dios sobre todas las cosas y a la Virgen por haberme dado las fuerzas para llegar a donde estoy en estos momentos. Gracias a toda mi familia, a mis padres Luisa y Pedro por ser el apoyo de cada día y su confianza incondicional, también gracias a mi hermano Johnson por su apoyo total en todas las circunstancias presentadas a lo largo de este Trabajo Especial de Grado. A mi mejor amiga Herlyn por siempre estar conmigo y apoyarme siempre. Muchas gracias a mi prometido y alma gemela Jonathan, sin tus fuerzas y apoyo todo esto fuera algo efímero, gracias por estar incondicional en todos estos momentos, en fin gracias por existir. Gracias a la Profesora y Tutora Ana Romero por brindarnos su sabiduría y corregirnos en cada aspecto de este trabajo, para poder alcanzar esta meta. A mi compañera de tesis Hedras, gracias por soportar mis locuras y por acompañarme en todas estas noches de fuerte trabajo duro que hemos pasado programando y redactando en este Trabajo Especial de Grado. A todos mis compinches de la Universidad que a lo largo de la carrera hemos compartido momentos inolvidables, en especial a: Vanessa, Marla, Yaina, Mafer, Hector y Porfi. Muchas Gracias. Rocio N. Carrero D. 5 TABLA DE CONTENIDO CAPÍTULO I – INTRODUCCIÓN .......................................................................... 15 1.1 PLANTEAMIENTO DEL PROBLEMA ............................................................. 16 1.2 OBJETIVO GENERAL .................................................................................... 17 1.3 OBJETIVOS ESPECÍFICOS ........................................................................... 18 1.4 ALCANCE ....................................................................................................... 18 1.5 JUSTIFICACIÓN ............................................................................................. 19 CAPÍTULO II - MARCO TEÓRICO ....................................................................... 21 2.1 METODOLOGÍAS DE DESARROLLO ............................................................ 21 2.1.1 RATIONAL UNIFIED PROCESS (RUP) ................................................................ 21 2.1.2 PROGRAMACIÓN EXTREMA (XP)....................................................................... 22 2.1.3 DESARROLLO BASADO EN FUNCIONALIDADES (FDD) ......................................... 23 2.2 LENGUAJES DE PROGRAMACIÓN .............................................................. 24 2.2.1 PHP .............................................................................................................. 24 2.2.2 JAVA .............................................................................................................. 26 2.2.3 RUBY ............................................................................................................. 26 2.3 SISTEMAS DE GESTIÓÍTULO III – TECNOLOGÍAS A UTILIZAR ..................................................... 35 3.1 MYSQL ............................................................................................................ 35 3.2 PHP ................................................................................................................. 35 CAPÍTULO IV - MARCO METODOLÓGICO ........................................................ 36 4.1 ESPECIFICACIÓN DE LA METODOLOGÍA DE DESARROLLO ................... 36 4.1.1 CASOS DE USO ............................................................................................... 37 4.1.2 DESARROLLO DE LA METODOLOGÍA FDD .......................................................... 58 4.2 INTERFACES DEL SISTEMA WEB DE GESTIÓN, CONTROL E INSCRIPCIÓN ONLINE ...................................................................................... 105 CAPÍTULO V – CONCLUSIONES ...................................................................... 132 6 6.1 TRABAJOS FUTUROS........................................................................................ 133 7 ÍNDICE DE FIGURAS Figura 2.1 - Diagrama Modelo MVC ...................................................................... 34 Figura 4.1 - Diagrama de casos de uso para el nivel 0 ......................................... 38 Figura 4.2 - Diagrama de casos de uso nivel 1 ..................................................... 39 Figura 4.3 - Diagrama de casos de uso nivel 2: Realizar conciliación ................... 42 Figura 4.4 - Diagrama de casos de uso nivel 2: Administrar gastos de talleres .... 42 Figura 4.5 - Diagrama de caso de uso nivel 2: Consultar reportes ........................ 44 Figura 4.6 - Diagrama de casos de uso nivel 2: Consultar servicios ..................... 46 Figura 4.7 - Diagrama de casos de uso nivel 2: Inscribir ....................................... 47 Figura 4.8 - Diagrama de casos de uso nivel 2: Administrar talleres ..................... 48 Figura 4.9 - Diagrama de casos de uso nivel 2: Administrar usuarios ................... 49 Figura 4.10 - Diagrama de casos de uso nivel 2: Administrar horarios ................. 50 Figura 4.11 - Diagrama de casos de uso nivel 2: Administrar materiales .............. 52 Figura 4.12 - Diagrama de casos de uso nivel 2: Pagar mensualidad .................. 53 Figura 4.13 - Diagrama de casos de uso nivel 3: Validar ..................................... 54 Figura 4.14 - Diagrama de casos de uso nivel 3: Consultar inscritos .................... 55 Figura 4.15 - Diagrama de casos de uso nivel 3: Consultar talleres ..................... 55 Figura 4.16 - Diagrama de casos de uso nivel 3: Consultar talleres abiertos ........ 57 Figura 4.17 - Ciclo de vida de la Metodología FDD ............................................... 59 Figura 4.18 - Diagrama de Clases ......................................................................... 61 Figura 4.19 - Clase asigna_tallerista ..................................................................... 61 Figura 4.20 - Clase cargo de usuarios .................................................................. 61 Figura 4.21 - Clase concepto ................................................................................ 62 Figura 4.22 - Clase estados .................................................................................. 62 Figura 4.23 - Clase etapas .................................................................................... 62 Figura 4.24 - Clase gastos .................................................................................... 62 Figura 4.25 - Clase grados .................................................................................... 62 Figura 4.26 - Clase horario .................................................................................... 63 Figura 4.27 - Clase ingresos ................................................................................. 63 Figura 4.29 - Clase material .................................................................................. 64 Figura 4.30 - Clase meses .................................................................................... 64 Figura 4.31 - Clase pagos ..................................................................................... 64 Figura 4.32 - Clase período ................................................................................... 65 Figura 4.33 - Clase seguridad ............................................................................... 65 Figura 4.34 - Clase taller ....................................................................................... 65 8 Figura 4.35 - Clase taller_etapa ............................................................................ 65 Figura 4.36 - Clase taller_material ........................................................................ 65 Figura 4.37 - Clase talleres_actuales .................................................................... 66 Figura 4.38 - Clase tipo_gasto .............................................................................. 66 Figura 4.39 - Clase alumnos ................................................................................. 66 Figura 4.40 - Clase usuario ................................................................................... 67 Figura 4.41 - Clase padres .................................................................................... 68 Figura 4.42 - Diagrama de objetos del dominio ..................................................... 72 Figura 4.43 - Planificación de las funcionalidades del sistema Web ..................... 78 Figura 4.44 - Realizar conciliación ........................................................................ 79 Figura 4.45 - Administrar gastos de talleres .......................................................... 80 Figura 4.46 - Consular reportes de gastos de talleres ........................................... 81 Figura 4.47 - Consultar reporte de inscritos .......................................................... 81 Figura 4.48 - Consultar comentarios sobre alumnos ............................................. 82 Figura 4.49 - Consultar reporte de talleres ............................................................ 82 Figura 4.50 - Consultar reporte de pagos .............................................................. 83 Figura 4.51 - Consultar reporte de padres ............................................................ 83 Figura 4.52 - Consultar reporte de talleres abiertos .............................................. 84 Figura 4.53 - Autenticar ......................................................................................... 84 Figura 4.54 - Consultar servicios - Consultar Representados ............................... 85 Figura 4.55 - Consultar servicios - Consultar Talleres ........................................... 85 Figura 4.56 - Consultar Servicios – Consultar Solvencia ...................................... 86 Figura 4.57 - Cambiar Contraseña ........................................................................ 86 Figura 4.58 - Inscribir ............................................................................................ 87 Figura 4.59 - Administrar Talleres ......................................................................... 88 Figura 4.60 - Administrar talleres abiertos ............................................................. 89 Figura 4.61 - Administrar horarios ......................................................................... 90 Figura 4.62 - Administrar materiales ..................................................................... 91 Figura 4.63 - Pagar mensualidad .......................................................................... 92 Figura 4.64 - Código Prueba - Administración Usuarios ....................................... 93 Figura 4.65 - Resultados de las Pruebas de Administrar Usuarios ....................... 94 Figura 4.66 - Código de Pruebas de la Administración de Talleres ....................... 94 Figura 4.67 - Resultados de las Pruebas de Administrar Talleres ......................... 95 Figura 4.68 - Código de Pruebas para Administrar Talleres Actuales ................... 95 Figura 4.69 - Resultados de las Pruebas Administrar Talleres Actuales ............... 96 Figura 4.70 - Código Prueba Administrar Horarios ................................................ 96 9 Figura 4.71 - Resultados de las Pruebas Administrar Horarios ............................. 97 Figura 4.72 - Código de Prueba para Administrar Materiales................................ 97 Figura 4.73 - Resultado para las Pruebas Administrar Materiales ........................ 98 Figura 4.74 - Código de Prueba para Administrar Gastos ..................................... 98 Figura 4.75 - Resultados para la Prueba Administrar Gastos ............................... 99 Figura 4.76 - Código de Prueba para los Reportes ............................................... 99 Figura 4.77 - Resultado de las Pruebas de los Reportes .................................... 100 Figura 4.78 - Código Prueba de Conciliación ...................................................... 100 Figura 4.79 - Resultados de la Prueba Conciliación ............................................ 101 Figura 4.80 - Código prueba de Administración de usuarios en módulo de representantes .................................................................................................... 101 Figura 4.81 - Resultado de la prueba de Administración de usuarios en módulo de representantes .................................................................................................... 102 Figura 4.82 - Código de pruebas de consultas y operaciones con los talleres en el módulo del representante .................................................................................... 103 Figura 4.83 - Resultado de las pruebas de consultas y operaciones con los talleres en el módulo del representante .............................................................. 104 Figura 4.84 - Código de las pruebas de consulta de solvencia ........................... 104 Figura 4.85 - Resultado de las pruebas de consulta de solvencia ...................... 105 Figura 4.86 - Interfaz de autenticación de usuarios ............................................ 106 Figura 4.87 - Interfaz de bienvenida al representante ........................................ 106 Figura 4.88 - Interfaz de listado de talleres abiertos ........................................... 107 Figura 4.89 - Interfaz de detalles de talleres ...................................................... 108 Figura 4.90 - Interfaz de listado de representados inscritos en talleres ............. 109 Figura 4.91 - Interfaz de comentarios de talleristas sobre alumnos ................... 109 Figura 4.92 - Interfaz de selección de tipo de solvencia a consultar .................. 110 Figura 4.93 - Interfaz de consulta de solvencia general ..................................... 111 Figura 4.94 - Interfaz de consulta de solvencia por pagos realizados ................ 111 Figura 4.95 - Interfaz del paso 1 de inscripción de talleres ................................ 112 Figura 4.96 - Interfaz del paso 2 de inscripción de talleres ................................ 113 Figura 4.97 - Interfaz del paso 3 de inscripción de talleres ................................ 113 Figura 4.98 - Interfaz de notificación al representante ....................................... 114 Figura 4.99 - Interfaz del paso 4 de incripción de talleres con pago en efectivo 115 Figura 4.100 - Interfaz del paso 4 de inscripción de talleres con pago en depósito ó transferencia bancaria ...................................................................................... 116 Figura 4.101 - Interfaz del paso 1 del pago de mensualidad .............................. 117 Figura 4.102 - Interfaz del paso 2 del pago de mensualidad .............................. 117 10 Figura 4.103 - Interfaz de cambio de contraseña ............................................... 118 Figura 4.104 - Interfaz de Administrador – Iniciar Sesión .................................... 119 Figura 4.105 - Interfaz de Administrador - Principal ............................................ 120 Figura 4.106 - Interfaz de Administrador - Usuarios ............................................ 120 Figura 4.107- Interfaz de Administrador - Modificar Usuario ............................... 121 Figura 4.108 - Interfaz de Administrador - Crear Talleres ................................... 121 Figura 4.109 - Interfaz de Administrador - Modificar Talleres .............................. 122 Figura 4.110 - Interfaz de Administrador - Iniciar Talleres ................................... 123 Figura 4.111 - Interfaz de Administrador - Modificar Talleres Iniciados ............... 124 Figura 4.112 - Interfaz de Administrador - Horarios ............................................ 124 Figura 4.113 - Interfaz de Administrador - Modificar Horarios ............................. 125 Figura 4.114 - Interfaz de Administrador - Materiales ......................................... 125 Figura 4.115 - Interfaz de Administrador - Modificar Materiales .......................... 126 Figura 4.116 - Interfaz de Administrador - Gastos ............................................... 126 Figura 4.117 - Interfaz de Administrador - Modificar Gastos ............................... 127 Figura 4.118 - Interfaz de Administrador - Reporte Talleres ............................... 127 Figura 4.119 - Interfaz de Administrador - Reporte Talleres Abiertos ................. 128 Figura 4.120 - Interfaz de Administrador - Reporte Gastos ................................. 129 Figura 4.121 - Interfaz de Administrador - Reporte Representantes ................... 129 Figura 4.122 - Interfaz de Administrador - Reporte Inscritos ............................... 130 Figura 4.123 - Interfaz de Administrador - Reporte Inscritos Comentarios .......... 130 Figura 4.124 - Interfaz de Administrador - Reporte Pagos .................................. 131 Figura 4.125 - Interfaz de Administrador - Realizar Conciliación......................... 131 11 ÍNDICE DE TABLAS Tabla 4.1 - Especificación del caso de uso: Realizar conciliación ......................... 39 Tabla 4.2 - Especificación del caso de uso: Administrar gastos de talleres .......... 40 Tabla 4.3 - Especificación del caso de uso: Consultar reportes ............................ 40 Tabla 4.4 - Especificación del caso de uso: Autenticar ......................................... 40 Tabla 4.5 - Especificación del caso de uso: Consultar servicios ........................... 40 Tabla 4.6 - Especificación del caso de uso: Cambiar contraseña ......................... 40 Tabla 4.7 - Especificación del caso de uso: Inscribir ............................................. 40 Tabla 4.8 - Especificación del caso de uso: Administrar talleres ........................... 41 Tabla 4.9 - Especificación del caso de uso: Administrar usuarios ......................... 41 Tabla 4.10 - Especificación del caso de uso: Administrar horarios ....................... 41 Tabla 4.11 - Especificación del caso de uso: Administrar materiales .................... 41 Tabla 4.12 - Especificación del caso de uso: Pagar mensualidad ......................... 41 Tabla 4.13 - Especificación del caso de uso: Listar padres ................................... 42 Tabla 4.14 - Especificación del caso de uso: Agregar ........................................... 43 Tabla 4.15 - Especificación del caso de uso: Modificar ......................................... 43 Tabla 4.16 - Especificación del caso de uso: Eliminar .......................................... 43 Tabla 4.17 - Especificación del caso de uso: Consultar talleres ............................ 44 Tabla 4.18 - Especificación del caso de uso: Consultar gastos ............................. 44 Tabla 4.19 - Especificación del caso de uso: Consultar padres ............................ 45 Tabla 4.20 - Especificación del caso de uso: Consultar inscritos .......................... 45 Tabla 4.21 - Especificación del caso de uso: Consultar pagos ............................. 45 Tabla 4.22 - Especificación del caso de uso: Consultar representados ................ 46 Tabla 4.23 - Especificación del caso de uso: Consultar talleres ............................ 46 Tabla 4.24 - Especificación del caso de uso: Consultar solvencia ........................ 47 Tabla 4.25 - Especificación del caso de uso: Listar representados ....................... 47 Tabla 4.26 - Especificación del caso de uso: Consultar talleres ............................ 48 Tabla 4.27 - Especificación del caso de uso: Consultar talleres abiertos .............. 48 Tabla 4.28 - Especificación del caso de uso: Consultar ........................................ 49 Tabla 4.29 - Especificación del caso de uso: Agregar ........................................... 49 Tabla 4.30 - Especificación del caso de uso: Modificar ......................................... 50 Tabla 4.31 - Especificación del caso de uso: Eliminar .......................................... 50 Tabla 4.32 - Especificación del caso de uso: Consultar ........................................ 51 Tabla 4.33 - Especificación del caso de uso: Agregar ........................................... 51 Tabla 4.34 - Especificación del caso de uso: Modificar ......................................... 51 12 Tabla 4.35 - Especificación del caso de uso: Eliminar .......................................... 51 Tabla 4.36 - Especificación del caso de uso: Consultar ........................................ 52 Tabla 4.37 - Especificación del caso de uso: Agregar ........................................... 52 Tabla 4.38 - Especificación del caso de uso: Modificar ......................................... 53 Tabla 4.39 - Especificación del caso de uso: Eliminar .......................................... 53 Tabla 4.40 - Especificación del caso de uso: Listar representados ....................... 54 Tabla 4.41 - Especificación del caso de uso: Validar ............................................ 54 Tabla 4.42 - Especificación del caso de uso: Consultar comentarios .................... 55 Tabla 4.43 - Especificación del caso de uso: Agregar ........................................... 56 Tabla 4.44 - Especificación del caso de uso: Modificar ......................................... 56 Tabla 4.45 - Especificación del caso de uso: Eliminar .......................................... 56 Tabla 4.46 - Especificación del caso de uso: Abrir ................................................ 57 Tabla 4.47 - Especificación del caso de uso: Modificar ......................................... 57 Tabla 4.48 - Especificación del caso de uso: Eliminar .......................................... 58 Tabla 4.49 - Tabla de Features por prioridades .................................................... 77 13 RESUMEN TITULO: Desarrollo de un Sistema Web de gestión, control e inscripción de Actividades Extracurriculares para el C.E.A.P.U.C.V. AUTORES: Rocio N. Carrero D. Hedras C. Pérez T. TUTOR: Prof. Ana Romero. Hoy en día el uso de las Tecnologías de Información y Comunicación, para lograr un sistema automatizado, son un recurso indispensable para obtener un mejor desempeño en todas las áreas de trabajo a nivel mundial, ya que estas permiten dejar a un lado los métodos manuales para así llevar a cabo sus tareas de una forma más rápida y eficiente. Este hecho es el punto de partida para el desarrollo de este trabajo de investigación en el cual se desarrollará un Sistema para la automatizar la gestión e Inscripción online de actividades extracurriculares del Centro Educativo de la Asociación de Profesores de la U.C.V. (C.E.A.P.U.C.V.), en el cual se utilizarán herramientas de código abierto para su desarrollo, como : el sistema manejador de Base de Datos MySQL, el cual permite entre otras cosas, un bajo costo en requerimientos para la elaboración de bases de datos, ya que debido a su bajo consumo de procesamiento , puede ser ejecutado en una máquina con pocos requerimientos de memoria y procesador sin ningún problema; otra herramienta de código abierto utilizada es el Lenguaje Hypertext Pre-Processor PHP, el cual brinda diferentes ventajas a la hora de desarrollar programas, una de las principales es que es un lenguaje interpretado el cual no necesita compilación ni 14 la utilización de ninguna máquina virtual para su funcionamiento, aparte de esto, es uno de los lenguajes más populares que se utilizan actualmente en el mercado, dado que su costo para el hospedaje y mantenimiento de sitios Webs es mínimo. Otro punto importante en la investigación fue la selección de la metodología, la cual debía estar adaptada al desarrollo, en torno a esto se realizó una investigación entre las metodologías más utilizadas, entre las cuales figuran: Proceso Racional Unificado (RUP),Programación Extrema (XP) y Desarrollo Basado en Funcionalidades (FDD), para llegar a la conclusión de utilizar esta última nombrada, ya que por tratarse de una aplicación Web de pequeña escala, con pocos integrantes y en la cual las funcionalidades era su principal objetivo, esta metodología con procesos ágiles la cual provee documentación, era la más apropiada para comenzar el desarrollo; la documentación necesaria aplicada en esta metodología para esta aplicación serán: diagramas de objetos, diagrama de entidad Relación, diagramas de secuencias y por último, aunque no se plantea dentro de la metodología, se utilizó la recolección de datos, para poder esquematizar esto se realizarán los diagramas de Casos de Uso. El objetivo principal de este desarrollo, es ofrecer al colegio C.E.A.P.U.C.V., la oportunidad de obtener una ventana a la tecnología de hoy en día para aplicarla de forma eficiente en el desarrollo de sus actividades dentro del ámbito de las actividades extracurriculares dadas en esta institución, para que así puedan obtener un gran número de ventajas dentro del ámbito académico y económico. 15 INTRODUCCIÓN Hoy en día son más las instituciones que se plantean automatizar sus procesos mediante el uso de aplicaciones que simplifiquen sus actividades diarias. Actualmente el C.E.A.P.U.C.V. requiere de una aplicación que permita llevar la administración de actividades extracurriculares, ya que en la actualidad no poseen ningún proceso para esto; de igual forma presentan inconvenientes por la forma en que se está llevando a cabo el sistema de inscripción manual de las actividades. Por esta razón surge el interés de desarrollar una aplicación Web que permita, gestionar y administrar las actividades extracurriculares y posea un módulo de inscripción en línea. A continuación se va a presentar el Trabajo Especial de Grado sobre este desarrollo, en el cual se presentará el esquema general el cual estará compuesto por: Capítulo I: Se planteará el problema a abordar, así como sus objetivos generales y específicos, para luego así poder definir el alcance y justificación que van a definir el desarrollo de esta aplicación. Capítulo II: Dentro de este capítulo se abordará el marco metodológico del Trabajo Especial de Grado, en el cual se explicarán las diferentes tecnologías, herramientas y metodologías utilizadas para desarrollo de aplicaciones. Capítulo III: Se desarrollarán a plenitud las herramientas tecnológicas a utilizar en el desarrollo de este Sistema Web en línea para la gestión e inscripción del Colegio C.E.A.P.U.C.V. Capítulo IV: En este capítulo se comenzará con una breve justificación de la metodología elegida para el desarrollo, para luego continuar con el desglose de cada una de sus fases que se proponen dentro de esta. Luego de finalizar con toda la investigación y desarrollo de este Trabajo Especial de Grado, se llegará a una conclusión y a trabajos futuros para lograr un Sistema Web más completo. 16 CAPÍTULO I – PROBLEMA El Centro Educativo de la Asociación de Profesores de la UCV (C.E.A.P.U.C.V.), se encuentra ubicado en Colinas de Bello Monte, su campus está integrado por familiares de profesores de la UCV e integrantes de la comunidad del Colegio. EL C.E.A.P.U.C.V. se ha encargado de impartir una excelente formación académica a sus estudiantes y aparte de ésto han creado un conjunto de actividades extracurriculares para así lograr un desarrollo integral en sus estudiantes, entre estas actividades extracurriculares se encuentran: baloncesto, fútbol, costura, cerámica, danza árabe, danza contemporánea, cuenta cuentos, arte y expresión plástica, entre otros. Dado que el Colegio no posee un presupuesto para sobrellevar los gastos de estos cursos, los representantes realizan un aporte mensual monetario dependiendo del curso donde se encuentre inscrito su representado. Este aporte es gestionado por el C.E.A.P.U.C.V. de forma manual, lo cual conlleva a no controlar los retrasos en los pagos de manera eficiente, ya que es difícil ubicar cuales son los representantes que no han cancelado, trayendo como consecuencia que muchas veces el colegio tenga que subsidiar estos gastos de otras partidas presupuestarias para continuar con los cursos. Lo anteriormente descrito abarca solamente el ámbito económico, sin embargo con todas las facilidades que hoy nos ofrece la tecnología, es posible minimizar la incomodidad de los representantes de asistir personalmente al colegio a inscribir a sus representados, y además dirigirse a un banco a cancelar su cuota. Otra consideración a tomar en cuenta de la gestión manual, es que los instructores en algunas ocasiones no reciben a tiempo el listado actualizado de integrantes de cada curso. Todos estos aspectos nombrados anteriormente, han llevado al Colegio C.E.A.P.U.C.V., a la idea de no continuar dictando estas actividades extracurriculares a sus alumnos, ya que con la desorganización de pagos, los representantes no se ven en la obligación de cancelar sus cuotas a tiempo, 17 cancelando estas siempre final del año escolar, por lo cual el colegio tiene que subsidiar durante todo un año todos los gastos que generan estas actividades extracurriculares, en los últimos años el colegio se ha dado cuenta que su presupuesto anual no les permite seguir subsidiando estas actividades. Esto traería como consecuencia, que los alumnos del C.E.P.U.C.V. se queden sin sus actividades extracurriculares, perdiendo así una forma de esparcimiento dentro de su educación y crecimiento como personas. Para dar solucionar estos inconvenientes, se plantea el diseño de una aplicación Web a fin de automatizar el proceso de Administración de las actividades extracurriculares, que incluya el proceso de inscripción y pago en línea. Mediante esta herramienta el colegio podrá controlar los pagos de los representantes y detallar los ingresos y egresos de cada una de sus actividades extracurriculares, por otro lado, otorgaría una gran facilidad y comodidad a los padres al realizar la inscripción y pagos mensuales de los talleres online, para que así los pagos sean más recurrentes y el colegio pueda mantener sus actividades extracurriculares para sus alumnos. 1.2 OBJETIVO GENERAL Desarrollar un Sistema Web de gestión, control e inscripción de Actividades Extracurriculares para el C.E.A.P.U.C.V, con la finalidad de automatizar los procesos, que actualmente se realizan de forma manual y presencial en el Colegio. Mediante este Sistema Web se espera lograr que el Colegio pueda llevar un mayor control de pagos en las actividades extracurriculares, así como su gestión; en cuanto a la inscripción se tiene la perspectiva que el representante podrá introducir los datos del pago (deposito y transferencia) de forma online para posteriormente el Colegio pueda validarlos, evitando así, la incomodidad de ir personalmente a realizar la inscripción y de dirigirse a alguna entidad financiera para realizar la operación. 18 1.3 OBJETIVOS ESPECÍFICOS � Identificar los requerimientos solicitados por los usuarios del sistema, mediante los Casos de Uso. � Determinar la metodología más apropiada a utilizar, tomando en cuenta las características del sistema. � Analizar los requerimientos de los usuarios del sistema para cumplir con los objetivos propuestos. � Diseñar una aplicación Web que permita a los miembros de la comunidad del C.E.A.P.U.C.V. administrar las actividades extracurriculares vía Web de forma rápida y eficiente. � Desarrollar la aplicación Web que cumpla los estándares de usabilidad. � Realizar pruebas con la finalidad de comprobar el correcto funcionamiento del sistema Web desarrollado. � Adiestrar a los administradores del sistema con el propósito dominar los pasos y procedimientos a seguir en el sistema Web de administración de actividades extracurriculares. 1.4 ALCANCE A fin de dar solución a la problemática planteada por los miembros de la comunidad del C.E.A.P.U.C.V. y para efectos de este trabajo se tomará en cuenta el levantamiento de requerimientos elaborado con el personal directivo del colegio antes mencionado, el cual solicitó un sistema Web que permita la administración, control e inscripción vía Web de las actividades extracurriculares que se imparten a los estudiantes en la C.E.A.P.U.C.V. 19 No sólo se deben tomar en cuenta los requerimientos funcionales con los que debe contar la aplicación, sino que se hace preciso considerar los principios de usabilidad a la hora de elaborar su diseño, a fin de facilitarle al usuario las tareas que la aplicación le provee. Entre las funcionalidades principales con las que contará la aplicación se tienen: � Inicio de sesión. � Agregar, modificar y eliminar actividades extracurriculares. � Inscripción de estudiantes en actividades extracurriculares. � Modificación de inscripción. � Visualizar pago de actividades extracurriculares. � Consultar cuentas por pagar y por cobrar. � Consultar representantes deudores. � Agregar, modificar y eliminar talleristas. 1.5 JUSTIFICACIÓN El desarrollo del sistema de gestión, control e inscripción, se justifica debido a la falta de automatización del sistema de inscripción de actividades extracurriculares, ya que actualmente los representantes deben dirigirse a la institución a realizar la inscripción y a la entidad bancaria a cancelar el pago correspondiente. Por otro lado, se justifica la creación del sistema Web debido a la inexistencia de un proceso de gestión y control de actividades extracurriculares, el cual permita agregar, modificar y eliminar talleres, usuarios, horarios, materiales, entre otros. Así mismo en la institución del C.E.A.P.U.C.V. existe la carencia de un proceso que permita realizar consultas en tiempo real de la información, que permita consultar reportes de pagos de representantes realizados, alumnos inscritos en talleres, representantes solventes y deudores. Cabe destacar que la institución al 20 no poseer un listado de representantes deudores, ocasiona que el C.E.A.P.U.C.V. deba suplir la carencia, con dinero destinado a otras áreas de la institución, lo cual produce un desnivel en su presupuesto anual. Aunado a lo mencionado anteriormente, se tiene la reducción de costos en tiempo, los cuales se consumían realizando estos procesos manualmente. 21 CAPÍTULO II - MARCO TEÓRICO Una metodología de desarrollo tiene como objetivo elevar la calidad del software a través de una mayor transparencia y control sobre el proceso. A continuación se describen tres metodologías de desarrollo: Rational Unified Process (RUP), Programación Extrema (XP) y Desarrollo Basado en Funcionalidades (FDD), a fin de decidir cuál es la metodología que mejor se adapta al desarrollo del Sistema Web propuesto, y así obtener los resultados esperados en el tiempo adecuado. 2.1 METODOLOGÍAS DE DESARROLLO 2.1.1 Rational Unified Process (RUP) RUP es un proceso para el desarrollo de software, el cual proporciona un enfoque disciplinado para asignar tareas y responsabilidades dentro de una organización de desarrollo. Su objetivo es garantizar la producción de software de alta calidad que se ajuste a las necesidades de los usuarios finales. Este proceso va dedicado especialmente a grandes proyectos, ya que deben repartirse 32 roles y generar muchos documentos finales, los cuales pueden generar beneficio para la reutilización de código, pero muchas veces en proyectos pequeños provocan mayores incrementos en tiempo y costos. RUP es una guía de cómo utilizar eficazmente el Lenguaje Unificado de Modelado (UML). El UML es un lenguaje estándar que permite comunicar claramente los requisitos, arquitecturas y diseños. Según [1], esta metodología se caracteriza por tener una documentación exhaustiva y su prioridad es seguir con el plan de proyecto que se detalla a continuación en sus cuatro fases: � Fase Inicial: durante esta fase se hace un plan de fases, se identifican los riesgos y se delimita el alcance del proyecto. Para lograr ésto, hay que identificar todas las entidades externas con que el sistema 22 interactúa (actores). Ésto implica la identificación de los principales casos de uso. � Fase de Elaboración: durante esta fase se desarrolla el plan del proyecto y se eliminan los elementos de mayor riesgo del proyecto. Abarca los flujos de trabajo de requerimientos, el refinamiento del modelo de negocios, análisis, diseño y una parte de implementación orientado a la arquitectura. � Fase de Construcción: esta fase se concentra en la elaboración de un producto totalmente operativo y eficiente mediante una serie de iteraciones y en la elaboración del manual de usuario. � Fase de Transición: en esta fase el software es entregado a los usuarios finales. Suelen surgir problemas que obliguen a desarrollar nuevas versiones, corregir algunos problemas ó terminar las características que se aplazaron. Por tratarse de un proceso pesado, no está adecuado a los cambios volátiles que puedan ocurrir durante la vida del proyecto, ya que la documentación se vería afectada. 2.1.2 Programación Extrema (XP) En [2] se realiza una comparación entre las metodologías tradicionales vs. las ágiles. Allí definen a la metodología de Programación Extrema (XP), como una metodología ágil, la cual se basa en un desarrollo iterativo e incremental, con una aplicación de pruebas unitarias continuas y de regresión. Una de sus características relevantes es basarse en la programación en parejas, ya que el código es revisado y discutido mientras se realiza; las reuniones con los usuarios se realizan de forma frecuente y recomiendan que uno de ellos trabaje en conjunto con los programadores. Es una de las metodologías ágiles más usada, ya que se destaca por adaptarse a los errores que puedan ocurrir en cada iteración y no por prevenirlos antes de comenzar a programar. 23 Un factor que predomina en esta metodología son las historias de usuarios que representan las funcionalidades del sistema, las cuales son realizadas por el usuario integrado en el equipo de programación. El artículo [3] describe las 12 fases de esta metodología, las cuales son: � Planeación en la cual deben interactuar los desarrolladores y el cliente. � Entrega de iteraciones pequeñas, cada cierto tiempo. � Manejo de las metáforas para lograr entender los elementos del sistema y las relaciones entre ellos. � Diseño con las funcionalidades estrictamente necesarias. � Pruebas continuas sobre cada unidad de código, con la presencia del cliente. � Mantener una depuración y simplificación constante del sistema. � Programación en pares. � Propiedad colectiva del código, ésto quiere decir que cualquier participante del proyecto puede modificar el código en cualquier momento. � Integración continúa. � Semana de 40 horas. � El cliente debe estar disponible localmente. 2.1.3 Desarrollo basado en funcionalidades (FDD) En [4] hablan que la metodología de Desarrollo Basado en Funcionalidades (FDD) fue diseñado por Peter Coad, Erich Lefebvre y Jeff De Luca, y es un proceso que se encuentra en el medio de las metodologías tradicionales y ágiles para el desarrollo de sistemas, en el cual no se realiza énfasis en la obtención de 24 los requerimientos, sino en cómo se realiza la fase de diseño y desarrollo. Propone cierre de fases cada 2 semanas con entregables tangibles, ya que es pensado para proyectos relativamente cortos. Se basa en un proceso iterativo con iteraciones cortas que producen un software funcional. El proceso consta de cinco pasos: � Desarrollo de un modelo general. � Construcción de la lista de funcionalidades. � Planificación en base a las funcionalidades. � Diseñar en base a las funcionalidades definidas. � Implementar en base a las mismas funcionalidades. Según [5] esta metodología es considerada como un proceso ligero, que también utiliza documentación, solo la necesaria para el entendimiento inmediato de alguna persona ajena al proyecto. 2.2 LENGUAJES DE PROGRAMACIÓN Hoy en día existen diversas tecnologías para el desarrollo de Aplicaciones Web, las cuales han ido surgiendo debido a las tendencias y necesidades de las plataformas. A continuación se muestran las características más resaltantes de tres tecnologías basadas en código abierto, como lo son: PHP, Java y Ruby, a fin de seleccionar uno de ellos para el desarrollo de la aplicación del Sistema Web de control, gestión e inscripción de Actividades Extracurriculares. 2.2.1 PHP De acuerdo al sitio oficial de PHP [6], PHP (Hypertext Pre-Processor) es un lenguaje de código abierto, interpretado, de alto nivel, que se utiliza mayormente 25 dentro de las páginas Web y que es ejecutado principalmente en el servidor. Posee licencia de Software libre, puede ser desplegado en la mayoría de los servidores Web y en casi todos los sistemas operativos y plataformas sin costo alguno. PHP se encuentra instalado en más de 20 millones de sitios Web y en un millón de servidores. Es también el módulo más utilizado en los servidores apache. Cuando el cliente hace una petición al servidor para que le envíe una página Web, el servidor ejecuta el intérprete de PHP. Éste procesa el script solicitado que generará el contenido de manera dinámica (por ejemplo obteniendo información de una base de datos). El resultado es enviado por el intérprete al servidor, quien a su vez se lo envía al cliente. Mediante extensiones es también posible la generación de archivos PDF, FLASH, así como imágenes en diferentes formatos. Permite la conexión a diferentes tipos de servidores de bases de datos tales como MySQL, Postgres, Oracle, ODBC, DB2, Microsoft SQL Server, Firebird y SQLite. La última versión es el PHP5 el cual brinda soporte al lenguaje Orientado a Objetos, Mysql y XML. 1) Características Principales: � Es un lenguaje multiplataforma. � Capacidad de conexión con la mayoría de los manejadores de base de datos que se utilizan en la actualidad, destaca su conectividad con MySQL. � Capacidad de expandir su potencial utilizando la enorme cantidad de módulos (llamados ext's o extensiones). � Posee una amplia documentación en su página oficial, entre la cual se destaca que todas las funciones del sistema están explicadas y ejemplificadas en un único archivo de ayuda. � Es libre, por lo que se presenta como una alternativa de fácil acceso para todos. 26 � Permite las técnicas de Programación Orientada a Objetos. � Biblioteca nativa de funciones sumamente amplia e incluida. � No requiere definición de tipos de variables. � Tiene manejo de excepciones (desde php5). 2.2.2 Java De acuerdo a [7] describen a Java como un lenguaje de programación orientado a objetos el cual fue desarrollado por la empresa Sun Microsystems a principios de los años 90. La base para su desarrollo fue a partir de la sintaxis de los lenguajes C y C++, pero tiene un modelo de objetos más simple y elimina herramientas de bajo nivel, que suelen inducir a muchos errores, como la manipulación directa de punteros o memoria. Las aplicaciones Java están típicamente compiladas en un bytecode, aunque la compilación en código de máquina nativo también es posible. En el tiempo de ejecución, el bytecode es normalmente interpretado o compilado a código nativo para la ejecución, aunque la ejecución directa por hardware del bytecode por un procesador Java también es posible. La máquina virtual de Java es necesaria para poder desarrollar en este lenguaje, hasta los momentos Sun es el propietario y las empresas para poder utilizarlo deben comprar la licencia. 2.2.3 Ruby De acuerdo a [8] Ruby es un lenguaje de programación interpretado, reflexivo y orientado a objetos, creado por el programador japonés Yukihiro Matsumoto, quien comenzó a trabajar en Ruby en 1993, y lo presentó públicamente en 1995. Combina una sintaxis inspirada en Python, Perl con características de 27 programación orientada a objetos similares a Smalltalk. Comparte también funcionalidad con otros lenguajes de programación como Lisp, Lua, Dylan y CLU. Ruby es un lenguaje de programación interpretado en una sola pasada y su implementación oficial es distribuida bajo una licencia de software libre. Ruby ha sido descrito como un lenguaje de programación multiparadigma: permite programación procedural (definiendo funciones y variables fuera de las clases haciéndolas parte del objeto raíz Object), con orientación a objetos, (todo es un objeto) o funcionalmente. En estos momentos Ruby se encuentra en pleno crecimiento, lo cual hace que exista poca documentación sobre la misma. 2.3 SISTEMAS DE GESTIÓN DE BASES DE DATOS Un Sistema de Gestión de Base de Datos (DBMS, por sus siglas en inglés) es una aplicación que controla la organización, almacenamiento, gestión y recuperación de datos en una base de datos. Uno de los propósitos principales de un DBMS es proporcionar a los usuarios una visión abstracta de los datos. Es decir, el sistema esconde ciertos detalles de cómo se almacenan y mantienen los datos. A continuación se presentan tres alternativas de DBMS muy conocidas, a fin de elegir una de ellas, en base a sus características y ventajas, para el desarrollo de la aplicación del Sistema Web de control, gestión e inscripción de Actividades Extracurriculares. 2.3.1 MySQL Según [9] MySQL es un sistema de gestión de bases de datos relacionales, confiables, muy rápidos y fáciles de usar. MySQL es un motor de base de datos 28 de código abierto, por lo que es posible para cualquier usar y modificar el software, debido a esto es muy popular su uso en aplicaciones Web. 1) Características de MySQL Las principales características de este gestor de bases de datos son las siguientes: � MySQL está escrito en C y en C++, ha sido probado por múltiples compiladores distintos y puede trabajar en distintas plataformas. � Permite manejar gran cantidad de tipos de datos para las columnas. � Utiliza el lenguaje SQL para realizar consultas a la base de datos. � Permite gestionar grandes volúmenes de datos. Existen bases de datos en MySQL Server que contienen 50 millones de registros. � Es multihilo, por lo cual puede beneficiarse de sistemas multiprocesador, usando varias CPU si están disponibles. � Basada en una arquitectura cliente/servidor que resulta muy eficaz. 2) Ventajas de MySQL Las ventajas más relevantes que posee MySQL son: � Permite un acceso a las bases de datos de forma simultánea por varios usuarios y/o aplicaciones. � Velocidad al realizar las operaciones, lo que le hace uno de los gestores con mejor rendimiento. � Brinda seguridad, en forma de permisos y privilegios, es decir, los usuarios tendrán permiso para consultar o modificar determinadas tablas. De esta forma es posible compartir información sin que peligre la integridad de la base de datos. � Bajo costo en requerimientos para la elaboración de bases de datos, ya que debido a su bajo consumo puede ser ejecutado en una máquina con escasos recursos sin ningún problema. 29 � Facilidad de configuración e instalación. � Posee gran portabilidad. � Baja probabilidad de corromper datos, incluso si los errores no se producen en el propio gestor, sino en el sistema en el que está. � Es posible conectarse a MySQL usando sockets TCP/IP en cualquier plataforma. Para establecer una conexión en sistemas Windows los clientes pueden usar pipes, mientras que en sistemas Unix, son usados los ficheros socket Unix. � Permite manejar registros de longitud fija o variable. 3) Desventajas de MySQL � Existe un gran porcentaje de utilidades de MySQL que no están documentadas. � No es intuitivo, como otros programas de sistema de gestión de base de datos (Por Ejemplo: Microsoft Access). � Requiere de amplios conocimientos del lenguaje SQL para poder explotar sus características. 2.3.2 Oracle Oracle es un Sistema Manejador de Base de Datos Relacional (RDBMS) basado en la tecnología cliente/servidor y es considerado el mayor y más usado RDBMS en el mundo. El SDBMS de Oracle es muy potente, motivo por el cual para obtener un rendimiento correcto, es necesaria la intervención de una administrador de base de datos. 1) Características de Oracle � Oracle soporta bases de datos de todos los tamaños, desde severas cantidades de bytes y gigabytes en tamaño. � Soporta aproximadamente unos 17 idiomas. 30 � Oracle soporta una arquitectura cliente/servidor, es decir, establece un proceso entre bases de datos del servidor y el cliente para la aplicación de programas. � Oracle se ejecuta en más de 80 arquitecturas de hardware y software distintos sin necesidad de cambiar una sola línea de código, esto es gracias a que más del 80% de los códigos internos de Oracle son iguales a los establecidos en todas las plataformas de sistemas operativos. 2) Ventajas de Oracle � Es mucho más robusto y proporciona mayor almacenamiento que SQL Server. � Es el motor de base de datos relacional más usado a nivel mundial. � Puede ejecutarse en multitud de sistemas operativos. � Posee interacción en cualquier plataforma (Windows, Unix, Macintosh y Mainframes). � Soporta un lenguaje de diseño de bases de datos muy completo (PL/SQL) que permite implementar diseños activos, con triggers y procedimientos almacenados. � Permite el uso de particiones para mejorar la eficiencia, y existen versiones que admiten la administración de bases de datos distribuidas. � Oracle es mucho más versátil, permite correr y manejar más transacciones que MySQL. 3) Desventajas de Oracle � Elevado precio, motivo por el cual suele ser usado en empresas muy grandes y multinacionales. � Requiere de amplios conocimientos del lenguaje SQL para poder explotar sus características. 31 � El software Oracle es muy pesado, por lo tanto el equipo donde vaya a ser instalado debe tener un buen rendimiento. 2.3.3 PostgreSQL En [10] se comenta que PostgreSQL es un potente Sistema Manejador de Base de Datos Objeto Relacional (ORDBMS por sus siglas en inglés) de código abierto. Cuenta con más de 15 años de activo desarrollo y una probada arquitectura que se ha ganado una sólida reputación de fiabilidad, integridad de datos y corrección. Se ejecuta en todos los principales sistemas operativos, incluyendo Windows, Linux, UNIX (Mac OS X, Solaris, entre otros). También soporta el almacenamiento de grandes objetos, incluyendo imágenes, sonidos o vídeo. 1) Características de PostgreSQL � Puede ser utilizado, modificado y distribuido por todo el mundo de forma gratuita para cualquier propósito, ya sea privado, comercial o académico. � Dispone de sofisticadas funciones como el acceso concurrente multiversión (MVCC por sus siglas en inglés). Es decir, mientras un proceso actualiza una tabla, otros acceden a la misma tabla sin necesidad de bloqueos. Cada usuario posee la última versión de la data que haya tenido commit. � Es altamente escalable, tanto en la enorme cantidad de datos que puede manejar como en el número de usuarios concurrentes que puede albergar. Hay sistemas activos PostgreSQL en entornos de producción que manejan más de 4 terabytes de datos. 2) Ventajas de PostgreSQL � No hay gastos asociados de licencias para el software. 32 � Multiplataforma, PostgreSQL está disponible en 34 plataformas Unix en la última versión estable y en Windows. � Está diseñado para ambientes de alto volumen ofreciendo buena respuesta en ambientes con gran cantidad de datos. � Es extensible, ya que el código fuente está disponible para todos sin costo alguno. 3) Desventajas de PostgreSQL � Es más lento que otros servidores. � No soporta jerárquica (sólo almacena tablas no otras bases de datos). � El tamaño máximo de la fila se limita a 8k. � Está limitado a 32 conexiones. � Carece del comando para suprimir columnas. 2.4 SERVIDOR WEB Los Servidores Web son programas que utilizan el protocolo HTTP (Hipertext Transfer Protocol). Este protocolo se encarga de transferir las páginas Web o HTML, el Servidor Web se ejecuta en un computador y siempre se mantiene a la espera de una petición por parte del cliente, para los fines del desarrollo del Sistema Web de Gestión y Control de Actividades Extracurriculares del C.E.A.P.U.C.V se utilizará el Servidor Web de Apache, el cual se detallará a continuación. Apache En la página oficial del Servidor HTTP Apache [11], se indica que es un software de código abierto que opera en sistemas operativos como UNIX, Windows NT, entre otros. Apache, es el servidor HTTP más popular desde abril de 1996 y se desarrolla dentro del proyecto de la Apache Software Foundation. Este proyecto 33 tiene como objetivo crear un código fuente sólido, funcional y de libre distribución para implementar un servidor Web (HTTP). 1) Ventajas � Software libre, puede ser descargado gratuitamente en Internet, a través de la página principal de Apache. � Multiplataforma, ya que es usado en plataformas como UNIX, Windows, entre otras. � Popular, ya que existe gran cantidad de documentación relacionada con él. � Configurable, su código fuente está disponible para la comunidad con la finalidad de mejorarlo constantemente. 2.5 PATRONES DE ARQUITECTURA DE SOFTWARE Los patrones de arquitecturas de software, son soluciones que se presentaron a problemas concurrentes y particulares en el diseño de una aplicación, el objetivo de estos patrones, es mejorar la calidad de diseño del sistema, hacerlo más flexible y encapsular su complejidad, el patrón de arquitectura a usar en el desarrollo de éste Sistema será el Modelo Vista Controlador, el cual se definirá a continuación. Modelo Vista Controlador (MVC) En el Trabajo Especial de Grado de Desarrollo de un Sistema para Administrar las Actividades Extracurriculares del C.E.A.P.U.C.V., utilizando Herramientas de Código Abierto, destacan la mayor importancia de este modelo por ser capaz de separar la lógica de negocio de la presentación, colocando como intermediario un componente al cual llaman Controlador. Todo ésto se realiza con el fin de poder 34 obtener clases reusables o simplemente si se desea realizar algún cambio en algunas de las vistas, ésto se realiza sin necesidad de involucrar otras clases. Consta de tres elementos Modelo-Vista-Controlador, tal como lo muestra su nombre y como se indica en [12]: � Modelo: Es el que posee la lógica de la aplicación, es el único componente que tiene relación con la Base de Datos. � Vista: Se encarga de la presentación de la aplicación, es la visualización de lo que el modelo realizo y llega a través del controlador, de igual forma cuando un usuario ingresa datos a través de ésta, es enviada al controlador. � Controlador: Es la parte de la aplicación que toma la información ingresada por el usuario a través de la vista y la envía al modelo, a su vez es quien deja la información lista para vista. Figura 2.1 - Diagrama Modelo MVC En la Figura 2.1 obtenida de [13] se puede observar como es el proceso del Modelo-Vista-Controlador, en la cual se recibe una petición a través de la red al controlador, el cual envía la información al modelo para ser procesada y retorna a el mismo la respuesta para así actualizar la vista con los nuevos cambios a ser mostrados al usuario. 35 CAPÍTULO III – TECNOLOGÍAS A UTILIZAR Las tecnologías hoy en día son la base del desarrollo de cualquier aplicación, ya que mediante ellas se puede lograr, entre otras cosas, la programación y la comunicación entre los datos con la aplicación; como lo es en el caso de los manejadores de base de datos, en este capítulo se presentarán las tecnologías a utilizar para el desarrollo de éste Sistema Web. 3.1 MySQL El sistema manejador de bases de datos es la parte más importante de un sistema de base de datos ya que se encarga de ejecutar todas las operaciones sobre la base de datos además de llevar a cabo funciones como: control de concurrencia, seguridad, integridad, respaldo y recuperación de datos. Para el desarrollo del sistema Web se utilizará MySQL como manejador de base de datos ya que permite manejar con facilidad grandes volúmenes de información, posee gran velocidad a la hora de realizar operaciones ofreciendo así mayor rendimiento, puede ser ejecutado en máquinas con escasos recursos sin ningún problema, esto gracias a su bajo consumo. Además, MySQL es fácil de aprender y de utilizar. 3.2 PHP Se tomó la decisión de utilizar el lenguaje de programación PHP, primero porque fue un requerimiento del cliente y segundo porque es fácil de desarrollar e implementar, aparte que ofrece mayores hospedajes Web a mejores precios, ya que por ser Software libre no se debe pagar ningún tipo de licencia como en el caso de Java. Y lleva mucho tiempo en el mercado en contradicción con Ruby, lo cual trae como ventaja que exista mayor documentación en la Web para abordar cualquier problema que pueda surgir en el trayecto del desarrollo del sistema. 36 CAPÍTULO IV - MARCO METODOLÓGICO Desarrollar un buen software depende de un sinnúmero de actividades y etapas, donde el impacto de elegir la mejor metodología es trascendental para el éxito del sistema. Con el fin de dar cumplimiento a los objetivos establecidos, se propone el uso de una metodología de trabajo que permita hacer el proceso de desarrollo de software más rápido y eficiente. La metodología propuesta para el desarrollo de los procesos, es Feature Driven Development (FDD) ya que, se trata de un proceso ligero el cual posee la documentación necesaria para el desarrollo del mismo y permite el trabajo de los desarrolladores de forma distribuida, teniendo sesiones de trabajos cada cierto tiempo para compartir impresiones y apoyarse. El punto de la documentación fue de gran importancia a la hora de elegir la metodología adecuada, ya que RUP por ser una metodología muy robusta, carga a los desarrolladores con trabajo por el exceso de documentación y XP es lo contrario, no requiere tanta documentación. Otro punto a favor de esta metodología, es que la relación con el cliente se realiza en el primer módulo cuando se solicitan los requerimientos y luego durante el desarrollo, solo si ocurre algún cambio de alcance por parte del cliente. A continuación, se presenta la descripción de los flujos de trabajo del proceso que componen las 5 fases de la metodología FDD, para llevar a cabo el desarrollo e implementación de la aplicación Web. 4.1 ESPECIFICACIÓN DE LA METODOLOGÍA DE DESARROLLO Esta metodología se basa en un proceso iterativo, en el cual se van desarrollando las funcionalidades en intervalos pequeños de tiempo, la cantidad de funcionalidades y el tiempo que toma cada una de ellas es lo que determinara la cantidad de iteraciones del proceso, sin embargo si se consigue con alguna funcionalidad cuyo tiempo de desarrollo sea mayor a dos semanas, ésta se debe 37 subdividir en más ítems. A diferencia de las otras metodologías, ésta sólo provee pasos para las fases de diseño y construcción, por lo tanto para la parte del análisis se realizará una entrevista con el cliente para tomar sus inquietudes y requerimientos del sistema, para luego proceder a realizar un diagrama de casos de usos, el cual enfatizará todas las funcionalidades pedidas por el cliente, sus dependencias y descomposición. Luego de tener en claro los requerimientos y encontrarse dentro del contexto del proyecto, se comienzan a desarrollar las etapas de la FDD. A continuación se comenzará con el desarrollo de la metodología, comenzando por el proceso de análisis. 4.1.1 Casos de uso Mediante el diagrama de casos de uso se pretende modelar el sistema a desarrollar para el C.E.A.P.U.C.V., con sus funcionalidades y las interacciones que este va a presentar con sus usuarios (actores). CASOS DE USO – NIVEL 0 En este caso de uso, se modela el sistema a nivel general, con sus respectivos actores. (Ver Figura 4.1). Descripción de Actores: � Usuario Administrador Financiero: son los usuarios que tienen como función la administración de los gastos por cada taller y el otorgamiento de la solvencia de pagos al padre. � Usuario Coordinador: son los usuarios que tienen como función administrar los talleres y talleristas del plantel y la asignación de los talleristas a los talleres. � Usuario Director: son los usuarios que pueden consultar la información del sistema. 38 � Usuario Tallerista: son los usuarios que modifican información limitada de los talleres y que emiten comentarios de los estudiantes que tienen a su cargo en los talleres. � Usuario Padres: son los usuarios que realizan la inscripción de sus representados en los talleres que brinda el plantel. Figura 4.2 - Diagrama de casos de uso para el nivel 0 CASOS DE USO – NIVEL 1 En la Figura 4.2 se muestran los casos de uso correspondientes al nivel 1 de abstracción, los cuales presentan las principales funcionalidades de la aplicación y su interacción con los actores. En la Tabla 4.1, Tabla 4.2, Tabla 4.3, Tabla 4.4, Tabla 4.5, Tabla 4.6, Tabla 4.7, Tabla 4.8, Tabla 4.9, Tabla 4.10, Tabla 4.11 y Tabla 4.12 se detalla la especificación para cada caso de uso del nivel 1. 39 Figura 4.3 - Diagrama de casos de uso nivel 1 Caso de uso 1.- Realizar conciliación Actores Administrador financiero Descripción Funcionalidad que permite al Administrador financiero, dar solvencia a los padres una vez realizado el pago de talleres de sus representados. Tabla 4.1 - Especificación del caso de uso: Realizar conciliación Caso de uso 2.- Administrar gastos de talleres Actores Administrador financiero Descripción Funcionalidad a través de la cual el Administrador financiero agrega, modifica y elimina los gastos que generan los talleres que brinda el plantel. 40 Tabla 4.2 - Especificación del caso de uso: Administrar gastos de talleres Caso de uso 3.- Consultar reportes Actores Administrador financiero, Director, Tallerista, Coordinador Descripción Funcionalidad a través de la cual los usuarios consultan estudiantes inscritos en talleres, padres solventes y deudores, pagos al plantel y gastos del plantel y comentarios emitidos por los talleristas sobre los estudiantes. Tabla 4.3 - Especificación del caso de uso: Consultar reportes Caso de uso 4.- Autenticar Actores Administrador financiero, Padres, Director, Tallerista, Coordinador, Médico Descripción Funcionalidad que permite a los usuarios acceder al Sitio Web, mediante un nombre de usuario y una contraseña. Tabla 4.4 - Especificación del caso de uso: Autenticar Caso de uso 5.- Consultar servicios Actores Padres Descripción Funcionalidad que permite a los padres consultar sus representados, los talleres y su solvencia. Tabla 4.5 - Especificación del caso de uso: Consultar servicios Caso de uso 6.- Cambiar contraseña Actores Administrador financiero, Padres, Director, Tallerista, Coordinador Descripción Funcionalidad a través de la cual todos los usuarios cambian su contraseña de acceso al sistema. Tabla 4.6 - Especificación del caso de uso: Cambiar contraseña Caso de uso 7.- Inscribir Actores Padres Descripción Funcionalidad a través de la cual los padres inscriben a sus representados en los talleres que ofrece el plantel. Tabla 4.7 - Especificación del caso de uso: Inscribir 41 Caso de uso 8.- Administrar talleres Actores Tallerista, Coordinador Descripción Funcionalidad que permite al coordinador del plantel agregar, modificar y eliminar talleres, así como también asignar talleristas a talleres, y al tallerista editar información limitada de los talleres. Tabla 4.8 - Especificación del caso de uso: Administrar talleres Caso de uso 9.- Administrar usuarios Actores Coordinador Descripción Funcionalidad a través de la cual el coordinador del plantel agrega, modifica y elimina los usuarios del sistema. Tabla 4.9 - Especificación del caso de uso: Administrar usuarios Caso de uso 10.- Administrar horarios Actores Coordinador Descripción Funcionalidad a través de la cual el coordinador del plantel agrega, modifica y elimina los horarios que en que los talleres serán impartidos. Tabla 4.10 - Especificación del caso de uso: Administrar horarios Caso de uso 11.- Administrar materiales Actores Coordinador Descripción Funcionalidad a través de la cual el coordinador del plantel agrega, modifica y elimina los materiales pertenecientes a los talleres. Tabla 4.11 - Especificación del caso de uso: Administrar materiales Caso de uso 12.- Pagar mensualidad Actores Padres Descripción Funcionalidad a través de la cual los padres cancelan la mensualidad de sus representados inscritos en talleres que presta el plantel. Tabla 4.12 - Especificación del caso de uso: Pagar mensualidad 42 CASOS DE USO – NIVEL 2 En la Figura 4.3 se muestra el caso de uso Realizar conciliación en un segundo nivel de abstracción. Luego, se muestra la especificación correspondiente en la Tabla 4.13. Figura 4.4 - Diagrama de casos de uso nivel 2: Realizar conciliación Caso de uso 1.1. Listar padres Actores Administrador financiero Pre-condición El usuario debe estar autenticado y debe haber seleccionado un rango de fechas Descripción Lista los padres cuyo pago de talleres no ha sido validado ó ha sido erróneo. Post-condición Se da la opción para validar si los padres han hecho el pago de talleres. Tabla 4.13 - Especificación del caso de uso: Listar padres En la Figura 4.4 se observa el detalle del caso de uso Administrar gastos de talleres en un segundo nivel de abstracción. Luego, se muestra la especificación correspondiente en las Tablas 4.14, Tabla 4.15 y Tabla 4.16. Figura 4.5 - Diagrama de casos de uso nivel 2: Administrar gastos de talleres 43 Caso de uso 2.1. Agregar Actores Administrador financiero Pre-condición El usuario debe estar autenticado. Debe existir al menos un taller y un tipo de gasto en la base de datos. Descripción Agrega gastos por cada taller, de los siguientes tipos: pago a talleristas, transportistas, extraordinarios y de materiales. Se debe especificar el monto y la fecha de pago. Post-condición El registro queda almacenado en la base de datos. Tabla 4.14 - Especificación del caso de uso: Agregar Caso de uso 2.2. Modificar Actores Administrador financiero Pre-condición El usuario debe estar autenticado y debe existir al menos un gasto de taller a modificar. Descripción Se selecciona el gasto objeto de modificación, se realizan los cambios correspondientes y se presiona la opción Modificar. Post-condición Los cambios del registro se almacenan en la base de datos. Tabla 4.15 - Especificación del caso de uso: Modificar Caso de uso 2.3. Eliminar Actores Administrador financiero Pre-condición El usuario debe estar autenticado y debe existir al menos un gasto de taller a eliminar. Descripción Se selecciona el gasto objeto de eliminación y se presiona la opción Eliminar. Post-condición El registro es eliminado de la base de datos. Tabla 4.16 - Especificación del caso de uso: Eliminar En la Figura 4.5 se observa el detalle del caso de uso Consultar reportes en un segundo nivel de abstracción. Posteriormente, se muestra la especificación correspondiente en la Tabla 4.17, Tabla 4.18, Tabla 4.19, Tabla 4.20 y Tabla 4.21. 44 Figura 4.6 - Diagrama de caso de uso nivel 2: Consultar reportes Caso de uso 3.1. Consultar talleres Actores Administrador financiero, Director Pre-condición El usuario debe estar autenticado. Deben existir talleres para consultar su información. Descripción Permitirá realizar la búsqueda contra la base de datos, para listar todos los talleres que se encuentren abiertos. Post-condición Muestra al usuario un listado de talleres. Tabla 4.17 - Especificación del caso de uso: Consultar talleres Caso de uso 3.2. Consultar gastos Actores Administrador financiero, Director Pre-condición El usuario debe estar autenticado. Descripción Se selecciona el taller abierto objeto de la consulta y se especifica un rango de fechas para así realizar la búsqueda contra la base de datos, y listar todos los gastos del taller especificado. Post-condición Muestra al usuario un listado de gastos por taller. Tabla 4.18 - Especificación del caso de uso: Consultar gastos Caso de uso 3.3. Consultar padres Actores Administrador financiero, Director 45 Pre-condición El usuario debe estar autenticado. Descripción Permite realizar la búsqueda contra la base de datos, para listar todos los padres que se encuentren registrados en el sistema. El sistema permite mostrar los representan que se encuentran solventes y deudores. Post-condición Muestra al usuario un listado con los padres de los estudiantes del plantel. Tabla 4.19 - Especificación del caso de uso: Consultar padres Caso de uso 3.4. Consultar inscritos Actores Administrador financiero, Director, Tallerista, Coordinador Pre-condición El usuario debe estar autenticado. Descripción Se listan los talleres abiertos actualmente y al seleccionar un taller se mostrarán los estudiantes que se encuentran inscritos en él. Post-condición Muestra al usuario un listado con los estudiantes que se encuentran inscritos en el taller seleccionado. Tabla 4.20 - Especificación del caso de uso: Consultar inscritos Caso de uso 3.5. Consultar pagos Actores Administrador financiero, Director Pre-condición El usuario debe estar autenticado. Descripción Permite realizar la búsqueda contra la base de datos, para listar todos los pagos de talleres que han hecho los padres en un rango de fecha especificado. Post-condición Se muestra al usuario un listado con los pagos efectuados por los padres. Tabla 4.21 - Especificación del caso de uso: Consultar pagos En la Figura 4.6 se observa el detalle del caso de uso Consultar servicios en un segundo nivel de abstracción. En las Tablas 4.22, Tabla 4.23 y Tabla 4.24, se muestra la especificación correspondiente para cada caso de uso. 46 Figura 4.7 - Diagrama de casos de uso nivel 2: Consultar servicios Caso de uso 5.1. Consultar representados Actores Padres Pre-condición El usuario debe estar autenticado. Descripción Funcionalidad que permite a los padres visualizar la información de sus representados en el plantel. Post-condición Se muestra al padre un listado con sus representados indicando en que taller(es) se encuentra inscrito y el estado de su inscripción. Tabla 4.22 - Especificación del caso de uso: Consultar representados Caso de uso 5.2. Consultar talleres Actores Padres Pre-condición El usuario debe estar autenticado. Deben existir talleres para consultar su información. Descripción Funcionalidad por medio de la cual los padres consultan los talleres abiertos por el plantel en el período escolar actual. Post-condición Se muestra al padre un listado de talleres abiertos. Tabla 4.23 - Especificación del caso de uso: Consultar talleres Caso de uso 5.3. Consultar solvencia Actores Padres Pre-condición El usuario debe estar autenticado. Descripción Funcionalidad que permite a los padres conocer su estado en cuanto a la solvencia de los talleres de sus representados en el período escolar actual. Los estados pueden tomar los siguientes valores: pendiente, confirmado, rechazado por monto, rechazado por número 47 de voucher. Post-condición Se muestra al padre el estado que posee actualmente. Tabla 4.24 - Especificación del caso de uso: Consultar solvencia En la Figura 4.7 se observa el detalle del caso de uso Inscribir en un segundo nivel de abstracción. Posteriormente, se muestra la especificación correspondiente en la Tabla 4.25. Figura 4.8 - Diagrama de casos de uso nivel 2: Inscribir Caso de uso 7.1. Listar representados Actores Padres Pre-condición El usuario debe estar autenticado y en caso de cancelar con depósito ó transferencia bancaria debe poseer la información de éstos a mano. Descripción Se listan los representados del padre logueado a fin de que seleccione uno de ellos y se le asigne algún taller disponible. Luego de haber asignado todos los talleres deseados a sus representados deberá finalizar la inscripción indicando el método de pago (efectivo, depósito bancario ó transferencia bancaria). En caso de pagar con depósito o transferencia bancaria deberá introducir el número de depósito ó transferencia, así como también indicar el banco emisor. En caso contrario el padre deberá acudir al plantel a realizar el pago en efectivo. Post-condición Los estudiantes inscritos en talleres quedan en estado pendiente hasta que el administrador financiero realice la conciliación de pagos de padres. Tabla 4.25 - Especificación del caso de uso: Listar representados 48 En la Figura 4.8 se observa el detalle del caso de uso Administrar talleres en un segundo nivel de abstracción. A continuación, se muestra la especificación correspondiente en la Tabla 4.26 y Tabla 4.27. Figura 4.9 - Diagrama de casos de uso nivel 2: Administrar talleres Caso de uso 8.1. Consultar talleres Actores Coordinador Pre-condición El usuario debe estar autenticado. Descripción Funcionalidad que permite listar los talleres que imparte el plantel. Post-condición Se muestra un listado de talleres al usuario. Tabla 4.26 - Especificación del caso de uso: Consultar talleres Caso de uso 8.2. Consultar talleres abiertos Actores Coordinador, tallerista Pre-condición El usuario debe estar autenticado. Descripción Permite consultar los talleres que se encuentra abiertos actualmente para el período escolar, y en los cuales los estudiantes pueden inscribirse. Post-condición Se muestra un listado de talleres abiertos al usuario. Tabla 4.27 - Especificación del caso de uso: Consultar talleres abiertos En la Figura 4.9 se observa el detalle del caso de uso Administrar usuarios en un segundo nivel de abstracción. Posteriormente, se muestra la especificación correspondiente en la Tabla 4.28, Tabla 4.29, Tabla 4.30 y Tabla 4.31. 49 Figura 4.10 - Diagrama de casos de uso nivel 2: Administrar usuarios Caso de uso 9.1. Consultar Actores Coordinador Pre-condición El usuario debe estar autenticado. Descripción Permite realizar la búsqueda contra la base de datos, para listar todos los usuarios del sistema del tipo: director, administrador financiero, coordinador y tallerista. Post-condición Se muestra al usuario un listado de usuarios del sistema. Tabla 4.28 - Especificación del caso de uso: Consultar Caso de uso 9.2. Agregar Actores Coordinador Pre-condición El usuario debe estar autenticado y haber consultado el listado de usuarios del sistema. Descripción Se completa la información básica del usuario como cédula, nombre, apellido, correo electrónico y nombre de usuario. Post-condición El registro queda almacenado en la base de datos y se le enviará un correo al usuario indicándole su contraseña, la cual podrá ser cambiada posteriormente. Tabla 4.29 - Especificación del caso de uso: Agregar Caso de uso 9.3. Modificar Actores Coordinador Pre-condición El usuario debe estar autenticado y haber consultado el listado de usuarios. Debe existir por lo menos un usuario 50 a modificar. Descripción Funcionalidad por medio de la cual se selecciona el usuario, se presiona la opción Modificar y se editan los datos correspondientes del usuario. Post-condición Los cambios del registro se almacenan en la base de datos. Tabla 4.30 - Especificación del caso de uso: Modificar Caso de uso 9.4. Eliminar Actores Coordinador Pre-condición El usuario debe estar autenticado y haber consultado el listado de usuarios. Debe existir por lo menos un usuario a eliminar. Descripción A través de esta funcionalidad, se selecciona un usuario del listado, se presiona la opción Eliminar y se confirma la eliminación del usuario de la base de datos. Post-condición El registro es eliminado de la base de datos. Tabla 4.31 - Especificación del caso de uso: Eliminar En la Figura 4.10 se observa el detalle del caso de uso Administrar horarios en un segundo nivel de abstracción. Posteriormente, se muestra la especificación correspondiente en la Tabla 4.32, Tabla 4.33, Tabla 4.34 y Tabla 4.35. Figura 4.11 - Diagrama de casos de uso nivel 2: Administrar horarios Caso de uso 10.1. Consultar 51 Actores Coordinador Pre-condición El usuario debe estar autenticado. Descripción Permite realizar la búsqueda contra la base de datos, para listar todos los horarios para talleres que existen en el sistema. Post-condición Se muestra al usuario un listado de horarios de talleres. Tabla 4.32 - Especificación del caso de uso: Consultar Caso de uso 10.2. Agregar Actores Coordinador Pre-condición El usuario debe estar autenticado. Descripción Se completa el campo descripción del horario, en el cual se deben especificar los días de la semana y la fecha de inicio y fin del taller. Post-condición El registro queda almacenado en la base de datos. Tabla 4.33 - Especificación del caso de uso: Agregar Caso de uso 10.3. Modificar Actores Coordinador Pre-condición El usuario debe estar autenticado. Y debe existir un horario en la base de datos a modificar. Descripción Funcionalidad por medio de la cual se selecciona el horario, se presiona la opción Modificar y se editan los datos correspondientes del horario. Post-condición Los cambios del registro se almacenan en la base de datos. Tabla 4.34 - Especificación del caso de uso: Modificar Caso de uso 10.4. Eliminar Actores Coordinador Pre-condición El usuario debe estar autenticado. Descripción A través de esta funcionalidad, se selecciona un horario del listado, se presiona la opción Eliminar y se confirma la eliminación del horario de la base de datos. Post-condición El registro es eliminado de la base de datos. Tabla 4.35 - Especificación del caso de uso: Eliminar 52 En la Figura 4.11 se observa el detalle del caso de uso Administrar materiales en un segundo nivel de abstracción. Luego, se muestra la especificación correspondiente en la Tabla 4.36, Tabla 4.37, Tabla 4.38 y Tabla 4.39. Figura 4.12 - Diagrama de casos de uso nivel 2: Administrar materiales Caso de uso 11.1. Consultar Actores Coordinador Pre-condición El usuario debe estar autenticado. Descripción Permite realizar la búsqueda contra la base de datos, para listar todos los materiales de talleres que existen en el sistema. Post-condición Se muestra al usuario un listado de materiales de talleres. Tabla 4.36 - Especificación del caso de uso: Consultar Caso de uso 11.2. Agregar Actores Coordinador Pre-condición El usuario debe estar autenticado. Descripción Se completa la información necesaria del material tal como: nombre, descripción y costo. Post-condición El registro queda almacenado en la base de datos. Tabla 4.37 - Especificación del caso de uso: Agregar Caso de uso 11.3. Modificar Actores Coordinador 53 Pre-condición El usuario debe estar autenticado y debe existir por lo menos un material en la base de datos a modificar. Descripción Funcionalidad por medio de la cual se selecciona el material, se presiona la opción Modificar y se editan los datos correspondientes del material. Post-condición Los cambios del registro se almacenan en la base de datos. Tabla 4.38 - Especificación del caso de uso: Modificar Caso de uso 11.4. Eliminar Actores Coordinador Pre-condición El usuario debe estar autenticado. Descripción A través de esta funcionalidad, se selecciona un material del listado, se presiona la opción Eliminar y se confirma la eliminación del material de la base de datos. Post-condición El registro es eliminado de la base de datos. Tabla 4.39 - Especificación del caso de uso: Eliminar En la Figura 4.12 se observa el detalle del caso de uso Pagar mensualidad en un segundo nivel de abstracción. A continuación, se muestra la especificación correspondiente en la Tabla 4.40. Figura 4.13 - Diagrama de casos de uso nivel 2: Pagar mensualidad Caso de uso 12.1. Listar representados Actores Padres Pre-condición El usuario debe estar autenticado y en caso de cancelar con depósito ó transferencia bancaria debe poseer la información de éstos a mano. Descripción Se listan los representados del padre logueado a fin de que seleccione uno de ellos y se listen los talleres que el padre debe cancelar por concepto de mensualidad. Posteriormente deberá finalizar el pago de la mensualidad 54 indicando el método de pago (efectivo, depósito bancario ó transferencia bancaria). En caso de pagar con depósito o transferencia bancaria deberá introducir el número de depósito ó transferencia, así como también indicar el banco emisor. En caso contrario el padre deberá acudir al plantel a realizar el pago en efectivo. Post-condición Los estudiantes en talleres cuyo pago de mensualidad fue realizado quedan en estado pendiente hasta que el administrador financiero realice la conciliación de pagos de padres. Tabla 4.40 - Especificación del caso de uso: Listar representados CASOS DE USO – NIVEL 3 En la Figura 4.13 se observa el detalle del caso de uso Listar padres en un tercer nivel de abstracción. Luego, se muestra la especificación correspondiente en la Tabla 4.41. Figura 4.14 - Diagrama de casos de uso nivel 3: Validar Caso de uso 1.1.1. Validar Actores Administrador financiero Pre-condición Haber validado los pagos realizados por los padres Descripción Formaliza la inscripción de los representados, cambiando su estado a Inscrito y el estado del padre es cambiado a Solvente. Post-condición Se envía un correo electrónico a cada padre validado indicándole su nuevo estado y el de sus representados. Tabla 4.41 - Especificación del caso de uso: Validar En la Figura 4.14 se observa el detalle del caso de uso Consultar inscritos en un tercer nivel de abstracción. Posteriormente, se muestra la especificación correspondiente en la Tabla 4.42. 55 Figura 4.15 - Diagrama de casos de uso nivel 3: Consultar inscritos Caso de uso 3.4.1. Consultar comentarios Actores Coordinador, Tallerista Pre-condición El usuario debe haber seleccionado un estudiante perteneciente a un taller abierto. Descripción Tanto el coordinador como el tallerista pueden consultar los comentarios que emite un tallerista a un estudiante perteneciente a su taller. Si el usuario es tallerista tendrá la opción de emitir algún comentario al estudiante en cuestión. Post-condición Se muestran los comentarios de talleristas acerca de un estudiante en particular. Tabla 4.42 - Especificación del caso de uso: Consultar comentarios En la Figura 4.15 se observa el detalle del caso de uso Consultar talleres en un tercer nivel de abstracción. Posteriormente, se muestra la especificación correspondiente en la Tabla 4.43, Tabla 4.44 y Tabla 4.45. Figura 4.16 - Diagrama de casos de uso nivel 3: Consultar talleres Caso de uso 8.1.1. Agregar Actores Coordinador Pre-condición Debe existir por lo menos un período para agregar el taller, el cual puede ser: mensual, trimestral, semestral ó 56 anual. Descripción Luego de haber consultado los talleres existentes, se presiona la opción Agregar y se completan los datos básicos de los talleres. Post-condición El registro queda almacenado en la base de datos. Tabla 4.43 - Especificación del caso de uso: Agregar Caso de uso 8.1.2. Modificar Actores Coordinador Pre-condición Debe existir por lo menos un taller. Descripción Luego de haber consultado los talleres existentes, se presiona la opción Modificar y se realizan los cambios en los campos correspondientes de talleres. Post-condición Los cambios del registro se almacenan en la base de datos. Tabla 4.44 - Especificación del caso de uso: Modificar Caso de uso 8.1.3. Eliminar Actores Coordinador Pre-condición Debe existir por lo menos un taller. Descripción Luego de haber consultado los talleres existentes, se presiona la opción Eliminar y se confirma la eliminación del taller existente. Post-condición El registro es eliminado de la base de datos. Tabla 4.45 - Especificación del caso de uso: Eliminar En la Figura 4.16 se observa el detalle del caso de uso Consultar talleres abiertos en un tercer nivel de abstracción. Posteriormente, se muestra la especificación correspondiente en la Tabla 4.46, Tabla 4.47 y Tabla 4.48. 57 Figura 4.17 - Diagrama de casos de uso nivel 3: Consultar talleres abiertos Caso de uso 8.2.1. Abrir Actores Coordinador Pre-condición El taller debe existir en la tabla de talleres donde se encuentra la información básica del taller, como por ejemplo: descripción, objetivos, capacidad, inscripción, mensualidad, entre otros. Descripción Se indica la fecha de inicio y termino del taller, el horario en el cual será impartido y se realiza la asignación del tallerista al taller. Post-condición El taller es abierto y está disponible para que los padres puedan inscribir a sus representados. Tabla 4.46 - Especificación del caso de uso: Abrir Caso de uso 8.2.2. Modificar Actores Coordinador, tallerista Pre-condición El taller debe estar abierto. Descripción Al seleccionar el taller abierto y presionar la opción Modificar se podrán realizar los cambios pertinentes sobre el taller. El coordinador podrá modificar toda la información, mientras que el tallerista tendrá acceso limitado y podrá editar únicamente la descripción, objetivos y materiales. Post-condición Los cambios del registro se almacenan en la base de datos. Tabla 4.47 - Especificación del caso de uso: Modificar Caso de uso 8.2.3. Eliminar Actores Coordinador Pre-condición El taller debe estar abierto. 58 Descripción Luego de haber consultado los talleres abiertos existentes, se presiona la opción Eliminar y se confirma la eliminación del taller existente. Post-condición El registro es eliminado de la base de datos. Tabla 4.48 - Especificación del caso de uso: Eliminar 4.1.2 Desarrollo de la Metodología FDD Luego de tener en claro los requerimientos otorgados por los diagramas de Casos de Uso, se va a tratar con cuidado el punto de las funcionalidades, ya que como se discutió anteriormente la FDD se basa en ellas, en [14] hablan de una jerarquía entre estas funcionalidades, primero se tiene las features, las cuales son las funcionalidades específicas, luego el eslabón de las features set las cuales son las que poseen características en común con el sistema. Por último se tiene las majors features sets las cuales agrupan a las features set, poseen un nivel más alto de abstracción al cliente. La idea de desarrollar en base a estas jerarquías de funcionalidades, es obtener un vocabulario común entre los desarrolladores a la hora de comunicarse con el cliente, para así desarrollar conjuntamente un modelo de negocio en común. La jerarquía de las funcionalidades provee el siguiente formato: � features: <acción> el <resultado><de|para|sobre|por>un<objeto> � features set: <acción><-ando>un<objeto> � features majors: Administración de <objeto> Según se describe en [14], el ciclo de vida de la metodología FDD va guiado por 5 fases, uno de ellos se realizará tantas veces como sean necesarias las iteraciones, así como se muestra en la Figura 4.17 tomada de la misma fuente. 59 Figura 4.18 - Ciclo de vida de la Metodología FDD 60 1) Desarrollar un modelo global En [15], proponen esta actividad con el fin de obtener un conocimiento global de la aplicación, se realiza un bosquejo de las definiciones de las restricciones, un esbozo de las funcionalidades y una lista de los elementos no funcionales. Para ésto se va a desarrollar un diagrama de clases, en donde se plasmarán todos los objetos, sus relaciones y acciones, en conjunto se realizará una lista con los requerimientos no funcionales, se presentará una lista preliminar de las funcionalidades del sistema, para finalizar para obtener el dominio general de la aplicación se desarrollará el modelo objeto del dominio. a) Diagrama de Clases Mediante este diagrama se puede representar la realidad del problema mediante las entidades u objetos, expresando sus atributos y acciones que poseen cada uno, así como las relaciones con los demás entes. En [16], definen a una clase como un artefacto de modelado que define un conjunto de objetos que comparte los mismos atributos: � Atributos (Conocimiento). � Operaciones (Responsabilidad). � Relaciones (Entrelazamiento). � Semántica (Relevancia). A continuación en la Figura 4.18 se muestra el Diagrama de Clases a utilizar para el desarrollo del Sistema Web de Gestión e Inscripción online de talleres, en el cual se presentan solo los nombres de las entidades y sus relaciones, para luego en las Figuras 4.19 a la Figura 4.41 se muestran en detalle cada objeto con sus atributos y acciones. 61 Figura 4.19 - Diagrama de Clases Figura 4.20 - Clase asigna_tallerista Figura 4.21 - Clase cargo de usuarios 62 Figura 4.22 - Clase concepto Figura 4.23 - Clase estados Figura 4.24 - Clase etapas Figura 4.25 - Clase gastos Figura 4.26 - Clase grados 63 Figura 4.27 - Clase horario Figura 4.28 - Clase ingresos Figura 4.28 - Clase inscripción 64 Figura 4.29 - Clase material Figura 4.30 - Clase meses Figura 4.31 - Clase pagos 65 Figura 4.32 - Clase período Figura 4.33 - Clase seguridad Figura 4.34 - Clase taller Figura 4.35 - Clase taller_etapa Figura 4.36 - Clase taller_material 66 Figura 4.37 - Clase talleres_actuales Figura 4.38 - Clase tipo_gasto Figura 4.39 - Clase alumnos 67 Figura 4.40 - Clase usuario 68 Figura 4.41 - Clase padres b) Funcionalidades del sistema A continuación se presenta una lista preliminar de las funcionalidades del Sistema, esta lista nos da una idea de lo que abarcará el sistema de administración de talleres C.E.A.P.U.C.V.: � Iniciar sesión � Realizar inscripción � Modificar inscripción 69 � Consultar solvencia � Cambiar contraseña � Dar solvencia al representante � Administrar gastos de talleres � Consultar reportes de talleristas, estudiantes, estudiantes por taller, entre otros � Consultar servicios � Consultar talleres � Consultar gastos � Consultar representantes � Consultar Representantes solventes y deudores � Consultar estudiantes inscritos � Agregar y consultar comentarios de estudiantes hechos por talleristas � Consultar pagos � Agregar, modificar y eliminar � Asignar talleristas a talleres � Administrar talleres � Administrar usuarios (talleristas, coordinador, director, administrador financiero) � Administrar horarios de talleres � Administrar materiales de talleres 70 c) Requerimientos no funcionales Los requerimientos no funcionales, son los que van a permitir la eficiencia y productividad de la aplicación, de acuerdo a la lista de requerimientos funcionales mostradas, se toman los requerimientos no funcionales más destacados dentro de la aplicación de Administración de Talleres e Inscripción del C.E.A.P.U.C.V. son: � Fiabilidad: Este requerimiento tiene que ver con la confianza que los usuarios deben esperar las respuestas del sistema, en el aspecto técnico. Ésto es para que la funcionalidad del sistema no se vea afectada por agentes externos. � Los aspectos en calidad a considerar en este punto son: � Capacidad de tolerar errores. � Capacidad de recuperarse de los errores. � Capacidad de tolerar sobrecarga de información o usuarios. � Los requerimientos no funcionales encontrados dentro de esta categoría son: � Garantizar capacidad de capturar errores. � Mantenibilidad: Este requisito está relacionado con el hecho de realizar modificaciones o cambios al sistema, sin que ésto implique un gasto de recursos exagerados por parte de la organización. Se desea que el mantenimiento del sistema sea relativamente sencillo. � Los criterios a realizar son: � Uso de un modelo unificado de desarrollo. � Documento del diseño y de la solución. � Algunos de los requerimientos son: � Realizar un manual de referencia para el manejo del sistema. 71 � Seguir una metodología para el diseño y el desarrollo. � Usabilidad: este requisito se refiere a la presentación que debe tener el sistema para interactuar con los usuarios, las cuales deben otorgar facilidad al cliente. � Las características generales son: � Facilidad de uso. � Diseño de interfaz de usuarios. � Los requerimientos son: � Utilizar el idioma castellano para los mensajes y textos en la interfaz. � Seguir parámetros de diseño de interfaces. d) Modelo Objeto del Dominio En el documento [17], explican el Modelo Objeto del Dominio, como un contenedor de objetos de dominio de la aplicación, en el cual se describen sus relaciones. Estos objetos representan clases conceptuales del dominio del problema. En la Figura 4.42 se muestra el Objeto del Dominio del Sistema del Sistema Web de Gestión e Inscripción de Talleres del C.E.A.P.U.C.V. 72 Figura 4.42 - Diagrama de objetos del dominio Descripción de los Objetos que intervienen: � Usuario: Representa la información común de los usuarios del plantel. Entre ellos se encuentran: director, coordinador, tallerista y administrador financiero. � Administrador financiero: Representa la información de los usuarios del plantel que pueden administrar gastos por cada taller y dar solvencia al padre. � Coordinador: Representa la información de los coordinadores del plantel que tienen como función administrar los talleres y talleristas, así como también la asignación de talleristas a los talleres. 73 � Tallerista: Representa la información de los talleristas del plantel que imparten los talleres, que modifican características de los mismos, y que emiten comentarios de sus estudiantes. � Padres: Representa la información de los padres que pueden inscribir a sus representados en talleres y pueden consultar su solvencia. � Alumnos: Representa la información de los estudiantes del plantel que pueden ser inscritos en talleres. � Director: Representa la información del usuario del plantel que puede consultar la información. � Taller: Actividad extracurricular que imparten los talleristas del plantel a sus estudiantes. Contiene la información básica de cada taller. � Talleres Actuales: Talleres que actualmente se encuentran abiertos y disponibles para inscripciones de alumnos. � Material: Objeto que representa los materiales a ser utilizados por los estudiantes en los talleres, los cuales son asignados por los talleristas. � Inscripción: Actividad por medio de la cual los padres escogen talleres a sus representados. � Solvencia: Actividad por medio de la cual los padres son liberados de deudas una vez se haya verificado su pago de los talleres. � Gastos: Valores que indican los gastos por cada taller que se imparte en el plantel, entre los cuales se encuentran: pago a talleristas, transportistas, extraordinarios, de materiales, entre otros. � Pagos: Valores que indican los pagos de talleres realizados por los padres, mediante los métodos de pago: efectivo, depósito bancario, transferencia bancaria, cheques, entre otros. � Período: Intervalo de tiempo que indica los tipos y pagos de talleres, entre los cuales se encuentran: mensual, trimestral, semestral, anual. 74 � Horario: Indica los días de la semana y las horas en que los talleres serán impartidos por los talleristas correspondientes. � Estados: Valor que indica el estatus en que se encuentra la inscripción de los alumnos en los talleres. Puede tomar el valor de Pendiente y Confirmado. � Ingresos: Objeto que representa la información económica suministrada por los padres al momento de realizar la inscripción. Entre ellos se encuentran: método de pago, entidad bancaria, período a cancelar, monto, entre otros. � Concepto: Valor que indica el motivo por el cual un padre realiza un pago de talleres. El concepto puede ser: Inscripción, mensualidad, inscripción más mensualidad. � Meses: Objeto que indica los meses del año para así llevar el control de los mismos en los pagos de los talleres efectuados por los padres. � Cargo: Indica el tipo de cuenta que posee un usuario. Puede tomar los siguientes valores: director, coordinador, tallerista, administrador financiero. � Tipo gasto: Indica los tipos de gastos que pueden existir por cada taller. Entre ellos se encuentran: pago a talleristas, transportistas, extraordinarios y de materiales. � Seguridad: Objeto que contiene los datos necesarios para que los usuarios puedan iniciar sesión en el sistema Web. � Etapas: Objeto que indica las etapas existentes en la Institución, entre ellas están: Educación Inicial, Primera Etapa, Segunda Etapa y Ciclo Diversificado. � Grados: Objeto que indica los grados en los que se subdividen las etapas, entre ellos se encuentran: 1er Grupo, 2do Grupo, 3er Grupo, 4to Grupo, 1er Grado, 2do Grado, 3er Grado, 4to Grado, 5to Grado, 75 6to Grado, 7mo Grado, 8vo Grado, 9no Grado, 1ero Año Ciencias y 2do Año Ciencias. � Taller etapa: Indica los talleres que pertenecen a una etapa de educación de la Institución. 2) Construcción de lista de funcionalidades Los casos de uso, el modelo de objeto y el diagrama de clases, son documentos que ayudan a la realización de esta lista de funcionalidades, anteriormente se mostró un esbozo de las funcionalidades a realizar, en esta fase se propone realizar la lista de funcionalidades de acuerdo a la jerarquía de funcionalidades y se realiza la priorización basado en la satisfacción del cliente, como se muestra en la Tabla 4.49, en donde se listan las funcionalidades, se coloco una prioridad A para todas (debe tener), por lo tanto solo se colocara el orden de implementación por cada mayor feature. Nombre Jerarquía Prioridad Administración de usuarios. (Mayor feature set) II Listando usuarios. (feature set) Eliminando usuarios. (feature set) Creando usuarios. (feature set) Asignar un rol a un usuario. (feature) Modificando usuarios. (feature set) Administración de talleres (Mayor feature set) III Listando talleres. (feature set) Eliminando talleres. (feature set) Creando talleres. (feature set) Agregar materiales a un taller. (feature) Agregar horario a un taller. (feature) Abriendo talleres. (feature set) 76 Asignar un tallerista a un taller. (feature) Asignar un horario a un taller. (feature) Modificando talleres. (feature set) Administrar horarios (Mayor feature set) VI Listando horarios. (feature set) Eliminando horarios. (feature set) Creando horarios. (feature set) Modificando horarios. (feature set) Administrar materiales (Mayor feature set) V Listando materiales. (feature set) Eliminando materiales. (feature set) Creando materiales. (feature set) Modificando materiales. (feature set) Administrar gastos. (Mayor feature set) VI Listando gastos (feature set) Eliminando gastos. (feature set) Creando gastos. (feature set) Modificando gastos. (feature set) Administrar pagos. (Mayor feature set) VII Listando pagos. (feature set) Revisar pagos para dar solvencia a un usuario. (feature) Enviar correo para notificar estado de solvencia otorgada al usuario. (feature) Administrando reportes. (Mayor feature set) V Realizando reportes por estudiantes. (feature set) Listar estudiantes por taller. (feature) Mostar comentarios de los estudiantes. (feature) Agregar comentarios de estudiantes. (feature) 77 Eliminar comentarios de estudiantes. (feature) Realizando reportes por talleres. (feature set) Calcular número de inscritos por taller (feature) Listar inscritos de un taller. (feature) Calcular total talleres abiertos. (feature) Realizando reportes por representantes. (feature set) Listar representantes con deudas. (feature) Listar representantes sin deudas. (feature) Realizando reportes de pagos. (feature set) Listar los pagos por períodos de tiempo. (feature) Calcular monto total de pagos en un período de tiempo. (feature) Listar estudiantes que pertenecen a un representante. (feature) Listar talleres abiertos. (feature) Consultando Inscritos. (feature set) Listar estudiantes inscritos que pertenecen a algún taller. (feature) III Consultando talleres. (feature set) Listar talleres abiertos. (feature) Consultar solvencia de un representante. (feature) Autenticar usuarios (feature) I Cambiar contraseña (feature) II Tabla 4.49 - Tabla de Features por prioridades 3) Planteamiento por rasgos En esta fase, se realiza la planificación de alto nivel de las funcionalidades, tomando en cuenta su prioridad y colocando sus respectivos responsables. En la Figura 4.43 se observa la planificación realizada en el cual se colocaron todas las majors features, asignándole un responsable para el desarrollo, un orden y un 78 tiempo estipulado para su finalización. Figura 4.43 - Planificación de las funcionalidades del sistema Web 4) Diseñar por funcionalidades En esta fase se comienza a realizar la parte productiva del proceso, donde se da inicio a la planificación planteada anteriormente, según [16] cada programador comienza a desarrollar por rasgos con un tiempo no mayor a 2 semanas por cada uno, este proceso iterativo incluye, el diagrama de secuencias por cada funcionalidad para verificar que el diseño pueda ser implementado. En esta fase también se coloca el diagrama de clases actualizado, para este desarrollo el diagrama de clases no sufrió modificaciones, por lo tanto no fue colocado dentro de la misma. A continuación se presentan los diagramas de secuencia por cada caso de uso. 79 Figura 4.44 - Realizar conciliación En la Figura 4.44 se muestra la funcionalidad Realizar Conciliación, en donde el Administrador Financiero selecciona un rango de fechas y un estado (Pendiente, Rechazado, Confirmado) y se le mostrará un reporte de todos los pagos realizados por los representantes, para luego ser evaluados por el usuario. 80 Figura 4.45 - Administrar gastos de talleres En la Figura 4.45 se muestra el diagrama de secuencia de Administrar gastos de talleres, en el cual el Administrador Financiero podrá listar, modificar, agregar y eliminar los gastos relacionados con un taller. 81 Figura 4.46 - Consular reportes de gastos de talleres En la Figura 4.46 se observa el diagrama de secuencia de Consultar reportes de gastos de talleres, en el cual el Usuario dado un período podrá observar los gastos de cada taller y el total de gastos en ese período. Figura 4.47 - Consultar reporte de inscritos En la Figura 4.47 se observa el diagrama de secuencia para consultar reportes de inscritos, en el cual el usuario específica un taller para luego mostrar el reporte de inscritos asociados a ese taller. 82 Figura 4.48 - Consultar comentarios sobre alumnos En la Figura 4.48 se muestra la opción que el usuario posee luego de listar el reporte de inscritos para poder visualizar y editar los comentarios de un alumno relacionados a un taller. Figura 4.49 - Consultar reporte de talleres En la Figura 4.49 se observa el diagrama de consultar reporte de talleres, con el cual se listarán todos los talleres y la cantidad de talleres que posee abiertos. 83 Figura 4.50 - Consultar reporte de pagos En la Figura 4.50 se muestra el reporte de pagos dado un período de tiempo y un tipo (Deudas, Crédito), donde se específica el representante y el monto pagado o por pagar y da la opción de enviar una notificación vía mail en caso de ser deudor. Figura 4.51 - Consultar reporte de padres En la Figura 4.51, dada una cédula de un padre se obtiene la lista de representados con la cantidad de talleres en los cuales están inscritos actualmente. 84 Figura 4.52 - Consultar reporte de talleres abiertos En la Figura 4.52, se muestra el diagrama de secuencia de consultar reporte de talleres abiertos, en el cual se listarán y se indicará la cantidad de inscritos, así como el dinero obtenido. Figura 4.53 - Autenticar En la Figura 4.53 se observa el diagrama de secuencia de iniciar sesión, en el cual se validan los datos del usuario para ingresar al sistema. 85 Figura 4.54 - Consultar servicios - Consultar Representados En la Figura 4.54 se muestra el diagrama de secuencia de consultar representados en el cual dado el padre autenticado se le listarán sus representados. Figura 4.55 - Consultar servicios - Consultar Talleres En la Figura 4.55 se muestra el diagrama de secuencia de consultar talleres en el cual se listarán los talleres disponibles en el colegio. 86 Figura 4.56 - Consultar Servicios – Consultar Solvencia En la Figura 4.56 se presenta el diagrama de secuencia de consultar solvencia, aquí se mostrará el estado del pago de acuerdo a todos sus representados. Figura 4.57 - Cambiar Contraseña En la Figura 4.57 se muestra el diagrama de secuencia para cambiar contraseña. 87 Figura 4.58 - Inscribir En la Figura 4.58, se observa el diagrama de secuencia se muestra el proceso de inscripción que debe realizar el representante por cada representado, para seleccionar los cursos e introducir los datos del pago. 88 Figura 4.59 - Administrar Talleres En la Figura 4.59 se muestra el diagrama de secuencia para administrar talleres, en el cual se agrega, lista, modifica y elimina. 89 Figura 4.60 - Administrar talleres abiertos En la Figura 4.60, se observa el diagrama de secuencia de Administrar talleres abiertos en el cual dado un taller creado se puede listar, agregar, modificar y eliminar. 90 Figura 4.61 - Administrar horarios En la Figura 4.61 se muestra el diagrama de secuencia de administrar horarios, en el cual se podrá listar, agregar y modificar. 91 Figura 4.62 - Administrar materiales En la Figura 4.62 se observa el diagrama de secuencia de Administrar materiales, en la cual se podrá consultar, agregar, modificar o eliminar un material para luego ser relacionado con un taller en su creación. 92 Figura 4.63 - Pagar mensualidad En la Figura 4.63 se muestra el diagrama de secuencia de Pagar mensualidad, en donde los Padres al seleccionar un representado podrán cancelar las mensualidades de los talleres asociados. 5) Construir por funcionalidades En la parte de construcción de las funcionalidades, se va a realizar la inspección de código mediante las pruebas unitarias de las funcionalidades más relevantes. Para realizar las pruebas unitarias se utilizará un Plugin de Eclipse llamado SimpleTest, con esta herramienta, se crean las pruebas unitarias de cada funcionalidad para luego correr un script de validación que nos indicará el funcionamiento de las mismas. a) Administración de Usuarios: Las pruebas de Administrar usuarios fueron divididas en sus funcionalidades referentes a este, las cuales son: iniciar sesión, agregar, modificar y eliminar usuarios, cambiar contraseña, consultar usuario y listar usuarios; tal como se muestra en la Figura 4.64 donde se encuentra el código de pruebas, estas 93 últimas pruebas para listar y consultar solo se van a colocar en el documento de pruebas una sola vez ya que es la misma función utilizada para los demás casos, pero con parámetros distintos. En la Figura 4.65 se muestran los resultados de la prueba, las cuales no tuvieron ningún problema. Figura 4.64 - Código Prueba - Administración Usuarios 94 Figura 4.65 - Resultados de las Pruebas de Administrar Usuarios b) Administración de Talleres En la Figura 4.66, se muestra el código de prueba de Administración de Talleres en el cual se realizan las pruebas por cada funcionalidad: crear, modificar y eliminar taller. Al realizar las pruebas se pudo constatar que se debía colocar una restricción a la hora de eliminar un taller, la cual es no eliminar un taller si existen talleres abiertos asociados y que se encuentren vigentes con la fecha. Las pruebas se realizaron con éxito, como se muestra en la Figura 4.67. Figura 4.66 - Código de Pruebas de la Administración de Talleres 95 Figura 4.67 - Resultados de las Pruebas de Administrar Talleres c) Administración de Talleres Actuales (Talleres por iniciar o iniciados) En la Figura 4.68, se muestra el código de prueba de Administración de Talleres Actuales en el cual se realizan las pruebas por cada funcionalidad: crear, modificar y eliminar taller actual. Al realizar las pruebas se pudo constatar que se debía colocar una restricción a la hora de eliminar un taller actual, la cual es no eliminar un taller actual si existen alumnos asociados a él y la fecha de término no ha finalizado. Las pruebas se realizaron con éxito, como se muestra en la Figura 4.69. Figura 4.68 - Código de Pruebas para Administrar Talleres Actuales 96 Figura 4.69 - Resultados de las Pruebas Administrar Talleres Actuales d) Administración de Horarios En la Figura 4.70, se muestra el código de prueba de Administración de Horarios en el cual se realizan las pruebas por cada funcionalidad: crear, modificar y eliminar. Las pruebas se realizaron con éxito, como se muestra en la Figura 4.71. Figura 4.70 - Código Prueba Administrar Horarios 97 Figura 4.71 - Resultados de las Pruebas Administrar Horarios e) Administración de Materiales En la Figura 4.72, se muestra el código de prueba de Administración de Materiales en el cual se realizan las pruebas por cada funcionalidad: crear, modificar y eliminar. Las pruebas se realizaron con éxito, como se muestra en la Figura 4.73. Figura 4.72 - Código de Prueba para Administrar Materiales 98 Figura 4.73 - Resultado para las Pruebas Administrar Materiales f) Administración de Gastos En la Figura 4.74, se muestra el código de prueba de Administración de Gastos en el cual se realizan las pruebas por cada funcionalidad: crear, modificar y eliminar. Las pruebas se realizaron con éxito, como se muestra en la Figura 4.75. Figura 4.74 - Código de Prueba para Administrar Gastos 99 Figura 4.75 - Resultados para la Prueba Administrar Gastos g) Reportes En la Figura 4.76, se muestra el código de prueba de los Reportes a generar en el cual se realizan las pruebas por cada tipo de reporte: talleres, talleres actuales, representantes, inscritos y pagos; de igual forma se encuentra el código prueba de listar y modificar comentarios del alumno, ya que esta funcionalidad se deriva del Reporte de Inscritos. Las pruebas se realizaron con éxito, como se muestra en la Figura 4.77. Figura 4.76 - Código de Prueba para los Reportes 100 Figura 4.77 - Resultado de las Pruebas de los Reportes h) Conciliación En la Figura 4.78, se muestra el código de prueba de Conciliación, el cual se realizan las pruebas para listar las conciliaciones dado los parámetros y para realizar la validación en la que se le envía el correo electrónico al usuario. Las pruebas se realizaron con éxito, como se muestra en la Figura 4.79. Figura 4.78 - Código Prueba de Conciliación 101 Figura 4.79 - Resultados de la Prueba Conciliación i) Administración de usuarios en módulo de representantes En la Figura 4.80, se muestra el código de pruebas unitarias para la Administración de usuarios en el módulo del representante. Las pruebas realizadas incluyen el inicio de sesión del usuario en el sistema y el cambio de contraseña. El resultado de las pruebas fue exitoso, como se muestra en la Figura 4.81. Figura 4.80 - Código prueba de Administración de usuarios en módulo de representantes 102 Figura 4.81 - Resultado de la prueba de Administración de usuarios en módulo de representantes j) Consultas y operaciones relacionadas con talleres en módulo de representantes En la Figura 4.82, se muestra el código de pruebas unitarias para las consultas y operaciones relacionadas con los talleres en el módulo del representante. Las pruebas realizadas incluyen consultar los talleres actuales, consultar los detalles de los talleres actuales, consultar los representados inscritos, realizar inscripción de talleres y efectuar el pago de mensualidades. El resultado de las pruebas fue exitoso, como se muestra en la Figura 4.83. 103 Figura 4.82 - Código de pruebas de consultas y operaciones con los talleres en el módulo del representante 104 Figura 4.83 - Resultado de las pruebas de consultas y operaciones con los talleres en el módulo del representante k) Consulta de solvencia en módulo de representantes En la Figura 4.84, se muestra el código de pruebas unitarias para la consulta de solvencia de talleres en el módulo del representante. Las pruebas realizadas incluyen consultar solvencia general y consultar solvencia por pagos realizados en un intervalo de tiempo. El resultado de las pruebas fue exitoso, como se muestra en la Figura 4.85. Figura 4.84 - Código de las pruebas de consulta de solvencia 105 Figura 4.85 - Resultado de las pruebas de consulta de solvencia 4.2 INTERFACES DEL SISTEMA WEB DE GESTIÓN, CONTROL E INSCRIPCIÓN ONLINE A continuación se colocarán todas las interfaces del Sistema Web de Gestión, Control e Inscripción online con las cuales los usuarios interactuarán para poder realizar todas las funcionalidades. Como el Sistema se compone de dos módulos, el administrativo y el de usuarios, se colocarán por separado estas interfaces, para un mayor orden. 4.1.2 Interfaces del módulo de Usuario (Representantes del Colegio). Las siguientes figuras conforman el Sistema de Inscripción de Talleres del C.E.A.P.U.C.V., donde los representantes podrán realizar la inscripción de sus representados en los talleres que ofrece la Institución y podrán realizar el pago de las mensualidades de dichos talleres. 106 Figura 4.86 - Interfaz de autenticación de usuarios En la Figura 4.86 se presenta la interfaz de autenticación de usuarios del Sistema de Inscripción de Talleres del C.E.A.P.U.C.V. Figura 4.87 - Interfaz de bienvenida al representante En la Figura 4.87 se muestra la interfaz de bienvenida al representante, la cual 107 presenta un breve recordatorio al usuario antes de iniciar la inscripción ó el pago de la mensualidad de los talleres de sus representados. Además se muestra el menú con las acciones que se pueden llevar a cabo en el Sistema. Figura 4.88 - Interfaz de listado de talleres abiertos En la Figura 4.88 se muestra la interfaz de talleres abiertos actualmente por la Institución, en los cuales los representantes podrán inscribir a sus representados. Se muestra la fecha en que inicia y culmina el taller y se da la opción para que se consulten los detalles del taller. 108 Figura 4.89 - Interfaz de detalles de talleres En la Figura 4.89 se muestran otras características de los talleres abiertos actualmente en la Institución, para que puedan ser consultadas por el representante. 109 Figura 4.90 - Interfaz de listado de representados inscritos en talleres En la Figura 4.90 se muestra la Interfaz donde se podrán consultar los representados inscritos en los talleres. Se da la opción para que el representante consulte los comentarios que los talleristas emiten sobre sus representados por cada taller. Figura 4.91 - Interfaz de comentarios de talleristas sobre alumnos En la Figura 4.91 se muestra la interfaz de los comentarios que emiten los 110 talleristas sobre los alumnos, a fin de que el representante haga seguimiento a las actividades realizadas por su representado y observe su rendimiento. Figura 4.92 - Interfaz de selección de tipo de solvencia a consultar En la Figura 4.92 se muestra la interfaz utilizada para que el representante consulte su solvencia. Se indican 2 tipos de solvencia: solvencia por pagos, en donde tendrá que indicar un rango de fechas para consultar los pagos realizados en ese intervalo; y solvencia general, la cual le indicará su estado solvente o deudor. 111 Figura 4.93 - Interfaz de consulta de solvencia general En la Figura 4.93 se muestra la interfaz de consulta de la solvencia general. Aquí el representante podrá consultar por cada taller de su representado si su estado es solvente o deudor; y en caso de ser deudor se le indicará los meses pendientes por el pago y el monto pendiente. Figura 4.94 - Interfaz de consulta de solvencia por pagos realizados 112 En la Figura 4.94 se muestra la interfaz de consulta de solvencia por pagos, en donde el representante podrá verificar el estado actual del pago realizado por los talleres de cada representado. Figura 4.95 - Interfaz del paso 1 de inscripción de talleres En la Figura 4.95 se muestra la interfaz del proceso de inscripción en el paso número uno. En este paso, el representante deberá escoger uno de los representados listados a fin de inscribirlo en alguno de los talleres que ofrece la Institución. 113 Figura 4.96 - Interfaz del paso 2 de inscripción de talleres En la Figura 4.96 se muestra la interfaz del segundo paso de la inscripción de talleres. En este paso se listan los talleres que el representado seleccionado puede cursar, en base al grado al que pertenezca actualmente. El representante podrá consultar los detalles de cada taller para luego inscribir a su representado en él. Figura 4.97 - Interfaz del paso 3 de inscripción de talleres En la Figura 4.97 se muestra la interfaz del detalle de taller escogido. Si el representante está de acuerdo con las características del taller podrá agregar dicho taller a su representado. De lo contrario, podrá devolverse a la página anterior y seleccionar otro taller. 114 Figura 4.98 - Interfaz de notificación al representante En la Figura 4.98 se muestra la interfaz de notificación de inscripción del taller al representante. En este punto, el representante podrá seguir inscribiendo a su representado en talleres mediante la opción de Continuar, ó por el contrario, podrá culminar la inscripción mediante la opción Finalizar. 115 Figura 4.99 - Interfaz del paso 4 de incripción de talleres con pago en efectivo En la Figura 4.99 se muestra la interfaz de formalización de inscripción. En este paso, se muestran todos los talleres que el representante inscribió a su representado seleccionado. Si el representante no está de acuerdo con algún taller podrá eliminarlo. Además se piden los datos del pago, en donde el representante deberá seleccionar el tipo de pago para cancelar las inscripciones. En este caso el tipo de pago es Efectivo, y el representante deberá dirigirse a la Institución a fin de cancelar el monto pendiente. 116 Figura 4.100 - Interfaz del paso 4 de inscripción de talleres con pago en depósito ó transferencia bancaria Al igual que en la figura anterior, en la Figura 4.100 se muestran todos los talleres que el representante inscribió a su representado seleccionado. La diferencia está en el tipo de pago seleccionado, ya que si selecciona Depósito ó Transferencia Bancaria, deberá seleccionar el banco de la Institución a donde realizó la operación, el número de la operación la fecha y el monto de pago. 117 Figura 4.101 - Interfaz del paso 1 del pago de mensualidad En la Figura 4.101 se muestra la interfaz del paso número uno del proceso de pago de mensualidad. En este punto, el representante deberá seleccionar un representado a fin de realizar el pago correspondiente a los talleres inscritos. Figura 4.102 - Interfaz del paso 2 del pago de mensualidad 118 En la Figura 4.102, se muestra la interfaz del paso número dos del pago de mensualidad. En este punto se listan los talleres en los cuales está inscrito el representado seleccionado y el representante deberá indicar los meses que desee cancelar por cada taller. Posteriormente, deberá especificar los datos para efectuar el pago; sólo se presenta la opción de pago en Depósito ó Transferencia Bancaria, junto con el nombre del banco, número de operación, fecha y monto del pago realizado. Figura 4.103 - Interfaz de cambio de contraseña En la Figura 4.103 se muestra la interfaz donde el representante podrá cambiar su contraseña. Es importante que el representante conozca que al cambiar esta contraseña, estará cambiando su contraseña de acceso al Sistema de Inscripción de Materias del C.E.A.P.U.C.V. 119 4.1.3 Interfaces del módulo Administración (Personal del Colegio). A continuación se presentarán las interfaces del módulo de Administración, mediante el cual podrán tener acceso, el Administrador Financiero, el Tallerista, el Coordinador de talleres, el Director y el Subdirector. A fines de este documento, las pantallas a mostrar van a ser de un usuario con el rol de Super Administrador el cual podrá acceder a todas las funcionalidades. Figura 4.104 - Interfaz de Administrador – Iniciar Sesión En la Figura 4.104 se observa el inicio del módulo de Administración para el personal del Colegio C.E.A.P.U.C.V, en cual se debe iniciar sesión con el correo electrónico y con la clave enviada al correo electrónico por el Administrador Financiero. 120 Figura 4.105 - Interfaz de Administrador - Principal En la Figura 4.105 se observa la página principal del Sistema, en el cual se muestran las opciones principales. Figura 4.106 - Interfaz de Administrador - Usuarios En la Figura 4.106 se tiene la página de usuarios, con la cual el Administrador Financiero podrá, agregar, modificar y eliminar a usuarios del Sistema. 121 Figura 4.107- Interfaz de Administrador - Modificar Usuario En la Figura 4.107 se encuentra la pantalla de modificar, la cual es la misma para agregar a un usuario, sin traer datos precargados. Aquí se pueden modificar todos sus campos menos la cédula de identidad y se selecciona un perfil para asociarlo. Figura 4.108 - Interfaz de Administrador - Crear Talleres En la Figura 4.108 se muestra la funcionalidad Crear Talleres, en el cual se listaran todos los talleres creados, permitiendo agregar, modificar y eliminar, este último siempre y cuando no posea ningún taller actual asociado. 122 Figura 4.109 - Interfaz de Administrador - Modificar Talleres En la Figura 4.109 se encuentra la pantalla de modificar talleres, la cual es la misma para agregar un taller, sin traer datos precargados. Aquí se pueden modificar todos sus campos, se puede indicar el período de pagos (Semanal, mensual, trimestral, semestral, anual) y seleccionar los materiales necesarios, los cuales se seleccionan de la lista de materiales. 123 Figura 4.110 - Interfaz de Administrador - Iniciar Talleres En la Figura 4.110 se listan los talleres iniciados, hasta el momento, donde se podrá, agregar, modificar y eliminar, esta última siempre y cuando no posea alumnos inscritos y el taller se encuentre en curso. 124 Figura 4.111 - Interfaz de Administrador - Modificar Talleres Iniciados En la Figura 4.111 se encuentra la pantalla de modificar talleres iniciados, la cual es la misma para agregar un taller iniciado, sin traer datos precargados. Aquí se pueden modificar todos sus campos, seleccionar el período mediante un calendario, seleccionar las etapas validas para este taller, y los demás campos inherentes al taller iniciado. Figura 4.112 - Interfaz de Administrador - Horarios 125 En la Figura 4.112 se listan los horarios, donde se podrá, agregar, modificar y eliminar. Figura 4.113 - Interfaz de Administrador - Modificar Horarios En la Figura 4.113 se encuentra la pantalla de modificar horarios, la cual es la misma para agregar un horario, sin traer datos precargados. Figura 4.114 - Interfaz de Administrador - Materiales En la Figura 4.114 se listan los materiales, donde se podrá, agregar, modificar y eliminar. 126 Figura 4.115 - Interfaz de Administrador - Modificar Materiales En la Figura 4.115 se encuentra la pantalla de modificar materiales, la cual es la misma para agregar un material, sin traer datos precargados. Figura 4.116 - Interfaz de Administrador - Gastos En la Figura 4.116 se listan los gastos creados por el administrador financiero asociado a un taller determinado, donde se podrá, agregar, modificar y eliminar. 127 Figura 4.117 - Interfaz de Administrador - Modificar Gastos En la Figura 4.117 se encuentra la pantalla de modificar gastos, la cual es la misma para agregar un gasto, sin traer datos precargados. Figura 4.118 - Interfaz de Administrador - Reporte Talleres En la Figura 4.118 se muestra un reporte de los talleres existentes y la cantidad de talleres abiertos que posee. 128 Figura 4.119 - Interfaz de Administrador - Reporte Talleres Abiertos En la Figura 4.119 se muestra un reporte de los talleres abiertos, con sus horarios, números de alumnos inscritos, el tallerista asignado y la cantidad de dinero pagada por los representantes para ese taller. Al final se puede observar el total ingresos y total inscritos. 129 Figura 4.120 - Interfaz de Administrador - Reporte Gastos En la Figura 4.120 se muestra un reporte de los gastos, en el cual se puede elegir obtener los gastos por un período de tiempo o por un taller dado, en este caso es por un período de tiempo seleccionado. Figura 4.121 - Interfaz de Administrador - Reporte Representantes En la Figura 4.121 se muestra un reporte por un representante dado anteriormente mediante el número de cédula, para listar sus representados asociados a talleres y si posee alguna deuda. 130 Figura 4.122 - Interfaz de Administrador - Reporte Inscritos En la Figura 4.122 se muestra un reporte de inscritos por un taller seleccionado anteriormente, para listar sus inscritos asociados y poder acceder a los comentarios. Figura 4.123 - Interfaz de Administrador - Reporte Inscritos Comentarios En la Figura 4.123 luego de presionar el botón ver de la ventana anterior se muestran los comentarios de ese alumno para ese taller, con la posibilidad de modificarlos. 131 Figura 4.124 - Interfaz de Administrador - Reporte Pagos En la Figura 4.124 luego de seleccionar un período de tiempo y un tipo (deuda o créditos), se listarán los representantes que poseen deudas y se le podrá enviar una notificación vía correo electrónico de esta deuda. Figura 4.125 - Interfaz de Administrador - Realizar Conciliación En la Figura 4.125 luego de seleccionar un período de tiempo y un estado (pendiente, erróneo o exitoso), se listarán los representantes han realizado sus pagos con todos los datos pertinentes para que el Administrador Financiero pueda validarlos y evaluarlos según sea el caso de los estados, luego de evaluarlos se le enviara una notificación vía mail y a la página de usuario en donde se indicará cual fue el resultado. 132 CONCLUSIONES Este Sistema va dirigido directamente al personal que administra los talleres en el C.E.A.P.U.C.V. y a todos los representantes de dicho Colegio, con el cual podrán llevar de una forma eficiente todos sus procesos relacionados a estas actividades, destacando el proceso de inscripción, el cual otorgará a los representantes una mayor facilidad y rapidez a la hora de inscribir a sus representados y seguir el control de estos talleres. La aplicación provee un sistema de reportes de suma importancia para el personal del Colegio, ya que mediante ellos podrán llevar el control de las inscripciones, ingresos y egresos que le proporcionan estos talleres. Para lograr el desarrollo de este Sistema Web se realizaron investigaciones sobre las metodologías más utilizadas para el desarrollo estas, se llego a la conclusión de el uso de la metodología basada en funcionalidades (FDD), ya que se torna ligera y fácil de aplicar cuando se trata de proyectos Web a pequeña escala y otorga diferentes artefactos de información los cuales sirven de guía a lo largo del desarrollo. Otro punto a favor de esta metodología es poder trabajar en base a las funcionalidades de la aplicación para así poder lograr mayor motivación por parte de los desarrolladores al poder visualizar los alcances de una forma más rápida y a obtener un vocabulario para poder manejarse con el cliente. Al finalizar la aplicación se realizaron una serie de pruebas unitarias, teniendo como apoyo el plugin SimpleTest de Eclipse el cual permite realizar las clases de pruebas y realizar un script para probarlas y así poder entregarle al cliente una aplicación con garantía, estas pruebas se llevaron a cabo de forma exitosa, determinando el buen funcionamiento de toda la aplicación por cada funcionalidad. 133 Trabajos Futuros Las siguientes son una serie de recomendaciones que bien podrían ser tomadas en cuenta con el fin de optimizar y agregar nuevas funcionalidades al Sistema Web de Gestión, Control e Inscripción. Debido a que en un tiempo con la cantidad de estudiante se puede tornar engorroso la forma en que se realiza la conciliación y de que siempre va a existir el error humano, se propone que para un trabajo futuro se realice un sistema de pagos online mediante tarjeta de debito y crédito para que este dinero se acredite automáticamente en la cuenta del Colegio C.E.A.P.U.C.V. Dado que en la parte de la herramienta inscripción del colegio se encuentra la funcionalidad de agregar una Ficha médica por cada estudiante, se propone que en el futuro se realice una consulta para los talleristas para poder acceder a esa data desde esta aplicación Web de Gestión, Control e Inscripción. 134 REFERENCIAS [1] Rational Unified Process. Best Practices for Software Development Teams. Disponible en: http://www.ibm.com/developerworks/rational/library/content/03July/1000/1251/125 1_bestpractices_TP026B.pdf. (Consultado: Junio, 2008) [2] Figueroa, Roberth G.; Solís, Camilo J; Cabrera, Armando A. Metodologías tradiciones Vs. Metodologías ágiles. Disponible en: http://209.85.215.104/search?q=cache:FadvJFoZqoAJ:adonisnet.files.wordpress. com/2008/06/articulo-metodologia-de-sw- formato.doc+metodologia+XP+vs+metodologia+RUP&hl=es&ct=clnk&cd=1&gl=ve &client=firefox-a]. (Consultado: Mayo, 2008) [3] González Campos, Saúl; Fernández, Luis Felipe. Programación Extrema: Prácticas, aceptación y controversias. Disponible en: http://www.uacj.mx/IIT/CULCYT/mayo-agosto2006/8ArtProg.pdf (Consultado, Mayo, 2008) [4] Gutiérrez, Sarah; Zapata, Hernán; Arias, Juan Pablo; Zambrano, Cristian. FDD: Feature Driven Development. Desarrollo Basado en Funcionalidades. Disponible en: pisis.unalmed.edu.co/cursos/material/3004582/1/PresentacionFDD.ppt (Consultado: Junio, 2008) 135 [5] Metodologías RUP y XP - [PROCESOS DE DESAROLLO]. Disponible en: http://jackopc.blogspot.com/2007/05/metodologias-rup-y-xp-procesos-de.html (Consultado: Abril, 2008) [6] ¿Qué se puede hacer con PHP? Disponible en: http://www.php.net/manual/es/intro-whatcando.php (Consultado: Julio, 2008) [7] Java Language Specification. Third Edition. Disponible en: http://java.sun.com/docs/books/jls/third_edition/html/intro.html (Consultado: Julio, 2008) [8] Acerca de Ruby. Disponible en: http://www.ruby-lang.org/es/about/ (Consultado: Julio, 2008) [9] Historia de MySQL. Disponible en: http://dev.mysql.com/doc/refman/5.0/es/history.html (Consultado: Junio, 2008) [10] PostgreSQL. Disponible en: http://www.postgresql.org (Consultado: Julio, 2008) [11] Apache. HTTP Server Project. http://httpd.apache.org/ (Consultado: Julio, 2008) [12] Java BluePrints. Model-View-Controller. 2000-2002 Sun Microsystems, Inc. All Rights Reserved. Disponible en: http://java.sun.com/blueprints/patterns/MVC-detailed.html (Consultado: Agosto, 2008) 136 [13] Patrón MVC. Disponible en: http://redacademica.com.mx/blog/wp- content/uploads/2008/03/patronmvc.png (Consultado: Octubre, 2008) [14] Schenone Marcelo Hernán. Diseño de una Metodología Ágil de Desarrollo de Software. Disponible en: http://materias.fi.uba.ar/7500/schenone- tesisdegradoingenieriainformatica.pdf (Consultado: Septiembre, 2008) [15] Dosil, Federico. Procesos Ágiles. Disponible en: http://www.google.co.ve/url?sa=t&source=web&ct=res&cd=1&url=http%3A%2F% 2Fwww.fing.edu.uy%2Finco%2Fcursos%2Fgestsoft%2FPresentaciones%2FProc esos%2520Agiles%2520- %2520G4%2FProcesos%2520Agiles.doc&ei=Kp36SN6SHJuiefWm- T8&usg=AFQjCNE6dw8O6mb_GqUBwt_uGMeaFTKwoA&sig2=E0JFuwjO67I880 9zv9VCsw (Consultado: Septiembre, 2008) [16] Vilalta, Josep. Diagramas de Clases. Disponible en: http://64.233.169.104/search?q=cache:CuOwKQJ9QQUJ:www.vico.org/aRecurso sPrivats/UML_TRAD/talleres/mapas/UMLTRAD_101A/LinkedDocuments/UML_di agClases.pdf+Diagramas+de+Clases&hl=es&ct=clnk&cd=3&gl=ve&client=firefox- a (Consultado: Octubre, 2008) [17] Grupo Docente de Aplicaciones con la Tecnología Internet Escuela de Computación, Universidad Central de Venezuela. Metodología para Construcción de Aplicaciones Web.