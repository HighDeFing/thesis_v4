Implementación de la Solución Universidad Central de Venezuela Facultad de Ciencias Escuela de Computación Tecnología en Redes y Comunicaciones SISTEMA DE GESTIÓN DE SERVICIOS DE RESERVACIÓN Y CONTROL DE INVENTARIO A TRAVÉS DEL USO DE DISPOSITIVOS MÓVILES Trabajo Especial de Grado presentado ante la Ilustre Universidad Central de Venezuela Por el Bachiller Maricruz Lista Muñoz para optar al título de Licenciado en Computación Tutor: Ana V. Morales B. Tutor Organizacional: Claudia Fuenmayor Caracas, Noviembre 2009 Facultad de Ciencias. Escuela de Computación i INDICE GENERAL INDICE GENERAL ............................................................................................................................ i INDICE DE FIGURAS ....................................................................................................................... iii INDICE DE TABLAS .......................................................................................................................... v Resumen........................................................................................................................................ 1 Introducción .................................................................................................................................. 3 Capítulo 1 ...................................................................................................................................... 5 El Problema ................................................................................................................................... 5 1.1 Planteamiento del Problema ........................................................................................ 5 1.2 Objetivo General ........................................................................................................... 6 1.3 Objetivos Específicos ..................................................................................................... 6 1.4 Justificación ................................................................................................................... 6 1.5 Metodología .................................................................................................................. 7 1.6 Distribución del documento .......................................................................................... 7 Capítulo 2 .................................................................................................................................... 11 Sistemas de Información ............................................................................................................. 11 2.1 Sistemas de Información de Control de Inventario y Manejo de Almacenes ............. 11 2.2 Metodologías para el desarrollo de Sistemas de Información ................................... 14 2.3 Herramientas para el desarrollo de Sistemas de Información.................................... 22 Capítulo 3 .................................................................................................................................... 25 Desarrollo para Dispositivos Móviles .......................................................................................... 25 3.1 Herramientas para el desarrollo en Dispositivos Móviles .......................................... 25 Capítulo 4 .................................................................................................................................... 31 Diseño ......................................................................................................................................... 31 4.2 Diagrama de Casos de Uso .......................................................................................... 34 4.2 Diagramas de Secuencia ............................................................................................. 47 4.3 Diagramas de Clases .................................................................................................... 53 4.4 Modelo de la Base de Datos........................................................................................ 54 Capítulo 5 .................................................................................................................................... 55 Implementación de la Solución ................................................................................................... 55 5.1 Análisis y Diseño de la aplicación ................................................................................ 55 5.1.1 Objetivos de la aplicación ................................................................................... 55 ii Facultad de Ciencias. Escuela de Computación <INDICE GENERALResumen 5.1.2 Análisis y descripción de las herramientas ......................................................... 55 5.1.3 Instalación y Configuración ................................................................................. 62 5.1.4 Modelo del análisis ............................................................................................. 64 5.1.5 Modelo conceptual de los datos ......................................................................... 67 5.2 Implementación .......................................................................................................... 73 5.2.1 Módulo de Usuarios ............................................................................................ 74 5.2.2 Módulo de Servicios ............................................................................................ 79 5.2.3 Módulo de Control de Inventario ....................................................................... 84 5.2.4 Módulo de Reservaciones ................................................................................... 92 5.2.5 Bitácora ............................................................................................................... 94 5.2.6 Privilegios ............................................................................................................ 95 5.2.7 Vista Móvil ........................................................................................................... 98 Capítulo 6 .................................................................................................................................. 105 Pruebas y Resultados ................................................................................................................ 105 6.1 Pruebas generales ..................................................................................................... 105 6.2 Pruebas funcionales .................................................................................................. 106 6.3 Pruebas Integrales ..................................................................................................... 111 6.4 Pruebas de seguridad ................................................................................................ 112 6.5 Pruebas en sitio ......................................................................................................... 112 Capítulo 7 .................................................................................................................................. 115 Conclusión ................................................................................................................................. 115 7.1 Contribuciones .......................................................................................................... 116 7.2 Limitaciones .............................................................................................................. 116 7.3 Recomendaciones ..................................................................................................... 116 7.4 Trabajos Futuros ....................................................................................................... 116 Referencias ................................................................................................................................ 119 Facultad de Ciencias. Escuela de Computación iii INDICE DE FIGURAS Figura 2.1 El ciclo del procesamiento de una transacción. Fuente [18] ..................................... 13 Figura 2.2 Etapas del Método CASE. Fuente [3] ......................................................................... 17 Figura 2.3 Proyecto Extreme Programming. Fuente [8] ............................................................. 19 Figura 2.4 Etapas del Método Cascada Pura. Fuente [7] ............................................................ 21 Figura 3.1 Tecnología J2ME. Fuente [19] ................................................................................... 28 Figura 4.1 Diagrama de Casos de Uso Nivel 1 ............................................................................. 35 Figura 4.2 Diagrama de casos de Uso Nivel 2 ............................................................................. 39 Figura 4.3 Diagrama de secuencia – Crear Reservaciones .......................................................... 47 Figura 4.4 Diagrama de secuencia – Modificar Reservaciones ................................................... 47 Figura 4.5 Diagrama de secuencia – Cancelar Reservación ........................................................ 48 Figura 4.6 Diagrama de secuencia – Crear producto .................................................................. 48 Figura 4.7 Diagrama de secuencia – Modificar producto ........................................................... 49 Figura 4.8 Diagrama de secuencia – Eliminar producto.............................................................. 49 Figura 4.9 Diagrama de secuencia – Crear usuario ..................................................................... 50 Figura 4.10 Diagrama de secuencia – Modificar usuario ............................................................ 50 Figura 4.11 Diagrama de secuencia – Eliminar usuario .............................................................. 51 Figura 4.12 Diagrama de secuencia – Crear servicio .................................................................. 51 Figura 4.13 Diagrama de secuencia – Modificar servicio ............................................................ 52 Figura 4.14 Diagrama de secuencia – Eliminar servicio .............................................................. 52 Figura 4.15 Diagrama de clases ................................................................................................... 53 Figura 4.16 Modelo de la Base de Datos ..................................................................................... 54 Figura 5.1 Transferencia de código fuente Java en Internet. Fuente [14] ................................. 56 Figura 5.2 Arquitectura Java. Fuente [12] ................................................................................... 57 Figura 5.3 Procesamiento Struts. Fuente [5] ............................................................................. 58 Figura 5.4 Estructura genérica de la arquitectura Modelo-Vista-Controlador. Fuente [17]...... 59 Figura 5.5 Funcionamiento de Resin. Fuente [26] ...................................................................... 60 Figura 5.6 Funcionamiento Jasper Reports. Fuente [10] ........................................................... 61 Figura 5.7 Dependencia entre paquetes ..................................................................................... 65 Figura 5.8 Clases del paquete Modelo ........................................................................................ 65 Figura 5.9 Clases del paquete controlador ................................................................................. 66 Figura 5.10 Clases del paquete Formulario ................................................................................. 67 Figura 5.11 Inicio de Sesión ......................................................................................................... 74 Figura 5.12 Funciones del Sistema .............................................................................................. 74 Figura 5.13 Agregar un Nuevo Usuario ....................................................................................... 75 Figura 5.14 Pantalla Listado de Usuarios .................................................................................... 76 Figura 5.15 Reporte Listado de Usuarios .................................................................................... 76 Figura 5.16 Datos del Usuario ..................................................................................................... 77 Figura 5.17 Modificar Usuario ..................................................................................................... 77 Figura 5.18 Mi Perfil ................................................................................................................... 78 Figura 5.19 Modificar Perfil ......................................................................................................... 78 Figura 5.20 Registro .................................................................................................................... 79 iv Facultad de Ciencias. Escuela de Computación INDICE DE FIGURASResumen Figura 5.21 Agregar un Nuevo Servicio ....................................................................................... 79 Figura 5.22 Listar Servicios .......................................................................................................... 80 Figura 5.23 Reporte de Datos del Servicio .................................................................................. 80 Figura 5.24 Datos del Servicio ..................................................................................................... 81 Figura 5.25 Modificar Servicio..................................................................................................... 81 Figura 5.26 Agregar Prestador a un Servicio ............................................................................... 82 Figura 5.27 Agregar Producto a un Servicio ................................................................................ 83 Figura 5.28 Prestar un Servicio ................................................................................................... 83 Figura 5.29 Listado de Servicios Prestados en el día ................................................................... 84 Figura 5.30 Agregar un Nuevo Producto ..................................................................................... 84 Figura 5.31 Listado de Productos ................................................................................................ 85 Figura 5.32 Reporte de Listado de Productos ............................................................................. 85 Figura 5.33 Datos del Producto ................................................................................................... 86 Figura 5.34 Modificar Producto .................................................................................................. 86 Figura 5.35 Agregar Producto al Inventario de Almacén ............................................................ 87 Figura 5.36 Pantalla Inventario de Productos en Almacén ......................................................... 88 Figura 5.37 Reporte de Inventario en Almacén .......................................................................... 88 Figura 5.38 Modificar Producto de Inventario en Tránsito ......................................................... 89 Figura 5.39 Inventario de Productos en Tránsito ........................................................................ 89 Figura 5.40 Reporte Inventario en Tránsito ................................................................................ 90 Figura 5.41 Modificar Producto en Inventario en Tránsito ......................................................... 90 Figura 5.42 Mover Producto del Inventario de Almacén al Inventario en Tránsito ................... 91 Figura 5.43 Registrar Salida del Inventario de Almacén ............................................................. 91 Figura 5.44 Pantalla Hacer Reservación ...................................................................................... 92 Figura 5.45 Listado de Reservación ............................................................................................. 93 Figura 5.46 Reporte de Listado de Reservaciones ...................................................................... 93 Figura 5.47 Modificar Reservación .............................................................................................. 94 Figura 5.48 Bitácora .................................................................................................................... 95 Figura 5.49 Reporte de Bitácora ................................................................................................. 95 Figura 5.50 Pantalla Inicio Sesión Móvil .................................................................................... 100 Figura 5.51 Registro ................................................................................................................. 101 Figura 5.52 Resultado del Registro ........................................................................................... 101 Figura 5.53 Menú Principal ....................................................................................................... 101 Figura 5.54 Hacer Reservación –Seleccionar Servicio ............................................................... 102 Figura 5.55 Hacer Reservación – Seleccionar Prestador y fecha .............................................. 102 Figura 5.56 Resultado de la Reservación .................................................................................. 103 Figura 5.57 Mi Perfil .................................................................................................................. 103 Figura 5.58 Mis Reservaciones .................................................................................................. 104 Facultad de Ciencias. Escuela de Computación v INDICE DE TABLAS Tabla 5.1 Clasificación de Hibernate. Fuente [23] ...................................................................... 61 Tabla 5.2 Columnas de Almacén ................................................................................................. 67 Tabla 5.3 Restricciones de Almacén ............................................................................................ 67 Tabla 5.4 Columnas de Bitácora .................................................................................................. 68 Tabla 5.5 Restricciones ................................................................................................................ 68 Tabla 5.6 Columnas ..................................................................................................................... 68 Tabla 5.7 Restricciones ................................................................................................................ 68 Tabla 5.8 Columnas de Dia_libre ................................................................................................. 69 Tabla 5.9 Restricciones de Dia_libre ........................................................................................... 69 Tabla 5.10 Columnas de Producto .............................................................................................. 69 Tabla 5.11 Restricciones de Producto ......................................................................................... 69 Tabla 5.12 Columnas de Servicio ................................................................................................ 69 Tabla 5.13 Restricciones de Servicio ........................................................................................... 70 Tabla 5.14 Columnas de Reservación ......................................................................................... 70 Tabla 5.15 Restricciones de Reservación .................................................................................... 70 Tabla 5.16 Columnas de Tipo_usuario ........................................................................................ 71 Tabla 5.17 Restricciones de Tipo_usuario ................................................................................... 71 Tabla 5.18 Columnas de Tránsito ................................................................................................ 71 Tabla 5.19 Restricciones de Tránsito .......................................................................................... 71 Tabla 5.20 Columnas de Unidad ................................................................................................. 71 Tabla 5.21 Restricciones de Unidad ............................................................................................ 71 Tabla 5.22 Columnas de Usuario ................................................................................................. 72 Tabla 5.23 Restricciones de Usuario ........................................................................................... 72 Tabla 5.24 Columnas de Prestador_por_servicio ....................................................................... 72 Tabla 5.25 Restricciones de Prestador_por_servicio .................................................................. 72 Tabla 5.26 Columnas de Producto_por_servicio ........................................................................ 73 Tabla 5.27 Restricciones Producto_por_servicio ........................................................................ 73 Tabla 6.1 Pruebas funcionales del módulo de usuarios ............................................................ 107 Tabla 6.2 Pruebas funcionales del módulo de servicios ........................................................... 107 Tabla 6.3 Pruebas funcionales del módulo de control de inventario ....................................... 109 Tabla 6.4 Pruebas funcionales del módulo de reservaciones ................................................... 110 Facultad de Ciencias. Escuela de Computación 1 Resumen Resumen El presente Trabajo Especial de Grado tiene como objetivo la realización de un sistema que permitirá la administración del inventario y el almacén de una empresa que presta servicios de spa, además de las reservaciones de las citas para sus servicios. Este sistema deberá operar tanto para los empleados de la empresa como para los clientes de la misma, con distintos niveles de acceso y de forma remota desde un computador o algún dispositivo móvil con capacidades de conexión. Para ello se debieron recolectar datos sobre la empresa y las distintas herramientas existentes actualmente en el mercado para el desarrollo de sistemas de información de manejo de almacenes, desarrollo de sistemas para dispositivos tanto fijos como móviles e inalámbricos. En función de lo antes expuesto se elaboró una propuesta de Sistema de Gestión de Servicios para la empresa Jumbo Spa, para dar una solución eficiente a los requerimientos de la empresa. Palabras Clave Sistema de Información, Control de Inventario, Manejo de Reservaciones, Dispositivo móvil, Desarrollo Web, Diseño, Automatización, Almacén. 2 Facultad de Ciencias. Escuela de Computación INDICE DE TABLAS Facultad de Ciencias. Escuela de Computación 3 Introducción Introducción La automatización de los servicios en una empresa mediana es hoy en día necesario para mejorar los procesos, aumentar los tiempos de respuesta y facilitar el manejo y la administración de la misma. Para ello es necesario la implementación de herramientas tecnológicas como sistemas de administración y manejo de los servicios. En base a esto, la empresa JumboSpa requiere de un sistema que permita realizar operaciones de manera rápida, segura y confiable en cuanto a reservaciones de citas y sobretodo manejo del inventario de los productos que se utilizan en los servicios que se prestan. Es por ello que se realiza un estudio de todos sus procesos y operaciones para llevar a cabo el desarrollo de un sistema que satisfaga sus necesidades tanto a nivel de manejo de inventario como de reservaciones de servicios por parte de sus clientes. Las aplicaciones Web se han hecho más populares cada día debido a la facilidad de desarrollo, la fácil actualización, menos requerimientos de sistema, accesibilidad, no es necesaria la instalación en todas las ubicaciones, entre muchas otras ventajas. Por eso la elección del desarrollo Web y el estudio de las herramientas necesarias para construir la aplicación. Se espera que este proyecto permita dar una base teórica y práctica para realizar de procesos de reservaciones de citas de los clientes, tanto en ubicaciones fijas como móviles, y el manejo de inventario para la empresa JumboSpa. 4 Facultad de Ciencias. Escuela de Computación INDICE DE TABLAS Facultad de Ciencias. Escuela de Computación 5 El Problema Capítulo 1 El Problema 1 Capitulo 1.1 Planteamiento del Problema En la empresa Jumbo Spa, no existe un control automatizado en el inventario, el descontrol que genera el manejo manual de facturación ocasiona la perdida de estabilidad económica de la organización. El constante crecimiento en el volumen de información manejada y el número de operaciones y procedimientos para la realización de las compras y ventas, realizadas principalmente en forma manual; ha dificultado la gestión administrativa, ya que no se posee información completa, oportuna y actualizada. Por ésta razón es necesario implementar un sistema de información que controle las transacciones involucradas en el manejo del activo más importante que posee actualmente la empresa: el Inventario; facilitando así la toma de decisiones principalmente en la compra y venta de productos, y además presente reportes e informes para establecer el estado real de la empresa en un momento determinado. Además se requiere automatizar el proceso de reservaciones de citas a través de un sistema Web, que permita a los usuarios realizar esta operación a distancia, vía Internet y permita además al encargado de las reservaciones realizar esta tarea de una manera práctica y rápida. Por todo lo antes expuesto, se plantea la siguiente interrogante: ¿Es factible el desarrollo de un Sistema de Gestión de Servicios e Inventario para la empresa JumboSpa?. 6 Facultad de Ciencias. Escuela de Computación CapituloEl Problema 1.2 Objetivo General Diseñar e implementar un sistema de información que facilite la administración y el control del inventario y almacén, de tal forma que permita evaluar y retroalimentar la información para la eficaz y oportuna toma de decisiones, además de prestar servicio de reservación a los usuarios, desde una ubicación fija o móvil. 1.3 Objetivos Específicos  Realizar el levantamiento de información de la situación actual de la empresa.  Desarrollar:  Un módulo que permita hacer un registro automático de todas las transacciones relacionadas con el uso y compra de productos.  Un módulo que permita llevar un control sobre las estadísticas de uso correspondientes a cada producto para establecer la rotación de los mismos.  Un módulo que permita administrar las reservaciones de las citas para los servicios que se ofrecen en el Spa.  Realizar pruebas integrales de la aplicación 1.4 Justificación En este momento el mundo experimenta cambios fundamentales. Los continuos avances en tecnología de computadores y comunicaciones tienen un efecto sobre la forma como las personas trabajan. La tecnología está alterando las características del manejo de la información considerado como el mayor recurso de cualquier empresa, buscando agilizar y dar más confiabilidad a los resultados, es por esto que se ha masificado el uso de los sistemas de información que contribuyen hoy en día con la evolución de la economía. Facultad de Ciencias. Escuela de Computación 7 El Problema Jumbo Spa, siendo una empresa comercial, necesita un sistema de información que suministre datos actualizados, reales y oportunos sobre la existencia de productos y clientes. Este sistema debe agilizar el manejo del inventario y el procedimiento de reservación de citas por parte de los clientes, desde cualquier ubicación a través de un dispositivo móvil con acceso a Internet, para mejorar la administración de los recursos dentro de la empresa y para mejorar la relación de los clientes con la misma. 1.5 Metodología La metodología a utilizar es el Método de Cascada Pura, el cual se explicará en detalle en el capítulo 2. Las etapas de este método que se utilizaron son las siguientes:  Análisis de requisitos: levantamiento de la información necesaria en la empresa.  Diseño del Sistema: estudio de las posibles soluciones al problema planteado.  Diseño del Programa: estudio de las alternativas para el desarrollo del programa.  Codificación: desarrollo de la aplicación en base al diseño y a las herramientas seleccionadas.  Pruebas: pruebas de la aplicación una vez terminado el desarrollo. 1.6 Distribución del documento Capítulo 1 En el capítulo 1 se describe el propósito del presente documento. 8 Facultad de Ciencias. Escuela de Computación CapituloEl Problema Capítulo 2 El capítulo 2 muestra una visión general de los Sistemas de Información, sus metodologías y herramientas, para la creación de un software de calidad. Capítulo 3 El capítulo 3 presenta las soluciones utilizadas hoy en día para el desarrollo de sistemas para dispositivos móviles. Capítulo 4 Este capítulo muestra todos los diagramas realizados inicialmente, fundamentales y necesarios para comenzar a diseñar la solución al problema planteado. Entre ellos el diagrama de casos de uso y el diagrama de clases. Capítulo 5 En este capítulo se detalla el proceso de implementación y desarrollo de la aplicación. Se describen las entidades que se utilizaron, entre ellos el modelo de los datos, el análisis de los requerimientos, etc. Capítulo 6 En este capítulo se describen las pruebas realizadas con la aplicación y los resultados obtenidos de las mismas. Facultad de Ciencias. Escuela de Computación 9 El Problema Capítulo 7 En el capítulo 7 se da una conclusión en base a todo lo expuesto en este documento. 10 Facultad de Ciencias. Escuela de Computación Facultad de Ciencias. Escuela de Computación 11 Sistemas de Información Capítulo 2 Sistemas de Información 2 Para llevar a cabo el desarrollo de un sistema de información se deben aplicar técnicas en las distintas etapas que conlleva la realización de una aplicación de software. Como en todo proyecto para el desarrollo de software orientado a la Web se deben seguir unas pautas importantes, básicamente se debe iniciar con la identificación de la necesidad, luego se realiza una recopilación exhaustiva de toda la información asociada, se sigue entonces con el análisis profundo de la información recogida para el diseño del sistema, ya terminado el diseño metodológico se procede a crear los componentes del sistema, después se implementa un ambiente de prueba del software en el entorno de trabajo para el cual fue desarrollado, y finalmente se le realiza mantenimiento cuando sea necesario. 2.1 Sistemas de Información de Control de Inventario y Manejo de Almacenes El objetivo principal de un sistema de gestión de inventario es el control de las existencias almacenadas [22]. Los grandes costos que significa tener mercancías paradas en un almacén han llevado a que el control de existencias (o stock) haya adquirido mucha importancia en las empresas. Se trata de ofrecer el mismo servicio a los clientes minimizando la cantidad de dinero que debe dejarse inmovilizado en forma de existencias. Se deben controlar tanto las materias primas o componentes que se emplearán en la fabricación o distribución, como los productos elaborados a la espera de venderse. En el nivel más elemental, este subsistema simplemente actualiza el registro de inventario en función de las ventas de productos, las compras de materias primas, el consumo de material en la fabricación, etc. Los sistemas más sofisticados tratan de predecir el momento adecuado en el que se debe pedir un aprovisionamiento para minimizar las 12 Facultad de Ciencias. Escuela de Computación Sistemas de Información existencias almacenadas. También pueden tratar de preveer el ritmo de producción más apropiado según el nivel de ventas en cada época del año, haciendo que la cantidad de productos a la espera de venderse sea la menor posible. A nivel operativo este subsistema trabaja en las siguientes actividades relacionadas con el almacenaje [22]:  Las compras de materias primas o componentes, mediante pedidos a los proveedores, cuando se descienda de una cierta cantidad de existencias.  La recepción de las materias primas o componentes, verificando que coincidan con lo pedido. Una vez incorporadas estas existencias se debe actualizar la cantidad registrada en el inventario.  El envío de los productos fabricados a los clientes que han formalizado u pedido, actualizando el inventario y gestionando los diversos registros documentos implicados en esta operación. A nivel táctico, la optimización del almacenamiento requiere la toma de decisiones en función de los datos estadísticos [22]. Por ello, el subsistema debe trabajar en:  La gestión y el control de las materias primas, los productos sin terminar y los ya terminados para conseguir importantes ahorros en los costos. El procedimiento consiste en determinar de forma óptima el nivel de reaprovisionamiento: la cantidad mínima de producto que debe haber siempre en almacén, de tal forma que bajar de dicho número implique reaprovisionamiento inmediatamente. La cantidad a reaprovisionar también se debe optimizar.  La planificación de la capacidad de producción óptima para no saturar el almacén con una cantidad de productos terminados superior a la capacidad de venta. Sin embargo, a nivel estratégico, las decisiones de producción a largo plazo vienen más de decisiones estratégicas de la alta dirección general que de análisis específicos de Facultad de Ciencias. Escuela de Computación 13 Sistemas de Información producción. El control de existencias se adapta más bien a las decisiones marcadas por la estrategia de la empresa. Los Sistemas Informáticos de control de almacenaje son muy conocidos. Existe interés constante por mejorar continuamente los algoritmos de optimización de los niveles de reaprovisionamiento, cantidades que hay que reponer, etc. Estos sistemas se suelen unir a los sistemas de control y automatización de la producción para construir una gestión global. Estos sistemas también podrían clasificarse como [18] Sistemas Transaccionales, conocidos comúnmente como TPS (Transaction Processing Systems), son Sistemas de Información que procesan los datos resultado de la ocurrencia de las transacciones (eventos que ocurren como parte del negocio: ventas, compras, depósitos, retiros, devoluciones, pagos, etc.) del negocio. El proceso de estos sistemas se muestra en la Figura 2.1. Figura 2.1 El ciclo del procesamiento de una transacción. Fuente [18] Estos son ejemplos de tecnologías utilizadas en los sistemas de información de manejo de almacenes: 14 Facultad de Ciencias. Escuela de Computación Sistemas de Información  Código de barras: Códigos ópticos, códigos magnéticos, equipos de lectura, impresión de etiquetas.  Radiofrecuencia: portátiles de mano, comunicación en tiempo real.  Ordenadores de a bordo: Ligados a flotas de transporte, posicionamiento, comunicaciones (satélite/radiofrecuencia).  Terminales portátiles: Preventa, autoventa, comunicación (radio, línea telefónica, etc).  Reconocimiento de voz. 2.2 Metodologías para el desarrollo de Sistemas de Información Son métodos que indican cómo hacer más eficiente el desarrollo de sistemas de información. Para ello suelen estructurar en fases la vida de dichos sistemas con el fin de facilitar su planificación, desarrollo y mantenimiento [7]. Las metodologías de desarrollo de sistemas deben definir: objetivos, fases, tareas, productos y responsables, necesarios para la correcta realización del proceso y su seguimiento. Los principales objetivos de una metodología de desarrollo son:  Asegurar la uniformidad y calidad tanto del desarrollo como del sistema en sí.  Satisfacer las necesidades de los usuarios del sistema.  Conseguir un mayor nivel de rendimiento y eficiencia del personal asignado al desarrollo.  Ajustarse a los plazos y costes previstos en la planificación.  Generar de forma adecuada la documentación asociada a los sistemas.  Facilitar el mantenimiento posterior de los sistemas. Facultad de Ciencias. Escuela de Computación 15 Sistemas de Información Existen distintas metodologías para el desarrollo de Sistemas de Información, entre las que podemos mencionar [7]:  Método de Codificar y Corregir  Método de Análisis y Diseño Estructurado  Método CASE (Computer Aided Systems Engineering)  Programación Extrema (Extreme Programming) Método de Codificar y Corregir Es un modelo poco útil, pero sin embargo bastante común. Se puede tener una especificación formal, o no tenerla. Si no se ha utilizado formalmente un método, probablemente ya se esté usando el método Codificar y Corregir en forma intuitiva Cuando se utiliza éste método se empieza con una idea general de lo que se necesita construir. Se utiliza cualquier combinación de diseño, código, depuración y métodos de prueba no formales que sirven hasta que se tiene el producto listo para entregarlo [7]. Ventajas:  No conlleva ninguna gestión.  Se pueden mostrar inmediatamente indicios de progreso.  Requiere poca experiencia.  Para proyectos pequeños que se intentan liquidar en un tiempo breve, o para modelos como programas de demostración o prototipos desechables, el modelo codificar y corregir puede ser útil. Desventajas:  El modelo resulta peligroso para otro tipo de proyectos que no sean pequeños.  No ofrece medios de evaluación del progreso.  No proporciona medios de evaluación de la calidad o de identificación de riesgos. 16 Facultad de Ciencias. Escuela de Computación Sistemas de Información  Si al llevar tres cuartas partes de la codificación descubre que el diseño es incorrecto, no hay otra solución que desechar el trabajo y comenzar de nuevo. Método de Análisis y Diseño Estructurado Este método de desarrollo del análisis estructurado tiene como finalidad superar ésa dificultad por medio de 1) la división del sistema en componentes y 2) la construcción de un modelo del sistema. El método incorpora elementos tanto de análisis como de diseño [29]. El análisis estructurado se concentra en especificar lo que se requiere que haga el sistema o la aplicación. No se establece cómo se cumplirán los requerimientos o la forma en que implantará la aplicación. Más bien permite que las personas observen los elementos lógicos (lo que hará el sistema) separados de los componentes físicos (computadoras, terminales, sistemas de almacenamiento, etc.) Después de esto se puede desarrollar un diseño físico eficiente para la situación donde será utilizado. Elementos del análisis estructurado: son símbolos gráficos, diagramas de flujo de datos y diccionario centralizado de datos [29]. Método CASE Este método plantea una secuencia de etapas y para cada etapa su descripción, definición de objetivos y metas, productos de la etapa, factores críticos de éxito, y la lista de tareas que conviene realizar. Además es posible auxiliarse de herramientas CASE que facilitan grandemente la puesta en práctica del método [3]. Facultad de Ciencias. Escuela de Computación 17 Sistemas de Información Etapas en el método CASE La metodología CASE (ver Figura 2.2) se basa en un análisis y desarrollo del tipo descendiente (topdown) en que el ciclo de vida de un sistema se compone de las siguientes etapas: estrategia, análisis, diseño, construcción, documentación, transición y producción. Figura 2.2 Etapas del Método CASE. Fuente [3] Metodología de la Programación Extrema (XP, Extreme Programming) La programación extrema (XP) es actualmente una aproximación disciplinada y deliberada al desarrollo de software. Cerca de 8 años atrás ya había sido probada en muchas compañías e industrias de diferentes tamaños a lo largo del mundo [8]. Esta metodología es exitosa porque refuerza la satisfacción del cliente. La metodología es diseñada para entregar el software cuando el cliente lo necesite, si es necesario. XP autoriza a sus desarrolladores a responder confiadamente al cambio de los requerimientos del cliente, aunque sea tarde en el ciclo de vida del software. 18 Facultad de Ciencias. Escuela de Computación Sistemas de Información La metodología además se enfatiza en el trabajo en equipo. Administradores, clientes y desarrolladores son parte de un equipo dedicado a la entrega de un software de calidad. XP implementa un estilo de desarrollo en grupo simple pero efectivo. En esta metodología se construye un proyecto de software de cuatro maneras esenciales: comunicación, simplicidad, retroalimentación y esfuerzo. Los programadores se comunican con sus clientes y sus compañeros programadores. Ellos conservan su diseño simple y limpio. Ellos obtienen la retroalimentación para probar su software en marcha día a día. Ellos entregan el sistema a los clientes tan pronto como sea posible e implementan los cambios como se sugieren. Proyectos riesgosos con requerimientos dinámicos son perfectos para XP. Estos proyectos experimentarán grandes éxitos y productividad de desarrollo. XP fue basado en observaciones de lo que hace la programación más rápida y lo que lo hace más lenta. Es una metodología nueva importante por dos razones. Primero, porque es un re-examen de las prácticas de desarrollo del software que han llegado a ser procedimientos de operación estándar. Y segundo, fue creada para reducir el costo del software. XP va un paso más adelante y define un proceso que es simple y agradable. [13] ¿Cuando se debería utilizar la programación extrema? La programación extrema fue creada para responder a dominios de problemas que requerían cambios. Los clientes pueden no tener una firme idea de lo que el sistema debería hacer. Se puede tener un sistema cuya funcionalidad se espere que cambie cada mes. En muchos entornos de software el cambio dinámico de los requerimientos es la única constante. Aquí es cuando XP será exitosa mientras que otras metodologías no lo serán [8]. Facultad de Ciencias. Escuela de Computación 19 Sistemas de Información XP está hecha por un grupo de programadores de entre 2 y 12 personas. Un requerimiento es la comprobabilidad. Se debe ser capaz de crear una unidad automatizada y pruebas funcionales. Por último está la productividad. Por unanimidad, los proyectos XP reportan gran productividad de los programadores respecto a otros proyectos en el mismo entorno corporativo. Pero ésta no es una meta de la metodología XP. La meta real ha sido siempre entregar el software que es necesario cuando es necesario. Reglas y Prácticas de la Programación Extrema [8]:  Planeación: planear pequeñas soluciones frecuentemente.  Diseño: crear diagramas y pequeños programas para explorar soluciones.  Codificación: codificar entre todos los miembros, codificar unidades de prueba primero.  Prueba: pruebas frecuentes antes de integrar el código. En la Figura 2.3 se muestra el funcionamiento de esta metodología. Figura 2.3 Proyecto Extreme Programming. Fuente [8] 20 Facultad de Ciencias. Escuela de Computación Sistemas de Información Metodología de Cascada Pura En un modelo en cascada, un proyecto progresa a través de una secuencia ordenada de pasos partiendo de la especificación de requerimientos hasta el mantenimiento del mismo [7]. El método realiza una revisión al final de cada etapa para determinar si está preparado para pasar a la siguiente etapa. Cuando la revisión determina que el proyecto no está listo pasar a la siguiente, permanece en la etapa actual hasta que esté preparado. Las desventajas del modelo se centran en las dificultades para especificar claramente los requerimientos al comienzo del proyecto, antes de que se realice ningún trabajo de diseño y antes de escribir ningún código. Las ventajas del modelo se basan en que se tiene todo bien organizado y no se mezclan las fases. Es ideal para proyectos rígidos, y además donde se especifiquen muy bien los requerimientos y se conozca muy bien la herramienta a utilizar Una metodología de desarrollo en cascada puede contener los siguientes pasos, que se pueden observar en la Figura 2.4, y se explican a continuación [7]:  Análisis de requisitos  Diseño del Sistema  Diseño del Programa  Codificación  Pruebas Facultad de Ciencias. Escuela de Computación 21 Sistemas de Información  Implantación  Mantenimiento Figura 2.4 Etapas del Método Cascada Pura. Fuente [7] Análisis de requisitos En esta fase se analizan las necesidades de los usuarios finales del software para determinar qué objetivos debe cubrir. Diseño del Sistema Se descompone y organiza el sistema en elementos que puedan elaborarse por separado, aprovechando las ventajas del desarrollo en equipo. Diseño del Programa Es la fase en donde se realizan los algoritmos necesarios para el cumplimiento de los requerimientos del usuario así como también los análisis necesarios para saber que herramientas usar en la etapa de codificación. Análisis de requisitos Diseño del Sistema Diseño del Programa Codificación Pruebas Implantación Mantenimiento 22 Facultad de Ciencias. Escuela de Computación Sistemas de Información Codificación Es la fase de programación o implementación propiamente dicha. Aquí se implementa el código fuente, haciendo uso de prototipos así como pruebas y ensayos para corregir errores. Pruebas Los elementos, ya programados, se ensamblan para componer el sistema y se comprueba que funciona correctamente y que cumple con los requisitos. Implantación El software obtenido se pone en producción. Se implantan los niveles software y hardware que componen el proyecto. La implantación es la fase con más duración y con más cambios en el ciclo de elaboración de un proyecto. Durante la explotación del sistema de software pueden surgir cambios, bien para corregir errores o bien para introducir mejoras. 2.3 Herramientas para el desarrollo de Sistemas de Información Una etapa esencial en el ciclo de vida de un software es el desarrollo. Se define como el proceso de generar, a partir de un modelo de diseño, el código de un programa que llene las expectativas del usuario y del programador en la funcionalidad esperada por éstos. Para esta etapa existen distintas herramientas, en nuestro caso herramientas de desarrollo Web que serán utilizadas en el desarrollo de la Aplicación, las cuales se nombran a continuación [20]: http://es.wikipedia.org/wiki/Programaci%C3%B3n http://es.wikipedia.org/wiki/C%C3%B3digo_fuente http://es.wikipedia.org/wiki/Error_de_software http://es.wikipedia.org/w/index.php?title=Corregir_errores&action=edit&redlink=1 http://es.wikipedia.org/w/index.php?title=Corregir_errores&action=edit&redlink=1 http://es.wikipedia.org/w/index.php?title=Introducir_mejoras&action=edit&redlink=1 Facultad de Ciencias. Escuela de Computación 23 Sistemas de Información Java Es un lenguaje de programación orientado a objetos que incorpora los conceptos de ejecución remota, componentes, seguridad, acceso a bases de datos de un modo estándar sencillo y claro [20]. PostgreSQL Es un poderoso sistema de bases de datos relacionales/orientadas a objeto. Tiene más de 15 años de desarrollo activo. Funciona en la mayoría de los sistemas operativos, incluyendo Linux, UNIX y Windows. Tiene soporte para claves foráneas, vistas, disparadores, y procedimientos almacenados (en múltiples lenguajes). Incluye muchos de los tipos de datos del Lenguaje de consulta estructurado (SQL, Structured Query Language). Además soporta el almacenamiento de grandes objetos binarios, incluyendo imágenes, sonido o video. Contiene interfaces de programación nativas para C/C++, Java, .Net, Perl, Phyton, Ruby, Tcl, ODBC, entre otros. [21] HTML El Lenguaje de Marcado de Hypertexto (Hypertext Markup Language) es el lenguaje de marcas de texto utilizado normalmente en la WWW (World Wide Web). Es un sistema para definir tipos de documentos estructurados y lenguajes de marcas para representar esos mismos documentos [20]. JSP JSP (Java Server Pages) es una tecnología orientada a crear páginas web con programación en Java. Con JSP podemos crear aplicaciones web que se ejecuten en 24 Facultad de Ciencias. Escuela de Computación Sistemas de Información diferentes servidores web, de múltiples plataformas, ya que Java es en esencia un lenguaje multiplataforma [20]. Resin Es un servidor de aplicaciones Java/PHP, de código abierto, creado por la empresa Caucho, la cual está licenciada por Java Sun Microsystems. Este servidor funciona en la mayoría de los sistemas operativos, incluyendo Linux, Windows y Solaris, e incluye mecanismos de recuperación de desastres, para recuperarse de errores de aplicación. [4] Facultad de Ciencias. Escuela de Computación 25 Desarrollo para Dispositivos Móviles Capítulo 3 Desarrollo para Dispositivos Móviles 3 Capitulo 3.1 Herramientas para el desarrollo en Dispositivos Móviles Entre las herramientas disponibles hoy en día para el desarrollo de aplicaciones para dispositivos móviles se encuentran las siguientes [19]: Lenguajes de programación:  J2ME (Java 2 Micro Edition)  .NET Compact Framework  Aplicaciones Nativas (C, C++): eMbedded Visual Tools (conformada por eMbedded Visual Basic y eMbedded Visual C++, SDK de Symbian, etc.) Estos lenguajes funcionan bajo los Sistemas Operativos que se utilizan en los distintos dispositivos móviles, los cuales son:  PalmOS  Windows CE (Windows Mobile)  Symbian  Linux embedded  RIMOS Algunas herramientas disponibles para desarrollar en estos lenguajes son:  Emuladores o OpenWave o Nokia y SonyEricsson o SmartPhone SDK 26 Facultad de Ciencias. Escuela de Computación CapituloDesarrollo para Dispositivos Móviles  Microsoft eMbedded Visual Tools o Visual Basic Embedded  Microsoft SmartPhone SDK  Visual Studio .Net 2003 Microsoft .NET Es una plataforma de software para servicios Web y XML. Tiene las siguientes características [9]:  Amplía posibilidades de servidores, clientes y servicios  Modelo de programación consistente  Interoperable vía XML Web Services Es la única plataforma basada en XML Web. Entrega servicios vía ASP.NET. Se puede desarrollar en 20 lenguajes de programación existentes. Algunas ventajas de esta plataforma son las siguientes:  Entrega el software como servicio  La integración es intrínseca en la plataforma  Permite aplicaciones inteligentes La herramienta más popular del mercado para el desarrollo en esta plataforma es Visual Studio .NET, la cual posee un entorno de desarrollo de alta productividad. Microsoft .NET Compact Framework Microsoft .NET Compact Framework es un componente integral de los dispositivos Windows Mobile y Windows Embedded CE que permite generar y ejecutar aplicaciones Facultad de Ciencias. Escuela de Computación 27 Desarrollo para Dispositivos Móviles administradas, y utilizar servicios web. .NET Compact Framework incluye un Common Language Runtime (CLR) optimizado y un subconjunto de la biblioteca de clases de .NET Framework, que admite características como Windows Communication Foundation (WCF) y formularios Windows Forms. También contiene clases que están diseñadas exclusivamente para .NET Compact Framework [15]. .NET Compact Framework hereda la arquitectura de CLR y la ejecución de código administrado de la versión completa de .NET Framework. .NET Compact Framework admite la programación en Visual Basic y Visual C#. Actualmente, no admite el desarrollo en C++. Ventajas de Windows Compact Framework .NET  Tamaño reducido  Puede trabajar en configuraciones mínimas o 450K Rom y 32KB Ram o Trabaja sobre una gran variedad de procesadores  Funcionamiento en tiempo real o Optimizado para bajo consumo (necesario en equipos portátiles)  Arranque en segundos. J2ME J2ME Java 2 Platform, Micro Edition. Es un ambiente de desarrollo y ejecución diseñado para poner software hecho en Java en consumibles electrónicos y dispositivos embebidos (embedded). Contiene un conjunto de librerías [16]. Fue desarrollado para que Java pueda funcionar sobre dispositivos como: handhelds, teléfonos celulares, relojes, etc. En la Figura 3.4 se muestra esta tecnología. 28 Facultad de Ciencias. Escuela de Computación CapituloDesarrollo para Dispositivos Móviles Metas de J2ME:  Proporcionar soporte a una variedad de dispositivos con diferentes capacidades.  Proporcionar una arquitectura que pueda ser optimizada en espacios pequeños.  Enfocado en dispositivos que puedan ser altamente personalizados, a menudo usados por una sola persona.  Proporcionar conectividad a redes a través de un rango de capacidades y servicios.  Aprovechar al máximo las capacidades y restricciones únicas de cada dispositivo. Figura 3.1 Tecnología J2ME. Fuente [19] J2ME presenta dos conceptos arquitectónicos: Configuraciones y Perfiles [16]. Configuraciones En una configuración se especifican tres elementos básicos:  Un conjunto de características del lenguaje de programación Java.  Un conjunto de características de la Maquina Virtual de Java.  Un conjunto soportado de librerías Java y de APIs. Facultad de Ciencias. Escuela de Computación 29 Desarrollo para Dispositivos Móviles  Una configuración es básicamente un conjunto de APIs junto con ciertas características de la maquina virtual, necesarias para soportar un amplio rango de dispositivos. El primer paso relevante de la tecnología J2ME para un rango de diferentes tipos de dispositivos fue primeramente organizarlos en configuraciones. Existen dos tipos de configuraciones: CLDC (Connected Limited Device Configuration) y CDC (Connected Device Configuration). CLDC utiliza la Maquina Virtual Kilobyte (KVM) mientras que CDC utiliza la Maquina Virtual C (CVM). La implementación de una maquina virtual en J2ME deberá adherirse a las especificaciones definidas por la configuración. Las configuraciones definen el contrato entre un perfil y la Maquina Virtual de Java. CLDC (Connected Limited Device Configuration) Los requerimientos de esta configuración son: correr sobre la KVM, tener 160Kb a 512Kb de memoria total disponible para el entorno de java, un procesador de 16 o 32 bits y bajo consumo de energía. A menudo estos dispositivos utilizan baterías como fuente de energía. Soporta algún tipo de conectividad a una red. La mayoría de estos dispositivos utilizan una conexión de banda-ancha baja cerca de 9600bps a menudo es conexión inalámbrica. CDC (Connected Device Configuration) La CDC corre sobre una Maquina Virtual C (CVM) que es completamente compatible con la especificación de la maquina virtual de Java. Los dispositivos que usan CDC utilizan al menos 512Kb de memoria, sin embargo esta configuración es diseñada para 30 Facultad de Ciencias. Escuela de Computación CapituloDesarrollo para Dispositivos Móviles plataformas con cerca d 2Mb de memoria disponible. Los dispositivos en esta categoría tienen un poder sustancial de procesamiento. Estos a menudo pueden estar conectados a la pared, y estos soportan varias capacidades de red. Perfiles Así como las configuraciones definen el contrato entre el perfil y la VM, un perfil es el que define el contrato entre el dispositivo y la aplicación. Un perfil es un conjunto adicional de APIs que soportan un amplio rango de dispositivos. Los perfiles proporcionan la flexibilidad para soportar diferentes tipos de dispositivos con un entorno de ejecución compatible con el de java. Facultad de Ciencias. Escuela de Computación 31 Diseño Capítulo 4 Diseño 4 Capitulo En este capítulo se describen los requerimientos de la aplicación y los diagramas básicos que se diseñaron para modelar la solución al problema planteado. En estos diagramas se definen principalmente el funcionamiento de 4 módulos básicos que se requieren en la aplicación, estos son: módulo de usuarios, módulo de servicios, módulo de productos y módulo de reservaciones. 4.1 Análisis y Requerimientos Durante el levantamiento de la información y entrevistas con los usuarios finales del sistema, se logró obtener una base para los requerimientos que debería tener. Principalmente se requiere de una solución automatizada del manejo del inventario que actualmente se lleva de forma manual. Además de esto se requiere del manejo de reservaciones, lo cual no se hace ni de forma manual ni automatizada actualmente en el spa. De estos dos requerimientos principales surgen los siguientes, los cuales son necesarios para llevar a cabo su manejo. Por lo tanto se requiere de la realización de un módulo que permita la administración de los usuarios, un módulo para la administración de los servicios y uno para la administración de los productos del spa. Es necesario manejar en la aplicación distintos tipos de usuarios y distintos privilegios para cada uno, de tal modo que al ingresar en el sistema, cada tipo de usuario sólo pueda acceder a los módulos que le corresponden. 32 Facultad de Ciencias. Escuela de Computación CapituloDiseño Además de las entrevistas con los usuarios y el estudio de los procesos e instalaciones del spa, se planteó un enunciado inicial del proyecto el cual consta del siguiente contenido: Se requiere un sistema de Información para la Gestión de Servicios prestados en Jumbo Spa. El sistema deberá constar de los siguientes módulos: a.- Un modulo de control de citas y reservas de servicios. La función de este modulo es gestionar la reserva de servicios por parte de un cliente.  Los clientes podrán realizar la reserva vía telefónica, en este caso la encargada deberá acceder al sistema y colocar el servicio, el trabajador o servidor, la fecha y hora deseada. El sistema deberá estar en la capacidad de verificar la disponibilidad de lo solicitado y si no hay en esa hora mostrar opciones posibles para satisfacer al cliente.  Los Clientes que se dirigen personalmente al establecimiento y realizan su cita o reserva de servicio. De esta manera se procede la misma manera que en el caso anterior.  Clientes que realizan sus reservas a través de la página Web. En donde es necesario que estos se registren y para acceder el modulo de reserva incluyendo el servicio la fecha, la hora y el servidor (Opcional).  Los reportes o consultas de este modulo deberán ser los siguientes: o Servicios por día y hora o Servicios por servidor o Servicios por clientes Facultad de Ciencias. Escuela de Computación 33 Diseño o Planificador de Cabinas: Es importante que se tenga una planificación de los todos servicios con la asignación del espacio físico diario. b.- Modulo de Inventario Cada servicio prestado requiere una conjunto de materiales a utilizar, por esta razón se requiere que un modulo de inventario que permita controlar la entrada y salida de materiales del almacén y además permita verificar la existencia de materiales a utilizar cuando se va a prestar un servicio. En jumbo spa, por la naturaleza del negocio se tienen dos tipos de inventario. Un inventario de Almacén, en el cual están todos los productos almacenados que serán utilizados en los servicios, y un inventario de materia prima que es aquel donde están almacenados los productos que están siendo utilizados para prestar los servicios. Es importante diferenciar estos productos ya que para un servicio no se utilizan cantidades enteras de productos, por ello en el almacén hay productos que no están abiertos o simplemente están sellados. Ejemplo: 1 Galón de Agua destilada, un galón de gerdex, una crema exfoliadora de 500 ml, etc. En el almacén de materia prima se encuentran los productos que están siendo utilizados para prestar servicios. Es decir el galón de agua destilada pero que ya está en uso. Por otra parte para cada servicio están definidos los materiales y cantidades de estos a utilizar es importante el manejo de la materia prima a fin de garantizar la existencia de materiales para los servicios reservados. Por lo que es necesario que este módulo tenga las siguientes funciones.  Registro y control de Entradas de Productos (Comprados)  Registro de productos que salen del almacén (Para el almacén de Materia Prima)  Registro de productos que son utilizados por servicios 34 Facultad de Ciencias. Escuela de Computación CapituloDiseño  Se deben manejar stock mínimo y máximo  Existencia de productos  Alarmas para compras de productos.  Reportes o consultas de productos a utilizar por servicio  Planificador de materia prima por servicio. Requerimientos especiales:  El manejo de los productos, ya sean en el inventario de Almacén o en Materia prima sean manejados lectores de código de barra (Universal para aprovechar los códigos de los fabricantes). En el caso de que se tenga un producto sin código el sistema deberá estar en la capacidad de Generarlo.  Se sea que el sistema sea adaptativo a fin de que los clientes que hacen reserva por web también puedan realizarlo a través de su dispositivo móvil.  El sistema debe contar con un back-end y un front-end. El front-end será para solo reserva de los clientes. Las demás funciones para el back-end.  Debe contar con distintos niveles de seguridad.  Usable a fin de garantizar que cualquier persona lo pueda utilizar  WEB, ya que estará en un hosting externo. 4.2 Diagrama de Casos de Uso Principalmente se elaboró un diagrama de Casos de Uso, que define las funcionalidades del sistema y cada uno de sus módulos. Facultad de Ciencias. Escuela de Computación 35 Diseño Nivel 1 Este diagrama describe de forma general los módulos del sistema. Ver Figura 4.1. Figura 4.1 Diagrama de Casos de Uso Nivel 1 Especificación: 1.1 Administrar Reservación Pre-condición: Ninguna. Actor Principal: Usuario. Otros Actores: Usuario. Descripción: El usuario administra una reservación, con las operaciones de agregar, cancelar o consultar, y además modificar en el caso del Encargado. 36 Facultad de Ciencias. Escuela de Computación CapituloDiseño Post-Condición: Se ha realizado alguna operación respecto a una reservación en el sistema Pasos: 1. El usuario entra en la página para administrar reservación 2. El usuario selecciona una acción 3. El usuario realiza la operación seleccionada, se muestra el resultado 1.2 Administrar Inventario Pre-condición: Ninguna. Actor Principal: Encargado. Otros Actores: Ninguno. Descripción: El Encargado administra el Inventario, con las operaciones de agregar, modificar, eliminar o consultar algún producto. Post-Condición: Se ha realizado alguna operación respecto al inventario en el sistema Pasos: 1. El administrador entra en la página para administrar el inventario 2. El administrador selecciona una acción 3. El Encargado realiza la operación escogida, se muestra el resultado 1.3 Administrar Usuario Pre-condición: Ninguna. Actor Principal: Encargado. Otros Actores: Cliente, Trabajador. Descripción: El Encargado administra a algún usuario, o el Cliente/Trabajador administra su cuenta en el sistema con las operaciones de agregar, modificar o consultar, y además eliminar en el caso del Encargado. Post-Condición: Se ha realizado alguna operación respecto a algún usuario en el sistema. Pasos: 1. El Encargado o Cliente/Trabajador entra en la página para administrar usuarios 2. El Encargado o Cliente/Trabajador escoge la opción deseada Facultad de Ciencias. Escuela de Computación 37 Diseño 3. El Encargado o Cliente/Trabajador realiza la operación escogida, se muestra el resultado 1.3 Administrar Servicio Pre-condición: Ninguna. Actor Principal: Encargado. Otros Actores: Ninguno. Descripción: El Encargado administra un servicio con las operaciones de agregar, modificar, consultar y eliminar. Post-Condición: Se ha realizado alguna operación respecto a un servicio en el sistema. Pasos: 1. El Encargado entra en la página para administrar servicios 2. El Encargado escoge la opción deseada 3. El Encargado realiza la operación seleccionada, se muestra el resultado Nivel 2 En este parte del diagrama, se muestran en detalle las funcionalidades propias de cada módulo, describiendo así en qué consiste cada una. Se puede observar el diagrama detallado en la Figura 4.2 Especificación 2.1 Crear Reservación Pre-condición: La reservación no existe en el sistema. Actor Principal: Encargado. Otros Actores: Cliente. Descripción: El Encargado/Cliente ingresa los datos del una reservación en caso que estén disponibles los recursos deseados. Opcionalmente se guardan estos datos en la Base de Datos. 38 Facultad de Ciencias. Escuela de Computación CapituloDiseño Post-Condición: Si el Encargado/Cliente decide guardar, queda registrada la reservación en el sistema. De lo contrario no se arroja ningún resultado. Pasos: 1. El Encargado/Cliente entra en la página para de registro de reservaciones 2. El Encargado/Cliente verifica que la reservación sea viable. 3. El Encargado/Cliente agrega los datos de la reservación 4. Si es exitoso, la reservación es registrada, se muestra el resultado Facultad de Ciencias. Escuela de Computación 39 Diseño Figura 4.2 Diagrama de casos de Uso Nivel 2 2.2 Modificar Reservación Pre-condición: La reservación debe haber sido previamente creada. Actor Principal: Encargado. Otros Actores: Ninguno. 40 Facultad de Ciencias. Escuela de Computación CapituloDiseño Descripción: El Encargado busca una reservación existente para modificar sus datos en la Base de Datos. Post-Condición: La reservación queda modificada. Pasos: 1. El Encargado entra en la página para modificar una reservación 2. El Encargado busca una reservación en específico 3. Una vez encontrada la reservación deseada se muestra en forma de formulario y procede a la edición de la misma 4. Si es exitoso la reservación se modifica, en caso contrario queda en su estado anterior. Se muestra el resultado 2.3 Cancelar Reservación Pre-condición: La reservación debe haber sido previamente creada. Actor Principal: Encargado. Otros Actores: Cliente. Descripción: El Encargado/Cliente selecciona una reservación existente para cancelarla. Post-Condición: La reservación queda cancelada. Pasos: 1. El Encargado/Cliente entra en la página para cancelar una reservación 2. El Encargado/Cliente busca una reservación en específico 3. Una vez encontrada la reservación deseada se pide la confirmación de la cancelación 4. Si es exitoso la reservación es cancelada, se muestra el resultado 2.4 Consultar Reservación Pre-condición: Al menos una reservación debe haber sido previamente creada. Actor Principal: Encargado. Otros Actores: Cliente Facultad de Ciencias. Escuela de Computación 41 Diseño Descripción: Se escoge un día para visualizar las reservaciones correspondientes. Por defecto se muestra una lista de todas las reservaciones del día en curso. Se puede filtrar la información mostrada por día, hora, servidor, cliente y cabinas. Post-Condición: Ninguna. Pasos: 1. El Encargado/Cliente entra en la página para consulta de Reservaciones 2. El Encargado/Cliente selecciona un día en específico 3. Una vez encontradas las reservaciones del día deseado se muestran 2.5 Crear Producto Pre-condición: El producto no existe en el sistema. Actor Principal: Encargado. Otros Actores: Ninguno. Descripción: El Encargado ingresa los datos del un producto. Opcionalmente se guardan estos datos en la Base de Datos. Post-Condición: Si el Encargado decide guardar, queda registrado el producto en el sistema. De lo contrario no se arroja ningún resultado. Pasos: 1. El Encargado entra en la página para de registro de productos 2. El Encargado agrega los datos del nuevo producto 3. Si es exitoso el nuevo producto es registrado, se muestra el resultado 2.6 Modificar Producto Pre-condición: El producto debe haber sido previamente creado. Actor Principal: Encargado. Otros Actores: Ninguno. Descripción: El Encargado busca un producto existente para modificar sus datos en la Base de Datos. Incluyendo en estas opciones marcar el producto como “en tránsito”. Post-Condición: El producto queda modificado. 42 Facultad de Ciencias. Escuela de Computación CapituloDiseño Pasos: 1. El Encargado entra en la página para modificar un producto 2. El Encargado busca un producto en específico 3. Una vez encontrado el producto deseado se muestra en forma de formulario y procede a la edición del mismo 4. Si es exitoso el usuario se modifica, en caso contrario queda en su estado anterior. Se muestra el resultado 2.7 Eliminar Producto Pre-condición: El producto debe haber sido previamente creado. Actor Principal: Encargado. Otros Actores: Ninguno. Descripción: El Encargado busca un producto existente para eliminarlo. Post-Condición: El producto queda eliminado. Pasos: 1. El Encargado entra en la página para eliminar un producto 2. El Encargado busca un producto en específico 3. Una vez encontrado el producto deseado se pide la confirmación de la eliminación 4. Si es exitoso el producto queda eliminado, se muestra el resultado 2.8 Consultar Producto Pre-condición: El inventario o producto debe haber sido previamente creado. Actor Principal: Encargado. Descripción: Se escoge un producto existente para visualizarlo. Por defecto se muestra una lista de todos los productos (comprados, en almacén y en tránsito). Se puede filtrar la información por productos comprados, en almacén, en tránsito o agotados. Post-Condición: Ninguna. Pasos: Facultad de Ciencias. Escuela de Computación 43 Diseño 1. El Encargado entra en la página para consulta del Inventario 2. El Encargado busca un producto en específico. Por defecto se muestra una lista con todos los productos. 3. Una vez encontrado el producto deseado se muestra 2.9 Crear Usuario Pre-condición: El usuario no existe en el sistema. Actor Principal: Encargado. Otros Actores: Cliente, Trabajador. Descripción: El Encargado ingresa los datos del un usuario (cliente o empleado), o el Cliente/Trabajador ingresa sus datos en caso de que se esté registrando en el sistema. Opcionalmente se guardan estos datos en la Base de Datos. Post-Condición: Si el Encargado o Cliente/Trabajador decide guardar, queda registrado el usuario en el sistema para que en un futuro pueda registrarse con su nombre de usuario y contraseña y así poder entrar en el sistema. De lo contrario no se arroja ningún resultado. Pasos: 1. El Encargado o Cliente/Trabajador entra en la página para de registro de usuarios. 2. El Encargado o Cliente/Trabajador agrega los datos del nuevo usuario 3. Si es exitoso el nuevo usuario es registrado, se muestra el resultado 2.10 Modificar Usuario Pre-condición: El usuario debe haber sido previamente creado. Actor Principal: Encargado. Otros Actores: Cliente, Trabajador. Descripción: El Encargado busca un usuario existente para modificarlo, o el Cliente/Trabajador ingresa en el sistema con su nombre de usuario y contraseña y modifica sus datos en la Base de Datos. Post-Condición: El usuario queda modificado. Pasos: 44 Facultad de Ciencias. Escuela de Computación CapituloDiseño 1. El Encargado entra en la página para modificar un usuario o el Cliente/Trabajador inicia sesión y luego entra a modificar su perfil. 2. El Encargado busca un usuario en específico 3. Una vez encontrado el usuario deseado se muestra en forma de formulario y procede a la edición del mismo. 4. Si es exitoso el usuario se modifica, en caso contrario queda en su estado anterior. Se muestra el resultado 2.11 Eliminar Usuario Pre-condición: El usuario debe haber sido previamente creado. Actor Principal: Encargado. Otros Actores: Ninguno. Descripción: El Encargado busca un usuario existente para eliminarlo. Post-Condición: El usuario queda eliminado. Pasos: 1. El Encargado entra en la página para eliminar un usuario 2. El Encargado busca un usuario en específico 3. Una vez encontrado el usuario deseado se pide la confirmación de la eliminación 4. Si es exitoso el usuario queda eliminado, se muestra el resultado 2.12 Consultar Usuario Pre-condición: El usuario debe haber sido previamente creado. Actor Principal: Encargado. Otros Actores: Cliente, Trabajador Descripción: Se escoge un usuario existente para visualizarlo Post-Condición: Ninguna Pasos: Facultad de Ciencias. Escuela de Computación 45 Diseño 1. El Encargado entra en la página para consulta de usuario, o el Cliente/Trabajador inicia sesión para consultar su perfil. En caso del Encargado se muestra una lista de todos los usuarios por defecto. 2. El Encargado busca una usuario en específico 3. Una vez encontrado el usuario deseado se muestran sus datos 2.13 Crear Servicio Pre-condición: El servicio no existe en el sistema. Actor Principal: Encargado. Otros Actores: Ninguno. Descripción: El Encargado ingresa los datos del un servicio (incluyendo los materiales que utiliza y su receta, duración y personal que lo realiza). Opcionalmente se guardan estos datos en la Base de Datos. Post-Condición: Si el Encargado decide guardar, queda registrado el servicio en el sistema. De lo contrario no se arroja ningún resultado. Pasos: 1. El Encargado entra en la página para de registro de servicio. 2. El Encargado agrega los datos del nuevo servicio 3. Si es exitoso el nuevo servicio es registrado, se muestra el resultado 2.14 Modificar Servicio Pre-condición: El servicio debe haber sido previamente creado. Actor Principal: Encargado. Otros Actores: Ninguno. Descripción: El Encargado busca un servicio existente para modificarlo. Post-Condición: El servicio queda modificado. Pasos: 1. El Encargado entra en la página para modificar un servicio. 46 Facultad de Ciencias. Escuela de Computación CapituloDiseño 2. El Encargado busca un servicio en específico 3. Una vez encontrado el servicio deseado se muestra en forma de formulario y procede a la edición del mismo. 4. Si es exitoso el servicio se modifica, en caso contrario queda en su estado anterior. Se muestra el resultado 2.15 Eliminar Servicio Pre-condición: El servicio debe haber sido previamente creado. Actor Principal: Encargado. Otros Actores: Ninguno. Descripción: El Encargado busca un servicio existente para eliminarlo. Post-Condición: El servicio queda eliminado. Pasos: 1. El Encargado entra en la página para eliminar un servicio 2. El Encargado busca un servicio en específico 3. Una vez encontrado el servicio deseado se pide la confirmación de la eliminación 4. Si es exitoso el servicio queda eliminado, se muestra el resultado 2.16 Consultar Servicio Pre-condición: El servicio debe haber sido previamente creado. Actor Principal: Encargado. Descripción: Se escoge un servicio existente para visualizar sus datos, incluyendo receta, materiales que utiliza y trabajadores que lo realizan. Post-Condición: Ninguna. Pasos: 1. El Encargado entra en la página para consulta de servicio. Se muestra una lista de todos los servicios por defecto. 2. El Encargado busca una servicio en específico 3. Una vez encontrado el servicio deseado se muestran sus datos Facultad de Ciencias. Escuela de Computación 47 Diseño 4.2 Diagramas de Secuencia Se realizaron diagramas de secuencia que muestran la interacción entre los objetos en el tiempo, en cada una de las funcionalidades de los módulos. Crear Reservaciones: esta secuencia se produce al momento que un usuario realiza una reservación. Se muestra en la Figura 4.3 Figura 4.3 Diagrama de secuencia – Crear Reservaciones Modificar Reservaciones: esta secuencia se produce al momento que un usuario modifica una reservación. Se muestra en la Figura 4.4 Figura 4.4 Diagrama de secuencia – Modificar Reservaciones 48 Facultad de Ciencias. Escuela de Computación CapituloDiseño Cancelar Reservaciones: esta secuencia se produce al momento que un usuario cancela una reservación. Se muestra en la Figura 4.5 Figura 4.5 Diagrama de secuencia – Cancelar Reservación Crear Producto: esta secuencia se produce al momento que un usuario agrega un producto al sistema. Se muestra en la Figura 4.6 Figura 4.6 Diagrama de secuencia – Crear producto Facultad de Ciencias. Escuela de Computación 49 Diseño Modificar Producto: esta secuencia se produce al momento que un usuario modifica un producto. Se muestra en la Figura 4.7 Figura 4.7 Diagrama de secuencia – Modificar producto Eliminar Producto: esta secuencia se produce al momento que un usuario elimina un producto. Se muestra en la Figura 4.8. Figura 4.8 Diagrama de secuencia – Eliminar producto 50 Facultad de Ciencias. Escuela de Computación CapituloDiseño Crear Usuario: esta secuencia se produce al momento que un usuario agrega un usuario. Se muestra en la Figura 4.9 Figura 4.9 Diagrama de secuencia – Crear usuario Modificar Usuario: esta secuencia se produce al momento que un usuario modifica un usuario. Se muestra en la Figura 4.10 Figura 4.10 Diagrama de secuencia – Modificar usuario Facultad de Ciencias. Escuela de Computación 51 Diseño Eliminar Usuario: esta secuencia se produce al momento que un usuario elimina un usuario. Se muestra en la Figura 4.11 Figura 4.11 Diagrama de secuencia – Eliminar usuario Crear Servicio: esta secuencia se produce al momento que un usuario agrega un servicio. Se muestra en la Figura 4.12 Figura 4.12 Diagrama de secuencia – Crear servicio 52 Facultad de Ciencias. Escuela de Computación CapituloDiseño Modificar Servicio: esta secuencia se produce al momento que un usuario modifica un producto. Se muestra en la Figura 4.13 Figura 4.13 Diagrama de secuencia – Modificar servicio Eliminar Servicio: esta secuencia se produce al momento que un usuario elimina un servicio. Se muestra en la Figura 4.14 Figura 4.14 Diagrama de secuencia – Eliminar servicio Facultad de Ciencias. Escuela de Computación 53 Diseño 4.3 Diagramas de Clases Se realizó un diagrama de Clases, que define todos los objetos identificados y cómo será la interacción entre ellos, se muestra en la Figura 4.15. Figura 4.15 Diagrama de clases 54 Facultad de Ciencias. Escuela de Computación CapituloDiseño 4.4 Modelo de la Base de Datos Se realizó un modelo preliminar de la base de datos con todas las tablas que se pensaron necesarias para el funcionamiento del sistema y sus relaciones entre ellas, se muestra en la Figura 4.16. Figura 4.16 Modelo de la Base de Datos Facultad de Ciencias. Escuela de Computación 55 Implementación de la Solución Capítulo 5 Implementación de la Solución 5 Capitulo Luego de los diagramas preliminares, se escogieron distintas herramientas para el desarrollo de la aplicación Web, basadas en los requerimientos del usuario y en un desarrollo ágil y rápido de la misma. Durante el desarrollo, surgieron nuevos requerimientos que suponen un rediseño y reestructuración del programa, para que se adapte a las nuevas funcionalidades y permita cumplir a cabalidad sus objetivos. 5.1 Análisis y Diseño de la aplicación A continuación se describen los pasos realizados para obtener la información necesaria para comenzar con el despliegue de la aplicación. 5.1.1 Objetivos de la aplicación  Automatizar el manejo de:  El inventario de almacén y el inventario en tránsito, así como el manejo de todos los productos en existencia.  Reservaciones de citas para los servicios del spa, ya sea a través de un computador personal con conexión a internet o de un dispositivo móvil con capacidad de conexión a la red.  Usuarios del sistema, tanto clientes, como empleados, encargados y administradores. 5.1.2 Análisis y descripción de las herramientas Ya que se requiere del desarrollo de una aplicación Web, que además pueda ser accesible desde dispositivos móviles, se utilizaron las siguientes herramientas para el desarrollo de la misma: 56 Facultad de Ciencias. Escuela de Computación CapituloImplementación de la Solución Java Java es un lenguaje de programación y el entorno de para la ejecución de programas escritos en él. El compilador Java traduce el código fuente Java en instrucciones que son interpretadas por la Máquina Virtual Java (JVM, Java Virtual Machine). Como lenguaje para programar en internet, Java es una tecnología facilitadora que permite a los desarrolladores crear páginas Web que se entregarán de modo consistente a todos los usuarios con un navegador habilitado para Java y con independencia de la plataforma de hardware y el sistema operativo que se esté utilizando. La siguiente figura muestra cómo el código nativo Java se transfiere en internet. [14] Figura 5.1 Transferencia de código fuente Java en Internet. Fuente [14] Para desarrolladores, la tecnología Java les permite escribir programas sobre una plataforma y ejecutarlos sobre otra. Esto permite crear programas multi-hilo que se ejecutan entre browsers Web y servidores Web. La tecnología Java comprende un entorno multi-hilo orientado a objetos y de plataforma independiente. Ésta es la base para los servicios de red y Web, aplicaciones y computadoras independientes de la plataforma, robótica y otros servicios embebidos. [1] La siguiente figura muestra la arquitectura Java. Facultad de Ciencias. Escuela de Computación 57 Implementación de la Solución Figura 5.2 Arquitectura Java. Fuente [12] Struts Struts es un framework de código abierto para crear aplicaciones Web Java. Comprende capa de control flexible, basada en tecnologías estándares como Java Servlets, JavaBeans, ResourceBundles, y XML, entre otros. [27]. Las aplicaciones Web basadas en Páginas JavaServer (JSP, JavaServer Page) algunas veces entremezclan código de bases de datos, código de diseño de páginas y código de control de flujo. Esto hace que las aplicaciones lleguen a ser difíciles de mantener. Una manera de separar estos códigos es en una aplicación es utilizar la arquitectura Modelo-Vista-Controlador (MVC, Model-View-Controller). El framework Struts está diseñado para ayudar a los desarrolladores a crear aplicaciones web que utilicen esta arquitectura. [2] Este framework provee su propio componente controlador Web y se integra con otras tecnologías para proveer el Modelo y la Vista. Para el modelo, el framework puede 58 Facultad de Ciencias. Escuela de Computación CapituloImplementación de la Solución interactuar con tecnologías de acceso de datos estándares como JDBC (Java Database Connectivity) y EJB (Enterprise JavaBeans) o Hibernate, etc. Para la vista, el framework trabaja tanto con JSP, incluyendo JSLT (JSP Standard Tag Library) y JSF (Java Server Faces), como con Velocity Templates, XSLT (Extensible Stylesheet Language Transformations) y otros sistemas de presentación. [27] La Figura 5.3 muestra el procesamiento que sigue struts en un nivel 1. Figura 5.3 Procesamiento Struts. Fuente [5] Struts provee tres componentes clave [2]:  Un manejador de solicitudes, proveído por el desarrollo de la aplicación, que es mapeado a un Identificador de Recurso Uniforme (URI, Uniform Resource Identifier) estándar.  Un manejador de respuestas, que transfiere el control a otro recurso el cual complete la respuesta.  Una librería de tags, que ayudan al desarrollador a crear aplicaciones basadas en formas interactivas con “server pages” o páginas de servidor. El controlador del framework actúa como un Puente entre la vista y el modelo de la aplicación. Cuando una solicitud es recibida, el controlador invoca una clase Action. La http://es.wikipedia.org/wiki/Uniform_Resource_Identifier http://es.wikipedia.org/wiki/Uniform_Resource_Identifier Facultad de Ciencias. Escuela de Computación 59 Implementación de la Solución clase Action consulta con el modelo para examinar o actualizar el estado de la aplicación. El framework provee una clase ActionForm para ayudar a transferir los datos entre el modelo y la vista. Frecuentemente el modelo es representado por un grupo de JavaBeans. [27] Modelo-Vista-Controlador (MVC, Model-View-Controller) El patrón de diseño Modelo-Vista-Controlador resuelve problemas originados por la mezcla de código relacionado a acceso a los datos, lógica del negocio, presentación de los datos e interacción con el usuario, separándolos en modelo, vista y controlador. [17] En la Figura 5.4 se muestra un diagrama del patrón modelo-vista-controlador, especificando en cada división las actividades que corresponden. Figura 5.4 Estructura genérica de la arquitectura Modelo-Vista-Controlador. Fuente [17] Resin Resin es un paquete simple integrado que provee manejo de transacciones de Servlets, JSP’s, JSF, JSTL, EJB Lite, mensajería, servicio remoto, sesiones distribuidas, SSL, servicio de registros, servidor HTTP, PHP, y balanceo de carga. [24] http://caucho.com/products/resin 60 Facultad de Ciencias. Escuela de Computación CapituloImplementación de la Solución Resin puede llevar a cabo el registro de acceso, especificando donde van los mensajes de interfaz de registros JDK y redirecciona la entrada de errores y de salida a la aplicación. [25] El funcionamiento de Resin como servidor de aplicaciones se observa en la Figura 5.5 Figura 5.5 Funcionamiento de Resin. Fuente [26] Postgres Es sistema manejador de bases de datos relacionales/orientadas a objeto de código abierto. Soporta una gran parte del estándar SQL y además de queries complejos, claves foráneas, disparadores, vistas, integridad transaccional, control de multiversiones y concurrencia. Además se pueden añadir tipos de datos, funciones, operadores, funciones agregadas, métodos de índices y lenguajes de procedimientos. [28] Hibernate Hibernate es un servicio de queries y persistencia relacional/basado en objetos, poderoso, de alto rendimiento y de código abierto. Permite desarrollar clases persistentes siguiendo el lenguaje orientado a objetos, incluyendo asociación, inherencia, polimorfismo, composición y colecciones. Es un componente crítico de JEMS (JBoss Enterprise Middleware System), éste es una división de RedHat. [23]. En la tabla 5.1 se muestra la clasificación de los distintos productos hibérnate existentes. http://www.jboss.com/products/index http://www.jboss.com/products/index Facultad de Ciencias. Escuela de Computación 61 Implementación de la Solución Tabla 5.1 Clasificación de Hibernate. Fuente [23] Tipo Descripción Hibernate Core Hibernate para Java, APIs natives y metadata de mapeo XML. Hibernate Annotations Clases de mapeo con anotaciones JDK 5.0 Hibernate EntityManager API de persistencia estándar Java para Java SE y Java EE Hibernate Shards Framework de particionamiento horizontal de datos Hibernate Validator API de anotaciones de integridad de datos y validaciones Hibernate Search Integración de Hibernate con Lucene para la indexación y la consulta de datos. Hibernate Tools Herramientas de desarrollo para Eclipse y Ant. NHibernate El servicio NHibernate para el framework .NET JBoss Seam Framework para JSF, Ajax, y aplicaciones EJB 3.0/Java EE 5.0 Jasper Reports Jasper Reports es una herramienta de código abierto para la generación de reportes, que tiene la habilidad de entregar contenido enriquecido en la pantalla, la impresora o en archivos PDF, HTML, XLS, RTF, ODT, CSV, TXT y XML. Está completamente escrita en Java y se puede utilizar en una gran variedad de aplicaciones de Java, incluyendo J2EE o aplicaciones Web, para generar contenido dinámico. Su principal propósito es ayudar a crear documentos orientado a páginas y listos para imprimir de una manera simple. [11] El funcionamiento de Jasper Reports puede verse en la Figura 5.6: Figura 5.6 Funcionamiento Jasper Reports. Fuente [10] https://www.hibernate.org/344.html http://hibernate.org/397.html http://hibernate.org/397.html https://www.hibernate.org/414.html https://www.hibernate.org/412.html https://www.hibernate.org/410.html https://www.hibernate.org/255.html https://www.hibernate.org/343.html http://www.seamframework.org/ 62 Facultad de Ciencias. Escuela de Computación CapituloImplementación de la Solución Eclipse Eclipse es un proyecto que tiene como objetivo proveer un conjunto de herramientas universales para el desarrollo. Comprende entornos de desarrollo integrados (IDE, Integrated Development Environment) de código abierto, comúnmente proveídos para Java, pero el lenguaje de desarrollo es independiente y puede ser extendido a través de plugins. Eclipse es desarrollado por la Fundación Eclipse, una organización independiente sin fines de lucro que fomenta una comunidad de código abierto y un conjunto de productos complementarios, capacidades y servicios. [6] 5.1.3 Instalación y Configuración Para la instalación y configuración de las herramientas en el Sistema Operativo Windows XP se siguieron los siguientes pasos: Java Se instaló la versión 1.5 de esta aplicación, a través de un archivo ejecutable llamado jdk- 1_5_0_04-windows-i586-p.exe, que se puede conseguir en la dirección: http://java.sun.com/javase/downloads/index_jdk5.jsp Eclipse Para instalar la herramienta de desarrollo Eclipse no se necesita instalación, sólo copiar la carpeta en el sistema y ejecutar el archivo eclipse.exe. La versión que se utilizó fue Ganymede. La carpeta contentiva del programa se puede descargar en la dirección http://www.eclipse.org/downloads/. http://es.wikipedia.org/wiki/Entorno_de_desarrollo_integrado http://es.wikipedia.org/wiki/Fundaci%C3%B3n_Eclipse http://java.sun.com/javase/downloads/index_jdk5.jsp http://www.eclipse.org/downloads/ Facultad de Ciencias. Escuela de Computación 63 Implementación de la Solución Resin El servidor de aplicaciones Resin no necesita instalación. Se copia su carpeta en alguna ubicación del Sistema. Se utilizó la versión 2.1.12. La carpeta contentiva del programa se puede descargar en la dirección http://www.caucho.com/download/. Para el correcto funcionamiento de este servidor es necesario copiar la librería jsdk23.jar en las librerías de la aplicación. Esta librería se encuentra dentro de la carpeta lib del Resin. Emulador de BlackBerry Para realizar las pruebas de la vista móvil se utilizó esta herramienta, el instalador BlackBerry_Simulators_45055_8320.exe se puede descargar en la dirección http://www.blackberry.com/developers/downloads/simulators/ y emula un terminal BlackBerry curve 8320. Para que se pueda tener acceso a internet e email se debe instalar también la herramienta BlackBerry_Email_MDS_4.1.4.exe, que se descarga en la misma ubicación. Postgres Se utilizó la versión 8.3.7-1 para Windows se puede descargar en la dirección: http://www.postgresql.org/download/windows. Con ella se instalan el manejador de bases de datos y un administrador de interfaz gráfica llamado pdAdmin. Es necesario además colocar en las librerías de la aplicación un driver para el manejo de transacciones jdbc a través de postgres (postgresql-8.3-604.jdbc3.zip). Estas librerías se pueden descargar en la dirección http://jdbc.postgresql.org/download.html. http://www.caucho.com/download/ http://www.postgresql.org/download/windows http://jdbc.postgresql.org/download.html 64 Facultad de Ciencias. Escuela de Computación CapituloImplementación de la Solución Hibernate Para el funcionamiento de esta herramienta es necesario utilizar una librería con el manejador hibérnate, y colocarla como librería de la aplicación. Se utilizó la versión 3, que puede ser descargada en la dirección https://www.hibernate.org/6.html. Jasper Reports Esta librería se puede descargar en la dirección: http://jasperforge.org/website/jasperreportswebsite/trunk/index.html?group_id=252 Para el modelado de los reportes se utilizó la herramienta iReport, la cual puede ser descargada en la dirección: http://jasperforge.org/plugins/project/project_home.php?group_id=83 Específicamente para la generación de reportes en formato PDF y XLS son necesarias además las librerías iText y Poi, respectivamente. iText se puede encontrar en la dirección http://sourceforge.net/projects/itext/ y Poi en la ruta: http://www.carfab.com/apachesoftware/poi/. 5.1.4 Modelo del análisis Basado en la estructura del patrón de diseño MVC y en Struts, los archivos de la aplicación se dividieron en tres grupos. El paquete Modelo se encarga de todo lo referente al manejo de los datos y la conexión con la base de datos, el paquete Controladores se encarga de todo lo referente a la lógica del negocio, y en la vista todos los archivos correspondientes a la presentación de la aplicación. A continuación se muestra la conformación de los paquetes y estructuras. Diagrama de dependencias entre paquetes dentro de la aplicación (ver Figura 5.7) http://www.carfab.com/apachesoftware/poi/ Facultad de Ciencias. Escuela de Computación 65 Implementación de la Solución Figura 5.7 Dependencia entre paquetes Clases contenidas por paquete Modelo Figura 5.8 Clases del paquete Modelo 66 Facultad de Ciencias. Escuela de Computación CapituloImplementación de la Solución Estructura Figura 5.9 Diagrama de clases de las estructuras Controlador Figura 5.9 Clases del paquete controlador Facultad de Ciencias. Escuela de Computación 67 Implementación de la Solución Formulario Figura 5.10 Clases del paquete Formulario 5.1.5 Modelo conceptual de los datos Para el funcionamiento del sistema se creó una base de datos utilizando el manejador de bases de datos PostgreSQL, de nombre “Reservacion”, en ella un esquema “public” y en este esquema 11 tablas principales y 2 de relación, detalladas a continuación. Las tablas principales son las siguientes: Almacen: Almacena los productos que existen en el inventario del almacén. Las Tablas 5.2 y 5.3 muestran las columnas y restricciones de esta tabla. Tabla 5.2 Columnas de Almacén Nombre Tipo de Dato No Vacío Clave Primaria Id Entero Sí Sí producto_id Entero Sí No cantidad Entero Sí No Precio Decimal No No factura Entero No No Fecha Fecha No No Tabla 5.3 Restricciones de Almacén Nombre Tipo Definición 68 Facultad de Ciencias. Escuela de Computación CapituloImplementación de la Solución almacen_pkey Clave Primaria (id) almacen_producto_id_fkey Clave Foránea (producto_id) Referencia a producto (id) Bitácora: Almacena las operaciones realizadas en el sistema. Las Tablas 5.4 y 5.5 muestran las columnas y restricciones de esta tabla. Tabla 5.4 Columnas de Bitácora Nombre Tipo de Dato No Vacío Clave Primaria Id Entero Sí Sí tipo_evento_id Entero Sí No usuario_id Entero No No Observaciones Cadena No No fecha_hora Fecha No No Tabla 5.5 Restricciones Nombre Tipo Definición bitacora_pkey Clave Primaria (id) bitacora_tipo_evento_id_fkey Clave Foránea (tipo_evento_id) Referencia a tipo_evento (id) bitacora_usuario_id_fkey Clave Foránea (usuario_id) Referencia a usuario (id) Dia_feriado: almacena todos los días feriados. Las Tablas 5.6 y 5.7 muestran las columnas y restricciones de esta tabla. Tabla 5.6 Columnas Nombre Tipo de Dato No Vacío Clave Primaria Id Entero Sí Sí Fecha Date Sí No Motivo Cadena(255) Sí No Tabla 5.7 Restricciones Nombre Tipo Definición dia_feriado_pkey Clave Primaria (id) Dia_libre: almacena el día libre de un empleado. Las Tablas 5.8 y 5.9 muestran las columnas y restricciones de esta tabla. Facultad de Ciencias. Escuela de Computación 69 Implementación de la Solución Tabla 5.8 Columnas de Dia_libre Nombre Tipo de Dato No Vacío Clave Primaria Id Entero Sí Sí empleado_id Entero Sí No Dia Entero Sí No Tabla 5.9 Restricciones de Dia_libre Nombre Tipo Definición dia_libre_pkey Clave Primaria (id) dia_libre_empleado_id_fkey Clave Foránea (empleado_id) Referencia a usuario (id) Producto: Almacena los datos básicos de un producto. Las Tablas 5.10 y 5.11 muestran las columnas y restricciones de esta tabla. Tabla 5.10 Columnas de Producto Nombre Tipo de Dato No Vacío Clave Primaria Id Entero S Sí Nombre Cadena(255) Sí No Descripción Cadena No No Imagen Cadena No No Código Cadena Sí No Presentación Decimal No No unidad_id Entero No No Tabla 5.11 Restricciones de Producto Nombre Tipo Definición producto_pkey Clave Primaria (id) producto_unidad_fkey Clave Foránea (unidad_id) Referencia a unidad (id) codigo_producto_unique Único (codigo) Servicio: Almacena los datos básicos de un Servicio. Tablas 5.12 y 5.13 muestran las columnas y restricciones de esta tabla. Tabla 5.12 Columnas de Servicio Nombre Tipo de Dato No Vacío Clave Primaria Id Entero Sí Sí Nombre Cadena(255) Sí No 70 Facultad de Ciencias. Escuela de Computación CapituloImplementación de la Solución Descripción Cadena No No Duración Hora No No Horas Entero No No Minutos Entero No No Tabla 5.13 Restricciones de Servicio Nombre Tipo Definición servicio_pkey Clave Primaria (id) unico_nombre Única (nombre) Reservacion: Almacena los datos de una Reservación. Tablas 5.14 y 5.15 muestran las columnas y restricciones de esta tabla. Tabla 5.14 Columnas de Reservación Nombre Tipo de Dato No Vacío Clave Primaria Id Entero Sí Sí usuario_id Entero Sí No servicio_id Entero No No responsable_id Entero Sí No motivo_reservacion Cadena No No Fecha Fecha No No Dia Entero No No Mes Entero No No Ano Entero No No Hora Hora No No Hor Entero No No Min Entero No No prestador_id Entero No No Confirmación Cadena No No Tabla 5.15 Restricciones de Reservación Nombre Tipo Definición reservacion_pkey Clave Primaria (id) reservacion_prestador_id_fkey Clave Foránea (prestador_id) Referencia a usuario (id) reservacion_servicio_id_fkey Clave Foránea (servicio_id) Referencia a servicio (id) reservacion_responsable_id_fkey Clave Foránea (responsable_id) Referencia a usuario (id) reservacion_usuario_id_fkey Clave Foránea (usuario_id) Referencia a usuario (id) Tipo_usuario: Almacena los distintos tipos de usuario existentes. Las Tablas 5.16 y 5.17 muestran las columnas y restricciones de esta tabla. Facultad de Ciencias. Escuela de Computación 71 Implementación de la Solución Tabla 5.16 Columnas de Tipo_usuario Nombre Tipo de Dato No Vacío Clave Primaria Id Entero Sí Sí Descripción Cadena(255) Sí No Tabla 5.17 Restricciones de Tipo_usuario Nombre Tipo Definición tipo_usuario_pkey Clave Primaria (id) unica_descripcion Único (descripcion) Transito: Almacena los productos que están en el inventario de tránsito. Las Tablas 5.18 y 5.19 muestran las columnas y restricciones de esta tabla. Tabla 5.18 Columnas de Tránsito Nombre Tipo de Dato No Vacío Clave Primaria Id Entero Sí Sí producto_id Entero Sí No Restante Decimal Sí No Fecha Fecha No No Tabla 5.19 Restricciones de Tránsito Nombre Tipo Definición transito_pkey Clave Primaria (id) transito_producto_id_fkey Clave Foránea (producto_id) Referencia a producto (id) Unidad: Almacena los distintos tipos de unidades en las que se puede presentar un producto. Las Tablas 5.20 y 5.21 muestran las columnas y restricciones de esta tabla. Tabla 5.20 Columnas de Unidad Nombre Tipo de Dato No Vacío Clave Primaria Id Entero Sí Sí Nombre Cadena Sí No Tabla 5.21 Restricciones de Unidad Nombre Tipo Definición unidad_pkey Clave Primaria (id) 72 Facultad de Ciencias. Escuela de Computación CapituloImplementación de la Solución Usuario: Almacena los datos de un Usuario registrado en el Sistema. Las Tablas 5.22 y 5.23 muestran las columnas y restricciones de esta tabla. Tabla 5.22 Columnas de Usuario Nombre Tipo de Dato No Vacío Clave Primaria Id Entero Sí Sí Cedula Cadena(20) Sí No Nombres Cadena(255) Sí No Apellidos Cadena(255) Sí No Login Cadena(255) Sí No Clave Cadena(255) Sí No Observaciones Cadena(100) No No tipo_usuario_id Entero No No Activo Cadena No No Correo Cadena No No Teléfono Cadena No No Tabla 5.23 Restricciones de Usuario Nombre Tipo Definición usuario_pkey Clave Primaria (id) tipo_usuario_id_fkey Clave Foránea (tipo_usuario_id) Referencia a tipo_usuario (id) unica_cedula Único (cedula) unico_login Único (login) Las tablas de relación son: Prestador_por_servicio: Contiene los prestadores de cada servicio. Las Tablas 5.24 y 5.25 muestran las columnas y restricciones de esta tabla. Tabla 5.24 Columnas de Prestador_por_servicio Nombre Tipo de Dato No Vacío Clave Primaria servicio_id Entero Sí No prestador_id Entero Sí No Id Entero Sí Sí Observaciones Cadena No No Tabla 5.25 Restricciones de Prestador_por_servicio Nombre Tipo Definición prestador_por_servicio_pkey Clave Primaria (id) Facultad de Ciencias. Escuela de Computación 73 Implementación de la Solución prestador_por_servicio_prestador_fkey Clave Foránea (prestador_id) Referencia a usuario (id) prestador_por_servicio_servicio_fkey Clave Foránea (servicio_id) Referencia a servicio (id) Producto_por servicio: Contiene los productos que utiliza cada servicio. Las Tablas 5.26 y 5.27 muestran las columnas y restricciones de esta tabla. Tabla 5.26 Columnas de Producto_por_servicio Nombre Tipo de Dato No Vacío Clave Primaria servicio_id Entero Sí No producto_id Entero Sí No Cantidad Decimal Sí No Observaciones Cadena No No Id Entero Sí Sí Tabla 5.27 Restricciones Producto_por_servicio Nombre Tipo Definición producto_por_servicio_pkey Clave Primaria (id) producto_por_servicio_producto_fkey Clave Foránea (producto_id) Referencia a producto (id) producto_por_servicio_servicio_fkey Clave Foránea (servicio_id) Referencia a servicio (id) 5.2 Implementación Luego de la creación del modelo de la base de datos y la creación de datos de prueba, se construyeron las clases necesarias para el manejo de los datos y la presentación de los mismos en el navegador. Se desarrolló un módulo de autenticación para poder ingresar al sistema. Seguidamente se creó un manejador para cada objeto a ser administrado en la aplicación (usuarios, servicios, productos y reservaciones). Luego las clases que controlan el manejo del contenido para enviarlo a la vista, una por cada acción a realizarse (agregar, modificar, eliminar, consultar, etc.). Posteriormente los archivos JSP que muestran en el navegador los datos solicitados. Las pantallas de inicio de sesión y el menú principal de la aplicación se muestran en las figuras siguientes (Figura 5.11 y Figura 5.12 respectivamente). 74 Facultad de Ciencias. Escuela de Computación CapituloImplementación de la Solución Figura 5.11 Inicio de Sesión Figura 5.12 Funciones del Sistema A continuación se da una descripción de los módulos creados y sus funciones. 5.2.1 Módulo de Usuarios Es necesario el manejo de los usuarios ya que para poder acceder a la aplicación se debe estar registrado en el sistema. Permite la administración de los usuarios en cuanto a estos puntos: Ingreso de un nuevo usuario Se permite el ingreso de un usuario detallando tipo de usuario, cédula, nombres y apellidos, login, clave, correo electrónico, teléfono y observaciones, campos de los cuales, los seis primeros son obligatorios. Esta pantalla se muestra en la Figura 5.13. Facultad de Ciencias. Escuela de Computación 75 Implementación de la Solución Los tipos de usuario existentes, en orden de privilegios, son: Administrador, Encargado, Empleado y Cliente. Los privilegios que tiene cada uno en la aplicación se describirán más adelante. En caso que el tipo de usuario sea “Empleado”, se debe ingresar además un campo adicional llamado “día libre”, que indica el día libre del empleado. En caso que el empleado no tenga día libre, se puede seleccionar la opción “NA”, lo cual significa que no aplica en el caso. También se puede ingresar un nuevo usuario a través del Registro, con la diferencia de que no se podrá escoger el tipo de usuario, que por razones de seguridad tendrá el valor por defecto “Cliente”. Este atributo podrá ser modificado luego por un usuario con mayores privilegios. Figura 5.13 Agregar un Nuevo Usuario Listar los usuarios Permite obtener un listado de todos los usuarios registrados en el sistema. Este listado posee un filtro por “tipo de usuario”. Posee un botón que permite la generación de un reporte pdf con el listado. La pantalla de listado de usuarios se muestra en la Figura 5.14 y el reporte en la Figura 5.15. 76 Facultad de Ciencias. Escuela de Computación CapituloImplementación de la Solución Figura 5.14 Pantalla Listado de Usuarios Figura 5.15 Reporte Listado de Usuarios Consultar un usuario. Permite ver todos los datos de un usuario registrado (excepto su clave personal). Esta opción se encuentra disponible al momento de listar los usuarios, en el link del campo “cédula”. Esta pantalla se muestra en la Figura 5.16. Además de los datos particulares del usuario, aparecerá un listado con las reservaciones del usuario. En caso que sea “Empleado”, aparecerá un listado con los servicios que presta. Facultad de Ciencias. Escuela de Computación 77 Implementación de la Solución Figura 5.16 Datos del Usuario Modificación de los datos de un usuario Permite la modificación de los datos de un usuario ya registrado en el sistema. Los campos a modificar son los mismos, y aparecerán de acuerdo a los privilegios del usuario que esté realizando la modificación. Para modificar el campo “clave” se requerirá del ingreso de la clave anterior, por razones de seguridad. Esta opción se encuentra disponible al momento de listar los usuarios, en el enlace “modificar”. Esta pantalla se muestra en la Figura 5.18. Figura 5.17 Modificar Usuario Eliminación de un usuario Permite la eliminación de un usuario registrado en el sistema. Esta opción se encuentra disponible al momento de listar los usuarios, en el link “modificar”. 78 Facultad de Ciencias. Escuela de Computación CapituloImplementación de la Solución Mi Perfil Aquí el usuario podrá consultar sus datos personales registrados en el sistema y la lista de sus reservaciones. En caso que el usuario sea de tipo Empleado se mostrarán también los servicios que presta, en caso que existan. Este enlace se encuentra en la parte superior derecha de la pantalla. Esta pantalla se muestra en la Figura 5.18. Figura 5.18 Mi Perfil Modificar Perfil Aquí el usuario podrá modificar sus datos personales, incluso su clave personal, requiriendo para ello la confirmación de la clave anterior. Esta opción está disponible desde el botón Modificar en la pantalla de Mi Perfil. Esta pantalla se muestra en la Figura 5.19. Figura 5.19 Modificar Perfil Facultad de Ciencias. Escuela de Computación 79 Implementación de la Solución Registro Aquí el usuario nuevo podrá registrarse en el sistema ingresando los datos que se muestran en la Figura 5.20. Figura 5.20 Registro El registro se realiza desde la pantalla de inicio, en el enlace Registrarse 5.2.2 Módulo de Servicios Permite la administración de los servicios prestados en el spa en cuanto a: Ingreso de un nuevo servicio Permite el ingreso de un servicio nuevo detallando nombre, descripción y duración del servicio. Todos los campos son obligatorios. Esta opción se encuentra disponible en el menú principal de la aplicación. Esta pantalla se muestra en la Figura 5.21. Figura 5.21 Agregar un Nuevo Servicio 80 Facultad de Ciencias. Escuela de Computación CapituloImplementación de la Solución Listar Servicios Muestra un listado de todos los servicios registrados en el sistema. Esta opción se encuentra disponible en el menú principal de la aplicación. Esta pantalla se muestra en la Figura 5.22. Posee un botón que permite la generación de un reporte pdf con el listado, que se muestra en la Figura 5.23. Figura 5.22 Listar Servicios Figura 5.23 Reporte de Datos del Servicio Consultar Servicio Muestra los datos de un servicio, incluyendo un listado de las reservaciones asociadas a él y un listado de los productos que utiliza. Esta opción se encuentra disponible al momento Facultad de Ciencias. Escuela de Computación 81 Implementación de la Solución de listar los servicios, en el link del campo “nombre”. Desde aquí se puede generar un reporte pdf de los datos del servicio. Esta pantalla se muestra en la Figura 5.25. Figura 5.24 Datos del Servicio Modificación de un servicio Permite la modificación de los datos de un servicio almacenado en el sistema. Esta opción es accesible ingresando al listado de los servicios y seleccionando el enlace “eliminar” que acompaña al servicio. Esta pantalla se muestra en la Figura 5.25. Figura 5.25 Modificar Servicio 82 Facultad de Ciencias. Escuela de Computación CapituloImplementación de la Solución Eliminar de un servicio Permite la eliminación de un servicio ya existente. Esta opción es accesible ingresando al listado de los servicios y seleccionando el enlace “eliminar” que acompaña al servicio. Agregar un prestador a un servicio Ya que un servicio es prestado por uno o más empleados, se permite agregar a un servicio un prestador, que debe estar previamente registrado en el sistema. Esto con el fin de que al momento de la reservación, el cliente pueda escoger la persona con la que quiere recibir el servicio. Esta opción se encuentra disponible en el menú principal de la aplicación. Esta pantalla se muestra en la Figura 5.26. Figura 5.26 Agregar Prestador a un Servicio Agregar un producto a un servicio Un servicio puede utilizar distintos productos para llevarse a cabo. Es por ello que se permite formar la “receta” de un servicio agregando los distintos productos que utiliza especificando: servicio, producto y cantidad del producto que se va a utilizar. Todos los campos son obligatorios. La opción se encuentra disponible en el menú principal de la aplicación. Esta pantalla se muestra en la Figura 5.27. Esto permite que al momento de prestarse un servicio se verifique si hay existencia de los productos necesarios y se registre una salida de esos productos en el inventario. Facultad de Ciencias. Escuela de Computación 83 Implementación de la Solución Figura 5.27 Agregar Producto a un Servicio Prestar un servicio Permite registrar la prestación de un servicio en el spa que no se hizo a través de una reservación. Se debe ingresar el servicio, el prestador, el día, la hora y el usuario que recibió el servicio. Se mostrará como resultado satisfactorio una pantalla con los productos que fueron consumidos por el servicio prestado. La opción se encuentra disponible en el menú principal de la aplicación. Una pantalla de esta opción se muestra en la Figura 5.28. Figura 5.28 Prestar un Servicio Servicios prestados Muestra un listado de los servicios prestados en el día. Esto incluye los servicios prestados a través de la opción “Prestar servicio” y las reservaciones con confirmación de que fueron 84 Facultad de Ciencias. Escuela de Computación CapituloImplementación de la Solución realizadas. La opción se encuentra disponible en el menú principal de la aplicación. Esta pantalla se muestra en la Figura 5.29. Figura 5.29 Listado de Servicios Prestados en el día 5.2.3 Módulo de Control de Inventario Este módulo permite el manejo de los productos que se utilizan en el spa, así como el inventario de almacén y en tránsito. Permite las siguientes acciones: Agregar un nuevo producto Permite el ingreso de un producto nuevo especificando: código (código de barras si fuera el caso), nombre, descripción y presentación. Esta opción se encuentra disponible en el menú principal de la aplicación. Es importante destacar que cuando se agrega un producto nuevo no es necesario que haya existencia del mismo en los inventarios. Este ítem se encuentra en el menú principal de la aplicación. Esta pantalla se muestra en la Figura 5.30. Figura 5.30 Agregar un Nuevo Producto Facultad de Ciencias. Escuela de Computación 85 Implementación de la Solución Listar productos Muestra un listado de todos productos registrados en el sistema (tengan o no existencia en los inventarios). Este listado posee un filtro por código del producto (o código de barras), con el cual se podrá ubicar un producto más fácilmente. Posee un botón que permite la generación de un reporte pdf con el listado. Esta pantalla y el reporte se muestran en las Figuras 5.31 y 5.32 respectivamente. Figura 5.31 Listado de Productos Figura 5.32 Reporte de Listado de Productos Consultar un producto Permite ver los datos de un producto registrado en el sistema. Esta opción es accesible ingresando al listado de los productos, del inventario de almacén o del inventario en 86 Facultad de Ciencias. Escuela de Computación CapituloImplementación de la Solución tránsito, y seleccionando el link sobre el “código” del producto. Esta pantalla se muestra en la Figura 5.33. Figura 5.33 Datos del Producto Modificar un producto Permite modificar los datos de un producto registrado en el sistema. Esta opción es accesible ingresando al listado de los productos y seleccionando el enlace “modificar” que acompaña al producto. Esta pantalla se muestra en la Figura 5.34. Figura 5.34 Modificar Producto Facultad de Ciencias. Escuela de Computación 87 Implementación de la Solución Eliminar producto Permite la eliminación de un producto ya existente. Esta opción es accesible ingresando al listado de los productos y seleccionando el link “eliminar” que acompaña al producto. Agregar almacén Permite agregar un producto previamente registrado al inventario de almacén, indicando el producto, la cantidad, el número de la factura y el precio del producto. Todos los campos son obligatorios. La opción se encuentra disponible en el menú principal de la aplicación. Esta pantalla se muestra en la Figura 5.35. Figura 5.35 Agregar Producto al Inventario de Almacén Listar almacén Muestra un listado de todos los productos existentes en el inventario de almacén. La opción se encuentra disponible en el menú principal de la aplicación. Esta pantalla se muestra en la Figura 5.36 y el reporte en la Figura 5.37. 88 Facultad de Ciencias. Escuela de Computación CapituloImplementación de la Solución Figura 5.36 Pantalla Inventario de Productos en Almacén Figura 5.37 Reporte de Inventario en Almacén Modificar almacén Permite modificar un producto del inventario de almacén. Esta opción es accesible ingresando al listado del inventario de almacén y seleccionando el enlace “modificar” que acompaña al producto. Esta pantalla se muestra en la Figura 5.38. Facultad de Ciencias. Escuela de Computación 89 Implementación de la Solución Figura 5.38 Modificar Producto de Inventario en Tránsito Eliminar almacén Permite eliminar un producto del inventario de almacén, mas no de los productos existentes en el sistema. Esta opción es accesible ingresando al listado del inventario de almacén y seleccionando el link “eliminar” que acompaña al producto. Listar tránsito Muestra un listado de todos los productos existentes en el inventario en tránsito. La opción se encuentra disponible en el menú principal de la aplicación. Esta pantalla se muestra en la Figura 5.39 y el reporte en la Figura 5.40. Figura 5.39 Inventario de Productos en Tránsito 90 Facultad de Ciencias. Escuela de Computación CapituloImplementación de la Solución Figura 5.40 Reporte Inventario en Tránsito Modificar tránsito Permite modificar un producto del inventario de almacén. Esta opción es accesible ingresando al listado del inventario de almacén y seleccionando el link “modificar” que acompaña al producto. Esta pantalla se muestra en la Figura 5.41. Figura 5.41 Modificar Producto en Inventario en Tránsito Eliminar tránsito Permite eliminar un producto del inventario de almacén, mas no de los productos existentes en el sistema. Esta opción es accesible ingresando al listado del inventario de almacén y seleccionando el link “eliminar” que acompaña al producto. Facultad de Ciencias. Escuela de Computación 91 Implementación de la Solución Mover almacén a tránsito Permite pasar un producto del inventario de almacén al inventario en tránsito, para comenzar su consumo. Se debe indicar el producto y la cantidad, además de una clave de operaciones necesaria por seguridad. Todos estos campos son obligatorios. Esta opción se encuentra en el menú principal. Esta pantalla se muestra en la Figura 5.42. Figura 5.42 Mover Producto del Inventario de Almacén al Inventario en Tránsito Salida almacén Permite registrar una salida del almacén, necesaria en caso de la venta de algún producto. Se debe seleccionar el producto, la cantidad y la clave de operaciones, campos obligatorios para llevar a cabo la extracción del producto del inventario. La opción está disponible en el menú principal. Esta pantalla se muestra en la Figura 5.43. Figura 5.43 Registrar Salida del Inventario de Almacén 92 Facultad de Ciencias. Escuela de Computación CapituloImplementación de la Solución 5.2.4 Módulo de Reservaciones Permite la administración de las reservaciones en el sistema. Cuenta con las siguientes opciones: Hacer reservación Permite hacer la reservación de un servicio del spa. Para ello se debe indicar el servicio, el prestador (si es el caso), la fecha, la hora, el usuario (se debe indicar en caso que no sea un cliente quien esté realizando la reservación, de lo contrario será por defecto el cliente que está ingresando) y observaciones. Todos los campos son obligatorios, excepto las observaciones. Al momento de ingresar estos datos se generarán una serie de validaciones dinámicas que verificarán, por ejemplo, si la fecha y hora son válidas, si el día no es feriado, si la fecha ya pasó o si coincide con el día libre del empleado. El botón que permite verificar la disponibilidad del servicio, el prestador y la fecha estará inhabilitado hasta tanto estas validaciones sean correctas. Luego de verificar la disponibilidad, en caso de que sea posible la reservación con los parámetros deseados, se habilitará el botón para realizar la reservación. Todas estas verificaciones son necesarias para evitar que existan colisiones de las reservaciones en caso que el servicio, prestador o fecha no estén disponibles. Al finalizar el proceso de forma satisfactoria se generará un número de reservación, que permitirá hacer seguimiento de la misma. Se encuentra disponible en el menú principal del sistema. La pantalla de hacer reservación se observa en la Figura 5.44. Figura 5.44 Pantalla Hacer Reservación Facultad de Ciencias. Escuela de Computación 93 Implementación de la Solución Listar Reservaciones Muestra todas las reservaciones realizadas. Posee un botón que permite la generación de un reporte pdf con el listado. Se encuentra disponible en el menú principal del sistema. Esta pantalla se muestra en la Figura 5.45 y el reporte en la Figura 5.46. Figura 5.45 Listado de Reservación Figura 5.46 Reporte de Listado de Reservaciones Modificar reservación Permite modificar una reservación hecha. Al momento de modificar se realizarán todas las validaciones que se hacen en la realización de la reservación. Se deberán verificar de nuevo la disponibilidad de los recursos. Esta opción es accesible ingresando al listado de reservaciones y seleccionando el enlace “eliminar” que acompaña la reservación. Esta pantalla se muestra en la Figura 5.47. 94 Facultad de Ciencias. Escuela de Computación CapituloImplementación de la Solución Figura 5.47 Modificar Reservación Cancelar reservación Permite cancelar una reservación hecha. Esta opción es accesible ingresando al listado de reservaciones y seleccionando el enlace “cancelar” que acompaña la reservación. Confirmar reservación Permite confirmar una reservación ya hecha. Se entiende por confirmación, que la cita ya ha sido llevada a cabo. Esto generará el descuento de los productos que utiliza el servicio reservado en el inventario. Esta opción es accesible ingresando al listado de reservaciones y seleccionando el enlace “confirmar” que acompaña la reservación. 5.2.5 Bitácora En esta opción se puede ver un registro de las últimas 50 operaciones hechas en el sistema detallando los campos que se pueden observar en la Figura 5.48. También se puede generar un reporte PDF de este listado presionando el botón Reporte PDF, que se muestra en la Figura 5.49. Facultad de Ciencias. Escuela de Computación 95 Implementación de la Solución Figura 5.48 Bitácora Figura 5.49 Reporte de Bitácora 5.2.6 Privilegios Los Usuarios tienen distintos privilegios de acuerdo al cargo que manejan. Las categorías que se manejan son: Administrador, Encargado, Empleado y Cliente. Un administrador tiene privilegios para:  Administrar productos o Listar productos o Agregar productos o Modificar productos 96 Facultad de Ciencias. Escuela de Computación CapituloImplementación de la Solución o Eliminar productos o Listar inventario de almacén o Listar inventario de transito o Agregar productos al almacén o Modificar el inventario de almacén o Eliminar productos del inventario de almacén o Modificar el inventario de transito o Eliminar productos del inventario de transito  Administrar servicios o Listar servicios o Agregar servicios o Modificar servicios o Eliminar servicios o Agregar productos a un servicio o Eliminar producto de un servicio o Agregar prestador a un servicio o Eliminar prestador de un servicio o Mover productos de almacén a transito  Administrar usuarios o Listar usuarios o Agregar usuarios o Modificar usuarios o Eliminar usuarios  Administrar reservaciones o Hacer reservación Facultad de Ciencias. Escuela de Computación 97 Implementación de la Solución o Listar reservaciones o Cancelar reservaciones o Modificar reservaciones Es el único usuario con permiso para dar un tipo de usuario. Un cliente tiene privilegios para:  Administrar reservaciones o Hacer reservación Un empleado tiene privilegios para:  Administrar productos o Listar productos o Listar inventario de almacén o Listar inventario de transito o Mover productos de almacén a transito  Administrar servicios o Listar servicios  Administrar usuarios o Listar usuarios  Administrar reservaciones o Listar reservaciones Un encargado tiene privilegios para:  Administrar productos o Listar productos 98 Facultad de Ciencias. Escuela de Computación CapituloImplementación de la Solución o Listar inventario de almacén o Listar inventario de transito o Agregar productos al almacén o Modificar inventario de almacén o Eliminar productos del inventario de almacén o Modificar inventario de transito o Eliminar producto del inventario de transito  Administrar servicio o Listar servicios  Administrar usuarios o Listar usuarios  Administrar reservaciones o Hacer reservación o Listar reservaciones o Cancelar reservaciones o Modificar reservaciones 5.2.7 Vista Móvil Para satisfacer la necesidad de accesibilidad de los usuarios al sistema de forma externa y hacer reservaciones sin necesidad de llamar o hacer presencia en el lugar físico del spa, se creó un módulo para dispositivos móviles, de tal manera que cualquier persona que desee hacer una reservación, lo pueda hacer en cualquier lugar y momento desde un dispositivo, bien sea móvil o no, con capacidad de conexión a internet. Facultad de Ciencias. Escuela de Computación 99 Implementación de la Solución Para la realización de este módulo se construyeron nuevas vistas basadas en el lenguaje WML (Wireless Markup Language), que es el lenguaje que se utiliza para construir las vistas para WAP (Wireless Application Protocol), protocolo que permite enviar datos a través de teléfonos móviles. Sólo fue necesario el rediseño de la vista, ya que gracias al patrón Modelo-Vista-Controlador, se utiliza el mismo manejo de la base de datos y los controladores que se utilizaron para la vista de escritorio. Struts provee librerías de tags que permiten facilitar el manejo de las vistas en este lenguaje, permitiendo hacer más ágil el manejo de los beans y estructuras que ya han sido creadas para la vista de escritorio. El diseño de la vista móvil dista del diseño de escritorio ya que el lenguaje WML no permite la ejecución directa de código JavaScript, Ajax y otras herramientas para el manejo del contenido. Por lo tanto, las validaciones requieren un refrescamiento de las pantallas Se escogió WML porque a pesar de que hoy en día los dispositivos móviles están en capacidad de mostrar la mayoría de los lenguajes Web, WML es más universal y puede ser interpretado por cualquier dispositivo que tenga capacidad de conexión a internet. Para las pruebas de estas vistas fue necesario el uso de distintos emuladores de terminal móvil, uno que sólo soporta lenguaje WML y otro que soporta distintos tipos de lenguaje. Además, fue necesario instalar la aplicación en un servidor para hacer pruebas desde terminales reales. Este módulo fue pensado para los Clientes que necesiten hacer reservaciones en el Spa en cualquier momento, sin necesidad de dirigirse al lugar o de estar frente a un computador. Se diseñó sólo para hacer reservaciones, cuenta con la autenticación (ver figura 5.50), la opción de registrarse y un menú. La opción de registro y las opciones de menú se explican a continuación. http://es.wikipedia.org/wiki/Wireless_Markup_Language http://es.wikipedia.org/wiki/Wireless_Application_Protocol 100 Facultad de Ciencias. Escuela de Computación CapituloImplementación de la Solución Figura 5.50 Pantalla Inicio Sesión Móvil Registro Esta opción se accede desde el enlace en la pantalla de autenticación llamado “No estoy registrado” y permite a un usuario registrarse en caso que no se encuentre en el sistema. El tipo de usuario que se da por defecto es Cliente, por cuestiones de seguridad. Al momento del registro se piden los siguientes datos requeridos: cédula, nombres, apellidos, login y clave, y los datos opcionales: correo, teléfono y observaciones. Por cuestiones de integridad de los datos el login y la cédula deben ser únicos, estas validaciones y otras como la correctitud del correo electrónico, datos requeridos, etc., se realizan al momento del envío de los datos, mostrando de nuevo la pantalla de ingreso de los datos y los errores. En caso que las validaciones resulten correctas, se muestra una pantalla de resultado de registro con un mensaje de éxito, lo que indica que los datos fueron almacenados correctamente en la base de datos. Las pantallas de Registro y Resultado del Registro se muestran en las Figuras 5.51 y 5.52 respectivamente. Facultad de Ciencias. Escuela de Computación 101 Implementación de la Solución Figura 5.51 Registro Figura 5.52 Resultado del Registro Menú Principal Esta pantalla, mostrada en la Figura 5.53, tiene enlaces con acceso a las acciones del sistema, las cuales son hacer reservación, mis reservaciones y mi perfil. Figura 5.53 Menú Principal 102 Facultad de Ciencias. Escuela de Computación CapituloImplementación de la Solución Hacer Reservación Permite realizar una reservación en el Spa. Principalmente se muestra una pantalla donde se debe seleccionar el servicio, luego, se muestra una pantalla donde se debe escoger el prestador del servicio (en caso que aplique), el día y la hora. Al momento de enviar estos datos se realizan las validaciones correspondientes que se mostrarán en esta misma pantalla en caso que algún dato no sea correcto o que la reservación no se pueda llevar a cabo con los datos seleccionados. En caso que todas estas validaciones resulten exitosas se muestra una pantalla de resultado, mostrando el servicio, el prestador, el día y la hora seleccionados, un número de reservación para control de la misma y un enlace al menú principal. En algunos terminales los campos de selección aparecen como una caja de selección y en otros como una serie de botones tipo radio. Estas pantallas se muestran en las Figuras 5.54, 5.55 y 5.56. Figura 5.54 Hacer Reservación –Seleccionar Servicio Figura 5.55 Hacer Reservación – Seleccionar Prestador y fecha Facultad de Ciencias. Escuela de Computación 103 Implementación de la Solución Figura 5.56 Resultado de la Reservación Mi Perfil En esta pantalla el usuario podrá consultar sus datos personales en el sistema, como cédula, nombres, apellidos, login, correo, teléfono y observaciones. Se muestra en la Figura 5.57. Figura 5.57 Mi Perfil Modificar Perfil Donde el usuario podrá modificar sus datos. Esta opción se accede desde la consulta del perfil. En caso de errores de validación, los mismos se mostrarán en esta pantalla una vez que se envían los datos. En caso de que las validaciones resulten exitosas se muestra una pantalla de éxito, con un enlace al menú principal. 104 Facultad de Ciencias. Escuela de Computación CapituloImplementación de la Solución Mis Reservaciones Donde el usuario podrá consultar todas sus reservaciones actuales. Se muestran las reservaciones a partir del día en curso. Los detalles de la reservación que se muestran son: número de reservación, servicio, prestador, fecha y hora. Esta pantalla se muestra en la Figura 5.58. Figura 5.58 Mis Reservaciones Facultad de Ciencias. Escuela de Computación 105 Pruebas y Resultados Capítulo 6 Pruebas y Resultados 6 En este capítulo se muestran distintos escenarios de prueba, donde se evaluó la aplicación desde distintas ubicaciones y para distintos fines, para las cuales fue necesario la utilización las siguientes herramientas:  Computador portátil HP Compaq nx6315, con todas las herramientas necesarias instaladas y configuradas para el funcionamiento de la aplicación  Router inalámbrico D-Link DIR-300  Teléfonos celulares marca Motorola y Blackberry, , con conexión a Internet  Emulador de teléfono celular BlackBerry Curve 8320  Asistente Digital Personal o PDA (Personal Digital Assistant).  Computador de escritorio, con conexión a Internet Para comprobar la funcionalidad de la aplicación se realizaron algunas pruebas, que se mencionan a continuación. 6.1 Pruebas generales Debido a lo retirado de la ubicación de la empresa, fue necesario configurar la aplicación en un servidor para que se pudieran realizar pruebas a distancia, en caso que fuera necesario. Para comprobar que la aplicación pudiera funcionar desde acceso externo, se configuró un servidor, para lo cual fue necesario la publicación de la dirección IP de la máquina a través de un servicio gratuito llamado no-ip (www.no-ip.com). El dominio escogido fue brandlist.sytes.net. La aplicación se ejecuta bajo el nombre de JumboSpaOnline, el 106 Facultad de Ciencias. Escuela de Computación Pruebas y Resultados servidor de aplicaciones se configuró para escuchar peticiones en el puerto 8080, y el acceso principal se denomina index.do, por lo que la ruta completa de la aplicación, para pruebas locales a la máquina sería http://localhost:8080/JumboSpaOnline/index.do, y para pruebas externas http://brandlist.sytes.net:8080/JumboSpaOnline/index.do. Se escogió este puerto ya que el servidor se encuentra atado a un proveedor de servicios de internet que bloquea los puertos más bajos, y para las pruebas externas es necesario utilizar un puerto que no esté bloqueado. Luego se realizaron pruebas a través de red cableada, las cuales fueron exitosas desde ubicaciones externas a la red del servidor. Las pruebas de la vista móvil para celular se realizaron con las siguientes herramientas: un emulador de teléfono celular que sólo lee lenguaje WML, un emulador de teléfono celular Blackberry, y dos teléfonos celulares marca BlackBerry de distintos modelos y de distintas compañías de servicios celulares (Movistar y Digitel). La aplicación visualizó de forma exitosa en todas estas herramientas. Las pruebas de la vista para dispositivos móviles no celulares se realizaron con un pda, para que esta vista funcione correctamente fue necesario la creación de un módulo nuevo que no hiciera uso de JavaScript ni Ajax, ya que la mayoría de los navegadores móviles no soportan muchas de las características de estas tecnologías. La vista para estos dispositivos tienen el mismo contenido que las vistas para dispositivos móviles celulares. 6.2 Pruebas funcionales En estas pruebas se verifica el comportamiento correcto funcionamiento de cada una de las funcionalidades de los módulos de la aplicación. Facultad de Ciencias. Escuela de Computación 107 Pruebas y Resultados Módulo de Usuarios Las pruebas realizadas en el módulo de usuarios se muestran en la Tabla 6.1 Tabla 6.1 Pruebas funcionales del módulo de usuarios Funcionalidad Ejecución Resultado Obtenido Observaciones Registro Un usuario nuevo ingresa sus datos para registrarse Pantalla de éxito con un link al inicio En caso que los datos no sean correctos se muestra un mensaje en la pantalla de registro Agregar Usuario Un usuario ingresa los datos de un usuario nuevo al sistema Pantalla con los datos del usuario y un mensaje de éxito En caso que los datos no sean correctos o el login o cédula ya se encuentran registrados, se muestra un mensaje en la pantalla Listar Usuarios Se listan los usuarios del sistema Pantalla con el listado de los usuarios Si no hay usuarios en la Base de Datos se muestra un mensaje Consultar Usuario Se selecciona un usuario del listado para ver sus datos Pantalla con los datos del usuario Si ocurre algún error al solicitar los datos se muestra un mensaje de error Modificar Usuario Se modifica un usuario existente en el sistema, ingresando los datos nuevos en la pantalla Pantalla con los datos del usuario modificado y un mensaje de éxito Si existen errores en los datos o el login o cédula ya se encuentran registrados, se muestra un mensaje Eliminar Usuario Se elimina un usuario del sistema Pantalla con el listado de los usuarios y un mensaje de éxito Si ocurre un error de comunicación con la base de datos, se muestra un mensaje de error Mi Perfil Se consulta el perfil Pantalla con los datos del usuario que ha iniciado sesión Si ocurre un error de comunicación con la base de datos, se muestra un mensaje de error Modificar Perfil Se modifican los datos del usuario que ha iniciado sesión, ingresando los datos nuevos en la pantalla Pantalla con los datos del usuario modificado y un mensaje de éxito Móvil: mensaje de éxito Si existen errores en los datos o el login o cédula ya se encuentran registrados, se muestra un mensaje Módulo de Servicios Las pruebas realizadas en el módulo de usuarios se muestran en la Tabla 6.2 Tabla 6.2 Pruebas funcionales del módulo de servicios Funcionalidad Ejecución Resultado Obtenido Observaciones Agregar Servicio Se ingresan los datos de Pantalla con los datos En caso que los datos no 108 Facultad de Ciencias. Escuela de Computación Pruebas y Resultados un servicio al sistema del servicio y un mensaje de éxito sean correctos o el nombre del servicio ya exista, se muestra un mensaje en la pantalla de ingreso del servicio Listar Servicios Se listan los servicios del sistema Pantalla con el listado de los servicios Si no hay servicios en la Base de Datos se muestra un mensaje Consultar Servicio Se selecciona un servicio de la lista para consultar sus datos Se muestra una pantalla con los datos del servicio Si ocurre algún error se muestra un mensaje Modificar Servicio Se modifica un servicio existente en el sistema, ingresando los datos nuevos en la pantalla Pantalla con los datos del servicio modificado y un mensaje de éxito Si existen errores en los datos o el nombre del servicio ya se encuentra registrado se muestra un mensaje Eliminar Servicio Se elimina un servicio del sistema Pantalla con el listado de los servicios y un mensaje de éxito Si ocurre un error de comunicación con la base de datos se muestra un mensaje de error Agregar Prestador a Servicio Se agrega un prestador a un servicio, ingresando los datos solicitados en la pantalla Pantalla de éxito con los datos de servicio Si los datos ingresados no son correctos u ocurre un error con la base de datos se muestra un mensaje de error Agregar Producto a Servicio Se agrega un producto a un servicio, ingresando los datos solicitados en la pantalla Pantalla de éxito con los datos del servicio Si los datos ingresados no son correctos u ocurre un error con la base de datos se muestra un mensaje de error Prestar Servicio Se presta un servicio del spa, ingresando los datos solicitados en la pantalla Pantalla con el mensaje de éxito de la prestación del servicio junto con y listado de los productos que se utilizaron Si no existen productos suficientes u ocurre algún error al tratar de realizar el ingreso de los datos se muestra un mensaje de error Servicios Prestados del día Se listan los servicios prestados en el día Pantalla con el listado de los servicios prestados en el día Si no existen datos para mostrar se muestra un mensaje Módulo de Control de Inventario En la tabla 6.3 se muestran las pruebas funcionales realizadas en el módulo de Control de Inventario. Facultad de Ciencias. Escuela de Computación 109 Pruebas y Resultados Tabla 6.3 Pruebas funcionales del módulo de control de inventario Funcionalidad Ejecución Resultado Obtenido Observaciones Agregar Producto Un usuario ingresa los datos de un producto al sistema Pantalla con los datos del servicio y un mensaje de éxito En caso que los datos no sean correctos o el código del producto ya exista, se muestra un mensaje en la pantalla de ingreso del producto Listar Productos Se listan los productos del sistema Pantalla con el listado de los productos Si no hay productos en la Base de Datos se muestra un mensaje Consultar Producto Se selecciona un producto de la lista para consultar sus datos Se muestra una pantalla con los datos del producto Si existe algún error se muestra un mensaje Modificar Producto Se modifica un producto existente en el sistema, ingresando los datos nuevos en la pantalla Pantalla con los datos del producto modificado y un mensaje de éxito Si existen errores en los datos o el código del producto ya se encuentra registrado se muestra un mensaje Eliminar Producto Se elimina un producto existente en el sistema Pantalla con el listado de los productos y un mensaje de éxito Si ocurre un error de comunicación con la base de datos se muestra un mensaje de error Agregar Almacén Se agrega un producto al almacén, ingresando los datos solicitados en la pantalla Pantalla de éxito con el listado de los productos en almacén Si los datos ingresados no son correctos u ocurre un error con la base de datos se muestra un mensaje de error Listar Almacén Se listan los productos en almacén Pantalla el listado de los productos en el inventario de almacén Si no existen productos en el inventario de almacén se muestra un mensaje Modificar Almacén Se modifica un producto en el inventario de almacén, ingresando los datos solicitados en pantalla Pantalla con mensaje de éxito y el listado de los productos en el inventario de almacén Si ocurre un error o los datos ingresados no son correctos se muestra un mensaje de error Eliminar Almacén Se elimina un producto en el inventario de almacén Pantalla con mensaje de éxito y el listado de los productos en almacén Si ocurre un error al tratar de eliminar se muestra un mensaje de error Listar Tránsito Se listan los productos en tránsito Pantalla con el listado de los productos en el inventario de tránsito Si no existen productos en tránsito se muestra un mensaje Modificar Tránsito Se modifican los datos de un producto en el inventario de tránsito, ingresando los datos solicitados en pantalla Pantalla con mensaje de éxito con el listado de los productos en tránsito Si existe algún error en los datos ingresados o con la base de datos se muestra un mensaje de error Eliminar Tránsito Se elimina un producto Pantalla con mensaje Si ocurre un error al tratar 110 Facultad de Ciencias. Escuela de Computación Pruebas y Resultados del inventario en tránsito de éxito y el listado de los productos en tránsito de eliminar se muestra un mensaje de error Mover Almacén a Tránsito Se ingresa un producto a tránsito desde el almacén, ingresando los datos solicitados en pantalla Pantalla con mensaje de éxito y el listado de los productos en tránsito Si existe algún error en los datos se muestra un mensaje de error Salida Almacén Se restan productos del almacén, ingresando los datos solicitados en pantalla Se muestra una pantalla con un mensaje de éxito y el listado de los productos en el almacén Si existe algún error en los datos se muestra un mensaje de error Módulo de Reservaciones En la tabla 6.4 se muestran las pruebas funcionales realizadas en el módulo de Reservaciones. Tabla 6.4 Pruebas funcionales del módulo de reservaciones Funcionalidad Ejecución Resultado Obtenido Observaciones Hacer Reservación Se realiza una reservación ingresando los datos solicitados en la pantalla Pantalla con mensaje de éxito y el listado de las reservaciones Móvil: mensaje de éxito En caso que los datos no sean correctos o no esté disponible la reservación para los datos ingresados, se muestra un mensaje de error Listar Reservaciones Se listan las reservaciones del sistema Pantalla con el listado de las reservaciones Si no hay reservaciones en la base de datos se muestra un mensaje Modificar Reservación Se modifica una reservación existente en el sistema, ingresando los datos nuevos en la pantalla Pantalla con mensaje de éxito y el listado de las reservaciones Móvil: mensaje de éxito Si existen errores en los datos se muestra un mensaje Cancelar Reservación Se cancela una reservación existente en el sistema Pantalla con mensaje de éxito y el listado de las reservaciones Móvil: mensaje de éxito Si ocurre un error de comunicación con la base de datos se muestra un mensaje de error Confirmar Reservación Se confirma que se realizó una reservación Pantalla de éxito con listado de las reservaciones Si ocurre un error de comunicación con la base de datos se muestra un mensaje de error Mis Reservaciones Se consultan las Pantalla con el listado Si ocurre un error de Facultad de Ciencias. Escuela de Computación 111 Pruebas y Resultados (Móvil) reservaciones hechas por el usuario que ha iniciado sesión de las reservaciones comunicación con la base de datos se muestra un mensaje de error 6.3 Pruebas Integrales Estas pruebas se realizan para validar la interrelación entre las distintas funcionalidades de la aplicación. Las principales acciones relacionadas entre sí en la aplicación son las reservaciones, la prestación de servicios y los inventarios de almacén y tránsito. Por ello se realizaron las siguientes pruebas: Se verificó que al momento de realizar una reservación:  Hubiera existencia de los productos necesarios para el servicio a reservar en el inventario en tránsito, de lo contrario verificar el inventario de almacén. Para esto se ingresaron recetas de los servicios (agregar producto a servicio) y productos al inventario de almacén (agregar almacén). De no haber existencia se muestra un mensaje de error y no se permite realizar la reservación.  Al momento de seleccionar un servicio se muestren los prestadores del servicio y que el día a reservar no coincida con el día libre del empleado. Para esta prueba se crearon usuarios empleados con distintos días libres y se agregaron como prestadores de distintos servicios.  Al momento de confirmar una reservación se realice el consumo de los productos de la receta del servicio. Un mensaje de error se muestra si no hay productos suficientes, esto impide que se pueda realizar la confirmación. Se verificó al momento de realizar la prestación de un servicio: 112 Facultad de Ciencias. Escuela de Computación Pruebas y Resultados  Se hiciera el consumo de todos los productos correspondientes a la receta del servicio. Un mensaje de error se muestra si no hay productos suficientes, por lo tanto no se permite la realización de la prestación del servicio.  Se muestren correctamente los prestadores del servicio de acuerdo al servicio seleccionado. 6.4 Pruebas de seguridad Para verificar que el sistema cuenta con un nivel de seguridad óptimo se comprobaron los privilegios de los distintos tipos de usuarios que maneja el sistema. Para realizar estas pruebas se crearon usuarios con los distintos roles existentes: administrador, encargado, empleado y cliente. Una vez creados estos usuarios, se inició sesión con cada uno de ellos y se comprobó que:  Un Administrador tiene acceso a todos los servicios  Un Encargado puede, además de listar en todos los módulos, realizar operaciones de inventario, para lo cual debe ingresar una clave de operaciones, y realizar reservaciones  Un Empleado sólo puede listar en todos los módulos del sistema  Un Cliente sólo puede manipular sus datos en el sistema 6.5 Pruebas en sitio Se realizaron pruebas en el spa, utilizando una red inalámbrica libre del área, ya que el sitio no posee red ni acceso a internet propios por los momentos. Esto se hizo para poner en funcionamiento el servidor y permitir que varias máquinas conectadas a la red tuvieran acceso a la aplicación para realizar pruebas simultáneas, las cuales fueron exitosas. Facultad de Ciencias. Escuela de Computación 113 Pruebas y Resultados Principalmente el usuario encargado de las pruebas se registró en el sistema de forma exitosa. Luego procedió a realizar pruebas con algunas funcionalidades de la aplicación. Se agregaron algunos productos al almacén a través de código de barras y se agregó un servicio. Al realizar una reservación y mover productos del almacén al tránsito surgieron nuevos requerimientos que no estaban contemplados en el diseño inicial de la aplicación, y fueron agregadas posteriormente, estos requerimientos son: prestar un servicio (sin pasar por la reservación), realizar una salida del almacén (que no fuera hacia el inventario de tránsito) y mostrar los servicios prestados en un día. Para esta última funcionalidad se agregó un campo nuevo a la reservación donde se pudiera marcar como realizada. 114 Facultad de Ciencias. Escuela de Computación Facultad de Ciencias. Escuela de Computación 115 Conclusión Capítulo 7 Conclusión Los objetivos planteados en este trabajo fueron alcanzados con el desarrollo de una aplicación Web que cumple las principales funcionalidades planteadas y además permite el acceso a la misma desde dispositivos fijos y móviles, utilizando distintas herramientas y lenguajes para presentar una interfaz visual, cuyos detalles de implementación varían según el dispositivo sobre el cual se ejecuta el sistema desarrollado. El desarrollo de la aplicación se basó en el uso de herramientas que permiten estructurar sus componentes de tal forma que se disminuya el tiempo de desarrollo y se genere un código fuente limpio, entendible, para permitir una mejor refactorización y extensiones de la aplicación. Los dispositivos móviles son cada día más comunes y sus capacidades aumentan con cada nueva versión, las distintas vistas que presenta la aplicación permiten el acceso desde ubicaciones fijas, móviles e inalámbricas con independencia del hardware y el sistema operativo. Las pruebas realizadas en distintos escenarios mostraron la integridad de la aplicación en todos sus módulos y funcionalidades, así como la accesibilidad desde distintos dispositivos tanto fijos como móviles. 116 Facultad de Ciencias. Escuela de Computación Conclusión 7.1 Contribuciones El principal aporte que generó este Trabajo Especial de Grado es la automatización del manejo de inventario y la reservación de citas a través de un dispositivo móvil, lo que permite mejorar la administración de los recursos de la empresa y la relación de los clientes con la misma. 7.2 Limitaciones El desarrollo de la aplicación presentó limitaciones económicas basadas en la falta de dispositivos para realizar pruebas, como lector de códigos de barra, una aplicación para la generación de códigos de barra. Además la lejanía de la ciudad de la empresa, fue causa de que se pudieran hacer pocas pruebas reales en sitio, con los recursos reales y con los usuarios finales. 7.3 Recomendaciones Es recomendable que la empresa donde se quiera utilizar la aplicación cuente con una red cableada o inalámbrica, y preferiblemente con salida hacia Internet, para la inmediatez de los cambios en los datos y para dar mejor respuesta a los usuarios. Además se recomienda cargar los datos reales de las recetas de los servicios, los usuarios y los códigos de barra de los productos en la base de datos. 7.4 Trabajos Futuros A futuro la aplicación puede incorporar:  Un módulo de facturación, que complete la automatización de todos los procesos del spa y facilite el resto de los procesos que ya están creados  La funcionalidad de generación de códigos de barra, para los productos que no lo posean Facultad de Ciencias. Escuela de Computación 117 Conclusión  El resto de las funcionalidades al módulo móvil  Asociar tipos de empleados a los servicios  Niveles de detalle al módulo de reservación de citas, como por ejemplo la de aquellos servicios que requieren varias sesiones.  Notificación por correo a los clientes de la reservación de los servicios 118 Facultad de Ciencias. Escuela de Computación Facultad de Ciencias. Escuela de Computación 119 Referencias Referencias [1]. About Java Technology. [En línea] http://www.sun.com/java/about/. 2009. [2]. Apache Struts. [En línea] http://struts.apache.org/. 2009. [3]. Baker, R. Case Method. Addison¬Wesley, 1990. [4]. Caucho Resin. [En línea] 2009. http://www.caucho.com/. 2009. [5]. Detail information on Struts 2 Architecture. [En línea] http://www.roseindia.net/struts/struts2/struts-2-architecture.shtml. 2009. [6]. Eclipse. [En línea] www.eclipse.org/. 2009. [7]. Escalona, María. Metodologías para el desarrollo de sistemas de información global. Universidad de Sevilla, 2001. [8]. Extreme Programming. [En línea]. http://www.extremeprogramming.org. 2009. [9]. Iacono, Matías S. Conceptos básicos para el Desarrollo sobre Dispositivos Móviles. Microsoft Corporation, 2004. [10]. JasperReports Highlights. [En línea] http://jasperforge.org/uploads/publish/jasperreportswebsite/trunk/highlights.html. 2009. [11]. JasperReports Tutorial. [En línea] http://jasperforge.org/website/jasperreportswebsite/trunk/tutorial.html. 2009. [12]. JDKTM 5.0 Documentation. [En línea] http://java.sun.com/j2se/1.5.0/docs/index.html. 2009. [13]. Jeffries, Ronald E. Xprogramming.com A agile software development resource. [En línea] 2009. http://www.xprogramming.com/xpmag/whatisxp.htm. 2009. [14]. Joyanes, Luis. Programación en Java2. Madrid : Mc Graw Hill, 2002. [15]. Microsoft. http://msdn.microsoft.com/es-es/library. 2007. [16]. Microsystems, Sun. JAVA Plataform Technology for connected devices. 2005. [17]. Model-View-Controller. [En línea] http://java.sun.com/blueprints/patterns/MVC.html. 2009. [18]. O'Brien, James. Sistemas de Información Gerencial. Mc Graw Hill, 2004. 120 Facultad de Ciencias. Escuela de Computación Referencias [19]. Olivares, Juan Carlos. Ingeniería de Software en Dispositivos Móviles. Instituto Tecnológico de Morelia, 2008. [20]. Pérez, Royder Herrera. Software orientado a la Web para el Manejo de Inventario. Fundación Instituto Tecnológico de Comfenalco, 2006. [21]. PostgreSQL. [En línea]. http://www.postgresql.org. 2009. [22]. Ponjuan, Dante Gloria. Gestión de Información en las Organizaciones. CECAPI, 1998. [23]. Relational Persistence for Java and .NET. [En línea] https://www.hibernate.org/. 2009. [24]. Resin Application Server. [En línea] http://www.caucho.com/products/. 2009. [25]. Resin documentation. [En línea] http://www.caucho.com/resin/doc/. 2009. [26]. Resin Web Server. [En línea] http://www.caucho.com/resin-3.0/install/httpd.xtp. 2009. [27]. Struts. [En línea] http://struts.apache.org/1.x/. 2009. [28]. What is PostgreSQL? [En línea] http://www.postgresql.org/docs/8.3/static/intro-whatis.html. 2009. [29]. Yourdon, E. Análisis y Diseño Estructurado. Yourden Press, 1990.