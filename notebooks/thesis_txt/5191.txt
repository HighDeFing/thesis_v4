Universidad Central de Venezuela Facultad de Ciencias Escuela de Computación Forma (0) APLICACIÓN WEB PARA LA GESTIÓN ACADÉMICA-ADMINISTRATIVA DE LA EDUCACIÓN CONTINUA CASO DE ESTUDIO: CENTRO DE INNOVACIÓN Y EMPRENDIMIENTO PARA EL USO DE TECNOLOGÍAS EN EDUCACIÓN DE LA UNIVERSIDAD DE LOS ANDES Trabajo Especial de Grado Presentado ante la Ilustre Universidad Central de Venezuela Por los Bachilleres Flor Alicia Afonzo Perdrieau C.I. V-19.532.485 Abraham Efraín Díaz Serrano C.I. V-19.659.153 Para optar al título de Licenciado en Computación Profa. Yosly Hernández-Bieliukas Prof. Raymond Marquina (ULA) Caracas, 02 / 06 / 2016 ii Dedicatoria A mis padres por su apoyo incondicional, a mis abuelos por brindarme siempre su ayuda y a José Abraham por estar siempre presente. ¡Los Amo! iii Dedicatoria A toda mi familia por su apoyo constante e incondicional, a mis amigos y mi compañera de tesis. Thank you! iv Agradecimientos Primeramente agradecida con Dios por haberme guiado, dado la paciencia y sabiduría necesaria para cumplir esta gran meta. A mis padres por brindarme su apoyo, así sea a distancia, siempre han estado presentes y les estoy infinitamente agradecida porque sin ustedes esto no hubiera sido posible. A mis abuelos que siempre me motivaron y guiaron en esta larga ruta, aunque estés allá arriba abuelo, siempre serás un ejemplo a seguir. A José Abraham Martínez por siempre estar presente y apoyarme en todas mis metas, sin tu amor y paciencia la ruta hasta esta gran meta no hubiese sido fácil. A mi hermano, su esposa y mi sobrina bella, aunque la distancia nos separe siempre me han brindado su apoyo, Romy eres mi inspiración. A toda mi familia y amigos aunque no todos estén cerca siempre tienen un pensamiento para mí, gracias. A mis compañeros de clase Iraima, María Gabriela, Andrea, Corina, Elizabeth, Junior, Adrián, Manuel, Emmanuel, Jhony, Carlos, Diego, Gary, Jesús, Alejandro, Iván, a todos por siempre brindar su ayuda cuando la necesitaba por las risas compartidas, por haber hecho este camino agradable. A mis tutores Yosly Hernández y Raymond Marquina por haber confiado en mí, para el desarrollo de este TEG, por su apoyo y ayuda cuando la necesitaba. ¡Gracias profesores! Y finalmente a mi compañero de este TEG, por haberme tenido paciencia, por su apoyo, su trabajo, perseverancia y amistad. ¡Lo logramos compadre! v Agradecimientos Agradezco Dios por darme cada día de vida. Agradezco a mi UCV por brindarme los conocimientos que poseo y estarán presentes en mí para toda la vida. Agradezco a mi familia por apoyarme todos los días desde que inicié mi carrera universitaria y por toda la ayuda emocional y económica. Estoy agradecido con todos mis amigos y compañeros de la universidad, los que siempre me brindaban una mano cuando tenía inconvenientes con las asignaturas y corregían mis desaciertos, a aquellos que siempre estaban solo para tener conversaciones enriquecedoras y divertidas. Agradezco a mis amigos Yiste, Miki, Barbara, Lale, Doris, Katha, y a todas aquellas personas que han entrado en mi vida para hacerme crecer como persona sin juzgarme por ser quien soy y brindándome su amistad y compañía. Agradezco a mis tutores por el apoyo brindado para el logro de este Trabajo Especial de Grado. Merci Coma pour ton amitié, ta patience, tes conseils et ta motivation. J’n’aurais pas pu finir cette thése sans toi. Cimer mille fois!!! Ce l’abbiamo fatta!! vi Universidad Central de Venezuela Facultad de Ciencias Escuela de Computación Aplicación Web para la gestión académica-administrativa de la educación continúa Caso de estudio: Centro de Innovación y Emprendimiento para el Uso de Tecnologías en Educación de la Universidad de los Andes Autores: Br. Flor Alicia Afonzo Perdrieau Br. Abraham Efraín Díaz Serrano Tutores: Profa. Yosly Hernández-Bieliukas Prof. Raymond Marquina (ULA) Fecha Resumen En el Centro de Innovación y Emprendimiento para el Uso de Tecnologías en Educación de la Universidad de Los Andes, los procesos académicos y administrativos son realizados de manera manual con uso de tecnologías dispersas o diferentes, consumiendo tiempo valioso, provocando fallas y falta de comunicación, lo que ralentiza el acceso y uso de la información en el momento oportuno. Teniendo presente lo antes mencionado, el objetivo de este Trabajo Especial de Grado era desarrollar una aplicación web que agilice los procesos académicos-administrativos, brindando una solución a las deficiencias planteadas. Para su desarrollo se utilizaron diferentes tecnologías web de libre acceso para su uso, entre las cuales se encuentran: HTML5; CSS3; Javascript; Jquery; Postgresql, como Sistema Manejador de Bases de Datos; Laravel 5; y, Boostrap, como framework’s web para el desarrollo de la aplicación y su creación visual, respectivamente. La metodología ágil utilizada para el desarrollo de la aplicación web fue Agilus, la cual permitió la construcción práctica de la aplicación por medio de las etapas que la conforman, llevando a cabo varias iteraciones de la misma, aplicando pruebas para corroborar que se obtuvo el producto deseado, obteniendo resultados satisfactorios. Palabras claves: Aplicación, web, académicas, administrativas, Metodología Agilus. vii Índice General Índice de Figuras ............................................................................................................................ x Índice de Tablas .......................................................................................................................... xiii Índice de Anexos .......................................................................................................................... xiv Introducción .................................................................................................................................... 1 Capítulo I. Problema de Investigación ......................................................................................... 3 1.1 Contexto de investigación ................................................................................................. 3 1.2 Planteamiento del problema .............................................................................................. 5 1.3 Objetivo General ................................................................................................................ 8 1.4 Objetivos específicos ......................................................................................................... 8 1.5 Justificación ....................................................................................................................... 8 1.6 Metodología de Desarrollo .............................................................................................. 10 1.7 Antecedentes .................................................................................................................... 12 1.8 Alcance ............................................................................................................................ 13 Capítulo II. Marco Conceptual ................................................................................................... 14 2.1 Gestión académica-administrativa ................................................................................... 14 2.2 Aplicaciones web ............................................................................................................. 15 2.3 Arquitectura de una aplicación web ................................................................................ 17 2.4 Patrón de diseño Modelo Vista Controlador (MVC)....................................................... 20 2.5 Accesibilidad y usabilidad en una aplicación web .......................................................... 21 2.6 Despliegue de aplicaciones web en dispositivos móviles ............................................... 24 2.7 Marco Jurídico para los programas informáticos ............................................................ 26 2.8 Tecnologías web .............................................................................................................. 26 2.8.1 Tecnologías del lado del cliente ............................................................................... 26 2.8.1.1 Lenguaje de Marcado de Hipertexto ................................................................. 27 2.8.1.2 Hojas de Estilo en Cascada (CSS) .................................................................... 27 2.8.1.3 Javascript/Jquery ............................................................................................... 29 2.8.2 Tecnologías del lado del servidor ............................................................................. 30 2.8.2.1 Lenguaje Preprocesador de Hipertexto ............................................................. 30 viii 2.8.2.2 Laravel .............................................................................................................. 31 2.8.3 Sistema Manejador de Bases de Datos ..................................................................... 33 2.8.3.1 PostgreSQL ....................................................................................................... 34 2.8.4 Servidor web Apache ............................................................................................... 35 2.8.5 Software de Control de versiones Git (SVC) ........................................................... 35 2.8.6 GitHub ...................................................................................................................... 36 2.8.7 Licenciamiento Creative Commons ......................................................................... 37 Capítulo III – Marco Aplicativo ................................................................................................. 39 3.1 Fase I: Requisitos............................................................................................................. 39 3.1.1 Tormenta de ideas .................................................................................................... 39 3.1.2 Cuestionarios y Encuestas ........................................................................................ 39 3.1.3 Perfil de Usuarios ..................................................................................................... 45 3.1.4 Listado de requerimientos funcionales y no funcionales ......................................... 47 3.2 Fase II: Análisis ............................................................................................................... 49 3.2.1 Guía de Estilo ........................................................................................................... 49 3.2.2 Modelado de Casos de Uso ...................................................................................... 53 3.2.3 Modelo de Objetos del Dominio .............................................................................. 55 3.2.4 Diseño Lógico y Físico de la Base de Datos ............................................................ 56 3.2.5 Plataforma de Desarrollo .......................................................................................... 59 3.3 Fase III: Prototipaje ......................................................................................................... 60 3.2.1 Prototipos de Interfaz ............................................................................................... 61 3.4 Fase IV: Pruebas .............................................................................................................. 75 3.4.1 Cuestionario ............................................................................................................. 75 3.4.2 Pruebas Cross-Browser ............................................................................................ 76 CAPITULO IV – Resultados ....................................................................................................... 78 4.1 Página Principal ............................................................................................................... 78 4.2 Menú de funcionalidades ................................................................................................. 81 4.3 Módulo Administrativo ................................................................................................... 85 4.3.1 Gestión de usuarios. ................................................................................................. 85 4.3.2 Gestión de actividades y webinars. .......................................................................... 89 ix 4.3.3 Gestión de Roles. ...................................................................................................... 95 4.3.4 Gestión de inscripción. ............................................................................................. 96 4.3.5 Gestión de pagos ...................................................................................................... 96 4.4 Módulo Académico ......................................................................................................... 97 4.5 Módulo Participante ...................................................................................................... 100 Conclusiones ............................................................................................................................... 102 Recomendaciones ....................................................................................................................... 103 Referencias Bibliográficas ......................................................................................................... 104 Anexos ......................................................................................................................................... 131 x Índice de Figuras Figura 1. Estructura organizativa del CIETE. .................................................................................. 4 Figura 2. Diagrama de flujo del proceso de inscripción y prosecución de una cápsula o diplomado. ................................................................................................................................ 6 Figura 3. El método AgilUs: etapas, actividades y artefactos. ....................................................... 11 Figura 4. Comunicación en la Arquitectura Cliente/Servidor. ....................................................... 19 Figura 5. Patrón de diseño MVC. ................................................................................................... 21 Figura 6. Comparación entre las distintas versiones del Lenguaje de programación CSS con respecto al soporte en los navegadores web. .......................................................................... 28 Figura 7. Funcionamiento de un programa escrito en lenguaje de servidor PHP. ......................... 31 Figura 8. Compatibilidad de la Licencia Pública General con otras licencias. .............................. 38 Figura 9. Nube de palabras. ............................................................................................................ 39 Figura 10. Estadística de la pregunta 1. ......................................................................................... 42 Figura 11. Estadística de la pregunta 2. ......................................................................................... 43 Figura 12. Estadística de la pregunta 3. ......................................................................................... 43 Figura 13. Estadística de la respuesta 4. ......................................................................................... 44 Figura 14. Caso de uso: Nivel 0. .................................................................................................... 53 Figura 15. Casos de uso: Nivel 1. ................................................................................................... 54 Figura 16. Casos de uso: Actor Participante. ................................................................................. 54 Figura 17. Modelo de objetos del dominio. ................................................................................... 56 Figura 18. Diseño lógico y físico de la Base de Datos. .................................................................. 57 Figura 19. Plataforma Tecnológica de la aplicación web del centro CIETE. ................................ 59 Figura 20. Prototipo de baja fidelidad: Interfaz de Inicio. ............................................................. 61 Figura 21. Prototipo de baja fidelidad: Interfaz de perfil de un usuario. ....................................... 62 Figura 22. Prototipo de baja fidelidad versión dos (2). .................................................................. 63 Figura 23. Archivo database.php. ................................................................................................... 63 Figura 24. Carpeta Models ............................................................................................................. 64 Figura 25. Carpeta de las vistas. ..................................................................................................... 65 Figura 26. Carpeta Controladores .................................................................................................. 65 Figura 27. Permisos. ....................................................................................................................... 66 Figura 28. Roles. ............................................................................................................................ 67 xi Figura 29. Asignación de permisos a cada rol. .............................................................................. 67 Figura 30. Vista Notas. ................................................................................................................... 68 Figura 31. Resultados de la prueba: se mantiene un formato de una pantalla a otra. .................... 70 Figura 32. Resultados de la prueba: se evidencian palabras coloquiales y/o abreviaturas. ........... 70 Figura 33. Resultados de la prueba: permite al usuario personalizar la interfaz de usuario. ......... 71 Figura 34. Resultados de la prueba: se mantiene la interfaz simple, sencilla y organizada. .......... 71 Figura 35. Resultados de la prueba: provee asistencia cuando el usuario lo requiere. .................. 72 Figura 36. . Resultados de la prueba: reconocer en lugar de recordar. .......................................... 72 Figura 37. Resultados de la prueba: se evidencia el uso de indicadores visuales. ......................... 73 Figura 38. Resultados de la prueba: se utilizan metáforas adecuadas, y en lo posible, las metáforas estándares. .............................................................................................................. 73 Figura 39. Resultados de la prueba: se minimiza las posibilidades de cometer errores................. 74 Figura 40. Resultados de la prueba: existen avisos a las acciones del usuario. ............................. 74 Figura 41. Resultados de la prueba: las funciones del sistema están claramente visibles e identificables. .......................................................................................................................... 75 Figura 42. Resultados de la prueba de usabilidad. ......................................................................... 76 Figura 43. Página principal de la aplicación del CIETE. ............................................................... 78 Figura 44. Formulario de inscripción. ............................................................................................ 79 Figura 45. Botón para acceder a la aplicación ............................................................................... 80 Figura 46. Interfaz de acceso. ......................................................................................................... 80 Figura 47. Interfaz del proceso de cambio de contraseña. ............................................................. 81 Figura 49. Menú navegación rol Administrador. ........................................................................... 82 Figura 50. Menú navegación rol Coordinador. .............................................................................. 83 Figura 51. Menú navegación rol Profesor. ..................................................................................... 83 Figura 52. Menú navegación rol Participante. ............................................................................... 84 Figura 53. Interfaz de edición de datos de perfil. ........................................................................... 85 Figura 54. Interfaz de gestión de usuarios. ..................................................................................... 86 Figura 55. Botones para la gestión de usuarios .............................................................................. 86 Figura 56. Formulario de creación de usuario de tipo docente. ..................................................... 87 Figura 57. Formulario de creación de usuario de tipo participante. ............................................... 88 Figura 58. Ventana emergente para eliminar usuario. ................................................................... 88 xii Figura 59. Interfaz de gestión de actividades. ................................................................................ 89 Figura 60. Botones para la gestión de actividades y webinars. ...................................................... 90 Figura 61. Interfaz de gestión de webinars. ................................................................................... 90 Figura 62. Formulario de creación de actividad. ............................................................................ 91 Figura 63. Formulario de creación de webinar. ............................................................................. 91 Figura 64. Secciones de una actividad. .......................................................................................... 92 Figura 65. Lista de participantes inscritos en la actividad Diplomado 2. ...................................... 93 Figura 66. Lista de participantes para agregar en la actividad Diplomado 2. ................................ 93 Figura 67. Sección de descarga de la lista de participantes por sección de la actividad Diplomado. ................................................................................................................................................. 94 Figura 68. Documento descargado de la aplicación mostrando la lista de participantes de la sección B de la actividad Diplomado. ..................................................................................... 94 Figura 69. Lista de Roles existentes. .............................................................................................. 95 Figura 70. Vista para activar o desactivar una actividad o webinar de la inscripción. .................. 96 Figura 71. Vista de la lista de pagos realizados por los participantes. ........................................... 97 Figura 72. Notas de un alumno de la actividad Diplomado 1. ....................................................... 98 Figura 73. Formulario para agregar una nueva nota. ..................................................................... 98 Figura 74. Informe académico del módulo 1 del grupo A. Parte 1. ............................................... 99 Figura 75. Informe académico del módulo 1 del grupo A. Parte 2. ............................................. 100 Figura 76. Vista de las notas obtenidas por un alumno en la actividad Diplomado 1. ................ 101 Figura 77. Vista de los pagos realizados de la actividad Diplomado 1. ....................................... 101 xiii Índice de Tablas Tabla 1 ............................................................................................................................................ 40 Tabla 2 ............................................................................................................................................ 40 Tabla 3 ............................................................................................................................................ 45 Tabla 4 ............................................................................................................................................ 45 Tabla 5 ............................................................................................................................................ 50 Tabla 6 ............................................................................................................................................ 50 Tabla 7 ............................................................................................................................................ 50 Tabla 8 ............................................................................................................................................ 52 Tabla 9 ............................................................................................................................................ 55 Tabla 10 .......................................................................................................................................... 55 Tabla 11 .......................................................................................................................................... 69 Tabla 12 .......................................................................................................................................... 77 xiv Índice de Anexos Anexo A ....................................................................................................................................... 107 Anexo B ....................................................................................................................................... 127 Anexo C ....................................................................................................................................... 128 Anexo D ....................................................................................................................................... 130 Anexo E ....................................................................................................................................... 131 1 Introducción A partir de la década de los 90’s, Internet se ha convertido en un medio masificador de información abarcando todo tipo de sectores de la sociedad y uno de los que se ha aprovechado de esta cualidad es el educativo. Los centros educativos, institutos, organizaciones y universidades han tomado la tarea de adoptar el uso de tecnologías web para agilizar sus procesos internos con el fin de ofrecer un mejor servicio, tanto a sus estudiantes como al público en general. La Universidad de los Andes (en lo sucesivo ULA), específicamente el Centro de Innovación y Emprendimiento para el uso de Tecnologías en Educación (CIETE) de la ULA se encuentra en la necesidad de aprovechar dichas tecnologías, ya que algunos de sus procesos no se encuentran completamente automatizados, ralentizando su funcionamiento por realizar tareas de manera manual. En un principio, el proceso de inscripción de los participantes era presencial, debiendo el personal realizar esta tarea con escasos medios computarizados. Posteriormente, se consideró como iniciativa comenzar un proceso para minimizar la participación humana, utilizada actualmente. Por tal motivo, se planteó el siguiente Trabajo Especial de Grado, a los fine de desarrollar una aplicación web para la gestión académica-administrativa del centro CIETE. De esta manera, se incorporan los beneficios de las Tecnologías de Información y Comunicación (en lo sucesivo TIC) para solventar las deficiencias identificadas. Este trabajo de investigación constó de cuatro (4) capítulos. En el primer capítulo se llevó a cabo la propuesta de Trabajo Especial de Grado, centrándose en el contexto de la investigación, planteamiento inicial del problema, evaluación de los objetivos generales y específicos, justificación de dicho trabajo, alcance y metodología utilizada para el desarrollo del mismo. Luego, en el segundo capítulo se definió la gestión académica-administrativa junto con sus características; se expuso el origen de las aplicaciones web, características, ventajas y 2 desventajas, accesibilidad y usabilidad en una aplicación web. Además, se explicaron las tecnologías web (del lado del cliente y del lado del servidor), herramientas de software y licencias libres, seleccionadas para la realización del aplicativo, basados en la de Ley de Infogobierno. Seguidamente, en el tercer capítulo se llevó a cabo el desarrollo de la metodología seleccionada, en este caso Agilus, desarrollando las actividades implicadas en sus cuatro etapas. Comenzando por los requisitos, etapa en la cual se recopiló la información por medio de actividades como encuestas y formularios. Igualmente, se realizó el análisis para la obtención de casos de usos, esquema de la base de datos, modelo de dominio, entre otras actividades inherentes en la etapa. De igual manera, se realizaron las etapas de prototipaje y entrega. Finalmente, en el cuarto y último capítulo se mostraron los resultados obtenidos por medio de la descripción de las interfaces de la aplicación directamente, las diferentes secciones del sistema que permitieron un perfeccionamiento de la gestión académica-administrativa del CIETE. 3 Capítulo I. Problema de Investigación En el presente capítulo se expuso el contexto de investigación, el planteamiento del problema en los procesos de inscripción y la prosecución de estudios que se originan en ellos. A su vez se formularon el objetivo general y los objetivos específicos de este Trabajo Especial de Grado y se describió la importancia, el impacto y alcance del mismo. 1.1 Contexto de investigación Una gran parte de las universidades nacionales e internacionales ofrecen actividades académicas de aprendizaje a distancia y presenciales para su comunidad y para toda persona que lo desee. La inscripción a estas actividades se hace por medio de una página web, permitiendo a cualquier persona la posibilidad de inscribirse en ellas sin importar el lugar en el que se encuentre y sin tener que dirigirse a las instalaciones físicas de la unidad educativa. De esta forma mejoran su gestión académica y administrativa, es decir que perfeccionan las tareas relacionadas con profesores y estudiantes, así como las tareas que se encargan de dar soporte a estos últimos a lo largo de su aprendizaje. La ULA forma parte de estas instituciones que ofrecen diferentes tipos de actividades educativas. De acuerdo con una consulta realizada a la página web de la universidad, es descrita de la siguiente manera: “Es una universidad autónoma que comprende más de trecientos sesenta mil metros cuadrados distribuidos a lo largo de los tres estados Andinos, además de las extensiones de la Facultad de Medicina que se encuentran en las ciudades de Guanare, Valle de La Pascua y Barinas. La universidad se compone por once facultades, tres núcleos y una extensión, las clases impartidas abarcan diferentes áreas de conocimiento, tales como: Ciencias Básicas, Ingeniería, Arquitectura y Tecnología, Ciencias del Agro y del Mar, Ciencias de la Salud, Ciencias de la Educación, Ciencias Sociales, Humanidades, Letras y Artes. Se dictan clases a nivel de pregrado y postgrado, además son complementadas con programas de investigación, cultura y extensión.” (http://www.ula.ve/institucion/la-universidad/la-universidad- de-los-andes) CIETE es un centro de la ULA, que tiene como objetivo impartir actividades académicas virtuales que permitan fortalecer los conocimientos de los participantes a través de las http://www.ula.ve/institucion/la-universidad/la-universidad-de-los-andes http://www.ula.ve/institucion/la-universidad/la-universidad-de-los-andes 4 Tecnologías de Información y Comunicación (TIC), y fomentar el desarrollo de proyectos educativos que tengan impacto a nivel nacional e internacional. La organización está integrada por sus fundadores y colaboradores, profesores de la ULA y de la Universidad Central de Venezuela (en lo sucesivo UCV), quienes forman parte del personal docente de las escuelas de Medios Audiovisuales, Idiomas Modernos y Computación, de dichas Casas de Estudio, siendo el profesor Raymond Maquina su director. (http://www.cieteula.org/p/estructura.html) Su estructura organizativa se muestra en la siguiente figura 1: Figura 1. Estructura organizativa del CIETE. Fuente: Organigrama del Centro de Innovación y Emprendimiento para el uso de Tecnologías en Educación, recuperado de http://www.cieteula.org/p/estructura.html, 2015. El centro se encarga de dos grandes procesos: la gestión administrativa y la prosecución de las actividades impartidas por el CIETE. La gestión se puede definir como un conjunto de acciones o actividades que hacen posible la realización de un proyecto o una operación, por otra parte la administración, consiste en un proceso que permite predecir, organizar, coordinar y ejecutar acciones para lograr un objetivo, por ende se puede decir que la gestión administrativa del CIETE es un proceso que es realizado http://www.cieteula.org/p/estructura.html http://www.cieteula.org/p/estructura.html 5 por una o varias personas que permite organizar y planificar las tareas para poder agilizar el proceso de inscripción, generar listas de alumnos inscritos, verificar los pagos realizados, emitir constancias de estudios y los certificados de aprobación. La prosecución de las actividades impartidas por el CIETE consiste en el seguimiento de todos los procesos inmersos a lo largo de estas actividades. La prosecución permitirá:  Llevar un control de notas de los alumnos.  Proveer a los profesores de las listas de alumnos inscritos.  Emitir certificados de aprobación a los alumnos que hayan culminado las actividades. La gestión y administración del CIETE, generan actividades que al realizarlas de forma manual o con las herramientas no adecuadas generan una mayor inversión de los recursos (tiempo-físico), menor control y deficiencia en la capacidad de respuesta. De lo antes expuesto, al aplicar una herramienta tecnológica que se adapte a las necesidades actuales de la gestión y administración del CIETE, proporcionará un mejor control y efectividad en el manejo de los recursos y en la capacidad de respuesta. 1.2 Planteamiento del problema En los últimos dos (2) años, el CIETE ofreció diferentes actividades académicas dentro de las cuales se destacan: las capsulas, los diplomados y los webinars, dictados en la modalidad a distancia, los cuales pueden ser cursados por toda persona interesada con un título de pregrado, mayor de edad y que se desempeñe en cualquier área de conocimiento. El centro desea seguir con estas actividades para contribuir al desarrollo y fortalecimiento de una educación de calidad, en el año en curso (2016) cuenta con una página web organizada de forma cronológica (comúnmente llamada Blog) en donde se puede obtener la información de la organización y las actividades académicas que ofrece. Sin embargo, no posee las funcionalidades para la realización de la gestión administrativa y académica, implicando que el proceso de inscripción sea ralentizado, tanto para los futuros participantes como para los miembros del CIETE. 6 Para ejemplificar lo mencionado con anterioridad, se presenta el proceso de inscripción actual para una cápsula o un diplomado en línea: Figura 2. Diagrama de flujo del proceso de inscripción y prosecución de una cápsula o diplomado. Fuente: Afonzo, F. y Díaz, A. (2016). En la figura 2 se puede observar que el proceso de inscripción utiliza diferentes tecnologías o mecanismos de forma descentralizada, ya que no existe un módulo específico para dicho fin. El formulario a ser llenado, fue elaborado con la herramienta Google Forms, ésta fue de gran ayuda, ya que permite realizar formularios de forma fácil y rápida. La información obtenida de los usuarios que completaron el formulario se ve reflejada en un archivo con formato de hojas de cálculo, esta información debe ser leída atentamente por la secretaria del CIETE para evaluar los datos y validar el número de depósito bancario. Una vez validada la inscripción debe enviar un correo de confirmación con los datos necesarios para ingresar a la plataforma Moodle, donde se dictaran las actividades en línea. Este proceso de validación tiene una duración de aproximadamente 72 horas. Para el inicio de las actividades, el personal administrativo debe realizar de forma manual, en hojas de cálculo, las listas de los participantes de cada una de ellas. Luego de finalizado cada módulo de la actividad, los profesores deben generan informes académicos resumiendo lo 7 realizado durante el mismo, al igual que agregar la nota final obtenida por cada participante en dicho módulo. Finalmente esta información debe ser guardada en una carpeta compartida mediante la herramienta en línea Google Drive. Para concluir el proceso de gestión académica y administrativa, la secretaria verifica en el informe resumen generado por el profesor, los participantes aprobados y genera el respectivo certificado de aprobación de la actividad y lo envía al participante vía correo electrónico. Tal como fue descrito anteriormente, el proceso genera una inversión de tiempo representativa para la coordinación del centro, que se encarga de llevar diferentes tareas de forma manual. Los datos enviados por los usuarios son revisados individualmente, se verifica el pago por medio del número de depósito o transferencia y luego se realiza una lista de los alumnos de los cuales el pago se hizo efectivo con la ayuda de un programa de hojas de cálculo. Finalmente la coordinación debe enviar un correo a los alumnos de esta última lista para confirmar su inscripción. Por otra parte, los profesores deben generar un informe académico en donde ingresan la información del tutor, la información básica de la actividad, el registro académico de los participantes: datos personales, nota final del módulo culminado, los resultados académicos de la actividad; estadísticas de los participantes e información relevante como aspectos positivos y negativos para finalmente ser guardado en una carpeta compartida en Google Drive. Por último como se mencionó con anterioridad, la secretaría del centro realiza una comparación manual de los participantes que aprobaron las distintas actividades académicas y se encarga de generar el respectivo certificado de aprobación y de enviarlo a cada alumno. El proceso para realizar las tareas antes descritas, no permite el uso adecuado de las tecnologías ralentizando todas las actividades inmersas en la gestión académica y administrativa del CIETE. Con base a lo planteado, se observan disimiles problemas en el CIETE, estos son:  Uso de diferentes tecnologías de forma descentralizada para el intercambio de información entre la secretaria, los profesores, el coordinador y los participantes. 8  El extravío o pérdida de información, debido al chequeo manual de información desde las distintas fuentes.  La inversión de tiempo que se genera por la descentralización de la información y la realización de las actividades manualmente. De la problemática planteada se genera la siguiente interrogante: ¿Qué mecanismo se debe implementar para mejorar el proceso de inscripción y el sistema existente y de esta manera facilitar la gestión de las actividades académicas que ofrece CIETE- ULA? 1.3 Objetivo General Desarrollar una aplicación web para la gestión académica-administrativa del proceso de educación continua del CIETE-ULA. 1.4 Objetivos específicos  Identificar los requerimientos funcionales y no funcionales.  Determinar la arquitectura de la aplicación.  Diseñar las interfaces de usuario de la aplicación.  Crear el modelo lógico y físico de la base de datos.  Implementar la aplicación y poner en producción.  Aplicar pruebas de usabilidad. 1.5 Justificación Por la problemática antes expuesta surge la necesidad de desarrollar e incorporar en el CIETE una aplicación web que permita gestionar los procesos existentes, abarcando la etapa inicial con la inscripción de las actividades académicas hasta el final con la carga de notas y la emisión de certificados de culminación de las actividades. 9 Renovando la ejecución de las tareas administrativas se logra que los usuarios tengan una mejor experiencia al realizar las actividades diarias de manera sencilla y eficiente, haciendo uso de la tecnología. Las inscripciones a actividades académicas presenciales o en línea son unas de las ventajas que ha generado el internet, muchas universidades e institutos en el mundo las ofrecen a sus estudiantes y para toda persona que lo desee, estas son impartidas en las instalaciones de los planteles o dictadas a distancia. La mayoría de las universidades e institutos poseen una aplicación web para inscribirse, que permite, como se ha mencionado anteriormente, llenar un formulario con la información del participante y cargar los archivos necesarios para formalizar la inscripción. El CIETE es un centro de emprendimiento, investigación e innovación ampliamente reconocido que tiene como misión difundir información a la mayor cantidad de personas posibles referente a las actividades disponibles, adicionalmente desea permitir a los profesores el acceso a las notas y listas de sus alumnos, facilitando la administración de las actividades. El desarrollo del presente Trabajo Especial de Grado permitirá la obtención de mejoras novedosas a través de las TIC, generando un impacto positivo en su gestión académica- administrativa. Los beneficios que se obtendrán son los siguientes:  Contribuir al ahorro del tiempo invertido, dedicación y esfuerzo por parte de la administración, los profesores e incluso los participantes en la ejecución de las actividades que corresponden a cada uno de ellos, agilizando la realización las tareas.  Minimizar los posibles errores que puedan ocurrir durante las actividades realizadas manualmente.  Reducir significativamente la pérdida de información y el gasto de materiales como papel, tinta, entre otros.  Planificar el tiempo de inicio y el tiempo final de las actividades académicas.  Llevar un control de los participantes inscritos en los diplomados, las cápsulas y los webinars. 10  El potencial participante no tendrá que realizar distintas búsquedas en la página informativa del CIETE para inscribirse, sino que se centralizará en un solo lugar.  La información sensitiva del CIETE se encontrará centralizada en una sola base de datos, facilitando la distribución de la información. Los beneficios antes descritos permitirán que el proceso de inscripción de actividades académicas en el CIETE se lleve a cabo de manera simple, rápida y eficiente para todas las personas involucradas en este proceso. Igualmente, mediante este trabajo se presenta una solución novedosa que satisface las necesidades de los participantes, profesores y coordinadores; y se minimiza el porcentaje de error que pueda existir al llevar a cabo tareas manuales, apoyándose en las utilidades que ofrecen las tecnologías web y las herramientas de software libre. 1.6 Metodología de Desarrollo Para esta investigación se utilizó una adaptación del Método AgilUs, que se basa en el concepto de usabilidad; es decir, se fundamenta en el análisis centrado en las actividades del usuario y en la participación de especialistas, con el objetivo de evolucionar el software, a fin de que éste alcance el mayor grado de usabilidad una vez culminado su desarrollo. Este método por heredar características de una metodología ágil permite que la documentación requerida sea mínima y acorta el tiempo de desarrollo del proyecto, por esta razón, la adaptación realizada contempla los aspectos necesarios que aseguran la productividad de la aplicación. El Método AgilUs busca proporcionar un conjunto de actividades organizadas para construir en el diseño de interfaces de usuario durante el desarrollo de un producto de software. El proceso de desarrollo de software engloba las actividades de requisitos, análisis, prototipaje y entrega; así como las evaluaciones de usabilidad correspondientes a cada etapa del proceso. Se realizan en ciclos iterativos hasta alcanzar el producto. En cada etapa del proceso de desarrollo de software, se incluyen actividades propias para la construcción de la usabilidad. En la siguiente figura 3 se pueden apreciar las cuatro (4) fases que componen la metodología propuesta para agilizar la implementación de la aplicación web: 11 Figura 3. El método AgilUs: etapas, actividades y artefactos. Fuente: Acosta, A. AgilUs: Construcción ágil de la Usabilidad (2011). A continuación se describen las etapas de este método, destacando que el producto final puede ser posteriormente modificado a través de un mantenimiento correctivo y/o evolutivo, que no está contemplado como parte del método (Acosta, 2011):  Requisitos: se realiza el análisis global del problema a solucionar, se estudian productos similares existes, se genera un perfil de usuario, y se define la lista de requerimientos a desarrollar. Esta etapa es importante en el desarrollo del software, ya que un mal análisis de requisitos traería como consecuencia un software que no cumple con las necesidades del usuario.  Análisis: se lleva a cabo el análisis de la solución a desarrollar, se emplean diagramas de casos de uso y modelo de objetos del dominio, siguiendo la notación UML, para definir las funcionalidades que tendrá el producto a desarrollar.  Prototipaje: se implementa un prototipo rápido de la interfaz de usuario a partir de los patrones de interacción, el cual va evolucionando hasta convertirse en el producto final, se genera la guía de estilo, y se realizan evaluaciones de usabilidad apropiadas a esta etapa: las evaluaciones heurísticas y las listas de comprobación. 12  Entrega: se aplican las pruebas al sistema para certificar que la aplicación desarrollada sea un software usable y sin errores, finalmente se pone en producción la aplicación. Este método fue el seleccionado para el desarrollo del Trabajo Especial de Grado, ya que permite la evolución del producto de software en etapas incrementales e involucrando al usuario desde el inicio hasta el final. Además, los aspectos de usabilidad son el eje central del método AgilUs lo que aumenta la interacción con el usuario abarcando los aspectos del desarrollo de aplicaciones web siguiendo los lineamientos de la Interacción Humano-Computador y la Ingeniería del software, procurando cumplir con las buenas prácticas. También, se destaca el cambio que se aplican a los requerimientos iniciales del producto de software a desarrollar, los cuales van cambiando para adaptarse a las exigencias del usuario. 1.7 Antecedentes Como referencia, se tuvo el antecedente realizado por el Licenciado Daniel Moros, en su Trabajo de Grado presentado en el año 2011, que llevo por nombre “Desarrollo de un Módulo de Administración para apoyar el Proceso de Gestión Académica con el fin de agilizar la planificación, coordinación y gestión de los cursos de idiomas impartidos por la Escuela de Idiomas Modernos de la Universidad Central de Venezuela.” El sistema desarrollado por Moros, consistió en los siguientes pasos para el proceso de inscripción:  El usuario ingresa el día y a la hora fijados en la página web de la Escuela de Idiomas Modernos de la Facultad de Humanidades y Educación de la Universidad Central de Venezuela, y se preinscribe en el curso de su elección. El sistema genera una planilla con los datos personales ingresados por el usuario.  El usuario debe descargar la planilla y realizar el depósito para el pago del curso con el monto indicado.  Luego, debe dirigirse a la oficina de recepción de documentos con la planilla y el voucher bancario a los fines de validar la inscripción y posteriormente el inicio del curso.  Finalizado el curso, el profesor dispone de un módulo para la gestión de notas de los estudiantes. 13  Existe una vista en la cual los estudiantes pueden ver su record de notas de cada nivel cursado. Este trabajo se relaciona con la investigación realizada, ya que propone una idea de cómo abordar la gestión académica-administrativa de la inscripción de actividades y una descripción detallada del desarrollo de cada etapa de la metodología seleccionada. Además, propone un flujo de los procesos similares a los del centro CIETE. 1.8 Alcance La aplicación web permite la gestión académica-administrativa del CIETE. Está dirigida al coordinador, participantes y profesores del mencionado centro. Existen módulos especializados para cada rol de la aplicación y estos pueden realizar las actividades que les permita la permisología. Es visible en dispositivos móviles bajo los sistemas operativos: iOS y Android sin importar su dimensión de pantalla. Provee un entorno para el desarrollo de futuros módulos, los cuales pueden ser agregados sin alterar diseño visual de la aplicación web. 14 Capítulo II. Marco Conceptual En el siguiente capítulo, en primer lugar se definió la gestión académica-administrativa; se presentaron los conceptos asociados a las aplicaciones web, sus características principales, sus ventajas y desventajas; la arquitectura Cliente/Servidor, sus características, funcionamiento, ventajas y desventajas; y el patrón de diseño MVC (Modelo/Vista/Controlador), en los cuales se soporta. Y en segundo lugar, se describieron las tecnologías web tanto de lado cliente como del lado del servidor, herramientas de software y licencias que se utilizaron para patentar el producto de software. 2.1 Gestión académica-administrativa “La gestión es el proceso emprendido por una o más personas para coordinar las actividades laborales de otras personas, con la finalidad de lograr resultados de alta calidad que cualquier otra persona, trabajando sola, no podría alcanzar” (Crosby, Ivacevich, Lorenzi y Skinner, 1995, p. 12). Existen diversos tipos de gestión: financiera, empresarial, ambiental, entre otras. En particular, se mencionan los siguientes: a) En el contexto educativo, se define como “gestión académica al conjunto de procesos mediante los cuales se administran los diferentes componentes y subcomponentes curriculares que apoyan la práctica pedagógica en el continuo que permite construir y modelar el perfil deseable del estudiante.” (Inciarte, Marcano y Reyes, 2006, p. 223) b) En el contexto administrativo, se entiende como “un sistema abierto, flexible, dinámico y continuo, conformado por procesos, componentes, subcomponentes y principios de gestión que orientan, equilibran y hacen posible el desarrollo del currículo a través de la realización de acciones dentro de ciertas normas, valores y procedimientos …” (Inciarte, Marcano y Reyes, 2006, p. 230) La gestión académica permite coordinar, organizar y planificar los recursos que posea la institución en la prosecución del proceso de aprendizaje haciendo hincapié en la relación entre el profesor y el estudiante para el logro de los objetivos curriculares. 15 La gestión administrativa en una institución académica coordina, controla, organiza, planifica las actividades presentes en los procesos internos tales como dirección, evaluación, planificación, y organización; con el fin de racionalizar los recursos, los materiales, las finanzas según los objetivos formulados en un principio. Comparando dichas gestiones, la académica evoluciona con rapidez gracias al impacto novedoso de las tecnologías de la información dejando de lado la administrativa causando desajustes no deseados. Por lo tanto, la gestión académica-administrativa de una institución educativa permite la planificación, la organización, la coordinación y dirección de los recursos humanos, materiales y financieros atendiendo a las necesidades tanto educativas como administrativas con el fin de obtener un servicio de alta calidad. 2.2 Aplicaciones web La aplicación web es un conjunto de recursos Web que participan en el funcionamiento de la propia aplicación Web. Una aplicación web está compuesta:  componentes de servidores dinámicos: Servlets, JSPs  elementos Web estáticos como páginas HTML, imágenes, sonidos  componentes de cliente dinámicos: Applets, JavaBeans y clases. (Aumaille, 2002, p. 26) Este conjunto de componentes tanto estáticos como dinámicos necesitan un soporte lógico para coexistir y un canal de comunicación para ser transmitidos de un ente a otro. La siguiente definición sugerida por Luján (2002) “Una aplicación web es un tipo especial de aplicación cliente/servidor, donde tanto el cliente (el navegador, explorador o visualizador) como el servidor (el servidor web) y el protocolo mediante el que se comunican (HTTP) están estandarizados y no han de ser creados por el programador de aplicaciones.” Tomando en cuenta las definiciones sugeridas por los autores se puede concluir que una Aplicación Web es cualquier entidad digital que se compone de recursos web, los cuales son 16 transmitidos por medio de un protocolo a través de un servidor para luego ser desplegados en un navegador. Las aplicaciones web poseen características que las hacen populares al momento de desarrollar un proyecto, a continuación se describen las mismas (Peñafiel, 2015):  Existe un alto grado de desarrollo vía internet lo cual permite la actualización y mantenimiento de los componentes de las aplicaciones.  Utilizan componentes dinámicos que facilitan a los usuarios la interactividad con la aplicación.  Para su desarrollo se utilizan lenguajes interpretados como lo es javascript y sus extensiones logrando una interfaz accesible y usable para el usuario. A su vez, gracias a las características dinámicas e interactivas de las aplicaciones web se generan ventajas que ofrecen a las instituciones educativas portales web con los cuales es posible publicar información referente a las actividades académicas que en ellas se imparten. Entre las ventajas se tienen las siguientes (Luján, 2002):  Una ventaja primordial es permitir la actualización de los archivos que contienen la estructura, visualización y comportamiento de la aplicación web desde el servidor web en que reside, de esta forma se reduce el problema de gestionar el código del lado del cliente y del servidor.  Aunado a la ventaja anterior, es que se evita la gestión de versiones. Es decir, se evitan problemas con la inconsistencia de actualizaciones, ya que no existen clientes con distintas versiones de la aplicación.  Otra ventaja es que si la institución ya está usando Internet, no se necesita comprar ni instalar herramientas adicionales para los clientes.  Por último, existe independencia de plataforma. Para que una aplicación se pueda ejecutar en distintas plataformas, sólo se necesita disponer de un navegador para cada una de las plataformas, y no es necesario adaptar el código de la aplicación para cada una de las plataformas. 17 Las ventajas sugeridas por el autor se logran por medio de un sistema de control de versiones, el cual registra los cambios que se le aplican a una serie de archivos que son compartidos por varios desarrolladores actualizándolos constantemente. De esta forma se actualizan los archivos del lado del servidor lo cual será transparente para el cliente. Además, con la actualización constante de los lenguajes utilizados en el desarrollo web es posible ajustar los componentes de las aplicaciones web aumentando la interacción con los usuarios que posean versiones distintas de navegadores web presentes en el mercado tales como Google Chrome, Opera, Mozilla Firefox. Una de las desventajas que presentan las aplicaciones web es la constante dependencia que existe con Internet, por lo que si no existe una conexión con el servidor simplemente no se podrá acceder al contenido y este no se desplegará. Otra desventaja es la seguridad, es necesario que exista una lógica de programación que fortalezca la seguridad de la aplicación para evitar problemas como la inyección de sql para acceder a la base de datos. También, cabe mencionar la desventaja que existe en ciertas aplicaciones cuando se habla del contenido multimedia que estas pueden poseer, tales como reproductores de video y música, que pueden fallar por falta de algún plug-in que no se encuentre presente en el navegador del cliente. Por último, las aplicaciones web aportan la novedad de masificar la información permitiendo la integración de diversas tecnologías y herramientas de software, agilizar las tareas de los seres humanos que antes podrían tomar horas, permitir la centralización de la información, las mismas pueden ser visualizadas en cualquier dispositivo ya sea estático o móvil sin importar su dimensión, en fin, las aplicaciones web llegaron para quedarse por mucho tiempo. 2.3 Arquitectura de una aplicación web La arquitectura utilizada para el desarrollo de aplicaciones web es la conocida como Arquitectura Cliente/Servidor, la cual consiste en la comunicación entre un ente nombrado cliente (navegador web) que realiza peticiones por medio de un protocolo y a su vez un ente llamado servidor que espera las peticiones para luego responder y enviar las respuestas pertinentes realizadas por el cliente; (ver figura 4). 18 El cliente/servidor es una arquitectura de red en la que cada ordenador o proceso en la red es cliente o servidor. Normalmente, los servidores son ordenadores potentes dedicados a gestionar unidades de disco, impresoras, tráfico de red, datos o incluso aplicaciones, mientras que los clientes son máquinas menos potentes y usan los recursos que ofrecen los servidores. (Luján, 2002, p.39-40) La comunicación entre los entes antes mencionados se realiza por medio de un protocolo denominado Protocolo de Transferencia de Hipertexto, HTTP por sus siglas en inglés el cual es un protocolo genérico orientado a objetos que no mantiene la conexión entre transacciones (Berners-Lee, 1993). Ha sido especialmente diseñado para atender las exigencias de un sistema hipermedia distribuido como es el World-Wide Web. Esta arquitectura cumple con las siguientes características principales (Cliente-servidor, 2014):  El cliente mantiene un papel activo en la comunicación, debido a que inicia la comunicación a través de solicitudes  El cliente es quien espera y recibe respuestas del servidor  Un cliente puede comunicarse con más de un servidor de manera concurrente  El cliente es el componente del sistema que interactúa de manera directa con el usuario final, a través de una interfaz gráfica  El servidor permanece en espera de solicitudes, por lo tanto se considera que tiene un papel pasivo en la comunicación  Un servidor puede recibir y mantener la conexión con diversos clientes al mismo tiempo, sin embargo el número máximo de conexiones posibles es limitado  Es poco común que el servidor interactúe directamente con el usuario final 19 Figura 4. Comunicación en la Arquitectura Cliente/Servidor. Fuente: Afonzo, F y Díaz, A (2016). Existen variaciones de la arquitectura las cuales se logran separando la lógica del lado del servidor, basándonos en lo sugerido por Luján (2002) dichas variaciones son las siguientes:  Todo en un servidor: la lógica de negocio y la lógica de los datos más los datos se aloja solo en un servidor web que recibirá todas las peticiones de un cliente. Tecnologías del lado del servidor como ASP y PHP soportan este tipo de variación.  Servidor de datos separados: aquí la lógica del servidor se separa a su vez en dos, la lógica del negocio en el servidor principal y la lógica de datos junto con los datos en un servidor de base de datos. Las tecnologías del lado servidor que soportan esta variación son ASP y PHP.  Todo en un servidor, con servicio de aplicaciones: en esta variación se separa la lógica de negocio en un servicio de aplicaciones el cual gestionará los procesos relacionados a dicha sección, aunado a lo anterior se encuentra un servidor de base de datos que se encargará de la lógica de los datos. La tecnología del lado del cliente que soporta lo mencionado es JSP. Como se notó existen distintas variaciones para la arquitectura cliente-servidor básica, la cual diferirá en cada aplicación web que se desee desarrollar y cómo se implemente la lógica de negocio y la lógica de datos. A su vez, cada variación permite escalabilidad en los servidores ya que si se realizan cambios los mismos se harán por servidor y no en uno solo lo cual hace más engorroso el proceso de crecimiento y depuración de la aplicación web. 20 La principal ventaja de esta arquitectura es que facilita la separación de las funciones según su servicio, permitiendo situar cada función en la plataforma más adecuada para su ejecución. Además, presenta las siguientes ventajas (Luján, 2002):  Las redes de ordenadores permiten que múltiples procesadores puedan ejecutar partes distribuidas en una misma aplicación, logrando concurrencia de procesos.  Existe la posibilidad de migrar aplicaciones de un procesador a otro con modificaciones mínimas en los programas.  Se obtiene escalabilidad de la aplicación.  Posibilita el acceso a los datos independientemente de donde se encuentre el usuario. Sin embargo, la arquitectura presenta desventajas las cuales se pueden resumir en las siguientes:  Cuello de botella, ya que se reciben peticiones constantes que son procesadas por una cantidad limitada de servidores.  Peticiones continuas que son recibidas por distintos clientes que ocasiona lentitud en el servidor ralentizando las respuestas esperadas. 2.4 Patrón de diseño Modelo Vista Controlador (MVC) El patrón es un paradigma que divide las partes que conforman una aplicación en el Modelo, las Vistas y los Controladores, permitiendo la implementación por separado de cada elemento, garantizando así la actualización y mantenimiento del software de forma sencilla y en un reducido espacio de tiempo (Fernández y Díaz, 2012). Smalltalk fue uno de los primeros lenguajes en emplear este patrón de diseño el cual fue creado por el profesor Trygve Reenskaug al final de los años 70 (Deacon, 2013). Las características principales del patrón MVC están dadas por el hecho de que, el Modelo, las Vistas y los Controladores se tratan como entidades separadas; esto hace que cualquier cambio producido en el Modelo se refleje automáticamente en cada una de las Vistas (Fernández y Díaz, 2012). A continuación se explica cada una de sus partes (Bascón, 2004): 21  Modelo: es un conjunto de clases que representan los datos del mundo real que el sistema va a procesar, sin tomar en cuenta ni la forma en que esos datos van a ser mostrados ni los mecanismos que hacen que estén dentro del modelo, es decir sin tener conocimiento de que existen las vistas ni los controladores.  Vistas: pueden existir una o varias vistas las cuales son un conjunto de clases que se encargan de mostrar al usuario la información contenida en el modelo. Una vista está asociada a un modelo, pudiendo existir varias vistas asociadas a un mismo modelo.  Controlador: es un objeto que se encarga de dirigir el flujo de control de la aplicación con la ayuda de mensajes externos, como datos introducidos por el usuario u opciones del menú seleccionadas por él. A partir de estos mensajes, el controlador se encarga de modificar el modelo o de abrir y cerrar vistas. El controlador tiene acceso al modelo y a las vistas, pero las vistas y el modelo no conocen de la existencia del controlador. Seguidamente se muestra la relación entre los 3 módulos del patrón MVC, en la figura 5: Figura 5. Patrón de diseño MVC. Fuente: Afonzo, F. y Díaz, A. (2016). 2.5 Accesibilidad y usabilidad en una aplicación web Cuando se está desarrollando una aplicación web es importante tener en cuenta factores claves como son la accesibilidad y la usabilidad que tendrá el producto final. Estos conceptos son esenciales porque determinan la interacción que tendrá el usuario final con la aplicación. 22 Una aplicación accesible es aquella que puede ser manipulada por personas que tengan o no una discapacidad, que sea fácil de aprender y manipular, y que sea personalizable por el usuario en cualquier dispositivo sea estático o móvil. Por tal razón, es importante conocer dichos conceptos los cuales son definidos a continuación: La usabilidad es la capacidad del producto software para ser entendido, aprendido, usado y resultar atractivo para el usuario, cuando se usa bajo determinadas condiciones. Esta característica se subdivide a su vez en las siguientes sub-características (ISO 25000, 2015):  Capacidad para reconocer su adecuación. Capacidad del producto que permite al usuario entender si el software es adecuado para sus necesidades.  Capacidad de aprendizaje. Capacidad del producto que permite al usuario aprender su aplicación.  Capacidad para ser usado. Capacidad del producto que permite al usuario operarlo y controlarlo con facilidad.  Protección contra errores de usuario. Capacidad del sistema para proteger a los usuarios de hacer errores.  Estética de la interfaz de usuario. Capacidad de la interfaz de usuario de agradar y satisfacer la interacción con el usuario.  Accesibilidad. Capacidad del producto que permite que sea utilizado por usuarios con determinadas características y discapacidades. Y de manera resumida, para Zato (2004), un sitio web es usable cuando cumple al menos las siguientes condiciones:  Cualquier visitante puede usarlo de forma eficiente la primera vez que lo visita (aprendibilidad).  Cualquier persona que lo visita puede recordar cómo se usa la próxima vez que acceda a él (memorabilidad).  Cualquier visitante puede fácilmente navegar a través de ese él (efectividad).  Cualquier visitante puede adquirir lo que desea en un tiempo razonable (eficiencia). 23 Con lo cual se reafirman las características que deben estar presentes en una aplicación para que sea totalmente para los usuarios. Además, evaluar cuán usable es un sitio web se logra por medio de  expertos que por medio de criterios y heurísticas permiten saber la usabilidad,  encuestas realizadas por un experto y realizadas a usuarios potenciales aunque no es un método útil,  pruebas de usabilidad con usuarios en vivo y un experto anotará las dificultades encontradas en el uso de la aplicación web,  técnicas como el eye tracking y log’s de visitas que muestran los caminos que el usuario eligió para interactuar con el contenido del sitio web. Por otra parte, como sugieren Fernández y Montero (2003) “Un concepto íntimamente ligado al de usabilidad es el de accesibilidad. Éste ya no se refiere a la facilidad de uso, sino a la posibilidad de acceso. En concreto a que el diseño, como prerrequisito imprescindible para ser usable, posibilite el acceso a todos sus potenciales usuarios, sin excluir a aquellos con limitaciones individuales-discapacidades, dominio del idioma,...” Entonces, la accesibilidad web permite que las aplicaciones puedan ser usadas por todo tipo de personas con o sin discapacidades haciendo importante su inclusión desde el inicio del desarrollo de una aplicación web hasta su final, por tal razón deben existir ciertos principios que se deben cumplir con el fin de que la aplicación abarque la mayor cantidad de personas y pueda ser visible desde cualquier dispositivo. Los principios que se utilizan en pleno siglo XXI para la Web, fueron definidos por la W3C para proporcionar un estándar para la creación de aplicaciones de contenido web que satisfagan las necesidades de personas, organizaciones y gobiernos a nivel internacional. Dichos principios se presentan seguidamente (W3C, 2005):  Perceptible: la información y los componentes de la interfaz de usuario deben ser presentados a los usuarios de modo que ellos puedan percibirlos. 24  Operable: los componentes de la interfaz de usuario y la navegación deben ser operables.  Comprensible: la información y el manejo de la interfaz de usuario deben ser comprensibles.  Robusto: el contenido debe ser suficientemente robusto como para ser suficientemente como para ser interpretado de forma fiable por una variedad de aplicaciones de usuario, incluyendo las ayudas técnicas. A su vez, dichos principios se componen de pautas, criterios de conformidad y técnicas suficientes y recomendables, más sin embargo, si una aplicación cumple con todos los principios mencionados no será accesible para individuos que posean combinación de discapacidades. Para finalizar es importante la combinación de la accesibilidad y usabilidad, y no tomarlos como conceptos aislados ya que lo ideal es abarcar la mayor cantidad de personas. Además por medio de los criterios y principios para evaluar estas características se logre desarrollar una aplicación web que contenga la mayoría de ellos. 2.6 Despliegue de aplicaciones web en dispositivos móviles En los años 2000, el auge de dispositivos móviles como celulares inteligentes, tabletas y notebook’s aumentó, originando un inconveniente para los desarrolladores web sobre cómo lograr trasladar la presentación y funcionalidad existentes de las aplicaciones web en los dispositivos de escritorio en cuanto a tamaño de la pantalla y de las tecnologías aplicadas para su desarrollo. Sin embargo, existen tecnologías tales como css, xhtml mobile profile y javascript que permiten a través de sus funcionalidades adaptar el contenido presentado en un ordenador de escritorio ser desplegados a un dispositivo móvil. Es necesario para los desarrolladores tomar en cuenta características inherentes a los dispositivos como describen Chaparro et al (2009) las cuales se mencionan a continuación:  Interfaz de usuario  Comportamiento del usuario 25  Personalización del contenido  Contenidos basados en geo localización Con los factores característicos mencionados anteriormente, toma importancia el desarrollo de una aplicación centrada en el usuario que sea responsiva y permita el despliegue en cualquier dispositivo móvil, ya que si no se logra esto el usuario final decidirá optar por abandonar la o las aplicaciones web que carezcan de alguna característica relevante como lo es por ejemplo la interfaz de usuario. 26 2.7 Marco Jurídico para los programas informáticos Ley de Infogobierno, publicada en la Gaceta Oficial Nro. 40.274, del 17 de octubre de 2013, establece en su artículo 34, lo siguiente: Artículo 34. El desarrollo, adquisición, implementación y uso de las tecnologías de información por el Poder Público, tiene como base el conocimiento libre. En las actuaciones que se realicen con el uso de las tecnologías de información, sólo empleará programas informáticos en software libre y estándares abiertos para garantizar al Poder Público el control sobre las tecnologías de información empleadas y el acceso de las personas a los servicios prestados. Los programas informáticos que se empleen para la gestión de los servicios públicos prestados por el Poder Popular, a través de las tecnologías de información, deben ser en software libre y con estándares abiertos. (Subrayado por los autores) De conformidad con el artículo anteriormente citado, es imperativo el uso de herramientas de software y licencias libres en el ámbito público. En este sentido, al ser el CIETE de la ULA un ente público, para la construcción del Trabajo Especial de Grado, se describen las seleccionadas a continuación: 2.8 Tecnologías web Se encuentran a la disposición de toda persona una amplia gama de tecnologías y herramientas de software que facilitan el desarrollo de aplicaciones web, lo que permite elegir la(s) apropiada(s) de acuerdo al tipo de necesidad planteada. Antes de pasar a describir estas tecnologías se definirán los términos empleados en el mundo del desarrollo de aplicaciones web. 2.8.1 Tecnologías del lado del cliente Ahora se estudiarán aquellas tecnologías que se utilizan para construir la interfaz de usuario, a través de la cual se podrá interactuar con el sistema mediante el uso de un navegador web. 27 2.8.1.1 Lenguaje de Marcado de Hipertexto HTML por sus siglas en inglés HyperText Markup Language, es un lenguaje de Marcado de Hipertexto, es decir, un lenguaje que permite escribir texto de forma estructurada. La W3C lo define como “lenguaje que se utiliza para crear páginas web. Es uno de los principales componentes de la plataforma web abierta”. Este lenguaje se puede comparar con el esqueleto humano, ya que es el soporte para la creación de una simple página web. Con él se puede direccionar a otras páginas web por medio de los enlaces, colocar encabezados y pies de página, imágenes, tablas, y entre otros elementos que conforman a una aplicación web. Es uno de los lenguajes más utilizado por los desarrolladores web porque posee características que según Vega (2008):  Es soportado por la mayoría de editores de textos tales como Notepad ++, Sublime en todas sus versiones.  Posee múltiples versiones las cuales son soportadas por los distintos navegadores web del mercado actual.  Cada elemento de un documento HTML consta de una etiqueta de comienzo, un bloque de texto y una etiqueta de fin. Su última versión HTML5, según Crespo (2014) trae consigo mejoras en la estructuración de los documentos y en los formularios, y que incluso fueron añadidas nuevas funcionalidades. Proporciona una mejor integración con los lenguajes CSS3 y Javascript. Todos los navegadores son compatibles con esta nueva versión del lenguaje, por lo que no existe ningún problema a la hora de mostrar nuevos elementos o funcionalidades contenidos en este. 2.8.1.2 Hojas de Estilo en Cascada (CSS) CSS por sus siglas Cascading Style Sheets, en español Hojas de Estilo en Cascada, es un lenguaje que permite darle el estilo a la página, es decir cómo va a ser la apariencia de los elementos. La W3C (2008) lo define como “un mecanismo simple que describe cómo se va a mostrar un documento en la pantalla, o cómo se va a imprimir, o incluso cómo va a ser 28 pronunciada la información presente en ese documento a través de un dispositivo de lectura. Esta forma de descripción de estilos ofrece a los desarrolladores el control total sobre estilo y formato de sus documentos”. Siguiendo la comparación con cuerpo humano que se reseñó en HTML, ahora CSS sería como la parte física del cuerpo humano, es decir, nos dirá cuán atractiva será la página web a desarrollar para el ojo del usuario final. Existen 3 opciones para aplicar CSS en un documento HTML (Eguiluz, 2007):  Incluir CSS en el mismo documento HTML.  Definir CSS en un archivo externo.  Incluir CSS en los elementos HTML. La versión utilizada recientemente es CSS3, la cual consiste en la incorporación de nuevos mecanismos para mantener un mayor control sobre el estilo con el que se muestran los elementos de las páginas sin tener que recurrir a trucos, que a menudo complicaban el código de las páginas web. En la figura 6, se observa la comparación entre las distintas versiones del lenguaje CSS y el soporte que existe del mismo en los navegadores web. Internet Explorer soporta las versiones anteriores de CSS pero es prácticamente nulo el soporte que da a CSS3. Por otro lado, los navegadores Firefox, Safari, Opera y Google Chrome proveen el soporte a las versiones de CSS desde su origen hasta la última. Figura 6. Comparación entre las distintas versiones del Lenguaje de programación CSS con respecto al soporte en los navegadores web. Fuente: Bonito, (2010) 29 2.8.1.3 Javascript/Jquery JavaScript es el lenguaje interpretado más utilizado, principalmente en la construcción de páginas Web, con una sintaxis muy semejante a Java y a C. Pero, al contrario que Java, no se trata de un lenguaje orientado a objetos propiamente dicho, sino que éste está basado en prototipos, ya que las nuevas clases se generan clonando las clases base (prototipos) y extendiendo su funcionalidad. (Flanagan, 2007) Una definición de Javascript, señala que es un lenguaje interpretado, multiplataforma, orientado a eventos con manejo de objetos, cuyo código puede ser incluido directamente sobre documentos HTML, este lenguaje fue diseñado con una sintaxis similar al lenguaje C, aunque adicionalmente adopta nombres y convenciones del lenguaje de programación Java. Es usado para el desarrollo de aplicaciones cliente-servidor en páginas web. Nació bajo la necesidad que existía de permitir a los desarrolladores de sitios web crear páginas que permitieran intercambiar información con los usuarios. (Gauchat, 2012) Anteriormente, se empleaba para validación de formularios y mostrar cajas de diálogo pero hoy en día es el motor de la mayoría de las aplicaciones en la web. Se emplea para implementar aplicaciones capaces de realizar todo tipo de efectos, interfaces de usuario y comunicación con el servidor por medio de Ajax. jQuery es la librería web más popular disponible en estos días. Es gratuita y fue diseñada para simplificar la creación de sitios web modernos. Facilita la selección de elementos HTML, la creación de animaciones y efectos, y también controla eventos y ayuda implementar Ajax en nuestras aplicaciones. (Gauchat, 2012) Con esta librería se puede realizar un manejo avanzado del DOM (Modelo de Objetos para representar Documentos), interactuando y modificando sus elementos, manejo de eventos como clics, realizar efectos visuales como ocultar un botón, manipulaciones de hojas CSS, utilización de Ajax, es totalmente personalizable y es compatible con todos los navegadores existentes en el mercado. 30 2.8.2 Tecnologías del lado del servidor A continuación se presentan las tecnologías utilizadas para construir la lógica de negocio en una aplicación. Esto implica el procesamiento de las solicitudes que se realizan desde la interfaz de usuario así como la comunicación con el módulo encargado del manejo de datos. 2.8.2.1 Lenguaje Preprocesador de Hipertexto Es un lenguaje interpretado del lado del servidor que se caracteriza por su potencia, versatilidad, robustez y modularidad. Los programas escritos en PHP son embebidos directamente en el código HTML y ejecutados por el servidor web a través de un intérprete antes de transferir al cliente lo que ha solicitado y que genera un resultado de forma de código HTML puro. (Cobo, Gómez, Pérez y Rocha, 2005) PHP proporciona características que lo hacen atractivo a la hora de tomar una decisión sobre el lenguaje a utilizar para crear una aplicación web y agregarle dinamismo. Según, Cabezas (2004), las que se destacan son:  Es un lenguaje muy fácil de aprender con respecto a otros lenguajes utilizados para el mismo propósito, ya que existe mucha documentación sobre el mismo y la mayoría de las funciones más usuales están disponibles por defecto, como la conexión a bases de datos.  Embebido en HTML, las páginas escritas en PHP son simples páginas en HTML que contienen, además de las etiquetas normales, el programa que queremos ejecutar.  Es multiplataforma, se ejecuta en multitud de plataformas, sistemas operativos y servidores existentes.  Licencia Open Source, es libre de ser descargado e inspeccionado por los desarrolladores web. La consecuencia principal es que el coste del producto en la mayoría de los casos es 0.  Posee multitud extensiones, por está propiedad da mayor versatilidad y flexibilidad a los usuarios que lo utilizan permitiéndoles utilizar nuevas bases de datos, protocolos, enlaces a librerías, etcétera.  Gran popularidad en el desarrollo de aplicaciones web dinámicas. 31 La figura 7 muestra el proceso de los pasos que debe seguir el navegador web (cliente). Primero, solicita al servidor una página HTML. Luego, el servidor web verifica si la página HTML contiene código en PHP. Una vez que se comprueba que la página es interpretada y la misma es devuelta al navegador web (cliente) para ser mostrada. Figura 7. Funcionamiento de un programa escrito en lenguaje de servidor PHP. Fuente: González, .(2003) 2.8.2.2 Laravel Laravel es un framework de código abierto para la creación de aplicaciones web que emplea PHP5 como lenguaje de programación y sigue el patrón de diseño MVC. Fue creado en 2011 por Taylor Otwell y tiene una gran influencia de frameworks como Ruby on Rails, Sinatra y ASP.NET MVC. Su objetivo es desarrollar aplicaciones de código elegante y sencillo, para que sea fácil de entender y utilizar. Cómo la mayoría de los framework, Laravel posee Rutas, Modelos, Plantillas, Vistas y Controladores, además de un motor propio para el manejo de plantillas que se denomina Blade, las cuales se describirán a continuación (Ríos, 2014):  Rutas: Laravel posee un sistema de enrutamiento que se encarga de analizar la dirección de una solicitud entrante y determina que acción del controlador se debe activar. La mayoría de las rutas de la aplicación serán definidas en el archivo app/routes.php.  Blade: es un simple y potente motor de plantillas incorporado en Laravel. Es gestionado por las herencias de plantillas y secciones. Todas las plantillas Blade deben usar la extensión .blade.php (Comunidad en Español). 32  Eloquent: es un ORM (object-relational mapping: técnica que permite trabajar con la base de datos orientada a objetos a partir de una base de datos relacional.) que provee una hermosa y sencilla implementación de ActiveRecord (registro activo) para trabajar con la base de datos. Cada tabla de la base de datos tiene un "Modelo" correspondiente, el cual es utilizado para interactuar con esa tabla (Comunidad en Español).  Soporte para MVC (Gaitán, 2013): o Modelo: Laravel trabaja con Eloquent, como se mencionó anteriormente, el cual facilitará el trabajo de las consultas a través de métodos ya establecidos, estos permitirán realizar las tareas más comunes y que más se repiten en una base de datos como insertar, recuperar registros por su id, modificar esos registros, listarlos, eliminarlos, etc. o Vista: es el producto final de una petición, el código html que se le devuelve al cliente, aquí no debería haber ninguna lógica, sin embargo puede contener impresiones de variables, condicionales o bucles; pero no más que eso. La vista tiene un fin y es ése, mostrar el código html de respuesta. o Controlador: en lugar de definir toda la lógica de rutas en un único archivo routes.php, se puede organizar el comportamiento de la aplicación utilizando clases como controladores. Los controladores pueden agrupar lógica de rutas en una clase, así como aprovechar las características más avanzadas del framework, como la inyección de dependencias automática. Los controladores son generalmente almacenados en el directorio app/controllers, y este directorio se encuentra registrado por defecto en la opción classmap del archivo composer.json. Sin embargo, los controladores pueden técnicamente encontrarse en cualquier directorio o subdirectorio (Comunidad en Español). Son muchas las características que poseen los framework’s web basados en PHP que permiten el desarrollo de diversas aplicaciones web, las cuales se adaptarán a la lógica del negocio del cliente. Es difícil juzgar cuál es mejor que otro, ya que todos comparten las mismas http://laraveles.com/docs/4.1/ioc 33 características y se diferencian por una u otra. En realidad, se sabrá si es bueno o no según la experticia que posea el o los desarrolladores en el momento de implementar un proyecto. 2.8.3 Sistema Manejador de Bases de Datos Una base de datos es un conjunto de información estructurada en registros y almacenada en un soporte electrónico legible desde un ordenador. Cada registro constituye una unidad autónoma de información que puede estar a su vez estructurada en diferentes campos o tipos de datos que se recogen en dicha base de datos. (Rodríguez, 2001) Paré (2002) explica que una base de datos implica estructuras y modelos, además de un software que soporte estos, esto quiere decir que existen distintas maneras de modelar y de crear una base de datos y que en estas bases de datos intervienen distintos elementos como los datos en sí, objetos de bases de datos, archivos, entre otros. Pero las bases de datos dependen de un software el cual es el que soportará lógicamente esta estructura, a este software se le conoce como Sistema Manejador de Bases de Datos (SMBD). Un sistema gestor de bases de datos (SGBD) consiste en una colección de datos inter- relacionados y un conjunto de programas para acceder a dichos datos. La colección de datos, normalmente denominada base de datos, contiene información relevante para una empresa. El objetivo principal de un SGBD es proporcionar una forma de almacenar y recuperar la información de una base de datos de manera que sea tanto práctica como eficiente. (Korth, Silberchatz y Sudarshan, 2002) Además, los sistemas gestores de bases de datos proveen funcionalidades para ver, gestionar y manipular las bases de datos, funcionalidades tales como manipulación del diccionario de datos, transformación y presentación de los datos, integridad de los datos para asegurar que no haya redundancia de datos y maximizar la consistencia, lenguaje de acceso a la base de datos, interfaz de comunicación de datos, interacción con el manejador de archivo, mecanismos de seguridad que prevén a ciertos usuarios acceder a la información, entre otras. En el mercado existen distintos sistemas manejadores de bases de datos tales como Oracle, MySQL, Access, Microsoft SQL Server, PostgresSQL, entre los más destacados. El SMBD 34 elegido fue PostgreSQL, como se mencionó en el artículo 34 de la Ley de Infogobierno las tecnologías de información deben ser de software libre y de estándar abierto, el mismo se ajustó a las características necesitadas. 2.8.3.1 PostgreSQL PostgreSQL es un gestor de bases de datos orientadas a objetos (SGBDOO o ORDBMS en sus siglas en inglés) muy conocido y usado en entornos de software libre porque cumple los estándares SQL92 y SQL99, y también por el conjunto de funcionalidades avanzadas que soporta, lo que lo sitúa al mismo o a un mejor nivel que muchos SGBD comerciales. (Ginestà y Mora, 2007) Por otra parte, PostgreSQL es uno de los sistemas gestionadores de bases de datos relacional orientada a objetos que ha sido desarrollado de varias maneras desde 1977. Comenzó como un proyecto llamado Ingres en la Universidad de California en Bekerley. Además, es ampliamente considerado el más avanzado sistema de base de datos de fuente libre en el mundo, el cual contiene muchas propiedades que tradicionalmente son vistas sólo en los productos comerciales de gran calibre. (Jhon C. Worsley y Joshua D. Drake, 2002) Este SMBD proporciona ventajas tales como (Momjian, 2001):  Ofrece alta concurrencia: permite que mientras un proceso escribe en una tabla, otros accedan a la misma tabla sin necesidad de bloqueos.  Amplia variedad de tipos nativos: direcciones IP, direcciones MAC, arrays, figuras geométricas, almacenaje de datos tipo BLOB.  Disparadores (triggers): un disparador o trigger se define como una acción específica que se realiza de acuerdo a un evento, cuando éste ocurra dentro de la base de datos. En PostgreSQL esto significa la ejecución de un procedimiento almacenado basado en una determinada acción sobre una tabla específica. 35 2.8.4 Servidor web Apache Apache, “es el servidor web más utilizado en el mundo y esto es debido a sus características: robustez, rapidez, ser multiplataforma con versiones para Linux, Win32, MacOs, Unix, modularizable, dispone de módulos para ejecutar PHP, Perl, etc.” (Cobo et al., 2005) Apache posee características esenciales que lo han hecho elegible por organizaciones tanto privadas como públicas: (Arrondo et al,)  Corre sobre distintas plataformas y sistemas operativos.  Ofrece tecnología libre y de código abierto, lo cual lo hace elegible para desarrollar proyectos universitarios.  Trabaja en conjunto con varios lenguajes interpretados como PHP, Perl, Java; ofreciendo módulos para su ejecución.  Se pueden personalizar los mensajes de error.  Posee gran documentación en comunidades digitales facilitando la resolución de inconvenientes. Entre las ventajas de utilizar apache se encuentran que es multiplataforma, extensible, fácil para conseguir ayuda y/o documentación y es gratuito. 2.8.5 Software de Control de versiones Git (SVC) Git es un SCV distribuido diseñado para la gestión eficiente de flujos de trabajo distribuido no lineales. Git fue diseñado y desarrollado inicialmente por Linus Torvalds en 2005 para el desarrollo del kernel de Linux. En base a Béjar, López, Nogueras y Zarazaga (2015) este SVC posee las siguientes características:  Las versiones no se incrementan, sólo se almacena cada cambio como una instantánea de todos los archivos.  Autenticación criptográfica de la historia, cada cambio realizado posee un identificador asociado el cual se computa por medio de un algoritmo que utiliza como entrada el cambio y la historia completa de cambios. 36  Trabajo fuera de línea, al ser un sistema distribuido; cada repositorio de Git puede funcionar sin acceso a la red o al resto de los repositorios distribuidos, ya que existe una copia local completa del desarrollo del proyecto. Git puede acceder al repositorio a través de redes, lo que le permite ser usado por personas que se encuentran en distintos computadores, fomentando la colaboración. Entre sus principales características tenemos:  Implementa un versionado de directorios.  Posee un historial de versiones.  Realiza envíos atómicos.  Crea un versionado de metadatos.  Efectúa una manipulación consistente de datos. 2.8.6 GitHub GitHub es un servicio comercial de alojamiento de repositorios Git remotos creado en el 2008. Proporciona una interfaz web que permite al usuario registrado crear repositorios vacíos o por clonación de otro repositorio hospedado en GitHub, enviar solicitudes de cambio de repositorios hospedados y gestiona dichas solicitudes. (Béjar et al., 2015) En base a GitHub (2015) éste servicio comercial de alojamiento posee las siguientes características:  Los repositorios son por defecto públicos, al menos que mediante un pago o si se cumplen las condiciones es posible que se alojen repositorios privados.  Cada repositorio pertenece al usuario creador o a una organización creadora.  Las modificaciones realizadas sobre un repositorio solo se pueden realizar por los usuarios que hayan iniciado sesión y que posean los permisos de modificación sobre dicho repositorio.  Posee un API Web en el cual se puede acceder y manipular: la wiki, el gestor de tareas, el sistema de gestión de comentarios, un cuadro de control de grafos sociales, e, incluso una página web propia. 37 El presente trabajo por ser desarrollado para el CIETE, se debe publicar bajo la Licencia Pública General, la cual permite que la aplicación pueda ser reutilizada, modificada y usada para fines no comerciales. 2.8.7 Licencia Pública General La Licencia Pública General (más conocida por su acrónimo en inglés GPL) es con diferencia la licencia más conocida de todas las licencias del mundo del software libre. Su autoría corresponde a la Free Software Foundation y es también la licencia más utilizada (más del 70% de los proyectos), incluso por proyectos con tanta reputación del mundo del software libre y código de fuente abierto como Linux. (http://www.gnu.org/licenses/gpl.html, 2007) La licencia GPL pretende garantizar la libertad de compartir y modificar software libre más allá del ámbito contractual inmediato, asegurando que el software sea libre también para otros usuarios posteriores. Las Licencias Públicas Generales están diseñadas para asegurar que quienes contraten en el futuro con el actual licenciatario gocen también de la libertad de distribuir copias de software libre (y cobrar por ese servicio si quieren), que reciban el código fuente y puedan modificar el software o usar fragmentos de él en nuevos programas libres. Para conseguirlo se prohíbe que el licenciatario pueda negar tales derechos a la persona con la que a su vez contrate Una licencia es incompatible con la GPL cuando restringe alguno de los derechos que la GPL garantiza, ya sea explícitamente contradiciendo alguna cláusula, ya implícitamente, imponiendo alguna nueva. Un ejemplo de empresa que basa su negocio en este tipo de licencia sería Ximian, cuyos productos se han distribuido bajo licencias de GNU, tratando de rentabilizarlos consiguiendo contratos para hacerlos evolucionar en ciertos sentidos, para adaptarlos a las necesidades de sus clientes, y ofreciendo personalización y mantenimiento. También Alcove, fundada en 1997 en Francia, basa su negocio en proporcionar servicios de consultoría, consultoría estratégica, soporte y desarrollo para software libre. http://www.gnu.org/licenses/gpl.html 38 En la figura 8, se puede observar la compatibilidad que existe entre la Licencia Pública General versión tres (3) y otras licencias libres. Las flechas apuntan a la licencia inmediatamente compatible con la anterior. Figura 8. Compatibilidad de la Licencia Pública General con otras licencias. Fuente: Licencia Pública General, recuperado de: http://www.gnu.org/licenses/quick-guide-gplv3.html, 2007. Una vez descritas todas las tecnologías web libres, herramientas de software libre y la licencia no comercial utilizadas para el desarrollo de la aplicación web CIETE, en el siguiente capítulo se explicó la aplicación del método Agilus en cada una de sus etapas. http://www.gnu.org/licenses/quick-guide-gplv3.html 39 Capítulo III – Marco Aplicativo En éste capítulo se presentó la aplicación de la adaptación del método AgilUs expuesto en el Capítulo I, con el objetivo de construir un producto de software basado en la usabilidad y centrado en el usuario final (Acosta, 2011). En este sentido se describió el contexto de desarrollo, y cada una de las fases de la metodología para la gestión de los procesos relacionados a la actividad académica y administrativa del CIETE. 3.1 Fase I: Requisitos En esta fase se realizaron las actividades para la recolección de la información, el levantamiento de requerimientos, obtención de las historias de usuarios y el análisis de los procesos asociados al centro. Las actividades realizadas fueron encuestas y cuestionarios, tormenta de ideas, perfiles de usuario, y listado de requerimientos funcionales y no funcionales, los cuales fueron descritos a continuación. 3.1.1 Tormenta de ideas Para iniciar la creación de la aplicación web, el equipo desarrollador realizó una tormenta de ideas en base a la página http://www.cieteula.org/ (utilizada actualmente por el CIETE) con el fin de explorar la creatividad y aportar todas las ideas posibles para la solución del trabajo a abordar. En la figura 9, se muestra la nube de palabras que se obtuvo luego de realizar la técnica antes mencionada. Figura 9. Nube de palabras. Fuente: Afonzo, F. y Díaz, A. (2016). http://www.cieteula.org/ 40 3.1.2 Cuestionarios y Encuestas Se creó un instrumento de recolección de datos tipo cuestionario con preguntas mixtas, realizado vía correo Gmail y el uso Google Form a una población de diez (10) personas pertenecientes al CIETE para conocer la situación del proceso de inscripción de las actividades ofertadas. Se identificaron las deficiencias que presentaban los procesos tanto administrativos como los relacionados con la prosecución de estudios. El instrumento tipo encuesta realizado se puede apreciar en la tabla 1 y tabla 2 Tabla 1 Instrumento tipo encuesta. Parte A Universidad Central de Venezuela Facultad de Ciencias Escuela de Computación Nombre: Cargo que ocupa en el CIETE: Encuesta La siguiente encuesta está dirigida a las personas que realizan actividades académicas y/o administrativas en el Centro de Innovación y Emprendimiento para el uso de Tecnologías en Educación (CIETE) de la Universidad de los Andes. A continuación, se le plantea una serie de preguntas las cuales debe responder de manera clara y sencilla. 1. Según Ud. cuáles de las siguientes funcionalidades debería tener la aplicación web del CIETE para facilitar sus tareas:  Posibilidad de que los participantes, los profesores y empleados tengan una cuenta para acceder a la aplicación.  Posibilidad de que los profesores puedan gestionar las notas.  Posibilidad de que el personal administrativo tenga una sección con los participantes preinscritos según las actividades.  Mostrar la oferta de actividades y toda la información necesaria sobre el contenido de ellas así como su proceso de inscripción.  Posibilidad de que los profesores obtengan un listado de alumnos de las actividades que dictan.  Si piensa en otras funcionalidades escríbalas a continuación: Nota. Fuente: Afonzo, F. y Díaz, A. (2016). 41 Tabla 2 Instrumento tipo encuesta. Parte B 2. ¿Qué procesos actuales según su conocimiento se utiliza aún papel, hojas de Excel u otro material no digital para almacenar la información relevante para el CIETE? 3. ¿Los usuarios deberán crear una cuenta para poderse preinscribir en una actividad? 4. ¿Cómo se confirma la preinscripción antes de proceder a la inscripción final? ¿Mediante el pago? 5. De las funcionalidades nombradas en la pregunta 1, ordénelas de mayor importancia a menor importancia. 6. En futuro próximo, ¿qué funcionalidades le gustaría ver en la aplicación web del CIETE? Nota. Fuente: Afonzo, F. y Díaz, A. (2016). De un total de diez (10) personas, ocho (8) respondieron el instrumento lo que representa el ochenta por ciento (80%) de la población encuestada, por medio de lo anterior se identificaron las funcionalidades necesarias y que opciones debía proveer cada sección de la aplicación web lo cual facilitó la toma de decisiones acerca de los requerimientos a desarrollar. Se formularon un total de seis (6) preguntas realizadas por el equipo de desarrollo. En la primera pregunta se conocieron las funcionalidades que debía poseer la aplicación, cabe considerar que las personas encuestadas añadieron cinco (5) opciones más las cuales fueron: Página web, Notificaciones diarias, Gestión administrativa de pagos, Gestión del proceso de inscripción y Generar reportes. En la figura 10 .se observa que la opción Mostrar la oferta de actividades y toda la información necesaria sobre el contenido ellas así como su proceso de inscripción representa el setenta y cinco por ciento (75 %), esto significa que es una de las funcionalidades más relevante a considerar. Seguidamente, las opciones: Posibilidad de que los participantes, los profesores y empleados tengan una cuenta para acceder a la aplicación, Posibilidad de que los profesores puedan gestionar las notas y Posibilidad de que el personal administrativo tenga una sección con los participantes preinscritos según las actividades, obtuvieron un treinta y ocho por ciento (38 %) respectivamente. La opción Gestión administrativa de pagos un veinticinco por ciento (25 %) y el restante un trece por ciento (13 %) cada una. 42 Figura 10. Estadística de la pregunta 1. Fuente: Afonzo, F. y Díaz, A. (2016). Siguiendo el orden de las preguntas, se verificó la existencia del uso de papel y tecnologías descentralizadas en los procesos actuales del CIETE. En la figura 11, se muestran las actividades que según el conocimiento del personal administrativo y los profesores son realizadas manualmente. Las actividades Control de pagos, Nómina de participantes y Notas de los participantes obtuvieron un treinta y ocho por ciento (38 %), Formato de inscripción y No conozco un veinticinco por ciento (25 %) con el resultado de esta última se reflejó que no todos están al tanto de la situación de los procesos realizados en el centro. Por último, Constancia de estudios e Informe final de la actividad alcanzaron un trece por ciento (13 %) cada una. 43 Figura 11. Estadística de la pregunta 2. Fuente: Afonzo, F. y Díaz, A. (2016). En la figura 12, se presenta la estadística de la tercera pregunta en donde se verificó si un participante debía crearse previamente una cuenta a la aplicación web para poder preinscribirse en una actividad académica de su preferencia como se evidencia cinco (5) personas respondieron Si lo que representa el sesenta y tres por ciento (63 %) de la población, y tres (3) No. Figura 12. Estadística de la pregunta 3. Fuente: Afonzo, F. y Díaz, A. (2016). En la cuarta pregunta, se identificó como se confirma la inscripción a una actividad académica. En la figura 13 se muestran los resultad obtenidos, la confirmación se hace por 44 medio del adelanto de pago con un sesenta y tres por ciento (63 %) según los encuestados, el restante por medio del correo electrónico con un veinticinco por ciento (25 %) y el restante con un trece por ciento (13 %) respectivamente. Figura 13. Estadística de la respuesta 4. Fuente: Afonzo, F. y Díaz, A. (2016). Para la penúltima pregunta se clasificó de mayor a menor la importancia de las funcionalidades propuestas en la interrogante número uno (1). En la tabla 3, se observa la relevancia de una funcionalidad con respecto a la otra. En la casilla de mayor importancia se encuentran: 1, 2, 4 y 10 siendo la opción 4 la de mayor importancia y al otro extremo de la tabla la de menor importancia la opción 7. 45 Tabla 3 Clasificación de los resultados basados en la pregunta 5 Mayor importancia Importancia moderada Ligeramente importante Igualmente importante Ligeramente importante Importancia moderada Menor importancia 1 2 6 3 4 5 7 4 5 2 1 3 - - 4 9 8 10 - - - 1 2 3 4 5 - - 10 1 2 3 4 5 - 4 1 3 5 2 - - 4 1 5 3 2 - - 2 4 1 5 3 - - Nota. Fuente: Afonzo, F. y Díaz, A. (2016). En la última pregunta de tipo abierta se conocieron las funcionalidades deseadas en un futuro próximo las cuales se detallan en la tabla 4. Tabla 4 Funcionalidades deseadas en un futuro próximo Repositorio de contenido Oferta permanente de actividades Gestión de la inscripción Gestión de las actividades académicas Generar informe de notas Generar informe final Ver actividades activas y actividades cursadas, su status para los participantes Ver actividades activas y actividades finalizadas para los profesores Acceder a la nómina de estudiantes Aplicación para dispositivos móviles Videoconferencias y recursos TIC en línea Emisión de constancias y certificados en línea Localización Nota. Fuente: Afonzo, F. y Díaz, A. (2016). 46 3.1.3 Perfil de Usuarios Los perfiles de usuarios permiten conocer el rol que posee un usuario cuando interactúa con el sistema dentro del proceso de inscripción de actividades y la prosecución de estudios. Las personas involucradas en los procesos del sistema son el personal administrativo del centro CIETE, profesores y participantes. En base al instrumento para la recolección de datos y la tormenta de ideas se obtuvieron los roles que existirían en el sistema, los cuales se describieron a continuación:  Rol Administrador: gestiona la permisología del sistema, así como también, tiene acceso a todas las funcionalidades relacionadas con la administración de la aplicación web y realizar operaciones de creación, consulta, edición y eliminación de usuarios, roles, actividades académicas, permisos, reportes y pagos.  Rol Coordinador: se encarga de la gestión del contenido, es decir, realiza las operaciones de consulta, creación, edición y eliminación de cualquier actividad académica. Además, posee la permisología para ver las notas agregadas por los profesores y realizar operaciones de modificación sobre las mismas. Por último, tiene facultad para añadir y eliminar a los participantes de las actividades académicas, así como, administrar los pagos realizados por los participantes.  Rol Profesor: realiza funciones en la prosecución de estudios: agregar, modificar y eliminar las notas de los participantes asociados a las actividades académicas que se encuentran bajo su cargo, generar los listados de participantes de dichas actividades y reportes finales respectivamente.  Rol Participante: representa la mayoría de los usuarios que interactúan con la aplicación web. Solo puede consultar y editar su perfil personal, ver las notas por cada módulo realizado y la nota final de la actividad académica que cursó, además, de cargar los recibos de pagos de esta última. Los usuarios no deben poseer un conocimiento avanzado sobre el uso de aplicaciones web, solo los conocimientos computacionales básicos para su manipulación y sobre las acciones que estén permitidas para el rol que posean. 47 Siguiendo con el orden de las actividades de la fase de Requisitos del método aplicado, se detalló el listado de requerimientos funcionales y no funcionales, lo que representó un paso de suma importancia para la construcción de la aplicación web. 3.1.4 Listado de requerimientos funcionales y no funcionales En base al análisis de los resultados del instrumento tipo encuesta y la tormenta de idea, se obtuvo el listado de requerimientos funcionales, es decir, los servicios que la aplicación proveería de acuerdo a las exigencias del CIETE y que se correspondieran con los perfiles de usuarios. A continuación se especificó dicho listado:  Listado de requerimientos funcionales: - Crear usuarios, actividades académicas, notas y recibos de pago. - Editar usuarios, actividades académicas, notas y recibos de pago. - Eliminar usuarios, actividades académicas, notas y recibos de pago. - Asignar roles a los usuarios de la aplicación web. - Permitir a los roles: administrador y coordinador; definir y modificar los parámetros configurables de las actividades académicas como fecha de inicio, fecha final, secciones, cantidad mínima y cantidad máxima de participantes, descripción, métodos de pago, entre otros. - Mantener contacto con los posibles participantes y el centro por medio de un formulario de contacto. - Obtener los listados de los participantes por actividad. - Permitir la visualización de la información personal a los usuarios. - Generar reporte final de las actividades académicas, listado de participantes para ser cargado en la plataforma Moodle. - Verificar el estado de pago de las actividades académicas. Luego de realizar el listado de requerimientos funcionales, se elaboró el listado de requerimientos no funcionales el cual no se refiere a directamente a las funciones de la aplicación web sino a la calidad de este. A continuación, se describieron cada uno de ellos: 48  Usabilidad: como principio básico del método Agilus; este requerimiento es de vital importancia, ya que toda la aplicación se debe centrar en el usuario. Debe ser fácil de manejar y, su nivel de aprendizaje debe ser intuitivo y rápido. El sistema debe proveer notificaciones de ayuda para los usuarios, tutoriales resumidos de cada sección de la aplicación.  Disponibilidad: la aplicación debe estar operativa en todo momento, asegurando su uso los siete (7) días de la semana por veinticuatro (24) horas, al menos que existan inconvenientes externos ajenos.  Mantenibilidad en el tiempo: la estructura de código de la aplicación debe ser entendible y limpia, gracias a esto no se necesitaría una intervención constante de un programador web para asegurar el mantenimiento de la misma y, además, debe ser construido de manera modular para evitar una posible recreación de la aplicación cuando se desee incorporar nuevas funcionalidades.  Eficiencia: la respuesta a las peticiones hechas por múltiples usuarios deben ser respondidas rápidamente y así asegurar el uso de la aplicación.  Portabilidad: debe ser visible en todos los navegadores web disponibles en el mercado bajo cualquier sistema operativo.  Escalabilidad: es necesario que la creación de las funcionalidades de la aplicación sean lo más modular posible garantizando su reutilización y asumiendo nuevas mejoras de las mismas.  Seguridad: es importante que existan los mecanismos de seguridad necesarios para salvaguardar la información vital de usuarios maliciosos, esto se logra por medio de la creación de sistemas de autenticación de usuarios y contraseñas cifradas; además, deben existir las acciones pertinentes para la gestión de roles y usuarios como lo son: crear, editar y eliminar.  Tolerancia a fallas: la aplicación debe poseer la capacidad de regresar al estado anterior correcto, en caso de falla, sea ésta intencional o no. 49 3.2 Fase II: Análisis En esta fase se llevó a cabo el análisis de la solución a desarrollar. Se definieron los casos de uso y el modelo del domino, se estableció la guía de estilos presente en la aplicación web, y demás artefactos que representan las funcionalidades del sistema CIETE. 3.2.1 Guía de Estilo La guía de estilo “es un documento que recoge normativas y patrones básicos relacionados con el aspecto de un interfaz para su aplicación en el desarrollo de pantallas dentro de un entorno concreto”. (Acosta, 2011) En otras palabras, en dicho documento se plasman los colores seleccionados para las interfaces, elementos visuales como párrafos, videos, imágenes; disposición de objetos como formularios, botones, menús, entre otros; los cuales dan vida a cada una de las vistas con las cuales interactúa el usuario. En la tabla 5, se observa la guía de estilo seleccionada para la aplicación web CIETE, con el objetivo de dar una idea sobre las interfaces de la misma. 50 Tabla 5 Logos utilizados para la aplicación web CIETE Logos Logo de la Universidad de los Andes Logo del CIETE Logo de la Universidad Central de Venezuela Logo de la Facultad de Ciencias Nota. Fuente: Afonzo, F. y Díaz, A. (2016). Tabla 6 Menú de navegación Menú de navegación Nota. Fuente: Afonzo, F. y Díaz, A. (2016). 51 Tabla 7 Iconos utilizados para la aplicación web CIETE Iconos Significado Icono utilizado para acceder a la página del centro de la red social Facebook. Icono utilizado para acceder a la página del centro de la red social Twitter. Icono utilizado para acceder al canal del centro del sitio web Youtube. Icono utilizado para acceder a la página del centro de la red social Instagram. Icono utilizado para acceder a la página del centro de la red social Google Plus. Icono utilizado para acceder a la página del centro de la red social Tmblr. Icono utilizado para acceder a la página del centro de la red social Pinterest. Icono utilizado para la edición tanto de la información de usuarios como la de las actividades. Icono utilizado para la eliminación tanto de los usuarios como de las actividades. Nota. Fuente: Afonzo, F. y Díaz, A. (2016). Las imágenes que se mostraron en las tablas anteriores están presentes en la mayoría de las interfaces de la aplicación web. Para comenzar, se tienen los logos representativos del centro CIETE presente en la mayoría de las vistas, de las universidades ULA y UCV, y el logo de la Facultad de Ciencias de la UCV, presentes en la sección de créditos. Por otra parte, el menú de navegación se encuentra en las vistas relacionadas a los perfiles de cada rol de usuario en la aplicación. Por último, los iconos de la aplicación los cuales agregan metáforas en su uso para agradar al usuario y asociación de acciones a ejecutar tales como guardar, editar, configurar, entre otras. 52 En la tabla 8, se muestra la paleta de colores seleccionada para a las interfaces de la aplicación. La elección de los colores azul, blanco y gris se basó en la petición del director Raymond Marquina, los mismos representan la Facultad de Humanidades y Educación de la ULA. En cuanto a los demás colores, se utilizaron los colores del centro CIETE para crear coherencia y darle propiedad a la aplicación. El color naranja se seleccionó para representar notificaciones de advertencia, cuando se realizan acciones sobre data sensible. Tabla 8 Colores utilizados para la aplicación web CIETE Código Color #333333, rgb(51, 51, 51) #778899, rgb(119, 136, 153) #1967b4, rgb(25, 103, 180) #a3c0bd, rgb(163, 192, 189) #db1d58, rgb(219, 29, 88) #5cc0de, rgb(92, 192, 222) #d9534d, rgb(217, 83, 77) #5cb95c, rgb(92, 185, 92) #696969, rgb(105, 105, 105) Nota. Fuente: Afonzo, F. y Díaz, A. (2016). 53 3.2.2 Modelado de Casos de Uso Representan la interacción del actor con la o las funcionalidades del sistema a nivel gráfico. En esta aplicación web se definieron distintos roles que representan la función que posee un usuario en el sistema; dichos roles son: Administrador, Coordinador, Profesor y Participante. En la figura 14, se muestra el caso de uso Nivel 0 el cual es una abstracción de la interacción de los actores con la aplicación web CIETE. Figura 14. Caso de uso: Nivel 0. Fuente: Afonzo, F. y Díaz, A. (2016). En la figura 15, se observa el caso de uso Nivel 1 el cual representa las principales funcionalidades de la aplicación, y la interacción con los actores. 54 Figura 15. Casos de uso: Nivel 1. Fuente: Afonzo, F. y Díaz, A. (2016). En la figura 16, se muestra el caso de uso para el actor participante y sus principales funcionalidades en la aplicación. Figura 16. Casos de uso: Actor Participante. Fuente: Afonzo, F. y Díaz, A. (2016). 55 Una vez presentado el caso de uso para el actor participante, se procedió a realizar las especificaciones de casos de uso de Nivel 1, la función de dichas especificaciones, es representar todas las posibles interacciones de los actores con las funcionalidades de la aplicación. Tabla 9 Especificación del caso de uso: Iniciar Sesión Caso de Uso CU 1.1 – Inicio de Sesión Actor Todos los actores Pre-condición El actor debe poseer una cuenta en la aplicación Acción Permitir el acceso de los usuarios a la aplicación con el uso del correo electrónico y contraseña asociada Condición de Éxito Se redirigirá al perfil de usuario que corresponde según su rol en la aplicación. Nota. Fuente: Afonzo, F. y Díaz, A. (2016). Tabla 10 Especificación del caso de uso: Recuperar Contraseña Caso de Uso CU 1.2 – Recuperar Contraseña Actor Todos los actores Pre-condición El usuario debe poseer una cuenta en la aplicación Acción Establecer una nueva contraseña, ya que la anterior fue olvidada Condición de Éxito Se enviará un correo con un link al usuario para recuperar la contraseña Nota. Fuente: Afonzo, F. y Díaz, A. (2016). El resto de casos de uso y sus respectivas especificaciones se encuentran en el Anexo A. En la siguiente actividad se expuso el diagrama de objetos del dominio, en el cual se describió la interacción entre los objetos y las relaciones estáticas entre estos. 3.2.3 Modelo de Objetos del Dominio El diagrama de objetos del dominio representa los objetos y las relaciones que existen en el contexto de la aplicación y la manera en que interactúan entre ellos, con la finalidad de alcanzar una mejor comprensión de la investigación. 56 En la figura 17, se presenta el modelo de objetos de domino de la aplicación CIETE y sus relaciones entre ellos. El usuario que interactúa con la aplicación puede tener distintos roles como Administrador, Coordinador, Participante y Profesor. Figura 17. Modelo de objetos del dominio. Fuente: Afonzo, F. y Díaz, A. (2016). El usuario con rol Administrador posee toda la permisología para controlar y gestionar cada módulo de la aplicación web. Mediante esta última se pueden coordinar las actividades académicas, gestionar los cursos, agregar y desagregar notas, generar listados y reportes, además, cargar la información divulgativa para cada actividad que se dicta en el CIETE. 3.2.4 Diseño Lógico y Físico de la Base de Datos Para la manipulación de información de la aplicación es necesaria la creación de una base de datos. En la figura 18, se observa el diseño lógico y físico de la base de datos, el cual permitió guardar toda la información del centro CIETE y así poder cumplir los objetivos del trabajo especial de grado. 57 Figura 18. Diseño lógico y físico de la Base de Datos. Fuente: Afonzo, F. y Díaz, A. (2016). A continuación se describen las veinticinco (25) tablas que posee la Base de Datos del CIETE, en donde se almacena la información sensitiva de cada entidad.  Usuarios: se encuentran los datos de los usuarios registrados en la aplicación, así como su principal información. 58  Participantes: información de los participantes inscritos en al menos una actividad académica.  Profesores: información de los profesores que dictan las diferentes actividades académicas ofertadas por el CIETE.  Preinscripcion_cursos: los datos y los recaudos necesarios de las personas que deseen optar por la inscripción en alguno de las actividades académicas ofertadas.  Cursos: contiene toda la información acerca de las actividades académicas del CIETE.  Participante_cursos: posee la información acerca de las actividades académicas por un participante, permite la relación entre las tablas Participantes y Cursos.  Profesor_cursos: relación que une las tablas Profesores y Cursos e informa sobre las actividades que dicta un profesor al igual que la sección.  Webinars: posee todos los datos acerca de los webinars ofertados por el CIETE.  Participante_webinars: representa la relación entre Participantes y Webinars, la cual muestra los datos de los webinars que cursa un participante al igual que la sección en la cual está inscrito.  Profesor_webinars: presenta la información de los webinars que dictan los profesores del centro por medio de la relación entre las tablas Profesores y Webinars.  Preinscripcion_webinars: muestra los registros de las personas que deseen inscribirse en alguno de los webinars ofrecidos por el centro.  Curso_modalidad_pagos: relación que permite guardar los diferentes modos de pago asociados a una actividad académica.  Modalidad_pagos: se guardan los diferentes modos de pago (Ejemplo: transferencia, depósito, etc…).  Modalidad_cursos: muestra las diferentes modalidades en la que se dicta una actividad académica (Ejemplo: a distancia o presencial).  Tipo_cursos: posee los diferentes tipos de actividad académica (Ejemplo: Diplomado o Cápsulas).  Reset_contraseña: tabla que proporciona el Framework Laravel para la fácil y segura recuperación de contraseña de los usuarios registrados en la aplicación.  Permisos: contiene todos los permisos que pueden ser asignados a los diferentes roles. 59  Roles: registra todos los roles que pueden tener los diferentes usuarios de la aplicación.  Rol_permisos: asocia los diferentes permisos a cada rol.  Usuario_roles: informa acerca de los roles que poseen todos los usuarios registrados.  Países y Estados poseen respectivamente los datos de los países del mundo y de los estados de Venezuela.  Ciudades: contiene todas las ciudades de Venezuela junto al estado al cual pertenece.  Municipios: almacena la información de los municipios del país asociados a su estado.  Parroquias: muestra las parroquias de todo el país al igual que el municipio al cual pertenecen. 3.2.5 Plataforma de Desarrollo La Plataforma de Desarrollo fue construida con las tecnologías web, herramientas de software y licencias de software de uso libre y se presentan junto con la arquitectura de tres (3) capas en la siguiente figura. Figura 19. Plataforma Tecnológica de la aplicación web del centro CIETE. Fuente: Afonzo, F. y Díaz, A. (2016). 60 A continuación, se describen las especificaciones técnicas:  HTML 5: lenguaje que provee la estructura.  CSS 3: lenguaje para proporcionar apariencia atractiva a las vistas.  Javascript y Jquery: lenguajes que da dinamismo e interactividad.  AJAX: tecnología para emplear dinamismo.  PostgreSQL 9.4: sistema manejador de base de datos.  Bootstrap: framework web para la agrupación de los lenguajes: HTML 5, CCS3 y Javascript.  Laravel 5.0.33: framework web de desarrollo MVC.  Apache 2.4.9: servidor web para aplicaciones.  Github 1.9.5: sistema controlador de versiones. Asimismo se emplearon diferentes librerías como:  Intervention Image permite el manejo y manipulación de imágenes, empleada para la edición de imágenes proporcionadas por los usuarios de la aplicación.  DomPdf para la creación o guardado de archivos PDF. Se utiliza para crear las listas de alumnos descargadas por los profesores y guardado de recaudos provistos por los usuarios.  Laravel Excel provee un fácil manejo para la creación de archivos en formato xls y cvs, esta herramienta se utiliza para generar listas empleadas en la inscripción masiva de usuarios en la plataforma Moodle. 3.3 Fase III: Prototipaje En esta fase se diseñó el prototipo de baja fidelidad, se ejecutó la implementación de la aplicación CIETE usando el lenguaje de programación PHP, el mismo fue elegido porque es la base del framework de desarrollo Laravel 5, permite la conexión con el Sistema Manejador de Base de Datos: PostgreSQL, ofrece una sintaxis sencilla y comprensible para el programador, facilita el manejo de rutas y la creación de vistas. 61 3.2.1 Prototipos de Interfaz Se elaboraron los prototipos de baja fidelidad de la interfaz de inicio y de sesión de un usuario. En la figura 20, se observa el primer boceto de la interfaz de inicio de la aplicación web en la cual se encuentra el banner con el logo del centro CIETE, un menú de pestañas para ir secciones como información de actividades, información del centro, créditos, entre otras; en módulo para el ingreso de los usuarios registrados en la aplicación web y un pie de página con los logos de las instituciones participantes, información referente al centro y logos de redes sociales pertenecientes al centro. Figura 20. Prototipo de baja fidelidad: Interfaz de Inicio. Fuente: Afonzo, F. y Díaz, A. (2016). En la siguiente figura 21, se presenta la interfaz de perfil de un usuario en la cual se muestra el banner del logo de la institución, imagen representativa del perfil del usuario, las opciones permitidas para ese usuario, información de inicio de la sección y un pie de página con los logos de las instituciones participantes, información referente al centro y logos de redes sociales pertenecientes al centro. 62 Figura 21. Prototipo de baja fidelidad: Interfaz de perfil de un usuario. Fuente: Afonzo, F. y Díaz, A. (2016). Luego de varias conversaciones entre el equipo desarrollador y el coordinador del CIETE se tomó la decisión de modificar el prototipo inicial por el que se muestra en la figura 22. El módulo para ingresar fue trasladado a la parte superior del logo, se mantuvo el menú principal debajo del logo y se añadieron las distintas redes sociales asociadas al centro. Se agregó un breve mensaje de bienvenida y en el pie página se añadió el licenciamiento Creative Commons y una botonera que lleva al inicio, a la sección de contacto o subir a la cabecera respectivamente. 63 Figura 22. Prototipo de baja fidelidad versión dos (2). Fuente: Afonzo, F. y Díaz, A. (2016). En la figura 23, se observa la configuración realizada en el archivo database.php, el cual viene por defecto en la carpeta config del framework Laravel 5, en el mismo se realizó la conexión con el SMBD y se cambiaron los valores por defecto de las variables: default, host, database, username, password y migrations; por los valores correspondientes. Figura 23. Archivo database.php. Una vez realizada la configuración para conectar el framework Laravel 5 con el SMBD, se procedió a crear los modelos, las vistas y los controladores de la aplicación CIETE de acuerdo a 64 la arquitectura de desarrollo: MVC. En primer lugar, se crearon los modelos de donde se obtiene la información solicitada en la vista, según las mejores prácticas se debe crear un modelo por cada tabla a utilizar con el fin de tener una mejor organización y coherencia. En la figura 24, se muestra la carpeta Models con los modelos creados. Figura 24. Carpeta Models Luego, se crearon las vistas por medio del motor de plantillas Blade que incluye Laravel, los cuales son archivos de extensión blade.php que contienen los segmentos de código que se repiten en más de una vista evitando la repetición de instrucciones para un mismo contenido como, por ejemplo, menues, buscadores, pie página, entre otros. En la figura 25, se muestra la vista de la carpeta views en donde se incluyen todas las vistas de la aplicación CIETE. 65 Figura 25. Carpeta de las vistas. Por último, se crearon los controladores en los cuales se realiza la comunicación entre las vistas y los modelos, los mismos se encuentran en el directorio provisto por Lavarel 5 en la carpeta Controllers, como se observa en la figura 26, se definieron los controladores para los usuarios, los roles, las actividades, la inscripción y demás controladores fundamentales. Figura 26. Carpeta Controladores Para acceder a los recursos exclusivos de la aplicación CIETE se debe poseer ciertos permisos, dichos permisos fueron creados por medio de la dependencia Entrust la cual permite asignar permisos basados en roles. En la figura 27, se evidencia la creación de permisos por 66 medio de la instrucción new Permission(); el nombre del permiso, el nombre que se mostrará en la base de datos, por último, cuando se guarda el permiso en la base de datos por medio de la instrucción save(). Figura 27. Permisos. Una vez creados los permisos, se procedió a crear los roles que tendrán los usuarios en la aplicación CIETE, como se muestra en la figura 28 se eliminan los roles anteriores en la base de datos, se crean los roles: administrador, coordinador, participante y profesor; el nombre asociado y una descripción. 67 Figura 28. Roles. Posterior a la creación de roles, se asignaron los permisos a cada rol existente. Primero se obtuvieron todos los permisos creados, se comprobó el nombre de cada permiso y se asoció a cada rol respectivamente. En la figura 296, se observa la asignación de permisos para cada rol, por ejemplo, al rol coordinador se le asignaron los permisos “ver_lista_cursos”, “crear_cursos”, “editar_cursos”, entre otros concernientes a su alcance en la permisología. Figura 29. Asignación de permisos a cada rol. Se implementaron vistas bases que contienen la cabecera, el menú, mensajes y el pie de página, los cuales están presentes en todas las vistas de la aplicación evitando la repetición de 68 código innecesario. Las vistas en la aplicación son mostradas según el permiso que posea un rol, es decir, el rol participante solamente podrá visualizar los recursos permitidos, a su vez, las mismas poseen las vistas complementarias. En la figura 30, se presenta la vista de Notas de un usuario con rol participante, en la misma se encuentran las vistas complementarias y el permiso para ver el recurso por medio de la instrucción Entrust::can(‘ver_cursos_part). Figura 30. Vista Notas. Posteriormente, se realizó la lista de comprobación con el fin de evaluar si el prototipo desarrollado cumple con la mayor parte de los requerimientos para lo que fue creado. La lista de comprobación es un instrumento de evaluación utilizado en la Interacción Humano-Computador para realizar un análisis de la usabilidad sobre las funcionalidades desarrolladas en el sistema, la misma consta de las pruebas que se observan a continuación: 69 Tabla 11 Lista de Comprobación Pruebas ¿Se cumple? Se mantiene un formato consistente de una pantalla a otra Se evidencian palabra coloquiales y abreviaturas Permite al usuario personalizar la interfaz de usuario Se mantiene la interfaz simple, sencilla y organizada Provee asistencia cuando el usuario lo requiere Reconocer en lugar de recordar Se evidencia el uso de indicadores visuales Se utilizan metáforas adecuadas, y en lo posible, las metáforas estándares Se minimiza las posibilidades de cometer errores Existe feedback a las acciones del usuario Las funciones del sistema están claramente visibles e identificables Nota. Fuente: Afonzo, F. y Díaz, A. (2016). Se realizó la evaluación a través de la lista de comprobación la cual fue enviada a los diez (10) miembros del centro conformados por el director, coordinador, personal administrativo, los profesores y los mediadores del CIETE, así como también a nueve (9) futuros participantes. Fue respondida por trece (13) personas conformadas por dos (2) profesores, un (1) coordinador, un (1) director y nueve (9) usuarios de tipo participante. En las siguientes figuras se muestran los resultados. 70 Figura 31. Resultados de la prueba: se mantiene un formato de una pantalla a otra. Fuente: Afonzo, F. y Díaz, A. (2016). Figura 32. Resultados de la prueba: se evidencian palabras coloquiales y/o abreviaturas. Fuente: Afonzo, F. y Díaz, A. (2016). 13 0 1. Se mantiene un formato consistente de una pantalla a otra Si No 4 9 2. Se evidencian palabra coloquiales y abreviaturas Si No 71 Figura 33. Resultados de la prueba: permite al usuario personalizar la interfaz de usuario. Fuente: Afonzo, F. y Díaz, A. (2016). Figura 34. Resultados de la prueba: se mantiene la interfaz simple, sencilla y organizada. Fuente: Afonzo, F. y Díaz, A. (2016). 7 6 3. Permite al usuario personalizar la interfaz de usuario Si No 12 1 4. Se mantiene la interfaz simple, sencilla y organizada Si No 72 Figura 35. Resultados de la prueba: provee asistencia cuando el usuario lo requiere. Fuente: Afonzo, F. y Díaz, A. (2016). Figura 36. . Resultados de la prueba: reconocer en lugar de recordar. Fuente: Afonzo, F. y Díaz, A. (2016). 10 3 5. Provee asistencia cuando el usuario lo requiere Si No 11 2 6. El uso de la página es reconocible y práctico Si No 73 Figura 37. Resultados de la prueba: se evidencia el uso de indicadores visuales. Fuente: Afonzo, F. y Díaz, A. (2016). Figura 38. Resultados de la prueba: se utilizan metáforas adecuadas, y en lo posible, las metáforas estándares. Fuente: Afonzo, F. y Díaz, A. (2016). 11 2 7. Se evidencia el uso de indicadores visuales. Ejemplo: iconos Si No 11 2 8. Se utilizan metáforas adecuadas, y en lo posible, las metáforas estándares. Ejemplo: el icono del bote de basura se asocia con la acción eliminar. Si No 74 Figura 39. Resultados de la prueba: se minimiza las posibilidades de cometer errores. Fuente: Afonzo, F. y Díaz, A. (2016). Figura 40. Resultados de la prueba: existen avisos a las acciones del usuario. Fuente: Afonzo, F. y Díaz, A. (2016). 12 1 9. Se minimiza las posibilidades de cometer errores Si No 12 1 10. Existen avisos a las acciones del usuario Si No 75 Figura 41. Resultados de la prueba: las funciones del sistema están claramente visibles e identificables. Fuente: Afonzo, F. y Díaz, A. (2016). Al analizar los resultados obtenidos se puede concluir que el prototipo desarrollado cumple con la mayoría de los requerimientos antes expuestos y se tomaron en cuenta para realizar las mejoras correspondientes. En la siguiente fase se expondrán los resultados de las pruebas realizadas al producto final. 3.4 Fase IV: Pruebas Esta última fase de la metodología es muy importante ya que se determina si el producto final es usable, sin errores y satisface las expectativas del usuario mediante la realización de pruebas de usabilidad con el fin de poner la aplicación en producción. 3.4.1 Cuestionario Para cumplir con esta etapa de la metodología, se realizó un cuestionario basado en los criterios de usabilidad empleando la escala de Likert la cual permite medir el grado positivo, neutral y negativo de cada pregunta. Dicho cuestionario se encuentra en el Anexo B y fue enviado a los diez (10) miembros del centro conformados por el director, coordinador, personal administrativo, los profesores y los mediadores del CIETE así como también a nueve (9) futuros participantes. Del total de diecinueve (19) respondieron trece (13) personas conformadas por dos (2) profesores, un (1) coordinador, un (1) director y nueve (9) usuarios de tipo participante. Los resultados del cuestionario se muestran en el Anexo C y a continuación se muestra un resumen de los resultados obtenidos para cada enunciado del cuestionario. 12 1 76 Figura 42. Resultados de la prueba de usabilidad. Fuente: Afonzo, F. y Díaz, A. (2016). 77 3.4.2 Pruebas Cross-Browser Las pruebas Cross-Browser permiten verificar que una aplicación web es visible en la mayoría de los navegadores comerciales. Permite evaluar el comportamiento y validar que cumple con los requisitos deseados. La funcionalidad aplicación web del centro CIETE fue probada en los navegadores que se muestran en la siguiente tabla 11, en la misma es posible visualizar el nombre del navegador, su versión y el comportamiento observado. Tabla 12 Pruebas Cross browser Nombre del navegador Versión del navegador Comportamiento Internet Explorer 11 El comportamiento observado fue medianamente satisfactorio, ya que el navegador no soporta algunas funciones de HTML5 Google Chrome 49.0.2623.110 El resultado fue satisfactorio. El navegador soporta las últimas versiones de los lenguajes de programación web. Mozilla Firefox 45.0.1 La mayoría de las funcionalidades de los lenguajes de programación son aceptadas Opera 36.0.2130.46 El resultado fue satisfactorio. El navegador soporta las últimas versiones de los lenguajes de programación web. Nota. Fuente: Afonzo, F. y Díaz, A. (2016). De acuerdo a los resultados obtenidos que se encuentran reflejados en la figura 42 y en la tabla 12, se puede concluir que la aplicación es usable en casi su totalidad ya que obtuvo un número significativo de respuestas favorables y se puede acceder sin dificultades desde la mayoría de los navegadores. Para culminar, en el Capítulo IV se muestran y explican los resultados obtenidos durante el desarrollo de la aplicación del CIETE. 78 CAPITULO IV – Resultados En este capítulo son descritos los resultados en función de la interfaz y las funcionalidades de la aplicación desarrollada para el CIETE luego de aplicar la metodología de desarrollo AgilUs. El sistema está dirigido a todo el personal docente y administrativo del centro y a toda persona interesada en obtener información sobre el CIETE o en cursar cualquiera de las actividades ofertadas. La aplicación cuenta con tres (3) módulos: Administrativo, Académico y Participante, además los Docentes pueden tener varios roles: Profesor, Coordinador y Administrador. Todos los módulos operando conjuntamente, permiten la gestión académica y administrativa del CIETE. 4.1 Página Principal Presenta una breve descripción del CIETE y su función, opciones para obtener más información del centro, si desea una sección para ingresar a la aplicación, como se muestra a continuación la figura 43. Figura 43. Página principal de la aplicación del CIETE. 79 En esta interfaz se hizo énfasis en las actividades ofertadas ya que es lo primero que los nuevos usuarios desean conocer. Para ello se colocaron tres (3) galerías de imágenes y cada una muestra los Diplomados, Cápsulas y Webinar disponibles, cada imagen lleva a su respectiva descripción. Se puede observar un recuadro del lado derecho que permite al usuario dirigirse a una sección que indica el proceso de inscripción a las actividades ofertadas por el centro. Se colocaron también las últimas publicaciones en las redes sociales Twitter e Instagram para que los usuarios se mantengan informados de las noticias más recientes. La página principal posee un menú al cual toda persona puede acceder aunque no esté registrada en la aplicación. Contiene diferentes opciones que permiten obtener información sobre el centro y sus miembros al igual que acceder las actividades disponibles. El menú también proporciona acceso a una sección de créditos, a las aulas virtuales dónde se dictan las actividades y a una sección de inscripción que permite a los usuarios interesados optar por la inscripción a una de las actividades disponibles por medio de un formulario que debe completar con sus datos personales y los datos del pago asociado de ser necesario. Dicho formulario se muestra a continuación en la figura 44. Figura 44. Formulario de inscripción. En la parte superior de la página se puede observar un botón que permite el acceso a la aplicación para los usuarios ya registrados, cómo se muestra a continuación en la figura 45. 80 Figura 45. Botón para acceder a la aplicación. Luego de pulsar el botón de “Entrar” se dirige al usuario al formulario para ingresar, mostrado a continuación en la figura 46. Figura 46. Interfaz de acceso. Si el usuario que desea ingresar olvidó su contraseña, se le muestra una opción abajo del formulario de ingreso para poder proceder al cambio de contraseña. Al acceder a la opción el usuario es redirigido a una página para que ingrese su correo, cómo lo muestra la figura 47 y luego se le envía un correo indicándole el proceso. 81 Figura 47. Interfaz del proceso de cambio de contraseña. El usuario ingresa al vínculo enviado por correo y es dirigido a la página con un formulario para que ingrese su correo, su nueva contraseña y la confirmación de la misma. 4.2 Menú de funcionalidades Después de haber ingresado al sistema, el usuario tiene acceso a un menú situado en el lateral izquierdo, el cual permite acceder a las diferentes funcionalidades que ofrece la aplicación según el rol que tenga asignado. A continuación se mostrarán las diferentes opciones que posee cada usuario según su rol: Administrador, Coordinador, Profesor y Participante. 82 Figura 48. Menú navegación rol Administrador. 83 Figura 49. Menú navegación rol Coordinador. Figura 50. Menú navegación rol Profesor. 84 Figura 51. Menú navegación rol Participante. Se puede observar que todos los tipos de usuarios poseen la opción de “Ver perfil” la cual permite ver sus datos personales y editarlos si lo desean. Por medio de esta opción pueden cambiar igualmente su foto de perfil. A continuación se muestra la vista de edición de datos de perfil. 85 Figura 52. Interfaz de edición de datos de perfil. 4.3 Módulo Administrativo El módulo administrativo permite la gestión de usuarios, actividades, webinars, roles, pagos, preinscripciones e inscripciones. El rol de Administrador y Coordinador cumplen con las mismas tareas administrativas a diferencia que el Coordinador no puede gestionar los usuarios de la aplicación. Ambos roles los pueden cumplir los docentes del centro por lo cual también tienen acceso a la funcionalidad de ver las actividades que dictan y por ende gestionar las notas de sus alumnos. Esta última funcionalidad será explicada más adelante en la sección de Módulo Docente. 4.3.1 Gestión de usuarios. Esta funcionalidad solo la pueden emplear los usuarios con rol Administrador la cual permite agregar nuevos usuarios, editar y eliminar usuarios existentes de la Base de Datos. Todas estas acciones pueden ser accedidas por la opción “Usuarios” del menú lateral izquierdo la cual 86 permite acceder a la lista de usuarios existentes en el sistema como se muestra a continuación en la figura 54. Figura 53. Interfaz de gestión de usuarios. Mediante los siguientes botones se puede editar, eliminar o agregar usuarios al sistema. Figura 54. Botones para la gestión de usuarios. Se facilita la búsqueda de usuarios mediante el buscador que se encuentra en la parte superior de la lista de usuarios de la figura 54 que permite buscar un usuario por Apellido, Documento de identidad, Correo o Rol. Para la creación o edición de usuarios se emplea el mismo formulario, el cual cambia según el rol del usuario. Si el usuario es participante solo se le puede asignar dicho rol y el formulario posee más campos a completar contrariamente al formulario para usuarios con rol Administrador, 87 Coordinador o Profesor el cual tendrá menos campos a completar y se le puede asignar al usuario varios roles a la vez. Figura 55. Formulario de creación de usuario de tipo docente. 88 Figura 56. Formulario de creación de usuario de tipo participante. Si se desea eliminar un usuario del sistema se debe hacer clic en el botón de eliminar, mostrado en la figura 55, y aparecerá una ventana emergente, mostrada en la figura 58, que permite confirmar si desea eliminar efectivamente el usuario. Figura 57. Ventana emergente para eliminar usuario. 89 4.3.2 Gestión de actividades y webinars. En este apartado se describirá los procesos de gestión de diplomados, cápsulas y webinars los cuales son similares ya que son disciplinas que pueden cursar los usuarios. Los diplomados y cápsulas son actividades pagas que tienen una duración en horas variable dictadas en varios días y los participantes obtienen calificaciones, mientras que los webinars son conferencias gratuitas poseen una duración variable en horas, dictadas en un solo día y no se califica a los participantes. Esta funcionalidad permite agregar, editar, eliminar cualquiera de las disciplinas dictadas en el centro y ver la lista de actividades y webinars desactivados. De igual forma se pueden agregar profesores para que dicten las disciplinas y agregar participantes para que cursen los webinars y actividades deseados. Todas estas acciones pueden ser ejecutadas por los usuarios que tengan rol Administrador o Coordinador y pueden ser accedidas desde el menú de funcionalidades mediante las opciones: “Actividades”, “Actividades desactivados”, “Webinars” y “Webinars desactivados”. Figura 58. Interfaz de gestión de actividades. En la figura anterior se pueden observar todas las acciones que se pueden realizar tales cómo agregar una nueva actividad, editar la información de una actividad de la lista, desactivarla, agregar participantes y profesores a la actividad y finalmente generar una lista de participantes por actividad en formato CSV la cual permitirá la inscripción masiva de participantes en la plataforma Moodle que se utiliza para el dictado de las disciplinas con modalidad virtual. Todas estas acciones se llevan a cabo mediante los siguientes botones con su respectiva información de ayuda: 90 Figura 59. Botones para la gestión de actividades y webinars. Ocurre lo mismo para los webinars como se observa a continuación. Figura 60. Interfaz de gestión de webinars. La edición y creación de actividades se realiza mediante un formulario en el cual el usuario deberá completar los campos y decidir si desea que la actividad esté activo en las galerías de imágenes que se encuentran en la página principal (figura 43), si es afirmativa su decisión debe colocar la descripción que aparecerá en la parte inferior de la imagen. Es el mismo proceso para la edición y creación de Webinars. A continuación se muestran los formularios de creación de actividades y webinars en las figuras 62 y 63 respectivamente. 91 Figura 61. Formulario de creación de actividad. Figura 62. Formulario de creación de webinar. 92 El campo de “Especificaciones” es un simulador de editor de texto que permite guardar la información con el formato que desee el usuario para luego mostrarlo con dicho formato en la página de descripción de la actividad o webinar. El formulario para la creación de actividades contiene un campo denominado “Cantidad de módulos” que permite guardar el número de módulos que tendrá la actividad con sus respectivas fechas de inicio y fin y su nombre. Los formularios de edición de actividades y webinars son exactamente iguales a los anteriores con la diferencia de que contienen los datos que se encuentran en la Base de Datos. Al hacer clic en el botón de eliminar se muestra una ventana emergente para que el usuario confirme si desea eliminar la actividad o el webinar, no se eliminará el elemento definitivamente sino que aparecerá en la sección de “Actividades desactivadas” y “Webinars desactivados” respectivamente. Dicha ventana emergente se puede observar en la figura 58. Cuando se selecciona la opción de participantes en la lista de actividades o webinars de las figuras 59 y 61 se muestran al usuario la o las secciones en caso de que existan participantes inscritos en dichas disciplinas, cómo se puede ver en la figura 64. Figura 63. Secciones de una actividad. El usuario debe seleccionar la sección que desea, se muestra la lista de participantes que ya se encuentran inscritos y se tienen las opciones de eliminar un participante o agregar participantes a dicha sección de la actividad seleccionada. En las figuras 65 y 66 se expone respectivamente la vista de la lista de participantes inscritos en la actividad con las opciones antes mencionadas y 93 los participantes que existen en el sistema pero que no están inscritos en la actividad seleccionada y se pueden agregar, en otras palabras esta opción permite inscribir a un participante de forma extemporánea Figura 64. Lista de participantes inscritos en la actividad Diplomado 2. Figura 65. Lista de participantes para agregar en la actividad Diplomado 2. Para el proceso de agregar o eliminar profesores que dicten una actividad o webinar se realizan las mismas acciones que en el caso de los participantes y se accede a esta opción por medio del botón de profesores mostrado en las figuras 59 y 61. El último botón de opciones de la figura 58, presente solo en la lista de actividades, permite acceder a las secciones de la actividad y por cada una de las secciones el docente puede descargar la lista de participantes de dicha sección en formato CSV. Las figuras 67 y 68 ilustran la vista y el documento antes mencionado. 94 Figura 66. Sección de descarga de la lista de participantes por sección de la actividad Diplomado. Figura 67. Documento descargado de la aplicación mostrando la lista de participantes de la sección B de la actividad Diplomado. 95 4.3.3 Gestión de Roles. La gestión de roles permite editar los permisos que posee cada uno de los roles existentes así como crear nuevos roles asociando los permisos deseados. Esta funcionalidad solo la puede acceder el docente con rol Administrador y puede ser accedida por la opción de “Roles” del menú de funcionalidades (figura 69). Figura 68. Lista de Roles existentes. La figura anterior muestra la lista de roles existentes y permite la edición y eliminación de los mismos. En la parte inferior se encuentra un botón para la creación de nuevos roles el cual lleva a un formulario donde se debe completar el nombre del rol su descripción y elegir los permisos que se desea asociar al mismo. Por medio de esta funcionalidad se puede gestionar el acceso a las diferentes secciones de la aplicación y de esta forma asegurarse que cada docente tenga acceso únicamente a las funciones que debe desempeñar. 96 4.3.4 Gestión de inscripción. Los usuarios de rol Administrador y Coordinador pueden seleccionar las actividades que estarán disponibles para la inscripción al público por medio de una lista que puede ser accedida a través de la opción “Inscripción de actividades” y “Inscripción de webinars” del menú de funcionalidades. Al activar o desactivar las actividades y webinars en esta lista, aparecerán o se eliminaran del formulario de la figura 44 antes mostrada. Al momento en que un usuario completa y envía el formulario antes mencionado sus datos son guardados en Base de Datos y aparecen en una lista para que el administrador o coordinador encargado pueda validar o no su inscripción y de esta forma el usuario recibirá un correo anunciando el resultado. En caso de obtener una respuesta positiva el participante ingresa, por medio de los datos enviados por correo, a la aplicación y podrá terminar de completar sus datos para finalizar el proceso de inscripción. Figura 69. Vista para activar o desactivar una actividad o webinar de la inscripción. 4.3.5 Gestión de pagos La gestión de pagos se puede realizar mediante la opción del menú lateral izquierdo “Gestión de pagos”, la cual permite a los usuarios Administrador y Coordinador aprobar o rechazar un pago realizado por un participante. A continuación se muestra la vista de la lista de pagos hechos por los participantes. 97 Figura 70. Vista de la lista de pagos realizados por los participantes. Al aprobar un pago, se le envía un correo al participante informándole que su pago ha sido aprobado, en el caso contrario el administrador o coordinador ingresa en una ventana emergente el motivo del rechazo y el participante recibe un correo con dicha información. 4.4 Módulo Académico En este apartado se describen las funcionalidades a las cuales tienen acceso los usuarios con rol Administrador, Coordinador y Profesor y tratan principalmente la gestión de notas de los participantes. Los profesores del CIETE pueden acceder a la aplicación para ver las actividades que dictan, los participantes por sección, asignar, editar y eliminar las calificaciones de los alumnos, obtener el listado de alumnos por sección y finalmente podrán generar un informe académico por módulo y sección. Todos estos procesos se asemejan a los anteriormente descritos por lo que no se mostraran las vistas a excepción de la vista de calificación la cual se presenta a continuación. 98 Figura 71. Notas de un alumno de la actividad Diplomado 1. Figura 72. Formulario para agregar una nueva nota. En la vista anterior se puede observar una ventana emergente que aparece al momento de hacer clic en el botón de agregar nota de la figura 72, la cual permite agregar una nueva nota. Los docentes también pueden acceder a la lista de los webinars dictados por medio de la opción “Webinars dictados” del menú lateral izquierdo y por medio de dicha funcionalidad pueden obtener el listado de alumnos por sección. Los usuarios con rol Administrador, Coordinador y Profesor pueden generar un informe académico en el cual aparece la nota final obtenida por los participantes de una actividad, de una sección específica durante un módulo. A continuación en la figura 74 se muestra un ejemplo de informe académico: 99 Figura 73. Informe académico del módulo 1 del grupo A. Parte 1. 100 Figura 74. Informe académico del módulo 1 del grupo A. Parte 2. 4.5 Módulo Participante Las funcionalidades de este módulo pueden ser empleadas por los usuarios con rol Participante únicamente. El participante puede ver las actividades y webinars inscritos, las notas que haya obtenido durante las actividades y finalmente puede ver los pagos realizados, generar pagos nuevos según sea el caso y generar los recibos asociados a dichos pagos. En la figura 76 se expone la vista de las notas que ha obtenido un alumno durante una actividad. Mediante esta vista el alumno puede conocer las calificaciones que ha obtenido en un módulo dado, su valor en porcentaje, su nota final según lo evaluado y que porcentaje queda por evaluar. 101 Figura 75. Vista de las notas obtenidas por un alumno en la actividad Diplomado 1. En la figura 77 se puede observar la lista de pagos realizados por un participante con su estatus, al igual que las acciones que puede realizar, tales como generar recibo de pago o agregar un nuevo pago. Figura 76. Vista de los pagos realizados de la actividad Diplomado 1. Para agregar un nuevo pago el participante debe ingresar en un formulario el monto, el tipo de pago (depósito o transferencia) y el número de depósito o de transferencia. Al guardar los datos el estatus del pago aparecerá como “En espera” y recibirá un correo anunciándole si su pago fue aprobado o rechazado. Cabe destacar que cada interfaz que contenga una lista, posee un buscador en la parte superior de cada una para que el usuario no malgaste su tiempo en una búsqueda manual. La búsqueda se realiza mediante la selección de una característica asociada a los elementos de las diferentes listas, ya sea por nombre, tipo de actividad, entre otros. 102 Conclusiones El Centro de Innovación y Emprendimiento para el uso de las Tecnologías en Educación (CIETE) realizaba la oferta de sus actividades mediante una página web estática, los procesos internos conformados por la gestión académica y administrativa eran efectuados manualmente, empleando diversas tecnologías provocando una descentralización de información sensitiva. Dicha herramienta generaba que las tareas académicas administrativas no cumplieran con estándares de eficiencia y efectividad, ya que los recursos eran manejados con tecnología inadecuada. Para agilizar y mejorar los procesos involucrados en el CIETE, se realizó un análisis previo por medio de las actividades inmersas al aplicar la metodología de desarrollo AgilUs, mediante los requerimientos funcionales y no funcionales, la recolección de datos y encuestas se obtuvieron las diferentes funcionalidades y elementos que debían estar presentes en la aplicación web desarrollada. La aplicación web fue implementada con las tecnologías y herramientas de software libre y de estándar abierto siguiendo el marco de la ley de Infogobierno, logrando un avance significativo para el centro, ya que la aplicación web implementada permitió guardar los datos de inscripción, los datos de pagos realizados por los participantes, las notas asignadas por los profesores, la información acerca de las actividades disponibles en una sola base de datos, generando la centralización de la información, y la automatización de los procesos. La aplicación web desarrollada incorpora las ventajas de las Tecnologías de Información y Comunicación en su día a día, asegurando una mejora continua en el servicio prestado por el CIETE y una armonización de todas las personas involucradas. 103 Recomendaciones El alcance de esta aplicación web solo abarcaba funcionalidades que se consideraron primordiales para una primera versión de la misma. En base a los resultados obtenidos en los instrumentos de recolección datos, se describen algunas funcionalidades que podrían ser añadidas en futuro cercano:  Repositorio de contenido en donde los profesores y participantes puedan obtener la información sobre tesis, artículos científicos, textos educativos.  Crear un módulo específico para realizar videoconferencias entre los profesores y participantes.  Desarrollar un módulo para la emisión de constancias y certificados en línea para los participantes.  Agregar localización a la aplicación para que esté traducida en distintos idiomas y así permitir a estudiantes de otras nacionalidades disfrutar de los servicios del CIETE. Finalmente este proceso puede ser aplicado a otras instituciones similares que así lo requieren, adaptándolo a las necesidades y requerimientos propios de la institución 104 Referencias Bibliográficas Acosta, A. E. (2011). AgilUs: Construcción ágil de la Usabilidad. Recuperado de: GenAsig, http://www.ciens.ucv.ve:8080/genasig/sites/interaccion-humano- comp/archivos/234_CLEI_Acosta_Paper.pdf Adell, J. Bellver, C. (1994) La internet como telaraña: El WorldWide Web. Revista Métodos de Información. Recuperado de: DIALNET, https://dialnet.unirioja.es/servlet/articulo?codigo=2968520 Ankur J, Saket K , Satish, D. K. Pal . (2015). Escala de Likert: Explorada y Explicada. Revista Periódico Británico de Ciencias aplicadas y Tecnología. Recuperado de: Sciencedomain international, http://sciencedomain.org/abstract/8206 Aumaille, B. (2002). J2EE: Desarrollo de aplicaciones Web. (p. 26). España: ENI. Bascón, E. (2004). El patrón de diseño Modelo-Vista-Controlador (MVC) y su implementación en Java Swing. Revista de Ciencias y Tecnologías Acta Nova. Recuperado de: UCBCONOCIMIENTO, http://ucbconocimiento.ucbcba.edu.bo/index.php/ran/article/view/84/81 Béjar, R. Latre, M. Lopez-Pellicer, F. Nogueras-Iso, J. Zarazaga-Soria, Francisco. (2015). Github como herramienta docente. Recuperado de: UPCommons, http://upcommons.upc.edu/bitstream/handle/2117/76761/JENUI2015_76- 83.pdf?sequence=1&isAllowed=y Cabezas G., L. M. (2004). Manual Imprescindible de PHP5. España: Anaya Chacon, S. Straub, B. (2014) Pro Git. Estados Unidos de América: Apress. Cobo, A. Gómez, P. Pérez, D. y Rocha, R. (2005). PHP y MySQL: Tecnología para el desarrollo de aplicaciones web. España: Díaz de Santos. Crosby, P. Ivacevich, J. Lorenzi, P. Skinner, S. (1995). Gestión, Calidad y Competitividad. España: McGraw Hill/Interamericana Drake, J. Worsley, J. (2002). Practical PostgreSQL. Estados Unidos de América: O’REILLY. http://ucbconocimiento.ucbcba.edu.bo/index.php/ran/article/view/84/81 105 Gauchat, J. D. (2012). El gran libro de HTML5, CSS3 y Javascript. Barcelona: Marcombo. Gutiérrez, J. J. (2006). ¿Qué es un framework web? Recuperado de: US, http://www.lsi.us.es/~javierj/investigacion_ficheros/Framework.pdf Hernández, A. Iglesias, S. Chaparro, J. & Pascual, F. (2009). La Web en el móvil: tecnologías y problemática. Revista El profesional de la información. Recuperado de: DIALNET, https://dialnet.unirioja.es/servlet/articulo?codigo=2968520 Inciarte, A. Marcano, N. Reyes, M. (2006). Gestión académico-administrativa en la educación básica. Revista Venezolana de gerencia. Recuperado de: PRODUCCIONCIENTIFICALUZ, http://www.produccioncientificaluz.org/index.php/rvg/article/view/10434/10422 Korth, H. Silberschatz, A. Sudarshan, S. (2002). Fundamentos de Bases de Datos. España: McGraw-Hill Luján M (2002) Programación de aplicaciones web: historia, principios básicos y clientes web. España: Club Universitario Maldonado, A. & Rodríguez, L. (2006). La información especializada en Internet. Directorio de recursos de interés académico y profesional. España: CSIC-CINDOC. Moros, D. (2011). Desarrollo de un módulo de administración del proceso de gestión académica de los cursos impartidos por la Escuela de Idiomas Modernos de la Universidad Central de Venezuela. (Tesis inédita). Universidad Central de Venezuela. Caracas. Otto, M. Thornton, J. (2015). Bootstrap 3, el manual oficial. Recuperado de http://librosweb.es/libro/bootstrap_3/. http://www.lsi.us.es/~javierj/investigacion_ficheros/Framework.pdf https://dialnet.unirioja.es/servlet/articulo?codigo=2968520 http://www.produccioncientificaluz.org/index.php/rvg/article/view/10434/10422 http://librosweb.es/libro/bootstrap_3/ 106 Paré, R. (2002). Introducción a las bases de datos. Recuperado de: UOC: http://ocw.uoc.edu/computer-science-technology-and-multimedia/bases-de-datos/bases-de datos/P06_M2109_02147.pdf Peñafiel M. (2015). Aplicaciones web. Recuperado de: SCRIBD, http://es.scribd.com/doc/136052164/APLICACIONES-WEB-pdf Ramírez, C. (2004). La gestión administrativa en las instituciones educativas. México: Limusa. Ríos, D. (2014). Laravel PHP framework. Recuperado de: http://donaldorios.com/2014/07/22/laravel-php-framework/. Rodríguez, L. (2001). Bases de datos documentales: estructura y uso. Madrid: CINDOC. Zato, J. (2004). El acceso de las personas con discapacidad a las nuevas tecnologías. España: Comunidad de Madrid http://es.scribd.com/doc/136052164/APLICACIONES-WEB-pdf http://donaldorios.com/2014/07/22/laravel-php-framework/ 107 Anexo A Descripción de los Casos de Uso Tabla 1. Especificación del caso de uso: Ver actividades inscritas Caso de Uso CU 1.1– Ver actividades inscritas Actor Participantes Pre-condición El participante debe haber iniciado sesión en la aplicación y haber inscrito al menos una actividad. Acción Funcionalidad que permite al participante visualizar la lista de actividades inscritas. Condición de Éxito El participante podrá observar la lista de actividades que haya inscrito. Tabla 2. Especificación del caso de uso: Ver notas asignadas Caso de Uso CU 1.1.1 – Ver notas asignadas Actor Participantes Pre-condición El participante debe haber iniciado sesión en la aplicación y haber inscrito al menos una actividad. Acción Funcionalidad que permite al participante visualizar las notas obtenidas durante la realización de una actividad. Condición de Éxito El participante podrá observar sus notas obtenidas al igual que su promedio en caso de no haber culminado la actividad. 108 Tabla 3. Especificación del caso de uso: Ver pagos realizados Caso de Uso CU 1.1.2 – Ver pagos realizados Actor Participantes Pre-condición El participante debe haber iniciado sesión en la aplicación Acción Funcionalidad que permite al participante visualizar los pagos realizados de una o más actividades. Condición de Éxito El participante podrá observar sus pagos realizados. Tabla 5. Especificación del caso de uso: Realizar pagos Caso de Uso CU 1.1.2.1 – Realizar pagos Actor Participantes Pre-condición El participante debe haber iniciado sesión en la aplicación Acción Funcionalidad que permite al participante realizar los pagos de una o más actividades. Condición de Éxito Se guardará la información en la Base de datos. Tabla 6. Especificación del caso de uso: Editar perfil Caso de Uso CU 1.2 – Editar perfil Actor Todos los actores Pre-condición El usuario debe haber iniciado sesión en la aplicación. Acción Funcionalidad que permite al usuario editar sus datos personales y guardarlos. Condición de Éxito Se actualizarán los datos en la Base de Datos de la aplicación. 109 Tabla 7. Especificación del caso de uso: Cierre de sesión Caso de Uso CU 1.3 – Cierre de sesión Actor Todos los actores Pre-condición El usuario debe haber iniciado sesión en la aplicación. Acción Funcionalidad que permite al usuario finalizar la sesión en la aplicación. Condición de Éxito Se redirigirá al usuario a la página principal. Tabla 8. Especificación del caso de uso: Ver información Caso de Uso CU 1.3 – Ver información Actor Todos los participantes Pre-condición El usuario debe haber iniciado sesión en la aplicación Acción Funcionalidad que permite al usuario visualizar sus datos básicos. Condición de Éxito El participante podrá observar datos. Tabla 9. Especificación del caso de uso: Inscribirse Caso de Uso CU 1.4 – Inscribirse Actor Participantes Pre-condición El participante debe haber llenado el formulario de inscripción y haber recibido el correo de aprobación por parte del CIETE. Acción Funcionalidad que permite al usuario formalizar la inscripción en una actividad para la haya realizado su pago. Condición de Éxito Se guardarán los datos en la Base de Datos de la aplicación. En la siguiente figura se puede observar el caso de uso del actor Profesor, el cual es desempañado por los diferentes docentes del centro. Varias funcionalidades ya fueron especificadas anteriormente por lo cual solo se describirán aquellas que no lo hayan sido. 110 Figura 1. Caso de uso del actor Profesor El actor profesor puede tener asignado diferentes roles para el uso de aplicación, incluso puede desempeñar varios roles a la vez (Coordinador y Administrador). En las figuras 2 y 3 se muestran sus funcionalidades las cuales serán especificadas más adelante. 111 Figura 2. Caso de uso del rol Coordinador 112 Figura 3. Caso de uso del rol Administrador 113 Tabla 10. Especificación del caso de uso: Ver actividades dictadas Caso de Uso CU 1.4 – Ver actividades dictadas Actor Profesor, Coordinador y Administrador Pre-condición El usuario debe haber iniciado sesión. Acción Funcionalidad que permite al usuario ver las actividades que dicta. Condición de Éxito Se mostrará la lista de actividades. Tabla 11. Especificación del caso de uso: Generar listado participantes Caso de Uso CU 1.4.1 – Generar listado participantes Actor Profesor, Coordinador y Administrador Pre-condición El usuario debe haber iniciado sesión. Acción Funcionalidad que permite al usuario generar el listado de los participantes de alguna de las actividades que dicte. Condición de Éxito Se descargará la lista de participantes deseada en formato PDF. Tabla 12. Especificación del caso de uso: Generar informes académicos Caso de Uso CU 1.4.2 – Generar informes académicos Actor Profesor, Coordinador y Administrador Pre-condición El usuario debe haber iniciado sesión. Acción Funcionalidad que permite al usuario generar los informes de académicos de las actividades que dicte Condición de Éxito Se descargará el informe académico deseado en formato PDF. 114 Tabla 13. Especificación del caso de uso: Gestionar notas Caso de Uso CU 1.4.3 – Gestionar notas Actor Profesor, Coordinador y Administrador Pre-condición El usuario debe haber iniciado sesión. Acción Funcionalidad que permite al usuario ver las notas asignadas a un participante de existir alguna y se le muestra al usuario las opciones de agregar, editar o eliminar notas. Condición de Éxito Se muestran las notas asignadas si existe alguna, si no se muestra la opción de agregar notas. Tabla 14. Especificación del caso de uso: Agregar notas Caso de Uso CU 1.4.3.1 – Agregar notas Actor Profesor, Coordinador y Administrador Pre-condición El usuario debe haber iniciado sesión. Acción Funcionalidad que permite al usuario asignar una nueva nota al participante seleccionado. Condición de Éxito Se guardará la información en la Base de Datos de la aplicación. Tabla 15. Especificación del caso de uso: Editar notas Caso de Uso CU 1.4.3.2 – Editar notas Actor Profesor, Coordinador y Administrador Pre-condición El usuario debe haber iniciado sesión. Acción Funcionalidad que permite al usuario editar una nota asignada anteriormente al participante seleccionado. Condición de Éxito Se guardará la información en la Base de Datos de la aplicación. 115 Tabla 16. Especificación del caso de uso: Eliminar notas Caso de Uso CU 1.4.3.3 – Eliminar notas Actor Profesor, Coordinador y Administrador Pre-condición El usuario debe haber iniciado sesión. Acción Funcionalidad que permite al usuario eliminar una nota asignada anteriormente al participante seleccionado. Condición de Éxito Se eliminará la información en la Base de Datos de la aplicación. Tabla 17. Especificación del caso de uso: Gestión de actividades académicas Caso de Uso CU 1.5 – Gestión de actividades académicas Actor Coordinador y Administrador Pre-condición El usuario debe haber iniciado sesión. Acción Funcionalidad que permite al usuario ver la lista de actividades académicas ofertadas por el CIETE y se muestran las diferentes opciones: agregar, editar y eliminar curso. Condición de Éxito Se muestra la lista de actividades académicas con las diferentes opciones. Tabla 15. Especificación del caso de uso: Agregar actividad Caso de Uso CU 1.5.1 – Agregar actividad Actor Coordinador y Administrador Pre-condición El usuario debe haber iniciado sesión y la nueva actividad no debe existir en la Base de Datos. Acción Funcionalidad que permite al usuario agregar nuevas actividades a la lista de actividades ofertadas por el CIETE. Condición de Éxito Se guardará la información en la Base de Datos de la aplicación. 116 Tabla 16. Especificación del caso de uso: Editar actividad Caso de Uso CU 1.5.2 – Editar actividad Actor Coordinador y Administrador Pre-condición El usuario debe haber iniciado sesión. Acción Funcionalidad que permite al usuario editar la información de una actividad de la lista de actividades ofertadas por el CIETE. Condición de Éxito Se actualizará la información en la Base de Datos de la aplicación. Tabla 17. Especificación del caso de uso: Eliminar actividad Caso de Uso CU 1.5.3 – Eliminar actividad Actor Coordinador y Administrador Pre-condición El usuario debe haber iniciado sesión y la actividad debe existir en la Base de Datos. Acción Funcionalidad que permite al usuario eliminar actividades de la lista de actividades ofertadas por el CIETE. Condición de Éxito Se actualizará la información en la Base de Datos de la aplicación. Tabla 18. Especificación del caso de uso: Gestión de participantes de una actividad Caso de Uso CU 1.5.4 – Gestión de participantes de una actividad Actor Coordinador y Administrador Pre-condición El usuario debe haber iniciado sesión. Acción Funcionalidad que permite al usuario de ver la lista de participantes pertenecientes a una actividad y observar la opciones de agregar o eliminar a los participantes de la misma. Condición de Éxito Se mostrará la lista de participantes con las opciones 117 Tabla 19. Especificación del caso de uso: Ver participantes actividad Caso de Uso CU 1.5.4.1 – Ver participantes actividad Actor Coordinador y Administrador Pre-condición El usuario debe haber iniciado sesión y deben existir participantes inscritos en la actividad seleccionada. Acción Funcionalidad que permite al usuario de ver la lista de participantes pertenecientes a la actividad seleccionada. Condición de Éxito Se mostrará la lista de participantes. Tabla 20. Especificación del caso de uso: Agregar participantes actividad Caso de Uso CU 1.5.4.2 – Agregar participantes actividad Actor Coordinador y Administrador Pre-condición El usuario debe haber iniciado sesión y deben existir participantes en la Base de Datos que no estén inscritos en la actividad seleccionada. Acción Funcionalidad que permite al usuario ver la lista de participantes que no estén inscritos en la actividad seleccionada y agregar los participantes que desee. Condición de Éxito Se guardará la información en la Base de Datos de la aplicación. Tabla 21. Especificación del caso de uso: Eliminar participantes actividad Caso de Uso CU 1.5.4.3 – Eliminar participantes actividad Actor Coordinador y Administrador Pre-condición El usuario debe haber iniciado sesión y deben existir participantes inscritos en la actividad seleccionada. Acción Funcionalidad que permite al usuario eliminar participantes inscritos en la actividad seleccionada. Condición de Éxito Se guardará la información en la Base de Datos de la aplicación. 118 Tabla 22. Especificación del caso de uso: Gestión de profesores actividad Caso de Uso CU 1.5.5 – Gestión de profesores de una actividad Actor Coordinador y Administrador Pre-condición El usuario debe haber iniciado sesión. Acción Funcionalidad que permite al usuario de ver la lista de profesores que dictan una actividad y observar la opciones de agregar o eliminar los profesores que dicten una actividad. Condición de Éxito Se mostrará la lista de participantes con las opciones Tabla 23. Especificación del caso de uso: Ver profesores actividad Caso de Uso CU 1.5.5.1 – Ver profesores actividad Actor Coordinador y Administrador Pre-condición El usuario debe haber iniciado sesión y deben existir profesores que dicten la actividad seleccionada. Acción Funcionalidad que permite al usuario de ver la lista de profesores que dictan la actividad seleccionada. Condición de Éxito Se mostrará la lista de profesores. Tabla 24. Especificación del caso de uso: Agregar profesores actividad Caso de Uso CU 1.5.5.2 – Agregar profesores actividad Actor Coordinador y Administrador Pre-condición El usuario debe haber iniciado sesión y deben existir profesores en la Base de Datos que no dicten la actividad seleccionada. Acción Funcionalidad que permite al usuario de ver la lista de profesores que no dicten la actividad seleccionada y agregar los profesores que desee. Condición de Éxito Se guardará la información en la Base de Datos de la aplicación. 119 Tabla 25. Especificación del caso de uso: Eliminar profesores actividad Caso de Uso CU 1.5.5.3 – Eliminar profesores actividad Actor Coordinador y Administrador Pre-condición El usuario debe haber iniciado sesión y deben existir profesores que dicten la actividad seleccionada. Acción Funcionalidad que permite al usuario eliminar profesores que dicten el curso seleccionado. Condición de Éxito Se guardará la información en la Base de Datos de la aplicación. Tabla 26. Especificación del caso de uso: Activar actividad Caso de Uso CU 1.5.6 – Activar actividad Actor Coordinador y Administrador Pre-condición El usuario debe haber iniciado sesión y deben existir actividades eliminadas. Acción Funcionalidad que permite al usuario activar actividades que fueron eliminadas. Condición de Éxito Se guardará la información en la Base de Datos de la aplicación y las actividades activadas aparecerán en la lista de actividades ofertadas por el CIETE. Tabla 27. Especificación del caso de uso: Gestión de Pagos Caso de Uso CU 1.6 – Gestión de Pagos Actor Coordinador y Administrador Pre-condición El usuario debe haber iniciado sesión y deben existir pagos realizados por los participantes Acción Funcionalidad que permite al usuario aprobar o rechazar pagos Condición de Éxito Se guardará la información en la Base de Datos de la aplicación 120 Tabla 28. Especificación del caso de uso: Aprobar Pago Caso de Uso CU 1.6.1 – Aprobar Pago Actor Coordinador y Administrador Pre-condición El usuario debe haber iniciado sesión y deben existir pagos realizados por los participantes Acción Funcionalidad que permite al usuario aprobar pagos Condición de Éxito Se guardará la información en la Base de Datos de la aplicación Tabla 29. Especificación del caso de uso: Rechazar Pagos Caso de Uso CU 1.6 – Rechazar Pagos Actor Coordinador y Administrador Pre-condición El usuario debe haber iniciado sesión y deben existir pagos realizados por los participantes Acción Funcionalidad que permite al usuario rechazar pagos Condición de Éxito Se guardará la información en la Base de Datos de la aplicación Tabla 30. Especificación del caso de uso: Gestionar de webinar Caso de Uso CU 1.7 – Gestionar de webinars Actor Profesor, Coordinador y Administrador Pre-condición El usuario debe haber iniciado sesión. Acción Funcionalidad que permite al usuario ver la lista de webinars ofertados por el CIETE y se muestran las diferentes opciones: agregar, editar y eliminar webinars. Condición de Éxito Se muestra la lista de cursos con las diferentes opciones. 121 Tabla 28. Especificación del caso de uso: Agregar webinar Caso de Uso CU 1.7.1 – Agregar webinar Actor Profesor, Coordinador y Administrador Pre-condición El usuario debe haber iniciado sesión y el nuevo webinar no debe existir en la Base de Datos. Acción Funcionalidad que permite al usuario agregar nuevos webinars a la lista de webinars ofertados por el CIETE. Condición de Éxito Se guardará la información en la Base de Datos de la aplicación. Tabla 29. Especificación del caso de uso: Editar webinar Caso de Uso CU 1.7.2 – Editar webinar Actor Profesor, Coordinador y Administrador Pre-condición El usuario debe haber iniciado sesión. Acción Funcionalidad que permite al usuario editar la información de un webinar de la lista de webinars ofertados por el CIETE. Condición de Éxito Se actualizará la información en la Base de Datos de la aplicación. Tabla 30. Especificación del caso de uso: Eliminar webinar Caso de Uso CU 1.7.3 – Eliminar webinar Actor Profesor, Coordinador y Administrador Pre-condición El usuario debe haber iniciado sesión y el webinar debe existir en la Base de Datos. Acción Funcionalidad que permite al usuario eliminar webinars de la lista de webinars ofertados por el CIETE. Condición de Éxito Se actualizará la información en la Base de Datos de la aplicación. 122 Tabla 31. Especificación del caso de uso: Gestión de participantes de un webinar Caso de Uso CU 1.7.4 – Gestión de participantes de un webinar Actor Coordinador y Administrador Pre-condición El usuario debe haber iniciado sesión. Acción Funcionalidad que permite al usuario de ver la lista de participantes pertenecientes a un webinar y observar la opciones de agregar o eliminar a los participantes de un webinar. Condición de Éxito Se mostrará la lista de participantes con las opciones Tabla 32. Especificación del caso de uso: Ver participantes actividad Caso de Uso CU 1.7.4.1 – Ver participantes actividad Actor Coordinador y Administrador Pre-condición El usuario debe haber iniciado sesión y deben existir participantes inscritos en el webinar seleccionado. Acción Funcionalidad que permite al usuario de ver la lista de participantes pertenecientes al webinar seleccionado. Condición de Éxito Se mostrará la lista de participantes. Tabla 33. Especificación del caso de uso: Agregar participantes actividad Caso de Uso CU 1.7.4.2 – Agregar participantes actividad Actor Coordinador y Administrador Pre-condición El usuario debe haber iniciado sesión y deben existir participantes en la Base de Datos que no estén inscritos en el webinar seleccionado. Acción Funcionalidad que permite al usuario de ver la lista de participantes que no estén inscritos en el webinar seleccionado y agregar los participantes que desee. Condición de Éxito Se guardará la información en la Base de Datos de la aplicación. 123 Tabla 34. Especificación del caso de uso: Eliminar participantes actividad Caso de Uso CU 1.7.4.3 – Eliminar participantes actividad Actor Coordinador y Administrador Pre-condición El usuario debe haber iniciado sesión y deben existir participantes inscritos en el webinar seleccionado. Acción Funcionalidad que permite al usuario eliminar participantes inscritos en el webinar seleccionado. Condición de Éxito Se guardará la información en la Base de Datos de la aplicación. Tabla 35. Especificación del caso de uso: Gestión de profesores de un webinar Caso de Uso CU 1.7.5 – Gestión de profesores de un webinar Actor Coordinador y Administrador Pre-condición El usuario debe haber iniciado sesión. Acción Funcionalidad que permite al usuario de ver la lista de profesores que dictan un webinar y observar la opciones de agregar o eliminar los profesores que dicten un webinar. Condición de Éxito Se mostrará la lista de participantes con las opciones Tabla 36. Especificación del caso de uso: Ver profesores actividad Caso de Uso CU 1.7.5.1 – Ver profesores actividad Actor Coordinador y Administrador Pre-condición El usuario debe haber iniciado sesión y deben existir profesores que dicten el webinar seleccionado. Acción Funcionalidad que permite al usuario de ver la lista de profesores que dictan el webinar seleccionado. Condición de Éxito Se mostrará la lista de profesores. 124 Tabla 37. Especificación del caso de uso: Agregar profesores actividad Caso de Uso CU 1.7.5.2 – Agregar profesores actividad Actor Coordinador y Administrador Pre-condición El usuario debe haber iniciado sesión y deben existir profesores en la Base de Datos que no dicten el webinar seleccionado. Acción Funcionalidad que permite al usuario de ver la lista de profesores que no dicten el webinar seleccionado y agregar los profesores que desee. Condición de Éxito Se guardará la información en la Base de Datos de la aplicación. Tabla 38. Especificación del caso de uso: Eliminar profesores actividad Caso de Uso CU 1.7.5.3 – Eliminar profesores actividad Actor Coordinador y Administrador Pre-condición El usuario debe haber iniciado sesión y deben existir profesores que dicten el webinar seleccionado. Acción Funcionalidad que permite al usuario eliminar profesores que dicten el webinar seleccionado. Condición de Éxito Se guardará la información en la Base de Datos de la aplicación. Tabla 39. Especificación del caso de uso: Activar webinar Caso de Uso CU 1.7.6 – Activar webinar Actor Coordinador y Administrador Pre-condición El usuario debe haber iniciado sesión y deben existir webinar eliminados. Acción Funcionalidad que permite al usuario activar webinars que fueron eliminados. Condición de Éxito Se guardará la información en la Base de Datos de la aplicación y los webinars activados aparecerán en la lista de webinars ofertados por el CIETE. 125 Tabla 40. Especificación del caso de uso: Gestionar usuarios Caso de Uso CU 1.8 – Gestión de usuarios Actor Administrador Pre-condición El usuario debe haber iniciado. Acción Funcionalidad que permite al administrador ver la lista de usuarios existentes en la Base de Datos y se muestran las opciones de agregar, eliminar y editar usuarios. Condición de Éxito Se muestra la lista de usuarios existentes en la Base de Datos. Tabla 41. Especificación del caso de uso: Agregar usuario Caso de Uso CU 1.8.1 – Agregar usuario Actor Administrador Pre-condición El usuario debe haber iniciado sesión y el nuevo usuario no debe existir en la Base de Datos. Acción Funcionalidad que permite al administrador agregar un nuevo usuario para que pueda acceder a la aplicación. Condición de Éxito Se guardará la información en la Base de Datos de la aplicación. Tabla 42. Especificación del caso de uso: Editar usuario Caso de Uso CU 1.8.2 – Editar usuario Actor Administrador Pre-condición El usuario debe haber iniciado sesión. Acción Funcionalidad que permite al administrador editar la información de un usuario. Condición de Éxito Se actualizará la información en la Base de Datos de la aplicación. 126 Tabla 43. Especificación del caso de uso: Eliminar usuario Caso de Uso CU 1.8.3 – Eliminar usuario Actor Administrador Pre-condición El usuario debe haber iniciado sesión. Acción Funcionalidad que permite al administrador eliminar usuarios del sistema. Condición de Éxito Se actualizará la información en la Base de Datos de la aplicación. Tabla 44. Especificación del caso de uso: Generar lista Moodle Caso de Uso CU 1.1.6.7 – Generar lista Moodle Actor Administrador Pre-condición El usuario debe haber iniciado sesión. Acción Funcionalidad que permite al administrador descargar la lista de alumnos de una sección perteneciente a un curso, para la inscripción masiva en Moodle. Condición de Éxito Se descargará la lista de alumnos en formato CSV. 127 Anexo B Cuestionario de Usabilidad El presente cuestionario tiene como finalidad evaluar su opinión sobre la Aplicación Web del CIETE. Se quiere saber si la aplicación cumple con sus expectativas, si considera que es de fácil uso y si es atractiva al usuario. Se le agradece seleccionar la puntuación según su opinión tomando en cuenta la siguiente escala: Totalmente de acuerdo De acuerdo Ni de acuerdo ni en desacuerdo En desacuerdo Totalmente en desacuerdo 5 4 3 2 1 N° Enunciado 5 4 3 2 1 1 Los títulos, menús y textos de la aplicación son legibles 2 Los colores utilizados contribuyen a la percepción adecuada a la aplicación 3 Los descriptores de la aplicación son claros y precisos 4 Se ofrece una organización que facilita la navegación 5 El diseño de la aplicación favorece su uso 6 La aplicación se puede ejecutar de manera intuitiva 7 Es una aplicación fácil de utilizar 8 Los elementos de ayuda disponibles en la aplicación son útiles 128 Anexo C Resultados de la Prueba de Usabilidad Tabla 1 Resultados de la prueba de usabilidad – Parte A Enunciado Fecha 1 2 3 4 5 6 7 8 30/05/2016 De acuerdo Totalme nte de acuerdo De acuerdo Totalme nte de acuerdo Totalment e de acuerdo De acuerdo De acuerdo Ni de acuerdo ni en desacuer do 30/05/2016 Totalme nte de acuerdo Totalme nte de acuerdo De acuerdo Totalme nte de acuerdo Totalment e de acuerdo Totalme nte de acuerdo Totalme nte de acuerdo En desacuer do 30/05/2016 Totalme nte de acuerdo Totalme nte de acuerdo Totalment e de acuerdo Totalme nte de acuerdo Totalment e de acuerdo Totalme nte de acuerdo Totalme nte de acuerdo Totalme nte de acuerdo 30/05/2016 Totalme nte de acuerdo De acuerdo De acuerdo Totalme nte de acuerdo De acuerdo Totalme nte de acuerdo Totalme nte de acuerdo Totalme nte de acuerdo 31/05/2016 De acuerdo Totalme nte de acuerdo Totalment e de acuerdo De acuerdo Totalment e de acuerdo Totalme nte de acuerdo Totalme nte de acuerdo Totalme nte de acuerdo 31/05/2016 Totalme nte de acuerdo Totalme nte de acuerdo Totalment e de acuerdo Totalme nte de acuerdo Totalment e de acuerdo Totalme nte de acuerdo Totalme nte de acuerdo Totalme nte de acuerdo 129 Tabla 2 Resultados de la prueba de usabilidad – Parte B. 31/05/2016 De acuerdo De acuerdo Totalment e de acuerdo Totalme nte de acuerdo desacuer do Totalment e de acuerdo Totalme nte de acuerdo Totalme nte de acuerdo De acuerdo 31/05/2016 Totalme nte de acuerdo Totalme nte de acuerdo Totalment e de acuerdo Totalme nte de acuerdo Totalment e de acuerdo Totalme nte de acuerdo Totalme nte de acuerdo Totalme nte de acuerdo 31/05/2016 Totalme nte de acuerdo De acuerdo Ni de acuerdo ni en desacuerd o De acuerdo De acuerdo De acuerdo Ni de acuerdo ni en desacuer do Totalme nte de acuerdo 31/05/2016 Totalme nte de acuerdo Totalme nte de acuerdo Totalment e de acuerdo Totalme nte de acuerdo Totalment e de acuerdo De acuerdo Totalme nte de acuerdo De acuerdo 31/05/2016 Totalme nte de acuerdo Totalme nte de acuerdo Ni de acuerdo ni en desacuerd o Totalme nte de acuerdo De acuerdo Ni de acuerdo ni en desacuer do Totalme nte de acuerdo En desacuer do 31/05/2016 Totalme nte de acuerdo Totalme nte de acuerdo Totalment e de acuerdo Totalme nte de acuerdo De acuerdo Totalme nte de acuerdo Totalme nte de acuerdo Totalme nte de acuerdo 01/06/2016 De acuerdo De acuerdo Ni de acuerdo ni en desacuerd o De acuerdo De acuerdo Ni de acuerdo ni en desacuer do De acuerdo Ni de acuerdo ni en desacuer do 130 Anexo D Manual Técnico de la Aplicación Web CIETE para la gestión académica-administrativa. El presente manual provee la información sobre las características que deben estar presentes en los distintos componentes a nivel de código que conforman a la aplicación web. El correo utilizado en esta aplicación web es el siguiente:  Correo: ciete.app@gmail.com  Contraseña: Ciete1234- En el archivo .env se encuentra la configuración para la base de datos y el correo desde se enviarán los emails para la comunicación entre los participantes y el personal administrativo Si se desean realizar cambios en los mensajes de los correos, debe ingresar en la carpeta /resources/views/emails. mailto:ciete.app@gmail.com 131 Anexo E Manual de Usuario de la Aplicación Web CIETE para la gestión académica-administrativa. El presente manual tiene el propósito de informar sobre las secciones y funcionalidades de la aplicación web CIETE, tanto a nivel del usuario participante, como a nivel del usuario administrador y docente, ya que el sistema cuenta con tres (3) módulos: Módulo Administrativo: el cual permite el manejo de usuarios, actividades, roles, pagos, de la disponibilidad de las actividades para la inscripción, permite la aprobación o rechazo de inscripciones, la generación de listas para la inscripción masiva de alumnos en la plataforma Moodle y finalmente permite visualizar y descargar los informes realizados por los profesores a lo largo de una actividad. Para tener acceso a este módulo los usuarios deberán tener asignado el rol de Administrador o Coordinador. Módulo Académico: el cual permite el manejo de notas, la generación de informes de las actividades dictadas por el usuario y generación de listas de alumnos. Este módulo lo podrán acceder los usuarios que posean el rol de Administrador, Coordinador o Profesor. Módulo Participante: el cual permite ver las notas obtenidas en las diferentes actividades inscritas, ver los pagos realizados y generar nuevos pagos. Para tener acceso a este módulo los usuarios deberán tener asignado el rol de Participante. Los tres (3) módulos permiten a los usuarios registrados ver y editar sus datos personales sin importar el rol que tengan asignado. Los usuarios que no se encuentren registrados en la aplicación podrán ver y obtener información sobre las actividades dictadas al igual que informarse sobre el centro y sus miembros. Para ingresar a la aplicación web CIETE, en cualquiera de los módulos, deberá pertenecer a la comunidad del centro o haber sido previamente registrado por un usuario Administrador en la aplicación el cual le habrá asignado un rol según su función dentro del CIETE. En esta guía encontrará los pasos a seguir en el módulo Administrativo para: 1) El manejo de actividades y webinars 2) El manejo de usuarios 132 3) El manejo de roles. 4) El manejo de pagos. 5) El manejo de actividades para la inscripción. 6) Visualización y descarga de informes académicos. En el módulo Académico para: 1) El manejo de notas. 2) Generación de informes académicos. 3) Generación de listas de alumnos. En el módulo Participante para: 1) Visualización de notas. 2) El manejo de pagos. En la figura 1 se muestra la página principal donde cualquier usuario interesado podrá ver la información del centro, las actividades ofertadas al igual que podrá inscribirse en alguna de dichas actividades si lo desea. Si es un usuario registrado deberá ingresar por medio de un formulario que se encuentra en la figura 2, el cual puede ser accedido haciendo clic en el botón de “Entrar” ubicado en la parte superior derecha de la página principal (figura 1). 133 Figura 1. Página principal. 134 Figura 2. Inicio de sesión. En el formulario dela Figura 2 deberá ingresar su correo electrónico al igual que su clave. En caso de olvido de clave, deberá pulsar la opción “¿Olvidó su contraseña?” la cual lo llevará a otra vista en la cual se le pedirá su correo y se le enviará un correo con su clave. Al ingresar exitosamente en la aplicación, tendrá la posibilidad de modificar sus datos personales, el formulario de edición tendrá más o menos datos dependiendo de su rol. A continuación se muestra en la figura 3 la vista de datos personales de un usuario participante. Figura 3. Vista de edición de datos personales. 135 1 Módulo Administrativo Las funcionalidades de este módulo solo las pueden acceder los usuarios que tengan un rol de Administrador o Coordinador, a excepción del manejo de usuarios que sólo lo puede acceder el usuario Administrador. 1.1 Manejo de actividades y webinars. Luego de haber ingresado a la aplicación podrá observar del lado izquierdo un menú el cual le permitirá navegar por todas las funcionalidades permitidas según su rol. Para proceder al manejo de actividades debe pulsar la opción “Actividades” del menú antes mencionado. Aparecerá una vista con la lista de actividades ya creadas si es el caso, como se muestra a continuación en la figura 4. 136 Figura 4. Lista de actividades. En esta lista puede observar diferentes botones, cada uno posee una funcionalidad diferente. A continuación se mostrará en la figura 5 los diferentes botones. Figura 5. Botones de la lista de actividades. Cada botón posee una ayuda indicando su funcionalidad, esta aparece al colocar el cursor encima. El primer botón, como lo indica, es para agregar una nueva actividad. Al pulsarlo aparecerá un formulario dónde completará todos los datos de la actividad, tales como el nombre, las fechas de inicio y fin (las cuales deben ser mayores a la fecha actual y a su vez la fecha de inicio debe ser menor a la fecha fin), debe ingresar la cantidad de grupos y a su vez la cantidad de personas mínima y máxima de cada grupo, también debe colocar las especificaciones de la actividad y para ello está a su disponibilidad un recuadro con un editor de texto el cual le permite colocar la información a su gusto, además debe colocar la cantidad de módulos que tendrá la actividad lo que conlleva a completar los campos de nombre y fecha inicio y fin de cada uno de los módulos. Finalmente debe colocar el costo, la o las modalidades de pago y si desea que la actividad esté activa en las galerías de imágenes disponibles para los usuarios al inicio (figura 1), de ser positiva la respuesta debe colocar la pequeña descripción que aparecerá en la parte inferior de la imagen. Cabe destacar que también debe colocar una imagen, la cual representará la actividad en la galería y en la descripción de la misma. La imagen debe ser una imagen en formato JPG o PNG y de un máximo de 1024 M. Deberá editar la imagen al tamaño indicado por el recuadro rojo que aparece luego de haberla seleccionado en sus archivos. Se le mostrará el resultado de la imagen editada y si está de acuerdo pulsa el botón aceptar. A continuación se muestra la vista del formulario de creación de una actividad y la vista para editar la imagen. 137 Figura 6. Formulario de creación de actividad. Figura 7. Vista de edición de imagen. 138 Al pulsar el botón de “Editar” que aparece en la figura 5, se mostrará una vista muy similar a la vista mostrada en la figura 6 ya que es el mismo formulario con los datos de la actividad seleccionada. Si desea eliminar una actividad de la lista de actividades disponibles debe pulsar el botón rojo “Eliminar” de la fila de la actividad deseada. Al presionar el botón aparecerá una ventana emergente preguntando si está seguro que desea eliminar la actividad, de ser positiva su respuesta debe pulsar el botón “Aceptar” de la ventana emergente, sino el botón “Cancelar”. Al eliminar una actividad esta no se elimina definitivamente sino que aparecerá en la lista de actividades desactivadas la cual puede ser accedida por la opción del mismo nombre ubicada en el menú lateral. Las actividades desactivadas pueden ser activadas nuevamente si así lo desea. A continuación se muestra la vista de la ventana emergente en caso de eliminar una actividad. Figura 8. Ventana emergente. Los botones de “Participantes” y “Profesores” de la figura 5 permiten agregar o eliminar participantes o profesores respectivamente de una actividad. En otras palabras permite inscribir participantes de forma extemporánea a las actividades y permite elegir los profesores que dictaran dichas actividades. Las vistas son muy similares entre participantes y profesores por lo que se muestra a continuación en la figura 9 solo el caso de los participantes. 139 Figura 9. Secciones de la actividad Diplomado 2. Figura 10. Participantes que cursan la actividad Diplomado 2. Figura 11. Participantes existentes en el sistema y se pueden agregar a la actividad Diplomado 2. Puede observar que en la figura 9 debe elegir primero la sección de la actividad seleccionada a la cual desea agregar un participante, luego aparecerá la lista de participantes que cursan la actividad, los cuales puede eliminar si lo desea. Luego si pulsa el botón “Agregar” aparecerá una lista de los usuarios existentes en el sistema pero que no están cursando la actividad que seleccionó, como lo puede ver en la figura 11. Finalmente debe pulsar el botón azul con un “+” para inscribir de forma extemporánea el participante deseado a la actividad. 140 Finalmente el último botón de la figura 5 “Lista Moodle” le permitirá descargar, por sección, la lista para la inscripción masiva de participantes en la plataforma Moodle. A continuación se muestra la vista antes descrita. Figura 12. Vista para la descarga del archivo para la plataforma Moodle. El manejo de webinars es muy similar al manejo de actividades ya que posee el mismo procedimiento para la edición y creación de los mismos a diferencia que los webinars no son pagos ni poseen módulos por lo que no existen los campos para dicho fin en el formulario de creación y edición. La opción para generar la lista para la inscripción masiva en Moodle tampoco existe ya que los webinars no se dictan en dicha plataforma. 1.2 Manejo de usuarios Para acceder a esta funcionalidad debe pulsar la opción “Usuarios” del menú lateral, y aparecerá la lista de usuarios registrados si existe al menos uno (1). Esta funcionalidad le permite agregar nuevos usuarios, editar y eliminar usuarios existentes. De ser eliminado un usuario se eliminará todos los registros asociados a él tales como los registros de las actividades que cursa y sus notas si es participante o los registros de las actividades que dicta si es profesor. A continuación se muestra la vista de la lista de usuarios y los botones que aparecen en ella. 141 Figura 13. Lista de usuarios registrados en la aplicación. Figura 14. Botones de la vista de usuarios. Al presionar el botón de “Eliminar” aparecerá una ventana emergente preguntando si está seguro que desea eliminar el usuario seleccionado, de ser afirmativa su respuesta debe presionar el botón “Aceptar” en el caso contrario debe pulsar el botón “Cancelar”. Si desea agregar o editar la información de un usuario debe pulsar el botón “Agregar usuario” o “editar” de la figura 14. Las dos opciones lo llevaran a un formulario muy parecido a diferencia que para la edición el formulario ya estará completado con la información registrada. Los campos a completar varían dependiendo del rol que tenga el usuario, si es participante deberá completar un número mayor de campos. A continuación se muestra el formulario para la creación de usuarios. 142 Figura 14. Formulario de creación de usuario de tipo docente. 143 Figura 15. Formulario de creación de tipo participante. 1.3 Manejo de Roles Para acceder al manejo de roles pulsar la opción “Roles” del menú lateral y podrá ver la lista de roles existentes. Puede agregar un nuevo rol, pulsando el botón “Crear Rol”, al cual debe asignarle un nombre, una descripción y seleccionar los permisos deseados de la lista. Podrá también editar un rol existente y eliminarlo a excepción de los cuatro (4) roles principales que son Administrador, Coordinador, Profesor y Participantes. A continuación se mostrarán las vistas de lista y de creación de roles. Figura 16. Lista de roles existentes. 144 Figura 17. Formulario de creación de rol. 145 1.4 Manejo de Pagos Para acceder a esta funcionalidad debe pulsar en la opción “Gestión Pagos” del menú lateral y podrá observar la lista de pagos realizados por los participantes. Tiene la opción de aprobar o rechazar un pago. Al aprobar o rechazar un pago aparecerá una ventana emergente la cual pregunta si está seguro de su acción, si está de acuerdo pulsa el botón “Aceptar” en caso contrario “Cancelar”. Si aprueba un pago, el participante que lo realizó recibirá un correo anunciando que su pago fue aprobado en el caso contrario deberá colocar el motivo del rechazo en la ventana emergente el cual será enviado en un correo al participante. A continuación se muestra la vista de la lista de pagos y la vista emergente de rechazo donde debe ingresar el motivo en caso de rechazar un pago. Figura 18. Lista de pagos realizados por los participantes. Figura 19. Ventana emergente de rechazo de pago 146 1.5 Manejo de actividades y webinars para la inscripción Esta sección permite activar o desactivar una actividad o webinar de la lista que aparece en el formulario de inscripción. En esta opción puede ser accedida mediante las opciones del menú lateral “Inscripciones de actividades” y “Inscripciones de webinars”. En cada una de estas listas aparecerán las actividades o webinars cuyas fechas de inicio sean menores a la fecha actual y estén activos. Un participante solo podrá inscribirse en las actividades o webinars que tengan como estado “activados” en estas listas. A continuación se muestra en la figura 20 la lista de actividades disponibles para activar o desactivar de la inscripción. Figura 20. Lista de actividades para la inscripción. Al activar o desactivar una actividad se mostrará una ventana emergente preguntando si está seguro de su acción y deberá aceptar o cancelar. 1.6 Manejo de inscripciones Para el manejo de inscripciones debe elegir la opción “Gestión de inscripciones” del menú lateral. En esta sección podrá aceptar o rechazar la inscripción de un participante, por medio de los botones verde y rojo que representan las acciones de aceptar y rechazar respectivamente presentes en la lista de inscritos mostrada en la figura 21 más adelante. Al aceptar una inscripción el participante aparecerá en la lista de alumnos inscritos de la actividad o webinar y se le informará vía correo electrónico que ya se encuentra inscrito en la actividad o webinar. Al contrario si rechaza una inscripción deberá colocar el motivo y este se enviará por correo electrónico al participante. 147 Figura 21. Lista inscripciones para confirmar o rechazar. Al momento de aceptar o rechazar una inscripción aparecerá una ventana emergente en la cual aparecerá la pregunta si está de acuerdo con la acción que está realizando, usted deberá aceptar o cancelar. A continuación se le mostrará la ventana emergente que aparece al momento de aprobar una inscripción en la figura 22. Figura 22. Ventana emergente para la aprobación de inscripción. 1.7 Visualización y descarga de informes académicos. Esta sección permite ver la lista de informes académico generados por los profesores a lo largo de las actividades. Puede acceder a esta sección por medio de la opción “Informes académicos” del menú lateral. A continuación se muestra la vista de la lista de informes académicos existentes. Se puede buscar un informe en específico mediante el buscador ubicado en la parte superior derecha, y se puede buscar por actividad, modulo o sección. 148 Figura 23. Vista de la lista de informes académicos existentes. Al pulsar el botón “Ver” se abre una nueva pestaña del navegador en la cual podrá ver el informe generado. Si así lo desea podrá descargarlo pulsando el botón de guardar ( ) o si desea imprimirlo debe pulsar el botón para dicha función ( ). 2. Módulo académico Este módulo pude ser accedido solo por los usuarios que tengan asignado el rol de Administrador, Coordinador o Profesor. 2.1 Manejo de notas Para poder ver las notas asignadas a un participante o eliminar y agregar notas debe seleccionar la opción “Actividades dictadas” del menú lateral. En primera instancia podrá ver la lista de las actividades que dicta y puede acceder al módulo de cada actividad presionando el botón de color azul claro con el dibujo de un ojo. Seguidamente podrá ver las secciones de dicho módulo con las opciones de acceder a los participantes de cada sección, de obtener la lista de participantes por sección y generar el informe académico de cada sección. Para poder ver las notas asignadas a un participante primero debe presionar el botón de participantes el cual es azul con el dibujo de una persona, y podrá ver la lista de alumnos de la sección. En cada fila de la lista se encuentra un botón el cual lo llevara a las notas del participante seleccionado. Esta última vista se muestra a continuación. 149 Figura 24. Vista de notas de un participante. Para agregar una nota debe pulsar el botón de color verde “Agregar nota”, luego aparecerá una ventana emergente donde deberá colocar el nombre de la evaluación, la nota y su porcentaje. Cada nota que cree podrá ser editada o eliminada mediante los botones para tal fin, se pueden ver en la figura 24 los botones azul y rojo para editar y eliminar respectivamente. A continuación se muestra la ventana emergente para la creación de notas. Figura 25. Vista para creación de notas. 2.2 Generación de informes académicos Para poder generar un informe académico de be pulsar la opción “Actividades dictadas” del menú lateral. En primera instancia podrá ver la lista de las actividades que dicta y puede acceder 150 al módulo de cada actividad presionando el botón de color azul claro con el dibujo de un ojo. Seguidamente podrá ver las secciones de dicho módulo con las opciones de acceder a los participantes de cada sección, de obtener la lista de participantes por sección y generar el informe académico de cada sección. Para poder generar el informe académico de la sección seleccionada debe pulsar el botón de color azul con el dibujo de una hoja. Al pulsar el botón podrá ver un formulario donde deberá completar los campos de “conclusión del curso”, “aspectos positivos”, “aspectos negativos” y “sugerencias de mejora”. Al final del formulario se encuentra un botón de “Generar” al pulsarlo se abrirá una nueva pestaña de su navegador donde podrá ver el informe académico de la sección seleccionada. Si desea podrá descargarlo pulsando el botón de guardar ( ) o si desea imprimirlo debe pulsar el botón para dicha función ( ). 2.3 Generación de listas de alumnos Para poder obtener una lista de participantes debe pulsar la opción “Actividades dictadas” del menú lateral. En primera instancia podrá ver la lista de las actividades que dicta y puede acceder al módulo de cada actividad presionando el botón de color azul claro con el dibujo de un ojo. Seguidamente podrá ver las secciones de dicho módulo con las opciones de acceder a los participantes de cada sección, de obtener la lista de participantes por sección y generar el informe académico de cada sección. Para poder generar lista de participantes de la sección seleccionada debe pulsar el botón de color blanco con el dibujo de una flecha y con la indicación “Lista de alumnos”. Al pulsar el botón podrá se abrirá una nueva pestaña de su navegador donde podrá ver la lista de participantes de la sección seleccionada. Si desea podrá descargarla pulsando el botón de guardar ( ) o si desea imprimirlo debe pulsar el botón para dicha función ( ). 3. Módulo Participante Este módulo solo podrá ser accedido por los usuarios que posean el rol de Participante. 3.1 Visualización de notas Para poder ver las notas que ha obtenido a lo largo de una actividad debe presionar la opción “Actividades inscritas” del menú lateral. Al presionarla podrá observar la lista de actividades 151 inscritas luego tendrá dos acciones posibles por cada módulo: ver los módulos de la actividad o ver los pagos. Debe presionar el botón azul claro con el dibujo de un ojo y la descripción “Módulos” y accederá a lista de módulos de la actividad. Luego debe pulsar el botón con la descripción “notas” para poder ver las notas que ha obtenido a lo largo del módulo seleccionado como se muestra a continuación en la figura 26. Figura 26. Vista de notas obtenidas. 3.2 Manejo de pagos Para poder ver los pagos que ha realizado de una actividad debe presionar la opción “Actividades inscritas” del menú lateral. Al presionarla podrá observar la lista de actividades inscritas luego tendrá dos acciones posibles por cada módulo: ver los módulos de la actividad o la de ver sus pagos. Debe presionar el botón azul oscuro con el dibujo de una tarjeta de pago y la descripción “Pagos” para acceder a lista de pagos que ha realizado. En esta vista podrá generar nuevos pagos si no ha terminado de cancelar una actividad, a continuación se muestra dicha vista en la figura 27. 152 Figura 27 Lista de pagos realizados. Figura 28 Formulario de generación de pago. En la figura 28 puede ver el formulario que se muestra luego de pulsar el botón “Agregar pago”, en el cual debe ingresar los datos del pago realizado.