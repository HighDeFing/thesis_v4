Microsoft Word - tesis_HV_0610 Universidad Central de Venezuela Facultad de Ciencias Escuela de Computación Análisis e Implementación de un Esquema Básico de Seguridad Usando Software Libre Trabajo Especial de Grado presentado ante la ilustre Universidad Central de Venezuela por el bachiller Huáscar Iván Vega Ledo para optar al título de Licenciado en Computación Prof. Eric Gamess Prof. Zenaida Castillo Caracas, Junio / 2010 Universidad Central de Venezuela Facultad de Ciencias Escuela de Computación ACTA DEL VEREDICTO Quienes suscriben, Miembros del Jurado designados por el Consejo de Escuela de Computación, para examinar el Trabajo Especial de Grado, presentado por el Bachiller Huáscar Iván Vega Ledo, C.I. 25973417, con el título “Análisis e Implementación de un Esquema Básico de Seguridad Usando Software Libre”, a los fines de cumplir con el requisito legal para optar al título de Licenciado en Computación, dejan constancia de lo siguiente: Leído como fue dicho trabajo por cada uno de los Miembros del Jurado, éstos fijaron el día 15 de junio de 2010, para que su autor lo defendiera en forma pública, lo cual éste realizó, mediante una exposición oral de su contenido, y luego respondió satisfactoriamente a las preguntas que le fueron formuladas por el Jurado, todo ello conforme a lo dispuesto en la Ley de Universidades y demás normativas vigentes de la Universidad Central de Venezuela. Finalizada la defensa pública del Trabajo Especial de Grado, el jurado decidió APROBARLO. Firmas de los Tutores y Jurados Examinadores: Prof. Eric Gamess (Tutor) Prof. Zenaida Castillo (Tutor) Prof. Adrian Bottini (Jurado Principal) Prof. Carlos Acosta (Jurado Principal) Dedicatoria de Huáscar Vega Esta ofrenda es para la Madre Naturaleza (Pachamama), para mi madre y padre biológicos, para mis hijos, para los profesores, en fin… para todos los que confiaron, confían y confiarán en mí. Agradecimientos de Huáscar Vega A la Pachamama por permitirme vivir en la libertad del acertar y del errar. A mis hijos por comprender que por el momento no tengo tiempo. A Evelyn, mi compañera sentimental, por alimentarme de ánimo y cariño. A mi padre que con su ejemplo (actuar inteligente, entereza y sonrisa ante la adversidad), me dio las pautas para tolerar y compartir. A mi madre que cuando niño se esforzó en enseñarme a comprender y entender, antes que memorizar. También me enseñó a llorar sin desfallecer. A Zenaida Castillo y Eric Gamess, tutores de este trabajo, por su paciencia y comprensión. A Wilfredo Rangel, Robinson Rivas, Antonio Silva, y en general al grupo de Zenaida Castillo (Hilda, Brígida, Otilio,…) por darme esta inmensa oportunidad. A Henry Valera y a los directivos de la empresa donde trabajo, por su tolerancia y comprensión. RESUMEN Actualmente las redes de área local son tan habituales que casi no hay oficina que no la posea; incluso gran parte de hogares la tienen. La mayoría de estas redes están conectadas a Internet, hecho que las hace vulnerables a los peligros latentes en el Internet, por ese motivo es necesario proporcionar a estas redes algún nivel de seguridad. En este trabajo se analizaron en forma detallada cada una de las recomendaciones propuestas por el documento ISO/IEC 27002; con el objeto de buscar un esquema básico de seguridad para las redes de área local y proponer un conjunto mínimo de recomendaciones al respecto, así como también su implementación usando software libre. El esquema básico de seguridad encontrado está compuesto por un conjunto mínimo de recomendaciones (cláusulas) cuyo cumplimiento proporciona un nivel de seguridad aceptable en redes no críticas; es decir en redes de organizaciones con pocos enemigos potenciales, redes que no pertenecen a grupos de espionaje, ni agencias de investigación, ni centros de seguridad gubernamental, ni bancos, ni otras organizaciones del estilo. Adicionalmente, se recomienda abaratar costos de implementación, incrementar la independencia y mantenerse actualizado. Para lograrlo se propone usar software libre, el cual con costos bajos y alta confiabilidad permite implementar el conjunto mínimo de recomendaciones extraído del documento ISO/IEC 27002. Las recomendaciones del esquema básico propuesto se implementaron en un caso de estudio, usando herramientas de software libre, demostrando así la efectividad de la propuesta. Palabras claves: Internet, intranet, seguridad, software libre, ISO/IEC 27002. Tabla de Contenido 1. INTRODUCCIÓN ................................................................................................................... 1 1.1 PLANTEAMIENTO DEL PROBLEMA .......................................................................................... 2 1.2 OBJETIVOS DEL TEG ........................................................................................................... 3 1.2.1 Objetivo General ....................................................................................................... 3 1.2.2 Objetivos Específicos ................................................................................................ 3 1.3 JUSTIFICACIÓN .................................................................................................................... 4 1.4 ALCANCE ........................................................................................................................... 4 1.5 TRABAJOS RELACIONADOS .................................................................................................. 4 1.6 DISTRIBUCIÓN DEL DOCUMENTO ........................................................................................... 5 2. MARCO TEÓRICO ................................................................................................................ 7 2.1 TEORÍA - FUNDAMENTOS ...................................................................................................... 7 2.1.1 Base Conceptual ....................................................................................................... 8 2.2 ARQUITECTURA DE UN SISTEMA SEGURO............................................................................. 11 2.2.1 Estándar Internacional ISO/IEC 27002 (antes ISO/IEC 17799) ................................ 13 2.2.2 Extracción del Núcleo Fundamental del ISO/IEC 27002 .......................................... 27 2.2.3 Alcance de la Arquitectura Propuesta ...................................................................... 32 2.3 ESQUEMA PARA RED CRÍTICA ............................................................................................. 32 2.4 ESQUEMA PARA RED NO-CRÍTICA ....................................................................................... 33 3. PLATAFORMA DE SOFTWARE ......................................................................................... 35 3.1 CORTAFUEGO ................................................................................................................... 35 3.1.1 Cortafuegos Posibles .............................................................................................. 36 3.1.2 Comparaciones ....................................................................................................... 36 3.2 PROXY ............................................................................................................................. 38 3.2.1 Implementaciones de Proxy .................................................................................... 39 3.2.2 Proxy Inverso .......................................................................................................... 40 3.3 VPN ................................................................................................................................ 40 3.3.1 Software VPN ......................................................................................................... 42 3.3.2 Implementación ....................................................................................................... 44 3.4 SERVIDOR WEB ................................................................................................................. 45 3.4.1 Implementaciones de Servidor Web ........................................................................ 46 3.4.2 Servidores Web más Utilizados ............................................................................... 48 3.4.3 Modularidad de Apache Web Server ....................................................................... 48 3.5 DHCP (DYNAMIC HOST CONFIGURATION PROTOCOL) .......................................................... 49 3.5.1 Implementaciones de DHCP ................................................................................... 50 3.6 SSH (SECURE SHELL) ....................................................................................................... 50 3.6.1 Implementaciones de SSH ...................................................................................... 51 3.7 SISTEMA OPERATIVO ......................................................................................................... 51 3.7.1 Requerimientos ....................................................................................................... 51 3.7.2 Distribuciones ......................................................................................................... 52 3.7.3 Solidez .................................................................................................................... 52 3.8 HERRAMIENTAS PARA DETECTAR VULNERABILIDADES .......................................................... 52 4. CASO DE ESTUDIO ........................................................................................................... 57 4.1 PLANTEAMIENTO DEL PROBLEMA ........................................................................................ 57 4.1.1 Situación Inicial ....................................................................................................... 57 4.1.2 Situación Esperadaescripción Breve del Proceso de Implementación ................................................. 62 4.6 VALIDACIONES DE SEGURIDAD POST INSTALACIÓN ............................................................... 63 5. CONCLUSIONES ................................................................................................................ 65 REFERENCIAS BIBLIOGRÁFICAS ............................................................................................ 67 ANEXO A (EXAMEN DE ARCHIVOS LOG)................................................................................. 69 ANEXO B (DETECCIÓN DE IPS DE INTRUSOS) ....................................................................... 73 ANEXO C (ACTIVA REGLAS DEL CORTAFUEGO) ................................................................... 75 ANEXO D (INICIO DEL CORTAFUEGO) ..................................................................................... 85 Índice de Figuras Figura 1.1: Intranet vulnerable con acceso a Internet...................................................................... 2 Figura 2.1: Objetivo del ISO/IEC 27002 ........................................................................................ 12 Figura 2.2: Cláusulas del ISO/IEC 27002 ..................................................................................... 12 Figura 2.3: Del núcleo fundamental hacia la completitud .............................................................. 32 Figura 2.4: De intranet no segura a intranet segura ...................................................................... 33 Figura 3.1: Cortafuego (controla tráfico entrante y saliente) .......................................................... 35 Figura 3.2: Proxy .......................................................................................................................... 38 Figura 3.3: VPN ........................................................................................................................... 41 Figura 3.4: VPN acceso remoto .................................................................................................... 42 Figura 3.5: VPN punto a punto ..................................................................................................... 42 Figura 3.6: Modelo OSI – Implementación VPN ............................................................................ 44 Figura 3.7: Esquema simplificado del servicio Web ...................................................................... 46 Figura 3.8: Rendimiento servidores Web ...................................................................................... 48 Figura 3.9: Esquema de acción del Nessus .................................................................................. 55 Figura 4.1: Planteamiento del Problema ....................................................................................... 58 Figura 4.2: Solución al Problema Planteado ................................................................................. 59 Índice de Tablas Tabla 3.1: Comparación cortafuego en Windows .......................................................................... 37 Tabla 3.2: Uso mundial servidores Web ....................................................................................... 48 Tabla 4.1: Relación del núcleo fundamental con las acciones y software implementado ............... 61 Tabla 4.2: Extracto de los resultados obtenidos por Nessus ......................................................... 63 Introducción 1 1. Introducción En los inicios de Internet muy pocos podían imaginar la peligrosidad que hoy late en la red de redes. Internet está transformando la concepción del mundo y revolucionando la forma de compartir y convivir. Internet alberga innumerables peligros, es difícil vivir sin Internet, pero tampoco se puede confiar ciegamente en sus bondades ni se debe sumergir inocentemente en sus profundidades. Existen ataques perpetrados por malintencionados o hackers (personas que disfrutan de un conocimiento profundo sobre el funcionamiento interno de un sistema, en particular de computadores y redes informáticas), ataques capaces de tomar el control de equipos y robar secretos; pérdidas económicas causadas por virus, gusanos, troyanos y demás malware; ciberbullying y grooming sufrido por menores en redes sociales; spam que inunda buzones de correos electrónicos con anuncios basura; timos y fraudes como los dañinos mensajes de phishing; software espía que se apropia de datos financieros; pornografía y contenidos inadecuados para menores; pérdida de la intimidad personal y del anonimato. La lista de peligros [10] es más extensa que lo descrito anteriormente. Actualmente las redes de área local, intranets y extranets interactúan constantemente con Internet, eso ocasiona que los peligros de una red incrementen o pasen de una red a otra red, complicando las labores de protección y seguridad. Adicionalmente a esta problemática se tiene la popularización de intranets, al punto que multitud de hogares poseen diminutas intranets, e incluso hay proliferación del uso de VPNs, gracias a los juegos, quienes enseñan y estimulan a los jugadores a comunicarse entre redes. Estas prácticas, ya habituales en la sociedad informatizada incrementan la inseguridad. Por esa y otras razones se hace imprescindible encontrar una manera fácil y económica de proteger intranets no críticas (pequeñas y con pocos enemigos potenciales). Afortunadamente hay modos de protección para esos peligros [11]. Precisamente con el objeto de proporcionar seguridad a las redes telemáticas, un grupo de expertos de la ISO se reunieron el año 2005, para finalmente condensar sus conocimientos en 39 objetivos de control y 133 controles, descritos en el documento ISO/IEC 27001 [8], y luego, el año 2007 mejoraron la redacción y con el mismo contenido fue elaborado el documento ISO/IEC 27002 [8]. Este grupo de expertos definió en 15 cláusulas los lineamientos para construir una red segura. El objetivo de este trabajo es analizar las recomendaciones (cláusulas) de seguridad proporcionadas en el documento ISO/IEC 27002 [8] y conceptualizar y generalizar un modo básico de protección, buscando en el documento ISO/IEC 27002 [8] un subconjunto de recomendaciones fundamentales, que al momento de llevarlas de la teoría a la práctica sean capaces de proporcionar seguridad a una intranet conectada a Internet. De igual manera se busca dar recomendaciones que permitan elevar drásticamente los niveles de seguridad, permitiendo crecer hacia medidas de conectividad segura vía VPN, además de optimizar el aprovechamiento de los canales de comunicación. Introducción 2 1.1 Planteamiento del Problema En la actualidad, buena parte de las instituciones pequeñas y medianas, descuidan la protección de sus intranets. Esa actitud se debe parcialmente al desconocimiento de los peligros en la red, y por otro lado a consecuencia de los altos presupuestos que hacen las empresas comercializadoras de servicios en seguridad. El problema está enfocado hacia la vulnerabilidad de empresas cuya organización pueda ser representada por la Figura 1.1 donde claramente se observa, la ausencia de algún tipo de cortafuego (firewall) o medida de protección. Este tipo de organizaciones generalmente son atacadas hasta por aprendices de hackers. En ocasiones, a consecuencia de ataques o infecciones, estas empresas llegan a interrumpir el servicio y/o reinstalar los computadores involucrados, generando con ello desconfianza y baja productividad en los miembros de la empresa. Figura 1.1: Intranet vulnerable con acceso a Internet Introducción 3 La Figura 1.1 presenta gráficamente la vulnerabilidad, la ausencia de protección en algunas empresas; en la parte superior izquierda se aprecia un conjunto de servidores (base de datos, Web, aplicaciones, etc.) y de clientes (Windows y/o Linux) conectados a una red de área local. Más abajo se observa una conexión entre la intranet y el Internet (la nube); a su vez está ilustrado otro conjunto de clientes (Windows y/o Linux) conectados al través del Internet hacia la intranet y viceversa. Se observa claramente que esa intercomunicación entre la intranet e Internet no está protegida, está totalmente vulnerable a los peligros latentes en Internet, hecho capaz de ocasionar lentitud, mal servicio, intrusiones y otros males a la red de área local representada por el esquema de la Figura 1.1. 1.2 Objetivos del TEG El objetivo principal es prestar ayuda y colaboración a usuarios no corporativos, a usuarios simples, de empresas pequeñas o domésticos. Este objetivo principal se logra gracias a conseguir el objetivo general y los específicos. 1.2.1 Objetivo General Analizar las recomendaciones de seguridad propuestos en las cláusulas ISO/IEC 27002 [8], enfocando el análisis hacia proporcionar protección a redes no críticas, con características iníciales similares a las mostradas en la Figura 1.1, permitiendo comunicación (interior–exterior, intranet-extranet, intranet-Internet) y sin disminución del rendimiento y/o la comunicación interna. 1.2.2 Objetivos Específicos  Detectar las cláusulas fundamentales del documento ISO/IEC 27002 para garantizar seguridad en intranets no críticas.  Estudiar y analizar las cláusulas tomando en cuenta que además de proteger la red, las cláusulas sean capaces de ampliar sus características de protección proporcionando un mejor servicio acorde con las necesidades de las intranets actuales (año 2010). Esto se traduce en:  Optimizar el uso del canal de comunicación.  Restringir el abuso del canal de comunicación.  Permitir el acceso seguro a intranets desde el exterior (sólo usuarios autorizados).  Permitir intercambio de archivos.  Permitir algún nivel de administración y mantenimiento remoto.  Permitir la visualización desde el exterior de portales Web de intranets.  Recomendar solución con bajo costo y facilidad de actualización ante nuevas amenazas. Introducción 4 1.3 Justificación Hoy las redes son indispensables en casi todos los sistemas y plataformas. La comunicación entre redes permite el intercambio de información y el trabajo cooperativo entre organizaciones. Al gozar de esos beneficios sin protección, se pone en riesgo el organismo y las personas, entonces se hace conflictivo el beneficio, por ello resulta imprescindible la protección o seguridad en la comunicación. 1.4 Alcance Ofrecer solución de bajo costo y fácil implementación, para redes no críticas con acceso a Internet; por ejemplo, empresas que no manejan datos confidenciales, estratégicos o de seguridad nacional. 1.5 Trabajos Relacionados Por medidas de seguridad, la mayoría de las organizaciones no difunde el esquema bajo el cual protege su red, sin embargo a continuación se mencionan 3 casos que utilizan software libre para su protección (año 2009):  Ministerio del Poder Popular para la Agricultura y Tierras (MPPAT): Tiene sus servicios protegidos con el siguiente software libre: DNS, Proxy, cortafuego, correo, servidor de archivos, LDAP, DHCP, VPN, etc1.  Ministerio del Poder Popular para la Mujer y la Igualdad de Género: También posee protección similar a la del MPPAT.  Instituto Nacional de Salud Agrícola Integral (INSAI): Basa su protección en sistema operativo Debian, DHCP, Squid (ver sección 3.2), iptables (ver sección 3.1), LDAP. 1 CNTI - Esfuerzos para consolidar uso de TI Libres en la APN 2009 http://www.softwarelibre.gob.ve/index.php?option=com_content&task=view&id=1333&Itemid=1 Introducción 5 1.6 Distribución del Documento El resto del documento está distribuido como se describe a continuación: Capítulo 2 (Marco Teórico): Contiene el marco conceptual de este trabajo. Se describen las 15 cláusulas del documento ISO/IEC 27002 [8] (recomendaciones para construir una red segura), se analizan estas cláusulas examinando los niveles de seguridad, y se extraen 4 cláusulas de las 15 especificadas. Estas 4 cláusulas componen el conjunto mínimo necesario para proporcionar seguridad a cualquier red no crítica. Capítulo 3 (Plataforma de Software): Define con cierta abstracción la posibilidad de praxis, es decir de lo conceptual a lo real. Para ello describe de manera general la plataforma base (sistema operativo) y diversas aplicaciones que juntas son capaces de cooperar en proporcionar seguridad (por ejemplo cortafuegos, DHCP, VPN, proxy, etc.). Luego el capítulo entra en detalles y describe algunas aplicaciones existentes en el mercado o comunidad informática, analizando sus ventajas y desventajas. Se efectúa esa labor, para tener la posibilidad de enlazar el conjunto mínimo necesario encontrado en el capítulo 2, con las aplicaciones capaces de permitir la implementación de esas recomendaciones. Capítulo 4 (Caso de Estudio): Describe para un caso en particular, las acciones a seguir para implementar seguridad en una red específica utilizando software libre. Capítulo 5 (Conclusiones): Procura resumir en 5 frases cortas, el aprendizaje colateral alcanzado durante el logro de los objetivos. Marco Teórico 7 2. Marco Teórico El escenario real de las redes telemáticas comprende multitud de soportes teóricos para su comprensión y construcción. Este trabajo abarca un pequeño espacio de todo el escenario, por lo cual es importante definir el soporte teórico que el lector debe conceptualizar para comprender mejor los logros y análisis de este trabajo. Al mismo tiempo se aclara que el presente documento contiene 2 vertientes que alimentan el análisis y el resultado final; una de ellas es la estrictamente técnica, y la otra responde al servicio humano y solidario, motivo por el cual observarán conceptos que no siempre son exclusivamente técnicos. 2.1 Teoría - Fundamentos Para entender la arquitectura del sistema seguro, es importante conocer las vulnerabilidades, los riesgos, y las protecciones que tienen las redes en la actualidad [12]. También es trascendente conocer el estándar internacional ISO/IEC 27002 [8]. Aunque la intranet es una red privada compuesta por grupos bien definidos y limitados, no se encuentra exenta de ataques que pudiesen poner en riesgo la información manejada y/o la calidad del servicio. En este trabajo se pretende estudiar la seguridad en intranets y su relación segura con el exterior (Internet y extranets), analizando las cláusulas que el ISO/IEC 27002 recomienda al respecto. La mayoría de las estadísticas de seguridad indican que cerca del 80% de los fraudes y problemas de seguridad relacionados con los computadores provienen de los usuarios internos, por ello las intranets son más vulnerables a ataques de ésta índole. El porcentaje restante proviene del exterior (Internet y extranets), en forma de virus, intrusos, hackers, etc. Generalmente las personas ignoran los peligros de la red y no toman acciones de protección preventivas. A menudo recién toman acciones correctivas a su vulnerabilidad, después de ser afectada su seguridad. El presente trabajo intenta proponer formas para minimizar estos riesgos utilizando lineamientos fundamentales de las cláusulas extraídas del ISO/IEC 27002. Al mismo tiempo pretende sugerir como óptima la implementación de estos lineamientos fundamentales utilizando herramientas provistas por software libre. Marco Teórico 8 2.1.1 Base Conceptual Por lo expuesto en los párrafos anteriores es importante que el lector agregue a su conocimiento tecnológico, cierto enfoque pragmático y la necesidad humana de sentir libertad y seguridad, mientras usa la tecnología de redes. A continuación se describen algunos conceptos y definiciones no estrictamente técnicos, pero necesarios para mejorar la lectura de este documento. Internet: Es una interconexión de redes informáticas que permite a los computadores conectados comunicarse entre sí, generalmente usando el protocolo TCP/IP. Esta interconexión es tan abierta que es capaz de conectar organismos oficiales, educativos, empresariales, sociedades, personas, etc. La definición de Internet suele ser mayormente técnica pero existen muchos aspectos relevantes que ésta no abarca; entre ellos su evolución y el impacto social que este medio de comunicación ha generado. Internet ha cambiado algunos hábitos del ser humano; el correo físico no se utiliza con la misma frecuencia, el alquiler de películas en video clubs ya no es tan rentable; el periódico y la radio se acceden desde los computadores, etc. La definición de Internet asegura que ésta ha sido revolucionaria en los hábitos de las personas, sin embargo no parece que la gente común tenga una idea clara de lo que es Internet, pero lo utiliza ampliamente. Por un lado, Internet podría ser concebido en relación con sus protocolos comunes como una colección de circuitos y rutinas, como un conjunto de recursos compartidos o incluso como una disposición a intercomunicarse; es decir, como una mega red, una red de redes de computadores. No obstante, otro enfoque, que parece más adecuado, es pensar en Internet como el medio a través del cual se envía y se acumula información. Desde este punto de vista, Internet puede ser interpretado como la información y los servicios que circulan por esta red. En conclusión, Internet es tanto un conjunto de comunidades como un conjunto de tecnologías, y su éxito se puede atribuir a la satisfacción de las necesidades básicas de la comunidad y a la utilización de ésta de un modo efectivo para impulsar la infraestructura. Es a la vez una oportunidad de difusión mundial, un mecanismo de propagación de la información y un medio de colaboración e interacción entre los individuos y sus computadores, independientemente de su localización geográfica. Marco Teórico 9 Intranet: Intranet es una red privada que utiliza los protocolos TCP/IP de Internet para su transporte básico. Los protocolos pueden ejecutarse en diversidad de hardware especializado, y también pueden coexistir con otros protocolos de red (IPX por ejemplo). La intranet está basada en los estándares y protocolos abiertos desarrollados en Internet. Una interpretación simplista pero valedera es que intranet es un Internet pequeño y limitado. En la intranet se encuentran aplicaciones y servicios, como por ejemplo administración de sistema remoto, correo electrónico (e-mail), trabajo en grupo, servicio de directorio, seguridad, acceso a bases de datos y posibilidades amplias para compartir información y archivos. Las intranets permiten a los usuarios trabajar juntos de modo sencillo y efectivo, el trabajo en grupo es importante en las redes internas, permite colaborar en proyectos, compartir información, llevar a cabo conferencias visuales, y establecer procedimientos seguros para el trabajo de producción. Los empleados que están dentro de una intranet pueden acceder a los amplios recursos de Internet, pero aquellos que están en Internet generalmente no pueden entrar en la intranet, pues tienen el acceso restringido, salvo utilicen VPN como medio de comunicación (ver sección 3.3). Extranet: Es una red de computadores interconectados que utilizan los estándares de Internet. El acceso está restringido a un determinado grupo de empresas y organizaciones que necesitan trabajar de manera coordinada para ahorrar tiempo y dinero en sus relaciones de negocio. Una extranet es adecuada para aquellas empresas cuyas cadenas de valor son interdependientes, tienen necesidad de intercambiar datos confidenciales y, el utilizar la tecnología de Internet supone un importante ahorro de tiempo y dinero. La seguridad en el diseño de la extranet es fundamental para asegurar:  Que los datos confidenciales sigan siendo confidenciales pese a viajar por la red pública.  Que sólo las personas autorizadas tengan acceso a la información que transfieren las distintas empresas participantes en la extranet. La extranet permite que personal externo a la empresa, clientes o proveedores puedan acceder a parte de la intranet de la organización, naturalmente, no tienen acceso a todo sino sólo a partes concretas (por ejemplo, acceso a información sobre productos y precios), técnicamente se abre el cortafuego para que permita también el acceso a usuarios externos, lo que complica los aspectos relativos a la seguridad. Marco Teórico 10 Desde el punto de vista de clientes y proveedores, una extranet puede permitir al proveedor consultar el stock de sus productos accediendo al sistema de información del comprador. Por ejemplo en el área de información contable, existe la posibilidad que un cliente consulte a través de una extranet la situación de un pedido, o un proveedor consulte la situación de una factura o estado de cuenta. Ello puede lograr una reposición más rápida y mejorar los tiempos de facturación. Riesgos: Al usar y disfrutar los beneficios expuestos en líneas anteriores en referencia al Internet, las intranets y las extranets; el usuario y las organizaciones se exponen a multitud de riesgos cibernéticos e informáticos, los cuales constantemente están encontrando modos de agresión. Por tal razón es de suma importancia proteger las redes y mantenerse actualizados en los modos de protección. De manera macro se puede clasificar los riesgos en: Internos y externos. El combate a los riesgos externos es el más común, y la estrategia de protección es impedir su entrada gracias al cortafuego. Los riesgos internos son más difíciles de combatir, y sus herramientas de protección más usadas son la autenticación y la instauración estricta de políticas de seguridad. Algunos tipos de riesgos:  Relacionados con la información.  Información poco fiable, dispersión, pérdida de tiempo.  Información peligrosa, inmoral, terrorista, inapropiada (para infantes o discapacitados).  Relacionados con la comunicación interpersonal.  Bloqueo de correo (email), mensajes basura y ofensivos.  Pérdidas de intimidad, malas compañías, actos ilegales.  Relacionados con actividades económicas.  Compras inducidas (publicidad, niños), gastos extraños de teléfono.  Estafas, robos, delitos contra la propiedad intelectual.  Relacionados con el funcionamiento de Internet.  Acceso lento o imposible, virus, intrusiones, espionaje, vigilancia.  Facilidad para esconderse (anonimato)  Alguna dificultad en verificar fuente e información veraz.  Relacionados con las adicciones.  Búsqueda de información, frecuentar redes sociales, intimidad cero.  Compras compulsivas, ludopatías. Marco Teórico 11 En diversas zonas geográficas algunos riesgos son considerados delitos, a continuación una breve tipificación de algunos delitos (riesgos): Tipos de delitos:  Malware: Proviene de la composición de las palabras inglesas malicious software, es decir, programas maliciosos. Se entiende por malware cualquier programa, documento o mensaje que puede resultar perjudicial para un computador, tanto por pérdida de datos como por pérdida de productividad. Ejemplos de malware son los virus, gusanos, troyanos, backdoors, spyware, adware y dialers.  Crimeware: Es el conjunto de amenazas de Internet cuyo objetivo es la realización de delitos que permitan conseguir un beneficio económico, directa o indirectamente. Se puede considerar crimeware a los troyanos (especialmente los ladrones de contraseñas y bancarios), bots, phishing, adware, spyware, spam y dialers.  Fraude online: Se basa en una técnica denominada ingeniería social. Mediante esta técnica basada en el engaño, el internauta es inducido a actuar de una determinada forma (pulsar en enlaces, introducir contraseñas, visitar páginas, etc.) convencido de que está haciendo lo correcto cuando realmente está siendo engañado. Las técnicas más comunes son: phishing, loterías falsas, webs falsas, scam, pharming, compras por Internet. 2.2 Arquitectura de un Sistema Seguro La forma documentada para hablar de arquitectura segura es refiriéndose a un documento ampliamente respaldado por la comunidad telemática, se trata del documento ISO/IEC 27002. El documento ISO/IEC 27002 se divide en 15 cláusulas, el cumplimiento de las mismas permite construir una red segura. La Figura 2.1 modela gráficamente los objetivos que los expertos del documento conservaron, recalcando que la información tiene principal relevancia, sin detrimento de la confidencialidad, la integridad y la disponibilidad. Marco Teórico 12 Figura 2.1: Objetivo del ISO/IEC 27002 4. Riesgos 5. Política de seguridad. 6. Aspectos organizativos de la seguridad de la información. 7. Gestión de activos. 8. Seguridad ligada a los recursos humanos. 9. Seguridad física y ambiental. 10. Gestión de comunicaciones y operaciones. 11. Control de acceso. 12. Adquisición, desarrollo y mantenimiento de los sistemas de información. 13. Gestión de incidentes en la seguridad de la información. 14. Gestión de la continuidad del negocio. 15. Cumplimiento. Figura 2.2: Cláusulas del ISO/IEC 27002 Por otra parte la Figura 2.2 describe el entramado de las cláusulas propuestas por el ISO/IEC 27002. En la misma se pueden observar 12 recomendaciones de seguridad (el estándar contiene 15), las primeras cláusulas, de la 1 a la 3, son definiciones y formalismos que no se incluyen en la gráfica, las cláusulas 4 y 5 guían el desarrollo de las restantes (Riesgos y Política de seguridad), pero dado Marco Teórico 13 que Riesgos contempla un área demasiado especializada y de investigación, pragmáticamente se la aparta, quedando de ese modo las siguientes 11: 5. Política de seguridad. 6. Aspectos organizativos de la seguridad de la información. 7. Gestión de activos. 8. Seguridad ligada a los recursos humanos. 9. Seguridad física y ambiental. 10. Gestión de comunicaciones y operaciones. 11. Control de acceso. 12. Adquisición, desarrollo y mantenimiento de los sistemas de información. 13. Gestión de incidentes en la seguridad de la información. 14. Gestión de la continuidad del negocio. 15. Cumplimiento. 2.2.1 Estándar Internacional ISO/IEC 27002 (antes ISO/IEC 17799) En esta sub sección se describe detalladamente las normas aprobadas internacionalmente para seguir y cumplir con el objetivo de transformar una red cualquiera en una red telemática segura. Es importante resaltar que el grupo ISO responde a requerimientos de gobiernos y grandes corporaciones, de lo cual se infiere, que el grupo ISO pensó y diseñó para asegurar redes altamente críticas, redes gubernamentales, redes de corporativas, redes de investigación y de espionaje. El documento ISO/IEC 27002 se divide en 15 cláusulas, comienza con una introducción que titula: “Conceptos generales de seguridad de la información y SGSI (Sistema de Gestión de Seguridad de la Información)”, luego presenta las 3 primeras cláusulas, las cuales describen la norma, tal como se detalla a continuación: 1. Campo de la aplicación. 1.1 Se especifica el objetivo de la norma. 2. Términos y definiciones. 2.1 Breve descripción de los términos más usados en la norma. 3. Estructura del estándar. 3.1 Descripción de la estructura de la norma. Luego de las cláusulas introductorias comienzan las recomendaciones o cláusulas necesarias para dar la seguridad en redes. Marco Teórico 14 4. Evaluación y tratamiento del riesgo. 4.1 Indicaciones sobre cómo evaluar y tratar los riesgos de seguridad de la información. La cláusula 4, además de plantear metodologías e incidir en la importancia de evaluar los riesgos, sugiere la contratación y seguimiento de expertos en el área, o en su defecto informarse de los potenciales riesgos, acudiendo a las diversas organizaciones dedicadas a ese tema. 5. Política de seguridad. 5.1 Política de seguridad de la información. 5.1.1 Documento de política de seguridad de la información. 5.1.2 Revisión de la política de seguridad de la información. En esta cláusula se proporcionan guías para la seguridad de la información en relación a requisitos del negocio, leyes y regulaciones relevantes. Impulsa que la dirección empresarial debe aprobar y publicar un documento con la política de seguridad de la información, comunicar la política establecida a todos (empleados y partes externas involucradas). Indica la necesidad de revisar la política de seguridad de la información a intervalos planificados o de inmediato, cuando se produzcan cambios significativos; exigiendo revisión para garantizar eficacia adecuada y suficiente a lo largo del tiempo. Al mismo tiempo resalta la inclusión de documentos normativos tales como el manual de políticas de seguridad y la plantilla evaluadora de políticas aprobadas. 6. Aspectos organizativos de la seguridad de la información. 6.1 Organización interna. 6.1.1 Compromiso de la Dirección con la seguridad de la información. 6.1.2 Coordinación de la seguridad de la información. 6.1.3 Asignación de responsabilidades relativas a la seguridad de la información. 6.1.4 Proceso de autorización de recursos para el procesado de la información. 6.1.5 Acuerdos de confidencialidad. 6.1.6 Contacto con las autoridades. 6.1.7 Contacto con grupos de especial interés. 6.1.8 Revisión independiente de la seguridad de la información. Esta cláusula plantea gestionar la seguridad de la información dentro de la organización. Indica métodos en el establecimiento de una estructura de gestión para iniciar y controlar la implementación de seguridad de la información en la organización interna. Señala que el órgano de dirección debe aprobar la política de seguridad, debe asignar los roles de seguridad, coordinar y revisar la implementación de la seguridad en toda la organización. Marco Teórico 15 De igual manera, sugiere que de ser necesario se establezca y facilite el acceso a fuentes especializadas de consulta en seguridad de la información. Sugiere deberían desarrollarse contactos con especialistas externos en seguridad, con objeto de mantenerse actualizados en las tendencias de la industria, la evolución de las normas y los métodos de evaluación; así como proporcionar enlaces adecuados para el tratamiento de las incidencias de seguridad. Promueve un enfoque multidisciplinario de seguridad de la información, que implique cooperación y colaboración de directores, usuarios, administradores, diseñadores de aplicaciones, auditores y del equipo de seguridad con expertos en áreas como la gestión de seguros y la gestión de riesgos. 6.2 Relaciones con terceros. 6.2.1 Identificación de los riesgos derivados del acceso de terceros. 6.2.2 Tratamiento de la seguridad en la relación con los clientes. 6.2.3 Tratamiento de la seguridad en contratos con terceros. Propugna que la seguridad de los recursos en el tratamiento de la información y de los activos de información, sean accesibles por terceros. Cuando el negocio requiera acceso de terceros, se debe realizar una evaluación del riesgo para determinar implicaciones sobre la seguridad y las medidas de control a requerir. Estas medidas de control deben definirse y aceptarse en un contrato con la tercera parte. Resalta que la seguridad de la información de la organización y las instalaciones de procesamiento de información no sean reducidas por la introducción de un servicio o producto externo. 7. Gestión de activos. 7.1 Responsabilidad sobre los activos. 7.1.1 Inventario de activos. 7.1.2 Propiedad de los activos. 7.1.3 Uso aceptable de los activos. Gestión de activos se refiere a la importancia de alcanzar y mantener una protección adecuada de los activos de la organización, donde todos los activos deben ser justificados y tener asignado un propietario. El término propietario identifica a un individuo o entidad responsable, que cuenta con la aprobación del órgano de dirección; para el control de la producción, desarrollo, mantenimiento, uso y seguridad de los activos. El término propietario no significa que la persona disponga de los derechos de propiedad reales del activo. También recomienda identificar propietarios para todos los activos y asignarles la responsabilidad y el mantenimiento de los controles implementados. La implementación de controles específicos podría ser delegada por el propietario convenientemente y acorde con sus activos. Marco Teórico 16 7.2 Clasificación de la información. 7.2.1 Directrices de clasificación. 7.2.2 Etiquetado y manipulado de la información. Propone clasificar la información para indicar necesidades, prioridades y nivel de protección previsto para su tratamiento. La información tiene diversos grados de sensibilidad y criticidad. Algunos ítems podrían requerir niveles de protección adicionales o de un tratamiento especial. 8. Seguridad ligada a los recursos humanos. 8.1 Antes del empleo. 8.1.1 Funciones y responsabilidades. 8.1.2 Investigación de antecedentes. 8.1.3 Términos y condiciones de contratación. Esta cláusula destaca la importancia de garantizar que los empleados, contratistas y usuarios de terceras partes entiendan sus responsabilidades y sean aptos para las funciones que desarrollen. De ese modo se reduce el riesgo de robo, fraude y mal uso de las instalaciones y medios; indicando que las responsabilidades de la seguridad se deben definir antes de la contratación laboral mediante la descripción adecuada del trabajo y los términos y condiciones de empleo. Todos los candidatos a empleado, los contratistas y los usuarios de terceras partes deben ser seleccionados adecuadamente, especialmente para los trabajos sensibles. Los empleados, contratistas y usuarios de terceras partes de los servicios de procesamiento de la información deben firmar un acuerdo sobre sus funciones y responsabilidades en relación a seguridad. 8.2 Durante el empleo. 8.2.1 Responsabilidades de la dirección. 8.2.2 Concienciación, formación y capacitación en seguridad de la información. 8.2.3 Proceso disciplinario. Esta recomendación persigue lograr que los empleados, contratistas y terceras partes sean conscientes de las amenazas de seguridad, de sus responsabilidades y obligaciones y que estén equipados para cumplir con la política de seguridad establecida, para reducir el riesgo asociado a los errores humanos. A tal efecto propone definir las responsabilidades de la dirección para garantizar que la seguridad se aplique en todos los puestos de trabajo en la organización. Añade que a todos los usuarios, empleados, contratistas y terceras personas se les debe proporcionar un adecuado nivel de educación y capacitación en procedimientos de seguridad y en el uso correcto de los medios disponibles para el procesamiento de la información con objeto de minimizar los posibles riesgos de seguridad. A tal efecto propone establecer un proceso disciplinario para gestionar las rupturas a normas de seguridad establecidas. Marco Teórico 17 8.3 Cese del empleo o cambio de puesto de trabajo. 8.3.1 Responsabilidad del cese o cambio. 8.3.2 Devolución de activos. 8.3.3 Retirada de los de derechos de acceso. Por último, explica la necesidad de garantizar que los empleados, contratistas y terceras personas abandonen la organización o cambien de empleo en forma organizada y tutelada. Agrega se deben establecer responsabilidades para asegurar que el abandono de la organización por parte de los empleados, contratistas o terceras personas sea adecuadamente controlada, que se devuelva todo el equipamiento y se eliminen completamente todos los derechos de acceso. 9. Seguridad física y ambiental. 9.1 Áreas seguras. 9.1.1 Perímetro de seguridad física. 9.1.2 Controles físicos de entrada. 9.1.3 Seguridad de oficinas, despachos e instalaciones. 9.1.4 Protección contra las amenazas externas y de origen ambiental. 9.1.5 Trabajo en áreas seguras. 9.1.6 Áreas de acceso público y de carga y descarga. La novena cláusula detalla la importancia y los medios para evitar el acceso físico no autorizado, daños o intromisiones a la instalación e información. Señala que el nivel de la protección suministrado debe estar acorde con los riesgos identificados. Explica que los servicios de procesamiento de información sensible deben ubicarse en áreas seguras y protegidas en un perímetro de seguridad definido por barreras y controles de entrada adecuados; áreas que deben estar protegidas físicamente contra accesos no autorizados, daños e interferencias. 9.2 Seguridad de los equipos. 9.2.1 Emplazamiento y protección de equipos. 9.2.2 Instalaciones de suministro. 9.2.3 Seguridad del cableado. 9.2.4 Mantenimiento de los equipos. 9.2.5 Seguridad de los equipos fuera de las instalaciones. 9.2.6 Reutilización o retirada segura de equipos. 9.2.7 Retirada de materiales propiedad de la empresa. Plantea establecer mecanismos para evitar pérdida, daño, robo, o puesta en peligro de los activos o la interrupción de actividades en la organización. También recomienda proteger los equipos contra amenazas físicas y ambientales. Indica instaurar controles especiales para la protección contra amenazas físicas y para salvaguardar servicios de apoyo como energía eléctrica e infraestructura del cableado. Así mismo, exige considerar la ubicación, eliminación de equipos y respaldos de la información. Marco Teórico 18 10. Gestión de comunicación y operaciones. 10.1 Responsabilidades y procedimientos de operación. 10.1.1 Documentación de los procedimientos de operación. 10.1.2 Gestión de cambios. 10.1.3 Segregación de tareas. 10.1.4 Separación de los recursos de desarrollo, prueba y operación. Esta cláusula promueve garantizar la operación correcta y segura de los recursos de tratamiento de información. Indicando se deben establecer responsabilidades con procedimientos para la gestión y operación de los recursos involucrados en el tratamiento de la información, esto incluye el desarrollo de instrucciones apropiadas de operación y de procedimientos de respuesta ante incidencias. También sugiere implementar la distribución de tareas cuando sea adecuado, para reducir el riesgo de mal uso del sistema, ya sea deliberado o por negligencia. 10.2 Gestión de la provisión de servicios por terceros. 10.2.1 Provisión de servicios. 10.2.2 Supervisión y revisión de los servicios prestados por terceros. 10.2.3 Gestión de cambios en los servicios prestados por terceros. Impulsa implementar y mantener un nivel apropiado de seguridad de la información y de la prestación del servicio en línea con los acuerdos de prestación del servicio por terceros. En este sentido indica que la organización debe verificar la implementación de acuerdos, el monitoreo de su cumplimiento y gestión de los cambios con el fin de asegurar que los servicios que se prestan cumplen con los requerimientos acordados con terceros. 10.3 Planificación y aceptación del sistema. 10.3.1 Gestión de capacidades. 10.3.2 Aceptación del sistema. Propone minimizar el riesgo de fallos en los sistemas. Para ello propone una planificación y preparación avanzada que garantice la adecuada capacidad de recursos con objeto de mantener disponibilidad en los sistemas. Indica se deben realizar proyecciones de los requisitos de capacidad a futuro, para reducir el riesgo de sobrecarga en los sistemas. Con respecto a los requisitos operacionales de los nuevos sistemas se recomienda establecer, documentar y probar los requisitos, antes de su aceptación. 10.4 Protección contra código malicioso y descargable. 10.4.1 Controles contra el código malicioso. 10.4.2 Controles contra el código descargado en el cliente. Subraya la necesidad en proteger la integridad del software y la información. Para ello exige ciertas precauciones con el objeto de prevenir y detectar la introducción de código malicioso y códigos móviles no autorizados. Marco Teórico 19 El software y los recursos de tratamiento de información son vulnerables a la introducción de software malicioso como virus informáticos, gusanos de la red, troyanos y bombas lógicas. En esta cláusula se indica que los usuarios deben conocer los peligros que puede ocasionar el software malicioso o no autorizado, e impulsa para que los administradores implementen controles y medidas especiales para detectar o evitar su introducción. 10.5 Copias de seguridad. 10.5.1 Copias de seguridad de la información. Estimula mantener la integridad y disponibilidad de los servicios de tratamiento de información y comunicación. Para ello pide establecer procedimientos rutinarios hasta conseguir la estrategia de respaldo (cláusula 14.1), realizando copias de seguridad, probando su puntual recuperación y resguardándolas apropiadamente. 10.6 Gestión de la seguridad de las redes. 10.6.1 Controles de red. 10.6.2 Seguridad de los servicios de red. Promueve:  Garantizar la protección de la información en redes y la protección de su infraestructura de apoyo.  Gestionar la seguridad en redes, las cuales pueden cruzar las fronteras de la organización.  Exigir atención a los flujos de datos, sus implicaciones legales, el monitoreo y la protección de los mismos. Indica la posible necesidad de instaurar controles adicionales con el fin de proteger la información sensible que pasa por las redes públicas. 10.7 Manipulación de los soportes. 10.7.1 Gestión de soportes extraíbles. 10.7.2 Retirada de soportes. 10.7.3 Procedimientos de manipulación de la información. 10.7.4 Seguridad de la documentación del sistema. Recomienda evitar la divulgación, modificación, retirada o destrucción de activos no autorizada e interrupciones en las actividades de la organización. Los medios deben ser controlados y físicamente protegidos. Para ello sugiere establecer procedimientos operativos para proteger los documentos, medios informáticos (discos, cintas, etc.), datos de entrada o salida y documentación del sistema; todo lo necesario contra la divulgación, modificación, retirada o destrucción de activos no autorizados. 10.8 Intercambio de información. 10.8.1 Políticas y procedimientos de intercambio de información. 10.8.2 Acuerdos de intercambio. 10.8.3 Soportes físicos en tránsito. 10.8.4 Mensajería electrónica. 10.8.5 Sistemas de información empresariales. Marco Teórico 20 También exige mantener la seguridad de la información y del software que se intercambian dentro de la organización o con cualquier entidad externa. Indicando se deben realizar los intercambios sobre la base de una política formal de intercambio, según los acuerdos de intercambio y cumplir con la normativa correspondiente (cláusulas 5 y 15). Adicionalmente se deben establecer procedimientos y normas para proteger la información y los medios físicos que contienen información en tránsito. 10.9 Servicios de comercio electrónico. 10.9.1 Comercio electrónico. 10.9.2 Transacciones en línea. 10.9.3 Información puesta a disposición pública. Recomienda garantizar la seguridad de los servicios de comercio electrónico y de su uso, considerando las implicaciones de seguridad asociadas; incluyendo transacciones en línea y requisitos de control. Según esta cláusula, la integridad y disponibilidad de la información electrónica publicada a través de sistemas disponibles de publicidad deben ser también consideradas. 10.10 Supervisión. 10.10.1 Registro de auditorías. 10.10.2 Supervisión del uso del sistema. 10.10.3 Protección de la información de los registros. 10.10.4 Registros de administración y operación. 10.10.5 Registro de fallos. 10.10.6 Sincronización del reloj. Exige detectar actividades de procesamiento de la información no autorizadas, pidiendo que los sistemas sean monitoreados y los eventos de la seguridad de información registrados. El registro de los operadores y el registro de fallos deben ser usados para garantizar la identificación de problemas del sistema de información. La organización debe cumplir con los requerimientos legales aplicables para el monitoreo y el registro de actividades. El monitoreo del sistema debe ser utilizado para verificar la efectividad de los controles adoptados y para verificar la conformidad del modelo de política de acceso. 11. Control de acceso. 11.1 Requisitos de negocio para el control de acceso. 11.1.1 Política de control de acceso. La cláusula 11 recomienda controlar los accesos a la información, a los recursos de tratamiento de la información y a los procesos de negocio en base a necesidades de seguridad y de negocio de la organización. Las regulaciones para este control deben considerar las políticas de distribución de la información y de autorizaciones pertinentes. Marco Teórico 21 11.2 Gestión de acceso de usuario. 11.2.1 Registro de usuario. 11.2.2 Gestión de privilegios. 11.2.3 Gestión de contraseñas de usuario. 11.2.4 Revisión de los derechos de acceso de usuario. Explica la necesidad de garantizar el acceso a los usuarios autorizados e impedir los accesos no autorizados a los sistemas de información. Con este fin, se deben establecer procedimientos formales para controlar la asignación de permisos de acceso a los sistemas y servicios de información. Estos procedimientos deben cubrir todas las etapas del ciclo de vida del acceso, desde el registro inicial del nuevo usuario hasta su baja cuando ya no sea necesario su acceso. Se debe prestar especial atención, al control de asignación de permisos de acceso con privilegios que no abran brechas ni anulen la eficacia de los controles del sistema. 11.3 Responsabilidades de usuario. 11.3.1 Uso de contraseña. 11.3.2 Equipo de usuario desatendido. 11.3.3 Política de puesto de trabajo despejado y pantalla limpia. Explica la necesidad de impedir el acceso de usuarios no autorizados, asimismo evitar el robo de información y de recursos digitales. Agrega que la cooperación de usuarios autorizados es esencial para una seguridad efectiva. Los usuarios deben ser conscientes de sus responsabilidades en el mantenimiento de controles de acceso eficaces, en particular respecto al uso de contraseñas y seguridad en los equipos puestos a su disposición. Impulsa la necesidad de implementar una política para mantener mesas de escritorio y monitores libres de cualquier información sensible, con objeto de reducir el riesgo de accesos no autorizados o el deterioro de documentos, medios y recursos para el tratamiento de la información. 11.4 Control de acceso a la red. 11.4.1 Política de uso de los servicios en red. 11.4.2 Autenticación de usuario para conexiones externas. 11.4.3 Identificación de equipos en las redes. 11.4.4 Diagnóstico remoto y protección de los puertos de configuración. 11.4.5 Segregación de las redes. 11.4.6 Control de la conexión a la red. 11.4.7 Control de encaminamiento de red. Describe el método para impedir el acceso no autorizado a los servicios en red, promoviendo la necesidad en controlar los accesos a servicios internos y externos conectados en red. Señala que el acceso de los usuarios a redes y servicios no compromete la seguridad de los servicios en red si se garantiza que: Marco Teórico 22  Existan interfaces adecuadas entre la red de la organización y las redes públicas o privadas de otras organizaciones.  Los mecanismos de autenticación adecuados se apliquen a usuarios y equipos.  El control de los accesos de usuarios a los servicios de información se cumplan. 11.5 Control de acceso al sistema operativo. 11.5.1 Procedimientos seguros de inicio de sesión. 11.5.2 Identificación y autenticación de usuario. 11.5.3 Sistema de gestión de contraseñas. 11.5.4 Uso de los recursos del sistema. 11.5.5 Desconexión automática de sesión. 11.5.6 Limitación del tiempo de conexión. Exige impedir el acceso no autorizado al sistema operativo de los sistemas. Para ello se debe utilizar las prestaciones de seguridad del sistema operativo y permitir acceso sólo a usuarios autorizados. Las prestaciones deben ser capaces de:  Autenticar usuarios acorde con la política de control de accesos definida.  Registrar los intentos de autenticación correctos y fallidos del sistema.  Registrar el uso de privilegios especiales del sistema.  Emitir señales de alarma cuando se violan las políticas de seguridad del sistema.  Disponer los recursos adecuados para la autenticación.  Restringir los horarios de conexión de los usuarios cuando sea necesario. 11.6 Control de acceso a las aplicaciones y a la información. 11.6.1 Restricción del acceso a la información. 11.6.2 Aislamiento de sistemas sensibles. Indica la importancia de impedir el acceso no autorizado a la información mantenida por los sistemas y las aplicaciones. Explica se deben utilizar dispositivos de seguridad con objeto de restringir el acceso a las aplicaciones y sus contenidos; restringir el acceso lógico a las aplicaciones (software) y proporcionar información únicamente a usuarios autorizados. Las aplicaciones (el software) deben:  Controlar el acceso de los usuarios a la información y a su funcionalidad, siempre en concordancia a la política de accesos definida.  Proporcionar protección contra accesos no autorizados derivados del uso de cualquier utilidad, software del sistema operativo y software malicioso que puedan traspasar o eludir los controles del sistema o de las aplicaciones.  No comprometer otros sistemas con los que se comparte recursos de información. Marco Teórico 23 11.7 Computadores portátiles y teletrabajo. 11.7.1 Computadores portátiles y comunicaciones móviles. 11.7.2 Teletrabajo. Exige garantizar la seguridad de la información en el uso de recursos de informática móvil y teletrabajo; proponiendo que la protección debe estar en relación a los riesgos específicos que ocasionan las diversas formas de trabajo. En el uso de la informática móvil propone considerar los riesgos de trabajar en entornos desprotegidos y aplicar la protección conveniente. En el caso del teletrabajo, la organización debe aplicar las medidas de protección al lugar remoto y garantizar disposiciones adecuadas y disponibles para esta modalidad de trabajo. 12. Adquisición, desarrollo y mantenimiento de los sistemas de información. 12.1 Requisitos de seguridad de los sistemas de información. 12.1.1 Análisis y especificación de los requisitos de seguridad. En esta cláusula el objetivo es garantizar que la seguridad sea parte integral de los sistemas de información. Para ello exige que dentro del análisis de los sistemas de información, se incluyan sistemas operativos, infraestructuras, aplicaciones de negocio, aplicaciones estándar o de uso generalizado, servicios y aplicaciones desarrolladas por los usuarios. Explica que el diseño e implementación de los sistemas de información son cruciales para la seguridad. Por tal motivo los requisitos de seguridad deben ser identificados y consensuados previamente al desarrollo y/o implementación de los sistemas de información. Añade que los requerimientos de seguridad deben identificarse en la fase de levantamiento de información y, deben ser justificados, aceptados y documentados como parte del proceso constructivo del sistema de información. 12.2 Tratamiento correcto de las aplicaciones. 12.2.1 Validación de los datos de entrada. 12.2.2 Control del procesamiento interno. 12.2.3 Integridad de los mensajes. 12.2.4 Validación de los datos de salida. Su meta es evitar errores, pérdidas, modificaciones no autorizadas o mal uso de la información en las aplicaciones. Recomienda se deben diseñar controles apropiados en las aplicaciones, incluidas las desarrolladas por los propios usuarios. Estos controles deben incluir la validación de los datos de entrada, el tratamiento interno y los datos de salida. Agrega que podrán ser requeridos controles adicionales para los sistemas que procesen o tengan algún efecto en los activos de información de carácter sensible, valioso o crítico. En este caso, los controles deben ser determinados en función de los requisitos de seguridad y la estimación del riesgo. Marco Teórico 24 12.3 Controles criptográficos. 12.3.1 Política de uso de los controles criptográficos. 12.3.2 Gestión de claves. Impulsa la necesidad de proteger la confidencialidad, autenticidad o integridad de la información con la ayuda de técnicas criptográficas. Además propone desarrollar una política de uso de controles criptográficos, donde se podrían desarrollar algoritmos propios de encriptación. 12.4 Seguridad de los archivos de sistema. 12.4.1 Control del software en explotación. 12.4.2 Protección de los datos de prueba del sistema. 12.4.3 Control de acceso al código fuente de los programas. Explica la importancia en controlar el acceso a los sistemas de archivos y código fuente de los programas. Impulsa que los proyectos de TI y las actividades de soporte debieran ser dirigidos de modo seguro, y que se debe evitar la exposición de datos sensibles en entornos de prueba. 12.5 Seguridad en los procesos de desarrollo y soporte. 12.5.1 Procedimientos de control de cambios. 12.5.2 Revisión técnica de aplicaciones tras efectuar cambios en el sistema operativo. 12.5.3 Restricciones a los cambios en los paquetes de software. 12.5.4 Fugas de información. 12.5.5 Externalización del desarrollo de software. Propugna y exige mantener la seguridad del sistema de aplicaciones y la información. Indica cómo controlar estrictamente los entornos de desarrollo de proyectos y de soporte. Los directivos responsables de los sistemas de aplicaciones son también responsables de la seguridad del proyecto o del entorno de soporte, por lo que deben garantizar que todas las propuestas de cambio en los sistemas se verifiquen para que no comprometan la seguridad del sistema o del entorno operativo. 12.6 Gestión de la vulnerabilidad técnica. 12.6.1 Control de las vulnerabilidades técnicas. Impulsa reducir los riesgos originados por la explotación de vulnerabilidades técnicas publicadas. Para ello propugna implementar una gestión de la vulnerabilidad técnica siguiendo un método efectivo, sistemático y cíclico, con la toma de medidas que confirmen su efectividad. 13. Gestión de incidentes en la seguridad de la información. 13.1 Notificación de eventos y puntos débiles de la seguridad de la información. 13.1.1 Notificación de los eventos de seguridad de la información. 13.1.2 Notificación de puntos débiles de la seguridad. Marco Teórico 25 El interés de esta cláusula es garantizar que los eventos y debilidades en la seguridad asociados con los sistemas de información se notifiquen de inmediato de modo que se puedan realizar acciones correctivas oportunas. Explica se deben establecer exigencias para el informe formal de los eventos y de los procedimientos de escalada. Además propone que todos los empleados, contratistas y terceros deben estar al tanto de los procedimientos e informar de los diferentes tipos de eventos y debilidades que puedan tener impacto en la seguridad de los activos organizacionales. Se les debe exigir que informen de cualquier evento o debilidad en la seguridad de información lo más rápido posible y al responsable designado. 13.2 Gestión de incidentes de seguridad de la información y mejoras. 13.2.1 Responsabilidades y procedimientos. 13.2.2 Aprendizaje de los incidentes de seguridad de la información. 13.2.3 Recopilación de evidencias. Propugna la creación de un enfoque consistente y eficaz para la gestión de los incidentes en la seguridad de información. Sugiere establecer responsabilidades y diseñar procedimientos para manejar los eventos y debilidades en la seguridad de información, una vez que hayan sido comunicados. Estimula aplicar un proceso de mejora continua en respuesta para monitorear, evaluar y gestionar los incidentes de seguridad de información. Exige que cuando se requieran evidencias, éstas deben ser recogidas con fines legales. 14. Gestión de la continuidad del negocio. 14.1 Aspectos de seguridad de la información en la gestión de la continuidad del negocio. 14.1.1 Inclusión de la seguridad de la información en el proceso de gestión de la continuidad del negocio. 14.1.2 Continuidad del negocio y evaluación de riesgos. 14.1.3 Desarrollo e implementación de planes de continuidad que incluyan la seguridad de la información. 14.1.4 Marco de referencia para la planificación de la continuidad del negocio. 14.1.5 Pruebas, mantenimiento y reevaluación de planes de continuidad. Propone mecanismos de reacción frente a la interrupción de actividades del negocio y proteger sus procesos críticos frente a desastres o grandes fallos de los sistemas de información; sugiriendo implementar un proceso de gestión de continuidad del negocio para reducir a niveles aceptables, la interrupción causada por los desastres y fallos de seguridad (desastres naturales, accidentes, fallas de equipos o acciones deliberadas) mediante una combinación de controles preventivos y de recuperación. Este proceso debe identificar los procesos críticos de negocio e integrar los requisitos de gestión de la seguridad de información para la continuidad del negocio con otros requisitos de continuidad como operaciones, proveedores de personal, materiales, transporte e instalaciones. Marco Teórico 26 Al mismo tiempo se deben analizar las consecuencias de los desastres, fallas de seguridad, pérdidas de servicio y la disponibilidad del servicio. También desarrollar e implementar planes de contingencia para asegurar que los procesos del negocio se puedan restaurar en los plazos requeridos. La seguridad de información debe ser una parte integral del plan general de continuidad del negocio y de los demás procesos de gestión dentro de la organización. Adicionalmente sugiere incluir controles para la identificación y reducción de riesgos, el acotamiento de las consecuencias de incidencias dañinas y la reanudación a tiempo de las operaciones esenciales. 15. Cumplimiento. 15.1 Cumplimiento de los requisitos legales. 15.1.1 Identificación de la legislación aplicable. 15.1.2 Derechos de propiedad intelectual. 15.1.3 Protección de los documentos de la organización. 15.1.4 Protección de datos y privacidad de la información personal. 15.1.5 Prevención del uso indebido de los recursos de tratamiento de la información. 15.1.6 Regulación de los controles criptográficos. El objetivo de esta última cláusula es el evitar incumplimientos de cualquier ley, estatuto, norma, regulación u obligación contractual, en perjuicio de cualquier requisito en seguridad. Señala que el diseño, operación, uso y gestión de los sistemas de información pueden ser objeto de requisitos estatutarios, reguladores y de seguridad contractuales. También remarca que los requisitos legales específicos deben ser advertidos por los asesores legales de la organización o por profesionales adecuadamente cualificados. Recalca es importante tomar en cuenta, que los requisitos legales cambian de un país a otro y pueden variar para la información que se genera en un país y se transmite a otro país (por ejemplo, flujos de datos entre fronteras). 15.2 Cumplimiento de las políticas y normas de seguridad y cumplimiento técnico. 15.2.1 Cumplimiento de las políticas y normas de seguridad. 15.2.2 Comprobación del cumplimiento técnico. Señala la importancia de garantizar la conformidad de los sistemas con las políticas y estándares de seguridad en la organización. Para ello exige se realicen revisiones regulares de seguridad de los sistemas de información. Estas revisiones se deben realizar según las políticas de seguridad apropiadas, mientras que las plataformas técnicas y sistemas de información deben ser auditados para el cumplimiento de los estándares establecidos. 15.3 Consideraciones de las auditorías de los sistemas de información. 15.3.1 Controles de auditoría de los sistemas de información. 15.3.2 Protección de las herramientas de auditoría de los sistemas de información. Marco Teórico 27 Su objeto es maximizar la efectividad del proceso de auditoría de los sistemas de información y minimizar las intromisiones al sistema. Para ello, exige implementar controles para proteger los sistemas en activo y las herramientas de auditoría, durante el desarrollo de las mismas. Haciendo énfasis en los procedimientos requeridos para salvaguardar la integridad y prevenir el mal uso de las herramientas de auditoría. 2.2.2 Extracción del Núcleo Fundamental del ISO/IEC 27002 Tal como se observa en la sub sección anterior, el ISO/IEC 27002 presenta recomendaciones en un ámbito bastante completo. Dado que la organización ISO responde a necesidades gubernamentales y de grandes corporaciones, sus recomendaciones son útiles para cualquier instalación grande, especialmente para aquellas cuya función es crítica (agencias de espionaje, bancos, gobiernos, etc.). El presente trabajo busca satisfacer necesidades del común de la población, a diferencia del grupo ISO, enfoca el análisis hacia redes no críticas, por tal motivo busca extraer el subconjunto mínimo necesario de cláusulas ISO/IEC 27002, recomendaciones suficientes para proporcionar un nivel de seguridad aceptable, que se pueda implementar a bajo costo y en poco tiempo. Es importante mencionar que durante el análisis, se han ido desprendiendo algunas recomendaciones hasta quedarse con el subconjunto mínimo necesario, llamado por este trabajo: Núcleo fundamental. Para empezar, las recomendaciones 1, 2 y 3 son descriptivas e introductorias, son el preámbulo para definir el entorno del trabajo ISO/IEC 27002. Por esa razón los mismos expertos que confeccionaron las recomendaciones, sugieren desprender la 1, 2 y 3, para aplicar las 12 cláusulas restantes, es decir, de la cláusula 4 a la 15. La cláusula 4 da indicaciones para evaluar y tratar los riesgos de seguridad de la información. Obviamente es posible evaluar los riesgos y emplear tiempo en ello, pero también es posible aplicar el tratamiento respectivo al riesgo detectado previamente por instituciones dedicadas al respecto. Existe un conjunto suficiente de riesgos previamente detectados y reportados al mundo entero2, riesgos y remedios aplicables a organizaciones con redes críticas y no críticas. De ese modo únicamente algunos especialistas se dedican a trabajar con la recomendación 4 y proporcionan los frutos de sus investigaciones, a sus contratantes o al mundo en general. Por esa razón, la mayoría de los profesionales dedicados a la implementación de redes seguras, apartan la recomendación 4, y trabajan con las 11 cláusulas restantes. 2 http://mitre.org Marco Teórico 28 El presente análisis clasificó las 11 cláusulas restantes en 2 grupos: 1. Subconjunto donde hay poca intervención humana (cláusulas 9, 10 y 11). 2. Subconjunto donde hay bastante intervención humana (cláusulas 5, 6, 7, 8, 12, 13, 14, y 15). El subconjunto con bastante intervención humana fue postergado en el análisis, mientras se profundizaba el estudio del subconjunto con poca intervención humana, buscando en éste último, las cláusulas que contemplen software y hardware defensivo. Fruto de ese análisis se conformó el primer núcleo protector fundamentado en las cláusulas 10 (Gestión de comunicación y operaciones) y 11 (Control de acceso). Pero esas 2 cláusulas no fueron suficientes. Entonces se analizó nuevamente el subconjunto con poca intervención humana, buscando elementos complementarios a las recomendaciones 10 y 11, hasta encontrar que la cláusula 9 (Seguridad física y ambiental) complementaba perfectamente pues garantizaba que físicamente el hardware y software protector estuviesen protegidos. No obstante, estas 3 cláusulas todavía no eran suficientes pero ya no existían más cláusulas candidatas en el subconjunto analizado, por consecuencia se procedió a profundizar el análisis en el otro subconjunto, el con bastante intervención humana. El estudio de este segundo subconjunto dio como resultado que la cláusula 5 (Política de seguridad) era absolutamente necesaria y la mejor candidata, pues sin políticas de seguridad se carecía de metas y procedimientos. Concluyendo así, que el subconjunto mínimo necesario para conformar el núcleo fundamental estaría compuesto por las cláusulas 5, 9, 10 y 11. Núcleo compuesto por 3 miembros del subconjunto con poca intervención humana y por 1 miembro del subconjunto con bastante intervención humana. Una vez definido el núcleo fundamental, se procedió a continuar el análisis, pero en esa oportunidad buscando la manera de mejorar el nivel de seguridad construido por el núcleo fundamental, pretendiendo de este modo alcanzar la utilización de las 12 cláusulas, incrementando recomendaciones acorde con el aumento de criticidad de la red en tratamiento. Para ello se aplicó casi el mismo razonamiento, pues se incorporaron al siguiente nivel los candidatos que casi entraron al núcleo (los que fueron desplazados por la cláusula 5). Ya con 2 niveles de seguridad, se procedió a construir el siguiente nivel con las restantes cláusulas con bastante intervención humana, exceptuando la 4, que dada su naturaleza de especialización en el tratamiento y análisis de riesgos, quedó en el último y mayor nivel de seguridad (instalaciones cuya criticidad requiere contar con su propio centro de investigación y monitoreo de riesgos). Marco Teórico 29 Un resumen y secuencia de los pasos a seguir, desde construir una red con seguridad básica e ir incrementando el nivel de seguridad, se puede apreciar en la Figura 2.3 y en las siguientes líneas: 1º. Implementar cláusulas 5, 9, 10 y 11 (núcleo fundamental). 2º. Incorporar más elementos relacionados con la parte humana (cláusulas 6, 8 y 13). 3º. Agregar las cláusulas 7, 12, 14 y 15. 4º. Investigar y monitorear los riesgos (cláusula 4). A continuación, breve descripción esquemática de las principales razones que ayudaron a conformar el núcleo fundamental para construir una red segura. Las partes sombreadas señalan los componentes del núcleo fundamental: Marco Teórico 30 Cláusula Justificación 5 Política de Seguridad  Imposible implementar un sistema de seguridad sin definir las acciones o políticas a seguir.  La política de seguridad indica las necesidades, los requerimientos de seguridad, los riesgos y sus métodos de evitarlos, norma las acciones a seguir y mantener.  La política de seguridad es como el timón de un barco. 6 Aspectos organizativos de la seguridad de la información.  Contempla en extenso aspectos muy importantes, sin embargo parte de esas recomendaciones están incluidas en las políticas de seguridad (la cual pertenece al núcleo fundamental), por ese motivo, y por una alta dependencia humana de esta cláusula, se la deja fuera del núcleo fundamental. 7 Gestión de activos.  Esta cláusula exige el cuidado de los activos y la información contenida en los mismos. A pesar que su cumplimiento comparte el compromiso humano y la implementación de tecnología, no se la incluye en el núcleo fundamental, pues en el núcleo parte de esta protección se hace acorde con la cláusula 9. Lo cual no significa minimizar la importancia de la cláusula 7. 8 Seguridad ligada a los recursos humanos.  Esta cláusula es exclusivamente dependiente del ser humano, por ello no ingresa al núcleo.  Gran parte de lo mencionado por esta cláusula es normalmente practicado por encargados de recursos humanos en las organizaciones. 9 Seguridad física y ambiental.  La protección a la red se proporcionará merced a hardware y software. Si el hardware o software están expuestos a robos o daños físicos, entonces el sistema seguro deja de ser seguro y se convierte en vulnerable.  Si los efectos medioambientales o riesgos de la naturaleza pueden incidir fácilmente en los elementos protectores, entonces tampoco se garantiza seguridad en la red.  Es fundamental tomar en cuenta esta cláusula, aunque parezca redundante, hay que proteger de los desastres físicos al hardware y software protector. Marco Teórico 31 10 Gestión de comunicación y operaciones.  Comunicar es la función de la red.  En esta cláusula se describen todas las recomendaciones y normas a construir, para proteger los datos, los equipos, la electrónica y los medios de almacenamiento. Dicho de otra manera, cualquier entrenamiento de seguridad en redes, describe y enseña a sus estudiantes gran parte de lo que esta cláusula menciona. 11 Control de acceso.  La estrategia que el humano ha inventado desde hace siglos es el uso del candado y la llave. El control de acceso refleja esta estrategia pero utilizando medios electrónicos y de software. La cuenta de usuario autorizado y su contraseña son estrategias fundamentales para proporcionar seguridad y acceso al mismo tiempo.  Los mecanismos para vigilar, controlar y permitir la entrada o salida de usuarios, la entrada o salida de datos, son imprescindibles al momento de proporcionar seguridad en redes. 12 Adquisición, desarrollo y mantenimiento de los sistemas de información.  En caso que la organización haga o contrate desarrollo del software a utilizar, esta cláusula debiera estar incluida en el núcleo. Pero dado que no es la mayoría de los casos, entonces fuera.  Cabe mencionar que parte de las recomendaciones de esta cláusula están incluidas en las guías y decisiones tomadas por la política de seguridad. 13 Gestión de incidentes en la seguridad de la información.  Se predefinió trabajar con los riesgos e incidentes ya conocidos (es lo que hace la mayoría de las redes no críticas).  Al mismo tiempo parte de lo recomendado en esta cláusula está incluido en la política de seguridad. Quizás no con mucho seguimiento y evaluación, pero hay suficientes aspectos contemplados. 14 Gestión de la continuidad del negocio.  Si bien es importante la continuidad del negocio, en el presente trabajo no es tan vital, pues este trabajo tiene como entorno redes no críticas, es decir donde la continuidad del negocio puede sufrir unas horas de interrupción no voluntaria. 15 Cumplimiento.  Esta cláusula podría estar en el núcleo, pues entre otros aspectos exige el cumplimiento de las políticas de seguridad. Sin embargo, este trabajo asume que es suficiente con la incorporación de las políticas de seguridad, pues su incorporación al núcleo implica el cumplimiento de las políticas establecidas por la organización. Marco Teórico 32 El análisis descrito construye el núcleo fundamental compuesto por las cláusulas: 5. Política de seguridad. 9. Seguridad física y ambiental. 10. Gestión de comunicaciones y operaciones. 11. Control de acceso. 2.2.3 Alcance de la Arquitectura Propuesta Son innumerables los desafíos que la intranet debe afrontar hoy en día. Se alerta sobre las brechas de seguridad, los potenciales lazos (loops) de comunicación en los switches, los conflictos de IP, los accesos no autorizados, las intrusiones, los virus (gusanos, troyanos, etc.), los ARP spoofing, etc [10]. Toda esa gama de problemáticas y potenciales ataques, contribuyen a determinar el nivel de seguridad que la tecnología pueda proporcionar para subsanar esas vulnerabilidades, y mejorar la confianza en la comunicación entre redes. 2.3 Esquema para Red Crítica Figura 2.3: Del núcleo fundamental hacia la completitud Marco Teórico 33 La Figura 2.3 muestra esquemáticamente lo necesario para construir una red segura cuando aumenta su criticidad. El rectángulo más interno representa al núcleo fundamental, ahí están las 4 cláusulas básica a implementar. Luego, de manera ascendente, se pueden incluir las otras cláusulas, tal como ilustran los otros rectángulos. 2.4 Esquema para Red No-Crítica En el libro Firewalls for Dummies [13] los autores hacen recomendaciones básicas. El presente trabajo recoge esas sugerencias y las acopla a lo expuesto en el capítulo 2. La Figura 2.4 grafica el resultado (cortafuego), la vía que permite pasar de intranet no segura hacia intranet segura, acorde con el núcleo fundamental. Intranet no segura Intranet segura Figura 2.4: De intranet no segura a intranet segura Tal como ilustra la Figura 2.4 la propuesta es agregar cualidades de vigilancia y protección (cortafuego) [14], en la zona más vulnerable. Esas cualidades deben cumplir con las recomendaciones del núcleo fundamental: 5. Política de seguridad. 9. Seguridad física y ambiental. 10. Gestión de comunicaciones y operaciones. 11. Control de acceso. Servidor con las cualidades requeridas en cláusulas del núcleo fundamental propuesto. Plataforma de Software 35 3. Plataforma de Software Para proteger una red mediante software se requiere instalar y configurar programas capaces de manejar diferentes conceptos de protección. El software de protección debe estar soportado por algún sistema operativo capaz de ejecutar los programas elegidos al respecto. A continuación se describen los componentes de software esenciales para construir una red segura, aplicando las recomendaciones contenidas en las cláusulas 5, 9, 10 y 11 del núcleo fundamental. 3.1 Cortafuego Un cortafuegos [14] es un elemento de software o hardware utilizado en una red para prevenir comunicaciones indeseadas, labor que realiza según las políticas de red que se hayan definido en función de las vulnerabilidades de la organización y sus potenciales atacantes. La idea principal del cortafuego es crear un punto de control en la entrada y salida de tráfico de una red (Figura 3.1). Un cortafuego correctamente configurado es un sistema adecuado para proteger una instalación informática, pero en ningún caso debe considerarse como suficiente, ya que la seguridad informática abarca más ámbitos y más niveles de trabajo y protección. Su funcionamiento está definido por la recomendación RFC 2979 [9], la cual define las características de comportamiento y requerimientos de interoperabilidad. Figura 3.1: Cortafuego (controla tráfico entrante y saliente) Plataforma de Software 36 Ventajas de un cortafuego:  Protección contra intrusiones: El acceso a los servidores en la red sólo se hace desde máquinas autorizadas.  Protección de información privada: Permite definir distintos niveles de acceso a la información de manera que en una organización cada grupo de usuarios definido tendrá acceso sólo a los servicios y la información que le son estrictamente necesarios. 3.1.1 Cortafuegos Posibles Para ambiente Linux [15] existen implementaciones de cortafuegos por software llamadas ipchains, iptables, nftables. También hay otras implementaciones que funcionan con ipchains o iptables como plataforma, pero se hacen llamar distinto pues ofrecen entornos de configuración más amigables y algunas otras ventajas; algunos de estos productos son: Shorewall, IPCop, etc. (funcionan con iptables). Para ambiente Windows también existen multitud de propuestas como: ZoneAlarm3, Kaspersky4, Norton5, el cortafuego nativo de Windows, etc. 3.1.2 Comparaciones En ambiente Linux: Existen desde hace muchos años las implementaciones ipchains e iptables, sin embargo actualmente el grupo de Netfilter ha desarrollado nftables6. Nftables es más adaptable, tiene sintaxis más simple y permite ejecutar más de una acción por línea. Está formado por tres componentes: Implementación en el kernel, en la biblioteca de comunicación (libnl) y el frontend. En resumen para ambiente Linux:  ipchains (un tanto obsoleto).  iptables (el más utilizado actualmente).  nftables (todavía inmaduro pero con mucho futuro). 3 http://www.zonealarm.com/security/es/home.htm?lid=es 4 www.kaspersky.com 5 http://www.symantec-norton.com/Norton_Internet_Security_2010_p68.aspx 6 http://www.softwarelibre.net/nftables_el_nuevo_firewall_de_linux Plataforma de Software 37 En ambiente Windows: La Tabla 3.1 muestra diversos productos y calificaciones obtenidas en los resultados del test presentado en [1]: Eficiencia Nota Nivel Protección Online Armor Personal Firewall 3.5.0.14 99% 10+ Excellent PC Tools Firewall Plus 6.0.0.69FREE 99% 10+ Excellent Comodo Internet Security 3.11.108364.552FREE 97% 10+ Excellent Kaspersky Internet Security 2010 9.0.0.459 96% 10+ Excellent Outpost Firewall Free 2009 6.5.2724.381.0687.328FREE 93% 10+ Excellent Outpost Security Suite Pro 2009 6.5.4.2525.381.0687 92% 9 Excellent Online Armor Personal Firewall 3.5.0.14 FreeFREE 92% 10+ Excellent Jetico Personal Firewall 2.0.2.8.2327 89% 10+ Very good Malware Defender 2.2.2 89% 10+ Very good Privatefirewall 6.0.20.14 88% 10+ Very good Netchina S3 2008 3.5.5.1FREE 85% 9 Very good ZoneAlarm Pro 8.0.059.000 72% 9 Good Lavasoft Personal Firewall 3.0.2293.8822 67% 8 Good Norton Internet Security 2009 16.2.0.7 66% 8 Good Webroot Desktop Firewall 5.8.0.25FREE 54% 7 Poor Trend Micro Internet Security Pro 17.1.1250 29% 5 None BitDefender Internet Security 2009 12.0.12.0 12% 2 None ZoneAlarm Free Firewall 8.0.298.000FREE 11% 2 None Avira Premium Security Suite 9.0.0.367 10% 2 None F-Secure Internet Security 2010 10.00.246 8% 2 None CA Internet Security Suite Plus 2009 5.0.0.581 5% 1 None Kingsoft Internet Security 9 Plus 2009.07.17.10 5% 1 None Rising Internet Security 2009 21.41.21 5% 1 None Sunbelt Personal Firewall 4.6.1861.0 5% 1 None ThreatFire Free 4.1.0.25FREE 5% 1 None eConceal Pro for Windows 2.0.019.1 4% 1 None ESET Smart Security 4.0.417.0 4% 1 None FortiClient End Point Security 4.0.2.57 4% 1 None Panda Internet Security 2010 15.00.00 4% 1 None TrustPort PC Security 2.0.0.1285 4% 1 None Tabla 3.1: Comparación cortafuego en Windows Plataforma de Software 38 Adicional a las comparaciones y evaluaciones, cabe recalcar que en entorno Linux existen 2 maneras complementarias para implementar seguridad, las que están incluidas en el kernel generalmente llamada SE (Security Enhanced), y las que actúan desde fuera del kernel (ipchains, iptables, nftables). Ambas pueden trabajar en conjunto o se pueden excluir una con otra. 3.2 Proxy Luotonen [16] define un servidor proxy como un componente intermedio situado entre el sistema del usuario e Internet, tal como se aprecia en la Figura 3.2. Suele utilizarse para registrar el uso de Internet y también para bloquear el acceso a un sitio Web. El servidor de seguridad del proxy es capaz de bloquear algunas páginas Web por diversas razones. Gracias a estos potenciales bloqueos, se puede prohibir al usuario descargar el entorno de ejecución de Java (JRE) o ejecutar algunos applets y/o programas. Figura 3.2: Proxy Algunas características de un servidor proxy:  Funciona como servidor de seguridad y como filtro de contenidos.  Generalmente es un mecanismo de seguridad implementado por el ISP o los administradores de intranets.  Uno de sus usos en seguridad, es para desactivar el acceso o filtrar las solicitudes de contenido, para ciertas sedes Web consideradas ofensivas o dañinas para la red y/o los usuarios.  Guarda en memoria caché las páginas Web a las que acceden los usuarios de la red durante un cierto tiempo. Cuando un usuario solicita la misma página Web, el servidor proxy utiliza la información guardada en la memoria Plataforma de Software 39 caché en lugar de recuperarla del proveedor de contenidos. De esta forma, se accede con más rapidez a las páginas Web.  Mejora el rendimiento de la red. 3.2.1 Implementaciones de Proxy En ambiente Linux:  Squid7: Es el preferido por los profesionales en redes y software libre, gana esta preferencia merced a que de manera equilibrada tiene todas las características necesarias. Incluso en algunos ítems está muy por encima del promedio, por ejemplo en el caché de navegación y en el balanceo de carga. Además es de uso libre y gratuito, y está disponible para diversas plataformas que incluyen a Windows y Linux.  Varnish8: Es más eficiente que Squid en la implementación de caché reverso.  Lighttp9 y Haproxy10: Son más eficientes que Squid en balanceo de carga. En la actualidad no hay versión para Debian. En ambiente Windows:  Microsoft Proxy Server11: Consta de dos servicios (Web Proxy y WinSock Proxy). El servicio Web Proxy soporta HTTP, lectura FTP y gopher para equipos en intranet ejecutando TCP/IP. El servicio WinSock Proxy soporta protocolos Windows Sockets como Telnet y RealAudio para computadores en intranet ejecutando TCP/IP o Internetwork Packet Exchange/Sequenced Packet Exchange (IPX/SPX).  Private Proxy12: Es un software que proporciona acceso a varios proveedores de servidores proxy seguros. Después de suscribirse a Private Proxy el usuario tiene un nombre, usuario, contraseña y un enlace de descarga que le permite acceder a los servidores proxy anónimos. Tres de estos servidores se encuentran en los Estados Unidos y uno se encuentra en los Países Bajos. Hay un mínimo de 10 direcciones IP diferentes para cada uno de los servidores, lo que da un total de 40 direcciones IP diferentes. Estas direcciones IP se rotan cada 30 minutos para cada servidor o pueden desconectarse de un servidor y conectarse a otro, para cambiar la dirección IP.  1st Up Net Proxy Server13: Incluye soporte para Web, SOCKS4/5, SMTP, POP3, FTP y NNTP. También proporciona el control y bloqueo de 7 http://observatorio.cnice.mec.es/modules.php?op=modload&name=News&file=article&sid=589 8 http://varnish-cache.org 9 http://pt.todoprogramas.com/programalinux/lighttpd 10 http://pt.todoprogramas.com/programalinux/haproxy 11 http://support.microsoft.com/kb/550559/es 12 http://www.privateproxysoftware.com 13 http://www.upland-research.com Plataforma de Software 40 funciones. Puede especificar sitios permitidos, sitios bloqueados, no reconocidos y limitar el tiempo o el número de conexiones a Internet.  WinGate14: Proporciona acceso seguro a Internet, gestionando para toda la red a través de una o múltiples conexiones a Internet, también permite acceso avanzado y flexible de control y políticas de uso, al mismo tiempo facilita el uso del monitor en tiempo real, y permite mantener los servicios por usuario y registros de auditoría. Detiene virus, spam y contenidos inapropiados al través de su red. Mejora el rendimiento de la red y la capacidad de respuesta con Web y el almacenamiento en caché de DNS.  Jana Server15: Proporciona acceso a través de un sólo modem, o conexión ADSL para un grupo de usuarios de red local. Se instala en la máquina en la que esté conectado el módem, y actúa como servidor. Es también un servidor de correo, administrando el correo entrante y saliente de Internet para usuarios individuales, así como también el tráfico de mensajes entre los usuarios de la red local. Cada usuario puede tener su propia cuenta de correo con su propio proveedor. Jana Server incluye también un servidor HTTP, que se puede utilizar para pruebas de sitios Web en modo local, o para construir una intranet y además soporta los scripts Perl/CGI y PHP3/4. Para complementar esta herramienta, se encuentra un navegador integrado que sustituye al tradicional interfaz gráfico de usuario, un servidor DNS, Telnet y un lector de noticias.  SpoonProxy16: Fue diseñado para consumir pocos recursos y es fácil de configurar. Este proxy soporta una amplia variedad de clientes que abarcan todas las funciones de Internet, entre ellos navegadores Web, clientes de email, mensajería instantánea, juegos en red y mucho más. El programa incluye un asistente para configurar todos los servicios y permite establecer nombres de usuario y contraseñas para cada máquina conectada. Soporta UDP y su interfaz permite controlar las conexiones realizadas y el tráfico en bytes. Además se puede administrar remotamente, incluso desde un PC fuera de la red. 3.2.2 Proxy Inverso El uso habitual del Web proxy, es cuando el cliente requiere una página Web de Internet desde la red local. Sin embargo existe el concepto de proxy inverso o reverso, el cual permite que desde el exterior (Internet) puedan acceder páginas Web de la red interna (intranet). Una de las soluciones para ello, la provee el servidor Web Apache. 3.3 VPN Una Red Privada Virtual (VPN), tal como Virtual Private Networks [17] describe, conecta los componentes de una red con los de otra red, logrando este objetivo 14 http://www.wingate.com 15 http://janaserver.blogspot.com 16 http://www.pi-soft.com/spoonproxy/index.shtml Plataforma de Software 41 mediante la conexión de los usuarios de distintas redes a través de un túnel virtual que se construye en las redes que atraviesa la interconexión (Internet o cualquier red pública). En la Figura 3.3 se observa como la VPN permite a los usuarios trabajar desde sus hogares u otro lugar, conectándolos de una forma segura con el servidor corporativo y usando la infraestructura provista por la red pública (por ejemplo Internet). Figura 3.3: VPN Desde el punto de vista del usuario, la VPN es una conexión entre el usuario y el servidor corporativo. La naturaleza de la interconexión que está en el medio de los dos es transparente para el usuario, ya que los datos le aparecen como si fueran enviados a través de su red LAN, como si estuviera en su intranet empresarial. Básicamente existen dos arquitecturas de conexión VPN:  VPN de acceso remoto: Es quizás el modelo más usado actualmente y consiste en usuarios o proveedores que se conectan con la empresa desde sitios remotos (oficinas comerciales, domicilios, hoteles, aviones, etcétera) utilizando Internet como vínculo de acceso. Una vez autenticados, los usuarios tienen un nivel de acceso muy similar al que tienen en la red local de la empresa (ver Figura 3.4 tomada de17). 17 http://www.laserwifi.com/foros/showthread.php?t=20 Plataforma de Software 42  VPN punto a punto: Se utiliza para conectar oficinas remotas con la sede central de una organización. En esta modalidad, los equipos interconectados generalmente poseen vínculo permanente a Internet. A través del enlace se conectan vía VPN con el equipo central o servidor; mientras los usuarios locales de cada intranet interconectada, logran comunicarse con la central al través de sus servidores locales (ver Figura 3.5 tomada de18). Figura 3.4: VPN acceso remoto Figura 3.5: VPN punto a punto 3.3.1 Software VPN  Wippien19: Todas las transferencias de archivos y las conexiones son seguras y cifradas. Wippien también apoya el IRC, y hasta tiene su propio chat privado donde usuarios pueden unirse a otros usuarios Wippien. Requiere en primer lugar una Jabber cuenta, la cual se crea en la página de configuración.  LogMeIn Hamachi20: Es una VPN tradicional en el sentido que requiere una conexión a una red existente Hamachi VPN (o la creación de otras nuevas). 18 http://www.laserwifi.com/foros/showthread.php?t=20 19 http://wippien.com 20 http://hamachi.updatestar.com/es Plataforma de Software 43 Viene con una opción libre durante la instalación, pero el usuario puede elegir entre el Básico (gratis) o el Try Hamachi Premium.  SSL Explorer (Community Edition)21: Basado en el navegador SSL VPN solution. Proporciona mando a distancia de la solución para control de acceso, también proporciona un medio de acceder de forma segura las aplicaciones de la intranet y de los recursos, utilizando un navegador Web estándar. La instalación es bastante engorrosa, aunque es facilitada por la guía que acompaña al programa.  BirdsSoft VPN-X (cliente)22: Una aplicación Java/cross-platform P2P/SSL/TLS solución de VPN. Cada usuario recibe una dirección IP única virtual, y puede conectarse con otros usuarios (clientes) a través del software, todos los datos de la red están cifrados. Es ideal para conectar dos (o más) computadores a través de largas distancias. Se puede navegar por los archivos y carpetas de los demás, crear juegos en red, tener chats, etc.  OpenVPN23: Es una herramienta de código abierto, y se presenta como una solución completa de VPN SSL que puede acomodar una amplia gama de configuraciones, incluyendo acceso remoto, VPN entre sitios y seguridad WiFi. Es una implementación de VPN SSL la cual usa extensiones OSI 2 u OSI 3 para asegurar redes, basada en los protocolos SSL/TLS, soporta diferentes medios de autenticación como certificados, smart cards, y/o usuarios/contraseñas, permite políticas de control de acceso para usuarios o grupos usando reglas de cortafuego aplicadas a las interfaces virtuales de la VPN. Esta alternativa es más segura y versátil, razón por la que requiere una instalación y configuración segura del programa cliente en las máquinas clientes, sean estas del sistema operativo Windows u otros.  OpenSwan24: Software derivado del proyecto FreeSWAN, soporta ampliamente IPsec, incluyendo OE, IPsec UDP Encapsulación, IKE v2, XAUTH, NAT-T en modo túnel. Para instalar este software se requiere modificar las fuentes del kernel y recompilarlo, de igual manera necesita instalar herramientas complementarias para que el usuario configure fácilmente el aplicativo. 21 http://sourceforge.net/projects/sslexplorer 22 http://birdssoft.com 23 http://openvpn.net 24 http://openswan.org Plataforma de Software 44 3.3.2 Implementación Las soluciones de VPN pueden ser implementadas a diferentes niveles del modelo OSI tal como lo muestra la Figura 3.6. 7. Aplicación 6. Presentación 5. Sesión 4. Transporte SSL 3. Red IPsec 2. Enlace PPTP – L2TP 1. Físico Figura 3.6: Modelo OSI – Implementación VPN Implementaciones de capa 2 (enlace) El encapsulamiento a este nivel ofrece ciertas ventajas ya que permite transferencias sobre protocolos no-IP, como por ejemplo IPX de Novell. Teóricamente, las tecnologías implementadas en la capa 2 pueden tunelizar cualquier tipo de paquetes y, en la mayoría de los casos, lo que se hace es establecer un dispositivo virtual PPP con el cual se establece la conexión con el otro lado del túnel. Algunos ejemplos de estas tecnologías:  PPTP (Point to Point Tunneling Protocol): Desarrollado por Microsoft, es una extensión de PPP. Su principal desventaja es que sólo puede establecer un túnel por vez entre pares. Poca seguridad.  L2F (Layer 2 Forwarding): Principalmente desarrollado por la empresa Cisco, ofrece mejores posibilidades que PPTP sobre todo en el uso de conexiones simultáneas.  L2TP (Layer 2 Tunneling Protocol): Usado por Cisco y otros fabricantes, se ha convertido en estándar de la industria y combina las ventajas de PPTP y L2F. Dado que las tecnologías PPTP, L2F y L2TP no ofrecen por sí mismas mecanismos de seguridad, para su uso deberá ser combinada con otros mecanismos generalmente implementados en la capa 3 del modelo OSI: L2Sec (Layer 2 Security Protocol) ha sido desarrollado para proveer una solución con seguridad, utiliza para ellos SSL/TLS aunque impone una sobrecarga bastante grande en la comunicación para lograrlo. Plataforma de Software 45 Implementaciones de capa 3 – Red IPsec es la tecnología más aceptada en este punto y fue desarrollada como un estándar de seguridad de Internet en capa 3. IPsec se puede utilizar para encapsular cualquier tráfico de capa 3 pero no el tráfico de capas inferiores, por lo que no se podrá utilizar para protocolos no-IP como IPX o mensajes de broadcast. Su principal ventaja es que puede ser usado prácticamente en cualquier plataforma, existiendo una gran variedad de soluciones tanto de software como de hardware. Existen dos métodos principales usados por IPsec:  Modo Túnel: Todos los paquetes IP son encapsulados en un nuevo paquete y enviados a través del túnel siendo desempaquetados en el otro extremo y posteriormente dirigidos a su destinatario final. De este modo, se protegen las direcciones IP del emisor y del receptor así como el resto de los metadatos de los paquetes.  Modo Transporte: Sólo la carga útil (payload) de la sección de datos es encriptada y encapsulada. La sobrecarga es mucho menor que en el caso anterior, pero se exponen los metadatos a posibles atacantes que podrían ver quien se está comunicando con quien. Las diversas aplicaciones en el mundo del software escogen algunas de las tecnologías descritas en la sub sección 3.3.2 para desarrollar la solución que ofrecen. Por ello se recomienda conocer que tecnología usa el software al momento de elegir. 3.4 Servidor Web Un servidor Web es un programa que implementa el protocolo HTTP (HyperText Transfer Protocol). Este protocolo pertenece a la capa de aplicación del modelo OSI y está diseñado para transferir lo que se llama hipertextos, páginas Web o páginas HTML (HyperText Markup Language), es decir textos complejos con enlaces, figuras, formularios, botones y objetos incrustados como animaciones o reproductores de música y video. El hecho de que HTTP y HTML estén íntimamente ligados no debe dar lugar a confundir ambos términos. HTML es un lenguaje, y HTTP es un protocolo. El servidor Web se mantiene a la espera de peticiones HTTP por parte de un cliente HTTP (navegador). El cliente realiza una petición al servidor y éste le responde con el contenido que el cliente solicita. El servidor responde al cliente enviando el código HTML de la página, una vez recibido el código, el cliente lo interpreta y lo despliega en pantalla. Sobre el servicio Web se puede disponer de aplicaciones o porciones de código que se ejecutan cuando se realizan ciertas peticiones y/o respuestas HTTP. Hay que distinguir entre: Plataforma de Software 46  Aplicaciones en el lado del cliente (Java o Java Script, ActiveX, etc.): El cliente Web es el encargado de ejecutarlas en la máquina del usuario, donde el servidor proporciona el código de las aplicaciones al cliente y éste, mediante el navegador, las ejecuta. Es necesario, por tanto, que el cliente disponga de un navegador con capacidad para ejecutar aplicaciones (también llamadas scripts).  Aplicaciones en el lado del servidor (servlets, PHP, CGI, Perl, etc.): El servidor Web ejecuta la aplicación; ésta, una vez ejecutada, genera cierto código HTML; el servidor toma este código recién creado y lo envía al cliente por mediante el protocolo HTTP. Figura 3.7: Esquema simplificado del servicio Web En la Figura 3.7 tomada de25 se observa el procedimiento que se lleva a cabo en el servidor Web. El navegador realiza una solicitud HTTP, luego el servidor procesa la solicitud, para después enviar una respuesta HTTP. 3.4.1 Implementaciones de Servidor Web Existen muchas aplicaciones en el mercado que proveen este servicio, las siguientes son las más usadas:  Apache26: Es potente, flexible y multiplataforma. Su diseño modular permite a los administradores de sitios Web elegir que características van a ser incluidas. Soporta una variedad de tecnologías como PHP, CGI, etc. Además en combinación con Tomcat, soporta Java y AJAX. Apache es el servidor más usado en Internet [3], se usa en plataformas grandes, medianas y pequeñas.  Cherokee27: Es ligero, sencillo y cómodo para el administrador. Está bajo la licencia GPL y es multiplataforma. Entre las tecnologías que soporta están las siguientes: PHP, FastCGI, SCGI, etc. 25 http://daw-fiec.pbworks.com/Protocolo-HTTP 26 http://apache.org 27 http://www.cherokee-project.com Plataforma de Software 47  Hiawatha28: Es el más avanzado, seguro y rápido. También es fácil de configurar y, entre otras características cuenta con un rootjail (capacidad de enjaular la ejecución de aplicaciones como root sin perjudicar la seguridad), asimismo la capacidad de ejecutar CGI bajo cualquier UID/GID, la prevención de la inyección de SQL y de cross-site scripting (ejecución de scripts o códigos maliciosos), la prohibición a los clientes que tratan tales hazañas.  Lighttpd29: Es rápido, seguro, flexible, y fiel a los estándares. Consume menos CPU y memoria RAM que otros [3]. Muy útil cuando el volumen de consultas o accesos al portal Web aumenta notablemente y se requiere armar otro portal de inmediato sin necesidad de cambiar a un hardware más potente (CPU, memoria RAM, etc.).  IIS (Internet Information Server)30: Es la solución para servidor Web de Microsoft. IIS 7.0 ofrece nuevas formas de solicitud de procesamiento, su arquitectura incluye el proceso de activación de Windows Service (WS), que permite a los sitios que utilizan otros protocolos HTTP y HTTPS conectarse sin inconvenientes y de manera más segura, un motor de servidor Web que se puede personalizar añadiendo o eliminando módulos (parecido al Apache) y, un nuevo enfoque a las peticiones de transformación, la integración de la solicitud de procesamiento de las tuberías de IIS y ASP.NET.  Abyss Web Server X131: Es un servidor Web para Windows, MacOS X, Linux y FreeBSD, que se distribuye gratuitamente. Es una aplicación pequeña que soporta conexiones seguras SSL, que permite reanudar descargas, almacenamiento en caché de la negociación, CGI/1.1 scripts, FastCGI, extensiones ISAPI, Server Side Includes (SSI), ASP.NET (en Windows), páginas de error personalizadas. También permite la protección de contraseñas, la reescritura de URL, el control de la dirección IP, los alias, los tipos MIME personalizados, los archivos de índice, los listados de directorios personalizados, la lucha contra el parasitismo, y el límite de ancho de banda. Además, posee control automático anti-piratería y una intuitiva interfaz Web multilingüe de gestión remota.  Google Web Server (GWS)32: Es el nombre para el software de servidor Web que Google utiliza para su infraestructura de red. No hay mucha información de esta herramienta, se sabe que está implementada en Linux, muy posiblemente basada en Apache, y que mezcla sistema operativo con Web server.  Nginx33: Es un servidor HTTP y proxy inverso de alto rendimiento, además es servidor proxy para IMAP/POP3/SMTP. Nginx fue desarrollado por Igor Sysoev para rambler.ru, el segundo sitio Web más visitado de Rusia. 28 http://www.hiawatha-webserver.org 29 http://www.lighttpd.net 30 http://www.microsoft.com/web/platform/server.aspx/es-es 31 http://www.aprelium.com/abyssws 32 http://google.dirson.com/post/0364 33 http://nginx.org Plataforma de Software 48 3.4.2 Servidores Web más Utilizados Developer December 2009 Percent January 2010 Percent Change Apache 664,576 66.89% 665,593 66.98% 0.09 Microsoft IIS 175,278 17.64% 172,983 17.41% -0.23 Nginx 40,084 4.03% 42,105 4.24% 0.20 Google 20,215 2.03% 20,575 2.07% 0.04 Tabla 3.2: Uso mundial servidores Web En la Tabla 3.2 (tomada de [3]) se observa claramente la preponderancia del servidor Apache, mientras que en la Figura 3.8 (tomada de [2]) se muestra una prueba de stress de varios servidores Web. El servidor lighttpd está recién conquistando el mundo Internet, es nuevo y bueno, pero por ser poco usado no entró en la muestra comparativa de los más usados (ver Tabla 3.2). Figura 3.8: Rendimiento servidores Web 3.4.3 Modularidad de Apache Web Server La estructuración y construcción del Apache permiten incorporarle módulos tan diversos como los siguientes:  Apache ASP34: Proporciona un puerto para emular ASP (Active Server Pages) en el servidor Web Apache utilizando como intérprete Perl, y permite el desarrollo de aplicaciones Web dinámicas con gestión de sesiones y código Perl embebido. Adicionalmente existen muchas extensiones de gran alcance, incluyendo taglibs XML, XSLT de representación, y los nuevos eventos que originalmente no son parte de la API de ASP.  Tomcat35 (también llamado Jakarta Tomcat o Apache Tomcat): Funciona como un contenedor de servlets desarrollado bajo el proyecto Jakarta en la Apache Software Foundation. Tomcat implementa las especificaciones de los servlets y de JavaServer Pages (JSP) de Sun Microsystems. 34 http://www.apache-asp.org 35 http://tomcat.apache.org Plataforma de Software 49 3.5 DHCP (Dynamic Host Configuration Protocol) El protocolo de red DHCP [4] permite a los nodos de una red IP obtener sus parámetros de configuración automáticamente. Se trata de un protocolo de tipo cliente/servidor en el que generalmente un servidor posee una lista de direcciones IP dinámicas y las va asignando a los clientes a medida que se van liberando, conociendo en todo momento quien ha estado en posesión de esa IP, el tiempo que la ha tenido y a quien se la asigna después. Este protocolo se publicó en octubre de 1993, estando documentado actualmente en el RFC 2131 [4]. Los últimos esfuerzos describiendo DHCPv6, DHCP en una red IPv6, fueron publicados como RFC 3315 [5]. DHCP permite al administrador supervisar y distribuir de forma centralizada las direcciones IP necesarias y, automáticamente, asignar y enviar una nueva IP si el computador es conectado en un lugar diferente de la red. Si no se dispone del protocolo DHCP, cada dirección IP debe configurarse manualmente en cada computador y, si el computador se mueve a otro lugar de la red, se debe configurar manualmente otra dirección IP. El protocolo DHCP incluye tres métodos de asignación de direcciones IP:  Asignación manual o estática: Asigna una dirección IP a una máquina determinada. Se suele utilizar cuando se quiere controlar la asignación de dirección IP a cada cliente, y evitar que se conecten clientes no identificados.  Asignación automática: Asigna una dirección IP de forma permanente a una máquina cliente y la mantiene hasta que el cliente la libera. Se suele utilizar cuando el número de clientes no varía demasiado.  Asignación dinámica: Es el único método que permite la reutilización dinámica de las direcciones IP. El administrador de la red determina un rango de direcciones IP y cada computador conectado a la red está configurado para solicitar su dirección IP al servidor cuando la tarjeta de interfaz de red se inicializa. Esto facilita la instalación de nuevas máquinas clientes a la red. Plataforma de Software 50 3.5.1 Implementaciones de DHCP  isc-dhcp36: Es la implementación de DHCP proporcionada por Internet Software Consortium (ISC), usada por varias distribuciones, especialmente FreeBSD.  dhcp37: Es una implementación de DHCP, ampliamente usada en el mundo Linux.  dhcp Windows: Viene incluido en las versiones de Windows server, sólo hay que instalarlo y configurarlo para que además de cumplir sus funciones inherentes, interactúe con el servidor DNS y/o el Active Directory. Existen multitud de implementaciones particulares de DHCP server para Windows, no amerita hablar de ellas por su simplicidad y poca incidencia. Generalmente las implementaciones de servidores DNS o Proxy o cortafuego para Windows, vienen con una implementación de DHCP para Windows. 3.6 SSH (Secure Shell) Internet hace posible realizar una gran variedad de operaciones remotas, en especial, administrar un servidor y transferir archivos. El protocolo Telnet y los comandos (rsh, rlogin y rexec) que permiten a los usuarios realizar estas tareas, tienen la desventaja de transmitir el intercambio de información en texto plano en la red (por ejemplo el nombre de acceso y la contraseña). En este caso un hacker (persona especializada en violar la seguridad) podría utilizar un sniffer para capturar paquetes que circulan en la red y así, obtener el nombre de acceso y la contraseña para acceder al equipo remoto. Considerando la dificultad para controlar todas las infraestructuras físicas ubicadas entre el usuario y el equipo remoto (al ser Internet una red abierta por definición), la seguridad debe definirse a través de los datos, es decir a un nivel lógico. El protocolo SSH [18] se desarrolló en 1995 por el finlandés T. Ylönen [6]. El protocolo SSH provee la solución a estos problemas, ya que posibilita a sus usuarios (o servicios TCP/IP) acceder a un equipo a través de una comunicación cifrada, llamada túnel. Este protocolo hace posible que el cliente (usuario o incluso equipo) abra sesión interactiva en una máquina remota (servidor) para enviar comandos o archivos a través de un canal seguro. Los datos que circulan entre el cliente y el servidor están cifrados y esto garantiza su confidencialidad (nadie más que el servidor y el cliente pueden leer la información que se envía a través de la red). Como resultado, no es posible monitorear la red con un sniffer. 36 https://www.isc.org/software/dhcp 37 http://www.dhcp.org Plataforma de Software 51 El cliente y el servidor se autentifican uno a otro para asegurarse que las dos máquinas que se comunican, son aquellas que las partes creen que son. Para cualquier hacker ya no es tan fácil adoptar la identidad del cliente o de su servidor (falsificación). Es conveniente no usar la versión 1 del protocolo (SSH1), pues esta versión tiene un punto débil que permite a los hackers introducir datos en los flujos cifrados. Por este motivo se recomienda usar la versión 2 del protocolo (SSH2) [7]. 3.6.1 Implementaciones de SSH  OpenSSH38: Es un conjunto de aplicaciones que tiene como objetivo permitir comunicaciones cifradas a través de una red. Contiene SSH1, SSH2, SCP, SFTP, etc.  OSSH39: Aplicación que únicamente implementa SSH1.  LSH/psst40: Es una implementación libre del protocolo SSH2, estandarizado por el grupo de trabajo IETF SECSH.  Dropbear41: Es un pequeño servidor SSH2 y cliente, el cual funciona bajo varias plataformas basadas en POSIX. 3.7 Sistema Operativo El sistema operativo a utilizar debe ser capaz de hospedar adecuadamente el software de protección que se le instalará para proteger la red. Al mismo tiempo debe ofrecer buen rendimiento y debe ser en forma natural poco vulnerable a ataques y/o peligros de la red. 3.7.1 Requerimientos En hardware hay equipos especializados que proveedores de hardware en red ofrecen, tal como Cisco Systems, 3COM, CheckPoint, etc. El presente trabajo no se refiere a esos hardwares especializados, su ámbito es aquello que se puede implementar por software en cualquier equipo igual o superior al siguiente:  1 GB RAM.  40 GB disco duro o más acorde con el hospedaje de páginas Web.  Intel Pentium 4.  2 tarjetas de red 100/1000 Mbps. En software: Cualquier sistema operativo que soporte el manejo de 2 tarjetas de red y, pueda alojar satisfactoriamente el software libre que se le instale para cumplir los objetivos expuestos. 38 http://www.openssh.org/es 39 ftp://ftp.pdc.kth.se/pub/krypto/ossh 40 http://www.lysator.liu.se/~nisse/lsh 41 http://matt.ucc.asn.au/dropbear/dropbear.html Plataforma de Software 52 3.7.2 Distribuciones Cualquier distribución de Windows, Linux, Unix. Cualquiera de ellas que haya sido liberada después del año 2000. 3.7.3 Solidez La más sólida y menos vulnerable, es la implementación hecha sobre cualquier sistema operativo Unix, le siguen multitud de distribuciones Linux, para colocarse en último lugar las implementaciones en Windows y MacOS. 3.8 Herramientas para Detectar Vulnerabilidades En forma similar a la medicina, donde un médico necesita instrumentos para medir el mal que aqueja al paciente, en temas de seguridad existen instrumentos de software capaces de medir o descubrir vulnerabilidades al sistema examinado. A continuación se mencionan algunas de estas herramientas clasificadas en 2 grandes áreas. La primera de uso específico (para detectar vulnerabilidades muy puntuales) y la segunda de uso no tan específico (para detectar un grupo de vulnerabilidades comunes). Las de uso específico se pueden sintetizar con la palabra Fuzz, palabra que representa un programa desarrollado en 1990 por B. Miller en la Universidad de Wisconsin en Madison, quién pasa por ser el primer fuzzer, pero hoy en día se cuentan por decenas los programas de este tipo, utilizados generalmente en pruebas de penetración. A continuación se especifican algunos fuzz:  (L)ibrary (E)xploit API - lxapi42: Una colección de scripts en Python para fuzzing.  SPIKE43: Una colección de muchos fuzzers de inmunidad. Usado para encontrar uno de los problemas de negación de servicio, conocido como RDP kernel DoS against a firewalled XP SP2, y muchos otros.  Immunity CANVAS44: Proporciona una forma para obtener una imagen concreta de la situación de seguridad en red, gracias a múltiples scripts.  PROTOS45: Una familia de fuzzers del proyecto PROTOS para fuzzing, es capaz de buscar y encontrar vulnerabilidades en varios protocolos como: WAP, HTTP-reply, LDAP, SNMP, SIP, IPsec, etc.  Fuzz46: El fuzz original desarrollado por Dr. B. Miller que fue el Alma Matter, de la University of Wisconsin-Madison en 1990. 42 http://lxapi.sourceforge.net y http://www.mail-archive.com/ pen-test@securityfocus.com/msg01650.html 43 http://www.immunitysec.com/resources-freesoftware.shtml http://searchsecurity.techtarget.com/generic/0,295582,sid14_gci1266584,00.html 44 http://www.immunitysec.com 45 https://www.ee.oulu.fi/research/ouspg/Protos 46 http://pages.cs.wisc.edu/~bart/fuzz Plataforma de Software 53 Existen también algunas herramientas de uso no tan específico como las siguientes:  Oracle Auditing Tools47: Suite de herramientas para auditar la seguridad de servidores de bases de datos Oracle.  NStealth48: Uno de los mejores escáneres de vulnerabilidades en servidores Web para Windows.  Attack ToolKit49: Herramienta pequeña y manejable para Windows que realiza comprobaciones rápidas.  Cisco Secure Scanner50: Escáner de vulnerabilidades para Cisco. Útil para realizar auditorías.  Sara51: Uno de los analizadores automáticos de vulnerabilidades más conocidos.  Nessus52: El analizador de vulnerabilidades más popular al 2009 (detector de vulnerabilidades o generador de ataques).  Snort53: Es una herramienta de código fuente abierto, para detección (IDS) y prevención (IPS) de intrusiones en todo tipo de redes. La combinación dada por la experiencia de la firma desarrolladora (Sourcefire), el protocolo y la anomalía de inspección basada en Snort, hace que el mundo tecnológico de IDS/IPS tenga preferencia en utilizarlo.  Mitre54: Es también una herramienta, pero en este caso es herramienta teórica, posee y difunde una base de datos de información acerca de vulnerabilidades, riesgos y remedios, es de gran ayuda, especialmente para la cláusula 4 (riesgos). Es importante observar con mayor detenimiento a las aplicaciones Nessus y Snort, pues su posicionamiento en el análisis de riesgos lo amerita. Para empezar se hace necesario un poco de historia. Nessus y Snort tienen varias cosas en común. Ambos nacieron como proyectos open source en 1998, se distribuyeron bajo licencia GPL, y actualmente tienen una amplia difusión, siendo sin duda referencias obligadas en su terreno, el primero (Nessus) como escáner de vulnerabilidades y el segundo como IDS. En ambos casos también han existido proyectos empresariales derivados por parte de sus desarrolladores. Nessus nació de la mano de Renaud Deraison, quién creó en 2002 la empresa Tenable Security. Mientras que Martin Roesh, el creador de Snort, fundó la empresa Sourcefire en el 2001. Pero en el 2005 Nessus anunció que abandonaría la licencia GPL para su próxima versión (la 3 en ese 47 http://www.cqure.net/wp/test 48 http://www.hackerscenter.com/index.php?/Downloads/View-document-details/811-NStealth- HTTP-Security-Scanner-v5.8-Free.html 49 http://www.computec.ch/projekte/atk 50 http://sysdoc.doors.ch/CISCO/_sp_netso_ds.pdf 51 http://www-arc.com/sara y http://www-arc.com/sara/sara8.html 52 http://nessus.org/nessus 53 http://www.snort.org 54 http://mitre.org/news/releases/09/cve_10_21_2009.html Plataforma de Software 54 entonces, actualmente está en la 4), mientras que la empresa Sourcefire (los padres de Snort), ha sido comprada por Check Point pero aún mantiene su licencia GPL. Snort es un sniffer de paquetes y un detector de intrusos basado en red (capaz de monitorear todo un dominio de colisión). Es un software flexible que ofrece capacidades de almacenamiento de sus bitácoras tanto en archivos de texto como en bases de datos abiertas como MySQL. Implementa un motor de detección de ataques y barrido de puertos que permite registrar, alertar y responder ante cualquier anomalía previamente definida. Así mismo existen herramientas de terceros para mostrar informes en tiempo real (ACID55) o para convertirlo en un sistema detector y previsor de intrusos. Este IDS implementa un lenguaje de creación de reglas flexibles, potentes y sencillas. Durante su instalación ya provee cientos de filtros o reglas para backdoor, DDoS, finger, FTP, ataques Web, CGI, Nmap, etc. Puede funcionar como sniffer (se puede ver en consola y en tiempo real qué ocurre en la red), como registro de paquetes (permite guardar en un archivo los logs para su posterior análisis) o como IDS normal. Cuando un paquete coincide con algún patrón establecido en las reglas de configuración, se registra su actividad (loguea). Así se sabe cuándo, de dónde y cómo se produjo el ataque. Snort está disponible bajo licencia GPL, gratuito y funciona bajo plataformas Windows y Unix/Linux. Dispone de una gran cantidad de filtros o patrones ya predefinidos, así como actualizaciones constantes ante casos de ataques, barridos o vulnerabilidades que vayan siendo detectadas a través de los distintos boletines de seguridad. La característica más apreciada de Snort, además de su funcionalidad, es su sistema flexible de firmas de ataques. Snort tiene una base de datos de ataques que se actualiza constantemente a través de Internet. Los usuarios pueden crear firmas basadas en las características de los nuevos ataques de red y enviarlas a la lista de correo de firmas de Snort, para que así todos los usuarios de Snort se puedan beneficiar. Esta ética de comunidad y compartir ha convertido a Snort en uno de los IDS más populares, actualizados y robustos. Se puede señalar que Snort es una herramienta que a pleno funcionamiento consume muchos recursos. Por este motivo, y cuando se monitorea una máquina, es preferible utilizar la base de datos de reglas que no necesita registro por internet, aunque esta recomendación es dependiendo del caso a observar. Por otra parte está el escáner de vulnerabilidades Nessus, es capaz de efectuar la auditoría de configuración, el perfil de los activos, de los datos sensibles y el descubrimiento y análisis de vulnerabilidad. Programas Nessus pueden ser 55 Analysis Console for Intrusion Databases http://sourceforge.net/projects/secureideas Plataforma de Software 55 distribuidos en toda la organización, dentro de las DMZ y a través de redes separadas físicamente. Nessus soporta los siguientes tipos de auditorías de seguridad:  Exploración de puertos con certificados acreditados y no-acreditados.  Exploración basada en las vulnerabilidades típicas de red.  Auditorías a los parches de Windows y a la mayoría de los parches de Unix.  Auditorías a los certificados para Windows y a la mayoría de los certificados para Unix.  Pruebas de seguridad robustas a un conjunto de aplicaciones como iTunes, Java, Skype y Firefox.  Pruebas de vulnerabilidad para aplicaciones Web.  Auditoría de configuración a base de datos SQL  Enumeración (catálogo) de software en Unix y Windows.  Pruebas de actualización y errores en configuración de antivirus. Nessus también puede utilizarse para constantemente realizar auditorías automáticamente, enviando la información al centro de seguridad, para luego el experto analizar, evaluar y recomendar acciones. Figura 3.9: Esquema de acción del Nessus Nessus a diferencia de Snort no espera los eventos, los genera tal como lo esquematiza la Figura 3.9 (basada en nessus.org). Mediante el cliente se configura, se dan las directrices principales de ataque y, se observan los resultados. El servidor genera los ataques, pero sólo los lanza si encuentra el puerto vulnerable abierto, es decir, si se trata por ejemplo de un ataque para detectar la vulnerabilidad en un servidor de correo, primero intentará establecer una conexión con el puerto TCP 25, y si esta conexión no se establece, entonces Plataforma de Software 56 no lanza el resto del ataque, sólo lanzará la totalidad del ataque programado por su regla correspondiente (*.nasl) si se cumple esta primera condición. Esta táctica la emplea para mejorar su rendimiento, pues no tendría sentido seguir generando tráfico sobre un puerto inexistente y por lo tanto hacia un servicio que no se está prestando. Para su funcionamiento consta de 4 componentes:  Librerías del programa.  Librerías NASL (Nessus Attack Scripting Language).  Núcleo de la aplicación.  Plugins que simularán los ataques requeridos. Acorde con lo mencionado para Nessus y Snort, la utilización de cualquiera de ellos o de ambos en paralelo depende de lo que se requiera probar y monitorear. Una regla simple es que cuando se terminó de instalar una red y se desea probar su vulnerabilidad simulando ataques, entonces usar Nessus es conveniente, pero cuando la red ya ha sido probada y se requiere monitorear su comportamiento versus potenciales enemigos externos, entonces se recomienda usar Snort. Sin embargo, se insiste que las posibilidades de utilización son variadas y que no siempre la regla simple es aplicable. Caso de Estudio 57 4. Caso de Estudio Existen multitud de redes heterogéneas con necesidades de protección diversas. A menudo las recomendaciones teóricas no son aplicables al 100% en las redes donde se pretende aplicarlas, eso genera una distancia entre la teoría y la práctica. No obstante, no se trata de acortar la distancia, se trata de encontrar la intersección entre la teoría y la práctica, acorde con cada caso en particular. 4.1 Planteamiento del Problema Una pequeña empresa que posee una red de área local y acceso a Internet sin protección. Empresa que constantemente tiene problemas de virus, intrusiones y otros males que devienen a consecuencia de la falta de seguridad. 4.1.1 Situación Inicial Por razones de seguridad no se proporciona el nombre u otros datos de la organización elegida. Se eligió una pequeña empresa poseedora de una intranet con 10 estaciones de trabajo bajo sistema operativo Windows XP, con 2 servidores Windows 2003 de base de datos (una SQL Server, la otra Oracle), además con IIS (servidor Web) para la interacción de su intranet. Todas las máquinas tienen acceso a Internet a través de conexión ADSL. La empresa presta servicios a otras empresas, de modo que sus empleados no siempre están físicamente en la sede, pues generalmente están en oficinas de los clientes realizando diversas labores pertinentes a su empleador. Sin embargo requieren acceder a la intranet de su empleador desde Internet, tal como si estuviesen físicamente en la empresa. La empresa logra su cometido pero a un alto precio en estabilidad y confiabilidad, pues constantemente padecen ataques intrusivos al través de Internet. Ataques que a menudo ocasionan la paralización de alguno de sus servicios, ya sea de base de datos o de conectividad (interna o externa); con las consecuentes pérdidas en tiempo, confiabilidad y efectividad, hechos que retrasan y perjudican las tareas de los empleados. 4.1.2 Situación Esperada Los directivos y empleados están cansados de que la red en lugar de ayudarlos, les ocasione problemas en el trabajo, en oficinas de clientes que vistan e incluso en casa (pues a menudo llevan virus en el pendrive). Por ello necesitan transformar su red en un instrumento que proporcione apoyo a sus labores, necesitan resolver su situación inicial hasta transformarla en una red segura y confiable. Caso de Estudio 58 La Figura 4.1 presenta el esquema de red inicial en la empresa estudiada. La red está compuesta por clientes (Windows y Linux) accediendo a la intranet, bien sea localmente o externamente (Internet). También muestra que la intranet se conecta directamente (sin protección alguna) al Internet, y lo que es peor, los servidores están plenamente vulnerables al exterior (Internet). Figura 4.1: Planteamiento del Problema 4.2 Objetivos  Proporcionar protección a la red interna (intranet).  Abrir canal de comunicación seguro que permita a los empleados acceder a la red interna sin menoscabo de la seguridad establecida. 4.3 Alcance Es importante acotar que la empresa estudiada no maneja información crítica ni estratégica y, no tiene enemigos buscando atentar contra ella, es decir no es ni banca, ni gobierno, ni agencia de investigación o espionaje, ni cualquier otro tipo de institución que requiera niveles de seguridad estrictamente elevados. Dada esa cualidad empresarial, se diseñó un nivel de protección suficiente para las características de la misma, siguiendo algunas recomendaciones de Kopparapu [19] y las del núcleo fundamental. Este hecho significa que su protección es adecuada para la mayoría de los ataques no severos. Caso de Estudio 59 4.4 Arquitectura La arquitectura que utiliza el caso de estudio está esquematizada en la Figura 4.1, arquitectura que no contiene ningún elemento protector, a ese esquema se le incorpora un cortafuego, tal como se observa en la Figura 4.2. Adicional a este elemento protector se le agregan otras cualidades (Proxy, SSH, VPN, etc.), características con las que se logra proporcionar mejoras sustanciales a la calidad del servicio y la protección. La Figura 4.2 esquematiza y resalta la utilización de software libre en la implementación del elemento protector. Figura 4.2: Solución al Problema Planteado 4.5 Plataforma de Software Para implementar el cortafuego con cualidades adicionales se utilizó software libre y técnicas mencionadas en Linux Server Security [20] y Linux Security Cookbook [21]. La presente lista muestra las aplicaciones directamente involucradas con la solución del problema (procurando contemplar amenazas descritas en Hacking Exposed Linux [22], pero adaptadas al caso en particular):  Sistema operativo = Debian Etch4  Cortafuego = iptables  Proxy = Squid3  HTTP = Apache2 Caso de Estudio 60  DHCP = dhcp3  SSH = OpenSSH  VPN = OpenVPN El sistema operativo Debian es una distribución libre de Linux pero no es la única distribución disponible, están Centos, Fedora, OpenSuse, Knoppix y muchas otras implementaciones libres de Linux. Por otra parte, también existía la posibilidad de usar Linux propietario como Red Hat o Suse, pero se eligió Debian dado que es libre y es uno de los más sólidos en ambiente de servidores, además, la comunidad que contribuye a su desarrollo es una de las más grandes en todo el abanico de opciones. Esta comunidad mantiene actualizado el sistema operativo y los servicios que este caso de estudio utiliza (iptables, Squid, Apache, etc.). Al momento de la implementación Debian Etch4 era la distribución estable y confiable. Actualmente la versión Debian Lenny 5 es la nueva versión estable, para ese momento la versión Debian Lenny 5 aún tenía problemas de maduración, por eso se utilizó Debian Etch4 en la implementación del caso de estudio. El sistema operativo elegido permite implementar confiablemente los servicios necesarios para el caso de estudio, además al ser Linux, muchos de los virus o programas intrusivos que viajan por Internet no le afectan (generalmente atacan al sistema operativo Windows), entonces al casi estar liberado de esa contingencia, corresponde preocuparse por el tráfico al través de los puertos de comunicación. Para controlar y vigilar ese tráfico se utiliza el software iptables en combinación con Squid3, donde iptables se encarga de abrir y cerrar puertos, permitiendo el paso de sólo algunas aplicaciones, mientras que Squid3 además de acelerar y optimizar el uso de Internet desde la intranet, también bloquea algunos servicios peligrosos, como por ejemplo la transferencia de archivos al través del programa Messenger. Al mismo tiempo interviene DHCP, quien otorga direcciones IP sólo a las máquinas registradas en la intranet, luego en combinación con Squid3 sólo permiten que las máquinas autorizadas puedan transitar por la red interna. De modo similar, Squid3 e iptables permiten sólo a las máquinas autorizadas transitar hacia Internet. El uso cooperante de OpenSSH y OpenVPN proporciona conectividad segura del exterior (Internet) hacia la red interna, gracias a sus cualidades de definir túneles de comunicación encriptados y autorizados mediante certificados digitales personalizados. Con el objeto de permitir entrada segura y vigilada a los portales Web de la intranet, el servidor Apache2, usando su capacidad de proxy inverso, permite que desde Internet se accedan algunos portales de intranet, y gracias al htaccess se exige autentificación en el ingreso. Al mismo tiempo se proporciona un portal institucional y no crítico, de la empresa hacia el exterior. Caso de Estudio 61 Colaborando en gestión remota y comunicaciones seguras, OpenSSH permite el ingreso seguro a la administración del servidor cortafuego desde el interior o el exterior. Además, permite que empleados de la empresa intercambien archivos usando el FTP del SSH llamado SFTP. A continuación en la Tabla 4.1 un resumen de la relación del núcleo fundamental con las acciones y software implementado en el caso de estudio: Cláusulas Componentes principales Política de seguridad.  Todos los equipos (excepto el que presta servicio de protección) adquiere dirección IP usando DHCP.  Todos los equipos con Windows tienen antivirus Kaspersky con cortafuego habilitado, con terminal remoto desactivado, con actualizaciones automáticas desactivado.  Los servidores de aplicaciones tienen clave sólo conocida por el administrador del sistema.  Todos los usuarios tienen clave personal de entrada a sus equipos.  Todos los equipos tienen una partición de disco separada del sistema operativo.  Todas las laptops o equipos para conexión del exterior hacia la intranet, tienen activado el OpenVPN cliente, con las claves y certificados personalizadas para cada equipo. Seguridad física y ambiental. Los equipos de comunicación (modem ADSL, switch router, switch inalámbrico) y el computador con el software requerido se mudó a la oficina físicamente más segura y más privada de la organización (Administración y Contabilidad) Gestión de comunicación y operaciones. En computadores cliente: Antivirus Kaspersky. En servidor protector: Debian Etch4, iptables, Squid3, Apache2, dhcp3, OpenSSH, OpenVPN. Control de acceso. En servidor protector: Debian Etch4, iptables, Squid3, Apache2, dhcp3, OpenSSH, OpenVPN. Tabla 4.1: Relación del núcleo fundamental con las acciones y software implementado Caso de Estudio 62 4.5.1 Descripción Breve del Proceso de Implementación Lo descrito desde el comienzo de la sub sección 4.5 hasta este punto no fue tarea fácil, requirió bastantes horas hombre, además de estrategia y experticia. Una síntesis secuencial de las actividades realizadas se muestra a continuación: Instalación y configuración de:  Plataforma Base:  Hardware (Servidor y elementos de red).  Sistema operativo base.  Librerías, aplicaciones y software de apoyo para fortalecer el sistema operativo base, en el área de seguridad.  Aplicación de apoyo a la administración del sistema (webmin).  Componentes de red primarios:  DHCP, Web, Proxy.  Componentes de seguridad en redes:  VPN, SSH.  Cortafuego.  Actualización vía Internet de todo lo instalado.  Configuración y optimización de todo lo instalado.  Pruebas de funcionamiento y conectividad.  Pruebas básicas de vulnerabilidad.  Entonación y elaboración de scripts:  Es importante mencionar que la configuración realizada y las aplicaciones encargadas de este trabajo de protección deben estar constantemente activas, específicamente después de algún apagón involuntario del sistema. Para ello se hace imprescindible levantar y bajar los servicios instalados en coordinación a la subida y bajada del sistema operativo. Por esta razón se elaboraron scripts, una muestra de los scripts están en el anexo D.  Con el objeto de bloquear las intrusiones, fue necesario detectar potenciales intrusos, y bloquear las direcciones IP asociadas a la intrusión. Por ese motivo se elaboraron scripts, unas muestras de estos scripts se encuentran en los anexos A y B.  Dado que la empresa del caso de estudio, obtiene su IP válido del servidor DHCP de su proveedor de servicio (CANTV), se hizo necesario avisar a los usuarios de la VPN cada vez que el IP del servidor cambiaba. Para ello se elaboró un programa de envío de mail automático, notificando la dirección IP asignada por el proveedor Internet, toda vez que se reinicia el servicio Internet. Caso de Estudio 63  Para complementar los scripts en pro de fortalecer el cortafuego, se elaboró un script que configura y activa el cortafuego. En el anexo C se muestra el shell script que hace esta labor.  Instalación de los clientes VPN:  Generación de certificados personalizados.  Configuración y prueba de conectividad.  Instalación de los clientes SSH:  Configuración y prueba de conectividad.  Pruebas de vulnerabilidad:  Nessus (ver resultados en Tabla 4.2) 4.6 Validaciones de Seguridad Post Instalación Luego de culminar la implementación de las medidas de seguridad descritas, se simuló manualmente ataques a la implementación, y posterior a esos ataques, se finalizó la prueba de penetración utilizando el programa Nessus version 4 (la última versión a diciembre del 2009). La prueba se efectuó desde un equipo en Internet, el cual utilizando Nessus 4 intentó vulnerar el servicio implementado en el caso de estudio, luego de 45 minutos de ataques, arrojó el resumen de resultados reflejado en Tabla 4.2. Number of vulnerabilities (Vulnerabilidades) : Open ports (puertos abiertos): 3 Low (nivel de riesgo bajo): 20 Medium (nivel de riego medio): 4 High (nivel de riesgo alto): 0 Tabla 4.2: Extracto de los resultados obtenidos por Nessus En la Tabla 4.2 se observa que los puertos abiertos son 3, eso significa que el iptables está haciendo bien su trabajo y cerrando los puertos con potencial de vulnerabilidad (sólo 3 potencialmente vulnerables abiertos). Nessus encontró 20 posibles vulnerabilidades de riesgo bajo o mínimo, 4 con riesgo medio, y lo que es más importante, encontró 0, es decir no encontró ninguna vulnerabilidad de riesgo alto. Con lo cual se demuestra la solidez de la implementación. Bajo otra óptica y ampliando la explicación del funcionamiento del programa atacante, se puede indicar que Nessus evaluó SSH, Apache y trató de penetrar la intranet. Encontró vulnerabilidades leves, posiblemente pudo averiguar el nombre del servidor o el sistema operativo o su versión; de modo similar quizás descubrió el tipo de encriptación (pero no pudo desencriptar); también es posible que haya captado algunos IP de la intranet; obvio intentó ingresar por puertos Telnet, Mail, SNMP, cosa que no pudo, pues los encontró cerrados por el cortafuego. Conclusiones 65 5. Conclusiones El presente trabajo proporciona una visión amplia de la vulnerabilidad a la cual está sometida cualquier red. Al mismo tiempo propone soluciones para eliminar o disminuir esas vulnerabilidades en redes no críticas. Incluso abarca un caso de estudio, describiendo la implementación práctica de su protección utilizando software libre. Es decir, va de lo general a lo particular y de la teoría a la práctica. Del trabajo se desprenden los siguientes aspectos resaltantes: Se logró extraer 4 cláusulas fundamentales de las 15 que propone el ISO/IEC 27002, con las cuales se conformó el núcleo fundamental para proteger redes no críticas. Se logró implantar exitosamente el núcleo fundamental utilizando software libre, a una empresa elegida como caso de estudio. Ninguna solución de protección proporciona seguridad total u óptima. Los ataques y atacantes parecen desarrollarse más rápido que las protecciones. No se trata de mejor precio o menor costo, se trata de libertad para elegir y actualizar los procedimientos y medios de seguridad a implementar. Para proporcionar seguridad, el software libre se presenta como una de las mejores alternativas, pues su desarrollo va acorde con las necesidades de los usuarios. Además, la comunidad de desarrolladores constantemente renueva la oferta de herramientas ante los peligros que continuamente aparecen. Referencias Bibliográficas 67 Referencias Bibliográficas [1] DIFINEX LTDA, matousec.com. Comparación de Firewall en Ambiente Windows. http://www.matousec.com/projects/proactive-security- challenge/results.php. 2009. [2] hiprank.com, Comparación de Apache - lighttpd. http://www.hiprank.com/apache-vs-apache2-vs-lighttpd-vs-zeus.html. 2009. [3] Netcraft.com. Web Server Survey. http://news.netcraft.com/archives/2010/01/07/january_2010_web_server_su rvey.html [4] R. Droms. Dynamic Host Configuration Protocol. RFC 2131. Marzo 1997. [5] R. Droms, J. Bound, B. Volz, T. Lemon, C. Perkins, M. Carney. Dynamic Host Configuration Protocol for IPv6 (DHCPv6). RFC 3315. Julio 2003. [6] T. Ylönen. Reseña biográfica para el creador del SSH. http://www.ssh.com/company/about/board_ylonen.html. 2009. [7] J. Galbraith, R. Thayer. The Secure Shell (SSH) Public Key File Format. RFC 4716. Noviembre 2006. [8] International Organization for Standardization. Information Technology - Security Techniques - Code of Practice for Information Security Management. ISO/IEC 17799:2005 (también ISO/IEC 27002 año 2007). Junio 2005. [9] N. Freed. Behavior of and Requirements for Internet Firewalls. RFC 2979. Octubre 2000. [10] M. Goux. Toda la Verdad sobre los Peligros de Internet/The Whole Truth About the Dangers of Internet. Dasier Srl. 2007. [11] G. Asencio. Seguridad en Internet (Spanish Edition). Nowtilus. Marzo 2006. [12] C. Xu. Scalable and Secure Internet Services and Architecture. Chapman & Hall/CRC. Primera edición. Junio 2005. [13] B. Komar, R. Beekelaar, J. Wettern. Firewalls for Dummies. For Dummies. Segunda edición. Junio 2003. Referencias Bibliográficas 68 [14] W. Noonan, I. Dubrawsky. Firewall Fundamentals. Cisco Press. Primera edición. Junio 2006. [15] M. Rash. Linux Firewalls: Attack Detection and Response with iptables, psad, and fwsnort. Starch Press. Septiembre 2007. [16] A. Luotonen. Web Proxy Servers. Prentice Hall. Primera edición. Diciembre 1997. [17] M. Erwin, C. Scott, P. Wolfe. Virtual Private Networks. Editorial Second Edition. Segunda edición. Diciembre 1998. [18] D. Barrett, R. Silverman, R. Byrnes. SSH, the Secure Shell: The Definitive Guide. O'Reilly. Primera edición. Mayo 2005. [19] C. Kopparapu. Load Balancing Servers, Firewalls, and Caches. Wiley. Primera edición. Febrero 2002. [20] M. Bauer. Linux Server Security. O'Reilly. Segunda edición. Enero 2005. [21] D. Barrett, R. Silverman, R. Byrnes. Linux Security Cookbook. O'Reilly. Segunda edición. Junio 2003. [22] ISECOM. Hacking Exposed Linux. McGraw-Hill Osborne. Tercera edición. Julio 2008. Anexo A (examen de archivos log) 69 Anexo A (examen de archivos log) Resumen de archivo de logs, especialmente el llamado auth.log donde se puede observar los intentos intrusivos de los que es objeto el servidor del caso de estudio. En negrillas cursivas están los comentarios, mientras en letras más pequeñas están los mensajes del log. En las 4 líneas siguientes se observan sesiones de root abiertas y cerradas. Estas sesiones son normalmente ejecutadas por algunas aplicaciones autorizadas desde el CRON Jul 9 07:39:01 localhost CRON[27090]: (pam_unix) session opened for user root by (uid=0) Jul 9 07:39:01 localhost CRON[27090]: (pam_unix) session closed for user root Jul 9 08:09:01 localhost CRON[27170]: (pam_unix) session opened for user root by (uid=0) Jul 9 08:09:01 localhost CRON[27170]: (pam_unix) session closed for user root ... En las dos primeras líneas subsiguientes se observa un intento fallido de ingresar al servidor usando la puerta del SSH procurando ingresar como root desde el IP 202.91.233.243. Jul 9 14:21:54 localhost sshd[27475]: (pam_unix) authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=202.91.233.243 user=root Jul 9 14:21:56 localhost sshd[27475]: Failed password for root from 202.91.233.243 port 34956 ssh2 Jul 9 14:33:01 localhost CRON[27565]: (pam_unix) session opened for user nobody by (uid=0) Jul 9 14:33:01 localhost CRON[27565]: (pam_unix) session closed for user nobody Jul 9 14:39:01 localhost CRON[27585]: (pam_unix) session opened for user root by (uid=0) ... Las dos primeras líneas a continuación muestran un ingreso autorizado y exitoso usando SSH con el usuario hv desde el IP 190.72.86.25. Jul 9 16:21:59 localhost sshd[28132]: reverse mapping checking getaddrinfo for dbe485619.dslam- 172-17-16-241-335-0056-mad-02.dsl.cantv.net failed - POSSIBLE BREAK-IN ATTEMPT! Jul 9 16:22:02 localhost sshd[28132]: Accepted password for hv from 190.72.86.25 port 1214 ssh2 Jul 9 16:22:02 localhost sshd[28134]: (pam_unix) session opened for user hv by (uid=0) Jul 9 16:33:01 localhost CRON[28154]: (pam_unix) session opened for user nobody by (uid=0) Jul 9 16:33:01 localhost CRON[28154]: (pam_unix) session closed for user nobody Jul 9 16:39:01 localhost CRON[28157]: (pam_unix) session opened for user root by (uid=0) ... Estas dos líneas procuran identificar el IP 95.154.207.146, al no poder hacerlo da mensaje de error. Este IP posiblemente sea un IP falso o Anexo A (examen de archivos log) 70 encubierto (spoofing), por añadidura, desde este IP se intenta ingresar como usuario db2inst1. Jul 9 19:42:02 localhost sshd[28251]: Did not receive identification string from 95.154.207.146 Jul 9 19:45:36 localhost sshd[28252]: Invalid user db2inst1 from 95.154.207.146 ... Desde el IP mencionado en el comentario anterior se intenta burlar la seguridad intentando ingresar con otro usuario, esta vez con el usuario db2fenc1, tal como se aprecia en las dos líneas siguientes. Jul 9 19:45:49 localhost sshd[28254]: (pam_unix) authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=95.154.207.146 Jul 9 19:45:51 localhost sshd[28254]: Failed password for invalid user db2fenc1 from 95.154.207.146 port 58722 ssh2 ... A continuación varias líneas donde se observan los intentos fallidos de esta dirección IP 95.154.207.146 procurando ingresar con al servidor del caso de estudio. Este IP claramente está dedicado a burlar la seguridad, quizás por eso en líneas anteriores procuró esconder su identidad, pero cuando se busca en Internet, se logra determinar que este IP pertenece a:  Jason Smith, de PC Smart Hosting,  con dirección 157 Rugeley Road, Burntwood, Staffordshire, WS7 9HA, Reino Unido,  con número de teléfono contacto: +44 (0) 7886076832… Sin embargo, dado que este IP posiblemente esté encubierto y suplantando la identidad del propietario del IP (spoofing,) no es posible asegurar que de verdad este IP es el atacante real. Jul 9 19:46:00 localhost sshd[28256]: Failed password for invalid user dasusr1 from 95.154.207.146 port 59358 ssh2 Jul 9 19:46:02 localhost sshd[28258]: Invalid user db2inst2 from 95.154.207.146 Jul 9 19:46:07 localhost sshd[28258]: (pam_unix) check pass; user unknown Jul 9 19:46:07 localhost sshd[28258]: (pam_unix) authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=95.154.207.146 Jul 9 19:46:08 localhost sshd[28258]: Failed password for invalid user db2inst2 from 95.154.207.146 port 60014 ssh2 Jul 9 19:46:10 localhost sshd[28260]: Invalid user db2fenc2 from 95.154.207.146 Jul 9 19:46:15 localhost sshd[28260]: (pam_unix) check pass; user unknown Jul 9 19:46:15 localhost sshd[28260]: (pam_unix) authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=95.154.207.146 Jul 9 19:46:17 localhost sshd[28260]: Failed password for invalid user db2fenc2 from 95.154.207.146 port 60593 ssh2 Jul 9 19:46:19 localhost sshd[28262]: Invalid user wcuser from 95.154.207.146 Jul 9 19:46:24 localhost sshd[28262]: (pam_unix) check pass; user unknown Jul 9 19:46:24 localhost sshd[28262]: (pam_unix) authentication failure; logname= uid=0 euid=0 Anexo A (examen de archivos log) 71 tty=ssh ruser= rhost=95.154.207.146 Jul 9 19:46:26 localhost sshd[28262]: Failed password for invalid user wcuser from 95.154.207.146 port 33016 ssh2 Jul 9 19:46:27 localhost sshd[28264]: Invalid user guest from 95.154.207.146 Jul 9 19:46:32 localhost sshd[28264]: (pam_unix) check pass; user unknown Jul 9 19:46:32 localhost sshd[28264]: (pam_unix) authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=95.154.207.146 Jul 9 19:46:35 localhost sshd[28264]: Failed password for invalid user guest from 95.154.207.146 port 33623 ssh2 Jul 9 19:46:36 localhost sshd[28266]: Invalid user guest from 95.154.207.146 Jul 9 19:46:41 localhost sshd[28266]: (pam_unix) check pass; user unknown Jul 9 19:46:41 localhost sshd[28266]: (pam_unix) authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=95.154.207.146 Jul 9 19:46:43 localhost sshd[28266]: Failed password for invalid user guest from 95.154.207.146 port 34308 ssh2 Jul 9 19:46:44 localhost sshd[28268]: Invalid user info from 95.154.207.146 Jul 9 19:46:49 localhost sshd[28268]: (pam_unix) check pass; user unknown Jul 9 19:46:49 localhost sshd[28268]: (pam_unix) authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=95.154.207.146 Jul 9 19:46:51 localhost sshd[28268]: Failed password for invalid user info from 95.154.207.146 port 34860 ssh2 Jul 9 19:46:52 localhost sshd[28270]: Invalid user alumno from 95.154.207.146 Jul 9 19:46:57 localhost sshd[28270]: (pam_unix) check pass; user unknown Jul 9 19:46:57 localhost sshd[28270]: (pam_unix) authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=95.154.207.146 Jul 9 19:47:00 localhost sshd[28270]: Failed password for invalid user alumno from 95.154.207.146 port 35423 ssh2 Jul 9 19:47:01 localhost sshd[28272]: Invalid user alumni from 95.154.207.146 Jul 9 19:47:06 localhost sshd[28272]: (pam_unix) check pass; user unknown Jul 9 19:47:06 localhost sshd[28272]: (pam_unix) authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=95.154.207.146 Jul 9 19:47:08 localhost sshd[28272]: Failed password for invalid user alumni from 95.154.207.146 port 36083 ssh2 Jul 9 19:47:10 localhost sshd[28274]: Invalid user postgres from 95.154.207.146 Jul 9 19:47:15 localhost sshd[28274]: (pam_unix) check pass; user unknown Jul 9 19:47:15 localhost sshd[28274]: (pam_unix) authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=95.154.207.146 … Anexo A (examen de archivos log) 72 Cabe destacar:  Se podrían llenar hojas de hojas con logs de atacantes…  Para proteger un poco a la red de estos ataques, se confeccionó un shell script que analiza estos logs, y extrae los IPs de los potenciales atacantes para posteriormente colocarlos en una lista negra. Detalles de este shell script en el anexo B.  Esa lista negra, luego es utilizada por otro shell script que se ejecuta a diario automáticamente, el cual renueva la configuración del iptables para bloquear el acceso de los IPs en la lista negra. Ese shell script se presenta en el anexo C. Anexo B (detección de IPs de intrusos) 73 Anexo B (detección de IPs de intrusos) El presente shell script examina los archivos de logs auth.log, para extraer de ellos los IPs que intentan atacar al servidor del caso de estudio. El programa está autodocumentado y se espera que un administrador de sistemas Unix o Linux con conocimientos del lenguaje pueda comprenderlo sin necesidad de aclaraciones adicionales. #!/bin/sh FUENTE=/dir_fuente # directorio donde están los programas shell script a usar ARCHLOG=/var/log/auth.log ARCHTMP=/tmp/intruso FALLA=“Failed password” FALLAR=“Failed password for invalid user” FALLO=“authentication failure” QUITA=“ssh ruser” grep “$FALLA” $ARCHLOG > $ARCHTMP.0 grep “$FALLAR” $ARCHTMP.0 > $ARCHTMP.1 grep -v “$FALLAR” $ARCHTMP.0 > $ARCHTMP.2 cut -d: -f4 $ARCHTMP.1 | cut -d” “ -f9 > $ARCHTMP.3 cut -d: -f4 $ARCHTMP.2 | cut -d” “ -f7 >> $ARCHTMP.3 sort $ARCHTMP.3 | uniq -c > $ARCHTMP.0 while read freq ip do if [ $freq -gt 10 ] then echo $ip fi done < $ARCHTMP.0 > $ARCHTMP.1 while read freq ip do if [ $freq -gt 500 ] then echo $freq $ip fi done < $ARCHTMP.0 > $ARCHTMP.2 #FIN de búsqueda de ataques por SHH, ahora para los ataques por vía distinta al SSH grep “$FALLO” $ARCHLOG | grep -v “$QUITA” | cut -d= -f6-8 | sort | uniq -c > $ARCHTMP.0 # a continuación utilizando el programa VI y un archivo con comandos llamado cambia2puntos # se separan “los campos” del archivo $ARCHTMP.0 vi $ARCHTMP.0 -s $FUENTE/cambia2puntos while read freq usuario act ip do if [ $freq -gt 10 ] then echo $ip fi Anexo B (detección de IPs de intrusos) 74 done < $ARCHTMP.0 >> $ARCHTMP.1 while read freq usuario act ip do if [ $freq -gt 500 ] then echo $freq $ip fi done < $ARCHTMP.0 >> $ARCHTMP.2 cat $ARCHTMP.1 $FUENTE/intruso | sort -u | sort -n > $ARCHTMP.fin cat $ARCHTMP.2 $FUENTE/intruso.max | sort -u | sort -n > $ARCHTMP.max # ahora se activa el cortafuego para que contemple esta nueva lista negra de IPs cp $ARCHTMP.fin $FUENTE/intruso cp $ARCHTMP.max $FUENTE/intruso.max $FUENTE/cortafuego > /tmp/intr.log Anexo C (activa reglas del cortafuego) 75 Anexo C (activa reglas del cortafuego) El presente shell script (llamado cortafuego) configura y activa el cortafuego implementado mediante reglas del programa iptables. Este shell script es una modificación, una personalización y mejora al original obtenido de Internet. La personalización se refiere principalmente a:  Puertos bloqueados.  Puertos permitidos.  Aplicaciones permitidas.  Bloquea IPs de la lista negra generada por el shell script del anexo B.  IPs de la red interna y de la externa. #!/bin/sh # # Por Guimi 2006/02 - http://www.guimi.net # Modificado por Huáscar Vega 07 2009 # FUENTE=/dir_fuente # directorio donde están los programas shell script a usar # Se verifica si existe algún parámetro en línea de comando if [ -n “$1” ] && [ “$1” = “stop” ] then # Binario de iptables IPTABLES=/sbin/iptables ### Se limpian (flush) las reglas $IPTABLES -F # Se borran las cadenas 'chains' de usuario $IPTABLES -X # Se coloca a cero paquetes y contadores $IPTABLES -Z # Se limpian las reglas de NAT $IPTABLES -t nat -F ### Establece las políticas básicas, se utiliza la estrategia de abrir todo, para luego ir cerrando $IPTABLES -P INPUT ACCEPT $IPTABLES -P OUTPUT ACCEPT $IPTABLES -P FORWARD ACCEPT Anexo C (activa reglas del cortafuego) 76 $IPTABLES -t nat -P PREROUTING ACCEPT $IPTABLES -t nat -P POSTROUTING ACCEPT # Desactiva el bit de forward echo 0 > /proc/sys/net/ipv4/ip_forward exit $? fi QUIET=“0” cd $FUENTE # Registra el inicio del cortafuego FECHA=$(date +”%C%y-%m-%d %H:%M”) echo “====== Iniciado cortafuegos: $FECHA =========“ if [ $QUIET = “0” ]; then echo “ ** Empresa caso de estudio - Redes **” echo “ ----------------------------------------------------------------” fi # PARAMETRIZACION DEL SCRIPT ########################################## ### Define constantes para usar en el ### script if [ $QUIET = “0” ]; then echo “ Cargando parámetros...” fi # Binario de iptables IPTABLES=/sbin/iptables # INTERFACES # eth1 - conectado a Internet con IP FIJA EXT_IF=eth1 # extrae dinámicamente el IP actual de la máquina. Dado que el proveedor de Internet asigna # IP públicos dinámicamente. EXT_IP=`/sbin/ifconfig -v eth1 | grep inet | cut -d: -f2 | cut -dB -f1` # eth0 - conectado a LAN LAN_IF=eth0 LAN_IP=192.168.5.1 LAN_RED=192.168.5.0/24 # lo - interfaz de loopback LOO_RED=127.0.0.0/8 # cualquier red Anexo C (activa reglas del cortafuego) 77 ANY_RED=0.0.0.0/0 # MAQUINAS INTERNAS IP_SERVIDOR_FTP=192.168.5.1 if [ $QUIET = “0” ]; then echo “ Cargando módulos...” fi ########################################## ### Asegura tener cargados los módulos necesarios /sbin/depmod -a /sbin/modprobe ip_tables /sbin/modprobe ip_conntrack /sbin/modprobe ip_conntrack_ftp /sbin/modprobe ip_conntrack_irc /sbin/modprobe iptable_nat /sbin/modprobe ip_nat_irc /sbin/modprobe ip_nat_ftp if [ $QUIET = “0” ]; then echo “ Limpiando FW...” fi ########################################## ### Limpia configuración existente # Limpia (flush) las reglas $IPTABLES -F # Borra 'cadenas' de usuario $IPTABLES -X # Pone a cero paquetes y contadores $IPTABLES -Z # Limpia las reglas de NAT $IPTABLES -t nat -F # Borra 'cadenas' de usuario de NAT $IPTABLES -t nat -X if [ $QUIET = “0” ]; then echo “ Estableciendo politicas...” fi ########################################## ### Establece políticas por omisión Anexo C (activa reglas del cortafuego) 78 ###+ de las 'cadenas' # Por omisión descarta los paquetes $IPTABLES -P INPUT DROP $IPTABLES -P OUTPUT DROP $IPTABLES -P FORWARD DROP # PREROUTING - NAT sobre la IP destino: normalmente desde inet hacia LAN # POSTROUTING - NAT sobre la IP origen: normalmente desde LAN hacia inet $IPTABLES -t nat -P PREROUTING DROP $IPTABLES -t nat -P POSTROUTING DROP # Relaja política de salida # Deja salir paquetes de LAN_IP por LAN_IF $IPTABLES -A OUTPUT -o $LAN_IF -s $LAN_IP -j ACCEPT # Deja salir paquetes de EXT_IP por EXT_IF $IPTABLES -A OUTPUT -o $EXT_IF -s $EXT_IP -j ACCEPT if [ $QUIET = “0” ]; then echo “ -> Denegación de redes invalidas...” fi ########################################## # No admite desde el exterior redes locales (RFC 1918) $IPTABLES -t nat -A PREROUTING -i $EXT_IF -s 192.168.0.0/16 -j DROP $IPTABLES -t nat -A PREROUTING -i $EXT_IF -s 10.0.0.0/8 -j DROP $IPTABLES -t nat -A PREROUTING -i $EXT_IF -s 172.16.0.0/12 -j DROP $IPTABLES -t nat -A PREROUTING -i $EXT_IF -s 224.0.0.0/4 -j DROP $IPTABLES -t nat -A PREROUTING -i $EXT_IF -s 240.0.0.0/5 -j DROP $IPTABLES -t nat -A PREROUTING -i $EXT_IF -s $LOO_RED -j DROP $IPTABLES -t nat -A PREROUTING -i $EXT_IF -s 0.0.0.0/8 -j DROP $IPTABLES -t nat -A PREROUTING -i $EXT_IF -s 169.254.0.0/16 -j DROP $IPTABLES -t nat -A PREROUTING -i $EXT_IF -s 255.255.255.255 -j DROP # Desde el interior solo admite red LAN $IPTABLES -t nat -A PREROUTING -i $LAN_IF -s ! $LAN_RED -j DROP if [ $QUIET = “0” ]; then echo “ -> Denegación de broadcast de NetBIOS...” fi ########################################## # Bloquear paquetes broadcast de NetBIOS salientes iptables -A FORWARD -p tcp --sport 137:139 -o $EXT_IF -j DROP iptables -A FORWARD -p udp --sport 137:139 -o $EXT_IF -j DROP iptables -A OUTPUT -p tcp --sport 137:139 -o $EXT_IF -j DROP iptables -A OUTPUT -p udp --sport 137:139 -o $EXT_IF -j DROP Anexo C (activa reglas del cortafuego) 79 if [ $QUIET = “0” ]; then echo “ Activando NAT...” fi ########################################## # Activa el bit de forward echo 1 > /proc/sys/net/ipv4/ip_forward # Enmascara la salida de la LAN $IPTABLES -t nat -A POSTROUTING -s $LAN_RED -o $EXT_IF -j MASQUERADE if [ $QUIET = “0” ]; then echo “ Accesos a la máquina local permitidos...” fi ########################################## ### Permite ciertos accesos a la maquina if [ $QUIET = “0” ]; then echo “ -> loopback...” fi # Permite todas las conexiones del interfaz loopback $IPTABLES -A INPUT -i lo -s $LOO_RED -d $LOO_RED -j ACCEPT $IPTABLES -A OUTPUT -o lo -s $LOO_RED -d $LOO_RED -j ACCEPT # Permite el PostEnrutado de paquetes enviados localmente $IPTABLES -t nat -A POSTROUTING -o lo -s $LOO_RED -j ACCEPT if [ $QUIET = “0” ]; then echo “ -> LAN...” fi # Da acceso desde la red local $IPTABLES -A INPUT -s $LAN_RED -i $LAN_IF -j ACCEPT $IPTABLES -A OUTPUT -d $LAN_RED -o $LAN_IF -j ACCEPT # Permite el acceso del exterior al puerto 80 por ser servidor Web $IPTABLES -A INPUT -p tcp --dport 80 -j ACCEPT $IPTABLES -A OUTPUT -p tcp --sport 80 -j ACCEPT # Webmin permite acceso exterior al puerto 10000 por ser servidor webmin $IPTABLES -A INPUT -p tcp --dport 10000 -j ACCEPT $IPTABLES -A OUTPUT -p tcp --sport 10000 -j ACCEPT $IPTABLES -A INPUT -p udp --dport 1194 -j ACCEPT $IPTABLES -A OUTPUT -p udp --dport 1194 -j ACCEPT Anexo C (activa reglas del cortafuego) 80 #Permite el acceso del exterior al puerto 21 por ser servidor ftp $IPTABLES -A INPUT -p tcp --dport 21 -j ACCEPT $IPTABLES -A OUTPUT -p tcp --sport 21 -j ACCEPT if [ $QUIET = “0” ]; then echo “ -> DNS...” fi # Acepta conexiones DNS $IPTABLES -A INPUT -s $ANY_RED -i $EXT_IF -p udp -m udp --sport 53 --dport 1024:65535 -j ACCEPT $IPTABLES -A OUTPUT -d $ANY_RED -o $EXT_IF -p udp -m udp --dport 53 --sport 1024:65535 -j ACCEPT if [ $QUIET = “0” ]; then echo “ -> ntpd...” fi # Acepta conexiones ntpd $IPTABLES -A INPUT -p udp -m udp --dport 123 -i $EXT_IF -s $ANY_RED -j ACCEPT $IPTABLES -A OUTPUT -p udp -m udp --sport 123 -j ACCEPT if [ $QUIET = “0” ]; then echo “ -> icmp...” fi # Permite paquetes ICMP (ping, traceroute...) # con limites para evitar ataques de DoS # Acepta ping $IPTABLES -A INPUT -p icmp --icmp-type echo-request -m limit --limit 2/s -j ACCEPT $IPTABLES -A OUTPUT -p icmp --icmp-type echo-request -m limit --limit 2/s -j ACCEPT $IPTABLES -A INPUT -p icmp --icmp-type echo-reply -m limit --limit 2/s -j ACCEPT $IPTABLES -A OUTPUT -p icmp --icmp-type echo-reply -m limit --limit 2/s -j ACCEPT # Acepta redirecciones $IPTABLES -A INPUT -p icmp --icmp-type redirect -m limit --limit 2/s -j ACCEPT $IPTABLES -A OUTPUT -p icmp --icmp-type redirect -m limit --limit 2/s -j ACCEPT # Acepta tiempo excedido $IPTABLES -A INPUT -p icmp --icmp-type time-exceeded -m limit --limit 2/s -j ACCEPT $IPTABLES -A OUTPUT -p icmp --icmp-type time-exceeded -m limit --limit 2/s -j ACCEPT # Acepta destino inalcanzable $IPTABLES -A INPUT -p icmp --icmp-type destination-unreachable -m limit --limit 2/s -j ACCEPT $IPTABLES -A OUTPUT -p icmp --icmp-type destination-unreachable -m limit --limit 2/s -j ACCEPT if [ $QUIET = “0” ]; then echo “ -> ssh...” fi Anexo C (activa reglas del cortafuego) 81 # Abre puerto 22 para SSH $IPTABLES -A INPUT -p tcp -s $ANY_RED -m tcp --dport 22 --sport 1024:65535 -m state --state NEW -j LOG --log-prefix “[FW - SSH] “ # PARA impedir paso de intrusos por SSH, lectura e incorporación de lista negra while read ipintruso do $IPTABLES -A INPUT -s $ipintruso -i eth1 -j REJECT done < “$FUENTE”/intruso $IPTABLES -A INPUT -p tcp -s $ANY_RED -m tcp --dport 22 --sport 1024:65535 -j ACCEPT # conexiones salientes relacionadas $IPTABLES -A OUTPUT -p tcp -m tcp --sport 22 -m state --state RELATED,ESTABLISHED -j ACCEPT if [ $QUIET = “0” ]; then echo “ Redirecciones...” fi ########################################## ### Genera redireccionamientos ### transparentes para el resto de máquinas if [ $QUIET = “0” ]; then echo “ -> Proxy Web transparente (Squid)...” fi # Con la redirección activa (primera línea) # no se llega a la segunda línea # Para bloquear todo acceso a Web comentar # solo la primera línea # Para anular el proxy comentar las dos reglas $IPTABLES -t nat -A PREROUTING -i $LAN_IF -s $LAN_RED -p tcp --dport 80 -j REDIRECT --to-port 3128 $IPTABLES -t nat -A PREROUTING -i $LAN_IF -s $LAN_RED -p tcp --dport 10000 -j REDIRECT --to-port 3128 $IPTABLES -A FORWARD -i $LAN_IF -p tcp --dport 10000 -j ACCEPT $IPTABLES -A FORWARD -i $LAN_IF -p tcp --dport 443 -j ACCEPT $IPTABLES -A FORWARD -i $EXT_IF -p tcp --dport 10000 -j ACCEPT $IPTABLES -A FORWARD -i $EXT_IF -p tcp --dport 443 -j ACCEPT if [ $QUIET = “0” ]; then echo “ -> Filtro de correo (P3Scan)...” fi # Con la redireccion activa (primera linea) # no se llega a la segunda linea # Para bloquear todo acceso a POP comentar # solo la primera linea # Para anular el filtrado comentar las dos reglas $IPTABLES -t nat -A PREROUTING -i $LAN_IF -s $LAN_RED -p tcp --dport 110 -j REDIRECT --to-port 8110 Anexo C (activa reglas del cortafuego) 82 $IPTABLES -A FORWARD -i $LAN_IF -p tcp --dport 110 -j DROP if [ $QUIET = “0” ]; then echo “ -> DNAT (21 y 20)...” fi # Redirige “$EXT_IP”:2220-1 a “$IP_SERVIDOR_FTP”:20-1 $IPTABLES -t nat -A PREROUTING -i $EXT_IF -d $EXT_IP -p tcp --dport 220 -j DNAT --to “$IP_SERVIDOR_FTP”:20 $IPTABLES -t nat -A PREROUTING -i $EXT_IF -d $EXT_IP -p tcp --dport 221 -j DNAT --to “$IP_SERVIDOR_FTP”:21 # conexiones salientes relacionadas (ftp pasivo) $IPTABLES -t nat -A PREROUTING -m state --state RELATED,ESTABLISHED -j ACCEPT # Permite postruteos a “$IP_SERVIDOR_FTP”:20-1 $IPTABLES -t nat -A POSTROUTING -o $LAN_IF -d $IP_SERVIDOR_FTP -p tcp --dport 20 -j ACCEPT $IPTABLES -t nat -A POSTROUTING -o $LAN_IF -d $IP_SERVIDOR_FTP -p tcp --dport 21 -j ACCEPT # Permite reenvios desde el exterior a “$IP_SERVIDOR_FTP”:20-1 $IPTABLES -A FORWARD -i $EXT_IF -d $IP_SERVIDOR_FTP -p tcp --dport 20 -j ACCEPT $IPTABLES -A FORWARD -i $EXT_IF -d $IP_SERVIDOR_FTP -p tcp --dport 21 -j ACCEPT if [ $QUIET = “0” ]; then echo “ Reenvios...” fi ########################################## ### Aceptamos algunos reenvíos if [ $QUIET = “0” ]; then echo “ -> icmp...” fi # Permite paquetes ICMP (ping, traceroute...) # con limites para evitar ataques de DoS # Acepta ping $IPTABLES -A FORWARD -p icmp --icmp-type echo-request -m limit --limit 2/s -j ACCEPT $IPTABLES -A FORWARD -p icmp --icmp-type echo-reply -m limit --limit 2/s -j ACCEPT # Acepta redirecciones $IPTABLES -A FORWARD -p icmp --icmp-type redirect -m limit --limit 2/s -j ACCEPT # Acepta tiempo excedido $IPTABLES -A FORWARD -p icmp --icmp-type time-exceeded -m limit --limit 2/s -j ACCEPT # Acepta destino inalcanzable Anexo C (activa reglas del cortafuego) 83 $IPTABLES -A FORWARD -p icmp --icmp-type destination-unreachable -m limit --limit 2/s -j ACCEPT # Acepta todas en LAN_IF $IPTABLES -t nat -A PREROUTING -i $LAN_IF -p icmp --icmp-type any -m limit --limit 2/s -j ACCEPT $IPTABLES -t nat -A POSTROUTING -o $LAN_IF -p icmp --icmp-type any -m limit --limit 2/s -j ACCEPT if [ $QUIET = “0” ]; then echo “ Salida general...” fi ########################################## ### Acepta conexiones salientes # Permite cualquier salida tcp desde la propia maquina $IPTABLES -A OUTPUT -o $EXT_IF -p tcp -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT # conexiones entrantes relacionadas $IPTABLES -A INPUT -i $EXT_IF -p tcp -m state --state ESTABLISHED,RELATED -j ACCEPT # Permite reenvio de paquetes enviados desde la LAN $IPTABLES -A FORWARD -i $LAN_IF -j ACCEPT # conexiones salientes relacionadas $IPTABLES -A FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT # Permite el NAT de paquetes enviados desde la LAN $IPTABLES -t nat -A PREROUTING -i $LAN_IF -j ACCEPT # conexiones salientes relacionadas $IPTABLES -t nat -A PREROUTING -m state --state RELATED,ESTABLISHED -j ACCEPT # Permite el NAT de paquetes enviados desde inet hacia la IP publica $IPTABLES -t nat -A PREROUTING -i $EXT_IF -d $EXT_IP -j ACCEPT # conexiones salientes relacionadas $IPTABLES -t nat -A PREROUTING -m state --state RELATED,ESTABLISHED -j ACCEPT # Permite NAT de paquetes enviados desde la IP publica hacia inet $IPTABLES -t nat -A POSTROUTING -o $EXT_IF -s $EXT_IP -j ACCEPT # conexiones salientes relacionadas $IPTABLES -t nat -A POSTROUTING -m state --state RELATED,ESTABLISHED -j ACCEPT Anexo C (activa reglas del cortafuego) 84 # Permite el PostEnrutado de paquetes enviados localmente $IPTABLES -t nat -A POSTROUTING -o $LAN_IF -s $LAN_RED -j ACCEPT if [ $QUIET = “0” ]; then echo “ Cerrando puertos restringidos...” fi ########################################## ### Puertos restringidos (telnet, ftp, imap, pop3, etc.) ### Reiterativo $IPTABLES -A INPUT -p tcp --dport 1:1024 -j DROP $IPTABLES -A INPUT -p udp --dport 1:1024 -j DROP if [ $QUIET = “0” ]; then echo “ Configuración FW terminada.” echo ““ echo “ A continuación podría desear:” echo “ - verificar reglas: iptables -nvL && iptables -nvL -t nat” echo “ - guardar reglas: iptables-save > reglas” echo “ - restaurar reglas: iptables-restore < reglas” fi ########################################## exit 0 Anexo D (inicio del cortafuego) 85 Anexo D (inicio del cortafuego) Para lograr que esta implementación se haga efectiva toda vez que el sistema operativo encienda, debe colocar en el subdirectorio del sistema, el init.d, el shell script llamado cortafuego. Para ello, siendo usuario root, primero debe moverse con el comando cd hasta el directorio donde está este shell script y luego ejecutar la serie de comandos: cp cortafuego /etc/init.d/cortafuego chmod 440 /etc/init.d/cortafuego cd /etc cd rc0.d ln -s ../init.d/cortafuego K22cortafuego cd ../rc1.d ln -s ../init.d/cortafuego K22cortafuego cd ../rc2.d ln -s ../init.d/cortafuego S22cortafuego cd ../rc3.d ln -s ../init.d/cortafuego S22cortafuego cd ../rc4.d ln -s ../init.d/cortafuego S22cortafuego cd ../rc5.d ln -s ../init.d/cortafuego S22cortafuego cd ../rc6.d ln -s ../init.d/cortafuego K22cortafuego Efectuada esa labor, el sistema está listo para activar el cortafuego al encender o inicializar el sistema operativo. Bibliografía 86 Nombre de archivo: tesis_HV_0610 Directorio: D: Plantilla: C:\Documents and Settings\hv\Datos de programa\Microsoft\Plantillas\Normal.dotm Título: UNIVERSIDAD CENTRAL DE VENEZUELA Asunto: Autor: Alejandro Brito Palabras clave: Comentarios: Fecha de creación: 10/06/2010 23:06:00 Cambio número: 3 Guardado el: 15/06/2010 10:18:00 Guardado por: hv Tiempo de edición: 49 minutos Impreso el: 24/09/2010 9:15:00 Última impresión completa Número de páginas: 98 Número de palabras: 25.559 (aprox.) Número de caracteres: 140.575 (aprox.)Microsoft Word - tesis_HV_0610 Universidad Central de Venezuela Facultad de Ciencias Escuela de Computación Análisis e Implementación de un Esquema Básico de Seguridad Usando Software Libre Trabajo Especial de Grado presentado ante la ilustre Universidad Central de Venezuela por el bachiller Huáscar Iván Vega Ledo para optar al título de Licenciado en Computación Prof. Eric Gamess Prof. Zenaida Castillo Caracas, Junio / 2010 Universidad Central de Venezuela Facultad de Ciencias Escuela de Computación ACTA DEL VEREDICTO Quienes suscriben, Miembros del Jurado designados por el Consejo de Escuela de Computación, para examinar el Trabajo Especial de Grado, presentado por el Bachiller Huáscar Iván Vega Ledo, C.I. 25973417, con el título “Análisis e Implementación de un Esquema Básico de Seguridad Usando Software Libre”, a los fines de cumplir con el requisito legal para optar al título de Licenciado en Computación, dejan constancia de lo siguiente: Leído como fue dicho trabajo por cada uno de los Miembros del Jurado, éstos fijaron el día 15 de junio de 2010, para que su autor lo defendiera en forma pública, lo cual éste realizó, mediante una exposición oral de su contenido, y luego respondió satisfactoriamente a las preguntas que le fueron formuladas por el Jurado, todo ello conforme a lo dispuesto en la Ley de Universidades y demás normativas vigentes de la Universidad Central de Venezuela. Finalizada la defensa pública del Trabajo Especial de Grado, el jurado decidió APROBARLO. Firmas de los Tutores y Jurados Examinadores: Prof. Eric Gamess (Tutor) Prof. Zenaida Castillo (Tutor) Prof. Adrian Bottini (Jurado Principal) Prof. Carlos Acosta (Jurado Principal) Dedicatoria de Huáscar Vega Esta ofrenda es para la Madre Naturaleza (Pachamama), para mi madre y padre biológicos, para mis hijos, para los profesores, en fin… para todos los que confiaron, confían y confiarán en mí. Agradecimientos de Huáscar Vega A la Pachamama por permitirme vivir en la libertad del acertar y del errar. A mis hijos por comprender que por el momento no tengo tiempo. A Evelyn, mi compañera sentimental, por alimentarme de ánimo y cariño. A mi padre que con su ejemplo (actuar inteligente, entereza y sonrisa ante la adversidad), me dio las pautas para tolerar y compartir. A mi madre que cuando niño se esforzó en enseñarme a comprender y entender, antes que memorizar. También me enseñó a llorar sin desfallecer. A Zenaida Castillo y Eric Gamess, tutores de este trabajo, por su paciencia y comprensión. A Wilfredo Rangel, Robinson Rivas, Antonio Silva, y en general al grupo de Zenaida Castillo (Hilda, Brígida, Otilio,…) por darme esta inmensa oportunidad. A Henry Valera y a los directivos de la empresa donde trabajo, por su tolerancia y comprensión. RESUMEN Actualmente las redes de área local son tan habituales que casi no hay oficina que no la posea; incluso gran parte de hogares la tienen. La mayoría de estas redes están conectadas a Internet, hecho que las hace vulnerables a los peligros latentes en el Internet, por ese motivo es necesario proporcionar a estas redes algún nivel de seguridad. En este trabajo se analizaron en forma detallada cada una de las recomendaciones propuestas por el documento ISO/IEC 27002; con el objeto de buscar un esquema básico de seguridad para las redes de área local y proponer un conjunto mínimo de recomendaciones al respecto, así como también su implementación usando software libre. El esquema básico de seguridad encontrado está compuesto por un conjunto mínimo de recomendaciones (cláusulas) cuyo cumplimiento proporciona un nivel de seguridad aceptable en redes no críticas; es decir en redes de organizaciones con pocos enemigos potenciales, redes que no pertenecen a grupos de espionaje, ni agencias de investigación, ni centros de seguridad gubernamental, ni bancos, ni otras organizaciones del estilo. Adicionalmente, se recomienda abaratar costos de implementación, incrementar la independencia y mantenerse actualizado. Para lograrlo se propone usar software libre, el cual con costos bajos y alta confiabilidad permite implementar el conjunto mínimo de recomendaciones extraído del documento ISO/IEC 27002. Las recomendaciones del esquema básico propuesto se implementaron en un caso de estudio, usando herramientas de software libre, demostrando así la efectividad de la propuesta. Palabras claves: Internet, intranet, seguridad, software libre, ISO/IEC 27002. Tabla de Contenido 1. INTRODUCCIÓN ................................................................................................................... 1 1.1 PLANTEAMIENTO DEL PROBLEMA .......................................................................................... 2 1.2 OBJETIVOS DEL TEG ........................................................................................................... 3 1.2.1 Objetivo General ....................................................................................................... 3 1.2.2 Objetivos Específicos ................................................................................................ 3 1.3 JUSTIFICACIÓN .................................................................................................................... 4 1.4 ALCANCE ........................................................................................................................... 4 1.5 TRABAJOS RELACIONADOS .................................................................................................. 4 1.6 DISTRIBUCIÓN DEL DOCUMENTO ........................................................................................... 5 2. MARCO TEÓRICO ................................................................................................................ 7 2.1 TEORÍA - FUNDAMENTOS ...................................................................................................... 7 2.1.1 Base Conceptual ....................................................................................................... 8 2.2 ARQUITECTURA DE UN SISTEMA SEGURO............................................................................. 11 2.2.1 Estándar Internacional ISO/IEC 27002 (antes ISO/IEC 17799) ................................ 13 2.2.2 Extracción del Núcleo Fundamental del ISO/IEC 27002 .......................................... 27 2.2.3 Alcance de la Arquitectura Propuesta ...................................................................... 32 2.3 ESQUEMA PARA RED CRÍTICA ............................................................................................. 32 2.4 ESQUEMA PARA RED NO-CRÍTICA ....................................................................................... 33 3. PLATAFORMA DE SOFTWARE ......................................................................................... 35 3.1 CORTAFUEGO ................................................................................................................... 35 3.1.1 Cortafuegos Posibles .............................................................................................. 36 3.1.2 Comparaciones ....................................................................................................... 36 3.2 PROXY ............................................................................................................................. 38 3.2.1 Implementaciones de Proxy .................................................................................... 39 3.2.2 Proxy Inverso .......................................................................................................... 40 3.3 VPN ................................................................................................................................ 40 3.3.1 Software VPN ......................................................................................................... 42 3.3.2 Implementación ....................................................................................................... 44 3.4 SERVIDOR WEB ................................................................................................................. 45 3.4.1 Implementaciones de Servidor Web ........................................................................ 46 3.4.2 Servidores Web más Utilizados ............................................................................... 48 3.4.3 Modularidad de Apache Web Server ....................................................................... 48 3.5 DHCP (DYNAMIC HOST CONFIGURATION PROTOCOL) .......................................................... 49 3.5.1 Implementaciones de DHCP ................................................................................... 50 3.6 SSH (SECURE SHELL) ....................................................................................................... 50 3.6.1 Implementaciones de SSH ...................................................................................... 51 3.7 SISTEMA OPERATIVO ......................................................................................................... 51 3.7.1 Requerimientos ....................................................................................................... 51 3.7.2 Distribuciones ......................................................................................................... 52 3.7.3 Solidez .................................................................................................................... 52 3.8 HERRAMIENTAS PARA DETECTAR VULNERABILIDADES .......................................................... 52 4. CASO DE ESTUDIO ........................................................................................................... 57 4.1 PLANTEAMIENTO DEL PROBLEMA ........................................................................................ 57 4.1.1 Situación Inicial ....................................................................................................... 57 4.1.2 Situación Esperadaescripción Breve del Proceso de Implementación ................................................. 62 4.6 VALIDACIONES DE SEGURIDAD POST INSTALACIÓN ............................................................... 63 5. CONCLUSIONES ................................................................................................................ 65 REFERENCIAS BIBLIOGRÁFICAS ............................................................................................ 67 ANEXO A (EXAMEN DE ARCHIVOS LOG)................................................................................. 69 ANEXO B (DETECCIÓN DE IPS DE INTRUSOS) ....................................................................... 73 ANEXO C (ACTIVA REGLAS DEL CORTAFUEGO) ................................................................... 75 ANEXO D (INICIO DEL CORTAFUEGO) ..................................................................................... 85 Índice de Figuras Figura 1.1: Intranet vulnerable con acceso a Internet...................................................................... 2 Figura 2.1: Objetivo del ISO/IEC 27002 ........................................................................................ 12 Figura 2.2: Cláusulas del ISO/IEC 27002 ..................................................................................... 12 Figura 2.3: Del núcleo fundamental hacia la completitud .............................................................. 32 Figura 2.4: De intranet no segura a intranet segura ...................................................................... 33 Figura 3.1: Cortafuego (controla tráfico entrante y saliente) .......................................................... 35 Figura 3.2: Proxy .......................................................................................................................... 38 Figura 3.3: VPN ........................................................................................................................... 41 Figura 3.4: VPN acceso remoto .................................................................................................... 42 Figura 3.5: VPN punto a punto ..................................................................................................... 42 Figura 3.6: Modelo OSI – Implementación VPN ............................................................................ 44 Figura 3.7: Esquema simplificado del servicio Web ...................................................................... 46 Figura 3.8: Rendimiento servidores Web ...................................................................................... 48 Figura 3.9: Esquema de acción del Nessus .................................................................................. 55 Figura 4.1: Planteamiento del Problema ....................................................................................... 58 Figura 4.2: Solución al Problema Planteado ................................................................................. 59 Índice de Tablas Tabla 3.1: Comparación cortafuego en Windows .......................................................................... 37 Tabla 3.2: Uso mundial servidores Web ....................................................................................... 48 Tabla 4.1: Relación del núcleo fundamental con las acciones y software implementado ............... 61 Tabla 4.2: Extracto de los resultados obtenidos por Nessus ......................................................... 63 Introducción 1 1. Introducción En los inicios de Internet muy pocos podían imaginar la peligrosidad que hoy late en la red de redes. Internet está transformando la concepción del mundo y revolucionando la forma de compartir y convivir. Internet alberga innumerables peligros, es difícil vivir sin Internet, pero tampoco se puede confiar ciegamente en sus bondades ni se debe sumergir inocentemente en sus profundidades. Existen ataques perpetrados por malintencionados o hackers (personas que disfrutan de un conocimiento profundo sobre el funcionamiento interno de un sistema, en particular de computadores y redes informáticas), ataques capaces de tomar el control de equipos y robar secretos; pérdidas económicas causadas por virus, gusanos, troyanos y demás malware; ciberbullying y grooming sufrido por menores en redes sociales; spam que inunda buzones de correos electrónicos con anuncios basura; timos y fraudes como los dañinos mensajes de phishing; software espía que se apropia de datos financieros; pornografía y contenidos inadecuados para menores; pérdida de la intimidad personal y del anonimato. La lista de peligros [10] es más extensa que lo descrito anteriormente. Actualmente las redes de área local, intranets y extranets interactúan constantemente con Internet, eso ocasiona que los peligros de una red incrementen o pasen de una red a otra red, complicando las labores de protección y seguridad. Adicionalmente a esta problemática se tiene la popularización de intranets, al punto que multitud de hogares poseen diminutas intranets, e incluso hay proliferación del uso de VPNs, gracias a los juegos, quienes enseñan y estimulan a los jugadores a comunicarse entre redes. Estas prácticas, ya habituales en la sociedad informatizada incrementan la inseguridad. Por esa y otras razones se hace imprescindible encontrar una manera fácil y económica de proteger intranets no críticas (pequeñas y con pocos enemigos potenciales). Afortunadamente hay modos de protección para esos peligros [11]. Precisamente con el objeto de proporcionar seguridad a las redes telemáticas, un grupo de expertos de la ISO se reunieron el año 2005, para finalmente condensar sus conocimientos en 39 objetivos de control y 133 controles, descritos en el documento ISO/IEC 27001 [8], y luego, el año 2007 mejoraron la redacción y con el mismo contenido fue elaborado el documento ISO/IEC 27002 [8]. Este grupo de expertos definió en 15 cláusulas los lineamientos para construir una red segura. El objetivo de este trabajo es analizar las recomendaciones (cláusulas) de seguridad proporcionadas en el documento ISO/IEC 27002 [8] y conceptualizar y generalizar un modo básico de protección, buscando en el documento ISO/IEC 27002 [8] un subconjunto de recomendaciones fundamentales, que al momento de llevarlas de la teoría a la práctica sean capaces de proporcionar seguridad a una intranet conectada a Internet. De igual manera se busca dar recomendaciones que permitan elevar drásticamente los niveles de seguridad, permitiendo crecer hacia medidas de conectividad segura vía VPN, además de optimizar el aprovechamiento de los canales de comunicación. Introducción 2 1.1 Planteamiento del Problema En la actualidad, buena parte de las instituciones pequeñas y medianas, descuidan la protección de sus intranets. Esa actitud se debe parcialmente al desconocimiento de los peligros en la red, y por otro lado a consecuencia de los altos presupuestos que hacen las empresas comercializadoras de servicios en seguridad. El problema está enfocado hacia la vulnerabilidad de empresas cuya organización pueda ser representada por la Figura 1.1 donde claramente se observa, la ausencia de algún tipo de cortafuego (firewall) o medida de protección. Este tipo de organizaciones generalmente son atacadas hasta por aprendices de hackers. En ocasiones, a consecuencia de ataques o infecciones, estas empresas llegan a interrumpir el servicio y/o reinstalar los computadores involucrados, generando con ello desconfianza y baja productividad en los miembros de la empresa. Figura 1.1: Intranet vulnerable con acceso a Internet Introducción 3 La Figura 1.1 presenta gráficamente la vulnerabilidad, la ausencia de protección en algunas empresas; en la parte superior izquierda se aprecia un conjunto de servidores (base de datos, Web, aplicaciones, etc.) y de clientes (Windows y/o Linux) conectados a una red de área local. Más abajo se observa una conexión entre la intranet y el Internet (la nube); a su vez está ilustrado otro conjunto de clientes (Windows y/o Linux) conectados al través del Internet hacia la intranet y viceversa. Se observa claramente que esa intercomunicación entre la intranet e Internet no está protegida, está totalmente vulnerable a los peligros latentes en Internet, hecho capaz de ocasionar lentitud, mal servicio, intrusiones y otros males a la red de área local representada por el esquema de la Figura 1.1. 1.2 Objetivos del TEG El objetivo principal es prestar ayuda y colaboración a usuarios no corporativos, a usuarios simples, de empresas pequeñas o domésticos. Este objetivo principal se logra gracias a conseguir el objetivo general y los específicos. 1.2.1 Objetivo General Analizar las recomendaciones de seguridad propuestos en las cláusulas ISO/IEC 27002 [8], enfocando el análisis hacia proporcionar protección a redes no críticas, con características iníciales similares a las mostradas en la Figura 1.1, permitiendo comunicación (interior–exterior, intranet-extranet, intranet-Internet) y sin disminución del rendimiento y/o la comunicación interna. 1.2.2 Objetivos Específicos  Detectar las cláusulas fundamentales del documento ISO/IEC 27002 para garantizar seguridad en intranets no críticas.  Estudiar y analizar las cláusulas tomando en cuenta que además de proteger la red, las cláusulas sean capaces de ampliar sus características de protección proporcionando un mejor servicio acorde con las necesidades de las intranets actuales (año 2010). Esto se traduce en:  Optimizar el uso del canal de comunicación.  Restringir el abuso del canal de comunicación.  Permitir el acceso seguro a intranets desde el exterior (sólo usuarios autorizados).  Permitir intercambio de archivos.  Permitir algún nivel de administración y mantenimiento remoto.  Permitir la visualización desde el exterior de portales Web de intranets.  Recomendar solución con bajo costo y facilidad de actualización ante nuevas amenazas. Introducción 4 1.3 Justificación Hoy las redes son indispensables en casi todos los sistemas y plataformas. La comunicación entre redes permite el intercambio de información y el trabajo cooperativo entre organizaciones. Al gozar de esos beneficios sin protección, se pone en riesgo el organismo y las personas, entonces se hace conflictivo el beneficio, por ello resulta imprescindible la protección o seguridad en la comunicación. 1.4 Alcance Ofrecer solución de bajo costo y fácil implementación, para redes no críticas con acceso a Internet; por ejemplo, empresas que no manejan datos confidenciales, estratégicos o de seguridad nacional. 1.5 Trabajos Relacionados Por medidas de seguridad, la mayoría de las organizaciones no difunde el esquema bajo el cual protege su red, sin embargo a continuación se mencionan 3 casos que utilizan software libre para su protección (año 2009):  Ministerio del Poder Popular para la Agricultura y Tierras (MPPAT): Tiene sus servicios protegidos con el siguiente software libre: DNS, Proxy, cortafuego, correo, servidor de archivos, LDAP, DHCP, VPN, etc1.  Ministerio del Poder Popular para la Mujer y la Igualdad de Género: También posee protección similar a la del MPPAT.  Instituto Nacional de Salud Agrícola Integral (INSAI): Basa su protección en sistema operativo Debian, DHCP, Squid (ver sección 3.2), iptables (ver sección 3.1), LDAP. 1 CNTI - Esfuerzos para consolidar uso de TI Libres en la APN 2009 http://www.softwarelibre.gob.ve/index.php?option=com_content&task=view&id=1333&Itemid=1 Introducción 5 1.6 Distribución del Documento El resto del documento está distribuido como se describe a continuación: Capítulo 2 (Marco Teórico): Contiene el marco conceptual de este trabajo. Se describen las 15 cláusulas del documento ISO/IEC 27002 [8] (recomendaciones para construir una red segura), se analizan estas cláusulas examinando los niveles de seguridad, y se extraen 4 cláusulas de las 15 especificadas. Estas 4 cláusulas componen el conjunto mínimo necesario para proporcionar seguridad a cualquier red no crítica. Capítulo 3 (Plataforma de Software): Define con cierta abstracción la posibilidad de praxis, es decir de lo conceptual a lo real. Para ello describe de manera general la plataforma base (sistema operativo) y diversas aplicaciones que juntas son capaces de cooperar en proporcionar seguridad (por ejemplo cortafuegos, DHCP, VPN, proxy, etc.). Luego el capítulo entra en detalles y describe algunas aplicaciones existentes en el mercado o comunidad informática, analizando sus ventajas y desventajas. Se efectúa esa labor, para tener la posibilidad de enlazar el conjunto mínimo necesario encontrado en el capítulo 2, con las aplicaciones capaces de permitir la implementación de esas recomendaciones. Capítulo 4 (Caso de Estudio): Describe para un caso en particular, las acciones a seguir para implementar seguridad en una red específica utilizando software libre. Capítulo 5 (Conclusiones): Procura resumir en 5 frases cortas, el aprendizaje colateral alcanzado durante el logro de los objetivos. Marco Teórico 7 2. Marco Teórico El escenario real de las redes telemáticas comprende multitud de soportes teóricos para su comprensión y construcción. Este trabajo abarca un pequeño espacio de todo el escenario, por lo cual es importante definir el soporte teórico que el lector debe conceptualizar para comprender mejor los logros y análisis de este trabajo. Al mismo tiempo se aclara que el presente documento contiene 2 vertientes que alimentan el análisis y el resultado final; una de ellas es la estrictamente técnica, y la otra responde al servicio humano y solidario, motivo por el cual observarán conceptos que no siempre son exclusivamente técnicos. 2.1 Teoría - Fundamentos Para entender la arquitectura del sistema seguro, es importante conocer las vulnerabilidades, los riesgos, y las protecciones que tienen las redes en la actualidad [12]. También es trascendente conocer el estándar internacional ISO/IEC 27002 [8]. Aunque la intranet es una red privada compuesta por grupos bien definidos y limitados, no se encuentra exenta de ataques que pudiesen poner en riesgo la información manejada y/o la calidad del servicio. En este trabajo se pretende estudiar la seguridad en intranets y su relación segura con el exterior (Internet y extranets), analizando las cláusulas que el ISO/IEC 27002 recomienda al respecto. La mayoría de las estadísticas de seguridad indican que cerca del 80% de los fraudes y problemas de seguridad relacionados con los computadores provienen de los usuarios internos, por ello las intranets son más vulnerables a ataques de ésta índole. El porcentaje restante proviene del exterior (Internet y extranets), en forma de virus, intrusos, hackers, etc. Generalmente las personas ignoran los peligros de la red y no toman acciones de protección preventivas. A menudo recién toman acciones correctivas a su vulnerabilidad, después de ser afectada su seguridad. El presente trabajo intenta proponer formas para minimizar estos riesgos utilizando lineamientos fundamentales de las cláusulas extraídas del ISO/IEC 27002. Al mismo tiempo pretende sugerir como óptima la implementación de estos lineamientos fundamentales utilizando herramientas provistas por software libre. Marco Teórico 8 2.1.1 Base Conceptual Por lo expuesto en los párrafos anteriores es importante que el lector agregue a su conocimiento tecnológico, cierto enfoque pragmático y la necesidad humana de sentir libertad y seguridad, mientras usa la tecnología de redes. A continuación se describen algunos conceptos y definiciones no estrictamente técnicos, pero necesarios para mejorar la lectura de este documento. Internet: Es una interconexión de redes informáticas que permite a los computadores conectados comunicarse entre sí, generalmente usando el protocolo TCP/IP. Esta interconexión es tan abierta que es capaz de conectar organismos oficiales, educativos, empresariales, sociedades, personas, etc. La definición de Internet suele ser mayormente técnica pero existen muchos aspectos relevantes que ésta no abarca; entre ellos su evolución y el impacto social que este medio de comunicación ha generado. Internet ha cambiado algunos hábitos del ser humano; el correo físico no se utiliza con la misma frecuencia, el alquiler de películas en video clubs ya no es tan rentable; el periódico y la radio se acceden desde los computadores, etc. La definición de Internet asegura que ésta ha sido revolucionaria en los hábitos de las personas, sin embargo no parece que la gente común tenga una idea clara de lo que es Internet, pero lo utiliza ampliamente. Por un lado, Internet podría ser concebido en relación con sus protocolos comunes como una colección de circuitos y rutinas, como un conjunto de recursos compartidos o incluso como una disposición a intercomunicarse; es decir, como una mega red, una red de redes de computadores. No obstante, otro enfoque, que parece más adecuado, es pensar en Internet como el medio a través del cual se envía y se acumula información. Desde este punto de vista, Internet puede ser interpretado como la información y los servicios que circulan por esta red. En conclusión, Internet es tanto un conjunto de comunidades como un conjunto de tecnologías, y su éxito se puede atribuir a la satisfacción de las necesidades básicas de la comunidad y a la utilización de ésta de un modo efectivo para impulsar la infraestructura. Es a la vez una oportunidad de difusión mundial, un mecanismo de propagación de la información y un medio de colaboración e interacción entre los individuos y sus computadores, independientemente de su localización geográfica. Marco Teórico 9 Intranet: Intranet es una red privada que utiliza los protocolos TCP/IP de Internet para su transporte básico. Los protocolos pueden ejecutarse en diversidad de hardware especializado, y también pueden coexistir con otros protocolos de red (IPX por ejemplo). La intranet está basada en los estándares y protocolos abiertos desarrollados en Internet. Una interpretación simplista pero valedera es que intranet es un Internet pequeño y limitado. En la intranet se encuentran aplicaciones y servicios, como por ejemplo administración de sistema remoto, correo electrónico (e-mail), trabajo en grupo, servicio de directorio, seguridad, acceso a bases de datos y posibilidades amplias para compartir información y archivos. Las intranets permiten a los usuarios trabajar juntos de modo sencillo y efectivo, el trabajo en grupo es importante en las redes internas, permite colaborar en proyectos, compartir información, llevar a cabo conferencias visuales, y establecer procedimientos seguros para el trabajo de producción. Los empleados que están dentro de una intranet pueden acceder a los amplios recursos de Internet, pero aquellos que están en Internet generalmente no pueden entrar en la intranet, pues tienen el acceso restringido, salvo utilicen VPN como medio de comunicación (ver sección 3.3). Extranet: Es una red de computadores interconectados que utilizan los estándares de Internet. El acceso está restringido a un determinado grupo de empresas y organizaciones que necesitan trabajar de manera coordinada para ahorrar tiempo y dinero en sus relaciones de negocio. Una extranet es adecuada para aquellas empresas cuyas cadenas de valor son interdependientes, tienen necesidad de intercambiar datos confidenciales y, el utilizar la tecnología de Internet supone un importante ahorro de tiempo y dinero. La seguridad en el diseño de la extranet es fundamental para asegurar:  Que los datos confidenciales sigan siendo confidenciales pese a viajar por la red pública.  Que sólo las personas autorizadas tengan acceso a la información que transfieren las distintas empresas participantes en la extranet. La extranet permite que personal externo a la empresa, clientes o proveedores puedan acceder a parte de la intranet de la organización, naturalmente, no tienen acceso a todo sino sólo a partes concretas (por ejemplo, acceso a información sobre productos y precios), técnicamente se abre el cortafuego para que permita también el acceso a usuarios externos, lo que complica los aspectos relativos a la seguridad. Marco Teórico 10 Desde el punto de vista de clientes y proveedores, una extranet puede permitir al proveedor consultar el stock de sus productos accediendo al sistema de información del comprador. Por ejemplo en el área de información contable, existe la posibilidad que un cliente consulte a través de una extranet la situación de un pedido, o un proveedor consulte la situación de una factura o estado de cuenta. Ello puede lograr una reposición más rápida y mejorar los tiempos de facturación. Riesgos: Al usar y disfrutar los beneficios expuestos en líneas anteriores en referencia al Internet, las intranets y las extranets; el usuario y las organizaciones se exponen a multitud de riesgos cibernéticos e informáticos, los cuales constantemente están encontrando modos de agresión. Por tal razón es de suma importancia proteger las redes y mantenerse actualizados en los modos de protección. De manera macro se puede clasificar los riesgos en: Internos y externos. El combate a los riesgos externos es el más común, y la estrategia de protección es impedir su entrada gracias al cortafuego. Los riesgos internos son más difíciles de combatir, y sus herramientas de protección más usadas son la autenticación y la instauración estricta de políticas de seguridad. Algunos tipos de riesgos:  Relacionados con la información.  Información poco fiable, dispersión, pérdida de tiempo.  Información peligrosa, inmoral, terrorista, inapropiada (para infantes o discapacitados).  Relacionados con la comunicación interpersonal.  Bloqueo de correo (email), mensajes basura y ofensivos.  Pérdidas de intimidad, malas compañías, actos ilegales.  Relacionados con actividades económicas.  Compras inducidas (publicidad, niños), gastos extraños de teléfono.  Estafas, robos, delitos contra la propiedad intelectual.  Relacionados con el funcionamiento de Internet.  Acceso lento o imposible, virus, intrusiones, espionaje, vigilancia.  Facilidad para esconderse (anonimato)  Alguna dificultad en verificar fuente e información veraz.  Relacionados con las adicciones.  Búsqueda de información, frecuentar redes sociales, intimidad cero.  Compras compulsivas, ludopatías. Marco Teórico 11 En diversas zonas geográficas algunos riesgos son considerados delitos, a continuación una breve tipificación de algunos delitos (riesgos): Tipos de delitos:  Malware: Proviene de la composición de las palabras inglesas malicious software, es decir, programas maliciosos. Se entiende por malware cualquier programa, documento o mensaje que puede resultar perjudicial para un computador, tanto por pérdida de datos como por pérdida de productividad. Ejemplos de malware son los virus, gusanos, troyanos, backdoors, spyware, adware y dialers.  Crimeware: Es el conjunto de amenazas de Internet cuyo objetivo es la realización de delitos que permitan conseguir un beneficio económico, directa o indirectamente. Se puede considerar crimeware a los troyanos (especialmente los ladrones de contraseñas y bancarios), bots, phishing, adware, spyware, spam y dialers.  Fraude online: Se basa en una técnica denominada ingeniería social. Mediante esta técnica basada en el engaño, el internauta es inducido a actuar de una determinada forma (pulsar en enlaces, introducir contraseñas, visitar páginas, etc.) convencido de que está haciendo lo correcto cuando realmente está siendo engañado. Las técnicas más comunes son: phishing, loterías falsas, webs falsas, scam, pharming, compras por Internet. 2.2 Arquitectura de un Sistema Seguro La forma documentada para hablar de arquitectura segura es refiriéndose a un documento ampliamente respaldado por la comunidad telemática, se trata del documento ISO/IEC 27002. El documento ISO/IEC 27002 se divide en 15 cláusulas, el cumplimiento de las mismas permite construir una red segura. La Figura 2.1 modela gráficamente los objetivos que los expertos del documento conservaron, recalcando que la información tiene principal relevancia, sin detrimento de la confidencialidad, la integridad y la disponibilidad. Marco Teórico 12 Figura 2.1: Objetivo del ISO/IEC 27002 4. Riesgos 5. Política de seguridad. 6. Aspectos organizativos de la seguridad de la información. 7. Gestión de activos. 8. Seguridad ligada a los recursos humanos. 9. Seguridad física y ambiental. 10. Gestión de comunicaciones y operaciones. 11. Control de acceso. 12. Adquisición, desarrollo y mantenimiento de los sistemas de información. 13. Gestión de incidentes en la seguridad de la información. 14. Gestión de la continuidad del negocio. 15. Cumplimiento. Figura 2.2: Cláusulas del ISO/IEC 27002 Por otra parte la Figura 2.2 describe el entramado de las cláusulas propuestas por el ISO/IEC 27002. En la misma se pueden observar 12 recomendaciones de seguridad (el estándar contiene 15), las primeras cláusulas, de la 1 a la 3, son definiciones y formalismos que no se incluyen en la gráfica, las cláusulas 4 y 5 guían el desarrollo de las restantes (Riesgos y Política de seguridad), pero dado Marco Teórico 13 que Riesgos contempla un área demasiado especializada y de investigación, pragmáticamente se la aparta, quedando de ese modo las siguientes 11: 5. Política de seguridad. 6. Aspectos organizativos de la seguridad de la información. 7. Gestión de activos. 8. Seguridad ligada a los recursos humanos. 9. Seguridad física y ambiental. 10. Gestión de comunicaciones y operaciones. 11. Control de acceso. 12. Adquisición, desarrollo y mantenimiento de los sistemas de información. 13. Gestión de incidentes en la seguridad de la información. 14. Gestión de la continuidad del negocio. 15. Cumplimiento. 2.2.1 Estándar Internacional ISO/IEC 27002 (antes ISO/IEC 17799) En esta sub sección se describe detalladamente las normas aprobadas internacionalmente para seguir y cumplir con el objetivo de transformar una red cualquiera en una red telemática segura. Es importante resaltar que el grupo ISO responde a requerimientos de gobiernos y grandes corporaciones, de lo cual se infiere, que el grupo ISO pensó y diseñó para asegurar redes altamente críticas, redes gubernamentales, redes de corporativas, redes de investigación y de espionaje. El documento ISO/IEC 27002 se divide en 15 cláusulas, comienza con una introducción que titula: “Conceptos generales de seguridad de la información y SGSI (Sistema de Gestión de Seguridad de la Información)”, luego presenta las 3 primeras cláusulas, las cuales describen la norma, tal como se detalla a continuación: 1. Campo de la aplicación. 1.1 Se especifica el objetivo de la norma. 2. Términos y definiciones. 2.1 Breve descripción de los términos más usados en la norma. 3. Estructura del estándar. 3.1 Descripción de la estructura de la norma. Luego de las cláusulas introductorias comienzan las recomendaciones o cláusulas necesarias para dar la seguridad en redes. Marco Teórico 14 4. Evaluación y tratamiento del riesgo. 4.1 Indicaciones sobre cómo evaluar y tratar los riesgos de seguridad de la información. La cláusula 4, además de plantear metodologías e incidir en la importancia de evaluar los riesgos, sugiere la contratación y seguimiento de expertos en el área, o en su defecto informarse de los potenciales riesgos, acudiendo a las diversas organizaciones dedicadas a ese tema. 5. Política de seguridad. 5.1 Política de seguridad de la información. 5.1.1 Documento de política de seguridad de la información. 5.1.2 Revisión de la política de seguridad de la información. En esta cláusula se proporcionan guías para la seguridad de la información en relación a requisitos del negocio, leyes y regulaciones relevantes. Impulsa que la dirección empresarial debe aprobar y publicar un documento con la política de seguridad de la información, comunicar la política establecida a todos (empleados y partes externas involucradas). Indica la necesidad de revisar la política de seguridad de la información a intervalos planificados o de inmediato, cuando se produzcan cambios significativos; exigiendo revisión para garantizar eficacia adecuada y suficiente a lo largo del tiempo. Al mismo tiempo resalta la inclusión de documentos normativos tales como el manual de políticas de seguridad y la plantilla evaluadora de políticas aprobadas. 6. Aspectos organizativos de la seguridad de la información. 6.1 Organización interna. 6.1.1 Compromiso de la Dirección con la seguridad de la información. 6.1.2 Coordinación de la seguridad de la información. 6.1.3 Asignación de responsabilidades relativas a la seguridad de la información. 6.1.4 Proceso de autorización de recursos para el procesado de la información. 6.1.5 Acuerdos de confidencialidad. 6.1.6 Contacto con las autoridades. 6.1.7 Contacto con grupos de especial interés. 6.1.8 Revisión independiente de la seguridad de la información. Esta cláusula plantea gestionar la seguridad de la información dentro de la organización. Indica métodos en el establecimiento de una estructura de gestión para iniciar y controlar la implementación de seguridad de la información en la organización interna. Señala que el órgano de dirección debe aprobar la política de seguridad, debe asignar los roles de seguridad, coordinar y revisar la implementación de la seguridad en toda la organización. Marco Teórico 15 De igual manera, sugiere que de ser necesario se establezca y facilite el acceso a fuentes especializadas de consulta en seguridad de la información. Sugiere deberían desarrollarse contactos con especialistas externos en seguridad, con objeto de mantenerse actualizados en las tendencias de la industria, la evolución de las normas y los métodos de evaluación; así como proporcionar enlaces adecuados para el tratamiento de las incidencias de seguridad. Promueve un enfoque multidisciplinario de seguridad de la información, que implique cooperación y colaboración de directores, usuarios, administradores, diseñadores de aplicaciones, auditores y del equipo de seguridad con expertos en áreas como la gestión de seguros y la gestión de riesgos. 6.2 Relaciones con terceros. 6.2.1 Identificación de los riesgos derivados del acceso de terceros. 6.2.2 Tratamiento de la seguridad en la relación con los clientes. 6.2.3 Tratamiento de la seguridad en contratos con terceros. Propugna que la seguridad de los recursos en el tratamiento de la información y de los activos de información, sean accesibles por terceros. Cuando el negocio requiera acceso de terceros, se debe realizar una evaluación del riesgo para determinar implicaciones sobre la seguridad y las medidas de control a requerir. Estas medidas de control deben definirse y aceptarse en un contrato con la tercera parte. Resalta que la seguridad de la información de la organización y las instalaciones de procesamiento de información no sean reducidas por la introducción de un servicio o producto externo. 7. Gestión de activos. 7.1 Responsabilidad sobre los activos. 7.1.1 Inventario de activos. 7.1.2 Propiedad de los activos. 7.1.3 Uso aceptable de los activos. Gestión de activos se refiere a la importancia de alcanzar y mantener una protección adecuada de los activos de la organización, donde todos los activos deben ser justificados y tener asignado un propietario. El término propietario identifica a un individuo o entidad responsable, que cuenta con la aprobación del órgano de dirección; para el control de la producción, desarrollo, mantenimiento, uso y seguridad de los activos. El término propietario no significa que la persona disponga de los derechos de propiedad reales del activo. También recomienda identificar propietarios para todos los activos y asignarles la responsabilidad y el mantenimiento de los controles implementados. La implementación de controles específicos podría ser delegada por el propietario convenientemente y acorde con sus activos. Marco Teórico 16 7.2 Clasificación de la información. 7.2.1 Directrices de clasificación. 7.2.2 Etiquetado y manipulado de la información. Propone clasificar la información para indicar necesidades, prioridades y nivel de protección previsto para su tratamiento. La información tiene diversos grados de sensibilidad y criticidad. Algunos ítems podrían requerir niveles de protección adicionales o de un tratamiento especial. 8. Seguridad ligada a los recursos humanos. 8.1 Antes del empleo. 8.1.1 Funciones y responsabilidades. 8.1.2 Investigación de antecedentes. 8.1.3 Términos y condiciones de contratación. Esta cláusula destaca la importancia de garantizar que los empleados, contratistas y usuarios de terceras partes entiendan sus responsabilidades y sean aptos para las funciones que desarrollen. De ese modo se reduce el riesgo de robo, fraude y mal uso de las instalaciones y medios; indicando que las responsabilidades de la seguridad se deben definir antes de la contratación laboral mediante la descripción adecuada del trabajo y los términos y condiciones de empleo. Todos los candidatos a empleado, los contratistas y los usuarios de terceras partes deben ser seleccionados adecuadamente, especialmente para los trabajos sensibles. Los empleados, contratistas y usuarios de terceras partes de los servicios de procesamiento de la información deben firmar un acuerdo sobre sus funciones y responsabilidades en relación a seguridad. 8.2 Durante el empleo. 8.2.1 Responsabilidades de la dirección. 8.2.2 Concienciación, formación y capacitación en seguridad de la información. 8.2.3 Proceso disciplinario. Esta recomendación persigue lograr que los empleados, contratistas y terceras partes sean conscientes de las amenazas de seguridad, de sus responsabilidades y obligaciones y que estén equipados para cumplir con la política de seguridad establecida, para reducir el riesgo asociado a los errores humanos. A tal efecto propone definir las responsabilidades de la dirección para garantizar que la seguridad se aplique en todos los puestos de trabajo en la organización. Añade que a todos los usuarios, empleados, contratistas y terceras personas se les debe proporcionar un adecuado nivel de educación y capacitación en procedimientos de seguridad y en el uso correcto de los medios disponibles para el procesamiento de la información con objeto de minimizar los posibles riesgos de seguridad. A tal efecto propone establecer un proceso disciplinario para gestionar las rupturas a normas de seguridad establecidas. Marco Teórico 17 8.3 Cese del empleo o cambio de puesto de trabajo. 8.3.1 Responsabilidad del cese o cambio. 8.3.2 Devolución de activos. 8.3.3 Retirada de los de derechos de acceso. Por último, explica la necesidad de garantizar que los empleados, contratistas y terceras personas abandonen la organización o cambien de empleo en forma organizada y tutelada. Agrega se deben establecer responsabilidades para asegurar que el abandono de la organización por parte de los empleados, contratistas o terceras personas sea adecuadamente controlada, que se devuelva todo el equipamiento y se eliminen completamente todos los derechos de acceso. 9. Seguridad física y ambiental. 9.1 Áreas seguras. 9.1.1 Perímetro de seguridad física. 9.1.2 Controles físicos de entrada. 9.1.3 Seguridad de oficinas, despachos e instalaciones. 9.1.4 Protección contra las amenazas externas y de origen ambiental. 9.1.5 Trabajo en áreas seguras. 9.1.6 Áreas de acceso público y de carga y descarga. La novena cláusula detalla la importancia y los medios para evitar el acceso físico no autorizado, daños o intromisiones a la instalación e información. Señala que el nivel de la protección suministrado debe estar acorde con los riesgos identificados. Explica que los servicios de procesamiento de información sensible deben ubicarse en áreas seguras y protegidas en un perímetro de seguridad definido por barreras y controles de entrada adecuados; áreas que deben estar protegidas físicamente contra accesos no autorizados, daños e interferencias. 9.2 Seguridad de los equipos. 9.2.1 Emplazamiento y protección de equipos. 9.2.2 Instalaciones de suministro. 9.2.3 Seguridad del cableado. 9.2.4 Mantenimiento de los equipos. 9.2.5 Seguridad de los equipos fuera de las instalaciones. 9.2.6 Reutilización o retirada segura de equipos. 9.2.7 Retirada de materiales propiedad de la empresa. Plantea establecer mecanismos para evitar pérdida, daño, robo, o puesta en peligro de los activos o la interrupción de actividades en la organización. También recomienda proteger los equipos contra amenazas físicas y ambientales. Indica instaurar controles especiales para la protección contra amenazas físicas y para salvaguardar servicios de apoyo como energía eléctrica e infraestructura del cableado. Así mismo, exige considerar la ubicación, eliminación de equipos y respaldos de la información. Marco Teórico 18 10. Gestión de comunicación y operaciones. 10.1 Responsabilidades y procedimientos de operación. 10.1.1 Documentación de los procedimientos de operación. 10.1.2 Gestión de cambios. 10.1.3 Segregación de tareas. 10.1.4 Separación de los recursos de desarrollo, prueba y operación. Esta cláusula promueve garantizar la operación correcta y segura de los recursos de tratamiento de información. Indicando se deben establecer responsabilidades con procedimientos para la gestión y operación de los recursos involucrados en el tratamiento de la información, esto incluye el desarrollo de instrucciones apropiadas de operación y de procedimientos de respuesta ante incidencias. También sugiere implementar la distribución de tareas cuando sea adecuado, para reducir el riesgo de mal uso del sistema, ya sea deliberado o por negligencia. 10.2 Gestión de la provisión de servicios por terceros. 10.2.1 Provisión de servicios. 10.2.2 Supervisión y revisión de los servicios prestados por terceros. 10.2.3 Gestión de cambios en los servicios prestados por terceros. Impulsa implementar y mantener un nivel apropiado de seguridad de la información y de la prestación del servicio en línea con los acuerdos de prestación del servicio por terceros. En este sentido indica que la organización debe verificar la implementación de acuerdos, el monitoreo de su cumplimiento y gestión de los cambios con el fin de asegurar que los servicios que se prestan cumplen con los requerimientos acordados con terceros. 10.3 Planificación y aceptación del sistema. 10.3.1 Gestión de capacidades. 10.3.2 Aceptación del sistema. Propone minimizar el riesgo de fallos en los sistemas. Para ello propone una planificación y preparación avanzada que garantice la adecuada capacidad de recursos con objeto de mantener disponibilidad en los sistemas. Indica se deben realizar proyecciones de los requisitos de capacidad a futuro, para reducir el riesgo de sobrecarga en los sistemas. Con respecto a los requisitos operacionales de los nuevos sistemas se recomienda establecer, documentar y probar los requisitos, antes de su aceptación. 10.4 Protección contra código malicioso y descargable. 10.4.1 Controles contra el código malicioso. 10.4.2 Controles contra el código descargado en el cliente. Subraya la necesidad en proteger la integridad del software y la información. Para ello exige ciertas precauciones con el objeto de prevenir y detectar la introducción de código malicioso y códigos móviles no autorizados. Marco Teórico 19 El software y los recursos de tratamiento de información son vulnerables a la introducción de software malicioso como virus informáticos, gusanos de la red, troyanos y bombas lógicas. En esta cláusula se indica que los usuarios deben conocer los peligros que puede ocasionar el software malicioso o no autorizado, e impulsa para que los administradores implementen controles y medidas especiales para detectar o evitar su introducción. 10.5 Copias de seguridad. 10.5.1 Copias de seguridad de la información. Estimula mantener la integridad y disponibilidad de los servicios de tratamiento de información y comunicación. Para ello pide establecer procedimientos rutinarios hasta conseguir la estrategia de respaldo (cláusula 14.1), realizando copias de seguridad, probando su puntual recuperación y resguardándolas apropiadamente. 10.6 Gestión de la seguridad de las redes. 10.6.1 Controles de red. 10.6.2 Seguridad de los servicios de red. Promueve:  Garantizar la protección de la información en redes y la protección de su infraestructura de apoyo.  Gestionar la seguridad en redes, las cuales pueden cruzar las fronteras de la organización.  Exigir atención a los flujos de datos, sus implicaciones legales, el monitoreo y la protección de los mismos. Indica la posible necesidad de instaurar controles adicionales con el fin de proteger la información sensible que pasa por las redes públicas. 10.7 Manipulación de los soportes. 10.7.1 Gestión de soportes extraíbles. 10.7.2 Retirada de soportes. 10.7.3 Procedimientos de manipulación de la información. 10.7.4 Seguridad de la documentación del sistema. Recomienda evitar la divulgación, modificación, retirada o destrucción de activos no autorizada e interrupciones en las actividades de la organización. Los medios deben ser controlados y físicamente protegidos. Para ello sugiere establecer procedimientos operativos para proteger los documentos, medios informáticos (discos, cintas, etc.), datos de entrada o salida y documentación del sistema; todo lo necesario contra la divulgación, modificación, retirada o destrucción de activos no autorizados. 10.8 Intercambio de información. 10.8.1 Políticas y procedimientos de intercambio de información. 10.8.2 Acuerdos de intercambio. 10.8.3 Soportes físicos en tránsito. 10.8.4 Mensajería electrónica. 10.8.5 Sistemas de información empresariales. Marco Teórico 20 También exige mantener la seguridad de la información y del software que se intercambian dentro de la organización o con cualquier entidad externa. Indicando se deben realizar los intercambios sobre la base de una política formal de intercambio, según los acuerdos de intercambio y cumplir con la normativa correspondiente (cláusulas 5 y 15). Adicionalmente se deben establecer procedimientos y normas para proteger la información y los medios físicos que contienen información en tránsito. 10.9 Servicios de comercio electrónico. 10.9.1 Comercio electrónico. 10.9.2 Transacciones en línea. 10.9.3 Información puesta a disposición pública. Recomienda garantizar la seguridad de los servicios de comercio electrónico y de su uso, considerando las implicaciones de seguridad asociadas; incluyendo transacciones en línea y requisitos de control. Según esta cláusula, la integridad y disponibilidad de la información electrónica publicada a través de sistemas disponibles de publicidad deben ser también consideradas. 10.10 Supervisión. 10.10.1 Registro de auditorías. 10.10.2 Supervisión del uso del sistema. 10.10.3 Protección de la información de los registros. 10.10.4 Registros de administración y operación. 10.10.5 Registro de fallos. 10.10.6 Sincronización del reloj. Exige detectar actividades de procesamiento de la información no autorizadas, pidiendo que los sistemas sean monitoreados y los eventos de la seguridad de información registrados. El registro de los operadores y el registro de fallos deben ser usados para garantizar la identificación de problemas del sistema de información. La organización debe cumplir con los requerimientos legales aplicables para el monitoreo y el registro de actividades. El monitoreo del sistema debe ser utilizado para verificar la efectividad de los controles adoptados y para verificar la conformidad del modelo de política de acceso. 11. Control de acceso. 11.1 Requisitos de negocio para el control de acceso. 11.1.1 Política de control de acceso. La cláusula 11 recomienda controlar los accesos a la información, a los recursos de tratamiento de la información y a los procesos de negocio en base a necesidades de seguridad y de negocio de la organización. Las regulaciones para este control deben considerar las políticas de distribución de la información y de autorizaciones pertinentes. Marco Teórico 21 11.2 Gestión de acceso de usuario. 11.2.1 Registro de usuario. 11.2.2 Gestión de privilegios. 11.2.3 Gestión de contraseñas de usuario. 11.2.4 Revisión de los derechos de acceso de usuario. Explica la necesidad de garantizar el acceso a los usuarios autorizados e impedir los accesos no autorizados a los sistemas de información. Con este fin, se deben establecer procedimientos formales para controlar la asignación de permisos de acceso a los sistemas y servicios de información. Estos procedimientos deben cubrir todas las etapas del ciclo de vida del acceso, desde el registro inicial del nuevo usuario hasta su baja cuando ya no sea necesario su acceso. Se debe prestar especial atención, al control de asignación de permisos de acceso con privilegios que no abran brechas ni anulen la eficacia de los controles del sistema. 11.3 Responsabilidades de usuario. 11.3.1 Uso de contraseña. 11.3.2 Equipo de usuario desatendido. 11.3.3 Política de puesto de trabajo despejado y pantalla limpia. Explica la necesidad de impedir el acceso de usuarios no autorizados, asimismo evitar el robo de información y de recursos digitales. Agrega que la cooperación de usuarios autorizados es esencial para una seguridad efectiva. Los usuarios deben ser conscientes de sus responsabilidades en el mantenimiento de controles de acceso eficaces, en particular respecto al uso de contraseñas y seguridad en los equipos puestos a su disposición. Impulsa la necesidad de implementar una política para mantener mesas de escritorio y monitores libres de cualquier información sensible, con objeto de reducir el riesgo de accesos no autorizados o el deterioro de documentos, medios y recursos para el tratamiento de la información. 11.4 Control de acceso a la red. 11.4.1 Política de uso de los servicios en red. 11.4.2 Autenticación de usuario para conexiones externas. 11.4.3 Identificación de equipos en las redes. 11.4.4 Diagnóstico remoto y protección de los puertos de configuración. 11.4.5 Segregación de las redes. 11.4.6 Control de la conexión a la red. 11.4.7 Control de encaminamiento de red. Describe el método para impedir el acceso no autorizado a los servicios en red, promoviendo la necesidad en controlar los accesos a servicios internos y externos conectados en red. Señala que el acceso de los usuarios a redes y servicios no compromete la seguridad de los servicios en red si se garantiza que: Marco Teórico 22  Existan interfaces adecuadas entre la red de la organización y las redes públicas o privadas de otras organizaciones.  Los mecanismos de autenticación adecuados se apliquen a usuarios y equipos.  El control de los accesos de usuarios a los servicios de información se cumplan. 11.5 Control de acceso al sistema operativo. 11.5.1 Procedimientos seguros de inicio de sesión. 11.5.2 Identificación y autenticación de usuario. 11.5.3 Sistema de gestión de contraseñas. 11.5.4 Uso de los recursos del sistema. 11.5.5 Desconexión automática de sesión. 11.5.6 Limitación del tiempo de conexión. Exige impedir el acceso no autorizado al sistema operativo de los sistemas. Para ello se debe utilizar las prestaciones de seguridad del sistema operativo y permitir acceso sólo a usuarios autorizados. Las prestaciones deben ser capaces de:  Autenticar usuarios acorde con la política de control de accesos definida.  Registrar los intentos de autenticación correctos y fallidos del sistema.  Registrar el uso de privilegios especiales del sistema.  Emitir señales de alarma cuando se violan las políticas de seguridad del sistema.  Disponer los recursos adecuados para la autenticación.  Restringir los horarios de conexión de los usuarios cuando sea necesario. 11.6 Control de acceso a las aplicaciones y a la información. 11.6.1 Restricción del acceso a la información. 11.6.2 Aislamiento de sistemas sensibles. Indica la importancia de impedir el acceso no autorizado a la información mantenida por los sistemas y las aplicaciones. Explica se deben utilizar dispositivos de seguridad con objeto de restringir el acceso a las aplicaciones y sus contenidos; restringir el acceso lógico a las aplicaciones (software) y proporcionar información únicamente a usuarios autorizados. Las aplicaciones (el software) deben:  Controlar el acceso de los usuarios a la información y a su funcionalidad, siempre en concordancia a la política de accesos definida.  Proporcionar protección contra accesos no autorizados derivados del uso de cualquier utilidad, software del sistema operativo y software malicioso que puedan traspasar o eludir los controles del sistema o de las aplicaciones.  No comprometer otros sistemas con los que se comparte recursos de información. Marco Teórico 23 11.7 Computadores portátiles y teletrabajo. 11.7.1 Computadores portátiles y comunicaciones móviles. 11.7.2 Teletrabajo. Exige garantizar la seguridad de la información en el uso de recursos de informática móvil y teletrabajo; proponiendo que la protección debe estar en relación a los riesgos específicos que ocasionan las diversas formas de trabajo. En el uso de la informática móvil propone considerar los riesgos de trabajar en entornos desprotegidos y aplicar la protección conveniente. En el caso del teletrabajo, la organización debe aplicar las medidas de protección al lugar remoto y garantizar disposiciones adecuadas y disponibles para esta modalidad de trabajo. 12. Adquisición, desarrollo y mantenimiento de los sistemas de información. 12.1 Requisitos de seguridad de los sistemas de información. 12.1.1 Análisis y especificación de los requisitos de seguridad. En esta cláusula el objetivo es garantizar que la seguridad sea parte integral de los sistemas de información. Para ello exige que dentro del análisis de los sistemas de información, se incluyan sistemas operativos, infraestructuras, aplicaciones de negocio, aplicaciones estándar o de uso generalizado, servicios y aplicaciones desarrolladas por los usuarios. Explica que el diseño e implementación de los sistemas de información son cruciales para la seguridad. Por tal motivo los requisitos de seguridad deben ser identificados y consensuados previamente al desarrollo y/o implementación de los sistemas de información. Añade que los requerimientos de seguridad deben identificarse en la fase de levantamiento de información y, deben ser justificados, aceptados y documentados como parte del proceso constructivo del sistema de información. 12.2 Tratamiento correcto de las aplicaciones. 12.2.1 Validación de los datos de entrada. 12.2.2 Control del procesamiento interno. 12.2.3 Integridad de los mensajes. 12.2.4 Validación de los datos de salida. Su meta es evitar errores, pérdidas, modificaciones no autorizadas o mal uso de la información en las aplicaciones. Recomienda se deben diseñar controles apropiados en las aplicaciones, incluidas las desarrolladas por los propios usuarios. Estos controles deben incluir la validación de los datos de entrada, el tratamiento interno y los datos de salida. Agrega que podrán ser requeridos controles adicionales para los sistemas que procesen o tengan algún efecto en los activos de información de carácter sensible, valioso o crítico. En este caso, los controles deben ser determinados en función de los requisitos de seguridad y la estimación del riesgo. Marco Teórico 24 12.3 Controles criptográficos. 12.3.1 Política de uso de los controles criptográficos. 12.3.2 Gestión de claves. Impulsa la necesidad de proteger la confidencialidad, autenticidad o integridad de la información con la ayuda de técnicas criptográficas. Además propone desarrollar una política de uso de controles criptográficos, donde se podrían desarrollar algoritmos propios de encriptación. 12.4 Seguridad de los archivos de sistema. 12.4.1 Control del software en explotación. 12.4.2 Protección de los datos de prueba del sistema. 12.4.3 Control de acceso al código fuente de los programas. Explica la importancia en controlar el acceso a los sistemas de archivos y código fuente de los programas. Impulsa que los proyectos de TI y las actividades de soporte debieran ser dirigidos de modo seguro, y que se debe evitar la exposición de datos sensibles en entornos de prueba. 12.5 Seguridad en los procesos de desarrollo y soporte. 12.5.1 Procedimientos de control de cambios. 12.5.2 Revisión técnica de aplicaciones tras efectuar cambios en el sistema operativo. 12.5.3 Restricciones a los cambios en los paquetes de software. 12.5.4 Fugas de información. 12.5.5 Externalización del desarrollo de software. Propugna y exige mantener la seguridad del sistema de aplicaciones y la información. Indica cómo controlar estrictamente los entornos de desarrollo de proyectos y de soporte. Los directivos responsables de los sistemas de aplicaciones son también responsables de la seguridad del proyecto o del entorno de soporte, por lo que deben garantizar que todas las propuestas de cambio en los sistemas se verifiquen para que no comprometan la seguridad del sistema o del entorno operativo. 12.6 Gestión de la vulnerabilidad técnica. 12.6.1 Control de las vulnerabilidades técnicas. Impulsa reducir los riesgos originados por la explotación de vulnerabilidades técnicas publicadas. Para ello propugna implementar una gestión de la vulnerabilidad técnica siguiendo un método efectivo, sistemático y cíclico, con la toma de medidas que confirmen su efectividad. 13. Gestión de incidentes en la seguridad de la información. 13.1 Notificación de eventos y puntos débiles de la seguridad de la información. 13.1.1 Notificación de los eventos de seguridad de la información. 13.1.2 Notificación de puntos débiles de la seguridad. Marco Teórico 25 El interés de esta cláusula es garantizar que los eventos y debilidades en la seguridad asociados con los sistemas de información se notifiquen de inmediato de modo que se puedan realizar acciones correctivas oportunas. Explica se deben establecer exigencias para el informe formal de los eventos y de los procedimientos de escalada. Además propone que todos los empleados, contratistas y terceros deben estar al tanto de los procedimientos e informar de los diferentes tipos de eventos y debilidades que puedan tener impacto en la seguridad de los activos organizacionales. Se les debe exigir que informen de cualquier evento o debilidad en la seguridad de información lo más rápido posible y al responsable designado. 13.2 Gestión de incidentes de seguridad de la información y mejoras. 13.2.1 Responsabilidades y procedimientos. 13.2.2 Aprendizaje de los incidentes de seguridad de la información. 13.2.3 Recopilación de evidencias. Propugna la creación de un enfoque consistente y eficaz para la gestión de los incidentes en la seguridad de información. Sugiere establecer responsabilidades y diseñar procedimientos para manejar los eventos y debilidades en la seguridad de información, una vez que hayan sido comunicados. Estimula aplicar un proceso de mejora continua en respuesta para monitorear, evaluar y gestionar los incidentes de seguridad de información. Exige que cuando se requieran evidencias, éstas deben ser recogidas con fines legales. 14. Gestión de la continuidad del negocio. 14.1 Aspectos de seguridad de la información en la gestión de la continuidad del negocio. 14.1.1 Inclusión de la seguridad de la información en el proceso de gestión de la continuidad del negocio. 14.1.2 Continuidad del negocio y evaluación de riesgos. 14.1.3 Desarrollo e implementación de planes de continuidad que incluyan la seguridad de la información. 14.1.4 Marco de referencia para la planificación de la continuidad del negocio. 14.1.5 Pruebas, mantenimiento y reevaluación de planes de continuidad. Propone mecanismos de reacción frente a la interrupción de actividades del negocio y proteger sus procesos críticos frente a desastres o grandes fallos de los sistemas de información; sugiriendo implementar un proceso de gestión de continuidad del negocio para reducir a niveles aceptables, la interrupción causada por los desastres y fallos de seguridad (desastres naturales, accidentes, fallas de equipos o acciones deliberadas) mediante una combinación de controles preventivos y de recuperación. Este proceso debe identificar los procesos críticos de negocio e integrar los requisitos de gestión de la seguridad de información para la continuidad del negocio con otros requisitos de continuidad como operaciones, proveedores de personal, materiales, transporte e instalaciones. Marco Teórico 26 Al mismo tiempo se deben analizar las consecuencias de los desastres, fallas de seguridad, pérdidas de servicio y la disponibilidad del servicio. También desarrollar e implementar planes de contingencia para asegurar que los procesos del negocio se puedan restaurar en los plazos requeridos. La seguridad de información debe ser una parte integral del plan general de continuidad del negocio y de los demás procesos de gestión dentro de la organización. Adicionalmente sugiere incluir controles para la identificación y reducción de riesgos, el acotamiento de las consecuencias de incidencias dañinas y la reanudación a tiempo de las operaciones esenciales. 15. Cumplimiento. 15.1 Cumplimiento de los requisitos legales. 15.1.1 Identificación de la legislación aplicable. 15.1.2 Derechos de propiedad intelectual. 15.1.3 Protección de los documentos de la organización. 15.1.4 Protección de datos y privacidad de la información personal. 15.1.5 Prevención del uso indebido de los recursos de tratamiento de la información. 15.1.6 Regulación de los controles criptográficos. El objetivo de esta última cláusula es el evitar incumplimientos de cualquier ley, estatuto, norma, regulación u obligación contractual, en perjuicio de cualquier requisito en seguridad. Señala que el diseño, operación, uso y gestión de los sistemas de información pueden ser objeto de requisitos estatutarios, reguladores y de seguridad contractuales. También remarca que los requisitos legales específicos deben ser advertidos por los asesores legales de la organización o por profesionales adecuadamente cualificados. Recalca es importante tomar en cuenta, que los requisitos legales cambian de un país a otro y pueden variar para la información que se genera en un país y se transmite a otro país (por ejemplo, flujos de datos entre fronteras). 15.2 Cumplimiento de las políticas y normas de seguridad y cumplimiento técnico. 15.2.1 Cumplimiento de las políticas y normas de seguridad. 15.2.2 Comprobación del cumplimiento técnico. Señala la importancia de garantizar la conformidad de los sistemas con las políticas y estándares de seguridad en la organización. Para ello exige se realicen revisiones regulares de seguridad de los sistemas de información. Estas revisiones se deben realizar según las políticas de seguridad apropiadas, mientras que las plataformas técnicas y sistemas de información deben ser auditados para el cumplimiento de los estándares establecidos. 15.3 Consideraciones de las auditorías de los sistemas de información. 15.3.1 Controles de auditoría de los sistemas de información. 15.3.2 Protección de las herramientas de auditoría de los sistemas de información. Marco Teórico 27 Su objeto es maximizar la efectividad del proceso de auditoría de los sistemas de información y minimizar las intromisiones al sistema. Para ello, exige implementar controles para proteger los sistemas en activo y las herramientas de auditoría, durante el desarrollo de las mismas. Haciendo énfasis en los procedimientos requeridos para salvaguardar la integridad y prevenir el mal uso de las herramientas de auditoría. 2.2.2 Extracción del Núcleo Fundamental del ISO/IEC 27002 Tal como se observa en la sub sección anterior, el ISO/IEC 27002 presenta recomendaciones en un ámbito bastante completo. Dado que la organización ISO responde a necesidades gubernamentales y de grandes corporaciones, sus recomendaciones son útiles para cualquier instalación grande, especialmente para aquellas cuya función es crítica (agencias de espionaje, bancos, gobiernos, etc.). El presente trabajo busca satisfacer necesidades del común de la población, a diferencia del grupo ISO, enfoca el análisis hacia redes no críticas, por tal motivo busca extraer el subconjunto mínimo necesario de cláusulas ISO/IEC 27002, recomendaciones suficientes para proporcionar un nivel de seguridad aceptable, que se pueda implementar a bajo costo y en poco tiempo. Es importante mencionar que durante el análisis, se han ido desprendiendo algunas recomendaciones hasta quedarse con el subconjunto mínimo necesario, llamado por este trabajo: Núcleo fundamental. Para empezar, las recomendaciones 1, 2 y 3 son descriptivas e introductorias, son el preámbulo para definir el entorno del trabajo ISO/IEC 27002. Por esa razón los mismos expertos que confeccionaron las recomendaciones, sugieren desprender la 1, 2 y 3, para aplicar las 12 cláusulas restantes, es decir, de la cláusula 4 a la 15. La cláusula 4 da indicaciones para evaluar y tratar los riesgos de seguridad de la información. Obviamente es posible evaluar los riesgos y emplear tiempo en ello, pero también es posible aplicar el tratamiento respectivo al riesgo detectado previamente por instituciones dedicadas al respecto. Existe un conjunto suficiente de riesgos previamente detectados y reportados al mundo entero2, riesgos y remedios aplicables a organizaciones con redes críticas y no críticas. De ese modo únicamente algunos especialistas se dedican a trabajar con la recomendación 4 y proporcionan los frutos de sus investigaciones, a sus contratantes o al mundo en general. Por esa razón, la mayoría de los profesionales dedicados a la implementación de redes seguras, apartan la recomendación 4, y trabajan con las 11 cláusulas restantes. 2 http://mitre.org Marco Teórico 28 El presente análisis clasificó las 11 cláusulas restantes en 2 grupos: 1. Subconjunto donde hay poca intervención humana (cláusulas 9, 10 y 11). 2. Subconjunto donde hay bastante intervención humana (cláusulas 5, 6, 7, 8, 12, 13, 14, y 15). El subconjunto con bastante intervención humana fue postergado en el análisis, mientras se profundizaba el estudio del subconjunto con poca intervención humana, buscando en éste último, las cláusulas que contemplen software y hardware defensivo. Fruto de ese análisis se conformó el primer núcleo protector fundamentado en las cláusulas 10 (Gestión de comunicación y operaciones) y 11 (Control de acceso). Pero esas 2 cláusulas no fueron suficientes. Entonces se analizó nuevamente el subconjunto con poca intervención humana, buscando elementos complementarios a las recomendaciones 10 y 11, hasta encontrar que la cláusula 9 (Seguridad física y ambiental) complementaba perfectamente pues garantizaba que físicamente el hardware y software protector estuviesen protegidos. No obstante, estas 3 cláusulas todavía no eran suficientes pero ya no existían más cláusulas candidatas en el subconjunto analizado, por consecuencia se procedió a profundizar el análisis en el otro subconjunto, el con bastante intervención humana. El estudio de este segundo subconjunto dio como resultado que la cláusula 5 (Política de seguridad) era absolutamente necesaria y la mejor candidata, pues sin políticas de seguridad se carecía de metas y procedimientos. Concluyendo así, que el subconjunto mínimo necesario para conformar el núcleo fundamental estaría compuesto por las cláusulas 5, 9, 10 y 11. Núcleo compuesto por 3 miembros del subconjunto con poca intervención humana y por 1 miembro del subconjunto con bastante intervención humana. Una vez definido el núcleo fundamental, se procedió a continuar el análisis, pero en esa oportunidad buscando la manera de mejorar el nivel de seguridad construido por el núcleo fundamental, pretendiendo de este modo alcanzar la utilización de las 12 cláusulas, incrementando recomendaciones acorde con el aumento de criticidad de la red en tratamiento. Para ello se aplicó casi el mismo razonamiento, pues se incorporaron al siguiente nivel los candidatos que casi entraron al núcleo (los que fueron desplazados por la cláusula 5). Ya con 2 niveles de seguridad, se procedió a construir el siguiente nivel con las restantes cláusulas con bastante intervención humana, exceptuando la 4, que dada su naturaleza de especialización en el tratamiento y análisis de riesgos, quedó en el último y mayor nivel de seguridad (instalaciones cuya criticidad requiere contar con su propio centro de investigación y monitoreo de riesgos). Marco Teórico 29 Un resumen y secuencia de los pasos a seguir, desde construir una red con seguridad básica e ir incrementando el nivel de seguridad, se puede apreciar en la Figura 2.3 y en las siguientes líneas: 1º. Implementar cláusulas 5, 9, 10 y 11 (núcleo fundamental). 2º. Incorporar más elementos relacionados con la parte humana (cláusulas 6, 8 y 13). 3º. Agregar las cláusulas 7, 12, 14 y 15. 4º. Investigar y monitorear los riesgos (cláusula 4). A continuación, breve descripción esquemática de las principales razones que ayudaron a conformar el núcleo fundamental para construir una red segura. Las partes sombreadas señalan los componentes del núcleo fundamental: Marco Teórico 30 Cláusula Justificación 5 Política de Seguridad  Imposible implementar un sistema de seguridad sin definir las acciones o políticas a seguir.  La política de seguridad indica las necesidades, los requerimientos de seguridad, los riesgos y sus métodos de evitarlos, norma las acciones a seguir y mantener.  La política de seguridad es como el timón de un barco. 6 Aspectos organizativos de la seguridad de la información.  Contempla en extenso aspectos muy importantes, sin embargo parte de esas recomendaciones están incluidas en las políticas de seguridad (la cual pertenece al núcleo fundamental), por ese motivo, y por una alta dependencia humana de esta cláusula, se la deja fuera del núcleo fundamental. 7 Gestión de activos.  Esta cláusula exige el cuidado de los activos y la información contenida en los mismos. A pesar que su cumplimiento comparte el compromiso humano y la implementación de tecnología, no se la incluye en el núcleo fundamental, pues en el núcleo parte de esta protección se hace acorde con la cláusula 9. Lo cual no significa minimizar la importancia de la cláusula 7. 8 Seguridad ligada a los recursos humanos.  Esta cláusula es exclusivamente dependiente del ser humano, por ello no ingresa al núcleo.  Gran parte de lo mencionado por esta cláusula es normalmente practicado por encargados de recursos humanos en las organizaciones. 9 Seguridad física y ambiental.  La protección a la red se proporcionará merced a hardware y software. Si el hardware o software están expuestos a robos o daños físicos, entonces el sistema seguro deja de ser seguro y se convierte en vulnerable.  Si los efectos medioambientales o riesgos de la naturaleza pueden incidir fácilmente en los elementos protectores, entonces tampoco se garantiza seguridad en la red.  Es fundamental tomar en cuenta esta cláusula, aunque parezca redundante, hay que proteger de los desastres físicos al hardware y software protector. Marco Teórico 31 10 Gestión de comunicación y operaciones.  Comunicar es la función de la red.  En esta cláusula se describen todas las recomendaciones y normas a construir, para proteger los datos, los equipos, la electrónica y los medios de almacenamiento. Dicho de otra manera, cualquier entrenamiento de seguridad en redes, describe y enseña a sus estudiantes gran parte de lo que esta cláusula menciona. 11 Control de acceso.  La estrategia que el humano ha inventado desde hace siglos es el uso del candado y la llave. El control de acceso refleja esta estrategia pero utilizando medios electrónicos y de software. La cuenta de usuario autorizado y su contraseña son estrategias fundamentales para proporcionar seguridad y acceso al mismo tiempo.  Los mecanismos para vigilar, controlar y permitir la entrada o salida de usuarios, la entrada o salida de datos, son imprescindibles al momento de proporcionar seguridad en redes. 12 Adquisición, desarrollo y mantenimiento de los sistemas de información.  En caso que la organización haga o contrate desarrollo del software a utilizar, esta cláusula debiera estar incluida en el núcleo. Pero dado que no es la mayoría de los casos, entonces fuera.  Cabe mencionar que parte de las recomendaciones de esta cláusula están incluidas en las guías y decisiones tomadas por la política de seguridad. 13 Gestión de incidentes en la seguridad de la información.  Se predefinió trabajar con los riesgos e incidentes ya conocidos (es lo que hace la mayoría de las redes no críticas).  Al mismo tiempo parte de lo recomendado en esta cláusula está incluido en la política de seguridad. Quizás no con mucho seguimiento y evaluación, pero hay suficientes aspectos contemplados. 14 Gestión de la continuidad del negocio.  Si bien es importante la continuidad del negocio, en el presente trabajo no es tan vital, pues este trabajo tiene como entorno redes no críticas, es decir donde la continuidad del negocio puede sufrir unas horas de interrupción no voluntaria. 15 Cumplimiento.  Esta cláusula podría estar en el núcleo, pues entre otros aspectos exige el cumplimiento de las políticas de seguridad. Sin embargo, este trabajo asume que es suficiente con la incorporación de las políticas de seguridad, pues su incorporación al núcleo implica el cumplimiento de las políticas establecidas por la organización. Marco Teórico 32 El análisis descrito construye el núcleo fundamental compuesto por las cláusulas: 5. Política de seguridad. 9. Seguridad física y ambiental. 10. Gestión de comunicaciones y operaciones. 11. Control de acceso. 2.2.3 Alcance de la Arquitectura Propuesta Son innumerables los desafíos que la intranet debe afrontar hoy en día. Se alerta sobre las brechas de seguridad, los potenciales lazos (loops) de comunicación en los switches, los conflictos de IP, los accesos no autorizados, las intrusiones, los virus (gusanos, troyanos, etc.), los ARP spoofing, etc [10]. Toda esa gama de problemáticas y potenciales ataques, contribuyen a determinar el nivel de seguridad que la tecnología pueda proporcionar para subsanar esas vulnerabilidades, y mejorar la confianza en la comunicación entre redes. 2.3 Esquema para Red Crítica Figura 2.3: Del núcleo fundamental hacia la completitud Marco Teórico 33 La Figura 2.3 muestra esquemáticamente lo necesario para construir una red segura cuando aumenta su criticidad. El rectángulo más interno representa al núcleo fundamental, ahí están las 4 cláusulas básica a implementar. Luego, de manera ascendente, se pueden incluir las otras cláusulas, tal como ilustran los otros rectángulos. 2.4 Esquema para Red No-Crítica En el libro Firewalls for Dummies [13] los autores hacen recomendaciones básicas. El presente trabajo recoge esas sugerencias y las acopla a lo expuesto en el capítulo 2. La Figura 2.4 grafica el resultado (cortafuego), la vía que permite pasar de intranet no segura hacia intranet segura, acorde con el núcleo fundamental. Intranet no segura Intranet segura Figura 2.4: De intranet no segura a intranet segura Tal como ilustra la Figura 2.4 la propuesta es agregar cualidades de vigilancia y protección (cortafuego) [14], en la zona más vulnerable. Esas cualidades deben cumplir con las recomendaciones del núcleo fundamental: 5. Política de seguridad. 9. Seguridad física y ambiental. 10. Gestión de comunicaciones y operaciones. 11. Control de acceso. Servidor con las cualidades requeridas en cláusulas del núcleo fundamental propuesto. Plataforma de Software 35 3. Plataforma de Software Para proteger una red mediante software se requiere instalar y configurar programas capaces de manejar diferentes conceptos de protección. El software de protección debe estar soportado por algún sistema operativo capaz de ejecutar los programas elegidos al respecto. A continuación se describen los componentes de software esenciales para construir una red segura, aplicando las recomendaciones contenidas en las cláusulas 5, 9, 10 y 11 del núcleo fundamental. 3.1 Cortafuego Un cortafuegos [14] es un elemento de software o hardware utilizado en una red para prevenir comunicaciones indeseadas, labor que realiza según las políticas de red que se hayan definido en función de las vulnerabilidades de la organización y sus potenciales atacantes. La idea principal del cortafuego es crear un punto de control en la entrada y salida de tráfico de una red (Figura 3.1). Un cortafuego correctamente configurado es un sistema adecuado para proteger una instalación informática, pero en ningún caso debe considerarse como suficiente, ya que la seguridad informática abarca más ámbitos y más niveles de trabajo y protección. Su funcionamiento está definido por la recomendación RFC 2979 [9], la cual define las características de comportamiento y requerimientos de interoperabilidad. Figura 3.1: Cortafuego (controla tráfico entrante y saliente) Plataforma de Software 36 Ventajas de un cortafuego:  Protección contra intrusiones: El acceso a los servidores en la red sólo se hace desde máquinas autorizadas.  Protección de información privada: Permite definir distintos niveles de acceso a la información de manera que en una organización cada grupo de usuarios definido tendrá acceso sólo a los servicios y la información que le son estrictamente necesarios. 3.1.1 Cortafuegos Posibles Para ambiente Linux [15] existen implementaciones de cortafuegos por software llamadas ipchains, iptables, nftables. También hay otras implementaciones que funcionan con ipchains o iptables como plataforma, pero se hacen llamar distinto pues ofrecen entornos de configuración más amigables y algunas otras ventajas; algunos de estos productos son: Shorewall, IPCop, etc. (funcionan con iptables). Para ambiente Windows también existen multitud de propuestas como: ZoneAlarm3, Kaspersky4, Norton5, el cortafuego nativo de Windows, etc. 3.1.2 Comparaciones En ambiente Linux: Existen desde hace muchos años las implementaciones ipchains e iptables, sin embargo actualmente el grupo de Netfilter ha desarrollado nftables6. Nftables es más adaptable, tiene sintaxis más simple y permite ejecutar más de una acción por línea. Está formado por tres componentes: Implementación en el kernel, en la biblioteca de comunicación (libnl) y el frontend. En resumen para ambiente Linux:  ipchains (un tanto obsoleto).  iptables (el más utilizado actualmente).  nftables (todavía inmaduro pero con mucho futuro). 3 http://www.zonealarm.com/security/es/home.htm?lid=es 4 www.kaspersky.com 5 http://www.symantec-norton.com/Norton_Internet_Security_2010_p68.aspx 6 http://www.softwarelibre.net/nftables_el_nuevo_firewall_de_linux Plataforma de Software 37 En ambiente Windows: La Tabla 3.1 muestra diversos productos y calificaciones obtenidas en los resultados del test presentado en [1]: Eficiencia Nota Nivel Protección Online Armor Personal Firewall 3.5.0.14 99% 10+ Excellent PC Tools Firewall Plus 6.0.0.69FREE 99% 10+ Excellent Comodo Internet Security 3.11.108364.552FREE 97% 10+ Excellent Kaspersky Internet Security 2010 9.0.0.459 96% 10+ Excellent Outpost Firewall Free 2009 6.5.2724.381.0687.328FREE 93% 10+ Excellent Outpost Security Suite Pro 2009 6.5.4.2525.381.0687 92% 9 Excellent Online Armor Personal Firewall 3.5.0.14 FreeFREE 92% 10+ Excellent Jetico Personal Firewall 2.0.2.8.2327 89% 10+ Very good Malware Defender 2.2.2 89% 10+ Very good Privatefirewall 6.0.20.14 88% 10+ Very good Netchina S3 2008 3.5.5.1FREE 85% 9 Very good ZoneAlarm Pro 8.0.059.000 72% 9 Good Lavasoft Personal Firewall 3.0.2293.8822 67% 8 Good Norton Internet Security 2009 16.2.0.7 66% 8 Good Webroot Desktop Firewall 5.8.0.25FREE 54% 7 Poor Trend Micro Internet Security Pro 17.1.1250 29% 5 None BitDefender Internet Security 2009 12.0.12.0 12% 2 None ZoneAlarm Free Firewall 8.0.298.000FREE 11% 2 None Avira Premium Security Suite 9.0.0.367 10% 2 None F-Secure Internet Security 2010 10.00.246 8% 2 None CA Internet Security Suite Plus 2009 5.0.0.581 5% 1 None Kingsoft Internet Security 9 Plus 2009.07.17.10 5% 1 None Rising Internet Security 2009 21.41.21 5% 1 None Sunbelt Personal Firewall 4.6.1861.0 5% 1 None ThreatFire Free 4.1.0.25FREE 5% 1 None eConceal Pro for Windows 2.0.019.1 4% 1 None ESET Smart Security 4.0.417.0 4% 1 None FortiClient End Point Security 4.0.2.57 4% 1 None Panda Internet Security 2010 15.00.00 4% 1 None TrustPort PC Security 2.0.0.1285 4% 1 None Tabla 3.1: Comparación cortafuego en Windows Plataforma de Software 38 Adicional a las comparaciones y evaluaciones, cabe recalcar que en entorno Linux existen 2 maneras complementarias para implementar seguridad, las que están incluidas en el kernel generalmente llamada SE (Security Enhanced), y las que actúan desde fuera del kernel (ipchains, iptables, nftables). Ambas pueden trabajar en conjunto o se pueden excluir una con otra. 3.2 Proxy Luotonen [16] define un servidor proxy como un componente intermedio situado entre el sistema del usuario e Internet, tal como se aprecia en la Figura 3.2. Suele utilizarse para registrar el uso de Internet y también para bloquear el acceso a un sitio Web. El servidor de seguridad del proxy es capaz de bloquear algunas páginas Web por diversas razones. Gracias a estos potenciales bloqueos, se puede prohibir al usuario descargar el entorno de ejecución de Java (JRE) o ejecutar algunos applets y/o programas. Figura 3.2: Proxy Algunas características de un servidor proxy:  Funciona como servidor de seguridad y como filtro de contenidos.  Generalmente es un mecanismo de seguridad implementado por el ISP o los administradores de intranets.  Uno de sus usos en seguridad, es para desactivar el acceso o filtrar las solicitudes de contenido, para ciertas sedes Web consideradas ofensivas o dañinas para la red y/o los usuarios.  Guarda en memoria caché las páginas Web a las que acceden los usuarios de la red durante un cierto tiempo. Cuando un usuario solicita la misma página Web, el servidor proxy utiliza la información guardada en la memoria Plataforma de Software 39 caché en lugar de recuperarla del proveedor de contenidos. De esta forma, se accede con más rapidez a las páginas Web.  Mejora el rendimiento de la red. 3.2.1 Implementaciones de Proxy En ambiente Linux:  Squid7: Es el preferido por los profesionales en redes y software libre, gana esta preferencia merced a que de manera equilibrada tiene todas las características necesarias. Incluso en algunos ítems está muy por encima del promedio, por ejemplo en el caché de navegación y en el balanceo de carga. Además es de uso libre y gratuito, y está disponible para diversas plataformas que incluyen a Windows y Linux.  Varnish8: Es más eficiente que Squid en la implementación de caché reverso.  Lighttp9 y Haproxy10: Son más eficientes que Squid en balanceo de carga. En la actualidad no hay versión para Debian. En ambiente Windows:  Microsoft Proxy Server11: Consta de dos servicios (Web Proxy y WinSock Proxy). El servicio Web Proxy soporta HTTP, lectura FTP y gopher para equipos en intranet ejecutando TCP/IP. El servicio WinSock Proxy soporta protocolos Windows Sockets como Telnet y RealAudio para computadores en intranet ejecutando TCP/IP o Internetwork Packet Exchange/Sequenced Packet Exchange (IPX/SPX).  Private Proxy12: Es un software que proporciona acceso a varios proveedores de servidores proxy seguros. Después de suscribirse a Private Proxy el usuario tiene un nombre, usuario, contraseña y un enlace de descarga que le permite acceder a los servidores proxy anónimos. Tres de estos servidores se encuentran en los Estados Unidos y uno se encuentra en los Países Bajos. Hay un mínimo de 10 direcciones IP diferentes para cada uno de los servidores, lo que da un total de 40 direcciones IP diferentes. Estas direcciones IP se rotan cada 30 minutos para cada servidor o pueden desconectarse de un servidor y conectarse a otro, para cambiar la dirección IP.  1st Up Net Proxy Server13: Incluye soporte para Web, SOCKS4/5, SMTP, POP3, FTP y NNTP. También proporciona el control y bloqueo de 7 http://observatorio.cnice.mec.es/modules.php?op=modload&name=News&file=article&sid=589 8 http://varnish-cache.org 9 http://pt.todoprogramas.com/programalinux/lighttpd 10 http://pt.todoprogramas.com/programalinux/haproxy 11 http://support.microsoft.com/kb/550559/es 12 http://www.privateproxysoftware.com 13 http://www.upland-research.com Plataforma de Software 40 funciones. Puede especificar sitios permitidos, sitios bloqueados, no reconocidos y limitar el tiempo o el número de conexiones a Internet.  WinGate14: Proporciona acceso seguro a Internet, gestionando para toda la red a través de una o múltiples conexiones a Internet, también permite acceso avanzado y flexible de control y políticas de uso, al mismo tiempo facilita el uso del monitor en tiempo real, y permite mantener los servicios por usuario y registros de auditoría. Detiene virus, spam y contenidos inapropiados al través de su red. Mejora el rendimiento de la red y la capacidad de respuesta con Web y el almacenamiento en caché de DNS.  Jana Server15: Proporciona acceso a través de un sólo modem, o conexión ADSL para un grupo de usuarios de red local. Se instala en la máquina en la que esté conectado el módem, y actúa como servidor. Es también un servidor de correo, administrando el correo entrante y saliente de Internet para usuarios individuales, así como también el tráfico de mensajes entre los usuarios de la red local. Cada usuario puede tener su propia cuenta de correo con su propio proveedor. Jana Server incluye también un servidor HTTP, que se puede utilizar para pruebas de sitios Web en modo local, o para construir una intranet y además soporta los scripts Perl/CGI y PHP3/4. Para complementar esta herramienta, se encuentra un navegador integrado que sustituye al tradicional interfaz gráfico de usuario, un servidor DNS, Telnet y un lector de noticias.  SpoonProxy16: Fue diseñado para consumir pocos recursos y es fácil de configurar. Este proxy soporta una amplia variedad de clientes que abarcan todas las funciones de Internet, entre ellos navegadores Web, clientes de email, mensajería instantánea, juegos en red y mucho más. El programa incluye un asistente para configurar todos los servicios y permite establecer nombres de usuario y contraseñas para cada máquina conectada. Soporta UDP y su interfaz permite controlar las conexiones realizadas y el tráfico en bytes. Además se puede administrar remotamente, incluso desde un PC fuera de la red. 3.2.2 Proxy Inverso El uso habitual del Web proxy, es cuando el cliente requiere una página Web de Internet desde la red local. Sin embargo existe el concepto de proxy inverso o reverso, el cual permite que desde el exterior (Internet) puedan acceder páginas Web de la red interna (intranet). Una de las soluciones para ello, la provee el servidor Web Apache. 3.3 VPN Una Red Privada Virtual (VPN), tal como Virtual Private Networks [17] describe, conecta los componentes de una red con los de otra red, logrando este objetivo 14 http://www.wingate.com 15 http://janaserver.blogspot.com 16 http://www.pi-soft.com/spoonproxy/index.shtml Plataforma de Software 41 mediante la conexión de los usuarios de distintas redes a través de un túnel virtual que se construye en las redes que atraviesa la interconexión (Internet o cualquier red pública). En la Figura 3.3 se observa como la VPN permite a los usuarios trabajar desde sus hogares u otro lugar, conectándolos de una forma segura con el servidor corporativo y usando la infraestructura provista por la red pública (por ejemplo Internet). Figura 3.3: VPN Desde el punto de vista del usuario, la VPN es una conexión entre el usuario y el servidor corporativo. La naturaleza de la interconexión que está en el medio de los dos es transparente para el usuario, ya que los datos le aparecen como si fueran enviados a través de su red LAN, como si estuviera en su intranet empresarial. Básicamente existen dos arquitecturas de conexión VPN:  VPN de acceso remoto: Es quizás el modelo más usado actualmente y consiste en usuarios o proveedores que se conectan con la empresa desde sitios remotos (oficinas comerciales, domicilios, hoteles, aviones, etcétera) utilizando Internet como vínculo de acceso. Una vez autenticados, los usuarios tienen un nivel de acceso muy similar al que tienen en la red local de la empresa (ver Figura 3.4 tomada de17). 17 http://www.laserwifi.com/foros/showthread.php?t=20 Plataforma de Software 42  VPN punto a punto: Se utiliza para conectar oficinas remotas con la sede central de una organización. En esta modalidad, los equipos interconectados generalmente poseen vínculo permanente a Internet. A través del enlace se conectan vía VPN con el equipo central o servidor; mientras los usuarios locales de cada intranet interconectada, logran comunicarse con la central al través de sus servidores locales (ver Figura 3.5 tomada de18). Figura 3.4: VPN acceso remoto Figura 3.5: VPN punto a punto 3.3.1 Software VPN  Wippien19: Todas las transferencias de archivos y las conexiones son seguras y cifradas. Wippien también apoya el IRC, y hasta tiene su propio chat privado donde usuarios pueden unirse a otros usuarios Wippien. Requiere en primer lugar una Jabber cuenta, la cual se crea en la página de configuración.  LogMeIn Hamachi20: Es una VPN tradicional en el sentido que requiere una conexión a una red existente Hamachi VPN (o la creación de otras nuevas). 18 http://www.laserwifi.com/foros/showthread.php?t=20 19 http://wippien.com 20 http://hamachi.updatestar.com/es Plataforma de Software 43 Viene con una opción libre durante la instalación, pero el usuario puede elegir entre el Básico (gratis) o el Try Hamachi Premium.  SSL Explorer (Community Edition)21: Basado en el navegador SSL VPN solution. Proporciona mando a distancia de la solución para control de acceso, también proporciona un medio de acceder de forma segura las aplicaciones de la intranet y de los recursos, utilizando un navegador Web estándar. La instalación es bastante engorrosa, aunque es facilitada por la guía que acompaña al programa.  BirdsSoft VPN-X (cliente)22: Una aplicación Java/cross-platform P2P/SSL/TLS solución de VPN. Cada usuario recibe una dirección IP única virtual, y puede conectarse con otros usuarios (clientes) a través del software, todos los datos de la red están cifrados. Es ideal para conectar dos (o más) computadores a través de largas distancias. Se puede navegar por los archivos y carpetas de los demás, crear juegos en red, tener chats, etc.  OpenVPN23: Es una herramienta de código abierto, y se presenta como una solución completa de VPN SSL que puede acomodar una amplia gama de configuraciones, incluyendo acceso remoto, VPN entre sitios y seguridad WiFi. Es una implementación de VPN SSL la cual usa extensiones OSI 2 u OSI 3 para asegurar redes, basada en los protocolos SSL/TLS, soporta diferentes medios de autenticación como certificados, smart cards, y/o usuarios/contraseñas, permite políticas de control de acceso para usuarios o grupos usando reglas de cortafuego aplicadas a las interfaces virtuales de la VPN. Esta alternativa es más segura y versátil, razón por la que requiere una instalación y configuración segura del programa cliente en las máquinas clientes, sean estas del sistema operativo Windows u otros.  OpenSwan24: Software derivado del proyecto FreeSWAN, soporta ampliamente IPsec, incluyendo OE, IPsec UDP Encapsulación, IKE v2, XAUTH, NAT-T en modo túnel. Para instalar este software se requiere modificar las fuentes del kernel y recompilarlo, de igual manera necesita instalar herramientas complementarias para que el usuario configure fácilmente el aplicativo. 21 http://sourceforge.net/projects/sslexplorer 22 http://birdssoft.com 23 http://openvpn.net 24 http://openswan.org Plataforma de Software 44 3.3.2 Implementación Las soluciones de VPN pueden ser implementadas a diferentes niveles del modelo OSI tal como lo muestra la Figura 3.6. 7. Aplicación 6. Presentación 5. Sesión 4. Transporte SSL 3. Red IPsec 2. Enlace PPTP – L2TP 1. Físico Figura 3.6: Modelo OSI – Implementación VPN Implementaciones de capa 2 (enlace) El encapsulamiento a este nivel ofrece ciertas ventajas ya que permite transferencias sobre protocolos no-IP, como por ejemplo IPX de Novell. Teóricamente, las tecnologías implementadas en la capa 2 pueden tunelizar cualquier tipo de paquetes y, en la mayoría de los casos, lo que se hace es establecer un dispositivo virtual PPP con el cual se establece la conexión con el otro lado del túnel. Algunos ejemplos de estas tecnologías:  PPTP (Point to Point Tunneling Protocol): Desarrollado por Microsoft, es una extensión de PPP. Su principal desventaja es que sólo puede establecer un túnel por vez entre pares. Poca seguridad.  L2F (Layer 2 Forwarding): Principalmente desarrollado por la empresa Cisco, ofrece mejores posibilidades que PPTP sobre todo en el uso de conexiones simultáneas.  L2TP (Layer 2 Tunneling Protocol): Usado por Cisco y otros fabricantes, se ha convertido en estándar de la industria y combina las ventajas de PPTP y L2F. Dado que las tecnologías PPTP, L2F y L2TP no ofrecen por sí mismas mecanismos de seguridad, para su uso deberá ser combinada con otros mecanismos generalmente implementados en la capa 3 del modelo OSI: L2Sec (Layer 2 Security Protocol) ha sido desarrollado para proveer una solución con seguridad, utiliza para ellos SSL/TLS aunque impone una sobrecarga bastante grande en la comunicación para lograrlo. Plataforma de Software 45 Implementaciones de capa 3 – Red IPsec es la tecnología más aceptada en este punto y fue desarrollada como un estándar de seguridad de Internet en capa 3. IPsec se puede utilizar para encapsular cualquier tráfico de capa 3 pero no el tráfico de capas inferiores, por lo que no se podrá utilizar para protocolos no-IP como IPX o mensajes de broadcast. Su principal ventaja es que puede ser usado prácticamente en cualquier plataforma, existiendo una gran variedad de soluciones tanto de software como de hardware. Existen dos métodos principales usados por IPsec:  Modo Túnel: Todos los paquetes IP son encapsulados en un nuevo paquete y enviados a través del túnel siendo desempaquetados en el otro extremo y posteriormente dirigidos a su destinatario final. De este modo, se protegen las direcciones IP del emisor y del receptor así como el resto de los metadatos de los paquetes.  Modo Transporte: Sólo la carga útil (payload) de la sección de datos es encriptada y encapsulada. La sobrecarga es mucho menor que en el caso anterior, pero se exponen los metadatos a posibles atacantes que podrían ver quien se está comunicando con quien. Las diversas aplicaciones en el mundo del software escogen algunas de las tecnologías descritas en la sub sección 3.3.2 para desarrollar la solución que ofrecen. Por ello se recomienda conocer que tecnología usa el software al momento de elegir. 3.4 Servidor Web Un servidor Web es un programa que implementa el protocolo HTTP (HyperText Transfer Protocol). Este protocolo pertenece a la capa de aplicación del modelo OSI y está diseñado para transferir lo que se llama hipertextos, páginas Web o páginas HTML (HyperText Markup Language), es decir textos complejos con enlaces, figuras, formularios, botones y objetos incrustados como animaciones o reproductores de música y video. El hecho de que HTTP y HTML estén íntimamente ligados no debe dar lugar a confundir ambos términos. HTML es un lenguaje, y HTTP es un protocolo. El servidor Web se mantiene a la espera de peticiones HTTP por parte de un cliente HTTP (navegador). El cliente realiza una petición al servidor y éste le responde con el contenido que el cliente solicita. El servidor responde al cliente enviando el código HTML de la página, una vez recibido el código, el cliente lo interpreta y lo despliega en pantalla. Sobre el servicio Web se puede disponer de aplicaciones o porciones de código que se ejecutan cuando se realizan ciertas peticiones y/o respuestas HTTP. Hay que distinguir entre: Plataforma de Software 46  Aplicaciones en el lado del cliente (Java o Java Script, ActiveX, etc.): El cliente Web es el encargado de ejecutarlas en la máquina del usuario, donde el servidor proporciona el código de las aplicaciones al cliente y éste, mediante el navegador, las ejecuta. Es necesario, por tanto, que el cliente disponga de un navegador con capacidad para ejecutar aplicaciones (también llamadas scripts).  Aplicaciones en el lado del servidor (servlets, PHP, CGI, Perl, etc.): El servidor Web ejecuta la aplicación; ésta, una vez ejecutada, genera cierto código HTML; el servidor toma este código recién creado y lo envía al cliente por mediante el protocolo HTTP. Figura 3.7: Esquema simplificado del servicio Web En la Figura 3.7 tomada de25 se observa el procedimiento que se lleva a cabo en el servidor Web. El navegador realiza una solicitud HTTP, luego el servidor procesa la solicitud, para después enviar una respuesta HTTP. 3.4.1 Implementaciones de Servidor Web Existen muchas aplicaciones en el mercado que proveen este servicio, las siguientes son las más usadas:  Apache26: Es potente, flexible y multiplataforma. Su diseño modular permite a los administradores de sitios Web elegir que características van a ser incluidas. Soporta una variedad de tecnologías como PHP, CGI, etc. Además en combinación con Tomcat, soporta Java y AJAX. Apache es el servidor más usado en Internet [3], se usa en plataformas grandes, medianas y pequeñas.  Cherokee27: Es ligero, sencillo y cómodo para el administrador. Está bajo la licencia GPL y es multiplataforma. Entre las tecnologías que soporta están las siguientes: PHP, FastCGI, SCGI, etc. 25 http://daw-fiec.pbworks.com/Protocolo-HTTP 26 http://apache.org 27 http://www.cherokee-project.com Plataforma de Software 47  Hiawatha28: Es el más avanzado, seguro y rápido. También es fácil de configurar y, entre otras características cuenta con un rootjail (capacidad de enjaular la ejecución de aplicaciones como root sin perjudicar la seguridad), asimismo la capacidad de ejecutar CGI bajo cualquier UID/GID, la prevención de la inyección de SQL y de cross-site scripting (ejecución de scripts o códigos maliciosos), la prohibición a los clientes que tratan tales hazañas.  Lighttpd29: Es rápido, seguro, flexible, y fiel a los estándares. Consume menos CPU y memoria RAM que otros [3]. Muy útil cuando el volumen de consultas o accesos al portal Web aumenta notablemente y se requiere armar otro portal de inmediato sin necesidad de cambiar a un hardware más potente (CPU, memoria RAM, etc.).  IIS (Internet Information Server)30: Es la solución para servidor Web de Microsoft. IIS 7.0 ofrece nuevas formas de solicitud de procesamiento, su arquitectura incluye el proceso de activación de Windows Service (WS), que permite a los sitios que utilizan otros protocolos HTTP y HTTPS conectarse sin inconvenientes y de manera más segura, un motor de servidor Web que se puede personalizar añadiendo o eliminando módulos (parecido al Apache) y, un nuevo enfoque a las peticiones de transformación, la integración de la solicitud de procesamiento de las tuberías de IIS y ASP.NET.  Abyss Web Server X131: Es un servidor Web para Windows, MacOS X, Linux y FreeBSD, que se distribuye gratuitamente. Es una aplicación pequeña que soporta conexiones seguras SSL, que permite reanudar descargas, almacenamiento en caché de la negociación, CGI/1.1 scripts, FastCGI, extensiones ISAPI, Server Side Includes (SSI), ASP.NET (en Windows), páginas de error personalizadas. También permite la protección de contraseñas, la reescritura de URL, el control de la dirección IP, los alias, los tipos MIME personalizados, los archivos de índice, los listados de directorios personalizados, la lucha contra el parasitismo, y el límite de ancho de banda. Además, posee control automático anti-piratería y una intuitiva interfaz Web multilingüe de gestión remota.  Google Web Server (GWS)32: Es el nombre para el software de servidor Web que Google utiliza para su infraestructura de red. No hay mucha información de esta herramienta, se sabe que está implementada en Linux, muy posiblemente basada en Apache, y que mezcla sistema operativo con Web server.  Nginx33: Es un servidor HTTP y proxy inverso de alto rendimiento, además es servidor proxy para IMAP/POP3/SMTP. Nginx fue desarrollado por Igor Sysoev para rambler.ru, el segundo sitio Web más visitado de Rusia. 28 http://www.hiawatha-webserver.org 29 http://www.lighttpd.net 30 http://www.microsoft.com/web/platform/server.aspx/es-es 31 http://www.aprelium.com/abyssws 32 http://google.dirson.com/post/0364 33 http://nginx.org Plataforma de Software 48 3.4.2 Servidores Web más Utilizados Developer December 2009 Percent January 2010 Percent Change Apache 664,576 66.89% 665,593 66.98% 0.09 Microsoft IIS 175,278 17.64% 172,983 17.41% -0.23 Nginx 40,084 4.03% 42,105 4.24% 0.20 Google 20,215 2.03% 20,575 2.07% 0.04 Tabla 3.2: Uso mundial servidores Web En la Tabla 3.2 (tomada de [3]) se observa claramente la preponderancia del servidor Apache, mientras que en la Figura 3.8 (tomada de [2]) se muestra una prueba de stress de varios servidores Web. El servidor lighttpd está recién conquistando el mundo Internet, es nuevo y bueno, pero por ser poco usado no entró en la muestra comparativa de los más usados (ver Tabla 3.2). Figura 3.8: Rendimiento servidores Web 3.4.3 Modularidad de Apache Web Server La estructuración y construcción del Apache permiten incorporarle módulos tan diversos como los siguientes:  Apache ASP34: Proporciona un puerto para emular ASP (Active Server Pages) en el servidor Web Apache utilizando como intérprete Perl, y permite el desarrollo de aplicaciones Web dinámicas con gestión de sesiones y código Perl embebido. Adicionalmente existen muchas extensiones de gran alcance, incluyendo taglibs XML, XSLT de representación, y los nuevos eventos que originalmente no son parte de la API de ASP.  Tomcat35 (también llamado Jakarta Tomcat o Apache Tomcat): Funciona como un contenedor de servlets desarrollado bajo el proyecto Jakarta en la Apache Software Foundation. Tomcat implementa las especificaciones de los servlets y de JavaServer Pages (JSP) de Sun Microsystems. 34 http://www.apache-asp.org 35 http://tomcat.apache.org Plataforma de Software 49 3.5 DHCP (Dynamic Host Configuration Protocol) El protocolo de red DHCP [4] permite a los nodos de una red IP obtener sus parámetros de configuración automáticamente. Se trata de un protocolo de tipo cliente/servidor en el que generalmente un servidor posee una lista de direcciones IP dinámicas y las va asignando a los clientes a medida que se van liberando, conociendo en todo momento quien ha estado en posesión de esa IP, el tiempo que la ha tenido y a quien se la asigna después. Este protocolo se publicó en octubre de 1993, estando documentado actualmente en el RFC 2131 [4]. Los últimos esfuerzos describiendo DHCPv6, DHCP en una red IPv6, fueron publicados como RFC 3315 [5]. DHCP permite al administrador supervisar y distribuir de forma centralizada las direcciones IP necesarias y, automáticamente, asignar y enviar una nueva IP si el computador es conectado en un lugar diferente de la red. Si no se dispone del protocolo DHCP, cada dirección IP debe configurarse manualmente en cada computador y, si el computador se mueve a otro lugar de la red, se debe configurar manualmente otra dirección IP. El protocolo DHCP incluye tres métodos de asignación de direcciones IP:  Asignación manual o estática: Asigna una dirección IP a una máquina determinada. Se suele utilizar cuando se quiere controlar la asignación de dirección IP a cada cliente, y evitar que se conecten clientes no identificados.  Asignación automática: Asigna una dirección IP de forma permanente a una máquina cliente y la mantiene hasta que el cliente la libera. Se suele utilizar cuando el número de clientes no varía demasiado.  Asignación dinámica: Es el único método que permite la reutilización dinámica de las direcciones IP. El administrador de la red determina un rango de direcciones IP y cada computador conectado a la red está configurado para solicitar su dirección IP al servidor cuando la tarjeta de interfaz de red se inicializa. Esto facilita la instalación de nuevas máquinas clientes a la red. Plataforma de Software 50 3.5.1 Implementaciones de DHCP  isc-dhcp36: Es la implementación de DHCP proporcionada por Internet Software Consortium (ISC), usada por varias distribuciones, especialmente FreeBSD.  dhcp37: Es una implementación de DHCP, ampliamente usada en el mundo Linux.  dhcp Windows: Viene incluido en las versiones de Windows server, sólo hay que instalarlo y configurarlo para que además de cumplir sus funciones inherentes, interactúe con el servidor DNS y/o el Active Directory. Existen multitud de implementaciones particulares de DHCP server para Windows, no amerita hablar de ellas por su simplicidad y poca incidencia. Generalmente las implementaciones de servidores DNS o Proxy o cortafuego para Windows, vienen con una implementación de DHCP para Windows. 3.6 SSH (Secure Shell) Internet hace posible realizar una gran variedad de operaciones remotas, en especial, administrar un servidor y transferir archivos. El protocolo Telnet y los comandos (rsh, rlogin y rexec) que permiten a los usuarios realizar estas tareas, tienen la desventaja de transmitir el intercambio de información en texto plano en la red (por ejemplo el nombre de acceso y la contraseña). En este caso un hacker (persona especializada en violar la seguridad) podría utilizar un sniffer para capturar paquetes que circulan en la red y así, obtener el nombre de acceso y la contraseña para acceder al equipo remoto. Considerando la dificultad para controlar todas las infraestructuras físicas ubicadas entre el usuario y el equipo remoto (al ser Internet una red abierta por definición), la seguridad debe definirse a través de los datos, es decir a un nivel lógico. El protocolo SSH [18] se desarrolló en 1995 por el finlandés T. Ylönen [6]. El protocolo SSH provee la solución a estos problemas, ya que posibilita a sus usuarios (o servicios TCP/IP) acceder a un equipo a través de una comunicación cifrada, llamada túnel. Este protocolo hace posible que el cliente (usuario o incluso equipo) abra sesión interactiva en una máquina remota (servidor) para enviar comandos o archivos a través de un canal seguro. Los datos que circulan entre el cliente y el servidor están cifrados y esto garantiza su confidencialidad (nadie más que el servidor y el cliente pueden leer la información que se envía a través de la red). Como resultado, no es posible monitorear la red con un sniffer. 36 https://www.isc.org/software/dhcp 37 http://www.dhcp.org Plataforma de Software 51 El cliente y el servidor se autentifican uno a otro para asegurarse que las dos máquinas que se comunican, son aquellas que las partes creen que son. Para cualquier hacker ya no es tan fácil adoptar la identidad del cliente o de su servidor (falsificación). Es conveniente no usar la versión 1 del protocolo (SSH1), pues esta versión tiene un punto débil que permite a los hackers introducir datos en los flujos cifrados. Por este motivo se recomienda usar la versión 2 del protocolo (SSH2) [7]. 3.6.1 Implementaciones de SSH  OpenSSH38: Es un conjunto de aplicaciones que tiene como objetivo permitir comunicaciones cifradas a través de una red. Contiene SSH1, SSH2, SCP, SFTP, etc.  OSSH39: Aplicación que únicamente implementa SSH1.  LSH/psst40: Es una implementación libre del protocolo SSH2, estandarizado por el grupo de trabajo IETF SECSH.  Dropbear41: Es un pequeño servidor SSH2 y cliente, el cual funciona bajo varias plataformas basadas en POSIX. 3.7 Sistema Operativo El sistema operativo a utilizar debe ser capaz de hospedar adecuadamente el software de protección que se le instalará para proteger la red. Al mismo tiempo debe ofrecer buen rendimiento y debe ser en forma natural poco vulnerable a ataques y/o peligros de la red. 3.7.1 Requerimientos En hardware hay equipos especializados que proveedores de hardware en red ofrecen, tal como Cisco Systems, 3COM, CheckPoint, etc. El presente trabajo no se refiere a esos hardwares especializados, su ámbito es aquello que se puede implementar por software en cualquier equipo igual o superior al siguiente:  1 GB RAM.  40 GB disco duro o más acorde con el hospedaje de páginas Web.  Intel Pentium 4.  2 tarjetas de red 100/1000 Mbps. En software: Cualquier sistema operativo que soporte el manejo de 2 tarjetas de red y, pueda alojar satisfactoriamente el software libre que se le instale para cumplir los objetivos expuestos. 38 http://www.openssh.org/es 39 ftp://ftp.pdc.kth.se/pub/krypto/ossh 40 http://www.lysator.liu.se/~nisse/lsh 41 http://matt.ucc.asn.au/dropbear/dropbear.html Plataforma de Software 52 3.7.2 Distribuciones Cualquier distribución de Windows, Linux, Unix. Cualquiera de ellas que haya sido liberada después del año 2000. 3.7.3 Solidez La más sólida y menos vulnerable, es la implementación hecha sobre cualquier sistema operativo Unix, le siguen multitud de distribuciones Linux, para colocarse en último lugar las implementaciones en Windows y MacOS. 3.8 Herramientas para Detectar Vulnerabilidades En forma similar a la medicina, donde un médico necesita instrumentos para medir el mal que aqueja al paciente, en temas de seguridad existen instrumentos de software capaces de medir o descubrir vulnerabilidades al sistema examinado. A continuación se mencionan algunas de estas herramientas clasificadas en 2 grandes áreas. La primera de uso específico (para detectar vulnerabilidades muy puntuales) y la segunda de uso no tan específico (para detectar un grupo de vulnerabilidades comunes). Las de uso específico se pueden sintetizar con la palabra Fuzz, palabra que representa un programa desarrollado en 1990 por B. Miller en la Universidad de Wisconsin en Madison, quién pasa por ser el primer fuzzer, pero hoy en día se cuentan por decenas los programas de este tipo, utilizados generalmente en pruebas de penetración. A continuación se especifican algunos fuzz:  (L)ibrary (E)xploit API - lxapi42: Una colección de scripts en Python para fuzzing.  SPIKE43: Una colección de muchos fuzzers de inmunidad. Usado para encontrar uno de los problemas de negación de servicio, conocido como RDP kernel DoS against a firewalled XP SP2, y muchos otros.  Immunity CANVAS44: Proporciona una forma para obtener una imagen concreta de la situación de seguridad en red, gracias a múltiples scripts.  PROTOS45: Una familia de fuzzers del proyecto PROTOS para fuzzing, es capaz de buscar y encontrar vulnerabilidades en varios protocolos como: WAP, HTTP-reply, LDAP, SNMP, SIP, IPsec, etc.  Fuzz46: El fuzz original desarrollado por Dr. B. Miller que fue el Alma Matter, de la University of Wisconsin-Madison en 1990. 42 http://lxapi.sourceforge.net y http://www.mail-archive.com/ pen-test@securityfocus.com/msg01650.html 43 http://www.immunitysec.com/resources-freesoftware.shtml http://searchsecurity.techtarget.com/generic/0,295582,sid14_gci1266584,00.html 44 http://www.immunitysec.com 45 https://www.ee.oulu.fi/research/ouspg/Protos 46 http://pages.cs.wisc.edu/~bart/fuzz Plataforma de Software 53 Existen también algunas herramientas de uso no tan específico como las siguientes:  Oracle Auditing Tools47: Suite de herramientas para auditar la seguridad de servidores de bases de datos Oracle.  NStealth48: Uno de los mejores escáneres de vulnerabilidades en servidores Web para Windows.  Attack ToolKit49: Herramienta pequeña y manejable para Windows que realiza comprobaciones rápidas.  Cisco Secure Scanner50: Escáner de vulnerabilidades para Cisco. Útil para realizar auditorías.  Sara51: Uno de los analizadores automáticos de vulnerabilidades más conocidos.  Nessus52: El analizador de vulnerabilidades más popular al 2009 (detector de vulnerabilidades o generador de ataques).  Snort53: Es una herramienta de código fuente abierto, para detección (IDS) y prevención (IPS) de intrusiones en todo tipo de redes. La combinación dada por la experiencia de la firma desarrolladora (Sourcefire), el protocolo y la anomalía de inspección basada en Snort, hace que el mundo tecnológico de IDS/IPS tenga preferencia en utilizarlo.  Mitre54: Es también una herramienta, pero en este caso es herramienta teórica, posee y difunde una base de datos de información acerca de vulnerabilidades, riesgos y remedios, es de gran ayuda, especialmente para la cláusula 4 (riesgos). Es importante observar con mayor detenimiento a las aplicaciones Nessus y Snort, pues su posicionamiento en el análisis de riesgos lo amerita. Para empezar se hace necesario un poco de historia. Nessus y Snort tienen varias cosas en común. Ambos nacieron como proyectos open source en 1998, se distribuyeron bajo licencia GPL, y actualmente tienen una amplia difusión, siendo sin duda referencias obligadas en su terreno, el primero (Nessus) como escáner de vulnerabilidades y el segundo como IDS. En ambos casos también han existido proyectos empresariales derivados por parte de sus desarrolladores. Nessus nació de la mano de Renaud Deraison, quién creó en 2002 la empresa Tenable Security. Mientras que Martin Roesh, el creador de Snort, fundó la empresa Sourcefire en el 2001. Pero en el 2005 Nessus anunció que abandonaría la licencia GPL para su próxima versión (la 3 en ese 47 http://www.cqure.net/wp/test 48 http://www.hackerscenter.com/index.php?/Downloads/View-document-details/811-NStealth- HTTP-Security-Scanner-v5.8-Free.html 49 http://www.computec.ch/projekte/atk 50 http://sysdoc.doors.ch/CISCO/_sp_netso_ds.pdf 51 http://www-arc.com/sara y http://www-arc.com/sara/sara8.html 52 http://nessus.org/nessus 53 http://www.snort.org 54 http://mitre.org/news/releases/09/cve_10_21_2009.html Plataforma de Software 54 entonces, actualmente está en la 4), mientras que la empresa Sourcefire (los padres de Snort), ha sido comprada por Check Point pero aún mantiene su licencia GPL. Snort es un sniffer de paquetes y un detector de intrusos basado en red (capaz de monitorear todo un dominio de colisión). Es un software flexible que ofrece capacidades de almacenamiento de sus bitácoras tanto en archivos de texto como en bases de datos abiertas como MySQL. Implementa un motor de detección de ataques y barrido de puertos que permite registrar, alertar y responder ante cualquier anomalía previamente definida. Así mismo existen herramientas de terceros para mostrar informes en tiempo real (ACID55) o para convertirlo en un sistema detector y previsor de intrusos. Este IDS implementa un lenguaje de creación de reglas flexibles, potentes y sencillas. Durante su instalación ya provee cientos de filtros o reglas para backdoor, DDoS, finger, FTP, ataques Web, CGI, Nmap, etc. Puede funcionar como sniffer (se puede ver en consola y en tiempo real qué ocurre en la red), como registro de paquetes (permite guardar en un archivo los logs para su posterior análisis) o como IDS normal. Cuando un paquete coincide con algún patrón establecido en las reglas de configuración, se registra su actividad (loguea). Así se sabe cuándo, de dónde y cómo se produjo el ataque. Snort está disponible bajo licencia GPL, gratuito y funciona bajo plataformas Windows y Unix/Linux. Dispone de una gran cantidad de filtros o patrones ya predefinidos, así como actualizaciones constantes ante casos de ataques, barridos o vulnerabilidades que vayan siendo detectadas a través de los distintos boletines de seguridad. La característica más apreciada de Snort, además de su funcionalidad, es su sistema flexible de firmas de ataques. Snort tiene una base de datos de ataques que se actualiza constantemente a través de Internet. Los usuarios pueden crear firmas basadas en las características de los nuevos ataques de red y enviarlas a la lista de correo de firmas de Snort, para que así todos los usuarios de Snort se puedan beneficiar. Esta ética de comunidad y compartir ha convertido a Snort en uno de los IDS más populares, actualizados y robustos. Se puede señalar que Snort es una herramienta que a pleno funcionamiento consume muchos recursos. Por este motivo, y cuando se monitorea una máquina, es preferible utilizar la base de datos de reglas que no necesita registro por internet, aunque esta recomendación es dependiendo del caso a observar. Por otra parte está el escáner de vulnerabilidades Nessus, es capaz de efectuar la auditoría de configuración, el perfil de los activos, de los datos sensibles y el descubrimiento y análisis de vulnerabilidad. Programas Nessus pueden ser 55 Analysis Console for Intrusion Databases http://sourceforge.net/projects/secureideas Plataforma de Software 55 distribuidos en toda la organización, dentro de las DMZ y a través de redes separadas físicamente. Nessus soporta los siguientes tipos de auditorías de seguridad:  Exploración de puertos con certificados acreditados y no-acreditados.  Exploración basada en las vulnerabilidades típicas de red.  Auditorías a los parches de Windows y a la mayoría de los parches de Unix.  Auditorías a los certificados para Windows y a la mayoría de los certificados para Unix.  Pruebas de seguridad robustas a un conjunto de aplicaciones como iTunes, Java, Skype y Firefox.  Pruebas de vulnerabilidad para aplicaciones Web.  Auditoría de configuración a base de datos SQL  Enumeración (catálogo) de software en Unix y Windows.  Pruebas de actualización y errores en configuración de antivirus. Nessus también puede utilizarse para constantemente realizar auditorías automáticamente, enviando la información al centro de seguridad, para luego el experto analizar, evaluar y recomendar acciones. Figura 3.9: Esquema de acción del Nessus Nessus a diferencia de Snort no espera los eventos, los genera tal como lo esquematiza la Figura 3.9 (basada en nessus.org). Mediante el cliente se configura, se dan las directrices principales de ataque y, se observan los resultados. El servidor genera los ataques, pero sólo los lanza si encuentra el puerto vulnerable abierto, es decir, si se trata por ejemplo de un ataque para detectar la vulnerabilidad en un servidor de correo, primero intentará establecer una conexión con el puerto TCP 25, y si esta conexión no se establece, entonces Plataforma de Software 56 no lanza el resto del ataque, sólo lanzará la totalidad del ataque programado por su regla correspondiente (*.nasl) si se cumple esta primera condición. Esta táctica la emplea para mejorar su rendimiento, pues no tendría sentido seguir generando tráfico sobre un puerto inexistente y por lo tanto hacia un servicio que no se está prestando. Para su funcionamiento consta de 4 componentes:  Librerías del programa.  Librerías NASL (Nessus Attack Scripting Language).  Núcleo de la aplicación.  Plugins que simularán los ataques requeridos. Acorde con lo mencionado para Nessus y Snort, la utilización de cualquiera de ellos o de ambos en paralelo depende de lo que se requiera probar y monitorear. Una regla simple es que cuando se terminó de instalar una red y se desea probar su vulnerabilidad simulando ataques, entonces usar Nessus es conveniente, pero cuando la red ya ha sido probada y se requiere monitorear su comportamiento versus potenciales enemigos externos, entonces se recomienda usar Snort. Sin embargo, se insiste que las posibilidades de utilización son variadas y que no siempre la regla simple es aplicable. Caso de Estudio 57 4. Caso de Estudio Existen multitud de redes heterogéneas con necesidades de protección diversas. A menudo las recomendaciones teóricas no son aplicables al 100% en las redes donde se pretende aplicarlas, eso genera una distancia entre la teoría y la práctica. No obstante, no se trata de acortar la distancia, se trata de encontrar la intersección entre la teoría y la práctica, acorde con cada caso en particular. 4.1 Planteamiento del Problema Una pequeña empresa que posee una red de área local y acceso a Internet sin protección. Empresa que constantemente tiene problemas de virus, intrusiones y otros males que devienen a consecuencia de la falta de seguridad. 4.1.1 Situación Inicial Por razones de seguridad no se proporciona el nombre u otros datos de la organización elegida. Se eligió una pequeña empresa poseedora de una intranet con 10 estaciones de trabajo bajo sistema operativo Windows XP, con 2 servidores Windows 2003 de base de datos (una SQL Server, la otra Oracle), además con IIS (servidor Web) para la interacción de su intranet. Todas las máquinas tienen acceso a Internet a través de conexión ADSL. La empresa presta servicios a otras empresas, de modo que sus empleados no siempre están físicamente en la sede, pues generalmente están en oficinas de los clientes realizando diversas labores pertinentes a su empleador. Sin embargo requieren acceder a la intranet de su empleador desde Internet, tal como si estuviesen físicamente en la empresa. La empresa logra su cometido pero a un alto precio en estabilidad y confiabilidad, pues constantemente padecen ataques intrusivos al través de Internet. Ataques que a menudo ocasionan la paralización de alguno de sus servicios, ya sea de base de datos o de conectividad (interna o externa); con las consecuentes pérdidas en tiempo, confiabilidad y efectividad, hechos que retrasan y perjudican las tareas de los empleados. 4.1.2 Situación Esperada Los directivos y empleados están cansados de que la red en lugar de ayudarlos, les ocasione problemas en el trabajo, en oficinas de clientes que vistan e incluso en casa (pues a menudo llevan virus en el pendrive). Por ello necesitan transformar su red en un instrumento que proporcione apoyo a sus labores, necesitan resolver su situación inicial hasta transformarla en una red segura y confiable. Caso de Estudio 58 La Figura 4.1 presenta el esquema de red inicial en la empresa estudiada. La red está compuesta por clientes (Windows y Linux) accediendo a la intranet, bien sea localmente o externamente (Internet). También muestra que la intranet se conecta directamente (sin protección alguna) al Internet, y lo que es peor, los servidores están plenamente vulnerables al exterior (Internet). Figura 4.1: Planteamiento del Problema 4.2 Objetivos  Proporcionar protección a la red interna (intranet).  Abrir canal de comunicación seguro que permita a los empleados acceder a la red interna sin menoscabo de la seguridad establecida. 4.3 Alcance Es importante acotar que la empresa estudiada no maneja información crítica ni estratégica y, no tiene enemigos buscando atentar contra ella, es decir no es ni banca, ni gobierno, ni agencia de investigación o espionaje, ni cualquier otro tipo de institución que requiera niveles de seguridad estrictamente elevados. Dada esa cualidad empresarial, se diseñó un nivel de protección suficiente para las características de la misma, siguiendo algunas recomendaciones de Kopparapu [19] y las del núcleo fundamental. Este hecho significa que su protección es adecuada para la mayoría de los ataques no severos. Caso de Estudio 59 4.4 Arquitectura La arquitectura que utiliza el caso de estudio está esquematizada en la Figura 4.1, arquitectura que no contiene ningún elemento protector, a ese esquema se le incorpora un cortafuego, tal como se observa en la Figura 4.2. Adicional a este elemento protector se le agregan otras cualidades (Proxy, SSH, VPN, etc.), características con las que se logra proporcionar mejoras sustanciales a la calidad del servicio y la protección. La Figura 4.2 esquematiza y resalta la utilización de software libre en la implementación del elemento protector. Figura 4.2: Solución al Problema Planteado 4.5 Plataforma de Software Para implementar el cortafuego con cualidades adicionales se utilizó software libre y técnicas mencionadas en Linux Server Security [20] y Linux Security Cookbook [21]. La presente lista muestra las aplicaciones directamente involucradas con la solución del problema (procurando contemplar amenazas descritas en Hacking Exposed Linux [22], pero adaptadas al caso en particular):  Sistema operativo = Debian Etch4  Cortafuego = iptables  Proxy = Squid3  HTTP = Apache2 Caso de Estudio 60  DHCP = dhcp3  SSH = OpenSSH  VPN = OpenVPN El sistema operativo Debian es una distribución libre de Linux pero no es la única distribución disponible, están Centos, Fedora, OpenSuse, Knoppix y muchas otras implementaciones libres de Linux. Por otra parte, también existía la posibilidad de usar Linux propietario como Red Hat o Suse, pero se eligió Debian dado que es libre y es uno de los más sólidos en ambiente de servidores, además, la comunidad que contribuye a su desarrollo es una de las más grandes en todo el abanico de opciones. Esta comunidad mantiene actualizado el sistema operativo y los servicios que este caso de estudio utiliza (iptables, Squid, Apache, etc.). Al momento de la implementación Debian Etch4 era la distribución estable y confiable. Actualmente la versión Debian Lenny 5 es la nueva versión estable, para ese momento la versión Debian Lenny 5 aún tenía problemas de maduración, por eso se utilizó Debian Etch4 en la implementación del caso de estudio. El sistema operativo elegido permite implementar confiablemente los servicios necesarios para el caso de estudio, además al ser Linux, muchos de los virus o programas intrusivos que viajan por Internet no le afectan (generalmente atacan al sistema operativo Windows), entonces al casi estar liberado de esa contingencia, corresponde preocuparse por el tráfico al través de los puertos de comunicación. Para controlar y vigilar ese tráfico se utiliza el software iptables en combinación con Squid3, donde iptables se encarga de abrir y cerrar puertos, permitiendo el paso de sólo algunas aplicaciones, mientras que Squid3 además de acelerar y optimizar el uso de Internet desde la intranet, también bloquea algunos servicios peligrosos, como por ejemplo la transferencia de archivos al través del programa Messenger. Al mismo tiempo interviene DHCP, quien otorga direcciones IP sólo a las máquinas registradas en la intranet, luego en combinación con Squid3 sólo permiten que las máquinas autorizadas puedan transitar por la red interna. De modo similar, Squid3 e iptables permiten sólo a las máquinas autorizadas transitar hacia Internet. El uso cooperante de OpenSSH y OpenVPN proporciona conectividad segura del exterior (Internet) hacia la red interna, gracias a sus cualidades de definir túneles de comunicación encriptados y autorizados mediante certificados digitales personalizados. Con el objeto de permitir entrada segura y vigilada a los portales Web de la intranet, el servidor Apache2, usando su capacidad de proxy inverso, permite que desde Internet se accedan algunos portales de intranet, y gracias al htaccess se exige autentificación en el ingreso. Al mismo tiempo se proporciona un portal institucional y no crítico, de la empresa hacia el exterior. Caso de Estudio 61 Colaborando en gestión remota y comunicaciones seguras, OpenSSH permite el ingreso seguro a la administración del servidor cortafuego desde el interior o el exterior. Además, permite que empleados de la empresa intercambien archivos usando el FTP del SSH llamado SFTP. A continuación en la Tabla 4.1 un resumen de la relación del núcleo fundamental con las acciones y software implementado en el caso de estudio: Cláusulas Componentes principales Política de seguridad.  Todos los equipos (excepto el que presta servicio de protección) adquiere dirección IP usando DHCP.  Todos los equipos con Windows tienen antivirus Kaspersky con cortafuego habilitado, con terminal remoto desactivado, con actualizaciones automáticas desactivado.  Los servidores de aplicaciones tienen clave sólo conocida por el administrador del sistema.  Todos los usuarios tienen clave personal de entrada a sus equipos.  Todos los equipos tienen una partición de disco separada del sistema operativo.  Todas las laptops o equipos para conexión del exterior hacia la intranet, tienen activado el OpenVPN cliente, con las claves y certificados personalizadas para cada equipo. Seguridad física y ambiental. Los equipos de comunicación (modem ADSL, switch router, switch inalámbrico) y el computador con el software requerido se mudó a la oficina físicamente más segura y más privada de la organización (Administración y Contabilidad) Gestión de comunicación y operaciones. En computadores cliente: Antivirus Kaspersky. En servidor protector: Debian Etch4, iptables, Squid3, Apache2, dhcp3, OpenSSH, OpenVPN. Control de acceso. En servidor protector: Debian Etch4, iptables, Squid3, Apache2, dhcp3, OpenSSH, OpenVPN. Tabla 4.1: Relación del núcleo fundamental con las acciones y software implementado Caso de Estudio 62 4.5.1 Descripción Breve del Proceso de Implementación Lo descrito desde el comienzo de la sub sección 4.5 hasta este punto no fue tarea fácil, requirió bastantes horas hombre, además de estrategia y experticia. Una síntesis secuencial de las actividades realizadas se muestra a continuación: Instalación y configuración de:  Plataforma Base:  Hardware (Servidor y elementos de red).  Sistema operativo base.  Librerías, aplicaciones y software de apoyo para fortalecer el sistema operativo base, en el área de seguridad.  Aplicación de apoyo a la administración del sistema (webmin).  Componentes de red primarios:  DHCP, Web, Proxy.  Componentes de seguridad en redes:  VPN, SSH.  Cortafuego.  Actualización vía Internet de todo lo instalado.  Configuración y optimización de todo lo instalado.  Pruebas de funcionamiento y conectividad.  Pruebas básicas de vulnerabilidad.  Entonación y elaboración de scripts:  Es importante mencionar que la configuración realizada y las aplicaciones encargadas de este trabajo de protección deben estar constantemente activas, específicamente después de algún apagón involuntario del sistema. Para ello se hace imprescindible levantar y bajar los servicios instalados en coordinación a la subida y bajada del sistema operativo. Por esta razón se elaboraron scripts, una muestra de los scripts están en el anexo D.  Con el objeto de bloquear las intrusiones, fue necesario detectar potenciales intrusos, y bloquear las direcciones IP asociadas a la intrusión. Por ese motivo se elaboraron scripts, unas muestras de estos scripts se encuentran en los anexos A y B.  Dado que la empresa del caso de estudio, obtiene su IP válido del servidor DHCP de su proveedor de servicio (CANTV), se hizo necesario avisar a los usuarios de la VPN cada vez que el IP del servidor cambiaba. Para ello se elaboró un programa de envío de mail automático, notificando la dirección IP asignada por el proveedor Internet, toda vez que se reinicia el servicio Internet. Caso de Estudio 63  Para complementar los scripts en pro de fortalecer el cortafuego, se elaboró un script que configura y activa el cortafuego. En el anexo C se muestra el shell script que hace esta labor.  Instalación de los clientes VPN:  Generación de certificados personalizados.  Configuración y prueba de conectividad.  Instalación de los clientes SSH:  Configuración y prueba de conectividad.  Pruebas de vulnerabilidad:  Nessus (ver resultados en Tabla 4.2) 4.6 Validaciones de Seguridad Post Instalación Luego de culminar la implementación de las medidas de seguridad descritas, se simuló manualmente ataques a la implementación, y posterior a esos ataques, se finalizó la prueba de penetración utilizando el programa Nessus version 4 (la última versión a diciembre del 2009). La prueba se efectuó desde un equipo en Internet, el cual utilizando Nessus 4 intentó vulnerar el servicio implementado en el caso de estudio, luego de 45 minutos de ataques, arrojó el resumen de resultados reflejado en Tabla 4.2. Number of vulnerabilities (Vulnerabilidades) : Open ports (puertos abiertos): 3 Low (nivel de riesgo bajo): 20 Medium (nivel de riego medio): 4 High (nivel de riesgo alto): 0 Tabla 4.2: Extracto de los resultados obtenidos por Nessus En la Tabla 4.2 se observa que los puertos abiertos son 3, eso significa que el iptables está haciendo bien su trabajo y cerrando los puertos con potencial de vulnerabilidad (sólo 3 potencialmente vulnerables abiertos). Nessus encontró 20 posibles vulnerabilidades de riesgo bajo o mínimo, 4 con riesgo medio, y lo que es más importante, encontró 0, es decir no encontró ninguna vulnerabilidad de riesgo alto. Con lo cual se demuestra la solidez de la implementación. Bajo otra óptica y ampliando la explicación del funcionamiento del programa atacante, se puede indicar que Nessus evaluó SSH, Apache y trató de penetrar la intranet. Encontró vulnerabilidades leves, posiblemente pudo averiguar el nombre del servidor o el sistema operativo o su versión; de modo similar quizás descubrió el tipo de encriptación (pero no pudo desencriptar); también es posible que haya captado algunos IP de la intranet; obvio intentó ingresar por puertos Telnet, Mail, SNMP, cosa que no pudo, pues los encontró cerrados por el cortafuego. Conclusiones 65 5. Conclusiones El presente trabajo proporciona una visión amplia de la vulnerabilidad a la cual está sometida cualquier red. Al mismo tiempo propone soluciones para eliminar o disminuir esas vulnerabilidades en redes no críticas. Incluso abarca un caso de estudio, describiendo la implementación práctica de su protección utilizando software libre. Es decir, va de lo general a lo particular y de la teoría a la práctica. Del trabajo se desprenden los siguientes aspectos resaltantes: Se logró extraer 4 cláusulas fundamentales de las 15 que propone el ISO/IEC 27002, con las cuales se conformó el núcleo fundamental para proteger redes no críticas. Se logró implantar exitosamente el núcleo fundamental utilizando software libre, a una empresa elegida como caso de estudio. Ninguna solución de protección proporciona seguridad total u óptima. Los ataques y atacantes parecen desarrollarse más rápido que las protecciones. No se trata de mejor precio o menor costo, se trata de libertad para elegir y actualizar los procedimientos y medios de seguridad a implementar. Para proporcionar seguridad, el software libre se presenta como una de las mejores alternativas, pues su desarrollo va acorde con las necesidades de los usuarios. Además, la comunidad de desarrolladores constantemente renueva la oferta de herramientas ante los peligros que continuamente aparecen. Referencias Bibliográficas 67 Referencias Bibliográficas [1] DIFINEX LTDA, matousec.com. Comparación de Firewall en Ambiente Windows. http://www.matousec.com/projects/proactive-security- challenge/results.php. 2009. [2] hiprank.com, Comparación de Apache - lighttpd. http://www.hiprank.com/apache-vs-apache2-vs-lighttpd-vs-zeus.html. 2009. [3] Netcraft.com. Web Server Survey. http://news.netcraft.com/archives/2010/01/07/january_2010_web_server_su rvey.html [4] R. Droms. Dynamic Host Configuration Protocol. RFC 2131. Marzo 1997. [5] R. Droms, J. Bound, B. Volz, T. Lemon, C. Perkins, M. Carney. Dynamic Host Configuration Protocol for IPv6 (DHCPv6). RFC 3315. Julio 2003. [6] T. Ylönen. Reseña biográfica para el creador del SSH. http://www.ssh.com/company/about/board_ylonen.html. 2009. [7] J. Galbraith, R. Thayer. The Secure Shell (SSH) Public Key File Format. RFC 4716. Noviembre 2006. [8] International Organization for Standardization. Information Technology - Security Techniques - Code of Practice for Information Security Management. ISO/IEC 17799:2005 (también ISO/IEC 27002 año 2007). Junio 2005. [9] N. Freed. Behavior of and Requirements for Internet Firewalls. RFC 2979. Octubre 2000. [10] M. Goux. Toda la Verdad sobre los Peligros de Internet/The Whole Truth About the Dangers of Internet. Dasier Srl. 2007. [11] G. Asencio. Seguridad en Internet (Spanish Edition). Nowtilus. Marzo 2006. [12] C. Xu. Scalable and Secure Internet Services and Architecture. Chapman & Hall/CRC. Primera edición. Junio 2005. [13] B. Komar, R. Beekelaar, J. Wettern. Firewalls for Dummies. For Dummies. Segunda edición. Junio 2003. Referencias Bibliográficas 68 [14] W. Noonan, I. Dubrawsky. Firewall Fundamentals. Cisco Press. Primera edición. Junio 2006. [15] M. Rash. Linux Firewalls: Attack Detection and Response with iptables, psad, and fwsnort. Starch Press. Septiembre 2007. [16] A. Luotonen. Web Proxy Servers. Prentice Hall. Primera edición. Diciembre 1997. [17] M. Erwin, C. Scott, P. Wolfe. Virtual Private Networks. Editorial Second Edition. Segunda edición. Diciembre 1998. [18] D. Barrett, R. Silverman, R. Byrnes. SSH, the Secure Shell: The Definitive Guide. O'Reilly. Primera edición. Mayo 2005. [19] C. Kopparapu. Load Balancing Servers, Firewalls, and Caches. Wiley. Primera edición. Febrero 2002. [20] M. Bauer. Linux Server Security. O'Reilly. Segunda edición. Enero 2005. [21] D. Barrett, R. Silverman, R. Byrnes. Linux Security Cookbook. O'Reilly. Segunda edición. Junio 2003. [22] ISECOM. Hacking Exposed Linux. McGraw-Hill Osborne. Tercera edición. Julio 2008. Anexo A (examen de archivos log) 69 Anexo A (examen de archivos log) Resumen de archivo de logs, especialmente el llamado auth.log donde se puede observar los intentos intrusivos de los que es objeto el servidor del caso de estudio. En negrillas cursivas están los comentarios, mientras en letras más pequeñas están los mensajes del log. En las 4 líneas siguientes se observan sesiones de root abiertas y cerradas. Estas sesiones son normalmente ejecutadas por algunas aplicaciones autorizadas desde el CRON Jul 9 07:39:01 localhost CRON[27090]: (pam_unix) session opened for user root by (uid=0) Jul 9 07:39:01 localhost CRON[27090]: (pam_unix) session closed for user root Jul 9 08:09:01 localhost CRON[27170]: (pam_unix) session opened for user root by (uid=0) Jul 9 08:09:01 localhost CRON[27170]: (pam_unix) session closed for user root ... En las dos primeras líneas subsiguientes se observa un intento fallido de ingresar al servidor usando la puerta del SSH procurando ingresar como root desde el IP 202.91.233.243. Jul 9 14:21:54 localhost sshd[27475]: (pam_unix) authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=202.91.233.243 user=root Jul 9 14:21:56 localhost sshd[27475]: Failed password for root from 202.91.233.243 port 34956 ssh2 Jul 9 14:33:01 localhost CRON[27565]: (pam_unix) session opened for user nobody by (uid=0) Jul 9 14:33:01 localhost CRON[27565]: (pam_unix) session closed for user nobody Jul 9 14:39:01 localhost CRON[27585]: (pam_unix) session opened for user root by (uid=0) ... Las dos primeras líneas a continuación muestran un ingreso autorizado y exitoso usando SSH con el usuario hv desde el IP 190.72.86.25. Jul 9 16:21:59 localhost sshd[28132]: reverse mapping checking getaddrinfo for dbe485619.dslam- 172-17-16-241-335-0056-mad-02.dsl.cantv.net failed - POSSIBLE BREAK-IN ATTEMPT! Jul 9 16:22:02 localhost sshd[28132]: Accepted password for hv from 190.72.86.25 port 1214 ssh2 Jul 9 16:22:02 localhost sshd[28134]: (pam_unix) session opened for user hv by (uid=0) Jul 9 16:33:01 localhost CRON[28154]: (pam_unix) session opened for user nobody by (uid=0) Jul 9 16:33:01 localhost CRON[28154]: (pam_unix) session closed for user nobody Jul 9 16:39:01 localhost CRON[28157]: (pam_unix) session opened for user root by (uid=0) ... Estas dos líneas procuran identificar el IP 95.154.207.146, al no poder hacerlo da mensaje de error. Este IP posiblemente sea un IP falso o Anexo A (examen de archivos log) 70 encubierto (spoofing), por añadidura, desde este IP se intenta ingresar como usuario db2inst1. Jul 9 19:42:02 localhost sshd[28251]: Did not receive identification string from 95.154.207.146 Jul 9 19:45:36 localhost sshd[28252]: Invalid user db2inst1 from 95.154.207.146 ... Desde el IP mencionado en el comentario anterior se intenta burlar la seguridad intentando ingresar con otro usuario, esta vez con el usuario db2fenc1, tal como se aprecia en las dos líneas siguientes. Jul 9 19:45:49 localhost sshd[28254]: (pam_unix) authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=95.154.207.146 Jul 9 19:45:51 localhost sshd[28254]: Failed password for invalid user db2fenc1 from 95.154.207.146 port 58722 ssh2 ... A continuación varias líneas donde se observan los intentos fallidos de esta dirección IP 95.154.207.146 procurando ingresar con al servidor del caso de estudio. Este IP claramente está dedicado a burlar la seguridad, quizás por eso en líneas anteriores procuró esconder su identidad, pero cuando se busca en Internet, se logra determinar que este IP pertenece a:  Jason Smith, de PC Smart Hosting,  con dirección 157 Rugeley Road, Burntwood, Staffordshire, WS7 9HA, Reino Unido,  con número de teléfono contacto: +44 (0) 7886076832… Sin embargo, dado que este IP posiblemente esté encubierto y suplantando la identidad del propietario del IP (spoofing,) no es posible asegurar que de verdad este IP es el atacante real. Jul 9 19:46:00 localhost sshd[28256]: Failed password for invalid user dasusr1 from 95.154.207.146 port 59358 ssh2 Jul 9 19:46:02 localhost sshd[28258]: Invalid user db2inst2 from 95.154.207.146 Jul 9 19:46:07 localhost sshd[28258]: (pam_unix) check pass; user unknown Jul 9 19:46:07 localhost sshd[28258]: (pam_unix) authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=95.154.207.146 Jul 9 19:46:08 localhost sshd[28258]: Failed password for invalid user db2inst2 from 95.154.207.146 port 60014 ssh2 Jul 9 19:46:10 localhost sshd[28260]: Invalid user db2fenc2 from 95.154.207.146 Jul 9 19:46:15 localhost sshd[28260]: (pam_unix) check pass; user unknown Jul 9 19:46:15 localhost sshd[28260]: (pam_unix) authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=95.154.207.146 Jul 9 19:46:17 localhost sshd[28260]: Failed password for invalid user db2fenc2 from 95.154.207.146 port 60593 ssh2 Jul 9 19:46:19 localhost sshd[28262]: Invalid user wcuser from 95.154.207.146 Jul 9 19:46:24 localhost sshd[28262]: (pam_unix) check pass; user unknown Jul 9 19:46:24 localhost sshd[28262]: (pam_unix) authentication failure; logname= uid=0 euid=0 Anexo A (examen de archivos log) 71 tty=ssh ruser= rhost=95.154.207.146 Jul 9 19:46:26 localhost sshd[28262]: Failed password for invalid user wcuser from 95.154.207.146 port 33016 ssh2 Jul 9 19:46:27 localhost sshd[28264]: Invalid user guest from 95.154.207.146 Jul 9 19:46:32 localhost sshd[28264]: (pam_unix) check pass; user unknown Jul 9 19:46:32 localhost sshd[28264]: (pam_unix) authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=95.154.207.146 Jul 9 19:46:35 localhost sshd[28264]: Failed password for invalid user guest from 95.154.207.146 port 33623 ssh2 Jul 9 19:46:36 localhost sshd[28266]: Invalid user guest from 95.154.207.146 Jul 9 19:46:41 localhost sshd[28266]: (pam_unix) check pass; user unknown Jul 9 19:46:41 localhost sshd[28266]: (pam_unix) authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=95.154.207.146 Jul 9 19:46:43 localhost sshd[28266]: Failed password for invalid user guest from 95.154.207.146 port 34308 ssh2 Jul 9 19:46:44 localhost sshd[28268]: Invalid user info from 95.154.207.146 Jul 9 19:46:49 localhost sshd[28268]: (pam_unix) check pass; user unknown Jul 9 19:46:49 localhost sshd[28268]: (pam_unix) authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=95.154.207.146 Jul 9 19:46:51 localhost sshd[28268]: Failed password for invalid user info from 95.154.207.146 port 34860 ssh2 Jul 9 19:46:52 localhost sshd[28270]: Invalid user alumno from 95.154.207.146 Jul 9 19:46:57 localhost sshd[28270]: (pam_unix) check pass; user unknown Jul 9 19:46:57 localhost sshd[28270]: (pam_unix) authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=95.154.207.146 Jul 9 19:47:00 localhost sshd[28270]: Failed password for invalid user alumno from 95.154.207.146 port 35423 ssh2 Jul 9 19:47:01 localhost sshd[28272]: Invalid user alumni from 95.154.207.146 Jul 9 19:47:06 localhost sshd[28272]: (pam_unix) check pass; user unknown Jul 9 19:47:06 localhost sshd[28272]: (pam_unix) authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=95.154.207.146 Jul 9 19:47:08 localhost sshd[28272]: Failed password for invalid user alumni from 95.154.207.146 port 36083 ssh2 Jul 9 19:47:10 localhost sshd[28274]: Invalid user postgres from 95.154.207.146 Jul 9 19:47:15 localhost sshd[28274]: (pam_unix) check pass; user unknown Jul 9 19:47:15 localhost sshd[28274]: (pam_unix) authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=95.154.207.146 … Anexo A (examen de archivos log) 72 Cabe destacar:  Se podrían llenar hojas de hojas con logs de atacantes…  Para proteger un poco a la red de estos ataques, se confeccionó un shell script que analiza estos logs, y extrae los IPs de los potenciales atacantes para posteriormente colocarlos en una lista negra. Detalles de este shell script en el anexo B.  Esa lista negra, luego es utilizada por otro shell script que se ejecuta a diario automáticamente, el cual renueva la configuración del iptables para bloquear el acceso de los IPs en la lista negra. Ese shell script se presenta en el anexo C. Anexo B (detección de IPs de intrusos) 73 Anexo B (detección de IPs de intrusos) El presente shell script examina los archivos de logs auth.log, para extraer de ellos los IPs que intentan atacar al servidor del caso de estudio. El programa está autodocumentado y se espera que un administrador de sistemas Unix o Linux con conocimientos del lenguaje pueda comprenderlo sin necesidad de aclaraciones adicionales. #!/bin/sh FUENTE=/dir_fuente # directorio donde están los programas shell script a usar ARCHLOG=/var/log/auth.log ARCHTMP=/tmp/intruso FALLA=“Failed password” FALLAR=“Failed password for invalid user” FALLO=“authentication failure” QUITA=“ssh ruser” grep “$FALLA” $ARCHLOG > $ARCHTMP.0 grep “$FALLAR” $ARCHTMP.0 > $ARCHTMP.1 grep -v “$FALLAR” $ARCHTMP.0 > $ARCHTMP.2 cut -d: -f4 $ARCHTMP.1 | cut -d” “ -f9 > $ARCHTMP.3 cut -d: -f4 $ARCHTMP.2 | cut -d” “ -f7 >> $ARCHTMP.3 sort $ARCHTMP.3 | uniq -c > $ARCHTMP.0 while read freq ip do if [ $freq -gt 10 ] then echo $ip fi done < $ARCHTMP.0 > $ARCHTMP.1 while read freq ip do if [ $freq -gt 500 ] then echo $freq $ip fi done < $ARCHTMP.0 > $ARCHTMP.2 #FIN de búsqueda de ataques por SHH, ahora para los ataques por vía distinta al SSH grep “$FALLO” $ARCHLOG | grep -v “$QUITA” | cut -d= -f6-8 | sort | uniq -c > $ARCHTMP.0 # a continuación utilizando el programa VI y un archivo con comandos llamado cambia2puntos # se separan “los campos” del archivo $ARCHTMP.0 vi $ARCHTMP.0 -s $FUENTE/cambia2puntos while read freq usuario act ip do if [ $freq -gt 10 ] then echo $ip fi Anexo B (detección de IPs de intrusos) 74 done < $ARCHTMP.0 >> $ARCHTMP.1 while read freq usuario act ip do if [ $freq -gt 500 ] then echo $freq $ip fi done < $ARCHTMP.0 >> $ARCHTMP.2 cat $ARCHTMP.1 $FUENTE/intruso | sort -u | sort -n > $ARCHTMP.fin cat $ARCHTMP.2 $FUENTE/intruso.max | sort -u | sort -n > $ARCHTMP.max # ahora se activa el cortafuego para que contemple esta nueva lista negra de IPs cp $ARCHTMP.fin $FUENTE/intruso cp $ARCHTMP.max $FUENTE/intruso.max $FUENTE/cortafuego > /tmp/intr.log Anexo C (activa reglas del cortafuego) 75 Anexo C (activa reglas del cortafuego) El presente shell script (llamado cortafuego) configura y activa el cortafuego implementado mediante reglas del programa iptables. Este shell script es una modificación, una personalización y mejora al original obtenido de Internet. La personalización se refiere principalmente a:  Puertos bloqueados.  Puertos permitidos.  Aplicaciones permitidas.  Bloquea IPs de la lista negra generada por el shell script del anexo B.  IPs de la red interna y de la externa. #!/bin/sh # # Por Guimi 2006/02 - http://www.guimi.net # Modificado por Huáscar Vega 07 2009 # FUENTE=/dir_fuente # directorio donde están los programas shell script a usar # Se verifica si existe algún parámetro en línea de comando if [ -n “$1” ] && [ “$1” = “stop” ] then # Binario de iptables IPTABLES=/sbin/iptables ### Se limpian (flush) las reglas $IPTABLES -F # Se borran las cadenas 'chains' de usuario $IPTABLES -X # Se coloca a cero paquetes y contadores $IPTABLES -Z # Se limpian las reglas de NAT $IPTABLES -t nat -F ### Establece las políticas básicas, se utiliza la estrategia de abrir todo, para luego ir cerrando $IPTABLES -P INPUT ACCEPT $IPTABLES -P OUTPUT ACCEPT $IPTABLES -P FORWARD ACCEPT Anexo C (activa reglas del cortafuego) 76 $IPTABLES -t nat -P PREROUTING ACCEPT $IPTABLES -t nat -P POSTROUTING ACCEPT # Desactiva el bit de forward echo 0 > /proc/sys/net/ipv4/ip_forward exit $? fi QUIET=“0” cd $FUENTE # Registra el inicio del cortafuego FECHA=$(date +”%C%y-%m-%d %H:%M”) echo “====== Iniciado cortafuegos: $FECHA =========“ if [ $QUIET = “0” ]; then echo “ ** Empresa caso de estudio - Redes **” echo “ ----------------------------------------------------------------” fi # PARAMETRIZACION DEL SCRIPT ########################################## ### Define constantes para usar en el ### script if [ $QUIET = “0” ]; then echo “ Cargando parámetros...” fi # Binario de iptables IPTABLES=/sbin/iptables # INTERFACES # eth1 - conectado a Internet con IP FIJA EXT_IF=eth1 # extrae dinámicamente el IP actual de la máquina. Dado que el proveedor de Internet asigna # IP públicos dinámicamente. EXT_IP=`/sbin/ifconfig -v eth1 | grep inet | cut -d: -f2 | cut -dB -f1` # eth0 - conectado a LAN LAN_IF=eth0 LAN_IP=192.168.5.1 LAN_RED=192.168.5.0/24 # lo - interfaz de loopback LOO_RED=127.0.0.0/8 # cualquier red Anexo C (activa reglas del cortafuego) 77 ANY_RED=0.0.0.0/0 # MAQUINAS INTERNAS IP_SERVIDOR_FTP=192.168.5.1 if [ $QUIET = “0” ]; then echo “ Cargando módulos...” fi ########################################## ### Asegura tener cargados los módulos necesarios /sbin/depmod -a /sbin/modprobe ip_tables /sbin/modprobe ip_conntrack /sbin/modprobe ip_conntrack_ftp /sbin/modprobe ip_conntrack_irc /sbin/modprobe iptable_nat /sbin/modprobe ip_nat_irc /sbin/modprobe ip_nat_ftp if [ $QUIET = “0” ]; then echo “ Limpiando FW...” fi ########################################## ### Limpia configuración existente # Limpia (flush) las reglas $IPTABLES -F # Borra 'cadenas' de usuario $IPTABLES -X # Pone a cero paquetes y contadores $IPTABLES -Z # Limpia las reglas de NAT $IPTABLES -t nat -F # Borra 'cadenas' de usuario de NAT $IPTABLES -t nat -X if [ $QUIET = “0” ]; then echo “ Estableciendo politicas...” fi ########################################## ### Establece políticas por omisión Anexo C (activa reglas del cortafuego) 78 ###+ de las 'cadenas' # Por omisión descarta los paquetes $IPTABLES -P INPUT DROP $IPTABLES -P OUTPUT DROP $IPTABLES -P FORWARD DROP # PREROUTING - NAT sobre la IP destino: normalmente desde inet hacia LAN # POSTROUTING - NAT sobre la IP origen: normalmente desde LAN hacia inet $IPTABLES -t nat -P PREROUTING DROP $IPTABLES -t nat -P POSTROUTING DROP # Relaja política de salida # Deja salir paquetes de LAN_IP por LAN_IF $IPTABLES -A OUTPUT -o $LAN_IF -s $LAN_IP -j ACCEPT # Deja salir paquetes de EXT_IP por EXT_IF $IPTABLES -A OUTPUT -o $EXT_IF -s $EXT_IP -j ACCEPT if [ $QUIET = “0” ]; then echo “ -> Denegación de redes invalidas...” fi ########################################## # No admite desde el exterior redes locales (RFC 1918) $IPTABLES -t nat -A PREROUTING -i $EXT_IF -s 192.168.0.0/16 -j DROP $IPTABLES -t nat -A PREROUTING -i $EXT_IF -s 10.0.0.0/8 -j DROP $IPTABLES -t nat -A PREROUTING -i $EXT_IF -s 172.16.0.0/12 -j DROP $IPTABLES -t nat -A PREROUTING -i $EXT_IF -s 224.0.0.0/4 -j DROP $IPTABLES -t nat -A PREROUTING -i $EXT_IF -s 240.0.0.0/5 -j DROP $IPTABLES -t nat -A PREROUTING -i $EXT_IF -s $LOO_RED -j DROP $IPTABLES -t nat -A PREROUTING -i $EXT_IF -s 0.0.0.0/8 -j DROP $IPTABLES -t nat -A PREROUTING -i $EXT_IF -s 169.254.0.0/16 -j DROP $IPTABLES -t nat -A PREROUTING -i $EXT_IF -s 255.255.255.255 -j DROP # Desde el interior solo admite red LAN $IPTABLES -t nat -A PREROUTING -i $LAN_IF -s ! $LAN_RED -j DROP if [ $QUIET = “0” ]; then echo “ -> Denegación de broadcast de NetBIOS...” fi ########################################## # Bloquear paquetes broadcast de NetBIOS salientes iptables -A FORWARD -p tcp --sport 137:139 -o $EXT_IF -j DROP iptables -A FORWARD -p udp --sport 137:139 -o $EXT_IF -j DROP iptables -A OUTPUT -p tcp --sport 137:139 -o $EXT_IF -j DROP iptables -A OUTPUT -p udp --sport 137:139 -o $EXT_IF -j DROP Anexo C (activa reglas del cortafuego) 79 if [ $QUIET = “0” ]; then echo “ Activando NAT...” fi ########################################## # Activa el bit de forward echo 1 > /proc/sys/net/ipv4/ip_forward # Enmascara la salida de la LAN $IPTABLES -t nat -A POSTROUTING -s $LAN_RED -o $EXT_IF -j MASQUERADE if [ $QUIET = “0” ]; then echo “ Accesos a la máquina local permitidos...” fi ########################################## ### Permite ciertos accesos a la maquina if [ $QUIET = “0” ]; then echo “ -> loopback...” fi # Permite todas las conexiones del interfaz loopback $IPTABLES -A INPUT -i lo -s $LOO_RED -d $LOO_RED -j ACCEPT $IPTABLES -A OUTPUT -o lo -s $LOO_RED -d $LOO_RED -j ACCEPT # Permite el PostEnrutado de paquetes enviados localmente $IPTABLES -t nat -A POSTROUTING -o lo -s $LOO_RED -j ACCEPT if [ $QUIET = “0” ]; then echo “ -> LAN...” fi # Da acceso desde la red local $IPTABLES -A INPUT -s $LAN_RED -i $LAN_IF -j ACCEPT $IPTABLES -A OUTPUT -d $LAN_RED -o $LAN_IF -j ACCEPT # Permite el acceso del exterior al puerto 80 por ser servidor Web $IPTABLES -A INPUT -p tcp --dport 80 -j ACCEPT $IPTABLES -A OUTPUT -p tcp --sport 80 -j ACCEPT # Webmin permite acceso exterior al puerto 10000 por ser servidor webmin $IPTABLES -A INPUT -p tcp --dport 10000 -j ACCEPT $IPTABLES -A OUTPUT -p tcp --sport 10000 -j ACCEPT $IPTABLES -A INPUT -p udp --dport 1194 -j ACCEPT $IPTABLES -A OUTPUT -p udp --dport 1194 -j ACCEPT Anexo C (activa reglas del cortafuego) 80 #Permite el acceso del exterior al puerto 21 por ser servidor ftp $IPTABLES -A INPUT -p tcp --dport 21 -j ACCEPT $IPTABLES -A OUTPUT -p tcp --sport 21 -j ACCEPT if [ $QUIET = “0” ]; then echo “ -> DNS...” fi # Acepta conexiones DNS $IPTABLES -A INPUT -s $ANY_RED -i $EXT_IF -p udp -m udp --sport 53 --dport 1024:65535 -j ACCEPT $IPTABLES -A OUTPUT -d $ANY_RED -o $EXT_IF -p udp -m udp --dport 53 --sport 1024:65535 -j ACCEPT if [ $QUIET = “0” ]; then echo “ -> ntpd...” fi # Acepta conexiones ntpd $IPTABLES -A INPUT -p udp -m udp --dport 123 -i $EXT_IF -s $ANY_RED -j ACCEPT $IPTABLES -A OUTPUT -p udp -m udp --sport 123 -j ACCEPT if [ $QUIET = “0” ]; then echo “ -> icmp...” fi # Permite paquetes ICMP (ping, traceroute...) # con limites para evitar ataques de DoS # Acepta ping $IPTABLES -A INPUT -p icmp --icmp-type echo-request -m limit --limit 2/s -j ACCEPT $IPTABLES -A OUTPUT -p icmp --icmp-type echo-request -m limit --limit 2/s -j ACCEPT $IPTABLES -A INPUT -p icmp --icmp-type echo-reply -m limit --limit 2/s -j ACCEPT $IPTABLES -A OUTPUT -p icmp --icmp-type echo-reply -m limit --limit 2/s -j ACCEPT # Acepta redirecciones $IPTABLES -A INPUT -p icmp --icmp-type redirect -m limit --limit 2/s -j ACCEPT $IPTABLES -A OUTPUT -p icmp --icmp-type redirect -m limit --limit 2/s -j ACCEPT # Acepta tiempo excedido $IPTABLES -A INPUT -p icmp --icmp-type time-exceeded -m limit --limit 2/s -j ACCEPT $IPTABLES -A OUTPUT -p icmp --icmp-type time-exceeded -m limit --limit 2/s -j ACCEPT # Acepta destino inalcanzable $IPTABLES -A INPUT -p icmp --icmp-type destination-unreachable -m limit --limit 2/s -j ACCEPT $IPTABLES -A OUTPUT -p icmp --icmp-type destination-unreachable -m limit --limit 2/s -j ACCEPT if [ $QUIET = “0” ]; then echo “ -> ssh...” fi Anexo C (activa reglas del cortafuego) 81 # Abre puerto 22 para SSH $IPTABLES -A INPUT -p tcp -s $ANY_RED -m tcp --dport 22 --sport 1024:65535 -m state --state NEW -j LOG --log-prefix “[FW - SSH] “ # PARA impedir paso de intrusos por SSH, lectura e incorporación de lista negra while read ipintruso do $IPTABLES -A INPUT -s $ipintruso -i eth1 -j REJECT done < “$FUENTE”/intruso $IPTABLES -A INPUT -p tcp -s $ANY_RED -m tcp --dport 22 --sport 1024:65535 -j ACCEPT # conexiones salientes relacionadas $IPTABLES -A OUTPUT -p tcp -m tcp --sport 22 -m state --state RELATED,ESTABLISHED -j ACCEPT if [ $QUIET = “0” ]; then echo “ Redirecciones...” fi ########################################## ### Genera redireccionamientos ### transparentes para el resto de máquinas if [ $QUIET = “0” ]; then echo “ -> Proxy Web transparente (Squid)...” fi # Con la redirección activa (primera línea) # no se llega a la segunda línea # Para bloquear todo acceso a Web comentar # solo la primera línea # Para anular el proxy comentar las dos reglas $IPTABLES -t nat -A PREROUTING -i $LAN_IF -s $LAN_RED -p tcp --dport 80 -j REDIRECT --to-port 3128 $IPTABLES -t nat -A PREROUTING -i $LAN_IF -s $LAN_RED -p tcp --dport 10000 -j REDIRECT --to-port 3128 $IPTABLES -A FORWARD -i $LAN_IF -p tcp --dport 10000 -j ACCEPT $IPTABLES -A FORWARD -i $LAN_IF -p tcp --dport 443 -j ACCEPT $IPTABLES -A FORWARD -i $EXT_IF -p tcp --dport 10000 -j ACCEPT $IPTABLES -A FORWARD -i $EXT_IF -p tcp --dport 443 -j ACCEPT if [ $QUIET = “0” ]; then echo “ -> Filtro de correo (P3Scan)...” fi # Con la redireccion activa (primera linea) # no se llega a la segunda linea # Para bloquear todo acceso a POP comentar # solo la primera linea # Para anular el filtrado comentar las dos reglas $IPTABLES -t nat -A PREROUTING -i $LAN_IF -s $LAN_RED -p tcp --dport 110 -j REDIRECT --to-port 8110 Anexo C (activa reglas del cortafuego) 82 $IPTABLES -A FORWARD -i $LAN_IF -p tcp --dport 110 -j DROP if [ $QUIET = “0” ]; then echo “ -> DNAT (21 y 20)...” fi # Redirige “$EXT_IP”:2220-1 a “$IP_SERVIDOR_FTP”:20-1 $IPTABLES -t nat -A PREROUTING -i $EXT_IF -d $EXT_IP -p tcp --dport 220 -j DNAT --to “$IP_SERVIDOR_FTP”:20 $IPTABLES -t nat -A PREROUTING -i $EXT_IF -d $EXT_IP -p tcp --dport 221 -j DNAT --to “$IP_SERVIDOR_FTP”:21 # conexiones salientes relacionadas (ftp pasivo) $IPTABLES -t nat -A PREROUTING -m state --state RELATED,ESTABLISHED -j ACCEPT # Permite postruteos a “$IP_SERVIDOR_FTP”:20-1 $IPTABLES -t nat -A POSTROUTING -o $LAN_IF -d $IP_SERVIDOR_FTP -p tcp --dport 20 -j ACCEPT $IPTABLES -t nat -A POSTROUTING -o $LAN_IF -d $IP_SERVIDOR_FTP -p tcp --dport 21 -j ACCEPT # Permite reenvios desde el exterior a “$IP_SERVIDOR_FTP”:20-1 $IPTABLES -A FORWARD -i $EXT_IF -d $IP_SERVIDOR_FTP -p tcp --dport 20 -j ACCEPT $IPTABLES -A FORWARD -i $EXT_IF -d $IP_SERVIDOR_FTP -p tcp --dport 21 -j ACCEPT if [ $QUIET = “0” ]; then echo “ Reenvios...” fi ########################################## ### Aceptamos algunos reenvíos if [ $QUIET = “0” ]; then echo “ -> icmp...” fi # Permite paquetes ICMP (ping, traceroute...) # con limites para evitar ataques de DoS # Acepta ping $IPTABLES -A FORWARD -p icmp --icmp-type echo-request -m limit --limit 2/s -j ACCEPT $IPTABLES -A FORWARD -p icmp --icmp-type echo-reply -m limit --limit 2/s -j ACCEPT # Acepta redirecciones $IPTABLES -A FORWARD -p icmp --icmp-type redirect -m limit --limit 2/s -j ACCEPT # Acepta tiempo excedido $IPTABLES -A FORWARD -p icmp --icmp-type time-exceeded -m limit --limit 2/s -j ACCEPT # Acepta destino inalcanzable Anexo C (activa reglas del cortafuego) 83 $IPTABLES -A FORWARD -p icmp --icmp-type destination-unreachable -m limit --limit 2/s -j ACCEPT # Acepta todas en LAN_IF $IPTABLES -t nat -A PREROUTING -i $LAN_IF -p icmp --icmp-type any -m limit --limit 2/s -j ACCEPT $IPTABLES -t nat -A POSTROUTING -o $LAN_IF -p icmp --icmp-type any -m limit --limit 2/s -j ACCEPT if [ $QUIET = “0” ]; then echo “ Salida general...” fi ########################################## ### Acepta conexiones salientes # Permite cualquier salida tcp desde la propia maquina $IPTABLES -A OUTPUT -o $EXT_IF -p tcp -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT # conexiones entrantes relacionadas $IPTABLES -A INPUT -i $EXT_IF -p tcp -m state --state ESTABLISHED,RELATED -j ACCEPT # Permite reenvio de paquetes enviados desde la LAN $IPTABLES -A FORWARD -i $LAN_IF -j ACCEPT # conexiones salientes relacionadas $IPTABLES -A FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT # Permite el NAT de paquetes enviados desde la LAN $IPTABLES -t nat -A PREROUTING -i $LAN_IF -j ACCEPT # conexiones salientes relacionadas $IPTABLES -t nat -A PREROUTING -m state --state RELATED,ESTABLISHED -j ACCEPT # Permite el NAT de paquetes enviados desde inet hacia la IP publica $IPTABLES -t nat -A PREROUTING -i $EXT_IF -d $EXT_IP -j ACCEPT # conexiones salientes relacionadas $IPTABLES -t nat -A PREROUTING -m state --state RELATED,ESTABLISHED -j ACCEPT # Permite NAT de paquetes enviados desde la IP publica hacia inet $IPTABLES -t nat -A POSTROUTING -o $EXT_IF -s $EXT_IP -j ACCEPT # conexiones salientes relacionadas $IPTABLES -t nat -A POSTROUTING -m state --state RELATED,ESTABLISHED -j ACCEPT Anexo C (activa reglas del cortafuego) 84 # Permite el PostEnrutado de paquetes enviados localmente $IPTABLES -t nat -A POSTROUTING -o $LAN_IF -s $LAN_RED -j ACCEPT if [ $QUIET = “0” ]; then echo “ Cerrando puertos restringidos...” fi ########################################## ### Puertos restringidos (telnet, ftp, imap, pop3, etc.) ### Reiterativo $IPTABLES -A INPUT -p tcp --dport 1:1024 -j DROP $IPTABLES -A INPUT -p udp --dport 1:1024 -j DROP if [ $QUIET = “0” ]; then echo “ Configuración FW terminada.” echo ““ echo “ A continuación podría desear:” echo “ - verificar reglas: iptables -nvL && iptables -nvL -t nat” echo “ - guardar reglas: iptables-save > reglas” echo “ - restaurar reglas: iptables-restore < reglas” fi ########################################## exit 0 Anexo D (inicio del cortafuego) 85 Anexo D (inicio del cortafuego) Para lograr que esta implementación se haga efectiva toda vez que el sistema operativo encienda, debe colocar en el subdirectorio del sistema, el init.d, el shell script llamado cortafuego. Para ello, siendo usuario root, primero debe moverse con el comando cd hasta el directorio donde está este shell script y luego ejecutar la serie de comandos: cp cortafuego /etc/init.d/cortafuego chmod 440 /etc/init.d/cortafuego cd /etc cd rc0.d ln -s ../init.d/cortafuego K22cortafuego cd ../rc1.d ln -s ../init.d/cortafuego K22cortafuego cd ../rc2.d ln -s ../init.d/cortafuego S22cortafuego cd ../rc3.d ln -s ../init.d/cortafuego S22cortafuego cd ../rc4.d ln -s ../init.d/cortafuego S22cortafuego cd ../rc5.d ln -s ../init.d/cortafuego S22cortafuego cd ../rc6.d ln -s ../init.d/cortafuego K22cortafuego Efectuada esa labor, el sistema está listo para activar el cortafuego al encender o inicializar el sistema operativo. Bibliografía 86 Nombre de archivo: tesis_HV_0610 Directorio: D: Plantilla: C:\Documents and Settings\hv\Datos de programa\Microsoft\Plantillas\Normal.dotm Título: UNIVERSIDAD CENTRAL DE VENEZUELA Asunto: Autor: Alejandro Brito Palabras clave: Comentarios: Fecha de creación: 10/06/2010 23:06:00 Cambio número: 3 Guardado el: 15/06/2010 10:18:00 Guardado por: hv Tiempo de edición: 49 minutos Impreso el: 24/09/2010 9:15:00 Última impresión completa Número de páginas: 98 Número de palabras: 25.559 (aprox.) Número de caracteres: 140.575 (aprox.)