UNIVERSIDAD CENTRAL DE VENEZUELA UNIVERSIDAD CENTRAL DE VENEZUELA FACULTAD DE CIENCIAS ESCUELA DE COMPUTACIÓN Trabajo Especial de Grado presentado ante la Ilustre Universidad Central de Venezuela por el Bachiller Ojeda Malavé, Humberto José C.I. V-20.185.583 Para optar al título de Licenciado en Computación Tutora: Profa. Yosly C. Hernández B. Caracas, 24 de Mayo de 2016 SisGEVI: Sistema Web para la Gestión de Emergencias Viales en Autopistas de la Gran Caracas. Caso de Estudio: Brigadas de Paramédicos del Ministerio del Poder Popular para Transporte Terrestre y Obras Públicas. Agradecimientos El agradecimiento más importante es para Dios, al Nazareno y la Virgen del Valle, por guiarme en todo momento y permitirme llegar a ser la persona que soy. A mi madre Solange Malavé, que siempre estuvo conmigo dándome el apoyo suficiente para cumplir todas mis metas. A mi Abuela, por siempre estar conmigo en las buenas y malas, ella es mi pilar, cada meta y logro que cumplo, es para ella. A mis Tíos Ricardo Malavé y Ronald Malavé, por siempre darme la seguridad y confianza en los momentos más difíciles. A Eilyn Rivero, por ser la mejor compañera de vida de este mundo. Gracias por estar ahí siempre por entenderme, por soportarme y apoyarme en todo lo que me propongo. A la Profa. Yosly C. Hernández, por darme la confianza de realizar este proyecto. Al Personal de la Brigada de Paramédicos por darme la oportunidad de Desarrollar este Sistema. A mis colegas de trabajo: Gustavo, Yami, Yuyo, Caro, Miguel, Geral y entre otros, por su apoyo en mi crecimiento profesional, y por sus constantes ayudas en el desarrollo de este Trabajo de Grado. A mis amigos y compadres de la UCV: Andrés, Jhonatan, Huáscar, Maglo, Anakarenina, Keily, Samuel, Francisco, Frank, Fernando, Félix, Jesús, Andrea, Jedariana, entre otros que estuvieron ahí en los momentos rudos y supieron dar fuerza y apoyo para superarlos. MUCHACHOS SI SE PUDO!!! Dedicatoria Este trabajo está dedicado con mucho orgullo y cariño a mi abuelo Ricardo Malavé, quien falleció el día 15 de noviembre de 2014. Este trabajo lo hago por él y para él, su mayor sueño fue verme graduado y pensando siempre en él, hoy lo estoy cumpliendo. Gracias por todo abuelo, donde quiera que estés, espero te sientas orgulloso. i RESUMEN La Brigada de Paramédicos adscrita al Ministerio del Poder Popular para el Transporte Terrestre y Obras Públicas (MPPTTOP), es la encargada de atender las emergencias ocurridas en las principales arterias viales de la Gran Caracas (Autopista Regional del Centro, Francisco Fajardo, Gran Mariscal de Ayacucho, Prados del Este, Caracas-La Guaira, Valle- Coche, Norte-Sur, Carretera Panamericana). Así como también obtener datos para levantar las estadísticas de los mismos. Ésta efectuaba los registros de los sucesos ocurridos, generando un reporte por cada incidente, en el cual se indicaba tipo de accidente, lesionados, lesiones originadas, resultados de la evaluación preliminar del paciente y las acciones tomadas, el levantamiento de la información se realizaba en forma manual, vaciándose posteriormente en hojas de cálculo de Google Docs (Google, 2006),rayendo como consecuencia, inconsistencias en la información recabada en el hecho y la proporcionada en la hoja de cálculo señalada, mucho tiempo invertido en el proceso de cálculo de estadísticas, por tal razón, como solución se planteó realizar un Sistema Web. El objetivo del Trabajo Especial de Grado (TEG), fue el desarrollo de un Sistema Web para la Gestión de Emergencias Viales en Autopistas de la Gran Caracas (SisGEVI), con la finalidad de gestionar eficiente y eficazmente el proceso de carga de los datos de los accidentes viales. El desarrollo del mismo se realizó empleando una adaptación de la metodología AgilUs (Acosta, 2011) aplicando cada una de sus fases: requisitos, análisis, prototipaje y entrega, utilizando como herramientas de desarrollo los siguientes Frameworks: de lado servidor Laravel 4.2 y de lado del cliente JQuery, Bootstrap y AJAX, y como manejador de base de datos PostgreSQL. Palabras Clave: SisGEVI, accidentes viales, paramédicos, lesionados, gestión de emergencias. ii ÍNDICE GENERAL ÍNDICE DE FIGURAS ......................................................................................................... iv INTRODUCCIÓN .................................................................................................................. 1 Capítulo I: Problema de Investigación ................................................................................... 3 1.1. Contexto de Investigación ...................................................................................... 3 1.2. Problema de Investigación...................................................................................... 4 1.3. Justificación .......................................................................................................... 10 1.4. Objetivos de la Investigación ............................................................................... 11 1.4.1. Objetivo General............................................................................................... 11 1.4.2. Objetivos Específicos ....................................................................................... 11 1.5. Alcance ................................................................................................................. 11 1.6. Metodología de Desarrollo ................................................................................... 12 1.6.1. Ciclo de Desarrollo de AgilUs ......................................................................... 12 1.6.2. Artefactos.......................................................................................................... 13 1.7. Antecedentes ......................................................................................................... 14 Capítulo II: Marco Teórico ................................................................................................... 16 2.1. Sistema Web ......................................................................................................... 16 2.1.1. Características de los Sistemas Web ................................................................ 17 2.1.2. Ventajas y Desventajas de un Sistema Web ..................................................... 18 2.1.3. Beneficios de los Sistemas Web ....................................................................... 19 2.1.4. Ejemplos de Sistemas Web............................................................................... 20 2.1.5. Arquitectura de un Sistema Web ...................................................................... 22 2.1.6. Arquitectura Cliente-Servidor .......................................................................... 22 2.2. Patrón de Diseño Modelo-Vista-Controlador ....................................................... 25 2.3. Tecnologías de Desarrollo Web ........................................................................... 27 2.3.1. Lenguajes del Lado Cliente .............................................................................. 28 2.3.1.1. Lenguaje de Marcado de Hipertexto ................................................................ 28 2.3.1.2. Hojas de Estilo en Cascada ............................................................................... 30 2.3.1.3. Framework Twitter Bootstrap .......................................................................... 31 2.3.1.4. JavaScript ......................................................................................................... 31 2.3.1.5. AJAX ................................................................................................................ 32 2.3.1.6. jQuery ............................................................................................................... 33 2.3.2. Lenguajes del Lado Servidor ............................................................................ 34 2.3.2.1. Servidor Web Apache ....................................................................................... 35 2.3.2.2. Lenguaje Preprocesador de Hipertexto (PHP).................................................. 36 2.3.2.3. Framework MVC .............................................................................................. 37 2.3.2.4. Mapeo de Objeto-Relacional ............................................................................ 37 2.3.2.5. Laravel 4.2 ........................................................................................................ 38 2.4. Sistema Manejador de Base de Datos................................................................... 39 2.4.1. Sistema Manejador PostgreSQL ....................................................................... 39 2.5. Software de Control de Versiones Git .................................................................. 40 iii 2.6. Licencia Pública General ...................................................................................... 41 2.7. Marco Legal .......................................................................................................... 42 2.7.1. Ley de InfoGobierno ........................................................................................ 42 Capítulo III: Marco Aplicativo ............................................................................................. 44 3.1. Fase I: Requisitos ................................................................................................. 44 3.1.1. Entrevistas ........................................................................................................ 44 3.1.2. Tormentas de ideas ........................................................................................... 46 3.1.3. Sondeos ............................................................................................................. 47 3.1.4. Perfil de usuario ................................................................................................ 51 3.1.5. Listas de Requerimientos Funcionales y No Funcionales ................................ 52 3.1.5.1. Requerimientos Funcionales............................................................................. 52 3.1.5.2. Requerimientos No Funcionales ....................................................................... 53 3.2. Fase II: Análisis ................................................................................................... 55 3.2.1. Prototipos de Interfaz........................................................................................ 55 3.2.2. Guías de estilo .................................................................................................. 57 3.2.3. Modelo de Casos de Uso .................................................................................. 59 3.2.4. Modelo de Objeto de Dominio ......................................................................... 62 3.2.5. Diseño Lógico y Físico de la Base de Datos .................................................... 63 3.2.6. Plataforma de Desarrollo .................................................................................. 69 3.3. Fase III: Prototipaje .............................................................................................. 70 3.3.1. Arquitectura del Sistema .................................................................................. 70 3.3.2. Desarrollo del Sistema ...................................................................................... 71 3.3.3. Lista de Comprobación ..................................................................................... 77 3.4. Fase IV: Entrega ................................................................................................... 78 3.4.1. Pruebas de Usabilidad ...................................................................................... 78 3.4.2. Pruebas de Instalación ...................................................................................... 81 Capítulo IV: Resultados ....................................................................................................... 83 Conclusiones ....................................................................................................................... 105 Recomendaciones ............................................................................................................... 107 Referencias ......................................................................................................................... 108 iv ÍNDICE DE FIGURAS FIGURA 1. PÁGINA UNO DE REPORTE DE ATENCIÓN, (MPPTTOP, 2012). ............................. 6 FIGURA 2. PÁGINA DOS DE REPORTE DE ATENCIÓN, (MPPTTOP, 2012). .............................. 7 FIGURA 3. HOJA DE ESTADÍSTICAS, (MPPTTOP, 2012). ........................................................ 8 FIGURA 4. DIAGRAMA DE FLUJO DEL PROCESO DE GESTIÓN DE ACCIDENTES. ....................... 9 FIGURA 5. CICLO DE VIDA DE METODOLOGÍA AGILUS, (ACOSTA, 2011) ............................. 13 FIGURA 6. SITEL, (SITEL, 2006) ......................................................................................... 15 FIGURA 7. PÁGINA PRINCIPAL DEL SISTEMA, (VIT, 2015) .................................................... 20 FIGURA 8. CITA GENERADA POR EL SISTEMA (VIT, 2015) ................................................... 21 FIGURA 9. SISTEMA DE GESTIÓN DE PASANTÍAS (SIGEPAS, 2012). .................................... 22 FIGURA 10. MODELO CLIENTE-SERVIDOR, (E-DUCATIVA, 2000) .......................................... 23 FIGURA 11. ARQUITECTURA DE TRES CAPAS, (SÁNCHEZ, 2004) .......................................... 25 FIGURA 12. PATRÓN MVC, (POTENCIER, 2002) ................................................................... 26 FIGURA 13. LENGUAJES DE PROGRAMACIÓN DEL LADO DEL SERVIDOR, (W3TECHS, 2015). 35 FIGURA 14. ARQUITECTURA DE LARAVEL, (VELASQUEZ, 2013) ........................................... 38 FIGURA 16. TORMENTA DE IDEAS REALIZADA EN EL MPPTTOP ......................................... 46 FIGURA 17. RESULTADOS PREGUNTA 1................................................................................. 47 FIGURA 18. RESULTADOS PREGUNTA 3................................................................................. 48 FIGURA 19. IMAGEN DE SONDEO........................................................................................... 49 FIGURA 20. RESULTADOS PREGUNTA 4................................................................................. 49 FIGURA 21. RESPUESTA PREGUNTA 5. .................................................................................. 50 FIGURA 22. RESULTADOS PREGUNTA 6................................................................................. 50 FIGURA 23. INTERFAZ DE LOGIN ........................................................................................... 55 FIGURA 24. INTERFAZ PRINCIPAL ......................................................................................... 56 FIGURA 25. INTERFAZ DE REPORTE DE ATENCIÓN PÁGINA 1 ................................................ 56 FIGURA 26. INTERFAZ REPORTE DE NOVEDADES .................................................................. 57 FIGURA 27. CASO DE USO NIVEL 0. ...................................................................................... 59 FIGURA 28. CASO DE USO NIVEL 1. ...................................................................................... 60 FIGURA 29. CASO DE USO NIVEL 1, ACTOR COORDINADOR. ................................................ 60 FIGURA 30. CASO DE USO NIVEL 1, ACTOR RADIO OPERADOR. ........................................... 61 FIGURA 31. CASO DE USO NIVEL 1, ACTOR PARAMÉDICO. ................................................... 61 FIGURA 32. DIAGRAMA DE OBJETO DE DOMINIO. ................................................................. 63 FIGURA 33. TABLAS DE LA BD DE SISGEVI. ........................................................................ 64 FIGURA 34. MODELO RELACIONAL DE SISGEVI. ................................................................. 68 FIGURA 35. PLATAFORMA DE DESARROLLO. ........................................................................ 69 FIGURA 36. ARQUITECTURA DE SISGEVI ............................................................................. 71 FIGURA 37. CONFIGURACIÓN DE CONEXIÓN DE BD .............................................................. 71 FIGURA 38. EJEMPLO DE MIGRACIÓN, TABLA DE PARAMÉDICOS.......................................... 72 FIGURA 39. EJECUCIÓN EXITOSA DEL COMANDO MIGRATE .................................................. 72 FIGURA 40. MODELO DE LA TABLA PLANILLAS .................................................................... 73 FIGURA 41. CONTROLADOR DEL MODELO PLANILLA ........................................................... 73 FIGURA 42. ARCHIVO RUTAS DE SISGEVI ........................................................................... 74 v FIGURA 43. PARTE DEL CÓDIGO DE INICIAR SESIÓN. ............................................................ 75 FIGURA 44. PLANTILLA BASE.BLADE.PHP ............................................................................. 75 FIGURA 45. VISTA DE LA PÁGINA DE LOGIN. ......................................................................... 76 FIGURA 46. SISTEMA EJECUTÁNDOSE EN AMBIENTE DEL MPPTTOP. ................................. 81 FIGURA 47. SISTEMA EJECUTÁNDOSE EN AMBIENTE DEL MPPTTOP. ................................. 83 FIGURA 48. PÁGINA PRINCIPAL DE SISGEVI ........................................................................ 84 FIGURA 49. CABECERA DE SISGEVI. .................................................................................... 84 FIGURA 50. PIE DE PÁGINA DE SISGEVI. .............................................................................. 85 FIGURA 51. BOTÓN DE INICIO DE SESIÓN EN SISGEVI. ........................................................ 85 FIGURA 52. PÁGINA DE INICIO DE SESIÓN DE SISGEVI ........................................................ 85 FIGURA 53. RESTABLECER CONTRASEÑA DE SISGEVI. ........................................................ 86 FIGURA 54. CASO ÉXITO DE RESTABLECER CONTRASEÑA DE SISGEVI. .............................. 86 FIGURA 55. CORREO DE CONTRASEÑA DE SISGEVI. ............................................................ 87 FIGURA 56. FORMULARIO DE RECUPERACIÓN DE CONTRASEÑA DE SISGEVI....................... 87 FIGURA 57. TOKEN VALIDADO DE SISGEVI. ........................................................................ 87 FIGURA 58. CONTRASEÑA CAMBIADA EXITOSAMENTE DE SISGEVI. ................................... 88 FIGURA 59. PANTALLA DE SELECCIÓN DE ROL DE SISGEVI ................................................. 88 FIGURA 60. BARRA DE NAVEGACIÓN DE SISGEVI ............................................................... 88 FIGURA 61. DESPLEGABLE PARA COORDINADOR .................................................................. 89 FIGURA 62. EDITAR USUARIO DE SISGEVI ........................................................................... 89 FIGURA 63. EDITAR USUARIOS DE SISGEVI ......................................................................... 89 FIGURA 64. PANTALLA PRINCIPAL DE RADIO OPERADOR DE SISGEVI ................................. 90 FIGURA 65. VENTANA EMERGENTE DE PREASIGNACIÓN DE SISGEVI. ................................. 90 FIGURA 66. PREASIGNACIÓN CORRECTA DE CASO ................................................................ 91 FIGURA 67. REPORTES DE NOVEDADES DE SISGEVI. ........................................................... 92 FIGURA 68. REPORTE DE NOVEDADES ABIERTOS Y CERRADOS DE SISGEVI. ....................... 92 FIGURA 69. PANTALLA DE CARGA DE REPORTE DE NOVEDADES DE SISGEVI. .................... 93 FIGURA 70. CASO EXTRA DE SISGEVI. ................................................................................ 94 FIGURA 71. ACTUALIZACIÓN DE REPORTE DE NOVEDAD. ..................................................... 94 FIGURA 72. REPORTE CARGADO CORRECTAMENTE .............................................................. 94 FIGURA 73. VERIFICAR CASOS ASIGNADOS .......................................................................... 95 FIGURA 74. PANTALLA PRINCIPAL DE MODULO PARAMÉDICO DE SISGEVI. ........................ 95 FIGURA 75. BOTÓN DE CARGA DE REPORTE DE SISGEVI ..................................................... 95 FIGURA 76. PANTALLA DE CARGA DE REPORTE DE ATENCIÓN DE SISGEVI......................... 96 FIGURA 77. REPORTE DE ATENCIÓN CARGADO DE SISGEVI ............................................... 96 FIGURA 78. INTERFAZ PRINCIPAL DE COORDINADOR ............................................................ 97 FIGURA 79. CREACIÓN DE REPORTES ESTADÍSTICOS ............................................................ 97 FIGURA 80. INTERFAZ DE RESULTADO DE ESTADÍSTICAS. .................................................... 98 FIGURA 81. GRAFICA DE RESULTADO DE ESTADÍSTICAS EN SISGEVI. ................................. 98 FIGURA 82. ESTADÍSTICAS EXPORTADAS EN FORMATO CSV. .............................................. 99 FIGURA 83. OPCIÓN DE BÚSQUEDA DE SISGEVI .................................................................. 99 FIGURA 84. BARRA DE BÚSQUEDA DE SISGEVI ................................................................... 99 FIGURA 85. CASO ENCONTRADO ........................................................................................ 100 FIGURA 86. REPORTE ATENCIÓN EN SISGEVI .................................................................... 100 FIGURA 87. REPORTE ATENCIÓN EN FORMATO PDF. ......................................................... 101 vi FIGURA 88. REPORTE DE NOVEDAD VISTO VÍA WEB. ........................................................ 101 FIGURA 89. REPORTE DE NOVEDAD EN FORMATO PDF. ..................................................... 102 FIGURA 90. OPCIÓN DE CREACIÓN DE USUARIO EN SISGEVI. ............................................ 102 FIGURA 91. PANTALLA DE CREACIÓN DE USUARIOS EN SISGEVI. ..................................... 103 FIGURA 92. CREACIÓN CORRECTA DE PARAMÉDICO .......................................................... 103 FIGURA 93. OPCIÓN DE CREACIÓN DE USUARIO EN SISGEVI. ............................................ 103 FIGURA 94. PANTALLA DE CARGA DE USUARIOS EN SISGEVI. .......................................... 104 FIGURA 95. ARCHIVO EJEMPLO PARA CARGA DE USUARIOS. ............................................. 104 FIGURA 96. CREACIÓN CORRECTA DE PARAMÉDICOS. ........................................................ 104 vii ÍNDICE DE TABLAS TABLA 1. GUÍA DE ESTILO DE SISGEVI ................................................................................ 57 TABLA 2. ESPECIFICACIÓN CU INICIAR SESIÓN .................................................................... 62 TABLA 5. LISTA DE COMPROBACIÓN ..................................................................................... 77 TABLA 6. ESTÁNDARES DE USABILIDAD. (ACOSTA, 2011) .................................................... 78 TABLA 7. RESULTADOS DE PRUEBA DE USABILIDAD ............................................................ 79 1 INTRODUCCIÓN La incorporación de las Tecnologías de la Información en los procesos permite redefinirlos, alcanzando grados de eficacia y eficiencia inimaginables. Las organizaciones que sean capaces de descubrir estas posibilidades e implantarlas correctamente, conseguirán ventajas competitivas debido a la disminución de costes y el aumento de flexibilidad frente a los requerimientos de los clientes. En cualquier proceso en el que existan intercambios de información, el impacto de éstas es muy importante, tanto que redefinen totalmente el proceso. Es debido a que toda la información podrá ser “digitalizable” y por tanto gestionada automáticamente, empleando los sistemas de Información y pudiendo ser comunicada a coste cero empleando las redes (Intranet, Extranet e Internet) (Navarro, 2002). Debido a la puesta en práctica de sistemas que facilitan y mejoran los tiempos de respuesta en los procesos, el presente Trabajo Especial de Grado (TEG) desarrolló un Sistema Web para la Gestión de Accidentes Viales (SisGEVI), con la finalidad de brindar mayor eficacia y eficiencia al proceso de carga de la información de los incidentes que ocurren en las principales autopistas de la Gran Caracas (Autopista Regional del Centro, Francisco Fajardo, Gran Mariscal de Ayacucho, Prados del Este, Caracas-La Guaira, Valle-Coche, Norte-Sur, Carretera Panamericana), así como la generación de informes estadísticos realizados por la Brigada de Paramédicos, adscrita al Ministerio del Poder Popular para el Transporte Terrestre y Obras Públicas (MPPTTOP), los cuales son remitidos a las Máximas Autoridades, a fin de que se tomen los correctivos necesarios. SisGEVI está conformado por tres (3) módulos: El primer módulo es el del tipo de usuario Coordinador, que se encarga de generar los reportes estadísticos y la creación de nuevos usuarios en el sistema; el segundo es el de Radio Operador, que es el responsable de la preasignación de los casos de atención y el tercero es el de Paramédico, que es en donde se realiza la carga de todos los reportes de atención vinculados a los incidentes que se suceden en las principales autopistas de la Gran Caracas. 2 En virtud de lo expuesto el presente Trabajo Especial de Grado (TEG), consta de cuatro (4) capítulos, los cuales se describen a continuación: Capítulo I: Problema de Investigación. Señala el Contexto de la Investigación, Planteamiento del Problema, la Justificación e Importancia del Trabajo de Investigación; así como el Objetivo General y los Objetivos Específicos. Adicionalmente, el Alcance del Trabajo y una descripción de la Metodología de Desarrollo utilizada. Capítulo II: Marco conceptual. Presenta el sustento teórico acerca de las tecnologías web que se utilizaron para el desarrollo del TEG planteado en el sistema. Se agrupan en tecnologías del lado del cliente, conformadas por HTML, CSS, JavaScript, jQuery y AJAX; y tecnologías del lado del servidor como PHP y Laravel. Capítulo III: Marco Aplicativo. Describe los aspectos relevantes relacionados a la metodología de desarrollo de software AgilUs y se especifican las bases y las etapas que la componen. Así mismo, se exponen las fases de requisitos y análisis de la metodología aplicada en el TEG, detallando las actividades realizadas, los artefactos generados, las pruebas y entregas efectuadas. Capítulo IV: Resultados. Muestra el funcionamiento de SisGEVI, reflejando cada una de sus funcionalidades. Finalmente, se exponen las conclusiones, las recomendaciones, las referencias bibliográficas así como el Manual Técnico y de Usuarios del Sistema que brindan soporte al Trabajo Especial de Grado. 3 Capítulo I: Problema de Investigación En este capítulo se describe la situación identificada en lo referente a la gestión de accidentes viales de la Brigada de Paramédicos del MPPTTOP, los planteamientos que justificaron el problema, objetivos generales y específicos, alcance y metodología aplicada en este TEG. 1.1. Contexto de Investigación Esta investigación se contextualizó en la Brigada de Paramédicos, adscrita a la Dirección General de Infraestructura y Vialidad del MPPTTOP, creados el 8 noviembre de 2013, integrada por profesionales especialistas en atención médica primaria, distribuidos en los 220 Km de vías expresas que comprende la Gran Caracas, para brindar mayor seguridad y mejorar la atención vial (MPPTTOP, 2015). Las principales funciones de esta brigada son (MPPTTOP, 2015):  Brindar Atención de emergencias por trauma, médicas y todo lo que obstruya el libre tránsito.  Realizar el registro de los incidentes atendidos. La Brigada garantiza la atención en las Autopistas de la Gran Caracas, que se señalan:  Autopista Regional del Centro (km 0 al distribuidor los Totumos km 44).  Autopista Francisco Fajardo.  Autopista Gran Mariscal de Ayacucho.  Autopista Caracas La Guaira.  Autopistas Valle-Coche.  Norte-Sur.  Carretera Panamericana. 4  Autopista Prados del Este. Posee como eje de acción dos (2) sedes principales que se ubican en la Autopista Francisco Fajardo y la Valle Coche; así como también cuatro (4) campamentos auxiliares, ubicados en La Urbina, Plaza Venezuela, La Paz y Cota Mil. Se encuentran organizados en de cuatro (4) Grupos de Guardia, distribuidos en dos (2) zonas, Zona Este que comprende las vías que van desde Plaza Venezuela hasta la Autopista Gran Mariscal de Ayacucho y Zona Sur que abarca desde el Oeste de la ciudad, incluyendo la Autopista Caracas- La Guaira, Norte-Sur y la Carretera Panamericana. Éstos conformados por 19 paramédicos, que son los encargados de atender a las víctimas. En las sedes principales se ubican ocho (8) Radio Operadores que mantienen comunicación directa con los Paramédicos de guardia, para informar sobre cualquier eventualidad que se presente en su radio de acción, así como por tres (3) coordinadores y un (1) jefe de división. (MPPTTOP, 2012) Están dispuestos las 24 horas del día, los 365 días del año, prestando atención a cualquier eventualidad que ocurra en las mencionadas vías, sea un accidente vial, entendido éste como el hecho en el cual se involucra el factor humano, el vehículo y la vía dentro de su ambiente determinado, para producir una colisión o choque que trae como consecuencia daños materiales, personas lesionados(as) y muertas, o cualquier otro motivo de atención. Las personas beneficiadas por la brigada son los usuarios de estas arterias viales: motorizados, vehículos livianos, pesados, transporte público y privado (MPPTTOP, 2012). 1.2. Problema de Investigación En las autopistas de la Gran Caracas, anteriormente señaladas, frecuentemente suceden accidentes (ver concepto en Anexo A) tales como: colisión vehicular, de motocicletas, derrapes, volcamientos, entre otros y son clasificados de acuerdo a su magnitud, es por ello que desde el año 2013, la Brigada de Paramédicos del MPPTTOP, ha venido efectuando el levantamiento de información sobre los incidentes que ocurren en las principales arterias viales, en esta situación intervienen dos (2) tipos de funcionarios, el Radio Operador, quién es el encargado de monitorear y transmitir la información de los sucesos ocurridos y, el Paramédico, es el responsable de brindar 5 asistencia a las víctimas, este proceso que ha realizado la Brigada de Paramédicos del MPPTTOP se efectúa de la siguiente manera: a. Al ser reportado un accidente vial (ver concepto en Anexo A) en cualquiera de las Autopistas de la Gran Caracas, el Radio Operador notifica al grupo de guardia de la zona donde se produjo el accidente, para que se designe un Paramédico que se traslade al sitio del incidente a fin de prestar la atención correspondiente. b. El Paramédico asignado se comunica con el Radio Operador de turno, quien es el encargado del monitoreo del incidente, éste le asigna un número de caso asociado al accidente reportado. Durante la contingencia existe constante comunicación entre el Radio Operador y el Paramédico asignado, quien notifica sobre la hora de llegada al sitio, las unidades que se aproximaron al lugar, las acciones que se tomaron y cualquier otra información que sea necesaria al momento que concluya el levantamiento del accidente. c. El Radio Operador durante todo el proceso es informado por el paramédico a través de los reportes emitidos vía radio, para así tener el registro de todo lo acontecido, llenando el Libro de Novedades de la Brigada, que contiene toda la información suministrada por el paramédico (tipo de accidente, hora de llegada, hora de culminación de proceso, entre otra), al dar por culminado el incidente, se da por finalizado el reporte correspondiente en el señalado libro. d. En el lugar de los hechos el Paramédico que atiende la situación, toma nota de toda la información necesaria en la Planilla de Reporte: zona donde ocurrió el accidente, datos del lesionado, evaluación inicial, tipo de lesiones, incidente (falsa alarma, colisión simple o múltiple), datos pertinentes para el correcto vaciado de la respectiva planilla. Este proceso se desarrolla cada vez que ocurre un accidente acumulándose así innumerables planillas diarias por incidente. En la Figura 1 se puede apreciar el contenido de la página uno (1) de la planilla de Reporte de Atención, que contiene el primer segmento de datos que se recogen durante el incidente, como el número de caso, el Grupo de Guardia a cual pertenece 6 el Paramédico, ubicación, fecha y hora del suceso, tipo de atención, identificación del paciente y la evaluación inicial. Figura 1. Página Uno de Reporte de Atención, (MPPTTOP, 2012). C.I.: Sexo: Uso de cinturón Airbag inflado Casco Volante deformado Tablero deformado Butaca desplazada Parabrisas roto Ventana rota Salió solo del vehículo Salió con ayuda Otro: Asma EPOC No Permeable No Forzada Tórax Asimétrico Presentes Claros Disminuidos Ausente Sibilantes Crepitantes SpO2: O2: Lts x Min Piel/ Mucusas: Fría Pulsos: Grupo de Guardía: REPÚBLICA BOLIVARIANA DE VENEZUELA MINISTERIO DEL PODER POPULAR PARA EL TRANSPORTE TERRESTRE VIALIDAD Y CONSTRUCCIONES SUCRE, S. A. BRIGADA DE RESTABLECIMIENTO VIAL Y ATENCIÓN DE EMERGENCIAS REPORTE DE ATENCIÓN Fecha: / / Día: Caso N°: Unidad: Hora llegada escena: Traslado: Lugar del suceso: Hora de llamada: Hora de salida: Nombre: Hora llegada CA 1: Hora llegada CA 2: Caídas Edad: Centro asistencial 1: Teléfono: Centro asistencial 2: Dirección del Paciente: MECANISMO DE LESIÓN OTRAS CAUSAS DE TRAUMA 1) Colisión en Moto HPPP Quemaduras Por: Colisión Vehicular HAB Colisión En: Otro: Frontal CAUSAS MÉDICAS Posterior Gin/Obs. ACV Lateral IM Dolor Abdominal Volcamiento de: Sind. Convulsivo Otras Observaciones: Arrollamiento de: Especifíque: 2) Contra otro Auto Contra otra Moto HISTORIA AMPLIA Contra: Alergico a: Contra Objeto Fijo Medicamentos que toma: Permeable Patologías Previas: HTA EVALUACIÓN INICIAL Cardiopatía Isquémica Diabetes Paciente Consciente Paciente Inconsciente Otras: VÍA AÉREA/VENTILACIÓN Especifíque: Derecho Izquierdo Frecuencia Respiratoria: Forzada Hora última comida: Tórax Simétrico Ingesta de OH: Si No ¿Traquea desviada? Si No ¿Embarazo? Si Fur: No Normal Seca Pálida Cianótica Sonidos Respiratorios: IDENTIFIQUE EL SITIO DE LA LESIÓN CON EL NÚMERO CORRESPONDIENTE Derecho Izquierdo Derecho Izquierdo Derecho Izquierdo Derecho Izquierdo Derecho Izquierdo vía: Observaciones: CIRCULACIÓN Observaciones: Especifíque: Sudorosa Caliente Normal Lugar 1. Herida 6. Fractura 11. Avulsión Débil Lugar 2. Excoriación 7. Hd. Penetrante 12. Luxación Ausente Lugar 3. Hematoma 8. Quemadura 13. Esguince FC1: x' FC2: x' 4. Traumatismo 9. Amputación 14. T.C.E. TA1: / MMHG TA2: / MMHG 5. Deformidad 10. Edema 15. Otros 7 En la Figura 2 se observa la página dos (2) de la planilla de Reporte de Atención, que contiene los resultados de las evaluaciones neurológicas, información sobre procedimientos realizados, autorización para uso de medicamentos, entre otros aspectos relevantes del accidente, así como los datos del Paramédico. Figura 2. Página Dos de Reporte de Atención, (MPPTTOP, 2012). 4 3 2 1 0 Apertura Ocular Respuesta Verbal Respuesta Motora Intubación Endotraq. Tubo N° NEUROLÓGICO PROCEDIMIENTOS REALIZADOS Escala de Glasgow: BVM Succión 1 2 3 4 1 2 3 4 5 1 2 3 4 5 6 Cánula orofaringea KED Total: /15 Puntos Ventilación Mec. Collarín Líquidos IV: DEA Apertura Ocular Respuesta Verbal Respuesta Motora Cantidad Solución Reactiva mm mm Oxigeno Terapia con: 1 2 3 4 1 2 3 4 5 1 2 3 4 5 6 RCP Tiempo Catéter N° Total: /15 Puntos Scooper Inmovilizador Univ Reacción Pupilar: Isocóricas Anisocóricas Control de Hemorragía Tamaño OI Tamaño OD Tabla Larga Miótica mm mm Limpieza deHerida/Excoriación Lenta mm mm Férulas de Tracción Midriática mm mm Ferulas de: Sin respuesta mm mm Evaluación Completa Observaciones: Otro: Vía de Adm. IV IM SC SL O AUT. PARA EL USO DE MEDICAMENTOS Medicamento: Dosis Paciente Recibido en el Servicio de: Centro Asistencial: Médico que recibe: Vía de Adm. IV IM SC SL O SCORE REVISADO DE TRAUMA Medicamento: Dosis Glasgow P. Sistólica FR Valor Médico: MSDS CI: Observaciones: Total: Puntos NEGATIVA DE ATENCIÓN O TRASLADO Yo, C.I. en pleno uso de mis facultades, trasladado a un centro asistencial recibir atención alguna por el personal del Servicio Prehospitalario Observaciones: Nombre: Credencial: PARAMÉDICOS QUE APOYAN LA ATENCIÓN Nombre: MSDS: Firma: PARAMÉDICO QUE REALIZA LA HISTORIA adscrito al Ministerio del Poder Popular Para El Transporte Terrestre. Decisión que mantengo bajo mi responsabilidad, en Caracas a los días del mes de 2 Firma del paciente o familiar Observaciones: Supervisor de Guardía: Credencial: Nombre: Credencial: Observaciones Generales / Organismos Presentes: 8 e. Al finalizar su turno, el Paramédico procede a la carga de los datos a una hoja de cálculo en formato Excel de Google Docs. (Google, 2006), donde se vacía la información de todas las planillas que se hayan generado durante el período de trabajo, esta actividad se realiza para que el Radio Operador lleve un control de todos los accidentes ocurridos diariamente. f. Los Paramédicos consignan las planillas de Reporte de Atención a los Coordinadores de la Brigada, quienes se encargan de procesar los datos para elaborar los reportes estadísticos por: zona de atención, tipo de atención, edad, sexo y unidad, para validar y obtener las estadísticas, contando cada ítem de la planilla del Reporte, y vaciarlos en las Hojas de Cálculo de Google (Google, 2006). En la Figura 3 se muestra parte del mencionado documento con los datos estadísticos ya calculados y clasificados, con el objeto de mostrar la frecuencia de accidentes ocurridos en las distintas autopistas en un rango de tiempo (días, semanas, meses, semestre, año) Figura 3. Hoja de Estadísticas, (MPPTTOP, 2012). En la Figura 4 se puede apreciar a través de un diagrama de flujo cómo se desarrollaba el proceso anteriormente descrito: 9 Figura 4. Diagrama de Flujo del Proceso de Gestión de Accidentes. Con base en la situación descrita, se constató que todas las actividades referentes al levantamiento de información y cálculo de estadísticas eran realizadas de manera manual, para después cargar los reportes en las herramientas de hojas de cálculos, generando el surgimiento de un conjunto de problemas, entre los que se destacan:  El extravío o pérdida de datos, debido a que la carga de la información se efectuaba una vez terminada la jornada de turno del paramédico, lo que conllevaba a que el funcionario no recordara el número de caso asignado y, por ende no coincidía con el otorgado por el radio operador.  Los Reportes Estadísticos, obtenidos por zona, tipo de atención, edad, sexo y unidad, se hacían de forma periódica y manual, resultando este trabajo bastante complejo, debido a que se contaban uno a uno los ítems de los reportes de atención, lo cual traía como consecuencia inconsistencia en los datos, motivado al error en el proceso de conteo.  Los Paramédicos realizaban el vaciado de la información recolectada al finalizar su turno, lo que conllevaba a que se olvidara la carga del número de caso asignado, lo que causa la no coincidencia al realizar la conciliación entre las planillas y lo cargado en las hojas de cálculo de Google Docs. (Google, 2006). 10  Con cierta frecuencia el libro de novedades y los reportes de atención no concordaban, trayendo como consecuencia que se debía iniciar el proceso de identificación del incidente nuevamente para así poder detectar las diferencias. Por todo lo antes mencionado, se plantea como pregunta de investigación: ¿De qué forma se puede mejorar el proceso de Gestión de Accidentes Viales de la Brigada de Paramédicos del MPPTTOP? La respuesta es, desarrollando un Sistema Web. 1.3. Justificación Debido a la inconsistencia existente entre los datos recabados por la Brigada de Paramédicos en un incidente vial y los registrados en los Reportes de Atención, se desarrolló SisGEVI que ha permitido que este trabajo se ejecute de manera consistente. El Desarrollo de SisGEVI permitió solventar la problemática existente, ya que se ha disminuido el riesgo que se presentaba al momento de la carga de la información y de la generación de estadísticas. A través de SisGEVI la Brigada de Paramédicos logro obtener los siguientes beneficios:  Se contribuyó al ahorro de tiempo, dedicación y esfuerzo por parte de los coordinadores, en el cálculo de las estadísticas, ya que el sistema lo realiza automáticamente, cada vez que se requiera.  Se disminuyeron los errores que existían durante la realización de las actividades elaboradas manualmente.  Se contribuyó con el medio ambiente, ya que se ahorra papel al no tener que imprimir los Reportes de Atención para ser llenado. Cada uno de los beneficios mencionados, permitieron que el proceso de Gestión de Accidentes Viales, sea rápida y eficiente para todos aquellos usuarios involucrados en el mismo. La importancia del desarrollo de un sistema web para la gestión del proceso de carga de Reportes 11 de Atención, se basó en primer lugar en la absoluta disponibilidad de las herramientas que pudieron utilizarse en cualquier computador o dispositivo móvil, motivado al diseño adaptativo del SisGEVI. Haciendo uso de la tecnología, se soluciona la problemática planteada anteriormente, así como también se optimizó la ejecución de las tareas administrativas. 1.4. Objetivos de la Investigación 1.4.1. Objetivo General Desarrollar un Sistema Web para la Gestión de Emergencias Viales en las autopistas de la Gran Caracas, SisGEVI. 1.4.2. Objetivos Específicos 1. Definir los requerimientos funcionales y no funcionales que proveerá el sistema según las necesidades de cada usuario. 2. Desarrollar la arquitectura de SisGEVI. 3. Desarrollar la interfaz de usuario que utilizara SisGEVI. 4. Determinar el modelo lógico y físico de la Base de Datos del SisGEVI 5. Instalar el SisGEVI en el servidor proporcionado por el MPPTTOP. 6. Aplicar pruebas de aceptación, funcionalidad y usabilidad al SisGEVI. 1.5. Alcance El alcance del presente TEG abarcó la conceptualización, diseño e implementación de una Sistema Web con funcionalidades que automaticen el sistema de gestión de accidentes que se llevaba en la Brigada de Paramédicos. Este permite el registro de los accidentes viales sucedidos 12 en la Gran Caracas, que comprende el Distrito Metropolitano de Caracas, y los estados Miranda y Vargas. La generación de los reportes de atención y las estadísticas de los accidentes vía web se podrán realizar en computadoras de escritorio y dispositivos móviles (tabletas o teléfonos inteligentes), debido a su diseño adaptable o responsive utilizado en el desarrollo del mismo. 1.6. Metodología de Desarrollo La metodología de desarrollo utilizada fue AgilUs, que se define como un método de desarrollo ágil que toma en cuenta la usabilidad a tempranas etapas del desarrollo de software. Es una metodología en la cual la usabilidad, usuarios e interacciones con el sistema son tan importantes como los procesos y herramientas, donde el funcionamiento del software es más relevante que una documentación exhaustiva. Por lo tanto, la construcción y desarrollo de las interfaces de usuario debe ser tomada en cuenta desde el inicio para así alcanzar el objetivo primordial: dar usabilidad al usuario final. (Acosta, 2011). 1.6.1. Ciclo de Desarrollo de AgilUs Según (Acosta, 2011) el proceso de desarrollo de software de AgilUs engloba cinco (5) etapas las cuales son:  Requisitos: se hace el levantamiento de requerimientos, para la cual se realizan actividades como: tormenta de ideas, entrevistas, sondeos o cuestionarios, además se crean los perfiles de usuario y se listan los requerimientos funcionales y no funcionales.  Análisis: se utilizan diagramas realizados bajo la notación estándar del Lenguaje de Modelado Unificado (UML, por sus siglas en inglés Unified Modeling Language), específicamente los Modelos de Casos de Uso y Objeto De Dominio, con esto se definen las funcionalidades del sistema. 13  Prototipaje: se desarrolla un prototipo rápido de la interfaz de usuario a partir de los patrones de interacción, al cual se le van incorporando funcionalidades hasta llegar al producto final.  Entrega: se tiene el software final al que se le realizan pruebas que certifiquen que es un software usable y sin errores, para ello se utilizan las pruebas de aceptación. En la Figura 5 se puede apreciar el ciclo de vida de AgilUs (Acosta, 2011): Figura 5. Ciclo de Vida de Metodología AgilUs, (Acosta, 2011) 1.6.2. Artefactos Según (Acosta, 2011) cada etapa de la metodología, posee sus propios artefactos, a continuación se describen los que se usaron en el proceso de desarrollo de este proyecto: entrevistas, tormentas de ideas, sondeos, perfil de usuario, guías de estilo, listas de requerimientos funcionales y no funcionales, modelo de casos de uso y de objeto de dominio y pruebas de aceptación. 14 Plantea el desarrollo de un sistema, partiendo de un prototipo de interfaz de usuario y de la evaluación de usabilidad desde el inicio del sistema, por tal razón se decidió utilizar esta metodología, debido a que la usabilidad es importante en el éxito de un software dirigido a un grupo de usuarios, se desarrolló un sistema de fácil uso y aprendizaje, donde el diseño de una interfaz usable fue fundamental. 1.7. Antecedentes Para el año 2015, en Venezuela no se tiene evidencias de la existencia de un sistema web que le permita a un ente estadal que presta atención en las emergencias viales gestionar de manera rápida y eficiente cualquier accidente vial o servicio prestado en las principales autopistas. Sin embargo, a nivel internacional se encontraron dos (2) sistemas que facilitan las gestiones viales de los países donde se utilizan. Dichos sistemas son:  PTV Vistad (PTV Group, 2000): la República Federal de Alemania pone a disposición de las autoridades competentes o las comisiones de investigación de accidentes (formadas por la policía, las autoridades de transporte y el servicio de la red viaria) una herramienta que sirve como plataforma central para registrar, validar y analizar de una manera óptima datos sobre accidentes que abarcan a varias autoridades competentes.  Sistema de Información Territorial Estatal en Línea (SITEL) (SITEL, 2006): en México, específicamente en el estado de Jalisco, se encuentra en práctica SITEL, el cual tiene como objetivo la integración de la información geográfica que se produce a nivel estatal, regional y municipal para su publicación, distribución y uso a través de Internet. Este proyecto integra más de dos mil quinientas (2,500) capas de información que pueden consultarse en línea y publica más de setenta (70) servicios Web para que los usuarios puedan acceder a imágenes y cartografía vectorial a través de Internet mediante Sistemas de Información Geográfica (SIG) y otras aplicaciones. Dentro de este portal pueden encontrar los siguientes servicios de información: visualización de cartografía en línea, descargas de archivos, aplicaciones en Google Maps. En la Figura 6 se puede apreciar un ejemplo del Sistema SITEL, mostrando un mapa de Jalisco donde se observan diversos accidentes y su tipo: 15 Figura 6. SITEL, (SITEL, 2006) Los sistemas anteriormente descritos, tiene relación con el SisGEVI, debido a que ambos sistemas facilitan la información relacionada con los accidentes viales ocurridos en los países donde se aplican. Permitiendo la obtención de datos que generan información estadística para ser utilizada por los actores involucrados. En este capítulo se enfatizó el problema de investigación que nos condujo a la realización de un Sistema Web como solución, fue definido el objetivo general y los objetivos específicos, para el correcto desarrollo del proyecto, también fue estimado el alcance y seleccionada la metodología a ser utilizada y por último los antecedentes que preceden a SisGEVI En el siguiente capítulo se detallará, el sustento teórico de los Sistemas Web y las tecnologías, frameworks y licencias que permitieron el desarrollo de SisGEVI. 16 Capítulo II: Marco Teórico En este capítulo se presenta el sustento teórico relacionadas con el trabajo de investigación, que sirven de fundamento para el desarrollo del TEG. El mismo se divide en dos grandes secciones, las cuales se describen a continuación: La primera sección, hace referencia a lo que es un Sistema Web, así como también, sus principales características, ventajas y desventajas. Se explica además la arquitectura Cliente- Servidor, sus componentes para luego enumerar sus principales ventajas. Finalmente, se explicará el patrón de diseño MVC (Modelo-Vista-Controlador), que se encarga de separar las funciones del cliente, el servidor Web y el servidor de Base de Datos. La segunda sección, describe los recursos tecnológicos necesarios para el desarrollo de SisGEVI, se definen las tecnologías del lado del cliente las cuales son: HTML, CSS, JavaScript, Boostrap, JQuery y AJAX, las tecnologías del lado del servidor, tales como: Apache y PHP y las del servidor de bases de datos PostgreSQL 2.1. Sistema Web Según Mosquera (2009), se define como un sistema de información que utiliza una arquitectura para proporcionar información (datos) y funcionalidad (servicios) a usuarios finales a través de una interfaz de usuario basada en presentación e interacción sobre dispositivos con capacidad de trabajar en la web. Los Sistemas Web varían ampliamente en su ámbito, desde sistemas de información hasta sistemas de transacciones, incluso de servicios web distribuidos. Por lo general, manejan una gran cantidad de datos, que se encuentra en fuentes heterogéneas, se maneja en distintos formatos, y un conjunto de componentes que están por lo general codificados en diferentes lenguajes de programación y están distribuidos en diferentes plataformas. 17 Para esta investigación tomamos el concepto de Sistema Web como una infraestructura para la entrega de información, la cual debe proporcionar una infraestructura de desarrollo y mantenimiento que permita manejar e interpretar los datos y que proporcione funcionalidades a los usuarios finales para capturar, almacenar, procesar y mostrar la información, dando solución a sus necesidades. 2.1.1. Características de los Sistemas Web De acuerdo a Good (2015), algunas de las principales características de los Sistemas Web son: a. Compatibilidad multiplataforma: tienen un camino mucho más sencillo para la portabilidad multiplataforma que las aplicaciones de escritorio. Varias tecnologías incluyendo Java, Flash, ASP y Ajax permiten un desarrollo efectivo de programas soportando todos los sistemas operativos principales (Windows, Linux, MacOS). b. Actualización: están siempre actualizadas con la última versión sin requerir que el usuario tome acciones pro-activas, y sin necesitar llamar la atención del usuario o interferir con sus hábitos de trabajo con la esperanza de que va a iniciar nuevas descargas y procedimientos de instalación. c. Acceso Inmediato: no necesitan ser descargados, instaladas y configurados. Para su acceso, simplemente se requiere hacer uso de un navegador web y conexión a Internet como se hizo mención anteriormente. d. Facilidad de prueba: no existen obstáculos para permitir pruebas sencillas y efectivas, antes de realizar una operación que afecta la realidad como por ejemplo cargar la tarjeta de crédito, es decir poder simular este tipo de operaciones. e. Múltiples usuarios concurrentes: pueden ser accedidas por miles de usuarios al mismo tiempo. No hay necesidad de compartir recursos cuando múltiples usuarios pueden ver e incluso editar el mismo documento de manera conjunta. 18 Los Sistemas Web se consideran altamente novedosos, ya que permiten tener acceso a las diferentes funcionalidades desde cualquier computador, sin necesidad de haber instalado previamente un hardware o software en específico para el correcto funcionamiento del SW. 2.1.2. Ventajas y Desventajas de un Sistema Web De acuerdo a Calero (2012), algunas de las principales ventajas y desventajas de los Sistema Web son: Ventajas: a. Compatibilidad multiplataforma: tienen un camino mucho más sencillo para la compatibilidad multiplataforma que las aplicaciones de software descargables. b. Actualización: están siempre actualizadas con el último lanzamiento. c. Inmediatez de acceso: no necesitan ser descargadas, instaladas y configuradas. Se accede a través de una cuenta de usuario para trabajar sin importar cuál es su configuración o su hardware. d. Múltiples usuarios concurrentes: pueden realmente ser utilizada por múltiples usuarios al mismo tiempo. Desventajas: a. Requieren navegadores web totalmente compatibles para funcionar. Incluso muchas veces requieren las extensiones apropiadas y actualizadas para operar. b. Muchas veces requieren una conexión a internet para funcionar, si la misma se interrumpe, no es posible utilizarla más. c. El Sistema, deja de funcionar si es borrada o desinstalada de sus servidores. 19 d. El usuario, en general, no tiene libertad de elegir la versión del sistema web que quiere usar. Un usuario podría preferir usar una versión más antigua, hasta que la nueva sea probada. e. En teoría, el desarrollador puede rastrear cualquier actividad que el usuario haga. Esto puede traer problemas de privacidad. Los Sistemas Web para el año 2016, son más utilizados que Software instalados localmente en equipo de trabajo, ya sean computadoras de escritorio o portátiles, debido a su versatilidad y acceso, ya que con tener conexión a internet y un navegador compatible se puede trabajar y darle uso al sistema. Esto conlleva a que cualquier persona en cualquier lugar pueda efectuar su trabajo remotamente y sin necesidad de estar ubicado en un sitio en específico. De las desventajas se observó que al acceder al Sistema través del internet, se colocan en riesgo los datos que estén almacenados en estas herramientas, por ende se deben aplicar estándares de seguridad al momento de desarrollar este tipo de Software. 2.1.3. Beneficios de los Sistemas Web Según indica Graham, (2001) algunos de los beneficios son los siguientes: a. El trabajo a distancia se realiza con mayor facilidad. Para trabajar o utilizar el Sistema se necesita un computador con un buen navegador Web y conexión a internet. b. Se tendrá total disponibilidad en cuanto a hora y lugar, podrá trabajar en ella en cualquier momento y en cualquier lugar del mundo siempre que tenga conexión a internet. c. Permiten centralizar todas las áreas de trabajo. 20 De acuerdo con el autor, los sistemas web aportan beneficios en cuanto a tiempo y lugar, siempre que se tenga acceso a internet. Estos demuestran el auge de la tecnología en las últimas décadas y su uso a nivel personal y empresarial se ha convertido en una necesidad puesto que facilitan las tareas del día a día. Son herramientas beneficiosas ya que se busca brindarle mayor destreza al trabajador en cuanto al uso que se le dan a estos, ya que son accesible desde cualquier lugar con acceso a internet y se pueda hacer uso de las funciones que presta o para lo que fue construido. 2.1.4. Ejemplos de Sistemas Web Existen diferentes Sistemas Web, a continuación se presentan algunos ejemplos: a. Sistema de Generación de Citas para compra de Productos VIT: creado para optimizar el Sistema de Citas de Productos de Venezolana de Industria Tecnológica (VIT), que es una compañía anónima de capital mixto, constituida por la Corporación de Industrias Intermedias de Venezuela, S.A. (CORPIVENSA), adscrita al Ministerio del Poder Popular de Industrias y Comercio (VIT, 2015). En la Figura 7 se puede observar la pantalla de inicio de sesión, la cual muestra un formulario para ingresar al sistema, y adyacente a este la información correspondiente a las solicitud de productos VIT. Figura 7. Página Principal del Sistema, (VIT, 2015) 21 El señalado sistema, genera citas para la adquisición y la disponibilidad de equipos en los diferentes establecimientos que conforman la red de Venezuela Productiva. Al iniciar sesión, el programa indica la existencia o no del producto, de ser positivo se continúa con el proceso de compra, de ser negativo, el sistema arroja mensaje de la no existencia de equipos. En la Figura 8 se puede observar la cita que genera el sistema: Figura 8. Cita Generada por el Sistema (VIT, 2015) b. Sistema de Gestión de Pasantías (SIGEPAS): implementado para sistematizar el proceso de pasantías de la Escuela de Computación, en la Facultad de Ciencias de la U.C.V. SIGEPAS fue desarrollado con herramientas de software libre, que permite a los estudiantes la formalización de inscripción de pasantías, así como el seguimiento y control por parte las distintas comisiones involucradas en el proceso de inscripción. En la Figura 9 se muestra la página principal del sistema (SIGEPAS, 2012). 22 Figura 9. Sistema de Gestión de Pasantías (SIGEPAS, 2012). 2.1.5. Arquitectura de un Sistema Web La arquitectura de un Sistema Web es la vista conceptual de la estructura del mismo, la cual contiene código de presentación, código de procesamiento de datos y código de almacenamiento de datos. Las arquitecturas difieren según como está distribuido este código. Según Sevilla (2009) una arquitectura de un Sistema Web es la vista conceptual de la estructura del mismo, la cual contiene código de presentación (Vistas), código de procesamiento de datos (Controladores) y código de almacenamiento de datos (Modelos), estas difieren según como este distribuido el código en el sistema. Fue utilizada para el desarrollo de este TEG la arquitectura Cliente-Servidor la cual será explicada en la sección 2.1.6. 2.1.6. Arquitectura Cliente-Servidor Cliente/servidor es una arquitectura de red en la que cada computador o proceso en la red es cliente o servidor. Normalmente, los servidores son ordenadores potentes dedicados a gestionar unidades de disco (servidor de ficheros), impresoras (servidor de impresoras), tráfico de red (servidor de red), datos (servidor de bases de datos) o incluso aplicaciones (servidor de aplicaciones), mientras que los clientes son máquinas menos potentes y usan los recursos que ofrecen los servidores (Mora, 2002). 23 Para entender cómo funciona este esquema, se describen dos (2) aspectos fundamentales: a. Cliente: es el proceso que permite al usuario formular los requerimientos y pasarlos al servidor, se le conoce con el término front-end, que normalmente maneja todas las funciones relacionadas con la manipulación y despliegue de datos, además de acceder a los servicios distribuidos en cualquier parte de una red. (Sommerville, 2005) b. Servidor: es el proceso encargado de atender a múltiples clientes que hacen peticiones de algún recurso administrado por él. También se le conoce con el término back-end. Es común que un servidor esté asociado a muchos clientes, tal como se puede observar en la Figura 10 es por ello que toma ventaja el proceso de actualización y mantenimiento del sistema, ya que los cambios que deban realizarse en el software serán aplicados únicamente en el servidor. (Sommerville, 2005) Figura 10. Modelo Cliente-Servidor, (E-ducativa, 2000) Según expone Robini (2007) entre las ventajas de utilizar una arquitectura cliente- servidor se encuentran las siguientes:  Centralización del control: los accesos, recursos y la integridad de los datos son controlados por el servidor de forma que un programa cliente defectuoso o no autorizado no pueda dañar el sistema. 24  Escalabilidad: se puede aumentar la capacidad de clientes y servidores por separado. Cualquier elemento puede ser aumentado (o mejorado) en cualquier momento, o se pueden añadir nuevos nodos a la red (clientes y/o servidores).  Fácil mantenimiento: al estar distribuidas las funciones y responsabilidades entre varios ordenadores independientes, es posible reemplazar, reparar, actualizar, o incluso trasladar un servidor, mientras que sus clientes no se verán afectados por ese cambio (o se afectarán mínimamente). Esta independencia de los cambios también se conoce como encapsulación. Salazar (2010) indica que una de las variantes de la arquitectura más utilizadas en la actualidad es la de Tres Capas, está diseñada de la siguiente manera: 1. Presentación (Capa 1): es con la que interactúa el usuario, las pantallas o interfaces que se ven al utilizar el programa o aplicación. En este caso, está formada por las vistas, botones, formularios, entre otros, codificados en lenguajes como HTML, CSS, JavaScript, entre otros. 2. Lógica de negocio (Capa 2): está formada por las entidades empresariales, que representan objetos que van a ser manejados o consumidos por toda la aplicación. Es el puente de comunicación entre la capa de datos y la de presentación. 3. Datos (Capa 3): la información es grabada en una base de datos, por medio de clases que interactúan con estas y que realizan todas las operaciones con la base de datos de forma transparente para la capa de negocio. (funciones como insertar tabla y datos, eliminar, etc.) están basadas en lenguaje SQL (por sus siglas en inglés Structured Query Language) que es el lenguaje estándar ANSI/ISO de definición, manipulación y control de bases de datos relacionales (Escofet, 2007). https://es.wikipedia.org/wiki/Idioma_ingl%C3%A9s 25 En la Figura 11 se puede apreciar gráficamente lo que es una arquitectura de tres (3) capas. Figura 11. Arquitectura de Tres Capas, (Sánchez, 2004) Para el desarrollo del SisGEVI se utilizó una arquitectura de tres capas, pero para que el código a desarrollar fuese más legible (separación de interfaces de usuario, funcionalidades y manejo de base de datos) y escalable en futuros desarrollos, se utilizó un patrón de diseño que se asemejara a dicha arquitectura, y se seleccionó el Patrón MVC, por sus siglas en inglés Model-View-Controller, que se describirá en el punto 2.2. 2.2. Patrón de Diseño Modelo-Vista-Controlador Según indica Jaramillo (2008) es un patrón que permite separar la interfaz gráfica de usuario, de los datos y de la lógica apoyándose en tres componentes:  Modelo: esta es la representación de los datos y reglas de negocio (mundo del problema). Es el encargado de manejar un registro de las vistas de los controladores que existen en el sistema.  Vista: permite mostrar la información del modelo en un formato adecuado que permita que se dé la interacción además de poseer un registro acerca del controlador asociado y brindar el servicio que puede ser usado tanto por el controlador como por el modelo. 26  Controlador: responde a los eventos provocados en el usuario que implican cambios en el modelo y la vista, dando una correcta gestión a las entradas del usuario. En la Figura 12 se puede apreciar cómo está distribuido este patrón y su semejanza a la arquitectura de tres (3) capas: Figura 12. Patrón MVC, (Potencier, 2002) La Vista es la Capa Uno (1) o Presentación, que es lo que el usuario ve como interfaz de usuario, los controladores son los que conforman la Capa Dos (2) o la lógica de negocios del sistema, la cual procesa y recibe todas las acciones realizadas por el usuario y el Modelo o Modelos, los cuales se representan por la Base de Datos o Capa Tres (3) donde se ejecutan todos los procedimientos y funciones que estén relacionados con almacenamiento de datos. Catalani, (2007) indica que el patrón MVC presenta varias ventajas:  Hay una clara separación entre los componentes de un programa; lo cual permite implementarlo por separado.  Al incorporar el modelo de arquitectura MVC a un diseño, los módulos de un programa se pueden construir por separado y luego unirlos en tiempo de ejecución. 27  Facilita una evolución continua de los sistemas, sin puntos de ruptura, ya que un cambio en un sistema afectará a uno o más componentes pero nunca afectará significativamente al núcleo de la aplicación. Debido a esto se utilizó el patrón de diseño MVC en el desarrollo de SisGEVI ya que es un proyecto que estará en continua evolución y crecimiento, en cuanto a nuevos requerimientos y nuevas funcionalidades, y al realizar cambios, se puedan llevar a cabo se pueden realizar por separados sin verse afectado el Sistema, debido a la separación de la Lógica de Negocios de las diversas interfaces de usuario. 2.3. Tecnologías de Desarrollo Web Las tecnologías web son aquellas que proporcionan al programador un conjunto de herramientas que facilitan su trabajo. Se dividen en lenguajes del lado del cliente y del servidor, las lado del cliente están embebidas en la página HTML y son interpretadas y ejecutadas por el navegador Web, permitiendo así el desarrollo de aplicaciones basadas en el modelo cliente/servidor (Morales, 2011). Son aplicaciones que los usuarios pueden utilizar accediendo a un servidor web a través de internet o una intranet mediante un navegador, o bien es una aplicación de software que se codifica en un lenguaje soportado por los navegadores web en la que se confía la ejecución a un navegador (Araujo, 2008). Las tecnologías que se mencionan posteriormente tanto del Lado del Cliente (HTML, JavaScript, JQuery, CSS, Boostrap) como del Lado del Servidor (PHP, Laravel Framework 4.2) fueron las empleadas para el desarrollo del TEG, debido a que en la Ley de InfoGobierno (CONATEL, 2013) promulgada por la República Bolivariana de Venezuela se estableció que todos los entes del Estado deben ajustarse tanto en la adquisición como en el desarrollo web en el uso de Software Libre. 28 2.3.1. Lenguajes del Lado Cliente Los lenguajes del lado cliente (entre los cuales no solo se encuentra el HTML sino también JavaScript y CSS) son aquellos que pueden ser directamente procesados por el navegador y no necesitan un pre tratamiento. La programación del lado del cliente tiene como principal ventaja que la ejecución de la aplicación se delega al cliente, con lo cual se evita recargar al servidor de trabajo, el servidor solo envía el código, y es tarea del browser interpretarlo (Torre, 2006). Un lenguaje del lado del cliente es totalmente independiente del servidor, lo cual permite que la página pueda ser albergada en cualquier sitio. A pesar de esto el producto final no se verá bien si el ordenador del cliente no tiene los complementos adecuados. Cuando una página HTML contiene alguna de las tecnologías de cliente, el navegador se encarga de interpretarlas y ejecutarlas para realizar los efectos y funcionalidades (Alvarez, 2015). Las páginas del cliente son muy dependientes del sistema donde se están ejecutando y esa es su principal desventaja, ya que cada navegador tiene sus propias características, incluso cada versión, y lo que puede funcionar en un navegador puede no funcionar en otro. Por requerimientos del proyecto y manteniéndose apegado al marco legal de este trabajo de investigación a continuación se describen las que fueron utilizadas para el desarrollo de SisGEVI: 2.3.1.1. Lenguaje de Marcado de Hipertexto El lenguaje de marcado de hipertexto por sus siglas en inglés HTML (HyperText Markup Language) se utiliza para crear documentos que muestren una estructura de hipertexto. Un documento de hipertexto es aquel que contiene información cruzada con otros documentos, lo cual nos permite pasar de un documento al referenciado desde la misma aplicación con la que lo estamos visualizando (Mateu, 2004). HTML le da a los desarrolladores medios para: 29  Recuperar información en línea vía enlaces de hipertexto, con el presionar de un botón (Mateu, 2004).  Diseñar formas para llevar a cabo transacciones con servicios remotos, para su uso en la búsqueda de información, reservaciones, órdenes de productos (Mateu, 2004). Con HTML, los desarrolladores describen la estructura de su página utilizando marcado de etiquetas. Los elementos del lenguaje contienen etiquetas como “párrafo”, “lista”, “tabla”, entre otros. Actualmente en el 2015, HTML se encuentra en su versión 5. (W3, 2005) Según Vega, (2004) define HTML5 es la actualización de HTML, las novedades de esta versión se centran en facilitar la implementación de aplicaciones web, avanzar hacia la web semántica y evitar un poco aquellos elementos que rompen con el esquema web. Algunos de los aspectos más interesantes incluidos en esta versión de HTML que son detallados por Vega, (2004) se muestran a continuación:  Estructura de la aplicación web: la mayoría de las aplicaciones web tienen una estructura común, que suponían un uso abusivo, pero necesario, de la etiqueta <div>.  Etiquetas para contenido específico: ahora es posible incorporar contenido multimedia este con etiquetas específicas como audio, video, etc.  HTML5 añade tipos de validación en sus formularios, como por ejemplo validaciones de números telefónicos, correos, fechas entre otros.  Mejores formularios: Se incluyen nuevos tipos de datos para el elemento input que permiten una mejor interacción con el usuario, así como también validaciones sin la necesidad de otro lenguaje como JavaScript. 30 Se empleó HTML en el desarrollo de SisGEVI ya que es un lenguaje que posibilita la definición de la estructura del sistema, el cual facilito el desarrollo de las diferentes interfaces, permitiendo llevar un orden mediante el uso de etiquetas, siendo el código mantenible en el tiempo y de fácil entendimiento para futuras actualizaciones o nuevos funcionalidades que se deseen agregar. 2.3.1.2. Hojas de Estilo en Cascada Las Hojas de Estilo en Cascada o CSS de siglas en inglés de Cascading Style Sheets, es el lenguaje utilizado para describir la presentación de páginas web, incluyendo colores, posicionamiento y fuentes. Permite adaptar la presentación a distintos tipos de dispositivos, como pantallas grandes, pequeñas o impresas. La separación del HTML y el CSS hace que sea más fácil el mantenimiento de los sitios, la compartición de estilos entre páginas, y la adaptación de las páginas a distintos ambientes. Esto es referido como la separación de la estructura (o contenido) de la presentación (Mozilla Developer Network, 2005). Para el 2015 se encuentra en su versión 3, mejor conocida como CSS3, esta ofrece mayor control y muchas otras opciones en el estilo de los elementos de las páginas Web, además de otros efectos que CSS no proporcionaba y para los cuales eran necesarias otro tipo de técnicas avanzadas y complicadas para el desarrollador. Entre las novedades que aporta CSS3 en el ámbito gráfico de las páginas web están los bordes circulares, sombras, nuevas fuentes y en cuanto al rendimiento, CSS3 agiliza el proceso de carga de la página en el navegador de manera tal que el tiempo que toma para cargar y mostrar los recursos al usuario en cuanto a apariencia se trata, hace que los sitios web sean menos pesados, consuman menos tiempo de producción y realicen menos peticiones al servidor. (Ojeda, 2012). 31 Dichas hojas de estilo son de gran aporte para el sistema ya que con su utilización, nos permite la separación de la presentación visual en las interfaces de usuario sin tener que manipular la información que este en el sistema, esto sirve de aporte ya que en un futuro si se desea cambiar el aspecto visual del sistema, solo se tendría que modificar los códigos CSS de SisGEVI. 2.3.1.3. Framework Twitter Bootstrap Twitter Bootstrap es un framework de código abierto desarrollado por Twitter, que combina código CSS y JavaScript diseñado para ayudar a construir componentes para la interfaces de las aplicaciones web. Brinda la capacidad de construir rápidamente interfaces elegantes y ricas en funcionalidad. Una de las características más llamativas de Bootstrap es el diseño responsive o adaptable el cual es el enfoque que sugiere que el diseño y el desarrollo deben responder al comportamiento del usuario y el ambiente basado en el tamaño de la pantalla, plataforma y orientación (Marcotte, 2011). El aporte dado en el desarrollo SisGEVI en la utilización de Bootstrap permite que las interfaces de usuario se puedan visualizar en cualquier tipo de dispositivo, móvil, computadora de escritorio o laptop, esto permite que el Sistema Web realizado tenga mayor alcance tecnológico. 2.3.1.4. JavaScript JavaScript (JS) es un lenguaje ligero e interpretado, orientado a objetos con funciones de primera clase, más conocido como el lenguaje de script para páginas web, pero también usado en muchos entornos sin navegador. Es un lenguaje script multi-paradigma, basado en prototipos, dinámico, soporta estilos de programación funcional, orientada a objetos e imperativa. (Mozilla Developer Network, 2006) 32 Técnicamente, JavaScript es un lenguaje de programación interpretado, debido a que no se necesita compilar el programa para ejecutarlo, por lo que se puede probar en cualquier navegador web sin necesidad de procesos intermedios (en la actualidad, todos los navegadores web interpretan código JavaScript integrado en las páginas web). Es orientado a objetos ya que permite definir clases con sus atributos y métodos (Eguíluz, 2008). Siendo un lenguaje ligero, que maneja eventos y que es soportado por la mayoría de los navegadores web, se convierte en una tecnología apropiada para SisGEVI con el fin de llevar a cabo distintos efectos y funcionalidades, para la mejora en cuanto a usabilidad del Sistema. 2.3.1.5. AJAX JavaScript Asíncrono y XML, AJAX (Asynchronous JavaScript And XML, por sus siglas en inglés) es una técnica de desarrollo web para crear Aplicaciones Web interactivas que mantienen una comunicación asíncrona con el servidor en segundo plano. Esta comunicación se establece con el fin de lograr cambios sobre una misma página sin necesidad de recargarla completamente, lo que significa aumentar la interactividad, velocidad y usabilidad Ajax es una tecnología asíncrona, en el sentido de que los datos adicionales se solicitan al servidor y se cargan en segundo plano sin interferir con la visualización ni el comportamiento de la página (Garret, 2006). Para SisGEVI el uso de AJAX tuvo un aporte en cuanto a la Usabilidad y perspectiva del usuario, ya que con su utilización, el usuario puede apreciar la información actualizada sin necesidad de cargar nuevamente la página luego utilizar las funciones del sistema, permitiendo así, brindar una mejor experiencia al momento de utilizar el sistema. 33 2.3.1.6. jQuery JQuery según (Hernández, 2014) es una librería de JavaScript especializada en cambiar las páginas web en ejecución. Permite simplificar la manera de interactuar con los documentos HTML, manipular el árbol DOM, manejar eventos, desarrollar animaciones y agregar interacción con la técnica AJAX a páginas web. Esto permite que el desarrollador no tenga que enfocarse tanto en aprender funciones complejas y pueda invertir más tiempo en el desarrollo. JQuery es una librería de JavaScript rápida, pequeña y rica en características. Hace que la navegación y manipulación de documentos HTML, manejo de eventos, animaciones y manejo de JavaScript asíncrono sean mucho más simples y fáciles de usar con una API que funciona a través de una multitud de navegadores (jQuery, 2005). Lo que se ha establecido con esta librería, son tareas comunes que usualmente son utilizadas por los desarrolladores al momento de estructurar proyectos de tipo dinámico. Una de las adaptaciones de jQuery para el manejo de interfaces de usuario es jQuery UI, por sus siglas en inglés User Interface. Según jQuery-UI, (2005) es una librería de componentes para jQuery que añade un conjunto de funcionalidades, complementos y widgets para la creación de Aplicaciones Web interactiva. Esta librería proporciona abstracciones de bajo nivel de interacción y animación, efectos avanzados y de alto nivel. Está dividida en cuatro (4) módulos:  Núcleo: contiene funciones básicas para el resto de los módulos, por ejemplo, las interacciones y los widgets.  Interacciones: consisten en efectos y comportamientos complejos, pero que brindan una mejor experiencia de usuario, tales como draggable (hacer que un elemento se pueda arrastrar), resizable (permite redimensionar un elemento), sorteable (permite ordenar una lista de elementos), entre otros. 34  Efectos: permiten añadir transiciones animadas y facilidades para interacciones, tales como mostrar, ocultar, color, animación, entre otros.  Widgets: son un conjunto completo de controles de interfaz. Cada control tiene un conjunto de opciones configurables y se les puede aplicar estilos CSS. El aporte que proporcionó para el desarrollo web como lo es JQuery al desarrollo de SisGEVI, fue su simplicidad, sencillez y fácil escritura, lo que será beneficioso en un futuro, siendo de fácil comprensión, práctico a la hora de realizar mantenimiento, permitiendo la búsqueda de propiedades o la inclusión de nuevas funcionalidades al sistema. 2.3.2. Lenguajes del Lado Servidor Los lenguajes del lado servidor son aquellos que son reconocidos, ejecutados e interpretados por el propio servidor y que se envían al cliente en un formato comprensible para él. Un lenguaje del lado servidor es independiente del cliente por lo que es mucho menos rígido respecto al cambio de un navegador a otro o respecto a las versiones del mismo (Torre, 2006). El propósito principal de las tecnologías que se encuentran del lado del servidor es que permiten modificar el contenido de una aplicación web de forma online al crear una interfaz dinámica entre el cliente y el servidor, mediante el uso de lenguajes de programación. La programación del lado del servidor es una tecnología que consiste en el procesamiento de una petición de un usuario mediante la interpretación de un script en el servidor web para generar páginas HTML dinámicamente como respuesta. (Alvarez, 2015) En la Figura 13 se muestran los lenguajes de programación más populares, según un gráfico del sitio web W3Techs (W3techs, 2015): 35 Figura 13. Lenguajes de Programación del Lado del Servidor, (W3techs, 2015). 2.3.2.1. Servidor Web Apache Todo Sistema Web debe tener un servidor para su correcto funcionamiento, en el presente TEG se utilizó Apache. Es un software servidor de páginas Web de código abierto diseñado para ser un servidor Web potente y flexible que pueda funcionar en la más amplia variedad de plataformas y entornos. Apache presenta entre sus principales características mensajes de error altamente configurables, bases de datos de autenticación y negociado de contenido, pero fue criticado por la falta de una interfaz gráfica que ayude en su configuración. La arquitectura del servidor Apache es modular, lo cual implica que puede ser adaptado a diferentes entornos y necesidades, con los diferentes módulos de apoyo que proporciona, y con la Interfaz de Programación de Aplicaciones necesaria. El servidor consta de una sección núcleo y diferentes módulos que brindan muchas funcionalidades que podrían considerarse básica para un servidor Web. (Apache, 2013) El aporte que dio a SisGEVI en usarse un APACHE es una solución sencilla, eficaz y rápida para tener sitios web funcionando al 100% sin gastos adicionales. Otra ventaja es que con este servidor es muy fácil conseguir ayuda y sin duda es la mejor opción ya que actualmente lo utilizan páginas reconocidas mundialmente. 36 2.3.2.2. Lenguaje Preprocesador de Hipertexto (PHP) El Lenguaje Preprocesador de Hipertexto, por sus siglas en inglés HyperText Pre- processor, es un lenguaje de programación de código abierto, interpretado de alto nivel y ejecutado del lado del servidor. Está diseñado originalmente para la creación web de contenido dinámico de una manera rápida y sencilla. PHP resulta un lenguaje sencillo de aprender, además es multiplataforma ya que permite que los programas funcionen igual sobre diferentes plataformas. Las principales características de PHP son: (PHP, 2001)  Orientado al desarrollo de aplicaciones web dinámicas con acceso a información almacenada en una base de datos.  Capacidad de conexión con la mayoría de los motores de base de datos que se utilizan en la actualidad, destaca su conectividad con MySQL y PostgreSQL.  Posee una amplia documentación en su sitio web oficial, entre la cual se destaca que todas las funciones del sistema, las cuales están explicadas y ejemplificadas en un único archivo de ayuda. A diferencia de Java o JavaScript que se ejecutan en el navegador PHP se ejecuta en el servidor por eso nos permite acceder a los recursos que tenga el servidor. El programa es ejecutado en el servidor y el resultado es enviado a navegador. Al ser un lenguaje que se ejecuta en el servidor no es necesario que su navegador lo soporte, es independiente del navegador. (Mateu, 2004). Se puede concluir que el lenguaje PHP es un lenguaje script usado principalmente para ejecutar en servidores web, es muy simple a la hora de programar y se considera un lenguaje muy robusto es por ello fue el lenguaje utilizado para el Desarrollo de SisGEVI. http://es.wikipedia.org/wiki/MySQL http://es.wikipedia.org/wiki/PostgreSQL 37 2.3.2.3. Framework MVC Un Marco de Trabajo o Framework de su traducción al inglés, es una estructura software compuesta de componentes personalizables e intercambiables para el desarrollo de una aplicación. Se puede considerar como una aplicación genérica incompleta y configurable a la que podemos añadirle las últimas piezas para construir una aplicación concreta (Gutiérrez, 2004). Un framework se puede traducir como estructura; en el sentido que nos ocupa un framework sería un marco de trabajo. MVC son las siglas de Modelo-Vista-Controlador un paradigma de programación de aplicaciones que separa en tres niveles el trabajo: por un lado el modelo que hace referencia a las aplicaciones empresariales conocido como la lógica de negocio (por ejemplo el Sistema Gestor de la Base de Datos); la vista hace referencia al aspecto visual de la aplicación con el usuario; el controlador finalmente es la parte que controla las acciones del usuario y las comunica a los dos apartados anteriores (Alvarez, 2015). Para el desarrollo de SisGEVI se utilizó el Framework Laravel en su versión 4.2, debido a su fácil instalación en los distintos ambientes, la separación de la lógica de negocio con la interfaces de usuario y la existencia de una buena documentación para realización de Sistemas eficaces y escalables para futuras actualizaciones. 2.3.2.4. Mapeo de Objeto-Relacional Mapeo de Objeto-Relacional u ORM, de sus siglas en inglés Object-Relational Mapping, es un modelo de programación que consiste en la transformación de las tablas de una base de datos, en una serie de entidades que simplifiquen las tareas básicas de acceso a los datos para el programador (Halpin, 2009). 38 Esto tuvo un gran aporte al momento de desarrollar ya que no se necesitaba generar una conexión directa hacia la base de datos, sino que a través de objetos el acceso a los datos era más rápido y eficiente. En el desarrollo de SisGEVI se utilizó el ORM que trae por defecto Laravel, Eloquent, el cual explicaremos con más detalle en la sección 2.3.2.5. 2.3.2.5. Laravel 4.2 Laravel es un framework de aplicaciones web con la sintaxis expresiva y elegante facilitando las tareas comunes que se utilizan en la mayoría de los proyectos web, como la autenticación, enrutamiento, sesiones, y el almacenamiento en caché. Combina lo mejor de lo que se ha visto en otros frameworks web, incluyendo de otros lenguajes, como Ruby on Rails, ASP.NET MVC y Sinatra. Proporciona potentes herramientas necesarias para grandes aplicaciones robustas. Entre dichas herramientas posee un ORM llamado Eloquent el cual se caracteriza por ser sencillo y fácil de usar al momento de crear y acceder las entidades en la Base de Datos. (Laravel, 2013) Eloquent es una sencilla implementación del patrón Active Record, (Fowler, 2003) que es una interfaz de cierto objeto debe incluir funciones como por ejemplo insertar, actualizar, eliminar y propiedades que correspondan de cierta manera directamente a las columnas de la base de datos asociada. En la Figura 14 se puede apreciar cómo es la arquitectura de las aplicaciones Laravel, la cual tiene una adaptación del patrón de diseño MVC: Figura 14. Arquitectura de Laravel, (Velasquez, 2013) 39 El aporte que dio a SisGEVI el uso de Laravel fue su gran robustez al momento de desarrollo de sistemas web, ya que con el uso correcto de filtros y de enrutamiento hace que este sea más seguro, también el valor agregado que dio a SisGEVI fue su excelente documentación en su página oficial (Laravel, 2013) sirvió de mucho al momento de solventar errores o problemas en la culminación de este Trabajo de Grado. 2.4. Sistema Manejador de Base de Datos. Un Sistema Manejador de Base de Datos, es un sistema computacional cuya finalidad general es almacenar información y permitir a los usuarios recuperar y actualizar esa información con base en peticiones. (Date, 2001) Un sistema manejador de base de datos (SMBD), consiste en una colección de datos interrelacionados y un conjunto de programas para acceder a dichos datos. La colección de datos, normalmente denominada base de datos, contiene información relevante para una empresa. El objetivo principal de un SMBD es proporcionar una forma de almacenar y recuperar la información de una base de datos de manera que sea tanto practica como eficiente (Silberschatz, 2002). Existen diferentes tipos de SMBD para este Trabajo de Grado se utilizó PostgreSQL, debido a requerimientos del MPPTOP, ya que es el SMBD que más utilizan en los sistemas o aplicaciones que tienen en uso, por ser de acceso libre y no propietario, y por su facilidad de uso con lenguajes de programación web. 2.4.1. Sistema Manejador PostgreSQL PostgreSQL es un sistema de gestión de bases de datos objeto-relacional, distribuido bajo licencia BSD y con su código fuente disponible libremente. PostgreSQL utiliza un modelo cliente/servidor y usa multiprocesos en vez de multihilos para garantizar la estabilidad del sistema. (PostgreSQL, 2010) 40 PostgreSQL es un sistema de gestión de bases de datos objeto-relacional. Al ser software libre, el desarrollo de este sistema es dirigido por una comunidad de desarrolladores apoyados por organizaciones comerciales. Entre los sistemas de bases de datos existentes hoy en día, PostgreSQL juega un papel muy importante ya que es un sistema que tiene muchas cualidades que lo hacen ser una muy buena alternativa para instalar sistemas en empresas, universidades y una gran cantidad de negocios. (Uneweb, 2003) PostgreSQL usa el modelo cliente/servidor. Una sesión en PostgreSQL consiste en ejecución de los siguientes procesos: a) El servidor, que maneja archivos de bases de datos, acepta conexiones a las aplicaciones cliente, y realiza acciones en la base de datos. b) El programa servidor de bases de datos se conoce como postmaster, la aplicación cliente, que necesita realizar operaciones en la base de datos. Las aplicaciones cliente pueden ser de la más diversa naturaleza: pueden ser aplicaciones de texto en una consola, aplicaciones gráficas, un servidor web que accede a la base de datos para mostrar una página, o herramientas especializadas de mantenimiento de bases de datos. Además, cuenta con un completo soporte para claves primarias, foráneas, procedimientos, vistas y disparadores. La mayoría de los tipos de datos comunes son incluidos (integer, boolean, varchar, date, entre otros) y también soporta almacenamiento de datos complejos como imágenes, sonidos y videos. Además, PostgreSQL es altamente personalizable ya permite el desarrollo de procedimientos o métodos en diferentes lenguajes de programación. La última versión del producto en el mercado es la versión 9.4.4. (Denzer, 2002) 2.5. Software de Control de Versiones Git El Software de Control de Versiones Git es un software libre y de código abierto que se encarga del control distribuido de versiones y la administración de código fuente. Cada directorio de trabajo en Git es un repositorio completo con toda la historia sobre cada uno de 41 sus archivos y posee plena capacidad de hacer seguimiento de versiones, esto permite recuperar versiones antiguas de los datos, o examinar el historial de cambios de los mismos. No depende de acceso a la red ni de un servidor centralizado. Git puede acceder al repositorio a través de redes, lo que le permite ser usado por personas que se encuentran en distintos computadores, fomentando la colaboración. Entre sus principales características tenemos (Git Book, 2009):  Implementa un versionado de directorios.  Posee un historial de versiones.  Crea un versionado de metadatos.  Efectúa una manipulación consistente de datos Tuvo un gran aporte para SisGEVI, ya que así se mantuvieron versiones del Sistema estables entre desarrollos ya que de ocurrir alguna falla durante las pruebas o en el momento de añadir funcionalidades, permite descargar versiones anteriores del código para observar y determinar cuáles fueron los errores. Para este TEG con el fin de promover la reusabilidad de SisGEVI, este fue desarrollado bajo Licencias de Libre Acceso, siempre y cuando se de crédito a sus autores y sus obras derivadas se publiquen bajo iguales condiciones. 2.6. Licencia Pública General La Licencia Pública General de GNU o más conocida por su nombre en inglés GNU General Public License (o simplemente sus siglas del inglés GNU GPL) es la licencia más ampliamente usada en el mundo del software y garantiza a los usuarios finales (personas, organizaciones, compañías) la libertad de usar, estudiar, compartir (copiar) y modificar el software. Su propósito es declarar que el software cubierto por esta licencia es software libre 42 y protegerlo de intentos de apropiación que restrinjan esas libertades a los usuarios. Puede ser usada por cualquiera, ya que su finalidad es proteger los derechos de los usuarios finales (usar, compartir, estudiar y modificar), y otorgar a los beneficiarios de un programa de ordenador de los derechos de la definición de software libre. (GPL, 2007) Por ser un trabajo desarrollado para un Ente Público del Gobierno Venezolano, se debe implementar un licenciamiento de acceso libre, para SisGEVI se utilizó, debido a que el sistema puede ser reutilizada, modificada y usada para fines no comerciales dentro de otro Ente Estatal. 2.7. Marco Legal En el caso de Venezuela para el año 2015, está en vigencia la Ley InfoGobierno, la cual estandariza y regulariza las tecnologías de información, a fin de que se usen herramientas de software libre en el desarrollo de aplicaciones. 2.7.1. Ley de InfoGobierno De acuerdo a lo contenido en la Ley de InfoGobierno (CONATEL, 2013), promulgada en Gaceta Oficial de la República Bolivariana de Venezuela número 40.274 de fecha 17 de octubre de 2013, para el desarrollo de cualquier sistema debe utilizarse software no propietarios o software libre, es por esta razón que atendiendo a lo expresado en la señalada Ley, el TEG desarrollado se basó en la aplicación de este tipo de software, debido a que se realizó para un ente gubernamental. La referida Ley en el capítulo II, denominado Principios y Bases del Uso de las Tecnologías de la Información, en el art. 34 desarrolla el sustento legal para el uso del conocimiento libre, contiene lo siguiente (CONATEL, 2013): “Artículo 34: El desarrollo, adquisición, implementación y uso de las tecnologías de información por el Poder Público, tiene como base el conocimiento libre. En las actuaciones que se realicen con el uso de las tecnologías de información, sólo empleará programas informáticos en software libre y 43 estándares abiertos para garantizar al Poder Público el control sobre las tecnologías de información empleadas y el acceso de las personas a los servicios prestados. Los programas informáticos que se empleen para la gestión de los servicios públicos prestados por el Poder Popular, a través de las tecnologías de información, deben ser en software libre y con estándares abiertos.”(p.9) Para concluir el capítulo se puede decir que un Sistema Web es un software que no necesita instalación y que se accede a través de un navegador por medio de internet o una intranet. Se basan en la arquitectura cliente/servidor, por un lado el cliente es el navegador a través del cual se visualiza el sistema y por otra parte el servidor es el programa que está constantemente esperando solicitudes por parte del cliente. Se utilizaron para su desarrollo diversas tecnologías web como por ejemplo HTML, CSS, JavaScript, PHP entre otras, debido a su fácil utilización y ya que están apegadas al marco legal del Sistema. Aunado a ello el sistema estará bajo una licencia de software libre para que en un futuro, tanto el código como el Sistema puedan ser usados con libertad sin ningún inconveniente de Copyright. En el siguiente capítulo se explicará la aplicación de AgilUs como metodología de desarrollo de SisGEVI. 44 Capítulo III: Marco Aplicativo En este capítulo se describe la aplicación de la metodología AgilUs para el desarrollo del SisGEVI. Está consta de cuatro (4) fases, las cuales son: Requisitos, Análisis, Prototipaje y Entrega. Las señaladas fases serán detalladas a continuación: 3.1. Fase I: Requisitos En esta fase se aplicaron diversas técnicas de levantamiento de información, que permitieron obtener todo lo necesario para hacer el análisis de requerimientos planteados para el SisGEVI. Las técnicas que fueron empleadas se describen seguidamente; 3.1.1. Entrevistas Esta técnica se aplicó utilizando entrevistas no estructuradas, entre el equipo de desarrollo, el Jefe del Departamento de Seguridad Vial y el Coordinador de la Brigada de Restablecimiento de Vías y Atención de Emergencias, Alberto Forte y la Paramédico Maribel Pérez, siendo el objetivo conocer cómo se llevaba a cabo el proceso de gestión de accidentes viales, lográndose obtener información acerca de la problemática e identificándose todas y cada una de las necesidades existentes. Al ser una entrevista no estructurada las preguntas fueron surgiendo de acuerdo a las respuestas aportadas por los entrevistados. Entre las preguntas más resaltantes se encuentran las siguientes:  ¿Cómo se lleva a cabo el proceso de Gestión de Accidentes Viales?  Describa brevemente cómo se desarrolla el proceso.  ¿Quiénes participan en el proceso?  ¿Cuáles son las actividades de cada involucrado en el proceso?  ¿Qué se quiere lograr con el sistema a desarrollar?  ¿Qué formatos de documentos trabajan actualmente? 45 Como resultado de las entrevistas efectuadas se logró definir el proceso de Gestión de Accidentes Viales, identificar quiénes son los actores del mismo, así como obtener ideas acerca de funcionalidades y opciones que debería contener SisGEVI. Seguidamente se enuncian los resultados de las mencionadas entrevistas, una vez procesadas y analizadas:  Permitir que el Sistema pre-asigne casos a los paramédicos para evitar la pérdida del número otorgado por el Radio Operador.  Alertar si un paciente atendido ha estado involucrado en más de tres (3) accidentes, con la finalidad de notificar al Instituto Nacional de Transporte Terrestre (INTT), organismo que se encargaría de sancionar al ciudadano.  Generar de forma automática el conteo de tipos de accidentes, clasificarlos por género, edad, ubicación física de la lesión, hora de ocurrido, entre otros, para el cálculo de los datos estadísticos que requiere el MPPTTOP.  Digitalización de la planilla de reporte de atención para su aplicación en SisGEVI.  Generar Reportes de Atención y de Novedades en formato PDF  Generar Reportes Estadísticos en formato de hojas de cálculos  Crear una vista que muestre las planillas pre-asignadas por el Radio Operador.  Crear un buscador de Casos o Pacientes.  Crear un usuario que posea acceso libre al Sistema, para aquellos casos donde se requiera un suplente. Siguiendo con la fase de requisitos de AgilUs, se presenta la tormenta de ideas realizada durante la entrevista con la Brigada de Paramédicos. 46 3.1.2. Tormentas de ideas Una tormenta de ideas es una técnica utilizada para crear la mayor cantidad de ideas posibles en grupo sobre un tema en específico (Duarte, 2008). El Objetivo de realizar esta actividad fue de exponer a los funcionarios de la Brigada la situación actual de gestión de accidentes viales, para que luego éstos aportasen ideas que permitieran enriquecer el proceso. En la Figura 15 podemos apreciar los términos más mencionados de dicha tormenta: Figura 15. Tormenta de Ideas Realizada en el MPPTTOP Las ideas más relevantes que surgieron fueron las siguientes:  Automatización de Datos Estadísticos.  Poco trabajo manual.  Notificación de personas con más de 4 accidentes.  Buscador de casos o pacientes.  Digitalización de planilla de reportes.  Generación de reportes en formatos PDF.  Manejo de Errores.  Inactividad por parte del paramédico.  Pre- asignación de Casos. 47  Verificación de Casos asignados y completados. Continuando con las diversas técnicas de levantamiento de información de la fase de requisitos, se expone el sondeo realizado a los usuarios finales del SisGEVI, la cual sirvió como información base para el desarrollo de un sistema completo. 3.1.3. Sondeos El sondeo se realizó mediante la utilización de los formularios provistos por Google Docs Forms (Google, 2006), fue efectuado tomando una muestra de veinticinco (25) personas pertenecientes a la Brigada de Paramédicos del MPPTTOP. La aplicación de esta técnica tuvo como finalidad obtener diversas opiniones relacionadas con un sistema web efectivo para el proceso de gestión de accidentes viales, ésta permitió facilitar la toma de decisiones acerca de los requerimientos desarrollados en el SisGEVI. Se realizaron un total de siete (7) preguntas, que se describen en los siguientes párrafos: La primera pregunta estaba destinada a conocer la opinión que tenían los paramédicos con respecto al proceso de gestión de accidentes viales, esta se formuló de la siguiente forma ¿Cómo catalogaría usted el actual proceso manual de Gestión de Accidentes Viales?, asignándosele un rango de evaluación del uno (1) al cinco (5), donde el uno (1) se define como malo, el dos (2) como regular, el tres (3) bueno, el cuatro (4) muy bueno y el cinco (5) excelente. Los resultados permitieron valorar cuantitativamente el proceso actual. Las respuestas obtenidas se pueden apreciar en la Figura 16. Figura 16. Resultados Pregunta 1. 48 Al analizar las respuestas se pudo observar que el cincuenta y dos (52%) del grupo encuestado, le pareció que el proceso manual es Excelente, manifestando que si se mantiene el proceso igual, pero digitalizando las planillas se puede lograr mejoras en el mismo. Con la segunda pregunta se pretendió conocer que le gustaría a la brigada de los paramédicos que tuviera el sistema, para lo cual se preguntó ¿Qué le gustaría que tuviera el sistema?, se dejó abierta la respuesta para que los usuarios opinaran libremente. Los resultados de las respuestas obtenidas se indican a continuación:  Que todo se automatizado sin libros de novedades  Debe ser un formato parecido o igual al que se llena en físico.  Tener acceso a una página web o sistema en línea. Una vez examinadas estas respuestas, se pudo observar entre los encuestados que preferían la digitalización del proceso, aplicando herramientas de accesos vía web, y que el formato se pareciera al utilizado en el proceso manual, para que el aprendizaje fuese con mayor rapidez. La tercera pregunta se elaboró con la finalidad de saber qué características desearía el usuario que formaran parte del sistema, por lo cual se preguntó: Seleccione las principales características que desearía que tuviese el Sistema, colocando entre las posibles respuestas: confiable, usable, fácil de entender, tolerante a errores, eficiente, práctico, fácil de memorizar y diseño elegante. En la Figura 17 se muestran los resultados. Figura 17. Resultados Pregunta 3. 49 Debido a que los porcentajes que arrojaron las respuestas, fueron enfocados hacia un sistema usable, confiable, práctico y fácil de entender, esto contribuyó a la toma decisiones al momento del desarrollo del sistema. Con respecto a la cuarta pregunta, esta iba enfocada a conocer la opinión de los encuestados acerca de la distribución de los colores que se aplicaría así como el prototipo de interfaz que se usaría en el sistema, los cuales se muestran en la Figura 18. Figura 18. Imagen de Sondeo Para lo cual se preguntó ¿Le parece correcta la distribución de colores?, colocando entre las posibles respuestas. Si estaban de acuerdo, No estaban de acuerdo y pudieran proponer otra combinación. En la Figura 19 se muestran los resultados obtenidos: Figura 19. Resultados Pregunta 4. Analizadas las respuestas se pudo observar, que los colores utilizados y el modelo de interfaz propuesto les agrado a los usuarios, por lo cual el diseño del sistema se hizo acorde a la imagen propuesta. La quinta pregunta, se realizó de la manera siguiente: ¿Le gustaría que todo el proceso de carga de reportes se hiciera a través de un Sistema Web? 50 Entre las posibles respuesta se colocaron: Si, No, Mantenerlo de Forma Manual. Esto con la finalidad de conocer si la brigada de paramédicos estaba de acuerdo con que se realizara un proceso de automatización en el proceso de gestión de accidentes viales. Las respuestas obtenidas se aprecian en la Figura 20. Figura 20. Respuesta Pregunta 5. Al observar las respuestas se pudo constatar que un 92% de los encuestados seleccionaban que el Proceso de Carga de los Reportes fuese a través de un Sistema Web. Con la sexta pregunta se quiso conocer en qué tipo de formato se generarían los reportes, por lo cual se le pregunto lo siguiente: ¿En qué formato le gustaría a Ud. que se generen los Reportes, luego de la carga de la información en el Sistema? Entre las posibles respuestas se colocaron las siguientes PDF, Hoja de cálculo (.ods), Formato de Texto (.odt), Otro. El resultado de estas encuestas se puede apreciar en la Figura 21: Figura 21. Resultados Pregunta 6. La mayoría de los encuestados eligió que los reportes de atención sean en formato PDF, esto con el objeto de brindar seguridad al momento de emitirlos, ya que de generarse el archivo en este formato, no puede ser modificado por terceros. 51 Por último, la séptima pregunta se enfocó hacia conocer las sugerencias que podían aportar los integrantes de la brigada para el desarrollo del sistema a realizar, para lo que se les pregunto: Especifique alguna sugerencia que nos daría para que el proceso de llenado de la planilla se haga más rápido y menos engorroso. Se efectúo un análisis de todas las respuestas obtenidas, y las más destacadas fueron las siguientes:  Listas Desplegable  Sería bueno selecciones simple  Un Sistema Digitalizado Vía web  Que todo en lo posible sea marcado rápido  Como se ven en la planilla manual. Emitidas estas respuestas por parte del grupo de encuestados, se pudo constatar lo que realmente prefieren y necesitan incluir en el sistema, la brigada de paramédicos. Por ende, al momento de desarrollarlo se tomó en cuenta esta información, a fin de brindarle al usuario un sistema con el cual se sienta cómodo y satisfecho. De acuerdo con la fase de requisitos de AgilUs, se presentan los Perfiles de Usuario que interactuaron con el Sistema. 3.1.4. Perfil de usuario Los Perfiles de Usuarios son fundamentales en el desarrollo de un sistema, ya que nos permiten conocer los roles desempeñados por los usuarios en el mismo. En el proceso de gestión de accidentes viales, existen tres (3) tipos de usuario, el rol de Coordinador, de Paramédico y el de Radio Operador, cada uno posee responsabilidades distintas durante el proceso, las cuales son descritas a continuación:  Coordinador: es el encargado de generar los reportes estadísticos y la creación de usuarios. 52  Radio Operador: es el responsable de pre-asignar reportes de atención a los paramédicos desplegados.  Paramédico: es el que realiza la carga de los reportes de atención, en el momento o después de que ocurre un incidente. Para los casos del Radio Operador y del Paramédico, estos roles pueden ser intercambiados, ya que el primero puede ser Paramédico en algún momento, debido a que estando de servicio en la calle puede llegar a atender un incidente y reportar el caso y, el segundo puede llegar a cubrir la inasistencia de un Radio Operador teniendo que cumplir sus funciones.En cuanto al Coordinador, este rol lo desempeñan funcionarios de mayor jerarquía en la Brigada, y son éstos los que se encargan de realizar las estadísticas de los accidentes ocurridos. Siguiendo con la fase de requisitos de AgilUs, se describen los requerimientos funcionales y no funcionales identificados aplicados en el sistema. 3.1.5. Listas de Requerimientos Funcionales y No Funcionales Durante las reuniones efectuadas con los funcionarios de la Brigada, se definieron diversos requisitos funcionales y no funcionales, los cuales fueron considerados al momento del desarrollo de las funcionalidades del sistema. 3.1.5.1. Requerimientos Funcionales Seguidamente, se describirán cada uno de los requerimientos funcionales que formaron parte del sistema, distribuidos según el perfil de los diferentes usuarios: Requerimientos comunes para cada perfil:  Iniciar/Cerrar Sesión: realizará el inicio de la sesión con su correo electrónico y contraseña. 53  Editar Perfil: podrá modificar los datos de su perfil. Requerimientos para el perfil Coordinador:  Búsqueda de Reporte de Atención o Paciente: éstos se buscarán por número de casos o por número de cédula de identidad del paciente atendido.  Generar Reportes Estadísticos: podrá acceder a la generación de reportes estadísticos, donde podrá escoger el rango de tiempo según lo desee, por día, semana, mes, semestre o año.  Editar Usuarios: podrá editar los datos de los usuarios que estén registrados en el sistema.  Crear Usuarios: podrá crear usuarios para los paramédicos a fin de que puedan acceder al sistema. Requerimientos para el perfil Radio Operador:  Pre-Asignar Reporte de Atención: realizará pre-asignación de reportes de atención, concediendo el caso al paramédico que asista a atender el accidente.  Cargar Información en el Libro de Novedades: se encargará de llenar el libro de novedades, el cual está asociado a cada reporte de atención. Requerimientos para el perfil Paramédico:  Cargar y finalizar Reporte de Atención: procederá a cargar los reportes de atención sobre el incidente ocurrido. 3.1.5.2. Requerimientos No Funcionales Los requerimientos No Funcionales se señalan a continuación: 54  Usabilidad: el usuario debe ser capaz de desarrollar tareas rápidamente, una vez que se ha aprendido a usar el sistema. El sistema debe plantear ayudas a los usuarios para apoyarlos cuando deban enfrentar los errores que cometen al usar el sistema.  Disponibilidad: se debe permitir usar el sistema en cualquier momento y cualquier ubicación geográfica con conexión a Internet. Cuenta con un nivel de servicio para los usuarios de siete (7) días por veinticuatro (24) horas, a menos que exista algún posible inconveniente externo al sistema.  Mantenibilidad en el tiempo: con el objetivo de poder realizar los cambios necesarios en el menor tiempo posible a fin de garantizar la disponibilidad del Sistema, es decir, que una vez culminado, no se necesite a una persona verificando constantemente que el sistema funcione correctamente. Ofrecer mantenimiento correctivo y preventivo, para soportar el buen funcionamiento estacionario e incremental, por el aumento en el número de usuarios.  Portabilidad: al sistema se puede acceder independientemente de la plataforma que se esté utilizando, solo debe requerir de la disposición de un navegador Web sin importar el sistema operativo.  Escalabilidad: las funcionalidades son implementadas previniendo futuras mejoras sobre las mismas, de manera que pueden ser incorporadas afectando el código existente de la menor forma posible.  Seguridad: toda la información contenida en el sistema esta resguardada contra accesos no autorizados, mediante mecanismos de autenticación y sesiones que no permitan la fuga de información.  Tolerancia a fallas: en el exacto momento que ocurra una falla, ya sea intencional o no, la aplicación debe ser capaz de responder al usuario y volver al estado que se encontraba al momento anterior de ocurrir la falla. 55 Los requerimientos no funcionales mencionados se aplicaron para cada módulo del sistema, los cuales son una abstracción para los usuarios finales, ya que no deben realizar ninguna tarea específica para cumplir con ellos. Una vez culminada la fase de requisitos se continúa con la Fase de Análisis. 3.2. Fase II: Análisis Se refiere al estudio de la solución desarrollada, en la cual se diseñaron distintos prototipos de interfaz, se especificaron guías de estilo, se realizaron modelos de casos de uso y objetos de dominio, para así puntualizar las funcionalidades que tendrá el producto desarrollado. A continuación se presentarán cada una de estas actividades. 3.2.1. Prototipos de Interfaz Los prototipos de Interfaz, que sirvieron de apoyo para establecer el diseño del Sistema se pueden visualizar en las figuras que seguidamente se muestran. En la Figura 22 se reseñan la interfaz de inicio de sesión en el Sistema, con un encabezado donde se encuentran los logos tanto del Gobierno Bolivariano de Venezuela, como el del Sistema y el de la Brigada de Paramédicos. Figura 22. Interfaz de Login Luego, se encuentra el panel de inicio de sesión, en el cual se requiere el correo electrónico, su contraseña y la selección del tipo de rol que iniciará sesión. También se 56 planteó la colocación de un pie de página o footer, con información adicional del MPPTTOP y un botón de “Acerca de”, el cual brinda la información del equipo de desarrollo. En la Figura 23 se señala el prototipo de interfaz de la página principal, luego de haber iniciado sesión, el cual cuenta con el acceso a las funcionalidades respectivas para su tipo de rol. Figura 23. Interfaz Principal En la Figura 24 se aprecia el prototipo digitalizado del reporte de atención, se buscó mantener una semejanza con planilla original para que el aprendizaje y uso de SisGEVI sea efectivo y ágil: Figura 24. Interfaz de Reporte de Atención Página 1 En la Figura 25 se describe cómo fue planteada la interfaz de lo que será el Reporte de Novedades, que consta de tres (3) campos los cuales serán llenados automáticamente por el sistema y, se refleja el campo de texto de “Especificación de Novedades”, el cual será llenado dependiendo de lo que ocurra en el momento de atender un accidente. 57 Figura 25. Interfaz Reporte de Novedades Una vez mostrado los prototipos de las principales interfaces, se procede a presentar las guías de estilos por las cuales se rige el sistema. 3.2.2. Guías de estilo En la Guía de Estilos aplicada, se tomaron en consideración las características relacionadas con el aspecto de la interfaz de usuario. En la Tabla 1 se identifica este entregable: Tabla 1. Guía de Estilo de SisGEVI Guía de Estilo Logos Logo de la Escuela de Computación Logo de la Universidad Central de Venezuela Logo de la Facultad de Ciencias 58 Logo de SisGEVI Logo del Gobierno Bolivariano de Venezuela Logo de la Brigada de Paramédicos Paleta de Colores Colores Hexadecimal #FFD166 #003265 #337AB7 #FFFFFF Tipografía "Helvetica Neue", Helvetica, Arial, sans-serif; Las imágenes utilizadas en todas las interfaces son las del logo de la República Bolivariana de Venezuela, el de SisGEVI y el de la Brigada de Paramédicos. El diseño del logo de SisGEVI, se realizó centrado en el trabajo que realizan estos funcionarios en las principales autopistas de la Gran Caracas. Consta de una pequeña imagen de una carretera, combinada con las siglas del Sistema y la cruz de atención de emergencias. Todos estos elementos forman una analogía al trabajo que efectúan diariamente los funcionarios de la Brigada de Paramédicos. La paleta de los colores principales de la interfaz serán colores anaranjado, blanco y azul, los cuales se mantendrán en todo el sistema, debido a que representa los colores que identifican la brigada. Los botones principales son siempre azules para no anular el contraste de azul-naranja seleccionado para distintas partes del sistema. La tipografía seleccionada para la aplicación fue Helvetica Neue, cambiando de tamaño solamente para los títulos y subtítulos del sistema. Esta tipografía es del tipo Sans Serif, y fueron utilizados debido a que son letras básicas sin muchos detalles, las cuales son altamente 59 recomendadas para el desarrollo web. Se diseñó una interfaz que fuese lo más simple posible, pero que cumpliera con las funcionalidades descritas anteriormente, se evaluó la posición de los elementos y el tamaño que cada uno debía tener, esto con el fin de no sobrecargar la interfaz y que fuera fácil uso. Procediendo con la Fase de Análisis de AgilUs, se detallaran los casos de uso que permitieron modelar los requerimientos funcionales de SISGEVI. 3.2.3. Modelo de Casos de Uso A través de los diagramas de Casos de Uso (CU) se presentan los requerimientos funcionales del Sistema, se muestra por cada funcionalidad, una breve descripción y la solución planteada. En la Figura 26, se observa el CU correspondiente al nivel 0 de abstracción, en este se modela el sistema a nivel general, con sus respectivos actores. Figura 26. Caso de Uso Nivel 0. Seguidamente se describen los principales actores de la aplicación:  Coordinador: realiza la obtención de los reportes estadísticos de los accidentes, así como también la creación de usuarios nuevos en el Sistema.  Radio Operador: se encarga de la preasignación de los casos de atención, así como también de llenar el libro de novedades por accidente. 60  Paramédico: la función del paramédico es simple, carga cada reporte de atención que le haya sido reasignado. La Figura 27 revela los casos de uso correspondientes al nivel 1 de abstracción, los cuales presentan las principales funcionalidades del sistema y su interacción con los actores. Figura 27. Caso de Uso Nivel 1. En la Figura 28, se señala el caso de uso para el actor Coordinador y sus principales funcionalidades en el Sistema. Figura 28. Caso de Uso Nivel 1, Actor Coordinador. 61 En la Figura 29, se identifica el caso de uso para el actor Radio Operador y sus principales funcionalidades en el Sistema. Figura 29. Caso de Uso Nivel 1, Actor Radio Operador. En la Figura 30, se detallan el caso de uso para el actor Paramédico y sus principales funcionalidades dentro de SisGEVI. Figura 30. Caso de Uso Nivel 1, Actor Paramédico. Una vez presentado el diagrama de caso de uso de cada uno de los actores, se presenta su respectiva especificación, que se refiere a la explicación de cada una de las partes definidas del sistema. Las descripciones de los casos de uso representan todas las posibles interacciones de los actores con el sistema en los eventos enviados o recibidos por estos. En la Tabla 2 se observa la especificación del CU de iniciar sesión. 62 Tabla 2. Especificación CU Iniciar Sesión Caso de uso: CU. 1 Iniciar Sesión. Actor: todos los actores. Precondición: el usuario debe existir en el sistema. Acción: funcionalidad que permite al usuario acceder al sistema, mediante un su correo electrónico y una contraseña. Condición de Éxito: se enviará a una a página donde se le permite al usuario escoger el tipo de rol que tendrá luego se redirecciona a la página principal con las opciones de las funcionalidades respectivas. El Anexo B contiene todas las tablas de especificación de los Casos de Uso elaborados, que describen las funcionalidades de SisGEVI. Presentados los casos de uso del sistema y siguiendo con la Fase de Análisis de AgilUs, se presenta el Diagrama de Objeto de Dominio. 3.2.4. Modelo de Objeto de Dominio El Diagrama de Objetos del Dominio representa los entes que existen en el contexto de SisGEVI y la interacción que existe entre ellos, con la finalidad de alcanzar una mejor comprensión tanto del contexto como de los objetos que existen en el Sistema. En la Figura 31 se tiene como dominio el sistema web SisGEVI, existen tres (3) tipos de usuarios que interactúan con el Sistema: Coordinador, Radio Operador y Paramédico. 63 Figura 31. Diagrama de Objeto de Dominio. Continuando con la Fase de Análisis de AgilUs, se presenta el Diseño Lógico y Físico de la Base De Datos de SisGEVI. 3.2.5. Diseño Lógico y Físico de la Base de Datos El Sistema Manejador de Base de Datos seleccionado para el desarrollo de SisGEVI, fue PostgreSQL, fue necesario construir un conjunto de tablas que conforman la lógica que hace posible el funcionamiento y la persistencia del sistema, las cuales fueron diseñadas para soportar todos los objetivos planteados en el presente TEG. En la Figura 32 se señalan las treinta y cinco (35) tablas que interactúan con el sistema. 64 Figura 32. Tablas de la BD de SisGEVI. Las referidas tablas serán explicadas a continuación: 1. Medicas: se almacenan todas las posibles causas médicas que se reflejan en la planilla en físico. 2. Causas_medicas: se guardan las atenciones que hayan ocurrido debido algún problema médico. 3. Traumas: se almacenan todas las posibles causas de trauma que se reflejan en la planilla en físico. 4. Causas_traumas: se guardan las atenciones que hayan ocurrido debido algún trauma. 5. Evaluaciones: contiene las evaluaciones médicas que se le realicen a los pacientes, como su frecuencia respiratoria, si está consciente o inconsciente y otra información referente a la evaluación. 6. Pieles: se definen las texturas y temperatura de la piel del paciente. 7. Pulsos: se registran las pulsaciones del paciente y el sitio del cuerpo donde se producen. 65 8. Sonidos: se almacenan los sonidos respiratorios predefinidos en la planilla de atención original, los cuales están asociados con la tabla respiratorios. 9. Evaluacion_piel: tabla Relación entre la tabla Evaluaciones y Pieles se registran las evaluaciones médicas y los tipos de piel que sean atendidos. 10. Evaluacion_pulso: tabla Relación entre la tabla Evaluaciones y Pulsos se almacenan las evaluaciones y las mediciones de pulsos del paciente que sean atendidos. 11. Evaluacion_Sonido: tabla Relación entre la tabla Evaluaciones y Sonidos se guardan las evaluaciones médicas y los sonidos respiratorios de los pacientes que sean atendidos. 12. Fuentes: se definen las fuentes de información, desde donde se notificó el incidente. 13. Grupos: contiene los Grupos de Guardias de la Brigada. 14. Historias: se guardan las Historias Médicas levantadas en el momento que ocurre un incidente. 15. Lesiones: contiene las Lesiones que pueda tener un paciente al tener un accidente. 16. Mecanismos: registra todos los posibles casos de atención o mecanismos de lesión que puedan ocurrir en un incidente. 17. Medicamentos: agrupa los medicamentos que puedan ser utilizados por los paramédicos al momento de brindar una atención. 18. migrations: es una tabla creada por defecto por Laravel y almacenan las migraciones realizadas en el sistema, al utilizar el comando Migrate. 66 19. Neurológicos: se almacenan los datos referentes a las reacciones neurológicas de los pacientes atendidos. 20. Novedades: se recopilan los Reportes de Novedades de cada Caso de Atención. 21. Pacientes: se registra los datos asociados a los pacientes que sean atendidos durante el incidente. 22. Paramedicos: agrupa los datos asociados a los paramédicos que pertenecen a la Brigada. 23. Planillas: se almacenan los datos asociados a los Reportes de Atención, esta es la más importante de todo el sistema ya que contiene todo lo necesario para obtener las estadísticas. 24. Procedimientos: se registran los procedimientos que se le fueron aplicados a un paciente durante un servicio de atención. 25. Realizados: se guardan los identificadores de los procedimientos aplicados así como cualquier información adicional. 26. Ubicaciones: se almacena la ubicación o parte del cuerpo donde exista una lesión. 27. Unidades: se agrupan las Unidades que posee la Brigada para brindar atención. 28. Zonas: se registra las Zonas de Atención donde brinda servicio la Brigada. 29. Reacciones: se almacenan los diferentes tipos Reacciones Pupilares que pueden ser encontradas en los pacientes durante un incidente. 30. Reaccion_Neurologico: tabla Relación entre la tabla Reacciones y tabla Neurológicos se almacenan las reacciones encontradas de un paciente durante un incidente. 67 31. Planilla_mecanismo: tabla Relación entre la tabla Planilla y la tabla Mecanismos se almacenan las atenciones que se sean efectuadas en los incidentes. 32. Planilla_realizado: tabla Relación entre la tabla Planillas y la tabla Realizados se guardan los procedimientos médicos efectuados por el funcionario a cada paciente atendido. 33. Planilla_ubicacion: tabla Relación entre la tabla Planillas y la tabla Ubicación se registran las partes y zonas donde el paciente sufre una lesión. 34. Planilla_unidad: tabla Relación entre la tabla Planillas y la tabla Unidad se almacenan las unidades asignadas a cada incidente. 35. Planilla_zona: tabla Relación entre la tabla Planillas y la tabla Zona se almacenan las zonas donde ocurre un incidente. En las Figura 33 se aprecia el Modelo Relacional de SisGEVI. 68 Figura 33. Modelo Relacional de SisGEVI. 69 Una vez presentado el Diseño Lógico y Físico de la Base de Datos, se procede a presentar la Plataforma de Desarrollo con la cual se trabajó en la implementación del Sistema 3.2.6. Plataforma de Desarrollo Las funcionalidades de SisGEVI fueron desarrolladas bajo un enfoque web cliente- servidor, utilizando el patrón de diseño MVC y en un ambiente de desarrollo bajo los sistemas operativos Windows 10 y Debian. El Sistema Manejador de Bases de Datos usado fue PostgreSQL, y se utilizó el manejador de versiones Git usando como alojamiento Bitbucket, realizando diversos respaldos del código, manteniendo estable y funcional en el mencionado repositorio. El lenguaje de desarrollo del lado de servidor del sistema web fue PHP, bajo el Framework Laravel en su versión 4.2. En cuanto a la programación del lado del cliente se utilizó: HTML5, Bootstrap, JavaScript, Ajax, jQuery y jQuery-UI. Por otro lado, se hizo uso de la librería de PHP thujohn/pdf para la generación de los reportes de atención y libros de novedades en PDF, y para las estadísticas se usó una librería de JavaScript llamada excellentexport para su generación en formato de hojas de cálculo. En la Figura 34 se muestra el conjunto de herramientas y tecnologías usadas en el proyecto. Figura 34. Plataforma de Desarrollo. 70 Una vez descritas todas las tecnologías utilizadas en el desarrollo del Sistema, se sigue con el método AgilUs, y se continúa con la Fase de Prototipaje. 3.3. Fase III: Prototipaje 3.3.1. Arquitectura del Sistema SisGEVI se desarrolló bajo una arquitectura Cliente-Servidor de tres capas, siguiendo el patrón Modelo-Vista-Controlador, la cual consistió en mantener por separado la lógica de negocios y la presentación del sistema. Existen tres (3) tipos de perfiles asociados a los usuarios pertenecientes a la Brigada de Paramédicos. Todos ellos se conectan a SisGEVI en la Capa de Presentación, a través de una interfaz gráfica común, por la que se accede mediante una conexión a internet y un navegador web. La capa de presentación se comunica con la capa de negocio, la cual se encuentra en el servidor de la Dirección de Tecnología del MPPTTOP, en donde reside y se ejecuta el sistema, se reciben las peticiones del usuario y se envían las respuestas tras el proceso. La capa de negocios a su vez se comunica tanto con la capa de presentación, para recibir las solicitudes y presentar los resultados, como con la capa de datos, que es donde reside la información y es la encargada de acceder a la misma. Seguidamente en la Figura 35 se identifica la arquitectura de SisGEVI antes expuesta. 71 Figura 35. Arquitectura de SisGEVI 3.3.2. Desarrollo del Sistema Para el desarrollo de SisGEVI se usó la versión del framework Laravel 4.2 del lado del servidor. La razón de esta elección se debe a un requerimiento del MPPTTOP se solicitó que se utilizara un framework de PHP que estuviese entre los disponibles en sus repositorios. En la Figura 36 se detalla el script que realiza la conexión a la BD PostgreSQL del sistema. Figura 36. Configuración de Conexión de BD Luego se definen las migraciones de las tablas de la BD, esto da facilidad de crearlas directamente sin tener que ejecutar a mano ninguna sentencia SQL, en la Figura 37 se puede 72 observar cómo es la estructura del script de una migración en Laravel, se toma como ejemplo la tabla Paramédicos. Figura 37. Ejemplo de Migración, Tabla de Paramédicos. Luego de hacer todos los archivos de migración se ejecuta un comando por consola llamado php artisan migrate, de ejecutarse correctamente se mostrara un mensaje de confirmación, que se puede apreciar en la Figura 38. Figura 38. Ejecución exitosa del comando Migrate Como estándar al utilizar un ORM los nombres de las tablas deben ser en plural para así establecer la relación con los respectivos Modelos. Luego de haber creado todas las tablas de la base de datos, procedemos a crear los Modelos asociados, la tabla con la cual se asocia, definiendo sus relaciones entre los mismos, el nombre de estos archivos debe ser en singular, manteniendo el estándar de ORM. También creamos los controladores asociados a dichos Modelos, para el desarrollo del sistema creamos solamente los que fueron utilizados para el desarrollo de las funcionalidades. En la Figura 39 se puede observar el Modelo asociado a la Tabla Planillas: 73 Figura 39. Modelo de la Tabla Planillas En la Figura 40 se puede apreciar el controlador asociado al modelo anterior. Figura 40. Controlador del Modelo Planilla Luego de tener todos nuestros controladores y modelos creados pasamos a configurar el archivo Routes.php el cual contendrá todas las rutas de acceso del sistema y su controlador asociado, en la Figura 41 se puede apreciar cómo se estructuran: 74 Figura 41. Archivo Rutas de SisGEVI Como primera parte de desarrollo de funcionalidades creamos el controlador de sesiones donde haremos todo lo referente al manejo de sesión en el sistema, validar roles, iniciar sesión, cerrar sesión y recuperar contraseña. En la Figura 42 se puede apreciar un segmento del código donde podemos ver como se efectuó el proceso de iniciar la sesión en el Sistema y redirigirlo a la vista correspondiente dependiendo del rol que haya seleccionado: 75 Figura 42. Parte del Código de Iniciar Sesión. Siguiendo con el desarrollo de SisGEVI, pasamos a crear las vistas del Sistema, utilizando el motor de plantillas Blade de Laravel el cual facilita la creación de código HTML, así como la inclusión de los códigos CSS, JavaScript y JQuery. Se crearon una serie de plantillas que son comunes en las vistas del Sistema, como el encabezado, el pie de página y la plantilla Base haciendo el código reusable y más fácil de leer. En la Figura 43 se observa el código de una de la plantilla base que contiene el header y footer del sistema. Figura 43. Plantilla Base.blade.php 76 En la Figura 44 se puede ver parte del código de la vista para iniciar sesión, donde añadiremos a través de la propiedad extends el Template Base: Figura 44. Vista de la página de login. Debido a que se utilizó el patrón MVC, se manejó la misma estructura de carpetas que tiene Laravel, separando el modelo, vista y controlador en sus respectivas carpetas. Se crearon seis (6) controladores: 1. MainController: controlador principal del sistema es el que gestiona las rutas a las URL principales. 2. SesionController: controlador que permite los accesos al sistema, realizando las operaciones de inicio y cierre de sesión y validaciones de rol de usuario. 3. ParamedicosController: gestiona las acciones CRUD, Crear, Obtener, Actualizar y Borrar (del original en inglés: Create, Read, Update y Delete) del recurso Paramédico. 4. PlanillasController: controla las acciones CRUD, del recurso Planilla de Atención. 5. NovedadesController: realiza las acciones CRUD, del recurso Novedades de Atención. 77 6. ReportesController: se encarga las acciones CRUD, del recurso Reportes, se encarga de obtener las estadísticas. 7. PDFController: se encarga de la Generación de los archivos en Formato PDF Una vez culminado el desarrollo, se procedió a implementar los patrones de interacción que permitió explicar las interfaces que posee SisGEVI 3.3.3. Lista de Comprobación Se aplicó esta técnica a cinco (5) usuarios del sistema, que conforman el grupo de involucrados en el proceso de gestión de accidentes viales, tanto Coordinadores, Radio Operadores y Paramédicos. Esto permitió identificar fallas en el cumplimiento del control y libertad para el usuario. A las cinco (5) personas señaladas a las cuales se les aplicó esta técnica, se les facilitó la interfaz de usuario del Sistema para la realización de las actividades relacionadas con la automatización del proceso. Fue aplicada la siguiente lista de comprobación: Tabla 3. Lista de Comprobación Lista de Comprobación Se cumple No se cumple Reconocer en lugar de recordar. X Usar indicadores visuales. X Flexibilidad en la interfaz de usuario. X Feedback a las acciones del usuario. X Consistencia en apariencia y uso X Evitar palabras coloquiales. X Mostrar al usuario lo que necesita. X 78 Permitir al usuario recuperarse de los errores X Mantener la interfaz simple, sencilla y organizada. X Funciones del sistema claramente visibles. X Permitir al usuario personalizar la IU. X Culminada la fase de Prototipaje se continúa con la siguiente etapa de la metodología, la Fase de Entrega. 3.4. Fase IV: Entrega 3.4.1. Pruebas de Usabilidad Durante esta prueba, se evaluó la usabilidad de SisGEVI, considerando los criterios creados por expertos en IHC, que se describen en la Tabla 4. Tabla 4. Estándares de Usabilidad. (Acosta, 2011) Criterio Descripción Accesibilidad El sitio es visible en cualquier configuración que tenga el cliente. Navegabilidad La información debe ser fácil de encontrar, debe haber consistencia en los elementos de navegación. Lenguaje manejado Debe ser fácil de entender, de acuerdo al tipo de usuario al que este dirigido el Sistema. Conceptos utilizados Deben ser adecuados al usuario al que está dirigida el Sistema. Consistencia En los títulos, cabeceras y etiquetas de links. La familiaridad y el reconocimiento deben permitir a los usuarios asociar ciertos elementos con ciertas funcionalidades. 79 Las pruebas de usabilidad, se le fueron aplicados a veinte (20) usuarios de los tres (3) diferentes roles, tanto Coordinador, Radio Operador y Paramédico, las cuales consistieron en un cuestionario donde se empleó la escala de Likert, ante los cuales el usuario debe mostrar su acuerdo o desacuerdo. Fueron utilizadas cinco (5) alternativas de respuestas para cada enunciado: totalmente de acuerdo, de acuerdo, ni de acuerdo ni en desacuerdo y totalmente desacuerdo. Seguidamente, los resultados fueron recabados y totalizados, calculando el promedio obtenido por cada uno de los criterios. En la Tabla 5 se describen los resultados de la encuesta. Tabla 5. Resultados de Prueba de Usabilidad Planteamiento Resultados Gráfico Los títulos, menús y textos del Sistema son legibles. 4/5 (80%) de los usuarios estuvo totalmente de acuerdo y 1/5 (20%) estuvo de acuerdo Los colores utilizados contribuyen a la percepción adecuada del Sistema 3/5 (60%) de los usuarios estuvo de acuerdo y 2/5 (40%) estuvo ni de acuerdo ni en desacuerdo 80 Los descriptores del Sistema son claros y precisos 2/5 (40%) de los usuarios estuvo totalmente de acuerdo y 2/5 (40%) estuvo de acuerdo y 1/5 (20%) ni de acuerdo ni en desacuerdo Se ofrece una organización que facilita la navegación 3/5 (60%) de los usuarios estuvo de acuerdo, 1/5 (20%) Totalmente de acuerdo y 1/5 (20%) estuvo ni de acuerdo ni en desacuerdo El diseño del Sistema favorece su uso 3/5 (60%) de los usuarios estuvo de acuerdo y 2/5 (40%) Totalmente de acuerdo El Sistema se puede ejecutar de manera intuitiva 3/5 (60%) de los usuarios estuvo de acuerdo y 2/5 (40%) Totalmente de acuerdo Es un Sistema fácil de utilizar 4/5 (80%) de los usuarios estuvo de acuerdo y 1/5 (20%) Totalmente de acuerdo 81 De esta manera, es posible concluir que los resultados de esta evaluación fueron favorables, ya que se estuvo totalmente de acuerdo (5) o de acuerdo (4) con los planteamientos del cuestionario la mayoría de los criterios tomados en cuenta, lo que indica que tanto SisGEVI y las funcionalidades desarrolladas resultan intuitivas y fáciles de usar para los usuarios finales. 3.4.2. Pruebas de Instalación Las pruebas de instalación del Sistema se realizaron directamente en el ambiente de producción, el cual es un servidor perteneciente a la Oficina De Tecnología De Información y Desarrollo Organizacional (OTIDO), del MPPTTOP. El ambiente de producción se encuentra bajo ambiente Debian. Fue instalada en el servidor vía SSH utilizando comandos en la consola del Sistema Operativo. Figura 45. Sistema Ejecutándose en Ambiente del MPPTTOP. Los elementos de ayuda disponibles en el Sistema son útiles 4/5 (80%) de los usuarios estuvo de acuerdo y 1/5 (20%) Totalmente de acuerdo 82 Finalmente, los resultados fueron exitosos, debido a que el Sistema funcionó perfectamente, mientras que los accesos y modificaciones a la base de datos se realizaron de manera satisfactoria. SisGEVI fue desarrollado teniendo siempre un enfoque hacia los usuarios, así como lo establece AgilUs, ya que se mantuvo constante interacción con los mismos, para constatar el cumplimiento de los requerimientos establecidos en la primera fase de la metodología. De igual manera se realizaron los entregables necesarios para cada etapa, dejando así una documentación que permita que el sistema sea escalable y adaptable a los cambios en un futuro. Descrito el código del sistema, la estructura y las pruebas que se realizaron aplicando esta metodología, el siguiente capítulo contiene los resultados finales obtenidos con SisGEVI. 83 Capítulo IV: Resultados En el presente capítulo se detallan los resultados obtenidos luego de la aplicación de la metodología descrita en el capítulo anterior para el desarrollo de SisGEVI. A través del siguiente diagrama de flujo se puede constatar el proceso de registro de los datos de los accidentes viales luego de ser automatizado, se mantiene la misma forma en la que ocurre el proceso manual, con la diferencia que los funcionarios de la Brigada tendrán como facilidad el uso de SisGEVI, para el proceso de registro de reportes de atención y generación de estadísticas. Figura 46. Sistema Ejecutándose en Ambiente del MPPTTOP. SisGEVI se encuentra conformado por tres (3) módulos: módulo Coordinador, Radio Operador y el de Paramédico. El Módulo Coordinador, está integrado por las funcionalidades que son utilizadas por los Paramédicos y Radio Operadores, y las propias de este tipo de usuario, las cuales son: generar estadísticas, búsqueda de casos o de pacientes y la edición de perfiles de los usuarios registrados en SisGEVI. El Módulo de Radio Operador consta de una sección en la que se listan todos los Reportes de Atención que hayan sido asignados por él y por la opción de preasignación de casos, en la que se establecen los Reportes de Atención cuando ocurre un 84 accidente. El Módulo Paramédico consta de una sección para la carga de los distintos Reportes que se le hayan consignados. Seguidamente se describen las principales interfaces del Sistema y el proceso de inicio de sesión.  Página Principal de SisGEVI: se muestra una descripción del sistema e imágenes que identifican las labores de los paramédicos del MPPTTOP como se muestra en la Figura 47: Figura 47. Página Principal de SisGEVI  Encabezado Principal: se ubica en la parte superior, presentándose del lado izquierdo el logo del Gobierno Bolivariano, en la parte central el logo de SisGEVI, y del lado derecho el logo de la Brigada de Paramédicos, tal como se observa en la Figura 48. Figura 48. Cabecera de SisGEVI.  Pie de Página: se ubica en la parte inferior y posee información referente al MPPTTOP, al tipo de Licencia GPL y un botón que nos redirige a la sección de “Acerca De”, la cual contiene información referente al equipo de desarrollo, tal como se muestra en la Figura 49. 85 Figura 49. Pie de Página de SisGEVI.  Licencia de SisGEVI: se publicó bajo licencia GPL, y dicha información está ubicada en la parte central del pie de página.  Botón de ingreso a SisGEVI: permite acceder al formulario que da acceso al sistema y se encuentra ubicado bajo el logo de la brigada de paramédicos, el cual puede observarse en la Figura 50. Figura 50. Botón de Inicio de Sesión en SisGEVI.  Página de Inicio de Sesión: En esta sección se localiza el formulario de inicio de sesión, donde se solicitan los campos obligatorios referidos al Correo Electrónico y Contraseña. Para tener acceso, los paramédicos deben haber sido registrados previamente por el Coordinador, quien se encuentra autorizado para crear cuentas a los miembros de la Brigada. En la Figura 47 se observa dicha sección: Figura 51. Página De Inicio de Sesión de SisGEVI 86  Restablecer contraseña: en caso de olvido de la contraseña, el usuario puede restablecerla desde el enlace “¿Olvidó Su Contraseña?”. De inmediato se desplegara un formulario solicitándole un correo electrónico a donde enviar los pasos para su recuperación, en la Figura 52 se puede ver dicha sección: Figura 52. Restablecer Contraseña de SisGEVI. Luego de ingresar el correo solicitado, en caso de estar registrado en el Sistema, se le notifica al usuario por medio de un mensaje vía correo electrónico para dar inicio al proceso de restablecimiento de contraseña, en caso contrario se mostrará un mensaje de error solicitándole uno valido para recuperar la contraseña. En la Figura 53 se aprecia el momento en que el correo fue validado exitosamente. Figura 53. Caso Éxito de Restablecer Contraseña de SisGEVI. Inmediatamente al aparecer la notificación de correo enviado, se enviará un mensaje con la información necesaria para continuar con el proceso de cambio de contraseña, el cual se puede observar en la Figura 54. 87 Figura 54. Correo de Contraseña de SisGEVI. Continuando con el proceso de restablecimiento de contraseña, el usuario debe ingresar a la dirección que se le envió, la cual lo redirigirá al formulario que requiere la información del correo y el Código de Recuperación que le fue enviado, tal como se puede apreciar en la Figura 55. Figura 55. Formulario de Recuperación de Contraseña de SisGEVI. Si la información suministrada es validada se muestra al usuario un mensaje de éxito y se le solicita que ingrese la nueva contraseña, lo cual se aprecia en la Figura 56. Figura 56. Token Validado de SisGEVI. Si el proceso se ejecuta correctamente, se mostrará un mensaje que indica que la contraseña fue modificada exitosamente, como se aprecia en la Figura 57. 88 Figura 57. Contraseña Cambiada Exitosamente de SisGEVI. Si el usuario recuerda su contraseña y desea acceder a SisGEVI, luego de haber ingresado los datos, y posee privilegios de Coordinador, automáticamente se redirige a la Página Principal, de lo contrario se le solicita al funcionario que indique bajo qué rol se conectara, si es por Radio Operador o Paramédico, en la Figura 58 se puede apreciar dicha sección del sistema: Figura 58. Pantalla de Selección de Rol de SisGEVI Ya seleccionado el rol con el cual inicio sesión, se muestra la página principal del respectivo perfil seleccionado.  Barra de Navegación: esta sección se encuentra presente en todas las páginas de SisGEVI luego de haber iniciado sesión, se identifica en su lado izquierdo la ubicación dentro del Sistema, mediante la técnica de migajas de pan, en el centro se encuentra la fecha y hora, y al lado derecho el nombre del usuario que está conectado, con las opciones disponibles de acuerdo a su rol. En la Figura 59 se muestra la sección descrita. Figura 59. Barra de Navegación de SisGEVI 89 En la parte derecha de la “Barra de Navegación” se ubica el nombre del usuario, que contiene las opciones asociadas a la edición del perfil, cerrar sesión y, en caso de tener privilegios de Coordinador, la edición de los perfiles de usuario de SisGEVI. En la Figura 60 se muestra la sección descrita. Figura 60. Desplegable para Coordinador  Editar Perfil: Al acceder a la opción de editar perfil, se mostrará un formulario con los datos del usuario, que pueden ser editados. En la Figura 61 se aprecia la sección descrita. Figura 61. Editar Usuario de SisGEVI  Editar Usuarios: Si se tienen privilegios de Coordinador se podrá editar el perfil a otros usuarios del sistema, como se aprecia en la Figura 62. Figura 62. Editar Usuarios de SisGEVI 90 Seguidamente se describen los módulos contenidos en SISGEVI, así como las funcionalidades que poseen los mismos.  Módulo Radio Operador: se encuentra dedicado exclusivamente a los Radio Operadores de la Brigada de Paramédicos, quienes son los encargados de asignar los Reportes de Atención a los Paramédicos. En la Figura 63 se muestra la página de ingreso al Módulo, la cual consta de tres (3) funcionalidades, Asignar Caso de Accidente, Completar Reporte de Novedades y Ver Casos Asignados por el Usuario. Figura 63. Pantalla Principal de Radio Operador de SisGEVI Asignar Reporte de Atención: la primera funcionalidad se encuentra en el lado izquierdo de la pantalla principal, al presionar el botón de asignar se despliega una ventana emergente con un formulario a completar para realizar la preasignación del caso, como se muestra en la Figura 64: Figura 64. Ventana Emergente de Preasignación de SisGEVI. 91 Esa ventana consta de siete (7) campos que son obligatorios para la correcta preasignación del Reporte de Atención, se le solicita al Radio Operador que especifique la Fuente de Información del suceso, es decir, por cual medio se notificó la ocurrencia de un accidente (Twitter, Frecuencia de la Policía Nacional, Llamadas a Coordinadores, Llamada a 0800-MTTVIAL, Vía Radio), el Paramédico al cual será asignado el caso, el número de reporte, la unidad asignada y la información necesaria acerca de la ubicación del accidente (zona, altura y sentido). Al hacer clic en el botón de “Asignar Caso”, se le notifica al usuario que fue otorgado correctamente, y si desea crear otro Reporte, como se muestra en la Figura 65. Figura 65. Preasignación Correcta de Caso En paralelo se le enviará un correo electrónico al Paramédico, recordándole que debe realizar el registro del Reporte de Atención así como al Radio Operador para que complete el Reporte de Novedades. Desde esta sección se puede acceder al Reporte de Novedades y realizar la carga de información, funcionalidad que se explicara en el siguiente punto. Completar Reportes de Novedades: al asignar un Reporte de Atención, se genera automáticamente un Reporte de Novedades, que es donde se carga la información adicional que se genere durante un incidente. En la Figura 66 se puede apreciar dicha funcionalidad. 92 Figura 66. Reportes de Novedades de SisGEVI. Al acceder a la opción referida se despliega una ventana emergente con los Reportes de Novedades Cerrados o Abiertos que posea el Radio Operador, en la Figura 67 se muestra esta sección: Figura 67. Reporte de Novedades Abiertos y Cerrados de SisGEVI. Al ingresar a un Reporte de Novedades Abierto, se despliega un formulario, como se aprecia en la Figura 68. 93 Figura 68. Pantalla de Carga de Reporte de Novedades de SisGEVI. Los campos referentes a la ubicación del accidente ya se encuentran cargados automáticamente por el sistema, el campo “Novedades de Caso” permite que el Radio Operador registre información adicional que se suscite mientras el incidente sea atendido, si se necesitó otra unidad, una descripción especifica del suceso u otro acontecimiento asociada al caso. El Radio Operador puede realizar tres (3) acciones mientras está llenando un Reporte de Novedad: a) Generar Caso Asociado: permite al Radio Operador asignar un caso de atención que este asociado al que está en curso, sin tener que salir de esta sección, presionando el botón “Generar Caso”. En la Figura 69 se puede apreciar la ventana emergente que se despliega, contiene los mismos campos que el Formulario de Asignación, con la diferencia que en este se indica el número de Reporte por el que está siendo prelado. 94 Figura 69. Caso Extra de SisGEVI. b) Actualizar Caso: el Reporte de Novedades puede contener múltiple información de lo que haya acontecido durante el incidente, esta se registra en el campo de texto “Novedades del Caso”, las cuales pueden actualizarse tal como se muestra en la Figura 70. Figura 70. Actualización de Reporte de Novedad. c) Cerrar Caso: al concluir el servicio de atención y no existan sucesos que reportar, el Radio Operador procede a cerrar el Reporte de Novedades, al proceder dicho cierre con éxito se muestra lo que se observa en la Figura 71. Figura 71. Reporte Cargado Correctamente Casos Asignados Por Usuario: El Radio Operador que esté conectado podrá verificar cuales Reportes de Atención han sido asignados por él, verificar si se encuentran cargados en 95 sistema, como también los Reportes de Novedades que estén completados, esta información se suministra a través de una tabla que se muestra en la Figura 72 . Figura 72. Verificar Casos Asignados Estos Reportes solo pondrán ser visualizados por el Radio Operador vía Web, mas no exportarlos en formato PDF, esta opción solo está permitida para los Usuarios con Privilegios de Coordinador.  Módulo de Paramédico: permite a los Paramédicos de la Brigada registrar los Reportes de Atención asignados con anterioridad. En la Figura 73 se muestra la página principal, la cual consta de la única opción de este tipo de usuario. Figura 73. Pantalla Principal de Modulo Paramédico de SisGEVI. Si el Paramédico tiene asignados Reportes de Atención, se mostrará el botón “Cargar Reporte”, para que realice el registro de los respectivos casos, tal como se observa en la Figura 74. Figura 74. Botón de Carga de Reporte de SisGEVI 96 En la sección de Registro de Reporte de Atención, se despliega un formulario que se aprecia en la Figura 75, los valores que ya fueron informados durante la preasignación ya aparecerán cargados automáticamente en el mismo. Figura 75. Pantalla de Carga de Reporte de Atención de SisGEVI. Este formulario consta de ocho (8) pestañas, las cuales forman parte de la información generada durante un accidente de tránsito o un procedimiento de atención. Luego de cargar todos los datos referentes al Reporte de Atención, se le muestra al Paramédico, que el registro fue efectuado correctamente como se aprecia en la Figura 76. Figura 76. Reporte De Atención Cargado de SisGEVI Una vez enunciadas las funciones que son realizadas por los Paramédicos como por los Radio Operadores, a continuación se explicaran las efectuadas en el Módulo de Coordinador. 97  Módulo de Coordinador: permite a los Coordinadores de la Brigada, tener acceso total al Sistema, ya que pueden realizar las funcionalidades de los Radio Operadores y Paramédicos, y efectuar las funciones específicas de este tipo de usuario, en la Figura 77 se puede apreciar la pantalla principal de este módulo: Figura 77. Interfaz Principal de Coordinador Las funcionalidades en específico que puede realizar este tipo de usuario son descritas a continuación: Generar Reportes Estadísticos: en esta sección se le muestra al Coordinador los rangos por los cuales se pueden calcular los Reportes Estadísticos, al ingresar se le mostrará una nueva interfaz donde se le solicitará que seleccione el tipo de rango que desea obtener para las estadísticas, como se aprecia en la Figura 78. Figura 78. Creación de Reportes Estadísticos 98 Luego de procesar la información y generar las estadísticas, se muestra una pantalla con el resultado de las mismas, así como un botón para volver a la creación de “Reportes Estadísticos” o si se requiere, para exportarlo en formato .ods. En la Figura 79 se puede observar dicho resultado. Figura 79. Interfaz de Resultado de Estadísticas. Posteriormente al mostrar los datos en cifras de los accidentes en forma de tablas, en la parte inferior de la página se encuentran los gráficos asociados a los datos estadísticos generados, como se aprecia en la Figura 80. Figura 80. Grafica de Resultado de Estadísticas en SisGEVI. Los datos estadísticos pueden ser exportados en formato ods para posteriores análisis de otros entes o de otras áreas del MPPTTOP tal cual se observa en la Figura 81. 99 Figura 81. Estadísticas Exportadas en Formato CSV. Búsqueda de Casos: El Coordinador puede Buscar Reportes de Atención por número de Caso o Cédula de Identidad del Paciente, en la Figura 82 se aprecia la opción de búsqueda. Figura 82. Opción de Búsqueda de SisGEVI En esta sección se apertura una ventana emergente donde se muestra la barra de búsqueda y una lista desplegable con el tipo de filtro (Cédula o Caso), en la Figura 84 se observa un ejemplo donde el Coordinador desea obtener información sobre el Caso # 1. Figura 83. Barra de Búsqueda de SisGEVI El sistema al localizar el caso o paciente buscado, mostrará una notificación que indique el éxito de la búsqueda, así como una tabla con la información de él mismo, que se puede apreciar en la Figura 84. 100 Figura 84. Caso Encontrado En caso de seleccionar ver Reporte de Atención, se redireccionará al caso seleccionado a fin de que el Coordinador pueda observarlo directamente en el Sistema y si lo desea, exportarlo en formato PDF. En la Figura 85 se muestra un Reporte de Atención visto desde SisGEVI. Figura 85. Reporte Atención en SisGEVI En la Figura 86 se puede observar un extracto de la presentación del reporte en formato PDF. 101 Figura 86. Reporte Atención en Formato PDF. Si el Coordinador selecciona ver Reporte de Novedades, se le redireccionará al mismo para que pueda visualizarlo y si lo desea exportarlo a formato PDF. En la Figura 87 se muestra el Reporte visto desde SisGEVI. Figura 87. Reporte de Novedad Visto Vía Web. En la Figura 88 se puede observar un ejemplo de la presentación del Reporte de Novedades en formato PDF. 102 Figura 88. Reporte de Novedad en Formato PDF. Crear Nuevo Usuario: en caso de que el Coordinador requiera registrar un usuario nuevo, podrá hacerlo mediante la opción “Crear Usuario”, que se puede apreciar en la Figura 89: Figura 89. Opción de Creación de Usuario en SisGEVI. Al acceder a esta sección se mostrará un formulario que se puede apreciar en la Figura 90, donde se solicita información sobre el usuario a crear, como el nombre, apellido, cédula, correo electrónico, contraseña, género y el tipo de rol que tendrá en el sistema. 103 Figura 90. Pantalla de Creación de Usuarios en SisGEVI. Luego de llenar la información correctamente, se le notificara que el usuario fue creado exitosamente, como se observa en la Figura 91. Figura 91. Creación Correcta de Paramédico Cargar Usuarios: Esta funcionalidad se creó con la finalidad de que el Coordinador pueda registrar usuarios de forma masiva, accediendo a esta opción a través del botón “Cargar Usuarios”, que se puede apreciar en Figura 92. Figura 92. Opción de Creación de Usuario en SisGEVI. 104 Al ingresar a esta opción se mostrará una pantalla con una breve información de lo que debe realizarse para que el proceso de registro masivo se haga de manera correcta, la cual se puede ver en la Figura 93 Figura 93. Pantalla de Carga de Usuarios en SisGEVI. Simultáneamente se le exhibirá al usuario una imagen de cómo debe ser completado el archivo, y además puede descargar un modelo para realizar esta función. Este archivo se puede apreciar en la Figura 94. Figura 94. Archivo Ejemplo Para Carga de Usuarios. Una vez que SisGEVI haya procesado el archivo de usuarios se le notificará al Coordinador que los Paramédicos registrados en el archivo han sido agregados al sistema para su futura asignación de reportes de atención, tal como se puede observar en la Figura 95 Figura 95. Creación Correcta de Paramédicos. Una vez presentado SisGEVI y sus principales funcionalidades, como cierre del TEG, a continuación se presentan las conclusiones. 105 Conclusiones La Brigada de Paramédicos del MPPTTOP realizaba sus procesos de forma manual y carecía de un sistema que les permitiera el registro de información de los incidentes ocurridos en las autopistas de la Gran Caracas y la generación de datos estadísticos, causando en ocasiones pérdida de información relevante en el registro de los datos en los Reportes de Atención, con el desarrollo del Sistema Web para la Gestión de Emergencias Viales en Autopistas de la Gran Caracas (SisGEVI), contenido en el presente TEG, se alcanzó el objetivo planteado, ya que el producto final cumple con los requerimientos expuestos por los usuarios. SisGEVI contribuyó a la recolección de datos en el sitio de los accidentes, debido a que se pueden efectuar con la utilización de equipos móviles por su diseño responsive. Los procesos indicados en el presente TEG fueron plenamente discutidos con los involucrados en la gestión de accidentes viales, revisados y aprobados por el personal coordinador y los paramédicos de la Brigada. SisGEVI fue desarrollado utilizando tecnologías de desarrollo web de acceso libre. El uso del Framework de PHP, Laravel 4.2, como tecnología del lado del servidor agilizó considerablemente el proceso de desarrollo, debido a que se aprovecharon las diferentes estructuras y métodos predefinidos que posee, los cuales minimizan el tiempo y esfuerzo de codificación. De esta manera, la aplicación de estándares de programación facilitó la obtención de un código legible, proporcionando que el mantenimiento y la evolución de la aplicación sea duradera. Ahora bien, la utilización de la metodología AgilUs permitió que el diseño y la construcción de SisGEVI se realizara en iteraciones, puesto que dio flexibilidad para implementar cada uno de los requerimientos, además garantizó la participación del usuario 106 en todo el proceso, manifestando éstos en las diversas reuniones su conformidad con el desempeño y con los resultados arrojados por SisGEVI. Esta metodología también permitió la implementación de un conjunto de actividades en forma organizada y rápida. Fue posible efectuar las adaptaciones por parte del equipo de desarrollo, atendiendo las necesidades expresadas por el usuario para la implementación del sistema. Las pruebas de usabilidad aplicadas en cada iteración, detectaron errores que se corrigieron de manera inmediata, contando con los aportes de los distintos usuarios del mismo. Este sistema web permite llevar a cabo procesos de gestión de accidentes viales de manera coherente, en vista de que se contribuyó en la reducción de errores cometidos durante el registro de reportes de atención y en la generación de las estadísticas, estas ahora se realizan de forma sistemática . Como consecuencia, la elaboración de este TEG realizó un aporte significativo al MPPTTOP, optimizando el proceso de Gestión de Accidentes Viales, a través de la puesta en desarrollo del SisGEVI, a través de la sistematización y organización de los datos relativos a los incidentes que se producen en las autopistas que conforman la Gran Caracas, permitiendo que las estadísticas generadas sean confiables y se realicen en lapsos de tiempo prudentes. Finalmente, los objetivos planteados para la elaboración de este TEG fueron alcanzados, ya que el SisGEVI está en desarrollo y logró resolver la problemática enunciada por la Brigada de Paramédicos del MPPTTOP. 107 Recomendaciones Para que un sistema sea perdurable, es necesario que se efectúen mejoras continuas que le permita adaptarse a las tecnologías de información vigentes y a las necesidades de los usuarios, por tal razón, a continuación se listan una serie de recomendaciones y/o sugerencias que pudieran ser aplicadas a las bases del SisGEVI: 1) Realizar la aplicación Móvil de SisGEVI, para una mejor portabilidad y rapidez de uso. 2) Ampliar el alcance para su aplicación en más autopistas a nivel nacional 3) Efectuar el debido entrenamiento con los usuarios del sistema, para su correcto uso y rapidez al momento de realizar el trabajo. 4) Mantener actualizada la Base de Datos en el ámbito de Mecanismos de Atención y Lesiones para que las estadísticas sean más exactas y precisas. 5) Implementar funcionalidades de accesibilidad, que permitan la inclusión de los usuarios con discapacidades, como aumentar el tamaño de las fuentes, cambiar el contraste de los colores, entre otros. 108 Referencias Acosta, E. (2011). AgilUs: un método ágil de desarrollo de software que incorpora la usabilidad. Caracas. Recuperado el 20 de Julio de 2015. Tomado de http://www.ciens.ucv.ve:8080/genasig/sites/interaccion-humano- comp/archivos/234_CLEI_Acosta_Paper.pdf Alistapart. (2010). Responsive Web Design. Recuperado el 22 de Julio de 2015. Tomado de http://alistapart.com/article/responsive-web-design Alvarez, A. Introducción Lenguajes Web. Chile: LibrosWeb. Recuperado el 22 de Julio de 2015. Tomado de http://www.desarrolloweb.com/articulos/303.php. 2015. Apache. (2013). Servidor HTTP Apache. Recuperado el 12 de Agosto de 2015. Tomado de http://projects.apache.org/indexes/releases.html Araujo, M. (2008). Tecnologia Web. Lima. Recuperado el 9 de Octubre de 2015. Tomado de www.uneweb.edu.ve/disena-paginas-web-con-el-diplomado-de-tecnologia-web/ Catalani, E. (2007). Arquitectura Modelo vista controlador (MVC). Recuperado el 20 de Agosto de 2015. Tomado de https://exequielc.wordpress.com/2007/08/20/arquitectura- modelovistacontrolador/ CONATEL. (2013). Ley de Infogobierno. Recuperado el 10 de septiembre de 2015. Tomado de http://www.conatel.gob.ve/ley-de-infogobierno/ Date, C. Introducción a los Sistemas de Bases de Datos ( 7 ed.). Prentice Hall; Madrid. 2001 Denzer, P. (23 de Octubre de 2002). Paper Postgresql. Recuperado el 11 de Octubre tomado de 2015. Tomado de http://www.academia.edu/5583702/Postgresexpo 109 Duarte J. (2008). Social Influences in brainstorming groups Recuperado el 12 de diciembre de 2015. Tomado de: http://books.google.co.ve/books?id=KtHj- IDy4ZAC&pg=PA5&dq=osborn+brainstorming&hl=es- 419&sa=X&ei=ooebUe2ML8P00gGxvoDwAw&ved=0CDsQ6AEwAg#v=onepage&q= osborn%20brainstorming&f=false E-ducativa. (2000). E-ducativa. Recuperado el 2 de Septiembre de 2015. Tomado de http://e- ducativ.catedu.es/44700165/aula/archivos/repositorio//1000/1057/html/22_componentes_tc nicos_arquitectura_clienteservidor.html Eguíluz, J. (2008). Introducción a JavaScript. febrero: LibrosWeb. Recuperado el 09 de Octubre de 2015 Escofet, C. (2007). El lenguaje SQL. UOC. Recuperado el 1 de Septiembre de 2015. Tomado de ocw.uoc.edu/computer-science-technology-and...de.../P06_M2109_02149.pdf Formix. (2015). Formix. Recuperado el 1 de Septiembre de 2015. Tomado de https://denev66.wordpress.com/2015/04/14/que-es-el-html/ Fowler, M. (2003). Patterns of Enterprise Application Architecture. Addison-Wesley Professional. Garret, J. (2006). Ajax: A New Approach to Web Applications. Tomado de http://www.adaptivepath.com/ideas/ajax-new-approach-web-applications Git Book. (2009). Git Book. Recuperado el 20 de Agosto de 2015. Tomado de https://git- scm.com/book/es/v1 110 GPL. (2007). GNU General Public License. Recuperado el 19 de Mayo de 2016. Tomado de http://www.gnu.org/licenses/gpl.html Good, R. (2005). Ventajas de las aplicaciones web. Recuperado el 16 de feberero de 2015. Tomado de http://www.pixima.net/aplicaciones-web/ventajas-de-las-aplicaciones-web/ Google. (2006). Formularios Google. Recpuerado el 2 de agosto de 2015. Tomado de https://docs.google.com/templates?type=forms Google. (2006). Hojas de Calculo de Google. Recuperado el 1 de Agosto de 2015. Tomado de docs.google.com/spreadsheets Graham, P. (2001). Sistemas Web. Recuperado el 12 de agosto de 2015 .Tomado de http://www.paulgraham.com/road.html Gutiérrez, J. (2004). Framework. Recuperado el 28 de Julio de 2015. Tomado de http://www.lsi.us.es/~javierj/investigacion_ficheros/Framework.pdf. Halpin, T. Object-Role Modeling version 2 (ORM 2). San Francisco: Morgan Kaufmann Publishers . (2009). Hernández, J. (2014). Análisis y Desarrollo Web. Recuperado el 28 de Julio de 2015. Tomado de https://books.google.co.ve/books?id=nYDVBQAAQBAJ Inmotion Hosting. (2013). What is bootstrap. Recuperado el 5 de Agosto de 2015. Tomado de http://www.inmotionhosting.com/support/edu/joomla-3/using-bootstrap/what-is- bootstrap Instituto Nacional de Transporte Terrestre. (s.f). GLOSARIO DE TÉRMINOS EDUCACIÓN Y SEGURIDAD VÍAL. http://www.pixima.net/aplicaciones-web/ventajas-de-las-aplicaciones-web/ 111 Jaramillo, S. (2008). Programación Avanzada en JAVA (Primera ed.). Diciembre: ELIZCOM S.A.S. Recuperado el 20 de Agosto de 2015 jQuery. (2005). jQuery. Recuperado el 28 de Agosto de 2015. Tomado de jquery.com jQuery-UI. (2005). jQuery UI. Recuperado el 1 de Septiembre de 2015. Tomado de http://jqueryui.com/ Laravel. (2013). Laravel Framework. Recuperado el 19 de Agosto de 2015. Tomado de http://laravel.com/docs/4.2/introduction#laravel-philosophy Martínez, A. (2009). WUEP:Un Proceso de Evaluación de Usabilidad Web Integrado en el Desarrollo de Software Dirigido por Modelos. Recuperado el 30 de Septiembre de 2015. Tomado de https://riunet.upv.es/bitstream/handle/10251/11924/WUEP%20- %20Un%20Proceso%20de%20Evaluacion%20de%20Usabilidad%20Web%20...pdf?seque nce=1 Mateu, C. (2004). Desarrollo de Aplicaciones Web. UOC. Mora. (2002). Programacion de Aplicaciones Web. Alicante: Editorial Club Universitario. Morales, J. (2011). Recuperado el 27 de Julio de 2015. Tomado de http://www.slideshare.net/JeremiasMorales/22-lenguajes-del-lado-cliente-9782560 Mosquera, E. (2009). Sistema de Informacion Web. Sistema de Informacion Web. Pereira. Recuperado el 27 de Julio de 2015 MPPTTOP. (2012). www.mpptop.gob.ve. Recuperado el 20 de Octubre de 2015. Tomado de www.mpptop.gob.ve 112 Mozilla Developer Network. (2005). Recuperado el 28 de Julio de 2015. Tomado de https://developer.mozilla.org/es/docs/Web/CSS Mozilla Developer Network. (2006). HTML5. Recuperado el 15 de Agosto de 2015.Tomado de https://developer.mozilla.org/es/docs/HTML/HTML5 Mozilla Developer Network. (2006). JavaScript. Recuperado el 29 de Agosto de 2015. Tomado de https://developer.mozilla.org/es/docs/Web/JavaScript Navarro, E. (2002). Calidad Gestion Procesos en Tecnologias de Informacion. Recuperado el 11 de Octubre de 2015.Tomado de http://www.gestiopolis.com/calidad-gestion-procesos- tecnologias-informacion/ Ojeda, N. (2012). Guia Completa de CSS3. Autoedicion. PHP. (2001). Manual de PHP. Recuperado el 03 de Julio de 2015. Tomado de http://php.net/manual/es/intro-whatis.php PostgreSQL. (2010). PostgreSQL. Recuperado el 27 de Agosto de 2015. . Tomado de http://www.postgresql.org.es/sobre_postgresql Potencier, F. (2002). Symfony 1.2, la guía definitiva. Recuperado el 25 de Agosto de 2015. Tomado de https://librosweb.es/libro/symfony_1_2/capitulo_2/el_patron_mvc.html PTV Group. ( 2000). vision-traffic.ptvgroup.com. Recuperado el 1 de Septiembre de 2015. Tomado de vision-traffic.ptvgroup.com Puig, J. (2013). CSS3 y Javascript avanzado. UOC. Recuperado el 1 de Septiembre de 2015. Tomado de in3.uoc.edu › Inicio › Investigadores 113 ReviBlog. (2014). ReviBlog jQuery Calendar. Recuperado el 20 de Agosto de 2015. Tomado de http://reviblog.net/category/jquery/ Robini. (2007). Cliente-servidor. Recuperado el 15 de Agosto de 2015. Tomado de http://robiniclienteservidor.weebly.com/ventajas---desventajas.html Salazar, F. (2010). Diseño de un Sistema Basado en Tecnología Web para la Gestión y Control de Proyectos de Inversiones y Servicios Bencar Monagas C.A. Recuperado el 20 de Agosto de 2015. Tomado de https://sites.google.com/a/udo.edu.ve/adsi/tesis- pdf/TesisFaviolaSalazar.pdf?attredirects=0&d=1 Sánchez, C. (2004). ONess: un proyecto open source para el negocio textil mayorista desarrollado con tecnologías open source innovadoras. Recuperado el 20 de Agosto de 2015. Tomado de http://oness.sourceforge.net/proyecto/html/index.html Sevilla, U. (2009). Introducción a las Aplicaciones Web. Recuperado el 1 de Agosto de 2015. Tomado de http://www.lsi.us.es/docencia/get.php?id=3887 SIGEPAS. (2012). Recuperado el 16 de Septiembre de 2015. Tomado de SIGEPAS: http://www.ciens.ucv.ve/sigepas Silberschatz. (2002). Fundamentos de Base de Datos. España: McGrawHill (Cuarta Edicion). SITEL. (2006). Sistema de Informacion Territorial Estatal en Linea. Recuperado el 12 de Agosto de 2015. Tomado de http://sitel.jalisco.gob.mx/accidentes/ Sommerville, I. (2005). Ingeniería del software. Madrid: PEARSON EDUCACIÓN. S.A. 114 Torre, A.(2006). Recuperado el 15 de Julio de 2015. . Tomado de Adelat: http://www.adelat.org/media/docum/nuke_publico/lenguajes_del_lado_servidor_o_cliente. html. Uneweb. (2003). PostgreSQL: SMBD. Recuperado el 10 de Octubre de 2015. Tomado de http://uneweb.edu.ve/postgre-sql-nivel-1/ Vega, J. (2004). HTML5: Presente en el Desarrollo Web. Recuperado el 10 de Octubre de 2015 Velasquez, R. (2013). Laravel 4 desde Cero. Recuperado el 2 de Agosto de 2015. Tomado de http://codehero.co/laravel-4-desde-cero-estructura-del-proyecto/ VIT. (2015). Tienda VIT. Recuperado el 2 de Agosto de 2015. Tomado de http://tienda.vit.gob.ve/cita/login W3. (2005). W3. Recuperado el 13 de Agosto de 2015. Tomado de http://www.w3.org/standards/webdesign/htmlcss W3techs. (2015). Recuperado el 1 de Septiembre de 2015. Tomado de http://w3techs.com/ 115 Anexos 116 Anexo A Glosario de Términos.  Accidente de tránsito: colisión en la que participan al menos un vehículo en movimiento por un camino público o privado y que puede dejar al menos una persona herida o muerta y/o producir daños materiales.  Accidente vial: hecho en el cual se involucra el factor humano, el vehículo y la vía dentro de su ambiente determinado, para producir una colisión o choque que trae como consecuencia daños materiales, lesionados(as) y muertas.  Autopista: vía específicamente diseñada para altas velocidades de operación, con los sentidos de flujo o circulación aislados por medio de un separador central, sin intersecciones de nivel y con control total de accesos.  Arteria vial: vía de una sistema vial urbano con prelación de circulación de transito sobre la demás vías; con excepción de la vía férrea y de las autopistas.  Choque: encuentro violento entre un vehículo en movimiento y un objeto fijo (poste, construcción, árbol, isla, entre otros), también puede impactar con uno o más vehículos estacionados.  Colisión: encuentro violento entre dos o más vehículos en movimiento.  Emergencia: es toda aquella situación que surge de manera inesperada y que implica en mayor o en menor grado, riesgos tanto materiales como humanos poniendo en peligro la seguridad de la persona.  Lesión: daño al organismo causado por su brusca exposición a concentraciones de energía que sobrepasan su margen de tolerancia, o a factores que interfieren con intercambios de energía en el organismo. 117  Lesionado: persona que sufre lesiones como consecuencia de un accidente.  Paramédicos: es un profesional de la salud, de medicina pre hospitalaria, usualmente miembro de un servicio de atención de emergencias, el cual responde y atiende a emergencias médicas y de trauma en el ambiente pre hospitalario siguiendo Protocolos Internacionalmente Revisados y Aceptados  Primeros auxilios: cuidados inmediatos que se prestan a una persona accidentada o enferma antes de que reciba tratamiento administrado por personal con formación médica.  Siniestralidad: accidentes, destrucción fortuita o pérdida que sufren las personas en sí mismas o en las propiedades, por choques, colisiones o sucesos análogos  Víctima: es toda persona que resulte muerta o herida como consecuencia de un accidente. Conceptos extraídos de: Instituto Nacional de Transporte Terrestre. (s.f). GLOSARIO DE TÉRMINOS EDUCACIÓN Y SEGURIDAD VÍAL. 118 Anexo B Casos de Uso y Descripciones de Cada Uno. Caso de Uso Nivel 1 Tabla 1. Descripción de CU Iniciar Sesión. Descripción Caso de uso: CU. 1. Iniciar Sesión. Actor: todos los actores. Precondición: el usuario debe existir en el sistema. Acción: funcionalidad que permite al usuario acceder a la aplicación, mediante un usuario y una contraseña. Condición de Éxito: se enviará al usuario a una página con opciones, de acuerdo al tipo de usuario y rol desempeñado. 119 Tabla 2. Descripción de CU Recuperar Contraseña. Descripción Caso de uso: CU. 2. Recuperar Contraseña Actor: todos los actores. Precondición: el usuario debe existir en la aplicación. Acción: funcionalidad que permite al usuario obtener una nueva contraseña para ingresar al sistema en caso de que haya sido olvidada. Condición de Éxito: se enviará al usuario un correo electrónico indicándole un token para que pueda cambiar su contraseña de acceso al sistema. Caso de Uso Nivel 1 - Actor Coordinador 120 Tabla 3. Descripción de CU Buscar Planilla o Reporte de Novedad por Caso o Paciente. Descripción Caso de uso: CU. 1.1. Buscar Planilla o Reporte de Novedad por Caso o Paciente Actor: Solo Coordinador Precondición: El usuario debe estar conectado en la aplicación y tener privilegios de coordinador. El caso a buscar tiene que estar correctamente cargado en el sistema. Acción: funcionalidad que permite al usuario buscar los pacientes, por número de cedula, o casos por número de casos que estén cargados en el Sistema. Condición de Éxito: se mostrara una tabla con una pequeña información del tipo de búsqueda que fue haya sido seleccionado Tabla 4. Descripción de CU Generar Planilla en PDF. Descripción Caso de uso: CU. 1.1.1. Generar Planilla en PDF Actor: Solo Coordinador Precondición: El usuario debe estar conectado en la aplicación y tener privilegios de coordinador. El caso a buscar tiene que estar correctamente cargado en el sistema. La Planilla de Atención O Reporte de Novedad debe existir en el Sistema. Acción: funcionalidad que permite al usuario generar las planillas de atención o novedades cargadas en sistema en formato PDF. Condición de Éxito: Se mostrara una notificación para que descargue el PDF asociado al reporte o planilla. Tabla 5. Descripción de CU Mostrar Planilla. Descripción Caso de uso: CU. 1.1.2. Mostrar Planilla Actor: Coordinador y Radio Operador 121 Precondición: El usuario debe estar conectado en la aplicación y tener privilegios de coordinador. El caso a buscar tiene que estar correctamente cargado en el sistema. La Planilla de Atención O Reporte de Novedad debe existir en el Sistema. Acción: funcionalidad que permite al usuario ver vía online las planillas de atención o novedades cargadas en sistema, Condición de Éxito: Se Mostrara la planilla de atención o reporte de novedad cargado en el sistema sin posibilidad de editarlo. Tabla 6. Descripción de CU Generar Reportes Estadísticos. Descripción Caso de uso: CU. 1.3. Generar Reportes Estadísticos Actor: Solo Coordinador. Precondición: El usuario debe estar conectado en la aplicación y tener privilegios de coordinador. Acción: funcionalidad que permite al usuario generar reportes estadísticos, por diaria, mensual, semanal, semestral o anual. Condición de Éxito: al ingresar las fechas correctamente se mostrara una interfaz con las estadísticas, y el usuario decide si exportarlo o no a formato Excel. Tabla 7. Descripción de CU Generar Reporte en Excel. Descripción Caso de uso: CU. 1.3.1. Generar Reporte en Excel Actor: Solo Coordinador Precondición: El usuario debe estar conectado en la aplicación y tener privilegios de coordinador. Acción: Funcionalidad que permite al usuario generar el reporte estadístico en formato Excel. Condición de Éxito: Se mostrara una notificación para que descargue el PDF asociado al reporte o planilla. 122 Tabla 8. Descripción de CU Generar Usuarios. Descripción Caso de uso: CU. 1.4. Generar Usuarios Actor: Solo Coordinador Precondición: El usuario debe estar conectado en la aplicación y tener privilegios de coordinador. Acción: Funcionalidad que permite la creación de Paramédicos, radio operadores o coordinadores que interactuaran en el sistema. Condición de Éxito: Se mostrara un formulario para la carga de datos del nuevo usuario. Tabla 9. Descripción de CU Cerrar Sesión. Descripción Caso de uso: CU 1.7 Cerrar Sesión Actor: todos los actores. Precondición: el usuario debe haber iniciado sesión en el sistema. Acción: funcionalidad que permite al usuario finalizar la sesión en el sistema. Condición de Éxito: se finalizará la sesión del usuario. Tabla 10. Descripción de CU Editar Perfiles. Descripción Caso de uso: CU 1.8 Editar Perfiles Actor: Solo Coordinador Precondición: el usuario debe haber iniciado sesión en el sistema. Acción: funcionalidad que permite al coordinador editar los datos de los usuarios registrados en el sistema. 123 Condición de Éxito: Se modificaran los datos que el coordinador actualice o cambie. Tabla 11. Descripción de CU Editar Perfil. Descripción Caso de uso: CU 1.8 Editar Perfiles Actor: Todos los actores Precondición: el usuario debe haber iniciado sesión en el sistema. Acción: funcionalidad que permite al usuario editar sus datos registrados en el sistema. Condición de Éxito: Se modificaran los datos que hayan sido cambiados. Caso de Uso Nivel 1 - Actor Radio Operador Tabla 12. Descripción de CU Asignar Caso. Descripción Caso de uso: CU 1.2 Asignar Caso Actor: solo Radio Operador. Precondición: el usuario debe haber iniciado sesión en el sistema. Acción: funcionalidad que permite al usuario preasignar un caso de atencion a un paramedico en especifico. 124 Condición de Éxito: al ingresar todos los datos del caso, se le notifica al radio operador que ha creado y asignado correctamente. Tabla 13. Descripción de CU Ver Reportes de Atención Asignados. Descripción Caso de uso: CU 1.5 Ver Reportes de Atencion Asignados Actor: solo Radio Operador. Precondición: el usuario debe haber iniciado sesión en el sistema. Acción: funcionalidad que permite al radio operador ver los casos que ha asignado. Condición de Éxito: se muestra una peque;a tabla con los caos que ha asignado el radiooperador Tabla 14. Descripción de CU Cargar Reporte de Novedades. Descripción Caso de uso: CU 1.6 Cargar Reporte de Novedades Actor: Solo Radio Operador. Precondición: el usuario debe haber iniciado sesión en el sistema. Debe estar creado un reporte de atencion en el sistema. Acción: Funcionalidad que le permite al usuario cargar el reporte de novedades en el sistema. Condición de Éxito: se despliega la interfaz con el reporte de novedad asociado al caso de atencion. 125 Caso de Uso Nivel 1 - Actor Paramédico Tabla 15. Descripción de CU Ver Reportes de Atención Asignados. Descripción Caso de uso: CU 1.5 Ver Reportes de Atencion Asignados Actor: todos los actores. Precondición: el usuario debe haber iniciado sesión en el sistema. Acción: funcionalidad que permite al usuario finalizar la sesión en el sistema. Condición de Éxito: se finalizará la sesión del usuario. 126 Anexo C Cuestionario de Usabilidad de SisGEVI y Resultados El presente cuestionario tiene como finalidad conocer su opinión con respecto a la usabilidad de SisGEVI. La cual se refiere a la efectividad, eficiencia y satisfacción con la que el Sistema puede ser comprendido, utilizado y ser atractivo al usuario. Se agradece seleccionar la puntuación que corresponda a su opinión de acuerdo a la siguiente escala: Totalmente de acuerdo De acuerdo Ni de acuerdo ni en desacuerdo En desacuerdo Totalmente en desacuerdo 5 4 3 2 1 Nº Item 5 4 3 2 1 1 Los títulos, menús y textos del Sistema son legibles 2 Los colores utilizados contribuyen a la percepción adecuada del Sistema. 3 Los descriptores del Sistema son claros y precisos 4 Se ofrece una organización que facilita la navegación 5 El diseño del Sistema favorece su uso 6 El Sistema se puede ejecutar de manera intuitiva 7 Es un Sistema fácil de utilizar 8 Los elementos de ayuda disponibles en el Sistema son útiles Encuesta basada en: Martínez, A. F. (01 de Diciembre de 2009). WUEP: Un Proceso de Evaluación de Usabilidad Web Integrado en el Desarrollo de Software Dirigido por Modelos. 127 Anexo D Manual Técnico de SisGEVI Para la gestión de Accidentes Viales. El presente manual tiene el propósito de informar sobre las distintas secciones y funcionalidades del Sistema a nivel de código para el personal de soporte técnico. 1. Instalar SMBD PostgreSQL El primer paso debe ser instalar la versión de PostgreSQL 9.3. Lo cual se puede realizar mediante consola aplicando el siguiente comando: Luego se debe crear una Base de Datos con el nombre de su preferencia, aunque es recomendable para hacer uso de buenas prácticas que la Base de Datos se llame SisGEVI. 2. Instalar Apache, PHP y Laravel 4.2 Para la correcta instalación de Laravel 4.2 se requiere tener:  Servidor Web Apache  PHP >= 5.4  MCrypt PHP Extensión Para la instalación de Apache se ejecuta el siguiente comando: El servidor Apache debe tener la siguiente configuración para el correcto funcionamiento del Sistema: 128 En la configuración anterior, es fundamental tener activo el módulo mod_rewrite en el servidor Apache, ya que es el que permite crear direcciones URL alternativas a las dinámicas generadas por la programación del Sistema Web SisGEVI, de tal modo que sean más legibles y fáciles de recordar. Para la correcta instalación de Laravel, se recomienda seguir los pasos que se encuentran en la página oficial de Laravel, (2013). Laravel 4.2, (http://laravel.com/docs/4.2). 3. Instalar Composer Laravel utiliza Composer para manejar sus dependencias. Primero, descargar una copia del archivo composer.phar. Una vez se tenga el archivo PHAR, se guarda en el directorio local del proyecto o en usr/local/bin para utilizarlo de manera global en el sistema. En Windows, se puede utilizar el instalador para Windows de Composer que se encuentra en (https://getcomposer.org/Composer-Setup.exe). 4. Instalar Laravel Vía Composer Para instalar Laravel utilizando Composer se ejecuta el siguiente comando, colocando el nombre del directorio, en este caso será SisGEVI. http://laravel.com/docs/4.2 129 Luego de ejecutarse el comando, se creara un archivo con la siguiente estructura: Se debe dar permisos de escritura a la carpeta /app/storage/. Esto se puede hacer ejecutando el comando . Cabe recordar que todos los archivos y ficheros deben encontrarse dentro la carpeta de Apache /www. Luego de esto, se toman los archivos del Sistema Web SisGEVI y se sobrescriben los archivos del proyecto Laravel que se ha creado en el paso anterior. 130 Luego en la carpeta app se encuentra el fichero config, el cual permitirá realizar las modificaciones y configurar la Base de Datos como se muestra a continuación. Una vez creada la Base de Datos del sistema y configurado el archivo Database.php se procede a dirigirse a la ruta donde está el proyecto desde la Terminal y ejecutar el comando php artisan migrate: 131 De ejecutarse correctamente el comando, se mostraran las tablas del Sistema creadas correctamente: Este comando crea la estructura completa de la Base de Datos la cual se muestra a continuación 132 133 Para finalizar, se ejecuta el comando php artisan db: seed, el cual llenará automáticamente las tablas que necesitan contener data por defecto en el sistema. Al ejecutarse éste comando correctamente, se mostrará que las tablas Lesiones, Unidades, Grupos, Paramédicos, Zonas, Pacientes, Mecanismos, Fuentes, Sonidos, Procedimientos, Reacciones, Pieles, Traumas y Médicas han sido llenados correctamente. Habiendo completado todos los pasos anteriormente dichos solo debe ingresarse al link provisto por el administrador de red que tenga contenido el Sistema, y se ejecutara Correctamente. Cualquier duda o información contactar a: Humberto Ojeda Correo: humberto.jose.ojeda@gmail.com 134 Anexo E MANUAL DE USUARIO SISGEVI SisGEVI se encuentra conformado por tres (3) módulos: módulo Coordinador, Radio Operador y el de Paramédico. El Módulo Coordinador, está integrado por las funcionalidades que son utilizadas por los Paramédicos y Radio Operadores, y las propias de este tipo de usuario, las cuales son: generar estadísticas, búsqueda de casos o de pacientes y la edición de perfiles de los usuarios registrados en SisGEVI. El Módulo de Radio Operador consta de una sección en la que se listan todos los Reportes de Atención que hayan sido asignados por él y por la opción de preasignación de casos, en la que se establecen los Reportes de Atención cuando ocurre un accidente. El Módulo Paramédico consta de una sección para la carga de los distintos Reportes que se le hayan consignados. Seguidamente se describen las principales interfaces del Sistema y el proceso de inicio de sesión. Página Principal de SisGEVI: se muestra una descripción del sistema e imágenes que identifican las labores de los paramédicos del MPPTTOP como se muestra en la siguiente imagen 135  Encabezado Principal: se ubica en la parte superior, presentándose del lado izquierdo el logo del Gobierno Bolivariano, en la parte central el logo de SisGEVI, y del lado derecho el logo de la Brigada de Paramédicos, tal como se observa en la siguiente imagen.  Pie de Página: se ubica en la parte inferior y posee información referente al MPPTTOP, al tipo de Licencia GPL y un botón que nos redirige a la sección de “Acerca De”, la cual contiene información referente al equipo de desarrollo, tal como se muestra a continuación.  Licencia de SisGEVI: se publicó bajo licencia GPL, y dicha información está ubicada en la parte central del pie de página.  Botón de ingreso a SisGEVI: permite acceder al formulario que da acceso al sistema y se encuentra ubicado bajo el logo de la brigada de paramédicos, el cual puede observarse en la siguiente imagen. 136  Página de Inicio de Sesión: En esta sección se localiza el formulario de inicio de sesión, donde se solicitan los campos obligatorios referidos al Correo Electrónico y Contraseña. Para tener acceso, los paramédicos deben haber sido registrados previamente por el Coordinador, quien se encuentra autorizado para crear cuentas a los miembros de la Brigada. En la siguiente imagen.se observa dicha sección:  Restablecer contraseña: en caso de olvido de la contraseña, el usuario puede restablecerla desde el enlace “¿Olvidó Su Contraseña?”. De inmediato se desplegara un formulario solicitándole un correo electrónico a donde enviar los pasos para su recuperación, en la en la siguiente imagen.se puede ver dicha sección: Luego de ingresar el correo solicitado, en caso de estar registrado en el Sistema, se le notifica al usuario por medio de un mensaje vía correo electrónico para dar inicio al proceso de restablecimiento de contraseña, en caso contrario se mostrará un mensaje de error solicitándole uno valido para recuperar la contraseña. En la siguiente imagen.se aprecia el momento en que el correo fue validado exitosamente. 137 Inmediatamente al aparecer la notificación de correo enviado, se enviará un mensaje con la información necesaria para continuar con el proceso de cambio de contraseña, el cual se puede observar en la siguiente imagen. Continuando con el proceso de restablecimiento de contraseña, el usuario debe ingresar a la dirección que se le envió, la cual lo redirigirá al formulario que requiere la información del correo y el Código de Recuperación que le fue enviado, tal como se puede apreciar en la Figura 9. 138 Si la información suministrada es validada se muestra al usuario un mensaje de éxito y se le solicita que ingrese la nueva contraseña, lo cual se aprecia en la siguiente imagen. Si el proceso se ejecuta correctamente, se mostrará un mensaje que indica que la contraseña fue modificada exitosamente, como se aprecia en la siguiente imagen. Si el usuario recuerda su contraseña y desea acceder a SisGEVI, luego de haber ingresado los datos, y posee privilegios de Coordinador, automáticamente se redirige a la Página Principal, de lo contrario se le solicita al funcionario que indique bajo qué rol se conectara, si es por Radio Operador o Paramédico, en la imagen se puede apreciar dicha sección del sistema: Ya seleccionado el rol con el cual inicio sesión, se muestra la página principal del respectivo perfil seleccionado.  Barra de Navegación: esta sección se encuentra presente en todas las páginas de SisGEVI luego de haber iniciado sesión, se identifica en su lado izquierdo la ubicación dentro del 139 Sistema, mediante la técnica de migajas de pan, en el centro se encuentra la fecha y hora, y al lado derecho el nombre del usuario que está conectado, con las opciones disponibles de acuerdo a su rol. En la siguiente imagen se muestra la sección descrita. En la parte derecha de la “Barra de Navegación” se ubica el nombre del usuario, que contiene las opciones asociadas a la edición del perfil, cerrar sesión y, en caso de tener privilegios de Coordinador, la edición de los perfiles de usuario de SisGEVI. En la siguiente imagen se muestra la sección descrita.  Editar Perfil: Al acceder a la opción de editar perfil, se mostrará un formulario con los datos del usuario, que pueden ser editados. En la imagen se aprecia la sección descrita.  Editar Usuarios: Si se tienen privilegios de Coordinador se podrá editar el perfil a otros usuarios del sistema, como se aprecia en la siguiente imagen. 140 Seguidamente se describen los módulos contenidos en SISGEVI, así como las funcionalidades que poseen los mismos.  Módulo Radio Operador: se encuentra dedicado exclusivamente a los Radio Operadores de la Brigada de Paramédicos, quienes son los encargados de asignar los Reportes de Atención a los Paramédicos. En la imagen siguiente se muestra la página de ingreso al Módulo, la cual consta de tres (3) funcionalidades, Asignar Caso de Accidente, Completar Reporte de Novedades y Ver Casos Asignados por el Usuario. Asignar Reporte de Atención: la primera funcionalidad se encuentra en el lado izquierdo de la pantalla principal, al presionar el botón de asignar se despliega una ventana emergente con un formulario a completar para realizar la preasignación del caso, como se muestra a continuación: 141 Esa ventana consta de siete (7) campos que son obligatorios para la correcta preasignación del Reporte de Atención, se le solicita al Radio Operador que especifique la Fuente de Información del suceso, es decir, por cual medio se notificó la ocurrencia de un accidente (Twitter, Frecuencia de la Policía Nacional, Llamadas a Coordinadores, Llamada a 0800-MTTVIAL, Vía Radio), el Paramédico al cual será asignado el caso, el número de reporte, la unidad asignada y la información necesaria acerca de la ubicación del accidente (zona, altura y sentido). Al hacer clic en el botón de “Asignar Caso”, se le notifica al usuario que fue otorgado correctamente, y si desea crear otro Reporte, como se muestra a continuación: En paralelo se le enviará un correo electrónico al Paramédico, recordándole que debe realizar el registro del Reporte de Atención así como al Radio Operador para que complete el Reporte de Novedades. Desde esta sección se puede acceder al Reporte de Novedades y realizar la carga de información, funcionalidad que se explicara en el siguiente punto. 142 Completar Reportes de Novedades: al asignar un Reporte de Atención, se genera automáticamente un Reporte de Novedades, que es donde se carga la información adicional que se genere durante un incidente. A continuación se puede apreciar dicha funcionalidad. Al acceder a la opción referida se despliega una ventana emergente con los Reportes de Novedades Cerrados o Abiertos que posea el Radio Operador, como se enseña a continuación: Al ingresar a un Reporte de Novedades Abierto, se despliega un formulario, como se aprecia en la imagen siguiente: 143 Los campos referentes a la ubicación del accidente ya se encuentran cargados automáticamente por el sistema, el campo “Novedades de Caso” permite que el Radio Operador registre información adicional que se suscite mientras el incidente sea atendido, si se necesitó otra unidad, una descripción especifica del suceso u otro acontecimiento asociada al caso. El Radio Operador puede realizar tres (3) acciones mientras está llenando un Reporte de Novedad: a) Generar Caso Asociado: permite al Radio Operador asignar un caso de atención que este asociado al que está en curso, sin tener que salir de esta sección, presionando el botón “Generar Caso”. En la imagen se puede apreciar la ventana emergente que se despliega, contiene los mismos campos que el Formulario de Asignación, con la diferencia que en este se indica el número de Reporte por el que está siendo prelado. 144 b) Actualizar Caso: el Reporte de Novedades puede contener múltiple información de lo que haya acontecido durante el incidente, esta se registra en el campo de texto “Novedades del Caso”, las cuales pueden actualizarse tal como se muestra a continuación c) Cerrar Caso: al concluir el servicio de atención y no existan sucesos que reportar, el Radio Operador procede a cerrar el Reporte de Novedades, al proceder dicho cierre con éxito se muestra lo que se observa a continuación: Casos Asignados Por Usuario: El Radio Operador que esté conectado podrá verificar cuales Reportes de Atención han sido asignados por él, verificar si se encuentran cargados en sistema, como también los Reportes de Novedades que estén completados, esta información se suministra a través de una tabla que se muestra a continuación: 145 Estos Reportes solo pondrán ser visualizados por el Radio Operador vía Web, mas no exportarlos en formato PDF, esta opción solo está permitida para los Usuarios con Privilegios de Coordinador.  Módulo de Paramédico: permite a los Paramédicos de la Brigada registrar los Reportes de Atención asignados con anterioridad. En la Figura 73 27 se muestra la página principal, la cual consta de la única opción de este tipo de usuario. Si el Paramédico tiene asignados Reportes de Atención, se mostrará el botón “Cargar Reporte”, para que realice el registro de los respectivos casos, tal como se observa a continuación: En la sección de Registro de Reporte de Atención, se despliega un formulario que se aprecia en la imagen siguiente, los valores que ya fueron informados durante la preasignación ya aparecerán cargados automáticamente en el mismo. 146 Este formulario consta de ocho (8) pestañas, las cuales forman parte de la información generada durante un accidente de tránsito o un procedimiento de atención. Luego de cargar todos los datos referentes al Reporte de Atención, se le muestra al Paramédico, que el registro fue efectuado correctamente como se aprecia a continuación. Una vez enunciadas las funciones que son realizadas por los Paramédicos como por los Radio Operadores, a continuación se explicaran las efectuadas en el Módulo de Coordinador.  Módulo de Coordinador: permite a los Coordinadores de la Brigada, tener acceso total al Sistema, ya que pueden realizar las funcionalidades de los Radio Operadores y Paramédicos, y efectuar las funciones específicas de este tipo de usuario, en la imagen siguiente se puede apreciar la pantalla principal de este módulo: 147 Las funcionalidades en específico que puede realizar este tipo de usuario son descritas a continuación: Generar Reportes Estadísticos: en esta sección se le muestra al Coordinador los rangos por los cuales se pueden calcular los Reportes Estadísticos, al ingresar se le mostrará una nueva interfaz donde se le solicitará que seleccione el tipo de rango que desea obtener para las estadísticas, como se aprecia a continuación: Luego de procesar la información y generar las estadísticas, se muestra una pantalla con el resultado de las mismas, así como un botón para volver a la creación de “Reportes Estadísticos” o si se requiere, para exportarlo en formato .ods. En la Figura 79 33 se puede observar dicho resultado. 148 Posteriormente al mostrar los datos en cifras de los accidentes en forma de tablas, en la parte inferior de la página se encuentran los gráficos asociados a dicha data, como se aprecia a continuación: Los datos estadísticos pueden ser exportados en formato ods para posteriores análisis de otros entes o de otras áreas del MPPTTOP tal cual se observa a continuación: 149 Búsqueda de Casos: El Coordinador puede Buscar Reportes de Atención por número de Caso o Cédula de Identidad del Paciente, en la siguiente imagen se aprecia la opción de búsqueda. En esta sección se apertura una ventana emergente donde se muestra la barra de búsqueda y una lista desplegable con el tipo de filtro (Cédula o Caso), en la imagen se observa un ejemplo donde el Coordinador desea obtener información sobre el Caso # 1. El sistema al localizar el caso o paciente buscado, mostrará una notificación que indique el éxito de la búsqueda, así como una tabla con la información de él mismo, que se puede apreciar en la imagen: 150 En caso de seleccionar ver Reporte de Atención, se redireccionará al caso seleccionado a fin de que el Coordinador pueda observarlo directamente en el Sistema y si lo desea, exportarlo en formato PDF. En la imagen siguiente se muestra un Reporte de Atención visto desde SisGEVI. En la imagen se puede observar un extracto de la presentación del reporte en formato PDF. 151 Si el Coordinador selecciona ver Reporte de Novedades, se le redireccionará al mismo para que pueda visualizarlo y si lo desea exportarlo a formato PDF. En la imagen siguiente se muestra el Reporte visto desde SisGEVI. A continuación se puede observar un ejemplo de la presentación del Reporte de Novedades en formato PDF. Crear Nuevo Usuario: en caso de que el Coordinador requiera registrar un usuario nuevo, podrá hacerlo mediante la opción “Crear Usuario”, que se puede apreciar a continuación: 152 Al acceder a esta sección se mostrará un formulario que se puede apreciar a continuación, donde se solicita información sobre el usuario a crear, como el nombre, apellido, cédula, correo electrónico, contraseña, género y el tipo de rol que tendrá en el sistema. Luego de llenar la información correctamente, se le notificara que el usuario fue creado exitosamente, como se observa en la Figura 45. 153 Cargar Usuarios: Esta funcionalidad se creó con la finalidad de que el Coordinador pueda registrar usuarios de forma masiva, accediendo a esta opción a través del botón “Cargar Usuarios”, que se puede apreciar a continuación: Al ingresar a esta opción se mostrará una pantalla con una breve información de lo que debe realizarse para que el proceso de registro masivo se haga de manera correcta, la cual se puede ver a continuación: Simultáneamente se le exhibirá al usuario una imagen de cómo debe ser completado el archivo, y además puede descargar un modelo para realizar esta función. Este archivo se puede apreciar a continuación: 154 Una vez que SisGEVI haya procesado el archivo de usuarios se le notificará al Coordinador que los Paramédicos registrados en el archivo han sido agregados al sistema para su futura asignación de reportes de atención, como se aprecia en a continuación.UNIVERSIDAD CENTRAL DE VENEZUELA UNIVERSIDAD CENTRAL DE VENEZUELA FACULTAD DE CIENCIAS ESCUELA DE COMPUTACIÓN Trabajo Especial de Grado presentado ante la Ilustre Universidad Central de Venezuela por el Bachiller Ojeda Malavé, Humberto José C.I. V-20.185.583 Para optar al título de Licenciado en Computación Tutora: Profa. Yosly C. Hernández B. Caracas, 24 de Mayo de 2016 SisGEVI: Sistema Web para la Gestión de Emergencias Viales en Autopistas de la Gran Caracas. Caso de Estudio: Brigadas de Paramédicos del Ministerio del Poder Popular para Transporte Terrestre y Obras Públicas. Agradecimientos El agradecimiento más importante es para Dios, al Nazareno y la Virgen del Valle, por guiarme en todo momento y permitirme llegar a ser la persona que soy. A mi madre Solange Malavé, que siempre estuvo conmigo dándome el apoyo suficiente para cumplir todas mis metas. A mi Abuela, por siempre estar conmigo en las buenas y malas, ella es mi pilar, cada meta y logro que cumplo, es para ella. A mis Tíos Ricardo Malavé y Ronald Malavé, por siempre darme la seguridad y confianza en los momentos más difíciles. A Eilyn Rivero, por ser la mejor compañera de vida de este mundo. Gracias por estar ahí siempre por entenderme, por soportarme y apoyarme en todo lo que me propongo. A la Profa. Yosly C. Hernández, por darme la confianza de realizar este proyecto. Al Personal de la Brigada de Paramédicos por darme la oportunidad de Desarrollar este Sistema. A mis colegas de trabajo: Gustavo, Yami, Yuyo, Caro, Miguel, Geral y entre otros, por su apoyo en mi crecimiento profesional, y por sus constantes ayudas en el desarrollo de este Trabajo de Grado. A mis amigos y compadres de la UCV: Andrés, Jhonatan, Huáscar, Maglo, Anakarenina, Keily, Samuel, Francisco, Frank, Fernando, Félix, Jesús, Andrea, Jedariana, entre otros que estuvieron ahí en los momentos rudos y supieron dar fuerza y apoyo para superarlos. MUCHACHOS SI SE PUDO!!! Dedicatoria Este trabajo está dedicado con mucho orgullo y cariño a mi abuelo Ricardo Malavé, quien falleció el día 15 de noviembre de 2014. Este trabajo lo hago por él y para él, su mayor sueño fue verme graduado y pensando siempre en él, hoy lo estoy cumpliendo. Gracias por todo abuelo, donde quiera que estés, espero te sientas orgulloso. i RESUMEN La Brigada de Paramédicos adscrita al Ministerio del Poder Popular para el Transporte Terrestre y Obras Públicas (MPPTTOP), es la encargada de atender las emergencias ocurridas en las principales arterias viales de la Gran Caracas (Autopista Regional del Centro, Francisco Fajardo, Gran Mariscal de Ayacucho, Prados del Este, Caracas-La Guaira, Valle- Coche, Norte-Sur, Carretera Panamericana). Así como también obtener datos para levantar las estadísticas de los mismos. Ésta efectuaba los registros de los sucesos ocurridos, generando un reporte por cada incidente, en el cual se indicaba tipo de accidente, lesionados, lesiones originadas, resultados de la evaluación preliminar del paciente y las acciones tomadas, el levantamiento de la información se realizaba en forma manual, vaciándose posteriormente en hojas de cálculo de Google Docs (Google, 2006),rayendo como consecuencia, inconsistencias en la información recabada en el hecho y la proporcionada en la hoja de cálculo señalada, mucho tiempo invertido en el proceso de cálculo de estadísticas, por tal razón, como solución se planteó realizar un Sistema Web. El objetivo del Trabajo Especial de Grado (TEG), fue el desarrollo de un Sistema Web para la Gestión de Emergencias Viales en Autopistas de la Gran Caracas (SisGEVI), con la finalidad de gestionar eficiente y eficazmente el proceso de carga de los datos de los accidentes viales. El desarrollo del mismo se realizó empleando una adaptación de la metodología AgilUs (Acosta, 2011) aplicando cada una de sus fases: requisitos, análisis, prototipaje y entrega, utilizando como herramientas de desarrollo los siguientes Frameworks: de lado servidor Laravel 4.2 y de lado del cliente JQuery, Bootstrap y AJAX, y como manejador de base de datos PostgreSQL. Palabras Clave: SisGEVI, accidentes viales, paramédicos, lesionados, gestión de emergencias. ii ÍNDICE GENERAL ÍNDICE DE FIGURAS ......................................................................................................... iv INTRODUCCIÓN .................................................................................................................. 1 Capítulo I: Problema de Investigación ................................................................................... 3 1.1. Contexto de Investigación ...................................................................................... 3 1.2. Problema de Investigación...................................................................................... 4 1.3. Justificación .......................................................................................................... 10 1.4. Objetivos de la Investigación ............................................................................... 11 1.4.1. Objetivo General............................................................................................... 11 1.4.2. Objetivos Específicos ....................................................................................... 11 1.5. Alcance ................................................................................................................. 11 1.6. Metodología de Desarrollo ................................................................................... 12 1.6.1. Ciclo de Desarrollo de AgilUs ......................................................................... 12 1.6.2. Artefactos.......................................................................................................... 13 1.7. Antecedentes ......................................................................................................... 14 Capítulo II: Marco Teórico ................................................................................................... 16 2.1. Sistema Web ......................................................................................................... 16 2.1.1. Características de los Sistemas Web ................................................................ 17 2.1.2. Ventajas y Desventajas de un Sistema Web ..................................................... 18 2.1.3. Beneficios de los Sistemas Web ....................................................................... 19 2.1.4. Ejemplos de Sistemas Web............................................................................... 20 2.1.5. Arquitectura de un Sistema Web ...................................................................... 22 2.1.6. Arquitectura Cliente-Servidor .......................................................................... 22 2.2. Patrón de Diseño Modelo-Vista-Controlador ....................................................... 25 2.3. Tecnologías de Desarrollo Web ........................................................................... 27 2.3.1. Lenguajes del Lado Cliente .............................................................................. 28 2.3.1.1. Lenguaje de Marcado de Hipertexto ................................................................ 28 2.3.1.2. Hojas de Estilo en Cascada ............................................................................... 30 2.3.1.3. Framework Twitter Bootstrap .......................................................................... 31 2.3.1.4. JavaScript ......................................................................................................... 31 2.3.1.5. AJAX ................................................................................................................ 32 2.3.1.6. jQuery ............................................................................................................... 33 2.3.2. Lenguajes del Lado Servidor ............................................................................ 34 2.3.2.1. Servidor Web Apache ....................................................................................... 35 2.3.2.2. Lenguaje Preprocesador de Hipertexto (PHP).................................................. 36 2.3.2.3. Framework MVC .............................................................................................. 37 2.3.2.4. Mapeo de Objeto-Relacional ............................................................................ 37 2.3.2.5. Laravel 4.2 ........................................................................................................ 38 2.4. Sistema Manejador de Base de Datos................................................................... 39 2.4.1. Sistema Manejador PostgreSQL ....................................................................... 39 2.5. Software de Control de Versiones Git .................................................................. 40 iii 2.6. Licencia Pública General ...................................................................................... 41 2.7. Marco Legal .......................................................................................................... 42 2.7.1. Ley de InfoGobierno ........................................................................................ 42 Capítulo III: Marco Aplicativo ............................................................................................. 44 3.1. Fase I: Requisitos ................................................................................................. 44 3.1.1. Entrevistas ........................................................................................................ 44 3.1.2. Tormentas de ideas ........................................................................................... 46 3.1.3. Sondeos ............................................................................................................. 47 3.1.4. Perfil de usuario ................................................................................................ 51 3.1.5. Listas de Requerimientos Funcionales y No Funcionales ................................ 52 3.1.5.1. Requerimientos Funcionales............................................................................. 52 3.1.5.2. Requerimientos No Funcionales ....................................................................... 53 3.2. Fase II: Análisis ................................................................................................... 55 3.2.1. Prototipos de Interfaz........................................................................................ 55 3.2.2. Guías de estilo .................................................................................................. 57 3.2.3. Modelo de Casos de Uso .................................................................................. 59 3.2.4. Modelo de Objeto de Dominio ......................................................................... 62 3.2.5. Diseño Lógico y Físico de la Base de Datos .................................................... 63 3.2.6. Plataforma de Desarrollo .................................................................................. 69 3.3. Fase III: Prototipaje .............................................................................................. 70 3.3.1. Arquitectura del Sistema .................................................................................. 70 3.3.2. Desarrollo del Sistema ...................................................................................... 71 3.3.3. Lista de Comprobación ..................................................................................... 77 3.4. Fase IV: Entrega ................................................................................................... 78 3.4.1. Pruebas de Usabilidad ...................................................................................... 78 3.4.2. Pruebas de Instalación ...................................................................................... 81 Capítulo IV: Resultados ....................................................................................................... 83 Conclusiones ....................................................................................................................... 105 Recomendaciones ............................................................................................................... 107 Referencias ......................................................................................................................... 108 iv ÍNDICE DE FIGURAS FIGURA 1. PÁGINA UNO DE REPORTE DE ATENCIÓN, (MPPTTOP, 2012). ............................. 6 FIGURA 2. PÁGINA DOS DE REPORTE DE ATENCIÓN, (MPPTTOP, 2012). .............................. 7 FIGURA 3. HOJA DE ESTADÍSTICAS, (MPPTTOP, 2012). ........................................................ 8 FIGURA 4. DIAGRAMA DE FLUJO DEL PROCESO DE GESTIÓN DE ACCIDENTES. ....................... 9 FIGURA 5. CICLO DE VIDA DE METODOLOGÍA AGILUS, (ACOSTA, 2011) ............................. 13 FIGURA 6. SITEL, (SITEL, 2006) ......................................................................................... 15 FIGURA 7. PÁGINA PRINCIPAL DEL SISTEMA, (VIT, 2015) .................................................... 20 FIGURA 8. CITA GENERADA POR EL SISTEMA (VIT, 2015) ................................................... 21 FIGURA 9. SISTEMA DE GESTIÓN DE PASANTÍAS (SIGEPAS, 2012). .................................... 22 FIGURA 10. MODELO CLIENTE-SERVIDOR, (E-DUCATIVA, 2000) .......................................... 23 FIGURA 11. ARQUITECTURA DE TRES CAPAS, (SÁNCHEZ, 2004) .......................................... 25 FIGURA 12. PATRÓN MVC, (POTENCIER, 2002) ................................................................... 26 FIGURA 13. LENGUAJES DE PROGRAMACIÓN DEL LADO DEL SERVIDOR, (W3TECHS, 2015). 35 FIGURA 14. ARQUITECTURA DE LARAVEL, (VELASQUEZ, 2013) ........................................... 38 FIGURA 16. TORMENTA DE IDEAS REALIZADA EN EL MPPTTOP ......................................... 46 FIGURA 17. RESULTADOS PREGUNTA 1................................................................................. 47 FIGURA 18. RESULTADOS PREGUNTA 3................................................................................. 48 FIGURA 19. IMAGEN DE SONDEO........................................................................................... 49 FIGURA 20. RESULTADOS PREGUNTA 4................................................................................. 49 FIGURA 21. RESPUESTA PREGUNTA 5. .................................................................................. 50 FIGURA 22. RESULTADOS PREGUNTA 6................................................................................. 50 FIGURA 23. INTERFAZ DE LOGIN ........................................................................................... 55 FIGURA 24. INTERFAZ PRINCIPAL ......................................................................................... 56 FIGURA 25. INTERFAZ DE REPORTE DE ATENCIÓN PÁGINA 1 ................................................ 56 FIGURA 26. INTERFAZ REPORTE DE NOVEDADES .................................................................. 57 FIGURA 27. CASO DE USO NIVEL 0. ...................................................................................... 59 FIGURA 28. CASO DE USO NIVEL 1. ...................................................................................... 60 FIGURA 29. CASO DE USO NIVEL 1, ACTOR COORDINADOR. ................................................ 60 FIGURA 30. CASO DE USO NIVEL 1, ACTOR RADIO OPERADOR. ........................................... 61 FIGURA 31. CASO DE USO NIVEL 1, ACTOR PARAMÉDICO. ................................................... 61 FIGURA 32. DIAGRAMA DE OBJETO DE DOMINIO. ................................................................. 63 FIGURA 33. TABLAS DE LA BD DE SISGEVI. ........................................................................ 64 FIGURA 34. MODELO RELACIONAL DE SISGEVI. ................................................................. 68 FIGURA 35. PLATAFORMA DE DESARROLLO. ........................................................................ 69 FIGURA 36. ARQUITECTURA DE SISGEVI ............................................................................. 71 FIGURA 37. CONFIGURACIÓN DE CONEXIÓN DE BD .............................................................. 71 FIGURA 38. EJEMPLO DE MIGRACIÓN, TABLA DE PARAMÉDICOS.......................................... 72 FIGURA 39. EJECUCIÓN EXITOSA DEL COMANDO MIGRATE .................................................. 72 FIGURA 40. MODELO DE LA TABLA PLANILLAS .................................................................... 73 FIGURA 41. CONTROLADOR DEL MODELO PLANILLA ........................................................... 73 FIGURA 42. ARCHIVO RUTAS DE SISGEVI ........................................................................... 74 v FIGURA 43. PARTE DEL CÓDIGO DE INICIAR SESIÓN. ............................................................ 75 FIGURA 44. PLANTILLA BASE.BLADE.PHP ............................................................................. 75 FIGURA 45. VISTA DE LA PÁGINA DE LOGIN. ......................................................................... 76 FIGURA 46. SISTEMA EJECUTÁNDOSE EN AMBIENTE DEL MPPTTOP. ................................. 81 FIGURA 47. SISTEMA EJECUTÁNDOSE EN AMBIENTE DEL MPPTTOP. ................................. 83 FIGURA 48. PÁGINA PRINCIPAL DE SISGEVI ........................................................................ 84 FIGURA 49. CABECERA DE SISGEVI. .................................................................................... 84 FIGURA 50. PIE DE PÁGINA DE SISGEVI. .............................................................................. 85 FIGURA 51. BOTÓN DE INICIO DE SESIÓN EN SISGEVI. ........................................................ 85 FIGURA 52. PÁGINA DE INICIO DE SESIÓN DE SISGEVI ........................................................ 85 FIGURA 53. RESTABLECER CONTRASEÑA DE SISGEVI. ........................................................ 86 FIGURA 54. CASO ÉXITO DE RESTABLECER CONTRASEÑA DE SISGEVI. .............................. 86 FIGURA 55. CORREO DE CONTRASEÑA DE SISGEVI. ............................................................ 87 FIGURA 56. FORMULARIO DE RECUPERACIÓN DE CONTRASEÑA DE SISGEVI....................... 87 FIGURA 57. TOKEN VALIDADO DE SISGEVI. ........................................................................ 87 FIGURA 58. CONTRASEÑA CAMBIADA EXITOSAMENTE DE SISGEVI. ................................... 88 FIGURA 59. PANTALLA DE SELECCIÓN DE ROL DE SISGEVI ................................................. 88 FIGURA 60. BARRA DE NAVEGACIÓN DE SISGEVI ............................................................... 88 FIGURA 61. DESPLEGABLE PARA COORDINADOR .................................................................. 89 FIGURA 62. EDITAR USUARIO DE SISGEVI ........................................................................... 89 FIGURA 63. EDITAR USUARIOS DE SISGEVI ......................................................................... 89 FIGURA 64. PANTALLA PRINCIPAL DE RADIO OPERADOR DE SISGEVI ................................. 90 FIGURA 65. VENTANA EMERGENTE DE PREASIGNACIÓN DE SISGEVI. ................................. 90 FIGURA 66. PREASIGNACIÓN CORRECTA DE CASO ................................................................ 91 FIGURA 67. REPORTES DE NOVEDADES DE SISGEVI. ........................................................... 92 FIGURA 68. REPORTE DE NOVEDADES ABIERTOS Y CERRADOS DE SISGEVI. ....................... 92 FIGURA 69. PANTALLA DE CARGA DE REPORTE DE NOVEDADES DE SISGEVI. .................... 93 FIGURA 70. CASO EXTRA DE SISGEVI. ................................................................................ 94 FIGURA 71. ACTUALIZACIÓN DE REPORTE DE NOVEDAD. ..................................................... 94 FIGURA 72. REPORTE CARGADO CORRECTAMENTE .............................................................. 94 FIGURA 73. VERIFICAR CASOS ASIGNADOS .......................................................................... 95 FIGURA 74. PANTALLA PRINCIPAL DE MODULO PARAMÉDICO DE SISGEVI. ........................ 95 FIGURA 75. BOTÓN DE CARGA DE REPORTE DE SISGEVI ..................................................... 95 FIGURA 76. PANTALLA DE CARGA DE REPORTE DE ATENCIÓN DE SISGEVI......................... 96 FIGURA 77. REPORTE DE ATENCIÓN CARGADO DE SISGEVI ............................................... 96 FIGURA 78. INTERFAZ PRINCIPAL DE COORDINADOR ............................................................ 97 FIGURA 79. CREACIÓN DE REPORTES ESTADÍSTICOS ............................................................ 97 FIGURA 80. INTERFAZ DE RESULTADO DE ESTADÍSTICAS. .................................................... 98 FIGURA 81. GRAFICA DE RESULTADO DE ESTADÍSTICAS EN SISGEVI. ................................. 98 FIGURA 82. ESTADÍSTICAS EXPORTADAS EN FORMATO CSV. .............................................. 99 FIGURA 83. OPCIÓN DE BÚSQUEDA DE SISGEVI .................................................................. 99 FIGURA 84. BARRA DE BÚSQUEDA DE SISGEVI ................................................................... 99 FIGURA 85. CASO ENCONTRADO ........................................................................................ 100 FIGURA 86. REPORTE ATENCIÓN EN SISGEVI .................................................................... 100 FIGURA 87. REPORTE ATENCIÓN EN FORMATO PDF. ......................................................... 101 vi FIGURA 88. REPORTE DE NOVEDAD VISTO VÍA WEB. ........................................................ 101 FIGURA 89. REPORTE DE NOVEDAD EN FORMATO PDF. ..................................................... 102 FIGURA 90. OPCIÓN DE CREACIÓN DE USUARIO EN SISGEVI. ............................................ 102 FIGURA 91. PANTALLA DE CREACIÓN DE USUARIOS EN SISGEVI. ..................................... 103 FIGURA 92. CREACIÓN CORRECTA DE PARAMÉDICO .......................................................... 103 FIGURA 93. OPCIÓN DE CREACIÓN DE USUARIO EN SISGEVI. ............................................ 103 FIGURA 94. PANTALLA DE CARGA DE USUARIOS EN SISGEVI. .......................................... 104 FIGURA 95. ARCHIVO EJEMPLO PARA CARGA DE USUARIOS. ............................................. 104 FIGURA 96. CREACIÓN CORRECTA DE PARAMÉDICOS. ........................................................ 104 vii ÍNDICE DE TABLAS TABLA 1. GUÍA DE ESTILO DE SISGEVI ................................................................................ 57 TABLA 2. ESPECIFICACIÓN CU INICIAR SESIÓN .................................................................... 62 TABLA 5. LISTA DE COMPROBACIÓN ..................................................................................... 77 TABLA 6. ESTÁNDARES DE USABILIDAD. (ACOSTA, 2011) .................................................... 78 TABLA 7. RESULTADOS DE PRUEBA DE USABILIDAD ............................................................ 79 1 INTRODUCCIÓN La incorporación de las Tecnologías de la Información en los procesos permite redefinirlos, alcanzando grados de eficacia y eficiencia inimaginables. Las organizaciones que sean capaces de descubrir estas posibilidades e implantarlas correctamente, conseguirán ventajas competitivas debido a la disminución de costes y el aumento de flexibilidad frente a los requerimientos de los clientes. En cualquier proceso en el que existan intercambios de información, el impacto de éstas es muy importante, tanto que redefinen totalmente el proceso. Es debido a que toda la información podrá ser “digitalizable” y por tanto gestionada automáticamente, empleando los sistemas de Información y pudiendo ser comunicada a coste cero empleando las redes (Intranet, Extranet e Internet) (Navarro, 2002). Debido a la puesta en práctica de sistemas que facilitan y mejoran los tiempos de respuesta en los procesos, el presente Trabajo Especial de Grado (TEG) desarrolló un Sistema Web para la Gestión de Accidentes Viales (SisGEVI), con la finalidad de brindar mayor eficacia y eficiencia al proceso de carga de la información de los incidentes que ocurren en las principales autopistas de la Gran Caracas (Autopista Regional del Centro, Francisco Fajardo, Gran Mariscal de Ayacucho, Prados del Este, Caracas-La Guaira, Valle-Coche, Norte-Sur, Carretera Panamericana), así como la generación de informes estadísticos realizados por la Brigada de Paramédicos, adscrita al Ministerio del Poder Popular para el Transporte Terrestre y Obras Públicas (MPPTTOP), los cuales son remitidos a las Máximas Autoridades, a fin de que se tomen los correctivos necesarios. SisGEVI está conformado por tres (3) módulos: El primer módulo es el del tipo de usuario Coordinador, que se encarga de generar los reportes estadísticos y la creación de nuevos usuarios en el sistema; el segundo es el de Radio Operador, que es el responsable de la preasignación de los casos de atención y el tercero es el de Paramédico, que es en donde se realiza la carga de todos los reportes de atención vinculados a los incidentes que se suceden en las principales autopistas de la Gran Caracas. 2 En virtud de lo expuesto el presente Trabajo Especial de Grado (TEG), consta de cuatro (4) capítulos, los cuales se describen a continuación: Capítulo I: Problema de Investigación. Señala el Contexto de la Investigación, Planteamiento del Problema, la Justificación e Importancia del Trabajo de Investigación; así como el Objetivo General y los Objetivos Específicos. Adicionalmente, el Alcance del Trabajo y una descripción de la Metodología de Desarrollo utilizada. Capítulo II: Marco conceptual. Presenta el sustento teórico acerca de las tecnologías web que se utilizaron para el desarrollo del TEG planteado en el sistema. Se agrupan en tecnologías del lado del cliente, conformadas por HTML, CSS, JavaScript, jQuery y AJAX; y tecnologías del lado del servidor como PHP y Laravel. Capítulo III: Marco Aplicativo. Describe los aspectos relevantes relacionados a la metodología de desarrollo de software AgilUs y se especifican las bases y las etapas que la componen. Así mismo, se exponen las fases de requisitos y análisis de la metodología aplicada en el TEG, detallando las actividades realizadas, los artefactos generados, las pruebas y entregas efectuadas. Capítulo IV: Resultados. Muestra el funcionamiento de SisGEVI, reflejando cada una de sus funcionalidades. Finalmente, se exponen las conclusiones, las recomendaciones, las referencias bibliográficas así como el Manual Técnico y de Usuarios del Sistema que brindan soporte al Trabajo Especial de Grado. 3 Capítulo I: Problema de Investigación En este capítulo se describe la situación identificada en lo referente a la gestión de accidentes viales de la Brigada de Paramédicos del MPPTTOP, los planteamientos que justificaron el problema, objetivos generales y específicos, alcance y metodología aplicada en este TEG. 1.1. Contexto de Investigación Esta investigación se contextualizó en la Brigada de Paramédicos, adscrita a la Dirección General de Infraestructura y Vialidad del MPPTTOP, creados el 8 noviembre de 2013, integrada por profesionales especialistas en atención médica primaria, distribuidos en los 220 Km de vías expresas que comprende la Gran Caracas, para brindar mayor seguridad y mejorar la atención vial (MPPTTOP, 2015). Las principales funciones de esta brigada son (MPPTTOP, 2015):  Brindar Atención de emergencias por trauma, médicas y todo lo que obstruya el libre tránsito.  Realizar el registro de los incidentes atendidos. La Brigada garantiza la atención en las Autopistas de la Gran Caracas, que se señalan:  Autopista Regional del Centro (km 0 al distribuidor los Totumos km 44).  Autopista Francisco Fajardo.  Autopista Gran Mariscal de Ayacucho.  Autopista Caracas La Guaira.  Autopistas Valle-Coche.  Norte-Sur.  Carretera Panamericana. 4  Autopista Prados del Este. Posee como eje de acción dos (2) sedes principales que se ubican en la Autopista Francisco Fajardo y la Valle Coche; así como también cuatro (4) campamentos auxiliares, ubicados en La Urbina, Plaza Venezuela, La Paz y Cota Mil. Se encuentran organizados en de cuatro (4) Grupos de Guardia, distribuidos en dos (2) zonas, Zona Este que comprende las vías que van desde Plaza Venezuela hasta la Autopista Gran Mariscal de Ayacucho y Zona Sur que abarca desde el Oeste de la ciudad, incluyendo la Autopista Caracas- La Guaira, Norte-Sur y la Carretera Panamericana. Éstos conformados por 19 paramédicos, que son los encargados de atender a las víctimas. En las sedes principales se ubican ocho (8) Radio Operadores que mantienen comunicación directa con los Paramédicos de guardia, para informar sobre cualquier eventualidad que se presente en su radio de acción, así como por tres (3) coordinadores y un (1) jefe de división. (MPPTTOP, 2012) Están dispuestos las 24 horas del día, los 365 días del año, prestando atención a cualquier eventualidad que ocurra en las mencionadas vías, sea un accidente vial, entendido éste como el hecho en el cual se involucra el factor humano, el vehículo y la vía dentro de su ambiente determinado, para producir una colisión o choque que trae como consecuencia daños materiales, personas lesionados(as) y muertas, o cualquier otro motivo de atención. Las personas beneficiadas por la brigada son los usuarios de estas arterias viales: motorizados, vehículos livianos, pesados, transporte público y privado (MPPTTOP, 2012). 1.2. Problema de Investigación En las autopistas de la Gran Caracas, anteriormente señaladas, frecuentemente suceden accidentes (ver concepto en Anexo A) tales como: colisión vehicular, de motocicletas, derrapes, volcamientos, entre otros y son clasificados de acuerdo a su magnitud, es por ello que desde el año 2013, la Brigada de Paramédicos del MPPTTOP, ha venido efectuando el levantamiento de información sobre los incidentes que ocurren en las principales arterias viales, en esta situación intervienen dos (2) tipos de funcionarios, el Radio Operador, quién es el encargado de monitorear y transmitir la información de los sucesos ocurridos y, el Paramédico, es el responsable de brindar 5 asistencia a las víctimas, este proceso que ha realizado la Brigada de Paramédicos del MPPTTOP se efectúa de la siguiente manera: a. Al ser reportado un accidente vial (ver concepto en Anexo A) en cualquiera de las Autopistas de la Gran Caracas, el Radio Operador notifica al grupo de guardia de la zona donde se produjo el accidente, para que se designe un Paramédico que se traslade al sitio del incidente a fin de prestar la atención correspondiente. b. El Paramédico asignado se comunica con el Radio Operador de turno, quien es el encargado del monitoreo del incidente, éste le asigna un número de caso asociado al accidente reportado. Durante la contingencia existe constante comunicación entre el Radio Operador y el Paramédico asignado, quien notifica sobre la hora de llegada al sitio, las unidades que se aproximaron al lugar, las acciones que se tomaron y cualquier otra información que sea necesaria al momento que concluya el levantamiento del accidente. c. El Radio Operador durante todo el proceso es informado por el paramédico a través de los reportes emitidos vía radio, para así tener el registro de todo lo acontecido, llenando el Libro de Novedades de la Brigada, que contiene toda la información suministrada por el paramédico (tipo de accidente, hora de llegada, hora de culminación de proceso, entre otra), al dar por culminado el incidente, se da por finalizado el reporte correspondiente en el señalado libro. d. En el lugar de los hechos el Paramédico que atiende la situación, toma nota de toda la información necesaria en la Planilla de Reporte: zona donde ocurrió el accidente, datos del lesionado, evaluación inicial, tipo de lesiones, incidente (falsa alarma, colisión simple o múltiple), datos pertinentes para el correcto vaciado de la respectiva planilla. Este proceso se desarrolla cada vez que ocurre un accidente acumulándose así innumerables planillas diarias por incidente. En la Figura 1 se puede apreciar el contenido de la página uno (1) de la planilla de Reporte de Atención, que contiene el primer segmento de datos que se recogen durante el incidente, como el número de caso, el Grupo de Guardia a cual pertenece 6 el Paramédico, ubicación, fecha y hora del suceso, tipo de atención, identificación del paciente y la evaluación inicial. Figura 1. Página Uno de Reporte de Atención, (MPPTTOP, 2012). C.I.: Sexo: Uso de cinturón Airbag inflado Casco Volante deformado Tablero deformado Butaca desplazada Parabrisas roto Ventana rota Salió solo del vehículo Salió con ayuda Otro: Asma EPOC No Permeable No Forzada Tórax Asimétrico Presentes Claros Disminuidos Ausente Sibilantes Crepitantes SpO2: O2: Lts x Min Piel/ Mucusas: Fría Pulsos: Grupo de Guardía: REPÚBLICA BOLIVARIANA DE VENEZUELA MINISTERIO DEL PODER POPULAR PARA EL TRANSPORTE TERRESTRE VIALIDAD Y CONSTRUCCIONES SUCRE, S. A. BRIGADA DE RESTABLECIMIENTO VIAL Y ATENCIÓN DE EMERGENCIAS REPORTE DE ATENCIÓN Fecha: / / Día: Caso N°: Unidad: Hora llegada escena: Traslado: Lugar del suceso: Hora de llamada: Hora de salida: Nombre: Hora llegada CA 1: Hora llegada CA 2: Caídas Edad: Centro asistencial 1: Teléfono: Centro asistencial 2: Dirección del Paciente: MECANISMO DE LESIÓN OTRAS CAUSAS DE TRAUMA 1) Colisión en Moto HPPP Quemaduras Por: Colisión Vehicular HAB Colisión En: Otro: Frontal CAUSAS MÉDICAS Posterior Gin/Obs. ACV Lateral IM Dolor Abdominal Volcamiento de: Sind. Convulsivo Otras Observaciones: Arrollamiento de: Especifíque: 2) Contra otro Auto Contra otra Moto HISTORIA AMPLIA Contra: Alergico a: Contra Objeto Fijo Medicamentos que toma: Permeable Patologías Previas: HTA EVALUACIÓN INICIAL Cardiopatía Isquémica Diabetes Paciente Consciente Paciente Inconsciente Otras: VÍA AÉREA/VENTILACIÓN Especifíque: Derecho Izquierdo Frecuencia Respiratoria: Forzada Hora última comida: Tórax Simétrico Ingesta de OH: Si No ¿Traquea desviada? Si No ¿Embarazo? Si Fur: No Normal Seca Pálida Cianótica Sonidos Respiratorios: IDENTIFIQUE EL SITIO DE LA LESIÓN CON EL NÚMERO CORRESPONDIENTE Derecho Izquierdo Derecho Izquierdo Derecho Izquierdo Derecho Izquierdo Derecho Izquierdo vía: Observaciones: CIRCULACIÓN Observaciones: Especifíque: Sudorosa Caliente Normal Lugar 1. Herida 6. Fractura 11. Avulsión Débil Lugar 2. Excoriación 7. Hd. Penetrante 12. Luxación Ausente Lugar 3. Hematoma 8. Quemadura 13. Esguince FC1: x' FC2: x' 4. Traumatismo 9. Amputación 14. T.C.E. TA1: / MMHG TA2: / MMHG 5. Deformidad 10. Edema 15. Otros 7 En la Figura 2 se observa la página dos (2) de la planilla de Reporte de Atención, que contiene los resultados de las evaluaciones neurológicas, información sobre procedimientos realizados, autorización para uso de medicamentos, entre otros aspectos relevantes del accidente, así como los datos del Paramédico. Figura 2. Página Dos de Reporte de Atención, (MPPTTOP, 2012). 4 3 2 1 0 Apertura Ocular Respuesta Verbal Respuesta Motora Intubación Endotraq. Tubo N° NEUROLÓGICO PROCEDIMIENTOS REALIZADOS Escala de Glasgow: BVM Succión 1 2 3 4 1 2 3 4 5 1 2 3 4 5 6 Cánula orofaringea KED Total: /15 Puntos Ventilación Mec. Collarín Líquidos IV: DEA Apertura Ocular Respuesta Verbal Respuesta Motora Cantidad Solución Reactiva mm mm Oxigeno Terapia con: 1 2 3 4 1 2 3 4 5 1 2 3 4 5 6 RCP Tiempo Catéter N° Total: /15 Puntos Scooper Inmovilizador Univ Reacción Pupilar: Isocóricas Anisocóricas Control de Hemorragía Tamaño OI Tamaño OD Tabla Larga Miótica mm mm Limpieza deHerida/Excoriación Lenta mm mm Férulas de Tracción Midriática mm mm Ferulas de: Sin respuesta mm mm Evaluación Completa Observaciones: Otro: Vía de Adm. IV IM SC SL O AUT. PARA EL USO DE MEDICAMENTOS Medicamento: Dosis Paciente Recibido en el Servicio de: Centro Asistencial: Médico que recibe: Vía de Adm. IV IM SC SL O SCORE REVISADO DE TRAUMA Medicamento: Dosis Glasgow P. Sistólica FR Valor Médico: MSDS CI: Observaciones: Total: Puntos NEGATIVA DE ATENCIÓN O TRASLADO Yo, C.I. en pleno uso de mis facultades, trasladado a un centro asistencial recibir atención alguna por el personal del Servicio Prehospitalario Observaciones: Nombre: Credencial: PARAMÉDICOS QUE APOYAN LA ATENCIÓN Nombre: MSDS: Firma: PARAMÉDICO QUE REALIZA LA HISTORIA adscrito al Ministerio del Poder Popular Para El Transporte Terrestre. Decisión que mantengo bajo mi responsabilidad, en Caracas a los días del mes de 2 Firma del paciente o familiar Observaciones: Supervisor de Guardía: Credencial: Nombre: Credencial: Observaciones Generales / Organismos Presentes: 8 e. Al finalizar su turno, el Paramédico procede a la carga de los datos a una hoja de cálculo en formato Excel de Google Docs. (Google, 2006), donde se vacía la información de todas las planillas que se hayan generado durante el período de trabajo, esta actividad se realiza para que el Radio Operador lleve un control de todos los accidentes ocurridos diariamente. f. Los Paramédicos consignan las planillas de Reporte de Atención a los Coordinadores de la Brigada, quienes se encargan de procesar los datos para elaborar los reportes estadísticos por: zona de atención, tipo de atención, edad, sexo y unidad, para validar y obtener las estadísticas, contando cada ítem de la planilla del Reporte, y vaciarlos en las Hojas de Cálculo de Google (Google, 2006). En la Figura 3 se muestra parte del mencionado documento con los datos estadísticos ya calculados y clasificados, con el objeto de mostrar la frecuencia de accidentes ocurridos en las distintas autopistas en un rango de tiempo (días, semanas, meses, semestre, año) Figura 3. Hoja de Estadísticas, (MPPTTOP, 2012). En la Figura 4 se puede apreciar a través de un diagrama de flujo cómo se desarrollaba el proceso anteriormente descrito: 9 Figura 4. Diagrama de Flujo del Proceso de Gestión de Accidentes. Con base en la situación descrita, se constató que todas las actividades referentes al levantamiento de información y cálculo de estadísticas eran realizadas de manera manual, para después cargar los reportes en las herramientas de hojas de cálculos, generando el surgimiento de un conjunto de problemas, entre los que se destacan:  El extravío o pérdida de datos, debido a que la carga de la información se efectuaba una vez terminada la jornada de turno del paramédico, lo que conllevaba a que el funcionario no recordara el número de caso asignado y, por ende no coincidía con el otorgado por el radio operador.  Los Reportes Estadísticos, obtenidos por zona, tipo de atención, edad, sexo y unidad, se hacían de forma periódica y manual, resultando este trabajo bastante complejo, debido a que se contaban uno a uno los ítems de los reportes de atención, lo cual traía como consecuencia inconsistencia en los datos, motivado al error en el proceso de conteo.  Los Paramédicos realizaban el vaciado de la información recolectada al finalizar su turno, lo que conllevaba a que se olvidara la carga del número de caso asignado, lo que causa la no coincidencia al realizar la conciliación entre las planillas y lo cargado en las hojas de cálculo de Google Docs. (Google, 2006). 10  Con cierta frecuencia el libro de novedades y los reportes de atención no concordaban, trayendo como consecuencia que se debía iniciar el proceso de identificación del incidente nuevamente para así poder detectar las diferencias. Por todo lo antes mencionado, se plantea como pregunta de investigación: ¿De qué forma se puede mejorar el proceso de Gestión de Accidentes Viales de la Brigada de Paramédicos del MPPTTOP? La respuesta es, desarrollando un Sistema Web. 1.3. Justificación Debido a la inconsistencia existente entre los datos recabados por la Brigada de Paramédicos en un incidente vial y los registrados en los Reportes de Atención, se desarrolló SisGEVI que ha permitido que este trabajo se ejecute de manera consistente. El Desarrollo de SisGEVI permitió solventar la problemática existente, ya que se ha disminuido el riesgo que se presentaba al momento de la carga de la información y de la generación de estadísticas. A través de SisGEVI la Brigada de Paramédicos logro obtener los siguientes beneficios:  Se contribuyó al ahorro de tiempo, dedicación y esfuerzo por parte de los coordinadores, en el cálculo de las estadísticas, ya que el sistema lo realiza automáticamente, cada vez que se requiera.  Se disminuyeron los errores que existían durante la realización de las actividades elaboradas manualmente.  Se contribuyó con el medio ambiente, ya que se ahorra papel al no tener que imprimir los Reportes de Atención para ser llenado. Cada uno de los beneficios mencionados, permitieron que el proceso de Gestión de Accidentes Viales, sea rápida y eficiente para todos aquellos usuarios involucrados en el mismo. La importancia del desarrollo de un sistema web para la gestión del proceso de carga de Reportes 11 de Atención, se basó en primer lugar en la absoluta disponibilidad de las herramientas que pudieron utilizarse en cualquier computador o dispositivo móvil, motivado al diseño adaptativo del SisGEVI. Haciendo uso de la tecnología, se soluciona la problemática planteada anteriormente, así como también se optimizó la ejecución de las tareas administrativas. 1.4. Objetivos de la Investigación 1.4.1. Objetivo General Desarrollar un Sistema Web para la Gestión de Emergencias Viales en las autopistas de la Gran Caracas, SisGEVI. 1.4.2. Objetivos Específicos 1. Definir los requerimientos funcionales y no funcionales que proveerá el sistema según las necesidades de cada usuario. 2. Desarrollar la arquitectura de SisGEVI. 3. Desarrollar la interfaz de usuario que utilizara SisGEVI. 4. Determinar el modelo lógico y físico de la Base de Datos del SisGEVI 5. Instalar el SisGEVI en el servidor proporcionado por el MPPTTOP. 6. Aplicar pruebas de aceptación, funcionalidad y usabilidad al SisGEVI. 1.5. Alcance El alcance del presente TEG abarcó la conceptualización, diseño e implementación de una Sistema Web con funcionalidades que automaticen el sistema de gestión de accidentes que se llevaba en la Brigada de Paramédicos. Este permite el registro de los accidentes viales sucedidos 12 en la Gran Caracas, que comprende el Distrito Metropolitano de Caracas, y los estados Miranda y Vargas. La generación de los reportes de atención y las estadísticas de los accidentes vía web se podrán realizar en computadoras de escritorio y dispositivos móviles (tabletas o teléfonos inteligentes), debido a su diseño adaptable o responsive utilizado en el desarrollo del mismo. 1.6. Metodología de Desarrollo La metodología de desarrollo utilizada fue AgilUs, que se define como un método de desarrollo ágil que toma en cuenta la usabilidad a tempranas etapas del desarrollo de software. Es una metodología en la cual la usabilidad, usuarios e interacciones con el sistema son tan importantes como los procesos y herramientas, donde el funcionamiento del software es más relevante que una documentación exhaustiva. Por lo tanto, la construcción y desarrollo de las interfaces de usuario debe ser tomada en cuenta desde el inicio para así alcanzar el objetivo primordial: dar usabilidad al usuario final. (Acosta, 2011). 1.6.1. Ciclo de Desarrollo de AgilUs Según (Acosta, 2011) el proceso de desarrollo de software de AgilUs engloba cinco (5) etapas las cuales son:  Requisitos: se hace el levantamiento de requerimientos, para la cual se realizan actividades como: tormenta de ideas, entrevistas, sondeos o cuestionarios, además se crean los perfiles de usuario y se listan los requerimientos funcionales y no funcionales.  Análisis: se utilizan diagramas realizados bajo la notación estándar del Lenguaje de Modelado Unificado (UML, por sus siglas en inglés Unified Modeling Language), específicamente los Modelos de Casos de Uso y Objeto De Dominio, con esto se definen las funcionalidades del sistema. 13  Prototipaje: se desarrolla un prototipo rápido de la interfaz de usuario a partir de los patrones de interacción, al cual se le van incorporando funcionalidades hasta llegar al producto final.  Entrega: se tiene el software final al que se le realizan pruebas que certifiquen que es un software usable y sin errores, para ello se utilizan las pruebas de aceptación. En la Figura 5 se puede apreciar el ciclo de vida de AgilUs (Acosta, 2011): Figura 5. Ciclo de Vida de Metodología AgilUs, (Acosta, 2011) 1.6.2. Artefactos Según (Acosta, 2011) cada etapa de la metodología, posee sus propios artefactos, a continuación se describen los que se usaron en el proceso de desarrollo de este proyecto: entrevistas, tormentas de ideas, sondeos, perfil de usuario, guías de estilo, listas de requerimientos funcionales y no funcionales, modelo de casos de uso y de objeto de dominio y pruebas de aceptación. 14 Plantea el desarrollo de un sistema, partiendo de un prototipo de interfaz de usuario y de la evaluación de usabilidad desde el inicio del sistema, por tal razón se decidió utilizar esta metodología, debido a que la usabilidad es importante en el éxito de un software dirigido a un grupo de usuarios, se desarrolló un sistema de fácil uso y aprendizaje, donde el diseño de una interfaz usable fue fundamental. 1.7. Antecedentes Para el año 2015, en Venezuela no se tiene evidencias de la existencia de un sistema web que le permita a un ente estadal que presta atención en las emergencias viales gestionar de manera rápida y eficiente cualquier accidente vial o servicio prestado en las principales autopistas. Sin embargo, a nivel internacional se encontraron dos (2) sistemas que facilitan las gestiones viales de los países donde se utilizan. Dichos sistemas son:  PTV Vistad (PTV Group, 2000): la República Federal de Alemania pone a disposición de las autoridades competentes o las comisiones de investigación de accidentes (formadas por la policía, las autoridades de transporte y el servicio de la red viaria) una herramienta que sirve como plataforma central para registrar, validar y analizar de una manera óptima datos sobre accidentes que abarcan a varias autoridades competentes.  Sistema de Información Territorial Estatal en Línea (SITEL) (SITEL, 2006): en México, específicamente en el estado de Jalisco, se encuentra en práctica SITEL, el cual tiene como objetivo la integración de la información geográfica que se produce a nivel estatal, regional y municipal para su publicación, distribución y uso a través de Internet. Este proyecto integra más de dos mil quinientas (2,500) capas de información que pueden consultarse en línea y publica más de setenta (70) servicios Web para que los usuarios puedan acceder a imágenes y cartografía vectorial a través de Internet mediante Sistemas de Información Geográfica (SIG) y otras aplicaciones. Dentro de este portal pueden encontrar los siguientes servicios de información: visualización de cartografía en línea, descargas de archivos, aplicaciones en Google Maps. En la Figura 6 se puede apreciar un ejemplo del Sistema SITEL, mostrando un mapa de Jalisco donde se observan diversos accidentes y su tipo: 15 Figura 6. SITEL, (SITEL, 2006) Los sistemas anteriormente descritos, tiene relación con el SisGEVI, debido a que ambos sistemas facilitan la información relacionada con los accidentes viales ocurridos en los países donde se aplican. Permitiendo la obtención de datos que generan información estadística para ser utilizada por los actores involucrados. En este capítulo se enfatizó el problema de investigación que nos condujo a la realización de un Sistema Web como solución, fue definido el objetivo general y los objetivos específicos, para el correcto desarrollo del proyecto, también fue estimado el alcance y seleccionada la metodología a ser utilizada y por último los antecedentes que preceden a SisGEVI En el siguiente capítulo se detallará, el sustento teórico de los Sistemas Web y las tecnologías, frameworks y licencias que permitieron el desarrollo de SisGEVI. 16 Capítulo II: Marco Teórico En este capítulo se presenta el sustento teórico relacionadas con el trabajo de investigación, que sirven de fundamento para el desarrollo del TEG. El mismo se divide en dos grandes secciones, las cuales se describen a continuación: La primera sección, hace referencia a lo que es un Sistema Web, así como también, sus principales características, ventajas y desventajas. Se explica además la arquitectura Cliente- Servidor, sus componentes para luego enumerar sus principales ventajas. Finalmente, se explicará el patrón de diseño MVC (Modelo-Vista-Controlador), que se encarga de separar las funciones del cliente, el servidor Web y el servidor de Base de Datos. La segunda sección, describe los recursos tecnológicos necesarios para el desarrollo de SisGEVI, se definen las tecnologías del lado del cliente las cuales son: HTML, CSS, JavaScript, Boostrap, JQuery y AJAX, las tecnologías del lado del servidor, tales como: Apache y PHP y las del servidor de bases de datos PostgreSQL 2.1. Sistema Web Según Mosquera (2009), se define como un sistema de información que utiliza una arquitectura para proporcionar información (datos) y funcionalidad (servicios) a usuarios finales a través de una interfaz de usuario basada en presentación e interacción sobre dispositivos con capacidad de trabajar en la web. Los Sistemas Web varían ampliamente en su ámbito, desde sistemas de información hasta sistemas de transacciones, incluso de servicios web distribuidos. Por lo general, manejan una gran cantidad de datos, que se encuentra en fuentes heterogéneas, se maneja en distintos formatos, y un conjunto de componentes que están por lo general codificados en diferentes lenguajes de programación y están distribuidos en diferentes plataformas. 17 Para esta investigación tomamos el concepto de Sistema Web como una infraestructura para la entrega de información, la cual debe proporcionar una infraestructura de desarrollo y mantenimiento que permita manejar e interpretar los datos y que proporcione funcionalidades a los usuarios finales para capturar, almacenar, procesar y mostrar la información, dando solución a sus necesidades. 2.1.1. Características de los Sistemas Web De acuerdo a Good (2015), algunas de las principales características de los Sistemas Web son: a. Compatibilidad multiplataforma: tienen un camino mucho más sencillo para la portabilidad multiplataforma que las aplicaciones de escritorio. Varias tecnologías incluyendo Java, Flash, ASP y Ajax permiten un desarrollo efectivo de programas soportando todos los sistemas operativos principales (Windows, Linux, MacOS). b. Actualización: están siempre actualizadas con la última versión sin requerir que el usuario tome acciones pro-activas, y sin necesitar llamar la atención del usuario o interferir con sus hábitos de trabajo con la esperanza de que va a iniciar nuevas descargas y procedimientos de instalación. c. Acceso Inmediato: no necesitan ser descargados, instaladas y configurados. Para su acceso, simplemente se requiere hacer uso de un navegador web y conexión a Internet como se hizo mención anteriormente. d. Facilidad de prueba: no existen obstáculos para permitir pruebas sencillas y efectivas, antes de realizar una operación que afecta la realidad como por ejemplo cargar la tarjeta de crédito, es decir poder simular este tipo de operaciones. e. Múltiples usuarios concurrentes: pueden ser accedidas por miles de usuarios al mismo tiempo. No hay necesidad de compartir recursos cuando múltiples usuarios pueden ver e incluso editar el mismo documento de manera conjunta. 18 Los Sistemas Web se consideran altamente novedosos, ya que permiten tener acceso a las diferentes funcionalidades desde cualquier computador, sin necesidad de haber instalado previamente un hardware o software en específico para el correcto funcionamiento del SW. 2.1.2. Ventajas y Desventajas de un Sistema Web De acuerdo a Calero (2012), algunas de las principales ventajas y desventajas de los Sistema Web son: Ventajas: a. Compatibilidad multiplataforma: tienen un camino mucho más sencillo para la compatibilidad multiplataforma que las aplicaciones de software descargables. b. Actualización: están siempre actualizadas con el último lanzamiento. c. Inmediatez de acceso: no necesitan ser descargadas, instaladas y configuradas. Se accede a través de una cuenta de usuario para trabajar sin importar cuál es su configuración o su hardware. d. Múltiples usuarios concurrentes: pueden realmente ser utilizada por múltiples usuarios al mismo tiempo. Desventajas: a. Requieren navegadores web totalmente compatibles para funcionar. Incluso muchas veces requieren las extensiones apropiadas y actualizadas para operar. b. Muchas veces requieren una conexión a internet para funcionar, si la misma se interrumpe, no es posible utilizarla más. c. El Sistema, deja de funcionar si es borrada o desinstalada de sus servidores. 19 d. El usuario, en general, no tiene libertad de elegir la versión del sistema web que quiere usar. Un usuario podría preferir usar una versión más antigua, hasta que la nueva sea probada. e. En teoría, el desarrollador puede rastrear cualquier actividad que el usuario haga. Esto puede traer problemas de privacidad. Los Sistemas Web para el año 2016, son más utilizados que Software instalados localmente en equipo de trabajo, ya sean computadoras de escritorio o portátiles, debido a su versatilidad y acceso, ya que con tener conexión a internet y un navegador compatible se puede trabajar y darle uso al sistema. Esto conlleva a que cualquier persona en cualquier lugar pueda efectuar su trabajo remotamente y sin necesidad de estar ubicado en un sitio en específico. De las desventajas se observó que al acceder al Sistema través del internet, se colocan en riesgo los datos que estén almacenados en estas herramientas, por ende se deben aplicar estándares de seguridad al momento de desarrollar este tipo de Software. 2.1.3. Beneficios de los Sistemas Web Según indica Graham, (2001) algunos de los beneficios son los siguientes: a. El trabajo a distancia se realiza con mayor facilidad. Para trabajar o utilizar el Sistema se necesita un computador con un buen navegador Web y conexión a internet. b. Se tendrá total disponibilidad en cuanto a hora y lugar, podrá trabajar en ella en cualquier momento y en cualquier lugar del mundo siempre que tenga conexión a internet. c. Permiten centralizar todas las áreas de trabajo. 20 De acuerdo con el autor, los sistemas web aportan beneficios en cuanto a tiempo y lugar, siempre que se tenga acceso a internet. Estos demuestran el auge de la tecnología en las últimas décadas y su uso a nivel personal y empresarial se ha convertido en una necesidad puesto que facilitan las tareas del día a día. Son herramientas beneficiosas ya que se busca brindarle mayor destreza al trabajador en cuanto al uso que se le dan a estos, ya que son accesible desde cualquier lugar con acceso a internet y se pueda hacer uso de las funciones que presta o para lo que fue construido. 2.1.4. Ejemplos de Sistemas Web Existen diferentes Sistemas Web, a continuación se presentan algunos ejemplos: a. Sistema de Generación de Citas para compra de Productos VIT: creado para optimizar el Sistema de Citas de Productos de Venezolana de Industria Tecnológica (VIT), que es una compañía anónima de capital mixto, constituida por la Corporación de Industrias Intermedias de Venezuela, S.A. (CORPIVENSA), adscrita al Ministerio del Poder Popular de Industrias y Comercio (VIT, 2015). En la Figura 7 se puede observar la pantalla de inicio de sesión, la cual muestra un formulario para ingresar al sistema, y adyacente a este la información correspondiente a las solicitud de productos VIT. Figura 7. Página Principal del Sistema, (VIT, 2015) 21 El señalado sistema, genera citas para la adquisición y la disponibilidad de equipos en los diferentes establecimientos que conforman la red de Venezuela Productiva. Al iniciar sesión, el programa indica la existencia o no del producto, de ser positivo se continúa con el proceso de compra, de ser negativo, el sistema arroja mensaje de la no existencia de equipos. En la Figura 8 se puede observar la cita que genera el sistema: Figura 8. Cita Generada por el Sistema (VIT, 2015) b. Sistema de Gestión de Pasantías (SIGEPAS): implementado para sistematizar el proceso de pasantías de la Escuela de Computación, en la Facultad de Ciencias de la U.C.V. SIGEPAS fue desarrollado con herramientas de software libre, que permite a los estudiantes la formalización de inscripción de pasantías, así como el seguimiento y control por parte las distintas comisiones involucradas en el proceso de inscripción. En la Figura 9 se muestra la página principal del sistema (SIGEPAS, 2012). 22 Figura 9. Sistema de Gestión de Pasantías (SIGEPAS, 2012). 2.1.5. Arquitectura de un Sistema Web La arquitectura de un Sistema Web es la vista conceptual de la estructura del mismo, la cual contiene código de presentación, código de procesamiento de datos y código de almacenamiento de datos. Las arquitecturas difieren según como está distribuido este código. Según Sevilla (2009) una arquitectura de un Sistema Web es la vista conceptual de la estructura del mismo, la cual contiene código de presentación (Vistas), código de procesamiento de datos (Controladores) y código de almacenamiento de datos (Modelos), estas difieren según como este distribuido el código en el sistema. Fue utilizada para el desarrollo de este TEG la arquitectura Cliente-Servidor la cual será explicada en la sección 2.1.6. 2.1.6. Arquitectura Cliente-Servidor Cliente/servidor es una arquitectura de red en la que cada computador o proceso en la red es cliente o servidor. Normalmente, los servidores son ordenadores potentes dedicados a gestionar unidades de disco (servidor de ficheros), impresoras (servidor de impresoras), tráfico de red (servidor de red), datos (servidor de bases de datos) o incluso aplicaciones (servidor de aplicaciones), mientras que los clientes son máquinas menos potentes y usan los recursos que ofrecen los servidores (Mora, 2002). 23 Para entender cómo funciona este esquema, se describen dos (2) aspectos fundamentales: a. Cliente: es el proceso que permite al usuario formular los requerimientos y pasarlos al servidor, se le conoce con el término front-end, que normalmente maneja todas las funciones relacionadas con la manipulación y despliegue de datos, además de acceder a los servicios distribuidos en cualquier parte de una red. (Sommerville, 2005) b. Servidor: es el proceso encargado de atender a múltiples clientes que hacen peticiones de algún recurso administrado por él. También se le conoce con el término back-end. Es común que un servidor esté asociado a muchos clientes, tal como se puede observar en la Figura 10 es por ello que toma ventaja el proceso de actualización y mantenimiento del sistema, ya que los cambios que deban realizarse en el software serán aplicados únicamente en el servidor. (Sommerville, 2005) Figura 10. Modelo Cliente-Servidor, (E-ducativa, 2000) Según expone Robini (2007) entre las ventajas de utilizar una arquitectura cliente- servidor se encuentran las siguientes:  Centralización del control: los accesos, recursos y la integridad de los datos son controlados por el servidor de forma que un programa cliente defectuoso o no autorizado no pueda dañar el sistema. 24  Escalabilidad: se puede aumentar la capacidad de clientes y servidores por separado. Cualquier elemento puede ser aumentado (o mejorado) en cualquier momento, o se pueden añadir nuevos nodos a la red (clientes y/o servidores).  Fácil mantenimiento: al estar distribuidas las funciones y responsabilidades entre varios ordenadores independientes, es posible reemplazar, reparar, actualizar, o incluso trasladar un servidor, mientras que sus clientes no se verán afectados por ese cambio (o se afectarán mínimamente). Esta independencia de los cambios también se conoce como encapsulación. Salazar (2010) indica que una de las variantes de la arquitectura más utilizadas en la actualidad es la de Tres Capas, está diseñada de la siguiente manera: 1. Presentación (Capa 1): es con la que interactúa el usuario, las pantallas o interfaces que se ven al utilizar el programa o aplicación. En este caso, está formada por las vistas, botones, formularios, entre otros, codificados en lenguajes como HTML, CSS, JavaScript, entre otros. 2. Lógica de negocio (Capa 2): está formada por las entidades empresariales, que representan objetos que van a ser manejados o consumidos por toda la aplicación. Es el puente de comunicación entre la capa de datos y la de presentación. 3. Datos (Capa 3): la información es grabada en una base de datos, por medio de clases que interactúan con estas y que realizan todas las operaciones con la base de datos de forma transparente para la capa de negocio. (funciones como insertar tabla y datos, eliminar, etc.) están basadas en lenguaje SQL (por sus siglas en inglés Structured Query Language) que es el lenguaje estándar ANSI/ISO de definición, manipulación y control de bases de datos relacionales (Escofet, 2007). https://es.wikipedia.org/wiki/Idioma_ingl%C3%A9s 25 En la Figura 11 se puede apreciar gráficamente lo que es una arquitectura de tres (3) capas. Figura 11. Arquitectura de Tres Capas, (Sánchez, 2004) Para el desarrollo del SisGEVI se utilizó una arquitectura de tres capas, pero para que el código a desarrollar fuese más legible (separación de interfaces de usuario, funcionalidades y manejo de base de datos) y escalable en futuros desarrollos, se utilizó un patrón de diseño que se asemejara a dicha arquitectura, y se seleccionó el Patrón MVC, por sus siglas en inglés Model-View-Controller, que se describirá en el punto 2.2. 2.2. Patrón de Diseño Modelo-Vista-Controlador Según indica Jaramillo (2008) es un patrón que permite separar la interfaz gráfica de usuario, de los datos y de la lógica apoyándose en tres componentes:  Modelo: esta es la representación de los datos y reglas de negocio (mundo del problema). Es el encargado de manejar un registro de las vistas de los controladores que existen en el sistema.  Vista: permite mostrar la información del modelo en un formato adecuado que permita que se dé la interacción además de poseer un registro acerca del controlador asociado y brindar el servicio que puede ser usado tanto por el controlador como por el modelo. 26  Controlador: responde a los eventos provocados en el usuario que implican cambios en el modelo y la vista, dando una correcta gestión a las entradas del usuario. En la Figura 12 se puede apreciar cómo está distribuido este patrón y su semejanza a la arquitectura de tres (3) capas: Figura 12. Patrón MVC, (Potencier, 2002) La Vista es la Capa Uno (1) o Presentación, que es lo que el usuario ve como interfaz de usuario, los controladores son los que conforman la Capa Dos (2) o la lógica de negocios del sistema, la cual procesa y recibe todas las acciones realizadas por el usuario y el Modelo o Modelos, los cuales se representan por la Base de Datos o Capa Tres (3) donde se ejecutan todos los procedimientos y funciones que estén relacionados con almacenamiento de datos. Catalani, (2007) indica que el patrón MVC presenta varias ventajas:  Hay una clara separación entre los componentes de un programa; lo cual permite implementarlo por separado.  Al incorporar el modelo de arquitectura MVC a un diseño, los módulos de un programa se pueden construir por separado y luego unirlos en tiempo de ejecución. 27  Facilita una evolución continua de los sistemas, sin puntos de ruptura, ya que un cambio en un sistema afectará a uno o más componentes pero nunca afectará significativamente al núcleo de la aplicación. Debido a esto se utilizó el patrón de diseño MVC en el desarrollo de SisGEVI ya que es un proyecto que estará en continua evolución y crecimiento, en cuanto a nuevos requerimientos y nuevas funcionalidades, y al realizar cambios, se puedan llevar a cabo se pueden realizar por separados sin verse afectado el Sistema, debido a la separación de la Lógica de Negocios de las diversas interfaces de usuario. 2.3. Tecnologías de Desarrollo Web Las tecnologías web son aquellas que proporcionan al programador un conjunto de herramientas que facilitan su trabajo. Se dividen en lenguajes del lado del cliente y del servidor, las lado del cliente están embebidas en la página HTML y son interpretadas y ejecutadas por el navegador Web, permitiendo así el desarrollo de aplicaciones basadas en el modelo cliente/servidor (Morales, 2011). Son aplicaciones que los usuarios pueden utilizar accediendo a un servidor web a través de internet o una intranet mediante un navegador, o bien es una aplicación de software que se codifica en un lenguaje soportado por los navegadores web en la que se confía la ejecución a un navegador (Araujo, 2008). Las tecnologías que se mencionan posteriormente tanto del Lado del Cliente (HTML, JavaScript, JQuery, CSS, Boostrap) como del Lado del Servidor (PHP, Laravel Framework 4.2) fueron las empleadas para el desarrollo del TEG, debido a que en la Ley de InfoGobierno (CONATEL, 2013) promulgada por la República Bolivariana de Venezuela se estableció que todos los entes del Estado deben ajustarse tanto en la adquisición como en el desarrollo web en el uso de Software Libre. 28 2.3.1. Lenguajes del Lado Cliente Los lenguajes del lado cliente (entre los cuales no solo se encuentra el HTML sino también JavaScript y CSS) son aquellos que pueden ser directamente procesados por el navegador y no necesitan un pre tratamiento. La programación del lado del cliente tiene como principal ventaja que la ejecución de la aplicación se delega al cliente, con lo cual se evita recargar al servidor de trabajo, el servidor solo envía el código, y es tarea del browser interpretarlo (Torre, 2006). Un lenguaje del lado del cliente es totalmente independiente del servidor, lo cual permite que la página pueda ser albergada en cualquier sitio. A pesar de esto el producto final no se verá bien si el ordenador del cliente no tiene los complementos adecuados. Cuando una página HTML contiene alguna de las tecnologías de cliente, el navegador se encarga de interpretarlas y ejecutarlas para realizar los efectos y funcionalidades (Alvarez, 2015). Las páginas del cliente son muy dependientes del sistema donde se están ejecutando y esa es su principal desventaja, ya que cada navegador tiene sus propias características, incluso cada versión, y lo que puede funcionar en un navegador puede no funcionar en otro. Por requerimientos del proyecto y manteniéndose apegado al marco legal de este trabajo de investigación a continuación se describen las que fueron utilizadas para el desarrollo de SisGEVI: 2.3.1.1. Lenguaje de Marcado de Hipertexto El lenguaje de marcado de hipertexto por sus siglas en inglés HTML (HyperText Markup Language) se utiliza para crear documentos que muestren una estructura de hipertexto. Un documento de hipertexto es aquel que contiene información cruzada con otros documentos, lo cual nos permite pasar de un documento al referenciado desde la misma aplicación con la que lo estamos visualizando (Mateu, 2004). HTML le da a los desarrolladores medios para: 29  Recuperar información en línea vía enlaces de hipertexto, con el presionar de un botón (Mateu, 2004).  Diseñar formas para llevar a cabo transacciones con servicios remotos, para su uso en la búsqueda de información, reservaciones, órdenes de productos (Mateu, 2004). Con HTML, los desarrolladores describen la estructura de su página utilizando marcado de etiquetas. Los elementos del lenguaje contienen etiquetas como “párrafo”, “lista”, “tabla”, entre otros. Actualmente en el 2015, HTML se encuentra en su versión 5. (W3, 2005) Según Vega, (2004) define HTML5 es la actualización de HTML, las novedades de esta versión se centran en facilitar la implementación de aplicaciones web, avanzar hacia la web semántica y evitar un poco aquellos elementos que rompen con el esquema web. Algunos de los aspectos más interesantes incluidos en esta versión de HTML que son detallados por Vega, (2004) se muestran a continuación:  Estructura de la aplicación web: la mayoría de las aplicaciones web tienen una estructura común, que suponían un uso abusivo, pero necesario, de la etiqueta <div>.  Etiquetas para contenido específico: ahora es posible incorporar contenido multimedia este con etiquetas específicas como audio, video, etc.  HTML5 añade tipos de validación en sus formularios, como por ejemplo validaciones de números telefónicos, correos, fechas entre otros.  Mejores formularios: Se incluyen nuevos tipos de datos para el elemento input que permiten una mejor interacción con el usuario, así como también validaciones sin la necesidad de otro lenguaje como JavaScript. 30 Se empleó HTML en el desarrollo de SisGEVI ya que es un lenguaje que posibilita la definición de la estructura del sistema, el cual facilito el desarrollo de las diferentes interfaces, permitiendo llevar un orden mediante el uso de etiquetas, siendo el código mantenible en el tiempo y de fácil entendimiento para futuras actualizaciones o nuevos funcionalidades que se deseen agregar. 2.3.1.2. Hojas de Estilo en Cascada Las Hojas de Estilo en Cascada o CSS de siglas en inglés de Cascading Style Sheets, es el lenguaje utilizado para describir la presentación de páginas web, incluyendo colores, posicionamiento y fuentes. Permite adaptar la presentación a distintos tipos de dispositivos, como pantallas grandes, pequeñas o impresas. La separación del HTML y el CSS hace que sea más fácil el mantenimiento de los sitios, la compartición de estilos entre páginas, y la adaptación de las páginas a distintos ambientes. Esto es referido como la separación de la estructura (o contenido) de la presentación (Mozilla Developer Network, 2005). Para el 2015 se encuentra en su versión 3, mejor conocida como CSS3, esta ofrece mayor control y muchas otras opciones en el estilo de los elementos de las páginas Web, además de otros efectos que CSS no proporcionaba y para los cuales eran necesarias otro tipo de técnicas avanzadas y complicadas para el desarrollador. Entre las novedades que aporta CSS3 en el ámbito gráfico de las páginas web están los bordes circulares, sombras, nuevas fuentes y en cuanto al rendimiento, CSS3 agiliza el proceso de carga de la página en el navegador de manera tal que el tiempo que toma para cargar y mostrar los recursos al usuario en cuanto a apariencia se trata, hace que los sitios web sean menos pesados, consuman menos tiempo de producción y realicen menos peticiones al servidor. (Ojeda, 2012). 31 Dichas hojas de estilo son de gran aporte para el sistema ya que con su utilización, nos permite la separación de la presentación visual en las interfaces de usuario sin tener que manipular la información que este en el sistema, esto sirve de aporte ya que en un futuro si se desea cambiar el aspecto visual del sistema, solo se tendría que modificar los códigos CSS de SisGEVI. 2.3.1.3. Framework Twitter Bootstrap Twitter Bootstrap es un framework de código abierto desarrollado por Twitter, que combina código CSS y JavaScript diseñado para ayudar a construir componentes para la interfaces de las aplicaciones web. Brinda la capacidad de construir rápidamente interfaces elegantes y ricas en funcionalidad. Una de las características más llamativas de Bootstrap es el diseño responsive o adaptable el cual es el enfoque que sugiere que el diseño y el desarrollo deben responder al comportamiento del usuario y el ambiente basado en el tamaño de la pantalla, plataforma y orientación (Marcotte, 2011). El aporte dado en el desarrollo SisGEVI en la utilización de Bootstrap permite que las interfaces de usuario se puedan visualizar en cualquier tipo de dispositivo, móvil, computadora de escritorio o laptop, esto permite que el Sistema Web realizado tenga mayor alcance tecnológico. 2.3.1.4. JavaScript JavaScript (JS) es un lenguaje ligero e interpretado, orientado a objetos con funciones de primera clase, más conocido como el lenguaje de script para páginas web, pero también usado en muchos entornos sin navegador. Es un lenguaje script multi-paradigma, basado en prototipos, dinámico, soporta estilos de programación funcional, orientada a objetos e imperativa. (Mozilla Developer Network, 2006) 32 Técnicamente, JavaScript es un lenguaje de programación interpretado, debido a que no se necesita compilar el programa para ejecutarlo, por lo que se puede probar en cualquier navegador web sin necesidad de procesos intermedios (en la actualidad, todos los navegadores web interpretan código JavaScript integrado en las páginas web). Es orientado a objetos ya que permite definir clases con sus atributos y métodos (Eguíluz, 2008). Siendo un lenguaje ligero, que maneja eventos y que es soportado por la mayoría de los navegadores web, se convierte en una tecnología apropiada para SisGEVI con el fin de llevar a cabo distintos efectos y funcionalidades, para la mejora en cuanto a usabilidad del Sistema. 2.3.1.5. AJAX JavaScript Asíncrono y XML, AJAX (Asynchronous JavaScript And XML, por sus siglas en inglés) es una técnica de desarrollo web para crear Aplicaciones Web interactivas que mantienen una comunicación asíncrona con el servidor en segundo plano. Esta comunicación se establece con el fin de lograr cambios sobre una misma página sin necesidad de recargarla completamente, lo que significa aumentar la interactividad, velocidad y usabilidad Ajax es una tecnología asíncrona, en el sentido de que los datos adicionales se solicitan al servidor y se cargan en segundo plano sin interferir con la visualización ni el comportamiento de la página (Garret, 2006). Para SisGEVI el uso de AJAX tuvo un aporte en cuanto a la Usabilidad y perspectiva del usuario, ya que con su utilización, el usuario puede apreciar la información actualizada sin necesidad de cargar nuevamente la página luego utilizar las funciones del sistema, permitiendo así, brindar una mejor experiencia al momento de utilizar el sistema. 33 2.3.1.6. jQuery JQuery según (Hernández, 2014) es una librería de JavaScript especializada en cambiar las páginas web en ejecución. Permite simplificar la manera de interactuar con los documentos HTML, manipular el árbol DOM, manejar eventos, desarrollar animaciones y agregar interacción con la técnica AJAX a páginas web. Esto permite que el desarrollador no tenga que enfocarse tanto en aprender funciones complejas y pueda invertir más tiempo en el desarrollo. JQuery es una librería de JavaScript rápida, pequeña y rica en características. Hace que la navegación y manipulación de documentos HTML, manejo de eventos, animaciones y manejo de JavaScript asíncrono sean mucho más simples y fáciles de usar con una API que funciona a través de una multitud de navegadores (jQuery, 2005). Lo que se ha establecido con esta librería, son tareas comunes que usualmente son utilizadas por los desarrolladores al momento de estructurar proyectos de tipo dinámico. Una de las adaptaciones de jQuery para el manejo de interfaces de usuario es jQuery UI, por sus siglas en inglés User Interface. Según jQuery-UI, (2005) es una librería de componentes para jQuery que añade un conjunto de funcionalidades, complementos y widgets para la creación de Aplicaciones Web interactiva. Esta librería proporciona abstracciones de bajo nivel de interacción y animación, efectos avanzados y de alto nivel. Está dividida en cuatro (4) módulos:  Núcleo: contiene funciones básicas para el resto de los módulos, por ejemplo, las interacciones y los widgets.  Interacciones: consisten en efectos y comportamientos complejos, pero que brindan una mejor experiencia de usuario, tales como draggable (hacer que un elemento se pueda arrastrar), resizable (permite redimensionar un elemento), sorteable (permite ordenar una lista de elementos), entre otros. 34  Efectos: permiten añadir transiciones animadas y facilidades para interacciones, tales como mostrar, ocultar, color, animación, entre otros.  Widgets: son un conjunto completo de controles de interfaz. Cada control tiene un conjunto de opciones configurables y se les puede aplicar estilos CSS. El aporte que proporcionó para el desarrollo web como lo es JQuery al desarrollo de SisGEVI, fue su simplicidad, sencillez y fácil escritura, lo que será beneficioso en un futuro, siendo de fácil comprensión, práctico a la hora de realizar mantenimiento, permitiendo la búsqueda de propiedades o la inclusión de nuevas funcionalidades al sistema. 2.3.2. Lenguajes del Lado Servidor Los lenguajes del lado servidor son aquellos que son reconocidos, ejecutados e interpretados por el propio servidor y que se envían al cliente en un formato comprensible para él. Un lenguaje del lado servidor es independiente del cliente por lo que es mucho menos rígido respecto al cambio de un navegador a otro o respecto a las versiones del mismo (Torre, 2006). El propósito principal de las tecnologías que se encuentran del lado del servidor es que permiten modificar el contenido de una aplicación web de forma online al crear una interfaz dinámica entre el cliente y el servidor, mediante el uso de lenguajes de programación. La programación del lado del servidor es una tecnología que consiste en el procesamiento de una petición de un usuario mediante la interpretación de un script en el servidor web para generar páginas HTML dinámicamente como respuesta. (Alvarez, 2015) En la Figura 13 se muestran los lenguajes de programación más populares, según un gráfico del sitio web W3Techs (W3techs, 2015): 35 Figura 13. Lenguajes de Programación del Lado del Servidor, (W3techs, 2015). 2.3.2.1. Servidor Web Apache Todo Sistema Web debe tener un servidor para su correcto funcionamiento, en el presente TEG se utilizó Apache. Es un software servidor de páginas Web de código abierto diseñado para ser un servidor Web potente y flexible que pueda funcionar en la más amplia variedad de plataformas y entornos. Apache presenta entre sus principales características mensajes de error altamente configurables, bases de datos de autenticación y negociado de contenido, pero fue criticado por la falta de una interfaz gráfica que ayude en su configuración. La arquitectura del servidor Apache es modular, lo cual implica que puede ser adaptado a diferentes entornos y necesidades, con los diferentes módulos de apoyo que proporciona, y con la Interfaz de Programación de Aplicaciones necesaria. El servidor consta de una sección núcleo y diferentes módulos que brindan muchas funcionalidades que podrían considerarse básica para un servidor Web. (Apache, 2013) El aporte que dio a SisGEVI en usarse un APACHE es una solución sencilla, eficaz y rápida para tener sitios web funcionando al 100% sin gastos adicionales. Otra ventaja es que con este servidor es muy fácil conseguir ayuda y sin duda es la mejor opción ya que actualmente lo utilizan páginas reconocidas mundialmente. 36 2.3.2.2. Lenguaje Preprocesador de Hipertexto (PHP) El Lenguaje Preprocesador de Hipertexto, por sus siglas en inglés HyperText Pre- processor, es un lenguaje de programación de código abierto, interpretado de alto nivel y ejecutado del lado del servidor. Está diseñado originalmente para la creación web de contenido dinámico de una manera rápida y sencilla. PHP resulta un lenguaje sencillo de aprender, además es multiplataforma ya que permite que los programas funcionen igual sobre diferentes plataformas. Las principales características de PHP son: (PHP, 2001)  Orientado al desarrollo de aplicaciones web dinámicas con acceso a información almacenada en una base de datos.  Capacidad de conexión con la mayoría de los motores de base de datos que se utilizan en la actualidad, destaca su conectividad con MySQL y PostgreSQL.  Posee una amplia documentación en su sitio web oficial, entre la cual se destaca que todas las funciones del sistema, las cuales están explicadas y ejemplificadas en un único archivo de ayuda. A diferencia de Java o JavaScript que se ejecutan en el navegador PHP se ejecuta en el servidor por eso nos permite acceder a los recursos que tenga el servidor. El programa es ejecutado en el servidor y el resultado es enviado a navegador. Al ser un lenguaje que se ejecuta en el servidor no es necesario que su navegador lo soporte, es independiente del navegador. (Mateu, 2004). Se puede concluir que el lenguaje PHP es un lenguaje script usado principalmente para ejecutar en servidores web, es muy simple a la hora de programar y se considera un lenguaje muy robusto es por ello fue el lenguaje utilizado para el Desarrollo de SisGEVI. http://es.wikipedia.org/wiki/MySQL http://es.wikipedia.org/wiki/PostgreSQL 37 2.3.2.3. Framework MVC Un Marco de Trabajo o Framework de su traducción al inglés, es una estructura software compuesta de componentes personalizables e intercambiables para el desarrollo de una aplicación. Se puede considerar como una aplicación genérica incompleta y configurable a la que podemos añadirle las últimas piezas para construir una aplicación concreta (Gutiérrez, 2004). Un framework se puede traducir como estructura; en el sentido que nos ocupa un framework sería un marco de trabajo. MVC son las siglas de Modelo-Vista-Controlador un paradigma de programación de aplicaciones que separa en tres niveles el trabajo: por un lado el modelo que hace referencia a las aplicaciones empresariales conocido como la lógica de negocio (por ejemplo el Sistema Gestor de la Base de Datos); la vista hace referencia al aspecto visual de la aplicación con el usuario; el controlador finalmente es la parte que controla las acciones del usuario y las comunica a los dos apartados anteriores (Alvarez, 2015). Para el desarrollo de SisGEVI se utilizó el Framework Laravel en su versión 4.2, debido a su fácil instalación en los distintos ambientes, la separación de la lógica de negocio con la interfaces de usuario y la existencia de una buena documentación para realización de Sistemas eficaces y escalables para futuras actualizaciones. 2.3.2.4. Mapeo de Objeto-Relacional Mapeo de Objeto-Relacional u ORM, de sus siglas en inglés Object-Relational Mapping, es un modelo de programación que consiste en la transformación de las tablas de una base de datos, en una serie de entidades que simplifiquen las tareas básicas de acceso a los datos para el programador (Halpin, 2009). 38 Esto tuvo un gran aporte al momento de desarrollar ya que no se necesitaba generar una conexión directa hacia la base de datos, sino que a través de objetos el acceso a los datos era más rápido y eficiente. En el desarrollo de SisGEVI se utilizó el ORM que trae por defecto Laravel, Eloquent, el cual explicaremos con más detalle en la sección 2.3.2.5. 2.3.2.5. Laravel 4.2 Laravel es un framework de aplicaciones web con la sintaxis expresiva y elegante facilitando las tareas comunes que se utilizan en la mayoría de los proyectos web, como la autenticación, enrutamiento, sesiones, y el almacenamiento en caché. Combina lo mejor de lo que se ha visto en otros frameworks web, incluyendo de otros lenguajes, como Ruby on Rails, ASP.NET MVC y Sinatra. Proporciona potentes herramientas necesarias para grandes aplicaciones robustas. Entre dichas herramientas posee un ORM llamado Eloquent el cual se caracteriza por ser sencillo y fácil de usar al momento de crear y acceder las entidades en la Base de Datos. (Laravel, 2013) Eloquent es una sencilla implementación del patrón Active Record, (Fowler, 2003) que es una interfaz de cierto objeto debe incluir funciones como por ejemplo insertar, actualizar, eliminar y propiedades que correspondan de cierta manera directamente a las columnas de la base de datos asociada. En la Figura 14 se puede apreciar cómo es la arquitectura de las aplicaciones Laravel, la cual tiene una adaptación del patrón de diseño MVC: Figura 14. Arquitectura de Laravel, (Velasquez, 2013) 39 El aporte que dio a SisGEVI el uso de Laravel fue su gran robustez al momento de desarrollo de sistemas web, ya que con el uso correcto de filtros y de enrutamiento hace que este sea más seguro, también el valor agregado que dio a SisGEVI fue su excelente documentación en su página oficial (Laravel, 2013) sirvió de mucho al momento de solventar errores o problemas en la culminación de este Trabajo de Grado. 2.4. Sistema Manejador de Base de Datos. Un Sistema Manejador de Base de Datos, es un sistema computacional cuya finalidad general es almacenar información y permitir a los usuarios recuperar y actualizar esa información con base en peticiones. (Date, 2001) Un sistema manejador de base de datos (SMBD), consiste en una colección de datos interrelacionados y un conjunto de programas para acceder a dichos datos. La colección de datos, normalmente denominada base de datos, contiene información relevante para una empresa. El objetivo principal de un SMBD es proporcionar una forma de almacenar y recuperar la información de una base de datos de manera que sea tanto practica como eficiente (Silberschatz, 2002). Existen diferentes tipos de SMBD para este Trabajo de Grado se utilizó PostgreSQL, debido a requerimientos del MPPTOP, ya que es el SMBD que más utilizan en los sistemas o aplicaciones que tienen en uso, por ser de acceso libre y no propietario, y por su facilidad de uso con lenguajes de programación web. 2.4.1. Sistema Manejador PostgreSQL PostgreSQL es un sistema de gestión de bases de datos objeto-relacional, distribuido bajo licencia BSD y con su código fuente disponible libremente. PostgreSQL utiliza un modelo cliente/servidor y usa multiprocesos en vez de multihilos para garantizar la estabilidad del sistema. (PostgreSQL, 2010) 40 PostgreSQL es un sistema de gestión de bases de datos objeto-relacional. Al ser software libre, el desarrollo de este sistema es dirigido por una comunidad de desarrolladores apoyados por organizaciones comerciales. Entre los sistemas de bases de datos existentes hoy en día, PostgreSQL juega un papel muy importante ya que es un sistema que tiene muchas cualidades que lo hacen ser una muy buena alternativa para instalar sistemas en empresas, universidades y una gran cantidad de negocios. (Uneweb, 2003) PostgreSQL usa el modelo cliente/servidor. Una sesión en PostgreSQL consiste en ejecución de los siguientes procesos: a) El servidor, que maneja archivos de bases de datos, acepta conexiones a las aplicaciones cliente, y realiza acciones en la base de datos. b) El programa servidor de bases de datos se conoce como postmaster, la aplicación cliente, que necesita realizar operaciones en la base de datos. Las aplicaciones cliente pueden ser de la más diversa naturaleza: pueden ser aplicaciones de texto en una consola, aplicaciones gráficas, un servidor web que accede a la base de datos para mostrar una página, o herramientas especializadas de mantenimiento de bases de datos. Además, cuenta con un completo soporte para claves primarias, foráneas, procedimientos, vistas y disparadores. La mayoría de los tipos de datos comunes son incluidos (integer, boolean, varchar, date, entre otros) y también soporta almacenamiento de datos complejos como imágenes, sonidos y videos. Además, PostgreSQL es altamente personalizable ya permite el desarrollo de procedimientos o métodos en diferentes lenguajes de programación. La última versión del producto en el mercado es la versión 9.4.4. (Denzer, 2002) 2.5. Software de Control de Versiones Git El Software de Control de Versiones Git es un software libre y de código abierto que se encarga del control distribuido de versiones y la administración de código fuente. Cada directorio de trabajo en Git es un repositorio completo con toda la historia sobre cada uno de 41 sus archivos y posee plena capacidad de hacer seguimiento de versiones, esto permite recuperar versiones antiguas de los datos, o examinar el historial de cambios de los mismos. No depende de acceso a la red ni de un servidor centralizado. Git puede acceder al repositorio a través de redes, lo que le permite ser usado por personas que se encuentran en distintos computadores, fomentando la colaboración. Entre sus principales características tenemos (Git Book, 2009):  Implementa un versionado de directorios.  Posee un historial de versiones.  Crea un versionado de metadatos.  Efectúa una manipulación consistente de datos Tuvo un gran aporte para SisGEVI, ya que así se mantuvieron versiones del Sistema estables entre desarrollos ya que de ocurrir alguna falla durante las pruebas o en el momento de añadir funcionalidades, permite descargar versiones anteriores del código para observar y determinar cuáles fueron los errores. Para este TEG con el fin de promover la reusabilidad de SisGEVI, este fue desarrollado bajo Licencias de Libre Acceso, siempre y cuando se de crédito a sus autores y sus obras derivadas se publiquen bajo iguales condiciones. 2.6. Licencia Pública General La Licencia Pública General de GNU o más conocida por su nombre en inglés GNU General Public License (o simplemente sus siglas del inglés GNU GPL) es la licencia más ampliamente usada en el mundo del software y garantiza a los usuarios finales (personas, organizaciones, compañías) la libertad de usar, estudiar, compartir (copiar) y modificar el software. Su propósito es declarar que el software cubierto por esta licencia es software libre 42 y protegerlo de intentos de apropiación que restrinjan esas libertades a los usuarios. Puede ser usada por cualquiera, ya que su finalidad es proteger los derechos de los usuarios finales (usar, compartir, estudiar y modificar), y otorgar a los beneficiarios de un programa de ordenador de los derechos de la definición de software libre. (GPL, 2007) Por ser un trabajo desarrollado para un Ente Público del Gobierno Venezolano, se debe implementar un licenciamiento de acceso libre, para SisGEVI se utilizó, debido a que el sistema puede ser reutilizada, modificada y usada para fines no comerciales dentro de otro Ente Estatal. 2.7. Marco Legal En el caso de Venezuela para el año 2015, está en vigencia la Ley InfoGobierno, la cual estandariza y regulariza las tecnologías de información, a fin de que se usen herramientas de software libre en el desarrollo de aplicaciones. 2.7.1. Ley de InfoGobierno De acuerdo a lo contenido en la Ley de InfoGobierno (CONATEL, 2013), promulgada en Gaceta Oficial de la República Bolivariana de Venezuela número 40.274 de fecha 17 de octubre de 2013, para el desarrollo de cualquier sistema debe utilizarse software no propietarios o software libre, es por esta razón que atendiendo a lo expresado en la señalada Ley, el TEG desarrollado se basó en la aplicación de este tipo de software, debido a que se realizó para un ente gubernamental. La referida Ley en el capítulo II, denominado Principios y Bases del Uso de las Tecnologías de la Información, en el art. 34 desarrolla el sustento legal para el uso del conocimiento libre, contiene lo siguiente (CONATEL, 2013): “Artículo 34: El desarrollo, adquisición, implementación y uso de las tecnologías de información por el Poder Público, tiene como base el conocimiento libre. En las actuaciones que se realicen con el uso de las tecnologías de información, sólo empleará programas informáticos en software libre y 43 estándares abiertos para garantizar al Poder Público el control sobre las tecnologías de información empleadas y el acceso de las personas a los servicios prestados. Los programas informáticos que se empleen para la gestión de los servicios públicos prestados por el Poder Popular, a través de las tecnologías de información, deben ser en software libre y con estándares abiertos.”(p.9) Para concluir el capítulo se puede decir que un Sistema Web es un software que no necesita instalación y que se accede a través de un navegador por medio de internet o una intranet. Se basan en la arquitectura cliente/servidor, por un lado el cliente es el navegador a través del cual se visualiza el sistema y por otra parte el servidor es el programa que está constantemente esperando solicitudes por parte del cliente. Se utilizaron para su desarrollo diversas tecnologías web como por ejemplo HTML, CSS, JavaScript, PHP entre otras, debido a su fácil utilización y ya que están apegadas al marco legal del Sistema. Aunado a ello el sistema estará bajo una licencia de software libre para que en un futuro, tanto el código como el Sistema puedan ser usados con libertad sin ningún inconveniente de Copyright. En el siguiente capítulo se explicará la aplicación de AgilUs como metodología de desarrollo de SisGEVI. 44 Capítulo III: Marco Aplicativo En este capítulo se describe la aplicación de la metodología AgilUs para el desarrollo del SisGEVI. Está consta de cuatro (4) fases, las cuales son: Requisitos, Análisis, Prototipaje y Entrega. Las señaladas fases serán detalladas a continuación: 3.1. Fase I: Requisitos En esta fase se aplicaron diversas técnicas de levantamiento de información, que permitieron obtener todo lo necesario para hacer el análisis de requerimientos planteados para el SisGEVI. Las técnicas que fueron empleadas se describen seguidamente; 3.1.1. Entrevistas Esta técnica se aplicó utilizando entrevistas no estructuradas, entre el equipo de desarrollo, el Jefe del Departamento de Seguridad Vial y el Coordinador de la Brigada de Restablecimiento de Vías y Atención de Emergencias, Alberto Forte y la Paramédico Maribel Pérez, siendo el objetivo conocer cómo se llevaba a cabo el proceso de gestión de accidentes viales, lográndose obtener información acerca de la problemática e identificándose todas y cada una de las necesidades existentes. Al ser una entrevista no estructurada las preguntas fueron surgiendo de acuerdo a las respuestas aportadas por los entrevistados. Entre las preguntas más resaltantes se encuentran las siguientes:  ¿Cómo se lleva a cabo el proceso de Gestión de Accidentes Viales?  Describa brevemente cómo se desarrolla el proceso.  ¿Quiénes participan en el proceso?  ¿Cuáles son las actividades de cada involucrado en el proceso?  ¿Qué se quiere lograr con el sistema a desarrollar?  ¿Qué formatos de documentos trabajan actualmente? 45 Como resultado de las entrevistas efectuadas se logró definir el proceso de Gestión de Accidentes Viales, identificar quiénes son los actores del mismo, así como obtener ideas acerca de funcionalidades y opciones que debería contener SisGEVI. Seguidamente se enuncian los resultados de las mencionadas entrevistas, una vez procesadas y analizadas:  Permitir que el Sistema pre-asigne casos a los paramédicos para evitar la pérdida del número otorgado por el Radio Operador.  Alertar si un paciente atendido ha estado involucrado en más de tres (3) accidentes, con la finalidad de notificar al Instituto Nacional de Transporte Terrestre (INTT), organismo que se encargaría de sancionar al ciudadano.  Generar de forma automática el conteo de tipos de accidentes, clasificarlos por género, edad, ubicación física de la lesión, hora de ocurrido, entre otros, para el cálculo de los datos estadísticos que requiere el MPPTTOP.  Digitalización de la planilla de reporte de atención para su aplicación en SisGEVI.  Generar Reportes de Atención y de Novedades en formato PDF  Generar Reportes Estadísticos en formato de hojas de cálculos  Crear una vista que muestre las planillas pre-asignadas por el Radio Operador.  Crear un buscador de Casos o Pacientes.  Crear un usuario que posea acceso libre al Sistema, para aquellos casos donde se requiera un suplente. Siguiendo con la fase de requisitos de AgilUs, se presenta la tormenta de ideas realizada durante la entrevista con la Brigada de Paramédicos. 46 3.1.2. Tormentas de ideas Una tormenta de ideas es una técnica utilizada para crear la mayor cantidad de ideas posibles en grupo sobre un tema en específico (Duarte, 2008). El Objetivo de realizar esta actividad fue de exponer a los funcionarios de la Brigada la situación actual de gestión de accidentes viales, para que luego éstos aportasen ideas que permitieran enriquecer el proceso. En la Figura 15 podemos apreciar los términos más mencionados de dicha tormenta: Figura 15. Tormenta de Ideas Realizada en el MPPTTOP Las ideas más relevantes que surgieron fueron las siguientes:  Automatización de Datos Estadísticos.  Poco trabajo manual.  Notificación de personas con más de 4 accidentes.  Buscador de casos o pacientes.  Digitalización de planilla de reportes.  Generación de reportes en formatos PDF.  Manejo de Errores.  Inactividad por parte del paramédico.  Pre- asignación de Casos. 47  Verificación de Casos asignados y completados. Continuando con las diversas técnicas de levantamiento de información de la fase de requisitos, se expone el sondeo realizado a los usuarios finales del SisGEVI, la cual sirvió como información base para el desarrollo de un sistema completo. 3.1.3. Sondeos El sondeo se realizó mediante la utilización de los formularios provistos por Google Docs Forms (Google, 2006), fue efectuado tomando una muestra de veinticinco (25) personas pertenecientes a la Brigada de Paramédicos del MPPTTOP. La aplicación de esta técnica tuvo como finalidad obtener diversas opiniones relacionadas con un sistema web efectivo para el proceso de gestión de accidentes viales, ésta permitió facilitar la toma de decisiones acerca de los requerimientos desarrollados en el SisGEVI. Se realizaron un total de siete (7) preguntas, que se describen en los siguientes párrafos: La primera pregunta estaba destinada a conocer la opinión que tenían los paramédicos con respecto al proceso de gestión de accidentes viales, esta se formuló de la siguiente forma ¿Cómo catalogaría usted el actual proceso manual de Gestión de Accidentes Viales?, asignándosele un rango de evaluación del uno (1) al cinco (5), donde el uno (1) se define como malo, el dos (2) como regular, el tres (3) bueno, el cuatro (4) muy bueno y el cinco (5) excelente. Los resultados permitieron valorar cuantitativamente el proceso actual. Las respuestas obtenidas se pueden apreciar en la Figura 16. Figura 16. Resultados Pregunta 1. 48 Al analizar las respuestas se pudo observar que el cincuenta y dos (52%) del grupo encuestado, le pareció que el proceso manual es Excelente, manifestando que si se mantiene el proceso igual, pero digitalizando las planillas se puede lograr mejoras en el mismo. Con la segunda pregunta se pretendió conocer que le gustaría a la brigada de los paramédicos que tuviera el sistema, para lo cual se preguntó ¿Qué le gustaría que tuviera el sistema?, se dejó abierta la respuesta para que los usuarios opinaran libremente. Los resultados de las respuestas obtenidas se indican a continuación:  Que todo se automatizado sin libros de novedades  Debe ser un formato parecido o igual al que se llena en físico.  Tener acceso a una página web o sistema en línea. Una vez examinadas estas respuestas, se pudo observar entre los encuestados que preferían la digitalización del proceso, aplicando herramientas de accesos vía web, y que el formato se pareciera al utilizado en el proceso manual, para que el aprendizaje fuese con mayor rapidez. La tercera pregunta se elaboró con la finalidad de saber qué características desearía el usuario que formaran parte del sistema, por lo cual se preguntó: Seleccione las principales características que desearía que tuviese el Sistema, colocando entre las posibles respuestas: confiable, usable, fácil de entender, tolerante a errores, eficiente, práctico, fácil de memorizar y diseño elegante. En la Figura 17 se muestran los resultados. Figura 17. Resultados Pregunta 3. 49 Debido a que los porcentajes que arrojaron las respuestas, fueron enfocados hacia un sistema usable, confiable, práctico y fácil de entender, esto contribuyó a la toma decisiones al momento del desarrollo del sistema. Con respecto a la cuarta pregunta, esta iba enfocada a conocer la opinión de los encuestados acerca de la distribución de los colores que se aplicaría así como el prototipo de interfaz que se usaría en el sistema, los cuales se muestran en la Figura 18. Figura 18. Imagen de Sondeo Para lo cual se preguntó ¿Le parece correcta la distribución de colores?, colocando entre las posibles respuestas. Si estaban de acuerdo, No estaban de acuerdo y pudieran proponer otra combinación. En la Figura 19 se muestran los resultados obtenidos: Figura 19. Resultados Pregunta 4. Analizadas las respuestas se pudo observar, que los colores utilizados y el modelo de interfaz propuesto les agrado a los usuarios, por lo cual el diseño del sistema se hizo acorde a la imagen propuesta. La quinta pregunta, se realizó de la manera siguiente: ¿Le gustaría que todo el proceso de carga de reportes se hiciera a través de un Sistema Web? 50 Entre las posibles respuesta se colocaron: Si, No, Mantenerlo de Forma Manual. Esto con la finalidad de conocer si la brigada de paramédicos estaba de acuerdo con que se realizara un proceso de automatización en el proceso de gestión de accidentes viales. Las respuestas obtenidas se aprecian en la Figura 20. Figura 20. Respuesta Pregunta 5. Al observar las respuestas se pudo constatar que un 92% de los encuestados seleccionaban que el Proceso de Carga de los Reportes fuese a través de un Sistema Web. Con la sexta pregunta se quiso conocer en qué tipo de formato se generarían los reportes, por lo cual se le pregunto lo siguiente: ¿En qué formato le gustaría a Ud. que se generen los Reportes, luego de la carga de la información en el Sistema? Entre las posibles respuestas se colocaron las siguientes PDF, Hoja de cálculo (.ods), Formato de Texto (.odt), Otro. El resultado de estas encuestas se puede apreciar en la Figura 21: Figura 21. Resultados Pregunta 6. La mayoría de los encuestados eligió que los reportes de atención sean en formato PDF, esto con el objeto de brindar seguridad al momento de emitirlos, ya que de generarse el archivo en este formato, no puede ser modificado por terceros. 51 Por último, la séptima pregunta se enfocó hacia conocer las sugerencias que podían aportar los integrantes de la brigada para el desarrollo del sistema a realizar, para lo que se les pregunto: Especifique alguna sugerencia que nos daría para que el proceso de llenado de la planilla se haga más rápido y menos engorroso. Se efectúo un análisis de todas las respuestas obtenidas, y las más destacadas fueron las siguientes:  Listas Desplegable  Sería bueno selecciones simple  Un Sistema Digitalizado Vía web  Que todo en lo posible sea marcado rápido  Como se ven en la planilla manual. Emitidas estas respuestas por parte del grupo de encuestados, se pudo constatar lo que realmente prefieren y necesitan incluir en el sistema, la brigada de paramédicos. Por ende, al momento de desarrollarlo se tomó en cuenta esta información, a fin de brindarle al usuario un sistema con el cual se sienta cómodo y satisfecho. De acuerdo con la fase de requisitos de AgilUs, se presentan los Perfiles de Usuario que interactuaron con el Sistema. 3.1.4. Perfil de usuario Los Perfiles de Usuarios son fundamentales en el desarrollo de un sistema, ya que nos permiten conocer los roles desempeñados por los usuarios en el mismo. En el proceso de gestión de accidentes viales, existen tres (3) tipos de usuario, el rol de Coordinador, de Paramédico y el de Radio Operador, cada uno posee responsabilidades distintas durante el proceso, las cuales son descritas a continuación:  Coordinador: es el encargado de generar los reportes estadísticos y la creación de usuarios. 52  Radio Operador: es el responsable de pre-asignar reportes de atención a los paramédicos desplegados.  Paramédico: es el que realiza la carga de los reportes de atención, en el momento o después de que ocurre un incidente. Para los casos del Radio Operador y del Paramédico, estos roles pueden ser intercambiados, ya que el primero puede ser Paramédico en algún momento, debido a que estando de servicio en la calle puede llegar a atender un incidente y reportar el caso y, el segundo puede llegar a cubrir la inasistencia de un Radio Operador teniendo que cumplir sus funciones.En cuanto al Coordinador, este rol lo desempeñan funcionarios de mayor jerarquía en la Brigada, y son éstos los que se encargan de realizar las estadísticas de los accidentes ocurridos. Siguiendo con la fase de requisitos de AgilUs, se describen los requerimientos funcionales y no funcionales identificados aplicados en el sistema. 3.1.5. Listas de Requerimientos Funcionales y No Funcionales Durante las reuniones efectuadas con los funcionarios de la Brigada, se definieron diversos requisitos funcionales y no funcionales, los cuales fueron considerados al momento del desarrollo de las funcionalidades del sistema. 3.1.5.1. Requerimientos Funcionales Seguidamente, se describirán cada uno de los requerimientos funcionales que formaron parte del sistema, distribuidos según el perfil de los diferentes usuarios: Requerimientos comunes para cada perfil:  Iniciar/Cerrar Sesión: realizará el inicio de la sesión con su correo electrónico y contraseña. 53  Editar Perfil: podrá modificar los datos de su perfil. Requerimientos para el perfil Coordinador:  Búsqueda de Reporte de Atención o Paciente: éstos se buscarán por número de casos o por número de cédula de identidad del paciente atendido.  Generar Reportes Estadísticos: podrá acceder a la generación de reportes estadísticos, donde podrá escoger el rango de tiempo según lo desee, por día, semana, mes, semestre o año.  Editar Usuarios: podrá editar los datos de los usuarios que estén registrados en el sistema.  Crear Usuarios: podrá crear usuarios para los paramédicos a fin de que puedan acceder al sistema. Requerimientos para el perfil Radio Operador:  Pre-Asignar Reporte de Atención: realizará pre-asignación de reportes de atención, concediendo el caso al paramédico que asista a atender el accidente.  Cargar Información en el Libro de Novedades: se encargará de llenar el libro de novedades, el cual está asociado a cada reporte de atención. Requerimientos para el perfil Paramédico:  Cargar y finalizar Reporte de Atención: procederá a cargar los reportes de atención sobre el incidente ocurrido. 3.1.5.2. Requerimientos No Funcionales Los requerimientos No Funcionales se señalan a continuación: 54  Usabilidad: el usuario debe ser capaz de desarrollar tareas rápidamente, una vez que se ha aprendido a usar el sistema. El sistema debe plantear ayudas a los usuarios para apoyarlos cuando deban enfrentar los errores que cometen al usar el sistema.  Disponibilidad: se debe permitir usar el sistema en cualquier momento y cualquier ubicación geográfica con conexión a Internet. Cuenta con un nivel de servicio para los usuarios de siete (7) días por veinticuatro (24) horas, a menos que exista algún posible inconveniente externo al sistema.  Mantenibilidad en el tiempo: con el objetivo de poder realizar los cambios necesarios en el menor tiempo posible a fin de garantizar la disponibilidad del Sistema, es decir, que una vez culminado, no se necesite a una persona verificando constantemente que el sistema funcione correctamente. Ofrecer mantenimiento correctivo y preventivo, para soportar el buen funcionamiento estacionario e incremental, por el aumento en el número de usuarios.  Portabilidad: al sistema se puede acceder independientemente de la plataforma que se esté utilizando, solo debe requerir de la disposición de un navegador Web sin importar el sistema operativo.  Escalabilidad: las funcionalidades son implementadas previniendo futuras mejoras sobre las mismas, de manera que pueden ser incorporadas afectando el código existente de la menor forma posible.  Seguridad: toda la información contenida en el sistema esta resguardada contra accesos no autorizados, mediante mecanismos de autenticación y sesiones que no permitan la fuga de información.  Tolerancia a fallas: en el exacto momento que ocurra una falla, ya sea intencional o no, la aplicación debe ser capaz de responder al usuario y volver al estado que se encontraba al momento anterior de ocurrir la falla. 55 Los requerimientos no funcionales mencionados se aplicaron para cada módulo del sistema, los cuales son una abstracción para los usuarios finales, ya que no deben realizar ninguna tarea específica para cumplir con ellos. Una vez culminada la fase de requisitos se continúa con la Fase de Análisis. 3.2. Fase II: Análisis Se refiere al estudio de la solución desarrollada, en la cual se diseñaron distintos prototipos de interfaz, se especificaron guías de estilo, se realizaron modelos de casos de uso y objetos de dominio, para así puntualizar las funcionalidades que tendrá el producto desarrollado. A continuación se presentarán cada una de estas actividades. 3.2.1. Prototipos de Interfaz Los prototipos de Interfaz, que sirvieron de apoyo para establecer el diseño del Sistema se pueden visualizar en las figuras que seguidamente se muestran. En la Figura 22 se reseñan la interfaz de inicio de sesión en el Sistema, con un encabezado donde se encuentran los logos tanto del Gobierno Bolivariano de Venezuela, como el del Sistema y el de la Brigada de Paramédicos. Figura 22. Interfaz de Login Luego, se encuentra el panel de inicio de sesión, en el cual se requiere el correo electrónico, su contraseña y la selección del tipo de rol que iniciará sesión. También se 56 planteó la colocación de un pie de página o footer, con información adicional del MPPTTOP y un botón de “Acerca de”, el cual brinda la información del equipo de desarrollo. En la Figura 23 se señala el prototipo de interfaz de la página principal, luego de haber iniciado sesión, el cual cuenta con el acceso a las funcionalidades respectivas para su tipo de rol. Figura 23. Interfaz Principal En la Figura 24 se aprecia el prototipo digitalizado del reporte de atención, se buscó mantener una semejanza con planilla original para que el aprendizaje y uso de SisGEVI sea efectivo y ágil: Figura 24. Interfaz de Reporte de Atención Página 1 En la Figura 25 se describe cómo fue planteada la interfaz de lo que será el Reporte de Novedades, que consta de tres (3) campos los cuales serán llenados automáticamente por el sistema y, se refleja el campo de texto de “Especificación de Novedades”, el cual será llenado dependiendo de lo que ocurra en el momento de atender un accidente. 57 Figura 25. Interfaz Reporte de Novedades Una vez mostrado los prototipos de las principales interfaces, se procede a presentar las guías de estilos por las cuales se rige el sistema. 3.2.2. Guías de estilo En la Guía de Estilos aplicada, se tomaron en consideración las características relacionadas con el aspecto de la interfaz de usuario. En la Tabla 1 se identifica este entregable: Tabla 1. Guía de Estilo de SisGEVI Guía de Estilo Logos Logo de la Escuela de Computación Logo de la Universidad Central de Venezuela Logo de la Facultad de Ciencias 58 Logo de SisGEVI Logo del Gobierno Bolivariano de Venezuela Logo de la Brigada de Paramédicos Paleta de Colores Colores Hexadecimal #FFD166 #003265 #337AB7 #FFFFFF Tipografía "Helvetica Neue", Helvetica, Arial, sans-serif; Las imágenes utilizadas en todas las interfaces son las del logo de la República Bolivariana de Venezuela, el de SisGEVI y el de la Brigada de Paramédicos. El diseño del logo de SisGEVI, se realizó centrado en el trabajo que realizan estos funcionarios en las principales autopistas de la Gran Caracas. Consta de una pequeña imagen de una carretera, combinada con las siglas del Sistema y la cruz de atención de emergencias. Todos estos elementos forman una analogía al trabajo que efectúan diariamente los funcionarios de la Brigada de Paramédicos. La paleta de los colores principales de la interfaz serán colores anaranjado, blanco y azul, los cuales se mantendrán en todo el sistema, debido a que representa los colores que identifican la brigada. Los botones principales son siempre azules para no anular el contraste de azul-naranja seleccionado para distintas partes del sistema. La tipografía seleccionada para la aplicación fue Helvetica Neue, cambiando de tamaño solamente para los títulos y subtítulos del sistema. Esta tipografía es del tipo Sans Serif, y fueron utilizados debido a que son letras básicas sin muchos detalles, las cuales son altamente 59 recomendadas para el desarrollo web. Se diseñó una interfaz que fuese lo más simple posible, pero que cumpliera con las funcionalidades descritas anteriormente, se evaluó la posición de los elementos y el tamaño que cada uno debía tener, esto con el fin de no sobrecargar la interfaz y que fuera fácil uso. Procediendo con la Fase de Análisis de AgilUs, se detallaran los casos de uso que permitieron modelar los requerimientos funcionales de SISGEVI. 3.2.3. Modelo de Casos de Uso A través de los diagramas de Casos de Uso (CU) se presentan los requerimientos funcionales del Sistema, se muestra por cada funcionalidad, una breve descripción y la solución planteada. En la Figura 26, se observa el CU correspondiente al nivel 0 de abstracción, en este se modela el sistema a nivel general, con sus respectivos actores. Figura 26. Caso de Uso Nivel 0. Seguidamente se describen los principales actores de la aplicación:  Coordinador: realiza la obtención de los reportes estadísticos de los accidentes, así como también la creación de usuarios nuevos en el Sistema.  Radio Operador: se encarga de la preasignación de los casos de atención, así como también de llenar el libro de novedades por accidente. 60  Paramédico: la función del paramédico es simple, carga cada reporte de atención que le haya sido reasignado. La Figura 27 revela los casos de uso correspondientes al nivel 1 de abstracción, los cuales presentan las principales funcionalidades del sistema y su interacción con los actores. Figura 27. Caso de Uso Nivel 1. En la Figura 28, se señala el caso de uso para el actor Coordinador y sus principales funcionalidades en el Sistema. Figura 28. Caso de Uso Nivel 1, Actor Coordinador. 61 En la Figura 29, se identifica el caso de uso para el actor Radio Operador y sus principales funcionalidades en el Sistema. Figura 29. Caso de Uso Nivel 1, Actor Radio Operador. En la Figura 30, se detallan el caso de uso para el actor Paramédico y sus principales funcionalidades dentro de SisGEVI. Figura 30. Caso de Uso Nivel 1, Actor Paramédico. Una vez presentado el diagrama de caso de uso de cada uno de los actores, se presenta su respectiva especificación, que se refiere a la explicación de cada una de las partes definidas del sistema. Las descripciones de los casos de uso representan todas las posibles interacciones de los actores con el sistema en los eventos enviados o recibidos por estos. En la Tabla 2 se observa la especificación del CU de iniciar sesión. 62 Tabla 2. Especificación CU Iniciar Sesión Caso de uso: CU. 1 Iniciar Sesión. Actor: todos los actores. Precondición: el usuario debe existir en el sistema. Acción: funcionalidad que permite al usuario acceder al sistema, mediante un su correo electrónico y una contraseña. Condición de Éxito: se enviará a una a página donde se le permite al usuario escoger el tipo de rol que tendrá luego se redirecciona a la página principal con las opciones de las funcionalidades respectivas. El Anexo B contiene todas las tablas de especificación de los Casos de Uso elaborados, que describen las funcionalidades de SisGEVI. Presentados los casos de uso del sistema y siguiendo con la Fase de Análisis de AgilUs, se presenta el Diagrama de Objeto de Dominio. 3.2.4. Modelo de Objeto de Dominio El Diagrama de Objetos del Dominio representa los entes que existen en el contexto de SisGEVI y la interacción que existe entre ellos, con la finalidad de alcanzar una mejor comprensión tanto del contexto como de los objetos que existen en el Sistema. En la Figura 31 se tiene como dominio el sistema web SisGEVI, existen tres (3) tipos de usuarios que interactúan con el Sistema: Coordinador, Radio Operador y Paramédico. 63 Figura 31. Diagrama de Objeto de Dominio. Continuando con la Fase de Análisis de AgilUs, se presenta el Diseño Lógico y Físico de la Base De Datos de SisGEVI. 3.2.5. Diseño Lógico y Físico de la Base de Datos El Sistema Manejador de Base de Datos seleccionado para el desarrollo de SisGEVI, fue PostgreSQL, fue necesario construir un conjunto de tablas que conforman la lógica que hace posible el funcionamiento y la persistencia del sistema, las cuales fueron diseñadas para soportar todos los objetivos planteados en el presente TEG. En la Figura 32 se señalan las treinta y cinco (35) tablas que interactúan con el sistema. 64 Figura 32. Tablas de la BD de SisGEVI. Las referidas tablas serán explicadas a continuación: 1. Medicas: se almacenan todas las posibles causas médicas que se reflejan en la planilla en físico. 2. Causas_medicas: se guardan las atenciones que hayan ocurrido debido algún problema médico. 3. Traumas: se almacenan todas las posibles causas de trauma que se reflejan en la planilla en físico. 4. Causas_traumas: se guardan las atenciones que hayan ocurrido debido algún trauma. 5. Evaluaciones: contiene las evaluaciones médicas que se le realicen a los pacientes, como su frecuencia respiratoria, si está consciente o inconsciente y otra información referente a la evaluación. 6. Pieles: se definen las texturas y temperatura de la piel del paciente. 7. Pulsos: se registran las pulsaciones del paciente y el sitio del cuerpo donde se producen. 65 8. Sonidos: se almacenan los sonidos respiratorios predefinidos en la planilla de atención original, los cuales están asociados con la tabla respiratorios. 9. Evaluacion_piel: tabla Relación entre la tabla Evaluaciones y Pieles se registran las evaluaciones médicas y los tipos de piel que sean atendidos. 10. Evaluacion_pulso: tabla Relación entre la tabla Evaluaciones y Pulsos se almacenan las evaluaciones y las mediciones de pulsos del paciente que sean atendidos. 11. Evaluacion_Sonido: tabla Relación entre la tabla Evaluaciones y Sonidos se guardan las evaluaciones médicas y los sonidos respiratorios de los pacientes que sean atendidos. 12. Fuentes: se definen las fuentes de información, desde donde se notificó el incidente. 13. Grupos: contiene los Grupos de Guardias de la Brigada. 14. Historias: se guardan las Historias Médicas levantadas en el momento que ocurre un incidente. 15. Lesiones: contiene las Lesiones que pueda tener un paciente al tener un accidente. 16. Mecanismos: registra todos los posibles casos de atención o mecanismos de lesión que puedan ocurrir en un incidente. 17. Medicamentos: agrupa los medicamentos que puedan ser utilizados por los paramédicos al momento de brindar una atención. 18. migrations: es una tabla creada por defecto por Laravel y almacenan las migraciones realizadas en el sistema, al utilizar el comando Migrate. 66 19. Neurológicos: se almacenan los datos referentes a las reacciones neurológicas de los pacientes atendidos. 20. Novedades: se recopilan los Reportes de Novedades de cada Caso de Atención. 21. Pacientes: se registra los datos asociados a los pacientes que sean atendidos durante el incidente. 22. Paramedicos: agrupa los datos asociados a los paramédicos que pertenecen a la Brigada. 23. Planillas: se almacenan los datos asociados a los Reportes de Atención, esta es la más importante de todo el sistema ya que contiene todo lo necesario para obtener las estadísticas. 24. Procedimientos: se registran los procedimientos que se le fueron aplicados a un paciente durante un servicio de atención. 25. Realizados: se guardan los identificadores de los procedimientos aplicados así como cualquier información adicional. 26. Ubicaciones: se almacena la ubicación o parte del cuerpo donde exista una lesión. 27. Unidades: se agrupan las Unidades que posee la Brigada para brindar atención. 28. Zonas: se registra las Zonas de Atención donde brinda servicio la Brigada. 29. Reacciones: se almacenan los diferentes tipos Reacciones Pupilares que pueden ser encontradas en los pacientes durante un incidente. 30. Reaccion_Neurologico: tabla Relación entre la tabla Reacciones y tabla Neurológicos se almacenan las reacciones encontradas de un paciente durante un incidente. 67 31. Planilla_mecanismo: tabla Relación entre la tabla Planilla y la tabla Mecanismos se almacenan las atenciones que se sean efectuadas en los incidentes. 32. Planilla_realizado: tabla Relación entre la tabla Planillas y la tabla Realizados se guardan los procedimientos médicos efectuados por el funcionario a cada paciente atendido. 33. Planilla_ubicacion: tabla Relación entre la tabla Planillas y la tabla Ubicación se registran las partes y zonas donde el paciente sufre una lesión. 34. Planilla_unidad: tabla Relación entre la tabla Planillas y la tabla Unidad se almacenan las unidades asignadas a cada incidente. 35. Planilla_zona: tabla Relación entre la tabla Planillas y la tabla Zona se almacenan las zonas donde ocurre un incidente. En las Figura 33 se aprecia el Modelo Relacional de SisGEVI. 68 Figura 33. Modelo Relacional de SisGEVI. 69 Una vez presentado el Diseño Lógico y Físico de la Base de Datos, se procede a presentar la Plataforma de Desarrollo con la cual se trabajó en la implementación del Sistema 3.2.6. Plataforma de Desarrollo Las funcionalidades de SisGEVI fueron desarrolladas bajo un enfoque web cliente- servidor, utilizando el patrón de diseño MVC y en un ambiente de desarrollo bajo los sistemas operativos Windows 10 y Debian. El Sistema Manejador de Bases de Datos usado fue PostgreSQL, y se utilizó el manejador de versiones Git usando como alojamiento Bitbucket, realizando diversos respaldos del código, manteniendo estable y funcional en el mencionado repositorio. El lenguaje de desarrollo del lado de servidor del sistema web fue PHP, bajo el Framework Laravel en su versión 4.2. En cuanto a la programación del lado del cliente se utilizó: HTML5, Bootstrap, JavaScript, Ajax, jQuery y jQuery-UI. Por otro lado, se hizo uso de la librería de PHP thujohn/pdf para la generación de los reportes de atención y libros de novedades en PDF, y para las estadísticas se usó una librería de JavaScript llamada excellentexport para su generación en formato de hojas de cálculo. En la Figura 34 se muestra el conjunto de herramientas y tecnologías usadas en el proyecto. Figura 34. Plataforma de Desarrollo. 70 Una vez descritas todas las tecnologías utilizadas en el desarrollo del Sistema, se sigue con el método AgilUs, y se continúa con la Fase de Prototipaje. 3.3. Fase III: Prototipaje 3.3.1. Arquitectura del Sistema SisGEVI se desarrolló bajo una arquitectura Cliente-Servidor de tres capas, siguiendo el patrón Modelo-Vista-Controlador, la cual consistió en mantener por separado la lógica de negocios y la presentación del sistema. Existen tres (3) tipos de perfiles asociados a los usuarios pertenecientes a la Brigada de Paramédicos. Todos ellos se conectan a SisGEVI en la Capa de Presentación, a través de una interfaz gráfica común, por la que se accede mediante una conexión a internet y un navegador web. La capa de presentación se comunica con la capa de negocio, la cual se encuentra en el servidor de la Dirección de Tecnología del MPPTTOP, en donde reside y se ejecuta el sistema, se reciben las peticiones del usuario y se envían las respuestas tras el proceso. La capa de negocios a su vez se comunica tanto con la capa de presentación, para recibir las solicitudes y presentar los resultados, como con la capa de datos, que es donde reside la información y es la encargada de acceder a la misma. Seguidamente en la Figura 35 se identifica la arquitectura de SisGEVI antes expuesta. 71 Figura 35. Arquitectura de SisGEVI 3.3.2. Desarrollo del Sistema Para el desarrollo de SisGEVI se usó la versión del framework Laravel 4.2 del lado del servidor. La razón de esta elección se debe a un requerimiento del MPPTTOP se solicitó que se utilizara un framework de PHP que estuviese entre los disponibles en sus repositorios. En la Figura 36 se detalla el script que realiza la conexión a la BD PostgreSQL del sistema. Figura 36. Configuración de Conexión de BD Luego se definen las migraciones de las tablas de la BD, esto da facilidad de crearlas directamente sin tener que ejecutar a mano ninguna sentencia SQL, en la Figura 37 se puede 72 observar cómo es la estructura del script de una migración en Laravel, se toma como ejemplo la tabla Paramédicos. Figura 37. Ejemplo de Migración, Tabla de Paramédicos. Luego de hacer todos los archivos de migración se ejecuta un comando por consola llamado php artisan migrate, de ejecutarse correctamente se mostrara un mensaje de confirmación, que se puede apreciar en la Figura 38. Figura 38. Ejecución exitosa del comando Migrate Como estándar al utilizar un ORM los nombres de las tablas deben ser en plural para así establecer la relación con los respectivos Modelos. Luego de haber creado todas las tablas de la base de datos, procedemos a crear los Modelos asociados, la tabla con la cual se asocia, definiendo sus relaciones entre los mismos, el nombre de estos archivos debe ser en singular, manteniendo el estándar de ORM. También creamos los controladores asociados a dichos Modelos, para el desarrollo del sistema creamos solamente los que fueron utilizados para el desarrollo de las funcionalidades. En la Figura 39 se puede observar el Modelo asociado a la Tabla Planillas: 73 Figura 39. Modelo de la Tabla Planillas En la Figura 40 se puede apreciar el controlador asociado al modelo anterior. Figura 40. Controlador del Modelo Planilla Luego de tener todos nuestros controladores y modelos creados pasamos a configurar el archivo Routes.php el cual contendrá todas las rutas de acceso del sistema y su controlador asociado, en la Figura 41 se puede apreciar cómo se estructuran: 74 Figura 41. Archivo Rutas de SisGEVI Como primera parte de desarrollo de funcionalidades creamos el controlador de sesiones donde haremos todo lo referente al manejo de sesión en el sistema, validar roles, iniciar sesión, cerrar sesión y recuperar contraseña. En la Figura 42 se puede apreciar un segmento del código donde podemos ver como se efectuó el proceso de iniciar la sesión en el Sistema y redirigirlo a la vista correspondiente dependiendo del rol que haya seleccionado: 75 Figura 42. Parte del Código de Iniciar Sesión. Siguiendo con el desarrollo de SisGEVI, pasamos a crear las vistas del Sistema, utilizando el motor de plantillas Blade de Laravel el cual facilita la creación de código HTML, así como la inclusión de los códigos CSS, JavaScript y JQuery. Se crearon una serie de plantillas que son comunes en las vistas del Sistema, como el encabezado, el pie de página y la plantilla Base haciendo el código reusable y más fácil de leer. En la Figura 43 se observa el código de una de la plantilla base que contiene el header y footer del sistema. Figura 43. Plantilla Base.blade.php 76 En la Figura 44 se puede ver parte del código de la vista para iniciar sesión, donde añadiremos a través de la propiedad extends el Template Base: Figura 44. Vista de la página de login. Debido a que se utilizó el patrón MVC, se manejó la misma estructura de carpetas que tiene Laravel, separando el modelo, vista y controlador en sus respectivas carpetas. Se crearon seis (6) controladores: 1. MainController: controlador principal del sistema es el que gestiona las rutas a las URL principales. 2. SesionController: controlador que permite los accesos al sistema, realizando las operaciones de inicio y cierre de sesión y validaciones de rol de usuario. 3. ParamedicosController: gestiona las acciones CRUD, Crear, Obtener, Actualizar y Borrar (del original en inglés: Create, Read, Update y Delete) del recurso Paramédico. 4. PlanillasController: controla las acciones CRUD, del recurso Planilla de Atención. 5. NovedadesController: realiza las acciones CRUD, del recurso Novedades de Atención. 77 6. ReportesController: se encarga las acciones CRUD, del recurso Reportes, se encarga de obtener las estadísticas. 7. PDFController: se encarga de la Generación de los archivos en Formato PDF Una vez culminado el desarrollo, se procedió a implementar los patrones de interacción que permitió explicar las interfaces que posee SisGEVI 3.3.3. Lista de Comprobación Se aplicó esta técnica a cinco (5) usuarios del sistema, que conforman el grupo de involucrados en el proceso de gestión de accidentes viales, tanto Coordinadores, Radio Operadores y Paramédicos. Esto permitió identificar fallas en el cumplimiento del control y libertad para el usuario. A las cinco (5) personas señaladas a las cuales se les aplicó esta técnica, se les facilitó la interfaz de usuario del Sistema para la realización de las actividades relacionadas con la automatización del proceso. Fue aplicada la siguiente lista de comprobación: Tabla 3. Lista de Comprobación Lista de Comprobación Se cumple No se cumple Reconocer en lugar de recordar. X Usar indicadores visuales. X Flexibilidad en la interfaz de usuario. X Feedback a las acciones del usuario. X Consistencia en apariencia y uso X Evitar palabras coloquiales. X Mostrar al usuario lo que necesita. X 78 Permitir al usuario recuperarse de los errores X Mantener la interfaz simple, sencilla y organizada. X Funciones del sistema claramente visibles. X Permitir al usuario personalizar la IU. X Culminada la fase de Prototipaje se continúa con la siguiente etapa de la metodología, la Fase de Entrega. 3.4. Fase IV: Entrega 3.4.1. Pruebas de Usabilidad Durante esta prueba, se evaluó la usabilidad de SisGEVI, considerando los criterios creados por expertos en IHC, que se describen en la Tabla 4. Tabla 4. Estándares de Usabilidad. (Acosta, 2011) Criterio Descripción Accesibilidad El sitio es visible en cualquier configuración que tenga el cliente. Navegabilidad La información debe ser fácil de encontrar, debe haber consistencia en los elementos de navegación. Lenguaje manejado Debe ser fácil de entender, de acuerdo al tipo de usuario al que este dirigido el Sistema. Conceptos utilizados Deben ser adecuados al usuario al que está dirigida el Sistema. Consistencia En los títulos, cabeceras y etiquetas de links. La familiaridad y el reconocimiento deben permitir a los usuarios asociar ciertos elementos con ciertas funcionalidades. 79 Las pruebas de usabilidad, se le fueron aplicados a veinte (20) usuarios de los tres (3) diferentes roles, tanto Coordinador, Radio Operador y Paramédico, las cuales consistieron en un cuestionario donde se empleó la escala de Likert, ante los cuales el usuario debe mostrar su acuerdo o desacuerdo. Fueron utilizadas cinco (5) alternativas de respuestas para cada enunciado: totalmente de acuerdo, de acuerdo, ni de acuerdo ni en desacuerdo y totalmente desacuerdo. Seguidamente, los resultados fueron recabados y totalizados, calculando el promedio obtenido por cada uno de los criterios. En la Tabla 5 se describen los resultados de la encuesta. Tabla 5. Resultados de Prueba de Usabilidad Planteamiento Resultados Gráfico Los títulos, menús y textos del Sistema son legibles. 4/5 (80%) de los usuarios estuvo totalmente de acuerdo y 1/5 (20%) estuvo de acuerdo Los colores utilizados contribuyen a la percepción adecuada del Sistema 3/5 (60%) de los usuarios estuvo de acuerdo y 2/5 (40%) estuvo ni de acuerdo ni en desacuerdo 80 Los descriptores del Sistema son claros y precisos 2/5 (40%) de los usuarios estuvo totalmente de acuerdo y 2/5 (40%) estuvo de acuerdo y 1/5 (20%) ni de acuerdo ni en desacuerdo Se ofrece una organización que facilita la navegación 3/5 (60%) de los usuarios estuvo de acuerdo, 1/5 (20%) Totalmente de acuerdo y 1/5 (20%) estuvo ni de acuerdo ni en desacuerdo El diseño del Sistema favorece su uso 3/5 (60%) de los usuarios estuvo de acuerdo y 2/5 (40%) Totalmente de acuerdo El Sistema se puede ejecutar de manera intuitiva 3/5 (60%) de los usuarios estuvo de acuerdo y 2/5 (40%) Totalmente de acuerdo Es un Sistema fácil de utilizar 4/5 (80%) de los usuarios estuvo de acuerdo y 1/5 (20%) Totalmente de acuerdo 81 De esta manera, es posible concluir que los resultados de esta evaluación fueron favorables, ya que se estuvo totalmente de acuerdo (5) o de acuerdo (4) con los planteamientos del cuestionario la mayoría de los criterios tomados en cuenta, lo que indica que tanto SisGEVI y las funcionalidades desarrolladas resultan intuitivas y fáciles de usar para los usuarios finales. 3.4.2. Pruebas de Instalación Las pruebas de instalación del Sistema se realizaron directamente en el ambiente de producción, el cual es un servidor perteneciente a la Oficina De Tecnología De Información y Desarrollo Organizacional (OTIDO), del MPPTTOP. El ambiente de producción se encuentra bajo ambiente Debian. Fue instalada en el servidor vía SSH utilizando comandos en la consola del Sistema Operativo. Figura 45. Sistema Ejecutándose en Ambiente del MPPTTOP. Los elementos de ayuda disponibles en el Sistema son útiles 4/5 (80%) de los usuarios estuvo de acuerdo y 1/5 (20%) Totalmente de acuerdo 82 Finalmente, los resultados fueron exitosos, debido a que el Sistema funcionó perfectamente, mientras que los accesos y modificaciones a la base de datos se realizaron de manera satisfactoria. SisGEVI fue desarrollado teniendo siempre un enfoque hacia los usuarios, así como lo establece AgilUs, ya que se mantuvo constante interacción con los mismos, para constatar el cumplimiento de los requerimientos establecidos en la primera fase de la metodología. De igual manera se realizaron los entregables necesarios para cada etapa, dejando así una documentación que permita que el sistema sea escalable y adaptable a los cambios en un futuro. Descrito el código del sistema, la estructura y las pruebas que se realizaron aplicando esta metodología, el siguiente capítulo contiene los resultados finales obtenidos con SisGEVI. 83 Capítulo IV: Resultados En el presente capítulo se detallan los resultados obtenidos luego de la aplicación de la metodología descrita en el capítulo anterior para el desarrollo de SisGEVI. A través del siguiente diagrama de flujo se puede constatar el proceso de registro de los datos de los accidentes viales luego de ser automatizado, se mantiene la misma forma en la que ocurre el proceso manual, con la diferencia que los funcionarios de la Brigada tendrán como facilidad el uso de SisGEVI, para el proceso de registro de reportes de atención y generación de estadísticas. Figura 46. Sistema Ejecutándose en Ambiente del MPPTTOP. SisGEVI se encuentra conformado por tres (3) módulos: módulo Coordinador, Radio Operador y el de Paramédico. El Módulo Coordinador, está integrado por las funcionalidades que son utilizadas por los Paramédicos y Radio Operadores, y las propias de este tipo de usuario, las cuales son: generar estadísticas, búsqueda de casos o de pacientes y la edición de perfiles de los usuarios registrados en SisGEVI. El Módulo de Radio Operador consta de una sección en la que se listan todos los Reportes de Atención que hayan sido asignados por él y por la opción de preasignación de casos, en la que se establecen los Reportes de Atención cuando ocurre un 84 accidente. El Módulo Paramédico consta de una sección para la carga de los distintos Reportes que se le hayan consignados. Seguidamente se describen las principales interfaces del Sistema y el proceso de inicio de sesión.  Página Principal de SisGEVI: se muestra una descripción del sistema e imágenes que identifican las labores de los paramédicos del MPPTTOP como se muestra en la Figura 47: Figura 47. Página Principal de SisGEVI  Encabezado Principal: se ubica en la parte superior, presentándose del lado izquierdo el logo del Gobierno Bolivariano, en la parte central el logo de SisGEVI, y del lado derecho el logo de la Brigada de Paramédicos, tal como se observa en la Figura 48. Figura 48. Cabecera de SisGEVI.  Pie de Página: se ubica en la parte inferior y posee información referente al MPPTTOP, al tipo de Licencia GPL y un botón que nos redirige a la sección de “Acerca De”, la cual contiene información referente al equipo de desarrollo, tal como se muestra en la Figura 49. 85 Figura 49. Pie de Página de SisGEVI.  Licencia de SisGEVI: se publicó bajo licencia GPL, y dicha información está ubicada en la parte central del pie de página.  Botón de ingreso a SisGEVI: permite acceder al formulario que da acceso al sistema y se encuentra ubicado bajo el logo de la brigada de paramédicos, el cual puede observarse en la Figura 50. Figura 50. Botón de Inicio de Sesión en SisGEVI.  Página de Inicio de Sesión: En esta sección se localiza el formulario de inicio de sesión, donde se solicitan los campos obligatorios referidos al Correo Electrónico y Contraseña. Para tener acceso, los paramédicos deben haber sido registrados previamente por el Coordinador, quien se encuentra autorizado para crear cuentas a los miembros de la Brigada. En la Figura 47 se observa dicha sección: Figura 51. Página De Inicio de Sesión de SisGEVI 86  Restablecer contraseña: en caso de olvido de la contraseña, el usuario puede restablecerla desde el enlace “¿Olvidó Su Contraseña?”. De inmediato se desplegara un formulario solicitándole un correo electrónico a donde enviar los pasos para su recuperación, en la Figura 52 se puede ver dicha sección: Figura 52. Restablecer Contraseña de SisGEVI. Luego de ingresar el correo solicitado, en caso de estar registrado en el Sistema, se le notifica al usuario por medio de un mensaje vía correo electrónico para dar inicio al proceso de restablecimiento de contraseña, en caso contrario se mostrará un mensaje de error solicitándole uno valido para recuperar la contraseña. En la Figura 53 se aprecia el momento en que el correo fue validado exitosamente. Figura 53. Caso Éxito de Restablecer Contraseña de SisGEVI. Inmediatamente al aparecer la notificación de correo enviado, se enviará un mensaje con la información necesaria para continuar con el proceso de cambio de contraseña, el cual se puede observar en la Figura 54. 87 Figura 54. Correo de Contraseña de SisGEVI. Continuando con el proceso de restablecimiento de contraseña, el usuario debe ingresar a la dirección que se le envió, la cual lo redirigirá al formulario que requiere la información del correo y el Código de Recuperación que le fue enviado, tal como se puede apreciar en la Figura 55. Figura 55. Formulario de Recuperación de Contraseña de SisGEVI. Si la información suministrada es validada se muestra al usuario un mensaje de éxito y se le solicita que ingrese la nueva contraseña, lo cual se aprecia en la Figura 56. Figura 56. Token Validado de SisGEVI. Si el proceso se ejecuta correctamente, se mostrará un mensaje que indica que la contraseña fue modificada exitosamente, como se aprecia en la Figura 57. 88 Figura 57. Contraseña Cambiada Exitosamente de SisGEVI. Si el usuario recuerda su contraseña y desea acceder a SisGEVI, luego de haber ingresado los datos, y posee privilegios de Coordinador, automáticamente se redirige a la Página Principal, de lo contrario se le solicita al funcionario que indique bajo qué rol se conectara, si es por Radio Operador o Paramédico, en la Figura 58 se puede apreciar dicha sección del sistema: Figura 58. Pantalla de Selección de Rol de SisGEVI Ya seleccionado el rol con el cual inicio sesión, se muestra la página principal del respectivo perfil seleccionado.  Barra de Navegación: esta sección se encuentra presente en todas las páginas de SisGEVI luego de haber iniciado sesión, se identifica en su lado izquierdo la ubicación dentro del Sistema, mediante la técnica de migajas de pan, en el centro se encuentra la fecha y hora, y al lado derecho el nombre del usuario que está conectado, con las opciones disponibles de acuerdo a su rol. En la Figura 59 se muestra la sección descrita. Figura 59. Barra de Navegación de SisGEVI 89 En la parte derecha de la “Barra de Navegación” se ubica el nombre del usuario, que contiene las opciones asociadas a la edición del perfil, cerrar sesión y, en caso de tener privilegios de Coordinador, la edición de los perfiles de usuario de SisGEVI. En la Figura 60 se muestra la sección descrita. Figura 60. Desplegable para Coordinador  Editar Perfil: Al acceder a la opción de editar perfil, se mostrará un formulario con los datos del usuario, que pueden ser editados. En la Figura 61 se aprecia la sección descrita. Figura 61. Editar Usuario de SisGEVI  Editar Usuarios: Si se tienen privilegios de Coordinador se podrá editar el perfil a otros usuarios del sistema, como se aprecia en la Figura 62. Figura 62. Editar Usuarios de SisGEVI 90 Seguidamente se describen los módulos contenidos en SISGEVI, así como las funcionalidades que poseen los mismos.  Módulo Radio Operador: se encuentra dedicado exclusivamente a los Radio Operadores de la Brigada de Paramédicos, quienes son los encargados de asignar los Reportes de Atención a los Paramédicos. En la Figura 63 se muestra la página de ingreso al Módulo, la cual consta de tres (3) funcionalidades, Asignar Caso de Accidente, Completar Reporte de Novedades y Ver Casos Asignados por el Usuario. Figura 63. Pantalla Principal de Radio Operador de SisGEVI Asignar Reporte de Atención: la primera funcionalidad se encuentra en el lado izquierdo de la pantalla principal, al presionar el botón de asignar se despliega una ventana emergente con un formulario a completar para realizar la preasignación del caso, como se muestra en la Figura 64: Figura 64. Ventana Emergente de Preasignación de SisGEVI. 91 Esa ventana consta de siete (7) campos que son obligatorios para la correcta preasignación del Reporte de Atención, se le solicita al Radio Operador que especifique la Fuente de Información del suceso, es decir, por cual medio se notificó la ocurrencia de un accidente (Twitter, Frecuencia de la Policía Nacional, Llamadas a Coordinadores, Llamada a 0800-MTTVIAL, Vía Radio), el Paramédico al cual será asignado el caso, el número de reporte, la unidad asignada y la información necesaria acerca de la ubicación del accidente (zona, altura y sentido). Al hacer clic en el botón de “Asignar Caso”, se le notifica al usuario que fue otorgado correctamente, y si desea crear otro Reporte, como se muestra en la Figura 65. Figura 65. Preasignación Correcta de Caso En paralelo se le enviará un correo electrónico al Paramédico, recordándole que debe realizar el registro del Reporte de Atención así como al Radio Operador para que complete el Reporte de Novedades. Desde esta sección se puede acceder al Reporte de Novedades y realizar la carga de información, funcionalidad que se explicara en el siguiente punto. Completar Reportes de Novedades: al asignar un Reporte de Atención, se genera automáticamente un Reporte de Novedades, que es donde se carga la información adicional que se genere durante un incidente. En la Figura 66 se puede apreciar dicha funcionalidad. 92 Figura 66. Reportes de Novedades de SisGEVI. Al acceder a la opción referida se despliega una ventana emergente con los Reportes de Novedades Cerrados o Abiertos que posea el Radio Operador, en la Figura 67 se muestra esta sección: Figura 67. Reporte de Novedades Abiertos y Cerrados de SisGEVI. Al ingresar a un Reporte de Novedades Abierto, se despliega un formulario, como se aprecia en la Figura 68. 93 Figura 68. Pantalla de Carga de Reporte de Novedades de SisGEVI. Los campos referentes a la ubicación del accidente ya se encuentran cargados automáticamente por el sistema, el campo “Novedades de Caso” permite que el Radio Operador registre información adicional que se suscite mientras el incidente sea atendido, si se necesitó otra unidad, una descripción especifica del suceso u otro acontecimiento asociada al caso. El Radio Operador puede realizar tres (3) acciones mientras está llenando un Reporte de Novedad: a) Generar Caso Asociado: permite al Radio Operador asignar un caso de atención que este asociado al que está en curso, sin tener que salir de esta sección, presionando el botón “Generar Caso”. En la Figura 69 se puede apreciar la ventana emergente que se despliega, contiene los mismos campos que el Formulario de Asignación, con la diferencia que en este se indica el número de Reporte por el que está siendo prelado. 94 Figura 69. Caso Extra de SisGEVI. b) Actualizar Caso: el Reporte de Novedades puede contener múltiple información de lo que haya acontecido durante el incidente, esta se registra en el campo de texto “Novedades del Caso”, las cuales pueden actualizarse tal como se muestra en la Figura 70. Figura 70. Actualización de Reporte de Novedad. c) Cerrar Caso: al concluir el servicio de atención y no existan sucesos que reportar, el Radio Operador procede a cerrar el Reporte de Novedades, al proceder dicho cierre con éxito se muestra lo que se observa en la Figura 71. Figura 71. Reporte Cargado Correctamente Casos Asignados Por Usuario: El Radio Operador que esté conectado podrá verificar cuales Reportes de Atención han sido asignados por él, verificar si se encuentran cargados en 95 sistema, como también los Reportes de Novedades que estén completados, esta información se suministra a través de una tabla que se muestra en la Figura 72 . Figura 72. Verificar Casos Asignados Estos Reportes solo pondrán ser visualizados por el Radio Operador vía Web, mas no exportarlos en formato PDF, esta opción solo está permitida para los Usuarios con Privilegios de Coordinador.  Módulo de Paramédico: permite a los Paramédicos de la Brigada registrar los Reportes de Atención asignados con anterioridad. En la Figura 73 se muestra la página principal, la cual consta de la única opción de este tipo de usuario. Figura 73. Pantalla Principal de Modulo Paramédico de SisGEVI. Si el Paramédico tiene asignados Reportes de Atención, se mostrará el botón “Cargar Reporte”, para que realice el registro de los respectivos casos, tal como se observa en la Figura 74. Figura 74. Botón de Carga de Reporte de SisGEVI 96 En la sección de Registro de Reporte de Atención, se despliega un formulario que se aprecia en la Figura 75, los valores que ya fueron informados durante la preasignación ya aparecerán cargados automáticamente en el mismo. Figura 75. Pantalla de Carga de Reporte de Atención de SisGEVI. Este formulario consta de ocho (8) pestañas, las cuales forman parte de la información generada durante un accidente de tránsito o un procedimiento de atención. Luego de cargar todos los datos referentes al Reporte de Atención, se le muestra al Paramédico, que el registro fue efectuado correctamente como se aprecia en la Figura 76. Figura 76. Reporte De Atención Cargado de SisGEVI Una vez enunciadas las funciones que son realizadas por los Paramédicos como por los Radio Operadores, a continuación se explicaran las efectuadas en el Módulo de Coordinador. 97  Módulo de Coordinador: permite a los Coordinadores de la Brigada, tener acceso total al Sistema, ya que pueden realizar las funcionalidades de los Radio Operadores y Paramédicos, y efectuar las funciones específicas de este tipo de usuario, en la Figura 77 se puede apreciar la pantalla principal de este módulo: Figura 77. Interfaz Principal de Coordinador Las funcionalidades en específico que puede realizar este tipo de usuario son descritas a continuación: Generar Reportes Estadísticos: en esta sección se le muestra al Coordinador los rangos por los cuales se pueden calcular los Reportes Estadísticos, al ingresar se le mostrará una nueva interfaz donde se le solicitará que seleccione el tipo de rango que desea obtener para las estadísticas, como se aprecia en la Figura 78. Figura 78. Creación de Reportes Estadísticos 98 Luego de procesar la información y generar las estadísticas, se muestra una pantalla con el resultado de las mismas, así como un botón para volver a la creación de “Reportes Estadísticos” o si se requiere, para exportarlo en formato .ods. En la Figura 79 se puede observar dicho resultado. Figura 79. Interfaz de Resultado de Estadísticas. Posteriormente al mostrar los datos en cifras de los accidentes en forma de tablas, en la parte inferior de la página se encuentran los gráficos asociados a los datos estadísticos generados, como se aprecia en la Figura 80. Figura 80. Grafica de Resultado de Estadísticas en SisGEVI. Los datos estadísticos pueden ser exportados en formato ods para posteriores análisis de otros entes o de otras áreas del MPPTTOP tal cual se observa en la Figura 81. 99 Figura 81. Estadísticas Exportadas en Formato CSV. Búsqueda de Casos: El Coordinador puede Buscar Reportes de Atención por número de Caso o Cédula de Identidad del Paciente, en la Figura 82 se aprecia la opción de búsqueda. Figura 82. Opción de Búsqueda de SisGEVI En esta sección se apertura una ventana emergente donde se muestra la barra de búsqueda y una lista desplegable con el tipo de filtro (Cédula o Caso), en la Figura 84 se observa un ejemplo donde el Coordinador desea obtener información sobre el Caso # 1. Figura 83. Barra de Búsqueda de SisGEVI El sistema al localizar el caso o paciente buscado, mostrará una notificación que indique el éxito de la búsqueda, así como una tabla con la información de él mismo, que se puede apreciar en la Figura 84. 100 Figura 84. Caso Encontrado En caso de seleccionar ver Reporte de Atención, se redireccionará al caso seleccionado a fin de que el Coordinador pueda observarlo directamente en el Sistema y si lo desea, exportarlo en formato PDF. En la Figura 85 se muestra un Reporte de Atención visto desde SisGEVI. Figura 85. Reporte Atención en SisGEVI En la Figura 86 se puede observar un extracto de la presentación del reporte en formato PDF. 101 Figura 86. Reporte Atención en Formato PDF. Si el Coordinador selecciona ver Reporte de Novedades, se le redireccionará al mismo para que pueda visualizarlo y si lo desea exportarlo a formato PDF. En la Figura 87 se muestra el Reporte visto desde SisGEVI. Figura 87. Reporte de Novedad Visto Vía Web. En la Figura 88 se puede observar un ejemplo de la presentación del Reporte de Novedades en formato PDF. 102 Figura 88. Reporte de Novedad en Formato PDF. Crear Nuevo Usuario: en caso de que el Coordinador requiera registrar un usuario nuevo, podrá hacerlo mediante la opción “Crear Usuario”, que se puede apreciar en la Figura 89: Figura 89. Opción de Creación de Usuario en SisGEVI. Al acceder a esta sección se mostrará un formulario que se puede apreciar en la Figura 90, donde se solicita información sobre el usuario a crear, como el nombre, apellido, cédula, correo electrónico, contraseña, género y el tipo de rol que tendrá en el sistema. 103 Figura 90. Pantalla de Creación de Usuarios en SisGEVI. Luego de llenar la información correctamente, se le notificara que el usuario fue creado exitosamente, como se observa en la Figura 91. Figura 91. Creación Correcta de Paramédico Cargar Usuarios: Esta funcionalidad se creó con la finalidad de que el Coordinador pueda registrar usuarios de forma masiva, accediendo a esta opción a través del botón “Cargar Usuarios”, que se puede apreciar en Figura 92. Figura 92. Opción de Creación de Usuario en SisGEVI. 104 Al ingresar a esta opción se mostrará una pantalla con una breve información de lo que debe realizarse para que el proceso de registro masivo se haga de manera correcta, la cual se puede ver en la Figura 93 Figura 93. Pantalla de Carga de Usuarios en SisGEVI. Simultáneamente se le exhibirá al usuario una imagen de cómo debe ser completado el archivo, y además puede descargar un modelo para realizar esta función. Este archivo se puede apreciar en la Figura 94. Figura 94. Archivo Ejemplo Para Carga de Usuarios. Una vez que SisGEVI haya procesado el archivo de usuarios se le notificará al Coordinador que los Paramédicos registrados en el archivo han sido agregados al sistema para su futura asignación de reportes de atención, tal como se puede observar en la Figura 95 Figura 95. Creación Correcta de Paramédicos. Una vez presentado SisGEVI y sus principales funcionalidades, como cierre del TEG, a continuación se presentan las conclusiones. 105 Conclusiones La Brigada de Paramédicos del MPPTTOP realizaba sus procesos de forma manual y carecía de un sistema que les permitiera el registro de información de los incidentes ocurridos en las autopistas de la Gran Caracas y la generación de datos estadísticos, causando en ocasiones pérdida de información relevante en el registro de los datos en los Reportes de Atención, con el desarrollo del Sistema Web para la Gestión de Emergencias Viales en Autopistas de la Gran Caracas (SisGEVI), contenido en el presente TEG, se alcanzó el objetivo planteado, ya que el producto final cumple con los requerimientos expuestos por los usuarios. SisGEVI contribuyó a la recolección de datos en el sitio de los accidentes, debido a que se pueden efectuar con la utilización de equipos móviles por su diseño responsive. Los procesos indicados en el presente TEG fueron plenamente discutidos con los involucrados en la gestión de accidentes viales, revisados y aprobados por el personal coordinador y los paramédicos de la Brigada. SisGEVI fue desarrollado utilizando tecnologías de desarrollo web de acceso libre. El uso del Framework de PHP, Laravel 4.2, como tecnología del lado del servidor agilizó considerablemente el proceso de desarrollo, debido a que se aprovecharon las diferentes estructuras y métodos predefinidos que posee, los cuales minimizan el tiempo y esfuerzo de codificación. De esta manera, la aplicación de estándares de programación facilitó la obtención de un código legible, proporcionando que el mantenimiento y la evolución de la aplicación sea duradera. Ahora bien, la utilización de la metodología AgilUs permitió que el diseño y la construcción de SisGEVI se realizara en iteraciones, puesto que dio flexibilidad para implementar cada uno de los requerimientos, además garantizó la participación del usuario 106 en todo el proceso, manifestando éstos en las diversas reuniones su conformidad con el desempeño y con los resultados arrojados por SisGEVI. Esta metodología también permitió la implementación de un conjunto de actividades en forma organizada y rápida. Fue posible efectuar las adaptaciones por parte del equipo de desarrollo, atendiendo las necesidades expresadas por el usuario para la implementación del sistema. Las pruebas de usabilidad aplicadas en cada iteración, detectaron errores que se corrigieron de manera inmediata, contando con los aportes de los distintos usuarios del mismo. Este sistema web permite llevar a cabo procesos de gestión de accidentes viales de manera coherente, en vista de que se contribuyó en la reducción de errores cometidos durante el registro de reportes de atención y en la generación de las estadísticas, estas ahora se realizan de forma sistemática . Como consecuencia, la elaboración de este TEG realizó un aporte significativo al MPPTTOP, optimizando el proceso de Gestión de Accidentes Viales, a través de la puesta en desarrollo del SisGEVI, a través de la sistematización y organización de los datos relativos a los incidentes que se producen en las autopistas que conforman la Gran Caracas, permitiendo que las estadísticas generadas sean confiables y se realicen en lapsos de tiempo prudentes. Finalmente, los objetivos planteados para la elaboración de este TEG fueron alcanzados, ya que el SisGEVI está en desarrollo y logró resolver la problemática enunciada por la Brigada de Paramédicos del MPPTTOP. 107 Recomendaciones Para que un sistema sea perdurable, es necesario que se efectúen mejoras continuas que le permita adaptarse a las tecnologías de información vigentes y a las necesidades de los usuarios, por tal razón, a continuación se listan una serie de recomendaciones y/o sugerencias que pudieran ser aplicadas a las bases del SisGEVI: 1) Realizar la aplicación Móvil de SisGEVI, para una mejor portabilidad y rapidez de uso. 2) Ampliar el alcance para su aplicación en más autopistas a nivel nacional 3) Efectuar el debido entrenamiento con los usuarios del sistema, para su correcto uso y rapidez al momento de realizar el trabajo. 4) Mantener actualizada la Base de Datos en el ámbito de Mecanismos de Atención y Lesiones para que las estadísticas sean más exactas y precisas. 5) Implementar funcionalidades de accesibilidad, que permitan la inclusión de los usuarios con discapacidades, como aumentar el tamaño de las fuentes, cambiar el contraste de los colores, entre otros. 108 Referencias Acosta, E. (2011). AgilUs: un método ágil de desarrollo de software que incorpora la usabilidad. Caracas. Recuperado el 20 de Julio de 2015. Tomado de http://www.ciens.ucv.ve:8080/genasig/sites/interaccion-humano- comp/archivos/234_CLEI_Acosta_Paper.pdf Alistapart. (2010). Responsive Web Design. Recuperado el 22 de Julio de 2015. Tomado de http://alistapart.com/article/responsive-web-design Alvarez, A. Introducción Lenguajes Web. Chile: LibrosWeb. Recuperado el 22 de Julio de 2015. Tomado de http://www.desarrolloweb.com/articulos/303.php. 2015. Apache. (2013). Servidor HTTP Apache. Recuperado el 12 de Agosto de 2015. Tomado de http://projects.apache.org/indexes/releases.html Araujo, M. (2008). Tecnologia Web. Lima. Recuperado el 9 de Octubre de 2015. Tomado de www.uneweb.edu.ve/disena-paginas-web-con-el-diplomado-de-tecnologia-web/ Catalani, E. (2007). Arquitectura Modelo vista controlador (MVC). Recuperado el 20 de Agosto de 2015. Tomado de https://exequielc.wordpress.com/2007/08/20/arquitectura- modelovistacontrolador/ CONATEL. (2013). Ley de Infogobierno. Recuperado el 10 de septiembre de 2015. Tomado de http://www.conatel.gob.ve/ley-de-infogobierno/ Date, C. Introducción a los Sistemas de Bases de Datos ( 7 ed.). Prentice Hall; Madrid. 2001 Denzer, P. (23 de Octubre de 2002). Paper Postgresql. Recuperado el 11 de Octubre tomado de 2015. Tomado de http://www.academia.edu/5583702/Postgresexpo 109 Duarte J. (2008). Social Influences in brainstorming groups Recuperado el 12 de diciembre de 2015. Tomado de: http://books.google.co.ve/books?id=KtHj- IDy4ZAC&pg=PA5&dq=osborn+brainstorming&hl=es- 419&sa=X&ei=ooebUe2ML8P00gGxvoDwAw&ved=0CDsQ6AEwAg#v=onepage&q= osborn%20brainstorming&f=false E-ducativa. (2000). E-ducativa. Recuperado el 2 de Septiembre de 2015. Tomado de http://e- ducativ.catedu.es/44700165/aula/archivos/repositorio//1000/1057/html/22_componentes_tc nicos_arquitectura_clienteservidor.html Eguíluz, J. (2008). Introducción a JavaScript. febrero: LibrosWeb. Recuperado el 09 de Octubre de 2015 Escofet, C. (2007). El lenguaje SQL. UOC. Recuperado el 1 de Septiembre de 2015. Tomado de ocw.uoc.edu/computer-science-technology-and...de.../P06_M2109_02149.pdf Formix. (2015). Formix. Recuperado el 1 de Septiembre de 2015. Tomado de https://denev66.wordpress.com/2015/04/14/que-es-el-html/ Fowler, M. (2003). Patterns of Enterprise Application Architecture. Addison-Wesley Professional. Garret, J. (2006). Ajax: A New Approach to Web Applications. Tomado de http://www.adaptivepath.com/ideas/ajax-new-approach-web-applications Git Book. (2009). Git Book. Recuperado el 20 de Agosto de 2015. Tomado de https://git- scm.com/book/es/v1 110 GPL. (2007). GNU General Public License. Recuperado el 19 de Mayo de 2016. Tomado de http://www.gnu.org/licenses/gpl.html Good, R. (2005). Ventajas de las aplicaciones web. Recuperado el 16 de feberero de 2015. Tomado de http://www.pixima.net/aplicaciones-web/ventajas-de-las-aplicaciones-web/ Google. (2006). Formularios Google. Recpuerado el 2 de agosto de 2015. Tomado de https://docs.google.com/templates?type=forms Google. (2006). Hojas de Calculo de Google. Recuperado el 1 de Agosto de 2015. Tomado de docs.google.com/spreadsheets Graham, P. (2001). Sistemas Web. Recuperado el 12 de agosto de 2015 .Tomado de http://www.paulgraham.com/road.html Gutiérrez, J. (2004). Framework. Recuperado el 28 de Julio de 2015. Tomado de http://www.lsi.us.es/~javierj/investigacion_ficheros/Framework.pdf. Halpin, T. Object-Role Modeling version 2 (ORM 2). San Francisco: Morgan Kaufmann Publishers . (2009). Hernández, J. (2014). Análisis y Desarrollo Web. Recuperado el 28 de Julio de 2015. Tomado de https://books.google.co.ve/books?id=nYDVBQAAQBAJ Inmotion Hosting. (2013). What is bootstrap. Recuperado el 5 de Agosto de 2015. Tomado de http://www.inmotionhosting.com/support/edu/joomla-3/using-bootstrap/what-is- bootstrap Instituto Nacional de Transporte Terrestre. (s.f). GLOSARIO DE TÉRMINOS EDUCACIÓN Y SEGURIDAD VÍAL. http://www.pixima.net/aplicaciones-web/ventajas-de-las-aplicaciones-web/ 111 Jaramillo, S. (2008). Programación Avanzada en JAVA (Primera ed.). Diciembre: ELIZCOM S.A.S. Recuperado el 20 de Agosto de 2015 jQuery. (2005). jQuery. Recuperado el 28 de Agosto de 2015. Tomado de jquery.com jQuery-UI. (2005). jQuery UI. Recuperado el 1 de Septiembre de 2015. Tomado de http://jqueryui.com/ Laravel. (2013). Laravel Framework. Recuperado el 19 de Agosto de 2015. Tomado de http://laravel.com/docs/4.2/introduction#laravel-philosophy Martínez, A. (2009). WUEP:Un Proceso de Evaluación de Usabilidad Web Integrado en el Desarrollo de Software Dirigido por Modelos. Recuperado el 30 de Septiembre de 2015. Tomado de https://riunet.upv.es/bitstream/handle/10251/11924/WUEP%20- %20Un%20Proceso%20de%20Evaluacion%20de%20Usabilidad%20Web%20...pdf?seque nce=1 Mateu, C. (2004). Desarrollo de Aplicaciones Web. UOC. Mora. (2002). Programacion de Aplicaciones Web. Alicante: Editorial Club Universitario. Morales, J. (2011). Recuperado el 27 de Julio de 2015. Tomado de http://www.slideshare.net/JeremiasMorales/22-lenguajes-del-lado-cliente-9782560 Mosquera, E. (2009). Sistema de Informacion Web. Sistema de Informacion Web. Pereira. Recuperado el 27 de Julio de 2015 MPPTTOP. (2012). www.mpptop.gob.ve. Recuperado el 20 de Octubre de 2015. Tomado de www.mpptop.gob.ve 112 Mozilla Developer Network. (2005). Recuperado el 28 de Julio de 2015. Tomado de https://developer.mozilla.org/es/docs/Web/CSS Mozilla Developer Network. (2006). HTML5. Recuperado el 15 de Agosto de 2015.Tomado de https://developer.mozilla.org/es/docs/HTML/HTML5 Mozilla Developer Network. (2006). JavaScript. Recuperado el 29 de Agosto de 2015. Tomado de https://developer.mozilla.org/es/docs/Web/JavaScript Navarro, E. (2002). Calidad Gestion Procesos en Tecnologias de Informacion. Recuperado el 11 de Octubre de 2015.Tomado de http://www.gestiopolis.com/calidad-gestion-procesos- tecnologias-informacion/ Ojeda, N. (2012). Guia Completa de CSS3. Autoedicion. PHP. (2001). Manual de PHP. Recuperado el 03 de Julio de 2015. Tomado de http://php.net/manual/es/intro-whatis.php PostgreSQL. (2010). PostgreSQL. Recuperado el 27 de Agosto de 2015. . Tomado de http://www.postgresql.org.es/sobre_postgresql Potencier, F. (2002). Symfony 1.2, la guía definitiva. Recuperado el 25 de Agosto de 2015. Tomado de https://librosweb.es/libro/symfony_1_2/capitulo_2/el_patron_mvc.html PTV Group. ( 2000). vision-traffic.ptvgroup.com. Recuperado el 1 de Septiembre de 2015. Tomado de vision-traffic.ptvgroup.com Puig, J. (2013). CSS3 y Javascript avanzado. UOC. Recuperado el 1 de Septiembre de 2015. Tomado de in3.uoc.edu › Inicio › Investigadores 113 ReviBlog. (2014). ReviBlog jQuery Calendar. Recuperado el 20 de Agosto de 2015. Tomado de http://reviblog.net/category/jquery/ Robini. (2007). Cliente-servidor. Recuperado el 15 de Agosto de 2015. Tomado de http://robiniclienteservidor.weebly.com/ventajas---desventajas.html Salazar, F. (2010). Diseño de un Sistema Basado en Tecnología Web para la Gestión y Control de Proyectos de Inversiones y Servicios Bencar Monagas C.A. Recuperado el 20 de Agosto de 2015. Tomado de https://sites.google.com/a/udo.edu.ve/adsi/tesis- pdf/TesisFaviolaSalazar.pdf?attredirects=0&d=1 Sánchez, C. (2004). ONess: un proyecto open source para el negocio textil mayorista desarrollado con tecnologías open source innovadoras. Recuperado el 20 de Agosto de 2015. Tomado de http://oness.sourceforge.net/proyecto/html/index.html Sevilla, U. (2009). Introducción a las Aplicaciones Web. Recuperado el 1 de Agosto de 2015. Tomado de http://www.lsi.us.es/docencia/get.php?id=3887 SIGEPAS. (2012). Recuperado el 16 de Septiembre de 2015. Tomado de SIGEPAS: http://www.ciens.ucv.ve/sigepas Silberschatz. (2002). Fundamentos de Base de Datos. España: McGrawHill (Cuarta Edicion). SITEL. (2006). Sistema de Informacion Territorial Estatal en Linea. Recuperado el 12 de Agosto de 2015. Tomado de http://sitel.jalisco.gob.mx/accidentes/ Sommerville, I. (2005). Ingeniería del software. Madrid: PEARSON EDUCACIÓN. S.A. 114 Torre, A.(2006). Recuperado el 15 de Julio de 2015. . Tomado de Adelat: http://www.adelat.org/media/docum/nuke_publico/lenguajes_del_lado_servidor_o_cliente. html. Uneweb. (2003). PostgreSQL: SMBD. Recuperado el 10 de Octubre de 2015. Tomado de http://uneweb.edu.ve/postgre-sql-nivel-1/ Vega, J. (2004). HTML5: Presente en el Desarrollo Web. Recuperado el 10 de Octubre de 2015 Velasquez, R. (2013). Laravel 4 desde Cero. Recuperado el 2 de Agosto de 2015. Tomado de http://codehero.co/laravel-4-desde-cero-estructura-del-proyecto/ VIT. (2015). Tienda VIT. Recuperado el 2 de Agosto de 2015. Tomado de http://tienda.vit.gob.ve/cita/login W3. (2005). W3. Recuperado el 13 de Agosto de 2015. Tomado de http://www.w3.org/standards/webdesign/htmlcss W3techs. (2015). Recuperado el 1 de Septiembre de 2015. Tomado de http://w3techs.com/ 115 Anexos 116 Anexo A Glosario de Términos.  Accidente de tránsito: colisión en la que participan al menos un vehículo en movimiento por un camino público o privado y que puede dejar al menos una persona herida o muerta y/o producir daños materiales.  Accidente vial: hecho en el cual se involucra el factor humano, el vehículo y la vía dentro de su ambiente determinado, para producir una colisión o choque que trae como consecuencia daños materiales, lesionados(as) y muertas.  Autopista: vía específicamente diseñada para altas velocidades de operación, con los sentidos de flujo o circulación aislados por medio de un separador central, sin intersecciones de nivel y con control total de accesos.  Arteria vial: vía de una sistema vial urbano con prelación de circulación de transito sobre la demás vías; con excepción de la vía férrea y de las autopistas.  Choque: encuentro violento entre un vehículo en movimiento y un objeto fijo (poste, construcción, árbol, isla, entre otros), también puede impactar con uno o más vehículos estacionados.  Colisión: encuentro violento entre dos o más vehículos en movimiento.  Emergencia: es toda aquella situación que surge de manera inesperada y que implica en mayor o en menor grado, riesgos tanto materiales como humanos poniendo en peligro la seguridad de la persona.  Lesión: daño al organismo causado por su brusca exposición a concentraciones de energía que sobrepasan su margen de tolerancia, o a factores que interfieren con intercambios de energía en el organismo. 117  Lesionado: persona que sufre lesiones como consecuencia de un accidente.  Paramédicos: es un profesional de la salud, de medicina pre hospitalaria, usualmente miembro de un servicio de atención de emergencias, el cual responde y atiende a emergencias médicas y de trauma en el ambiente pre hospitalario siguiendo Protocolos Internacionalmente Revisados y Aceptados  Primeros auxilios: cuidados inmediatos que se prestan a una persona accidentada o enferma antes de que reciba tratamiento administrado por personal con formación médica.  Siniestralidad: accidentes, destrucción fortuita o pérdida que sufren las personas en sí mismas o en las propiedades, por choques, colisiones o sucesos análogos  Víctima: es toda persona que resulte muerta o herida como consecuencia de un accidente. Conceptos extraídos de: Instituto Nacional de Transporte Terrestre. (s.f). GLOSARIO DE TÉRMINOS EDUCACIÓN Y SEGURIDAD VÍAL. 118 Anexo B Casos de Uso y Descripciones de Cada Uno. Caso de Uso Nivel 1 Tabla 1. Descripción de CU Iniciar Sesión. Descripción Caso de uso: CU. 1. Iniciar Sesión. Actor: todos los actores. Precondición: el usuario debe existir en el sistema. Acción: funcionalidad que permite al usuario acceder a la aplicación, mediante un usuario y una contraseña. Condición de Éxito: se enviará al usuario a una página con opciones, de acuerdo al tipo de usuario y rol desempeñado. 119 Tabla 2. Descripción de CU Recuperar Contraseña. Descripción Caso de uso: CU. 2. Recuperar Contraseña Actor: todos los actores. Precondición: el usuario debe existir en la aplicación. Acción: funcionalidad que permite al usuario obtener una nueva contraseña para ingresar al sistema en caso de que haya sido olvidada. Condición de Éxito: se enviará al usuario un correo electrónico indicándole un token para que pueda cambiar su contraseña de acceso al sistema. Caso de Uso Nivel 1 - Actor Coordinador 120 Tabla 3. Descripción de CU Buscar Planilla o Reporte de Novedad por Caso o Paciente. Descripción Caso de uso: CU. 1.1. Buscar Planilla o Reporte de Novedad por Caso o Paciente Actor: Solo Coordinador Precondición: El usuario debe estar conectado en la aplicación y tener privilegios de coordinador. El caso a buscar tiene que estar correctamente cargado en el sistema. Acción: funcionalidad que permite al usuario buscar los pacientes, por número de cedula, o casos por número de casos que estén cargados en el Sistema. Condición de Éxito: se mostrara una tabla con una pequeña información del tipo de búsqueda que fue haya sido seleccionado Tabla 4. Descripción de CU Generar Planilla en PDF. Descripción Caso de uso: CU. 1.1.1. Generar Planilla en PDF Actor: Solo Coordinador Precondición: El usuario debe estar conectado en la aplicación y tener privilegios de coordinador. El caso a buscar tiene que estar correctamente cargado en el sistema. La Planilla de Atención O Reporte de Novedad debe existir en el Sistema. Acción: funcionalidad que permite al usuario generar las planillas de atención o novedades cargadas en sistema en formato PDF. Condición de Éxito: Se mostrara una notificación para que descargue el PDF asociado al reporte o planilla. Tabla 5. Descripción de CU Mostrar Planilla. Descripción Caso de uso: CU. 1.1.2. Mostrar Planilla Actor: Coordinador y Radio Operador 121 Precondición: El usuario debe estar conectado en la aplicación y tener privilegios de coordinador. El caso a buscar tiene que estar correctamente cargado en el sistema. La Planilla de Atención O Reporte de Novedad debe existir en el Sistema. Acción: funcionalidad que permite al usuario ver vía online las planillas de atención o novedades cargadas en sistema, Condición de Éxito: Se Mostrara la planilla de atención o reporte de novedad cargado en el sistema sin posibilidad de editarlo. Tabla 6. Descripción de CU Generar Reportes Estadísticos. Descripción Caso de uso: CU. 1.3. Generar Reportes Estadísticos Actor: Solo Coordinador. Precondición: El usuario debe estar conectado en la aplicación y tener privilegios de coordinador. Acción: funcionalidad que permite al usuario generar reportes estadísticos, por diaria, mensual, semanal, semestral o anual. Condición de Éxito: al ingresar las fechas correctamente se mostrara una interfaz con las estadísticas, y el usuario decide si exportarlo o no a formato Excel. Tabla 7. Descripción de CU Generar Reporte en Excel. Descripción Caso de uso: CU. 1.3.1. Generar Reporte en Excel Actor: Solo Coordinador Precondición: El usuario debe estar conectado en la aplicación y tener privilegios de coordinador. Acción: Funcionalidad que permite al usuario generar el reporte estadístico en formato Excel. Condición de Éxito: Se mostrara una notificación para que descargue el PDF asociado al reporte o planilla. 122 Tabla 8. Descripción de CU Generar Usuarios. Descripción Caso de uso: CU. 1.4. Generar Usuarios Actor: Solo Coordinador Precondición: El usuario debe estar conectado en la aplicación y tener privilegios de coordinador. Acción: Funcionalidad que permite la creación de Paramédicos, radio operadores o coordinadores que interactuaran en el sistema. Condición de Éxito: Se mostrara un formulario para la carga de datos del nuevo usuario. Tabla 9. Descripción de CU Cerrar Sesión. Descripción Caso de uso: CU 1.7 Cerrar Sesión Actor: todos los actores. Precondición: el usuario debe haber iniciado sesión en el sistema. Acción: funcionalidad que permite al usuario finalizar la sesión en el sistema. Condición de Éxito: se finalizará la sesión del usuario. Tabla 10. Descripción de CU Editar Perfiles. Descripción Caso de uso: CU 1.8 Editar Perfiles Actor: Solo Coordinador Precondición: el usuario debe haber iniciado sesión en el sistema. Acción: funcionalidad que permite al coordinador editar los datos de los usuarios registrados en el sistema. 123 Condición de Éxito: Se modificaran los datos que el coordinador actualice o cambie. Tabla 11. Descripción de CU Editar Perfil. Descripción Caso de uso: CU 1.8 Editar Perfiles Actor: Todos los actores Precondición: el usuario debe haber iniciado sesión en el sistema. Acción: funcionalidad que permite al usuario editar sus datos registrados en el sistema. Condición de Éxito: Se modificaran los datos que hayan sido cambiados. Caso de Uso Nivel 1 - Actor Radio Operador Tabla 12. Descripción de CU Asignar Caso. Descripción Caso de uso: CU 1.2 Asignar Caso Actor: solo Radio Operador. Precondición: el usuario debe haber iniciado sesión en el sistema. Acción: funcionalidad que permite al usuario preasignar un caso de atencion a un paramedico en especifico. 124 Condición de Éxito: al ingresar todos los datos del caso, se le notifica al radio operador que ha creado y asignado correctamente. Tabla 13. Descripción de CU Ver Reportes de Atención Asignados. Descripción Caso de uso: CU 1.5 Ver Reportes de Atencion Asignados Actor: solo Radio Operador. Precondición: el usuario debe haber iniciado sesión en el sistema. Acción: funcionalidad que permite al radio operador ver los casos que ha asignado. Condición de Éxito: se muestra una peque;a tabla con los caos que ha asignado el radiooperador Tabla 14. Descripción de CU Cargar Reporte de Novedades. Descripción Caso de uso: CU 1.6 Cargar Reporte de Novedades Actor: Solo Radio Operador. Precondición: el usuario debe haber iniciado sesión en el sistema. Debe estar creado un reporte de atencion en el sistema. Acción: Funcionalidad que le permite al usuario cargar el reporte de novedades en el sistema. Condición de Éxito: se despliega la interfaz con el reporte de novedad asociado al caso de atencion. 125 Caso de Uso Nivel 1 - Actor Paramédico Tabla 15. Descripción de CU Ver Reportes de Atención Asignados. Descripción Caso de uso: CU 1.5 Ver Reportes de Atencion Asignados Actor: todos los actores. Precondición: el usuario debe haber iniciado sesión en el sistema. Acción: funcionalidad que permite al usuario finalizar la sesión en el sistema. Condición de Éxito: se finalizará la sesión del usuario. 126 Anexo C Cuestionario de Usabilidad de SisGEVI y Resultados El presente cuestionario tiene como finalidad conocer su opinión con respecto a la usabilidad de SisGEVI. La cual se refiere a la efectividad, eficiencia y satisfacción con la que el Sistema puede ser comprendido, utilizado y ser atractivo al usuario. Se agradece seleccionar la puntuación que corresponda a su opinión de acuerdo a la siguiente escala: Totalmente de acuerdo De acuerdo Ni de acuerdo ni en desacuerdo En desacuerdo Totalmente en desacuerdo 5 4 3 2 1 Nº Item 5 4 3 2 1 1 Los títulos, menús y textos del Sistema son legibles 2 Los colores utilizados contribuyen a la percepción adecuada del Sistema. 3 Los descriptores del Sistema son claros y precisos 4 Se ofrece una organización que facilita la navegación 5 El diseño del Sistema favorece su uso 6 El Sistema se puede ejecutar de manera intuitiva 7 Es un Sistema fácil de utilizar 8 Los elementos de ayuda disponibles en el Sistema son útiles Encuesta basada en: Martínez, A. F. (01 de Diciembre de 2009). WUEP: Un Proceso de Evaluación de Usabilidad Web Integrado en el Desarrollo de Software Dirigido por Modelos. 127 Anexo D Manual Técnico de SisGEVI Para la gestión de Accidentes Viales. El presente manual tiene el propósito de informar sobre las distintas secciones y funcionalidades del Sistema a nivel de código para el personal de soporte técnico. 1. Instalar SMBD PostgreSQL El primer paso debe ser instalar la versión de PostgreSQL 9.3. Lo cual se puede realizar mediante consola aplicando el siguiente comando: Luego se debe crear una Base de Datos con el nombre de su preferencia, aunque es recomendable para hacer uso de buenas prácticas que la Base de Datos se llame SisGEVI. 2. Instalar Apache, PHP y Laravel 4.2 Para la correcta instalación de Laravel 4.2 se requiere tener:  Servidor Web Apache  PHP >= 5.4  MCrypt PHP Extensión Para la instalación de Apache se ejecuta el siguiente comando: El servidor Apache debe tener la siguiente configuración para el correcto funcionamiento del Sistema: 128 En la configuración anterior, es fundamental tener activo el módulo mod_rewrite en el servidor Apache, ya que es el que permite crear direcciones URL alternativas a las dinámicas generadas por la programación del Sistema Web SisGEVI, de tal modo que sean más legibles y fáciles de recordar. Para la correcta instalación de Laravel, se recomienda seguir los pasos que se encuentran en la página oficial de Laravel, (2013). Laravel 4.2, (http://laravel.com/docs/4.2). 3. Instalar Composer Laravel utiliza Composer para manejar sus dependencias. Primero, descargar una copia del archivo composer.phar. Una vez se tenga el archivo PHAR, se guarda en el directorio local del proyecto o en usr/local/bin para utilizarlo de manera global en el sistema. En Windows, se puede utilizar el instalador para Windows de Composer que se encuentra en (https://getcomposer.org/Composer-Setup.exe). 4. Instalar Laravel Vía Composer Para instalar Laravel utilizando Composer se ejecuta el siguiente comando, colocando el nombre del directorio, en este caso será SisGEVI. http://laravel.com/docs/4.2 129 Luego de ejecutarse el comando, se creara un archivo con la siguiente estructura: Se debe dar permisos de escritura a la carpeta /app/storage/. Esto se puede hacer ejecutando el comando . Cabe recordar que todos los archivos y ficheros deben encontrarse dentro la carpeta de Apache /www. Luego de esto, se toman los archivos del Sistema Web SisGEVI y se sobrescriben los archivos del proyecto Laravel que se ha creado en el paso anterior. 130 Luego en la carpeta app se encuentra el fichero config, el cual permitirá realizar las modificaciones y configurar la Base de Datos como se muestra a continuación. Una vez creada la Base de Datos del sistema y configurado el archivo Database.php se procede a dirigirse a la ruta donde está el proyecto desde la Terminal y ejecutar el comando php artisan migrate: 131 De ejecutarse correctamente el comando, se mostraran las tablas del Sistema creadas correctamente: Este comando crea la estructura completa de la Base de Datos la cual se muestra a continuación 132 133 Para finalizar, se ejecuta el comando php artisan db: seed, el cual llenará automáticamente las tablas que necesitan contener data por defecto en el sistema. Al ejecutarse éste comando correctamente, se mostrará que las tablas Lesiones, Unidades, Grupos, Paramédicos, Zonas, Pacientes, Mecanismos, Fuentes, Sonidos, Procedimientos, Reacciones, Pieles, Traumas y Médicas han sido llenados correctamente. Habiendo completado todos los pasos anteriormente dichos solo debe ingresarse al link provisto por el administrador de red que tenga contenido el Sistema, y se ejecutara Correctamente. Cualquier duda o información contactar a: Humberto Ojeda Correo: humberto.jose.ojeda@gmail.com 134 Anexo E MANUAL DE USUARIO SISGEVI SisGEVI se encuentra conformado por tres (3) módulos: módulo Coordinador, Radio Operador y el de Paramédico. El Módulo Coordinador, está integrado por las funcionalidades que son utilizadas por los Paramédicos y Radio Operadores, y las propias de este tipo de usuario, las cuales son: generar estadísticas, búsqueda de casos o de pacientes y la edición de perfiles de los usuarios registrados en SisGEVI. El Módulo de Radio Operador consta de una sección en la que se listan todos los Reportes de Atención que hayan sido asignados por él y por la opción de preasignación de casos, en la que se establecen los Reportes de Atención cuando ocurre un accidente. El Módulo Paramédico consta de una sección para la carga de los distintos Reportes que se le hayan consignados. Seguidamente se describen las principales interfaces del Sistema y el proceso de inicio de sesión. Página Principal de SisGEVI: se muestra una descripción del sistema e imágenes que identifican las labores de los paramédicos del MPPTTOP como se muestra en la siguiente imagen 135  Encabezado Principal: se ubica en la parte superior, presentándose del lado izquierdo el logo del Gobierno Bolivariano, en la parte central el logo de SisGEVI, y del lado derecho el logo de la Brigada de Paramédicos, tal como se observa en la siguiente imagen.  Pie de Página: se ubica en la parte inferior y posee información referente al MPPTTOP, al tipo de Licencia GPL y un botón que nos redirige a la sección de “Acerca De”, la cual contiene información referente al equipo de desarrollo, tal como se muestra a continuación.  Licencia de SisGEVI: se publicó bajo licencia GPL, y dicha información está ubicada en la parte central del pie de página.  Botón de ingreso a SisGEVI: permite acceder al formulario que da acceso al sistema y se encuentra ubicado bajo el logo de la brigada de paramédicos, el cual puede observarse en la siguiente imagen. 136  Página de Inicio de Sesión: En esta sección se localiza el formulario de inicio de sesión, donde se solicitan los campos obligatorios referidos al Correo Electrónico y Contraseña. Para tener acceso, los paramédicos deben haber sido registrados previamente por el Coordinador, quien se encuentra autorizado para crear cuentas a los miembros de la Brigada. En la siguiente imagen.se observa dicha sección:  Restablecer contraseña: en caso de olvido de la contraseña, el usuario puede restablecerla desde el enlace “¿Olvidó Su Contraseña?”. De inmediato se desplegara un formulario solicitándole un correo electrónico a donde enviar los pasos para su recuperación, en la en la siguiente imagen.se puede ver dicha sección: Luego de ingresar el correo solicitado, en caso de estar registrado en el Sistema, se le notifica al usuario por medio de un mensaje vía correo electrónico para dar inicio al proceso de restablecimiento de contraseña, en caso contrario se mostrará un mensaje de error solicitándole uno valido para recuperar la contraseña. En la siguiente imagen.se aprecia el momento en que el correo fue validado exitosamente. 137 Inmediatamente al aparecer la notificación de correo enviado, se enviará un mensaje con la información necesaria para continuar con el proceso de cambio de contraseña, el cual se puede observar en la siguiente imagen. Continuando con el proceso de restablecimiento de contraseña, el usuario debe ingresar a la dirección que se le envió, la cual lo redirigirá al formulario que requiere la información del correo y el Código de Recuperación que le fue enviado, tal como se puede apreciar en la Figura 9. 138 Si la información suministrada es validada se muestra al usuario un mensaje de éxito y se le solicita que ingrese la nueva contraseña, lo cual se aprecia en la siguiente imagen. Si el proceso se ejecuta correctamente, se mostrará un mensaje que indica que la contraseña fue modificada exitosamente, como se aprecia en la siguiente imagen. Si el usuario recuerda su contraseña y desea acceder a SisGEVI, luego de haber ingresado los datos, y posee privilegios de Coordinador, automáticamente se redirige a la Página Principal, de lo contrario se le solicita al funcionario que indique bajo qué rol se conectara, si es por Radio Operador o Paramédico, en la imagen se puede apreciar dicha sección del sistema: Ya seleccionado el rol con el cual inicio sesión, se muestra la página principal del respectivo perfil seleccionado.  Barra de Navegación: esta sección se encuentra presente en todas las páginas de SisGEVI luego de haber iniciado sesión, se identifica en su lado izquierdo la ubicación dentro del 139 Sistema, mediante la técnica de migajas de pan, en el centro se encuentra la fecha y hora, y al lado derecho el nombre del usuario que está conectado, con las opciones disponibles de acuerdo a su rol. En la siguiente imagen se muestra la sección descrita. En la parte derecha de la “Barra de Navegación” se ubica el nombre del usuario, que contiene las opciones asociadas a la edición del perfil, cerrar sesión y, en caso de tener privilegios de Coordinador, la edición de los perfiles de usuario de SisGEVI. En la siguiente imagen se muestra la sección descrita.  Editar Perfil: Al acceder a la opción de editar perfil, se mostrará un formulario con los datos del usuario, que pueden ser editados. En la imagen se aprecia la sección descrita.  Editar Usuarios: Si se tienen privilegios de Coordinador se podrá editar el perfil a otros usuarios del sistema, como se aprecia en la siguiente imagen. 140 Seguidamente se describen los módulos contenidos en SISGEVI, así como las funcionalidades que poseen los mismos.  Módulo Radio Operador: se encuentra dedicado exclusivamente a los Radio Operadores de la Brigada de Paramédicos, quienes son los encargados de asignar los Reportes de Atención a los Paramédicos. En la imagen siguiente se muestra la página de ingreso al Módulo, la cual consta de tres (3) funcionalidades, Asignar Caso de Accidente, Completar Reporte de Novedades y Ver Casos Asignados por el Usuario. Asignar Reporte de Atención: la primera funcionalidad se encuentra en el lado izquierdo de la pantalla principal, al presionar el botón de asignar se despliega una ventana emergente con un formulario a completar para realizar la preasignación del caso, como se muestra a continuación: 141 Esa ventana consta de siete (7) campos que son obligatorios para la correcta preasignación del Reporte de Atención, se le solicita al Radio Operador que especifique la Fuente de Información del suceso, es decir, por cual medio se notificó la ocurrencia de un accidente (Twitter, Frecuencia de la Policía Nacional, Llamadas a Coordinadores, Llamada a 0800-MTTVIAL, Vía Radio), el Paramédico al cual será asignado el caso, el número de reporte, la unidad asignada y la información necesaria acerca de la ubicación del accidente (zona, altura y sentido). Al hacer clic en el botón de “Asignar Caso”, se le notifica al usuario que fue otorgado correctamente, y si desea crear otro Reporte, como se muestra a continuación: En paralelo se le enviará un correo electrónico al Paramédico, recordándole que debe realizar el registro del Reporte de Atención así como al Radio Operador para que complete el Reporte de Novedades. Desde esta sección se puede acceder al Reporte de Novedades y realizar la carga de información, funcionalidad que se explicara en el siguiente punto. 142 Completar Reportes de Novedades: al asignar un Reporte de Atención, se genera automáticamente un Reporte de Novedades, que es donde se carga la información adicional que se genere durante un incidente. A continuación se puede apreciar dicha funcionalidad. Al acceder a la opción referida se despliega una ventana emergente con los Reportes de Novedades Cerrados o Abiertos que posea el Radio Operador, como se enseña a continuación: Al ingresar a un Reporte de Novedades Abierto, se despliega un formulario, como se aprecia en la imagen siguiente: 143 Los campos referentes a la ubicación del accidente ya se encuentran cargados automáticamente por el sistema, el campo “Novedades de Caso” permite que el Radio Operador registre información adicional que se suscite mientras el incidente sea atendido, si se necesitó otra unidad, una descripción especifica del suceso u otro acontecimiento asociada al caso. El Radio Operador puede realizar tres (3) acciones mientras está llenando un Reporte de Novedad: a) Generar Caso Asociado: permite al Radio Operador asignar un caso de atención que este asociado al que está en curso, sin tener que salir de esta sección, presionando el botón “Generar Caso”. En la imagen se puede apreciar la ventana emergente que se despliega, contiene los mismos campos que el Formulario de Asignación, con la diferencia que en este se indica el número de Reporte por el que está siendo prelado. 144 b) Actualizar Caso: el Reporte de Novedades puede contener múltiple información de lo que haya acontecido durante el incidente, esta se registra en el campo de texto “Novedades del Caso”, las cuales pueden actualizarse tal como se muestra a continuación c) Cerrar Caso: al concluir el servicio de atención y no existan sucesos que reportar, el Radio Operador procede a cerrar el Reporte de Novedades, al proceder dicho cierre con éxito se muestra lo que se observa a continuación: Casos Asignados Por Usuario: El Radio Operador que esté conectado podrá verificar cuales Reportes de Atención han sido asignados por él, verificar si se encuentran cargados en sistema, como también los Reportes de Novedades que estén completados, esta información se suministra a través de una tabla que se muestra a continuación: 145 Estos Reportes solo pondrán ser visualizados por el Radio Operador vía Web, mas no exportarlos en formato PDF, esta opción solo está permitida para los Usuarios con Privilegios de Coordinador.  Módulo de Paramédico: permite a los Paramédicos de la Brigada registrar los Reportes de Atención asignados con anterioridad. En la Figura 73 27 se muestra la página principal, la cual consta de la única opción de este tipo de usuario. Si el Paramédico tiene asignados Reportes de Atención, se mostrará el botón “Cargar Reporte”, para que realice el registro de los respectivos casos, tal como se observa a continuación: En la sección de Registro de Reporte de Atención, se despliega un formulario que se aprecia en la imagen siguiente, los valores que ya fueron informados durante la preasignación ya aparecerán cargados automáticamente en el mismo. 146 Este formulario consta de ocho (8) pestañas, las cuales forman parte de la información generada durante un accidente de tránsito o un procedimiento de atención. Luego de cargar todos los datos referentes al Reporte de Atención, se le muestra al Paramédico, que el registro fue efectuado correctamente como se aprecia a continuación. Una vez enunciadas las funciones que son realizadas por los Paramédicos como por los Radio Operadores, a continuación se explicaran las efectuadas en el Módulo de Coordinador.  Módulo de Coordinador: permite a los Coordinadores de la Brigada, tener acceso total al Sistema, ya que pueden realizar las funcionalidades de los Radio Operadores y Paramédicos, y efectuar las funciones específicas de este tipo de usuario, en la imagen siguiente se puede apreciar la pantalla principal de este módulo: 147 Las funcionalidades en específico que puede realizar este tipo de usuario son descritas a continuación: Generar Reportes Estadísticos: en esta sección se le muestra al Coordinador los rangos por los cuales se pueden calcular los Reportes Estadísticos, al ingresar se le mostrará una nueva interfaz donde se le solicitará que seleccione el tipo de rango que desea obtener para las estadísticas, como se aprecia a continuación: Luego de procesar la información y generar las estadísticas, se muestra una pantalla con el resultado de las mismas, así como un botón para volver a la creación de “Reportes Estadísticos” o si se requiere, para exportarlo en formato .ods. En la Figura 79 33 se puede observar dicho resultado. 148 Posteriormente al mostrar los datos en cifras de los accidentes en forma de tablas, en la parte inferior de la página se encuentran los gráficos asociados a dicha data, como se aprecia a continuación: Los datos estadísticos pueden ser exportados en formato ods para posteriores análisis de otros entes o de otras áreas del MPPTTOP tal cual se observa a continuación: 149 Búsqueda de Casos: El Coordinador puede Buscar Reportes de Atención por número de Caso o Cédula de Identidad del Paciente, en la siguiente imagen se aprecia la opción de búsqueda. En esta sección se apertura una ventana emergente donde se muestra la barra de búsqueda y una lista desplegable con el tipo de filtro (Cédula o Caso), en la imagen se observa un ejemplo donde el Coordinador desea obtener información sobre el Caso # 1. El sistema al localizar el caso o paciente buscado, mostrará una notificación que indique el éxito de la búsqueda, así como una tabla con la información de él mismo, que se puede apreciar en la imagen: 150 En caso de seleccionar ver Reporte de Atención, se redireccionará al caso seleccionado a fin de que el Coordinador pueda observarlo directamente en el Sistema y si lo desea, exportarlo en formato PDF. En la imagen siguiente se muestra un Reporte de Atención visto desde SisGEVI. En la imagen se puede observar un extracto de la presentación del reporte en formato PDF. 151 Si el Coordinador selecciona ver Reporte de Novedades, se le redireccionará al mismo para que pueda visualizarlo y si lo desea exportarlo a formato PDF. En la imagen siguiente se muestra el Reporte visto desde SisGEVI. A continuación se puede observar un ejemplo de la presentación del Reporte de Novedades en formato PDF. Crear Nuevo Usuario: en caso de que el Coordinador requiera registrar un usuario nuevo, podrá hacerlo mediante la opción “Crear Usuario”, que se puede apreciar a continuación: 152 Al acceder a esta sección se mostrará un formulario que se puede apreciar a continuación, donde se solicita información sobre el usuario a crear, como el nombre, apellido, cédula, correo electrónico, contraseña, género y el tipo de rol que tendrá en el sistema. Luego de llenar la información correctamente, se le notificara que el usuario fue creado exitosamente, como se observa en la Figura 45. 153 Cargar Usuarios: Esta funcionalidad se creó con la finalidad de que el Coordinador pueda registrar usuarios de forma masiva, accediendo a esta opción a través del botón “Cargar Usuarios”, que se puede apreciar a continuación: Al ingresar a esta opción se mostrará una pantalla con una breve información de lo que debe realizarse para que el proceso de registro masivo se haga de manera correcta, la cual se puede ver a continuación: Simultáneamente se le exhibirá al usuario una imagen de cómo debe ser completado el archivo, y además puede descargar un modelo para realizar esta función. Este archivo se puede apreciar a continuación: 154 Una vez que SisGEVI haya procesado el archivo de usuarios se le notificará al Coordinador que los Paramédicos registrados en el archivo han sido agregados al sistema para su futura asignación de reportes de atención, como se aprecia en a continuación.