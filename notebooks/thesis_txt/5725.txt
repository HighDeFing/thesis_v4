Universidad Central de Venezuela Facultad de Ciencias Escuela de Computación Implantación de una Plataforma de Software Colaborativo que Permita Integrar Servicios Ofertados por la Facultad de Ciencias Trabajo Especial de Grado presentado ante la ilustre Universidad Central de Venezuela, por los bachilleres: Autor: Jessica González A. - C.I. 18.030.942 Autor: Carlos Camacho G. - C.I. 17.642.467 Para optar por el t́ıtulo de Licenciado en Computación Tutor Académico: Robinson Rivas Caracas, Febrero, 2009 2 Agradecimientos Este gran logro se lo agradezco en primer lugar a mi familia, por estar siempre a mi lado en las buenas y en las malas y por recodarme siempre de donde vengo y hacia donde quiero ir. Quiero agradecer especialmente a mis padres Maŕıa y Alexis por acompañarme durante todas las experiencias de mi vida brindándome todo los consejos, sabiduŕıa y el amor que he necesitado, le agradezco a mis hermanos por ser tan especiales, a mi t́ıa Paqui que siempre me ha tratado como una hija y eso ha significado mucho para mi, siempre has sido un ejemplo a seguir, a mis abuelos Basilio, Cita y Antonieta por simplemente ser ángeles en la tierra que siempre iluminan mi camino y a mi abuelo Octavio que es mi ángel en el cielo y mi protección. Le quiero agradecer a todas las personas que estuvieron pendientes de que este trabajo culminara exitosamente y que en todo momento estuvieron a la orden para ayudarnos y guiarnos, especialmente a los profesores Rafael Angulo, David Pérez, Maŕıa E. Villapol y Daniel Villavicencio. Gracias a todos mis compañeros de clases y del Centro de Computación, por ser tan especiales y llenar mis d́ıas de buenos momentos, gracias a mis grandes amigos Francis y Daniel por siempre estar pendientes de mi y especialmente gracias a Carlos Camacho mi mejor amigo, compañero de clases, de trabajo y de vida, gracias por estar siempre para mi y por apoyarme incondicionalmente. Por ultimo y no menos importante muchas gracias a nuestro tutor el profesor Robinson Rivas por darnos la oportunidad de trabajar junto a el en este proyecto, gracias por todo el apoyo que nos dio. Jessica Gonzalez. Son muchas las personas a las que me gustaŕıa agradecer por este triunfo, el lograr culminar esta etapa de mi vida que representa un gran salto en mi formación integral, porque siento porque no solo he crecido como profesional, sino también como persona. GRACIAS!. A mis padres, hermanas y familiares por haberme apoyado y acompañado a lo largo de estos cinco años de trabajo. A todos los profesores y compañeros de estudio que estuvieron alĺı cuando los necesite. En especial a los profesores Rafael Angulo, Daniel Villavicencio, David Pérez, Karima Velásquez y Maria Elena Villapol por brindarme su amistad y apoyo en todo momento. A nuestro tutor, el profesor Robinson Rivas que aunque con mucho trabajo y esfuerzo, logramos alinearnos y converger con un trabajo de grado que nos permitirá colaborar con el desarrollo tecnológico de la Facultad. A Jessica por acompañarme, ayudarme y estar conmigo durante todo este tiempo. Carlos Camacho. 2 Índice general 1. Introducción 11 1.1. Antecedentes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 12 2. Propuesta 16 2.1. Justificación . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 16 2.2. Problema . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 17 2.3. Objetivo general . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 18 2.4. Objetivos espećıficos . . . . . . . . . . . . . . . . . . . . . . . . . . . 18 2.5. Alcance . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 19 3. Marco Teórico 20 3.1. Tecnoloǵıas de información y comunicación . . . . . . . . . . . . . . . 20 3.1.1. Caracteŕısticas de las TICS . . . . . . . . . . . . . . . . . . . 20 3.1.2. Internet . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 21 3.1.3. World Wide Web . . . . . . . . . . . . . . . . . . . . . . . . . 21 3.1.4. HTML . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 22 3.1.5. HTTP . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 23 3.1.6. Web 2.0 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 25 3.2. Sistemas colaborativos . . . . . . . . . . . . . . . . . . . . . . . . . . 29 3.2.1. Aplicaciones para promover el trabajo en equipo . . . . . . . . 29 3.2.2. Aplicaciones de sistemas colaborativos . . . . . . . . . . . . . 30 3.2.3. Intranets . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 30 3.2.4. De Sistemas Colaborativos a Intranets . . . . . . . . . . . . . 31 3.2.5. Funciones y aplicaciones de sistemas colaborativos . . . . . . . 32 3.2.6. Tipos de aplicaciones colaborativas . . . . . . . . . . . . . . . 33 3.2.7. Clasificación de los sistemas colaborativos . . . . . . . . . . . 34 3.2.8. Servicio de correo electrónico . . . . . . . . . . . . . . . . . . 35 3.3. Group-Office . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 38 3 3.3.1. Requerimientos del sistema . . . . . . . . . . . . . . . . . . . . 38 3.3.2. Usuario final . . . . . . . . . . . . . . . . . . . . . . . . . . . . 39 3.3.3. Módulo de correo electrónico . . . . . . . . . . . . . . . . . . . 39 3.3.4. Módulo de resumen de contenido . . . . . . . . . . . . . . . . 41 3.3.5. Módulo de calendario . . . . . . . . . . . . . . . . . . . . . . . 41 3.3.6. Módulo de tareas . . . . . . . . . . . . . . . . . . . . . . . . . 43 3.3.7. Módulo de archivos . . . . . . . . . . . . . . . . . . . . . . . . 44 3.3.8. Administrador . . . . . . . . . . . . . . . . . . . . . . . . . . . 46 3.3.9. Desarrollador . . . . . . . . . . . . . . . . . . . . . . . . . . . 46 3.3.10. Situación actual . . . . . . . . . . . . . . . . . . . . . . . . . . 46 3.4. Programación Extrema . . . . . . . . . . . . . . . . . . . . . . . . . . 47 3.4.1. Valores y principios de la programación extrema . . . . . . . . 48 3.4.2. Prácticas de la programación extrema . . . . . . . . . . . . . . 49 4. Metodoloǵıa de Desarrollo 51 4.1. Análisis de Requerimientos y Diagnóstico . . . . . . . . . . . . . . . . 51 4.1.1. Requerimientos Generales . . . . . . . . . . . . . . . . . . . . 51 4.1.2. Requerimientos Funcionales . . . . . . . . . . . . . . . . . . . 52 4.1.3. Requerimientos No Funcionales . . . . . . . . . . . . . . . . . 53 4.2. Metáfora del Sistema . . . . . . . . . . . . . . . . . . . . . . . . . . . 53 4.3. Iteraciones . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 57 4.4. Actividades . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 57 4.5. Desarrollo . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 59 4.5.1. Iteración 0 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 59 4.5.2. Iteración 1 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 63 4.5.3. Iteración 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 68 4.5.4. Iteración 3 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 70 4.5.5. Iteración 4 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 74 4.5.6. Iteración 5 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 82 4.5.7. Iteración 6 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 85 4.5.8. Iteración 7 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 90 4.5.9. Iteración 8 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 96 4.5.10. Iteración 9 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 97 5. Conclusión 102 5.1. Conclusiones . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 102 5.2. Contribuciones . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 103 5.3. Recomendaciones . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 103 4 5.4. Trabajos Futuros . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 104 Anexos 104 A. Archivos de configuración 105 A.1. Archivo de configuración del módulo deflate de Apache . . . . . . . . 105 A.2. Archivo de configuración del módulo disk-cache de Apache . . . . . . 105 A.3. Archivo principal de configuración de la intranet . . . . . . . . . . . . 106 5 Índice de figuras 1.1. Vista cliente de correo squirrelmail. . . . . . . . . . . . . . . . . . . . 13 1.2. Vista del sistema de reservación de salas. . . . . . . . . . . . . . . . . 14 1.3. Vista del sistema de soporte . . . . . . . . . . . . . . . . . . . . . . . 14 1.4. Modo de trabajo actual. . . . . . . . . . . . . . . . . . . . . . . . . . 15 3.1. Funcionamiento de AJAX. . . . . . . . . . . . . . . . . . . . . . . . . 27 3.2. Evolución de los sistemas colaborativos . . . . . . . . . . . . . . . . . 32 3.3. Clasificación de los sistemas colaborativos . . . . . . . . . . . . . . . 34 3.4. Ejemplo de cliente de correo . . . . . . . . . . . . . . . . . . . . . . . 35 3.5. Vista del módulo de correo de Group-Office . . . . . . . . . . . . . . 40 3.6. Vista de la interfaz de composición de mensajes . . . . . . . . . . . . 41 3.7. Vista del resumen de los módulos . . . . . . . . . . . . . . . . . . . . 42 3.8. Vista de creación de citas . . . . . . . . . . . . . . . . . . . . . . . . 43 3.9. Vista de resumen de citas . . . . . . . . . . . . . . . . . . . . . . . . 44 3.10. Vista del módulo de archivos . . . . . . . . . . . . . . . . . . . . . . . 45 4.1. Vista del asistente de instalación I . . . . . . . . . . . . . . . . . . . . 61 4.2. Vista del asistente de instalación II . . . . . . . . . . . . . . . . . . . 62 4.3. Vista del asistente de instalación III . . . . . . . . . . . . . . . . . . . 63 4.4. Vista del módulo de cambio de contraseña. . . . . . . . . . . . . . . . 64 4.5. Vista de olvido de clave de acceso. . . . . . . . . . . . . . . . . . . . . 65 4.6. Vista del módulo de reenvio de contraseñas. . . . . . . . . . . . . . . 65 4.7. Vista del módulo de directorio. . . . . . . . . . . . . . . . . . . . . . 70 4.8. Casos de uso sistema de soporte. . . . . . . . . . . . . . . . . . . . . 73 4.9. Vista del módulo de soporte técnico . . . . . . . . . . . . . . . . . . . 74 4.10. Casos de uso sistema de soporte 0. . . . . . . . . . . . . . . . . . . . 75 4.11. Casos de uso sistema de soporte 1. . . . . . . . . . . . . . . . . . . . 76 4.12. Vista página de integración . . . . . . . . . . . . . . . . . . . . . . . 81 4.13. Vista sistema de salas . . . . . . . . . . . . . . . . . . . . . . . . . . 85 6 4.14. Vista estilo AjaxIM . . . . . . . . . . . . . . . . . . . . . . . . . . . . 87 4.15. Vista estilo del cliente de mensajeria Ciensnet . . . . . . . . . . . . . 88 4.16. Vista estilo ventana de conversacion AjaxIM . . . . . . . . . . . . . . 89 4.17. Vista estilo ventana de conversacion Ciensnet . . . . . . . . . . . . . 89 4.18. Calificación del sitio Ciensnet usando YSlow . . . . . . . . . . . . . . 95 4.19. Gráfico tamaño del sitio . . . . . . . . . . . . . . . . . . . . . . . . . 96 4.20. Vista de interfaz para agregar portlets . . . . . . . . . . . . . . . . . 100 4.21. Vista portlet de visualización de foros . . . . . . . . . . . . . . . . . . 100 4.22. Vista módulo de foros . . . . . . . . . . . . . . . . . . . . . . . . . . 101 7 Índice de cuadros 3.1. Funciones de los sistemas colaborativos . . . . . . . . . . . . . . . . . 33 3.2. Tipos de sistemas colaborativos . . . . . . . . . . . . . . . . . . . . . 33 3.3. Requerimientos de Group-Office . . . . . . . . . . . . . . . . . . . . . 39 4.1. Planificación de las iteraciones I . . . . . . . . . . . . . . . . . . . . . 54 4.2. Planificación de las iteraciones II . . . . . . . . . . . . . . . . . . . . 55 4.3. Planificación de las iteraciones III . . . . . . . . . . . . . . . . . . . . 56 4.4. Planificación de las iteraciones IV . . . . . . . . . . . . . . . . . . . . 57 8 Resumen Hoy en d́ıa, el uso de tecnoloǵıas de información y comunicación para el aceleramiento del desempeño de los flujos de trabajo de las pequeñas, medianas y grandes empresas ha tenido un gran auge. Esto se debe a las distintas tecnoloǵıas que permiten integrar tanto a los usuarios como los procesos de negocios asociados a cada uno de ellos, en una plataforma homogénea que brinde la capacidad de facilitar la comunicación y el acceso a la información para todos los usuarios del sistema dentro de un contexto privado, interno o local a la empresa. Estas plataformas se conocen como sistemas colaborativos, redes internas o Intranets, que son programas de aplicación que integran servicios como correo, calendarios, acceso a bases de datos, programación de tareas, etc. No están limitados sólo a estas, y alĺı es donde recae la fuerza o robustez de las aplicaciones para cumplir las demandas de las empresas y de esa manera convertirse en un recurso de vital importancia para el correcto e ı́ntegro intercambio de información entre los distintos procesos de negocios dentro de la empresa. Este trabajo se basa en el análisis, diseño, desarrollo e implantación de una plataforma de software colaborativo que permita integrar algunos servicios administrativos de la Facultad de Ciencias de la Universidad Central de Venezuela. Esta plataforma estará compuesta por un conjunto de módulos base, los cuales permitirán realizar un conjunto de operaciones básicas dentro del entorno del sistema colaborativo. Los módulos que contendrá por defecto son: Módulo de correo electrónico: Permite acceder al servicio de correo electrónico v́ıa protocolo IMAP. Módulo de calendario: Permitirá crear citas y recordatorios dado un calendario por usuario, también compartir eventos entre usuarios, este módulo es compatible con el protocolo de intercambio de calendarios iCalendar. Módulo de actividades: Este módulo permitirá crear actividades, recordatorios y notificaciones para cada usuario del sistema, también es compatible con el protocolo iCalendar. Módulo de directorio: En este módulo el usuario podrá tener asociado una agenda de contactos, en el que podrá almacenar direcciones de correo electrónico, direcciones, teléfonos, entre otros, y adicionalmente existirá un directorio con la información de contacto de todo el personal administrativo y docente de la Facultad. Módulo de intercambio de archivos: Este permitirá a los usuarios, almacenar dentro de la plataforma, archivos de uso personal y compartirlos con otros usuarios del sistema, también al hacer uso del servicio de correo electrónico se podrán adjuntar éstos directamente desde el cliente de correo sin necesidad de tenerlos localmente en el computador. Adicionalmente se desarrollaron e integraron un conjunto de módulos a la plataforma, para ofrecer servicios propios de la Facultad, estos módulos son: Módulo de soporte técnico: Permitirá administrar y gestionar todas las solicitudes de soporte técnico recibidas por el departamento de soporte técnico del Centro de Computación de la Facultad de Ciencias, este módulo fue desarrollado por completo para la plataforma. Módulo de reservación de salas: Este módulo permitirá gestionar las salas o aulas interactivas de cualquier dependencia, esta aplicación ya exist́ıa y se procedió a integrarla a la plataforma. Módulo de mensajeŕıa instantánea: Permitirá mantener en contacto a todos los usuarios del sistema mediante una aplicación que ofrecerá salas de Chats y conversaciones entre usuarios directamente. Esta es una aplicación que tiene como nombre AjaxIM y fue desarrollada por Unwieldy Studios 1, la aplicación está basada en estándares de software libre y permite su estudio, mejoramiento, cambio y distribución. Módulo de foros: Este módulo permitirá dar soporte a discusiones u opiniones en ĺınea, en base a temas de cualquier indole. También es una aplicación desarrollada por un tercero, la marca asociada a esta aplicación, es la popular phpBB, también es un sistema desarrollado con estándares de software libre. 1http://www.unwieldy.net/ Caṕıtulo 1 Introducción La rápida evolución del desarrollo de aplicaciones de usuario final, ha permitido que pueda automatizarse prácticamente cualquier tarea, estas tareas pueden ser desarrolladas en la mayoŕıa de los casos de manera independiente una de la otra, pero son siempre utilizadas por un conjunto finito de usuarios, los cuales pueden hacer uso de una o más de una aplicación en un instante de tiempo determinado. Estos usuarios necesitan comunicarse, intercambiar información y a la vez tener acceso a dichas aplicaciones de manera tal que puedan hacerlo a través de una interfaz común a todas. De este modo surgen los mecanismos para normar la integración de las aplicaciones descritas anteriormente, que es el desarrollo e implantación de una plataforma de software colaborativo que permita integrar algunos de los servicios administrativos prestados por el Centro de Computación de la Facultad de Ciencias. El objetivo primordial de dicha plataforma o aplicación es permitir el acceso centralizado a un conjunto de servicios propios de la Facultad de Ciencias de la Universidad Central de Venezuela, como lo son: La solicitud y administración de los soportes técnicos, el acceso al sistema de reservación de salas, el acceso a un cliente de mensajeŕıa instantánea y la integración con un sistema de foros que permita mantener hilos de discusión entre los usuarios de la intranet, adicionalmente todas las otras funcionalidades que la plataforma proporciona por defecto. 11 1.1. Antecedentes Debido a la gran cantidad de información que es manejada por los distintos departamentos de la Facultad de Ciencias, surge la necesidad de automatizar ciertos procesos administrativos sin importar de qué ı́ndole sean (Trámites administrativos o académicos). Estos sistemas, generalmente utilizan información común entre si, pero al momento de ser desarrollados no se tomó en cuenta la información común entre ellos, trayendo como consecuencia la redundancia de datos en los sistemas de información. Esta redundancia trae como consecuencia que se generen inconsistencias, ya que depende de las personas que mantienen estos sistemas, mantenerla sincronizada. Por lo tanto, surge la necesidad de un sistema que permita normar y estandarizar el acceso a la información por parte de las distintas aplicaciones; implantando una metodoloǵıa de trabajo acorde a los procesos que se utilizan en los sistemas informáticos de la Facultad de Ciencias. Los antecedentes inmediatos a implementaciones de sistemas utilizados por el Centro de Computación, cuyas funcionalidades van a ser integradas o desarrolladas para la plataforma se describen a continuación: Cliente de correo electrónico: SquirrelMail 1, es un cliente de correo electrónico web, desarrollado por Nathan y Luke Enresman, utilizando el lenguaje de programación PHP. SquirrelMail sigue el standard HTML 4.0 para su presentación, haciéndolo compatible con la mayoŕıa de navegadores web. SquirrelMail está diseñado para trabajar con plugins, lo cual hace que la aplicación sea ampliamente extensible. Esta licenciado bajo la GNU General Public License2. 1http://squirrelmail.org/ 2Licencia creada por la Free Software Foundation, está orientada principalmente a proteger la libre distribución, modificación y uso de software. 12 La figura siguiente muestra una vista del actual cliente de correo. Figura 1.1: Vista cliente de correo squirrelmail. Sistema de reservación de salas: El sistema de reservación de salas 3 es un sistema desarrollado en el Centro de Computación de la Facultad de Ciencias, que permite gestionar y administrar cualquier aula o sala dentro de la Facultad de Ciencias, de tal forma que pueda administrarse su uso y asignación de manera ordenada y automatizada. La figura siguiente muestra una vista del actual sistema de reservación de salas. Sistema de soporte técnico: El sistema de soporte técnico que permite mantener y gestionar las solicitudes de soporte técnico y asistencia a usuarios dentro de la Facultad de Ciencias, fué desarrollado en el Centro de Computación, éste es un sistema escrito, 3http://stest.ciens.ucv.ve/cal/ 13 Figura 1.2: Vista del sistema de reservación de salas. utilizando tecnoloǵıas web basadas en el lenguaje de programación Java. La figura siguiente muestra una vista del actual sistema de soporte técnico. Figura 1.3: Vista del sistema de soporte Es evidente que al desarrollar o implantar estas soluciones de software no se tomó en cuenta ningún reglamento que norme los lineamientos de interfaz, ni el 14 acceso a información común, lo que ocacionó como consecuencia inmediata que se empezara a generar información redundante no consistente entre ellos, por ejemplo, el nombre de inicio de sesión para cada sistema; o si alguno de estos sistemas utiliza información relacionada al usuario, ésta tend́ıa a diferir. A continuación, se muestra la situación actual de desarrollo de las aplicaciones de uso institucional en la Facultad de Ciencias. Figura 1.4: Modo de trabajo actual. 15 Caṕıtulo 2 Propuesta 2.1. Justificación Dadas estructuras organizativas, cuyos flujos de trabajo son complejos, es necesario tener el control sobre el intercambio de información entre los departamentos, dependencias o grupos de trabajo que integran la organización. Esto permite optimizar e incrementar el desempeño de todos los procesos de negocios que conforman las actividades regulares de cada entidad. Se observó que en la Facultad de Ciencias de la Universidad Central de Venezuela existen sistemas independientes y aislados que prestan servicios al personal docente, administrativo y a los estudiantes, los cuales en su mayoŕıa no tienen la capacidad de compartir información con otros sistemas, aún cuando pertenecen a la misma entidad. Lo que trae como consecuencia, lentos y complejos flujos de trabajo que pueden optimizarse si la información requerida está disponible y puede compartirse a través de redes de comunicación de datos y comunicación entre procesos. La Facultad de Ciencias, carece de una plataforma que permita integrar de manera homogénea los sistemas administrativos propios de cada dependencia; aśı como de la capacidad para ofrecer las funcionalidades necesarias que faciliten la coordinación de las tareas asociadas a cada usuario. Por lo tanto, se plantea la necesidad de desarrollar e implantar una plataforma de software que permita integrar servicios administrativos prestados por las distintas dependencias de la Facultad de Ciencias. Permitiendo que los usuarios puedan acceder de manera centralizada a un conjunto de módulos disponibles. 16 Debe proveerse también, un conjunto de herramientas, procedimientos y protocolos que garanticen un tratamiento coherente al acceso a la información, implicando las tareas de autenticación, autorización y registro de actividades para todos los usuarios o entidades que tienen acceso a un sistema de información, más en espećıfico, a este sistema a desarrollar. Este conjunto de poĺıticas es conocido como Autenticación, Autorización y Auditoria (Authentication, Authorization and Accounting - AAA.) En términos generales la implantación y adecuación de una plataforma de software colaborativo para la Facultad de Ciencias, solventaŕıa la problemática del acceso a la información descentralizado, con lo que se lograŕıa tener a toda la comunidad de la Facultad en contacto e intercambiando información de manera estructurada y organizada. Contribuyendo a mantener la integridad de los datos. 2.2. Problema Si bien muchas tareas administrativas cŕıticas que se realizan en la Facultad de Ciencias de la Universidad Central de Venezuela están automatizadas o en v́ıa de automatización, para ellas no se cuenta con la documentación apropiada, donde se describa de forma clara y detallada los lineamientos, normas y condiciones que se deben seguir para el desarrollo de software dentro de la institución. Por otra parte, si están ya desarrolladas, no existe ningún elemento de software que permita el intercambio de información entre ellas o más aun, que éstas accedan a un repositorio centralizado de información, como por ejemplo para consultar los datos referentes al inicio de sesión. Por lo tanto, se busca normalizar e integrar un conjunto de variables iniciales, que serán utilizadas por las distintas aplicaciones, este proceso de normalización permite estandarizar el acceso a la información de manera de evitar la redundancia innecesaria de datos, ya que los sistemas podrán intercambiar información entre si. Asi mismo, evitará inconsistencias referentes a la interfaz de usuario final. Considerando lo expuesto anteriormente, surge el interés de desarrollar y aprovechar al máximo las ventajas del software libre, buscando una solución que permita llevar a cabo esta integración. Es aśı como este trabajo logrará un verdadero aporte, al lograr implantar una aplicación que esté en capacidad de llevar a cabo este 17 proceso de integración y centralización al acceder a servicios propios de la Facultad, lo cual será evidenciado al integrar tanto aplicaciones de uso administrativo, como aplicaciones de terceros que permitirán complementar la plataforma con un sistema que logre mantener en tiempo real la comunicación entre los usuarios, por medio de clientes de mensajeŕıa instantánea, foros y encuestas. 2.3. Objetivo general Implantar y adecuar una plataforma de software colaborativo que permita integrar algunos de los servicios prestados por las dependencias administrativas y académicas de la Facultad de Ciencias de la Universidad Central de Venezuela. 2.4. Objetivos espećıficos Estudiar y analizar la factibilidad de implantar y adecuar una solución que resuelva el problema planteado. Establecer el inicio de sesión al sistema haciendo uso del nombre y clave que poseen actualmente los usuarios del servidor de correo institucional. Documentar el proceso de diseño y creación de módulos del sistema, de manera que puedan ser utilizados por futuros desarrolladores. Desarrollar un módulo que permita integrar el servicio de soporte técnico que es brindado por el Centro de Computación de la Facultad de Ciencias. Permitir el uso compartido y simultáneo de recursos entre los distintos usuarios, los cuales ayudaran al desarrollo de las actividades cotidianas de los mismos. Integrar un sistema de mensajeŕıa instantánea que permita mantener una comunicación en tiempo real entre los usuarios. Integrar el sistema de reservación de aulas y salas desarrollado en el Centro de Computación. Establecer un nexo o canal de participación entre los usuarios del sistema, mediante la implementación de foros y encuestas. 18 Proporcionar poĺıticas y mecanismos de seguridad que garanticen el acceso seguro a la información por parte de los usuarios. 2.5. Alcance Esta propuesta de Trabajo de Grado contempla la implantación y adecuación de una plataforma de software colaborativo que permita tanto el intercambio de información entre sus usuarios, como la integración de otras aplicaciones web a la misma. Haciendo uso de una interfaz unificada a la vez que mantiene la integridad de los datos. 19 Caṕıtulo 3 Marco Teórico 3.1. Tecnoloǵıas de información y comunicación Las tecnoloǵıas de información y comunicación (TICS), son un conjunto de sistemas de comunicación, programas de aplicación y dispositivos de cómputo, que en conjunto facilitan el desarrollo de las tareas asociadas a los usuarios, permitiéndoles realizar actividades diarias de forma fácil y rápida.[1] 3.1.1. Caracteŕısticas de las TICS Las caracteŕısticas que definen una tecnoloǵıa de información y comunicación son: [1] Interactividad: permite la interacción entre el dispositivo de cómputo y el usuario, y aśı decidir la secuencia de información a seguir, establecer el ritmo, cantidad y profundidad del contenido de información con el que se decide trabajar. Instantaneidad: facilita que se rompan las barreras temporales y espaciales de conocimiento y cultura, permitiendo que el usuario pueda acceder a bases de datos de información situadas en cualquier parte del mundo. Digitalización: es el proceso que transforma la información codificada analógicamente en códigos numéricos que permiten más fácilmente su manipulación y distribución. Esto favorece la transmisión de la información a todos los servicios necesarios por una misma red, con la ampliación de ofertas al usuario y reducción de costos. 20 Interconexión: logra la formación de nuevas redes de comunicación de manera que implique un refuerzo mutuo de las tecnoloǵıas. Inmaterialidad: permite la generación y el procesamiento de la información como materia prima, obteniendo el acceso a grandes masas de datos en cortos periodos de tiempo, presentándola en diferentes tipos de códigos lingǘısticos y facilitando su transmisión a lugares lejanos. 3.1.2. Internet La Internet es un sistema global de interconexión de redes de computadoras, que utilizan la familia de protocolos TCP/IP para poder, de manera efectiva, intercambiar información, y aśı garantizar que las distintas redes f́ısicamente unidas, puedan funcionar como una red lógica única. Esta red de redes esta compuesta por un gran número de redes de tipo públicas, privadas, académicas y gubernamentales de contexto global o local, interconectadas por medio de enlaces alámbricos o inalámbricos. [2] Estructura de la Internet Este sistema no es un sistema centralizado ni controlado por un organismo determinado. Su estructura es similar a la de una gran malla, donde existen una determinada cantidad de redes conectadas unas a otras. Existen organismos que son responsables del estudio y desarrollo de estándares para que esta gran arquitectura de comunicación funcione y evolucione. Entre esos organismos están el Grupo de Tareas de Ingenieŕıa de Internet (Internet Engineering Task Force - IETF), que se encarga de estudiar y desarrollar estándares para los protocolos usados en la Internet y la Corporación de Internet para los Nombres y los Números Asignados (Internet Corporation for Assigned Names and Numbers - ICANN), que es el organismo encargado de asignar y distribuir los identificadores únicos para la Internet, como lo son las direcciones IP y los nombres de dominio. [3] 3.1.3. World Wide Web El World Wide Web es un conjunto de reglas y convenciones para acceder a documentos referenciables, a través de millones de computadores en la Internet. Su enorme popularidad recae en el hecho de que posee una interfaz gráfica atractiva y de fácil uso para los usuarios, aśı como también que comprende un enorme cúmulo 21 de información sobre una extrema cantidad y variedad de temas. El World Wide Web (conocido también como WWW), tuvo sus inicios en el año de 1989, en el Centro Europeo de Investigación Nuclear (European Organization for Nuclear Research - CERN), este instituto cuenta con un grupo de cient́ıficos distribuidos en todo el mundo, que hacen investigaciones sobre f́ısica cuántica. La Web surge de la necesidad de comunicación e intercambio de información entre todos estos investigadores de manera que éstos pudieran compartir informes, fotos, dibujos entre otros documentos. Este sistema de intercambio de contenido fue diseñado bajo una arquitectura cliente-servidor, en donde un programa cliente realiza peticiones a una aplicación servidor, y éste se encarga de procesarlas y responderlas. Consultar un documento desde el World Wide Web generalmente comienza escribiendo la dirección del recurso a consultar en el navegador web o seleccionando un hiperv́ınculo que referencia la información que se quiere consultar. El navegador web comienza el env́ıo de una serie de mensajes que permitirán obtener y mostrar el recurso que se desea obtener. En primer lugar la porción del URL que referencia al nombre del servidor, debe ser traducida, para obtener el identificador uńıvoco de localización dentro de la Internet (Dirección IP). Una vez obtenido este identificador, se procederá a contactar y enviar mensajes al servidor web. El navegador web env́ıa solicitudes HTTP para ese servidor en particular. En el caso de una página Web t́ıpica, el texto HTML producto de una solicitud, es verificado y procesado por el navegador web, a fin de mostrarle al usuario una respuesta a su solicitud. [4] 3.1.4. HTML El Lenguaje de Marcas de Hipertexto (HyperText Markup Language - HTML) es una implementación del sistema estándar de demarcación general, el cual es un sistema que permite definir y estructurar un conjunto de documentos por medio de marcas o etiquetas. Al referirse a HTML, nos referimos tanto el tipo de documento, como al lenguaje de etiquetas con el que es representado. A medida que los usuarios se especializan en el uso del Internet, suelen pasar por 22 tres etapas distintas. La primera donde los usuarios conocen y frecuentan un grupo reducido de páginas, luego descubren la existencia de aplicaciones que les permiten localizar páginas, dado un criterio de búsqueda y luego los usuarios tienden a observar que no sólo pueden consultar información sino también pueden publicarla. Para que varios usuarios puedan comunicarse es necesario que lo hagan en un mismo idioma, ese idioma para el uso del Internet es el HTML. El HTML es el lenguaje de marcado de texto utilizado normalmente en la Web. Fue desarrollado en 1986 por el f́ısico nuclear Tim Berners-Lee, utilizando dos herramientas ya existentes, el concepto de enlace o link (Elemento que permite asociar dos elementos entre śı) y el Lenguaje Estándar de marcación General (Standard Generalized Markup Language - SGML), que permite formatear y definir la sintaxis de un documento). El HTML no es un lenguaje de programación propiamente, sino un sistema de marcado, en el cual al llegar un documento en HTML al cliente web, es interpretado mas no compilado, lo que implica que si existe algún error de sintaxis, se mostrará la vista al usuario tal como éste lo interprete. Un entorno para el trabajo en HTML podŕıa ser simplemente un procesador de textos (bloc de notas, vi, nano, etc.). El grupo de documentos creados con este formato deberán tener como extensión .html o .htm. Estos documentos deben ser mostrados por un cliente Web como Firefox o Internet Explorer.[5] 3.1.5. HTTP El protocolo HTTP (HyperText Transfer Protocol) es el protocolo encargado de normar el proceso de comunicación través del Web. Define la sintaxis y la semántica para los mensajes que cualquier elemento de software deba seguir, para implementar este protocolo y aśı poder efectuar de manera correcta la transmisión de datos. Este es un protocolo orientado a transacciones basado en el esquema de petición y respuesta, entre dos nodos que quieran intercambiar información. HTTP es un protocolo sin estado, ya que no almacena información referente a conexiones previas; sin embargo, provee mecanismos que permiten almacenar información en el nodo cliente, inclusive por tiempo indefinido, y aśı, simular que se tiene sesiones asociadas a cada usuario que utilice el sistema web. Para cada petición, deben ejecutarse los siguientes pasos, de manera que pueda 23 llevarse a cabo la comunicación, de forma correcta. El usuario accede a la URL, introduciendo la dirección IP en la barra de dirección del cliente o seleccionando un enlace directamente. El cliente decodifica la URL y obtiene el protocolo de acceso, el nombre o dirección del servidor destino, el puerto destino al cual va dirigida la petición y el objeto o recurso a ser solicitado. Se establece una conexión TCP/IP con el servidor, hacia el puerto correspondiente y se realiza la petición. Se env́ıa el comando correspondiente (GET, POST, DELETE, PUT, TRACE), junto con la dirección del recurso requerido (el segmento de la URL que se encuentra luego del nombre del servidor), la versión del protocolo HTTP y un conjunto de parámetros opcionales para el servidor. El servidor retorna la respuesta al cliente respectivo, la cual está compuesta por el código de estado de la respuesta, el tipo de dato asociado a la respuesta y la información asociada a la respuesta. Termina la conexión TCP. Los comandos propios del protocolo sobre las posibles peticiones de los clientes son[3]: GET: Se refiera a la solicitud de un documento al servidor. POST: Consiste en el env́ıo de documentos al servidor (datos asociados a un formulario, etc.). PUT: Se solicita que el documento enviado sea accesible desde una determinada dirección. DELETE: Se requiere la eliminación de un archivo en el servidor. TRACE: Se solicitan copias de las peticiones que llegan al servidor. 24 3.1.6. Web 2.0 La Web 2.0, es la evolución de todo el conjunto tradicional de aplicaciones Web, enfocadas hacia el usuario final, hacia la interacción que puede tener el usuario con el sistema, para hacerlo sentir parte de él. La Web 2.0 se define como una actitud o una forma de trabajo y no como una tecnoloǵıa. La Web 2.0 está compuesta por servicios y aplicaciones que generan colaboración entre los usuarios del sistema, todas orientadas al usuario final y buscando reemplazar las aplicaciones instaladas localmente en los computadores. Todos estos servicios persiguen brindar mejores y más sencillas soluciones, al trabajo del usuario frente al computador. [5] Principios Dentro de la emphWeb 2.0 conference realizada en San Francisco en el año 2004, donde Dale Dougherty de O´Reilly dio a conocer el término emphWeb 2.0, se definieron ciertos principios que deben poseer las aplicaciones Web 2.0: Deben estar basadas en la plataforma Web para su desarrollo. Obliga a proveer y promover flujos constantes de información. Debe promover una arquitectura de participación entre sus usuarios. Las aplicaciones nunca pueden dejar de ser depuradas, estudiadas y desarrolladas, implicando que siempre deberán existir servicios en prueba, lo que quiere decir que están en un paso intermedio en el ciclo de desarrollo completo, que implica que puedan ser inestables pero útiles para hacer demostraciones y corregir errores. Caracteŕısticas Los principios de desarrollo descritos anteriormente están basados en las siguientes caracteŕısticas. Disponibilidad: las herramientas para publicar y procesar información pueden estar disponibles como recursos de red, accesibles desde la Web, sin tener la necesidad de instalar la aplicación local en la computadora, con la limitación que el usuario debe adaptarse a los formatos establecidos por los sitios. 25 Colaboración y comunicación en ĺınea por medio de los recursos disponibles en el Web: los medios de comunicación y publicación de información son indispensables para el desarrollo del trabajo colaborativo, las aplicaciones basadas en Web 2.0 se nutren de la unión de la fuerza de trabajo conjunta. Nuevos procedimientos para trabajar, comunicarse y participar en el Web: en un principio los usuarios del Internet comenzaron a publicar documentos de manera desorganizada, se crearon y saturaron los dominios, tambien se crearon buscadores para tratar de solventar el problema de la búsqueda de información. En la actualidad existen formas de agrupar la información como en bases de datos temáticas o recursos de publicación basada en plantillas con ese uso espećıfico. Los productos se convierten en servicios: un producto, en el caso del ámbito Web, puede ser un portal o aplicación que tenga como función comunicar o integrar a los usuarios de una comunidad, o intercambiar información en tiempo real. Posteriormente se observa la potencialidad y funcionalidad para el progreso y desarrollo de una empresa y es absorbido por ella. Reestructuración del concepto del Web: esta versión trata de ser un punto de encuentro y colaboración entre los distintos usuarios, y trabaja bajo esquemas donde se permita organizar la información para que los usuarios puedan accederla de manera mas sencilla, óptima y clara. Convergencia de recursos: todas las aplicaciones basadas en la concepción de Web 2.0 deben estar desarrolladas bajo los preceptos de la usabilidad y la capacidad de brindarle al usuario un abanico de funcionalidades y servicios, que estén en capacidad de incrementarse con el paso del tiempo. [6] AJAX en la WEB 2.0 Siempre que se habla de WEB 2.0, se hace referencia a una serie de servicios que se ofrecen a través de la Web y se caracterizan por ofrecer una interfaz especialmente ágil y flexible. Detrás de estas aplicaciones, se puede identificar como común denominador la tecnoloǵıa JavaScript aśıncrono y XML (Asynchronous Javascript And XML - AJAX). Bajo este acrónimo, se esconde una combinación creativa de tecnoloǵıas bien conocidas desde hace tiempo por los profesionales especializados, que permiten agilizar la interacción entre el navegador y el propio usuario.[4] 26 Principios AJAX, es una técnica de desarrollo Web para crear aplicaciones dinámicas. Esta tecnoloǵıa se aplica del lado del cliente, es decir, se ejecuta en el navegador de los usuarios y al mismo tiempo se mantiene la comunicación aśıncrona con el servidor en segundo plano. De esta forma es posible realizar cambios sobre las páginas sin necesidad de recargarlas constantemente, lo que significa, aumentar la interactividad, flexibilidad, agilidad y usabilidad en las aplicaciones Web.[7] Figura 3.1: Funcionamiento de AJAX. AJAX es una tecnoloǵıa aśıncrona, en el sentido que los datos adicionales se solicitan al servidor y se cargan en segundo plano sin interferir con la visualización ni el comportamiento de las páginas. JavaScript es el lenguaje interpretado (scripting language) en el que normalmente se efectúan las funciones de llamada de AJAX mientras que el acceso a los datos se realiza mediante XMLHttpRequest, objeto disponible en los navegadores actuales. En cualquier caso, no es necesario que el contenido aśıncrono esté formateado en XML. En la figura 3.1 se muestra el funcionamiento de AJAX. Beneficios AJAX brinda los siguientes potenciales beneficios al momento de desarrollar aplicaciones Web[8]: Permite crear aplicaciones Web mejores y más dinámicas. El tiempo de espera para una petición se reduce. Usa tecnoloǵıas existentes. 27 Usa habilidades que los desarrolladores Web ya conocen. Por su popularidad y accesibilidad, alienta a los diseñadores a compartir sus patrones y de esta forma otros desarrolladores no se ven obligados a desarrollar funcionalidades ya diseñadas. Las caracteŕısticas de AJAX se integran perfectamente con las funcionalidades de los navegadores Web existentes en el mercado. Esto le da al usuario una clara idea de lo que se espera de ellos durante una transacción. Escenarios donde AJAX puede usarse exitosamente Los escenarios más comunes donde es beneficioso usar AJAX[7]: Libertad en la actualización de páginas: Las aplicaciones AJAX no necesitan refrescar la página completa para actualizar la información. En lugar de eso, pueden simplemente actualizar parte de la página en cualquier momento, dándole a los usuarios una respuesta instantánea a sus ingresos y consultas. Verificación instantánea de datos: Tiene la capacidad para comprobar instantáneamente los datos que se ingresan en un formulario. Interfaz de pantalla única: Una de las ventajas de pantalla única, es que el usuario puede ver el marco general de la aplicación, observando todos los pasos necesarios para completar una operación. Esto le da al usuario una clara idea de lo que se espera de ellos durante una transacción. Relativamente fácil de implementar: Debido a que las aplicaciones AJAX están construidas utilizando estándares Web actuales, son relativamente sencillas de construir. Desventajas Alguno de los potenciales problemas con AJAX son[8]: Problemas si el usuario ha deshabilitado el uso de JavaScript en su navegador. Demasiado código AJAX embebido hace lento el navegador. Como las direcciones de las páginas no cambian, se hace muy dif́ıcil guardar alguna página de interés en los favoritos del navegador ya que eso implicaŕıa guardar el estado de la página en ese momento. 28 El uso del botón ‘atrás‘ o ‘retroceder‘ del navegador no produce el mismo resultado que en una aplicación Web sin AJAX, ya que todas la acciones ocurren sobre la misma página. 3.2. Sistemas colaborativos Los sistemas colaborativos son programas de aplicación que permiten el correcto intercambio de información entre los usuarios y aśı lograr que se lleve a cabo el trabajo lo mas eficientemente posible. Esto tiene como consecuencia inmediata el aumento de la coordinación entre el conjunto de usuarios que conforman el sistema y la reducción del retardo asociado al intercambio de información por medios f́ısicos (memos, cartas, entre otros). También los sistemas colaborativos permiten el trabajo en equipo, este término fue definido por el Gartner Group, como una arquitectura unificada de software, basada en tecnoloǵıas distribuidas del tipo cliente/servidor, que poseen capacidades de interoperabilidad con otros sistemas colaborativos de comunicación y de coordinación, para poder reutilizar el conocimiento. Una de las razones por las cuales las aplicaciones de software colaborativo se volvieron herramientas esenciales para el desarrollo de las empresas, es que exist́ıan ámbitos en los que la comunicación inter-usuarios era muy compleja, como el caso de empresas globales en las que los usuarios estaban f́ısicamente separados por distancias muy grandes[10]. 3.2.1. Aplicaciones para promover el trabajo en equipo Hoy en d́ıa muchas empresas están redefiniendo la manera de llevar a cabo sus negocios. Esta transformación implica la reestructuración de la forma en que las compañ́ıas agrupan y procesan la información asociada a los distintos equipos de trabajo de la organización. La manera tradicional donde cada usuario interactúe con un computador de manera individual, busca ser sustituida por aquellos sistemas que le permitan al usuario compartir información, ideas, tareas, de tal manera que se ayude a completar el trabajo de la forma mas eficiente, ordenada y estructurada posible. El software encargado de llevar a la realidad esta manera de trabajar son las aplicaciones de software colaborativo. Estas aplicaciones son la llave del proceso de reestructuración de la empresa como parte del proceso de Reingenieŕıa de Procesos (Business Process Reengineering - BPR). Este concepto fue definido por Michael 29 Hammer y James Champy como ”la reconsideración fundamental y el reajuste radical de procesos de organización, para lograr la mejoŕıa drástica del desempeño actual en costo, servicios y velocidad”. 3.2.2. Aplicaciones de sistemas colaborativos Las aplicaciones de los sistemas colaborativos que permiten crear, acceder y compartir información, incluyen las siguientes: Correo electrónico. Grupos de discusión. Intercambio de documentos. Sistemas de video conferencia. Aplicaciones para el soporte de decisiones. Coordinación de grupos de usuarios para la planificación y administración de tareas previamente establecidas (Ej. Procesos de ingresos a nómina, etc.)[10]. 3.2.3. Intranets Una Intranet es un grupo de programas de aplicación que funcionan como una plataforma para el intercambio de información. Está basada en estándares de comunicación propios del Internet, por lo que tienden a asociarse estos dos términos, con la diferencia que la Intranet hace referencia a un ámbito local o a un recurso que sólo está disponible para los usuarios con los privilegios adecuados[10]. Caracteŕısticas Las principales caracteŕısticas de las Intranet son: Las aplicaciones que tengan como uso el intercambiar información deben ser escalables y aśı poder aumentar el conjunto de funcionalidades a medida que se requiere. Deben estar compuestas por interfaces navegables, sencillas y flexibles, que logren hacer amena la experiencia del usuario al utilizar el sistema. 30 Deben poseer la capacidad de presentar al usuario contenido multimedia, en caso que haya algún requerimiento que aśı lo necesite. Su implementación debe ser preferiblemente independiente de la plataforma en la que es desarrollado, de forma que si se quiere migrar en un futuro, ésto no sea un inconveniente. Beneficios o Ventajas Los beneficios o ventajas de las plataformas de software colaborativo basadas en tecnoloǵıas Web son: Requieren poca inversión para el comienzo de su implantación. Promueven el ahorro de tiempo en comparación con los métodos tradicionales de intercambio de información. Si es bien diseñada, la curva de aprendizaje para conocer y utilizar estas aplicaciones es corta. Fácil acceso a grandes volúmenes de información. 3.2.4. De Sistemas Colaborativos a Intranets Cuando las computadoras personales fueron en un principio introducidas al mercado, fueron diseñadas para ser utilizadas por un único usuario, el cual encontraba una manera sencilla de organizar sus propios documentos, sin proveer la funcionalidad de poder compartirlos con otros. Con el auge de las redes de área local se vió la posibilidad de compartir información inter-usuarios a través de aplicaciones de correo electrónico, sistema que permit́ıa el intercambio información ente los usuarios. Luego surgen aplicaciones llamadas Intranets, que son aplicaciones basadas en tecnoloǵıas del Internet que permiten, por medio del uso de navegadores web acceder a contenido compartido por un conjunto de usuarios bien definido a través de una red de datos de ámbito local.[10] En la figura 3.2 se muestra un gráfico con la evolución de los Sistemas Colaborativos. 31 Figura 3.2: Evolución de los sistemas colaborativos 3.2.5. Funciones y aplicaciones de sistemas colaborativos Los sistemas colaborativos son sistemas para el trabajo en equipo, que ayudan y facilitan la comunicación entre los usuarios del sistema y permiten unificar la fuerza de trabajo. Estas aplicaciones han crecido para cubrir una amplia gama de aplicaciones, este crecimiento ocurre por la disponibilidad de redes de comunicación de datos, dentro y entre las compañ́ıas, proporcionando una infraestructura robusta que deriva en una óptima comunicación. Todas las aplicaciones colaborativas trabajan en conjunto para proveer las tres C’s: Comunicación, Colaboración y Coordinación[10]. Comunicación: Es la funcionalidad clave, que permite compartir y enviar información a través de los usuarios por los distintos sistemas dentro de las aplicaciones colaborativas Ejemplo: Correo Electrónico. Colaboración: Es el acto de unir esfuerzos para dar solución a algún problema planteado. Los sistemas colaborativos ayudan a mitigar ciertos problemas asociados a la manera en que se comparte la información, como por ejemplo el lugar donde se almacenara la información para ser accedida por los usuarios. Coordinación: Es la caracteŕıstica que nos permitirá garantizar la efectiva ejecución del trabajo para poder alcanzar las metas. En el cuadro 3.1 se muestra una tabla que describe las funciones de una aplicación colaborativa. 32 Función de la aplicación colaborativa Descripción de la función 1. Correo electrónico y mensajeŕıa. Servicio de correo electrónico, procesamiento e intercambio de mensajes entre usuarios. 2. Compartir y manejar información. Mejorar el intercambio de información entre los usuarios. 3. Flujo de trabajo estructurado. Coordinar de manera cronológica el intercambio de información entre los usuarios. 4. Conferencias. Coordinar reuniones y juntas entre los usuarios del sistema. 5. Administracion del tiempo. Coordinar la administración del tiempo para cada uno de los usuarios. Cuadro 3.1: Funciones de los sistemas colaborativos 3.2.6. Tipos de aplicaciones colaborativas Dependiendo de la funcionalidad del sistema colaborativo que se quiera estudiar, puede encontrarse en distintos tipos de aplicaciones. En el cuadro 3.2 se muestra la clasificación de las aplicaciones según el tipo de software[10]. Tipo de software Función disponible Ejemplos 1. Suites de sistemas colaborativos completos. Correo electrónico, agenda de contactos, compartir archivos, compartir información por medio de aplicaciones propias de la empresa. Lotus notes, Microsoft Exchange, Novell Groupwise. 2. Aplicaciones independientes de uso espećıfico. Correo electrónico, agenda de contactos, compartir archivos, compartir información por medio de aplicaciones propias de la empresa. Eudora, Outlook, Telefinder, Messenger. 3. Aplicaciones de ofimática de uso general. Manejo de versiones. Microsoft Word, Excel, Lotus Word Pro, Corel Word Perfect. 4. Sistemas colaborativos basados en tecnoloǵıas web. Correo electrónico, agenda de contactos, compartir archivos, compartir información por medio de aplicaciones propias de la empresa. Horde, Claros, Group-Office, Zimbra. 5. Sistemas operativos. Administrar recursos, comunicación inter procesos. Todos los programas de aplicación. Cuadro 3.2: Tipos de sistemas colaborativos La gran diversidad de funcionalidades y aplicaciones colaborativas, crea una barrera difusa para definir donde comienzan y donde terminan los sistemas 33 colaborativos y otros tipos de software relacionados. La respuesta es que no existe tal frontera, en virtud que en principio todas podŕıan trabajar en conjunto para crear un gran sistema colaborativo. 3.2.7. Clasificación de los sistemas colaborativos Las divisiones de los sistemas colaborativos están basadas en el cómo, cuándo y dónde son utilizadas. El término dónde, describe el ámbito donde se utilizará la aplicación, ya sea de manera local en un mismo grupo de trabajo u oficina, o de manera global, entre varias localidades o grupos de trabajo distinto. El término cuándo, se refiere a si la comunicación entre los usuarios es en tiempo real (Śıncrona), o si los eventos son desarrollados a medida que los usuarios env́ıan mensajes entre ellos a destiempo o sin necesariamente un orden espećıfico (Aśıncrona). El término cómo, hace referencia a si los usuarios trabajan en función de una tarea común o si se definen tareas y roles distintos para cada grupo de usuarios por separado[10]. Figura 3.3: Clasificación de los sistemas colaborativos En la figura 3.3 se describe, dada la clasificación seleccionada para los sistemas colaborativos, las posibles soluciones de aplicaciones colaborativas para distintas situaciones de negocios, en función de si están f́ısicamente juntos los integrantes del equipo de trabajo o si están separados, asi como si la comunicación entre ellos debe ser śıncrona o aśıncrona. 34 3.2.8. Servicio de correo electrónico De muchas maneras el correo electrónico es la herramienta colaborativa mas popular del mundo hablando en términos de volumen. Exist́ıan para el año 2007 aproximadamente 1.2 billones de usuarios a nivel mundial y se estima que para el año 2011 el número de usuarios aumente a 1.6 billones [11]. De hecho, una de las principales caracteŕısticas al introducir las redes corporativas fue el desarrollo del servicio de correo, de manera de tener a todos los usuarios conectados v́ıa e-mail. Este es un servicio adoptado por las oficinas, en vista que provee una forma rápida y eficiente de pasar mensajes entre sus usuarios, ofrece una gran variedad de prerrogativas en comparación con el correo tradicional, como por ejemplo, la rapidez de la entrega y la respuesta de los mensajes. Todas estas son ventajas que se traducen en la rapidez que una empresa puede lograr, con el objeto de ahorrar dinero al momento de tomar decisiones. Funcionalidades y funciones del servicio de correo electrónico El servicio de correo electrónico comparte muchas caracteŕısticas con los sistemas de correo tradicional, es por eso que logra su rápido desarrollo. Al igual que el correo tradicional en el servicio implementado de forma digital se deben proveer ciertas funcionalidades como crear, enviar y recibir mensajes. En la aplicación cliente, el usuario tiene una bandeja de entrada con los mensajes recibidos de otros usuarios con campos como el remitente, el asunto del mensaje, la prioridad y el contenido. Los mensajes pueden ser también revisados para verificar quien los ha respondido. Figura 3.4: Ejemplo de cliente de correo La figura 3.4 muestra un ejemplo clásico de un cliente de correo que presenta al usuario sus funcionalidades en tres paneles. A la izquierda puede observarse en 35 forma de árbol, la descripción de las carpetas que contienen los mensajes; al lado derecho (superior) se muestran los mensajes asociados a la carpeta seleccionada; en el panel izquierdo, los mensajes al ser seleccionados pueden ser borrados, respondidos o reenviados de acuerdo a los requerimientos del usuario; en el panel inferior (lado derecho), se muestra el contenido del mensaje seleccionado. Direccionamiento La dirección del destinatario se encuentra generalmente registrada en la libreta de direcciones asociada al usuario que está haciendo uso del cliente de correo. En algunos casos esta libreta debe ser llenada por cada usuario de manera separada, pero existen esquemas donde se cuenta con un conjunto de contactos asignados de manera automática por defecto. Esos contactos deben ser de los demás usuarios que pertenezcan al grupo de trabajo o contexto de trabajo. Funcionalidades poderosas para los usuarios del servicio Desde que el servicio de correo electrónico se volvió una herramienta sencilla de entender y utilizar, se desarrollaron funcionalidades que permiten incrementar la eficiencia del servicio y del desempeño de los usuarios al realizar sus tareas respectivas. Esas funcionalidades son: Env́ıo de archivos adjuntos: Los mensajes son comúnmente enviados, pero existen interfaces que dificultan al usuario explotar al máximo esta funcionalidad, inclusive existen clientes que no cumplen con los estándares para el env́ıo de archivos adjuntos como las Extensiones de Correo de Internet Multipropósito (Multipurpose Internet Mail Extensión - MIME). Acuse de recibo y lectura: Esta es una función muy útil pero muy poco utilizada por los usuarios del servicio de correo. Esta funcionalidad permite al usuario, determinar cuando el mensaje fue entregado y cuando fue léıdo por el usuario que recibió el mensaje. Grupos de correo: Esta opción permite enviar mensajes de correo a grupos espećıficos de correo, como por ejemplo el grupo de trabajo. Utilizando esta técnica es posible enviar por difusión un mensaje a un grupo espećıfico, aumentando el flujo o intercambio de información entre un equipo. También los administradores pueden enviar información de interés común a todos los usuarios del sistema sin la necesidad de enviar un correo por cada usuario. 36 Seguridad: La seguridad al enviar los mensajes es de vital importancia. Existen sistemas que permiten cifrar el canal de comunicación entre los servidores de correo y aśı garantizar la confidencialidad del mensaje al recorrer el medio de comunicación. Un ejemplo es el protocolo de Capa de Conexión Segura (Secure Socket Layer - SSL). También existen sistemas que permiten comprobar la veracidad y la autenticidad del mensaje o cifrar el contenido del mismo; un algoritmo que permite implementar esta funcionalidad es PGP. Comunicación entre el cliente y el servidor de correo El Protocolo de Oficina de Correos 3 (Post Office Protocol 3 - POP3) y el Protocolo de Acceso a Mensaje de Internet (Internet Message Access Protocol - IMAP4) definen métodos para que los clientes puedan acceder a los mensajes de correo electrónico almacenados en el servidor, sobre una red TCP/IP. POP3 es un método desarrollado antes que IMAP, actualmente muy utilizado, que descarga los correos del servidor al conectarse a él. La desventaja para este modelo de acceso a los mensajes es que no puede discriminarse del contenido a ser descargado, lo que implica que los clientes que se conecten mediante enlaces de poca capacidad, deben sufrir de los retardos asociados a este tipo de descargas. Un protocolo más reciente es IMAP4, el cual permite que la descarga de los mensajes sea bajo demanda y únicamente sobre los mensajes seleccionados por el usuario; que también admite realizar la administración de las carpetas remotas almacenadas en el servidor, y no únicamente sobre la bandeja de entrada, como era el caso de POP3[3]. Transferencia de mensajes entre servidores de correo El Protocolo Simple de Transferencia de Correo Electrónico (Simple Mail Transfer Protocol - SMTP), es el protocolo estándar para la transferencia de mensajes entre servidores conectados a la Internet. Esto permite por ejemplo, la interoperabilidad entre una amplia gama de sistemas Microsoft, UNIX o Linux. El único requisito es que esté conectado a la Internet y posea un Gateway SMTP que admita enviar mensajes formateados para el protocolo SMTP. El protocolo SMTP involucra el establecimiento de una conexión entre los servidores que quieran intercambiar mensajes. El servidor destino puede ser destino final para ser entregado el mensaje o puede ser un servidor intermedio. Una vez 37 establecida la conexión, el emisor del mensaje SMTP env́ıa un mensaje MAIL al destinatario que indica que se quiere enviar un mensaje a ese servidor, si el mensaje es aceptado, el servidor de correo origen recibe un mensaje OK. Este responde con un mensaje RCPT identificando el remitente del mensaje y si éste es aceptado, se env́ıan los datos asociados al mensaje[3]. 3.3. Group-Office Group-Office es una oficina virtual, desarrollada con tecnoloǵıas Web para grupos de trabajo. Es una suite formada por un calendario, una agenda y un gestor de archivos, aśı como un cliente de correo y un administrador de usuarios. Este sistema es diseñado e implementado por la empresa desarrolladora de software Intermesh. [12] Está basado en una arquitectura modular, lo cual implica un aumento de la flexibilidad de la aplicación. Por eso, un desarrollador puede añadir muchas más funcionalidades a las existentes, gracias a su estructura. Actualmente, integra una agenda con soporte para plantillas de mensajes de correo electrónico. De esta forma, se pueden crear documentos de forma semi-automática. Aunque fue diseñado para pequeñas y medianas empresas, brinda soporte para miles de usuarios. El administrador de archivos permite almacenar y compartir documentos de trabajo con otros usuarios, el cliente de correo soporta los protocolos IMAP y POP3. Esta plataforma es compatible con el protocolo iCalendar 1 de tal manera que puedan ser exportados e importados calendarios y eventos para ser utilizados en otras aplicaciones. 3.3.1. Requerimientos del sistema El cuadro 3.3 muestra los requerimientos básicos para poder llevar a cabo la instalación de la plataforma Group Office. La plataforma Group Office puede ejercutarse en múltiples plataformas y es desarrollada con el lenguaje de programación PHP. 1http://tools.ietf.org/html/rfc2445,http://tools.ietf.org/html/rfc2446,http://tools.ietf.org/html/rfc2447 38 Tipo Requerido Recomendado Sistema operativo Linux, BSD, Unix, Mac OS, Windows Linux Servidor web Apache > 2 Ultima estable Lenguaje de programación PHP > 5.2 Ultima estable Servidor de base de datos MySQL > 5 Ultima estable Navegador Firefox > 1.5, Safari > 3, Opera > 9, Internet Explorer > 6 Firefox Cuadro 3.3: Requerimientos de Group-Office 3.3.2. Usuario final Group Office ofrece una amplia gama de aplicaciones con las que el usuario puede realizar diversas tareas básicas, entre las que tenemos el calendario, agenda, libreta de direcciones y correo electrónico. Todos estos elementos son módulos de la plataforma Group Office. 3.3.3. Módulo de correo electrónico Este módulo hace posible leer y componer mensajes desde cualquier lugar. También permite configurar múltiples cuentas de correo con un mismo usuario. En la figura 3.5 se muestra el módulo de correo electrónico de Group Office. En el menú de la izquierda se observa la lista de carpetas del usuario y del lado derecho de la imagen se aprecia una vista del correo seleccionado. Estructura de carpetas Por defecto la cuenta de correo contiene una Bandeja de Entrada, Elementos Enviados, Borradores, Papelera y una carpeta para el correo no deseado. La Bandeja de Entrada contiene todos los mensaje entrantes; Elementos Enviados deposita todos los mensajes que han sido enviados; la Papelera contiene todos los mensajes que han sido borrados y la carpeta de correos no deseados retiene todos los elementos que han sido clasificados como correo no deseado. Group Office no clasifica los correos como no deseados, un filtro adicional (externo) debe hacer esta tarea y se debe crear un filtro para enviar los mensajes a la carpeta correspondiente. 39 Figura 3.5: Vista del módulo de correo de Group-Office Lectura de mensajes Al seleccionar una carpeta se muestran todos los mensajes contenidos en la misma; si un mensaje no se ha léıdo aún, aparecerá resaltado con el texto en negrilla. Si se selecciona un correo una vez, el contenido se mostrará justo debajo de la lista de correos, generando aśı una vista previa del mensaje. Cuando se seleccione dos veces alguno de los correos, entonces el mensaje se abre en pantalla completa. Si se recibe un nuevo mensaje de correo, un sonido caracteŕıstico se reproduce y el número de mensajes que no han sido léıdos se incrementa en la esquina superior derecha. Composición de mensajes Se puede componer un correo con tan solo seleccionar una dirección de correo electrónico que se encuentre en cualquier lugar del Group-Office, o también se puede seleccionar el botón Componer que se encuentra en el Módulo de Correo Electrónico. En la figura 3.6 se muestra la interfaz de composición de mensajes. Se debe especificar el remitente si se tiene más de una cuenta configurada y luego especificar a quién va dirigido, en los campos Para, CC (Con Copia) y CCO (Con Copia 40 Figura 3.6: Vista de la interfaz de composición de mensajes Oculta). Finalmente se especifica el asunto del mensaje para aśı comenzar a redactar el cuerpo del mismo. Se cuenta con una opción para adjuntar archivos al mensaje a ser enviado, estos archivos pueden provenir de los archivos compartidos por el usuario o propiamente de su computador. 3.3.4. Módulo de resumen de contenido Este módulo funciona como un resumen del contenido de los módulos del Group-Office. Este es el módulo de inicio por defecto ya que en él, los usuarios pueden ver rápidamente las tareas que tengan definidas para la fecha actual, los correos que no han sido léıdos en la bandeja de entrada y las entradas en el calendario para la fecha actual y el d́ıa siguiente. También es posible configurar la distribución de este módulo, eliminando o agregando nuevas vistas de módulos, o cambiar la posición de las vistas, de manera que el usuario pueda agruparlas u ordenarlas según sus prioridades o preferencias. (Ver figura 3.7) 3.3.5. Módulo de calendario En el módulo de calendario el usuario tiene la opción de administrar sus citas con otros usuarios, también permite que otros usuarios realicen citas, colocándolas en su 41 Figura 3.7: Vista del resumen de los módulos calendario o viceversa. Se tienen vistas del calendario por d́ıa, grupo de d́ıas, por semana o por mes. Crear nuevas citas Para crear una nueva cita, sólo se deberá seleccionar la fecha espećıfica y aśı se mostrará una ventana donde se introducirán los datos de la cita. Algunos campos son obligatorios como el asunto, el lugar y la descripción. (Ver figura 3.8) El módulo permite agregar participantes al evento, sólo se deberán escribir sus direcciones de correo electrónico. Si se requiere agregar más de un usuario, deben escribirse las direcciones separadas por el carácter coma (,). Los eventos asociados a un usuario podrán ser vistos en el calendario de los contactos que se agregaron. Se puede configurar la recurrencia de la cita o evento, es decir si ocurrirá un solo d́ıa o de forma diaria, semanal, mensual u otras configuraciones, como por ejemplo, que el evento ocurra el primer lunes de cada mes. Los eventos tendrán el permiso que defina el usuario que lo crea, estos permisos definirán si puede ser modificado o eliminado por alguno de los participantes, si es un evento privado, si cualquier contacto puede modificarlo o si únicamente puede ser editado por el usuario que lo creó. También se le puede asignar un color a un evento, 42 Figura 3.8: Vista de creación de citas para que pueda ser identificado mas rápidamente en el calendario una vez creado. (Ver figura 3.9). Imprimir calendario Se puede imprimir cualquier vista del calendario que requiera el usuario con tan solo seleccionar el botón Imprimir del módulo. Automáticamente aparece la ventana de configuración de impresión del navegador que se esté utilizando. 3.3.6. Módulo de tareas Este módulo permite crear una lista de tareas. Las tareas se pueden agregar o eliminar de la lista. Es posible que el usuario vea su propia lista de tareas y también ver la lista de otros usuarios. Si una tarea se completó sólo se debe marcar el recuadro de selección al lado de cada tarea y el sistema la mostrará como terminada. De esta manera podemos estar al tanto de qué tareas quedan pendientes. 43 Figura 3.9: Vista de resumen de citas Las tareas también pueden ser vistas desde el calendario de eventos y citas. 3.3.7. Módulo de archivos Este módulo permite subir archivos en ĺınea y de esta forma poder accederlos desde cualquier lugar o ser compartidos con otros usuarios. Los archivos, al igual que los correos serán mostrados en una estructura de árbol. (Ver figura ??) Este módulo permite las siguientes tareas: Navegación: Navegar por la estructura del árbol del sistema, recorriendo todas las carpetas y archivos disponibles. Crear carpetas: Para colocar los archivos en carpetas separadas, sólo se debe seleccionar la opción de nueva carpeta y luego ingresar el nombre con el que se identificará. También se puede navegar la estructura de árbol y aśı crear subcarpetas, de ser necesario. Subir archivos: El usuario debe seleccionar la carpeta donde desea subir los archivos y luego seleccionar la opción Subir Archivo. Aparecerá una ventana que permite navegar por los archivos del disco duro del computador del usuario. 44 Figura 3.10: Vista del módulo de archivos El usuario puede subir hasta cinco archivos, los cuales deben tener un tamaño limitado, por defecto el tamaño máximo es de 5MB, pero este parámetro puede ser configurado por el administrador del sistema. Copiar y mover: Se podrán copiar y mover archivos o carpetas de un lugar a otro, cuando el usuario lo considere necesario para organizar los datos que tiene almacenados en el sistema. El usuario puede utilizar los botones de copiar y cortar según sea su interés y luego usar el botón pegar para concretar la tarea. Búsqueda: Una vez creada la estructura de archivos, el usuario puede necesitar localizar rápidamente un archivo según su nombre o fecha de actualización, para ello cuenta con la herramienta de búsqueda del módulo. Compartir carpetas con otros usuarios: Los usuarios pueden compartir carpetas entre ellos, para ello se deben definir permisos sobre las carpetas, a fin de garantizar el acceso debido de otros usuarios. Editor de texto: Desde cualquier lugar, el usuario podrá redactar un documento y subirlo al sistema de archivos en ĺınea. 45 3.3.8. Administrador La cuenta del administrador es usada para llevar a cabo las siguientes actividades: Agregar y editar cuentas de usuario. Agregar o editar grupos de usuarios. Instalar/Eliminar módulos. Crear elementos que serán comunes a varios usuarios, como una libreta de direcciones globales, una cita o evento que debe aparecer en varios calendarios o un mensaje entrante para varios usuarios. 3.3.9. Desarrollador Group-Office tiene un amplio conjunto de caracteŕısticas, pero debido al crecimiento natural de las organizaciones llega el momento en el que es necesario incluir nuevas funcionalidades al sistema para adaptarlo mejor a las necesidades actuales de la empresa. Group-Office cuenta con una amplia documentación para que el desarrollador pueda crear nuevos módulos en el sistema, la cual se puede encontrar en el foro oficial de la aplicación2. El desarrollador sólo necesita contar con la interfaz de ĺınea de comandos de PHP, un sistema de versionamiento, un editor de texto y un cliente de Base de Datos. Para asegurar que el trabajo del desarrollador siga una estructura unificada y estándar, también existe información sobre la codificación de las directrices de la interfaz gráfica de usuario en los manuales de referencia. 3.3.10. Situación actual Después de un año y medio de desarrollo y pruebas, Group-Office libera su versión 3.0 estable, el 24 de noviembre de 2008. La versión anterior era evidente que necesitaba ser modernizada. Se agregaron nuevas técnicas Web para hacerla más amena al usuario y está listo para ser utilizado como una plataforma profesional. La 2http://www.group-office.com/forum/ 46 interfaz fue completamente rediseñada y ahora se asemeja más a una aplicación de escritorio. Además de ser agradable para la vista y las mejoras de usabilidad realizadas, se hicieron adaptaciones a la base de datos para usar la extensión mejorada MySQLi para mayor seguridad. Los datos se env́ıan a la Base de Datos a través de una conexión segura, protegiéndola de ataques a bajo nivel, por lo que se dificulta al desarrollador poco experimentado escribir consultas inseguras cuando se utiliza el entorno de trabajo de Group-Office. 3.4. Programación Extrema La programación extrema es un enfoque de desarrollo de aplicaciones que se basa en un conjunto de valores, principios y prácticas esenciales. Las variables controladas por el equipo de desarrollo son el tiempo, el alcance, la calidad y el costo. Al integrarse de manera apropiada estas cuatro variables, se crea un estado equilibrado entre todas las actividades y recursos requeridos para terminar el proyecto. Las actividades en el modelo de programación extrema consisten en escuchar, diseñar, codificar y probar. La actividad de escuchar al cliente es fundamental para determinar el horizonte de la aplicación. El diseño de un sistema estético y funcional al cual pueda brindársele soporte es de vital importancia. La codificación, pruebas de funcionalidad y desempeño son obligatorias. Las ventajas del modelo de desarrollo XP recaen en el hecho, que al tener la retroalimentación de la utilización del sistema por parte de los usuarios, se pueden estimar estas cuatro variables, de manera de equilibrar los resultados del proyecto. Como ejemplo, si el analista de sistemas determina y cuantifica el alcance, la calidad y el tiempo para culminar el proyecto, puede estimar el costo. Si el proyecto se encuentra retrasado se puede invertir en la contratación de más personal aumentando el costo del mismo. También si se estiman la duración del proyecto, el costo y la calidad del mismo, puede determinarse el alcance. Por lo tanto, la programación extrema utiliza ciclos de retroalimentación a intervalos finitos y determinados al comienzo del desarrollo del sistema. 47 La administración de estos proyectos de manera sistematizada y organizada es importante, por cuanto al definir el plan global de desarrollo, se permitirá que un conjunto de programadores, analistas y diseñadores trabajen independientemente integrando su trabajo de manera constante, logrando resultados sólidos, estables y mantenibles a lo largo del tiempo. 3.4.1. Valores y principios de la programación extrema En la programación extrema es importante que se establezcan los valores y principios permitan establecer el contexto para la colaboración y retroalimentación entre los programadores y usuarios finales. La programación extrema es una metodoloǵıa disciplinada, a diferencia de lo que pudiera entenderse por la definición de programación extrema. Esta se basa en cuatro valores fundamentales: Comunicación: Este método de desarrollo de software establece que debe hacerse énfasis en que la comunicación entre todos y cada uno de los participantes del proyecto sea libre y sincera. Simplicidad: Siempre debe tomarse en cuenta que el objetivo de un proyecto es proporcionar un valor al cliente, sin tener en cuenta la pericia del equipo de desarrollo o que éstos resuelvan más problemas de los que el cliente quiere resolver. Retroalimentación: Todo desarrollo de software debe basarse en la retroalimentación sobre su progreso. Esta retroalimentación puede partir del cliente, programadores o herramientas de desarrollo. Coraje o valent́ıa: En la programación extrema se debe tener valor al tomar las decisiones, como por ejemplo, seguir desarrollando una aplicación o sistema que ha llegado a su ĺımite de escalabilidad. Estos valores deben estar fundamentados en cinco principios básicos, los cuales son el conseguir una retroalimentación rápida, no complicar los planes de trabajo con presunciones (asumir que las soluciones son simples), realización de cambios incrementales, realizar productos de calidad y abrazar los nuevos cambios, es decir, no tomar como premisa que los cambios pueden traer malas consecuencias. 48 3.4.2. Prácticas de la programación extrema Estos principios se manifiestan a través de las doce prácticas de la programación extrema, que definen lo que el equipo de trabajo realizará d́ıa a d́ıa. Estas prácticas están caracterizadas por la cohesión de todos sus elementos y que cada una de ellas se trata de llevar a sus extremos. Planificación: Esta práctica busca dividir las funcionalidades de un proyecto en pequeños fragmentos denominados historias de usuario. Tanto el cliente como los desarrolladores determinan la duración de cada una de estas historias, qué historias y cuáles son más importantes que otras, tomando como premisa que siempre debe empezarse el desarrollo del proyecto por las más importantes. Entregas frecuentes: Busca publicar una nueva versión del sistema en cuanto sea posible aportar algún nuevo valor al cliente, de esta forma se maximiza la retroalimentación y se controla de manera más espećıfica y granular el proyecto. Simplicidad: El sistema debe ser lo mas simple y sencillo posible, siempre y cuando cumpla las especificaciones del usuario (pruebas de aceptación). En un contexto donde las prioridades y requerimientos cambian constantemente, no tiene sentido realizar complejos y sofisticados diseños que contemplen posibles requerimientos a futuro. La mejor manera de obtener un conjunto de requerimientos, es el proporcionar lo antes posible un prototipo al cliente y obtener retroalimentación; y la manera mas sencilla de obtener un modelo sencillo que funcione, es el recurrir a los patrones de diseño. Pruebas automáticas: ¿Cómo puede conocer un desarrollador que el código que escribió realmente funciona?, ¿Cómo puede saber que seguirá funcionando siempre?, la única forma de asegurarlo con cierta confianza, es programando pruebas automáticas con las que se pueda comprobar el código en cualquier momento sin esfuerzo. Estas pruebas no pueden ser dejadas para el final, sino que deben programarse en conjunto con el sistema. Integración permanente y continua: Debe llevarse al extremo una práctica convencional de la ingenieŕıa del software. Si el proceso de integración es una fase crucial donde pueden ocurrir errores con alta probabilidad, ¿Por qué dejarla para el final, cuando existe un mayor riesgo de falla?. Es más productivo realizar la integración de las aplicaciones o historias desarrolladas de manera continua (cada hora, cada d́ıa). Para poder lograr ésto, es importante que exista 49 algún mecanismo que permita automatizar el proceso de integración y pueda verificarse mediante pruebas. Refactorización: La refactorización es un proceso que permite modificar el diseño de un módulo sin alterar su comportamiento externo. Debido a ésto, es posible compatibilizar diseños simples con flexibilidad. Programación en parejas: Consiste en llevar al extremo una práctica habitual. Si validar y verificar el código es bueno, ¿Por qué no hacerlo continuamente desde que se escribe por primera vez? La programación en parejas consiste en compartir un único computador y colaborar para escribir el código o las pruebas. De esta manera, se estimula la comunicación y la transmisión de conocimiento, permite detectar errores con antelación y producir código de más calidad. Propiedad colectiva del código: Al efectuarse una refactorización de código, o al corregir errores en la aplicación, algún programador tendrá que hacer los cambios, en donde las ĺıneas de código a modificar, no necesariamente debieron haber sido escritas por el mismo. La metodoloǵıa XP invita a efectuar estas modificaciones con valor y decisión ya que esta práctica permite que los distintos programadores estén en contacto con todo el código en todo momento. Semanas de 40 horas: Los desarrolladores agotados son propensos a cometer errores por accidente. Si las semanas son de más de 40 horas se tiende a presionar a los desarrolladores. El cliente es parte del equipo: Para lograr una retroalimentación ágil, el cliente no debe estar alejado del equipo; en una situación ideal, el cliente debe estar dentro del equipo. De esta manera se puede colaborar con los desarrolladores para escribir las pruebas de aceptación. Metáforas: El objetivo de esta práctica es conseguir una metáfora que le permita tanto al cliente como al equipo de desarrollo hablar en los mismos términos, teniendo una visión común del sistema. Estándares de codificación: Utilizar estándares de codificación es un requisito y una necesidad básica al escribir código que será léıdo por otros desarrolladores. Esta comprende aspectos de documentación y formateado del código, que permita que éste pueda ser entendido y modificado con facilidad. 50 Caṕıtulo 4 Metodoloǵıa de Desarrollo Al realizar la investigación sobre la metodoloǵıa de desarrollo de software a utilizar, para la implantación y adecuación del sistema colaborativo en cuestión, se decidió el uso de la Programación Extrema (Extreme Programming - XP) (propuesta de Kent Beck y Ward Cunningham, que se empleó por primera vez en el año de 1996, en la Daimler Chrysler R©.), la cual propone como premisa primordial la simplicidad en la utilización de información de retorno, y en la adaptación del proyecto a medida que se desarrolla, siguiendo mecanismos evolutivos. Esta metodoloǵıa es óptima en grupos de desarrollo pequeños. 4.1. Análisis de Requerimientos y Diagnóstico 4.1.1. Requerimientos Generales Esta plataforma de software colaborativo debe poseer módulos que permitan integrar todas las funcionalidades básicas del webmail actual de la Facultad de Ciencias, como correo electrónico, tareas, calendario, manejo de carpetas y notas, pero mejorando su presentación hacia el usuario, enriqueciéndolas con la tecnoloǵıa AJAX y haciéndolas mas fáciles de comprender y manejar, para lograr aśı que los usuarios la utilicen como complemento de sus actividades cotidianas, tanto de tipo académico y administrativo. Adicionalmente, esta plataforma debe poseer todas las herramientas orientadas a integrar y desarrollar módulos que se adecuen a los requerimientos de las escuelas o departamentos de la Facultad de Ciencias, siguiendo unos lineamientos de interfaz 51 y desarrollo de software. 4.1.2. Requerimientos Funcionales Los requerimientos funcionales de la plataforma están determinados por los componentes o módulos que la integraran: Diseñar un módulo de soporte técnico con el cual el personal administrativo y docente de la Facultad de Ciencias podrá realizar solicitudes de soporte técnico al Centro de Computación para ser atendidas por el personal dedicado a esa actividad. Diseñar el módulo de administración soporte técnico del Centro de Computación, con la finalidad que el personal administrativo y los pasantes dedicados a esta actividad puedan monitorear las solicitudes de soporte que realizan los docentes y personal administrativo de la Facultad de Ciencias. Asimismo, el administrador podrá distribuir las tareas pendientes entre en personal y aśı medir tiempos de respuesta y rendimiento de los empleados. Diseñar un módulo para el olvido de contraseña, que le permita los usuarios establecer una nueva contraseña en el caso de que la contraseña anterior sea olvidada o extraviada. El mecanismo consistirá en enviar una contraseña provisional al correo alternativo proporcionado por el usuario. Diseñar un módulo para establecer el reenv́ıo automático de los correos electrónicos a otras cuentas de correo que el usuario determine, para los casos del personal que utiliza otras cuentas de correo con más frecuencia que la institucional. Diseñar un módulo para acceder al sistema de Reservación de Salas que se encuentra actualmente en producción. Este módulo debe permitir a los usuarios acceder al Sistema de Reservación de Salas según los perfiles definidos para cada usuario. De esta forma sólo se autenticarán en la plataforma y podrán acceder a los sistemas que hayan sido integrados a ella. Diseñar un módulo de mensajeŕıa instantánea para que los docentes y personal administrativo de la Facultad de Ciencias puedan comunicarse, agregando a los usuarios por su correo institucional, el cual pueden obtener del directorio de la aplicación. Adicionalmente, podrán cambiar su estado de conexión y crear salas de chat para que varios usuarios puedan comunicarse a la vez. 52 Diseñar un módulo de foros que le facilite a los usuarios crear tópicos sobre diversos temas, permitiendo que otros usuarios escriban sus opiniones al respecto. De tal forma que tanto los temas como las respuestas, opiniones y comentarios sean publicados y estén al alcance de toda la comunidad de la Facultad de Ciencias. 4.1.3. Requerimientos No Funcionales Las tecnoloǵıas seleccionadas para la implementación del sistema permitirán fijar requerimientos adicionales para darle valor agregado al producto final. La idea es ofrecer un sistema que pueda ser de fácil uso, robusto y escalable. Para esto se pueden fijar los siguientes requerimientos no funcionales: Proporcionar soporte multi-plataforma. Ofrecer un sistema Web soportado por múltiples navegadores. Propiciar los mecanismos adecuados para que el sistema pueda ser escalable. Efectuar los cambios necesarios al servicio de directorio de la Facultad de Ciencias, de modo que éste pueda soportar a todos lo usuarios de la Facultad (personal docente, administrativo y estudiantes), bajo un mismo dominio sin nombres de usuario duplicados. 4.2. Metáfora del Sistema Partiendo de la instalación y configuración del servidor y de la instalación y configuración de la plataforma de GroupOffice, se procederá a implementar algunas funcionalidades que se encuentran en el webmail de La Facultad de Ciencias, como por ejemplo la opción de cambio de contraseña y reenvio automático de correos, con la finalidad de satisfacer las necesidades de los usuarios, para lograr que, con la utilización de la plataforma, estos puedan complementar sus actividades académicas y administrativas. Entre las necesidades de lo usuarios podemos identificar: Contar actualmente con un mecanismo para manejar el olvido o extrav́ıo de la contraseña para acceder a la plataforma y que de esta forma los usuarios no se vean obligados a dirigirse al Centro de Computación para solicitar una contraseña nueva. 53 Inexistencia de filtros para los correos entrantes que puedan adaptarse a las exigencias del usuario. La necesidad de establecer grupos de trabajo, para enviar correos, compartir eventos, tener acceso restringido a algunos sistemas y compartir tareas. No tener al alcance todas las aplicaciones de La Facultad de Ciencias en un mismo entorno y accesibles con un único usuario y contraseña. La necesidad de mantener una imagen institucional, con lineamientos de interfaz de usuario y lineamientos de desarrollo de software. En la tabla 4.1, 4.2, 4.3 y 4.4 se muestran los cuadros con la planificación de las iteraciones: Iteración Meta Fecha Inicio Fecha Fin Duración 0 Instalación, configuración, y adecuación de la plataforma GroupOffice. 30/03/2009 03/04/2009 5 d́ıas. 1 Implementación de cambio de contraseña, olvido de contraseña y reenv́ıo automático de correos electrónicos. 06/04/2009 10/04/2009 5 d́ıas. Cuadro 4.1: Planificación de las iteraciones I 54 2 Realización del script para la migración del directorio de la Facultad de Ciencias y realización de la traducción al español de los mensajes de la plataforma. 13/04/2009 17/04/2009 5 d́ıas. 3 Desarrollo del módulo de soporte técnico del Centro de Computación. 20/04/2009 24/04/2009 5 d́ıas. 4 Desarrollo del módulo de administración de soportes técnicos del Centro de Computación e instalación del sistema de mensajeŕıa instantánea como módulo de la plataforma. 27/04/2009 01/05/2009 5 d́ıas. Cuadro 4.2: Planificación de las iteraciones II 55 5 Depuración del módulo de administración de soportes técnicos del Centro de Computación e instalación del sistema de Reservación de Salas del Centro de Computación como módulo de la plataforma. 04/05/2009 08/05/2009 5 d́ıas. 6 Adecuación de la interfaz del módulo de mensajeŕıa instantánea. 11/05/2009 15/05/2009 5 d́ıas. 7 Implementación de mecanismos que permitan optimizar la aplicación y asegurar el acceso a la misma. 18/05/2009 22/05/2009 5 d́ıas. Cuadro 4.3: Planificación de las iteraciones III 56 8 Depuración de la traducción al español de los mensajes de la plataforma y corrección de la semántica de los mensajes que ya estaban en español. 25/05/2009 29/05/2009 5 d́ıas. 9 Instalación del foro PHPBB3 como módulo de la plataforma. 01/06/2009 05/06/2009 5 d́ıas. 10 Pruebas de aceptación e integración 08/06/2009 12/06/2009 5 d́ıas. Cuadro 4.4: Planificación de las iteraciones IV 4.3. Iteraciones Las iteraciones representan intervalos de tiempo en los que se fijan responsabilidades y tareas para los integrantes del grupo de trabajo, mas es espećıfico para los desarrolladores del proyecto. Durante el transcurso de cada iteración, se deben implementar las funcionalidades, módulos, modificaciones o configuraciones que sean necesarias para cumplir con las tareas establecidas. Para este trabajo se definieron iteraciones con una duración de 5 d́ıas (40 horas), lo cual permite cumplir con las prácticas de la programación extrema presentando entregas frecuentes y sencillas sin presionar al equipo de trabajo, como se define en el caṕıtulo 4.1.2. 4.4. Actividades Para la definición de las actividades de este trabajo, se tomaron en consideración los siguientes lineamientos: Planificar tomando en cuenta el tiempo, el alcance y la calidad. Decidir cuántas caracteŕısticas o funcionalidades incorporar en cada iteración. Dar prioridad a ciertas iteraciones. 57 Designar responsabilidades. Balancear el riesgo y escoger la duración de las iteraciones. Decidir qué hacer cuando no se cumplieron los objetivos de una iteración en el tiempo previsto. Para el desarrollo de este trabajo se consideró necesario demarcarlo en iteraciones. De esta manera, el desarrollo se mantiene en concordancia con los principios y valores que definen la metodoloǵıa XP, a los fines de distinguir claramente las fases del proyecto y el producto de software logrado en cada etapa. Se procederá a realizar una descripción de las prácticas del modelo de desarrollo XP más resaltantes al momento de desarrollar el proyecto descritas en el presente caṕıtulo. Planificación: esta actividad es de suma importancia porque permite identificar las necesidades y proporciona propuestas para solucionar problemas y cubrir las necesidades de los usuarios. Diseño: esta actividad podŕıa implicar la elaboración de diagramas de procesos, despliegue o cualquier otro tipo de diagrama o modelo sencillo que ayude a comprender mejor el sistema a medida que se concibe. Codificación: esta actividad contemplará la implementación de código PHP, JavaScript y CSS, para modificar funcionalidades existentes y adecuarlas mejor a los requerimientos de los usuarios o para desarrollar nuevos módulos y funcionalidades. Pruebas: en esta actividad se pueden incorporar pruebas funcionales para comprobar que el comportamiento de los módulos es el esperado. También se incorporarán las pruebas unitarias y de integración que puedan ser importantes para mejorar los módulos y la relación entre ellos. Es importante destacar, que se contemplarán iteraciones que no implementen las cuatro actividades antes descritas, debido a que no serán requeridas o podrán adoptarse otras actividades como investigación, refactorización, etc. 58 4.5. Desarrollo 4.5.1. Iteración 0 Del 30-Mar-2009 al 4-Abr-2009 En ésta iteración se instaló, configuró y adecuó la plataforma de software colaborativo Group Office. Planificación Para esta iteración se definió la meta Instalación, configuración, y adecuación de la plataforma Group-Office. Los objetivos fijados para esta iteración incluyen: Instalar Group Office en el servidor. Configurar la plataforma Group Office. Configurar el mecanismo de autenticación para los usuarios. Hacer pruebas y adaptar la interfaz de usuario de la plataforma. Diseño Para ésta etapa se instaló el servidor web y el servidor de base de datos según las caracteŕısticas y requerimientos de Group Office, definidos en el caṕıtulo 3.3. Luego se instaló la plataforma Group Office y se configuró el mecanismo de acceso para los usuarios del sistema. Una vez terminada la configuración se modificó la interfaz del sistema para darle una imagen institucional, agregando logos y mensajes alusivos a la Facultad de Ciencias. Codificación Procedimiento para la instalación del servidor El siguiente comando incluye la instalación de PHP 5, Apache 2, MySQL 5, PERL, Postfix y otras libreŕıas necesarias, definidas como requerimientos en el asistente de instalación. Ejecutar el siguiente comando para instalar los requerimientos de la plataforma: 59 # aptitude install apache2 php5 postfix tnef zip unzip mysql-server-5.0 phpmyadmin libwbxml2-0 libwbxml2-0-dbg libwbxml2-dev libwbxml2-utils php5-imap php5-ldap php-net-ldap Procedimiento para la instalación de Group-Office • Descargar la última versión estable de Group Office de la página de SourceForge. 1 • Descomprimir el archivo descargado de la página en una ruta accesible por el servidor web. # cd /var/www # tar -xvzf groupoffice-com-3.01-stable-2.tar.gz # mv groupoffice-3.04-stable-2 ciensnet • Crear el directorio donde se almacenan los archivos protegidos de los usuarios de la aplicación. # mkdir /home/ciensnet # chown www-data:www-data /home/ciensnet • Crear el directorio para los archivos públicos de la aplicación. # mkdir /var/www/ciensnet/local # chown www-data:www-data /var/www/ciensnet /local • Crear el archivo de configuración. # touch /var/www/ciensnet/config.php • Ejecutar el asistente de instalación de la plataforma. http://<host>/<carpeta>/install/ Siga el asistente y al mostrarse la interfaz de administración de base de datos, seleccione la opción Crear Base de Datos y cree la base de datos con el nombre ciensnet, se configurarán únicamente los datos de la base de datos, el usuario y la clave de acceso requeridos, aśı como los datos regionales como páıs, moneda y uso horario. En la siguiente figura 4.1, se muestra la primera vista del asistente de instalación de la plataforma, en caso que los requerimientos para la instalación se cumplan, se habilitará la opción de avanzar en el proceso de instalación. 1http://sourceforge.net/ 60 Figura 4.1: Vista del asistente de instalación I En la siguiente figura 4.2, se muestra el proceso de creación del archivo de configuración principal. En la siguiente figura 4.3, se muestra un conjunto de archivos de configuración que deben ser creados para el correcto funcionamiento de la plataforma. Luego de culminar este asistente, se creará por defecto la cuenta admin, esta será la cuenta de administración general del sistema, la contraseña de esta cuenta al instalar el sistema será admin. En este momento se encuentra instalada la plataforma base del sistema colaborativo, ahora se procederá a configurar el mecanismo alterno de autenticación, basándose en la autenticación v́ıa el protocolo IMAP. Contenido del archivo de configuración del módulo de autenticación v́ıa IMAP (imapauth.config.php). 1 $con f i g [ ] = 2 array ( 3 ’ proto ’ => ’ imap ’ , 4 ’ domains ’ => ’ c i e n s . ucv . ve ’ , 5 ’ host ’ => ’ s t r i x . c i e n s . ucv . ve ’ , 6 ’ port ’ => ’ 143 ’ , 7 ’ s s l ’ => f a l s e , 8 ’ nova l i da t e c e r t ’ => f a l s e , 9 ’mbroot ’ => ’INBOX’ , 10 ’ remove domain from username ’ => true , 61 Figura 4.2: Vista del asistente de instalación II 11 ’ c r ea t e ema i l a ccount ’ => true , 12 ’ groups ’ => array ( ’ In te rna l ’ ) , 13 ’ v i s i b l e g r oup s ’ => array ( ’ Everyone ’ , ’ In t e rna l ’ , ’ Todos ’ ) , 14 ’ modules read ’ => 15 array ( ’ email ’ , ’ f i l e s ’ , ’ addressbook ’ , ’ ca lendar ’ , ’ tasks ’ , ’ summary ’ , ’ soporte ’ ) , 16 ’ modules write ’ => array ( ) , 17 ’ smtp host ’=>’ s t r i x . c i e n s . ucv . ve ’ , 18 ’ smtp port ’= > ’25 ’ , 19 ’ smtp encryption ’= > ’ ’ , 20 ’ smtp username ’= > ’ ’ , 21 ’ smtp password ’= > ’ ’ , 22 ’ ldap use emai l as imap username ’=> f a l s e 23 ) ; 24 ?> Si se requiere que los usuarios tengan cargados determinados módulos al iniciar sesión por primera vez, debe modificarse la siguiente variable del archivo config.php: 1 $con f i g [ ’ r e g i s t e r modu l e s wr i t e ’ ]= ’ email , ca lendar , addressbook , summary , notes ’ ; Donde los nombres de los módulos deben estar separados por comas. Se debe restringir el registro de nuevos usuarios a la aplicación, ya que estos serán autenticados mediante el servidor de correo. Debe modificar la siguiente variable del archivo config.php: 1 $con f i g [ ’ a l l ow r e g i s t r a t i o n ’ ]= f a l s e ; 62 Figura 4.3: Vista del asistente de instalación III Pruebas Las pruebas realizadas para verificar la veracidad y consistencia de los cambios realizados, fue la de iniciar sesión en la plataforma colaborativa, luego de configurar el módulo para la autenticación de los usuarios del servicio de correo, se procedió a ingresar al sistema con una cuenta de correo institucional válida, al iniciar sesión por primera vez el sistema le solicita al usuario un conjunto de datos para crear las preferencias básicas. 4.5.2. Iteración 1 Del 06-Abr-2009 al 10-Abr-2009 En ésta iteración se diseñaron y desarrollaron los módulos para permitir el cambio y olvido de contraseña; aśı como también para el reenv́ıo automático de correos electrónicos. Planificación Para ésta iteración se definió la meta Implementación del mecanismo de cambio y olvido de contraseña; aśı como también para el reenv́ıo automático de correos electrónicos. Los objetivos fijados para esta iteración incluyen: Modificar el módulo de cambio de contraseñas ubicado en la sección de opciones del usuario en la esquina superior derecha de la aplicación. 63 Modificar la opción de olvido de contraseña ubicada en la esquina inferior derecha de la ventana de inicio de sesión. Diseñar e implementar el módulo de reenv́ıo automático de correos electrónicos el cual se integrara a la sección de opciones del usuario. Hacer pruebas de funcionamiento. Diseño Se modificó el módulo de cambio de contraseña, ya que inicialmente estaba diseñado para modificar la contraseña que se encuentra almacena en la base de datos ciensnet, pero en el caso de esta aplicación los usuarios se autentican contra el servidor de correo electrónico, por los que los cambios de contraseña deben quedar almacenados en el directorio LDAP directamente, o de lo contrario cuando un usuario se autentique desde otro cliente de correo, la contraseña seguirá siendo la que estaba almacenada en el LDAP y no la que actualizo desde la plataforma. En la figura 4.4, se muestra una vista del módulo de cambio de contraseña. Figura 4.4: Vista del módulo de cambio de contraseña. Se modificó el módulo de olvido de contraseña que estaba implementado en la plataforma. Ahora el usuario podrá presionar el botón ¿olvidaste tu contraseña? e ingresar su correo institucional y aśı el sistema le enviará una clave provisional a su dirección correo electrónico alternativo. En la figura 4.5, se muestra una vista del mecanismo de olvido de contraseña. 64 Figura 4.5: Vista de olvido de clave de acceso. Se diseñó e implementó el módulo de reenv́ıo automático de correos electrónicos, con el que los usuarios podrán desviar los correos que reciben en su cuenta institucional hacia otra u otras cuentas de correo que posean. El usuario solo debe ingresar la o las cuentas donde desee recibir sus correos e indicar si el mecanismo está o no activado, también tendrá la opción de guardar una copia local de todos los correos recibidos en su cuenta institucional. En la figura 4.6, se muestra una vista del módulo de reenvio de correos. Figura 4.6: Vista del módulo de reenvio de contraseñas. Codificación Procedimiento para modificar el módulo de cambio de contraseña Debe modificarse el archivo classes/base/users.class.inc.php 1 65 2 /∗∗ 3 ∗ Esta func i ón modi f i ca e l password de l usuar io en e l s e r v i do r ldap 4 ∗ Se n e c e s i t a e l paquete php−ldap 5 ∗ @access pub l i c 6 ∗ @param in t $u s e r i d debe s e r s o l o e l id de usuar io . Ejm : l u i s . perez 7 ∗ @param s t r i n g $user password s o l o e l password 8 ∗ @return bool True on succ e s s 9 ∗/ 10 11 func t i on update password ldap ( $use r id , $user password ){ 12 g l oba l $GO EVENTS, $GO CONFIG; 13 $u s e r i d=”uid=”. $u s e r i d . ” , ” . $GO CONFIG−>ldap base dn ; 14 $ l dap s e rv e r=$GO CONFIG−>l d a p s e r v e r i p ; 15 $ ldap admin user=$GO CONFIG−>ldap admin user ; 16 $ldap admin password=$GO CONFIG−>ldap admin password ; 17 $ldapconn = ldap connect ( $ l dap s e rv e r ) ; 18 l d ap s e t op t i on ( $ldapconn , LDAP OPT PROTOCOL VERSION, 3 ) ; 19 i f ( $ldapconn ) { 20 $ldapbind = ldap bind ( $ldapconn , $ldap admin user , $ldap admin password ) ; 21 i f ( $ldapbind ) { 22 $at r ibuto [ ’ userPassword ’ ] = ”{ crypt }” . crypt ( $user password ) ; 23 i f ( $u s e r i d !=” uid=admin ” . ” , ” .$GO CONFIG−>ldap base dn ){ 24 ldap modi fy ( $ldapconn , $use r id , $a t r ibuto ) ; 25 } 26 return true ; 27 } e l s e { 28 return f a l s e ; 29 } 30 } 31 return f a l s e ; 32 } Procedimiento para modificar el módulo de olvido de contraseña Debe modificarse el archivo classes/base/users.class.inc.php 1 /∗∗ 2 ∗Esta func ion obt i ene e l co r r eo a l t e r n a t i v o de l usuar io en e l s e r v i do r ldap 3 ∗@access pub l i c 4 ∗ @param in t $u s e r i d must be j u s t the id o f the user Example : l u i s . perez 5 ∗ @return bool True on succ e s s 6 ∗/ 7 8 func t i on g e t a l t e r n a t i v e ma i l l d a p ( $u s e r i d ){ 9 g l oba l $GO EVENTS, $GO CONFIG; 10 $u s e r i d=”uid=”. $u s e r i d ; 11 $ f i l t r o =”( $u s e r i d ) ” ; 12 $base=$GO CONFIG−>ldap base dn ; 13 $ l dap s e rv e r=$GO CONFIG−>l d a p s e r v e r i p ; 14 $ ldap admin user=$GO CONFIG−>ldap admin user ; 15 $ldap admin password=$GO CONFIG−>ldap admin password ; 16 $ldapconn = ldap connect ( $ l dap s e rv e r ) ; 17 l d ap s e t op t i on ( $ldapconn , LDAP OPT PROTOCOL VERSION, 3 ) ; 18 19 i f ( $ldapconn ) { 20 $ldapbind = ldap bind ( $ldapconn , $ldap admin user , $ldap admin password ) ; 21 i f ( $ldapbind ) { 22 $re s = ldap sea r ch ( $ldapconn , $base , $ f i l t r o , array (” a l t e r n a t i v o ” ) ) ; 23 $ r e su l t ado = l d a p g e t e n t r i e s ( $ldapconn , $ r e s ) ; 24 return $r e su l t ado [ 0 ] [ ” a l t e r n a t i v o ” ] ; 25 } e l s e { 26 return f a l s e ; 27 } 28 } 29 return f a l s e ; 30 } Procedimiento para implementar el módulo de reenv́ıo automático de correos electrónicos 66 Se modificó el archivo Settings.js del módulo de Correo ubicado en /modules/email/Settings.js. En éste archivo se creó la vista donde el usuario podrá ingresar los direcciones de correo hacia donde se realizara el reenv́ıo y podrá actualizar las opciones de activación y almacenamiento local. El método creado para cumplir con este requerimiento se incluyo en el archivo /classes/base/config.class.inc.php 1 func t i on s e t a l i a s ( ){ 2 $co r r eo s = $ POST [ ’ forward ’ ] ; 3 $ac t ivo = $ POST [ ’ act ive ’ ] ; 4 $copy = $ POST [ ’ copy ’ ] ; 5 6 i f ( $ac t ivo == true ){ 7 $va lor1 = 1 ; 8 } e l s e { 9 $va lor1 = 0 ; 10 } 11 12 i f ( $copy == true ){ 13 $co r r eo s = $ SESSION [ ’GO SESSION ’ ] [ ’ email ’ ] . ’ , ’ . $ co r r eo s ; 14 $va lor2 = 1 ; 15 } e l s e { 16 $va lor2 = 0 ; 17 } 18 19 trim ( $co r r eo s ) ; 20 21 $sq l2 = ”SELECT ∗ FROM em al i a s WHERE id u s e r = ’”.$ SESSION [ ’GO SESSION ’ ] [ ’ u s e r id ’ ] . ” ’ ” ; 22 $th i s−>db−>query ( $ sq l2 ) ; 23 24 i f ( $th i s−>db−>next r e co rd ( ) ){ 25 $ sq l = ”UPDATE em a l i a s SET reenv io = ’”. $ co r r eo s . ” ’ , a c t i vo = ’”. $va lor1 . ” ’ , 26 copia = ’”. $va lor2 . ” ’ WHERE id u s e r = ’”.$ SESSION [ ’GO SESSION ’ ] [ ’ u s e r id ’ ] . ” ’ ” ; 27 $th i s−>db−>query ( $ sq l ) ; 28 $ SESSION [ ’GO SESSION ’ ] [ ’ reenvio ’ ] = $co r r eo s ; 29 $ SESSION [ ’GO SESSION ’ ] [ ’ act ivo ’ ] = s t r v a l ( $va lor1 ) ; 30 $ SESSION [ ’GO SESSION ’ ] [ ’ copia ’ ] = s t r v a l ( $va lor2 ) ; 31 return true ; 32 } e l s e { 33 $sq l3 = ”INSERT INTO em al i a s ( id use r , address , reenvio , act ivo , copia ) VALUES 34 ( ’ ” . $ SESSION [ ’GO SESSION ’ ] [ ’ u s e r id ’ ] . ” ’ , ’ ” . $ SESSION [ ’GO SESSION ’ ] [ ’ email ’ ] . 35 ” ’ , ’ ” . $ co r r eo s . ” ’ , ’ ” . $va lor1 . ” ’ , ’ ” . $va lor2 . ” ’ ) ” ; 36 $th i s−>db−>query ( $ sq l3 ) ; 37 $ SESSION [ ’GO SESSION ’ ] [ ’ reenvio ’ ] = $co r r eo s ; 38 $ SESSION [ ’GO SESSION ’ ] [ ’ act ivo ’ ] = s t r v a l ( $va lor1 ) ; 39 $ SESSION [ ’GO SESSION ’ ] [ ’ copia ’ ] = s t r v a l ( $va lor2 ) ; 40 return true ; 41 } 42 return f a l s e ; 43 } La llamada a esta función se hace en el archivo /modules/email/classes/email.class.inc.php: 1 pub l i c s t a t i c func t i on s a v e s e t t i n g s ( ){ 2 g l oba l $GO MODULES, $GO CONFIG, $GO SECURITY; 3 i f ($GO MODULES−>has module ( ’ email ’ ) ){ 4 $GO CONFIG−>s e t a l i a s ( ) ; 5 } 6 } 67 Pruebas Las pruebas realizadas para verificar el correcto funcionamiento de los métodos creados y modificados, fueron: Ingresar a la opción de olvido de contraseña, ingresar el correo del usuario y luego verificando que con la clave que se envió al correo alternativo realmente se puede iniciar sesión tanto en la plataforma como en el webmail que esta actualmente en producción. Ingresar a la opción de cambio de contraseña llenar los campos para modificar la contraseña actual y luego verificar que con la nueva contraseña se puede ingresar tanto a la plataforma como al webmail que se encuentra actualmente e producción. Ingresar a la opción de reenv́ıo automático e ingresar una o varias cuentas de correos electrónicos alternativos que posea el usuario y activar esta funcionalidad, luego se enviaron correos a la cuenta institucional y se verificó que los correos enviados llegaron a los correos definidos para el reenv́ıo 4.5.3. Iteración 2 Del 13-Abr-2009 al 17-Abr-2009 En esta iteración se creo un script que permite migrar el directorio de la Facultad de Ciencias a la base de la intranet y se inicio el proceso de traducción de los mensajes a español y corrección de la semántica de los mensajes que ya estaban traducidos. Planificación Para esta iteración se definió la meta Realización del script para la migración del directorio de la Facultad de Ciencias y realización de la traducción al español de los mensajes de la plataforma.. Los objetivos fijados para esta iteración incluyen: Crear el script de migración de los registros del directorio de la Facultad de Ciencias. Iniciar el proceso de traducción y corrección de los mensajes de la aplicación. Hacer pruebas de funcionamiento. 68 Diseño El la base de datos del directorio se almacenan los datos de todo el personal docente y administrativo de la Facultad de Ciencias por lo que para incluir esta información en la intranet es necesario crear un script que extraiga todos los registros de la base de datos del directorio y los inserte en la base de datos de la intranet, de esta forma cada usuario podrá visualizar la información de los integrantes de la comunidad. La plataforma de Group Office puede cambiarse a varios idiomas, incluyendo el español, pero ya que la misma de encuentra en desarrollo hay mensajes que no han sido depuraros, existiendo casos donde lo mensajes están mal redactados, su información no corresponde con su funcionalidad o simplemente se encuentran en otro idioma que no es el español, porque previamente nadie los hab́ıa traducido. Codificación Procedimiento para crear el script de migración 1 2 #!/ usr /bin /php 3 <?php 4 $conexion = mysql connect (” i p d i r e c t o r i o ” ,” u s u a r i o d i r e c t o r i o ” ,” c l a v e d i r e c t o r i o ”) 5 or d i e (”No se pudo ”) ; 6 mysq l s e l e c t db (” bdd i r e c t o r i o ”) or d i e (”No se puede s e l e c c i o n a r BD”) ; 7 8 $ sq l=mysql query (”SELECT ∗ FROM usuar io ”) ; 9 10 $conexion2 = mysql connect (” i p i n t r an e t ” ,” u sua r i o i n t r an e t ” ,” c l a v e i n t r an e t ”) 11 or d i e (”No se pudo ”) ; 12 mysq l s e l e c t db (” bd intranet ”) or d i e (”No se puede s e l e c c i o n a r BD”) ; 13 14 mysql query (”DELETE FROM ab contac t s WHERE addres sbook id =14” , $conexion2 ) ; 15 16 whi le ( $row=mysq l f e t ch a r ray ( $ sq l ) ) { 17 mysql query (”INSERT INTO ab contac t s ( u s e r id , addressbook id , source id , 18 f i r s t name , middle name , last name , sex , email , email2 , company id , department , 19 funct ion , home phone , fax , address , address no ) 20 va lues ( 1 , 1 4 , 0 , ’ ” . e r e g r e p l a c e ( ”<NULL>”, ”” , $row [ ’ nombre1 ’ ] ) . ” ’ , ’ ” . e r e g r e p l a c e 21 ( ”<NULL>”, ”” , $row [ ’ nombre2 ’ ] ) . ” ’ , ’ ” . e r e g r e p l a c e ( ”<NULL>”, ”” , $row [ ’ ape l l i do1 ’ ] ) 22 . ” ” . e r e g r e p l a c e ( ”<NULL>”, ”” , $row [ ’ ape l l i do2 ’ ] ) . ” ’ , ’M’ , ’ ” . e r e g r e p l a c e ( ”<NULL>”, ”” , 23 $row [ ’ correoNuevo ’ ] ) . ” ’ , ’ ” . e r e g r e p l a c e ( ”<NULL>”, ”” , $row [ ’ c o r r eoa l t ’ ] ) . ” ’ , 2 , ’ ” . 24 e r e g r e p l a c e ( ”<NULL>”, ”” , $row [ ’ dependencia ’ ] ) . ” ’ , ’ ” . e r e g r e p l a c e ( ”<NULL>”, ”” , 25 $row [ ’ cargo ’ ] ) . ” ’ , ’ ” . e r e g r e p l a c e ( ”<NULL>”, ”” , $row [ ’ t e l e f ono ’ ] ) . ” ’ , ’ ” . e r e g r e p l a c e 26 ( ”<NULL>”, ”” , $row [ ’ fax ’ ] ) . ” ’ , ’ ” . e r e g r e p l a c e ( ”<NULL>”, ”” , $row [ ’ ubicac ion ’ ] ) 27 . ” ’ , ’ ’ ) ” , $conexion2 ) ; 28 } 29 mysq l c l o s e ( $conexion ) ; 30 mysq l c l o s e ( $conexion2 ) ; 31 ?> Procedimiento para iniciar la traducción y corrección de los mensajes Se revisan todos los archivos de idioma que contiene la traducción al español de cada módulo ubicados en /lenguage/es.js 69 Pruebas Las pruebas realizadas para verificar que lo datos del directorio se migraron correctamente fue ingresar al módulo de Directorio y probar que los datos de los docentes y personal administrativos de cargaron con éxito, navegado por los distintos enlaces. En la figura 4.7, se puede observar el módulo de Directorio con los registros correspondientes al directorio de la Facultad de Ciencias. Figura 4.7: Vista del módulo de directorio. 4.5.4. Iteración 3 Del 20-Abr-2009 al 24-Abr-2009 En esta iteración se desarrollo del módulo de soporte técnico del Centro de Computación para la plataforma de software colaborativo. Planificación Para esta iteración se definió la actividad desarrollo del módulo de soporte técnico del Centro de Computación para la plataforma de software colaborativo. Los objetivos fijados para esta iteración incluyen: Desarrollar un sistema que le permita a los usuarios del sistema realizar solicitudes de soporte técnico. Implementar un diseño de interfaz que le permita al usuario ver es estado de los soportes que ha solicitado en cualquier momento. Diseño En esta etapa, para realizar el desarrollo de este módulo se procedió a diseñar un modelo de casos de uso sencillo, que permitiera realizar las actividades las actividades 70 descritas anteriormente. A continuación se describe el procedimento para creación de nuevos módulos. Inicio: El primer paso es configurar la plataforma GroupOffice en modo de corrección de errores, modificando el archivo config.php, para que no se utilizen los archivos generados por el compresor de YUI: $config[’debug’] = true; Debe crearse la carpeta donde se almacenará el módulo a desarrollar, en la ruta ciensnet/modules/<NuevoModulo>. El nombre de la carpeta no debe tener caracteres especiales. En esta nueva carpeta debe crearse una subcarpeta que contendrá todas las clases del módulo ciensnet/modules/<NuevoModulo>/classes. Crear un Módulo Vacio: El primer paso será crear el panel principal del módulo. El archivo que contendrá el panel principal, debe crearse en la ruta ciensnet/modules/NuevoModulo/MainPanel.js 1 /∗MainPanel . j s :∗/ 2 3 Ext . namespace ( ’GO. nuevomodulo ’ ) ; 4 5 /∗Constructor our MainPanel∗/ 6 7 GO. nuevomodulo . MainPanel = func t i on ( c on f i g ){ 8 9 i f ( ! c on f i g ){ 10 con f i g = {} ; 11 } 12 13 con f i g . html=’Hola Mundo ’ ; 14 15 /∗Llamada a l cons t ruc to r ∗/ 16 17 GO. nuevomodulo . MainPanel . s up e r c l a s s . c ons t ruc to r . c a l l ( th i s , c on f i g ) ; 18 19 } 20 21 /∗Extensi ón de l a c l a s e p r i n c i p a l ∗/ 22 23 Ext . extend (GO. nuevomodulo . MainPanel , Ext . Panel ,{ 24 25 } ) ; 26 27 /∗ Esto agregar á e l módulo a l a l i s t a de tabs p r i n c i p a l e s ∗/ 28 29 GO. moduleManager . addModule ( ’ nuevomodulo ’ , GO. nuevomodulo . MainPanel , { 30 t i t l e : ’Nuevo Modulo ’ , 31 i conCls : ’ go−module−icon−nuevomodulo ’ 32 } ) ; Debe indicarsele a GroupOffice que debe incluir este panel cada vez que el 71 módulo se cargue. Para que GroupOffice sepa que scripts debe incluir, se debe crear un archivo llamado scripts.txt en la ruta ciensnet/modules/<NuevoModulo>/scripts.txt. scripts.txt: modules/NuevoModulo/MainPanel.js Si no se incluyen los nombres de los scripts el módulo no funcionara correctamente. Instalación del Módulo: En GroupOffice, ir al menú de Administración, ingresar a la opción Módulos e instalar el nuevo módulo. Ahora puede observarse un módulo sencillo que contiene un panel vacio, el siguiente paso es desarrollar el cuerpo del módulo, que dependerá de la funcionalidad que se desee implementar, se recomienda consultar los siguientes enlaces: 1. Group-Office PHP API documentation - http://www.group-office.com/phpdoc/. 2. ExtJS 2.2 API documentation - http://www.extjs.com/deploy/dev/docs/. 3. ExtJS learing center - http://extjs.com/learn/. Codificación A continuación se mostrará el diagrama de casos de uso, junto a su descripción. En la figura 4.8, se muestra el diagrama de casos de uso del sistema implementado. Especificación de los casos de uso descritos anteriormente. Primer caso de uso • Nombre: 1. Agregar soporte. • Descripción: Permite realizar una nueva solicitud de soporte. • Actores: Usuario. • Precondición: Ninguna. 72 Figura 4.8: Casos de uso sistema de soporte. • Flujo Normal: ◦ 1. El usuario hace clic sobre el botón Agregar. ◦ 2. Llena los datos del formulario (ubicación, teléfono y descripción). ◦ 3. El sistema comprueba no queden campos vaćıos en el formulario. • Flujo Alternativo: ◦ 1. El sistema comprueba que no exista ningún campo vaćıo en el formulario, si existen campos vaćıos, se muestra un mensaje con el error para darle oportunidad al usuario de llenar estos campos. • Postcondición: Ninguna. Segundo caso de uso • Nombre: 2. Visualizar soportes. • Descripción: Permite visualizar la información referente a la solicitud de soporte (descripción, ubicación, teléfono, fecha de solicitud, responsable, fecha de procesamiento, estado, observación). • Actores: Usuario. • Precondición: Haber realizado algún soporte. • Flujo Normal: 73 ◦ 1. El usuario accede al módulo de soporte. ◦ 2. Inmediatamente tiene la vista con las descripciones de sus solicitudes de soporte. • Flujo Alternativo: Ninguna. • Postcondición: Ninguna. Pruebas Las pruebas realizadas para verificar la veracidad y consistencia del desarrollo de este módulo fue iniciando sesión en el sistema y realizando varias solicitudes de soporte. En la figura 4.9, se muestra el sistema de soporte técnico. Figura 4.9: Vista del módulo de soporte técnico 4.5.5. Iteración 4 Del 27-Abr-2009 al 01-May-2009 En esta iteración se desarrolló el módulo de Administración de Soporte Técnico y el módulo de Mensajeŕıa Instantánea. Planificación Para esta iteración se definió la meta Desarrollo del módulo de administración de soportes técnicos del Centro de Computación e instalación del sistema de mensajeŕıa 74 instantánea como módulo de la plataforma. Los objetivos fijados para esta iteración incluyen: Diseñar y desarrollar el módulo de Administración de Soporte Técnico. Integrar el sistema de Mensajeŕıa Instantánea a la plataforma. Hacer pruebas de funcionamiento. Diseño Para desarrollar el módulo de CiensTalk se integro a la plataforma la aplicación Ajaxim que es un cliente de mensajeŕıa instantánea basado en Ajax, PHP y MySQL. La finalidad de la integración de esta aplicación es la de que todos los usuarios de la plataforma puedan comunicarse entre si, enviando mensajes a un usuarios en particular o creando salas de chat para que puedan hablar varios usuarios a la vez. También, se desarrolló el módulo de administración del sistema de soportes del Centro de Computación. Este módulo permitirá gestionar y administrar todas las solicitudes por parte de los usuarios del sistema. A continuación se mostrará el diagrama de casos de uso, junto a su descripción. En la figura 4.10 y 4.11, se muestran los diagramas de casos de uso del sistema implementado. Figura 4.10: Casos de uso sistema de soporte 0. Especificación de los casos de uso descritos anteriormente. 75 Figura 4.11: Casos de uso sistema de soporte 1. Caso de uso 1 • Nombre: 1. Agregar soporte. • Descripción: Permite agregar una nueva solicitud de soporte al sistema. • Actores: Usuario, Coordinador. • Precondición: Ninguna. • Flujo Normal: ◦ 1. El actor pulsa el botón Agregar. ◦ 2. Llena los datos del formulario (Ubicación, teléfono, descripción). ◦ 3. El sistema comprueba que los campos del formulario no estén vaćıos. ◦ 4. El actor pulsa el botón Aceptar • Flujo Alternativo: ◦ 1. El sistema comprueba la validez de los datos, si los datos no son correctos, se muestra un mensaje con el error para darle oportunidad al actor de modificar los datos erróneos. • Postcondición: Ninguna. 76 Caso de uso 2 • Nombre: 2. Visualizar Soportes Asignados. • Descripción: Permite visualizar la información de un soporte sin importar a quien ha sido asignado. • Actores: Usuario, Coordinador. • Precondición: Ninguna. • Flujo Normal: ◦ 1. El actor hace doble click sobre el soporte que desea visualizar. ◦ 2. El sistema despliega una ventana con la información del soporte seleccionado. • Flujo Alternativo: Ninguno. • Postcondición: Ninguna. Caso de uso 3 • Nombre: 3. Visualizar Soporte del Usuario. • Descripción: Permite visualizar la información de los soportes del usuario. • Actores: Usuario, Coordinador. • Precondición: Ninguna. • Flujo Normal: ◦ 1. El actor hace doble click sobre el soporte que desea visualizar. ◦ 2. El sistema despliega una ventana con la información del soporte seleccionado. ◦ 3. El sistema comprueba que los campos del formulario no estén vaćıos. ◦ 4. El actor pulsa el botón Aceptar • Flujo Alternativo: Ninguno. • Postcondición: Ninguna. Caso de uso 4 • Nombre: 4. Visualizar Soportes sin Asignar. 77 • Descripción: Permite visualizar los soportes que no han sido asignados a ningún usuario. • Actores: Usuario, Coordinador. • Precondición: Ninguna. • Flujo Normal: ◦ 1. El actor hace doble click sobre el soporte que desea visualizar. ◦ 2. El sistema despliega una ventana con la información del soporte seleccionado. • Flujo Alternativo: Ninguno. • Postcondición: Ninguna. Caso de uso 5 • Nombre: 5. Generar Estad́ısticas. • Descripción: Permite generar un pdf con estad́ısticas que reflejan la cantidad de soportes pendientes, en proceso y atendidos, además permite observar que porcentaje de los soportes atiente cada administrador. • Actores: Usuario, Coordinador. • Precondición: Ninguna. • Flujo Normal: ◦ 1. El actor pulsa el botón Estad́ısticas. ◦ 2. EL actor llena el formulario indicando el periodo de las estad́ısticas (fecha de iniciación y fecha de finalización). ◦ 3. El actor pulsa el botón Generar. • Flujo Alternativo: Ninguno. • Postcondición: Ninguna. Caso de uso 6 • Nombre: 6. Visualizar Bitácora. • Descripción: Permite visualizar todos los soportes que se están en estado culminado. • Actores: Usuario, Coordinador. 78 • Precondición: Ninguna. • Flujo Normal: ◦ 1. El actor pulsa el botón Bitácora. ◦ 2. Automáticamente se muestran todos los soportes que han culminado, con su descripción, responsable y fecha. • Flujo Alternativo: Ninguno. • Postcondición: Ninguna. Caso de uso 7 • Nombre: 7. Asignar un Soporte al Usuario. • Descripción: Permite que un usuario se asigne un soporte a si mismo. • Actores: Usuario, Coordinador. • Precondición: Ninguna. • Flujo Normal: ◦ 1. El actor hace doble click sobre el soporte que se desea asignar de la lista Solicitudes por Atender. ◦ 2. Automáticamente se muestran la información del soporte y un checkbox que el usuario debe tildar si desea asignar el soporte a su lista Mi Soportes. ◦ 3. El actor para finalizar debe pulsar el botón Aceptar. • Flujo Alternativo: Ninguno. • Postcondición: Ninguna. Caso de uso 8 • Nombre: 8. Asignar un Soporte a otro Usuario. • Descripción: Permite que el coordinador le asigne soportes a otros usuarios del sistema. • Actores: Coordinador. • Precondición: Ninguna. • Flujo Normal: ◦ 1. El actor debe pulsar el botón derecho del mouse sobre el soporte que desea asignar. 79 ◦ 2. El actor debe pulsar la opción llamada Asignar a un Administrador Distinto. ◦ 3. Automáticamente se muestran una lista con todos los posibles usuarios a los que puede asignar el soporte y un campo para ingresar un comentario privado. ◦ 4. El actor para finalizar debe pulsar el Aceptar. • Flujo Alternativo: Ninguno. • Postcondición: Ninguna. Caso de uso 9 • Nombre: 9. Reasignar Soporte. • Descripción: Permite que el coordinador le asigne soportes a otros usuarios del sistema que ya estaban asignados a otros usuarios. • Actores: Coordinador. • Precondición: Ninguna. • Flujo Normal: ◦ 1. El actor debe pulsar el botón derecho del mouse sobre el soporte que desea reasignar. ◦ 2. El actor debe pulsar la opción llamada Asignar a un Administrador Distinto. ◦ 3. Automáticamente se muestran una lista con todos los posibles usuarios a los que puede reasignar el soporte y un campo para ingresar un comentario privado. ◦ 4. El actor para finalizar debe pulsar el Aceptar. • Flujo Alternativo: Ninguno. • Postcondición: Ninguna. Codificación Sistema de mensajeŕıa instantanea • Procedimiento para integrar el módulo de mensajeŕıa instantánea: ◦ Se debe descargar la aplicación de Ajaxim de la página oficial de AjaxIM 2. 2http://www.ajaxim.com 80 ◦ Descomprimir el paquete descargado en la ubicación /modules/cienstalk. ◦ Modificar la aplicación para que inicie sesión con el usuario que esta autenticado en la plataforma, para ello se utilizaron las variables de sesión de la plataforma en la página /modules/cienstalk/ajaxim/index.php. Sistema de administraćıon de soportes Para comenzar a probar el sistema de administración de soportes, se habilito para el personal cuyas funciones están relacionadas al área el acceso a la aplicación permitiendo que desde esta aplicación puedan gestionar los soportes generados desde la página de la Facultad. Para que a los usuarios regulares de la Facultad, les resultara transparente esta primera fase de la migración, se diseño una página provisional exactamente igual a la de la de la Facultad de Ciencias, que automáticamente hiciera la inserción del soporte en el nuevo sistema. En la figura 4.12, se muestra la vista donde los usuarios regularmente hacen las solicitudes de soporte, ésta, se encuentra alojada en el servidor donde fué instalada la plataforma de software, de tal manera que los usuarios puedan seguir realizando sus solicitudes de manera transparente. Figura 4.12: Vista página de integración 81 Pruebas Para probar que el módulo de Mensajeŕıa Instantánea estaba correctamente integrado, se inicio sesión con varia cuentas de usuarios, se verificó que todos tuvieran acceso al módulo, cada usuarios agrego contactos clasificándolos en lista según sus preferencias y se procedió a probar que el env́ıo de mensajes funcionara. Esta prueba dio resultados satisfactorios los usuraos estaban en la capacidad de iniciar y cerrar sesión, enviar mensajes, crear grupos, crear salas de chat, editar su perfil, bloquear contactos y cambiar el estado en que se encuentran en determinado momento. El sistema de Administración de Soporte Técnico fue puesto en producción a partir de la fecha 04/05/09, todas las observaciones por parte del personal de soporte técnico fueron procesadas y puestas en uso en próximas iteraciones. 4.5.6. Iteración 5 Del 04-May-2009 al 08-May-2009 En ésta iteración se hicieron modificaciones al módulo de Administración de Soporte Técnico, según las exigencias del personal de soporte técnico del Centro de Computación, además se integró el módulo de Reservación de Salas como un módulo de la intranet. Planificación Para esta iteración se definió la meta Depuración del módulo de Administración de Soporte Técnico del Centro de Computación e instalación del sistema de Reservación de Salas del Centro de Computación como módulo de la plataforma. Los objetivos fijados para esta iteración incluyen: Modificar el módulo de Administración de Soporte Técnico. Integrar el sistema de Reservación de Sala a la intranet. Hacer pruebas de funcionamiento. Diseño El módulo de Administración de Soporte Técnico se puso a prueba por el personal del Centro de Computación dedicado a esas actividades, y a medida que lo iban 82 utilizando surǵıan nuevos requerimiento. Para satisfacer estos requerimientos fue necesario agregar nuevas funcionalidades o modificar las que ya exist́ıan. Entre las nuevas caracteŕısticas estaban: Poder asignar a otros usuarios los soportes que ya estaban asignados, esto debido a que hay casos en los que un empleado no puede culminar su tarea por falta de tiempo o conocimiento y es necesario que la tarea la termine otro integrante del grupo. Poder ver la bitácora de todos los soportes culminados. Permitir que el administrador del área de soporte técnico le asigne soportes a otros administradores, ya que esta persona es la que coordina al personal de soporte del Centro de Computación. Visualizar la información de cualquier soporte al hacer doble click sobre el. Modificar la información de los soportes asignados a otros administradores. Para logra integrar la aplicación de Reservación de Salas se pensó en tener la pagina en un frame dentro del módulo, de ésta forma se puede acceder a la aplicación siendo referenciada o encapsulada en otra. Codificación Procedimiento para integrar el sistema de Reservación de Salas • Se crea el módulo de Salas. • Se crea el archivo MainPanel.js en el que se define el frame que va a almacenar la aplicación: 1 GO. moduleManager . addModule ( ’ r e s e rvac ion ’ , GO. panel . IFrameComponent , { 2 t i t l e : ’ Salas ’ , 3 u r l :GO. s e t t i n g s . modules . r e s e r va c i on . u r l +’ r e d i r e c t . php ’ , 4 border : f a l s e 5 } ) ; • Se crea el archivo redirect.php en el que se encuentra el código que realiza la redirección a la aplicación y se autentica en ella según el perfil que tenga el usuarios. • Se modifico el archivo config.php para incluir la url de la aplicación de reservación de salas: $config[’salas’]=’http://w3.ciens.ucv.ve/cal’; 83 • Archivo redirect.php: 1 <?php 2 3 r equ i r e ( ’ . . / . . / Group−Of f i c e . php ’ ) ; 4 $ tmp f i l e = $GO CONFIG−>tmpdir . ’ / ’ .md5( uniq id ( time ( ) ) ) . ’ txt ’ ; 5 f i l e p u t c o n t e n t s ( $ tmp f i l e , $GO SECURITY−>u s e r i d ) ; 6 i f ( empty ($GO CONFIG−>s a l a s ) ){ 7 ex i t ( ’ Error : Debe con f i gu r a r $GO CONFIG−>s a l a s en e l arch ivo con f i g . php ’ ) ; 8 } 9 10 $ur l = $GO CONFIG−>s a l a s ; 11 $usuar io = $ SESSION [ ’GO SESSION ’ ] [ ’ username ’ ] ; 12 $ l i s t = explode ( ”@” , $usuar io ) ; 13 $usuar io = $ l i s t [ 0 ] ; 14 15 $con = mysql connect (” i p r e s e r v a c i on ” ,” u sua r i o r e s e r va c i on ” ,” c l a v e r e s e r v a c i on ” ) ; 16 i f ( ! $con ){ 17 d i e ( ’ Ocurrio un e r r o r : ’ . mysq l e r ro r ( ) ) ; 18 } 19 20 mysq l s e l e c t db (” bdre se rvac ion ” , $con ) ; 21 22 $ r e s u l t = mysql query (”SELECT ∗ FROM ca l a c count s WHERE user = ’”. $usuar io . ” ’ ” , $con ) ; 23 $var = 0 ; 24 $ f i n a l = ”” ; 25 $rows=mysql num rows ( $ r e s u l t ) ; 26 27 i f ( $rows > 0) { 28 $var = 1 ; 29 } 30 31 mysq l c l o s e ( $con ) ; 32 33 i f ( $var == 1){ 34 $ f i n a l = ’? usergo = ’. $usuar io ; 35 } e l s e { 36 i f ( $usuar io==”admin”){ 37 $ f i n a l = ’? usergo=root ’ ; 38 } e l s e { 39 $ f i n a l = ’? usergo=none ’ ; 40 } 41 } 42 43 header ( ’ Locat ion : ’ . $u r l . $ f i n a l ) ; 44 ?> Pruebas Las pruebas realizadas para verificar los cambios en el módulo de Administración de Soporte Técnico fueron realizadas por el personal de soporte del Centro de Computación como parte de sus actividades normales. Para verificar que se integro correctamente el sistema de Reservación de Sala a la intranet, se autenticaron en el sistema usuario con diferentes perfiles en la aplicación para comprobar que teńıan acceso solo a las funcionalidades que le corresponden según sus privilegios. En la figura 4.13 se puede observar la vista del sistema de reservación de salas desde la cuenta de un administrador que se autenticó desde la intranet. Se puede observar en el menú, en la parte derecha de la aplicación todas las 84 Figura 4.13: Vista sistema de salas funcionalidades que le corresponden a un administrador de sala. 4.5.7. Iteración 6 Del 11-May-2009 al 15-May-2009 En ésta iteración se creo un nuevo estilo para la interfaz del módulo de mensajeŕıa instantánea para darle una imagen similar a la de la plataforma. Planificación Para esta iteración se definió la meta Adecuación de la interfaz del módulo de mensajeŕıa instantánea. Los objetivos fijados para esta iteración incluyen: Modificar el estilo de la interfaz del módulo de Mensajeŕıa Instantánea. Diseño El módulo de Mensajeŕıa Instantánea que fue integrado en la iteración 4, teńıa un estilo que no era acorde con los lineamientos de interfaz definidos para la intranet. Para modificar este estilo se modificaron los colores, los botones y se crearon nuevas imágenes. 85 Codificación Para adaptar la interfaz de modificaron lo archivos ubicados en la carpeta theme se crearon las nuevas imágenes para reemplazar las existentes y se edito el archivo style.css para modificar los colores. 86 En la figura 4.14 se puede observar el menú de opciones del módulo de Mensajeŕıa Instantánea antes de establecer el nuevo estilo. Figura 4.14: Vista estilo AjaxIM 87 En la figura 4.15 se puede observar el menú de opciones del módulo de Mensajeŕıa Instantánea luego de crear el nuevo estilo. Se crearon las imágenes de los botones de opciones en la parte superior, se creo el botón de cerrar sesión que esta ubicado en la esquina inferior derecha y se modificaron los colores de todas las ventanas del sistema. Figura 4.15: Vista estilo del cliente de mensajeria Ciensnet 88 En la figura 4.16 se puede observar una ventana de conversación antes de modificar los estilos. Figura 4.16: Vista estilo ventana de conversacion AjaxIM En la figura 4.17 se puede observar una ventana de conversación luego de haber modificado los estilos. Figura 4.17: Vista estilo ventana de conversacion Ciensnet Los cambios en los estilos de verán reflejados en todas las ventanas de las diferentes opciones del sistema. 89 4.5.8. Iteración 7 Del 18-May-2009 al 22-May-2009 En ésta iteración se busca definir e implementar un conjunto de poĺıticas y mecanismos que permitar optimizar el funcionamiento de la plataforma implantada y definir un conjunto de póliticas y mecanismos para asegurar el servicio prestado. Planificación Para ésta iteración se definió la meta Implementación de mecanismos que permitan optimizar la aplicación y asegurar el acceso a la misma. Los objetivos fijados para esta iteración incluyen: Definir mecanismos que permitan mejorar el desempeño de la solución implantada. Definir un conjunto de poĺıticas y mecanismos que permitan garantizar la seguridad del acceso a los servicios. Diseño Desde la aparición de las interfases de usuario enriquecidas y desarrolladas con tecnoloǵıas del lado del cliente, son muchos los sitios web y los desarrolladores que han adoptando la utilización de JavaScript en sus proyectos. Uno de los problemas con los que se han enfrentado estos sistemas, es la velocidad con la que los archivos que viajan al cliente, si estos archivos aumentan de tamaño, el tiempo de respuesta hacia el cliente será mayor, implicando una desmejora en la capacidad de respuesta de la aplicación al momento de su carga. Existen distintos mecanismos que permiten mitigar estos tiempos de respuesta. Optimización de código utilizando la interfaz de usuario de Yahoo: El desarrollador Julien Lecomte desarrollo una herramienta que trata de comprimir los archivos JavaScript. Esta se trata de una aplicación que interpreta el código fuente usando Rhino para eliminar los comentarios, y caracteres de separación, luego reemplaza los nombres de las variables por 90 otros más cortos. Tiene una serie de limitaciones, como el que es lento al generar el código comprimido, por lo que no puede ser usado para la compresión en tiempo real en caliente. Extracto del manual del compresor de Yahoo. 1 2 $ java −j a r yuicompressor−x . y . z . j a r 3 Usage : java −j a r yuicompressor−x . y . z . j a r [ opt ions ] [ input f i l e ] 4 5 Global Options 6 −h , −−help Disp lays t h i s in format ion 7 −−type < j s | css> Sp e c i f i e s the type o f the input f i l e 8 −−char s e t <charset> Read the input f i l e us ing <charset> 9 −−l i n e−break <column> I n s e r t a l i n e break a f t e r the s p e c i f i e d column number 10 −v , −−verbose Display in f o rmat i ona l messages and warnings 11 −o < f i l e > Place the output in to < f i l e >. De fau l t s to stdout . 12 13 JavaScr ipt Options 14 −−nomunge Minify only , do not ob fuscate 15 −−preserve−semi Preserve a l l s emico lons 16 −−d i sab l e−opt im i za t i on s Disab le a l l micro opt im i za t i on s 17 18 GLOBAL OPTIONS 19 20 −h , −−help 21 Pr int s help on how to use the YUI Compressor 22 23 −−l i n e−break 24 Some source con t r o l t o o l s don ’ t l i k e f i l e s conta in ing l i n e s l onge r than , 25 say 8000 cha ra c t e r s . The l i n eb r eak opt ion i s used in that case to s p l i t 26 long l i n e s a f t e r a s p e c i f i c column . I t can a l s o be used to make the code 27 more readable , e a s i e r to debug ( e s p e c i a l l y with the MS Sc r ip t Debugger ) 28 Spec i f y 0 to get a l i n e break a f t e r each semi−co lon in JavaScr ipt , and 29 a f t e r each ru l e in CSS . 30 31 −−type j s | c s s 32 The type o f compressor ( JavaScr ipt or CSS) i s chosen based on the 33 extens ion o f the input f i l e name ( . j s or . c s s ) This opt ion i s r equ i r ed 34 i f no input f i l e has been s p e c i f i e d . Otherwise , t h i s opt ion i s only 35 requ i r ed i f the input f i l e extens ion i s n e i t h e r ’ j s ’ nor ’ css ’ . 36 37 −−char s e t character−s e t 38 I f a supported charac t e r s e t i s s p e c i f i e d , the YUI Compressor w i l l use i t 39 to read the input f i l e . Otherwise , i t w i l l assume that the platform ’ s 40 de f au l t charac t e r s e t i s being used . The output f i l e i s encoded us ing 41 the same charac t e r s e t . 42 43 −o o u t f i l e 44 Place output in f i l e o u t f i l e . I f not s p e c i f i e d , the YUI Compressor w i l l 45 d e f au l t to the standard output , which you can r e d i r e c t to a f i l e . 46 47 −v , −−verbose 48 Display in f o rmat i ona l messages and warnings . 49 50 JAVASCRIPT ONLY OPTIONS 51 52 −−nomunge 53 Minify only . Do not ob fuscate l o c a l symbols . 54 55 −−preserve−semi 56 Preserve unnecessary semico lons ( such as r i gh t be f o r e a ’} ’ ) This opt ion 57 i s u s e f u l when compressed code has to be run through JSLint ( which i s the 58 case o f YUI f o r example ) 59 60 −−d i sab l e−opt im i za t i on s 61 Disab le a l l the bu i l t−in micro opt im i za t i on s . 62 63 Note : I f no input f i l e i s s p e c i f i e d , i t d e f a u l t s to s td in . 91 64 65 The f o l l ow ing command l i n e (x . y . z r ep r e s en t s the ve r s i on number ) : 66 67 java −j a r yuicompressor−x . y . z . j a r myf i l e . j s −o myf i le−min . j s 68 69 w i l l mini fy the f i l e my f i l e . j s and output the f i l e myf i le−min . j s . For more 70 in format ion on how to use the YUI Compressor , p l e a s e r e f e r to the documentation 71 inc luded in the arch ive . Apache mod deflate: El módulo de Apache mod deflate permite al servidor entregar los archivos comprimidos en tiempo real al navegador web. La activación de este módulo suele utilizarse para mejorar el rendimiento al transferir información al cliente. Este módulo por defecto utiliza compresión gzip (GNU ZIP). Apache mod cache: Cuando el servidor web comprime el código en tiempo real, para responder las peticiones, puede generarse una sobrecarga sobre la utilización del procesador, ya que se requiere del procesamiento adicional de las respuestas antes de despacharlas. Como solución a este problema surje el módulo de apache mod cache, este esta conformado por tres sub módulos principales. El mod file cache es el menos flexible de los tres. Permite almacenar en cache archivos en especifico en disco o memoria, pero si modificamos alguno de dichos archivos sólo podremos conseguir que Apache sirva la versión actualizada reiniciando el servidor. El mod mem cache nos permite almacenar en memoria principal archivos que pertenezcan a la cache del servidor web. El mod disk cache va almacenando en un directorio los documentos que se van solicitando, aśı como sus cabeceras. Si el módulo mod deflate está activo y hay clientes que acepten compresión y otros que no, se cacheará el documento comprimido y sin comprimir. Adicionalmente se definieron un conjunto de medidas para garantizar el correcto acceso a la información Poĺıticas de seguridad f́ısica. 92 • El dispositivo de cómputo debe estar ubicado en un ambiente de acceso restringido con acceso exclusivo del personal que labore en dichas instalaciones. • Registrar el acceso del personal a las instalaciones donde se encuentren ubicados los dispositivos de comunicación y cómputo. De manera tal que si existiera algún incidente pudiese existir una posterior revisión sobre los accesos a las instalaciones. • Poseer controles para la minimización de potenciales riegos como lo son el hurto o robo de equipos de la dependencia, inundaciones, filtraciones, interferencia en la disponibilidad de los servicios por faltas en el suministro de enerǵıa eléctrica, entre otros. • Prohibición de cualquier tipo de bebidas y alimentos en los recintos donde se encuentren los dispositivos. • Destinar sistemas de refrigeración de uso particular para las instalaciones donde se encuentren los dispositivos de cómputo; y garantizar que la disponibilidad de los mismos sea alta. Poĺıticas de seguridad lógica. • Mantener tanto el sistema operativo como los paquetes de los equipos de cómputo actualizado, con las últimas revisiones de seguridad disponibles. Las actualizaciones cŕıticas para los sistemas en producción, deben ser verificadas antes de ser implementadas, de tal manera de garantizar que los nuevos cambios no afectaran la disponibilidad del servicio. • Configurar el entorno de producción de manera segura, es decir implementar las mejores prácticas propuestas por la documentación de los servicios instalados. Esto incluye deshabilitar cuentas, claves y usuarios por defecto; otorgar el acceso al sistema solo a usuarios autorizados y con privilegios mı́nimos que le permitan solo cumplir con sus funciones, establecer poĺıticas para utilizar las cuentas de usuario criticas, controlar la vigencia de los accesos otorgados a los usuarios y asegurar o garantizar la posibilidad de identificar a todos los usuarios a través de sus cuentas (consistencia de la información almacenada en el gecos). • Definir el uso de contraseñas fuertes y el control de acceso a toda la información del sistema. 93 • Registrar las actividades de los usuarios en bitácoras, que permitan sin comprometer la privacidad del mismo registrar posibles incidentes de seguridad • Utilizar conexiones seguras siempre que se requiera la transmisión de datos cŕıticos, por ejemplo contraseñas de usuarios, entre otras. Se recomienda la utilización de protocolos seguros como SSH, HTTPS, SFTP. • Localizar los servidores en segmentos de red espećıficos, separados de las redes donde se encuentren los usuarios. • Utilizar servicios que permitan detectar ataques de fuerza bruta contra el servidor independientemente del servicio que se este ofreciendo (fail2ban) • Definir reglas de firewall espećıficas por servidor, de tal manera que el tráfico dirigido a servicios que no se estén prestando sea descartado. • Enviar las bitácoras de los servicios de manera periódica al administrador del sistema, de manera que se encuentre enterado del estado del mismo. (Espacio disponible, correos enviados, estad́ısticas de usuarios bloqueados, entre otros) Pruebas Estad́ısticas del módulo de compresión de Apache Peticiones procesadas, incluyendo respuestas no comprimidas. (formatos no comprimidos jpg, png, etc.) • Número de peticiones: 110996 (100 %) • Original: 333982102 Bytes • Tamaño final de las respuestas: 133618949 Bytes (41 %) • Ahorro: 200363153 Bytes (59 %) Peticiones procesadas, solo respuestas comprimidas • Número de peticiones: 95108 (85 %) • Original: 296874341 Bytes • Tamaño final de las respuestas: 96511188 Bytes (33 %) • Ahorro: 200363153 Bytes (67 %) 94 Para ambas estad́ısticas, la primera ĺınea muestra el número total de peticiones almacenadas en los logs del sistema, la segunda ĺınea muestra la cantidad de datos que hubieran sido enviados si no se utilizara el módulo de compresión, la tercera ĺınea muestra la cantidad de datos que realmente fueron enviados, la cuarta ĺınea muestra el tráfico ahorrado por utilizar el módulo de compresión. En promedio existe un ahorrro del 67 % para el tráfico generado desde el d́ıa 25 de junio de 2009 hasta el 6 de julio de 2009. Las siguientes estad́ısticas muestran las pruebas realizadas con la aplicación YSlow 3. Esta es una extensión para el navegador Mozilla Firefox la cual tiene como función analizar el desempeño de las aplicaciones web. Está permite obtener información sobre el rendimiento de las aplicaciones web, muestra un resumen de las peticiones HTTP y en tiempo real puede observarse el Modelo de Objetos del Dominio (Document Object Model - DOM). YSlow analiza el sitio y genera una calificación para cada regla definida. Si la página tiene aspectos mejorables, la extensión ofrece una lista de sugerencias con los cambios y calcula el tamaño total de la página. En la figura 4.18, se muestra la vista de la aplicación donde se califica a Ciensnet. Figura 4.18: Calificación del sitio Ciensnet usando YSlow 3http://developer.yahoo.com/yslow/ 95 Puede observarse en la figura que la aplicación es calificada con una puntuación de 83/100 puntos y catalogada como un sitio clase B. En la figura 4.19, se muestra el gráfico que describe el tamaño total en Bytes necesarios para la carga del sistema, estos 479.3KB permiten determinar una cota al momento de cargar el sitio al cliente, es decir si la velocidad neta de descarga es de 25KBps es necesario un tiempo de 19.172 segs. para poder descargar todos los archivos asociados al sitio, adicional a este tiempo debe agregarse el tiempo de procesamiento del computador (el tiempo que necesita el navegador para renderizar la plataforma). El gráfico muestra adicionalmente la distribución en cuanto al tamaño y tipo de archivo descargado. Figura 4.19: Gráfico tamaño del sitio 4.5.9. Iteración 8 Del 25-May-2009 al 29-May-2009 En esta iteración se continuó con el proceso de traducción y corrección de los mensajes de la aplicación. Planificación Para esta iteración se definió la meta Depuración de la traducción al español de los mensajes de la plataforma y corrección de la semántica de los mensajes que ya estaban en español. Los objetivos fijados para esta iteración incluyen: 96 Traducir y corregir los mensajes de la aplicación Diseño Debido que para este momento ya algunos usuarios han usado la aplicación, estos han dado su opinión respecto a los mensajes que aparecen en los distintos módulos, y basado en sus sugerencias se inicio la segunda etapa de depuración de dichos menajes, para su mejor compresión. Como se explico en la segunda iteración, estos mensajes son editados en lo archivos /lenguage/es.js de cada módulo. 4.5.10. Iteración 9 Del 31-May-2009 al 04-Jun-2009 En ésta iteración se integro el módulo de foros a la plataforma, utilizando una aplicación llamada PHPBB3. Planificación Para esta iteración se definió la meta Instalación del foro PHPBB3 como módulo de la plataforma. Los objetivos fijados para esta iteración incluyen: Instalar la aplicación PHPBB3 en el servidor. Integrar la aplicación PHPBB3 a la plataforma. Diseñar y desarrollar un Portlet, que permita ver las últimas actualizaciones de los foros, en la pagina de inicio de la intranet. Hacer pruebas de funcionamiento. Diseño Se integro un motor de foros en la intranet para que los usuarios puedan crear temas de discusión o publicar información de interés para toda la comunidad y que cada usuario pueda escribir sus opiniones acerca de cada tema. Para dicha tarea de uso la aplicación PHPBB3 basada en PHP 5 y MySQL 5. 97 Codificación Procedimiento para la integración del módulo de foros: • Se debe instalar la aplicación PHPBB3 en el servidor donde esta instalada la intranet. Se tienen que procurar que el usuario administrador de la intranet tenga el mismo nombre que el usuario administrador de la aplicación PHPBB3 o de l contrario el administrador de la intranet no podrá acceder como administrador al módulo de foros. • Configurar la URL de la aplicación PHPBB3 en el archivo config.php de la intranet: 1 $con f i g [ ’ phpbb3 url ’ ]= ’ https : /w3 . c i e n s . ucv . ve/phpbb3 / ’ ; • Copiar el archivo /modules/phpbb3/auth groupoffice.php en la ruta /phpbb3/includes/auth/auth groupoffice.php • Iniciar sesión en la aplicación ingresando a la página http://w3.ciens.ucv.ve/phpbb3/, luego dirigirse a la opción: General > Client communication > Authentication • Seleccionar en tipo de autenticación GroupOffice, ingresar los datos de la base de datos ciensnet y luego guardar los cambios en la aplicación. • Para finalizar se debe iniciar sesión en la intranet como administrador para instalar el módulo de PHPBB3 y configurar los permisos de los usuarios sobre el módulo. Procedimiento para la creación del portlet de foros: Un portlet es un archivo que se incluye en los módulos que permite ver información importante acercar de los mismos. En el caso de los foros se quiere que el portlet muestre los últimos 5 temas en donde se han hecho modificaciones y en que fecha se realizó dicha modificación, para ello se debe crear el archivo /modules/phpbb3/Portlet.js y agregar la referencia a ese portlet en el módulo Summary o en español Inicio, para que el usuario pueda instalarlo y desinstalarlo según sus necesidades. Archivo Portlet.js: 1 GO. phpbb3 . Phpbb3Grid = func t i on ( c on f i g ){ 2 i f ( ! c on f i g ){ 3 con f i g = {} ; 4 } 5 con f i g . s t o r e = new GO. data . JsonStore ({ 6 u r l : GO. s e t t i n g s . modules . phpbb3 . u r l+ ’ j son . php ’ , 7 baseParams : { 8 task : ’ f o ros ’ 98 9 } , 10 root : ’ r e s u l t s ’ , 11 id : ’ forum id ’ , 12 to ta lPrope r ty : ’ t o ta l ’ , 13 f i e l d s : [ ’ forum id ’ , ’ forum name ’ , ’ forum desc ’ , ’ f o r um la s t po s t i d ’ , 14 ’ f o rum la s t po s t t ime ’ , ’ f o r um la s t po s t sub j e c t ’ ] 15 } ) ; 16 17 var Phpbb3ColumnModel = new Ext . g r id . ColumnModel ( 18 [{ 19 header : ’ Ultimos temas ac tua l i zados ’ , 20 dataIndex : ’ forum name ’ , 21 s o r t ab l e : f a l s e , 22 width : 420 23 } ,{ 24 header : ’ Fecha ’ , 25 dataIndex : ’ f o rum la s t po s t t ime ’ , 26 s o r t ab l e : f a l s e , 27 width : 150 28 } ] 29 ) ; 30 31 Phpbb3ColumnModel . d e f au l t So r t ab l e= true ; 32 con f i g . cm=Phpbb3ColumnModel ; 33 34 con f i g . view=new Ext . g r id . GridView ({ 35 emptyText : ’No hay temas para mostrar ’ , 36 f o r c eF i t : t rue 37 } ) ; 38 39 con f i g . sm=new Ext . g r id . RowSelectionModel ( ) ; 40 con f i g . loadMask=true ; 41 con f i g . autoHeight=true ; 42 43 GO. phpbb3 . Phpbb3Grid . s up e r c l a s s . c on s t ruc to r . c a l l ( th i s , c on f i g ) ; 44 } ; 45 46 Ext . extend (GO. phpbb3 . Phpbb3Grid , GO. g r id . GridPanel ,{ 47 loaded : f a l s e , 48 a f terRender : func t i on (){ 49 t h i s . on (” rowdb l c l i ck ” , func t i on ( gr id , rowClicked , e ){ 50 GO. moduleManager . getPanel ( ’ phpbb2 ’ ) ; 51 } , t h i s ) ; 52 } 53 54 i f ( t h i s . i s V i s i b l e ( ) ){ 55 t h i s . onGridShow ( ) ; 56 } 57 } , 58 onGridShow : func t i on (){ 59 i f ( ! t h i s . loaded && th i s . rendered ){ 60 t h i s . s t o r e . load ( ) ; 61 t h i s . loaded=true ; 62 } 63 } 64 65 } ) ; 66 67 GO. mainLayout . onReady ( func t i on (){ 68 i f (GO. summary){ 69 var phpbb = new GO. phpbb3 . Phpbb3Grid ( ) ; 70 GO. summary . p o r t l e t s [ ’ po r t l e t−f o ro s ’ ]=new GO. summary . Po r t l e t ({ 71 id : ’ po r t l e t−f o ro s ’ , 72 t i t l e : ’ Foros ’ , 73 layout : ’ f i t ’ , 74 t o o l s : [{ 75 id : ’ c l o s e ’ , 76 handler : f unc t i on ( e , target , panel ){ 77 panel . removePort let ( ) ; 78 } 79 } ] , 80 items : phpbb , 81 autoHeight : t rue 82 } ) ; 83 } 84 } ) ; 99 Como se puede observar en el código fuente, este portlet será referenciado con el identificador portlet-foros en el módulo resumen agregándolo a la lista de portlets activos en el archivo /modules/summary/MainPanel.js: 1 t h i s . a c t i v ePo r t l e t s =[ ’ po r t l e t−announcements ’ , ’ po r t l e t−tasks ’ , 2 ’ po r t l e t−calendar ’ , ’ po r t l e t−note ’ , ’ po r t l e t−f o ros ’ ] ; 3 4 s t a t e =[{ id : ’ po r t l e t−announcements ’ , c o l : 0} , { id : ’ po r t l e t−tasks ’ , 5 c o l : 0} ,{ id : ’ po r t l e t−calendar ’ , c o l : 1} ,{ id : ’ po r t l e t−note ’ , c o l :1} 6 ,{ id : ’ po r t l e t−f o ro s ’ , c o l : 1 } ] ; En la figura 4.20 se muestra la ventana que le permite al usuario instalar los portlets y se observa como ya esta incluido el portlet de foros. Figura 4.20: Vista de interfaz para agregar portlets En la figura 4.21 se puede observar el portlet de foros con la información de los últimos temas actualizados. Figura 4.21: Vista portlet de visualización de foros 100 Pruebas Las pruebas realizadas para verificar el funcionamiento de los portlets consistió en iniciar sesión en la plataforma, ingresar en el módulo de Foros y navegar por los temas, escribir comentarios de prueba y comprobar que en base a los últimos comentarios escritos, se actualizara el portlet de los foros. Las pruebas arrojaron resultados satisfactorios ya que los usuarios se autenticaron correctamente y la publicación de mensajes no presento problemas. En la figura 4.22 se observa el módulo de foros. Se puede observar todos los foros y temas a los que el usuario tiene acceso. Figura 4.22: Vista módulo de foros En la esquina superior derecha de la figura 4.22 se puede observar el correo del usuario que esta autenticado, el cual corresponde con el usuario autenticado en la intranet. 101 Caṕıtulo 5 Conclusión 5.1. Conclusiones La finalidad de esta investigación fue la de implantar una plataforma de software colaborativo y de código abierto que permita la integración de servicios prestados por la Facultad de Ciencias a través de sus dependencias y facultades, de forma unificada, es decir que en una misma plataforma se incluyan servicios como correo electrónico, calendario, notas, administración de archivos, foros, mensajeŕıa instantánea y además dos de los servicios prestados por el Centro de Computación como el sistema de Soporte Técnico y el sistema de Reservación de Salas. Por lo mencionado previamente, se pueden dar los primero pasos para la eliminación de los múltiples nombres de usuario, contraseñas y otros datos que se mantiene almacenados en diversas bases de datos generando redundancia. Un aspecto que agrega valor a la plataforma es la ventaja de que todas las funcionalidades se integran bajo un ambiente estandarizado utilizando algunas de las ultimas tecnoloǵıas del mercado para aplicaciones web, con una interfaz consistente y donde las funcionalidades fueron desarrolladas de forma modular, lo que permite que el sistema sea extensible, fácil de actualizar y de configurar. El proceso de desarrollo XP simplificó las actividades de planificación, codificación, y pruebas, con lo cual se redujo el tiempo de implementación. Lo cual trajo como consecuencia que se pudiese dedicar más tiempo en actividades de pruebas, modificaciones y diseño. Esto a su vez, concluyó en una mejoŕıa en la calidad del producto, con lo cual se pudo lograr producir un software robusto, efectivo y eficiente. 102 A continuación, se especifican las contribuciones, limitaciones y recomendaciones de este trabajo de investigación. Posteriormente, se detallarán algunos posibles trabajos futuros que se podŕıa realizar en este aspecto. 5.2. Contribuciones Este trabajo proporciona como principal aporte el punto de inicio para la implantación de una Intranet para la Facultad de Ciencias, ya que la base que se instaló y configuró permitirá desarrollar aplicaciones sobre la plataforma e integrar el resto de las aplicaciones que se encuentran actualmente en producción. Facilitando el uso de información común y reduciendo la posibilidad de tener inconsistencia en los datos 5.3. Recomendaciones En el trabajo de grado Implantación de una Plataforma de Software Colaborativo que Permita Integrar Servicios Prestados por la Facultad de Ciencias se desarrolló e implantó una solución que permite a los integrantes de la comunidad de Ciencias acceder a un conjunto de servicios de manera centralizada. Es importante tener en cuenta ciertas consideraciones, como las detalladas a continuación: Mantener actualizada la plataforma, ya que los usuarios de la comunidad de código abierto que trabajan con la aplicación GroupOffice, se encuentran constantemente haciendo mejoras y agregando nuevas funcionalidades que están siempre disponibles en las nuevas versiones de GroupOffice. La renovación periódica de los contenidos y mantenimiento del sistema evitará inconsistencias sobre la información de la plataforma. El éxito de la solución dependerá significativamente de la calidad de sus servicios, lo cual convergerá en la progresiva y sistemática aceptación de los mismos. La utilización adecuada de las herramientas de administración sera clave para definir la correcta permisoloǵıa y privilegios asociados a los roles. 103 Existe una carencia importante sobre la inversión en la plataforma tecnológica del Centro de Computación, si no se implementan actualizaciones en la plataforma en el mediano plazo, habrá una postergación ostensible y se subutilizarán tanto el sistema colaborativo como los demás servicios dentro de la dependencia. Para mantener una interfaz de usuario consistente se recomienda utilizar ExtJS, el cual es una biblioteca de JavaScript para el desarrollo de aplicaciones web interactivas. Esta biblioteca define un conjunto de objetos que permitirán poblar la interfaz de usuario, facilitándole al desarrollador su desarrollo. Independientemente del lenguaje de programación con el que sea desarrollada alguna aplicación que quiera integrarse a la plataforma, se recomienda utilizar un conjunto de colores acorde a los ya establecidos en el sistema base, de manera de mantener consistente la interfaz del sistema. Se sugiere utilizar colores en la escala del azul y beige semi-saturado (claro). 5.4. Trabajos Futuros Como trabajos futuros se propone la integración de otras aplicaciones que se encuentran en producción en la Facultad de Ciencias en las diversas escuelas, dependencias o institutos que puedan ser de interes para toda la comunidad y que ayuden a complementar las actividades del personal docente, administrativo y los estudiantes. 104 Apéndice A Archivos de configuración A.1. Archivo de configuración del módulo deflate de Apache 1 2 <IfModule mod def late . c> 3 4 AddOutputFilterByType DEFLATE text /html text / p l a in text /xml 5 AddOutputFilterByType DEFLATE text /html app l i c a t i on /xhtml+xml 6 AddOutputFilterByType DEFLATE text / c s s 7 AddOutputFilterByType DEFLATE app l i c a t i on / j a v a s c r i p t app l i c a t i on /x−j a v a s c r i p t 8 text / j a v a s c r i p t 9 AddOutputFilterByType DEFLATE app l i c a t i on /x−httpd−php app l i c a t i on /x−httpd−php−source 10 app l i c a t i on /x−httpd−fastphp 11 AddOutputFilterByType DEFLATE text / p l a in 12 AddOutputFilterByType DEFLATE text /xml app l i c a t i on /xml app l i c a t i on / x s l t+xml 13 app l i c a t i on /xml−dtd 14 AddOutputFilterByType DEFLATE app l i c a t i on / r s s+xml app l i c a t i on /atom xml 15 AddOutputFilterByType DEFLATE app l i c a t i on /x−httpd−eruby 16 17 Def lateCompress ionLeve l 9 18 19 BrowserMatch ˆ Moz i l l a /4 gzip−only−t ext /html 20 BrowserMatch ˆ Moz i l l a / 4\ . 0 [ 6 7 8 ] no−gz ip 21 BrowserMatch \bMSIE ! no−gz ip ! gzip−only−t ext /html 22 23 </IfModule> A.2. Archivo de configuración del módulo disk-cache de Apache 1 2 <IfModule mod disk cache . c> 3 # cache c l ean ing i s done by htcachec lean , which can be con f i gu red in 4 # / etc / de f au l t /apache2 5 # 6 # For f u r th e r information , s ee the comments in that f i l e , 7 # /usr / share /doc/apache2 .2−common/README. Debian , and the htcachec l ean (8) 8 # man page . 105 9 10 # This path must be the same as the one in / etc / d e f au l t /apache2 11 CacheRoot /var / cache /apache2/mod disk cache 12 13 # This w i l l a l s o cache l o c a l documents . I t u sua l l y makes more sense to 14 # put t h i s in to the c on f i gu r a t i on f o r j u s t one v i r t u a l host . 15 16 CacheEnable d i sk / 17 18 CacheDirLevels 6 19 CacheDirLength 3 20 </IfModule> A.3. Archivo principal de configuración de la intranet 1 #F i l e c on f i g . php 2 <?php 3 $con f i g [ ’ s a l a s ’ ]= ’ http ://w3 . c i e n s . ucv . ve/ cal ’ ; 4 5 $con f i g [ ’ enabled ’ ]= true ; 6 $con f i g [ ’ id ’ ]=” g r oupo f f i c e ” ; 7 $ con f i g [ ’ debug ’ ]= f a l s e ; 8 $ con f i g [ ’ log ’ ]= true ; 9 $con f i g [ ’ language ’ ]=” es ” ; 10 $con f i g [ ’ de fau l t count ry ’ ]=”VE” ; 11 $con f i g [ ’ de fau l t t imezone ’ ]=” America/Caracas ” ; 12 $con f i g [ ’ d e f au l t cu r r ency ’ ]=”Bs ” ; 13 $con f i g [ ’ d e f au l t da t e f o rmat ’ ]=”dmY” ; 14 $con f i g [ ’ d e f au l t da t e s epa r a t o r ’]=”−”; 15 $con f i g [ ’ de fau l t t ime fo rmat ’ ]=”G: i ” ; 16 $con f i g [ ’ d e f au l t f i r s t we ekday ’ ]=”1” ; 17 $con f i g [ ’ d e f au l t d e c ima l s epa ra t o r ’ ]=” , ” ; 18 $con f i g [ ’ d e f au l t thousands s epa ra to r ’ ]= ” . ” ; 19 $con f i g [ ’ theme ’ ]=” Defaul t ” ; 20 $con f i g [ ’ a l low themes ’ ]= f a l s e ; 21 $con f i g [ ’ a l low password change ’ ]= true ; 22 $con f i g [ ’ a l l ow r e g i s t r a t i o n ’ ]= f a l s e ; 23 $con f i g [ ’ r e g i s t r a t i o n f i e l d s ’ ]=” t i t l e i n i t i a l s , sex , birthday , address , home phone , fax , c e l l u l a r , 24 company , department , funct ion , work address , work phone , work fax , homepage ” ; 25 $con f i g [ ’ r e q u i r e d r e g i s t r a t i o n f i e l d s ’ ]=” company , address ” ; 26 $con f i g [ ’ a l l ow dup l i c a t e ema i l ’ ]= f a l s e ; 27 $con f i g [ ’ au to ac t i va t e account s ’ ]= f a l s e ; 28 $con f i g [ ’ n o t i f y adm in o f r e g i s t r a t i o n ’ ]= true ; 29 $con f i g [ ’ r e g i s t e r modu l e s r ead ’ ]=”summary , email , ca lendar , tasks , addressbook , f i l e s , notes , sopor te ” ; 30 $con f i g [ ’ r e g i s t e r modu l e s wr i t e ’ ]=”” ; 31 $con f i g [ ’ r e g i s t e r u s e r g r oup s ’ ]=”” ; 32 $con f i g [ ’ r e g i s t e r v i s i b l e u s e r g r o u p s ’ ]=”Todos ” ; 33 $con f i g [ ’ host ’ ]=”/ c i en sne t /” ; 34 $con f i g [ ’ f u l l u r l ’ ]=” https ://w3 . c i e n s . ucv . ve/ c i en sne t /” ; 35 $con f i g [ ’ t i t l e ’ ]=” Ciensnet ” ; 36 $con f i g [ ’ webmaster email ’ ]=” root@w3 . c i e n s . ucv . ve ” ; 37 $con f i g [ ’ root path ’ ]=”/ var /www/ c i en sne t /” ; 38 $con f i g [ ’ tmpdir ’ ]=”/tmp/” ; 39 $con f i g [ ’ max users ’ ]=”0” ; 40 $con f i g [ ’ quota ’ ]=”0” ; 41 $con f i g [ ’ db type ’ ]=” mysql ” ; 42 $con f i g [ ’ db host ’ ]=” l o c a l h o s t ” ; 43 $con f i g [ ’ db name ’ ]=” c i en sne t ” ; 44 $con f i g [ ’ db user ’ ]=” c i en sne t ” ; 45 $con f i g [ ’ db pass ’ ]=” passwordaqui ” ; 46 $con f i g [ ’ db port ’ ]=”3306” ; 47 $con f i g [ ’ db socket ’ ]=”” ; 48 $con f i g [ ’ l o ca l pa th ’ ]=”/ var /www/ c i en sne t / l o c a l /” ; 49 $con f i g [ ’ l o c a l u r l ’ ]=”/ c i en sne t / l o c a l /” ; 50 $con f i g [ ’ f i l e s t o r a g e p a t h ’ ]=”/home/ c i en sne t /” ; 51 $con f i g [ ’ max f i l e s i z e ’ ]=”2097152” ; 52 $con f i g [ ’ smtp server ’ ]=” l o c a l h o s t ” ; 53 $con f i g [ ’ smtp port ’ ]=”25” ; 54 $con f i g [ ’ smtp username ’ ]=”” ; 106 55 $con f i g [ ’ smtp password ’ ]=”” ; 56 $con f i g [ ’ r e s t r i c t smtp ho s t s ’ ]=”” ; 57 $con f i g [ ’ ema i l c onne c t s t r i ng op t i on s ’ ]=”” ; 58 $con f i g [ ’ max attachment size ’ ]=”2097152” ; 59 $con f i g [ ’ cmd zip ’ ]=”/ usr /bin / z ip ” ; 60 $con f i g [ ’ cmd unzip ’ ]=”/ usr /bin /unzip ” ; 61 $con f i g [ ’ cmd tar ’ ]=”/ bin / tar ” ; 62 $con f i g [ ’ cmd chpasswd ’ ]=”/ usr / sb in /chpasswd ” ; 63 $con f i g [ ’ cmd sudo ’ ]=”/ usr /bin /sudo ” ; 64 $con f i g [ ’ cmd quota ’ ]=”” ; 65 $con f i g [ ’ cmd edquota ’ ]=”” ; 66 $con f i g [ ’ cmd al ias ’ ]=”/ usr / l o c a l / bin / a l i a s . sh ” ; 67 $con f i g [ ’ quota protouser ’ ]=”” ; 68 $con f i g [ ’ cmd xml2wbxml ’ ]=”/ usr /bin /xml2wbxml ” ; 69 $con f i g [ ’ cmd wbxml2xml ’ ]=”/ usr /bin /wbxml2xml ” ; 70 $con f i g [ ’ cmd tnef ’ ]=”/ usr /bin / tne f ” ; 71 $con f i g [ ’ cmd php ’ ]=”php ” ; 72 $con f i g [ ’ phpMyAdminUrl ’ ]=”” ; 73 $con f i g [ ’ a l l ow un s a f e s c r i p t s ’ ]=”” ; 74 $con f i g [ ’ de fau l t pas sword l ength ’ ]=”6” ; 75 76 $con f i g [ ’ l d ap s e r v e r i p ’ ]=”150 . 1 8 5 . 7 2 . 5 ” ; 77 $con f i g [ ’ ldap base dn ’ ]=” ou=people , dc=c iens , dc=ucv , dc=ve ” ; 78 $con f i g [ ’ ldap admin user ’ ]=” cn=admin , dc=c iens , dc=ucv , dc=ve ” ; 79 $con f i g [ ’ ldap admin password ’ ]=” passwordaqui ” ; 80 $con f i g [ ’ mai l host ’ ]=” s t r i x . c i e n s . ucv . ve ” ; 81 82 $con f i g [ ’ i d g rupo sopor t e ’ ]=”4” ; 83 84 $con f i g [ ’ phpbb3 url ’ ]= ’ http ://w3 . c i e n s . ucv . ve/phpbb3 / ’ ; 107 Bibliograf́ıa [1] Lic. Jose Montilla, Análisis de nuevas tecnoloǵıas en comunicación e información usadas en la Universidad Central de Venezuela, 2009 [2] Shai Carmi, Shlomo Havlin, Scott Kirkpatrick, Yuval Shavitt, Eran Shir, A model of Internet topology using k-shell decomposition, 2007, Sitio: http://www.eng.tau.ac.il/~shavitt/pub/PNAS07.pdf [3] Andrew S. Tanenbaum, Computer Networks 4th Edition, Prentice Hall, 2003 [4] Gottfried Vossen, Stephan Hagemann, Unleashing web 2.0 from concepts to creativity, Morgan Kaufmann, 2007 [5] Cristobal Cobo Romani, Hugo Pardo Kuklinski, Planeta web 2.0 Inteligencia colectiva o fast food, Flacso Mexico, 2007 [6] Quentin Zervaas, Practical web 2.0 applications with php, Apress, 2008 [7] Ph.D. Steve Holzner, AJAX for dummies, Editorial for Technology Dummies, 2008 [8] Steven Holzner, Ajax Bible, Wiley, 2007 [9] Gúıa Breve de Servicios Web, Sitio: http://www.w3c.es/Divulgacion/GuiasBreves/ServiciosWeb [10] Dave Chaffey, Groupware Workflow and Intranets Reengineering the Enterprise with Collaborative Software, Elsevier Science & Technology Books, 1998 [11] Estad́ısticas sobre el uso del servicio de correo, Sitio: http://www.email-marketing-reports.com/metrics/email-statistics.htm [12] Sitio oficial de Group-Office, Sitio: http://www.group-office.com 108 [13] Descripción de licencias de software, Sitio: http://www.gnu.org/licenses/licenses.es.html [14] Kenneth E. Kendall, Análisis y Diseño de Sistemas, Pearson Education, 2008 [15] Kent Beck, Martin Fowler, Planning Extreme Programming, Addison-Wesley Professional, 2000 [16] Kent Beck, Extreme Programming Explained, Addison-Wesley Professional, 1999 [17] Ken Ford, Extreme Programming Pocket Guide, Oreilly, 2003 109Universidad Central de Venezuela Facultad de Ciencias Escuela de Computación Implantación de una Plataforma de Software Colaborativo que Permita Integrar Servicios Ofertados por la Facultad de Ciencias Trabajo Especial de Grado presentado ante la ilustre Universidad Central de Venezuela, por los bachilleres: Autor: Jessica González A. - C.I. 18.030.942 Autor: Carlos Camacho G. - C.I. 17.642.467 Para optar por el t́ıtulo de Licenciado en Computación Tutor Académico: Robinson Rivas Caracas, Febrero, 2009 2 Agradecimientos Este gran logro se lo agradezco en primer lugar a mi familia, por estar siempre a mi lado en las buenas y en las malas y por recodarme siempre de donde vengo y hacia donde quiero ir. Quiero agradecer especialmente a mis padres Maŕıa y Alexis por acompañarme durante todas las experiencias de mi vida brindándome todo los consejos, sabiduŕıa y el amor que he necesitado, le agradezco a mis hermanos por ser tan especiales, a mi t́ıa Paqui que siempre me ha tratado como una hija y eso ha significado mucho para mi, siempre has sido un ejemplo a seguir, a mis abuelos Basilio, Cita y Antonieta por simplemente ser ángeles en la tierra que siempre iluminan mi camino y a mi abuelo Octavio que es mi ángel en el cielo y mi protección. Le quiero agradecer a todas las personas que estuvieron pendientes de que este trabajo culminara exitosamente y que en todo momento estuvieron a la orden para ayudarnos y guiarnos, especialmente a los profesores Rafael Angulo, David Pérez, Maŕıa E. Villapol y Daniel Villavicencio. Gracias a todos mis compañeros de clases y del Centro de Computación, por ser tan especiales y llenar mis d́ıas de buenos momentos, gracias a mis grandes amigos Francis y Daniel por siempre estar pendientes de mi y especialmente gracias a Carlos Camacho mi mejor amigo, compañero de clases, de trabajo y de vida, gracias por estar siempre para mi y por apoyarme incondicionalmente. Por ultimo y no menos importante muchas gracias a nuestro tutor el profesor Robinson Rivas por darnos la oportunidad de trabajar junto a el en este proyecto, gracias por todo el apoyo que nos dio. Jessica Gonzalez. Son muchas las personas a las que me gustaŕıa agradecer por este triunfo, el lograr culminar esta etapa de mi vida que representa un gran salto en mi formación integral, porque siento porque no solo he crecido como profesional, sino también como persona. GRACIAS!. A mis padres, hermanas y familiares por haberme apoyado y acompañado a lo largo de estos cinco años de trabajo. A todos los profesores y compañeros de estudio que estuvieron alĺı cuando los necesite. En especial a los profesores Rafael Angulo, Daniel Villavicencio, David Pérez, Karima Velásquez y Maria Elena Villapol por brindarme su amistad y apoyo en todo momento. A nuestro tutor, el profesor Robinson Rivas que aunque con mucho trabajo y esfuerzo, logramos alinearnos y converger con un trabajo de grado que nos permitirá colaborar con el desarrollo tecnológico de la Facultad. A Jessica por acompañarme, ayudarme y estar conmigo durante todo este tiempo. Carlos Camacho. 2 Índice general 1. Introducción 11 1.1. Antecedentes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 12 2. Propuesta 16 2.1. Justificación . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 16 2.2. Problema . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 17 2.3. Objetivo general . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 18 2.4. Objetivos espećıficos . . . . . . . . . . . . . . . . . . . . . . . . . . . 18 2.5. Alcance . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 19 3. Marco Teórico 20 3.1. Tecnoloǵıas de información y comunicación . . . . . . . . . . . . . . . 20 3.1.1. Caracteŕısticas de las TICS . . . . . . . . . . . . . . . . . . . 20 3.1.2. Internet . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 21 3.1.3. World Wide Web . . . . . . . . . . . . . . . . . . . . . . . . . 21 3.1.4. HTML . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 22 3.1.5. HTTP . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 23 3.1.6. Web 2.0 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 25 3.2. Sistemas colaborativos . . . . . . . . . . . . . . . . . . . . . . . . . . 29 3.2.1. Aplicaciones para promover el trabajo en equipo . . . . . . . . 29 3.2.2. Aplicaciones de sistemas colaborativos . . . . . . . . . . . . . 30 3.2.3. Intranets . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 30 3.2.4. De Sistemas Colaborativos a Intranets . . . . . . . . . . . . . 31 3.2.5. Funciones y aplicaciones de sistemas colaborativos . . . . . . . 32 3.2.6. Tipos de aplicaciones colaborativas . . . . . . . . . . . . . . . 33 3.2.7. Clasificación de los sistemas colaborativos . . . . . . . . . . . 34 3.2.8. Servicio de correo electrónico . . . . . . . . . . . . . . . . . . 35 3.3. Group-Office . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 38 3 3.3.1. Requerimientos del sistema . . . . . . . . . . . . . . . . . . . . 38 3.3.2. Usuario final . . . . . . . . . . . . . . . . . . . . . . . . . . . . 39 3.3.3. Módulo de correo electrónico . . . . . . . . . . . . . . . . . . . 39 3.3.4. Módulo de resumen de contenido . . . . . . . . . . . . . . . . 41 3.3.5. Módulo de calendario . . . . . . . . . . . . . . . . . . . . . . . 41 3.3.6. Módulo de tareas . . . . . . . . . . . . . . . . . . . . . . . . . 43 3.3.7. Módulo de archivos . . . . . . . . . . . . . . . . . . . . . . . . 44 3.3.8. Administrador . . . . . . . . . . . . . . . . . . . . . . . . . . . 46 3.3.9. Desarrollador . . . . . . . . . . . . . . . . . . . . . . . . . . . 46 3.3.10. Situación actual . . . . . . . . . . . . . . . . . . . . . . . . . . 46 3.4. Programación Extrema . . . . . . . . . . . . . . . . . . . . . . . . . . 47 3.4.1. Valores y principios de la programación extrema . . . . . . . . 48 3.4.2. Prácticas de la programación extrema . . . . . . . . . . . . . . 49 4. Metodoloǵıa de Desarrollo 51 4.1. Análisis de Requerimientos y Diagnóstico . . . . . . . . . . . . . . . . 51 4.1.1. Requerimientos Generales . . . . . . . . . . . . . . . . . . . . 51 4.1.2. Requerimientos Funcionales . . . . . . . . . . . . . . . . . . . 52 4.1.3. Requerimientos No Funcionales . . . . . . . . . . . . . . . . . 53 4.2. Metáfora del Sistema . . . . . . . . . . . . . . . . . . . . . . . . . . . 53 4.3. Iteraciones . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 57 4.4. Actividades . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 57 4.5. Desarrollo . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 59 4.5.1. Iteración 0 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 59 4.5.2. Iteración 1 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 63 4.5.3. Iteración 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 68 4.5.4. Iteración 3 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 70 4.5.5. Iteración 4 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 74 4.5.6. Iteración 5 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 82 4.5.7. Iteración 6 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 85 4.5.8. Iteración 7 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 90 4.5.9. Iteración 8 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 96 4.5.10. Iteración 9 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 97 5. Conclusión 102 5.1. Conclusiones . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 102 5.2. Contribuciones . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 103 5.3. Recomendaciones . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 103 4 5.4. Trabajos Futuros . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 104 Anexos 104 A. Archivos de configuración 105 A.1. Archivo de configuración del módulo deflate de Apache . . . . . . . . 105 A.2. Archivo de configuración del módulo disk-cache de Apache . . . . . . 105 A.3. Archivo principal de configuración de la intranet . . . . . . . . . . . . 106 5 Índice de figuras 1.1. Vista cliente de correo squirrelmail. . . . . . . . . . . . . . . . . . . . 13 1.2. Vista del sistema de reservación de salas. . . . . . . . . . . . . . . . . 14 1.3. Vista del sistema de soporte . . . . . . . . . . . . . . . . . . . . . . . 14 1.4. Modo de trabajo actual. . . . . . . . . . . . . . . . . . . . . . . . . . 15 3.1. Funcionamiento de AJAX. . . . . . . . . . . . . . . . . . . . . . . . . 27 3.2. Evolución de los sistemas colaborativos . . . . . . . . . . . . . . . . . 32 3.3. Clasificación de los sistemas colaborativos . . . . . . . . . . . . . . . 34 3.4. Ejemplo de cliente de correo . . . . . . . . . . . . . . . . . . . . . . . 35 3.5. Vista del módulo de correo de Group-Office . . . . . . . . . . . . . . 40 3.6. Vista de la interfaz de composición de mensajes . . . . . . . . . . . . 41 3.7. Vista del resumen de los módulos . . . . . . . . . . . . . . . . . . . . 42 3.8. Vista de creación de citas . . . . . . . . . . . . . . . . . . . . . . . . 43 3.9. Vista de resumen de citas . . . . . . . . . . . . . . . . . . . . . . . . 44 3.10. Vista del módulo de archivos . . . . . . . . . . . . . . . . . . . . . . . 45 4.1. Vista del asistente de instalación I . . . . . . . . . . . . . . . . . . . . 61 4.2. Vista del asistente de instalación II . . . . . . . . . . . . . . . . . . . 62 4.3. Vista del asistente de instalación III . . . . . . . . . . . . . . . . . . . 63 4.4. Vista del módulo de cambio de contraseña. . . . . . . . . . . . . . . . 64 4.5. Vista de olvido de clave de acceso. . . . . . . . . . . . . . . . . . . . . 65 4.6. Vista del módulo de reenvio de contraseñas. . . . . . . . . . . . . . . 65 4.7. Vista del módulo de directorio. . . . . . . . . . . . . . . . . . . . . . 70 4.8. Casos de uso sistema de soporte. . . . . . . . . . . . . . . . . . . . . 73 4.9. Vista del módulo de soporte técnico . . . . . . . . . . . . . . . . . . . 74 4.10. Casos de uso sistema de soporte 0. . . . . . . . . . . . . . . . . . . . 75 4.11. Casos de uso sistema de soporte 1. . . . . . . . . . . . . . . . . . . . 76 4.12. Vista página de integración . . . . . . . . . . . . . . . . . . . . . . . 81 4.13. Vista sistema de salas . . . . . . . . . . . . . . . . . . . . . . . . . . 85 6 4.14. Vista estilo AjaxIM . . . . . . . . . . . . . . . . . . . . . . . . . . . . 87 4.15. Vista estilo del cliente de mensajeria Ciensnet . . . . . . . . . . . . . 88 4.16. Vista estilo ventana de conversacion AjaxIM . . . . . . . . . . . . . . 89 4.17. Vista estilo ventana de conversacion Ciensnet . . . . . . . . . . . . . 89 4.18. Calificación del sitio Ciensnet usando YSlow . . . . . . . . . . . . . . 95 4.19. Gráfico tamaño del sitio . . . . . . . . . . . . . . . . . . . . . . . . . 96 4.20. Vista de interfaz para agregar portlets . . . . . . . . . . . . . . . . . 100 4.21. Vista portlet de visualización de foros . . . . . . . . . . . . . . . . . . 100 4.22. Vista módulo de foros . . . . . . . . . . . . . . . . . . . . . . . . . . 101 7 Índice de cuadros 3.1. Funciones de los sistemas colaborativos . . . . . . . . . . . . . . . . . 33 3.2. Tipos de sistemas colaborativos . . . . . . . . . . . . . . . . . . . . . 33 3.3. Requerimientos de Group-Office . . . . . . . . . . . . . . . . . . . . . 39 4.1. Planificación de las iteraciones I . . . . . . . . . . . . . . . . . . . . . 54 4.2. Planificación de las iteraciones II . . . . . . . . . . . . . . . . . . . . 55 4.3. Planificación de las iteraciones III . . . . . . . . . . . . . . . . . . . . 56 4.4. Planificación de las iteraciones IV . . . . . . . . . . . . . . . . . . . . 57 8 Resumen Hoy en d́ıa, el uso de tecnoloǵıas de información y comunicación para el aceleramiento del desempeño de los flujos de trabajo de las pequeñas, medianas y grandes empresas ha tenido un gran auge. Esto se debe a las distintas tecnoloǵıas que permiten integrar tanto a los usuarios como los procesos de negocios asociados a cada uno de ellos, en una plataforma homogénea que brinde la capacidad de facilitar la comunicación y el acceso a la información para todos los usuarios del sistema dentro de un contexto privado, interno o local a la empresa. Estas plataformas se conocen como sistemas colaborativos, redes internas o Intranets, que son programas de aplicación que integran servicios como correo, calendarios, acceso a bases de datos, programación de tareas, etc. No están limitados sólo a estas, y alĺı es donde recae la fuerza o robustez de las aplicaciones para cumplir las demandas de las empresas y de esa manera convertirse en un recurso de vital importancia para el correcto e ı́ntegro intercambio de información entre los distintos procesos de negocios dentro de la empresa. Este trabajo se basa en el análisis, diseño, desarrollo e implantación de una plataforma de software colaborativo que permita integrar algunos servicios administrativos de la Facultad de Ciencias de la Universidad Central de Venezuela. Esta plataforma estará compuesta por un conjunto de módulos base, los cuales permitirán realizar un conjunto de operaciones básicas dentro del entorno del sistema colaborativo. Los módulos que contendrá por defecto son: Módulo de correo electrónico: Permite acceder al servicio de correo electrónico v́ıa protocolo IMAP. Módulo de calendario: Permitirá crear citas y recordatorios dado un calendario por usuario, también compartir eventos entre usuarios, este módulo es compatible con el protocolo de intercambio de calendarios iCalendar. Módulo de actividades: Este módulo permitirá crear actividades, recordatorios y notificaciones para cada usuario del sistema, también es compatible con el protocolo iCalendar. Módulo de directorio: En este módulo el usuario podrá tener asociado una agenda de contactos, en el que podrá almacenar direcciones de correo electrónico, direcciones, teléfonos, entre otros, y adicionalmente existirá un directorio con la información de contacto de todo el personal administrativo y docente de la Facultad. Módulo de intercambio de archivos: Este permitirá a los usuarios, almacenar dentro de la plataforma, archivos de uso personal y compartirlos con otros usuarios del sistema, también al hacer uso del servicio de correo electrónico se podrán adjuntar éstos directamente desde el cliente de correo sin necesidad de tenerlos localmente en el computador. Adicionalmente se desarrollaron e integraron un conjunto de módulos a la plataforma, para ofrecer servicios propios de la Facultad, estos módulos son: Módulo de soporte técnico: Permitirá administrar y gestionar todas las solicitudes de soporte técnico recibidas por el departamento de soporte técnico del Centro de Computación de la Facultad de Ciencias, este módulo fue desarrollado por completo para la plataforma. Módulo de reservación de salas: Este módulo permitirá gestionar las salas o aulas interactivas de cualquier dependencia, esta aplicación ya exist́ıa y se procedió a integrarla a la plataforma. Módulo de mensajeŕıa instantánea: Permitirá mantener en contacto a todos los usuarios del sistema mediante una aplicación que ofrecerá salas de Chats y conversaciones entre usuarios directamente. Esta es una aplicación que tiene como nombre AjaxIM y fue desarrollada por Unwieldy Studios 1, la aplicación está basada en estándares de software libre y permite su estudio, mejoramiento, cambio y distribución. Módulo de foros: Este módulo permitirá dar soporte a discusiones u opiniones en ĺınea, en base a temas de cualquier indole. También es una aplicación desarrollada por un tercero, la marca asociada a esta aplicación, es la popular phpBB, también es un sistema desarrollado con estándares de software libre. 1http://www.unwieldy.net/ Caṕıtulo 1 Introducción La rápida evolución del desarrollo de aplicaciones de usuario final, ha permitido que pueda automatizarse prácticamente cualquier tarea, estas tareas pueden ser desarrolladas en la mayoŕıa de los casos de manera independiente una de la otra, pero son siempre utilizadas por un conjunto finito de usuarios, los cuales pueden hacer uso de una o más de una aplicación en un instante de tiempo determinado. Estos usuarios necesitan comunicarse, intercambiar información y a la vez tener acceso a dichas aplicaciones de manera tal que puedan hacerlo a través de una interfaz común a todas. De este modo surgen los mecanismos para normar la integración de las aplicaciones descritas anteriormente, que es el desarrollo e implantación de una plataforma de software colaborativo que permita integrar algunos de los servicios administrativos prestados por el Centro de Computación de la Facultad de Ciencias. El objetivo primordial de dicha plataforma o aplicación es permitir el acceso centralizado a un conjunto de servicios propios de la Facultad de Ciencias de la Universidad Central de Venezuela, como lo son: La solicitud y administración de los soportes técnicos, el acceso al sistema de reservación de salas, el acceso a un cliente de mensajeŕıa instantánea y la integración con un sistema de foros que permita mantener hilos de discusión entre los usuarios de la intranet, adicionalmente todas las otras funcionalidades que la plataforma proporciona por defecto. 11 1.1. Antecedentes Debido a la gran cantidad de información que es manejada por los distintos departamentos de la Facultad de Ciencias, surge la necesidad de automatizar ciertos procesos administrativos sin importar de qué ı́ndole sean (Trámites administrativos o académicos). Estos sistemas, generalmente utilizan información común entre si, pero al momento de ser desarrollados no se tomó en cuenta la información común entre ellos, trayendo como consecuencia la redundancia de datos en los sistemas de información. Esta redundancia trae como consecuencia que se generen inconsistencias, ya que depende de las personas que mantienen estos sistemas, mantenerla sincronizada. Por lo tanto, surge la necesidad de un sistema que permita normar y estandarizar el acceso a la información por parte de las distintas aplicaciones; implantando una metodoloǵıa de trabajo acorde a los procesos que se utilizan en los sistemas informáticos de la Facultad de Ciencias. Los antecedentes inmediatos a implementaciones de sistemas utilizados por el Centro de Computación, cuyas funcionalidades van a ser integradas o desarrolladas para la plataforma se describen a continuación: Cliente de correo electrónico: SquirrelMail 1, es un cliente de correo electrónico web, desarrollado por Nathan y Luke Enresman, utilizando el lenguaje de programación PHP. SquirrelMail sigue el standard HTML 4.0 para su presentación, haciéndolo compatible con la mayoŕıa de navegadores web. SquirrelMail está diseñado para trabajar con plugins, lo cual hace que la aplicación sea ampliamente extensible. Esta licenciado bajo la GNU General Public License2. 1http://squirrelmail.org/ 2Licencia creada por la Free Software Foundation, está orientada principalmente a proteger la libre distribución, modificación y uso de software. 12 La figura siguiente muestra una vista del actual cliente de correo. Figura 1.1: Vista cliente de correo squirrelmail. Sistema de reservación de salas: El sistema de reservación de salas 3 es un sistema desarrollado en el Centro de Computación de la Facultad de Ciencias, que permite gestionar y administrar cualquier aula o sala dentro de la Facultad de Ciencias, de tal forma que pueda administrarse su uso y asignación de manera ordenada y automatizada. La figura siguiente muestra una vista del actual sistema de reservación de salas. Sistema de soporte técnico: El sistema de soporte técnico que permite mantener y gestionar las solicitudes de soporte técnico y asistencia a usuarios dentro de la Facultad de Ciencias, fué desarrollado en el Centro de Computación, éste es un sistema escrito, 3http://stest.ciens.ucv.ve/cal/ 13 Figura 1.2: Vista del sistema de reservación de salas. utilizando tecnoloǵıas web basadas en el lenguaje de programación Java. La figura siguiente muestra una vista del actual sistema de soporte técnico. Figura 1.3: Vista del sistema de soporte Es evidente que al desarrollar o implantar estas soluciones de software no se tomó en cuenta ningún reglamento que norme los lineamientos de interfaz, ni el 14 acceso a información común, lo que ocacionó como consecuencia inmediata que se empezara a generar información redundante no consistente entre ellos, por ejemplo, el nombre de inicio de sesión para cada sistema; o si alguno de estos sistemas utiliza información relacionada al usuario, ésta tend́ıa a diferir. A continuación, se muestra la situación actual de desarrollo de las aplicaciones de uso institucional en la Facultad de Ciencias. Figura 1.4: Modo de trabajo actual. 15 Caṕıtulo 2 Propuesta 2.1. Justificación Dadas estructuras organizativas, cuyos flujos de trabajo son complejos, es necesario tener el control sobre el intercambio de información entre los departamentos, dependencias o grupos de trabajo que integran la organización. Esto permite optimizar e incrementar el desempeño de todos los procesos de negocios que conforman las actividades regulares de cada entidad. Se observó que en la Facultad de Ciencias de la Universidad Central de Venezuela existen sistemas independientes y aislados que prestan servicios al personal docente, administrativo y a los estudiantes, los cuales en su mayoŕıa no tienen la capacidad de compartir información con otros sistemas, aún cuando pertenecen a la misma entidad. Lo que trae como consecuencia, lentos y complejos flujos de trabajo que pueden optimizarse si la información requerida está disponible y puede compartirse a través de redes de comunicación de datos y comunicación entre procesos. La Facultad de Ciencias, carece de una plataforma que permita integrar de manera homogénea los sistemas administrativos propios de cada dependencia; aśı como de la capacidad para ofrecer las funcionalidades necesarias que faciliten la coordinación de las tareas asociadas a cada usuario. Por lo tanto, se plantea la necesidad de desarrollar e implantar una plataforma de software que permita integrar servicios administrativos prestados por las distintas dependencias de la Facultad de Ciencias. Permitiendo que los usuarios puedan acceder de manera centralizada a un conjunto de módulos disponibles. 16 Debe proveerse también, un conjunto de herramientas, procedimientos y protocolos que garanticen un tratamiento coherente al acceso a la información, implicando las tareas de autenticación, autorización y registro de actividades para todos los usuarios o entidades que tienen acceso a un sistema de información, más en espećıfico, a este sistema a desarrollar. Este conjunto de poĺıticas es conocido como Autenticación, Autorización y Auditoria (Authentication, Authorization and Accounting - AAA.) En términos generales la implantación y adecuación de una plataforma de software colaborativo para la Facultad de Ciencias, solventaŕıa la problemática del acceso a la información descentralizado, con lo que se lograŕıa tener a toda la comunidad de la Facultad en contacto e intercambiando información de manera estructurada y organizada. Contribuyendo a mantener la integridad de los datos. 2.2. Problema Si bien muchas tareas administrativas cŕıticas que se realizan en la Facultad de Ciencias de la Universidad Central de Venezuela están automatizadas o en v́ıa de automatización, para ellas no se cuenta con la documentación apropiada, donde se describa de forma clara y detallada los lineamientos, normas y condiciones que se deben seguir para el desarrollo de software dentro de la institución. Por otra parte, si están ya desarrolladas, no existe ningún elemento de software que permita el intercambio de información entre ellas o más aun, que éstas accedan a un repositorio centralizado de información, como por ejemplo para consultar los datos referentes al inicio de sesión. Por lo tanto, se busca normalizar e integrar un conjunto de variables iniciales, que serán utilizadas por las distintas aplicaciones, este proceso de normalización permite estandarizar el acceso a la información de manera de evitar la redundancia innecesaria de datos, ya que los sistemas podrán intercambiar información entre si. Asi mismo, evitará inconsistencias referentes a la interfaz de usuario final. Considerando lo expuesto anteriormente, surge el interés de desarrollar y aprovechar al máximo las ventajas del software libre, buscando una solución que permita llevar a cabo esta integración. Es aśı como este trabajo logrará un verdadero aporte, al lograr implantar una aplicación que esté en capacidad de llevar a cabo este 17 proceso de integración y centralización al acceder a servicios propios de la Facultad, lo cual será evidenciado al integrar tanto aplicaciones de uso administrativo, como aplicaciones de terceros que permitirán complementar la plataforma con un sistema que logre mantener en tiempo real la comunicación entre los usuarios, por medio de clientes de mensajeŕıa instantánea, foros y encuestas. 2.3. Objetivo general Implantar y adecuar una plataforma de software colaborativo que permita integrar algunos de los servicios prestados por las dependencias administrativas y académicas de la Facultad de Ciencias de la Universidad Central de Venezuela. 2.4. Objetivos espećıficos Estudiar y analizar la factibilidad de implantar y adecuar una solución que resuelva el problema planteado. Establecer el inicio de sesión al sistema haciendo uso del nombre y clave que poseen actualmente los usuarios del servidor de correo institucional. Documentar el proceso de diseño y creación de módulos del sistema, de manera que puedan ser utilizados por futuros desarrolladores. Desarrollar un módulo que permita integrar el servicio de soporte técnico que es brindado por el Centro de Computación de la Facultad de Ciencias. Permitir el uso compartido y simultáneo de recursos entre los distintos usuarios, los cuales ayudaran al desarrollo de las actividades cotidianas de los mismos. Integrar un sistema de mensajeŕıa instantánea que permita mantener una comunicación en tiempo real entre los usuarios. Integrar el sistema de reservación de aulas y salas desarrollado en el Centro de Computación. Establecer un nexo o canal de participación entre los usuarios del sistema, mediante la implementación de foros y encuestas. 18 Proporcionar poĺıticas y mecanismos de seguridad que garanticen el acceso seguro a la información por parte de los usuarios. 2.5. Alcance Esta propuesta de Trabajo de Grado contempla la implantación y adecuación de una plataforma de software colaborativo que permita tanto el intercambio de información entre sus usuarios, como la integración de otras aplicaciones web a la misma. Haciendo uso de una interfaz unificada a la vez que mantiene la integridad de los datos. 19 Caṕıtulo 3 Marco Teórico 3.1. Tecnoloǵıas de información y comunicación Las tecnoloǵıas de información y comunicación (TICS), son un conjunto de sistemas de comunicación, programas de aplicación y dispositivos de cómputo, que en conjunto facilitan el desarrollo de las tareas asociadas a los usuarios, permitiéndoles realizar actividades diarias de forma fácil y rápida.[1] 3.1.1. Caracteŕısticas de las TICS Las caracteŕısticas que definen una tecnoloǵıa de información y comunicación son: [1] Interactividad: permite la interacción entre el dispositivo de cómputo y el usuario, y aśı decidir la secuencia de información a seguir, establecer el ritmo, cantidad y profundidad del contenido de información con el que se decide trabajar. Instantaneidad: facilita que se rompan las barreras temporales y espaciales de conocimiento y cultura, permitiendo que el usuario pueda acceder a bases de datos de información situadas en cualquier parte del mundo. Digitalización: es el proceso que transforma la información codificada analógicamente en códigos numéricos que permiten más fácilmente su manipulación y distribución. Esto favorece la transmisión de la información a todos los servicios necesarios por una misma red, con la ampliación de ofertas al usuario y reducción de costos. 20 Interconexión: logra la formación de nuevas redes de comunicación de manera que implique un refuerzo mutuo de las tecnoloǵıas. Inmaterialidad: permite la generación y el procesamiento de la información como materia prima, obteniendo el acceso a grandes masas de datos en cortos periodos de tiempo, presentándola en diferentes tipos de códigos lingǘısticos y facilitando su transmisión a lugares lejanos. 3.1.2. Internet La Internet es un sistema global de interconexión de redes de computadoras, que utilizan la familia de protocolos TCP/IP para poder, de manera efectiva, intercambiar información, y aśı garantizar que las distintas redes f́ısicamente unidas, puedan funcionar como una red lógica única. Esta red de redes esta compuesta por un gran número de redes de tipo públicas, privadas, académicas y gubernamentales de contexto global o local, interconectadas por medio de enlaces alámbricos o inalámbricos. [2] Estructura de la Internet Este sistema no es un sistema centralizado ni controlado por un organismo determinado. Su estructura es similar a la de una gran malla, donde existen una determinada cantidad de redes conectadas unas a otras. Existen organismos que son responsables del estudio y desarrollo de estándares para que esta gran arquitectura de comunicación funcione y evolucione. Entre esos organismos están el Grupo de Tareas de Ingenieŕıa de Internet (Internet Engineering Task Force - IETF), que se encarga de estudiar y desarrollar estándares para los protocolos usados en la Internet y la Corporación de Internet para los Nombres y los Números Asignados (Internet Corporation for Assigned Names and Numbers - ICANN), que es el organismo encargado de asignar y distribuir los identificadores únicos para la Internet, como lo son las direcciones IP y los nombres de dominio. [3] 3.1.3. World Wide Web El World Wide Web es un conjunto de reglas y convenciones para acceder a documentos referenciables, a través de millones de computadores en la Internet. Su enorme popularidad recae en el hecho de que posee una interfaz gráfica atractiva y de fácil uso para los usuarios, aśı como también que comprende un enorme cúmulo 21 de información sobre una extrema cantidad y variedad de temas. El World Wide Web (conocido también como WWW), tuvo sus inicios en el año de 1989, en el Centro Europeo de Investigación Nuclear (European Organization for Nuclear Research - CERN), este instituto cuenta con un grupo de cient́ıficos distribuidos en todo el mundo, que hacen investigaciones sobre f́ısica cuántica. La Web surge de la necesidad de comunicación e intercambio de información entre todos estos investigadores de manera que éstos pudieran compartir informes, fotos, dibujos entre otros documentos. Este sistema de intercambio de contenido fue diseñado bajo una arquitectura cliente-servidor, en donde un programa cliente realiza peticiones a una aplicación servidor, y éste se encarga de procesarlas y responderlas. Consultar un documento desde el World Wide Web generalmente comienza escribiendo la dirección del recurso a consultar en el navegador web o seleccionando un hiperv́ınculo que referencia la información que se quiere consultar. El navegador web comienza el env́ıo de una serie de mensajes que permitirán obtener y mostrar el recurso que se desea obtener. En primer lugar la porción del URL que referencia al nombre del servidor, debe ser traducida, para obtener el identificador uńıvoco de localización dentro de la Internet (Dirección IP). Una vez obtenido este identificador, se procederá a contactar y enviar mensajes al servidor web. El navegador web env́ıa solicitudes HTTP para ese servidor en particular. En el caso de una página Web t́ıpica, el texto HTML producto de una solicitud, es verificado y procesado por el navegador web, a fin de mostrarle al usuario una respuesta a su solicitud. [4] 3.1.4. HTML El Lenguaje de Marcas de Hipertexto (HyperText Markup Language - HTML) es una implementación del sistema estándar de demarcación general, el cual es un sistema que permite definir y estructurar un conjunto de documentos por medio de marcas o etiquetas. Al referirse a HTML, nos referimos tanto el tipo de documento, como al lenguaje de etiquetas con el que es representado. A medida que los usuarios se especializan en el uso del Internet, suelen pasar por 22 tres etapas distintas. La primera donde los usuarios conocen y frecuentan un grupo reducido de páginas, luego descubren la existencia de aplicaciones que les permiten localizar páginas, dado un criterio de búsqueda y luego los usuarios tienden a observar que no sólo pueden consultar información sino también pueden publicarla. Para que varios usuarios puedan comunicarse es necesario que lo hagan en un mismo idioma, ese idioma para el uso del Internet es el HTML. El HTML es el lenguaje de marcado de texto utilizado normalmente en la Web. Fue desarrollado en 1986 por el f́ısico nuclear Tim Berners-Lee, utilizando dos herramientas ya existentes, el concepto de enlace o link (Elemento que permite asociar dos elementos entre śı) y el Lenguaje Estándar de marcación General (Standard Generalized Markup Language - SGML), que permite formatear y definir la sintaxis de un documento). El HTML no es un lenguaje de programación propiamente, sino un sistema de marcado, en el cual al llegar un documento en HTML al cliente web, es interpretado mas no compilado, lo que implica que si existe algún error de sintaxis, se mostrará la vista al usuario tal como éste lo interprete. Un entorno para el trabajo en HTML podŕıa ser simplemente un procesador de textos (bloc de notas, vi, nano, etc.). El grupo de documentos creados con este formato deberán tener como extensión .html o .htm. Estos documentos deben ser mostrados por un cliente Web como Firefox o Internet Explorer.[5] 3.1.5. HTTP El protocolo HTTP (HyperText Transfer Protocol) es el protocolo encargado de normar el proceso de comunicación través del Web. Define la sintaxis y la semántica para los mensajes que cualquier elemento de software deba seguir, para implementar este protocolo y aśı poder efectuar de manera correcta la transmisión de datos. Este es un protocolo orientado a transacciones basado en el esquema de petición y respuesta, entre dos nodos que quieran intercambiar información. HTTP es un protocolo sin estado, ya que no almacena información referente a conexiones previas; sin embargo, provee mecanismos que permiten almacenar información en el nodo cliente, inclusive por tiempo indefinido, y aśı, simular que se tiene sesiones asociadas a cada usuario que utilice el sistema web. Para cada petición, deben ejecutarse los siguientes pasos, de manera que pueda 23 llevarse a cabo la comunicación, de forma correcta. El usuario accede a la URL, introduciendo la dirección IP en la barra de dirección del cliente o seleccionando un enlace directamente. El cliente decodifica la URL y obtiene el protocolo de acceso, el nombre o dirección del servidor destino, el puerto destino al cual va dirigida la petición y el objeto o recurso a ser solicitado. Se establece una conexión TCP/IP con el servidor, hacia el puerto correspondiente y se realiza la petición. Se env́ıa el comando correspondiente (GET, POST, DELETE, PUT, TRACE), junto con la dirección del recurso requerido (el segmento de la URL que se encuentra luego del nombre del servidor), la versión del protocolo HTTP y un conjunto de parámetros opcionales para el servidor. El servidor retorna la respuesta al cliente respectivo, la cual está compuesta por el código de estado de la respuesta, el tipo de dato asociado a la respuesta y la información asociada a la respuesta. Termina la conexión TCP. Los comandos propios del protocolo sobre las posibles peticiones de los clientes son[3]: GET: Se refiera a la solicitud de un documento al servidor. POST: Consiste en el env́ıo de documentos al servidor (datos asociados a un formulario, etc.). PUT: Se solicita que el documento enviado sea accesible desde una determinada dirección. DELETE: Se requiere la eliminación de un archivo en el servidor. TRACE: Se solicitan copias de las peticiones que llegan al servidor. 24 3.1.6. Web 2.0 La Web 2.0, es la evolución de todo el conjunto tradicional de aplicaciones Web, enfocadas hacia el usuario final, hacia la interacción que puede tener el usuario con el sistema, para hacerlo sentir parte de él. La Web 2.0 se define como una actitud o una forma de trabajo y no como una tecnoloǵıa. La Web 2.0 está compuesta por servicios y aplicaciones que generan colaboración entre los usuarios del sistema, todas orientadas al usuario final y buscando reemplazar las aplicaciones instaladas localmente en los computadores. Todos estos servicios persiguen brindar mejores y más sencillas soluciones, al trabajo del usuario frente al computador. [5] Principios Dentro de la emphWeb 2.0 conference realizada en San Francisco en el año 2004, donde Dale Dougherty de O´Reilly dio a conocer el término emphWeb 2.0, se definieron ciertos principios que deben poseer las aplicaciones Web 2.0: Deben estar basadas en la plataforma Web para su desarrollo. Obliga a proveer y promover flujos constantes de información. Debe promover una arquitectura de participación entre sus usuarios. Las aplicaciones nunca pueden dejar de ser depuradas, estudiadas y desarrolladas, implicando que siempre deberán existir servicios en prueba, lo que quiere decir que están en un paso intermedio en el ciclo de desarrollo completo, que implica que puedan ser inestables pero útiles para hacer demostraciones y corregir errores. Caracteŕısticas Los principios de desarrollo descritos anteriormente están basados en las siguientes caracteŕısticas. Disponibilidad: las herramientas para publicar y procesar información pueden estar disponibles como recursos de red, accesibles desde la Web, sin tener la necesidad de instalar la aplicación local en la computadora, con la limitación que el usuario debe adaptarse a los formatos establecidos por los sitios. 25 Colaboración y comunicación en ĺınea por medio de los recursos disponibles en el Web: los medios de comunicación y publicación de información son indispensables para el desarrollo del trabajo colaborativo, las aplicaciones basadas en Web 2.0 se nutren de la unión de la fuerza de trabajo conjunta. Nuevos procedimientos para trabajar, comunicarse y participar en el Web: en un principio los usuarios del Internet comenzaron a publicar documentos de manera desorganizada, se crearon y saturaron los dominios, tambien se crearon buscadores para tratar de solventar el problema de la búsqueda de información. En la actualidad existen formas de agrupar la información como en bases de datos temáticas o recursos de publicación basada en plantillas con ese uso espećıfico. Los productos se convierten en servicios: un producto, en el caso del ámbito Web, puede ser un portal o aplicación que tenga como función comunicar o integrar a los usuarios de una comunidad, o intercambiar información en tiempo real. Posteriormente se observa la potencialidad y funcionalidad para el progreso y desarrollo de una empresa y es absorbido por ella. Reestructuración del concepto del Web: esta versión trata de ser un punto de encuentro y colaboración entre los distintos usuarios, y trabaja bajo esquemas donde se permita organizar la información para que los usuarios puedan accederla de manera mas sencilla, óptima y clara. Convergencia de recursos: todas las aplicaciones basadas en la concepción de Web 2.0 deben estar desarrolladas bajo los preceptos de la usabilidad y la capacidad de brindarle al usuario un abanico de funcionalidades y servicios, que estén en capacidad de incrementarse con el paso del tiempo. [6] AJAX en la WEB 2.0 Siempre que se habla de WEB 2.0, se hace referencia a una serie de servicios que se ofrecen a través de la Web y se caracterizan por ofrecer una interfaz especialmente ágil y flexible. Detrás de estas aplicaciones, se puede identificar como común denominador la tecnoloǵıa JavaScript aśıncrono y XML (Asynchronous Javascript And XML - AJAX). Bajo este acrónimo, se esconde una combinación creativa de tecnoloǵıas bien conocidas desde hace tiempo por los profesionales especializados, que permiten agilizar la interacción entre el navegador y el propio usuario.[4] 26 Principios AJAX, es una técnica de desarrollo Web para crear aplicaciones dinámicas. Esta tecnoloǵıa se aplica del lado del cliente, es decir, se ejecuta en el navegador de los usuarios y al mismo tiempo se mantiene la comunicación aśıncrona con el servidor en segundo plano. De esta forma es posible realizar cambios sobre las páginas sin necesidad de recargarlas constantemente, lo que significa, aumentar la interactividad, flexibilidad, agilidad y usabilidad en las aplicaciones Web.[7] Figura 3.1: Funcionamiento de AJAX. AJAX es una tecnoloǵıa aśıncrona, en el sentido que los datos adicionales se solicitan al servidor y se cargan en segundo plano sin interferir con la visualización ni el comportamiento de las páginas. JavaScript es el lenguaje interpretado (scripting language) en el que normalmente se efectúan las funciones de llamada de AJAX mientras que el acceso a los datos se realiza mediante XMLHttpRequest, objeto disponible en los navegadores actuales. En cualquier caso, no es necesario que el contenido aśıncrono esté formateado en XML. En la figura 3.1 se muestra el funcionamiento de AJAX. Beneficios AJAX brinda los siguientes potenciales beneficios al momento de desarrollar aplicaciones Web[8]: Permite crear aplicaciones Web mejores y más dinámicas. El tiempo de espera para una petición se reduce. Usa tecnoloǵıas existentes. 27 Usa habilidades que los desarrolladores Web ya conocen. Por su popularidad y accesibilidad, alienta a los diseñadores a compartir sus patrones y de esta forma otros desarrolladores no se ven obligados a desarrollar funcionalidades ya diseñadas. Las caracteŕısticas de AJAX se integran perfectamente con las funcionalidades de los navegadores Web existentes en el mercado. Esto le da al usuario una clara idea de lo que se espera de ellos durante una transacción. Escenarios donde AJAX puede usarse exitosamente Los escenarios más comunes donde es beneficioso usar AJAX[7]: Libertad en la actualización de páginas: Las aplicaciones AJAX no necesitan refrescar la página completa para actualizar la información. En lugar de eso, pueden simplemente actualizar parte de la página en cualquier momento, dándole a los usuarios una respuesta instantánea a sus ingresos y consultas. Verificación instantánea de datos: Tiene la capacidad para comprobar instantáneamente los datos que se ingresan en un formulario. Interfaz de pantalla única: Una de las ventajas de pantalla única, es que el usuario puede ver el marco general de la aplicación, observando todos los pasos necesarios para completar una operación. Esto le da al usuario una clara idea de lo que se espera de ellos durante una transacción. Relativamente fácil de implementar: Debido a que las aplicaciones AJAX están construidas utilizando estándares Web actuales, son relativamente sencillas de construir. Desventajas Alguno de los potenciales problemas con AJAX son[8]: Problemas si el usuario ha deshabilitado el uso de JavaScript en su navegador. Demasiado código AJAX embebido hace lento el navegador. Como las direcciones de las páginas no cambian, se hace muy dif́ıcil guardar alguna página de interés en los favoritos del navegador ya que eso implicaŕıa guardar el estado de la página en ese momento. 28 El uso del botón ‘atrás‘ o ‘retroceder‘ del navegador no produce el mismo resultado que en una aplicación Web sin AJAX, ya que todas la acciones ocurren sobre la misma página. 3.2. Sistemas colaborativos Los sistemas colaborativos son programas de aplicación que permiten el correcto intercambio de información entre los usuarios y aśı lograr que se lleve a cabo el trabajo lo mas eficientemente posible. Esto tiene como consecuencia inmediata el aumento de la coordinación entre el conjunto de usuarios que conforman el sistema y la reducción del retardo asociado al intercambio de información por medios f́ısicos (memos, cartas, entre otros). También los sistemas colaborativos permiten el trabajo en equipo, este término fue definido por el Gartner Group, como una arquitectura unificada de software, basada en tecnoloǵıas distribuidas del tipo cliente/servidor, que poseen capacidades de interoperabilidad con otros sistemas colaborativos de comunicación y de coordinación, para poder reutilizar el conocimiento. Una de las razones por las cuales las aplicaciones de software colaborativo se volvieron herramientas esenciales para el desarrollo de las empresas, es que exist́ıan ámbitos en los que la comunicación inter-usuarios era muy compleja, como el caso de empresas globales en las que los usuarios estaban f́ısicamente separados por distancias muy grandes[10]. 3.2.1. Aplicaciones para promover el trabajo en equipo Hoy en d́ıa muchas empresas están redefiniendo la manera de llevar a cabo sus negocios. Esta transformación implica la reestructuración de la forma en que las compañ́ıas agrupan y procesan la información asociada a los distintos equipos de trabajo de la organización. La manera tradicional donde cada usuario interactúe con un computador de manera individual, busca ser sustituida por aquellos sistemas que le permitan al usuario compartir información, ideas, tareas, de tal manera que se ayude a completar el trabajo de la forma mas eficiente, ordenada y estructurada posible. El software encargado de llevar a la realidad esta manera de trabajar son las aplicaciones de software colaborativo. Estas aplicaciones son la llave del proceso de reestructuración de la empresa como parte del proceso de Reingenieŕıa de Procesos (Business Process Reengineering - BPR). Este concepto fue definido por Michael 29 Hammer y James Champy como ”la reconsideración fundamental y el reajuste radical de procesos de organización, para lograr la mejoŕıa drástica del desempeño actual en costo, servicios y velocidad”. 3.2.2. Aplicaciones de sistemas colaborativos Las aplicaciones de los sistemas colaborativos que permiten crear, acceder y compartir información, incluyen las siguientes: Correo electrónico. Grupos de discusión. Intercambio de documentos. Sistemas de video conferencia. Aplicaciones para el soporte de decisiones. Coordinación de grupos de usuarios para la planificación y administración de tareas previamente establecidas (Ej. Procesos de ingresos a nómina, etc.)[10]. 3.2.3. Intranets Una Intranet es un grupo de programas de aplicación que funcionan como una plataforma para el intercambio de información. Está basada en estándares de comunicación propios del Internet, por lo que tienden a asociarse estos dos términos, con la diferencia que la Intranet hace referencia a un ámbito local o a un recurso que sólo está disponible para los usuarios con los privilegios adecuados[10]. Caracteŕısticas Las principales caracteŕısticas de las Intranet son: Las aplicaciones que tengan como uso el intercambiar información deben ser escalables y aśı poder aumentar el conjunto de funcionalidades a medida que se requiere. Deben estar compuestas por interfaces navegables, sencillas y flexibles, que logren hacer amena la experiencia del usuario al utilizar el sistema. 30 Deben poseer la capacidad de presentar al usuario contenido multimedia, en caso que haya algún requerimiento que aśı lo necesite. Su implementación debe ser preferiblemente independiente de la plataforma en la que es desarrollado, de forma que si se quiere migrar en un futuro, ésto no sea un inconveniente. Beneficios o Ventajas Los beneficios o ventajas de las plataformas de software colaborativo basadas en tecnoloǵıas Web son: Requieren poca inversión para el comienzo de su implantación. Promueven el ahorro de tiempo en comparación con los métodos tradicionales de intercambio de información. Si es bien diseñada, la curva de aprendizaje para conocer y utilizar estas aplicaciones es corta. Fácil acceso a grandes volúmenes de información. 3.2.4. De Sistemas Colaborativos a Intranets Cuando las computadoras personales fueron en un principio introducidas al mercado, fueron diseñadas para ser utilizadas por un único usuario, el cual encontraba una manera sencilla de organizar sus propios documentos, sin proveer la funcionalidad de poder compartirlos con otros. Con el auge de las redes de área local se vió la posibilidad de compartir información inter-usuarios a través de aplicaciones de correo electrónico, sistema que permit́ıa el intercambio información ente los usuarios. Luego surgen aplicaciones llamadas Intranets, que son aplicaciones basadas en tecnoloǵıas del Internet que permiten, por medio del uso de navegadores web acceder a contenido compartido por un conjunto de usuarios bien definido a través de una red de datos de ámbito local.[10] En la figura 3.2 se muestra un gráfico con la evolución de los Sistemas Colaborativos. 31 Figura 3.2: Evolución de los sistemas colaborativos 3.2.5. Funciones y aplicaciones de sistemas colaborativos Los sistemas colaborativos son sistemas para el trabajo en equipo, que ayudan y facilitan la comunicación entre los usuarios del sistema y permiten unificar la fuerza de trabajo. Estas aplicaciones han crecido para cubrir una amplia gama de aplicaciones, este crecimiento ocurre por la disponibilidad de redes de comunicación de datos, dentro y entre las compañ́ıas, proporcionando una infraestructura robusta que deriva en una óptima comunicación. Todas las aplicaciones colaborativas trabajan en conjunto para proveer las tres C’s: Comunicación, Colaboración y Coordinación[10]. Comunicación: Es la funcionalidad clave, que permite compartir y enviar información a través de los usuarios por los distintos sistemas dentro de las aplicaciones colaborativas Ejemplo: Correo Electrónico. Colaboración: Es el acto de unir esfuerzos para dar solución a algún problema planteado. Los sistemas colaborativos ayudan a mitigar ciertos problemas asociados a la manera en que se comparte la información, como por ejemplo el lugar donde se almacenara la información para ser accedida por los usuarios. Coordinación: Es la caracteŕıstica que nos permitirá garantizar la efectiva ejecución del trabajo para poder alcanzar las metas. En el cuadro 3.1 se muestra una tabla que describe las funciones de una aplicación colaborativa. 32 Función de la aplicación colaborativa Descripción de la función 1. Correo electrónico y mensajeŕıa. Servicio de correo electrónico, procesamiento e intercambio de mensajes entre usuarios. 2. Compartir y manejar información. Mejorar el intercambio de información entre los usuarios. 3. Flujo de trabajo estructurado. Coordinar de manera cronológica el intercambio de información entre los usuarios. 4. Conferencias. Coordinar reuniones y juntas entre los usuarios del sistema. 5. Administracion del tiempo. Coordinar la administración del tiempo para cada uno de los usuarios. Cuadro 3.1: Funciones de los sistemas colaborativos 3.2.6. Tipos de aplicaciones colaborativas Dependiendo de la funcionalidad del sistema colaborativo que se quiera estudiar, puede encontrarse en distintos tipos de aplicaciones. En el cuadro 3.2 se muestra la clasificación de las aplicaciones según el tipo de software[10]. Tipo de software Función disponible Ejemplos 1. Suites de sistemas colaborativos completos. Correo electrónico, agenda de contactos, compartir archivos, compartir información por medio de aplicaciones propias de la empresa. Lotus notes, Microsoft Exchange, Novell Groupwise. 2. Aplicaciones independientes de uso espećıfico. Correo electrónico, agenda de contactos, compartir archivos, compartir información por medio de aplicaciones propias de la empresa. Eudora, Outlook, Telefinder, Messenger. 3. Aplicaciones de ofimática de uso general. Manejo de versiones. Microsoft Word, Excel, Lotus Word Pro, Corel Word Perfect. 4. Sistemas colaborativos basados en tecnoloǵıas web. Correo electrónico, agenda de contactos, compartir archivos, compartir información por medio de aplicaciones propias de la empresa. Horde, Claros, Group-Office, Zimbra. 5. Sistemas operativos. Administrar recursos, comunicación inter procesos. Todos los programas de aplicación. Cuadro 3.2: Tipos de sistemas colaborativos La gran diversidad de funcionalidades y aplicaciones colaborativas, crea una barrera difusa para definir donde comienzan y donde terminan los sistemas 33 colaborativos y otros tipos de software relacionados. La respuesta es que no existe tal frontera, en virtud que en principio todas podŕıan trabajar en conjunto para crear un gran sistema colaborativo. 3.2.7. Clasificación de los sistemas colaborativos Las divisiones de los sistemas colaborativos están basadas en el cómo, cuándo y dónde son utilizadas. El término dónde, describe el ámbito donde se utilizará la aplicación, ya sea de manera local en un mismo grupo de trabajo u oficina, o de manera global, entre varias localidades o grupos de trabajo distinto. El término cuándo, se refiere a si la comunicación entre los usuarios es en tiempo real (Śıncrona), o si los eventos son desarrollados a medida que los usuarios env́ıan mensajes entre ellos a destiempo o sin necesariamente un orden espećıfico (Aśıncrona). El término cómo, hace referencia a si los usuarios trabajan en función de una tarea común o si se definen tareas y roles distintos para cada grupo de usuarios por separado[10]. Figura 3.3: Clasificación de los sistemas colaborativos En la figura 3.3 se describe, dada la clasificación seleccionada para los sistemas colaborativos, las posibles soluciones de aplicaciones colaborativas para distintas situaciones de negocios, en función de si están f́ısicamente juntos los integrantes del equipo de trabajo o si están separados, asi como si la comunicación entre ellos debe ser śıncrona o aśıncrona. 34 3.2.8. Servicio de correo electrónico De muchas maneras el correo electrónico es la herramienta colaborativa mas popular del mundo hablando en términos de volumen. Exist́ıan para el año 2007 aproximadamente 1.2 billones de usuarios a nivel mundial y se estima que para el año 2011 el número de usuarios aumente a 1.6 billones [11]. De hecho, una de las principales caracteŕısticas al introducir las redes corporativas fue el desarrollo del servicio de correo, de manera de tener a todos los usuarios conectados v́ıa e-mail. Este es un servicio adoptado por las oficinas, en vista que provee una forma rápida y eficiente de pasar mensajes entre sus usuarios, ofrece una gran variedad de prerrogativas en comparación con el correo tradicional, como por ejemplo, la rapidez de la entrega y la respuesta de los mensajes. Todas estas son ventajas que se traducen en la rapidez que una empresa puede lograr, con el objeto de ahorrar dinero al momento de tomar decisiones. Funcionalidades y funciones del servicio de correo electrónico El servicio de correo electrónico comparte muchas caracteŕısticas con los sistemas de correo tradicional, es por eso que logra su rápido desarrollo. Al igual que el correo tradicional en el servicio implementado de forma digital se deben proveer ciertas funcionalidades como crear, enviar y recibir mensajes. En la aplicación cliente, el usuario tiene una bandeja de entrada con los mensajes recibidos de otros usuarios con campos como el remitente, el asunto del mensaje, la prioridad y el contenido. Los mensajes pueden ser también revisados para verificar quien los ha respondido. Figura 3.4: Ejemplo de cliente de correo La figura 3.4 muestra un ejemplo clásico de un cliente de correo que presenta al usuario sus funcionalidades en tres paneles. A la izquierda puede observarse en 35 forma de árbol, la descripción de las carpetas que contienen los mensajes; al lado derecho (superior) se muestran los mensajes asociados a la carpeta seleccionada; en el panel izquierdo, los mensajes al ser seleccionados pueden ser borrados, respondidos o reenviados de acuerdo a los requerimientos del usuario; en el panel inferior (lado derecho), se muestra el contenido del mensaje seleccionado. Direccionamiento La dirección del destinatario se encuentra generalmente registrada en la libreta de direcciones asociada al usuario que está haciendo uso del cliente de correo. En algunos casos esta libreta debe ser llenada por cada usuario de manera separada, pero existen esquemas donde se cuenta con un conjunto de contactos asignados de manera automática por defecto. Esos contactos deben ser de los demás usuarios que pertenezcan al grupo de trabajo o contexto de trabajo. Funcionalidades poderosas para los usuarios del servicio Desde que el servicio de correo electrónico se volvió una herramienta sencilla de entender y utilizar, se desarrollaron funcionalidades que permiten incrementar la eficiencia del servicio y del desempeño de los usuarios al realizar sus tareas respectivas. Esas funcionalidades son: Env́ıo de archivos adjuntos: Los mensajes son comúnmente enviados, pero existen interfaces que dificultan al usuario explotar al máximo esta funcionalidad, inclusive existen clientes que no cumplen con los estándares para el env́ıo de archivos adjuntos como las Extensiones de Correo de Internet Multipropósito (Multipurpose Internet Mail Extensión - MIME). Acuse de recibo y lectura: Esta es una función muy útil pero muy poco utilizada por los usuarios del servicio de correo. Esta funcionalidad permite al usuario, determinar cuando el mensaje fue entregado y cuando fue léıdo por el usuario que recibió el mensaje. Grupos de correo: Esta opción permite enviar mensajes de correo a grupos espećıficos de correo, como por ejemplo el grupo de trabajo. Utilizando esta técnica es posible enviar por difusión un mensaje a un grupo espećıfico, aumentando el flujo o intercambio de información entre un equipo. También los administradores pueden enviar información de interés común a todos los usuarios del sistema sin la necesidad de enviar un correo por cada usuario. 36 Seguridad: La seguridad al enviar los mensajes es de vital importancia. Existen sistemas que permiten cifrar el canal de comunicación entre los servidores de correo y aśı garantizar la confidencialidad del mensaje al recorrer el medio de comunicación. Un ejemplo es el protocolo de Capa de Conexión Segura (Secure Socket Layer - SSL). También existen sistemas que permiten comprobar la veracidad y la autenticidad del mensaje o cifrar el contenido del mismo; un algoritmo que permite implementar esta funcionalidad es PGP. Comunicación entre el cliente y el servidor de correo El Protocolo de Oficina de Correos 3 (Post Office Protocol 3 - POP3) y el Protocolo de Acceso a Mensaje de Internet (Internet Message Access Protocol - IMAP4) definen métodos para que los clientes puedan acceder a los mensajes de correo electrónico almacenados en el servidor, sobre una red TCP/IP. POP3 es un método desarrollado antes que IMAP, actualmente muy utilizado, que descarga los correos del servidor al conectarse a él. La desventaja para este modelo de acceso a los mensajes es que no puede discriminarse del contenido a ser descargado, lo que implica que los clientes que se conecten mediante enlaces de poca capacidad, deben sufrir de los retardos asociados a este tipo de descargas. Un protocolo más reciente es IMAP4, el cual permite que la descarga de los mensajes sea bajo demanda y únicamente sobre los mensajes seleccionados por el usuario; que también admite realizar la administración de las carpetas remotas almacenadas en el servidor, y no únicamente sobre la bandeja de entrada, como era el caso de POP3[3]. Transferencia de mensajes entre servidores de correo El Protocolo Simple de Transferencia de Correo Electrónico (Simple Mail Transfer Protocol - SMTP), es el protocolo estándar para la transferencia de mensajes entre servidores conectados a la Internet. Esto permite por ejemplo, la interoperabilidad entre una amplia gama de sistemas Microsoft, UNIX o Linux. El único requisito es que esté conectado a la Internet y posea un Gateway SMTP que admita enviar mensajes formateados para el protocolo SMTP. El protocolo SMTP involucra el establecimiento de una conexión entre los servidores que quieran intercambiar mensajes. El servidor destino puede ser destino final para ser entregado el mensaje o puede ser un servidor intermedio. Una vez 37 establecida la conexión, el emisor del mensaje SMTP env́ıa un mensaje MAIL al destinatario que indica que se quiere enviar un mensaje a ese servidor, si el mensaje es aceptado, el servidor de correo origen recibe un mensaje OK. Este responde con un mensaje RCPT identificando el remitente del mensaje y si éste es aceptado, se env́ıan los datos asociados al mensaje[3]. 3.3. Group-Office Group-Office es una oficina virtual, desarrollada con tecnoloǵıas Web para grupos de trabajo. Es una suite formada por un calendario, una agenda y un gestor de archivos, aśı como un cliente de correo y un administrador de usuarios. Este sistema es diseñado e implementado por la empresa desarrolladora de software Intermesh. [12] Está basado en una arquitectura modular, lo cual implica un aumento de la flexibilidad de la aplicación. Por eso, un desarrollador puede añadir muchas más funcionalidades a las existentes, gracias a su estructura. Actualmente, integra una agenda con soporte para plantillas de mensajes de correo electrónico. De esta forma, se pueden crear documentos de forma semi-automática. Aunque fue diseñado para pequeñas y medianas empresas, brinda soporte para miles de usuarios. El administrador de archivos permite almacenar y compartir documentos de trabajo con otros usuarios, el cliente de correo soporta los protocolos IMAP y POP3. Esta plataforma es compatible con el protocolo iCalendar 1 de tal manera que puedan ser exportados e importados calendarios y eventos para ser utilizados en otras aplicaciones. 3.3.1. Requerimientos del sistema El cuadro 3.3 muestra los requerimientos básicos para poder llevar a cabo la instalación de la plataforma Group Office. La plataforma Group Office puede ejercutarse en múltiples plataformas y es desarrollada con el lenguaje de programación PHP. 1http://tools.ietf.org/html/rfc2445,http://tools.ietf.org/html/rfc2446,http://tools.ietf.org/html/rfc2447 38 Tipo Requerido Recomendado Sistema operativo Linux, BSD, Unix, Mac OS, Windows Linux Servidor web Apache > 2 Ultima estable Lenguaje de programación PHP > 5.2 Ultima estable Servidor de base de datos MySQL > 5 Ultima estable Navegador Firefox > 1.5, Safari > 3, Opera > 9, Internet Explorer > 6 Firefox Cuadro 3.3: Requerimientos de Group-Office 3.3.2. Usuario final Group Office ofrece una amplia gama de aplicaciones con las que el usuario puede realizar diversas tareas básicas, entre las que tenemos el calendario, agenda, libreta de direcciones y correo electrónico. Todos estos elementos son módulos de la plataforma Group Office. 3.3.3. Módulo de correo electrónico Este módulo hace posible leer y componer mensajes desde cualquier lugar. También permite configurar múltiples cuentas de correo con un mismo usuario. En la figura 3.5 se muestra el módulo de correo electrónico de Group Office. En el menú de la izquierda se observa la lista de carpetas del usuario y del lado derecho de la imagen se aprecia una vista del correo seleccionado. Estructura de carpetas Por defecto la cuenta de correo contiene una Bandeja de Entrada, Elementos Enviados, Borradores, Papelera y una carpeta para el correo no deseado. La Bandeja de Entrada contiene todos los mensaje entrantes; Elementos Enviados deposita todos los mensajes que han sido enviados; la Papelera contiene todos los mensajes que han sido borrados y la carpeta de correos no deseados retiene todos los elementos que han sido clasificados como correo no deseado. Group Office no clasifica los correos como no deseados, un filtro adicional (externo) debe hacer esta tarea y se debe crear un filtro para enviar los mensajes a la carpeta correspondiente. 39 Figura 3.5: Vista del módulo de correo de Group-Office Lectura de mensajes Al seleccionar una carpeta se muestran todos los mensajes contenidos en la misma; si un mensaje no se ha léıdo aún, aparecerá resaltado con el texto en negrilla. Si se selecciona un correo una vez, el contenido se mostrará justo debajo de la lista de correos, generando aśı una vista previa del mensaje. Cuando se seleccione dos veces alguno de los correos, entonces el mensaje se abre en pantalla completa. Si se recibe un nuevo mensaje de correo, un sonido caracteŕıstico se reproduce y el número de mensajes que no han sido léıdos se incrementa en la esquina superior derecha. Composición de mensajes Se puede componer un correo con tan solo seleccionar una dirección de correo electrónico que se encuentre en cualquier lugar del Group-Office, o también se puede seleccionar el botón Componer que se encuentra en el Módulo de Correo Electrónico. En la figura 3.6 se muestra la interfaz de composición de mensajes. Se debe especificar el remitente si se tiene más de una cuenta configurada y luego especificar a quién va dirigido, en los campos Para, CC (Con Copia) y CCO (Con Copia 40 Figura 3.6: Vista de la interfaz de composición de mensajes Oculta). Finalmente se especifica el asunto del mensaje para aśı comenzar a redactar el cuerpo del mismo. Se cuenta con una opción para adjuntar archivos al mensaje a ser enviado, estos archivos pueden provenir de los archivos compartidos por el usuario o propiamente de su computador. 3.3.4. Módulo de resumen de contenido Este módulo funciona como un resumen del contenido de los módulos del Group-Office. Este es el módulo de inicio por defecto ya que en él, los usuarios pueden ver rápidamente las tareas que tengan definidas para la fecha actual, los correos que no han sido léıdos en la bandeja de entrada y las entradas en el calendario para la fecha actual y el d́ıa siguiente. También es posible configurar la distribución de este módulo, eliminando o agregando nuevas vistas de módulos, o cambiar la posición de las vistas, de manera que el usuario pueda agruparlas u ordenarlas según sus prioridades o preferencias. (Ver figura 3.7) 3.3.5. Módulo de calendario En el módulo de calendario el usuario tiene la opción de administrar sus citas con otros usuarios, también permite que otros usuarios realicen citas, colocándolas en su 41 Figura 3.7: Vista del resumen de los módulos calendario o viceversa. Se tienen vistas del calendario por d́ıa, grupo de d́ıas, por semana o por mes. Crear nuevas citas Para crear una nueva cita, sólo se deberá seleccionar la fecha espećıfica y aśı se mostrará una ventana donde se introducirán los datos de la cita. Algunos campos son obligatorios como el asunto, el lugar y la descripción. (Ver figura 3.8) El módulo permite agregar participantes al evento, sólo se deberán escribir sus direcciones de correo electrónico. Si se requiere agregar más de un usuario, deben escribirse las direcciones separadas por el carácter coma (,). Los eventos asociados a un usuario podrán ser vistos en el calendario de los contactos que se agregaron. Se puede configurar la recurrencia de la cita o evento, es decir si ocurrirá un solo d́ıa o de forma diaria, semanal, mensual u otras configuraciones, como por ejemplo, que el evento ocurra el primer lunes de cada mes. Los eventos tendrán el permiso que defina el usuario que lo crea, estos permisos definirán si puede ser modificado o eliminado por alguno de los participantes, si es un evento privado, si cualquier contacto puede modificarlo o si únicamente puede ser editado por el usuario que lo creó. También se le puede asignar un color a un evento, 42 Figura 3.8: Vista de creación de citas para que pueda ser identificado mas rápidamente en el calendario una vez creado. (Ver figura 3.9). Imprimir calendario Se puede imprimir cualquier vista del calendario que requiera el usuario con tan solo seleccionar el botón Imprimir del módulo. Automáticamente aparece la ventana de configuración de impresión del navegador que se esté utilizando. 3.3.6. Módulo de tareas Este módulo permite crear una lista de tareas. Las tareas se pueden agregar o eliminar de la lista. Es posible que el usuario vea su propia lista de tareas y también ver la lista de otros usuarios. Si una tarea se completó sólo se debe marcar el recuadro de selección al lado de cada tarea y el sistema la mostrará como terminada. De esta manera podemos estar al tanto de qué tareas quedan pendientes. 43 Figura 3.9: Vista de resumen de citas Las tareas también pueden ser vistas desde el calendario de eventos y citas. 3.3.7. Módulo de archivos Este módulo permite subir archivos en ĺınea y de esta forma poder accederlos desde cualquier lugar o ser compartidos con otros usuarios. Los archivos, al igual que los correos serán mostrados en una estructura de árbol. (Ver figura ??) Este módulo permite las siguientes tareas: Navegación: Navegar por la estructura del árbol del sistema, recorriendo todas las carpetas y archivos disponibles. Crear carpetas: Para colocar los archivos en carpetas separadas, sólo se debe seleccionar la opción de nueva carpeta y luego ingresar el nombre con el que se identificará. También se puede navegar la estructura de árbol y aśı crear subcarpetas, de ser necesario. Subir archivos: El usuario debe seleccionar la carpeta donde desea subir los archivos y luego seleccionar la opción Subir Archivo. Aparecerá una ventana que permite navegar por los archivos del disco duro del computador del usuario. 44 Figura 3.10: Vista del módulo de archivos El usuario puede subir hasta cinco archivos, los cuales deben tener un tamaño limitado, por defecto el tamaño máximo es de 5MB, pero este parámetro puede ser configurado por el administrador del sistema. Copiar y mover: Se podrán copiar y mover archivos o carpetas de un lugar a otro, cuando el usuario lo considere necesario para organizar los datos que tiene almacenados en el sistema. El usuario puede utilizar los botones de copiar y cortar según sea su interés y luego usar el botón pegar para concretar la tarea. Búsqueda: Una vez creada la estructura de archivos, el usuario puede necesitar localizar rápidamente un archivo según su nombre o fecha de actualización, para ello cuenta con la herramienta de búsqueda del módulo. Compartir carpetas con otros usuarios: Los usuarios pueden compartir carpetas entre ellos, para ello se deben definir permisos sobre las carpetas, a fin de garantizar el acceso debido de otros usuarios. Editor de texto: Desde cualquier lugar, el usuario podrá redactar un documento y subirlo al sistema de archivos en ĺınea. 45 3.3.8. Administrador La cuenta del administrador es usada para llevar a cabo las siguientes actividades: Agregar y editar cuentas de usuario. Agregar o editar grupos de usuarios. Instalar/Eliminar módulos. Crear elementos que serán comunes a varios usuarios, como una libreta de direcciones globales, una cita o evento que debe aparecer en varios calendarios o un mensaje entrante para varios usuarios. 3.3.9. Desarrollador Group-Office tiene un amplio conjunto de caracteŕısticas, pero debido al crecimiento natural de las organizaciones llega el momento en el que es necesario incluir nuevas funcionalidades al sistema para adaptarlo mejor a las necesidades actuales de la empresa. Group-Office cuenta con una amplia documentación para que el desarrollador pueda crear nuevos módulos en el sistema, la cual se puede encontrar en el foro oficial de la aplicación2. El desarrollador sólo necesita contar con la interfaz de ĺınea de comandos de PHP, un sistema de versionamiento, un editor de texto y un cliente de Base de Datos. Para asegurar que el trabajo del desarrollador siga una estructura unificada y estándar, también existe información sobre la codificación de las directrices de la interfaz gráfica de usuario en los manuales de referencia. 3.3.10. Situación actual Después de un año y medio de desarrollo y pruebas, Group-Office libera su versión 3.0 estable, el 24 de noviembre de 2008. La versión anterior era evidente que necesitaba ser modernizada. Se agregaron nuevas técnicas Web para hacerla más amena al usuario y está listo para ser utilizado como una plataforma profesional. La 2http://www.group-office.com/forum/ 46 interfaz fue completamente rediseñada y ahora se asemeja más a una aplicación de escritorio. Además de ser agradable para la vista y las mejoras de usabilidad realizadas, se hicieron adaptaciones a la base de datos para usar la extensión mejorada MySQLi para mayor seguridad. Los datos se env́ıan a la Base de Datos a través de una conexión segura, protegiéndola de ataques a bajo nivel, por lo que se dificulta al desarrollador poco experimentado escribir consultas inseguras cuando se utiliza el entorno de trabajo de Group-Office. 3.4. Programación Extrema La programación extrema es un enfoque de desarrollo de aplicaciones que se basa en un conjunto de valores, principios y prácticas esenciales. Las variables controladas por el equipo de desarrollo son el tiempo, el alcance, la calidad y el costo. Al integrarse de manera apropiada estas cuatro variables, se crea un estado equilibrado entre todas las actividades y recursos requeridos para terminar el proyecto. Las actividades en el modelo de programación extrema consisten en escuchar, diseñar, codificar y probar. La actividad de escuchar al cliente es fundamental para determinar el horizonte de la aplicación. El diseño de un sistema estético y funcional al cual pueda brindársele soporte es de vital importancia. La codificación, pruebas de funcionalidad y desempeño son obligatorias. Las ventajas del modelo de desarrollo XP recaen en el hecho, que al tener la retroalimentación de la utilización del sistema por parte de los usuarios, se pueden estimar estas cuatro variables, de manera de equilibrar los resultados del proyecto. Como ejemplo, si el analista de sistemas determina y cuantifica el alcance, la calidad y el tiempo para culminar el proyecto, puede estimar el costo. Si el proyecto se encuentra retrasado se puede invertir en la contratación de más personal aumentando el costo del mismo. También si se estiman la duración del proyecto, el costo y la calidad del mismo, puede determinarse el alcance. Por lo tanto, la programación extrema utiliza ciclos de retroalimentación a intervalos finitos y determinados al comienzo del desarrollo del sistema. 47 La administración de estos proyectos de manera sistematizada y organizada es importante, por cuanto al definir el plan global de desarrollo, se permitirá que un conjunto de programadores, analistas y diseñadores trabajen independientemente integrando su trabajo de manera constante, logrando resultados sólidos, estables y mantenibles a lo largo del tiempo. 3.4.1. Valores y principios de la programación extrema En la programación extrema es importante que se establezcan los valores y principios permitan establecer el contexto para la colaboración y retroalimentación entre los programadores y usuarios finales. La programación extrema es una metodoloǵıa disciplinada, a diferencia de lo que pudiera entenderse por la definición de programación extrema. Esta se basa en cuatro valores fundamentales: Comunicación: Este método de desarrollo de software establece que debe hacerse énfasis en que la comunicación entre todos y cada uno de los participantes del proyecto sea libre y sincera. Simplicidad: Siempre debe tomarse en cuenta que el objetivo de un proyecto es proporcionar un valor al cliente, sin tener en cuenta la pericia del equipo de desarrollo o que éstos resuelvan más problemas de los que el cliente quiere resolver. Retroalimentación: Todo desarrollo de software debe basarse en la retroalimentación sobre su progreso. Esta retroalimentación puede partir del cliente, programadores o herramientas de desarrollo. Coraje o valent́ıa: En la programación extrema se debe tener valor al tomar las decisiones, como por ejemplo, seguir desarrollando una aplicación o sistema que ha llegado a su ĺımite de escalabilidad. Estos valores deben estar fundamentados en cinco principios básicos, los cuales son el conseguir una retroalimentación rápida, no complicar los planes de trabajo con presunciones (asumir que las soluciones son simples), realización de cambios incrementales, realizar productos de calidad y abrazar los nuevos cambios, es decir, no tomar como premisa que los cambios pueden traer malas consecuencias. 48 3.4.2. Prácticas de la programación extrema Estos principios se manifiestan a través de las doce prácticas de la programación extrema, que definen lo que el equipo de trabajo realizará d́ıa a d́ıa. Estas prácticas están caracterizadas por la cohesión de todos sus elementos y que cada una de ellas se trata de llevar a sus extremos. Planificación: Esta práctica busca dividir las funcionalidades de un proyecto en pequeños fragmentos denominados historias de usuario. Tanto el cliente como los desarrolladores determinan la duración de cada una de estas historias, qué historias y cuáles son más importantes que otras, tomando como premisa que siempre debe empezarse el desarrollo del proyecto por las más importantes. Entregas frecuentes: Busca publicar una nueva versión del sistema en cuanto sea posible aportar algún nuevo valor al cliente, de esta forma se maximiza la retroalimentación y se controla de manera más espećıfica y granular el proyecto. Simplicidad: El sistema debe ser lo mas simple y sencillo posible, siempre y cuando cumpla las especificaciones del usuario (pruebas de aceptación). En un contexto donde las prioridades y requerimientos cambian constantemente, no tiene sentido realizar complejos y sofisticados diseños que contemplen posibles requerimientos a futuro. La mejor manera de obtener un conjunto de requerimientos, es el proporcionar lo antes posible un prototipo al cliente y obtener retroalimentación; y la manera mas sencilla de obtener un modelo sencillo que funcione, es el recurrir a los patrones de diseño. Pruebas automáticas: ¿Cómo puede conocer un desarrollador que el código que escribió realmente funciona?, ¿Cómo puede saber que seguirá funcionando siempre?, la única forma de asegurarlo con cierta confianza, es programando pruebas automáticas con las que se pueda comprobar el código en cualquier momento sin esfuerzo. Estas pruebas no pueden ser dejadas para el final, sino que deben programarse en conjunto con el sistema. Integración permanente y continua: Debe llevarse al extremo una práctica convencional de la ingenieŕıa del software. Si el proceso de integración es una fase crucial donde pueden ocurrir errores con alta probabilidad, ¿Por qué dejarla para el final, cuando existe un mayor riesgo de falla?. Es más productivo realizar la integración de las aplicaciones o historias desarrolladas de manera continua (cada hora, cada d́ıa). Para poder lograr ésto, es importante que exista 49 algún mecanismo que permita automatizar el proceso de integración y pueda verificarse mediante pruebas. Refactorización: La refactorización es un proceso que permite modificar el diseño de un módulo sin alterar su comportamiento externo. Debido a ésto, es posible compatibilizar diseños simples con flexibilidad. Programación en parejas: Consiste en llevar al extremo una práctica habitual. Si validar y verificar el código es bueno, ¿Por qué no hacerlo continuamente desde que se escribe por primera vez? La programación en parejas consiste en compartir un único computador y colaborar para escribir el código o las pruebas. De esta manera, se estimula la comunicación y la transmisión de conocimiento, permite detectar errores con antelación y producir código de más calidad. Propiedad colectiva del código: Al efectuarse una refactorización de código, o al corregir errores en la aplicación, algún programador tendrá que hacer los cambios, en donde las ĺıneas de código a modificar, no necesariamente debieron haber sido escritas por el mismo. La metodoloǵıa XP invita a efectuar estas modificaciones con valor y decisión ya que esta práctica permite que los distintos programadores estén en contacto con todo el código en todo momento. Semanas de 40 horas: Los desarrolladores agotados son propensos a cometer errores por accidente. Si las semanas son de más de 40 horas se tiende a presionar a los desarrolladores. El cliente es parte del equipo: Para lograr una retroalimentación ágil, el cliente no debe estar alejado del equipo; en una situación ideal, el cliente debe estar dentro del equipo. De esta manera se puede colaborar con los desarrolladores para escribir las pruebas de aceptación. Metáforas: El objetivo de esta práctica es conseguir una metáfora que le permita tanto al cliente como al equipo de desarrollo hablar en los mismos términos, teniendo una visión común del sistema. Estándares de codificación: Utilizar estándares de codificación es un requisito y una necesidad básica al escribir código que será léıdo por otros desarrolladores. Esta comprende aspectos de documentación y formateado del código, que permita que éste pueda ser entendido y modificado con facilidad. 50 Caṕıtulo 4 Metodoloǵıa de Desarrollo Al realizar la investigación sobre la metodoloǵıa de desarrollo de software a utilizar, para la implantación y adecuación del sistema colaborativo en cuestión, se decidió el uso de la Programación Extrema (Extreme Programming - XP) (propuesta de Kent Beck y Ward Cunningham, que se empleó por primera vez en el año de 1996, en la Daimler Chrysler R©.), la cual propone como premisa primordial la simplicidad en la utilización de información de retorno, y en la adaptación del proyecto a medida que se desarrolla, siguiendo mecanismos evolutivos. Esta metodoloǵıa es óptima en grupos de desarrollo pequeños. 4.1. Análisis de Requerimientos y Diagnóstico 4.1.1. Requerimientos Generales Esta plataforma de software colaborativo debe poseer módulos que permitan integrar todas las funcionalidades básicas del webmail actual de la Facultad de Ciencias, como correo electrónico, tareas, calendario, manejo de carpetas y notas, pero mejorando su presentación hacia el usuario, enriqueciéndolas con la tecnoloǵıa AJAX y haciéndolas mas fáciles de comprender y manejar, para lograr aśı que los usuarios la utilicen como complemento de sus actividades cotidianas, tanto de tipo académico y administrativo. Adicionalmente, esta plataforma debe poseer todas las herramientas orientadas a integrar y desarrollar módulos que se adecuen a los requerimientos de las escuelas o departamentos de la Facultad de Ciencias, siguiendo unos lineamientos de interfaz 51 y desarrollo de software. 4.1.2. Requerimientos Funcionales Los requerimientos funcionales de la plataforma están determinados por los componentes o módulos que la integraran: Diseñar un módulo de soporte técnico con el cual el personal administrativo y docente de la Facultad de Ciencias podrá realizar solicitudes de soporte técnico al Centro de Computación para ser atendidas por el personal dedicado a esa actividad. Diseñar el módulo de administración soporte técnico del Centro de Computación, con la finalidad que el personal administrativo y los pasantes dedicados a esta actividad puedan monitorear las solicitudes de soporte que realizan los docentes y personal administrativo de la Facultad de Ciencias. Asimismo, el administrador podrá distribuir las tareas pendientes entre en personal y aśı medir tiempos de respuesta y rendimiento de los empleados. Diseñar un módulo para el olvido de contraseña, que le permita los usuarios establecer una nueva contraseña en el caso de que la contraseña anterior sea olvidada o extraviada. El mecanismo consistirá en enviar una contraseña provisional al correo alternativo proporcionado por el usuario. Diseñar un módulo para establecer el reenv́ıo automático de los correos electrónicos a otras cuentas de correo que el usuario determine, para los casos del personal que utiliza otras cuentas de correo con más frecuencia que la institucional. Diseñar un módulo para acceder al sistema de Reservación de Salas que se encuentra actualmente en producción. Este módulo debe permitir a los usuarios acceder al Sistema de Reservación de Salas según los perfiles definidos para cada usuario. De esta forma sólo se autenticarán en la plataforma y podrán acceder a los sistemas que hayan sido integrados a ella. Diseñar un módulo de mensajeŕıa instantánea para que los docentes y personal administrativo de la Facultad de Ciencias puedan comunicarse, agregando a los usuarios por su correo institucional, el cual pueden obtener del directorio de la aplicación. Adicionalmente, podrán cambiar su estado de conexión y crear salas de chat para que varios usuarios puedan comunicarse a la vez. 52 Diseñar un módulo de foros que le facilite a los usuarios crear tópicos sobre diversos temas, permitiendo que otros usuarios escriban sus opiniones al respecto. De tal forma que tanto los temas como las respuestas, opiniones y comentarios sean publicados y estén al alcance de toda la comunidad de la Facultad de Ciencias. 4.1.3. Requerimientos No Funcionales Las tecnoloǵıas seleccionadas para la implementación del sistema permitirán fijar requerimientos adicionales para darle valor agregado al producto final. La idea es ofrecer un sistema que pueda ser de fácil uso, robusto y escalable. Para esto se pueden fijar los siguientes requerimientos no funcionales: Proporcionar soporte multi-plataforma. Ofrecer un sistema Web soportado por múltiples navegadores. Propiciar los mecanismos adecuados para que el sistema pueda ser escalable. Efectuar los cambios necesarios al servicio de directorio de la Facultad de Ciencias, de modo que éste pueda soportar a todos lo usuarios de la Facultad (personal docente, administrativo y estudiantes), bajo un mismo dominio sin nombres de usuario duplicados. 4.2. Metáfora del Sistema Partiendo de la instalación y configuración del servidor y de la instalación y configuración de la plataforma de GroupOffice, se procederá a implementar algunas funcionalidades que se encuentran en el webmail de La Facultad de Ciencias, como por ejemplo la opción de cambio de contraseña y reenvio automático de correos, con la finalidad de satisfacer las necesidades de los usuarios, para lograr que, con la utilización de la plataforma, estos puedan complementar sus actividades académicas y administrativas. Entre las necesidades de lo usuarios podemos identificar: Contar actualmente con un mecanismo para manejar el olvido o extrav́ıo de la contraseña para acceder a la plataforma y que de esta forma los usuarios no se vean obligados a dirigirse al Centro de Computación para solicitar una contraseña nueva. 53 Inexistencia de filtros para los correos entrantes que puedan adaptarse a las exigencias del usuario. La necesidad de establecer grupos de trabajo, para enviar correos, compartir eventos, tener acceso restringido a algunos sistemas y compartir tareas. No tener al alcance todas las aplicaciones de La Facultad de Ciencias en un mismo entorno y accesibles con un único usuario y contraseña. La necesidad de mantener una imagen institucional, con lineamientos de interfaz de usuario y lineamientos de desarrollo de software. En la tabla 4.1, 4.2, 4.3 y 4.4 se muestran los cuadros con la planificación de las iteraciones: Iteración Meta Fecha Inicio Fecha Fin Duración 0 Instalación, configuración, y adecuación de la plataforma GroupOffice. 30/03/2009 03/04/2009 5 d́ıas. 1 Implementación de cambio de contraseña, olvido de contraseña y reenv́ıo automático de correos electrónicos. 06/04/2009 10/04/2009 5 d́ıas. Cuadro 4.1: Planificación de las iteraciones I 54 2 Realización del script para la migración del directorio de la Facultad de Ciencias y realización de la traducción al español de los mensajes de la plataforma. 13/04/2009 17/04/2009 5 d́ıas. 3 Desarrollo del módulo de soporte técnico del Centro de Computación. 20/04/2009 24/04/2009 5 d́ıas. 4 Desarrollo del módulo de administración de soportes técnicos del Centro de Computación e instalación del sistema de mensajeŕıa instantánea como módulo de la plataforma. 27/04/2009 01/05/2009 5 d́ıas. Cuadro 4.2: Planificación de las iteraciones II 55 5 Depuración del módulo de administración de soportes técnicos del Centro de Computación e instalación del sistema de Reservación de Salas del Centro de Computación como módulo de la plataforma. 04/05/2009 08/05/2009 5 d́ıas. 6 Adecuación de la interfaz del módulo de mensajeŕıa instantánea. 11/05/2009 15/05/2009 5 d́ıas. 7 Implementación de mecanismos que permitan optimizar la aplicación y asegurar el acceso a la misma. 18/05/2009 22/05/2009 5 d́ıas. Cuadro 4.3: Planificación de las iteraciones III 56 8 Depuración de la traducción al español de los mensajes de la plataforma y corrección de la semántica de los mensajes que ya estaban en español. 25/05/2009 29/05/2009 5 d́ıas. 9 Instalación del foro PHPBB3 como módulo de la plataforma. 01/06/2009 05/06/2009 5 d́ıas. 10 Pruebas de aceptación e integración 08/06/2009 12/06/2009 5 d́ıas. Cuadro 4.4: Planificación de las iteraciones IV 4.3. Iteraciones Las iteraciones representan intervalos de tiempo en los que se fijan responsabilidades y tareas para los integrantes del grupo de trabajo, mas es espećıfico para los desarrolladores del proyecto. Durante el transcurso de cada iteración, se deben implementar las funcionalidades, módulos, modificaciones o configuraciones que sean necesarias para cumplir con las tareas establecidas. Para este trabajo se definieron iteraciones con una duración de 5 d́ıas (40 horas), lo cual permite cumplir con las prácticas de la programación extrema presentando entregas frecuentes y sencillas sin presionar al equipo de trabajo, como se define en el caṕıtulo 4.1.2. 4.4. Actividades Para la definición de las actividades de este trabajo, se tomaron en consideración los siguientes lineamientos: Planificar tomando en cuenta el tiempo, el alcance y la calidad. Decidir cuántas caracteŕısticas o funcionalidades incorporar en cada iteración. Dar prioridad a ciertas iteraciones. 57 Designar responsabilidades. Balancear el riesgo y escoger la duración de las iteraciones. Decidir qué hacer cuando no se cumplieron los objetivos de una iteración en el tiempo previsto. Para el desarrollo de este trabajo se consideró necesario demarcarlo en iteraciones. De esta manera, el desarrollo se mantiene en concordancia con los principios y valores que definen la metodoloǵıa XP, a los fines de distinguir claramente las fases del proyecto y el producto de software logrado en cada etapa. Se procederá a realizar una descripción de las prácticas del modelo de desarrollo XP más resaltantes al momento de desarrollar el proyecto descritas en el presente caṕıtulo. Planificación: esta actividad es de suma importancia porque permite identificar las necesidades y proporciona propuestas para solucionar problemas y cubrir las necesidades de los usuarios. Diseño: esta actividad podŕıa implicar la elaboración de diagramas de procesos, despliegue o cualquier otro tipo de diagrama o modelo sencillo que ayude a comprender mejor el sistema a medida que se concibe. Codificación: esta actividad contemplará la implementación de código PHP, JavaScript y CSS, para modificar funcionalidades existentes y adecuarlas mejor a los requerimientos de los usuarios o para desarrollar nuevos módulos y funcionalidades. Pruebas: en esta actividad se pueden incorporar pruebas funcionales para comprobar que el comportamiento de los módulos es el esperado. También se incorporarán las pruebas unitarias y de integración que puedan ser importantes para mejorar los módulos y la relación entre ellos. Es importante destacar, que se contemplarán iteraciones que no implementen las cuatro actividades antes descritas, debido a que no serán requeridas o podrán adoptarse otras actividades como investigación, refactorización, etc. 58 4.5. Desarrollo 4.5.1. Iteración 0 Del 30-Mar-2009 al 4-Abr-2009 En ésta iteración se instaló, configuró y adecuó la plataforma de software colaborativo Group Office. Planificación Para esta iteración se definió la meta Instalación, configuración, y adecuación de la plataforma Group-Office. Los objetivos fijados para esta iteración incluyen: Instalar Group Office en el servidor. Configurar la plataforma Group Office. Configurar el mecanismo de autenticación para los usuarios. Hacer pruebas y adaptar la interfaz de usuario de la plataforma. Diseño Para ésta etapa se instaló el servidor web y el servidor de base de datos según las caracteŕısticas y requerimientos de Group Office, definidos en el caṕıtulo 3.3. Luego se instaló la plataforma Group Office y se configuró el mecanismo de acceso para los usuarios del sistema. Una vez terminada la configuración se modificó la interfaz del sistema para darle una imagen institucional, agregando logos y mensajes alusivos a la Facultad de Ciencias. Codificación Procedimiento para la instalación del servidor El siguiente comando incluye la instalación de PHP 5, Apache 2, MySQL 5, PERL, Postfix y otras libreŕıas necesarias, definidas como requerimientos en el asistente de instalación. Ejecutar el siguiente comando para instalar los requerimientos de la plataforma: 59 # aptitude install apache2 php5 postfix tnef zip unzip mysql-server-5.0 phpmyadmin libwbxml2-0 libwbxml2-0-dbg libwbxml2-dev libwbxml2-utils php5-imap php5-ldap php-net-ldap Procedimiento para la instalación de Group-Office • Descargar la última versión estable de Group Office de la página de SourceForge. 1 • Descomprimir el archivo descargado de la página en una ruta accesible por el servidor web. # cd /var/www # tar -xvzf groupoffice-com-3.01-stable-2.tar.gz # mv groupoffice-3.04-stable-2 ciensnet • Crear el directorio donde se almacenan los archivos protegidos de los usuarios de la aplicación. # mkdir /home/ciensnet # chown www-data:www-data /home/ciensnet • Crear el directorio para los archivos públicos de la aplicación. # mkdir /var/www/ciensnet/local # chown www-data:www-data /var/www/ciensnet /local • Crear el archivo de configuración. # touch /var/www/ciensnet/config.php • Ejecutar el asistente de instalación de la plataforma. http://<host>/<carpeta>/install/ Siga el asistente y al mostrarse la interfaz de administración de base de datos, seleccione la opción Crear Base de Datos y cree la base de datos con el nombre ciensnet, se configurarán únicamente los datos de la base de datos, el usuario y la clave de acceso requeridos, aśı como los datos regionales como páıs, moneda y uso horario. En la siguiente figura 4.1, se muestra la primera vista del asistente de instalación de la plataforma, en caso que los requerimientos para la instalación se cumplan, se habilitará la opción de avanzar en el proceso de instalación. 1http://sourceforge.net/ 60 Figura 4.1: Vista del asistente de instalación I En la siguiente figura 4.2, se muestra el proceso de creación del archivo de configuración principal. En la siguiente figura 4.3, se muestra un conjunto de archivos de configuración que deben ser creados para el correcto funcionamiento de la plataforma. Luego de culminar este asistente, se creará por defecto la cuenta admin, esta será la cuenta de administración general del sistema, la contraseña de esta cuenta al instalar el sistema será admin. En este momento se encuentra instalada la plataforma base del sistema colaborativo, ahora se procederá a configurar el mecanismo alterno de autenticación, basándose en la autenticación v́ıa el protocolo IMAP. Contenido del archivo de configuración del módulo de autenticación v́ıa IMAP (imapauth.config.php). 1 $con f i g [ ] = 2 array ( 3 ’ proto ’ => ’ imap ’ , 4 ’ domains ’ => ’ c i e n s . ucv . ve ’ , 5 ’ host ’ => ’ s t r i x . c i e n s . ucv . ve ’ , 6 ’ port ’ => ’ 143 ’ , 7 ’ s s l ’ => f a l s e , 8 ’ nova l i da t e c e r t ’ => f a l s e , 9 ’mbroot ’ => ’INBOX’ , 10 ’ remove domain from username ’ => true , 61 Figura 4.2: Vista del asistente de instalación II 11 ’ c r ea t e ema i l a ccount ’ => true , 12 ’ groups ’ => array ( ’ In te rna l ’ ) , 13 ’ v i s i b l e g r oup s ’ => array ( ’ Everyone ’ , ’ In t e rna l ’ , ’ Todos ’ ) , 14 ’ modules read ’ => 15 array ( ’ email ’ , ’ f i l e s ’ , ’ addressbook ’ , ’ ca lendar ’ , ’ tasks ’ , ’ summary ’ , ’ soporte ’ ) , 16 ’ modules write ’ => array ( ) , 17 ’ smtp host ’=>’ s t r i x . c i e n s . ucv . ve ’ , 18 ’ smtp port ’= > ’25 ’ , 19 ’ smtp encryption ’= > ’ ’ , 20 ’ smtp username ’= > ’ ’ , 21 ’ smtp password ’= > ’ ’ , 22 ’ ldap use emai l as imap username ’=> f a l s e 23 ) ; 24 ?> Si se requiere que los usuarios tengan cargados determinados módulos al iniciar sesión por primera vez, debe modificarse la siguiente variable del archivo config.php: 1 $con f i g [ ’ r e g i s t e r modu l e s wr i t e ’ ]= ’ email , ca lendar , addressbook , summary , notes ’ ; Donde los nombres de los módulos deben estar separados por comas. Se debe restringir el registro de nuevos usuarios a la aplicación, ya que estos serán autenticados mediante el servidor de correo. Debe modificar la siguiente variable del archivo config.php: 1 $con f i g [ ’ a l l ow r e g i s t r a t i o n ’ ]= f a l s e ; 62 Figura 4.3: Vista del asistente de instalación III Pruebas Las pruebas realizadas para verificar la veracidad y consistencia de los cambios realizados, fue la de iniciar sesión en la plataforma colaborativa, luego de configurar el módulo para la autenticación de los usuarios del servicio de correo, se procedió a ingresar al sistema con una cuenta de correo institucional válida, al iniciar sesión por primera vez el sistema le solicita al usuario un conjunto de datos para crear las preferencias básicas. 4.5.2. Iteración 1 Del 06-Abr-2009 al 10-Abr-2009 En ésta iteración se diseñaron y desarrollaron los módulos para permitir el cambio y olvido de contraseña; aśı como también para el reenv́ıo automático de correos electrónicos. Planificación Para ésta iteración se definió la meta Implementación del mecanismo de cambio y olvido de contraseña; aśı como también para el reenv́ıo automático de correos electrónicos. Los objetivos fijados para esta iteración incluyen: Modificar el módulo de cambio de contraseñas ubicado en la sección de opciones del usuario en la esquina superior derecha de la aplicación. 63 Modificar la opción de olvido de contraseña ubicada en la esquina inferior derecha de la ventana de inicio de sesión. Diseñar e implementar el módulo de reenv́ıo automático de correos electrónicos el cual se integrara a la sección de opciones del usuario. Hacer pruebas de funcionamiento. Diseño Se modificó el módulo de cambio de contraseña, ya que inicialmente estaba diseñado para modificar la contraseña que se encuentra almacena en la base de datos ciensnet, pero en el caso de esta aplicación los usuarios se autentican contra el servidor de correo electrónico, por los que los cambios de contraseña deben quedar almacenados en el directorio LDAP directamente, o de lo contrario cuando un usuario se autentique desde otro cliente de correo, la contraseña seguirá siendo la que estaba almacenada en el LDAP y no la que actualizo desde la plataforma. En la figura 4.4, se muestra una vista del módulo de cambio de contraseña. Figura 4.4: Vista del módulo de cambio de contraseña. Se modificó el módulo de olvido de contraseña que estaba implementado en la plataforma. Ahora el usuario podrá presionar el botón ¿olvidaste tu contraseña? e ingresar su correo institucional y aśı el sistema le enviará una clave provisional a su dirección correo electrónico alternativo. En la figura 4.5, se muestra una vista del mecanismo de olvido de contraseña. 64 Figura 4.5: Vista de olvido de clave de acceso. Se diseñó e implementó el módulo de reenv́ıo automático de correos electrónicos, con el que los usuarios podrán desviar los correos que reciben en su cuenta institucional hacia otra u otras cuentas de correo que posean. El usuario solo debe ingresar la o las cuentas donde desee recibir sus correos e indicar si el mecanismo está o no activado, también tendrá la opción de guardar una copia local de todos los correos recibidos en su cuenta institucional. En la figura 4.6, se muestra una vista del módulo de reenvio de correos. Figura 4.6: Vista del módulo de reenvio de contraseñas. Codificación Procedimiento para modificar el módulo de cambio de contraseña Debe modificarse el archivo classes/base/users.class.inc.php 1 65 2 /∗∗ 3 ∗ Esta func i ón modi f i ca e l password de l usuar io en e l s e r v i do r ldap 4 ∗ Se n e c e s i t a e l paquete php−ldap 5 ∗ @access pub l i c 6 ∗ @param in t $u s e r i d debe s e r s o l o e l id de usuar io . Ejm : l u i s . perez 7 ∗ @param s t r i n g $user password s o l o e l password 8 ∗ @return bool True on succ e s s 9 ∗/ 10 11 func t i on update password ldap ( $use r id , $user password ){ 12 g l oba l $GO EVENTS, $GO CONFIG; 13 $u s e r i d=”uid=”. $u s e r i d . ” , ” . $GO CONFIG−>ldap base dn ; 14 $ l dap s e rv e r=$GO CONFIG−>l d a p s e r v e r i p ; 15 $ ldap admin user=$GO CONFIG−>ldap admin user ; 16 $ldap admin password=$GO CONFIG−>ldap admin password ; 17 $ldapconn = ldap connect ( $ l dap s e rv e r ) ; 18 l d ap s e t op t i on ( $ldapconn , LDAP OPT PROTOCOL VERSION, 3 ) ; 19 i f ( $ldapconn ) { 20 $ldapbind = ldap bind ( $ldapconn , $ldap admin user , $ldap admin password ) ; 21 i f ( $ldapbind ) { 22 $at r ibuto [ ’ userPassword ’ ] = ”{ crypt }” . crypt ( $user password ) ; 23 i f ( $u s e r i d !=” uid=admin ” . ” , ” .$GO CONFIG−>ldap base dn ){ 24 ldap modi fy ( $ldapconn , $use r id , $a t r ibuto ) ; 25 } 26 return true ; 27 } e l s e { 28 return f a l s e ; 29 } 30 } 31 return f a l s e ; 32 } Procedimiento para modificar el módulo de olvido de contraseña Debe modificarse el archivo classes/base/users.class.inc.php 1 /∗∗ 2 ∗Esta func ion obt i ene e l co r r eo a l t e r n a t i v o de l usuar io en e l s e r v i do r ldap 3 ∗@access pub l i c 4 ∗ @param in t $u s e r i d must be j u s t the id o f the user Example : l u i s . perez 5 ∗ @return bool True on succ e s s 6 ∗/ 7 8 func t i on g e t a l t e r n a t i v e ma i l l d a p ( $u s e r i d ){ 9 g l oba l $GO EVENTS, $GO CONFIG; 10 $u s e r i d=”uid=”. $u s e r i d ; 11 $ f i l t r o =”( $u s e r i d ) ” ; 12 $base=$GO CONFIG−>ldap base dn ; 13 $ l dap s e rv e r=$GO CONFIG−>l d a p s e r v e r i p ; 14 $ ldap admin user=$GO CONFIG−>ldap admin user ; 15 $ldap admin password=$GO CONFIG−>ldap admin password ; 16 $ldapconn = ldap connect ( $ l dap s e rv e r ) ; 17 l d ap s e t op t i on ( $ldapconn , LDAP OPT PROTOCOL VERSION, 3 ) ; 18 19 i f ( $ldapconn ) { 20 $ldapbind = ldap bind ( $ldapconn , $ldap admin user , $ldap admin password ) ; 21 i f ( $ldapbind ) { 22 $re s = ldap sea r ch ( $ldapconn , $base , $ f i l t r o , array (” a l t e r n a t i v o ” ) ) ; 23 $ r e su l t ado = l d a p g e t e n t r i e s ( $ldapconn , $ r e s ) ; 24 return $r e su l t ado [ 0 ] [ ” a l t e r n a t i v o ” ] ; 25 } e l s e { 26 return f a l s e ; 27 } 28 } 29 return f a l s e ; 30 } Procedimiento para implementar el módulo de reenv́ıo automático de correos electrónicos 66 Se modificó el archivo Settings.js del módulo de Correo ubicado en /modules/email/Settings.js. En éste archivo se creó la vista donde el usuario podrá ingresar los direcciones de correo hacia donde se realizara el reenv́ıo y podrá actualizar las opciones de activación y almacenamiento local. El método creado para cumplir con este requerimiento se incluyo en el archivo /classes/base/config.class.inc.php 1 func t i on s e t a l i a s ( ){ 2 $co r r eo s = $ POST [ ’ forward ’ ] ; 3 $ac t ivo = $ POST [ ’ act ive ’ ] ; 4 $copy = $ POST [ ’ copy ’ ] ; 5 6 i f ( $ac t ivo == true ){ 7 $va lor1 = 1 ; 8 } e l s e { 9 $va lor1 = 0 ; 10 } 11 12 i f ( $copy == true ){ 13 $co r r eo s = $ SESSION [ ’GO SESSION ’ ] [ ’ email ’ ] . ’ , ’ . $ co r r eo s ; 14 $va lor2 = 1 ; 15 } e l s e { 16 $va lor2 = 0 ; 17 } 18 19 trim ( $co r r eo s ) ; 20 21 $sq l2 = ”SELECT ∗ FROM em al i a s WHERE id u s e r = ’”.$ SESSION [ ’GO SESSION ’ ] [ ’ u s e r id ’ ] . ” ’ ” ; 22 $th i s−>db−>query ( $ sq l2 ) ; 23 24 i f ( $th i s−>db−>next r e co rd ( ) ){ 25 $ sq l = ”UPDATE em a l i a s SET reenv io = ’”. $ co r r eo s . ” ’ , a c t i vo = ’”. $va lor1 . ” ’ , 26 copia = ’”. $va lor2 . ” ’ WHERE id u s e r = ’”.$ SESSION [ ’GO SESSION ’ ] [ ’ u s e r id ’ ] . ” ’ ” ; 27 $th i s−>db−>query ( $ sq l ) ; 28 $ SESSION [ ’GO SESSION ’ ] [ ’ reenvio ’ ] = $co r r eo s ; 29 $ SESSION [ ’GO SESSION ’ ] [ ’ act ivo ’ ] = s t r v a l ( $va lor1 ) ; 30 $ SESSION [ ’GO SESSION ’ ] [ ’ copia ’ ] = s t r v a l ( $va lor2 ) ; 31 return true ; 32 } e l s e { 33 $sq l3 = ”INSERT INTO em al i a s ( id use r , address , reenvio , act ivo , copia ) VALUES 34 ( ’ ” . $ SESSION [ ’GO SESSION ’ ] [ ’ u s e r id ’ ] . ” ’ , ’ ” . $ SESSION [ ’GO SESSION ’ ] [ ’ email ’ ] . 35 ” ’ , ’ ” . $ co r r eo s . ” ’ , ’ ” . $va lor1 . ” ’ , ’ ” . $va lor2 . ” ’ ) ” ; 36 $th i s−>db−>query ( $ sq l3 ) ; 37 $ SESSION [ ’GO SESSION ’ ] [ ’ reenvio ’ ] = $co r r eo s ; 38 $ SESSION [ ’GO SESSION ’ ] [ ’ act ivo ’ ] = s t r v a l ( $va lor1 ) ; 39 $ SESSION [ ’GO SESSION ’ ] [ ’ copia ’ ] = s t r v a l ( $va lor2 ) ; 40 return true ; 41 } 42 return f a l s e ; 43 } La llamada a esta función se hace en el archivo /modules/email/classes/email.class.inc.php: 1 pub l i c s t a t i c func t i on s a v e s e t t i n g s ( ){ 2 g l oba l $GO MODULES, $GO CONFIG, $GO SECURITY; 3 i f ($GO MODULES−>has module ( ’ email ’ ) ){ 4 $GO CONFIG−>s e t a l i a s ( ) ; 5 } 6 } 67 Pruebas Las pruebas realizadas para verificar el correcto funcionamiento de los métodos creados y modificados, fueron: Ingresar a la opción de olvido de contraseña, ingresar el correo del usuario y luego verificando que con la clave que se envió al correo alternativo realmente se puede iniciar sesión tanto en la plataforma como en el webmail que esta actualmente en producción. Ingresar a la opción de cambio de contraseña llenar los campos para modificar la contraseña actual y luego verificar que con la nueva contraseña se puede ingresar tanto a la plataforma como al webmail que se encuentra actualmente e producción. Ingresar a la opción de reenv́ıo automático e ingresar una o varias cuentas de correos electrónicos alternativos que posea el usuario y activar esta funcionalidad, luego se enviaron correos a la cuenta institucional y se verificó que los correos enviados llegaron a los correos definidos para el reenv́ıo 4.5.3. Iteración 2 Del 13-Abr-2009 al 17-Abr-2009 En esta iteración se creo un script que permite migrar el directorio de la Facultad de Ciencias a la base de la intranet y se inicio el proceso de traducción de los mensajes a español y corrección de la semántica de los mensajes que ya estaban traducidos. Planificación Para esta iteración se definió la meta Realización del script para la migración del directorio de la Facultad de Ciencias y realización de la traducción al español de los mensajes de la plataforma.. Los objetivos fijados para esta iteración incluyen: Crear el script de migración de los registros del directorio de la Facultad de Ciencias. Iniciar el proceso de traducción y corrección de los mensajes de la aplicación. Hacer pruebas de funcionamiento. 68 Diseño El la base de datos del directorio se almacenan los datos de todo el personal docente y administrativo de la Facultad de Ciencias por lo que para incluir esta información en la intranet es necesario crear un script que extraiga todos los registros de la base de datos del directorio y los inserte en la base de datos de la intranet, de esta forma cada usuario podrá visualizar la información de los integrantes de la comunidad. La plataforma de Group Office puede cambiarse a varios idiomas, incluyendo el español, pero ya que la misma de encuentra en desarrollo hay mensajes que no han sido depuraros, existiendo casos donde lo mensajes están mal redactados, su información no corresponde con su funcionalidad o simplemente se encuentran en otro idioma que no es el español, porque previamente nadie los hab́ıa traducido. Codificación Procedimiento para crear el script de migración 1 2 #!/ usr /bin /php 3 <?php 4 $conexion = mysql connect (” i p d i r e c t o r i o ” ,” u s u a r i o d i r e c t o r i o ” ,” c l a v e d i r e c t o r i o ”) 5 or d i e (”No se pudo ”) ; 6 mysq l s e l e c t db (” bdd i r e c t o r i o ”) or d i e (”No se puede s e l e c c i o n a r BD”) ; 7 8 $ sq l=mysql query (”SELECT ∗ FROM usuar io ”) ; 9 10 $conexion2 = mysql connect (” i p i n t r an e t ” ,” u sua r i o i n t r an e t ” ,” c l a v e i n t r an e t ”) 11 or d i e (”No se pudo ”) ; 12 mysq l s e l e c t db (” bd intranet ”) or d i e (”No se puede s e l e c c i o n a r BD”) ; 13 14 mysql query (”DELETE FROM ab contac t s WHERE addres sbook id =14” , $conexion2 ) ; 15 16 whi le ( $row=mysq l f e t ch a r ray ( $ sq l ) ) { 17 mysql query (”INSERT INTO ab contac t s ( u s e r id , addressbook id , source id , 18 f i r s t name , middle name , last name , sex , email , email2 , company id , department , 19 funct ion , home phone , fax , address , address no ) 20 va lues ( 1 , 1 4 , 0 , ’ ” . e r e g r e p l a c e ( ”<NULL>”, ”” , $row [ ’ nombre1 ’ ] ) . ” ’ , ’ ” . e r e g r e p l a c e 21 ( ”<NULL>”, ”” , $row [ ’ nombre2 ’ ] ) . ” ’ , ’ ” . e r e g r e p l a c e ( ”<NULL>”, ”” , $row [ ’ ape l l i do1 ’ ] ) 22 . ” ” . e r e g r e p l a c e ( ”<NULL>”, ”” , $row [ ’ ape l l i do2 ’ ] ) . ” ’ , ’M’ , ’ ” . e r e g r e p l a c e ( ”<NULL>”, ”” , 23 $row [ ’ correoNuevo ’ ] ) . ” ’ , ’ ” . e r e g r e p l a c e ( ”<NULL>”, ”” , $row [ ’ c o r r eoa l t ’ ] ) . ” ’ , 2 , ’ ” . 24 e r e g r e p l a c e ( ”<NULL>”, ”” , $row [ ’ dependencia ’ ] ) . ” ’ , ’ ” . e r e g r e p l a c e ( ”<NULL>”, ”” , 25 $row [ ’ cargo ’ ] ) . ” ’ , ’ ” . e r e g r e p l a c e ( ”<NULL>”, ”” , $row [ ’ t e l e f ono ’ ] ) . ” ’ , ’ ” . e r e g r e p l a c e 26 ( ”<NULL>”, ”” , $row [ ’ fax ’ ] ) . ” ’ , ’ ” . e r e g r e p l a c e ( ”<NULL>”, ”” , $row [ ’ ubicac ion ’ ] ) 27 . ” ’ , ’ ’ ) ” , $conexion2 ) ; 28 } 29 mysq l c l o s e ( $conexion ) ; 30 mysq l c l o s e ( $conexion2 ) ; 31 ?> Procedimiento para iniciar la traducción y corrección de los mensajes Se revisan todos los archivos de idioma que contiene la traducción al español de cada módulo ubicados en /lenguage/es.js 69 Pruebas Las pruebas realizadas para verificar que lo datos del directorio se migraron correctamente fue ingresar al módulo de Directorio y probar que los datos de los docentes y personal administrativos de cargaron con éxito, navegado por los distintos enlaces. En la figura 4.7, se puede observar el módulo de Directorio con los registros correspondientes al directorio de la Facultad de Ciencias. Figura 4.7: Vista del módulo de directorio. 4.5.4. Iteración 3 Del 20-Abr-2009 al 24-Abr-2009 En esta iteración se desarrollo del módulo de soporte técnico del Centro de Computación para la plataforma de software colaborativo. Planificación Para esta iteración se definió la actividad desarrollo del módulo de soporte técnico del Centro de Computación para la plataforma de software colaborativo. Los objetivos fijados para esta iteración incluyen: Desarrollar un sistema que le permita a los usuarios del sistema realizar solicitudes de soporte técnico. Implementar un diseño de interfaz que le permita al usuario ver es estado de los soportes que ha solicitado en cualquier momento. Diseño En esta etapa, para realizar el desarrollo de este módulo se procedió a diseñar un modelo de casos de uso sencillo, que permitiera realizar las actividades las actividades 70 descritas anteriormente. A continuación se describe el procedimento para creación de nuevos módulos. Inicio: El primer paso es configurar la plataforma GroupOffice en modo de corrección de errores, modificando el archivo config.php, para que no se utilizen los archivos generados por el compresor de YUI: $config[’debug’] = true; Debe crearse la carpeta donde se almacenará el módulo a desarrollar, en la ruta ciensnet/modules/<NuevoModulo>. El nombre de la carpeta no debe tener caracteres especiales. En esta nueva carpeta debe crearse una subcarpeta que contendrá todas las clases del módulo ciensnet/modules/<NuevoModulo>/classes. Crear un Módulo Vacio: El primer paso será crear el panel principal del módulo. El archivo que contendrá el panel principal, debe crearse en la ruta ciensnet/modules/NuevoModulo/MainPanel.js 1 /∗MainPanel . j s :∗/ 2 3 Ext . namespace ( ’GO. nuevomodulo ’ ) ; 4 5 /∗Constructor our MainPanel∗/ 6 7 GO. nuevomodulo . MainPanel = func t i on ( c on f i g ){ 8 9 i f ( ! c on f i g ){ 10 con f i g = {} ; 11 } 12 13 con f i g . html=’Hola Mundo ’ ; 14 15 /∗Llamada a l cons t ruc to r ∗/ 16 17 GO. nuevomodulo . MainPanel . s up e r c l a s s . c ons t ruc to r . c a l l ( th i s , c on f i g ) ; 18 19 } 20 21 /∗Extensi ón de l a c l a s e p r i n c i p a l ∗/ 22 23 Ext . extend (GO. nuevomodulo . MainPanel , Ext . Panel ,{ 24 25 } ) ; 26 27 /∗ Esto agregar á e l módulo a l a l i s t a de tabs p r i n c i p a l e s ∗/ 28 29 GO. moduleManager . addModule ( ’ nuevomodulo ’ , GO. nuevomodulo . MainPanel , { 30 t i t l e : ’Nuevo Modulo ’ , 31 i conCls : ’ go−module−icon−nuevomodulo ’ 32 } ) ; Debe indicarsele a GroupOffice que debe incluir este panel cada vez que el 71 módulo se cargue. Para que GroupOffice sepa que scripts debe incluir, se debe crear un archivo llamado scripts.txt en la ruta ciensnet/modules/<NuevoModulo>/scripts.txt. scripts.txt: modules/NuevoModulo/MainPanel.js Si no se incluyen los nombres de los scripts el módulo no funcionara correctamente. Instalación del Módulo: En GroupOffice, ir al menú de Administración, ingresar a la opción Módulos e instalar el nuevo módulo. Ahora puede observarse un módulo sencillo que contiene un panel vacio, el siguiente paso es desarrollar el cuerpo del módulo, que dependerá de la funcionalidad que se desee implementar, se recomienda consultar los siguientes enlaces: 1. Group-Office PHP API documentation - http://www.group-office.com/phpdoc/. 2. ExtJS 2.2 API documentation - http://www.extjs.com/deploy/dev/docs/. 3. ExtJS learing center - http://extjs.com/learn/. Codificación A continuación se mostrará el diagrama de casos de uso, junto a su descripción. En la figura 4.8, se muestra el diagrama de casos de uso del sistema implementado. Especificación de los casos de uso descritos anteriormente. Primer caso de uso • Nombre: 1. Agregar soporte. • Descripción: Permite realizar una nueva solicitud de soporte. • Actores: Usuario. • Precondición: Ninguna. 72 Figura 4.8: Casos de uso sistema de soporte. • Flujo Normal: ◦ 1. El usuario hace clic sobre el botón Agregar. ◦ 2. Llena los datos del formulario (ubicación, teléfono y descripción). ◦ 3. El sistema comprueba no queden campos vaćıos en el formulario. • Flujo Alternativo: ◦ 1. El sistema comprueba que no exista ningún campo vaćıo en el formulario, si existen campos vaćıos, se muestra un mensaje con el error para darle oportunidad al usuario de llenar estos campos. • Postcondición: Ninguna. Segundo caso de uso • Nombre: 2. Visualizar soportes. • Descripción: Permite visualizar la información referente a la solicitud de soporte (descripción, ubicación, teléfono, fecha de solicitud, responsable, fecha de procesamiento, estado, observación). • Actores: Usuario. • Precondición: Haber realizado algún soporte. • Flujo Normal: 73 ◦ 1. El usuario accede al módulo de soporte. ◦ 2. Inmediatamente tiene la vista con las descripciones de sus solicitudes de soporte. • Flujo Alternativo: Ninguna. • Postcondición: Ninguna. Pruebas Las pruebas realizadas para verificar la veracidad y consistencia del desarrollo de este módulo fue iniciando sesión en el sistema y realizando varias solicitudes de soporte. En la figura 4.9, se muestra el sistema de soporte técnico. Figura 4.9: Vista del módulo de soporte técnico 4.5.5. Iteración 4 Del 27-Abr-2009 al 01-May-2009 En esta iteración se desarrolló el módulo de Administración de Soporte Técnico y el módulo de Mensajeŕıa Instantánea. Planificación Para esta iteración se definió la meta Desarrollo del módulo de administración de soportes técnicos del Centro de Computación e instalación del sistema de mensajeŕıa 74 instantánea como módulo de la plataforma. Los objetivos fijados para esta iteración incluyen: Diseñar y desarrollar el módulo de Administración de Soporte Técnico. Integrar el sistema de Mensajeŕıa Instantánea a la plataforma. Hacer pruebas de funcionamiento. Diseño Para desarrollar el módulo de CiensTalk se integro a la plataforma la aplicación Ajaxim que es un cliente de mensajeŕıa instantánea basado en Ajax, PHP y MySQL. La finalidad de la integración de esta aplicación es la de que todos los usuarios de la plataforma puedan comunicarse entre si, enviando mensajes a un usuarios en particular o creando salas de chat para que puedan hablar varios usuarios a la vez. También, se desarrolló el módulo de administración del sistema de soportes del Centro de Computación. Este módulo permitirá gestionar y administrar todas las solicitudes por parte de los usuarios del sistema. A continuación se mostrará el diagrama de casos de uso, junto a su descripción. En la figura 4.10 y 4.11, se muestran los diagramas de casos de uso del sistema implementado. Figura 4.10: Casos de uso sistema de soporte 0. Especificación de los casos de uso descritos anteriormente. 75 Figura 4.11: Casos de uso sistema de soporte 1. Caso de uso 1 • Nombre: 1. Agregar soporte. • Descripción: Permite agregar una nueva solicitud de soporte al sistema. • Actores: Usuario, Coordinador. • Precondición: Ninguna. • Flujo Normal: ◦ 1. El actor pulsa el botón Agregar. ◦ 2. Llena los datos del formulario (Ubicación, teléfono, descripción). ◦ 3. El sistema comprueba que los campos del formulario no estén vaćıos. ◦ 4. El actor pulsa el botón Aceptar • Flujo Alternativo: ◦ 1. El sistema comprueba la validez de los datos, si los datos no son correctos, se muestra un mensaje con el error para darle oportunidad al actor de modificar los datos erróneos. • Postcondición: Ninguna. 76 Caso de uso 2 • Nombre: 2. Visualizar Soportes Asignados. • Descripción: Permite visualizar la información de un soporte sin importar a quien ha sido asignado. • Actores: Usuario, Coordinador. • Precondición: Ninguna. • Flujo Normal: ◦ 1. El actor hace doble click sobre el soporte que desea visualizar. ◦ 2. El sistema despliega una ventana con la información del soporte seleccionado. • Flujo Alternativo: Ninguno. • Postcondición: Ninguna. Caso de uso 3 • Nombre: 3. Visualizar Soporte del Usuario. • Descripción: Permite visualizar la información de los soportes del usuario. • Actores: Usuario, Coordinador. • Precondición: Ninguna. • Flujo Normal: ◦ 1. El actor hace doble click sobre el soporte que desea visualizar. ◦ 2. El sistema despliega una ventana con la información del soporte seleccionado. ◦ 3. El sistema comprueba que los campos del formulario no estén vaćıos. ◦ 4. El actor pulsa el botón Aceptar • Flujo Alternativo: Ninguno. • Postcondición: Ninguna. Caso de uso 4 • Nombre: 4. Visualizar Soportes sin Asignar. 77 • Descripción: Permite visualizar los soportes que no han sido asignados a ningún usuario. • Actores: Usuario, Coordinador. • Precondición: Ninguna. • Flujo Normal: ◦ 1. El actor hace doble click sobre el soporte que desea visualizar. ◦ 2. El sistema despliega una ventana con la información del soporte seleccionado. • Flujo Alternativo: Ninguno. • Postcondición: Ninguna. Caso de uso 5 • Nombre: 5. Generar Estad́ısticas. • Descripción: Permite generar un pdf con estad́ısticas que reflejan la cantidad de soportes pendientes, en proceso y atendidos, además permite observar que porcentaje de los soportes atiente cada administrador. • Actores: Usuario, Coordinador. • Precondición: Ninguna. • Flujo Normal: ◦ 1. El actor pulsa el botón Estad́ısticas. ◦ 2. EL actor llena el formulario indicando el periodo de las estad́ısticas (fecha de iniciación y fecha de finalización). ◦ 3. El actor pulsa el botón Generar. • Flujo Alternativo: Ninguno. • Postcondición: Ninguna. Caso de uso 6 • Nombre: 6. Visualizar Bitácora. • Descripción: Permite visualizar todos los soportes que se están en estado culminado. • Actores: Usuario, Coordinador. 78 • Precondición: Ninguna. • Flujo Normal: ◦ 1. El actor pulsa el botón Bitácora. ◦ 2. Automáticamente se muestran todos los soportes que han culminado, con su descripción, responsable y fecha. • Flujo Alternativo: Ninguno. • Postcondición: Ninguna. Caso de uso 7 • Nombre: 7. Asignar un Soporte al Usuario. • Descripción: Permite que un usuario se asigne un soporte a si mismo. • Actores: Usuario, Coordinador. • Precondición: Ninguna. • Flujo Normal: ◦ 1. El actor hace doble click sobre el soporte que se desea asignar de la lista Solicitudes por Atender. ◦ 2. Automáticamente se muestran la información del soporte y un checkbox que el usuario debe tildar si desea asignar el soporte a su lista Mi Soportes. ◦ 3. El actor para finalizar debe pulsar el botón Aceptar. • Flujo Alternativo: Ninguno. • Postcondición: Ninguna. Caso de uso 8 • Nombre: 8. Asignar un Soporte a otro Usuario. • Descripción: Permite que el coordinador le asigne soportes a otros usuarios del sistema. • Actores: Coordinador. • Precondición: Ninguna. • Flujo Normal: ◦ 1. El actor debe pulsar el botón derecho del mouse sobre el soporte que desea asignar. 79 ◦ 2. El actor debe pulsar la opción llamada Asignar a un Administrador Distinto. ◦ 3. Automáticamente se muestran una lista con todos los posibles usuarios a los que puede asignar el soporte y un campo para ingresar un comentario privado. ◦ 4. El actor para finalizar debe pulsar el Aceptar. • Flujo Alternativo: Ninguno. • Postcondición: Ninguna. Caso de uso 9 • Nombre: 9. Reasignar Soporte. • Descripción: Permite que el coordinador le asigne soportes a otros usuarios del sistema que ya estaban asignados a otros usuarios. • Actores: Coordinador. • Precondición: Ninguna. • Flujo Normal: ◦ 1. El actor debe pulsar el botón derecho del mouse sobre el soporte que desea reasignar. ◦ 2. El actor debe pulsar la opción llamada Asignar a un Administrador Distinto. ◦ 3. Automáticamente se muestran una lista con todos los posibles usuarios a los que puede reasignar el soporte y un campo para ingresar un comentario privado. ◦ 4. El actor para finalizar debe pulsar el Aceptar. • Flujo Alternativo: Ninguno. • Postcondición: Ninguna. Codificación Sistema de mensajeŕıa instantanea • Procedimiento para integrar el módulo de mensajeŕıa instantánea: ◦ Se debe descargar la aplicación de Ajaxim de la página oficial de AjaxIM 2. 2http://www.ajaxim.com 80 ◦ Descomprimir el paquete descargado en la ubicación /modules/cienstalk. ◦ Modificar la aplicación para que inicie sesión con el usuario que esta autenticado en la plataforma, para ello se utilizaron las variables de sesión de la plataforma en la página /modules/cienstalk/ajaxim/index.php. Sistema de administraćıon de soportes Para comenzar a probar el sistema de administración de soportes, se habilito para el personal cuyas funciones están relacionadas al área el acceso a la aplicación permitiendo que desde esta aplicación puedan gestionar los soportes generados desde la página de la Facultad. Para que a los usuarios regulares de la Facultad, les resultara transparente esta primera fase de la migración, se diseño una página provisional exactamente igual a la de la de la Facultad de Ciencias, que automáticamente hiciera la inserción del soporte en el nuevo sistema. En la figura 4.12, se muestra la vista donde los usuarios regularmente hacen las solicitudes de soporte, ésta, se encuentra alojada en el servidor donde fué instalada la plataforma de software, de tal manera que los usuarios puedan seguir realizando sus solicitudes de manera transparente. Figura 4.12: Vista página de integración 81 Pruebas Para probar que el módulo de Mensajeŕıa Instantánea estaba correctamente integrado, se inicio sesión con varia cuentas de usuarios, se verificó que todos tuvieran acceso al módulo, cada usuarios agrego contactos clasificándolos en lista según sus preferencias y se procedió a probar que el env́ıo de mensajes funcionara. Esta prueba dio resultados satisfactorios los usuraos estaban en la capacidad de iniciar y cerrar sesión, enviar mensajes, crear grupos, crear salas de chat, editar su perfil, bloquear contactos y cambiar el estado en que se encuentran en determinado momento. El sistema de Administración de Soporte Técnico fue puesto en producción a partir de la fecha 04/05/09, todas las observaciones por parte del personal de soporte técnico fueron procesadas y puestas en uso en próximas iteraciones. 4.5.6. Iteración 5 Del 04-May-2009 al 08-May-2009 En ésta iteración se hicieron modificaciones al módulo de Administración de Soporte Técnico, según las exigencias del personal de soporte técnico del Centro de Computación, además se integró el módulo de Reservación de Salas como un módulo de la intranet. Planificación Para esta iteración se definió la meta Depuración del módulo de Administración de Soporte Técnico del Centro de Computación e instalación del sistema de Reservación de Salas del Centro de Computación como módulo de la plataforma. Los objetivos fijados para esta iteración incluyen: Modificar el módulo de Administración de Soporte Técnico. Integrar el sistema de Reservación de Sala a la intranet. Hacer pruebas de funcionamiento. Diseño El módulo de Administración de Soporte Técnico se puso a prueba por el personal del Centro de Computación dedicado a esas actividades, y a medida que lo iban 82 utilizando surǵıan nuevos requerimiento. Para satisfacer estos requerimientos fue necesario agregar nuevas funcionalidades o modificar las que ya exist́ıan. Entre las nuevas caracteŕısticas estaban: Poder asignar a otros usuarios los soportes que ya estaban asignados, esto debido a que hay casos en los que un empleado no puede culminar su tarea por falta de tiempo o conocimiento y es necesario que la tarea la termine otro integrante del grupo. Poder ver la bitácora de todos los soportes culminados. Permitir que el administrador del área de soporte técnico le asigne soportes a otros administradores, ya que esta persona es la que coordina al personal de soporte del Centro de Computación. Visualizar la información de cualquier soporte al hacer doble click sobre el. Modificar la información de los soportes asignados a otros administradores. Para logra integrar la aplicación de Reservación de Salas se pensó en tener la pagina en un frame dentro del módulo, de ésta forma se puede acceder a la aplicación siendo referenciada o encapsulada en otra. Codificación Procedimiento para integrar el sistema de Reservación de Salas • Se crea el módulo de Salas. • Se crea el archivo MainPanel.js en el que se define el frame que va a almacenar la aplicación: 1 GO. moduleManager . addModule ( ’ r e s e rvac ion ’ , GO. panel . IFrameComponent , { 2 t i t l e : ’ Salas ’ , 3 u r l :GO. s e t t i n g s . modules . r e s e r va c i on . u r l +’ r e d i r e c t . php ’ , 4 border : f a l s e 5 } ) ; • Se crea el archivo redirect.php en el que se encuentra el código que realiza la redirección a la aplicación y se autentica en ella según el perfil que tenga el usuarios. • Se modifico el archivo config.php para incluir la url de la aplicación de reservación de salas: $config[’salas’]=’http://w3.ciens.ucv.ve/cal’; 83 • Archivo redirect.php: 1 <?php 2 3 r equ i r e ( ’ . . / . . / Group−Of f i c e . php ’ ) ; 4 $ tmp f i l e = $GO CONFIG−>tmpdir . ’ / ’ .md5( uniq id ( time ( ) ) ) . ’ txt ’ ; 5 f i l e p u t c o n t e n t s ( $ tmp f i l e , $GO SECURITY−>u s e r i d ) ; 6 i f ( empty ($GO CONFIG−>s a l a s ) ){ 7 ex i t ( ’ Error : Debe con f i gu r a r $GO CONFIG−>s a l a s en e l arch ivo con f i g . php ’ ) ; 8 } 9 10 $ur l = $GO CONFIG−>s a l a s ; 11 $usuar io = $ SESSION [ ’GO SESSION ’ ] [ ’ username ’ ] ; 12 $ l i s t = explode ( ”@” , $usuar io ) ; 13 $usuar io = $ l i s t [ 0 ] ; 14 15 $con = mysql connect (” i p r e s e r v a c i on ” ,” u sua r i o r e s e r va c i on ” ,” c l a v e r e s e r v a c i on ” ) ; 16 i f ( ! $con ){ 17 d i e ( ’ Ocurrio un e r r o r : ’ . mysq l e r ro r ( ) ) ; 18 } 19 20 mysq l s e l e c t db (” bdre se rvac ion ” , $con ) ; 21 22 $ r e s u l t = mysql query (”SELECT ∗ FROM ca l a c count s WHERE user = ’”. $usuar io . ” ’ ” , $con ) ; 23 $var = 0 ; 24 $ f i n a l = ”” ; 25 $rows=mysql num rows ( $ r e s u l t ) ; 26 27 i f ( $rows > 0) { 28 $var = 1 ; 29 } 30 31 mysq l c l o s e ( $con ) ; 32 33 i f ( $var == 1){ 34 $ f i n a l = ’? usergo = ’. $usuar io ; 35 } e l s e { 36 i f ( $usuar io==”admin”){ 37 $ f i n a l = ’? usergo=root ’ ; 38 } e l s e { 39 $ f i n a l = ’? usergo=none ’ ; 40 } 41 } 42 43 header ( ’ Locat ion : ’ . $u r l . $ f i n a l ) ; 44 ?> Pruebas Las pruebas realizadas para verificar los cambios en el módulo de Administración de Soporte Técnico fueron realizadas por el personal de soporte del Centro de Computación como parte de sus actividades normales. Para verificar que se integro correctamente el sistema de Reservación de Sala a la intranet, se autenticaron en el sistema usuario con diferentes perfiles en la aplicación para comprobar que teńıan acceso solo a las funcionalidades que le corresponden según sus privilegios. En la figura 4.13 se puede observar la vista del sistema de reservación de salas desde la cuenta de un administrador que se autenticó desde la intranet. Se puede observar en el menú, en la parte derecha de la aplicación todas las 84 Figura 4.13: Vista sistema de salas funcionalidades que le corresponden a un administrador de sala. 4.5.7. Iteración 6 Del 11-May-2009 al 15-May-2009 En ésta iteración se creo un nuevo estilo para la interfaz del módulo de mensajeŕıa instantánea para darle una imagen similar a la de la plataforma. Planificación Para esta iteración se definió la meta Adecuación de la interfaz del módulo de mensajeŕıa instantánea. Los objetivos fijados para esta iteración incluyen: Modificar el estilo de la interfaz del módulo de Mensajeŕıa Instantánea. Diseño El módulo de Mensajeŕıa Instantánea que fue integrado en la iteración 4, teńıa un estilo que no era acorde con los lineamientos de interfaz definidos para la intranet. Para modificar este estilo se modificaron los colores, los botones y se crearon nuevas imágenes. 85 Codificación Para adaptar la interfaz de modificaron lo archivos ubicados en la carpeta theme se crearon las nuevas imágenes para reemplazar las existentes y se edito el archivo style.css para modificar los colores. 86 En la figura 4.14 se puede observar el menú de opciones del módulo de Mensajeŕıa Instantánea antes de establecer el nuevo estilo. Figura 4.14: Vista estilo AjaxIM 87 En la figura 4.15 se puede observar el menú de opciones del módulo de Mensajeŕıa Instantánea luego de crear el nuevo estilo. Se crearon las imágenes de los botones de opciones en la parte superior, se creo el botón de cerrar sesión que esta ubicado en la esquina inferior derecha y se modificaron los colores de todas las ventanas del sistema. Figura 4.15: Vista estilo del cliente de mensajeria Ciensnet 88 En la figura 4.16 se puede observar una ventana de conversación antes de modificar los estilos. Figura 4.16: Vista estilo ventana de conversacion AjaxIM En la figura 4.17 se puede observar una ventana de conversación luego de haber modificado los estilos. Figura 4.17: Vista estilo ventana de conversacion Ciensnet Los cambios en los estilos de verán reflejados en todas las ventanas de las diferentes opciones del sistema. 89 4.5.8. Iteración 7 Del 18-May-2009 al 22-May-2009 En ésta iteración se busca definir e implementar un conjunto de poĺıticas y mecanismos que permitar optimizar el funcionamiento de la plataforma implantada y definir un conjunto de póliticas y mecanismos para asegurar el servicio prestado. Planificación Para ésta iteración se definió la meta Implementación de mecanismos que permitan optimizar la aplicación y asegurar el acceso a la misma. Los objetivos fijados para esta iteración incluyen: Definir mecanismos que permitan mejorar el desempeño de la solución implantada. Definir un conjunto de poĺıticas y mecanismos que permitan garantizar la seguridad del acceso a los servicios. Diseño Desde la aparición de las interfases de usuario enriquecidas y desarrolladas con tecnoloǵıas del lado del cliente, son muchos los sitios web y los desarrolladores que han adoptando la utilización de JavaScript en sus proyectos. Uno de los problemas con los que se han enfrentado estos sistemas, es la velocidad con la que los archivos que viajan al cliente, si estos archivos aumentan de tamaño, el tiempo de respuesta hacia el cliente será mayor, implicando una desmejora en la capacidad de respuesta de la aplicación al momento de su carga. Existen distintos mecanismos que permiten mitigar estos tiempos de respuesta. Optimización de código utilizando la interfaz de usuario de Yahoo: El desarrollador Julien Lecomte desarrollo una herramienta que trata de comprimir los archivos JavaScript. Esta se trata de una aplicación que interpreta el código fuente usando Rhino para eliminar los comentarios, y caracteres de separación, luego reemplaza los nombres de las variables por 90 otros más cortos. Tiene una serie de limitaciones, como el que es lento al generar el código comprimido, por lo que no puede ser usado para la compresión en tiempo real en caliente. Extracto del manual del compresor de Yahoo. 1 2 $ java −j a r yuicompressor−x . y . z . j a r 3 Usage : java −j a r yuicompressor−x . y . z . j a r [ opt ions ] [ input f i l e ] 4 5 Global Options 6 −h , −−help Disp lays t h i s in format ion 7 −−type < j s | css> Sp e c i f i e s the type o f the input f i l e 8 −−char s e t <charset> Read the input f i l e us ing <charset> 9 −−l i n e−break <column> I n s e r t a l i n e break a f t e r the s p e c i f i e d column number 10 −v , −−verbose Display in f o rmat i ona l messages and warnings 11 −o < f i l e > Place the output in to < f i l e >. De fau l t s to stdout . 12 13 JavaScr ipt Options 14 −−nomunge Minify only , do not ob fuscate 15 −−preserve−semi Preserve a l l s emico lons 16 −−d i sab l e−opt im i za t i on s Disab le a l l micro opt im i za t i on s 17 18 GLOBAL OPTIONS 19 20 −h , −−help 21 Pr int s help on how to use the YUI Compressor 22 23 −−l i n e−break 24 Some source con t r o l t o o l s don ’ t l i k e f i l e s conta in ing l i n e s l onge r than , 25 say 8000 cha ra c t e r s . The l i n eb r eak opt ion i s used in that case to s p l i t 26 long l i n e s a f t e r a s p e c i f i c column . I t can a l s o be used to make the code 27 more readable , e a s i e r to debug ( e s p e c i a l l y with the MS Sc r ip t Debugger ) 28 Spec i f y 0 to get a l i n e break a f t e r each semi−co lon in JavaScr ipt , and 29 a f t e r each ru l e in CSS . 30 31 −−type j s | c s s 32 The type o f compressor ( JavaScr ipt or CSS) i s chosen based on the 33 extens ion o f the input f i l e name ( . j s or . c s s ) This opt ion i s r equ i r ed 34 i f no input f i l e has been s p e c i f i e d . Otherwise , t h i s opt ion i s only 35 requ i r ed i f the input f i l e extens ion i s n e i t h e r ’ j s ’ nor ’ css ’ . 36 37 −−char s e t character−s e t 38 I f a supported charac t e r s e t i s s p e c i f i e d , the YUI Compressor w i l l use i t 39 to read the input f i l e . Otherwise , i t w i l l assume that the platform ’ s 40 de f au l t charac t e r s e t i s being used . The output f i l e i s encoded us ing 41 the same charac t e r s e t . 42 43 −o o u t f i l e 44 Place output in f i l e o u t f i l e . I f not s p e c i f i e d , the YUI Compressor w i l l 45 d e f au l t to the standard output , which you can r e d i r e c t to a f i l e . 46 47 −v , −−verbose 48 Display in f o rmat i ona l messages and warnings . 49 50 JAVASCRIPT ONLY OPTIONS 51 52 −−nomunge 53 Minify only . Do not ob fuscate l o c a l symbols . 54 55 −−preserve−semi 56 Preserve unnecessary semico lons ( such as r i gh t be f o r e a ’} ’ ) This opt ion 57 i s u s e f u l when compressed code has to be run through JSLint ( which i s the 58 case o f YUI f o r example ) 59 60 −−d i sab l e−opt im i za t i on s 61 Disab le a l l the bu i l t−in micro opt im i za t i on s . 62 63 Note : I f no input f i l e i s s p e c i f i e d , i t d e f a u l t s to s td in . 91 64 65 The f o l l ow ing command l i n e (x . y . z r ep r e s en t s the ve r s i on number ) : 66 67 java −j a r yuicompressor−x . y . z . j a r myf i l e . j s −o myf i le−min . j s 68 69 w i l l mini fy the f i l e my f i l e . j s and output the f i l e myf i le−min . j s . For more 70 in format ion on how to use the YUI Compressor , p l e a s e r e f e r to the documentation 71 inc luded in the arch ive . Apache mod deflate: El módulo de Apache mod deflate permite al servidor entregar los archivos comprimidos en tiempo real al navegador web. La activación de este módulo suele utilizarse para mejorar el rendimiento al transferir información al cliente. Este módulo por defecto utiliza compresión gzip (GNU ZIP). Apache mod cache: Cuando el servidor web comprime el código en tiempo real, para responder las peticiones, puede generarse una sobrecarga sobre la utilización del procesador, ya que se requiere del procesamiento adicional de las respuestas antes de despacharlas. Como solución a este problema surje el módulo de apache mod cache, este esta conformado por tres sub módulos principales. El mod file cache es el menos flexible de los tres. Permite almacenar en cache archivos en especifico en disco o memoria, pero si modificamos alguno de dichos archivos sólo podremos conseguir que Apache sirva la versión actualizada reiniciando el servidor. El mod mem cache nos permite almacenar en memoria principal archivos que pertenezcan a la cache del servidor web. El mod disk cache va almacenando en un directorio los documentos que se van solicitando, aśı como sus cabeceras. Si el módulo mod deflate está activo y hay clientes que acepten compresión y otros que no, se cacheará el documento comprimido y sin comprimir. Adicionalmente se definieron un conjunto de medidas para garantizar el correcto acceso a la información Poĺıticas de seguridad f́ısica. 92 • El dispositivo de cómputo debe estar ubicado en un ambiente de acceso restringido con acceso exclusivo del personal que labore en dichas instalaciones. • Registrar el acceso del personal a las instalaciones donde se encuentren ubicados los dispositivos de comunicación y cómputo. De manera tal que si existiera algún incidente pudiese existir una posterior revisión sobre los accesos a las instalaciones. • Poseer controles para la minimización de potenciales riegos como lo son el hurto o robo de equipos de la dependencia, inundaciones, filtraciones, interferencia en la disponibilidad de los servicios por faltas en el suministro de enerǵıa eléctrica, entre otros. • Prohibición de cualquier tipo de bebidas y alimentos en los recintos donde se encuentren los dispositivos. • Destinar sistemas de refrigeración de uso particular para las instalaciones donde se encuentren los dispositivos de cómputo; y garantizar que la disponibilidad de los mismos sea alta. Poĺıticas de seguridad lógica. • Mantener tanto el sistema operativo como los paquetes de los equipos de cómputo actualizado, con las últimas revisiones de seguridad disponibles. Las actualizaciones cŕıticas para los sistemas en producción, deben ser verificadas antes de ser implementadas, de tal manera de garantizar que los nuevos cambios no afectaran la disponibilidad del servicio. • Configurar el entorno de producción de manera segura, es decir implementar las mejores prácticas propuestas por la documentación de los servicios instalados. Esto incluye deshabilitar cuentas, claves y usuarios por defecto; otorgar el acceso al sistema solo a usuarios autorizados y con privilegios mı́nimos que le permitan solo cumplir con sus funciones, establecer poĺıticas para utilizar las cuentas de usuario criticas, controlar la vigencia de los accesos otorgados a los usuarios y asegurar o garantizar la posibilidad de identificar a todos los usuarios a través de sus cuentas (consistencia de la información almacenada en el gecos). • Definir el uso de contraseñas fuertes y el control de acceso a toda la información del sistema. 93 • Registrar las actividades de los usuarios en bitácoras, que permitan sin comprometer la privacidad del mismo registrar posibles incidentes de seguridad • Utilizar conexiones seguras siempre que se requiera la transmisión de datos cŕıticos, por ejemplo contraseñas de usuarios, entre otras. Se recomienda la utilización de protocolos seguros como SSH, HTTPS, SFTP. • Localizar los servidores en segmentos de red espećıficos, separados de las redes donde se encuentren los usuarios. • Utilizar servicios que permitan detectar ataques de fuerza bruta contra el servidor independientemente del servicio que se este ofreciendo (fail2ban) • Definir reglas de firewall espećıficas por servidor, de tal manera que el tráfico dirigido a servicios que no se estén prestando sea descartado. • Enviar las bitácoras de los servicios de manera periódica al administrador del sistema, de manera que se encuentre enterado del estado del mismo. (Espacio disponible, correos enviados, estad́ısticas de usuarios bloqueados, entre otros) Pruebas Estad́ısticas del módulo de compresión de Apache Peticiones procesadas, incluyendo respuestas no comprimidas. (formatos no comprimidos jpg, png, etc.) • Número de peticiones: 110996 (100 %) • Original: 333982102 Bytes • Tamaño final de las respuestas: 133618949 Bytes (41 %) • Ahorro: 200363153 Bytes (59 %) Peticiones procesadas, solo respuestas comprimidas • Número de peticiones: 95108 (85 %) • Original: 296874341 Bytes • Tamaño final de las respuestas: 96511188 Bytes (33 %) • Ahorro: 200363153 Bytes (67 %) 94 Para ambas estad́ısticas, la primera ĺınea muestra el número total de peticiones almacenadas en los logs del sistema, la segunda ĺınea muestra la cantidad de datos que hubieran sido enviados si no se utilizara el módulo de compresión, la tercera ĺınea muestra la cantidad de datos que realmente fueron enviados, la cuarta ĺınea muestra el tráfico ahorrado por utilizar el módulo de compresión. En promedio existe un ahorrro del 67 % para el tráfico generado desde el d́ıa 25 de junio de 2009 hasta el 6 de julio de 2009. Las siguientes estad́ısticas muestran las pruebas realizadas con la aplicación YSlow 3. Esta es una extensión para el navegador Mozilla Firefox la cual tiene como función analizar el desempeño de las aplicaciones web. Está permite obtener información sobre el rendimiento de las aplicaciones web, muestra un resumen de las peticiones HTTP y en tiempo real puede observarse el Modelo de Objetos del Dominio (Document Object Model - DOM). YSlow analiza el sitio y genera una calificación para cada regla definida. Si la página tiene aspectos mejorables, la extensión ofrece una lista de sugerencias con los cambios y calcula el tamaño total de la página. En la figura 4.18, se muestra la vista de la aplicación donde se califica a Ciensnet. Figura 4.18: Calificación del sitio Ciensnet usando YSlow 3http://developer.yahoo.com/yslow/ 95 Puede observarse en la figura que la aplicación es calificada con una puntuación de 83/100 puntos y catalogada como un sitio clase B. En la figura 4.19, se muestra el gráfico que describe el tamaño total en Bytes necesarios para la carga del sistema, estos 479.3KB permiten determinar una cota al momento de cargar el sitio al cliente, es decir si la velocidad neta de descarga es de 25KBps es necesario un tiempo de 19.172 segs. para poder descargar todos los archivos asociados al sitio, adicional a este tiempo debe agregarse el tiempo de procesamiento del computador (el tiempo que necesita el navegador para renderizar la plataforma). El gráfico muestra adicionalmente la distribución en cuanto al tamaño y tipo de archivo descargado. Figura 4.19: Gráfico tamaño del sitio 4.5.9. Iteración 8 Del 25-May-2009 al 29-May-2009 En esta iteración se continuó con el proceso de traducción y corrección de los mensajes de la aplicación. Planificación Para esta iteración se definió la meta Depuración de la traducción al español de los mensajes de la plataforma y corrección de la semántica de los mensajes que ya estaban en español. Los objetivos fijados para esta iteración incluyen: 96 Traducir y corregir los mensajes de la aplicación Diseño Debido que para este momento ya algunos usuarios han usado la aplicación, estos han dado su opinión respecto a los mensajes que aparecen en los distintos módulos, y basado en sus sugerencias se inicio la segunda etapa de depuración de dichos menajes, para su mejor compresión. Como se explico en la segunda iteración, estos mensajes son editados en lo archivos /lenguage/es.js de cada módulo. 4.5.10. Iteración 9 Del 31-May-2009 al 04-Jun-2009 En ésta iteración se integro el módulo de foros a la plataforma, utilizando una aplicación llamada PHPBB3. Planificación Para esta iteración se definió la meta Instalación del foro PHPBB3 como módulo de la plataforma. Los objetivos fijados para esta iteración incluyen: Instalar la aplicación PHPBB3 en el servidor. Integrar la aplicación PHPBB3 a la plataforma. Diseñar y desarrollar un Portlet, que permita ver las últimas actualizaciones de los foros, en la pagina de inicio de la intranet. Hacer pruebas de funcionamiento. Diseño Se integro un motor de foros en la intranet para que los usuarios puedan crear temas de discusión o publicar información de interés para toda la comunidad y que cada usuario pueda escribir sus opiniones acerca de cada tema. Para dicha tarea de uso la aplicación PHPBB3 basada en PHP 5 y MySQL 5. 97 Codificación Procedimiento para la integración del módulo de foros: • Se debe instalar la aplicación PHPBB3 en el servidor donde esta instalada la intranet. Se tienen que procurar que el usuario administrador de la intranet tenga el mismo nombre que el usuario administrador de la aplicación PHPBB3 o de l contrario el administrador de la intranet no podrá acceder como administrador al módulo de foros. • Configurar la URL de la aplicación PHPBB3 en el archivo config.php de la intranet: 1 $con f i g [ ’ phpbb3 url ’ ]= ’ https : /w3 . c i e n s . ucv . ve/phpbb3 / ’ ; • Copiar el archivo /modules/phpbb3/auth groupoffice.php en la ruta /phpbb3/includes/auth/auth groupoffice.php • Iniciar sesión en la aplicación ingresando a la página http://w3.ciens.ucv.ve/phpbb3/, luego dirigirse a la opción: General > Client communication > Authentication • Seleccionar en tipo de autenticación GroupOffice, ingresar los datos de la base de datos ciensnet y luego guardar los cambios en la aplicación. • Para finalizar se debe iniciar sesión en la intranet como administrador para instalar el módulo de PHPBB3 y configurar los permisos de los usuarios sobre el módulo. Procedimiento para la creación del portlet de foros: Un portlet es un archivo que se incluye en los módulos que permite ver información importante acercar de los mismos. En el caso de los foros se quiere que el portlet muestre los últimos 5 temas en donde se han hecho modificaciones y en que fecha se realizó dicha modificación, para ello se debe crear el archivo /modules/phpbb3/Portlet.js y agregar la referencia a ese portlet en el módulo Summary o en español Inicio, para que el usuario pueda instalarlo y desinstalarlo según sus necesidades. Archivo Portlet.js: 1 GO. phpbb3 . Phpbb3Grid = func t i on ( c on f i g ){ 2 i f ( ! c on f i g ){ 3 con f i g = {} ; 4 } 5 con f i g . s t o r e = new GO. data . JsonStore ({ 6 u r l : GO. s e t t i n g s . modules . phpbb3 . u r l+ ’ j son . php ’ , 7 baseParams : { 8 task : ’ f o ros ’ 98 9 } , 10 root : ’ r e s u l t s ’ , 11 id : ’ forum id ’ , 12 to ta lPrope r ty : ’ t o ta l ’ , 13 f i e l d s : [ ’ forum id ’ , ’ forum name ’ , ’ forum desc ’ , ’ f o r um la s t po s t i d ’ , 14 ’ f o rum la s t po s t t ime ’ , ’ f o r um la s t po s t sub j e c t ’ ] 15 } ) ; 16 17 var Phpbb3ColumnModel = new Ext . g r id . ColumnModel ( 18 [{ 19 header : ’ Ultimos temas ac tua l i zados ’ , 20 dataIndex : ’ forum name ’ , 21 s o r t ab l e : f a l s e , 22 width : 420 23 } ,{ 24 header : ’ Fecha ’ , 25 dataIndex : ’ f o rum la s t po s t t ime ’ , 26 s o r t ab l e : f a l s e , 27 width : 150 28 } ] 29 ) ; 30 31 Phpbb3ColumnModel . d e f au l t So r t ab l e= true ; 32 con f i g . cm=Phpbb3ColumnModel ; 33 34 con f i g . view=new Ext . g r id . GridView ({ 35 emptyText : ’No hay temas para mostrar ’ , 36 f o r c eF i t : t rue 37 } ) ; 38 39 con f i g . sm=new Ext . g r id . RowSelectionModel ( ) ; 40 con f i g . loadMask=true ; 41 con f i g . autoHeight=true ; 42 43 GO. phpbb3 . Phpbb3Grid . s up e r c l a s s . c on s t ruc to r . c a l l ( th i s , c on f i g ) ; 44 } ; 45 46 Ext . extend (GO. phpbb3 . Phpbb3Grid , GO. g r id . GridPanel ,{ 47 loaded : f a l s e , 48 a f terRender : func t i on (){ 49 t h i s . on (” rowdb l c l i ck ” , func t i on ( gr id , rowClicked , e ){ 50 GO. moduleManager . getPanel ( ’ phpbb2 ’ ) ; 51 } , t h i s ) ; 52 } 53 54 i f ( t h i s . i s V i s i b l e ( ) ){ 55 t h i s . onGridShow ( ) ; 56 } 57 } , 58 onGridShow : func t i on (){ 59 i f ( ! t h i s . loaded && th i s . rendered ){ 60 t h i s . s t o r e . load ( ) ; 61 t h i s . loaded=true ; 62 } 63 } 64 65 } ) ; 66 67 GO. mainLayout . onReady ( func t i on (){ 68 i f (GO. summary){ 69 var phpbb = new GO. phpbb3 . Phpbb3Grid ( ) ; 70 GO. summary . p o r t l e t s [ ’ po r t l e t−f o ro s ’ ]=new GO. summary . Po r t l e t ({ 71 id : ’ po r t l e t−f o ro s ’ , 72 t i t l e : ’ Foros ’ , 73 layout : ’ f i t ’ , 74 t o o l s : [{ 75 id : ’ c l o s e ’ , 76 handler : f unc t i on ( e , target , panel ){ 77 panel . removePort let ( ) ; 78 } 79 } ] , 80 items : phpbb , 81 autoHeight : t rue 82 } ) ; 83 } 84 } ) ; 99 Como se puede observar en el código fuente, este portlet será referenciado con el identificador portlet-foros en el módulo resumen agregándolo a la lista de portlets activos en el archivo /modules/summary/MainPanel.js: 1 t h i s . a c t i v ePo r t l e t s =[ ’ po r t l e t−announcements ’ , ’ po r t l e t−tasks ’ , 2 ’ po r t l e t−calendar ’ , ’ po r t l e t−note ’ , ’ po r t l e t−f o ros ’ ] ; 3 4 s t a t e =[{ id : ’ po r t l e t−announcements ’ , c o l : 0} , { id : ’ po r t l e t−tasks ’ , 5 c o l : 0} ,{ id : ’ po r t l e t−calendar ’ , c o l : 1} ,{ id : ’ po r t l e t−note ’ , c o l :1} 6 ,{ id : ’ po r t l e t−f o ro s ’ , c o l : 1 } ] ; En la figura 4.20 se muestra la ventana que le permite al usuario instalar los portlets y se observa como ya esta incluido el portlet de foros. Figura 4.20: Vista de interfaz para agregar portlets En la figura 4.21 se puede observar el portlet de foros con la información de los últimos temas actualizados. Figura 4.21: Vista portlet de visualización de foros 100 Pruebas Las pruebas realizadas para verificar el funcionamiento de los portlets consistió en iniciar sesión en la plataforma, ingresar en el módulo de Foros y navegar por los temas, escribir comentarios de prueba y comprobar que en base a los últimos comentarios escritos, se actualizara el portlet de los foros. Las pruebas arrojaron resultados satisfactorios ya que los usuarios se autenticaron correctamente y la publicación de mensajes no presento problemas. En la figura 4.22 se observa el módulo de foros. Se puede observar todos los foros y temas a los que el usuario tiene acceso. Figura 4.22: Vista módulo de foros En la esquina superior derecha de la figura 4.22 se puede observar el correo del usuario que esta autenticado, el cual corresponde con el usuario autenticado en la intranet. 101 Caṕıtulo 5 Conclusión 5.1. Conclusiones La finalidad de esta investigación fue la de implantar una plataforma de software colaborativo y de código abierto que permita la integración de servicios prestados por la Facultad de Ciencias a través de sus dependencias y facultades, de forma unificada, es decir que en una misma plataforma se incluyan servicios como correo electrónico, calendario, notas, administración de archivos, foros, mensajeŕıa instantánea y además dos de los servicios prestados por el Centro de Computación como el sistema de Soporte Técnico y el sistema de Reservación de Salas. Por lo mencionado previamente, se pueden dar los primero pasos para la eliminación de los múltiples nombres de usuario, contraseñas y otros datos que se mantiene almacenados en diversas bases de datos generando redundancia. Un aspecto que agrega valor a la plataforma es la ventaja de que todas las funcionalidades se integran bajo un ambiente estandarizado utilizando algunas de las ultimas tecnoloǵıas del mercado para aplicaciones web, con una interfaz consistente y donde las funcionalidades fueron desarrolladas de forma modular, lo que permite que el sistema sea extensible, fácil de actualizar y de configurar. El proceso de desarrollo XP simplificó las actividades de planificación, codificación, y pruebas, con lo cual se redujo el tiempo de implementación. Lo cual trajo como consecuencia que se pudiese dedicar más tiempo en actividades de pruebas, modificaciones y diseño. Esto a su vez, concluyó en una mejoŕıa en la calidad del producto, con lo cual se pudo lograr producir un software robusto, efectivo y eficiente. 102 A continuación, se especifican las contribuciones, limitaciones y recomendaciones de este trabajo de investigación. Posteriormente, se detallarán algunos posibles trabajos futuros que se podŕıa realizar en este aspecto. 5.2. Contribuciones Este trabajo proporciona como principal aporte el punto de inicio para la implantación de una Intranet para la Facultad de Ciencias, ya que la base que se instaló y configuró permitirá desarrollar aplicaciones sobre la plataforma e integrar el resto de las aplicaciones que se encuentran actualmente en producción. Facilitando el uso de información común y reduciendo la posibilidad de tener inconsistencia en los datos 5.3. Recomendaciones En el trabajo de grado Implantación de una Plataforma de Software Colaborativo que Permita Integrar Servicios Prestados por la Facultad de Ciencias se desarrolló e implantó una solución que permite a los integrantes de la comunidad de Ciencias acceder a un conjunto de servicios de manera centralizada. Es importante tener en cuenta ciertas consideraciones, como las detalladas a continuación: Mantener actualizada la plataforma, ya que los usuarios de la comunidad de código abierto que trabajan con la aplicación GroupOffice, se encuentran constantemente haciendo mejoras y agregando nuevas funcionalidades que están siempre disponibles en las nuevas versiones de GroupOffice. La renovación periódica de los contenidos y mantenimiento del sistema evitará inconsistencias sobre la información de la plataforma. El éxito de la solución dependerá significativamente de la calidad de sus servicios, lo cual convergerá en la progresiva y sistemática aceptación de los mismos. La utilización adecuada de las herramientas de administración sera clave para definir la correcta permisoloǵıa y privilegios asociados a los roles. 103 Existe una carencia importante sobre la inversión en la plataforma tecnológica del Centro de Computación, si no se implementan actualizaciones en la plataforma en el mediano plazo, habrá una postergación ostensible y se subutilizarán tanto el sistema colaborativo como los demás servicios dentro de la dependencia. Para mantener una interfaz de usuario consistente se recomienda utilizar ExtJS, el cual es una biblioteca de JavaScript para el desarrollo de aplicaciones web interactivas. Esta biblioteca define un conjunto de objetos que permitirán poblar la interfaz de usuario, facilitándole al desarrollador su desarrollo. Independientemente del lenguaje de programación con el que sea desarrollada alguna aplicación que quiera integrarse a la plataforma, se recomienda utilizar un conjunto de colores acorde a los ya establecidos en el sistema base, de manera de mantener consistente la interfaz del sistema. Se sugiere utilizar colores en la escala del azul y beige semi-saturado (claro). 5.4. Trabajos Futuros Como trabajos futuros se propone la integración de otras aplicaciones que se encuentran en producción en la Facultad de Ciencias en las diversas escuelas, dependencias o institutos que puedan ser de interes para toda la comunidad y que ayuden a complementar las actividades del personal docente, administrativo y los estudiantes. 104 Apéndice A Archivos de configuración A.1. Archivo de configuración del módulo deflate de Apache 1 2 <IfModule mod def late . c> 3 4 AddOutputFilterByType DEFLATE text /html text / p l a in text /xml 5 AddOutputFilterByType DEFLATE text /html app l i c a t i on /xhtml+xml 6 AddOutputFilterByType DEFLATE text / c s s 7 AddOutputFilterByType DEFLATE app l i c a t i on / j a v a s c r i p t app l i c a t i on /x−j a v a s c r i p t 8 text / j a v a s c r i p t 9 AddOutputFilterByType DEFLATE app l i c a t i on /x−httpd−php app l i c a t i on /x−httpd−php−source 10 app l i c a t i on /x−httpd−fastphp 11 AddOutputFilterByType DEFLATE text / p l a in 12 AddOutputFilterByType DEFLATE text /xml app l i c a t i on /xml app l i c a t i on / x s l t+xml 13 app l i c a t i on /xml−dtd 14 AddOutputFilterByType DEFLATE app l i c a t i on / r s s+xml app l i c a t i on /atom xml 15 AddOutputFilterByType DEFLATE app l i c a t i on /x−httpd−eruby 16 17 Def lateCompress ionLeve l 9 18 19 BrowserMatch ˆ Moz i l l a /4 gzip−only−t ext /html 20 BrowserMatch ˆ Moz i l l a / 4\ . 0 [ 6 7 8 ] no−gz ip 21 BrowserMatch \bMSIE ! no−gz ip ! gzip−only−t ext /html 22 23 </IfModule> A.2. Archivo de configuración del módulo disk-cache de Apache 1 2 <IfModule mod disk cache . c> 3 # cache c l ean ing i s done by htcachec lean , which can be con f i gu red in 4 # / etc / de f au l t /apache2 5 # 6 # For f u r th e r information , s ee the comments in that f i l e , 7 # /usr / share /doc/apache2 .2−common/README. Debian , and the htcachec l ean (8) 8 # man page . 105 9 10 # This path must be the same as the one in / etc / d e f au l t /apache2 11 CacheRoot /var / cache /apache2/mod disk cache 12 13 # This w i l l a l s o cache l o c a l documents . I t u sua l l y makes more sense to 14 # put t h i s in to the c on f i gu r a t i on f o r j u s t one v i r t u a l host . 15 16 CacheEnable d i sk / 17 18 CacheDirLevels 6 19 CacheDirLength 3 20 </IfModule> A.3. Archivo principal de configuración de la intranet 1 #F i l e c on f i g . php 2 <?php 3 $con f i g [ ’ s a l a s ’ ]= ’ http ://w3 . c i e n s . ucv . ve/ cal ’ ; 4 5 $con f i g [ ’ enabled ’ ]= true ; 6 $con f i g [ ’ id ’ ]=” g r oupo f f i c e ” ; 7 $ con f i g [ ’ debug ’ ]= f a l s e ; 8 $ con f i g [ ’ log ’ ]= true ; 9 $con f i g [ ’ language ’ ]=” es ” ; 10 $con f i g [ ’ de fau l t count ry ’ ]=”VE” ; 11 $con f i g [ ’ de fau l t t imezone ’ ]=” America/Caracas ” ; 12 $con f i g [ ’ d e f au l t cu r r ency ’ ]=”Bs ” ; 13 $con f i g [ ’ d e f au l t da t e f o rmat ’ ]=”dmY” ; 14 $con f i g [ ’ d e f au l t da t e s epa r a t o r ’]=”−”; 15 $con f i g [ ’ de fau l t t ime fo rmat ’ ]=”G: i ” ; 16 $con f i g [ ’ d e f au l t f i r s t we ekday ’ ]=”1” ; 17 $con f i g [ ’ d e f au l t d e c ima l s epa ra t o r ’ ]=” , ” ; 18 $con f i g [ ’ d e f au l t thousands s epa ra to r ’ ]= ” . ” ; 19 $con f i g [ ’ theme ’ ]=” Defaul t ” ; 20 $con f i g [ ’ a l low themes ’ ]= f a l s e ; 21 $con f i g [ ’ a l low password change ’ ]= true ; 22 $con f i g [ ’ a l l ow r e g i s t r a t i o n ’ ]= f a l s e ; 23 $con f i g [ ’ r e g i s t r a t i o n f i e l d s ’ ]=” t i t l e i n i t i a l s , sex , birthday , address , home phone , fax , c e l l u l a r , 24 company , department , funct ion , work address , work phone , work fax , homepage ” ; 25 $con f i g [ ’ r e q u i r e d r e g i s t r a t i o n f i e l d s ’ ]=” company , address ” ; 26 $con f i g [ ’ a l l ow dup l i c a t e ema i l ’ ]= f a l s e ; 27 $con f i g [ ’ au to ac t i va t e account s ’ ]= f a l s e ; 28 $con f i g [ ’ n o t i f y adm in o f r e g i s t r a t i o n ’ ]= true ; 29 $con f i g [ ’ r e g i s t e r modu l e s r ead ’ ]=”summary , email , ca lendar , tasks , addressbook , f i l e s , notes , sopor te ” ; 30 $con f i g [ ’ r e g i s t e r modu l e s wr i t e ’ ]=”” ; 31 $con f i g [ ’ r e g i s t e r u s e r g r oup s ’ ]=”” ; 32 $con f i g [ ’ r e g i s t e r v i s i b l e u s e r g r o u p s ’ ]=”Todos ” ; 33 $con f i g [ ’ host ’ ]=”/ c i en sne t /” ; 34 $con f i g [ ’ f u l l u r l ’ ]=” https ://w3 . c i e n s . ucv . ve/ c i en sne t /” ; 35 $con f i g [ ’ t i t l e ’ ]=” Ciensnet ” ; 36 $con f i g [ ’ webmaster email ’ ]=” root@w3 . c i e n s . ucv . ve ” ; 37 $con f i g [ ’ root path ’ ]=”/ var /www/ c i en sne t /” ; 38 $con f i g [ ’ tmpdir ’ ]=”/tmp/” ; 39 $con f i g [ ’ max users ’ ]=”0” ; 40 $con f i g [ ’ quota ’ ]=”0” ; 41 $con f i g [ ’ db type ’ ]=” mysql ” ; 42 $con f i g [ ’ db host ’ ]=” l o c a l h o s t ” ; 43 $con f i g [ ’ db name ’ ]=” c i en sne t ” ; 44 $con f i g [ ’ db user ’ ]=” c i en sne t ” ; 45 $con f i g [ ’ db pass ’ ]=” passwordaqui ” ; 46 $con f i g [ ’ db port ’ ]=”3306” ; 47 $con f i g [ ’ db socket ’ ]=”” ; 48 $con f i g [ ’ l o ca l pa th ’ ]=”/ var /www/ c i en sne t / l o c a l /” ; 49 $con f i g [ ’ l o c a l u r l ’ ]=”/ c i en sne t / l o c a l /” ; 50 $con f i g [ ’ f i l e s t o r a g e p a t h ’ ]=”/home/ c i en sne t /” ; 51 $con f i g [ ’ max f i l e s i z e ’ ]=”2097152” ; 52 $con f i g [ ’ smtp server ’ ]=” l o c a l h o s t ” ; 53 $con f i g [ ’ smtp port ’ ]=”25” ; 54 $con f i g [ ’ smtp username ’ ]=”” ; 106 55 $con f i g [ ’ smtp password ’ ]=”” ; 56 $con f i g [ ’ r e s t r i c t smtp ho s t s ’ ]=”” ; 57 $con f i g [ ’ ema i l c onne c t s t r i ng op t i on s ’ ]=”” ; 58 $con f i g [ ’ max attachment size ’ ]=”2097152” ; 59 $con f i g [ ’ cmd zip ’ ]=”/ usr /bin / z ip ” ; 60 $con f i g [ ’ cmd unzip ’ ]=”/ usr /bin /unzip ” ; 61 $con f i g [ ’ cmd tar ’ ]=”/ bin / tar ” ; 62 $con f i g [ ’ cmd chpasswd ’ ]=”/ usr / sb in /chpasswd ” ; 63 $con f i g [ ’ cmd sudo ’ ]=”/ usr /bin /sudo ” ; 64 $con f i g [ ’ cmd quota ’ ]=”” ; 65 $con f i g [ ’ cmd edquota ’ ]=”” ; 66 $con f i g [ ’ cmd al ias ’ ]=”/ usr / l o c a l / bin / a l i a s . sh ” ; 67 $con f i g [ ’ quota protouser ’ ]=”” ; 68 $con f i g [ ’ cmd xml2wbxml ’ ]=”/ usr /bin /xml2wbxml ” ; 69 $con f i g [ ’ cmd wbxml2xml ’ ]=”/ usr /bin /wbxml2xml ” ; 70 $con f i g [ ’ cmd tnef ’ ]=”/ usr /bin / tne f ” ; 71 $con f i g [ ’ cmd php ’ ]=”php ” ; 72 $con f i g [ ’ phpMyAdminUrl ’ ]=”” ; 73 $con f i g [ ’ a l l ow un s a f e s c r i p t s ’ ]=”” ; 74 $con f i g [ ’ de fau l t pas sword l ength ’ ]=”6” ; 75 76 $con f i g [ ’ l d ap s e r v e r i p ’ ]=”150 . 1 8 5 . 7 2 . 5 ” ; 77 $con f i g [ ’ ldap base dn ’ ]=” ou=people , dc=c iens , dc=ucv , dc=ve ” ; 78 $con f i g [ ’ ldap admin user ’ ]=” cn=admin , dc=c iens , dc=ucv , dc=ve ” ; 79 $con f i g [ ’ ldap admin password ’ ]=” passwordaqui ” ; 80 $con f i g [ ’ mai l host ’ ]=” s t r i x . c i e n s . ucv . ve ” ; 81 82 $con f i g [ ’ i d g rupo sopor t e ’ ]=”4” ; 83 84 $con f i g [ ’ phpbb3 url ’ ]= ’ http ://w3 . c i e n s . ucv . ve/phpbb3 / ’ ; 107 Bibliograf́ıa [1] Lic. Jose Montilla, Análisis de nuevas tecnoloǵıas en comunicación e información usadas en la Universidad Central de Venezuela, 2009 [2] Shai Carmi, Shlomo Havlin, Scott Kirkpatrick, Yuval Shavitt, Eran Shir, A model of Internet topology using k-shell decomposition, 2007, Sitio: http://www.eng.tau.ac.il/~shavitt/pub/PNAS07.pdf [3] Andrew S. Tanenbaum, Computer Networks 4th Edition, Prentice Hall, 2003 [4] Gottfried Vossen, Stephan Hagemann, Unleashing web 2.0 from concepts to creativity, Morgan Kaufmann, 2007 [5] Cristobal Cobo Romani, Hugo Pardo Kuklinski, Planeta web 2.0 Inteligencia colectiva o fast food, Flacso Mexico, 2007 [6] Quentin Zervaas, Practical web 2.0 applications with php, Apress, 2008 [7] Ph.D. Steve Holzner, AJAX for dummies, Editorial for Technology Dummies, 2008 [8] Steven Holzner, Ajax Bible, Wiley, 2007 [9] Gúıa Breve de Servicios Web, Sitio: http://www.w3c.es/Divulgacion/GuiasBreves/ServiciosWeb [10] Dave Chaffey, Groupware Workflow and Intranets Reengineering the Enterprise with Collaborative Software, Elsevier Science & Technology Books, 1998 [11] Estad́ısticas sobre el uso del servicio de correo, Sitio: http://www.email-marketing-reports.com/metrics/email-statistics.htm [12] Sitio oficial de Group-Office, Sitio: http://www.group-office.com 108 [13] Descripción de licencias de software, Sitio: http://www.gnu.org/licenses/licenses.es.html [14] Kenneth E. Kendall, Análisis y Diseño de Sistemas, Pearson Education, 2008 [15] Kent Beck, Martin Fowler, Planning Extreme Programming, Addison-Wesley Professional, 2000 [16] Kent Beck, Extreme Programming Explained, Addison-Wesley Professional, 1999 [17] Ken Ford, Extreme Programming Pocket Guide, Oreilly, 2003 109