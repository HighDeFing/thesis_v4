UNIVERSIDAD CENTRAL DE VENEZUELA FACULTAD DE CIENCIAS ESCUELA DE COMPUTACIÓN Automatización de los procesos internos de la Comisión de Docencia de la Escuela de Matemáticas de la Universidad Central de Venezuela Trabajo de Especial de Grado presentado ante la ilustre Universidad Central de Venezuela por los bachilleres: José Alejandro Rivas Shappiro (CI V-18.026.082) Gabriel José Emmi Pizzela (CI V-18.941.453) para optar por el título de Licenciado en Computación Caracas, 07 de Mayo de 2019. UNIVERSIDAD CENTRAL DE VENEZUELA FACULTAD DE CIENCIAS ESCUELA DE COMPUTACIÓN TRABAJO ESPECIAL DE GRADO: Título: Automatización de los procesos internos de la Comisión de Docencia de la Escuela de Matemáticas de la Universidad Central de Venezuela Autores: José Alejandro Rivas Shappiro y Gabriel José Emmi Pizzela Unidad de Investigación: Aplicaciones de Tecnologías de Internet Palabras Clave: Comisión Docencia de la Escuela de Matemáticas, solicitudes, encuesta, sistema web, automatizar, notificaciones, revisión de solicitudes, gestión de formularios, Google formularios. Tutores: Prof. Robinson Rivas. Fecha de Presentación: 07 de mayo, 2019 Resumen La Comisión de Docencia de la Escuela de Matemáticas de la Universidad Central de Venezuela, es la responsable ante el Consejo de Escuela del buen funcionamiento de la docencia en las asignaturas del servicio. Además vela por el apropiado desenvolvimiento de las materias de la licenciatura, conjuntamente con los coordinadores de los grupos y centros de investigación. Para dar cumplimientos a sus funciones, la comisión de docencia gestiona diversos procesos, entre los cuales se encuentra la programación docente, la generación de encuestas y la gestión de solicitudes, entre otros. Dichos procesos, en algunos casos son realizados parcialmente o en su totalidad de forma manual y descentralizada. Esto trae como consecuencia una mayor carga de trabajo para los integrantes de la Comisión de Docencia. El siguiente Trabajo Especial de Grado (TEG) plantea el desarrollo de una aplicación Web robusta, escalable, extensible, basada en tecnologías de código abierto y marcos de trabajos reconocidos que permita automatizar parte del trabajo desempeñado por la Comisión de Docencia y de esta forma mejorar la productividad, tiempos de respuesta y calidad en la prestación de servicios. El sistema está basado en una arquitectura orientada a servicios, cuenta con una API REST desarrollada con Express.js. Del lado del cliente, se utilizó Angular 6 para la construcción de las vistas y el consumo de los diferentes servicios web desarrollados. Además, se desarrolló una integración con la API de Google Formularios para la realización de diversas tareas relacionadas con encuestas. Índice Resumen .......................................................................................................................................... 3 Índice............................................................................................................................................... 5 Figuras y Tablas .............................................................................................................................. 7 Introducción .................................................................................................................................... 9 Capítulo I ...................................................................................................................................... 10 1. Planteamiento del Problema ..................................................................................................... 10 1.1 Antecedentes ....................................................................................................................... 11 1.2 Objetivo General ................................................................................................................. 12 1.3 Objetivos Específicos.......................................................................................................... 12 1.4 Alcance ............................................................................................................................... 13 1.5 Justificación ........................................................................................................................ 14 Capítulo II ..................................................................................................................................... 15 2. Marco Conceptual ..................................................................................................................... 15 2.1. Comisión de Docencia ....................................................................................................... 15 2.1.1. Funciones y atribuciones de la Comisión de Docencia de Matemáticas de la UCV ...... 16 2.2 Funciones del Coordinador de la Comisión de Docencia ................................................... 18 2.3. Procesos involucrados en la Comisión de Docencia .......................................................... 19 2.3.1 Programación Docente ................................................................................................. 19 2.2.2 Generación de Encuesta ................................................................................................... 22 2.2.3 Generación de Solicitud ................................................................................................... 23 Capítulo III .................................................................................................................................... 25 3. Marco Tecnológico ................................................................................................................... 25 3.1 Angular ............................................................................................................................... 25 3.1.1 Características de Angular ........................................................................................... 25 3.1.2 Ventajas de Angular ..................................................................................................... 25 3.1.3 Desventajas de Angular ............................................................................................... 26 3.2 Node.js ................................................................................................................................ 27 3.2.1 Características de Node.js ............................................................................................ 27 3.2.2 Ventajas de Node.js ..................................................................................................... 27 3.2.3 Desventajas de Node.js ................................................................................................ 28 3.3 MariaDB ............................................................................................................................. 28 3.3.1 Características de MariaDB .................................................................................... 28 3.4 Google Drive ....................................................................................................................... 29 3.5 Google Forms...................................................................................................................... 30 3.6 Active Directory.................................................................................................................. 31 3.6.1 Características de Active Directory ............................................................................. 32 Capítulo IV.................................................................................................................................... 33 4. Marco Aplicativo ...................................................................................................................... 33 4.1 Análisis del Modelo de Datos ............................................................................................. 33 4.1.1 Lista de Tablas ............................................................................................................. 33 4.1.2 Modelo de Datos .......................................................................................................... 40 4.2 Implementación del Sistema ............................................................................................... 41 4.2.1 Módulos del sistema .................................................................................................... 41 4.2.2 Perfiles de Usuarios ..................................................................................................... 41 4.2.3 Descripción de la aplicación ........................................................................................ 42 Resultados ..................................................................................................................................... 63 Conclusiones ................................................................................................................................. 71 Recomendaciones ......................................................................................................................... 72 Referencias Bibliográficas y Digitales .......................................................................................... 73 Figuras y Tablas Figura 1. Proceso de Programación Docente ............................................................................... 21 Figura 2. Proceso de Generación de Encuesta .............................................................................. 22 Figura 3. Proceso de Generación de Solicitud .............................................................................. 24 Figura 4. Descripción de las tablas Usuario y Rol ........................................................................ 34 Figura 5. Descripción de las tablas Formulario, Tipo de Formulario. .......................................... 36 Figura 6. Descripción de la Solicitud y Usuario Solicitud. .......................................................... 38 Figura 7. Descripción de la Tabla Usuario Solicitud Notificación ............................................... 40 Figura 8. Modelo de datos del Sistema ......................................................................................... 40 Figura 9. Módulos Principales de la Aplicación ........................................................................... 41 Figura 10. Representación de la estructura gráfica del sistema .................................................... 42 Figura 11. Representación del diseño en diferentes dispositivos ................................................. 43 Figura 12. Vista modificación de perfil de Usuario - Administrador General ............................. 44 Figura 13. Vista enlace con Google - Administrador ................................................................... 45 Figura 14. Vista crear nuevo formulario - Administrador ............................................................ 46 Figura 15. Solución: Diagrama crear formulario .......................................................................... 47 Figura 16. Vista editar formulario - Administrador ...................................................................... 48 Figura 17. Vista contestar formulario embebido de Google Formularios - Administrador, Docente, Personal Administrativo ................................................................................................ 49 Figura 18. Solución: Diagrama modificar formulario .................................................................. 50 Figura 19. Diagrama de Flujo: Detección de variables en el contenido de la solicitud ................ 51 Figura 20. Crear/Editar formato de solicitud - Administrador ..................................................... 52 Figura 21. Realizar solicitud – Administrador, Docente, Personal Administrativo. .................... 54 Figura 22. Solución: Diagrama crear solicitud. ............................................................................ 55 Figura 23. Vista diagrama de casos de uso – Nivel 0. .................................................................. 55 Figura 24. Vista diagrama de casos de uso – Nivel 1. ................................................................. 56 Figura 25. Vista diagrama de casos de uso – Nivel 2. .................................................................. 57 Figura 26. Vista de Autenticación del Sistema. ............................................................................ 65 Figura 27. Vista de edición de perfil de usuario - Administrador General ................................... 66 Figura 28. Vista de enlace con Google. ........................................................................................ 66 Figura 29. Vista creación de un nuevo formato de solicitud. ....................................................... 67 Figura 30. Vista de modificación de perfil de usuario. ................................................................. 67 Figura 31. Creación de una nueva solicitud. ................................................................................. 68 Figura 32. Vinculación y registro de formulario. ......................................................................... 69 Figura 33. Recepción de notificación de la creación de un nuevo formulario. ............................ 69 Figura 34. Visualización de formulario Google embebido. .......................................................... 70 Introducción Desde los comienzos de la World Wide Web (WWW) las tecnologías relacionadas con el internet han tenido una evolución sumamente acelerada. Dicha evolución ha sido impulsada por la necesidad existente de poder compartir y obtener información de manera sencilla, rápida, y en un formato estandarizado. Este desarrollo ha permitido brindar en corto tiempo experiencias de usuarios satisfactorias haciendo del internet un lugar cada vez más común para todas las personas del mundo. En los últimos años el desarrollo de aplicaciones web ha tenido un auge extraordinario, generado por la democratización de Internet y por los servicios ofrecidos a través de las distintas aplicaciones que facilitan el cumplimiento de tareas y procesos llevados a cabo por el usuario tanto en el ámbito personal como en el ámbito profesional. Por lo anterior, diversas instituciones y empresas optan por el uso de aplicaciones Web para simplificar procesos que le permitan obtener numerosos beneficios en cuanto a seguridad, accesibilidad, costos, productividad, entre otros. La Comisión de Docencia de la Escuela de Matemática de la Facultad de Ciencias de la Universidad Central de Venezuela, realiza un conjunto de tareas de forma manual apoyándose en herramientas ofimáticas. Esto trae como consecuencia que algunos procesos tengan: altos tiempos de respuesta, mayor complejidad, replicación de datos, difícil trazabilidad, entre otros. El siguiente TEG, tiene como finalidad el diseño y desarrollo de una aplicación Web que automatice los procesos internos de la Comisión de Docencia y contribuya a ahorrar significativamente tiempo, dinero y esfuerzo; maximizando también el nivel de eficiencia de dichos procesos y la satisfacción por parte del Docente y Personal Administrativo que labora en la escuela. Capítulo I 1. Planteamiento del Problema Actualmente las organizaciones e instituciones sin importar su dimensión, grande mediana o pequeña, hacen uso de sistemas que automatizan sus operaciones y permiten mejorar la productividad, la seguridad, la calidad en la prestación de servicios, reducir costos y tiempo de trabajo. Este no es el caso de la Comisión de Docencia de la Escuela de Matemática de la UCV que ejecuta un conjunto de actividades de forma manual. Entre ellas pudiéramos mencionar las siguientes:  Elaboración de la programación docente.  Supervisión del contenido de los parciales de las materias de servicio.  Realización de encuesta de calidad docente y generación del respectivo informe sobre el desempeño de los docentes y preparadores.  Avalar las solicitudes de permiso de docentes y preparadores, velando porque el curso no quede desatendido.  Atender los problemas y quejas que puedan surgir con alguna de las asignaturas tanto del servicio como de la licenciatura. La realización de este tipo de tareas de manera manual aumenta la probabilidad de generar inconvenientes tales como:  Pérdida de integridad en los datos: algunos trámites pueden estar sin los soportes adecuados y con la posibilidad de que el trámite se extravíe.  Altos tiempos de respuesta: el proceso de generar e imprimir la solicitud para su posterior entrega y posible aprobación, consta de un proceso sin ninguna automatización y por ende se consiguen respuestas lentas y procesos ineficientes para todos los involucrados.  Manejo no seguro de la información: la información de las solicitudes queda expuesta a individuos que no necesariamente están involucrados en los procesos de gestión del trámite.  Manejo descentralizado de la información: las solicitudes pueden traspapelarse o podrían ser manipuladas por personal no autorizado. Las encuestas pueden estar creadas en varias cuentas de Google Drive sin ningún tipo de control dificultando su gestión.  Mayor carga de trabajo para los integrantes de la Comisión de Docencia: el trámite de las solicitudes implica mayor cantidad de etapas y más involucrados, abarcando más carga de trabajo para la comisión. Por las mencionadas razones, se propone el desarrollo de una aplicación Web que le otorgue a la Comisión de Docencia beneficios significativos como los antes mencionados al principio de este capítulo en la gestión de sus procesos internos. 1.1 Antecedentes Las siguientes investigaciones permiten tener una mayor comprensión de la automatización de procesos asociados a la facultad de Ciencias de la UCV.  “Implementación del Módulo de Gestión de Trámites de Preparadores y Auxiliares Docentes del Sistema de Gestión de la programación Docente para el Departamento de la Escuela de Computación de la Facultad de Ciencias” por los licenciados Brites De Freitas Christian M. y De Freitas A. Andrés A. y la tutora Prof. Caraballo B. Yusneyi Y. (2015). Objetivo General: “Desarrollar el módulo de Gestión de Trámites del Personal Docente Preparador y Auxiliar Docente que, basándose en los procesos de negocios de la Escuela de Computación, permita ejecutar los procesos referentes a los trámites del personal preparador y auxiliar docente, a fin de proveer un servicio automatizado y eficaz”. Tecnologías Utilizadas: “Para la elaboración y ejecución de este módulo se combinaron las tecnologías PHP (lenguaje de programación), Laravel y AngularJS (frameworks), PostgreSQL (sistema manejador de base de datos) y la metodología Scrum modificada”.  “Desarrollo de Módulos para la Gestión de Trámites Administrativos y Solicitudes de la Escuela de Computación de la Universidad Central de Venezuela” por las licenciadas Montenegro Z. Hailyx N. y Zapata B. Isthar y la tutora Prof. Caraballo B. Yusneyi Y. (2014). Objetivo General: “Desarrollar un sistema compuesto por módulos, para facilitar la realización de tareas de forma automatizada, asociados a la gestión de trámites administrativos y solicitudes docentes”. Tecnologías Utilizadas: “Se utilizarán diversas tecnologías para el desarrollo, específicamente el marco de trabajo (framework) CakePHP, Hojas de estilo (CSS), JavaScript, Ajax, el gestor de versiones Git y un manejador de Base de Datos (BD) MySql sobre un servidor Web Apache”.  “Desarrollo del Módulo de Gestión de Trámites de Profesores del Sistema de Gestión de la Programación Docente para el Departamento de la Escuela de Computación de la Universidad Central de Venezuela” por el licenciado Guzmán H. Daniel E. y los tutores Prof. Caraballo B. Yusneyi Y. y Prof. Acosta Carlos (2015). Objetivo General: “Desarrollar un sistema web de gestión que permita llevar el control y seguimiento del proceso de planificación docente de forma automatizada, optimizando las actividades y el uso de recursos con el fin de hacer más eficiente la gestión de la programación docente”. Tecnologías Utilizadas: “Laravel (PHP) y AngularJS (JavaScript), SASS para las hojas de estilo, el manejador de versiones Git, Bootstrap para el diseño de las interfaces y PostgreSQL como sistema de gestión de la base de datos”. 1.2 Objetivo General Diseño y desarrollo de un sistema que permita optimizar y automatizar los procesos llevados a cabo por la Comisión de Docencia de la Escuela de Matemática de la UCV. 1.3 Objetivos Específicos  Realizar el levantamiento y análisis de requerimientos.  Seleccionar marcos de trabajo (frameworks) apropiados para el diseño y desarrollo del sistema.  Diseñar interfaces de usuarios.  Diseñar e implementar una base de datos para el sistema.  Selección e integración con los servicios más convenientes para el sistema, ofrecidos por la API de Google.  Desarrollo de servicios web que permitan la generación de componentes modulares y reusables de la lógica de negocio del sistema.  Diseñar un sistema robusto, escalable y extensible que facilite la incorporación en el futuro de nuevas funcionalidades y/o módulos. 1.4 Alcance La solución propuesta abarca el desarrollo de las siguientes funcionalidades:  Módulo de autenticación, consta de un servicio web que permitirá al usuario autenticarse contra un repositorio de usuarios administrado por la Escuela de Matemáticas.  Gestión de la sesión de usuarios basado en roles, se establecerán diferentes roles a través de los cuales se controlará el acceso a los diferentes recursos del sistema.  Módulo de gestión de solicitudes, se implementarán funcionalidades asociadas a la creación, edición, eliminación, notificación y seguimiento de las solicitudes generadas en el sistema.  Módulo de gestión de encuestas y programación docente con integración con la API de Google, se implementarán funcionalidades asociadas a la creación, edición, eliminación, notificación y resultados de las encuestas generadas en el sistema. Funcionalidades no contempladas en la solución propuesta:  Permitir al administrador ver cuáles de los usuarios respondieron a las encuestas enviadas, ya que esta funcionalidad no es posible implementarla en la plataforma utilizada (Google Form).  Módulo de comunicaciones a través de correos electrónicos masivos, donde el administrador pueda crear plantillas o notificaciones, para luego enviarlas a los usuarios de su elección.  Encuestas para preparadores.  Módulo de publicaciones, para que los Docentes puedan registrar sus avances en las diferentes investigaciones y proyectos que realizan durante el año.  Recuperación de contraseña del usuario. 1.5 Justificación El desarrollo de este sistema, es una pieza importante dentro de las tareas que se realizan en la Comisión de Docencia de la Escuela de Matemáticas; con la automatización de los procesos, las partes involucradas serán beneficiadas. Las solicitudes se crearían a través de la aplicación, no se tendrán que llenar a mano las solicitudes, los formatos de las solicitudes estarán precargados, lo que agilizará los procesos del trámite significativamente para el personal encargado de revisarlas. Por otra parte los docentes pueden consultar el estado de sus trámites en el portal, como también mediante el canal de comunicación de correos. El solicitante no debe imprimir la solicitud sino ha sido Aprobada o Avalada por la comisión de docencia. La creación de las encuestas de Google Formularios estarán registradas y vinculadas en el sistema, con el fin de establecer un control y clasificación de todos los formularios que se creen para cada grupo de usuarios de la escuela. En general se puede decir que el sistema trae consigo una serie de ventajas como son: 1. Ahorro de tiempo por parte de la comisión de docencia y secretaria que normalmente tiene que recibir y gestionar solicitudes manualmente. 2. Tramitación de solicitudes de manera más eficiente por medio del uso de herramientas tecnológicas actuales. 3. Menos uso del papel, evitando así traspapelar o extraviar solicitudes. 4. Canal de comunicación de correos más eficaz basado en los correos alternativos de Gmail. Capítulo II 2. Marco Conceptual En el siguiente capítulo se explican las bases conceptuales que sirven como premisa para el desarrollo de este proyecto, basados en documentación interna ofrecida por la Escuela de Matemáticas de la UCV. El capítulo consta de dos secciones: La primera sección en la que se realiza una descripción de las funciones y atribuciones generales de la Comisión de Docencia de la Escuela de Matemáticas de la UCV, sus unidades de trabajo y los ejecutores de dichas funciones.  En la segunda parte se describen los diferentes procedimientos que se realizan actualmente en la Comisión de Docencia, para el control administrativo de las diferentes unidades de trabajo, esta sección sirve como base de la justificación de este Trabajo Especial de Grado. 2.1. Comisión de Docencia La Comisión de Docencia además de velar por el correcto desenvolvimiento de las materias de la licenciatura de la mano con los centros de investigación y los coordinadores de los grupos, es también la responsable, ante el Consejo de Escuela, del buen funcionamiento en las asignaturas del servicio por parte del personal docente. Hace aproximadamente 8 años, en julio del año 2011, por decisión del Consejo de Escuela, la Comisión de Docencia fue reestructurada, quedando conformada por tres unidades de trabajo, que deben trabajar en constante colaboración con los coordinadores de las asignaturas y de ser necesario dar apoyo a las demás unidades:  Unidad de Docencia Básica: Encargada de los cursos de Matemáticas I, II y III.  Unidad de Docencia Especializada: Encargada de las asignaturas de la Lic. en Matemáticas, Matemáticas IV y Métodos Matemáticos.  Unidad de Apoyo: Encargada de prestar apoyo a las demás unidades cuando sea requerido, como también velar por la calidad de la docencia efectuando encuestas que permitan la evaluación del desempeño del personal docente. 2.1.1. Funciones y atribuciones de la Comisión de Docencia de Matemáticas de la UCV Unidad de Docencia Básica De acuerdo a documentación interna ofrecida por la Escuela de Matemáticas, entre las responsabilidades y tareas que tiene la Unidad de Docencia Básica están:  Elaboración de la programación docente de las asignaturas Matemáticas I, II y III cada semestre.  Supervisión del desempeño de cada uno de los profesores de estas asignaturas en referencia a los contenidos correspondientes, el uso apropiado de la bibliografía y cumplimiento de los cronogramas establecidos, la elaboración de exámenes, así como el cumplimiento de las actividades programadas por la coordinación.  Comunicación permanente con los coordinadores de Matemáticas I, II y III, y la contribución a la solución de diferentes problemas que puedan afectar el desarrollo de estas asignaturas, tales como: ausencias injustificadas, permisos o renuncias de profesores y/o preparadores.  Atención a reclamos formulados por profesores y alumnos, relacionados con las asignaturas mencionadas.  Supervisión de la implementación y cumplimiento de las normativas establecidas por el Consejo de Escuela en relación con el dictado y evaluación de los cursos de Matemáticas I, II y III.  Colaboración estrecha con el Director y Jefe del departamento, para la organización de los concursos de credenciales para optar a los cargos de Docentes temporales, en fecha oportuna.  Apoyo en la organización, en fecha oportuna, de los concursos de preparadores I y II.  Entrega al final de cada semestre de una evaluación detallada del desempeño docente de profesores y preparadores de las tres asignaturas correspondientes a la unidad. Unidad de Docencia Especializada: En cuanto a esta unidad, algunas de las funciones son muy parecidas a la Unidad Básica, pero dirigidas a las asignaturas de la Licenciatura en Matemáticas:  Elaboración de la programación docente de las asignaturas de la licenciatura en Matemáticas, cada semestre.  Supervisión del desempeño de cada uno de los profesores de estas asignaturas en referencia al dictado de los contenidos correspondientes, el uso apropiado de la bibliografía.  Comunicación constante con los coordinadores de las asignaturas de la Licenciatura en Matemáticas y la contribución a la solución de diferentes problemas que puedan afectar el desarrollo de estas asignaturas, tales como: ausencias injustificadas, permisos o renuncias de profesores y/o preparadores.  Atención a reclamos formulados por profesores y alumnos, relacionados con las asignaturas de la Licenciatura.  Supervisión de la implementación y cumplimiento de las normativas establecidas por el Consejo de Escuela en relación con el dictado y evaluación de dichas asignaturas.  Colaboración estrecha con el Director y Jefe del Departamento, para la organización de los concursos de credenciales para optar a los cargos de Docentes temporales, en fecha oportuna.  Apoyo en la organización, en fecha oportuna, de los concursos de preparadores.  Entrega al final de cada semestre de una evaluación detallada del desempeño docente de profesores y preparadores de las tres asignaturas correspondientes a la unidad. Unidad de apoyo Las funciones y atribuciones de esta unidad van dirigidas a la constante colaboración hacia las otras dos unidades, y son las siguientes:  Aplicación, en cada semestre, de la encuesta de evaluación profesoral en todos los cursos de pregrado dictados por la Escuela de Matemáticas.  Realización de las encuetas de evaluación a los preparadores cada semestre.  Colaboración en el procesamiento y análisis de los datos suministrados por las encuestas de evaluación profesoral y de preparadores.  Solicitud, todos los semestres, a los coordinadores de los cursos de Matemáticas I, II y III, el informe acerca de los profesores bajo su coordinación. Este informe se presenta con un formato prediseñado.  Aplicación a los profesores de cada semestre de los cursos de Matemáticas I, II y III, la encuesta de evaluación al coordinador. Este informe se presenta con un formato prediseñado.  Suministro de la información acerca del desempeño de los profesores, preparadores y coordinadores proveniente de las encuestas e informes recolectados, a los responsables de las otras dos unidades, para que estos elaboren sus informes respectivos.  Colaboración en la organización, en fecha oportuna, de los concursos de Preparadores I y II.  Revisión periódica de las credenciales de los preparadores, para garantizar que mantengan un desempeño académico acorde con lo exigido en el momento de su contratación. Una atribución que corresponde a las tres unidades conjuntamente con el Director y el Jede del Departamento de Matemáticas, es la organización y realización anual y en fecha oportuna, de los concursos de credenciales de Docentes a Dedicación Exclusiva, Docentes Temporales y Preparadores. 2.2 Funciones del Coordinador de la Comisión de Docencia La Comisión de Docencia de la Escuela de Matemáticas cuenta con la figura de un coordinador, esta persona tiene la responsabilidad de atender, supervisar y apoyar a las tres unidades antes mencionadas, entre sus funciones principales está:  La supervisión para el correcto funcionamiento de las tres unidades que conforman la Comisión de Docencia.  Consideración y evaluación de cualquier situación irregular en torno a la docencia impartida por la Escuela de Matemáticas que no se haya podido solventar ante otras instancias competentes: profesores, coordinadores, Unidad de la Comisión de Docencia Correspondiente.  Consignación de la Programación Docente, elaborada por la Comisión de Docencia, para su consideración y aprobación por parte del Consejo de Escuela.  Consignación de la Programación Docente, aprobada por el Consejo de Escuela, ante Control de Estudios, en los formatos que esta División solicite.  Supervisión para asegurar la calidad de la docencia y el cumplimiento de los objetivos y actividades previstos en cada asignatura.  Comunicación y constante contacto con los Directores y Jefes de Departamentos de otras Escuelas a fin de asegurar que las asignaturas cumplen los objetivos predeterminados.  Coordinación para la realización, al final de cada semestre, de las evaluaciones del desempeño de los docentes y preparadores.  Solicitud al Consejo de Escuela, en las fechas oportunas, la apertura de los concursos de credenciales para optar al cargo de Docente a Dedicación Exclusiva, Docente Temporal, y Preparadores proponiendo los lapsos de inscripción, fechas de los concursos, jurados principales y suplentes.  Atención a cualquier situación que requiera la actuación de la División de Control de Estudios, tales como: asignación de aulas, conflictos y cambios de horarios, etc. 2.3. Procesos involucrados en la Comisión de Docencia En la comisión de docencia de la Escuela de Matemáticas de la UCV, intervienen diversos procesos que tienen como finalidad dar cumplimiento con las funciones y atribuciones que están bajo la responsabilidad de la comisión. A continuación se describirán los procesos más relevantes: 2.3.1 Programación Docente Figura 1. Proceso de Programación Docente Fuente: Creada por los autores, 2019. Pasos a seguir para la elaboración de la programación docente de profesores y preparadores de la Escuela de Matemáticas, como se muestra en la figura 1: a. Enviar a los grupos la solicitud de la programación docente sugerida. b. Definir los coordinadores de las materias del servicio. Los grupos deben asignar un coordinador según la tabla aprobada por el Consejo de Escuela. c. Enviar correos solicitando a los profesores que llenen la encuesta con sus preferencias y que suministren sus horarios disponibles (esto en el caso de profesores contratados). d. En base a la información anterior, actualizar las bases de datos del Departamento. Se requieren informes: uno para Control de Estudios (la programación docente) y uno para la Escuela (la lista de todos los profesores del departamento con todos sus datos). La secretaria del Departamento transcribe en un formato preestablecido el contenido de las encuestas con las preferencias de los profesores. Hay dos casillas a la izquierda para colocar las cargas separadas en grupos de 4 horas. e. La programación a ser ejecutada que se debe enviar a Control de Estudios debe estar completa para la licenciatura. Para el servicio sólo se enviarán los nombres de los coordinadores y el número de secciones propuestas para cada materia. En general se propone el mismo número de secciones del semestre anterior, salvo en situaciones excepcionales. f. Asignar cursos a los profesores que no hayan sido programados para dictar cursos de la licenciatura en Matemáticas. Recomendaciones: Es conveniente esperar hasta tener todas las encuestas, si es necesario, enviando notificaciones a los profesores que no consignen a tiempo la información y enfatizando que están retrasando la publicación de la programación. Cotejar las dos hojas mencionadas en la parte d) a modo de no dejar ningún profesor por fuera o de omitir una carga de algún profesor. Revisar varias veces que la asignatura asignada a cada profesor coincida con su horario disponible introducir la carga docente de los postgrados. 2.2.2 Generación de Encuesta Figura 2. Proceso de Generación de Encuesta Fuente: Creada por los autores, 2019. Pasos a seguir para la generación de encuestas dirigidas al personal docente y/o administrativo de la Escuela de Matemáticas de la UCV, como se muestra en la figura 2: a. Las encuestas son creadas a través del servicio Google Forms. b. Los docentes, preparadores o personal administrativo a los cuales vaya dirigida la encuesta, son notificados vía correo electrónico. c. Los resultados de la encuesta son analizados y evaluados por la comisión de docencia. 2.2.3 Generación de Solicitud Figura 3. Proceso de Generación de Solicitud Fuente: Creada por los autores, 2019. Pasos a seguir para la generación de una solicitud por parte del docente y/o administrativo de la Escuela de Matemáticas de la UCV, como se muestra en la figura 3: a. El docente o personal administrativo redacta un documento que contendrá información relacionada con la solicitud que desea realizar. Dicho documento será entregado en la secretaría de la Escuela de Matemáticas. b. La Secretaría hace llegar la solicitud al Consejo de Escuela para su revisión y consideración. c. El Consejo de Escuela analiza la solicitud, en caso de tener la potestad de aprobarla o rechazarla le notificará a Secretaría de la decisión tomada por el Consejo de Escuela. d. En caso de no tener la potestad para aprobar o rechazar la solitud, el Consejo de Escuela emite una opinión avalando o no la solicitud recibida. Dicha solicitud será enviada al Consejo de Facultad para su revisión y consideración. e. El Consejo de Facultad analiza la solicitud, en caso de tener la potestad de aprobarla o rechazarla le notificará al Consejo de Escuela, de la decisión tomada. f. En caso de no tener la potestad para aprobar o rechazar la solitud, el Consejo de Facultad emite una opinión avalando o no la solicitud recibida. Dicha solicitud será enviada a Rectorado para su revisión y consideración. g. Rectorado analiza la solicitud y decide entre la aprobación y el rechazo de la solicitud. h. En caso de que la solicitud haya sido rechazada, el docente tiene la opción de realizar una apelación. En este capítulo se dio a conocer las diferentes responsabilidades que recaen sobre la Comisión de Docencia, también se realizó la descripción de los diferentes procesos que involucran la participación de dicha Comisión. Esto, con la finalidad de entender de mejor manera las necesidades presentes en la Comisión y tener una mejor idea de cuáles serían las tecnologías más adecuadas para la implementación del sistema. Capítulo III En el siguiente capítulo se dará a conocer las diferentes tecnologías que fueron usadas y que componen la arquitectura de la solución propuesta. 3. Marco Tecnológico 3.1 Angular Angular es un framework creado por Google, gratuito y Open Source que permite la creación de páginas web SPA, que utiliza como lenguaje de programación principal TypeScript, es decir, un conjunto de JavaScript/ECMAScript. (Angular. ¿Qué es Angular?, 2019). SPA es el acrónimo por sus siglas en ingles de „Aplicación de una sola Página‟ es decir, al ingresar a una aplicación web SPA, se cargan todos los componentes en una misma página. Lo que permite la plataforma de Angular, es cambiar la vista al navegar por la página, para que esta simule la apariencia de una página web normal. (Campus MVP, Novedades de Angular 7, 2019). 3.1.1 Características de Angular  Está basado en componentes, es decir, estos se construyen con la vista en HTML, el estilo en CSS y la lógica en Typescript con la capacidad de reutilizarlos en otras funcionalidades del proyecto.  El lenguaje en el que se basa Angular, tiene una sintaxis parecida a Java, con tipado estático.  Cuenta con el patrón de diseño de inyección de dependencias, que se basa en pasar las dependencias directamente a los objetos en lugar de crearlas localmente. 3.1.2 Ventajas de Angular Las principales ventajas de este framework son:  A pesar de que la velocidad de carga inicial es lenta, una vez la página se carga por completo navegar por la mismas es muy rápido e instantáneo, ya que, desde la descarga inicial la plataforma solicita al servidor solo la información necesaria y la cambia dinámicamente en el navegador, sin tener que tener que recargar la página.  Angular ofrece más "opiniones" de serie, permitiendo el inicio del desarrollo sin desafíos por la toma de decisiones. Es decir, con Angular desde el primer momento se sabe cómo organizar el código, cómo realizar las diferentes tareas requeridas y la arquitectura de la aplicación.  Este framework cuenta con aplicaciones modulares y escalares, lo que permite al desarrollador la reutilización de sus componentes y servicios, de manera sencilla para la ampliación constante del sistema, que luego puedes utilizar en otras páginas y aplicaciones web.  Esos componentes son fáciles de convertir en componentes web nativos. A largo plazo esto es una gran ventaja pues permitirá reutilizar componentes que ya se crearon en Angular en otro tipo de aplicaciones.  Este lenguaje cuenta con una amplia comunidad de desarrolladores, que ofrecen multitud de tutoriales y librerías. Además, gracias a la popularidad de Angular, los principales editores de IDEs ofrecen extensiones para trabajar con este framework de la manera más cómoda posible.  Dispone del Angular CLI, un asistente por línea de comandos para crear la los diferentes componentes de la estructura del proyecto. 3.1.3 Desventajas de Angular Se consideran pocas las desventajas de este Framework, actualmente se pueden enumerar las siguientes: 1. El desarrollador web debe estar familiarizado con TypeScript antes de iniciar el desarrollo en Angular. 2. Pueden aparecer problemas de migración al pasar de una versión anterior a una nueva. 3. Hay varias formas de hacer una misma tarea con Angular. Lo que puede convertirse un desafío para los principiantes al momento de decidir cuál es el mejor camino a utilizar. Por lo tanto, es imperativo que los programadores desarrollen un entendimiento de los diversos componentes y cómo ayuda cada uno de ellos. 4. Si el usuario de su aplicación deshabilita JavaScript, no se verá nada, excepto la página básica en el navegador. 3.2 Node.js Node.js es una plataforma Open Source construida sobre el motor de JavaScript Chrome V8 para la construcción de aplicaciones escalables. Implementa un modelo basado en eventos y de operaciones de entrada y salida sin bloqueo que lo hacen ligero y eficiente para aplicaciones Web basadas en tiempo real que se ejecutan en un entorno distribuido. Node.js ofrece un alto desempeño, además, permite hacer uso del conocimiento adquirido en el desarrollo con JavaScript. Esto supone, una curva de aprendizaje menos elevada para aprender un framework como Express.js y otros tipos de herramientas que ofrece la plataforma de Node.js. (Cantelon M., Harter M., Holowaychuk T.J., Rajlich N. Node.js in Action, 2014). Es importante tener en cuenta que Node.js ofrece muchas facilidades para el desarrollo de servicios Web REST. Uno de sus puntos a favor, es que el formato JSON que será utilizado para el intercambio de información entre el cliente y los servicios, es soportado por JavaScript de forma nativa. De esta manera se facilita el trabajo de la generación y manipulación de objetos con formato JSON. 3.2.1 Características de Node.js  Está basado en un modelo asíncrono orientado a eventos y con un manejo de las operaciones de entrada y salida sin bloqueos.  Node.js opera con un solo hilo de ejecución capaz de soportar una gran cantidad de conexiones concurrentes, haciéndolo ligero y escalable.  Ofrece alto desempeño y rápida ejecución del código. 3.2.2 Ventajas de Node.js  Es posible el desarrollo integral de aplicaciones Web haciendo uso de un solo lenguaje de programación. Permitiendo así, compartir código entre el cliente y el servidor, además, de la reutilización de los diferentes componentes que sean desarrollados.  Elimina la complejidad que pudiera existir al manejar lenguajes de programación diferentes para el lado del cliente y para el lado del servidor, lo que repercute en una reducción de los tiempos de desarrollo.  Fácil manipulación de los datos en formato JSON.  JavaScript es un lenguaje usado en bases de datos NoSQL como CouchDB y MongoDB. Por la que la interacción con este tipo de base de datos resulta más sencilla. 3.2.3 Desventajas de Node.js  No es recomendable su uso para la realización de tareas que requieran un alto nivel de cómputo.  Operaciones de cálculos complejas pueden conllevar a una degradación del desempeño de la plataforma.  Al existir una gran cantidad de módulos desarrollados por terceros que pueden utilizarse en la fase de desarrollo, existe el riesgo de usar un módulo que no esté desarrollado siguiendo las mejores prácticas y tomando en cuenta el modelo de desarrollo en el cual está basado en Node, pudiendo afectar el rendimiento de la aplicación. 3.3 MariaDB Es un sistema manejador de base de datos relacional de código abierto, multihilo, disponible bajo la licencia GNU Public License (GPL). MariaDB es una ramificación de MySQL. Cuando MySQL fue comprado por Oracle, Michael Widenius el autor original de MySQL, decidió generar una nueva rama que siempre permanecería abierta para el acceso y contribución de la comunidad. (Wikibooks. MariaDB, 2018). 3.3.1 Características de MariaDB  Es notablemente escalable, y es capaz de manejar decenas de miles de tablas y billones de registros de datos. También es capaz de gestionar pequeñas cantidades de datos de forma rápida y sin problemas, siendo una buena elección para sistemas pequeños o proyectos personales.  MariaDB incluye una amplia selección de motores de almacenamiento, entre los cuales se encuentran motores de alto rendimiento.  Puede ser instalado en múltiples sistemas operativos, y ofrece conectores para una gran variedad de lenguajes de programación.  Usa un lenguaje de consultas estándar y popular.  Ofrece mayor precisión para tipo de datos TIME, DATETIME, y TIMESTAMP.  Permite la construcción de un clúster a través de MariaDB Galera Cluster. 3.4 Google Drive Google Drive es un servicio de alojamiento en la nube, de todo tipo de archivos que fue introducido por la empresa estadounidense Google el 24 de abril de 2012. Es el reemplazo de la anterior versión Google Docs. (Google Drive. Como usar Drive, 2019). Cada usuario cuenta con 15 gigabytes de espacio gratuito para almacenar sus archivos, este espacio puede ser ampliado mediante diferentes planes de pago. Es accesible a través del sitio web desde computadoras y dispositivos móviles, disponen de aplicaciones para Android e iOS que permiten editar documentos y hojas de cálculo. APIs de Google Drive La plataforma Google Drive les brinda a los desarrolladores un grupo de servicios web junto con varias bibliotecas y ejemplos específicos de documentación para ayudarlo a implementar aplicaciones que se integren con Google Drive. La plataforma Google Drive no solo proporciona un servicio de almacenamiento, aunque principalmente sea utilizada para descargar y cargar archivos. (Introducción al API de Google Drive, 2019). Entre unas de sus funciones se encuentra la de Búsqueda de Archivos, mediante el método files.list, la cual permite visualizar una lista de todos los archivos que tiene el usuario con la información general de cada uno de ellos. Usando OAuth 2.0 para acceder a las API de Google Las API de Google utilizan el protocolo OAuth 2.0 para la autenticación y autorización. Google permite que varios escenarios que tenga la capacidad de implementar la tecnología OAuth 2.0 puedan utilizar sus servicios, aplicaciones de servidores web, aplicaciones instaladas y las aplicaciones del lado del cliente. Para poder empezar a utilizar los servicios que provee el API de Google Drive es necesario configurar la aplicación y obtener las credenciales de cliente de OAuth 2.0 mediante el portal “Google API Console” (Consola de Google API). Una vez se haya configurado la aplicación el cliente podrá solicitar un token de acceso. El proceso de autorización comienza cuando la aplicación redirige a una URL de Google mediante una ventana emergente del navegador; Una vez que el cliente se haya autenticado con las credenciales de una cuenta Google, el servidor le regresa a la aplicación la respuesta. El resultado es un token de acceso, que el cliente debe incluir en la cabecera de todas las solicitudes que desee consumir del API de Google. Cuando el token expira, la aplicación repite el proceso. 3.5 Google Forms La herramienta Google Formularios (Forms) le permite al usuario crear encuestas de manera fácil y rápida, con las cuales se pueden planificar eventos, hacer preguntas a tus empleados o clientes y recopilar diverso tipo de información de una manera simple y eficiente. Al crear un formulario Google, el usuario puede incluir los siguientes tipos de preguntas: respuesta corta, párrafo, selección múltiple, casilla de verificación, desplegable, escala lineal, cuadrícula de varias opciones, fecha y hora. (Formularios Google. Una herramienta estrella de Google, 2016). Las ventajas de usar formularios de Google son:  Permite crear formularios de múltiples páginas.  La interfaz es muy fácil de usar. Cualquier usuario con conocimiento promedio de la computadora puede crear formularios y desplegarlo.  Ofrece la posibilidad de derivar a una página concreta del formulario, dependiendo de la respuesta dada a una pregunta.  Tiene la opción de visualizar una barra de progreso, muy útil para formularios extensos.  Permite elegir si una pregunta es opcional u obligatoria.  Se pueden incluir archivos de tipo imágenes y videos.  Ofrece la posibilidad de obtener el código iframe para embeberlo en blogs, wikis, webs.  Permite crear secciones dentro de una misma página.  Esta herramienta nos permite visualizar la encuesta antes de publicarla.  Google Formulario permite elaborar encuestas de manera ilimitada, sin costo alguno, a diferencia de otras alternativas disponibles en el mercado. Como desventajas del uso de formularios de Google, podemos mencionar:  La personalización de diseño para el formulario es muy limitada, ya que se deben seguir los parámetros que ofrece la plataforma.  Es necesario tener acceso a internet para poder usar esta herramienta.  Existen ciertas limitaciones relativas a las capacidades que la herramienta acepta según el formato del documento: para textos, hasta 500 Kb; imágenes, hasta 2 Mb; y para hojas de cálculo hasta 256 celdas o 40 hojas.  Google Formularios no posee una API REST para integrarlo a otras plataformas. 3.6 Active Directory Es una base de datos distribuida que permite almacenar información relativa a los recursos de una red con el fin de facilitar su localización y administración. Utiliza distintos protocolos, principalmente LDAP, DNS, DHCP, y Kerberos. Microsoft Active Directory es la implementación de Servicios de directorio para Windows. Las cuestiones básicas relacionadas con un centro de servicios de directorio giran alrededor de la información que se puede almacenar en la base de datos, cómo se almacena, cómo se puede consultar información específica y qué se puede hacer con los resultados. Principalmente un Active Directory almacena información relacionada con cuentas de usuario, como por ejemplo: nombres, contraseñas, números de teléfonos, correos, entre otros y permite a usuarios autorizados en la misma red acceder de forma sencilla a esta información. (Soporte Tecnico de Microsoft. Introducción a Active Directory, 2019). 3.6.1 Características de Active Directory  Implementa sus características de acuerdo con estándares reconocidos en internet tales como, LDAP y DNS.  Proporciona una manera completa de recopilar información necesaria para detectar problemas anticipadamente y evitarlos.  Es posible supervisar múltiples servidores desde una única estación de trabajo y la información es uniforme en todo el sistema.  Facilita la gestión y autenticación de los usuarios.  Mantiene un conjunto de reglas, que definen las clases de objetos y atributos incluidos en el directorio, las restricciones y límites de las instancias de estos objetos y el formato de sus nombres.  Utiliza un almacén de datos estructurado como base para una organización lógica y jerárquica de información del directorio.  Posee un catálogo global que contiene información sobre todos los objetos en el directorio. Esto permite a los usuarios y administradores encontrar información independientemente del dominio que realmente contenga la data  Cuenta con un servicio de replicación que distribuye los datos de directorio en una red. Capítulo IV 4. Marco Aplicativo En el siguiente capítulo se explica, en primer lugar, el modelo de datos y la relación de las diferentes entidades. En segundo lugar, se muestran los diferentes módulos del sistema y la manera en que el usuario visualiza las diversas vistas que ofrece el portal. 4.1 Análisis del Modelo de Datos El modelo de datos que se describirá a continuación está conformado por siete tablas, que permiten almacenar la información necesaria para una correcta implementación de las diferentes funcionalidades que ofrece el sistema. Es importante señalar que el uso de la API de Google para la gestión de las encuestas y la programación docente, así como la utilización de un repositorio de usuarios externo para la autenticación, impactaron directamente en la simplificación y reducción del modelo de datos. 4.1.1 Lista de Tablas Todas las tablas cuentan con un atributo id de tipo entero y auto incremental. 4.1.1.1 Usuario La descripción de la tabla Usuario puede visualizar en la figura 4.  Nombre: usuario.  Descripción: información básica de los usuarios del sistema.  Atributos: o nombre: nombre de pila del usuario proveniente del repositorio de usuarios externo. o apellido: apellido del usuario proveniente del repositorio de usuarios externo. o username: nombre de usuario proveniente del repositorio de usuarios externo. o email: cuenta de correo electrónico del usuario. o idRol: identificador del rol asignado al usuario. 4.1.1.2 Rol En la figura 4 puede apreciarse los diferentes campos que componen la tabla Rol.  Nombre: rol.  Descripción: permite almacenar los diferentes roles existentes en el sistema.  Atributos: o nombre: nombre del rol expresado en mayúsculas. o descripcion: descripción del rol. Figura 4. Descripción de las tablas Usuario y Rol Fuente: Creada por los autores, 2019. 4.1.1.3 Formulario La descripción de la tabla Formulario es mostrada en la figura 5.  Nombre: formulario.  Descripción: información relacionada con las encuestas, programación docente o cualquier otro tipo formulario creado en el sistema.  Atributos: o idTipoFormulario: identificador del tipo de formulario. o idRol: identifica a que grupo de usuarios va dirigido el formulario. o nombre: nombre del formulario. o descripcion: descripción del formulario. o estatus: los estatus permitidos son ACTIVO o INACTIVO. o fechaCreacion: fecha de la creación del formulario. o idGoogle: identificador asignado por Google para el formulario. o idGoogleSheet: identificador asignado por Google para visualizar los resultados de la encuesta. o link: enlace para acceder al formulario. o linkEditar: enlace para editar el formulario. o linkRespuestas: enlace para visualizar las respuestas del formulario. o idGoogleOwner: identificador asignado por Google al usuario creador del formulario. o nombreGoogleOwner: nombre del usuario proveniente de su cuenta Gmail. o correoGoogleOwner: correo Gmail del usuario. o urlFotoGoogleOwner: enlace para acceder a una foto del usuario creador del formulario. 4.1.1.4 Tipo Formulario La descripción de la tabla Tipo Formulario puede encontrarse en la figura 5.  Nombre: tipoFormulario.  Descripción: permite almacenar los diferentes tipos de formularios que soportará el sistema.  Atributos: o nombre: nombre del tipo de formulario. o descripcion: descripción del tipo de formulario. Figura 5. Descripción de las tablas Formulario, Tipo de Formulario. Fuente: Creada por los autores, 2019. 4.1.1.5 Solicitud La tabla Solicitud tiene relación con la tabla Usuario. Además, está relacionada con la tabla Rol para la implementación de controles de acceso basado en roles para cada solicitud generada en el sistema, ver figura 6.  Nombre: solicitud.  Descripción: información relacionada con cualquier tipo de solicitud creada en el sistema.  Atributos: o idRol: identifica a que grupo de usuarios estará disponible la solicitud. o nombre: nombre de la solicitud. o descripcion: descripción de la solicitud. o plantilla: texto en html correspondiente al contenido de un tipo de solicitud. Contiene espacios en blancos para que puedan ser llenados por el usuario que desea realizar una solicitud. o estatus: los estatus permitidos para una solicitud son ACTIVO o INACTIVO. o dueno: identificador del usuario creador de la solicitud. o fechaCreacion: fecha de la creación de la solicitud. 4.1.1.6 Usuario Solicitud Esta tabla está relaciona con la tabla Solicitud y con la tabla Usuario, ver figura 6.  Nombre: usuario_solicitud.  Descripción: información relacionada con las distintas solicitudes realizadas por los usuarios.  Atributos: o idUsuario: identificador del usuario que realiza la solicitud. o idSolicitud: identificador del tipo de solicitud. o contenido: texto en html que correspondiente al contenido de un tipo de solicitud. Contiene las respuestas dadas por el usuario para el llenado de la solicitud. o estatus: los estatus permitidos para una solicitud de usuario son APROBADO, RECHAZADO, AVALADO, NO AVALADO o EN ESPERA. o fechaIni: fecha de la creación de la solicitud de usuario. o fechaFin: fecha en la cual fue aprobada o rechazada la solicitud del usuario. o notificado: permite identificar si un usuario ha sido notificado una vez que su solicitud ha sido aprobada o rechazada. o observacion: comentario realizado por el usuario responsable de aprobar o rechazar las solicitudes. Figura 6. Descripción de la Solicitud y Usuario Solicitud. Fuente: Creada por los autores, 2019. 4.1.1.7 Usuario Solicitud Notificación Esta tabla, está relacionada con la tabla Usuario y la tabla Usuario Solicitud, ver figura 7.  Nombre: usuario_solicitud_notificacion.  Descripción: permite registrar las notificaciones enviadas a un usuario, en relación con una solicitud que ha sido aprobada o rechazada.  Atributos: o idUsuarioSolicitud: identificador de la solicitud que se desea notificar. o idUsuarioOrigen: identificador del usuario que envía la notificación. o fecha: fecha de la notificación. Figura 7. Descripción de la Tabla Usuario Solicitud Notificación Fuente: Creada por los autores, 2019. 4.1.2 Modelo de Datos La figura 8 permite visualizar el modelo de datos en su conjunto. Resalta el hecho de que la tabla para la gestión de formularios no tiene relación con la tabla usuario. En su lugar, se almacenará información del perfil del usuario ofrecida por Google. Figura 8. Modelo de datos del Sistema Fuente: Creada por los autores, 2019. 4.2 Implementación del Sistema Esta sección describe de manera específica las funcionalidades del sistema de gestión de la Comisión de Docencia de la Escuela de Matemáticas. Se muestran los módulos e interfaces gráficas del sistema junto con algunos diagramas que explican el flujo de información en las diferentes funcionalidades. 4.2.1 Módulos del sistema El sistema de gestión de la Comisión de Docencia, está compuesto de 3 módulos principales, que son: Módulo de Autenticación, Módulo de Perfiles y Usuarios, Módulo de Formularios y Encuestas y Módulo de Solicitudes, los cuales podemos observar en la Figura 9. Figura 9. Módulos Principales de la Aplicación Fuente: Creada por los autores, 2019. 4.2.2 Perfiles de Usuarios  Docente: con este perfil el usuario puede utilizar los recursos que proveen los diferentes módulos del sistema.  Personal Administrativo: El perfil de personal administrativo tiene los mismos privilegios que el perfil de Docente.  Administrador: con este perfil de usuario se pueden realizar las mismas tareas que con el de personal docente, y adicionalmente a través de este perfil, se gestionan el módulo de formularios y el módulo de solicitudes, además cuenta con la capacidad de modificar la información de contacto suministrada por el personal.  Administrador General: el perfil de administrador es el único que tiene la capacidad de asignar y modificar los roles de los usuarios del sistema. 4.2.3 Descripción de la aplicación 4.2.3.1 Estructura de la interfaz gráfica La estructura general de la interfaz gráfica del sistema está compuesta por tres áreas que se pueden observar en la Figura 10. 1. Área de menú principal: en esta área se observan las diferentes direcciones a las que se puede acceder dentro del sistema. El menú principal presenta variaciones dependiendo de cada tipo de usuario. 2. Área de contenido: esta área es en la que se visualizan todos los componentes dinámicos del portal web. Debido a que la tecnología usada para el desarrollo del portal web se basa en páginas dinámicas, cada vez que se navega hacia otra dirección del mismo portal, únicamente cambia el área de contenido, las otras dos áreas permanecen estáticas. 3. Área de cabecera: esta sección del portal contiene el logo y nombre del sistema, el botón para esconder/mostrar el menú principal y la botón desplegable de la información del perfil que se encuentra autenticado. Figura 10. Representación de la estructura gráfica del sistema Fuente: Creada por los autores, 2019. Adicionalmente el portal web es completamente adaptable a todos los dispositivos móviles y de escritorio que cuenten con conexión a internet. El menú principal se esconde o se muestra dependiendo de la resolución del dispositivo. Dentro del área de contenido se adaptan todos los componentes individuales de manera precisa y ordenada, con el fin de poder navegar de manera más sencilla y usable en cualquier dispositivo. (Ver figura 11) Figura 11. Representación del diseño en diferentes dispositivos Fuente: Creada por los autores, 2019. 4.2.3.2 Módulo de Autenticación Esta sección permite a los usuarios autenticarse para acceder al sistema. Dependiendo del tipo de usuario que se suscriba, el sistema le muestra los diferentes módulos a los que puede acceder. Para la autenticación, el sistema se integrará con un repositorio de usuarios de tipo Active Directory administrado por la Escuela de Matemáticas de la UCV. Dicho repositorio, será el encargado de validar las credenciales suministradas por el usuario en la autenticación. De esta manera, los usuarios del Sistema de la Comisión de Docencia podrán iniciar sesión en la aplicación sin la necesidad de realizar un proceso de registro y reutilizando sus credenciales antes adquiridas. La primera vez que un usuario es autenticado exitosamente por el Active Directory, se procederá al registro automático del usuario en la base de datos del Sistema de la Comisión de Docencia. Haciendo del registro, un proceso transparente para el usuario. 4.2.3.3 Módulo de Perfiles y Usuarios En este módulo los usuarios tienen la posibilidad de ingresar y modificar el correo alternativo, ver figura 12. Dicho correo es requerido por el portal, para servir de soporte al correo institucional al momento de enviar cualquier notificación del sistema. Para que el Docente o el Personal Administrativo puedan acceder a los otros módulos que provee el sistema es necesario que primero introduzcan un correo alternativo en su perfil de usuario de lo contrario no podrá utilizar estos servicios. El usuario Administrador General es el único que puede asignar roles a los diferentes usuarios registrados en el sistema. Figura 12. Vista modificación de perfil de Usuario - Administrador General Fuente: Creada por los autores, 2019. 4.2.3.4 Módulo de Formularios El módulo de formularios es la porción del sistema que corresponde a la generación de documentos para la introducción de datos por parte de los usuarios Docentes y Personal Administrativo. Este módulo se basa en la utilización de los recursos que provee la API de Google para crear los llamados Google Formularios desde el sistema, estos formularios quedan registrados y respaldados por el modelo de datos del sistema para su gestión interna. Gestión de formularios En esta sección, el perfil de Administrador es el encargado de realizar el proceso completo de creación, modificación y notificación de un formulario o encuesta en particular, para que posteriormente sea llenado por los docentes y el personal administrativo de la escuela. El primer paso para ingresar a la sección de formularios es realizar el enlace del sistema con una cuenta de Google (Ver figura 13), lo que permite acceder a todos los formularios que tiene creados en la cuenta. Cuando un usuario Administrador realiza el enlace con Google por primera vez, debe permitir al Sistema de Gestión de Procesos Internos de la Comisión de Docencia, para que este pueda crear, modificar y eliminar archivos de su cuenta Google Drive. Figura 13. Vista enlace con Google - Administrador Fuente: Creada por los autores, 2019. Una vez confirmado el enlace con Google, dentro de la sección de formularios, el usuario Administrador podrá visualizar los formularios que tiene actualmente creados en su Google Drive y cuáles de ellos están vinculados al sistema, también podrá ver el listado de todos los formularios de otros usuarios que estén vinculados al sistema. El usuario Administrador tiene la capacidad de editar únicamente sus propios formularios o bien aquellos formularios a los que se les permita ser colaborador en Google Drive, es decir que el dueño del formulario le conceda el privilegio de editarlo. Aquellos formularios en los que el usuario Administrador no tenga los privilegios de colaborador, solo podrá visualizar y contestar las preguntas presentadas. Para otorgar a otro usuario Administrador el privilegio de colaborador, se debe cambiar la configuración para compartir en el editor de formulario de Google Formularios, agregando el correo del usuario como nuevo colaborador. Proceso de creación de un formulario. Lo primero que solicita el sistema para crear un nuevo formulario, es indicarle el nombre, tipo, estatus, a quien va dirigido el formulario y una descripción breve del mismo (Ver figura 14). Figura 14. Vista crear nuevo formulario - Administrador Fuente: Creada por los autores, 2019. Los tipos de formularios que tiene por defecto el sistema son los siguientes: Encuestas, Formularios y Otros. Luego de colocar toda la información se inicia el proceso de creación del formulario. Los formularios pueden ir dirigidos, solo a los Docentes, solo al personal Administrativo, a todos los usuarios, o solo dirigido a los administradores del sistema para la gestión externa del mismo. La Figura 15 presenta el diagrama de secuencia del proceso de creación de un formulario, en este diagrama se hace referencia a un usuario Administrador. Permite generar una perspectiva cronológica de las diferentes peticiones que genera el portal web con el API de Google y los servicios web del formulario y el conjunto de mensajes intercambiados entre ellos para llevar a cabo la funcionalidad descrita. Figura 15. Solución: Diagrama crear formulario Fuente: Creada por los autores, 2019. Luego de crear el formulario, se despliegan otras opciones que permiten continuar con el proceso de gestión. Entre ellas podemos encontrar las siguientes (ver Figura 16): Figura 16. Vista editar formulario - Administrador Fuente: Creada por los autores, 2019. 1. Editar Formulario: este link externo, redirecciona al editor nativo de Google, permitiendo y ampliando las opciones para la generación de preguntas de diferentes tipos, como rangos de fechas, campos de texto, opciones de selección múltiple, entre otros. 2. Ver Repuestas: es un link externo que redirecciona a los reportes y estadísticas de respuesta que se han obtenido en cada formulario. Esta funcionalidad también es de la plataforma nativa de Google. 3. Ver formulario: permite visualizar el formulario, embebido de Google, mientras se realizan modificaciones, en esta misma sección se le permite al Administrador contestar el formulario como lo tendría que hacer cualquier usuario Docente y Personal Administrativo. (ver Figura 17) 4. Enviar notificación: con esta funcionalidad se le envía a todos los Usuarios a quienes van dirigidos el formulario una notificación por correo para acceder al directamente al formulario de Google. 5. Vincular hoja de cálculo (Google Sheets): esta funcionalidad permite crear un vínculo con una hoja de cálculo ya existente en google drive. 6. Eliminar formulario: permite al Administrador borrar el formulario tanto del sistema como de Google. Esta opción es irreversible, una vez eliminados el formulario se pierde la información de ambos recursos. 7. Desvincular formulario: a diferencia de la funcionalidad de “eliminar formulario”, al desvincularlo, este solo se elimina del sistema, pero puede ser reincorporado posteriormente. Figura 17. Vista contestar formulario embebido de Google Formularios - Administrador, Docente, Personal Administrativo Fuente: Creada por los autores, 2019. La figura 18 muestra un diagrama de secuencia relacionado al proceso de modificación de un formulario por un usuario Administrador. Figura 18. Solución: Diagrama modificar formulario Fuente: Creada por los autores, 2019. Proceso de respuesta de formularios por parte de Docentes y Personal Administrativo En esta sección el usuario podrá ver el listado de todos los formularios activos, seleccionar los de su interés y suministrar las respuestas a cada una de las preguntas presentes en el formulario, pero no podrá modificarlo. Es importante destacar que el usuario Administrador adquiere todos los privilegios del Docente o Personal Administrativo referentes a las funcionalidades del sistema, por ende el usuario Administrador también puede contestar el formulario. Existen dos maneras de contestar un formulario; accediendo directamente al sistema como usuario Docente o Personal Administrativo (ver Figura 17), o directamente desde el link que se encuentra en el correo de notificación. 4.2.3.5 Módulo de Solicitudes El módulo de solicitudes consta de dos procesos importantes. El primero es el proceso de construcción del formato de la solicitud, por parte del usuario Administrador; y el segundo es el de solicitud y contestación de los diferentes tipos de formatos por parte del Docente y el Personal Administrativo. El formato de solicitud es una funcionalidad del sistema que le permite al Administrador crear, modificar y eliminar cualquier cantidad y tipo de solicitud en el portal. El administrador deberá rellenar un nombre para la solicitud, una descripción, seleccionar a qué tipo de usuario va dirigido la solicitud, el estatus, si desea que esté activa inmediatamente, y el contenido de la misma. Dentro del formato cabe destacar la sección de contenido, en la cual el administrador debe construir el documento, e insertar las diferentes variables a ser completadas por los usuarios, cuando este esté generando la solicitud. Además la plataforma, al momento de crear el formato, ofrece opciones para varias alteraciones en el estilo de las letras, justificar texto, letras en negrita, uso de viñetas, entre otras. El proceso de inserción de variables se realiza a través de un algoritmo con el que, cada vez que el usuario Administrador inserta o cambia un carácter, esta rutina recorre el contenido carácter por carácter hasta detectar todas las variables (Ver Figura 19). El patrón de detección de las variables se establece mediante el signo de „%‟ al inicio y al final de la variable que se desea insertar, del mismo modo la variable debe seguir los otros parámetros de validación que se muestran en la sección de “Leyenda”, a medida que el portal va detectando la variables validas, las muestra en la sección de “Variables detectadas” (Ver Figura 20). Figura 19. Diagrama de Flujo: Detección de variables en el contenido de la solicitud Fuente: Creada por los autores, 2019. Figura 20. Crear/Editar formato de solicitud - Administrador Fuente: Creada por los autores, 2019. Al Docente y al Personal Administrativo se le permiten realizar N solicitudes entre las que están disponibles. Apenas el Docente o el Personal Administrativo selecciona un tipo de solicitud, el portal detecta las variables del contenido y se las despliega como un formulario. Cuando el usuario va llenando los campos del formulario el documento cambia de manera dinámica en el “Cuerpo de la solicitud” (Ver Figura 21). El Usuario tiene la posibilidad de adjuntar archivos si se lo solicitan en el cuerpo del documento. Luego que el Usuario realice la solicitud se les envía a todos los administradores del sistema un correo para notificarles que se ha creado una nueva solicitud por un Usuario. El Administrador podrá revisar el contenido y los archivos adjuntos para luego modificar el estatus de la solicitud dependiendo de cada caso. Cada solicitud puede definirse con uno de los cuatro posibles estatus; Avalado, No Avalado, Aprobado y Rechazado. Estos estatus han sido detallados en el Capítulo II de este documento. Si el estatus es No Avalado o Rechazado el sistema despliega dinámicamente un campo de motivo que debe rellenar el Administrador de manera obligatoria para poder seguir con el proceso. Luego de que se cambie el estado de la solicitud, se habilita la opción de notificar, esta opción permite infórmale al Usuario la respuesta a su solicitud. Figura 21. Realizar solicitud – Administrador, Docente, Personal Administrativo. Fuente: Creada por los autores, 2019. La figura 22 muestra un diagrama de secuencia que describe el proceso de creación del formato de una solicitud. Figura 22. Solución: Diagrama crear solicitud. Fuente: Creada por los autores, 2019. 4.2.3.6 Casos de Uso Figura 23. Vista diagrama de casos de uso – Nivel 0. Fuente: Creada por los autores, 2019. Figura 24. Vista diagrama de casos de uso – Nivel 1. Fuente: Creada por los autores, 2019. Figura 25. Vista diagrama de casos de uso – Nivel 2. Fuente: Creada por los autores, 2019. Caso de Uso 1. Autenticar Actor Administrador General, Administrador, Docente y Personal Administrativo Descripción Caso de uso que permite a todos los usuarios autenticarse en el sistema. Precondiciones El usuario debe estar registrado en el sistema Postcondiciones El usuario ingresa al sistema con éxito. Flujo básico Todos los Usuarios: 1. Ingresar corroe o nombre de usuario 2. Ingresar contraseña 3. Seleccionar Ingresar Flujos alternos Usuario no registrado: 1. El sistema le informa al usuario que el correo o el nombre de usuario no está registrado en el sistema. Autenticación fallida. Contraseña inválida: 1. El sistema le informa al usuario que la contraseña es inválida. Caso de Uso 1.1. Registrar Usuario Actor Administrador, Docente y Personal Administrativo Descripción Caso de uso que permite registrar un usuario en el sistema. Una vez realizada la autenticación exitosa del usuario contra un repositorio de usuarios externo (LDAP), se verifica la existencia del usuario en el sistema. En caso de que no exista, el sistema procede a registrarlo usando para ello la información básica del usuario proveniente del LDAP. Caso de Uso 2. Gestionar Perfiles Actor Administrador General, Administrador, Docente y Personal Administrativo Descripción Caso de uso que permite al Administrador General y al Administrador administrar los usuarios del sistema. Adicionalmente el Docente, Personal Administrativo, y el Administrador tienen la capacidad de modificar su propio perfil. Caso de Uso 2.1 Modificar Rol de Usuario Actor Administrador General Descripción El Administrador General podrá modificar el Rol del usuario a Docente, Personal Administrativo o Administrador. Precondiciones Autenticarse como Administrador General Postcondiciones Se lleva a cabo la administración exitosa de la información de todos los usuarios Flujo básico 1. Ingresar al sistema 2. Seleccionar Usuarios 3. Elegir al usuario que se desea modificar. Flujos alternos Cancelar: 1. El Usuario selecciona cancelar 2. Se cancela la operación Caso de Uso 2.2 Ingresar Correo alternativo Actor Administrador, Docente y Personal Administrativo Descripción El Administrador, Docente y Personal Administrativo deben ingresar el correo alternativo en el sistema para poder contestar los diferentes formularios y solicitudes que les provee el portal, como también evitar problemas con el envío de las notificaciones al correo institucional. Precondiciones El usuario debe estar autenticado en el sistema Postcondiciones Se lleva a cabo la inserción exitosa del correo alternativo en el registro del usuario. Flujo básico 1. Ingresar al sistema 2. Seleccionar el desplegable del usuario en la cabecera 3. Elegir Perfil Flujos alternos Cancelar: 1. El Usuario selecciona cancelar 2. Se cancela la operación Caso de Uso 2.3 Modificar Correo alternativo Actor Administrador General, Administrador, Docente y Personal Administrativo Descripción Caso de uso que permite a los usuarios del sistema Administrar y modificar el correo alternativo de cada perfil Caso de Uso 3. Gestionar Solicitud Actor Administrador, Docente y Personal Administrativo Descripción Caso de uso que permite gestionar los formatos de solicitudes y revisar las solicitudes de los usuarios. También permite al Docente y al Personal Administrativo pedir solicitudes. Caso de Uso 3.1 Crear Formato de Solicitud Actor Administrador Descripción El administrador deberá ingresar el nombre, el contenido del documento con los diferentes campos que debe contestar el Docente o el Personal Administrativo, la descripción del formato de la solicitud, a quien va dirigido y seleccionar el estatus del formato. Precondiciones 1. Poseer el contenido del formato de la solicitud con los diferentes campos que debe contestar el docente o el personal administrativo. 2. Las variables deben tener los parámetros que se indican en el portal Postcondiciones Se lleva a cabo la creación exitosa de un formato de solicitud Flujo básico 1. Ingresar al sistema 2. Seleccionar Solicitudes en el menú principal 3. Seleccionar Formatos 4. Seleccionar Crear Formato de Solicitud Flujos alternos Cancelar: 1. Seleccionar Cancelar 2. Se cancela la operación Caso de Uso 3.2 Modificar Formato de Solicitud Actor Administrador Descripción Le permite al administrador modificar un formato de solicitud. Caso de Uso 3.3 Eliminar Formato de Solicitud Actor Administrador Descripción Le permite al administrador eliminar un formato de solicitud si y solo si ningún docente ha realizado una solicitud con ese formato. Caso de Uso 3.4 Revisar Solicitud del Usuario Actor Administrador Descripción Le permite al administrador revisar el contenido de la Solicitud Caso de Uso 3.4.1 Visualizar Anexos adjuntos Actor Administrador Descripción Le permite al administrador visualizar los archivos que adjunto el docente al realizar la solicitud. Caso de Uso 3.4.2 Modificar Estado Actor Administrador Descripción Le permite al administrador Aprobar, Rechazar, Avalar o No Avalar la solicitud del Usuario Caso de Uso 3.4.3 Enviar Notificación Actor Administrador Descripción Caso de uso que permite al Administrador enviar notificaciones para comunicar el estatus y el motivo, si aplica, de una solicitud Caso de Uso 3.5 Seleccionar Formato de Solicitud Actor Administrador, Docente y Personal Administrativo Descripción Le permite al Administrador, Docente y Personal Administrativo seleccionar un formato de solicitud entre los que están disponibles. Caso de Uso 3.5.1 Crear Solicitud Actor Administrador, Docente y Personal Administrativo Descripción Los usuarios deberán ingresar obligatoriamente toda la información que se le pide para completar el documento de solicitud. Precondiciones Poseer el la información de los campos que se soliciten. Postcondiciones Se lleva a cabo la creación exitosa de una solicitud Flujo básico 1. Ingresar al sistema 2. Seleccionar Solicitudes en el menú principal 4. Seleccionar el Formato que se desea solicitar Flujos alternos Cancelar: 1. Seleccionar Cancelar 2. Se cancela la operación Caso de Uso 3.5.2 Adjuntar Anexos Actor Administrador, Docente y Personal Administrativo Descripción Le permite al Administrador, Docente y Personal Administrativo adjuntar anexos al seleccionar y crear la solicitud. Caso de Uso 3.6 Ver Estatus de Solicitudes Actor Administrador, Docente y Personal Administrativo Descripción Les permite a los Usuarios visualizar todas las solicitudes que han realizado y su respectivo estatus. Caso de Uso 4. Gestionar Formularios Actor Administrador, Docente y Personal Administrativo Descripción Este caso de uso permite a los Usuarios gestionar los formularios del sistema. Caso de Uso 4.1 Crear Formulario Actor Administrador y API Google Descripción Este caso de uso le permite al Administrador crear un formulario de Google basado en el API de Google, y vincularlo al sistema. El administrador deberá ingresar el Nombre del formulario, Tipo de formulario, a quién va Dirigido, Estatus y Descripción del formulario. Precondiciones El sistema debe estar enlazado con una cuenta de Google Postcondiciones Se lleva a cabo la creación exitosa de un formulario en Google y vinculación al sistema. Flujo básico 1. Ingresar al sistema 2. Seleccionar Formularios en el menú principal 4. Seleccionar Crear Formulario Flujos alternos Cancelar: 1. Seleccionar Cancelar 2. Se cancela la operación Caso de Uso 4.2 Modificar Formulario Actor Administrador y API Google Descripción Este caso de uso le brinda al Administrador realizar ciertas funcionalidades que provee la plataforma de Google Formularios como también la edición de los campos básicos del formulario. Precondiciones 1. El sistema debe estar enlazado con una cuenta de Google 2. Haber creado el formulario y vinculado al sistema. Postcondiciones Se lleva a cabo la creación exitosa de un formulario en Google y vinculado al sistema. Flujo básico 1. Ingresar al sistema 2. Seleccionar Formularios en el menú principal 4. Seleccionar Editar al formulario que se desea modificar Flujos alternos Usuario no es colaborador de cierto Formulario 1. Se le notifica al usuario que debe tener permiso para acceder a esta sección. Cancelar: 1. Seleccionar Cancelar 2. Se cancela la operación Caso de Uso 4.3 Eliminar Formulario Actor Administrador y API Google Descripción Este caso de uso permite al Administrador eliminar un formulario de Google y del Sistema Caso de Uso 4.4 Vincular Formulario Actor Administrador y API Google Descripción Este caso de uso permite al Administrador registrar un formulario que se encuentra en el Drive de la cuenta de Google en el sistema. Caso de Uso 4.5 Desvincular Formulario Actor Administrador y API Google Descripción Este caso de uso permite al Administrador borrar el enlace del formulario de Google del sistema. Caso de Uso 4.6 Enviar Notificación Actor Administrador Descripción Caso de uso que permite tanto al Administrador notificar a todos los usuarios del sistema de la existencia de un nuevo formulario. Caso de Uso 4.7 Ver Formularios disponibles Actor Administrador, Docente y Personal Administrativo Descripción Le permite al Administrador y al Docente ver el listado de los formularios disponibles. Caso de Uso 4.7 Ver Formularios disponibles Actor Administrador, Docente, Personal Administrativo y API Google Descripción Le permite a los Usuarios contestar el formulario embebido de Google Formularios, Resultados El sistema fue desplegado y configurado en un servidor Ubuntu Server administrado por la Escuela de Matemáticas de la UCV. Para tal fin, contamos durante todo el proceso con el apoyo de la Licenciada y Auxiliar Docente María Aguiar. La instalación del frontend del sistema, se realizó a través de la clonación del repositorio privado Git donde se encuentra alojado. Una vez clonado, se procedió a construir el compilado de producción para luego colocarlo en el directorio adecuado del servidor Web Nginx para su correcto despliegue. Para el backend del sistema, se descargó y configuró la versión más reciente de la plataforma Node.js. Luego de haber instalado Node.js en el servidor, se procedió a clonar el backend del sistema que se encuentra alojado en un repositorio privado Git y posteriormente se llevó a cabo la instalación de todas las dependencias de la aplicación Node.js. Fue necesaria la construcción de un servicio del sistema operativo para la ejecución del backend del sistema. De esta forma, se garantiza que cada vez que el servidor se encienda, se realice la ejecución automática del backend sin requerir la ejecución de ningún tipo de comando del sistema operativo. Las tablas correspondientes a la Base de Datos del sistema, fueron generadas a través de la ejecución de un script SQL sobre el Sistema Manejador de Base de Datos MariaDB. Dicho script, se encuentra alojado en el repositorio correspondiente al backend del sistema. Se configuró el firewall del servidor mediante la herramienta iptables que provee el sistema operativo Ubuntu. Fueron concedidos accesos por los siguientes puertos:  Puerto 22, para permitir conectarse al servidor mediante conexiones SSH.  Puerto 80, para permitir el acceso a la aplicación web desplegada en el servidor Nginx.  Puerto 3000, para permitir el consumo de los servicios Web expuestos en Node.js Objetivos Alcanzados  Con el apoyo del Director de la Escuela de Matemáticas prof. Angel Padilla, el Jefe de Departemaneto de la Escuela de Matemáticas prof. Jean Carlos Liendo y la prof. Mariela Castillo encargada de la Comisión de Docencia, fue posible el levantamiento de requerimientos y establecimiento de prioridades para el desarrollo del sistema.  Fueron escogidos frameworks ligeros, de alto rendimiento, extensa documentación y basados en el lenguaje de programación JavaScript para el desarrollo del frontend y backend del sistema.  Fueron diseñadas múltiples interfaces de usuarios que pueden ser visualizadas de forma correcta en diferentes dispositivos con diferentes tamaños de pantalla.  Se diseñó e implementó una base de datos para la gestión de la información del sistema.  Se realizó un integración con los servicios Google Drive y Google Form a través de las API‟s ofrecidas por Google.  La lógica de negocio del sistema fue desarrollada a través de servicios REST, de esta manera, fueron generados componentes de software modulares, reusables e interoperables.  Debido a las tecnologías escogidas, a la independencia entre el frontend y el backend, y a la manera como se estructuró el código fuente, se facilita la incorporación de nuevas funcionalidades y se aumenta la capacidad de escalabilidad del sistema. A continuación se describen las actividades realizadas en conjunto con la prof Mariela Castillo y el prof. Jean Carlos Liendo, como parte de la primera prueba piloto del sistema: 1. Autenticación en el sistema con las credenciales almacenadas en el Active Directory administrado por la Escuela de Matemáticas de la UCV. (Ver figura 26). 2. Autenticación a través del usuario Administrador General, para modificar el rol de la cuenta de la prof. Mariela Castillo de Docente a Administrador. (Ver figura 27). 3. Vinculación de la cuenta Google de la prof. Mariela Castillo con el sistema. (Ver figura 28). 4. Creación de un nuevo formato de solicitud de prueba. (Ver figura 29). 5. Autenticación y registro del correo alternativo Gmail de la cuenta perteneciente al prof. Jean Carlos Liendo. (Ver figura 30). 6. Creación de solicitud, perteneciente al formato de solicitud creado previamente en el paso 4. (Ver figura 31). 7. Vinculación con el sistema, de un formulario personal perteneciente a la cuenta Gmail del prof. Jean Carlos Liendo y envió de notificación a todos los usuarios del sistema del nuevo formulario disponible. (Ver figura 32). 8. Recepción de la notificación de nuevo formulario disponible. (Ver figura 33) 9. Visualización a través del sistema del Google Formulario vinculado en el paso 7. (Ver figura 34). Figura 26. Vista de Autenticación del Sistema. Fuente: Creada por los autores, 2019. Figura 27. Vista de edición de perfil de usuario - Administrador General Fuente: Creada por los autores, 2019. Figura 28. Vista de enlace con Google. Fuente: Creada por los autores, 2019. Figura 29. Vista creación de un nuevo formato de solicitud. Fuente: Creada por los autores, 2019. Figura 30. Vista de modificación de perfil de usuario. Fuente: Creada por los autores, 2019. Figura 31. Creación de una nueva solicitud. Fuente: Creada por los autores, 2019. Figura 32. Vinculación y registro de formulario. Fuente: Creada por los autores, 2019. Figura 33. Recepción de notificación de la creación de un nuevo formulario. Fuente: Creada por los autores, 2019. Figura 34. Visualización de formulario Google embebido. Fuente: Creada por los autores, 2019. Conclusiones Hoy más que nunca existe una gran cantidad de tecnologías y herramientas extraordinarias que están al alcance de todos y que podemos utilizar para beneficiarnos con sus bondades. Apoyándonos en la tecnología, tenemos la oportunidad de transformar procesos complejos y manuales, en procesos automatizados compuestos de actividades más sencillas de realizar para las personas. Con el objetivo de simplificar, automatizar y mejorar los procesos ejecutados por la Comisión de Docencia de la Escuela de Matemáticas de la Universidad Central de Venezuela, se diseñó y desarrolló una aplicación Web basada en tecnologías de código abierto, estándares y marcos de trabajo reconocidos. La selección de las tecnologías y herramientas escogidas, fue producto del análisis y estudios comparativos entre diferentes opciones de gran relevancia en la actualidad. Entre las tecnologías seleccionadas del lado del cliente se tienen: Angular y Bootstrap. Para el lado del servidor se utilizó: Node.js, Express y MySQL como sistema manejador de base de datos. La aplicación desarrollada está basada en una arquitectura orientada a servicios, lo que ha permitido la generación de componentes de software modulares y reusables. La implementación de este tipo de arquitectura fue determinante para poder separar el frontend del backend, de tal manera, que pueden ser desplegados de forma independiente en diferentes servidores. Este tipo de soluciones mejoran las posibilidades de escalamiento, así como también, facilitan el mantenimiento y extensión del sistema. La integración realizada con la API de Google para la gestión de formularios, permite a los usuarios la creación y administración de encuestas a través de un servicio conocido y fácil de usar como Google Forms. Recomendaciones Se recomienda, para actualizaciones posteriores, realizar un sistema que permita al administrador ver cuáles de los usuarios respondieron a las encuestas enviadas, ya que esta funcionalidad no es posible implementarla en la plataforma utilizada (Google Form) en el portal actual. Del mismo modo, se sugiere la creación de un módulo de comunicaciones a través de correos electrónicos masivos, donde el administrador pueda crear plantillas o notificaciones, para luego enviarlas a los usuarios de su elección que estén registrados en el portal. La Comisión de Docencia realiza cada semestre encuestas dirigidas a docentes y preparadores, sin embargo estos últimos no tiene acceso al sistema, ya que ellos no están en la base de datos actual en la cual está vinculado el portal, por lo que se recomienda, la creación de un módulo de registro para los preparadores para que puedan acceder al sistema y también puedan contestar las encuestas y formularios dirigidos especialmente a ellos. Por último, se propone la creación de un módulo de publicaciones, para que los Docentes puedan registrar sus avances en las diferentes investigaciones y proyectos que realizan durante el año, y que al mismo tiempo le permita a la Comisión de Investigación acceder a estas publicaciones para su gestión. Referencias Bibliográficas y Digitales [1]. Git (2019). Acerca del control de versiones. Sitio Web: http://git-scm.com/book/es/v1/Empezando-Acerca-del-control-de-versiones [2]. Angular (2019). ¿Qué es Angular?: https://angular.io/docs [3]. Campus MVP. Novedades de Angular 7 (2019): https://www.campusmvp.es/recursos/post/angular-7-ya-esta-aqui-y-estas-son-sus- novedades.aspx [4]. Booth D., Haas H. (et al), (2004), Arquitectura de servicios web (Web Services Architecture) https://www.w3.org/TR/ws-arch/#whatis [5]. Box D., Ehnebuske D., Kakivaya G. (et al), (2000). Protocolo simple de acceso a objetos (SOAP) 1.1 (Simple Object Access Protocol (SOAP) 1.1) https://www.w3.org/TR/2000/NOTE-SOAP-20000508/ [6]. Chappell D., (2004) Enterprise Service Bus. O'Reilly. Estados Unidos de América. [7]. Internet Engineering Task Force [IETF] (1999). https://tools.ietf.org/html/rfc2616 [8]. Krafzig D., Banke K., Slama D., (2004), Enterprise SOA Service-Oriented Arcitecture: Best Pratices. [9]. Maréchaux J., (2006) Combining Service-Oriented Architecture and EventDriven Architecture using an Enterprise Service Bus. https://www.ibm.com/developerworks/library/ws-soa-eda-esb/index.html [10]. Schulte R., (2002) Predicts 2003 Enterprise Services Buses Emerge. http://www.bus.umich.edu/KresgePublic/Journals/Gartner/research/111900/111977/1119 77.pdf [11]. Silberschatz A., Korth H., Sudarshan S., (2002). Fundamentos de base de Datos. Mc Graw Hill. Madrid. [12]. The Open Group Architecture Framework. http://pubs.opengroup.org/architecture/togaf9- doc/arch/ [13]. Cantelon M., Harter M., Holowaychuk T.J., Rajlich N., (2014), Node.js in Action. [14]. Stowe Michael, (2015), Undisturbed REST: A Guide to Designing the Perfect API. [15]. Google Drive. Como usar Drive (2019): https://www.google.com/intl/es_ALL/drive/ http://git-scm.com/book/es/v1/Empezando-Acerca-del-control-de-versiones https://angular.io/docs https://www.campusmvp.es/recursos/post/angular-7-ya-esta-aqui-y-estas-son-sus-novedades.aspx https://www.campusmvp.es/recursos/post/angular-7-ya-esta-aqui-y-estas-son-sus-novedades.aspx https://www.w3.org/TR/ws-arch/#whatis https://www.w3.org/TR/2000/NOTE-SOAP-20000508/ https://tools.ietf.org/html/rfc2616 https://www.ibm.com/developerworks/library/ws-soa-eda-esb/index.html http://www.bus.umich.edu/KresgePublic/Journals/Gartner/research/111900/111977/111977.pdf http://www.bus.umich.edu/KresgePublic/Journals/Gartner/research/111900/111977/111977.pdf http://pubs.opengroup.org/architecture/togaf9-doc/arch/ http://pubs.opengroup.org/architecture/togaf9-doc/arch/ https://www.google.com/intl/es_ALL/drive/ [16]. Google Drive. (2019). Introducción al API de Google Drive V3: https://developers.google.com/drive/api/v3/about-sdk [17]. Formularios Google. (2016). Una herramienta estrella de Google: https://blogs.upm.es/observatoriogate/2016/04/21/formularios-google-una-herramienta- estrella-de-google/ [18]. Wikibooks. (2018). MariaDB: https://en.wikibooks.org/wiki/MariaDB [19]. Maria DB. (2019). Sobre el Software Maria DB: https://mariadb.com/kb/en/library/about- mariadb-software/ [20]. Soporte Tecnico de Microsoft. (2019). Introducción a Active Directory: https://support.microsoft.com/es-ve/help/196464 . https://developers.google.com/drive/api/v3/about-sdk https://blogs.upm.es/observatoriogate/2016/04/21/formularios-google-una-herramienta-estrella-de-google/ https://blogs.upm.es/observatoriogate/2016/04/21/formularios-google-una-herramienta-estrella-de-google/ https://en.wikibooks.org/wiki/MariaDB https://mariadb.com/kb/en/library/about-mariadb-software/ https://mariadb.com/kb/en/library/about-mariadb-software/ https://support.microsoft.com/es-ve/help/196464UNIVERSIDAD CENTRAL DE VENEZUELA FACULTAD DE CIENCIAS ESCUELA DE COMPUTACIÓN Automatización de los procesos internos de la Comisión de Docencia de la Escuela de Matemáticas de la Universidad Central de Venezuela Trabajo de Especial de Grado presentado ante la ilustre Universidad Central de Venezuela por los bachilleres: José Alejandro Rivas Shappiro (CI V-18.026.082) Gabriel José Emmi Pizzela (CI V-18.941.453) para optar por el título de Licenciado en Computación Caracas, 07 de Mayo de 2019. UNIVERSIDAD CENTRAL DE VENEZUELA FACULTAD DE CIENCIAS ESCUELA DE COMPUTACIÓN TRABAJO ESPECIAL DE GRADO: Título: Automatización de los procesos internos de la Comisión de Docencia de la Escuela de Matemáticas de la Universidad Central de Venezuela Autores: José Alejandro Rivas Shappiro y Gabriel José Emmi Pizzela Unidad de Investigación: Aplicaciones de Tecnologías de Internet Palabras Clave: Comisión Docencia de la Escuela de Matemáticas, solicitudes, encuesta, sistema web, automatizar, notificaciones, revisión de solicitudes, gestión de formularios, Google formularios. Tutores: Prof. Robinson Rivas. Fecha de Presentación: 07 de mayo, 2019 Resumen La Comisión de Docencia de la Escuela de Matemáticas de la Universidad Central de Venezuela, es la responsable ante el Consejo de Escuela del buen funcionamiento de la docencia en las asignaturas del servicio. Además vela por el apropiado desenvolvimiento de las materias de la licenciatura, conjuntamente con los coordinadores de los grupos y centros de investigación. Para dar cumplimientos a sus funciones, la comisión de docencia gestiona diversos procesos, entre los cuales se encuentra la programación docente, la generación de encuestas y la gestión de solicitudes, entre otros. Dichos procesos, en algunos casos son realizados parcialmente o en su totalidad de forma manual y descentralizada. Esto trae como consecuencia una mayor carga de trabajo para los integrantes de la Comisión de Docencia. El siguiente Trabajo Especial de Grado (TEG) plantea el desarrollo de una aplicación Web robusta, escalable, extensible, basada en tecnologías de código abierto y marcos de trabajos reconocidos que permita automatizar parte del trabajo desempeñado por la Comisión de Docencia y de esta forma mejorar la productividad, tiempos de respuesta y calidad en la prestación de servicios. El sistema está basado en una arquitectura orientada a servicios, cuenta con una API REST desarrollada con Express.js. Del lado del cliente, se utilizó Angular 6 para la construcción de las vistas y el consumo de los diferentes servicios web desarrollados. Además, se desarrolló una integración con la API de Google Formularios para la realización de diversas tareas relacionadas con encuestas. Índice Resumen .......................................................................................................................................... 3 Índice............................................................................................................................................... 5 Figuras y Tablas .............................................................................................................................. 7 Introducción .................................................................................................................................... 9 Capítulo I ...................................................................................................................................... 10 1. Planteamiento del Problema ..................................................................................................... 10 1.1 Antecedentes ....................................................................................................................... 11 1.2 Objetivo General ................................................................................................................. 12 1.3 Objetivos Específicos.......................................................................................................... 12 1.4 Alcance ............................................................................................................................... 13 1.5 Justificación ........................................................................................................................ 14 Capítulo II ..................................................................................................................................... 15 2. Marco Conceptual ..................................................................................................................... 15 2.1. Comisión de Docencia ....................................................................................................... 15 2.1.1. Funciones y atribuciones de la Comisión de Docencia de Matemáticas de la UCV ...... 16 2.2 Funciones del Coordinador de la Comisión de Docencia ................................................... 18 2.3. Procesos involucrados en la Comisión de Docencia .......................................................... 19 2.3.1 Programación Docente ................................................................................................. 19 2.2.2 Generación de Encuesta ................................................................................................... 22 2.2.3 Generación de Solicitud ................................................................................................... 23 Capítulo III .................................................................................................................................... 25 3. Marco Tecnológico ................................................................................................................... 25 3.1 Angular ............................................................................................................................... 25 3.1.1 Características de Angular ........................................................................................... 25 3.1.2 Ventajas de Angular ..................................................................................................... 25 3.1.3 Desventajas de Angular ............................................................................................... 26 3.2 Node.js ................................................................................................................................ 27 3.2.1 Características de Node.js ............................................................................................ 27 3.2.2 Ventajas de Node.js ..................................................................................................... 27 3.2.3 Desventajas de Node.js ................................................................................................ 28 3.3 MariaDB ............................................................................................................................. 28 3.3.1 Características de MariaDB .................................................................................... 28 3.4 Google Drive ....................................................................................................................... 29 3.5 Google Forms...................................................................................................................... 30 3.6 Active Directory.................................................................................................................. 31 3.6.1 Características de Active Directory ............................................................................. 32 Capítulo IV.................................................................................................................................... 33 4. Marco Aplicativo ...................................................................................................................... 33 4.1 Análisis del Modelo de Datos ............................................................................................. 33 4.1.1 Lista de Tablas ............................................................................................................. 33 4.1.2 Modelo de Datos .......................................................................................................... 40 4.2 Implementación del Sistema ............................................................................................... 41 4.2.1 Módulos del sistema .................................................................................................... 41 4.2.2 Perfiles de Usuarios ..................................................................................................... 41 4.2.3 Descripción de la aplicación ........................................................................................ 42 Resultados ..................................................................................................................................... 63 Conclusiones ................................................................................................................................. 71 Recomendaciones ......................................................................................................................... 72 Referencias Bibliográficas y Digitales .......................................................................................... 73 Figuras y Tablas Figura 1. Proceso de Programación Docente ............................................................................... 21 Figura 2. Proceso de Generación de Encuesta .............................................................................. 22 Figura 3. Proceso de Generación de Solicitud .............................................................................. 24 Figura 4. Descripción de las tablas Usuario y Rol ........................................................................ 34 Figura 5. Descripción de las tablas Formulario, Tipo de Formulario. .......................................... 36 Figura 6. Descripción de la Solicitud y Usuario Solicitud. .......................................................... 38 Figura 7. Descripción de la Tabla Usuario Solicitud Notificación ............................................... 40 Figura 8. Modelo de datos del Sistema ......................................................................................... 40 Figura 9. Módulos Principales de la Aplicación ........................................................................... 41 Figura 10. Representación de la estructura gráfica del sistema .................................................... 42 Figura 11. Representación del diseño en diferentes dispositivos ................................................. 43 Figura 12. Vista modificación de perfil de Usuario - Administrador General ............................. 44 Figura 13. Vista enlace con Google - Administrador ................................................................... 45 Figura 14. Vista crear nuevo formulario - Administrador ............................................................ 46 Figura 15. Solución: Diagrama crear formulario .......................................................................... 47 Figura 16. Vista editar formulario - Administrador ...................................................................... 48 Figura 17. Vista contestar formulario embebido de Google Formularios - Administrador, Docente, Personal Administrativo ................................................................................................ 49 Figura 18. Solución: Diagrama modificar formulario .................................................................. 50 Figura 19. Diagrama de Flujo: Detección de variables en el contenido de la solicitud ................ 51 Figura 20. Crear/Editar formato de solicitud - Administrador ..................................................... 52 Figura 21. Realizar solicitud – Administrador, Docente, Personal Administrativo. .................... 54 Figura 22. Solución: Diagrama crear solicitud. ............................................................................ 55 Figura 23. Vista diagrama de casos de uso – Nivel 0. .................................................................. 55 Figura 24. Vista diagrama de casos de uso – Nivel 1. ................................................................. 56 Figura 25. Vista diagrama de casos de uso – Nivel 2. .................................................................. 57 Figura 26. Vista de Autenticación del Sistema. ............................................................................ 65 Figura 27. Vista de edición de perfil de usuario - Administrador General ................................... 66 Figura 28. Vista de enlace con Google. ........................................................................................ 66 Figura 29. Vista creación de un nuevo formato de solicitud. ....................................................... 67 Figura 30. Vista de modificación de perfil de usuario. ................................................................. 67 Figura 31. Creación de una nueva solicitud. ................................................................................. 68 Figura 32. Vinculación y registro de formulario. ......................................................................... 69 Figura 33. Recepción de notificación de la creación de un nuevo formulario. ............................ 69 Figura 34. Visualización de formulario Google embebido. .......................................................... 70 Introducción Desde los comienzos de la World Wide Web (WWW) las tecnologías relacionadas con el internet han tenido una evolución sumamente acelerada. Dicha evolución ha sido impulsada por la necesidad existente de poder compartir y obtener información de manera sencilla, rápida, y en un formato estandarizado. Este desarrollo ha permitido brindar en corto tiempo experiencias de usuarios satisfactorias haciendo del internet un lugar cada vez más común para todas las personas del mundo. En los últimos años el desarrollo de aplicaciones web ha tenido un auge extraordinario, generado por la democratización de Internet y por los servicios ofrecidos a través de las distintas aplicaciones que facilitan el cumplimiento de tareas y procesos llevados a cabo por el usuario tanto en el ámbito personal como en el ámbito profesional. Por lo anterior, diversas instituciones y empresas optan por el uso de aplicaciones Web para simplificar procesos que le permitan obtener numerosos beneficios en cuanto a seguridad, accesibilidad, costos, productividad, entre otros. La Comisión de Docencia de la Escuela de Matemática de la Facultad de Ciencias de la Universidad Central de Venezuela, realiza un conjunto de tareas de forma manual apoyándose en herramientas ofimáticas. Esto trae como consecuencia que algunos procesos tengan: altos tiempos de respuesta, mayor complejidad, replicación de datos, difícil trazabilidad, entre otros. El siguiente TEG, tiene como finalidad el diseño y desarrollo de una aplicación Web que automatice los procesos internos de la Comisión de Docencia y contribuya a ahorrar significativamente tiempo, dinero y esfuerzo; maximizando también el nivel de eficiencia de dichos procesos y la satisfacción por parte del Docente y Personal Administrativo que labora en la escuela. Capítulo I 1. Planteamiento del Problema Actualmente las organizaciones e instituciones sin importar su dimensión, grande mediana o pequeña, hacen uso de sistemas que automatizan sus operaciones y permiten mejorar la productividad, la seguridad, la calidad en la prestación de servicios, reducir costos y tiempo de trabajo. Este no es el caso de la Comisión de Docencia de la Escuela de Matemática de la UCV que ejecuta un conjunto de actividades de forma manual. Entre ellas pudiéramos mencionar las siguientes:  Elaboración de la programación docente.  Supervisión del contenido de los parciales de las materias de servicio.  Realización de encuesta de calidad docente y generación del respectivo informe sobre el desempeño de los docentes y preparadores.  Avalar las solicitudes de permiso de docentes y preparadores, velando porque el curso no quede desatendido.  Atender los problemas y quejas que puedan surgir con alguna de las asignaturas tanto del servicio como de la licenciatura. La realización de este tipo de tareas de manera manual aumenta la probabilidad de generar inconvenientes tales como:  Pérdida de integridad en los datos: algunos trámites pueden estar sin los soportes adecuados y con la posibilidad de que el trámite se extravíe.  Altos tiempos de respuesta: el proceso de generar e imprimir la solicitud para su posterior entrega y posible aprobación, consta de un proceso sin ninguna automatización y por ende se consiguen respuestas lentas y procesos ineficientes para todos los involucrados.  Manejo no seguro de la información: la información de las solicitudes queda expuesta a individuos que no necesariamente están involucrados en los procesos de gestión del trámite.  Manejo descentralizado de la información: las solicitudes pueden traspapelarse o podrían ser manipuladas por personal no autorizado. Las encuestas pueden estar creadas en varias cuentas de Google Drive sin ningún tipo de control dificultando su gestión.  Mayor carga de trabajo para los integrantes de la Comisión de Docencia: el trámite de las solicitudes implica mayor cantidad de etapas y más involucrados, abarcando más carga de trabajo para la comisión. Por las mencionadas razones, se propone el desarrollo de una aplicación Web que le otorgue a la Comisión de Docencia beneficios significativos como los antes mencionados al principio de este capítulo en la gestión de sus procesos internos. 1.1 Antecedentes Las siguientes investigaciones permiten tener una mayor comprensión de la automatización de procesos asociados a la facultad de Ciencias de la UCV.  “Implementación del Módulo de Gestión de Trámites de Preparadores y Auxiliares Docentes del Sistema de Gestión de la programación Docente para el Departamento de la Escuela de Computación de la Facultad de Ciencias” por los licenciados Brites De Freitas Christian M. y De Freitas A. Andrés A. y la tutora Prof. Caraballo B. Yusneyi Y. (2015). Objetivo General: “Desarrollar el módulo de Gestión de Trámites del Personal Docente Preparador y Auxiliar Docente que, basándose en los procesos de negocios de la Escuela de Computación, permita ejecutar los procesos referentes a los trámites del personal preparador y auxiliar docente, a fin de proveer un servicio automatizado y eficaz”. Tecnologías Utilizadas: “Para la elaboración y ejecución de este módulo se combinaron las tecnologías PHP (lenguaje de programación), Laravel y AngularJS (frameworks), PostgreSQL (sistema manejador de base de datos) y la metodología Scrum modificada”.  “Desarrollo de Módulos para la Gestión de Trámites Administrativos y Solicitudes de la Escuela de Computación de la Universidad Central de Venezuela” por las licenciadas Montenegro Z. Hailyx N. y Zapata B. Isthar y la tutora Prof. Caraballo B. Yusneyi Y. (2014). Objetivo General: “Desarrollar un sistema compuesto por módulos, para facilitar la realización de tareas de forma automatizada, asociados a la gestión de trámites administrativos y solicitudes docentes”. Tecnologías Utilizadas: “Se utilizarán diversas tecnologías para el desarrollo, específicamente el marco de trabajo (framework) CakePHP, Hojas de estilo (CSS), JavaScript, Ajax, el gestor de versiones Git y un manejador de Base de Datos (BD) MySql sobre un servidor Web Apache”.  “Desarrollo del Módulo de Gestión de Trámites de Profesores del Sistema de Gestión de la Programación Docente para el Departamento de la Escuela de Computación de la Universidad Central de Venezuela” por el licenciado Guzmán H. Daniel E. y los tutores Prof. Caraballo B. Yusneyi Y. y Prof. Acosta Carlos (2015). Objetivo General: “Desarrollar un sistema web de gestión que permita llevar el control y seguimiento del proceso de planificación docente de forma automatizada, optimizando las actividades y el uso de recursos con el fin de hacer más eficiente la gestión de la programación docente”. Tecnologías Utilizadas: “Laravel (PHP) y AngularJS (JavaScript), SASS para las hojas de estilo, el manejador de versiones Git, Bootstrap para el diseño de las interfaces y PostgreSQL como sistema de gestión de la base de datos”. 1.2 Objetivo General Diseño y desarrollo de un sistema que permita optimizar y automatizar los procesos llevados a cabo por la Comisión de Docencia de la Escuela de Matemática de la UCV. 1.3 Objetivos Específicos  Realizar el levantamiento y análisis de requerimientos.  Seleccionar marcos de trabajo (frameworks) apropiados para el diseño y desarrollo del sistema.  Diseñar interfaces de usuarios.  Diseñar e implementar una base de datos para el sistema.  Selección e integración con los servicios más convenientes para el sistema, ofrecidos por la API de Google.  Desarrollo de servicios web que permitan la generación de componentes modulares y reusables de la lógica de negocio del sistema.  Diseñar un sistema robusto, escalable y extensible que facilite la incorporación en el futuro de nuevas funcionalidades y/o módulos. 1.4 Alcance La solución propuesta abarca el desarrollo de las siguientes funcionalidades:  Módulo de autenticación, consta de un servicio web que permitirá al usuario autenticarse contra un repositorio de usuarios administrado por la Escuela de Matemáticas.  Gestión de la sesión de usuarios basado en roles, se establecerán diferentes roles a través de los cuales se controlará el acceso a los diferentes recursos del sistema.  Módulo de gestión de solicitudes, se implementarán funcionalidades asociadas a la creación, edición, eliminación, notificación y seguimiento de las solicitudes generadas en el sistema.  Módulo de gestión de encuestas y programación docente con integración con la API de Google, se implementarán funcionalidades asociadas a la creación, edición, eliminación, notificación y resultados de las encuestas generadas en el sistema. Funcionalidades no contempladas en la solución propuesta:  Permitir al administrador ver cuáles de los usuarios respondieron a las encuestas enviadas, ya que esta funcionalidad no es posible implementarla en la plataforma utilizada (Google Form).  Módulo de comunicaciones a través de correos electrónicos masivos, donde el administrador pueda crear plantillas o notificaciones, para luego enviarlas a los usuarios de su elección.  Encuestas para preparadores.  Módulo de publicaciones, para que los Docentes puedan registrar sus avances en las diferentes investigaciones y proyectos que realizan durante el año.  Recuperación de contraseña del usuario. 1.5 Justificación El desarrollo de este sistema, es una pieza importante dentro de las tareas que se realizan en la Comisión de Docencia de la Escuela de Matemáticas; con la automatización de los procesos, las partes involucradas serán beneficiadas. Las solicitudes se crearían a través de la aplicación, no se tendrán que llenar a mano las solicitudes, los formatos de las solicitudes estarán precargados, lo que agilizará los procesos del trámite significativamente para el personal encargado de revisarlas. Por otra parte los docentes pueden consultar el estado de sus trámites en el portal, como también mediante el canal de comunicación de correos. El solicitante no debe imprimir la solicitud sino ha sido Aprobada o Avalada por la comisión de docencia. La creación de las encuestas de Google Formularios estarán registradas y vinculadas en el sistema, con el fin de establecer un control y clasificación de todos los formularios que se creen para cada grupo de usuarios de la escuela. En general se puede decir que el sistema trae consigo una serie de ventajas como son: 1. Ahorro de tiempo por parte de la comisión de docencia y secretaria que normalmente tiene que recibir y gestionar solicitudes manualmente. 2. Tramitación de solicitudes de manera más eficiente por medio del uso de herramientas tecnológicas actuales. 3. Menos uso del papel, evitando así traspapelar o extraviar solicitudes. 4. Canal de comunicación de correos más eficaz basado en los correos alternativos de Gmail. Capítulo II 2. Marco Conceptual En el siguiente capítulo se explican las bases conceptuales que sirven como premisa para el desarrollo de este proyecto, basados en documentación interna ofrecida por la Escuela de Matemáticas de la UCV. El capítulo consta de dos secciones: La primera sección en la que se realiza una descripción de las funciones y atribuciones generales de la Comisión de Docencia de la Escuela de Matemáticas de la UCV, sus unidades de trabajo y los ejecutores de dichas funciones.  En la segunda parte se describen los diferentes procedimientos que se realizan actualmente en la Comisión de Docencia, para el control administrativo de las diferentes unidades de trabajo, esta sección sirve como base de la justificación de este Trabajo Especial de Grado. 2.1. Comisión de Docencia La Comisión de Docencia además de velar por el correcto desenvolvimiento de las materias de la licenciatura de la mano con los centros de investigación y los coordinadores de los grupos, es también la responsable, ante el Consejo de Escuela, del buen funcionamiento en las asignaturas del servicio por parte del personal docente. Hace aproximadamente 8 años, en julio del año 2011, por decisión del Consejo de Escuela, la Comisión de Docencia fue reestructurada, quedando conformada por tres unidades de trabajo, que deben trabajar en constante colaboración con los coordinadores de las asignaturas y de ser necesario dar apoyo a las demás unidades:  Unidad de Docencia Básica: Encargada de los cursos de Matemáticas I, II y III.  Unidad de Docencia Especializada: Encargada de las asignaturas de la Lic. en Matemáticas, Matemáticas IV y Métodos Matemáticos.  Unidad de Apoyo: Encargada de prestar apoyo a las demás unidades cuando sea requerido, como también velar por la calidad de la docencia efectuando encuestas que permitan la evaluación del desempeño del personal docente. 2.1.1. Funciones y atribuciones de la Comisión de Docencia de Matemáticas de la UCV Unidad de Docencia Básica De acuerdo a documentación interna ofrecida por la Escuela de Matemáticas, entre las responsabilidades y tareas que tiene la Unidad de Docencia Básica están:  Elaboración de la programación docente de las asignaturas Matemáticas I, II y III cada semestre.  Supervisión del desempeño de cada uno de los profesores de estas asignaturas en referencia a los contenidos correspondientes, el uso apropiado de la bibliografía y cumplimiento de los cronogramas establecidos, la elaboración de exámenes, así como el cumplimiento de las actividades programadas por la coordinación.  Comunicación permanente con los coordinadores de Matemáticas I, II y III, y la contribución a la solución de diferentes problemas que puedan afectar el desarrollo de estas asignaturas, tales como: ausencias injustificadas, permisos o renuncias de profesores y/o preparadores.  Atención a reclamos formulados por profesores y alumnos, relacionados con las asignaturas mencionadas.  Supervisión de la implementación y cumplimiento de las normativas establecidas por el Consejo de Escuela en relación con el dictado y evaluación de los cursos de Matemáticas I, II y III.  Colaboración estrecha con el Director y Jefe del departamento, para la organización de los concursos de credenciales para optar a los cargos de Docentes temporales, en fecha oportuna.  Apoyo en la organización, en fecha oportuna, de los concursos de preparadores I y II.  Entrega al final de cada semestre de una evaluación detallada del desempeño docente de profesores y preparadores de las tres asignaturas correspondientes a la unidad. Unidad de Docencia Especializada: En cuanto a esta unidad, algunas de las funciones son muy parecidas a la Unidad Básica, pero dirigidas a las asignaturas de la Licenciatura en Matemáticas:  Elaboración de la programación docente de las asignaturas de la licenciatura en Matemáticas, cada semestre.  Supervisión del desempeño de cada uno de los profesores de estas asignaturas en referencia al dictado de los contenidos correspondientes, el uso apropiado de la bibliografía.  Comunicación constante con los coordinadores de las asignaturas de la Licenciatura en Matemáticas y la contribución a la solución de diferentes problemas que puedan afectar el desarrollo de estas asignaturas, tales como: ausencias injustificadas, permisos o renuncias de profesores y/o preparadores.  Atención a reclamos formulados por profesores y alumnos, relacionados con las asignaturas de la Licenciatura.  Supervisión de la implementación y cumplimiento de las normativas establecidas por el Consejo de Escuela en relación con el dictado y evaluación de dichas asignaturas.  Colaboración estrecha con el Director y Jefe del Departamento, para la organización de los concursos de credenciales para optar a los cargos de Docentes temporales, en fecha oportuna.  Apoyo en la organización, en fecha oportuna, de los concursos de preparadores.  Entrega al final de cada semestre de una evaluación detallada del desempeño docente de profesores y preparadores de las tres asignaturas correspondientes a la unidad. Unidad de apoyo Las funciones y atribuciones de esta unidad van dirigidas a la constante colaboración hacia las otras dos unidades, y son las siguientes:  Aplicación, en cada semestre, de la encuesta de evaluación profesoral en todos los cursos de pregrado dictados por la Escuela de Matemáticas.  Realización de las encuetas de evaluación a los preparadores cada semestre.  Colaboración en el procesamiento y análisis de los datos suministrados por las encuestas de evaluación profesoral y de preparadores.  Solicitud, todos los semestres, a los coordinadores de los cursos de Matemáticas I, II y III, el informe acerca de los profesores bajo su coordinación. Este informe se presenta con un formato prediseñado.  Aplicación a los profesores de cada semestre de los cursos de Matemáticas I, II y III, la encuesta de evaluación al coordinador. Este informe se presenta con un formato prediseñado.  Suministro de la información acerca del desempeño de los profesores, preparadores y coordinadores proveniente de las encuestas e informes recolectados, a los responsables de las otras dos unidades, para que estos elaboren sus informes respectivos.  Colaboración en la organización, en fecha oportuna, de los concursos de Preparadores I y II.  Revisión periódica de las credenciales de los preparadores, para garantizar que mantengan un desempeño académico acorde con lo exigido en el momento de su contratación. Una atribución que corresponde a las tres unidades conjuntamente con el Director y el Jede del Departamento de Matemáticas, es la organización y realización anual y en fecha oportuna, de los concursos de credenciales de Docentes a Dedicación Exclusiva, Docentes Temporales y Preparadores. 2.2 Funciones del Coordinador de la Comisión de Docencia La Comisión de Docencia de la Escuela de Matemáticas cuenta con la figura de un coordinador, esta persona tiene la responsabilidad de atender, supervisar y apoyar a las tres unidades antes mencionadas, entre sus funciones principales está:  La supervisión para el correcto funcionamiento de las tres unidades que conforman la Comisión de Docencia.  Consideración y evaluación de cualquier situación irregular en torno a la docencia impartida por la Escuela de Matemáticas que no se haya podido solventar ante otras instancias competentes: profesores, coordinadores, Unidad de la Comisión de Docencia Correspondiente.  Consignación de la Programación Docente, elaborada por la Comisión de Docencia, para su consideración y aprobación por parte del Consejo de Escuela.  Consignación de la Programación Docente, aprobada por el Consejo de Escuela, ante Control de Estudios, en los formatos que esta División solicite.  Supervisión para asegurar la calidad de la docencia y el cumplimiento de los objetivos y actividades previstos en cada asignatura.  Comunicación y constante contacto con los Directores y Jefes de Departamentos de otras Escuelas a fin de asegurar que las asignaturas cumplen los objetivos predeterminados.  Coordinación para la realización, al final de cada semestre, de las evaluaciones del desempeño de los docentes y preparadores.  Solicitud al Consejo de Escuela, en las fechas oportunas, la apertura de los concursos de credenciales para optar al cargo de Docente a Dedicación Exclusiva, Docente Temporal, y Preparadores proponiendo los lapsos de inscripción, fechas de los concursos, jurados principales y suplentes.  Atención a cualquier situación que requiera la actuación de la División de Control de Estudios, tales como: asignación de aulas, conflictos y cambios de horarios, etc. 2.3. Procesos involucrados en la Comisión de Docencia En la comisión de docencia de la Escuela de Matemáticas de la UCV, intervienen diversos procesos que tienen como finalidad dar cumplimiento con las funciones y atribuciones que están bajo la responsabilidad de la comisión. A continuación se describirán los procesos más relevantes: 2.3.1 Programación Docente Figura 1. Proceso de Programación Docente Fuente: Creada por los autores, 2019. Pasos a seguir para la elaboración de la programación docente de profesores y preparadores de la Escuela de Matemáticas, como se muestra en la figura 1: a. Enviar a los grupos la solicitud de la programación docente sugerida. b. Definir los coordinadores de las materias del servicio. Los grupos deben asignar un coordinador según la tabla aprobada por el Consejo de Escuela. c. Enviar correos solicitando a los profesores que llenen la encuesta con sus preferencias y que suministren sus horarios disponibles (esto en el caso de profesores contratados). d. En base a la información anterior, actualizar las bases de datos del Departamento. Se requieren informes: uno para Control de Estudios (la programación docente) y uno para la Escuela (la lista de todos los profesores del departamento con todos sus datos). La secretaria del Departamento transcribe en un formato preestablecido el contenido de las encuestas con las preferencias de los profesores. Hay dos casillas a la izquierda para colocar las cargas separadas en grupos de 4 horas. e. La programación a ser ejecutada que se debe enviar a Control de Estudios debe estar completa para la licenciatura. Para el servicio sólo se enviarán los nombres de los coordinadores y el número de secciones propuestas para cada materia. En general se propone el mismo número de secciones del semestre anterior, salvo en situaciones excepcionales. f. Asignar cursos a los profesores que no hayan sido programados para dictar cursos de la licenciatura en Matemáticas. Recomendaciones: Es conveniente esperar hasta tener todas las encuestas, si es necesario, enviando notificaciones a los profesores que no consignen a tiempo la información y enfatizando que están retrasando la publicación de la programación. Cotejar las dos hojas mencionadas en la parte d) a modo de no dejar ningún profesor por fuera o de omitir una carga de algún profesor. Revisar varias veces que la asignatura asignada a cada profesor coincida con su horario disponible introducir la carga docente de los postgrados. 2.2.2 Generación de Encuesta Figura 2. Proceso de Generación de Encuesta Fuente: Creada por los autores, 2019. Pasos a seguir para la generación de encuestas dirigidas al personal docente y/o administrativo de la Escuela de Matemáticas de la UCV, como se muestra en la figura 2: a. Las encuestas son creadas a través del servicio Google Forms. b. Los docentes, preparadores o personal administrativo a los cuales vaya dirigida la encuesta, son notificados vía correo electrónico. c. Los resultados de la encuesta son analizados y evaluados por la comisión de docencia. 2.2.3 Generación de Solicitud Figura 3. Proceso de Generación de Solicitud Fuente: Creada por los autores, 2019. Pasos a seguir para la generación de una solicitud por parte del docente y/o administrativo de la Escuela de Matemáticas de la UCV, como se muestra en la figura 3: a. El docente o personal administrativo redacta un documento que contendrá información relacionada con la solicitud que desea realizar. Dicho documento será entregado en la secretaría de la Escuela de Matemáticas. b. La Secretaría hace llegar la solicitud al Consejo de Escuela para su revisión y consideración. c. El Consejo de Escuela analiza la solicitud, en caso de tener la potestad de aprobarla o rechazarla le notificará a Secretaría de la decisión tomada por el Consejo de Escuela. d. En caso de no tener la potestad para aprobar o rechazar la solitud, el Consejo de Escuela emite una opinión avalando o no la solicitud recibida. Dicha solicitud será enviada al Consejo de Facultad para su revisión y consideración. e. El Consejo de Facultad analiza la solicitud, en caso de tener la potestad de aprobarla o rechazarla le notificará al Consejo de Escuela, de la decisión tomada. f. En caso de no tener la potestad para aprobar o rechazar la solitud, el Consejo de Facultad emite una opinión avalando o no la solicitud recibida. Dicha solicitud será enviada a Rectorado para su revisión y consideración. g. Rectorado analiza la solicitud y decide entre la aprobación y el rechazo de la solicitud. h. En caso de que la solicitud haya sido rechazada, el docente tiene la opción de realizar una apelación. En este capítulo se dio a conocer las diferentes responsabilidades que recaen sobre la Comisión de Docencia, también se realizó la descripción de los diferentes procesos que involucran la participación de dicha Comisión. Esto, con la finalidad de entender de mejor manera las necesidades presentes en la Comisión y tener una mejor idea de cuáles serían las tecnologías más adecuadas para la implementación del sistema. Capítulo III En el siguiente capítulo se dará a conocer las diferentes tecnologías que fueron usadas y que componen la arquitectura de la solución propuesta. 3. Marco Tecnológico 3.1 Angular Angular es un framework creado por Google, gratuito y Open Source que permite la creación de páginas web SPA, que utiliza como lenguaje de programación principal TypeScript, es decir, un conjunto de JavaScript/ECMAScript. (Angular. ¿Qué es Angular?, 2019). SPA es el acrónimo por sus siglas en ingles de „Aplicación de una sola Página‟ es decir, al ingresar a una aplicación web SPA, se cargan todos los componentes en una misma página. Lo que permite la plataforma de Angular, es cambiar la vista al navegar por la página, para que esta simule la apariencia de una página web normal. (Campus MVP, Novedades de Angular 7, 2019). 3.1.1 Características de Angular  Está basado en componentes, es decir, estos se construyen con la vista en HTML, el estilo en CSS y la lógica en Typescript con la capacidad de reutilizarlos en otras funcionalidades del proyecto.  El lenguaje en el que se basa Angular, tiene una sintaxis parecida a Java, con tipado estático.  Cuenta con el patrón de diseño de inyección de dependencias, que se basa en pasar las dependencias directamente a los objetos en lugar de crearlas localmente. 3.1.2 Ventajas de Angular Las principales ventajas de este framework son:  A pesar de que la velocidad de carga inicial es lenta, una vez la página se carga por completo navegar por la mismas es muy rápido e instantáneo, ya que, desde la descarga inicial la plataforma solicita al servidor solo la información necesaria y la cambia dinámicamente en el navegador, sin tener que tener que recargar la página.  Angular ofrece más "opiniones" de serie, permitiendo el inicio del desarrollo sin desafíos por la toma de decisiones. Es decir, con Angular desde el primer momento se sabe cómo organizar el código, cómo realizar las diferentes tareas requeridas y la arquitectura de la aplicación.  Este framework cuenta con aplicaciones modulares y escalares, lo que permite al desarrollador la reutilización de sus componentes y servicios, de manera sencilla para la ampliación constante del sistema, que luego puedes utilizar en otras páginas y aplicaciones web.  Esos componentes son fáciles de convertir en componentes web nativos. A largo plazo esto es una gran ventaja pues permitirá reutilizar componentes que ya se crearon en Angular en otro tipo de aplicaciones.  Este lenguaje cuenta con una amplia comunidad de desarrolladores, que ofrecen multitud de tutoriales y librerías. Además, gracias a la popularidad de Angular, los principales editores de IDEs ofrecen extensiones para trabajar con este framework de la manera más cómoda posible.  Dispone del Angular CLI, un asistente por línea de comandos para crear la los diferentes componentes de la estructura del proyecto. 3.1.3 Desventajas de Angular Se consideran pocas las desventajas de este Framework, actualmente se pueden enumerar las siguientes: 1. El desarrollador web debe estar familiarizado con TypeScript antes de iniciar el desarrollo en Angular. 2. Pueden aparecer problemas de migración al pasar de una versión anterior a una nueva. 3. Hay varias formas de hacer una misma tarea con Angular. Lo que puede convertirse un desafío para los principiantes al momento de decidir cuál es el mejor camino a utilizar. Por lo tanto, es imperativo que los programadores desarrollen un entendimiento de los diversos componentes y cómo ayuda cada uno de ellos. 4. Si el usuario de su aplicación deshabilita JavaScript, no se verá nada, excepto la página básica en el navegador. 3.2 Node.js Node.js es una plataforma Open Source construida sobre el motor de JavaScript Chrome V8 para la construcción de aplicaciones escalables. Implementa un modelo basado en eventos y de operaciones de entrada y salida sin bloqueo que lo hacen ligero y eficiente para aplicaciones Web basadas en tiempo real que se ejecutan en un entorno distribuido. Node.js ofrece un alto desempeño, además, permite hacer uso del conocimiento adquirido en el desarrollo con JavaScript. Esto supone, una curva de aprendizaje menos elevada para aprender un framework como Express.js y otros tipos de herramientas que ofrece la plataforma de Node.js. (Cantelon M., Harter M., Holowaychuk T.J., Rajlich N. Node.js in Action, 2014). Es importante tener en cuenta que Node.js ofrece muchas facilidades para el desarrollo de servicios Web REST. Uno de sus puntos a favor, es que el formato JSON que será utilizado para el intercambio de información entre el cliente y los servicios, es soportado por JavaScript de forma nativa. De esta manera se facilita el trabajo de la generación y manipulación de objetos con formato JSON. 3.2.1 Características de Node.js  Está basado en un modelo asíncrono orientado a eventos y con un manejo de las operaciones de entrada y salida sin bloqueos.  Node.js opera con un solo hilo de ejecución capaz de soportar una gran cantidad de conexiones concurrentes, haciéndolo ligero y escalable.  Ofrece alto desempeño y rápida ejecución del código. 3.2.2 Ventajas de Node.js  Es posible el desarrollo integral de aplicaciones Web haciendo uso de un solo lenguaje de programación. Permitiendo así, compartir código entre el cliente y el servidor, además, de la reutilización de los diferentes componentes que sean desarrollados.  Elimina la complejidad que pudiera existir al manejar lenguajes de programación diferentes para el lado del cliente y para el lado del servidor, lo que repercute en una reducción de los tiempos de desarrollo.  Fácil manipulación de los datos en formato JSON.  JavaScript es un lenguaje usado en bases de datos NoSQL como CouchDB y MongoDB. Por la que la interacción con este tipo de base de datos resulta más sencilla. 3.2.3 Desventajas de Node.js  No es recomendable su uso para la realización de tareas que requieran un alto nivel de cómputo.  Operaciones de cálculos complejas pueden conllevar a una degradación del desempeño de la plataforma.  Al existir una gran cantidad de módulos desarrollados por terceros que pueden utilizarse en la fase de desarrollo, existe el riesgo de usar un módulo que no esté desarrollado siguiendo las mejores prácticas y tomando en cuenta el modelo de desarrollo en el cual está basado en Node, pudiendo afectar el rendimiento de la aplicación. 3.3 MariaDB Es un sistema manejador de base de datos relacional de código abierto, multihilo, disponible bajo la licencia GNU Public License (GPL). MariaDB es una ramificación de MySQL. Cuando MySQL fue comprado por Oracle, Michael Widenius el autor original de MySQL, decidió generar una nueva rama que siempre permanecería abierta para el acceso y contribución de la comunidad. (Wikibooks. MariaDB, 2018). 3.3.1 Características de MariaDB  Es notablemente escalable, y es capaz de manejar decenas de miles de tablas y billones de registros de datos. También es capaz de gestionar pequeñas cantidades de datos de forma rápida y sin problemas, siendo una buena elección para sistemas pequeños o proyectos personales.  MariaDB incluye una amplia selección de motores de almacenamiento, entre los cuales se encuentran motores de alto rendimiento.  Puede ser instalado en múltiples sistemas operativos, y ofrece conectores para una gran variedad de lenguajes de programación.  Usa un lenguaje de consultas estándar y popular.  Ofrece mayor precisión para tipo de datos TIME, DATETIME, y TIMESTAMP.  Permite la construcción de un clúster a través de MariaDB Galera Cluster. 3.4 Google Drive Google Drive es un servicio de alojamiento en la nube, de todo tipo de archivos que fue introducido por la empresa estadounidense Google el 24 de abril de 2012. Es el reemplazo de la anterior versión Google Docs. (Google Drive. Como usar Drive, 2019). Cada usuario cuenta con 15 gigabytes de espacio gratuito para almacenar sus archivos, este espacio puede ser ampliado mediante diferentes planes de pago. Es accesible a través del sitio web desde computadoras y dispositivos móviles, disponen de aplicaciones para Android e iOS que permiten editar documentos y hojas de cálculo. APIs de Google Drive La plataforma Google Drive les brinda a los desarrolladores un grupo de servicios web junto con varias bibliotecas y ejemplos específicos de documentación para ayudarlo a implementar aplicaciones que se integren con Google Drive. La plataforma Google Drive no solo proporciona un servicio de almacenamiento, aunque principalmente sea utilizada para descargar y cargar archivos. (Introducción al API de Google Drive, 2019). Entre unas de sus funciones se encuentra la de Búsqueda de Archivos, mediante el método files.list, la cual permite visualizar una lista de todos los archivos que tiene el usuario con la información general de cada uno de ellos. Usando OAuth 2.0 para acceder a las API de Google Las API de Google utilizan el protocolo OAuth 2.0 para la autenticación y autorización. Google permite que varios escenarios que tenga la capacidad de implementar la tecnología OAuth 2.0 puedan utilizar sus servicios, aplicaciones de servidores web, aplicaciones instaladas y las aplicaciones del lado del cliente. Para poder empezar a utilizar los servicios que provee el API de Google Drive es necesario configurar la aplicación y obtener las credenciales de cliente de OAuth 2.0 mediante el portal “Google API Console” (Consola de Google API). Una vez se haya configurado la aplicación el cliente podrá solicitar un token de acceso. El proceso de autorización comienza cuando la aplicación redirige a una URL de Google mediante una ventana emergente del navegador; Una vez que el cliente se haya autenticado con las credenciales de una cuenta Google, el servidor le regresa a la aplicación la respuesta. El resultado es un token de acceso, que el cliente debe incluir en la cabecera de todas las solicitudes que desee consumir del API de Google. Cuando el token expira, la aplicación repite el proceso. 3.5 Google Forms La herramienta Google Formularios (Forms) le permite al usuario crear encuestas de manera fácil y rápida, con las cuales se pueden planificar eventos, hacer preguntas a tus empleados o clientes y recopilar diverso tipo de información de una manera simple y eficiente. Al crear un formulario Google, el usuario puede incluir los siguientes tipos de preguntas: respuesta corta, párrafo, selección múltiple, casilla de verificación, desplegable, escala lineal, cuadrícula de varias opciones, fecha y hora. (Formularios Google. Una herramienta estrella de Google, 2016). Las ventajas de usar formularios de Google son:  Permite crear formularios de múltiples páginas.  La interfaz es muy fácil de usar. Cualquier usuario con conocimiento promedio de la computadora puede crear formularios y desplegarlo.  Ofrece la posibilidad de derivar a una página concreta del formulario, dependiendo de la respuesta dada a una pregunta.  Tiene la opción de visualizar una barra de progreso, muy útil para formularios extensos.  Permite elegir si una pregunta es opcional u obligatoria.  Se pueden incluir archivos de tipo imágenes y videos.  Ofrece la posibilidad de obtener el código iframe para embeberlo en blogs, wikis, webs.  Permite crear secciones dentro de una misma página.  Esta herramienta nos permite visualizar la encuesta antes de publicarla.  Google Formulario permite elaborar encuestas de manera ilimitada, sin costo alguno, a diferencia de otras alternativas disponibles en el mercado. Como desventajas del uso de formularios de Google, podemos mencionar:  La personalización de diseño para el formulario es muy limitada, ya que se deben seguir los parámetros que ofrece la plataforma.  Es necesario tener acceso a internet para poder usar esta herramienta.  Existen ciertas limitaciones relativas a las capacidades que la herramienta acepta según el formato del documento: para textos, hasta 500 Kb; imágenes, hasta 2 Mb; y para hojas de cálculo hasta 256 celdas o 40 hojas.  Google Formularios no posee una API REST para integrarlo a otras plataformas. 3.6 Active Directory Es una base de datos distribuida que permite almacenar información relativa a los recursos de una red con el fin de facilitar su localización y administración. Utiliza distintos protocolos, principalmente LDAP, DNS, DHCP, y Kerberos. Microsoft Active Directory es la implementación de Servicios de directorio para Windows. Las cuestiones básicas relacionadas con un centro de servicios de directorio giran alrededor de la información que se puede almacenar en la base de datos, cómo se almacena, cómo se puede consultar información específica y qué se puede hacer con los resultados. Principalmente un Active Directory almacena información relacionada con cuentas de usuario, como por ejemplo: nombres, contraseñas, números de teléfonos, correos, entre otros y permite a usuarios autorizados en la misma red acceder de forma sencilla a esta información. (Soporte Tecnico de Microsoft. Introducción a Active Directory, 2019). 3.6.1 Características de Active Directory  Implementa sus características de acuerdo con estándares reconocidos en internet tales como, LDAP y DNS.  Proporciona una manera completa de recopilar información necesaria para detectar problemas anticipadamente y evitarlos.  Es posible supervisar múltiples servidores desde una única estación de trabajo y la información es uniforme en todo el sistema.  Facilita la gestión y autenticación de los usuarios.  Mantiene un conjunto de reglas, que definen las clases de objetos y atributos incluidos en el directorio, las restricciones y límites de las instancias de estos objetos y el formato de sus nombres.  Utiliza un almacén de datos estructurado como base para una organización lógica y jerárquica de información del directorio.  Posee un catálogo global que contiene información sobre todos los objetos en el directorio. Esto permite a los usuarios y administradores encontrar información independientemente del dominio que realmente contenga la data  Cuenta con un servicio de replicación que distribuye los datos de directorio en una red. Capítulo IV 4. Marco Aplicativo En el siguiente capítulo se explica, en primer lugar, el modelo de datos y la relación de las diferentes entidades. En segundo lugar, se muestran los diferentes módulos del sistema y la manera en que el usuario visualiza las diversas vistas que ofrece el portal. 4.1 Análisis del Modelo de Datos El modelo de datos que se describirá a continuación está conformado por siete tablas, que permiten almacenar la información necesaria para una correcta implementación de las diferentes funcionalidades que ofrece el sistema. Es importante señalar que el uso de la API de Google para la gestión de las encuestas y la programación docente, así como la utilización de un repositorio de usuarios externo para la autenticación, impactaron directamente en la simplificación y reducción del modelo de datos. 4.1.1 Lista de Tablas Todas las tablas cuentan con un atributo id de tipo entero y auto incremental. 4.1.1.1 Usuario La descripción de la tabla Usuario puede visualizar en la figura 4.  Nombre: usuario.  Descripción: información básica de los usuarios del sistema.  Atributos: o nombre: nombre de pila del usuario proveniente del repositorio de usuarios externo. o apellido: apellido del usuario proveniente del repositorio de usuarios externo. o username: nombre de usuario proveniente del repositorio de usuarios externo. o email: cuenta de correo electrónico del usuario. o idRol: identificador del rol asignado al usuario. 4.1.1.2 Rol En la figura 4 puede apreciarse los diferentes campos que componen la tabla Rol.  Nombre: rol.  Descripción: permite almacenar los diferentes roles existentes en el sistema.  Atributos: o nombre: nombre del rol expresado en mayúsculas. o descripcion: descripción del rol. Figura 4. Descripción de las tablas Usuario y Rol Fuente: Creada por los autores, 2019. 4.1.1.3 Formulario La descripción de la tabla Formulario es mostrada en la figura 5.  Nombre: formulario.  Descripción: información relacionada con las encuestas, programación docente o cualquier otro tipo formulario creado en el sistema.  Atributos: o idTipoFormulario: identificador del tipo de formulario. o idRol: identifica a que grupo de usuarios va dirigido el formulario. o nombre: nombre del formulario. o descripcion: descripción del formulario. o estatus: los estatus permitidos son ACTIVO o INACTIVO. o fechaCreacion: fecha de la creación del formulario. o idGoogle: identificador asignado por Google para el formulario. o idGoogleSheet: identificador asignado por Google para visualizar los resultados de la encuesta. o link: enlace para acceder al formulario. o linkEditar: enlace para editar el formulario. o linkRespuestas: enlace para visualizar las respuestas del formulario. o idGoogleOwner: identificador asignado por Google al usuario creador del formulario. o nombreGoogleOwner: nombre del usuario proveniente de su cuenta Gmail. o correoGoogleOwner: correo Gmail del usuario. o urlFotoGoogleOwner: enlace para acceder a una foto del usuario creador del formulario. 4.1.1.4 Tipo Formulario La descripción de la tabla Tipo Formulario puede encontrarse en la figura 5.  Nombre: tipoFormulario.  Descripción: permite almacenar los diferentes tipos de formularios que soportará el sistema.  Atributos: o nombre: nombre del tipo de formulario. o descripcion: descripción del tipo de formulario. Figura 5. Descripción de las tablas Formulario, Tipo de Formulario. Fuente: Creada por los autores, 2019. 4.1.1.5 Solicitud La tabla Solicitud tiene relación con la tabla Usuario. Además, está relacionada con la tabla Rol para la implementación de controles de acceso basado en roles para cada solicitud generada en el sistema, ver figura 6.  Nombre: solicitud.  Descripción: información relacionada con cualquier tipo de solicitud creada en el sistema.  Atributos: o idRol: identifica a que grupo de usuarios estará disponible la solicitud. o nombre: nombre de la solicitud. o descripcion: descripción de la solicitud. o plantilla: texto en html correspondiente al contenido de un tipo de solicitud. Contiene espacios en blancos para que puedan ser llenados por el usuario que desea realizar una solicitud. o estatus: los estatus permitidos para una solicitud son ACTIVO o INACTIVO. o dueno: identificador del usuario creador de la solicitud. o fechaCreacion: fecha de la creación de la solicitud. 4.1.1.6 Usuario Solicitud Esta tabla está relaciona con la tabla Solicitud y con la tabla Usuario, ver figura 6.  Nombre: usuario_solicitud.  Descripción: información relacionada con las distintas solicitudes realizadas por los usuarios.  Atributos: o idUsuario: identificador del usuario que realiza la solicitud. o idSolicitud: identificador del tipo de solicitud. o contenido: texto en html que correspondiente al contenido de un tipo de solicitud. Contiene las respuestas dadas por el usuario para el llenado de la solicitud. o estatus: los estatus permitidos para una solicitud de usuario son APROBADO, RECHAZADO, AVALADO, NO AVALADO o EN ESPERA. o fechaIni: fecha de la creación de la solicitud de usuario. o fechaFin: fecha en la cual fue aprobada o rechazada la solicitud del usuario. o notificado: permite identificar si un usuario ha sido notificado una vez que su solicitud ha sido aprobada o rechazada. o observacion: comentario realizado por el usuario responsable de aprobar o rechazar las solicitudes. Figura 6. Descripción de la Solicitud y Usuario Solicitud. Fuente: Creada por los autores, 2019. 4.1.1.7 Usuario Solicitud Notificación Esta tabla, está relacionada con la tabla Usuario y la tabla Usuario Solicitud, ver figura 7.  Nombre: usuario_solicitud_notificacion.  Descripción: permite registrar las notificaciones enviadas a un usuario, en relación con una solicitud que ha sido aprobada o rechazada.  Atributos: o idUsuarioSolicitud: identificador de la solicitud que se desea notificar. o idUsuarioOrigen: identificador del usuario que envía la notificación. o fecha: fecha de la notificación. Figura 7. Descripción de la Tabla Usuario Solicitud Notificación Fuente: Creada por los autores, 2019. 4.1.2 Modelo de Datos La figura 8 permite visualizar el modelo de datos en su conjunto. Resalta el hecho de que la tabla para la gestión de formularios no tiene relación con la tabla usuario. En su lugar, se almacenará información del perfil del usuario ofrecida por Google. Figura 8. Modelo de datos del Sistema Fuente: Creada por los autores, 2019. 4.2 Implementación del Sistema Esta sección describe de manera específica las funcionalidades del sistema de gestión de la Comisión de Docencia de la Escuela de Matemáticas. Se muestran los módulos e interfaces gráficas del sistema junto con algunos diagramas que explican el flujo de información en las diferentes funcionalidades. 4.2.1 Módulos del sistema El sistema de gestión de la Comisión de Docencia, está compuesto de 3 módulos principales, que son: Módulo de Autenticación, Módulo de Perfiles y Usuarios, Módulo de Formularios y Encuestas y Módulo de Solicitudes, los cuales podemos observar en la Figura 9. Figura 9. Módulos Principales de la Aplicación Fuente: Creada por los autores, 2019. 4.2.2 Perfiles de Usuarios  Docente: con este perfil el usuario puede utilizar los recursos que proveen los diferentes módulos del sistema.  Personal Administrativo: El perfil de personal administrativo tiene los mismos privilegios que el perfil de Docente.  Administrador: con este perfil de usuario se pueden realizar las mismas tareas que con el de personal docente, y adicionalmente a través de este perfil, se gestionan el módulo de formularios y el módulo de solicitudes, además cuenta con la capacidad de modificar la información de contacto suministrada por el personal.  Administrador General: el perfil de administrador es el único que tiene la capacidad de asignar y modificar los roles de los usuarios del sistema. 4.2.3 Descripción de la aplicación 4.2.3.1 Estructura de la interfaz gráfica La estructura general de la interfaz gráfica del sistema está compuesta por tres áreas que se pueden observar en la Figura 10. 1. Área de menú principal: en esta área se observan las diferentes direcciones a las que se puede acceder dentro del sistema. El menú principal presenta variaciones dependiendo de cada tipo de usuario. 2. Área de contenido: esta área es en la que se visualizan todos los componentes dinámicos del portal web. Debido a que la tecnología usada para el desarrollo del portal web se basa en páginas dinámicas, cada vez que se navega hacia otra dirección del mismo portal, únicamente cambia el área de contenido, las otras dos áreas permanecen estáticas. 3. Área de cabecera: esta sección del portal contiene el logo y nombre del sistema, el botón para esconder/mostrar el menú principal y la botón desplegable de la información del perfil que se encuentra autenticado. Figura 10. Representación de la estructura gráfica del sistema Fuente: Creada por los autores, 2019. Adicionalmente el portal web es completamente adaptable a todos los dispositivos móviles y de escritorio que cuenten con conexión a internet. El menú principal se esconde o se muestra dependiendo de la resolución del dispositivo. Dentro del área de contenido se adaptan todos los componentes individuales de manera precisa y ordenada, con el fin de poder navegar de manera más sencilla y usable en cualquier dispositivo. (Ver figura 11) Figura 11. Representación del diseño en diferentes dispositivos Fuente: Creada por los autores, 2019. 4.2.3.2 Módulo de Autenticación Esta sección permite a los usuarios autenticarse para acceder al sistema. Dependiendo del tipo de usuario que se suscriba, el sistema le muestra los diferentes módulos a los que puede acceder. Para la autenticación, el sistema se integrará con un repositorio de usuarios de tipo Active Directory administrado por la Escuela de Matemáticas de la UCV. Dicho repositorio, será el encargado de validar las credenciales suministradas por el usuario en la autenticación. De esta manera, los usuarios del Sistema de la Comisión de Docencia podrán iniciar sesión en la aplicación sin la necesidad de realizar un proceso de registro y reutilizando sus credenciales antes adquiridas. La primera vez que un usuario es autenticado exitosamente por el Active Directory, se procederá al registro automático del usuario en la base de datos del Sistema de la Comisión de Docencia. Haciendo del registro, un proceso transparente para el usuario. 4.2.3.3 Módulo de Perfiles y Usuarios En este módulo los usuarios tienen la posibilidad de ingresar y modificar el correo alternativo, ver figura 12. Dicho correo es requerido por el portal, para servir de soporte al correo institucional al momento de enviar cualquier notificación del sistema. Para que el Docente o el Personal Administrativo puedan acceder a los otros módulos que provee el sistema es necesario que primero introduzcan un correo alternativo en su perfil de usuario de lo contrario no podrá utilizar estos servicios. El usuario Administrador General es el único que puede asignar roles a los diferentes usuarios registrados en el sistema. Figura 12. Vista modificación de perfil de Usuario - Administrador General Fuente: Creada por los autores, 2019. 4.2.3.4 Módulo de Formularios El módulo de formularios es la porción del sistema que corresponde a la generación de documentos para la introducción de datos por parte de los usuarios Docentes y Personal Administrativo. Este módulo se basa en la utilización de los recursos que provee la API de Google para crear los llamados Google Formularios desde el sistema, estos formularios quedan registrados y respaldados por el modelo de datos del sistema para su gestión interna. Gestión de formularios En esta sección, el perfil de Administrador es el encargado de realizar el proceso completo de creación, modificación y notificación de un formulario o encuesta en particular, para que posteriormente sea llenado por los docentes y el personal administrativo de la escuela. El primer paso para ingresar a la sección de formularios es realizar el enlace del sistema con una cuenta de Google (Ver figura 13), lo que permite acceder a todos los formularios que tiene creados en la cuenta. Cuando un usuario Administrador realiza el enlace con Google por primera vez, debe permitir al Sistema de Gestión de Procesos Internos de la Comisión de Docencia, para que este pueda crear, modificar y eliminar archivos de su cuenta Google Drive. Figura 13. Vista enlace con Google - Administrador Fuente: Creada por los autores, 2019. Una vez confirmado el enlace con Google, dentro de la sección de formularios, el usuario Administrador podrá visualizar los formularios que tiene actualmente creados en su Google Drive y cuáles de ellos están vinculados al sistema, también podrá ver el listado de todos los formularios de otros usuarios que estén vinculados al sistema. El usuario Administrador tiene la capacidad de editar únicamente sus propios formularios o bien aquellos formularios a los que se les permita ser colaborador en Google Drive, es decir que el dueño del formulario le conceda el privilegio de editarlo. Aquellos formularios en los que el usuario Administrador no tenga los privilegios de colaborador, solo podrá visualizar y contestar las preguntas presentadas. Para otorgar a otro usuario Administrador el privilegio de colaborador, se debe cambiar la configuración para compartir en el editor de formulario de Google Formularios, agregando el correo del usuario como nuevo colaborador. Proceso de creación de un formulario. Lo primero que solicita el sistema para crear un nuevo formulario, es indicarle el nombre, tipo, estatus, a quien va dirigido el formulario y una descripción breve del mismo (Ver figura 14). Figura 14. Vista crear nuevo formulario - Administrador Fuente: Creada por los autores, 2019. Los tipos de formularios que tiene por defecto el sistema son los siguientes: Encuestas, Formularios y Otros. Luego de colocar toda la información se inicia el proceso de creación del formulario. Los formularios pueden ir dirigidos, solo a los Docentes, solo al personal Administrativo, a todos los usuarios, o solo dirigido a los administradores del sistema para la gestión externa del mismo. La Figura 15 presenta el diagrama de secuencia del proceso de creación de un formulario, en este diagrama se hace referencia a un usuario Administrador. Permite generar una perspectiva cronológica de las diferentes peticiones que genera el portal web con el API de Google y los servicios web del formulario y el conjunto de mensajes intercambiados entre ellos para llevar a cabo la funcionalidad descrita. Figura 15. Solución: Diagrama crear formulario Fuente: Creada por los autores, 2019. Luego de crear el formulario, se despliegan otras opciones que permiten continuar con el proceso de gestión. Entre ellas podemos encontrar las siguientes (ver Figura 16): Figura 16. Vista editar formulario - Administrador Fuente: Creada por los autores, 2019. 1. Editar Formulario: este link externo, redirecciona al editor nativo de Google, permitiendo y ampliando las opciones para la generación de preguntas de diferentes tipos, como rangos de fechas, campos de texto, opciones de selección múltiple, entre otros. 2. Ver Repuestas: es un link externo que redirecciona a los reportes y estadísticas de respuesta que se han obtenido en cada formulario. Esta funcionalidad también es de la plataforma nativa de Google. 3. Ver formulario: permite visualizar el formulario, embebido de Google, mientras se realizan modificaciones, en esta misma sección se le permite al Administrador contestar el formulario como lo tendría que hacer cualquier usuario Docente y Personal Administrativo. (ver Figura 17) 4. Enviar notificación: con esta funcionalidad se le envía a todos los Usuarios a quienes van dirigidos el formulario una notificación por correo para acceder al directamente al formulario de Google. 5. Vincular hoja de cálculo (Google Sheets): esta funcionalidad permite crear un vínculo con una hoja de cálculo ya existente en google drive. 6. Eliminar formulario: permite al Administrador borrar el formulario tanto del sistema como de Google. Esta opción es irreversible, una vez eliminados el formulario se pierde la información de ambos recursos. 7. Desvincular formulario: a diferencia de la funcionalidad de “eliminar formulario”, al desvincularlo, este solo se elimina del sistema, pero puede ser reincorporado posteriormente. Figura 17. Vista contestar formulario embebido de Google Formularios - Administrador, Docente, Personal Administrativo Fuente: Creada por los autores, 2019. La figura 18 muestra un diagrama de secuencia relacionado al proceso de modificación de un formulario por un usuario Administrador. Figura 18. Solución: Diagrama modificar formulario Fuente: Creada por los autores, 2019. Proceso de respuesta de formularios por parte de Docentes y Personal Administrativo En esta sección el usuario podrá ver el listado de todos los formularios activos, seleccionar los de su interés y suministrar las respuestas a cada una de las preguntas presentes en el formulario, pero no podrá modificarlo. Es importante destacar que el usuario Administrador adquiere todos los privilegios del Docente o Personal Administrativo referentes a las funcionalidades del sistema, por ende el usuario Administrador también puede contestar el formulario. Existen dos maneras de contestar un formulario; accediendo directamente al sistema como usuario Docente o Personal Administrativo (ver Figura 17), o directamente desde el link que se encuentra en el correo de notificación. 4.2.3.5 Módulo de Solicitudes El módulo de solicitudes consta de dos procesos importantes. El primero es el proceso de construcción del formato de la solicitud, por parte del usuario Administrador; y el segundo es el de solicitud y contestación de los diferentes tipos de formatos por parte del Docente y el Personal Administrativo. El formato de solicitud es una funcionalidad del sistema que le permite al Administrador crear, modificar y eliminar cualquier cantidad y tipo de solicitud en el portal. El administrador deberá rellenar un nombre para la solicitud, una descripción, seleccionar a qué tipo de usuario va dirigido la solicitud, el estatus, si desea que esté activa inmediatamente, y el contenido de la misma. Dentro del formato cabe destacar la sección de contenido, en la cual el administrador debe construir el documento, e insertar las diferentes variables a ser completadas por los usuarios, cuando este esté generando la solicitud. Además la plataforma, al momento de crear el formato, ofrece opciones para varias alteraciones en el estilo de las letras, justificar texto, letras en negrita, uso de viñetas, entre otras. El proceso de inserción de variables se realiza a través de un algoritmo con el que, cada vez que el usuario Administrador inserta o cambia un carácter, esta rutina recorre el contenido carácter por carácter hasta detectar todas las variables (Ver Figura 19). El patrón de detección de las variables se establece mediante el signo de „%‟ al inicio y al final de la variable que se desea insertar, del mismo modo la variable debe seguir los otros parámetros de validación que se muestran en la sección de “Leyenda”, a medida que el portal va detectando la variables validas, las muestra en la sección de “Variables detectadas” (Ver Figura 20). Figura 19. Diagrama de Flujo: Detección de variables en el contenido de la solicitud Fuente: Creada por los autores, 2019. Figura 20. Crear/Editar formato de solicitud - Administrador Fuente: Creada por los autores, 2019. Al Docente y al Personal Administrativo se le permiten realizar N solicitudes entre las que están disponibles. Apenas el Docente o el Personal Administrativo selecciona un tipo de solicitud, el portal detecta las variables del contenido y se las despliega como un formulario. Cuando el usuario va llenando los campos del formulario el documento cambia de manera dinámica en el “Cuerpo de la solicitud” (Ver Figura 21). El Usuario tiene la posibilidad de adjuntar archivos si se lo solicitan en el cuerpo del documento. Luego que el Usuario realice la solicitud se les envía a todos los administradores del sistema un correo para notificarles que se ha creado una nueva solicitud por un Usuario. El Administrador podrá revisar el contenido y los archivos adjuntos para luego modificar el estatus de la solicitud dependiendo de cada caso. Cada solicitud puede definirse con uno de los cuatro posibles estatus; Avalado, No Avalado, Aprobado y Rechazado. Estos estatus han sido detallados en el Capítulo II de este documento. Si el estatus es No Avalado o Rechazado el sistema despliega dinámicamente un campo de motivo que debe rellenar el Administrador de manera obligatoria para poder seguir con el proceso. Luego de que se cambie el estado de la solicitud, se habilita la opción de notificar, esta opción permite infórmale al Usuario la respuesta a su solicitud. Figura 21. Realizar solicitud – Administrador, Docente, Personal Administrativo. Fuente: Creada por los autores, 2019. La figura 22 muestra un diagrama de secuencia que describe el proceso de creación del formato de una solicitud. Figura 22. Solución: Diagrama crear solicitud. Fuente: Creada por los autores, 2019. 4.2.3.6 Casos de Uso Figura 23. Vista diagrama de casos de uso – Nivel 0. Fuente: Creada por los autores, 2019. Figura 24. Vista diagrama de casos de uso – Nivel 1. Fuente: Creada por los autores, 2019. Figura 25. Vista diagrama de casos de uso – Nivel 2. Fuente: Creada por los autores, 2019. Caso de Uso 1. Autenticar Actor Administrador General, Administrador, Docente y Personal Administrativo Descripción Caso de uso que permite a todos los usuarios autenticarse en el sistema. Precondiciones El usuario debe estar registrado en el sistema Postcondiciones El usuario ingresa al sistema con éxito. Flujo básico Todos los Usuarios: 1. Ingresar corroe o nombre de usuario 2. Ingresar contraseña 3. Seleccionar Ingresar Flujos alternos Usuario no registrado: 1. El sistema le informa al usuario que el correo o el nombre de usuario no está registrado en el sistema. Autenticación fallida. Contraseña inválida: 1. El sistema le informa al usuario que la contraseña es inválida. Caso de Uso 1.1. Registrar Usuario Actor Administrador, Docente y Personal Administrativo Descripción Caso de uso que permite registrar un usuario en el sistema. Una vez realizada la autenticación exitosa del usuario contra un repositorio de usuarios externo (LDAP), se verifica la existencia del usuario en el sistema. En caso de que no exista, el sistema procede a registrarlo usando para ello la información básica del usuario proveniente del LDAP. Caso de Uso 2. Gestionar Perfiles Actor Administrador General, Administrador, Docente y Personal Administrativo Descripción Caso de uso que permite al Administrador General y al Administrador administrar los usuarios del sistema. Adicionalmente el Docente, Personal Administrativo, y el Administrador tienen la capacidad de modificar su propio perfil. Caso de Uso 2.1 Modificar Rol de Usuario Actor Administrador General Descripción El Administrador General podrá modificar el Rol del usuario a Docente, Personal Administrativo o Administrador. Precondiciones Autenticarse como Administrador General Postcondiciones Se lleva a cabo la administración exitosa de la información de todos los usuarios Flujo básico 1. Ingresar al sistema 2. Seleccionar Usuarios 3. Elegir al usuario que se desea modificar. Flujos alternos Cancelar: 1. El Usuario selecciona cancelar 2. Se cancela la operación Caso de Uso 2.2 Ingresar Correo alternativo Actor Administrador, Docente y Personal Administrativo Descripción El Administrador, Docente y Personal Administrativo deben ingresar el correo alternativo en el sistema para poder contestar los diferentes formularios y solicitudes que les provee el portal, como también evitar problemas con el envío de las notificaciones al correo institucional. Precondiciones El usuario debe estar autenticado en el sistema Postcondiciones Se lleva a cabo la inserción exitosa del correo alternativo en el registro del usuario. Flujo básico 1. Ingresar al sistema 2. Seleccionar el desplegable del usuario en la cabecera 3. Elegir Perfil Flujos alternos Cancelar: 1. El Usuario selecciona cancelar 2. Se cancela la operación Caso de Uso 2.3 Modificar Correo alternativo Actor Administrador General, Administrador, Docente y Personal Administrativo Descripción Caso de uso que permite a los usuarios del sistema Administrar y modificar el correo alternativo de cada perfil Caso de Uso 3. Gestionar Solicitud Actor Administrador, Docente y Personal Administrativo Descripción Caso de uso que permite gestionar los formatos de solicitudes y revisar las solicitudes de los usuarios. También permite al Docente y al Personal Administrativo pedir solicitudes. Caso de Uso 3.1 Crear Formato de Solicitud Actor Administrador Descripción El administrador deberá ingresar el nombre, el contenido del documento con los diferentes campos que debe contestar el Docente o el Personal Administrativo, la descripción del formato de la solicitud, a quien va dirigido y seleccionar el estatus del formato. Precondiciones 1. Poseer el contenido del formato de la solicitud con los diferentes campos que debe contestar el docente o el personal administrativo. 2. Las variables deben tener los parámetros que se indican en el portal Postcondiciones Se lleva a cabo la creación exitosa de un formato de solicitud Flujo básico 1. Ingresar al sistema 2. Seleccionar Solicitudes en el menú principal 3. Seleccionar Formatos 4. Seleccionar Crear Formato de Solicitud Flujos alternos Cancelar: 1. Seleccionar Cancelar 2. Se cancela la operación Caso de Uso 3.2 Modificar Formato de Solicitud Actor Administrador Descripción Le permite al administrador modificar un formato de solicitud. Caso de Uso 3.3 Eliminar Formato de Solicitud Actor Administrador Descripción Le permite al administrador eliminar un formato de solicitud si y solo si ningún docente ha realizado una solicitud con ese formato. Caso de Uso 3.4 Revisar Solicitud del Usuario Actor Administrador Descripción Le permite al administrador revisar el contenido de la Solicitud Caso de Uso 3.4.1 Visualizar Anexos adjuntos Actor Administrador Descripción Le permite al administrador visualizar los archivos que adjunto el docente al realizar la solicitud. Caso de Uso 3.4.2 Modificar Estado Actor Administrador Descripción Le permite al administrador Aprobar, Rechazar, Avalar o No Avalar la solicitud del Usuario Caso de Uso 3.4.3 Enviar Notificación Actor Administrador Descripción Caso de uso que permite al Administrador enviar notificaciones para comunicar el estatus y el motivo, si aplica, de una solicitud Caso de Uso 3.5 Seleccionar Formato de Solicitud Actor Administrador, Docente y Personal Administrativo Descripción Le permite al Administrador, Docente y Personal Administrativo seleccionar un formato de solicitud entre los que están disponibles. Caso de Uso 3.5.1 Crear Solicitud Actor Administrador, Docente y Personal Administrativo Descripción Los usuarios deberán ingresar obligatoriamente toda la información que se le pide para completar el documento de solicitud. Precondiciones Poseer el la información de los campos que se soliciten. Postcondiciones Se lleva a cabo la creación exitosa de una solicitud Flujo básico 1. Ingresar al sistema 2. Seleccionar Solicitudes en el menú principal 4. Seleccionar el Formato que se desea solicitar Flujos alternos Cancelar: 1. Seleccionar Cancelar 2. Se cancela la operación Caso de Uso 3.5.2 Adjuntar Anexos Actor Administrador, Docente y Personal Administrativo Descripción Le permite al Administrador, Docente y Personal Administrativo adjuntar anexos al seleccionar y crear la solicitud. Caso de Uso 3.6 Ver Estatus de Solicitudes Actor Administrador, Docente y Personal Administrativo Descripción Les permite a los Usuarios visualizar todas las solicitudes que han realizado y su respectivo estatus. Caso de Uso 4. Gestionar Formularios Actor Administrador, Docente y Personal Administrativo Descripción Este caso de uso permite a los Usuarios gestionar los formularios del sistema. Caso de Uso 4.1 Crear Formulario Actor Administrador y API Google Descripción Este caso de uso le permite al Administrador crear un formulario de Google basado en el API de Google, y vincularlo al sistema. El administrador deberá ingresar el Nombre del formulario, Tipo de formulario, a quién va Dirigido, Estatus y Descripción del formulario. Precondiciones El sistema debe estar enlazado con una cuenta de Google Postcondiciones Se lleva a cabo la creación exitosa de un formulario en Google y vinculación al sistema. Flujo básico 1. Ingresar al sistema 2. Seleccionar Formularios en el menú principal 4. Seleccionar Crear Formulario Flujos alternos Cancelar: 1. Seleccionar Cancelar 2. Se cancela la operación Caso de Uso 4.2 Modificar Formulario Actor Administrador y API Google Descripción Este caso de uso le brinda al Administrador realizar ciertas funcionalidades que provee la plataforma de Google Formularios como también la edición de los campos básicos del formulario. Precondiciones 1. El sistema debe estar enlazado con una cuenta de Google 2. Haber creado el formulario y vinculado al sistema. Postcondiciones Se lleva a cabo la creación exitosa de un formulario en Google y vinculado al sistema. Flujo básico 1. Ingresar al sistema 2. Seleccionar Formularios en el menú principal 4. Seleccionar Editar al formulario que se desea modificar Flujos alternos Usuario no es colaborador de cierto Formulario 1. Se le notifica al usuario que debe tener permiso para acceder a esta sección. Cancelar: 1. Seleccionar Cancelar 2. Se cancela la operación Caso de Uso 4.3 Eliminar Formulario Actor Administrador y API Google Descripción Este caso de uso permite al Administrador eliminar un formulario de Google y del Sistema Caso de Uso 4.4 Vincular Formulario Actor Administrador y API Google Descripción Este caso de uso permite al Administrador registrar un formulario que se encuentra en el Drive de la cuenta de Google en el sistema. Caso de Uso 4.5 Desvincular Formulario Actor Administrador y API Google Descripción Este caso de uso permite al Administrador borrar el enlace del formulario de Google del sistema. Caso de Uso 4.6 Enviar Notificación Actor Administrador Descripción Caso de uso que permite tanto al Administrador notificar a todos los usuarios del sistema de la existencia de un nuevo formulario. Caso de Uso 4.7 Ver Formularios disponibles Actor Administrador, Docente y Personal Administrativo Descripción Le permite al Administrador y al Docente ver el listado de los formularios disponibles. Caso de Uso 4.7 Ver Formularios disponibles Actor Administrador, Docente, Personal Administrativo y API Google Descripción Le permite a los Usuarios contestar el formulario embebido de Google Formularios, Resultados El sistema fue desplegado y configurado en un servidor Ubuntu Server administrado por la Escuela de Matemáticas de la UCV. Para tal fin, contamos durante todo el proceso con el apoyo de la Licenciada y Auxiliar Docente María Aguiar. La instalación del frontend del sistema, se realizó a través de la clonación del repositorio privado Git donde se encuentra alojado. Una vez clonado, se procedió a construir el compilado de producción para luego colocarlo en el directorio adecuado del servidor Web Nginx para su correcto despliegue. Para el backend del sistema, se descargó y configuró la versión más reciente de la plataforma Node.js. Luego de haber instalado Node.js en el servidor, se procedió a clonar el backend del sistema que se encuentra alojado en un repositorio privado Git y posteriormente se llevó a cabo la instalación de todas las dependencias de la aplicación Node.js. Fue necesaria la construcción de un servicio del sistema operativo para la ejecución del backend del sistema. De esta forma, se garantiza que cada vez que el servidor se encienda, se realice la ejecución automática del backend sin requerir la ejecución de ningún tipo de comando del sistema operativo. Las tablas correspondientes a la Base de Datos del sistema, fueron generadas a través de la ejecución de un script SQL sobre el Sistema Manejador de Base de Datos MariaDB. Dicho script, se encuentra alojado en el repositorio correspondiente al backend del sistema. Se configuró el firewall del servidor mediante la herramienta iptables que provee el sistema operativo Ubuntu. Fueron concedidos accesos por los siguientes puertos:  Puerto 22, para permitir conectarse al servidor mediante conexiones SSH.  Puerto 80, para permitir el acceso a la aplicación web desplegada en el servidor Nginx.  Puerto 3000, para permitir el consumo de los servicios Web expuestos en Node.js Objetivos Alcanzados  Con el apoyo del Director de la Escuela de Matemáticas prof. Angel Padilla, el Jefe de Departemaneto de la Escuela de Matemáticas prof. Jean Carlos Liendo y la prof. Mariela Castillo encargada de la Comisión de Docencia, fue posible el levantamiento de requerimientos y establecimiento de prioridades para el desarrollo del sistema.  Fueron escogidos frameworks ligeros, de alto rendimiento, extensa documentación y basados en el lenguaje de programación JavaScript para el desarrollo del frontend y backend del sistema.  Fueron diseñadas múltiples interfaces de usuarios que pueden ser visualizadas de forma correcta en diferentes dispositivos con diferentes tamaños de pantalla.  Se diseñó e implementó una base de datos para la gestión de la información del sistema.  Se realizó un integración con los servicios Google Drive y Google Form a través de las API‟s ofrecidas por Google.  La lógica de negocio del sistema fue desarrollada a través de servicios REST, de esta manera, fueron generados componentes de software modulares, reusables e interoperables.  Debido a las tecnologías escogidas, a la independencia entre el frontend y el backend, y a la manera como se estructuró el código fuente, se facilita la incorporación de nuevas funcionalidades y se aumenta la capacidad de escalabilidad del sistema. A continuación se describen las actividades realizadas en conjunto con la prof Mariela Castillo y el prof. Jean Carlos Liendo, como parte de la primera prueba piloto del sistema: 1. Autenticación en el sistema con las credenciales almacenadas en el Active Directory administrado por la Escuela de Matemáticas de la UCV. (Ver figura 26). 2. Autenticación a través del usuario Administrador General, para modificar el rol de la cuenta de la prof. Mariela Castillo de Docente a Administrador. (Ver figura 27). 3. Vinculación de la cuenta Google de la prof. Mariela Castillo con el sistema. (Ver figura 28). 4. Creación de un nuevo formato de solicitud de prueba. (Ver figura 29). 5. Autenticación y registro del correo alternativo Gmail de la cuenta perteneciente al prof. Jean Carlos Liendo. (Ver figura 30). 6. Creación de solicitud, perteneciente al formato de solicitud creado previamente en el paso 4. (Ver figura 31). 7. Vinculación con el sistema, de un formulario personal perteneciente a la cuenta Gmail del prof. Jean Carlos Liendo y envió de notificación a todos los usuarios del sistema del nuevo formulario disponible. (Ver figura 32). 8. Recepción de la notificación de nuevo formulario disponible. (Ver figura 33) 9. Visualización a través del sistema del Google Formulario vinculado en el paso 7. (Ver figura 34). Figura 26. Vista de Autenticación del Sistema. Fuente: Creada por los autores, 2019. Figura 27. Vista de edición de perfil de usuario - Administrador General Fuente: Creada por los autores, 2019. Figura 28. Vista de enlace con Google. Fuente: Creada por los autores, 2019. Figura 29. Vista creación de un nuevo formato de solicitud. Fuente: Creada por los autores, 2019. Figura 30. Vista de modificación de perfil de usuario. Fuente: Creada por los autores, 2019. Figura 31. Creación de una nueva solicitud. Fuente: Creada por los autores, 2019. Figura 32. Vinculación y registro de formulario. Fuente: Creada por los autores, 2019. Figura 33. Recepción de notificación de la creación de un nuevo formulario. Fuente: Creada por los autores, 2019. Figura 34. Visualización de formulario Google embebido. Fuente: Creada por los autores, 2019. Conclusiones Hoy más que nunca existe una gran cantidad de tecnologías y herramientas extraordinarias que están al alcance de todos y que podemos utilizar para beneficiarnos con sus bondades. Apoyándonos en la tecnología, tenemos la oportunidad de transformar procesos complejos y manuales, en procesos automatizados compuestos de actividades más sencillas de realizar para las personas. Con el objetivo de simplificar, automatizar y mejorar los procesos ejecutados por la Comisión de Docencia de la Escuela de Matemáticas de la Universidad Central de Venezuela, se diseñó y desarrolló una aplicación Web basada en tecnologías de código abierto, estándares y marcos de trabajo reconocidos. La selección de las tecnologías y herramientas escogidas, fue producto del análisis y estudios comparativos entre diferentes opciones de gran relevancia en la actualidad. Entre las tecnologías seleccionadas del lado del cliente se tienen: Angular y Bootstrap. Para el lado del servidor se utilizó: Node.js, Express y MySQL como sistema manejador de base de datos. La aplicación desarrollada está basada en una arquitectura orientada a servicios, lo que ha permitido la generación de componentes de software modulares y reusables. La implementación de este tipo de arquitectura fue determinante para poder separar el frontend del backend, de tal manera, que pueden ser desplegados de forma independiente en diferentes servidores. Este tipo de soluciones mejoran las posibilidades de escalamiento, así como también, facilitan el mantenimiento y extensión del sistema. La integración realizada con la API de Google para la gestión de formularios, permite a los usuarios la creación y administración de encuestas a través de un servicio conocido y fácil de usar como Google Forms. Recomendaciones Se recomienda, para actualizaciones posteriores, realizar un sistema que permita al administrador ver cuáles de los usuarios respondieron a las encuestas enviadas, ya que esta funcionalidad no es posible implementarla en la plataforma utilizada (Google Form) en el portal actual. Del mismo modo, se sugiere la creación de un módulo de comunicaciones a través de correos electrónicos masivos, donde el administrador pueda crear plantillas o notificaciones, para luego enviarlas a los usuarios de su elección que estén registrados en el portal. La Comisión de Docencia realiza cada semestre encuestas dirigidas a docentes y preparadores, sin embargo estos últimos no tiene acceso al sistema, ya que ellos no están en la base de datos actual en la cual está vinculado el portal, por lo que se recomienda, la creación de un módulo de registro para los preparadores para que puedan acceder al sistema y también puedan contestar las encuestas y formularios dirigidos especialmente a ellos. Por último, se propone la creación de un módulo de publicaciones, para que los Docentes puedan registrar sus avances en las diferentes investigaciones y proyectos que realizan durante el año, y que al mismo tiempo le permita a la Comisión de Investigación acceder a estas publicaciones para su gestión. Referencias Bibliográficas y Digitales [1]. Git (2019). Acerca del control de versiones. Sitio Web: http://git-scm.com/book/es/v1/Empezando-Acerca-del-control-de-versiones [2]. Angular (2019). ¿Qué es Angular?: https://angular.io/docs [3]. Campus MVP. Novedades de Angular 7 (2019): https://www.campusmvp.es/recursos/post/angular-7-ya-esta-aqui-y-estas-son-sus- novedades.aspx [4]. Booth D., Haas H. (et al), (2004), Arquitectura de servicios web (Web Services Architecture) https://www.w3.org/TR/ws-arch/#whatis [5]. Box D., Ehnebuske D., Kakivaya G. (et al), (2000). Protocolo simple de acceso a objetos (SOAP) 1.1 (Simple Object Access Protocol (SOAP) 1.1) https://www.w3.org/TR/2000/NOTE-SOAP-20000508/ [6]. Chappell D., (2004) Enterprise Service Bus. O'Reilly. Estados Unidos de América. [7]. Internet Engineering Task Force [IETF] (1999). https://tools.ietf.org/html/rfc2616 [8]. Krafzig D., Banke K., Slama D., (2004), Enterprise SOA Service-Oriented Arcitecture: Best Pratices. [9]. Maréchaux J., (2006) Combining Service-Oriented Architecture and EventDriven Architecture using an Enterprise Service Bus. https://www.ibm.com/developerworks/library/ws-soa-eda-esb/index.html [10]. Schulte R., (2002) Predicts 2003 Enterprise Services Buses Emerge. http://www.bus.umich.edu/KresgePublic/Journals/Gartner/research/111900/111977/1119 77.pdf [11]. Silberschatz A., Korth H., Sudarshan S., (2002). Fundamentos de base de Datos. Mc Graw Hill. Madrid. [12]. The Open Group Architecture Framework. http://pubs.opengroup.org/architecture/togaf9- doc/arch/ [13]. Cantelon M., Harter M., Holowaychuk T.J., Rajlich N., (2014), Node.js in Action. [14]. Stowe Michael, (2015), Undisturbed REST: A Guide to Designing the Perfect API. [15]. Google Drive. Como usar Drive (2019): https://www.google.com/intl/es_ALL/drive/ http://git-scm.com/book/es/v1/Empezando-Acerca-del-control-de-versiones https://angular.io/docs https://www.campusmvp.es/recursos/post/angular-7-ya-esta-aqui-y-estas-son-sus-novedades.aspx https://www.campusmvp.es/recursos/post/angular-7-ya-esta-aqui-y-estas-son-sus-novedades.aspx https://www.w3.org/TR/ws-arch/#whatis https://www.w3.org/TR/2000/NOTE-SOAP-20000508/ https://tools.ietf.org/html/rfc2616 https://www.ibm.com/developerworks/library/ws-soa-eda-esb/index.html http://www.bus.umich.edu/KresgePublic/Journals/Gartner/research/111900/111977/111977.pdf http://www.bus.umich.edu/KresgePublic/Journals/Gartner/research/111900/111977/111977.pdf http://pubs.opengroup.org/architecture/togaf9-doc/arch/ http://pubs.opengroup.org/architecture/togaf9-doc/arch/ https://www.google.com/intl/es_ALL/drive/ [16]. Google Drive. (2019). Introducción al API de Google Drive V3: https://developers.google.com/drive/api/v3/about-sdk [17]. Formularios Google. (2016). Una herramienta estrella de Google: https://blogs.upm.es/observatoriogate/2016/04/21/formularios-google-una-herramienta- estrella-de-google/ [18]. Wikibooks. (2018). MariaDB: https://en.wikibooks.org/wiki/MariaDB [19]. Maria DB. (2019). Sobre el Software Maria DB: https://mariadb.com/kb/en/library/about- mariadb-software/ [20]. Soporte Tecnico de Microsoft. (2019). Introducción a Active Directory: https://support.microsoft.com/es-ve/help/196464 . https://developers.google.com/drive/api/v3/about-sdk https://blogs.upm.es/observatoriogate/2016/04/21/formularios-google-una-herramienta-estrella-de-google/ https://blogs.upm.es/observatoriogate/2016/04/21/formularios-google-una-herramienta-estrella-de-google/ https://en.wikibooks.org/wiki/MariaDB https://mariadb.com/kb/en/library/about-mariadb-software/ https://mariadb.com/kb/en/library/about-mariadb-software/ https://support.microsoft.com/es-ve/help/196464