i UNIVERSIDAD CENTRAL DE VENEZUELA FACULTAD DE CIENCIAS ESCUELA DE COMPUTACIÓN CENTRO DE INVESTIGACIÓN EN SISTEMAS DE INFORMACIÓN APLICACIÓN MÓVIL PARA LA VERIFICACIÓN DEL CÁLCULO DE UNIDADES MONITOR EN TRATAMIENTOS DE RADIOCIRUGÍA INTRACRANEAL Trabajo Especial de Grado Presentado ante la ilustre Universidad Central de Venezuela Por el Bachiller Elvis D. Coa Sotillo C.I. 20.604.552 Para optar al título de Licenciado en Computación Prof. Franklin J. Sandoval S. ii Octubre de 2016 iii Dedicatoria Esta tesis va dedicada a mis padres, familiares, amigos y mi hijo. Todos contribuyeron en diferentes aspectos de mi vida y me impulsaron a ser mejor, seguir adelante. Son modelo de calidad de persona y espero que sigan siendo parte de mi vida. iv Agradecimiento Quiero agradecer a mi casa de estudio, la Universidad Central de Venezuela, lugar en el que tuve la valiosa oportunidad de formarme humana y profesionalmente. A la facultad de ciencias por ser el espacio donde ocurrió gran parte del proceso de mi educación universitaria. Agradezco a los profesores encargados de dar cátedra, por tener la paciencia, sacrificio, voluntad y dedicación de impartir conocimiento a nosotros, los estudiantes, futuros colegas. Al personal de limpieza y mantenimiento, pues todas las mañanas recibía un salón adecuado, limpio y listo para estudiar. Quiero agradecer a mis compañeros y futuros compañeros de trabajo, que formaron parte de mi día a día. Agradezco a la empresa Servicios RADFIS C.A. y a todos los involucrados por todo el apoyo durante la producción de este trabajo especial de grado. A mi tutor, el Prof. Franklin Sandoval, por estar disponible y dispuesto en cualquier momento para aclarar mis dudas y corregirme, y por su incansable apoyo y sinceridad en todo momento. v UNIVERSIDAD CENTRAL DE VENEZUELA FACULTAD DE CIENCIAS ESCUELA DE COMPUTACIÓN CENTRO DE INVESTIGACIÓN EN SISTEMAS DE INFORMACIÓN Aplicación móvil para la verificación del cálculo de unidades monitor en tratamientos de radiocirugía intracraneal Tutor: Prof. Franklin Sandoval. Autor: Elvis D. Coa Sotillo C.I. 20.604.552 RESUMEN Los dispositivos móviles constituyen cada vez más una realidad que ofrece al usuario, en un mismo y reducido aparato, funciones de comunicación y procesamiento de datos que van mucho más allá de las simples llamadas telefónicas o la ejecución de aplicaciones básicas. Gracias a esto vivimos en una era donde los dispositivos móviles se han vuelto parte esencial de la vida diaria, donde existen infinidades de áreas en donde una aplicación móvil facilita los métodos de completar una asignación. Áreas nuevas que se están explorando con la evolución de la tecnología y las capacidades de estos dispositivos, con el fin de lograr una mejora productiva (realizar una tarea en un menor tiempo y usando menos recursos) de una sociedad o país. En el presente trabajo especial de grado, se presenta el desarrollo de una aplicación móvil que permite realizar cálculos de tiempos de tratamientos en radioterapia independiente al TPS (Treatment planning system) para la verificación de los tratamientos de radiocirugía intracraneal. Es una aplicación nativa diseñada bajo el sistema operativo Android, desarrollada con el IDE Android Studio, incluye funcionalidades como lectura y escritura de archivos PDF y la implementación de un OCR (Reconocimiento óptico de caracteres) que facilita la operación de carga de las variables para los cálculos principales de la aplicación. Es importante destacar que el MU QC SRS calcula la verificación solamente para el propósito de confirmación de las unidades de monitor primarias y que no se destina a la prescripción para tratamiento del cáncer intracraneal. Palabras Claves: Aplicaciones móviles, tecnologías, metodologías, OCR, radiocirugía, Servicios REST. vi INDICE Introducción ......................................................................................................... 1 CAPÍTULO I ....................................................................................................... 3 1.1 Planteamiento del problema. ................................................................ 3 1.2 Objetivos del Trabajo Especial de Grado ................................................ 5 1.2.1 Objetivo General .............................................................................. 5 1.2.2 Objetivos Específicos ....................................................................... 5 1.3 Justificación ............................................................................................. 6 1.4 Solución Propuesta. ................................................................................. 6 CAPÍTULO II ...................................................................................................... 8 2.1 Conceptualizando la Radioterapia ........................................................... 8 2.1.1 Radiocirugía ..................................................................................... 9 2.1.2 Radiocirugía Estereotáctica .............................................................. 9 2.1.3 Glosario de términos Básico. ......................................................... 10 2.2 Sistemas de información ....................................................................... 12 2.3 Dispositivos móviles ............................................................................. 13 2.3.1 Sistemas operativos móviles .......................................................... 13 2.3.2 Aplicación Móvil. ........................................................................... 14 2.3.3 Tipos de aplicaciones móviles ........................................................ 15 2.3.4 Arquitectura Android ..................................................................... 16 2.3.5 Android Studio ............................................................................... 16 2.3.6 Material Design .............................................................................. 18 CAPÍTULO III .................................................................................................. 19 MARCO METODOLOGICO ........................................................................... 19 vii 3.1 Metodologías Ágiles ............................................................................. 19 3.2. Programación Extrema (Extreme Programming) ................................. 19 3.2.1 Prácticas ......................................................................................... 20 3.2.2 Ciclo de vida ................................................................................... 25 3.2.3 Actividades ..................................................................................... 26 CAPÍTULO IV .................................................................................................. 29 MARCO APLICATIVO .................................................................................... 29 4.1 Iteración 0 .............................................................................................. 32 4.1.1 Planificación ................................................................................... 32 4.1.2 Diseño ............................................................................................. 34 4.2 Iteración 1 .............................................................................................. 46 4.2.1 Planificación ................................................................................... 46 4.2.2 Diseño ............................................................................................. 46 4.2.3 Codificación ................................................................................... 48 4.2.4 Pruebas ........................................................................................... 49 4.3 Iteración 2 .............................................................................................. 51 4.3.1 Planificación ................................................................................... 52 4.3.2 Diseño ............................................................................................. 52 4.3.2 Codificación ................................................................................... 54 4.4 Iteración 3 .............................................................................................. 55 4.4.1 Planificación ................................................................................... 55 4.4.2 Diseño ............................................................................................. 55 4.4.3 Codificación ................................................................................... 58 4.4.4 Pruebas ........................................................................................... 63 viii 4.5 Iteración 4 .............................................................................................. 87 4.5.1 Planificación ................................................................................... 87 4.5.2 Diseño ............................................................................................. 88 4.5.3 Codificación ................................................................................... 91 4.5.4 Pruebas ........................................................................................... 91 4.6 Iteración 5 ............................................................................................ 101 4.6.1 Planificación ................................................................................. 102 4.6.2 Diseño ........................................................................................... 102 4.6.3 Codificación ................................................................................. 106 CAPÍTULO V .................................................................................................. 109 MARCO DE RESULTADOS ......................................................................... 109 Descripción de la aplicación ............................................................................ 109 Módulo Ingresar datos generales ..................................................................... 111 Ingresar los datos del paciente de forma manual ...................................... 112 Ingresar los datos del paciente por un documento en formato PDF .......... 112 Ingresar los datos del paciente a través de una imagen en formato JPG ... 115 Módulo Ingresar Arcos .................................................................................... 116 Calcular MU .............................................................................................. 116 Generar Reporte ........................................................................................ 118 Módulo Calculation Formalism ....................................................................... 121 Módulo Tolerance ............................................................................................ 122 Módulo My own Data ...................................................................................... 122 Módulo Who we are?....................................................................................... 122 Módulo Contact us ........................................................................................... 122 ix CONCLUSIONES ........................................................................................... 123 RECOMENDACIONES ................................................................................. 125 Referencias Bibliográficas ............................................................................... 126 x ÍNDICE DE FIGURAS Figura 1: Ciclo de vida XP……………………………………………………… 26 Figura 2: Metáfora de la aplicación móvil………………………………………. 33 Figura 3: Descripción de los actores y su interacción con el sistema Nivel 0…... 35 Figura 4: Descripción de los actores y su interacción con el sistema Nivel 1....... 36 Figura 5: Refinamiento Casos de Uso principales y sus relaciones Nivel 2 .......... 40 Figura 6: Prototipo de interfaz de la pantalla “Datos Generales”………………. 46 Figura 7: Prototipo de interfaz menú de navegación………………………….... 47 Figura 8: Interfaz campos vacíos datos generales………………………………. 50 Figura 9: Prototipo de interfaz “Insertar arcos”…………..…………………….. 52 Figura 10: Prototipo de interfaz “Generar Reporte/Calcular MU”. …………… 53 Figura 11: Prototipo de interfaz “Generar Reporte”. …………………………… 55 Figura 12: Prototipo Interfaz Generar Reporte/Calcular MU datos incompletos.. 56 Figura 13: Prototipo de interfaz “Calcular MU”. ………………………………. 57 Figura 14: Clase Output Factor. ………………………………………………... 58 Figura 15: Clase TMR. …………………………………………………………. 59 Figura 16: Clase Six X Factor…………………………………………………. 60 Figura 17: Ingreso de datos generales y arcos del paciente MU QC SRS– Paciente 1………………………………………………………………………………… 64 Figura 18: Resultados de cálculo de MU independiente - Paciente 1. ……….. 65 Figura 19: Hoja de cálculo de MU independiente – Paciente 1. ……………… 66 Figura 20: Reporte generado – Paciente 1. …………………………………… 66 Figura 21: Ingreso de datos generales y arcos del paciente MU QC SRS – Paciente 2. ……………………………………………………………………………….. 68 Figura 22: Resultados de cálculo de MU independiente – Paciente 2. ……… 69 Figura 23: Hoja de cálculo de MU independiente A – Paciente 2. …………. 69 Figura 24: Hoja de cálculo de MU independiente B – Paciente 2. …………. 70 Figura 25: Reporte Paciente 2 parámetros de entrada. ………………......…. 70 Figura 26: Reporte Paciente 2 valores calculados. …………………………. 71 Figura 27: Ingreso de datos generales y arcos del paciente MU QC SRS – Paciente 3. …………………............................................................................................ 73 Figura 28: Resultados de cálculo de MU independiente – Paciente 3.……... 74 Figura 29: Hoja de cálculo de MU independiente A – Paciente 3………..... 75 Figura 30: Hoja de cálculo de MU independiente B – Paciente 3…………… 75 Figura 31: Reporte Paciente 3 parámetros de entrada………………………… 76 Figura 32: Reporte Paciente 3 valores calculados…………………………...... 76 Figura 33: Ingreso de datos generales y arcos del paciente MU QC SRS – Paciente 4……………………………………………………………………………….. 78 Figura 34: Resultados de cálculo de MU independiente – Paciente 4. ……….. 79 Figura 35: Hoja de cálculo de MU independiente A – Paciente 4. …………… 79 Figura 36: Hoja de cálculo de MU independiente B – Paciente 4. …………… 80 Figura 37: Reporte Paciente 4 parámetros de entrada. ………………………. 80 Figura 38: Reporte Paciente 4 valores calculados. ……………………………. 81 xi Figura 39: Ingreso de datos generales y arcos del paciente MU QC SRS – Paciente 5. ……………………………………………………………………….………….. 83 Figura 40: Resultados de cálculo de MU independiente – Paciente 5. ………… 84 Figura 41: Hoja de cálculo de MU independiente A – Paciente 5. …………….. 84 Figura 42: Hoja de cálculo de MU independiente B – Paciente 5………………. 85 Figura 43: Reporte Paciente 5 parámetros de entrada. …………………………. 85 Figura 44: Reporte Paciente 5 valores calculados. ……………………………… 86 Figura 45: Prototipo de interfaz seleccionar documento PDF……………………. 88 Figura 46: Prototipo de interfaz seleccionar columna OCR. ……………………. 89 Figura 47: Prototipo de interfaz cortar imagen OCR……………………………. 89 Figura 48: PDF plan de tratamiento del paciente Paciente 1– raw A.…………… 92 Figura 49: PDF plan de tratamiento del paciente Paciente 1 – raw B…………… 93 Figura 50: PDF plan de tratamiento del paciente Paciente 1 – resultado………… 93 Figura 51: PDF plan de tratamiento del paciente Paciente 2 – raw A……………. 94 Figura 52: PDF plan de tratamiento del paciente Paciente 2 – raw B……………. 95 Figura 53: PDF plan de tratamiento del paciente Paciente 2 – resultado………… 96 Figura 54: OCR plan de tratamiento del paciente………………………………… 97 Figura 55: OCR log Cone. ……………………………………………………… 98 Figura 56: OCR log Depth. …………………………………………………….. 99 Figura 57: OCR log Weight Factor. …………………………………………….. 99 Figura 58: OCR log MU TPS. …………………………………………………. 100 Figura 59: Prototipo de interfaz Calculation Formalism e interfaz Tolerance… 102 Figura 60: Prototipo de interfaz My own data………………………………... 103 Figura 61: Prototipo de interfaz Who we are? ………………………………….. 104 Figura 62: Prototipo de interfaz Contact us. …………………………………… 104 Figura 63: Interfaz Interfaz My own data y Tolerance.…………………………. 105 Figura 64: Interfaz Calculation Formalism e Interfaz Contact.………………..... 106 Figura 65: Interfaz Who we are? ……………………………………………….. 107 Figura 65. Captura de Pantalla MU QC SRS……………………………………………… 110 Figura 66. Reporte Generado por MU QC SRS………………………………… 111 Figura 67. Ingresar a Insertar arcos……………………………………………… 113 Figura 68. Datos generales incompletos………………………………………… 114 Figura 69. Ingresar los datos del paciente por un documento en formato PDF…… 114 Figura 70. Ingresar los datos del paciente por un documento en formato JPG…… 115 Figura 71. Cortar columnas del plan de tratamiento del paciente………………… 116 Figura 72. Metáfora calculadora………………………………………………….. 117 Figura 73. Campos vacíos Crear Reporte/Calcular MU………………………….. 117 Figura 74. Calcular MU…………………………………………………………… 118 Figura 75. Crear Reporte………………………………………………………….. 119 Figura 76. Dialog Create Report………………………………………………….. 120 Figura 77. Reporte………………………………………………………………… 121 xii ÍNDICE DE TABLAS Tabla 1 - Sistemas operativos más usados en Venezuela………………………... 13 Tabla 2- Diferencias entre metodologías ágiles y tradicionales………………….. 19 Tabla 3: Formato de historias de usuario………………………………………… 29 Tabla 4: Caso de Uso: Calculation Formalism……,…………………………..... 36 Tabla 5: Caso de Uso: Ingresar datos generales…………………………………. 37 Tabla 6: Caso de Uso: Tolerance……………………………………………… 38 Tabla 7: Caso de Uso: My Own Data………………………………………….. 38 Tabla 8: Caso de Uso: Who we are.…………………………………………….. 39 Tabla 9: Caso de Uso: Contact. ……………………………………………… 39 Tabla 10: Caso de Uso: Leer DF………………………………………………. 41 Tabla 11: Caso de Uso: Aplicar CR…………………………………………… 42 Tabla 12: Caso de Uso: Ingresar arcos………………………………………... 43 Tabla 13: Caso de Uso: Generar Reportes……………………………………… 43 Tabla 14: Caso de Uso: Calcular MU………………………………………… 44 Tabla 15: Caso de Uso: Nuevo paciente……………………………………… 44 Tabla 16: Historia de usuario – Iteración 1…………………………………… 45 Tabla 17: Pruebas– Iteración 1………………………………………………… 49 Tabla 18: Historia de usuario – Iteración 2…………………………………… 51 Tabla 19: Historia de usuario – Iteración 3. …………………………………….. 54 Tabla 20: Pruebas– Iteración 3………………………………………………… 62 Tabla 21: Datos Generales – Paciente 1……………………………………..…. 63 Tabla 22: Datos Generales – Paciente 2………………………………….……. 67 Tabla 23: Datos Generales – Paciente 3………………………………….…..... 72 Tabla 24: Datos Generales – Paciente 4……………………………………….. 77 Tabla 25: Datos Generales – Paciente 5……………………………………….. 82 Tabla 26: Historia de usuario – Iteración 4………………………………………. 87 Tabla 27: Pruebas– Iteración 4…………………………………………………… 91 Tabla 28: Historia de usuario – Iteración 5…………………………………… 101 1 Introducción A raíz del auge de los Smartphone en el año 2007 cientos de Apps orientadas a diferentes áreas empezaron a emerger cambiando la forma de interactuar con el medio, haciendo nuestra vida cotidiana más fácil ya que estas aplicaciones adquirían características que posee un móvil (portabilidad, acceso a Internet y poca carga en memoria). Una de las áreas que presenta un gran reto en las aplicaciones móviles es el área de Salud, debido a la complejidad de los procesos. La radiocirugía es una técnica quirúrgica empleada en el tratamiento de metástasis y tumores basadas en la aplicación de radiaciones de alta precisión. Es un proceso complejo el cual presenta un gran reto para el equipo de trabajo que le toque emplearlo, ya que una dosis mal empleada puede no curarlo, así como también dañar a un paciente de gravedad. Como es un proceso tan delicado es necesario que pase por un riguroso sistema de control de calidad, una forma de verificar si las dosis de tratamiento que se le van a aplicar al paciente son correctas es a través de un cálculo independiente de unidades monitor (MU) por sus siglas en ingles “Monitor Units”. Este proceso de verificación es un proceso laborioso y puede consumir una gran cantidad de tiempo si no se poseen las herramientas apropiadas. Hasta el momento no existe ninguna aplicación móvil que ayude con el proceso de verificación de cálculo de MU para el caso de radiocirugía. En vista de lo antes expuesto, el siguiente Trabajo Especial de Grado se describe metodologías utilizadas para implementar una aplicación móvil que permite la verificación del plan de tratamiento de un paciente a través del cálculo independiente de MU. Para concretar lo planteado y cumplir con el objetivo de este trabajo especial de grado se dio una visión de cada uno de los capítulos, presentados a lo largo de este documento, el cual se ha estructurado de la siguiente manera: 2 Capítulo 1. Se plantea el contexto de investigación y la descripción del planteamiento del problema. También se describe la justificación de la investigación, objetivo general, objetivos específicos, alcance y propuesta de la solución. Capítulo 2. Este define el marco conceptual de esta investigación donde podremos encontrar los conceptos bases referentes a dispositivos móviles, aplicaciones móviles, OCR, radiocirugía y tecnologías de desarrollo. Capítulo 3. En este capítulo se desplegó la información que llevan de la mano las metodologías para desarrollos. En el cual se definirá esta metodología como propia de esta investigación y su implementación en el proyecto final. Capítulo 4. En el siguiente capítulo se muestra el planteamiento de la propuesta para el trabajo especial de grado, dentro del marco aplicativo de la metodología utilizada en el desarrollo de la solución. Finalmente se plantearán las conclusiones y recomendaciones de la investigación y las referencias bibliográficas 3 CAPÍTULO I PLANTEAMIENTO DEL PROBLEMA El capítulo que se presenta a continuación expone el contexto del problema. Se define la necesidad de tener una aplicación móvil que permita realizar la verificación de la calidad para el tratamiento de radiocirugía intracraneal, con acelerador lineal y conos. 1.1 Planteamiento del problema. En el 2016, el uso de dispositivos móviles para resolver problemas importantes se extiende a todas las áreas. Pueden ser de índole social, económica, de ingeniería, de ciencia básica aplicada, medicina, entre otras. Con un manejo adecuado de estas aplicaciones móvil e información se pueden realizar cálculos y simulaciones de modelos reales, para estudiarlos y resolver problemas teóricos o de aplicación en un campo de la ciencia especifico. En el caso de los procedimientos de Radiocirugía, debido a las altas dosis y a los altos volúmenes pequeños a tratar, es de vital importancia disponer de un procedimiento expedito de verificación independiente de cálculo de unidades de monitor como parte de la rutina, para así poder detectar errores antes de que el paciente con cáncer sea tratado. En este contexto, en la radioterapia la utilización de protocolos que garantice la calidad y aseguren que se entregue con exactitud la dosis de radiación prescrita por el médico en el lugar preciso. De acuerdo con el Organismo Internacional de Energía Atómica “IAEA” por su sigla en inglés International Atomic Energy Agency (2000), dentro de estos “protocolos de garantía de calidad de un tratamiento de radioterapia, incluyendo la planificación y el tratamiento, donde se debe asegurar el adecuado funcionamiento del planificador, verificando la fiel importación de imágenes y densidades 4 electrónicas que proveen el tomógrafo, la exactitud de los cálculos de dosis y exportación conecta de los parámetros de tratamiento” (p.2),. Asimismo, se “debe realizar controles mecánicos en los equipos de tratamiento, que aseguren un adecuado posicionamiento del paciente y de los haces de irradiación en la entrega del tratamiento, y un control dosimétrico de cada uno de los tipos de radiación y energías que entrega el equipo” (p.3). En Venezuela, la empresa Servicios RADFIS C.A., es encargada de ofrecer soluciones en el campo de la garantía de calidad en radioterapia, pero actualmente su proceso de verificación de cálculo de Unidades Monitor consume mucho tiempo útil en el trabajo, tras recibir la indicación clínica por parte del médico radioterapeuta de lo que se desea tratar y lo que se desea proteger, así como de la dosis de radiación correspondiente al tipo de tumor en cuestión. La empresa procede a realizar un cálculo del tiempo de tratamiento mediante un sistema de cálculo proporcionado por el mismo fabricante del equipo de tratamiento. Existen múltiples recomendaciones internacionales que sugieren que debe realizarse un segundo calculo con sistemas independientes que garanticen la adecuada exactitud del cálculo primario. En la actualidad la empresa Servicios RADFIS C.A. realiza este cálculo independiente mediante una hoja Excel desarrollada por ellos mismos, este proceso de verificación del cálculo primario del plan de tratamiento que se le va a aplicar al paciente, consume mucho tiempo, en especial cuando los datos del plan son extensos (mayoría de los casos) y durante ese periodo el paciente se encuentra en el cuarto donde se va a aplicar el tratamiento esperando. Este proceso además de las complicaciones mencionadas antes posee otras más como: El equipo donde se realiza el tratamiento de radiocirugía no está ubicado en el mismo lugar donde se encuentra el equipo de verificación lo que requiere un desplazamiento de la persona que realiza la verificación, la máquina que emite el plan de tratamiento del paciente no se le puede instalar ningún dispositivo externo debido a que la maquina puede quedar expuesta a virus o algún software que dañe la máquina. Desarrollar una aplicación web no es viable porque no se puede exponer la máquina, una aplicación de escritorio 5 no facilitaría la portabilidad a pesar de ser más segura que una aplicación web, una aplicación móvil fue la decisión que se ajustaba más a las necesidades de la empresa por la portabilidad y la seguridad que ofrecen este tipo de software. Una vez expuesto todo el concepto pertinente a dicho problema se generan las siguientes interrogantes de investigación: ¿Cómo generar una solución bajo el ambiente Android que permita realizar el cálculo de MU independiente TPS (Treatment-planning System) para el tratamiento de radiocirugía intracraneal, con acelerador lineal y conos? ¿Se pueden incorporar tecnología OCR que se encargue de tomar los datos del plan de tratamiento a través de una imagen y generación de reportes que agilicen los resultados? 1.2 Objetivos del Trabajo Especial de Grado 1.2.1 Objetivo General Desarrollar una aplicación móvil nativa para la verificación MU QC SRS (Monitor Units Quality Control Stereotactic Radiosurgery) bajo el ambiente Android que permita la comprobación del cálculo de las unidades de monitor independiente TPS (Treatment-planning System) para el tratamiento de radiocirugía intracraneal, con acelerador lineal y conos. 1.2.2 Objetivos Específicos Definir requerimientos funcionales y no funcionales necesarios de la aplicación móvil que permita la verificación del cálculo de unidades de monitor independiente para el tratamiento de cirugía intracraneal. Elaborar modelos y diagramas que se ajusten a la aplicación móvil. Diseñar las interfaces gráficas y módulos para la aplicación móvil de acuerdo a los requerimientos levantados. Realizar las pruebas pertinentes a la aplicación móvil para la verificación del cumplimiento de los requerimientos. 6 1.3 Justificación Los avances tecnológicos han permitido una mejor utilización de los recursos disponibles en diversas áreas. Con la masificación de los Smartphone se han desarrollado numerosas aplicaciones móviles para distintos fines. Lo más interesante de estas aplicaciones es que para poder utilizarlas solo se necesita un dispositivo móvil con acceso a internet por lo que pueden ser utilizadas desde la comodidad del hogar, la oficina de trabajo, la universidad, centros comerciales, restaurantes, entre otros. Así mismo, esta solución busca agilizar el proceso de verificación del plan de tratamiento de un paciente con el fin de garantizar de que las dosis que se le van a suministrar al paciente son las correctas evitando dañar a este de gravedad y que el equipo de trabajo de Servicios RADFIS C.A. pueda realizar la verificación de los cálculos de tratamiento de manera eficiente en tiempos más rápidos. Esta aplicación no solo va a apoyar al equipo de trabajo en su proceso de cálculo de MU independiente, también lograra que los pacientes puedan recibir su tratamiento en un menor tiempo. MU QC SRS es una aplicación que se adentra en la rama de la salud, no solo la salud también une 3 ramas de la ciencia y estas son: Medicina, Física y Computación. 1.4 Solución Propuesta. El trabajo de investigación consiste en el desarrollo de una aplicación móvil nativa MU QC SRS (Monitor Units Quality Control Stereotactic Radiosurgery) bajo el ambiente Android que permita la comprobación de la calidad en el cálculo primario para el tratamiento de radiocirugía intracraneal, con acelerador lineal y conos. Adicionalmente se desarrollaron dos funciones: la primera para la lectura de un archivo PDF sobre el plan de tratamiento generado para un paciente, donde se refleja los datos del tratamiento para el cálculo, en segundo lugar, la incorporación de reconocimiento de caracteres (OCR) para facilitar la carga o tomar de los datos del plan de tratamiento a través de una imagen y posterior generación del reporte sobre el cálculo de MU. 7 MU QC es una aplicación la cual es considerada antecedente de MU QC SRS, MU QC es una aplicación utilizada para la verificación del cálculo primario en radioterapia mientras que MU QC SRS verifica el cálculo primario en radiocirugía. El alcance de MU QC SRS se puede definir en 3 secciones que serán descritas a continuación: Carga de datos del paciente, permite a la aplicación cargar los datos del plan del paciente de forma manual o automática mediante 2 funciones 1 es lectura del plan por un archivo en formato PDF o reconocimiento de caracteres a través de una imagen en formato JPG. Calculo de MU, corresponde a la verificación del cálculo primario y generar reportes que le permitan visualizar al usuario el cálculo de MU. Información sobre el cálculo de mu y los desarrolladores. 8 CAPÍTULO II MARCO CONCEPTUAL El propósito de este capítulo es presentar las bases teóricas en las cuales se fundamenta el Trabajo Especial de Grado. Este se divide en tres (03) secciones las cuales se puede dar un bosquejo general a continuación: 2.1 Conceptualizando la Radioterapia La radioterapia, o tratamiento con radiaciones, tiene varios campos de aplicación, pero el objeto fundamental de su aportación está en el proceso de curación de los pacientes con cáncer. El cáncer puede afectar a personas de todo tipo de edad y condición. Las estadísticas muestran una extensión abrumadora de la enfermedad entre la población. De acuerdo Brualla (2015), “sólo en 2012 se registraron 14.1 millones de casos nuevos de cáncer a nivel mundial” (p.161). En la actualidad la primera línea de actuación la constituyen la cirugía, la radioterapia y la quimioterapia, según este autor, “aproximadamente el 50% de los pacientes afectados precisarán radioterapia en algún momento del transcurso de la enfermedad” (p.161). La radioterapia es la utilización de la radiación ionizante en el tratamiento del cáncer, y es una de las tres modalidades que se utilizan para combatir esa enfermedad, en conjunto con la quimioterapia y la cirugía. A diferencia de las éstas últimas, que dependen casi exclusivamente de los conocimientos clínicos del médico la radioterapia se basa conjuntamente en el uso de la tecnología y en equipos multidisciplinarios (Podgorsak 2005). Desde sus inicios, poco después del descubrimiento de los rayos X por Roentgen en 1895, el avance de la radioterapia ha ido de la mano con el progreso 9 tecnológico. La mejor comprensión de la radiación ionizante y de los mecanismos mediante los cuales se deposita su energía en los tejidos, como dosis absorbida, en conjunto con el advenimiento de la computación y el desarrollo de aceleradores lineales de uso clínico, han permitido la evolución de la radioterapia hasta lo que conoce comúnmente hoy en día. Las modalidades de tratamiento se han vuelto cada vez más complejas y nuevas formas de radioterapia, como por ejemplo la terapia con partículas pesadas cargadas, ya se usan en algunos centros del mundo. La radioterapia de hoy no sólo busca entregar la dosis de prescripción con gran precisión en el volumen a tratar, sino también predecir sus consecuencias mediante modelos radiobiológicos, utilizando la probabilidad de control tumoral (TCP) y la probabilidad de complicaciones en tejido normal (NTCP). Los planificadores computados modernos incluyen también el concepto de dosis biológica. 2.1.1 Radiocirugía Según Hoch (2014) la radiocirugía es “la aplicación de una dosis alta de radiación en una parte específica del cuerpo”, aplicar radiocirugía representa una opción importante para los pacientes que padecen de enfermedades cerebrales y corporales para las cuales la cirugía convencional es peligrosa o imposible. La Radiocirugía se suele confundir con frecuencia con la Radioterapia convencional. Si bien es cierto que ambas dan radiación ionizante al área a tratar, también es cierto que usan mecanismos y dosis diferentes para minimizar el daño causado al tejido sano. 2.1.2 Radiocirugía Estereotáctica La Radiocirugía Estereotáctica o Estereotáxica (SRS: Stereotactic Radio Surgery) es una modalidad de la Radioterapia externa sumamente precisa, en la cual se aplican altas dosis de radiación en un volumen limitado a la lesión, por medio de técnicas de alta precisión, según Tucci (2012) “generalmente la Radiocirugía Estereotáctica se complementa en una sola sesión, a veces se realizan múltiples sesiones cuando el tumor mide más de 1 pulgada de diámetro”. En casos de que se realicen múltiples sesiones el procedimiento se llama Radiocirugía Estereotáctica 10 fraccionada. A diferencia de los procedimientos quirúrgicos convencionales, la Radiocirugía no requiere del uso de un bisturí ni de incisión alguna en el paciente. Como método de tratamiento, la Radiocirugía tiene como objetivo fundamental la destrucción y/o control de tumores, a la vez que minimiza la exposición a las radiaciones del tejido sano adyacente a la lesión. Según la IRSA (http://www.irsa.org/radiosurgery.html), hay tres tipos básicos de radiocirugía: - Haz de partículas (protón) - Cobalto 60 (fotón) - Acelerador lineal El tipo de radiocirugía utilizado para este Trabajo Especial de Grado es el de acelerador lineal. 2.1.3 Glosario de términos Básico. Los siguientes términos fueron extraídos de Radioterapia Oncológica GURVE (2016). - Acelerador Lineal (LINAC): “Es una máquina de radioterapia externa, generadora de rayos X de alta energía mediante la aceleración de electrones que chocan y producen rayos de frenado. En muchos casos, los aparatos también son capaces de administrar al paciente radioterapia con electrones”. Normalmente la tasa de dosis para el acelerador lineal es 1.0 cGy/MU para un campo 10x10 definido en el isocentro. - Centigray (cGy): “Medida preferida para referirse a la cantidad de la dosis de radiación absorbida por el cuerpo (1cGy=1 rad)”. - Físico de Radiaciones: “Profesional encargado de verificar que la máquina emisora de radiaciones (Acelerador Lineal) libere las cantidades apropiadas de radiación al lugar exacto del cuerpo donde se encuentra la lesión”. - Fraccionamiento: “División de la dosis total de Radioterapia en varias dosis pequeñas, las cuales son aplicadas en un periodo de varios días”. 11 - No invasivo: “En medicina, se refiere a un procedimiento que no requiere la inserción y/o utilización de instrumento alguno para realizar una incisión en la piel o en el cuerpo de un paciente”. - Tumor: “Masa anormal de tejido que ocurre cuando las células se dividen de manera descontrolada y se reproducen aceleradamente. Pueden ser de tipo benigno (sin presencia de Cáncer) o malignos (Cáncer). También se les pueden denominar Neoplasmas” Los siguientes términos y notaciones fueron extraídos de Vélez (2004). - d: “Profundidad del punto de cálculo”. - D’o: “Tasa de dosis o dosis por unidades monitor de transmisión del usuario bajo condición de normalización”. - Dosimetría: “Es el cálculo de la dosis que recibirá el paciente (más o menos detallada por órganos o regiones) con un tratamiento determinado”. - Dosis: “Medida en un punto medio en especifico - Estereotáctico: “Se aplica al sistema de referencia externo, compuesto por coordenadas tridimensionales, que permite localizar el punto o la región en la que se va a realizar un determinado procedimiento (biopsia, radiocirugía, colocación de electrodos, entre otros)”. - Factor de campo (OF): “Tasa de dosis en agua a la profundidad de referencia para un tamaño de campo dado dividida por la tasa de dosis en agua en el mismo punto a la misma profundidad para el tamaño de campo de referencia (10 x 10 cm2” - Gray: “Es la unidad de dosis de radiación y equivale a 1 J/kg”. - Isocentro: “Es el punto en torno al cual gira el origen de la irradiación”. - MU (Unidades monitor): “Es una medida de salida para aceleradores lineales”. - SAD: “Distancia fuente-isocentro. En las bombas de cobalto suele ser de 80 cm, y de 100 cm en los aceleradores.”. - SSD: “distancia fuente-piel o distancia foco piel”. - TMR: “Relación máxima de tejido. Es una variación del TAR que lo hace adecuado para uso a altas energías”. 12 2.2 Sistemas de información Según Luque (2009) un sistema de información es “un conjunto de elementos que interactúan entre sí con el fin de generar información que se pueda utilizar posteriormente”. Este autor establece que un sistema de información realiza cuatro actividades básicas: Entrada de información: Es el proceso mediante el cual el sistema de Información toma los datos que requiere para procesar la información. Las entradas pueden ser manuales o automáticas. Las manuales son aquellas que se proporcionan en forma directa por el usuario, mientras que las automáticas son datos o información que provienen o son tomados de otros sistemas o módulos. Almacenamiento de información: Es la capacidad del sistema de información de guardar o recordar información que va a hacer utilizada posteriormente. A través de esta propiedad el sistema puede recordar la información guardada en la sección o proceso anterior. Esta información suele ser almacenada en estructuras de información denominadas archivos. Procesamiento de Información: Es la capacidad del sistema de Información para efectuar cálculos de acuerdo con una secuencia de operaciones preestablecida. Estos cálculos pueden efectuarse con datos introducidos recientemente en el sistema o bien con datos que están almacenados. Esta característica de los sistemas permite la transformación de datos fuente en información que puede ser utilizada para la toma de decisiones, lo que hace posible, entre otras cosas, que un tomador de decisiones genere una proyección. Salida de Información: La salida es la capacidad de un sistema de Información para exportar la información procesada o bien datos de entrada al exterior. Es importante aclarar que la salida de un Sistema de Información puede constituir la entrada a otro Sistema de Información o módulo. A continuación se listan los distintos tipos de sistemas de información mencionados por Laudon y Laudon (2012). - Sistemas transaccionales. - Sistema de apoyo a la toma de decisiones. 13 - Sistemas estratégicos. - Sistemas de información formal. - Sistemas de información informal. - Sistemas de comunicación. - Sistemas de información organizacional. - Sistemas de información operativos. - Sistemas de información gerencial. - Sistema de procesamiento de datos. Para efectos de esta investigación, se puede catalogar la solución propuesta como un sistema de apoyo a la toma de decisiones, la aplicación a desarrollar es utilizada para verificar los cálculos de unidades monitor sobre el plan de tratamiento de un paciente y esa es la característica más relevante de un DSS que los resultados entregados al usuario sirvan de ayuda al momento de gestionar proceso o emitir alguna acción. 2.3 Dispositivos móviles Según Porto et al (2011), “Del latín disposĭtus (“dispuesto”), es un aparato o mecanismo que desarrolla determinadas acciones. Su nombre está vinculado a que dicho artificio está dispuesto para cumplir con su objetivo”. En otras palabras un dispositivo no es más que una pieza o conjunto de piezas o elementos preparados para realizar una función determinada y que generalmente forman parte de un conjunto más complejo. Ahora bien, cuando hablamos de “Dispositivos Móviles” se hace referencia a dispositivos que poseen ciertas características como; tamaño pequeño, baja capacidad de procesamiento y almacenamiento, conexión permanente o intermitente a una red, diseñados para una determinada función pero que pudiesen llevar a cabo funciones más complejas. 2.3.1 Sistemas operativos móviles Un sistema operativo móvil, al igual que un sistema operativo común y corriente, es un programa o conjunto de programas encargado de gestionar recursos 14 de hardware y proveer servicios a los programas de aplicación de software con la diferencias de que estos son mucho más simples y están orientados a ciertas características como: la conectividad inalámbrica, los formatos multimedia para móviles y las diferentes maneras de interacción entre el usuario y el dispositivo móvil. Android es el sistema operativo más usado en Venezuela. De acuerdo con datos descritos por Emen acerca de Conatel en el diario El Mundo se construye la Tabla 1. Tabla 1 - Sistemas operativos más usados en Venezuela Sistema Operativo Empresa Propietaria Última Versión Estable Porcentaje de usuarios en Venezuela IOS Apple INC 9.3.3 20,99% Android Google INC 6.0.1 45,25% Blackberry OS RIM 7.1.0.2994 26,08% Window Phone Microsoft 8.1.2 4,04% Fuente: http://www.elmundo.com.ve/noticias/tecnologia/dispositivos/android-domina- el-mercado-venezolano-de-telefonos-.aspx 2.3.2 Aplicación Móvil. Una aplicación móvil según el Libro blanco de Apps (2011) “consiste en un software que funciona en un dispositivo móvil (teléfonos y tabletas) y ejecuta ciertas tareas para el usuario”. Una aplicación móvil es una aplicación de software desarrollado específicamente para su uso en dispositivos de computación móviles, pequeños, como teléfonos inteligentes y tabletas, en lugar de computadoras de escritorio o portátiles. Las aplicaciones móviles están diseñadas con la consideración de las exigencias y limitaciones de los dispositivos y también para aprovechar las capacidades especializadas que tienen. http://www.elmundo.com.ve/noticias/tecnologia/dispositivos/android-domina-el-mercado-venezolano-de-telefonos-.aspx http://www.elmundo.com.ve/noticias/tecnologia/dispositivos/android-domina-el-mercado-venezolano-de-telefonos-.aspx 15 Las aplicaciones móviles son a veces clasificadas de acuerdo a si son basados en web o aplicaciones nativas, que son creados específicamente para una plataforma determinada. Una tercera categoría, aplicaciones híbridas, combina elementos de ambas aplicaciones nativas y web. Para Martínez (2007) “a medida que las tecnologías maduran, se espera que el desarrollo de aplicaciones móviles en un esfuerzo, se centren en la creación de aplicaciones, basados en el navegador del dispositivo agnóstico aplicaciones Web”. Gracias al avance tecnológico de los últimos años, hoy en día podemos encontrar aplicaciones móviles bastante complejas que emplean técnicas como identificación biométrica, reconocimiento facial, reconocimiento de caracteres a través de una imagen. 2.3.3 Tipos de aplicaciones móviles Se tiene tres tipos de aplicaciones móviles (nativas, hibridas y web), para tomar el desarrollo en una de ellas se debe tener en cuenta, las funcionalidades que se desean manejar, el público al que va dirigido, el tipo de diseño, el tipo de notificaciones que se desea transmitir, si en un futuro se desea modificar o integrar funcionalidades, entre otros, pero lo más importante para la elección de un tipo de aplicación móvil, es saber a qué tipo o tipos de dispositivos fue dirigida la aplicación. Aplicaciones Nativas: Según Raona (2009) “La aplicación nativa está desarrollada y optimizada específicamente para el sistema operativo determinado y la plataforma de desarrollo del fabricante”. Las aplicaciones nativas están hechas para una plataforma en específico, aprovechando así todos los recursos que la plataforma le pueda ofrecer. Al tener una aplicación nativa se crea para un sistema operativo y dispositivo en particular, trabajando directamente con el hardware y software del mismo, beneficiándose de las últimas tecnologías de esos dispositivos móviles, como podrían ser el GPS y la cámara. Una aplicación nativa puede ser almacenada en el mismo dispositivo o puede estar expuesta en una tienda de aplicaciones públicas o privadas, que pueden ser descargadas e instaladas en el dispositivo. En cuanto los datos pueden estar almacenados directamente en el dispositivo móvil, o pueden estar almacenados de forma remota y ser accedidos por medio de la aplicación, teniendo 16 con esto que no necesariamente se necesite de conexión a internet para acceder a ellos. 2.3.4 Arquitectura Android Android está construido con una arquitectura de 4 (cuatro) capas o niveles entre sí. A continuación fueron descritas las capas de la arquitectura Android según Revelo (2014). - Kernel de Linux: Android está construido sobre el núcleo de Linux, pero se ha modificado dramáticamente para adaptarse a dispositivos móviles. Esta elección está basada en la excelente potabilidad, flexibilidad y seguridad que Linux presenta. Es importante destacar que el Kernel de Linux está bajo la licencia GPL (Licencia Pública General o en sus siglas en ingles General Public License), como consecuencia Android también. - Capa Nativa: En esta capa se encuentran partes como lo es el HAL (Capa de abstracción del hardware o en sus siglas en ingles Hardware Abstraction Layer), librerías nativas, demonios, las herramientas de consola y manejadores en tiempo de ejecución. - Framework de aplicaciones: En esta capa se encuentran todas las librerías Java necesarias para programar aplicaciones bajo este sistema operativo. También aloja manejadores, servicios y proveedores de contenido capaces de soportar la comunicación una aplicación desarrollada en Android - Capa de Aplicaciones: Es la última instancia de funcionamiento de Android. Se centra en la ejecución, comunicación y estabilidad de las aplicaciones preinstaladas por el fabricante o las que nosotros vamos a construir. A ella acceden todos los usuarios Android debido a su alto nivel de compresión y simplicidad. 2.3.5 Android Studio Es un entorno de desarrollo integrado (IDE), basado en IntelliJ IDEA de la compañía JetBrains, que proporciona varias mejoras con respecto al plugin http://academiaandroid.com/ide-entornos-integrados-de-desarrollo-para-android/ http://academiaandroid.com/ide-android-intellij-android-studio-aide/ 17 ADT (Android Developer Tools) para Eclipse. Android Studio utiliza una licencia de software libre Apache 2.0, está programado en Java y es multiplataforma. Principales características que incluye Android Studio Soporte para programar aplicaciones para Android Wear (sistema operativo para dispositivos corporales como por ejemplo un reloj). Herramientas Lint (detecta código no compatible entre arquitecturas diferentes o código confuso que no es capaz de controlar el compilador) para detectar problemas de rendimiento, usabilidad y compatibilidad de versiones. Utiliza ProGuard para optimizar y reducir el código del proyecto al exportar a APK (muy útil para dispositivos de gama baja con limitaciones de memoria interna). Integración de la herramienta Gradle encargada de gestionar y automatizar la construcción de proyectos, como pueden ser las tareas de testing, compilación o empaquetado. Nuevo diseño del editor con soporte para la edición de temas. Nueva interfaz específica para el desarrollo en Android. Permite la importación de proyectos realizados en el entorno Eclipse, que a diferencia de Android Studio (Gradle) utiliza ANT. Posibilita el control de versiones accediendo a un repositorio desde el que poder descargar Mercurial, Git, Github o Subversion. Alertas en tiempo real de errores sintácticos, compatibilidad o rendimiento antes de compilar la aplicación. Vista previa en diferentes dispositivos y resoluciones. Integración con Google Cloud Platform, para el acceso a los diferentes servicios que proporciona Google en la nube. Editor de diseño que muestra una vista previa de los cambios realizados directamente en el archivo xml. http://es.wikipedia.org/wiki/Apache_License http://www.gradle.org/ http://ant.apache.org/ https://cloud.google.com/mobile/ 18 2.3.6 Material Design Según Google (2014) se puede decir que Material Design “es una normativa de diseño enfocado en la visualización del sistema operativo Android, además en la web y en cualquier plataforma”. Su diseño se basa en proveer la sensación de que estas trabajando con objetos reales, piezas colocadas en un espacio y con un tiempo determinado, en este tipo de diseño la profundidad, superficie, colores y sombras juegan un rol único y especial. 19 CAPÍTULO III MARCO METODOLOGICO El capítulo que se presenta a continuación expone un resumen sobre que son metodologías agiles, el contexto en el que surgen las metodologías agiles, sus valores, principios y comparaciones con las metodologías tradicionales. Adicionalmente se presenta una adaptación de la metodología de desarrollo XP para la construcción de la aplicación móvil para la verificación del cálculo de unidades de monitor en tratamientos de radiocirugía intracraneal. 3.1 Metodologías Ágiles Sommerville (2002) relata que un proceso es ágil cuando el desarrollo de software es incremental (entregas pequeñas de software, con ciclos rápidos), cooperativo (cliente y desarrolladores trabajan juntos constantemente con una cercana comunicación), sencillo (el método en sí mismo es fácil de aprender y modificar, bien documentado), y adaptable (permite realizar cambios de último momento). En la Tabla 2 describe algunas diferencias entre las metodologías Agiles y las metodologías Tradicionales: 3.2. Programación Extrema (Extreme Programming) Según Beck (1999) XP “es una forma ligera, eficiente, flexible, predecible, científica y divertida de generar software”. XP (eXtreme Programming) es un método ágil, está basado en la simplicidad, la comunicación entre todos los involucrados en el proyecto y reutilización del código desarrollado. Está enfocado a satisfacer los requerimientos comunicados por el cliente. La metodología trata entregar un software de calidad y capaz de satisfacer requerimientos indicados por el usuario, incluso 20 cuando estos requerimientos sean cambiantes al momento de desarrollo. Otro objetivo importante que plantea XP es potenciar el trabajo en equipo. Cliente, jefes de proyecto y desarrolladores son todos parte de un mismo grupo de trabajo y deben estar comprometidos en el desarrollo del software. Una posible adaptación de este método incluye prácticas como programación en pareja y código de propiedad colectiva. Tabla 2- Diferencias entre metodologías ágiles y tradicionales Fuente: Sommerville (2002) 3.2.1 Prácticas La principal suposición que se realiza en XP es la posibilidad de disminuir la mítica curva exponencial del costo del cambio a lo largo del proyecto, lo suficiente Metodologías Ágiles Metodologías Tradicionales Basadas en heurísticas provenientes de prácticas de producción de código. Basadas en normas provenientes de estándares seguidos por el entorno de desarrollo. Especialmente preparados para cambios durante el proyecto. Cierta resistencia a los cambios. Impuestas internamente (por el equipo). Impuestas externamente. Proceso menos controlado, con pocos principios. Proceso mucho más controlado, con numerosas políticas/normas. No existe contrato tradicional o al menos es bastante flexible Existe un contrato prefijado. El cliente es parte del equipo de desarrollo. El cliente interactúa con el equipo de desarrollo mediante reuniones. Grupos pequeños (<10 integrantes) y trabajando en el mismo sitio. Grupos grandes y posiblemente distribuidos. Pocos artefactos. Más artefactos. Pocos roles. Más roles. 21 para que el diseño evolutivo funcione. XP apuesta por un crecimiento lento del costo del cambio. Esto se consigue gracias a las tecnologías disponibles para ayudar en el desarrollo de software y a la aplicación disciplinada de las prácticas que se describirán a continuación. - Cliente presente: Debe estar disponible al equipo XP un representante de los usuarios finales del sistema (el cliente) a tiempo completo. En un proceso de programación extrema el cliente es miembro del equipo de desarrollo y es responsable de informar al equipo por medio de historias de usuarios los requerimientos del sistema para su implementación. - Código de propiedad colectiva: En un proyecto XP, cada pareja de programadores puede mejorar cualquier código en cualquier momento. Esto significa que todo el código recibe el beneficio de la atención de muchas personas. Lo cual incrementa la calidad del mismo y reduce sus defectos. La propiedad colectiva puede ser un problema si las personas que contribuyen en el código lo hacen sin entenderlo. XP evita estos problemas mediante dos técnicas claves: los test de los programadores, que permiten capturar los errores, y la programación en parejas. Lo que significa que la mejor manera de trabajar con código que no es familiar es con un experto. - Adaptación de código de propiedad colectiva: Debido a que es solo un individuo está encargado de la programación, este es el único encargado de mejorar el código en cualquier momento. El código puede ser observado por todo el equipo con el objetivo de incrementar la calidad y reducir sus defectos. - Desarrollo previamente probado: La programación extrema está obsesionada con la retroalimentación, y en el desarrollo de software, la buena retroalimentación requiere buenas pruebas. Los mejores equipos de XP practican el desarrollo guiado por pruebas automáticas, trabajando en ciclos muy cortos para añadir una prueba y hacer que funcione. Casi sin esfuerzo, los equipos producen códigos con casi el 100 por ciento de la cobertura de la prueba, que es un gran paso adelante en la mayoría de los casos. 22 - Diseño simple: Los equipos XP construyen software a partir de diseños simples. Se comienza con un diseño simple, y luego, a través de las pruebas de programación y las mejoras en el diseño, se mantiene de la misma manera. Un equipo XP mantiene el diseño adaptado a la funcionalidad actual del sistema. No hay pérdida de trabajo y el software está siempre listo para lo que hay que realizar en la siguiente etapa. Diseñar con XP no es cosa de una sola vez, sino algo que lleva un tiempo considerable. Hay pasos para diseño, planificaciones de entregas y de iteración, además, los equipos realizan sesiones rápidas de diseño y revisiones de diseño a través de refactorizaciones que se realizan a lo largo de todo el proyecto. - Entregas pequeñas: Los equipos XP hacen las entregas de dos maneras importantes: Primero, el equipo entrega software ejecutado, probado y solicitado por el cliente en cada iteración. El cliente puede utilizar este software para cualquier propósito, ya sea para su evaluación o incluso para la entrega de éste al usuario (muy recomendado). El aspecto más importante es que el software es visible y es entregado al cliente de cada iteración, mostrando resultados tangibles. Segundo, los equipos XP también realizan entregas a los usuarios finales. Los proyectos de software realizados con XP son entregados diariamente. En proyectos internos son entregados mensual o más frecuentemente. - Equipo Completo: Todos los involucrados en el desarrollo del software en un proyecto XP son miembros de un equipo. Este equipo debe incluir un representante de negocios, el cliente y quien provee los requerimientos y fija las prioridades en el proyecto. Es mejor si el cliente o alguno de sus colaboradores es un usuario final ya que puede saber que se necesita. El equipo, por supuesto, tiene que tener programadores. Los analistas pueden ayudar a los clientes a definir los requerimientos. Ninguno de estos roles es necesariamente propiedad exclusiva de un solo individuo: Todos en un equipo XP contribuyen de la manera en que pueden. El mejor equipo no tiene especialistas, solo contribuidores generales con habilidades especiales. 23 - Integración continúa: Los equipos de XP mantienen el sistema completamente integrado todo el tiempo. La ventaja de esta práctica puede ser vista pensando en proyectos anteriores, donde el proceso de integración se realiza semanalmente o con menor frecuencia. Usualmente, esto conlleva a problemas de integración donde el proyecto se cae y no se sabe por qué. Las integraciones que se hacen con menos frecuencia conllevan a serios problemas en un proyecto de software. Primero que nada, aunque la integración es lo más importante para entregar un código funcional y ejecutable, el equipo no está acostumbrado a ésto, y a menudo se delega la responsabilidad a personas que no están familiarizadas con el proyecto. - Metáforas: Una metáfora no es más que la descripción simple de cómo el programa debería funcionar. Los equipos XP se dedican a desarrollar esta metáfora a través de una visión común. Algunas veces es difícil encontrar una metáfora. En todo caso, con o sin una imagen vívida, los equipos XP usan un sistema común de nombres para asegurarse que todos entienden cómo funciona el sistema, dónde buscar una funcionalidad o como encontrar el lugar dónde colocar dicha funcionalidad. Una metáfora puede ser un diagrama sencillo, un conjunto de figuras que describen el comportamiento de un módulo o cualquier otro elemento que sugiera una descripción del sistema. - Normas de Codificación: Los equipos XP siguen unos estándares de codificación, para que así, todo el código en el sistema luzca como si hubiese sido escrito por un único y muy competente individuo. Las especificaciones del estándar no son importantes, lo importante es que todo el código luzca familiar, para soportar la propiedad colectiva. - Planificación: XP enfoca la planificación en dos aspectos claves en el desarrollo de software, predecir que se quiere lograr para el día esperado y determinar qué será lo siguiente a realizar. El énfasis está en dirigir el proyecto (lo cual es bastante sencillo), en lugar de predecir que será necesario y cuánto tiempo tomará (lo cual es bastante complicado). Existen dos pasos claves para la planificación en XP: 24 La organización de las entregas es una práctica donde el cliente presenta las características deseadas a los programadores, y los programadores estiman la dificultad. Teniendo el costo estimado y los conocimientos de las características, el cliente define un plan para el proyecto. La planificación de las iteraciones es una práctica donde el equipo recibe instrucciones cada varias semanas. El equipo XP construye software en iteraciones de dos semanas, entregando software funcional al final de cada iteración. Durante la realización de las iteraciones, el cliente presenta las características deseadas para las siguientes dos semanas. Los programadores las dividen en tareas y estiman sus costos (en un nivel más detallado que en la planificación de entregas). Basados en la cantidad de trabajo realizado en las iteraciones anteriores, el equipo decide que se realizará en la iteración actual. Estos pasos de planificación son muy sencillos, además proveen buena información al cliente. Este enfoque en resultados visibles es una pequeña paradoja, por un lado, el cliente está en posición de cancelar el proyecto si el progreso no es suficiente. Por otro lado, el progreso es tan visible, y la habilidad de decidir qué es lo siguiente en realizar es tan completa, que los proyectos XP tienden a dar más de lo que es requerido, con menor presión y estrés. - Programación en parejas: Todos los productos en XP son construidos por dos programadores, sentados juntos, en el mismo computador. Esta práctica asegura que todo el código de producción es revisado al menos por otro programador siendo el resultado mejor diseñado, mejor probado y mejor códificado. - Adaptación de programación en parejas: El equipo de trabajo en XP debe estar constituido al menos por dos programadores, sentados en el mismo computador. Sin embargo para efectos de este trabajo de grado un solo programador se encargó de producir código, mejorarlo y entre todo el equipo XP se realizaron pruebas para poder mejorar la codificación. 25 - Refactorización: La programación extrema se enfoca en entregar valores de negocio en cada iteración. Para lograr esto a lo largo de todo el proyecto, el software debe estar bien diseñado. Así XP utiliza un proceso de mejora continua de diseño llamado refactorización. El proceso de refactorización se centra en la eliminación de la duplicación (un signo seguro de mal diseño), y en el aumento de la cohesión del código, mientras que se reduce el acoplamiento. Alta cohesión y bajo acoplamiento han sido reconocidas como las características de buen diseño de código de al menos treinta años. El resultado es que los equipos XP empiezan con un diseño simple y generalmente, aumentan la velocidad a medida que el proyecto sigue adelante. - Test del Cliente: Como parte del proceso de presentación de las características del proyecto, el cliente de XP define uno o más test de aceptación para mostrar que cada característica funciona. El equipo construye estos test y los utilizan para realizar pruebas en conjunto con el cliente, para certificar que las funcionalidades estén implementadas correctamente. La automatización es importante ya que con la presión del tiempo, se saltan las pruebas manuales. 3.2.2 Ciclo de vida El ciclo de vida ideal de XP consiste de seis fases: Exploración, Planificación de la Entrega (Release), Iteraciones, Producción, Mantenimiento y Muerte del Proyecto. Estas fases se presentan de acuerdo con Beck (1999): En la fase de exploración, los clientes escriben las historias de usuario que desean para ser incluidas en la primera versión. Cada historia describe una característica que se añade en el programa. La fase de planificación establece el orden de prioridad para las historias y se acuerda el contenido de la primera versión. Los programadores primero estiman cuánto esfuerzo requiere cada historia y se acuerda el calendario. La fase de iteraciones incluye varias iteraciones de los sistemas antes la primera versión. El cliente decide que historias serán seleccionadas para cada 26 iteración. Las pruebas funcionales creadas por el cliente se ejecutan al final de cada iteración. Al final de la última iteración el sistema está listo para la producción. La fase de producción requiere pruebas adicionales y el control del rendimiento del sistema antes de que el sistema pueda ser entregado al cliente. Después de que se produce la primera versión para uso del cliente, el proyecto XP debe mantener el sistema en funcionamiento mientras que se producen nuevas iteraciones. Con el fin de hacer esto, la Fase de mantenimiento requiere un mayor esfuerzo también para satisfacer las tareas cliente. Por lo tanto, la velocidad de desarrollo puede desacelerarse después de que sistema está en producción. La fase de muerte está cerca cuando el cliente ya no tiene más historias para implementar. Esto requiere que el sistema satisfaga las necesidades cliente también en otros aspectos (por ejemplo, en relación con el rendimiento y fiabilidad). En la Figura 1 se muestra el ciclo de vida de XP 3.2.3 Actividades Las actividades de XP se reflejan en la Figura 1 y se detallan a continuación: - Planificación: Para la planificación se utilizan historias de usuarios, las historias de usuarios son la técnica especificar los requisitos del software, estas tienen como propósito describir los requerimientos del cliente. Se crea una planificación de entrega, que debe servir para crear un calendario que todos puedan ver y cumplir. El desarrollo se divide en iteraciones, esto agrega agilidad al proceso de desarrollo, a cada iteración se le agregan un conjunto de historias de usuario. Se evita la sobrecarga de trabajo. 27 Figura 1 - Ciclo de vida XP. Fuente: Espinoza (2007). (p.55). - Diseño: El diseño crea una estructura que organiza la lógica del sistema. Desde el punto de vista de la simplicidad se puede decir que el desarrollo del sistema no necesita más que la codificación, la prueba y escuchar al usuario. Si esas actividades se llevan a cabo así, el resultado debe ser que el sistema siempre funciona. En la práctica, esto no funcionará. Se puede llegar muy lejos sin el diseño, pero es sistema se puede tornar complejo a medida que se agregan funcionalidades al sistema, por eso las dependencias del sistema deben ser claras. Se puede evitar esto mediante la creación de una estructura de diseño que organice la lógica del sistema. - Codificación: La fase de codificación expresa la interpretación del problema. El código se ajusta a los estándares de codificación, manteniendo la consistencia y legibilidad del mismo, facilitando así, la comprensión y refactorización para los involucrados en el desarrollo del sistema. Las pruebas unitarias se crean antes que el código, facilitando y agilizando la codificación. Estas pruebas también ayudan a identificar las necesidades que realmente se tienen que considerar al momento de codificar el sistema. La codificación también puede ser usada para determinar la solución más adecuada. 28 - Pruebas: En esta fase se realizan pruebas unitarias y pruebas de aceptación. La pruebas unitarias sirven para determinar si una característica funciona según lo previsto Las pruebas de aceptación verifican que los requerimientos fueron comprendidos con exactitud por los programadores para satisfacer las necesidades del cliente. - Roles y responsabilidades: Hay diferentes roles en XP para diferentes tareas y propósitos durante el proceso y sus prácticas. A continuación, estos papeles se presentan según Beck (1999). - Programador: es el encargado del desarrollo de la solución, arquitecto y responsable de la codificación. - Cliente: El cliente escribe las historias y las pruebas funcionales, y decide cuando cada requisito se cumple. El cliente establece la prioridad de ejecución de los requisitos. - Encargado de pruebas (Tester): corren las pruebas funcionales regularmente, transmiten los resultados de la prueba y mantienen las herramientas de prueba. - Encargado de seguimiento (Tracker): encargado de seguimiento da retroalimentación en XP. - Entrenador (Coach): responsable del proceso global. Debe proveer guías al equipo de forma que se apliquen las prácticas XP y se siga el proceso correctamente. - Consultor: El consultor es un miembro externo que posee los conocimientos técnicos específicos necesarios. El consultor guía al equipo en la solución de sus problemas específicos. - Gestor (Big Boss): El gestor toma las decisiones. Con el fin de ser capaz de distinguir cualquier dificultad o deficiencia en el proceso. 29 CAPÍTULO IV MARCO APLICATIVO En este capítulo se detallan las prácticas y principios que se toman del proceso de desarrollo para la creación de una aplicación móvil para la verificación de unidades de monitor en tratamiento de radiocirugía intracraneal. Se ha tomado este proceso de desarrollo y la metodología debido a que se desea que el desarrollo sea flexible, el diseño simple y abierto al cambio, donde el objetivo principal sea la realización de la aplicación móvil y no producir una extensa documentación que necesite muchos artefactos. XP especifica un conjunto de prácticas y actividades que se utilizan a lo largo de la elaboración de la aplicación móvil. Se aplicó una adaptación de las prácticas de la metodología XP detallada en el capítulo anterior Iteraciones Siguiendo el proceso de desarrollo de XP se utilizan iteraciones. En cada una de ellas se planifican un conjunto de actividades y tareas que deben desarrollarse en un período de tiempo determinado. Las iteraciones son relativamente cortas, es por esto que su duración se estima en una semana aproximadamente Actividades En cada iteración se aplican las cuatro actividades que propone XP, estas no necesariamente se tienen que realizar en un orden específico y se puede intercambiar de una a otra cuando se considere necesario. Estas actividades se utilizan como se detalla a continuación: Planificación 30 En esta actividad se determina el alcance que se le da a cada iteración, definiendo que objetivos y metas deben ser realizadas y quien podría ser el encargado de realizarlas. También es posible definir modificaciones de las responsabilidades o tareas en una iteración, ya sea una iteración en curso o una iteración pendiente. De esta manera se evidencia la flexibilidad de esta metodología. También se utilizan historias de usuario, donde se describen los requerimientos del sistema. Éstas sirven de base para las pruebas funcionales y ayudan a proporcionar una estimación del tiempo necesario para el desarrollo. El formato para escribir las Historias de Usuario se presenta en la Tabla 3 Tabla 3: Formato de historias de usuario Diseño Siguiendo la metodología de XP, el diseño debe ser simple y sencillo. Se define una metáfora del sistema que muestra una visión global de lo que se quiere desarrollar. Adicionalmente, se pueden usar diagramas y modelos simples para entender cada uno de los módulos a implementar. En esta actividad se utiliza la refactorización para cambiar el diseño o código del sistema por otro que se adapte mejor a la solución. Codificación Para esta actividad se codifica en el lenguaje de programación Java manteniendo la consistencia y legibilidad del código, facilitando así, la comprensión para todos los involucrados en el desarrollo del sistema. Pruebas 31 Para cada una de las iteraciones se realizaron pruebas unitarias para verificar la correctitud del código. Durante cada iteración las historias de usuario seleccionadas en la planificación de iteraciones son sometidas a pruebas funcionales. Se establecen escenarios, los cuales permitirán verificar si la historia de usuario ha sido implementada de manera correcta. Las historias de usuario no se consideran completadas hasta que no hayan pasado satisfactoriamente las pruebas unitarias. Es posible que en algunas iteraciones no implementen las 4 (cuatro) actividades antes descritas, debido a que no son requeridas. Planificación de iteraciones El desarrollo de la aplicación móvil se divide en 6 (seis) iteraciones. El objetivo de cada iteración es obtener una versión del sistema que incluya la implantación de las historias de usuario planteadas en la planificación del proceso de desarrollo XP. Los resultados de las iteraciones son evaluados por los desarrolladores y el usuario final (cliente) hasta cumplir con los objetivos planteados. El objetivo de cada iteración se describe a continuación: - Iteración 0: Definir los requerimientos funcionales y no funcionales del sistema tomando como base el problema descrito. - Iteración 1: Desarrollar el módulo de recepción de datos generales de la tabla de plan de tratamiento de un paciente. - Iteración 2: Desarrollar el módulo de recepción de los arcos de la tabla de plan de tratamiento de un paciente. - Iteración 3: Desarrollar el módulo de generación de reportes y cálculo de unidades de monitor independiente. - Iteración 4: Desarrollar funciones encargadas de leer el informe del paciente en formato PDF o JPG/PNG para agilizar la carga de datos en los módulos de datos generales y arcos. 32 - Iteración 5: Desarrollar interfaces de información como: ¿Quiénes somos?, Formalismo de Calculo, Acerca de nosotros y que dosimétrica se usó para hacer los calculo. Desarrollo 4.1 Iteración 0 1 Junio 2016 – 7 Junio 2016 Definir los requerimientos funcionales y no funcionales del sistema tomando como base el problema descrito. Los componentes del sistema fueron representados a través de un esquema grafico (metáfora), a partir de esta iteración se desarrollan las demás iteraciones. 4.1.1 Planificación La aplicación móvil nativa a desarrollar, MU QC SRS (Monitor Units Quality Control Stereotactic Radiosurgery) bajo el ambiente Android capaz de realizar el cálculo de unidades monitor independiente del TPS (Treatment-planning System) para el tratamiento de radiocirugía intracraneal, con acelerador lineal y conos. Adicionalmente se van a desarrollar dos funciones para la captura de los múltiples datos de los planes de tratamiento: una que permita la lectura de PDF sobre el plan de tratamiento generado para un paciente y la otra mediante un OCR que se encargue de tomar los datos del plan de tratamiento a través de una imagen y generación de reportes sobre el cálculo de unidades monitor. Esta aplicación está dirigido a físicos médicos. 4.1.1.1 Requerimientos funcionales Los requerimientos funcionales describen el comportamiento, funciones o servicios de la aplicación móvil, definen las tareas solicitadas por el usuario. Para esta aplicación móvil se definieron los siguientes requerimientos funcionales: 33 4.1.1.2 Ingresar datos generales: El usuario ingresa los datos generales de la planilla del plan de tratamiento (D’0, total dose, number of fraction, treatment percentage, weight at dose máximum y numero de arcos). Ingresar arcos: El usuario ingresa los datos de la tabla de la planilla del tratamiento (cone, depth (mm), weight factor, mu tps). Calcular MU: Tras obtener la información general y los arcos del plan de tratamiento del paciente se procede a hacer un cálculo independiente de unidades de monitor para verificar la dosis. Leer archivos PDF: Permite al usuario subir un plan de tratamiento de un paciente en formato PDF para agilizar la carga de datos. Aplicar OCR: Permite al usuario subir una imagen sobre el plan de tratamiento de un paciente para agilizar la carga de datos. Generar Reportes: Se obtiene un reporte sobre los datos calculados e ingresados incluyendo el MU independiente al TPS. Así como la comparación de las diferencias porcentuales obtenidas en ambos cálculos (primario y secundario) Información de contacto: Se despliega toda la información del grupo encargado de desarrollar la aplicación, quienes son y como contactarlos Información de formalismo de cálculo: Se despliega la información de cómo es calculado el MU y la bibliografía en la que se basan para hacer el cálculo. Información de data dosimétrica: Se despliega una interfaz indicándole al usuario que si desea usar su propia data ponerse en contacto con los desarrolladores. 34 Requerimientos no funcionales Los requerimientos no funcionales describen aspectos del sistema visibles para el usuario, que no están relacionados de forma directa con el comportamiento funcional del sistema. Para esta aplicación móvil se definieron los siguientes requerimientos no funcionales: Usabilidad: Ofrecer interfaces intuitivas, de fácil manejo y fácil de memorizar. Disponibilidad: Tener una aplicación disponible en todo momento. Desempeño: Ofrecer una aplicación que no presente tiempos de retrasos altos. 4.1.2 Diseño Para cumplir con los requerimientos establecidos se realizó un esquema general de la aplicación móvil donde se identifican cada uno de los componentes que lo conforman y la interacción entre cada uno de ellos. Se pueden visualizar en la Figura 2 Figura 2: Metáfora de la aplicación móvil Fuente: Autor, 2016. 35 A continuación se describen los módulos principales de la aplicación que conformaran el sistema a desarrollar: Módulo de recepción de datos del paciente: permite al usuario ingresar datos sobre el plan del tratamiento del paciente, los datos del paciente se dividen en datos generales y arcos. Posee dos sub-módulos importantes que van a facilitar la carga de los datos, son leer PDF y aplicar OCR. Leer PDF consiste en que el usuario debe cargar un documento del plan de tratamiento del paciente en formato PDF y la aplicación se encargará de tomar los datos del documento, agilizando la carga de los datos del paciente. Aplicar OCR consiste en que el usuario debe cargar una imagen en formato JPG y la aplicación envía la imagen a un servicio web a través de una petición JSON y este responde con un JSON los resultados al escanear la imagen con la finalidad de agilizar la carga de los datos del paciente. Módulo de cálculo de MU: permite al usuario tras haber ingresado todos los datos del plan de tratamiento del paciente realizar el cálculo de unidades monitor independiente del plan de tratamiento. Este módulo tiene dos sub-módulos importantes generar reportes y calcular mu. Generar reportes consiste en generar un archivo en formato PDF sobre los parámetros de entrada y el MU calculado para el paciente. Calcular MU consiste en desplegar una lista de las unidades monitor que se calcularon para cada arco y establecer un sistema de comparación con las unidades monitor del plan de tratamiento del paciente. Módulo de información: permite al usuario visualizar información correspondiente al cálculo de unidades monitor independiente y los desarrolladores. Se divide en dos sub-módulos “información sobre el cálculo de MU” e “información sobre los desarrolladores”. La información sobre el cálculo de MU consiste en desplegar interfaces sobre que bibliografía está basado el cálculo independiente de unidades monitor, la tolerancia y si desea utilizar su propia dosimétrica contactar a los desarrolladores. Información sobre los desarrolladores consiste en desplegar 36 información personal y de contacto sobre el equipo de trabajo encargado de diseñar esta aplicación móvil 4.1.2.1 Diagrama de casos de uso XP es una metodología ágil que no utiliza muchos artefactos para el desarrollo de software, sin embargo, se realizaron diagramas de casos de uso explicando el funcionamiento de la aplicación. Por medio de este modelo de Casos de Uso se pueden establecer diferentes niveles, dependiendo de la descripción de cada una de las funcionalidades establecidas para el sistema. En este apartado se tendrá solo un actor que va a interactuar con la aplicación “MU QC SRS”, como se puede observar en la Figura 3 y que es descrita a continuación: Usuario: Es quien va a interactuar con las distintas funciones que ofrece el sistema, esto luego de que haya descargado la aplicación a su dispositivo móvil. Figura 3: Descripción de los actores y su interacción con el sistema Nivel 0. En el nivel 1 (Figura 4) se puede visualizar al actor y las diferentes acciones principales e independientes que puede realizar la aplicación. 37 Figura 4: Descripción de los actores y su interacción con el sistema Nivel 1. A continuación, se explican con detalle cada uno de los casos de uso del nivel 1: Tabla 4: Caso de Uso: Calculation Formalism. 38 Tabla 5: Caso de Uso: Ingresar datos generales. 39 Tabla 6: Caso de Uso: Tolerance. Tabla 7: Caso de Uso: My Own Data. 40 Tabla 8: Caso de Uso: Who we are. Tabla 9: Caso de Uso: Contact. 41 En el nivel 2 (Figura 5) se describen las funcionalidades de la aplicación que resultaron de refinar los casos de uso principales obtenidos en el nivel 1. Figura 51: Refinamiento de los Casos de Uso principales y sus relaciones Nivel 2. Tabla 10: Caso de Uso: Leer PDF. 42 43 Tabla 11: Caso de Uso: Aplicar OCR. 44 Tabla 12: Caso de Uso: Ingresar arcos. Tabla 13: Caso de Uso: Generar Reportes. 45 Tabla 14: Caso de Uso: Calcular MU. Tabla 15: Caso de Uso: Nuevo paciente. 46 4.2 Iteración 1 8 Junio 2016 – 10 Junio 2016: En esta iteración se desarrolla el módulo de recepción de datos generales de la tabla de plan de tratamiento de un paciente. 4.2.1 Planificación Para esta iteración se establece la meta de Desarrollar el módulo de recepción de datos generales de la tabla de plan de tratamiento de un paciente. En la Tabla 16 se encuentran las distintas historias de usuario correspondientes a esta iteración. Tabla 16: Historia de usuario – Iteración 1. Numero Fecha Descripción 1 8/06/2016 – 9/06/2016 Crear un formulario capaz de cargar la data general del usuario (dosimetría, dosis total, número de fracciones, porcentaje de prescipcion, peso de la dosis al máximo, cantidad de arcos). Crear botones de opciones de carga de los datos generales del paciente. 2 10/06/2016 Crear menú de navegación 4.2.2 Diseño En esta se definen las interfaces de usuario a codificar sobre el formulario de datos generales. Aspectos claves a destacar: - El diseño de interfaces fue basado en Material Design. - Los campos a ingresar por el usuario fueron solo de tipo numérico. - El usuario no puede avanzar a la fase de arcos si todos los campos no están completos. - El menú de navegación debe estar ubicado a la izquierda de la aplicación. 47 Prototipo de interfaz Datos Generales En esta interfaz el usuario fue capaz de llenar los datos de generales del paciente (dosimétrica, dosis total, numero de fracciones, porcentaje de prescripción y cantidad de arcos) todos los campos deben ser numéricos. El formulario también posee 3 botones al fondo del formulario los cuales fueron explicados de izquierda a derecha según la Figura 6. El primer botón le permite al usuario subir una imagen (el plan de tratamiento de un paciente) a la que se le va a aplicar OCR. El segundo botón le permite subir un documento (plan de tratamiento de un paciente) en formato PDF. El tercer botón le permite al usuario navegar hasta el formulario de los arcos y solo es posible cuando todos los campos estén completos, de encontrarse algún campo vacío se va a desplegar un mensaje indicándole al usuario que campo se encuentra sin información como se muestra en la figura. Pantalla “Datos Generales”. Pantalla “Datos Generales - Error”. Figura 6: Prototipo de interfaz Datos Generales 48 Prototipo de interfaz Menú desplegable En esta interfaz el usuario es capaz de navegar a las diferentes interfaces independientes que posee la aplicación móvil, se establece que el formulario de Datos Generales fue asociado como la opción de Home como se muestra en la Figura 7. Figura 7: Prototipo de interfaz menú de navegación. 4.2.3 Codificación Para esta iteración la codificación de interfaces fue realizada por un lenguaje de marcado (XML) el cual facilitaba que cada textbox se le pudiera ingresar solo datos numéricos. Se validó que los campos estén completos antes de avanzar a la sección de arcos de paciente. Al momento de presionar el botón que te envía a la sección de los arcos del paciente se hace la siguiente validación: 49 Donde total_dose corresponde al contenido de Total dose, number_fraction corresponde al contenido de Number fraction, treatment_per corresponde al contenido de Treatment Percentage y weight_dose_maximum corresponde al contenido de Weight at dose maximum. 4.2.4 Pruebas Las pruebas se hicieron bajo el siguiente ambiente: Sistema Operativo: Android versión 4.1.2 Configuración de Hardware: CPU: Dual-core 1.5 GHz Scorpion Memoria RAM: 1GB y Memoria Interna: 32 GB Dispositivo utilizado: Sony Ericsson Xperia LT26i Pruebas funcionales En la Tabla 17 se encuentran las distintas pruebas funcionales realizadas para verificar el correcto funcionamiento de las actividades realizadas en esta iteración 50 Tabla 17: Pruebas– Iteración 1. Nro. Nombre de la Prueba Objetivos Resultados Esperados 1 Campos completos Verificar que todos los campos estén completos antes de avanzar a ingresar los arcos Se debe intentar pasar a la sección de arcos con 1 campo incompleto. La aplicación debe enviarle un mensaje al usuario informando cual campo se encuentra vacío Prueba 1 – Campos completos Para verificar el correcto funcionamiento de la validación de los campos completos, se realizaron diferentes pruebas dejando varios campos vacíos. 1. Se dejó el campo Total dose vacío y se presionó el botón de ingresar a la sección de arcos Resultado: La aplicación le envió un mensaje al usuario notificando que el campo Total dose se encontraba vacío como se muestra en la Figura 9. 2. Se dejó el campo Number fraction vacío y se presionó el botón de ingresar a la sección de arcos Resultado: La aplicación le envió un mensaje al usuario notificando que el campo Number fraction se encontraba vacío. 3. Se dejó el campo Treatment percentage vacío y se presionó el botón de ingresar a la sección de arcos 51 Resultado: La aplicación le envió un mensaje al usuario notificando que el campo Treatment percentage se encontraba vacío. Figura 8: Interfaz campos vacíos datos generales. 4. Se dejó el campo Weight at dose maximum vacío y se presionó el botón de ingresar a la sección de arcos Resultado: La aplicación le envió un mensaje al usuario notificando que el campo Weight at dose maximum se encontraba vacío. 4.3 Iteración 2 13 Junio 2016 – 16 Junio 2016 Se desarrolla la sección del módulo de arcos del paciente. 52 4.3.1 Planificación Para esta iteración se establece la meta Desarrollar el módulo de recepción de los arcos de la tabla de plan de tratamiento de un paciente. En la Tabla 18 se encuentran las distintas historias de usuario correspondientes a esta iteración. Tabla 18: Historia de usuario – Iteración 2. Numero Fecha Descripción 1 13/06/2016 - 15/06/2016 Crear un formulario capaz de cargar los arcos del usuario (conos, promedio en profundidad (mm), factor peso, unidades monitor TPS). 2 16/06/2016 Crear una sección de reporte en la cual se podrá visualizar los botones de generar reporte, calcular mu y nuevo reporte. 4.3.2 Diseño En esta se definen las interfaces de usuario a codificar sobre el formulario de datos generales. Aspectos claves a destacar: - El diseño de interfaces fue basado en Material Design. - Los datos generales deben estar cargados y debe ser transparente el cálculo para el usuario 1.1.1. Prototipo de interfaz Insertar arcos. En esta interfaz el usuario fue capaz de ingresar los datos relacionados a los arcos del paciente (cone, avg. Depth (mm), weight factor, MU TPS). Los 53 datos a ingresar fueron solo de tipo numérico. Se crea un tab (un máximo de 19) por arco elegido por usuario en el formulario de Datos Generales. La Figura 9 muestra el prototipo de interfaz para Insertar arcos Figura 9: Prototipo de interfaz “Insertar arcos”. 1.1.2. Prototipo de interfaz Generar reportes/Calcular MU. En esta interfaz se podrán visualizar dos inputText que corresponden al ID del paciente y el ID del plan, estos datos fueron de utilidad al momento de generar reportes. Adicionalmente hay 3 botones, el primero corresponde a la creación de un reporte sobre los datos calculados e ingresados del paciente, el segundo que hace una metáfora referente a limpiar realizara la función de borrar la data para generar un reporte nuevo y el tercero que hace una metáfora referente a calcular corresponde al 54 botón de cálculo de independiente de MU. En la Figura 10 se muestra el prototipo de interfaz para los reportes Figura 10: Prototipo de interfaz “Generar Reporte/Calcular MU”. 4.3.2 Codificación Para esta iteración la codificación de interfaces fue realizada por un lenguaje de marcado (XML) el cual facilitaba que cada textbox se le pudiera ingresar solo datos numéricos para la parte de los arcos y en la interfaz de reportes pueden ser alfanumérico. En consecuencia no hay pruebas funcionales en esta iteración. 55 4.4 Iteración 3 17 Junio 2016 – 24 Junio 2016 Se desarrolla la sección del módulo de generación de reportes del paciente en formato PDF con la librería itextpdf en su versión 5.5.9. Listar los cálculos de unidades monitor para arco que se encuentra en el formulario de Insertar arcos. 4.4.1 Planificación Para esta iteración se establece la meta fue desarrollar el módulo de generación de reportes y cálculo de unidades de monitor independiente. En la Tabla 19 se encuentran las distintas historias de usuario correspondientes a esta iteración. Tabla 19: Historia de usuario – Iteración 3. Numero Fecha Descripción 1 17/06/2016 - 20/06/2016 Crear una planilla en formato PDF donde se muestren los datos ingresados por el usuario (datos generales, arcos, id de plan y el paciente de poseer). 2 21/06/2016 - 24/06/2016 Crear una lista donde se muestren el MU calculado según los datos ingresados del usuario. 4.4.2 Diseño En esta se definen las interfaces de usuario a codificar sobre el formulario de datos generales. Aspectos claves a destacar: - El diseño de interfaces fue basado en Material Design. 56 - Los datos generales y arcos deben estar cargados. 1.1.3. Prototipo de interfaz Insertar arcos. Para interfaz se despliega un dialog indicándole al usuario si desea generar el reporte como se muestra en la figura 11. Si el usuario presiona OK se abre el documento como se muestra en la imagen. Si presiona cancelar no se muestra nada. En caso de que existan campos incompletos se le indicará al usuario cual arco no tiene los datos completos, en la Figura 12 se puede visualizar el mensaje. Interfaz “Generar Reporte”. Formato reporte Figura 11: Prototipo de Interfaz Generar Reporte y Formato del Reporte. 57 Figura 12: Prototipo de interfaz “Generar Reporte/Calcular MU datos incompletos”. 1.1.4. Prototipo de interfaz Calcular MU En esta interfaz se despliega una lista sobre el cálculo de MU, cada ítem posee 3 datos importantes; uno es el MU QC SRS, este campo contiene información sobre el MU calculado por la aplicación, MU TPS hace referencia al MU que posee el plan de tratamiento del paciente y por último el porcentaje de diferencia entre ambas unidades de monitor con un icono indicando 3 niveles de acción verde: optimo, amarillo: satisfactorio y rojo: revisión. En la figura 13 se puede visualizar el prototipo de interfaz. 58 Figura 13: Prototipo de interfaz “Calcular MU”. 4.4.3 Codificación Se incorporan las clases para el cálculo de unidades de monitor. Se agrega la librería para la generación del reporte en formato PDF. Se agregan validaciones para verificar que los campos no estén vacíos. El ambiente de entorno donde se realizaron las pruebas es el mismo de la iteración 1 Clase Output Factor Clase utilizada para obtener los factores de campo, los factores de campo son necesarios para el cálculo de unidades monitor está compuesta como se muestra en la figura 14. La variable tmrArray es una constante que contiene datos 59 obtenidos de la hoja de cálculo de la empresa Servicios RADFIS C.A. para el cálculo de MU independiente. Figura 14: Clase OutputFactor. Definición de los métodos de la clase OUTPUT FACTOR getOutputFactor: Función para obtener el factor de campo dado un cono getIndexConoFromString: Función para obtener un índice del arreglo tmrArray dado un cono 60 Clase TMR: Clase utilizada para el cálculo de unidades monitor está compuesta como se muestra en la Figura 15. Las variables cono son constantes que contienen datos obtenidos de la hoja de cálculo de la empresa Servicios RADFIS C.A. para el cálculo de MU independiente. Figura 15: Clase TMR. Definición de los métodos de la clase TMR getTMR: Función para obtener el TMR dado el cono y la profundidad. Figura X getProfundidadIndex: Función para obtener el índice de los arreglos cono dada la profundidad, como se muestra en el fragmento de código a continuación Clase Six_X_Trilogy Clase utilizada para el cálculo de unidades monitor está compuesta como se muestra en la Figura 16. Esta clase contiene todos los métodos y se encarga de 61 almacenar todos los valores necesarios para realizar el cálculo de MU independiente. Adicionalmente usa los métodos de las clases Output Factor y TMR. Figura 16: Clase Six_X_Trilogy. Definición de los métodos de Six_X_Trilogy El formalismo utilizado para el cálculo de unidades monitor es el sugerido por el fabricante, el cual utiliza el Factor de Peso, Porcentaje de Prescripción, el Promedio de los TMR, el Factor de Calibración y el peso a la dosis máxima, cuyos detalles pueden ser revisado en el sitio web del fabricante, www.myvarian.com. 62 getDose_Fraction: Función que retorna la dosis por fracción tomando la dosis total y el número de fracciones ingresadas en los datos generales del paciente. getRepeatFactor: Función que retorna el factor de repetición tomando la dosis por fracción calculada, porcentaje de prescripción y peso máximo de la dosis. getOutoutFactor: Función que retorna el output factor utilizando la clase Output Factor, se toma como parámetro el cono ingresado por el usuario. getTMR: Función que retorna el TMR utilizando la clase TMR , se toma como parámetro la profundidad en milímetros ingresada por el usuario. getMUQCSRS: Función que realiza el cálculo de unidades monitor independiente. Para realizar este cálculo es necesario calcular el factor repetición, factor de peso, TMR, Output Factor y la dosimétrica. 63 getError: Función que retorna la comparación entre Unidades Monitor (MU SRS) calculadas contra las Unidades Monitor del plan de tratamiento 4.4.4 Pruebas Las pruebas de esta iteración se realizaron bajo el mismo ambiente descrito en la iteración 1. Pruebas Funcionales En la Tabla 20 se encuentran las distintas pruebas funcionales realizadas para verificar el correcto funcionamiento de las actividades realizadas en esta iteración Tabla 20: Pruebas– Iteración 3. Nro. Nombre de la Prueba Objetivos Resultados Esperados 1 Generación de reportes y cálculo de MU independiente Verificar que los datos del reporte estén correctos al igual que el cálculo de MU independiente Los resultados del cálculo de MU independiente deben no deben diferir en 1 unidad de la hoja de cálculo de MU independiente Prueba 1 – Generación de reportes y cálculo de MU independiente Para esta prueba se tomaron 2 (dos) planes de tratamientos de pacientes diferentes. Paciente 1: Paciente 1 Energía: 6X D’0: SAD (1.00) 64 Total dose: 2000.00 (cGy) Number of fraction: 1 Treatment percentage: 80.0 Weight at dose maximum: 5.00 Arcos: 5 Tabla 21: Datos Generales – Paciente 1. Arcos\Datos Conos Aveg. Depth (mm) Weight factor MU TPS 1 5 49.40 1.0 843.0 2 5 59.40 1.0 891.0 3 5 118.70 1.0 1220.0 4 5 102.1 1.0 1118.0 5 5 78.4 1.0 985.0 En la figura 18 se pueden observar cómo se ingresan los datos generales del plan del paciente Paciente 1, mientras que en la figura 17 se puede visualizar un fragmento de los arcos ingresados del plan del paciente Paciente 1. 65 Ingreso de datos Ingreso de arcos Figura 17: Ingreso de datos generales y arcos del paciente MU QC SRS– Paciente 1. Resultado: La salida generada luego de la ejecución del programa fue la siguiente: Al hacer el cálculo de unidades monitor independiente en la aplicación móvil no difirió del cálculo que hace la empresa en una hoja de cálculo aparte donde se lleva el proceso de verificación. En la figura 18 se puede visualizar el cálculo de MU realizado por la aplicación y en la figura 19 se puede visualizar el cálculo de MU realizado por la hoja de cálculo de la empresa Servicios RADFIS C.A. 66 Figura 18: Resultados de cálculo de MU independiente – Paciente 1. Figura 19: Hoja de cálculo de MU independiente – Paciente 1. Al crear el reporte se muestran con éxito los parámetros de entrada y los cálculos realizados para obtener el MU independiente al TPS. En la figura 20 se puede visualizar el reporte creado para Paciente 1. 67 Figura 20: Reporte generado – Paciente 1. Los siguientes pacientes que fueron incluidos en las pruebas tienen 18 arcos Paciente 2: Paciente 2 Energía: 6X D’0: SAD (1.00) Total dose: 2200.00 (cGy) Number of fraction: 1 Treatment percentage: 70.0 Weight at dose maximum: 7.271 Arcos: 18 68 Tabla 22: Datos generales – Paciente 2. Arcos\Datos Conos Aveg. Depth (mm) Weight factor MU TPS 1 14 106.3 1,004 756 2 12 113.2 0,989 794 3 12 121.0 0,989 827 4 12 62.4 1,004 623 5 12 68.8 0,989 634 6 14 86.5 0,989 676 7 5 104.7 0,330 323 8 5 111.7 0,330 336 9 5 119.4 0,330 350 10 5 61.0 0,330 257 11 5 67.1 0,330 265 12 5 84.5 0,330 291 13 5 111.1 0,466 471 14 5 118.1 0,466 490 15 5 123.9 0,466 506 16 5 54.3 0,466 349 17 5 59.0 0,466 358 18 5 76.6 0,466 394 En la figura 21 se pueden observar cómo se ingresan los datos generales del plan del paciente Paciente 2, junto a un fragmento de los arcos ingresados del plan. 69 Ingreso de datos Ingreso de arcos Figura 21: Ingreso de datos generales y arcos del paciente – Paciente 2. Resultado: La salida generada luego de la ejecución del programa fue la siguiente: Al hacer el cálculo de unidades monitor independiente en la aplicación móvil difirió en ±0.001% del cálculo que hace la empresa en una hoja de cálculo aparte donde se lleva el proceso de verificación. En la figura 22 se visualiza el cálculo independiente de MU realizado por la aplicación, mientras que en la figura 23 y 24 se pueden observar el cálculo independiente de MU realizado por la hoja de cálculo de la empresa Servicios RADFIS C.A. 70 Figura 22: Resultados de cálculo de MU independiente – Paciente 2. Figura 23: Hoja de cálculo de MU independiente A – Paciente 2. 71 Figura 24: Hoja de cálculo de MU independiente B – Paciente 2. Al crear el reporte se mostraron con éxito los parámetros de entrada figura 25 y los cálculos realizados figura 26 para obtener el MU independiente al TPS del paciente Paciente 2. Figura 25: Reporte Paciente 2 parámetros de entrada. 72 Figura 26: Reporte Paciente 2 valores calculados. Paciente 3: Paciente 3 Energía: 6X D’0: SAD (1.00) Total dose: 2000.00 (cGy) Number of fraction: 1 Treatment percentage: 50.0 Weight at dose maximum: 16.563 Arcos: 18 73 Tabla 22: Datos Generales – Paciente 3. Arcos\Datos Conos Aveg. Depth (mm) Weight factor MU TPS 1 10 98.0 1.00 431 2 10 98.0 1.00 429 3 10 93.0 1.00 419 4 10 43.0 1.00 324 5 10 45.0 1.00 329 6 10 51.0 1.00 339 7 14 93.0 1.00 395 8 14 93.0 1.00 393 9 14 89.0 1.00 386 10 14 50.0 1.00 318 11 14 51.0 1.00 320 12 14 59.0 1.00 333 13 20 100.0 1.00 390 14 20 98.0 1.00 384 15 20 92.0 1.00 373 16 20 44.0 1.00 293 17 20 45.0 1.00 297 18 20 52.0 1.00 308 En la figura 27 se pueden observar cómo se ingresan los datos generales del plan del paciente Paciente 3, y se puede visualizar un fragmento de los arcos ingresados del plan. 74 Ingreso de datos Ingreso de arcos Figura 27: Ingreso de datos generales y arcos del paciente – Paciente 3. Resultado: La salida generada luego de la ejecución del programa fue la siguiente: Al hacer el cálculo de unidades monitor independiente en la aplicación móvil difirió en ±0.001% del cálculo que hace la empresa en una hoja de cálculo aparte donde se lleva el proceso de verificación. En la figura 28 se visualiza el cálculo independiente de MU realizado por la aplicación, mientras que en la figura 29 y 75 30 se pueden observar el cálculo independiente de MU realizado por la hoja de cálculo de la empresa Servicios RADFIS C.A. Figura 28: Resultados de cálculo de MU independiente – Paciente 3. 76 Figura 29: Hoja de cálculo de MU independiente A – Paciente 3. Figura 30: Hoja de cálculo de MU independiente B – Paciente 3. Al crear el reporte se mostraron con éxito los parámetros de entrada figura 31 y los cálculos realizados figura 32 para obtener el MU independiente al TPS del paciente Paciente 3. 77 Figura 31: Reporte Paciente 3 parámetros de entrada. Figura 32: Reporte Paciente 3 valores calculados. 78 Paciente 4: Paciente 4 Energía: 6X D’0: SAD (1.00) Total dose: 2200.00 (cGy) Number of fraction: 1 Treatment percentage: 60.0 Weight at dose maximum: 12.536 Arcos: 18 Tabla 24: Datos Generales – Paciente 4. Arcos\Datos Conos Aveg. Depth (mm) Weight factor MU TPS 1 5 40.0 1.00 469 2 5 45.0 1.00 482 3 5 54.0 1.00 506 4 5 124.0 1.00 733 5 5 123.0 1.00 732 6 5 116.0 1.00 708 7 10 43.0 1.00 394 8 10 48.0 1.00 404 9 10 57.0 1.00 424 10 10 122.0 1.00 591 11 10 121.0 1.00 590 12 10 116.0 1.00 574 13 5 41.0 1.00 471 14 5 45.0 1.00 481 15 5 53.0 1.00 504 16 5 121.0 1.00 723 17 5 120.0 1.00 722 18 5 112.0 1.00 692 En la figura 33 se pueden observar cómo se ingresan los datos generales del plan del paciente Paciente 4, y se puede visualizar un fragmento de los arcos ingresados del plan. 79 Ingreso de datos generales Ingreso de arcos Figura 33: Ingreso de datos generales y arcos del paciente – Paciente 4. Resultado: La salida generada luego de la ejecución del programa fue la siguiente: Al hacer el cálculo de unidades monitor independiente en la aplicación móvil difirió en ±0.001% del cálculo que hace la empresa en una hoja de cálculo aparte donde se lleva el proceso de verificación. En la figura 34 se visualiza el cálculo independiente de MU realizado por la aplicación, mientras que en la figura 35 y 36 se pueden observar el cálculo independiente de MU realizado por la hoja de cálculo de la empresa Servicios RADFIS C.A. 80 Figura 34: Resultados de cálculo de MU independiente – Paciente 4. Figura 35: Hoja de cálculo de MU independiente A – Paciente 4. 81 Figura 36: Hoja de cálculo de MU independiente B – Paciente 4. Al crear el reporte se mostraron con éxito los parámetros de entrada figura 37 y los cálculos realizados figura 38 para obtener el MU independiente al TPS del paciente Paciente 4. Figura 37: Reporte Paciente 4 parámetros de entrada. 82 Figura 38: Reporte Paciente 4 valores calculados. Paciente 5: Paciente 5 Energía: 6X D’0: SAD (1.00) Total dose: 1800.00 (cGy) Number of fractions: 1 Treatment percentage: 50.0 Weight at dose maximum: 9.510 Arcos: 18 83 Tabla 25: Datos Generales – Paciente 5. Arcos\Datos Conos Aveg. Depth (mm) Weight factor MU TPS 1 28 94.0 0.823 475 2 28 103.0 0.823 496 3 28 111.0 0.823 515 4 28 84.0 0.823 451 5 28 94.0 0.823 473 6 28 104.0 0.823 497 7 18 77.0 1.07 592 8 18 83.0 1.07 611 9 18 90.0 1.07 634 10 18 98.0 1.07 657 11 18 103.0 1.07 674 12 18 106.0 1.07 686 13 5 92.0 1.205 970 14 5 98.0 1.205 999 15 5 102.0 1.205 1023 16 5 89.0 1.205 952 17 5 95.0 1.205 981 18 5 100.0 1.205 1011 En la figura 39 se pueden observar cómo se ingresan los datos generales y arcos ingresados del plan del paciente Paciente 5. 84 Ingreso de datos generales Ingreso de arcos Figura 39: Datos de ingresos del paciente – Paciente 5. Resultado: La salida generada luego de la ejecución del programa fue la siguiente: Al hacer el cálculo de unidades monitor independiente en la aplicación móvil difirió en ±0.001% del cálculo que hace la empresa en una hoja de cálculo aparte donde se lleva el proceso de verificación. En la figura 40 se visualiza el cálculo independiente de MU realizado por la aplicación, mientras que en la figura 41 y 42 se pueden observar el cálculo independiente de MU realizado por la hoja de cálculo de la empresa Servicios RADFIS C.A. 85 Figura 40: Resultados de cálculo de MU independiente – Paciente 5. Figura 41: Hoja de cálculo de MU independiente A – Paciente 5 86 Figura 42: Hoja de cálculo de MU independiente B – Paciente 5 Al crear el reporte se mostraron con éxito los parámetros de entrada figura 43 y los cálculos realizados figura 44 para obtener el MU independiente al TPS del paciente Paciente 5. Figura 43: Reporte Paciente 5 parámetros de entrada. 87 Figura 44: Reporte Paciente 5 valores calculados. 4.5 Iteración 4 27 Junio 2016 – 6 Julio 2016 En esta iteración se va a trabajar con métodos alternativos de carga de datos del plan de tratamiento del paciente. Los métodos a desarrollar son: Lectura de PDF y reconocimiento de texto a través de una imagen 4.5.1 Planificación Para esta iteración se establece la meta de desarrollar funciones encargadas de leer el informe del paciente en formato PDF o JPG para agilizar la carga de datos en los módulos de datos generales y arcos. 88 Tabla 26: Historia de usuario – Iteración 4. Numero Fecha Descripción 1 27/06/2016 - 30/06/2016 Desarrollar un método para la carga de datos del plan de tratamiento de un paciente a través de un documento en formato PDF 2 1/07/2016 - 6/07/2016 Desarrollar un método para la carga de datos del plan de tratamiento de un paciente a través del reconocimiento de texto en una imagen en formato JPG. 4.5.2 Diseño En esta se definen las interfaces de usuario a codificar sobre el formulario de datos generales. Aspectos claves a destacar: - El diseño de interfaces fue basado en Material Design. 1.1.5. Prototipo de interfaz Cargar PDF Esta interfaz consiste en desplegar nuestro explorador de archivos y permitir la navegación solo mostrando archivos en formato PDF. Al escoger el documento se aplica el método de lectura de texto de un PDF. Se puede visualizar el prototipo en la figura 45. 89 Figura 45: Prototipo de interfaz seleccionar documento PDF. 1.1.6. Prototipo de interfaz Aplicar OCR Aplicar OCR consiste en dos acciones escoger el segmento que voy a escanear (cono, profundidad, weight factor y MU TPS) y luego cortar la imagen según el segmento seleccionado. En la figura 46 se visualiza el prototipo de interfaz, se observa un dialog donde el usuario es capaz de seleccionar que columna desea escanear. En la figura 47 se visualiza el prototipo de interfaz al realizar el corte de la columna a escanear. 90 Figura 46: Prototipo de interfaz seleccionar columna OCR. Figura 47: Prototipo de interfaz cortar imagen OCR. 91 4.5.3 Codificación Para esta iteración se crean dos métodos encargados de la extracción y transformación de datos obtenidos por medio de una Imagen en formato JPG/PNG o un documento en formato PDF. getPDFData: Método el cual dado un PDF extraer su contenido en cadenas de caracteres y buscar los datos correspondientes al paciente. Los datos que se pueden obtener del PDF son: total dose, number of fractions, treatment percentage y todo los datos de los arcos (cone, avg. depth (mm), tmr, mu tps). callOCRAPI: Método encargado de realizar una llamada al servicio OCR, recibe como parámetro la imagen sobre el plan de tratamiento del paciente. Para que el OCR funcione se deben tomar las 4 columnas (cone, avg. depth, weight factor y mu tps). Este método solo puede escanear los arcos del paciente. 4.5.4 Pruebas Las pruebas de esta iteración se realizaron bajo el mismo ambiente descrito en la iteración 1. Pruebas Funcionales En la Tabla 27 se encuentran las distintas pruebas funcionales realizadas para verificar el correcto funcionamiento de las actividades realizadas en esta iteración 92 Tabla 27: Pruebas– Iteración 4. Nro. Nombre de la Prueba Objetivos Resultados Esperados 1 Aplicar lectura de PDF Extraer el texto del documento PDF y transformar ese texto en datos útiles para la aplicación Se espera que se pueda extraer la mayor cantidad de datos sobre el paciente de modo que se agilice el proceso de cálculo de unidades monitor. 2 Aplicar OCR Extraer el texto de una imagen en formato JPG y transformar ese texto en datos útiles para la aplicación Se espera que se pueda extraer la mayor cantidad de datos sobre el paciente de modo que se agilice el proceso de cálculo de unidades monitor. Prueba 1 Las pruebas se hicieron bajo el siguiente ambiente: Sistema Operativo: Android versión 4.1.2 Configuración de Hardware: CPU: Dual-core 1.5 GHz Scorpion Memoria RAM: 1GB y Memoria Interna: 32 GB Dispositivo utilizado: Sony Ericsson Xperia LT26i Paciente 1: Los datos del paciente corresponden a Paciente 1 paciente usado en la prueba 1 de la iteración 4. El resultado de las pruebas fueron capturas de pantalla al log del IDE, ya que para el usuario es transparente como se realiza el proceso de lectura de PDF. En la figura 48 y 49 se observa la data cruda extraída del PDF. 93 Figura 48: PDF plan de tratamiento del paciente Paciente 1– raw A. 94 Figura 49: PDF plan de tratamiento del paciente Paciente 1 – raw B. El la figura 50 se puede observar la transformación de la lectura del PDF y los datos extraídos. Figura 50: PDF plan de tratamiento del paciente Paciente 1 – resultado. Paciente 2: Los datos del paciente corresponden a Paciente 2 usado en la prueba 1 de la iteración 4. En la figura 51 y 52 se observa la data cruda extraída del PDF. 95 Figura 51: PDF plan de tratamiento del paciente Paciente 2 – raw A. 96 Figura 52: PDF plan de tratamiento del paciente Paciente 2 – raw B. El la figura 53 se puede observar la transformación de la lectura del PDF y los datos extraídos. Resultados: Al aplicar extracción de datos por PDF se pueden obtener casi todos los campos necesarios para hacer el cálculo de unidades monitor exceptuando el peso máximo de la dosis que debe ser introducida manual. 97 Figura 53: PDF plan de tratamiento del paciente Paciente 2 – resultado. Prueba 2 Los datos del paciente corresponden a Paciente 2 usado en la prueba 1 de la iteración 4. El proceso de cómo se aplica OCR es transparente para el usuario se usaran capturas de pantalla al log del IDE para visualizar la extracción y transformación de los datos. En la figura 54 se visualiza el plan de tratamiento del paciente al que se le aplico OCR. 98 Figura 54: OCR plan de tratamiento del paciente. Conos: En la figura 55 se puede visualizar el log de conos, está dividido en 2 secciones, la sección I/Cone representa lo que detectó el OCR, I/OCR representa todas las filas transformadas separadas por comas. Al aplicar OCR a la columna de conos se detectó todas las filas de manera correcta. En caso de que un valor se salga de rango o no se detecten todas las filas el valor por defecto que se le asigna a las filas faltantes es 5. 99 Figura 55: OCR log Cone. Depth: En la figura 56 se puede visualizar el log de depth, está dividido en 2 secciones, la sección I/Depth representa lo que detectó el OCR, I/OCR representa todas las filas transformadas separadas por comas. Al aplicar OCR a la columna de depth no se detectaron todas las filas de manera correcta, existen filas donde no se detecta la parte decimal del número o que detecta letras por números. También ocurre que una fila detectada se sale del rango y se configura que su valor por defecto sea 20.0 de depth. 100 Figura 56: OCR log Depth. Weight Factor: En la figura 57 se puede visualizar el log de weight factor, está dividido en 2 secciones, la sección I/Weight representa lo que detectó el OCR, I/OCR representa todas las filas transformadas separadas por comas. Al aplicar OCR a la columna de weight factor se detectó todas las filas de manera correcta. En caso de que un valor se salga de rango o no se detecten todas las filas el valor por defecto que se le asigna a las filas faltantes es 1.00 Figura 57: OCR log Weight Factor. 101 MU TPS: En la figura 58 se puede visualizar el log de mu tps, está dividido en 2 secciones, la sección I/MuTps representa lo que detectó el OCR, I/OCR representa todas las filas transformadas separadas por comas. Al aplicar OCR a la columna de depth no se detectaron todas las filas de manera correcta, existen filas donde se detectan letras por números. En caso de que un valor se salga de rango o no se detecten todas las filas el valor por defecto que se le asigna a las filas faltantes es 1. Figura 58: OCR log MU TPS. Resultados: Al aplicar OCR a un plan de tratamiento de un paciente, solo podemos obtener los datos de los arcos, es un procedimiento que no es 100% preciso, sin embargo transformando las cadenas detectadas por el OCR se puede mejorar la precisión y solo unas pocas filas no son correctas. El proceso de cálculo de unidades monitor se agiliza, en especial casos donde son muchos arcos. 4.6 Iteración 5 7 Julio 2016 – 8 Julio 2016 Se desarrollan interfaces para brindarle al usuario información de la aplicación y los desarrolladores. 102 4.6.1 Planificación Para esta iteración se establece la meta para el desarrollo de las interfaces de información como: ¿Quiénes somos?, Formalismo de Cálculo, Acerca de nosotros y que dosimétrica se usó para hacer los cálculo. Tabla 28: Historia de usuario – Iteración 5 Numero Fecha Descripción 1 07/07/2016 - 08/07/2016 Crear interfaces donde se despliegue información sobre la aplicación y los desarrolladores. Las secciones son: Calculation Formalism, Tolerance, My own data, Who we are? Y Contact us. 4.6.2 Diseño Se definen prototipos y estándares en el diseño de interfaces. Aspectos claves a destacar: - El diseño de interfaces fue basado en Material Design. 1.1.7. Prototipo de interfaz Calculation Formalism Interfaz que tiene como objetivo explicar de dónde provienen los cálculos realizados por la aplicación. En la figura 59 se visualiza el prototipo creado para esa interfaz 1.1.8. Prototipo de interfaz Tolerance Interfaz que tiene como objetivo explicar la tolerancia usada en MU QC SRS. En la figura 59 se visualiza el prototipo creado para esa interfaz 103 interfaz Calculation Formalism interfaz Tolerance. Figura 59: Prototipo de interfaz Calculation Formalism e interfaz Tolerance. 1.1.9. Prototipo de interfaz My own data Interfaz que tiene como propósito indicarle al usuario que si desea utilizar su propia dosimétrica, se ponga en contacto con los desarrolladores. En la figura 60 se visualiza el prototipo creado para esa interfaz 104 Figura 60: Prototipo de interfaz My own data 1.1.10. Prototipo de interfaz Who we are? Interfaz que tiene como propósito proveer información personal de los desarrolladores de la aplicación. En la figura 61 se visualiza el prototipo creado para esa interfaz 105 Figura 61: Prototipo de interfaz Who we are? 1.1.11. Prototipo de interfaz Contact us Interfaz que tiene como propósito proveer información de contacto de los desarrolladores de la aplicación. En la figura 62 se visualiza el prototipo creado para esa interfaz 106 Figura 62: Prototipo de interfaz Contact us. 4.6.3 Codificación Para esta iteración la codificación fue diseño de interfaces en XML. A continuación se muestra el diseño final de las interfaces creadas para esta iteración, My own data (figura 63), Tolerance (figura 63), Calculation Formalism (figura 64), Contact us (figura 64) y Who we are? (figura 65). Interfaz My own data Interfaz Tolerance Figura 63: Interfaz My own data y Tolerance. 107 Interfaz Calculation Formalism Interfaz Contact Figura 64: Interfaz Calculation Formalism e Interfaz Contact. 108 Figura 65: Interfaz Who we are? 109 CAPÍTULO V MARCO DE RESULTADOS En el siguiente capítulo se describe el contenido de la aplicación móvil Descripción de la aplicación El formalismo utilizado para el cálculo de unidades monitor es el sugerido por el fabricante, el cual utiliza el Factor de Peso, Porcentaje de Prescripción, el Promedio de los TMR, el Factor de Calibración y el peso a la dosis máxima, cuyos detalles pueden ser revisado en el sitio web del fabricante, www.myvarian.com. MU QC SRS es una aplicación nativa desarrollada en el lenguaje Java con el IDE Android Studio. El punto de partida de la aplicación móvil fue el desarrollo de una hoja de cálculo en Microsoft Excel ® automatizada, basada en el formalismo anteriormente descrito, y en la data dosimétrica obtenida durante la puesta en marcha del Planificador Eclipse Cone Planning. En el proceso de verificación de Unidades Monitor, MU QC SRS fue desarrollada para que el usuario complete los siguientes parámetros: En la primera hoja deberá introducir la dosis total del tratamiento, el número de fracciones, el porcentaje de prescripción y el peso a la dosis máxima (Figura 65 A). En la segunda hoja deberá introducir el tamaño del cono, profundidad promedio, el factor de peso y las unidades monitor calculadas por el sistema de planificación, para cada arco empleado en el plan de tratamiento (Figura 65 B). 110 Figura 65. Captura de Pantalla MU QC SRS. A: Primera hoja de MU QC SRS donde se introducen los parámetros del plan. B: Segunda hoja de MU QC SRS donde se introducen los parámetros de cada arca de tratamiento. Una vez calculadas las Unidades Monitor (MU SRS), estas son comparadas con las Unidades Monitor del sistema de planificación (MU TPS) y calcula un error porcentual, utilizando la siguiente formula: Todos los arcos son calculados y comparados con las Unidades Monitor dadas por el sistema de planificación. La aplicación móvil genera un reporte con los 111 parámetros del plan y los dosimétricos utilizados, el resultado del cálculo y la comparación contra el sistema de planificación (Figura 66). Figura 66. Reporte Generado por MU QC SRS. Módulo Ingresar datos generales Este módulo permite al usuario ingresar datos sobre el plan del tratamiento del paciente, los datos del paciente se dividen en la dosis total del tratamiento, el número de fracciones, el porcentaje de prescripción y el peso a la dosis máxima. Posee dos sub-módulos importantes que van a facilitar la carga de los datos, son leer PDF y aplicar OCR. Leer PDF consiste en que el usuario debe cargar un documento del plan de tratamiento del paciente en formato PDF y la aplicación se encargará de tomar los datos del documento, agilizando la carga de los datos del paciente. Aplicar OCR consiste en que el usuario debe cargar una imagen en formato JPG y la aplicación envía la imagen a un servicio web a través de una petición JSON y este responde con 112 un JSON los resultados al escanear la imagen con la finalidad de agilizar la carga de los datos del paciente. Ingresar los datos del paciente de forma manual Verificar la calibración, en esta aplicación se trabaja con SAD ó SSD. Ingresar los campos Total dose (dosis total del tratamiento), Number of fraction (número de fracciones), Treatment percentage (porcentaje de prescripción) y Weight at dose maximum (peso a la dosis máxima). Verificar cuantos arcos posee el plan de tratamiento del paciente y ajustarlo en la aplicación. Una vez estén todos los campos completos presionar el botón con la metáfora del lápiz (Figura 67) si desea introducir los arcos. Si al presionar el botón los campos están incompletos se desplegará un mensaje indicando que campo falta (Figura 68). Ingresar los datos del paciente por un documento en formato PDF Presionar el botón con la metáfora de PDF (Figura 69). Escoger un archivo en formato PDF sobre el plan de tratamiento del paciente. Esperar a que la aplicación procese los datos y luego verificar la veracidad de la información. Ingresar el Weight factor (peso a la dosis máxima) Una vez estén todos los campos completos presionar el botón con la metáfora del lápiz (Figura 67) si desea introducir los arcos. Si al presionar el botón los campos están incompletos se desplegará un mensaje indicando que campo falta (Figura 68). 113 Figura 67. Ingresar a Insertar arcos. 114 Figura 68. Datos generales incompletos. Figura 69. Ingresar los datos del paciente por un documento en formato PDF. 115 Ingresar los datos del paciente a través de una imagen en formato JPG Seleccionar la cantidad de arcos. Presionar el botón con la metáfora de galería (Figura 70). Escoger la columna a escanear (cone, avg. depth, weight factor, mu tps). Escoger un archivo en formato JPG sobre el plan de tratamiento del paciente. Cortar la columna que necesita del plan de tratamiento del paciente (Figura 71). Una vez estén todos los campos completos presionar el botón con la metáfora del lápiz (Figura 67) si desea introducir los arcos. Si al presionar el botón los campos están incompletos se desplegará un mensaje indicando que campo falta (Figura 68). Nota: Es obligatorio cortar las 4 columnas para que el OCR pueda visualizarse en la pantalla de arcos Figura 70. Ingresar los datos del paciente por un documento en formato JPG 116 Figura 71. Cortar columnas del plan de tratamiento del paciente. Módulo Ingresar Arcos Este módulo permite al usuario ingresar datos sobre el plan del tratamiento del paciente, los datos del paciente se dividen en el tamaño del cono, profundidad promedio, el factor de peso y las unidades monitor calculadas por el sistema de planificación, para cada arco empleado en el plan de tratamiento. Posee 2 sub- módulos importantes generar reportes y calcular mu. Generar reportes consiste en generar un archivo en formato PDF sobre los parámetros de entrada y el mu calculado para el paciente. Calcular mu consiste en desplegar una lista de las unidades monitor que se calcularon para cada arco y establecer un sistema de comparación con las unidades monitor del plan de tratamiento del paciente. Calcular MU Ingresar los campos Cone (tamaño del cono), Avg. Depth (profundidad promedio), Weight factor (factor de peso) y MU TPS (unidades monitor del plan de tratamiento del paciente). Verificar que todos los campos estén completos para cada arco que posee el plan de tratamiento del paciente en la aplicación. 117 Una vez estén todos los campos completos presionar el botón con la metáfora de la calculadora (Figura 72) si desea introducir los arcos. Si al presionar el botón los campos están incompletos se desplegará un mensaje indicando que hay campos vacíos en el arco que este incompleto (Figura 73). De encontrarse todos los campos completos se desplegará una lista de las unidades monitor que se calcularon para cada arco y establecer un sistema de comparación con las unidades monitor del plan de tratamiento del paciente. La lista tiene 3 elementos importantes y son: MU QC SRS, este campo contiene información sobre el MU calculado por la aplicación, MU TPS hace referencia al MU que posee el plan de tratamiento del paciente y por último el porcentaje de diferencia entre ambas unidades de monitor con un icono indicando 3 niveles de acción verde: optimo, amarillo: satisfactorio y rojo: revisión. Figura (74). Figura 72. Metáfora calculadora Figura 73. Campos vacíos Crear Reporte/Calcular MU. 118 Figura 74. Calcular MU. Generar Reporte Ingresar los campos Cone (tamaño del cono), Avg. Depth (profundidad promedio), Weight factor (factor de peso) y MU TPS (unidades monitor del plan de tratamiento del paciente). Verificar que todos los campos estén completos para cada arco que posee el plan de tratamiento del paciente en la aplicación. Una vez estén todos los campos completos, si desea rellenar el campo de Patient ID y Plan ID, lo completa (es opcional). Si al presionar el botón los 119 campos están incompletos se desplegará un mensaje indicando que hay campos vacíos en el arco que este incompleto (Figura 73). En la figura 75 se visualizan los campos completos al crear el reporte Figura 75. Crear Reporte. Presionar el botón Create Report (Figura 76). Se desplegará un dialog indicando si desea visualizar el reporte. Si lo desea ver se abre el reporte (Figura 77), en caso contrario, se mantiene en la misma interfaz. 120 Figura 76. Dialog Create Report. Nota: Los reportes son almacenados en la carpeta de Descargas/MU QC SRS/ 121 Figura 77. Reporte. Módulo Calculation Formalism Interfaz que tiene como objetivo explicar de dónde provienen los cálculos realizados por la aplicación. 122 Módulo Tolerance Interfaz que tiene como objetivo explicar la tolerancia usada en MU QC SRS. Módulo My own Data Interfaz que tiene como propósito indicarle al usuario que si desea utilizar su propia dosimétrica, se ponga en contacto con los desarrolladores. Módulo Who we are? Interfaz que tiene como propósito proveer información personal de los desarrolladores de la aplicación. Módulo Contact us Interfaz que tiene como propósito proveer información de contacto de los desarrolladores de la aplicación. 123 CONCLUSIONES Finalmente, con este Trabajo Especial de Grado, se puede concluir que se logró llevar a cabo el diseño y construcción de una aplicación móvil nativa para la verificación MU QC SRS (Monitor Units Quality Control Stereotactic Radiosurgery) bajo el ambiente Android que permite la comprobación del cálculo de las unidades de monitor independiente TPS (Treatment-planning System) para el tratamiento de radiocirugía intracraneal, con acelerador lineal y conos. Para lograr el desarrollo de este sistema se realizaron investigaciones sobre diferentes metodologías agiles, pero XP demostró ser la metodología que más se adaptaba a una aplicación que estaba en constante evolución y no son necesarios tantos artefactos para crear software de calidad. También se puede resaltar que el equipo de trabajo (cliente, gerentes y programador) estaba muy comprometido con el desarrollo de la aplicación y la comunicación era un fuerte en los miembros del equipo. Sin embargo se adaptaron las prácticas de XP, en especial la que indica que se debe producir código en pareja, debido a que solo había un desarrollador para el desarrollo de la aplicación móvil. La aplicación cuenta con métodos simples y bien establecidos para calcular las unidades de monitor, donde el propósito fundamental es generar resultados completamente independientes del sistema de planificación (TPS) principal. La inclusión de bibliotecas dosimétricas genéricas libera al usuario de entrar tablas extensas de datos, lo cual sería desagradable y muy propenso a errores en una aplicación para dispositivos móviles. Las principales funciones que se crearon en esta plataforma son: el cálculo de MU independiente, generación de reportes, lectura de informes sobre el plan de tratamiento de un paciente en formato PDF y reconocimiento de texto en imágenes en formato JPG sobre el plan de tratamiento de un paciente. El cálculo de MU, demostró ser una función que realiza cálculos exactos garantizando al usuario que MU QC SRS 124 es una herramienta confiable para ser usada como control de calidad en el cálculo de unidades monitor independiente y así poder detectar potenciales fallas previas al tratamiento de radiocirugía. La función de generación de reportes, demostró ser un método capaz de brindarle al usuario soporte para verificar los cálculos realizados por MU QC SRS y los datos introducidos por él. La función de lectura plan de tratamiento de un paciente en formato PDF, demostró ser un método capaz de agilizar el cálculo de verificación al ser capaz de obtener casi todos los datos del paciente (datos generales y arcos), el único dato que no se pudo extraer fue el peso de la dosis al máximo y es porque el informe no poseía ese dato. La función de reconocimiento de texto en imágenes fue otro método que garantizo que el proceso de carga de datos del plan de tratamiento del paciente fuese un proceso rápido a pesar de contar con la limitación de solo poder tomar los arcos del plan del paciente. La aplicación puede ser descargada en el playstore a través del siguiente enlace: https://play.google.com/store/apps/details?id=com.servicios.radfis.muqcsrs&hl=es 125 RECOMENDACIONES Los siguientes puntos son una serie de recomendaciones que bien pueden ser tomadas en cuenta con el fin de optimizar y agregar nuevas funcionalidades a la aplicación móvil para la verificación del cálculo de unidades monitor en tratamientos de radiocirugía intracraneal. Desde el punto de vista Físico MU QC SRS está basada en el formalismo utilizado por el algoritmo Cone, Dose Calculation, por lo que la versión actual, sólo puede ser utilizada para verificar cálculos de MU de este algoritmo. La App utiliza la profundidad promedio del arco calculada por el propio sistema de planificación. En principio, este cálculo promedio puede ser una potencial fuente de desviaciones, y por tal razón debe ser verificado de modo independiente. La App solo calcula para la energía de 6 MV. Desde el punto de vista de Software El reconocimiento de texto del plan del paciente a través de imágenes en formato JPG, es realizado por un servicio web. El usuario debe disponer conexión a internet para poder usar este servicio. Se puede incorporar un OCR dentro de la aplicación. Adicionalmente se deben tomar 4 fragmentos(conos, avg. depth (mm), weight factor y mu tps) del plan del paciente para que el OCR funcione correctamente, al incluir un OCR se puede trabajar para que al realizar un corte de toda la tabla de arcos tome las 4 columnas necesarias. Los datos del paciente se pierden si se hace la verificación y no se crea un reporte. Se puede incluir esa información dentro de una base de datos para ser consultada por el usuario en otro momento si así lo desea. 126 Referencias Bibliográficas - Beck, K. (1999). Extreme Programming Explained. Addison-Wesley Professional. - Canós, J. and Letelier, P. (2002). Metodologías Ágiles en el desarrollo de software. - Díaz (2009). Rup vs Extreme Programming. Recopilado de: http://www.usmp.edu.pe/publicaciones/boletin/fia/info49/articulos/RUP%20vs.% 20XP.pdf - Espinoza E. (2007) Lima, Programación Extrema. Recopilado de: http://es.slideshare.net/edgarespinoza/programacion-extrema - Google (2014). Material Design. Recopilado de https://material.google.com/ - Hoch J (2014), La radiocirugía. Recuperado de http://www.angiomaalliance.org/ - International Atomic Energy Agency “IAEA” (2000) Aspectos físicos de la garantía de calidad en radioterapia: Protocolo de control de calidad. Vienna Recuperado de: http://www- pub.iaea.org/MTCD/Publications/PDF/te_1151_prn.pdf - Laudon, K., & Laudon, J. (2012). Sistemas de Información Gerencial. Pearson Educación. - Luque L. (2009), Unidad I Sistemas de Información. Recopilado de http://sistemasdeinformacionpsm.blogspot.com/2009/03/unidad-i-sistemas-de- informacion_29.html - Martínez (2007), Dispositivos Móviles. Recopilado de http://exa.unne.edu.ar/informatica/SO/tfbasterretche.pdf - Pérez E (2014), ¿Qué es Material Design? Recopilado de http://www.elandroidelibre.com/2014/11/que-es-material-design.html - Porto J., Marino M. (2011), Definición de Dispositivo. Recopilado de: http://definicion.de/dispositivo/ - Quin (2015). Extensible Markup Language (XML). Recopilado de: https://www.w3.org/XML/ - Radioterapia Oncológica GURVE (2016), Glosario. Recuperado de http://www.radioterapia.com.ve/. - Raona L. (2009), Aplicación Nativa. Recopilado de http://www.raona.com/es/Solutions/Template/163/App-nativa-web-o- h%C3%ADbrida - Revelo J (2014), Arquitectura Android. Recopilado de: http://www.hermosaprogramacion.com/2014/08/aprendiendo-la-arquitectura-de- android/ - Slideshare: Libro Blanco de apps. (2013). Recuperado el 2015, de http://www.slideshare.net/mmaspain/libro-blanco-de-las-aplicaciones-mviles http://www.usmp.edu.pe/publicaciones/boletin/fia/info49/articulos/RUP%20vs.%20XP.pdf http://www.usmp.edu.pe/publicaciones/boletin/fia/info49/articulos/RUP%20vs.%20XP.pdf http://es.slideshare.net/edgarespinoza/programacion-extrema http://www.angiomaalliance.org/ http://www-pub.iaea.org/MTCD/Publications/PDF/te_1151_prn.pdf http://www-pub.iaea.org/MTCD/Publications/PDF/te_1151_prn.pdf http://sistemasdeinformacionpsm.blogspot.com/2009/03/unidad-i-sistemas-de-informacion_29.html http://sistemasdeinformacionpsm.blogspot.com/2009/03/unidad-i-sistemas-de-informacion_29.html http://exa.unne.edu.ar/informatica/SO/tfbasterretche.pdf http://www.elandroidelibre.com/2014/11/que-es-material-design.html http://definicion.de/dispositivo/ https://www.w3.org/XML/ http://www.radioterapia.com.ve/ http://www.raona.com/es/Solutions/Template/163/App-nativa-web-o-h%C3%ADbrida http://www.raona.com/es/Solutions/Template/163/App-nativa-web-o-h%C3%ADbrida 127 - Sommerville I. (2002). Ingeniería de Software, Pearson Educación, Recopilado de: http://zeus.inf.ucv.cl/~bcrawford/AULA_ICI441/Ingenieria%20del%20Software %207ma.%20Ed.%20-%20Ian%20Sommerville.pdf - Vélez G (2004), Introducción a la física de la Radioterapia. Recopilado de http://www.efn.uncor.edu/escuelas/biomedica/Plandeestudios/materias%20compl etas/Medicina%20Nuclear/material%20medicina%20nuclear/Introducci%F3n%2 0a%20la%20F%EDsica%20de%20la%20Radioterapia.pdf http://zeus.inf.ucv.cl/~bcrawford/AULA_ICI441/Ingenieria%20del%20Software%207ma.%20Ed.%20-%20Ian%20Sommerville.pdf http://zeus.inf.ucv.cl/~bcrawford/AULA_ICI441/Ingenieria%20del%20Software%207ma.%20Ed.%20-%20Ian%20Sommerville.pdf http://www.efn.uncor.edu/escuelas/biomedica/Plandeestudios/materias%20completas/Medicina%20Nuclear/material%20medicina%20nuclear/Introducci%F3n%20a%20la%20F%EDsica%20de%20la%20Radioterapia.pdf http://www.efn.uncor.edu/escuelas/biomedica/Plandeestudios/materias%20completas/Medicina%20Nuclear/material%20medicina%20nuclear/Introducci%F3n%20a%20la%20F%EDsica%20de%20la%20Radioterapia.pdf http://www.efn.uncor.edu/escuelas/biomedica/Plandeestudios/materias%20completas/Medicina%20Nuclear/material%20medicina%20nuclear/Introducci%F3n%20a%20la%20F%EDsica%20de%20la%20Radioterapia.pdfi UNIVERSIDAD CENTRAL DE VENEZUELA FACULTAD DE CIENCIAS ESCUELA DE COMPUTACIÓN CENTRO DE INVESTIGACIÓN EN SISTEMAS DE INFORMACIÓN APLICACIÓN MÓVIL PARA LA VERIFICACIÓN DEL CÁLCULO DE UNIDADES MONITOR EN TRATAMIENTOS DE RADIOCIRUGÍA INTRACRANEAL Trabajo Especial de Grado Presentado ante la ilustre Universidad Central de Venezuela Por el Bachiller Elvis D. Coa Sotillo C.I. 20.604.552 Para optar al título de Licenciado en Computación Prof. Franklin J. Sandoval S. ii Octubre de 2016 iii Dedicatoria Esta tesis va dedicada a mis padres, familiares, amigos y mi hijo. Todos contribuyeron en diferentes aspectos de mi vida y me impulsaron a ser mejor, seguir adelante. Son modelo de calidad de persona y espero que sigan siendo parte de mi vida. iv Agradecimiento Quiero agradecer a mi casa de estudio, la Universidad Central de Venezuela, lugar en el que tuve la valiosa oportunidad de formarme humana y profesionalmente. A la facultad de ciencias por ser el espacio donde ocurrió gran parte del proceso de mi educación universitaria. Agradezco a los profesores encargados de dar cátedra, por tener la paciencia, sacrificio, voluntad y dedicación de impartir conocimiento a nosotros, los estudiantes, futuros colegas. Al personal de limpieza y mantenimiento, pues todas las mañanas recibía un salón adecuado, limpio y listo para estudiar. Quiero agradecer a mis compañeros y futuros compañeros de trabajo, que formaron parte de mi día a día. Agradezco a la empresa Servicios RADFIS C.A. y a todos los involucrados por todo el apoyo durante la producción de este trabajo especial de grado. A mi tutor, el Prof. Franklin Sandoval, por estar disponible y dispuesto en cualquier momento para aclarar mis dudas y corregirme, y por su incansable apoyo y sinceridad en todo momento. v UNIVERSIDAD CENTRAL DE VENEZUELA FACULTAD DE CIENCIAS ESCUELA DE COMPUTACIÓN CENTRO DE INVESTIGACIÓN EN SISTEMAS DE INFORMACIÓN Aplicación móvil para la verificación del cálculo de unidades monitor en tratamientos de radiocirugía intracraneal Tutor: Prof. Franklin Sandoval. Autor: Elvis D. Coa Sotillo C.I. 20.604.552 RESUMEN Los dispositivos móviles constituyen cada vez más una realidad que ofrece al usuario, en un mismo y reducido aparato, funciones de comunicación y procesamiento de datos que van mucho más allá de las simples llamadas telefónicas o la ejecución de aplicaciones básicas. Gracias a esto vivimos en una era donde los dispositivos móviles se han vuelto parte esencial de la vida diaria, donde existen infinidades de áreas en donde una aplicación móvil facilita los métodos de completar una asignación. Áreas nuevas que se están explorando con la evolución de la tecnología y las capacidades de estos dispositivos, con el fin de lograr una mejora productiva (realizar una tarea en un menor tiempo y usando menos recursos) de una sociedad o país. En el presente trabajo especial de grado, se presenta el desarrollo de una aplicación móvil que permite realizar cálculos de tiempos de tratamientos en radioterapia independiente al TPS (Treatment planning system) para la verificación de los tratamientos de radiocirugía intracraneal. Es una aplicación nativa diseñada bajo el sistema operativo Android, desarrollada con el IDE Android Studio, incluye funcionalidades como lectura y escritura de archivos PDF y la implementación de un OCR (Reconocimiento óptico de caracteres) que facilita la operación de carga de las variables para los cálculos principales de la aplicación. Es importante destacar que el MU QC SRS calcula la verificación solamente para el propósito de confirmación de las unidades de monitor primarias y que no se destina a la prescripción para tratamiento del cáncer intracraneal. Palabras Claves: Aplicaciones móviles, tecnologías, metodologías, OCR, radiocirugía, Servicios REST. vi INDICE Introducción ......................................................................................................... 1 CAPÍTULO I ....................................................................................................... 3 1.1 Planteamiento del problema. ................................................................ 3 1.2 Objetivos del Trabajo Especial de Grado ................................................ 5 1.2.1 Objetivo General .............................................................................. 5 1.2.2 Objetivos Específicos ....................................................................... 5 1.3 Justificación ............................................................................................. 6 1.4 Solución Propuesta. ................................................................................. 6 CAPÍTULO II ...................................................................................................... 8 2.1 Conceptualizando la Radioterapia ........................................................... 8 2.1.1 Radiocirugía ..................................................................................... 9 2.1.2 Radiocirugía Estereotáctica .............................................................. 9 2.1.3 Glosario de términos Básico. ......................................................... 10 2.2 Sistemas de información ....................................................................... 12 2.3 Dispositivos móviles ............................................................................. 13 2.3.1 Sistemas operativos móviles .......................................................... 13 2.3.2 Aplicación Móvil. ........................................................................... 14 2.3.3 Tipos de aplicaciones móviles ........................................................ 15 2.3.4 Arquitectura Android ..................................................................... 16 2.3.5 Android Studio ............................................................................... 16 2.3.6 Material Design .............................................................................. 18 CAPÍTULO III .................................................................................................. 19 MARCO METODOLOGICO ........................................................................... 19 vii 3.1 Metodologías Ágiles ............................................................................. 19 3.2. Programación Extrema (Extreme Programming) ................................. 19 3.2.1 Prácticas ......................................................................................... 20 3.2.2 Ciclo de vida ................................................................................... 25 3.2.3 Actividades ..................................................................................... 26 CAPÍTULO IV .................................................................................................. 29 MARCO APLICATIVO .................................................................................... 29 4.1 Iteración 0 .............................................................................................. 32 4.1.1 Planificación ................................................................................... 32 4.1.2 Diseño ............................................................................................. 34 4.2 Iteración 1 .............................................................................................. 46 4.2.1 Planificación ................................................................................... 46 4.2.2 Diseño ............................................................................................. 46 4.2.3 Codificación ................................................................................... 48 4.2.4 Pruebas ........................................................................................... 49 4.3 Iteración 2 .............................................................................................. 51 4.3.1 Planificación ................................................................................... 52 4.3.2 Diseño ............................................................................................. 52 4.3.2 Codificación ................................................................................... 54 4.4 Iteración 3 .............................................................................................. 55 4.4.1 Planificación ................................................................................... 55 4.4.2 Diseño ............................................................................................. 55 4.4.3 Codificación ................................................................................... 58 4.4.4 Pruebas ........................................................................................... 63 viii 4.5 Iteración 4 .............................................................................................. 87 4.5.1 Planificación ................................................................................... 87 4.5.2 Diseño ............................................................................................. 88 4.5.3 Codificación ................................................................................... 91 4.5.4 Pruebas ........................................................................................... 91 4.6 Iteración 5 ............................................................................................ 101 4.6.1 Planificación ................................................................................. 102 4.6.2 Diseño ........................................................................................... 102 4.6.3 Codificación ................................................................................. 106 CAPÍTULO V .................................................................................................. 109 MARCO DE RESULTADOS ......................................................................... 109 Descripción de la aplicación ............................................................................ 109 Módulo Ingresar datos generales ..................................................................... 111 Ingresar los datos del paciente de forma manual ...................................... 112 Ingresar los datos del paciente por un documento en formato PDF .......... 112 Ingresar los datos del paciente a través de una imagen en formato JPG ... 115 Módulo Ingresar Arcos .................................................................................... 116 Calcular MU .............................................................................................. 116 Generar Reporte ........................................................................................ 118 Módulo Calculation Formalism ....................................................................... 121 Módulo Tolerance ............................................................................................ 122 Módulo My own Data ...................................................................................... 122 Módulo Who we are?....................................................................................... 122 Módulo Contact us ........................................................................................... 122 ix CONCLUSIONES ........................................................................................... 123 RECOMENDACIONES ................................................................................. 125 Referencias Bibliográficas ............................................................................... 126 x ÍNDICE DE FIGURAS Figura 1: Ciclo de vida XP……………………………………………………… 26 Figura 2: Metáfora de la aplicación móvil………………………………………. 33 Figura 3: Descripción de los actores y su interacción con el sistema Nivel 0…... 35 Figura 4: Descripción de los actores y su interacción con el sistema Nivel 1....... 36 Figura 5: Refinamiento Casos de Uso principales y sus relaciones Nivel 2 .......... 40 Figura 6: Prototipo de interfaz de la pantalla “Datos Generales”………………. 46 Figura 7: Prototipo de interfaz menú de navegación………………………….... 47 Figura 8: Interfaz campos vacíos datos generales………………………………. 50 Figura 9: Prototipo de interfaz “Insertar arcos”…………..…………………….. 52 Figura 10: Prototipo de interfaz “Generar Reporte/Calcular MU”. …………… 53 Figura 11: Prototipo de interfaz “Generar Reporte”. …………………………… 55 Figura 12: Prototipo Interfaz Generar Reporte/Calcular MU datos incompletos.. 56 Figura 13: Prototipo de interfaz “Calcular MU”. ………………………………. 57 Figura 14: Clase Output Factor. ………………………………………………... 58 Figura 15: Clase TMR. …………………………………………………………. 59 Figura 16: Clase Six X Factor…………………………………………………. 60 Figura 17: Ingreso de datos generales y arcos del paciente MU QC SRS– Paciente 1………………………………………………………………………………… 64 Figura 18: Resultados de cálculo de MU independiente - Paciente 1. ……….. 65 Figura 19: Hoja de cálculo de MU independiente – Paciente 1. ……………… 66 Figura 20: Reporte generado – Paciente 1. …………………………………… 66 Figura 21: Ingreso de datos generales y arcos del paciente MU QC SRS – Paciente 2. ……………………………………………………………………………….. 68 Figura 22: Resultados de cálculo de MU independiente – Paciente 2. ……… 69 Figura 23: Hoja de cálculo de MU independiente A – Paciente 2. …………. 69 Figura 24: Hoja de cálculo de MU independiente B – Paciente 2. …………. 70 Figura 25: Reporte Paciente 2 parámetros de entrada. ………………......…. 70 Figura 26: Reporte Paciente 2 valores calculados. …………………………. 71 Figura 27: Ingreso de datos generales y arcos del paciente MU QC SRS – Paciente 3. …………………............................................................................................ 73 Figura 28: Resultados de cálculo de MU independiente – Paciente 3.……... 74 Figura 29: Hoja de cálculo de MU independiente A – Paciente 3………..... 75 Figura 30: Hoja de cálculo de MU independiente B – Paciente 3…………… 75 Figura 31: Reporte Paciente 3 parámetros de entrada………………………… 76 Figura 32: Reporte Paciente 3 valores calculados…………………………...... 76 Figura 33: Ingreso de datos generales y arcos del paciente MU QC SRS – Paciente 4……………………………………………………………………………….. 78 Figura 34: Resultados de cálculo de MU independiente – Paciente 4. ……….. 79 Figura 35: Hoja de cálculo de MU independiente A – Paciente 4. …………… 79 Figura 36: Hoja de cálculo de MU independiente B – Paciente 4. …………… 80 Figura 37: Reporte Paciente 4 parámetros de entrada. ………………………. 80 Figura 38: Reporte Paciente 4 valores calculados. ……………………………. 81 xi Figura 39: Ingreso de datos generales y arcos del paciente MU QC SRS – Paciente 5. ……………………………………………………………………….………….. 83 Figura 40: Resultados de cálculo de MU independiente – Paciente 5. ………… 84 Figura 41: Hoja de cálculo de MU independiente A – Paciente 5. …………….. 84 Figura 42: Hoja de cálculo de MU independiente B – Paciente 5………………. 85 Figura 43: Reporte Paciente 5 parámetros de entrada. …………………………. 85 Figura 44: Reporte Paciente 5 valores calculados. ……………………………… 86 Figura 45: Prototipo de interfaz seleccionar documento PDF……………………. 88 Figura 46: Prototipo de interfaz seleccionar columna OCR. ……………………. 89 Figura 47: Prototipo de interfaz cortar imagen OCR……………………………. 89 Figura 48: PDF plan de tratamiento del paciente Paciente 1– raw A.…………… 92 Figura 49: PDF plan de tratamiento del paciente Paciente 1 – raw B…………… 93 Figura 50: PDF plan de tratamiento del paciente Paciente 1 – resultado………… 93 Figura 51: PDF plan de tratamiento del paciente Paciente 2 – raw A……………. 94 Figura 52: PDF plan de tratamiento del paciente Paciente 2 – raw B……………. 95 Figura 53: PDF plan de tratamiento del paciente Paciente 2 – resultado………… 96 Figura 54: OCR plan de tratamiento del paciente………………………………… 97 Figura 55: OCR log Cone. ……………………………………………………… 98 Figura 56: OCR log Depth. …………………………………………………….. 99 Figura 57: OCR log Weight Factor. …………………………………………….. 99 Figura 58: OCR log MU TPS. …………………………………………………. 100 Figura 59: Prototipo de interfaz Calculation Formalism e interfaz Tolerance… 102 Figura 60: Prototipo de interfaz My own data………………………………... 103 Figura 61: Prototipo de interfaz Who we are? ………………………………….. 104 Figura 62: Prototipo de interfaz Contact us. …………………………………… 104 Figura 63: Interfaz Interfaz My own data y Tolerance.…………………………. 105 Figura 64: Interfaz Calculation Formalism e Interfaz Contact.………………..... 106 Figura 65: Interfaz Who we are? ……………………………………………….. 107 Figura 65. Captura de Pantalla MU QC SRS……………………………………………… 110 Figura 66. Reporte Generado por MU QC SRS………………………………… 111 Figura 67. Ingresar a Insertar arcos……………………………………………… 113 Figura 68. Datos generales incompletos………………………………………… 114 Figura 69. Ingresar los datos del paciente por un documento en formato PDF…… 114 Figura 70. Ingresar los datos del paciente por un documento en formato JPG…… 115 Figura 71. Cortar columnas del plan de tratamiento del paciente………………… 116 Figura 72. Metáfora calculadora………………………………………………….. 117 Figura 73. Campos vacíos Crear Reporte/Calcular MU………………………….. 117 Figura 74. Calcular MU…………………………………………………………… 118 Figura 75. Crear Reporte………………………………………………………….. 119 Figura 76. Dialog Create Report………………………………………………….. 120 Figura 77. Reporte………………………………………………………………… 121 xii ÍNDICE DE TABLAS Tabla 1 - Sistemas operativos más usados en Venezuela………………………... 13 Tabla 2- Diferencias entre metodologías ágiles y tradicionales………………….. 19 Tabla 3: Formato de historias de usuario………………………………………… 29 Tabla 4: Caso de Uso: Calculation Formalism……,…………………………..... 36 Tabla 5: Caso de Uso: Ingresar datos generales…………………………………. 37 Tabla 6: Caso de Uso: Tolerance……………………………………………… 38 Tabla 7: Caso de Uso: My Own Data………………………………………….. 38 Tabla 8: Caso de Uso: Who we are.…………………………………………….. 39 Tabla 9: Caso de Uso: Contact. ……………………………………………… 39 Tabla 10: Caso de Uso: Leer DF………………………………………………. 41 Tabla 11: Caso de Uso: Aplicar CR…………………………………………… 42 Tabla 12: Caso de Uso: Ingresar arcos………………………………………... 43 Tabla 13: Caso de Uso: Generar Reportes……………………………………… 43 Tabla 14: Caso de Uso: Calcular MU………………………………………… 44 Tabla 15: Caso de Uso: Nuevo paciente……………………………………… 44 Tabla 16: Historia de usuario – Iteración 1…………………………………… 45 Tabla 17: Pruebas– Iteración 1………………………………………………… 49 Tabla 18: Historia de usuario – Iteración 2…………………………………… 51 Tabla 19: Historia de usuario – Iteración 3. …………………………………….. 54 Tabla 20: Pruebas– Iteración 3………………………………………………… 62 Tabla 21: Datos Generales – Paciente 1……………………………………..…. 63 Tabla 22: Datos Generales – Paciente 2………………………………….……. 67 Tabla 23: Datos Generales – Paciente 3………………………………….…..... 72 Tabla 24: Datos Generales – Paciente 4……………………………………….. 77 Tabla 25: Datos Generales – Paciente 5……………………………………….. 82 Tabla 26: Historia de usuario – Iteración 4………………………………………. 87 Tabla 27: Pruebas– Iteración 4…………………………………………………… 91 Tabla 28: Historia de usuario – Iteración 5…………………………………… 101 1 Introducción A raíz del auge de los Smartphone en el año 2007 cientos de Apps orientadas a diferentes áreas empezaron a emerger cambiando la forma de interactuar con el medio, haciendo nuestra vida cotidiana más fácil ya que estas aplicaciones adquirían características que posee un móvil (portabilidad, acceso a Internet y poca carga en memoria). Una de las áreas que presenta un gran reto en las aplicaciones móviles es el área de Salud, debido a la complejidad de los procesos. La radiocirugía es una técnica quirúrgica empleada en el tratamiento de metástasis y tumores basadas en la aplicación de radiaciones de alta precisión. Es un proceso complejo el cual presenta un gran reto para el equipo de trabajo que le toque emplearlo, ya que una dosis mal empleada puede no curarlo, así como también dañar a un paciente de gravedad. Como es un proceso tan delicado es necesario que pase por un riguroso sistema de control de calidad, una forma de verificar si las dosis de tratamiento que se le van a aplicar al paciente son correctas es a través de un cálculo independiente de unidades monitor (MU) por sus siglas en ingles “Monitor Units”. Este proceso de verificación es un proceso laborioso y puede consumir una gran cantidad de tiempo si no se poseen las herramientas apropiadas. Hasta el momento no existe ninguna aplicación móvil que ayude con el proceso de verificación de cálculo de MU para el caso de radiocirugía. En vista de lo antes expuesto, el siguiente Trabajo Especial de Grado se describe metodologías utilizadas para implementar una aplicación móvil que permite la verificación del plan de tratamiento de un paciente a través del cálculo independiente de MU. Para concretar lo planteado y cumplir con el objetivo de este trabajo especial de grado se dio una visión de cada uno de los capítulos, presentados a lo largo de este documento, el cual se ha estructurado de la siguiente manera: 2 Capítulo 1. Se plantea el contexto de investigación y la descripción del planteamiento del problema. También se describe la justificación de la investigación, objetivo general, objetivos específicos, alcance y propuesta de la solución. Capítulo 2. Este define el marco conceptual de esta investigación donde podremos encontrar los conceptos bases referentes a dispositivos móviles, aplicaciones móviles, OCR, radiocirugía y tecnologías de desarrollo. Capítulo 3. En este capítulo se desplegó la información que llevan de la mano las metodologías para desarrollos. En el cual se definirá esta metodología como propia de esta investigación y su implementación en el proyecto final. Capítulo 4. En el siguiente capítulo se muestra el planteamiento de la propuesta para el trabajo especial de grado, dentro del marco aplicativo de la metodología utilizada en el desarrollo de la solución. Finalmente se plantearán las conclusiones y recomendaciones de la investigación y las referencias bibliográficas 3 CAPÍTULO I PLANTEAMIENTO DEL PROBLEMA El capítulo que se presenta a continuación expone el contexto del problema. Se define la necesidad de tener una aplicación móvil que permita realizar la verificación de la calidad para el tratamiento de radiocirugía intracraneal, con acelerador lineal y conos. 1.1 Planteamiento del problema. En el 2016, el uso de dispositivos móviles para resolver problemas importantes se extiende a todas las áreas. Pueden ser de índole social, económica, de ingeniería, de ciencia básica aplicada, medicina, entre otras. Con un manejo adecuado de estas aplicaciones móvil e información se pueden realizar cálculos y simulaciones de modelos reales, para estudiarlos y resolver problemas teóricos o de aplicación en un campo de la ciencia especifico. En el caso de los procedimientos de Radiocirugía, debido a las altas dosis y a los altos volúmenes pequeños a tratar, es de vital importancia disponer de un procedimiento expedito de verificación independiente de cálculo de unidades de monitor como parte de la rutina, para así poder detectar errores antes de que el paciente con cáncer sea tratado. En este contexto, en la radioterapia la utilización de protocolos que garantice la calidad y aseguren que se entregue con exactitud la dosis de radiación prescrita por el médico en el lugar preciso. De acuerdo con el Organismo Internacional de Energía Atómica “IAEA” por su sigla en inglés International Atomic Energy Agency (2000), dentro de estos “protocolos de garantía de calidad de un tratamiento de radioterapia, incluyendo la planificación y el tratamiento, donde se debe asegurar el adecuado funcionamiento del planificador, verificando la fiel importación de imágenes y densidades 4 electrónicas que proveen el tomógrafo, la exactitud de los cálculos de dosis y exportación conecta de los parámetros de tratamiento” (p.2),. Asimismo, se “debe realizar controles mecánicos en los equipos de tratamiento, que aseguren un adecuado posicionamiento del paciente y de los haces de irradiación en la entrega del tratamiento, y un control dosimétrico de cada uno de los tipos de radiación y energías que entrega el equipo” (p.3). En Venezuela, la empresa Servicios RADFIS C.A., es encargada de ofrecer soluciones en el campo de la garantía de calidad en radioterapia, pero actualmente su proceso de verificación de cálculo de Unidades Monitor consume mucho tiempo útil en el trabajo, tras recibir la indicación clínica por parte del médico radioterapeuta de lo que se desea tratar y lo que se desea proteger, así como de la dosis de radiación correspondiente al tipo de tumor en cuestión. La empresa procede a realizar un cálculo del tiempo de tratamiento mediante un sistema de cálculo proporcionado por el mismo fabricante del equipo de tratamiento. Existen múltiples recomendaciones internacionales que sugieren que debe realizarse un segundo calculo con sistemas independientes que garanticen la adecuada exactitud del cálculo primario. En la actualidad la empresa Servicios RADFIS C.A. realiza este cálculo independiente mediante una hoja Excel desarrollada por ellos mismos, este proceso de verificación del cálculo primario del plan de tratamiento que se le va a aplicar al paciente, consume mucho tiempo, en especial cuando los datos del plan son extensos (mayoría de los casos) y durante ese periodo el paciente se encuentra en el cuarto donde se va a aplicar el tratamiento esperando. Este proceso además de las complicaciones mencionadas antes posee otras más como: El equipo donde se realiza el tratamiento de radiocirugía no está ubicado en el mismo lugar donde se encuentra el equipo de verificación lo que requiere un desplazamiento de la persona que realiza la verificación, la máquina que emite el plan de tratamiento del paciente no se le puede instalar ningún dispositivo externo debido a que la maquina puede quedar expuesta a virus o algún software que dañe la máquina. Desarrollar una aplicación web no es viable porque no se puede exponer la máquina, una aplicación de escritorio 5 no facilitaría la portabilidad a pesar de ser más segura que una aplicación web, una aplicación móvil fue la decisión que se ajustaba más a las necesidades de la empresa por la portabilidad y la seguridad que ofrecen este tipo de software. Una vez expuesto todo el concepto pertinente a dicho problema se generan las siguientes interrogantes de investigación: ¿Cómo generar una solución bajo el ambiente Android que permita realizar el cálculo de MU independiente TPS (Treatment-planning System) para el tratamiento de radiocirugía intracraneal, con acelerador lineal y conos? ¿Se pueden incorporar tecnología OCR que se encargue de tomar los datos del plan de tratamiento a través de una imagen y generación de reportes que agilicen los resultados? 1.2 Objetivos del Trabajo Especial de Grado 1.2.1 Objetivo General Desarrollar una aplicación móvil nativa para la verificación MU QC SRS (Monitor Units Quality Control Stereotactic Radiosurgery) bajo el ambiente Android que permita la comprobación del cálculo de las unidades de monitor independiente TPS (Treatment-planning System) para el tratamiento de radiocirugía intracraneal, con acelerador lineal y conos. 1.2.2 Objetivos Específicos Definir requerimientos funcionales y no funcionales necesarios de la aplicación móvil que permita la verificación del cálculo de unidades de monitor independiente para el tratamiento de cirugía intracraneal. Elaborar modelos y diagramas que se ajusten a la aplicación móvil. Diseñar las interfaces gráficas y módulos para la aplicación móvil de acuerdo a los requerimientos levantados. Realizar las pruebas pertinentes a la aplicación móvil para la verificación del cumplimiento de los requerimientos. 6 1.3 Justificación Los avances tecnológicos han permitido una mejor utilización de los recursos disponibles en diversas áreas. Con la masificación de los Smartphone se han desarrollado numerosas aplicaciones móviles para distintos fines. Lo más interesante de estas aplicaciones es que para poder utilizarlas solo se necesita un dispositivo móvil con acceso a internet por lo que pueden ser utilizadas desde la comodidad del hogar, la oficina de trabajo, la universidad, centros comerciales, restaurantes, entre otros. Así mismo, esta solución busca agilizar el proceso de verificación del plan de tratamiento de un paciente con el fin de garantizar de que las dosis que se le van a suministrar al paciente son las correctas evitando dañar a este de gravedad y que el equipo de trabajo de Servicios RADFIS C.A. pueda realizar la verificación de los cálculos de tratamiento de manera eficiente en tiempos más rápidos. Esta aplicación no solo va a apoyar al equipo de trabajo en su proceso de cálculo de MU independiente, también lograra que los pacientes puedan recibir su tratamiento en un menor tiempo. MU QC SRS es una aplicación que se adentra en la rama de la salud, no solo la salud también une 3 ramas de la ciencia y estas son: Medicina, Física y Computación. 1.4 Solución Propuesta. El trabajo de investigación consiste en el desarrollo de una aplicación móvil nativa MU QC SRS (Monitor Units Quality Control Stereotactic Radiosurgery) bajo el ambiente Android que permita la comprobación de la calidad en el cálculo primario para el tratamiento de radiocirugía intracraneal, con acelerador lineal y conos. Adicionalmente se desarrollaron dos funciones: la primera para la lectura de un archivo PDF sobre el plan de tratamiento generado para un paciente, donde se refleja los datos del tratamiento para el cálculo, en segundo lugar, la incorporación de reconocimiento de caracteres (OCR) para facilitar la carga o tomar de los datos del plan de tratamiento a través de una imagen y posterior generación del reporte sobre el cálculo de MU. 7 MU QC es una aplicación la cual es considerada antecedente de MU QC SRS, MU QC es una aplicación utilizada para la verificación del cálculo primario en radioterapia mientras que MU QC SRS verifica el cálculo primario en radiocirugía. El alcance de MU QC SRS se puede definir en 3 secciones que serán descritas a continuación: Carga de datos del paciente, permite a la aplicación cargar los datos del plan del paciente de forma manual o automática mediante 2 funciones 1 es lectura del plan por un archivo en formato PDF o reconocimiento de caracteres a través de una imagen en formato JPG. Calculo de MU, corresponde a la verificación del cálculo primario y generar reportes que le permitan visualizar al usuario el cálculo de MU. Información sobre el cálculo de mu y los desarrolladores. 8 CAPÍTULO II MARCO CONCEPTUAL El propósito de este capítulo es presentar las bases teóricas en las cuales se fundamenta el Trabajo Especial de Grado. Este se divide en tres (03) secciones las cuales se puede dar un bosquejo general a continuación: 2.1 Conceptualizando la Radioterapia La radioterapia, o tratamiento con radiaciones, tiene varios campos de aplicación, pero el objeto fundamental de su aportación está en el proceso de curación de los pacientes con cáncer. El cáncer puede afectar a personas de todo tipo de edad y condición. Las estadísticas muestran una extensión abrumadora de la enfermedad entre la población. De acuerdo Brualla (2015), “sólo en 2012 se registraron 14.1 millones de casos nuevos de cáncer a nivel mundial” (p.161). En la actualidad la primera línea de actuación la constituyen la cirugía, la radioterapia y la quimioterapia, según este autor, “aproximadamente el 50% de los pacientes afectados precisarán radioterapia en algún momento del transcurso de la enfermedad” (p.161). La radioterapia es la utilización de la radiación ionizante en el tratamiento del cáncer, y es una de las tres modalidades que se utilizan para combatir esa enfermedad, en conjunto con la quimioterapia y la cirugía. A diferencia de las éstas últimas, que dependen casi exclusivamente de los conocimientos clínicos del médico la radioterapia se basa conjuntamente en el uso de la tecnología y en equipos multidisciplinarios (Podgorsak 2005). Desde sus inicios, poco después del descubrimiento de los rayos X por Roentgen en 1895, el avance de la radioterapia ha ido de la mano con el progreso 9 tecnológico. La mejor comprensión de la radiación ionizante y de los mecanismos mediante los cuales se deposita su energía en los tejidos, como dosis absorbida, en conjunto con el advenimiento de la computación y el desarrollo de aceleradores lineales de uso clínico, han permitido la evolución de la radioterapia hasta lo que conoce comúnmente hoy en día. Las modalidades de tratamiento se han vuelto cada vez más complejas y nuevas formas de radioterapia, como por ejemplo la terapia con partículas pesadas cargadas, ya se usan en algunos centros del mundo. La radioterapia de hoy no sólo busca entregar la dosis de prescripción con gran precisión en el volumen a tratar, sino también predecir sus consecuencias mediante modelos radiobiológicos, utilizando la probabilidad de control tumoral (TCP) y la probabilidad de complicaciones en tejido normal (NTCP). Los planificadores computados modernos incluyen también el concepto de dosis biológica. 2.1.1 Radiocirugía Según Hoch (2014) la radiocirugía es “la aplicación de una dosis alta de radiación en una parte específica del cuerpo”, aplicar radiocirugía representa una opción importante para los pacientes que padecen de enfermedades cerebrales y corporales para las cuales la cirugía convencional es peligrosa o imposible. La Radiocirugía se suele confundir con frecuencia con la Radioterapia convencional. Si bien es cierto que ambas dan radiación ionizante al área a tratar, también es cierto que usan mecanismos y dosis diferentes para minimizar el daño causado al tejido sano. 2.1.2 Radiocirugía Estereotáctica La Radiocirugía Estereotáctica o Estereotáxica (SRS: Stereotactic Radio Surgery) es una modalidad de la Radioterapia externa sumamente precisa, en la cual se aplican altas dosis de radiación en un volumen limitado a la lesión, por medio de técnicas de alta precisión, según Tucci (2012) “generalmente la Radiocirugía Estereotáctica se complementa en una sola sesión, a veces se realizan múltiples sesiones cuando el tumor mide más de 1 pulgada de diámetro”. En casos de que se realicen múltiples sesiones el procedimiento se llama Radiocirugía Estereotáctica 10 fraccionada. A diferencia de los procedimientos quirúrgicos convencionales, la Radiocirugía no requiere del uso de un bisturí ni de incisión alguna en el paciente. Como método de tratamiento, la Radiocirugía tiene como objetivo fundamental la destrucción y/o control de tumores, a la vez que minimiza la exposición a las radiaciones del tejido sano adyacente a la lesión. Según la IRSA (http://www.irsa.org/radiosurgery.html), hay tres tipos básicos de radiocirugía: - Haz de partículas (protón) - Cobalto 60 (fotón) - Acelerador lineal El tipo de radiocirugía utilizado para este Trabajo Especial de Grado es el de acelerador lineal. 2.1.3 Glosario de términos Básico. Los siguientes términos fueron extraídos de Radioterapia Oncológica GURVE (2016). - Acelerador Lineal (LINAC): “Es una máquina de radioterapia externa, generadora de rayos X de alta energía mediante la aceleración de electrones que chocan y producen rayos de frenado. En muchos casos, los aparatos también son capaces de administrar al paciente radioterapia con electrones”. Normalmente la tasa de dosis para el acelerador lineal es 1.0 cGy/MU para un campo 10x10 definido en el isocentro. - Centigray (cGy): “Medida preferida para referirse a la cantidad de la dosis de radiación absorbida por el cuerpo (1cGy=1 rad)”. - Físico de Radiaciones: “Profesional encargado de verificar que la máquina emisora de radiaciones (Acelerador Lineal) libere las cantidades apropiadas de radiación al lugar exacto del cuerpo donde se encuentra la lesión”. - Fraccionamiento: “División de la dosis total de Radioterapia en varias dosis pequeñas, las cuales son aplicadas en un periodo de varios días”. 11 - No invasivo: “En medicina, se refiere a un procedimiento que no requiere la inserción y/o utilización de instrumento alguno para realizar una incisión en la piel o en el cuerpo de un paciente”. - Tumor: “Masa anormal de tejido que ocurre cuando las células se dividen de manera descontrolada y se reproducen aceleradamente. Pueden ser de tipo benigno (sin presencia de Cáncer) o malignos (Cáncer). También se les pueden denominar Neoplasmas” Los siguientes términos y notaciones fueron extraídos de Vélez (2004). - d: “Profundidad del punto de cálculo”. - D’o: “Tasa de dosis o dosis por unidades monitor de transmisión del usuario bajo condición de normalización”. - Dosimetría: “Es el cálculo de la dosis que recibirá el paciente (más o menos detallada por órganos o regiones) con un tratamiento determinado”. - Dosis: “Medida en un punto medio en especifico - Estereotáctico: “Se aplica al sistema de referencia externo, compuesto por coordenadas tridimensionales, que permite localizar el punto o la región en la que se va a realizar un determinado procedimiento (biopsia, radiocirugía, colocación de electrodos, entre otros)”. - Factor de campo (OF): “Tasa de dosis en agua a la profundidad de referencia para un tamaño de campo dado dividida por la tasa de dosis en agua en el mismo punto a la misma profundidad para el tamaño de campo de referencia (10 x 10 cm2” - Gray: “Es la unidad de dosis de radiación y equivale a 1 J/kg”. - Isocentro: “Es el punto en torno al cual gira el origen de la irradiación”. - MU (Unidades monitor): “Es una medida de salida para aceleradores lineales”. - SAD: “Distancia fuente-isocentro. En las bombas de cobalto suele ser de 80 cm, y de 100 cm en los aceleradores.”. - SSD: “distancia fuente-piel o distancia foco piel”. - TMR: “Relación máxima de tejido. Es una variación del TAR que lo hace adecuado para uso a altas energías”. 12 2.2 Sistemas de información Según Luque (2009) un sistema de información es “un conjunto de elementos que interactúan entre sí con el fin de generar información que se pueda utilizar posteriormente”. Este autor establece que un sistema de información realiza cuatro actividades básicas: Entrada de información: Es el proceso mediante el cual el sistema de Información toma los datos que requiere para procesar la información. Las entradas pueden ser manuales o automáticas. Las manuales son aquellas que se proporcionan en forma directa por el usuario, mientras que las automáticas son datos o información que provienen o son tomados de otros sistemas o módulos. Almacenamiento de información: Es la capacidad del sistema de información de guardar o recordar información que va a hacer utilizada posteriormente. A través de esta propiedad el sistema puede recordar la información guardada en la sección o proceso anterior. Esta información suele ser almacenada en estructuras de información denominadas archivos. Procesamiento de Información: Es la capacidad del sistema de Información para efectuar cálculos de acuerdo con una secuencia de operaciones preestablecida. Estos cálculos pueden efectuarse con datos introducidos recientemente en el sistema o bien con datos que están almacenados. Esta característica de los sistemas permite la transformación de datos fuente en información que puede ser utilizada para la toma de decisiones, lo que hace posible, entre otras cosas, que un tomador de decisiones genere una proyección. Salida de Información: La salida es la capacidad de un sistema de Información para exportar la información procesada o bien datos de entrada al exterior. Es importante aclarar que la salida de un Sistema de Información puede constituir la entrada a otro Sistema de Información o módulo. A continuación se listan los distintos tipos de sistemas de información mencionados por Laudon y Laudon (2012). - Sistemas transaccionales. - Sistema de apoyo a la toma de decisiones. 13 - Sistemas estratégicos. - Sistemas de información formal. - Sistemas de información informal. - Sistemas de comunicación. - Sistemas de información organizacional. - Sistemas de información operativos. - Sistemas de información gerencial. - Sistema de procesamiento de datos. Para efectos de esta investigación, se puede catalogar la solución propuesta como un sistema de apoyo a la toma de decisiones, la aplicación a desarrollar es utilizada para verificar los cálculos de unidades monitor sobre el plan de tratamiento de un paciente y esa es la característica más relevante de un DSS que los resultados entregados al usuario sirvan de ayuda al momento de gestionar proceso o emitir alguna acción. 2.3 Dispositivos móviles Según Porto et al (2011), “Del latín disposĭtus (“dispuesto”), es un aparato o mecanismo que desarrolla determinadas acciones. Su nombre está vinculado a que dicho artificio está dispuesto para cumplir con su objetivo”. En otras palabras un dispositivo no es más que una pieza o conjunto de piezas o elementos preparados para realizar una función determinada y que generalmente forman parte de un conjunto más complejo. Ahora bien, cuando hablamos de “Dispositivos Móviles” se hace referencia a dispositivos que poseen ciertas características como; tamaño pequeño, baja capacidad de procesamiento y almacenamiento, conexión permanente o intermitente a una red, diseñados para una determinada función pero que pudiesen llevar a cabo funciones más complejas. 2.3.1 Sistemas operativos móviles Un sistema operativo móvil, al igual que un sistema operativo común y corriente, es un programa o conjunto de programas encargado de gestionar recursos 14 de hardware y proveer servicios a los programas de aplicación de software con la diferencias de que estos son mucho más simples y están orientados a ciertas características como: la conectividad inalámbrica, los formatos multimedia para móviles y las diferentes maneras de interacción entre el usuario y el dispositivo móvil. Android es el sistema operativo más usado en Venezuela. De acuerdo con datos descritos por Emen acerca de Conatel en el diario El Mundo se construye la Tabla 1. Tabla 1 - Sistemas operativos más usados en Venezuela Sistema Operativo Empresa Propietaria Última Versión Estable Porcentaje de usuarios en Venezuela IOS Apple INC 9.3.3 20,99% Android Google INC 6.0.1 45,25% Blackberry OS RIM 7.1.0.2994 26,08% Window Phone Microsoft 8.1.2 4,04% Fuente: http://www.elmundo.com.ve/noticias/tecnologia/dispositivos/android-domina- el-mercado-venezolano-de-telefonos-.aspx 2.3.2 Aplicación Móvil. Una aplicación móvil según el Libro blanco de Apps (2011) “consiste en un software que funciona en un dispositivo móvil (teléfonos y tabletas) y ejecuta ciertas tareas para el usuario”. Una aplicación móvil es una aplicación de software desarrollado específicamente para su uso en dispositivos de computación móviles, pequeños, como teléfonos inteligentes y tabletas, en lugar de computadoras de escritorio o portátiles. Las aplicaciones móviles están diseñadas con la consideración de las exigencias y limitaciones de los dispositivos y también para aprovechar las capacidades especializadas que tienen. http://www.elmundo.com.ve/noticias/tecnologia/dispositivos/android-domina-el-mercado-venezolano-de-telefonos-.aspx http://www.elmundo.com.ve/noticias/tecnologia/dispositivos/android-domina-el-mercado-venezolano-de-telefonos-.aspx 15 Las aplicaciones móviles son a veces clasificadas de acuerdo a si son basados en web o aplicaciones nativas, que son creados específicamente para una plataforma determinada. Una tercera categoría, aplicaciones híbridas, combina elementos de ambas aplicaciones nativas y web. Para Martínez (2007) “a medida que las tecnologías maduran, se espera que el desarrollo de aplicaciones móviles en un esfuerzo, se centren en la creación de aplicaciones, basados en el navegador del dispositivo agnóstico aplicaciones Web”. Gracias al avance tecnológico de los últimos años, hoy en día podemos encontrar aplicaciones móviles bastante complejas que emplean técnicas como identificación biométrica, reconocimiento facial, reconocimiento de caracteres a través de una imagen. 2.3.3 Tipos de aplicaciones móviles Se tiene tres tipos de aplicaciones móviles (nativas, hibridas y web), para tomar el desarrollo en una de ellas se debe tener en cuenta, las funcionalidades que se desean manejar, el público al que va dirigido, el tipo de diseño, el tipo de notificaciones que se desea transmitir, si en un futuro se desea modificar o integrar funcionalidades, entre otros, pero lo más importante para la elección de un tipo de aplicación móvil, es saber a qué tipo o tipos de dispositivos fue dirigida la aplicación. Aplicaciones Nativas: Según Raona (2009) “La aplicación nativa está desarrollada y optimizada específicamente para el sistema operativo determinado y la plataforma de desarrollo del fabricante”. Las aplicaciones nativas están hechas para una plataforma en específico, aprovechando así todos los recursos que la plataforma le pueda ofrecer. Al tener una aplicación nativa se crea para un sistema operativo y dispositivo en particular, trabajando directamente con el hardware y software del mismo, beneficiándose de las últimas tecnologías de esos dispositivos móviles, como podrían ser el GPS y la cámara. Una aplicación nativa puede ser almacenada en el mismo dispositivo o puede estar expuesta en una tienda de aplicaciones públicas o privadas, que pueden ser descargadas e instaladas en el dispositivo. En cuanto los datos pueden estar almacenados directamente en el dispositivo móvil, o pueden estar almacenados de forma remota y ser accedidos por medio de la aplicación, teniendo 16 con esto que no necesariamente se necesite de conexión a internet para acceder a ellos. 2.3.4 Arquitectura Android Android está construido con una arquitectura de 4 (cuatro) capas o niveles entre sí. A continuación fueron descritas las capas de la arquitectura Android según Revelo (2014). - Kernel de Linux: Android está construido sobre el núcleo de Linux, pero se ha modificado dramáticamente para adaptarse a dispositivos móviles. Esta elección está basada en la excelente potabilidad, flexibilidad y seguridad que Linux presenta. Es importante destacar que el Kernel de Linux está bajo la licencia GPL (Licencia Pública General o en sus siglas en ingles General Public License), como consecuencia Android también. - Capa Nativa: En esta capa se encuentran partes como lo es el HAL (Capa de abstracción del hardware o en sus siglas en ingles Hardware Abstraction Layer), librerías nativas, demonios, las herramientas de consola y manejadores en tiempo de ejecución. - Framework de aplicaciones: En esta capa se encuentran todas las librerías Java necesarias para programar aplicaciones bajo este sistema operativo. También aloja manejadores, servicios y proveedores de contenido capaces de soportar la comunicación una aplicación desarrollada en Android - Capa de Aplicaciones: Es la última instancia de funcionamiento de Android. Se centra en la ejecución, comunicación y estabilidad de las aplicaciones preinstaladas por el fabricante o las que nosotros vamos a construir. A ella acceden todos los usuarios Android debido a su alto nivel de compresión y simplicidad. 2.3.5 Android Studio Es un entorno de desarrollo integrado (IDE), basado en IntelliJ IDEA de la compañía JetBrains, que proporciona varias mejoras con respecto al plugin http://academiaandroid.com/ide-entornos-integrados-de-desarrollo-para-android/ http://academiaandroid.com/ide-android-intellij-android-studio-aide/ 17 ADT (Android Developer Tools) para Eclipse. Android Studio utiliza una licencia de software libre Apache 2.0, está programado en Java y es multiplataforma. Principales características que incluye Android Studio Soporte para programar aplicaciones para Android Wear (sistema operativo para dispositivos corporales como por ejemplo un reloj). Herramientas Lint (detecta código no compatible entre arquitecturas diferentes o código confuso que no es capaz de controlar el compilador) para detectar problemas de rendimiento, usabilidad y compatibilidad de versiones. Utiliza ProGuard para optimizar y reducir el código del proyecto al exportar a APK (muy útil para dispositivos de gama baja con limitaciones de memoria interna). Integración de la herramienta Gradle encargada de gestionar y automatizar la construcción de proyectos, como pueden ser las tareas de testing, compilación o empaquetado. Nuevo diseño del editor con soporte para la edición de temas. Nueva interfaz específica para el desarrollo en Android. Permite la importación de proyectos realizados en el entorno Eclipse, que a diferencia de Android Studio (Gradle) utiliza ANT. Posibilita el control de versiones accediendo a un repositorio desde el que poder descargar Mercurial, Git, Github o Subversion. Alertas en tiempo real de errores sintácticos, compatibilidad o rendimiento antes de compilar la aplicación. Vista previa en diferentes dispositivos y resoluciones. Integración con Google Cloud Platform, para el acceso a los diferentes servicios que proporciona Google en la nube. Editor de diseño que muestra una vista previa de los cambios realizados directamente en el archivo xml. http://es.wikipedia.org/wiki/Apache_License http://www.gradle.org/ http://ant.apache.org/ https://cloud.google.com/mobile/ 18 2.3.6 Material Design Según Google (2014) se puede decir que Material Design “es una normativa de diseño enfocado en la visualización del sistema operativo Android, además en la web y en cualquier plataforma”. Su diseño se basa en proveer la sensación de que estas trabajando con objetos reales, piezas colocadas en un espacio y con un tiempo determinado, en este tipo de diseño la profundidad, superficie, colores y sombras juegan un rol único y especial. 19 CAPÍTULO III MARCO METODOLOGICO El capítulo que se presenta a continuación expone un resumen sobre que son metodologías agiles, el contexto en el que surgen las metodologías agiles, sus valores, principios y comparaciones con las metodologías tradicionales. Adicionalmente se presenta una adaptación de la metodología de desarrollo XP para la construcción de la aplicación móvil para la verificación del cálculo de unidades de monitor en tratamientos de radiocirugía intracraneal. 3.1 Metodologías Ágiles Sommerville (2002) relata que un proceso es ágil cuando el desarrollo de software es incremental (entregas pequeñas de software, con ciclos rápidos), cooperativo (cliente y desarrolladores trabajan juntos constantemente con una cercana comunicación), sencillo (el método en sí mismo es fácil de aprender y modificar, bien documentado), y adaptable (permite realizar cambios de último momento). En la Tabla 2 describe algunas diferencias entre las metodologías Agiles y las metodologías Tradicionales: 3.2. Programación Extrema (Extreme Programming) Según Beck (1999) XP “es una forma ligera, eficiente, flexible, predecible, científica y divertida de generar software”. XP (eXtreme Programming) es un método ágil, está basado en la simplicidad, la comunicación entre todos los involucrados en el proyecto y reutilización del código desarrollado. Está enfocado a satisfacer los requerimientos comunicados por el cliente. La metodología trata entregar un software de calidad y capaz de satisfacer requerimientos indicados por el usuario, incluso 20 cuando estos requerimientos sean cambiantes al momento de desarrollo. Otro objetivo importante que plantea XP es potenciar el trabajo en equipo. Cliente, jefes de proyecto y desarrolladores son todos parte de un mismo grupo de trabajo y deben estar comprometidos en el desarrollo del software. Una posible adaptación de este método incluye prácticas como programación en pareja y código de propiedad colectiva. Tabla 2- Diferencias entre metodologías ágiles y tradicionales Fuente: Sommerville (2002) 3.2.1 Prácticas La principal suposición que se realiza en XP es la posibilidad de disminuir la mítica curva exponencial del costo del cambio a lo largo del proyecto, lo suficiente Metodologías Ágiles Metodologías Tradicionales Basadas en heurísticas provenientes de prácticas de producción de código. Basadas en normas provenientes de estándares seguidos por el entorno de desarrollo. Especialmente preparados para cambios durante el proyecto. Cierta resistencia a los cambios. Impuestas internamente (por el equipo). Impuestas externamente. Proceso menos controlado, con pocos principios. Proceso mucho más controlado, con numerosas políticas/normas. No existe contrato tradicional o al menos es bastante flexible Existe un contrato prefijado. El cliente es parte del equipo de desarrollo. El cliente interactúa con el equipo de desarrollo mediante reuniones. Grupos pequeños (<10 integrantes) y trabajando en el mismo sitio. Grupos grandes y posiblemente distribuidos. Pocos artefactos. Más artefactos. Pocos roles. Más roles. 21 para que el diseño evolutivo funcione. XP apuesta por un crecimiento lento del costo del cambio. Esto se consigue gracias a las tecnologías disponibles para ayudar en el desarrollo de software y a la aplicación disciplinada de las prácticas que se describirán a continuación. - Cliente presente: Debe estar disponible al equipo XP un representante de los usuarios finales del sistema (el cliente) a tiempo completo. En un proceso de programación extrema el cliente es miembro del equipo de desarrollo y es responsable de informar al equipo por medio de historias de usuarios los requerimientos del sistema para su implementación. - Código de propiedad colectiva: En un proyecto XP, cada pareja de programadores puede mejorar cualquier código en cualquier momento. Esto significa que todo el código recibe el beneficio de la atención de muchas personas. Lo cual incrementa la calidad del mismo y reduce sus defectos. La propiedad colectiva puede ser un problema si las personas que contribuyen en el código lo hacen sin entenderlo. XP evita estos problemas mediante dos técnicas claves: los test de los programadores, que permiten capturar los errores, y la programación en parejas. Lo que significa que la mejor manera de trabajar con código que no es familiar es con un experto. - Adaptación de código de propiedad colectiva: Debido a que es solo un individuo está encargado de la programación, este es el único encargado de mejorar el código en cualquier momento. El código puede ser observado por todo el equipo con el objetivo de incrementar la calidad y reducir sus defectos. - Desarrollo previamente probado: La programación extrema está obsesionada con la retroalimentación, y en el desarrollo de software, la buena retroalimentación requiere buenas pruebas. Los mejores equipos de XP practican el desarrollo guiado por pruebas automáticas, trabajando en ciclos muy cortos para añadir una prueba y hacer que funcione. Casi sin esfuerzo, los equipos producen códigos con casi el 100 por ciento de la cobertura de la prueba, que es un gran paso adelante en la mayoría de los casos. 22 - Diseño simple: Los equipos XP construyen software a partir de diseños simples. Se comienza con un diseño simple, y luego, a través de las pruebas de programación y las mejoras en el diseño, se mantiene de la misma manera. Un equipo XP mantiene el diseño adaptado a la funcionalidad actual del sistema. No hay pérdida de trabajo y el software está siempre listo para lo que hay que realizar en la siguiente etapa. Diseñar con XP no es cosa de una sola vez, sino algo que lleva un tiempo considerable. Hay pasos para diseño, planificaciones de entregas y de iteración, además, los equipos realizan sesiones rápidas de diseño y revisiones de diseño a través de refactorizaciones que se realizan a lo largo de todo el proyecto. - Entregas pequeñas: Los equipos XP hacen las entregas de dos maneras importantes: Primero, el equipo entrega software ejecutado, probado y solicitado por el cliente en cada iteración. El cliente puede utilizar este software para cualquier propósito, ya sea para su evaluación o incluso para la entrega de éste al usuario (muy recomendado). El aspecto más importante es que el software es visible y es entregado al cliente de cada iteración, mostrando resultados tangibles. Segundo, los equipos XP también realizan entregas a los usuarios finales. Los proyectos de software realizados con XP son entregados diariamente. En proyectos internos son entregados mensual o más frecuentemente. - Equipo Completo: Todos los involucrados en el desarrollo del software en un proyecto XP son miembros de un equipo. Este equipo debe incluir un representante de negocios, el cliente y quien provee los requerimientos y fija las prioridades en el proyecto. Es mejor si el cliente o alguno de sus colaboradores es un usuario final ya que puede saber que se necesita. El equipo, por supuesto, tiene que tener programadores. Los analistas pueden ayudar a los clientes a definir los requerimientos. Ninguno de estos roles es necesariamente propiedad exclusiva de un solo individuo: Todos en un equipo XP contribuyen de la manera en que pueden. El mejor equipo no tiene especialistas, solo contribuidores generales con habilidades especiales. 23 - Integración continúa: Los equipos de XP mantienen el sistema completamente integrado todo el tiempo. La ventaja de esta práctica puede ser vista pensando en proyectos anteriores, donde el proceso de integración se realiza semanalmente o con menor frecuencia. Usualmente, esto conlleva a problemas de integración donde el proyecto se cae y no se sabe por qué. Las integraciones que se hacen con menos frecuencia conllevan a serios problemas en un proyecto de software. Primero que nada, aunque la integración es lo más importante para entregar un código funcional y ejecutable, el equipo no está acostumbrado a ésto, y a menudo se delega la responsabilidad a personas que no están familiarizadas con el proyecto. - Metáforas: Una metáfora no es más que la descripción simple de cómo el programa debería funcionar. Los equipos XP se dedican a desarrollar esta metáfora a través de una visión común. Algunas veces es difícil encontrar una metáfora. En todo caso, con o sin una imagen vívida, los equipos XP usan un sistema común de nombres para asegurarse que todos entienden cómo funciona el sistema, dónde buscar una funcionalidad o como encontrar el lugar dónde colocar dicha funcionalidad. Una metáfora puede ser un diagrama sencillo, un conjunto de figuras que describen el comportamiento de un módulo o cualquier otro elemento que sugiera una descripción del sistema. - Normas de Codificación: Los equipos XP siguen unos estándares de codificación, para que así, todo el código en el sistema luzca como si hubiese sido escrito por un único y muy competente individuo. Las especificaciones del estándar no son importantes, lo importante es que todo el código luzca familiar, para soportar la propiedad colectiva. - Planificación: XP enfoca la planificación en dos aspectos claves en el desarrollo de software, predecir que se quiere lograr para el día esperado y determinar qué será lo siguiente a realizar. El énfasis está en dirigir el proyecto (lo cual es bastante sencillo), en lugar de predecir que será necesario y cuánto tiempo tomará (lo cual es bastante complicado). Existen dos pasos claves para la planificación en XP: 24 La organización de las entregas es una práctica donde el cliente presenta las características deseadas a los programadores, y los programadores estiman la dificultad. Teniendo el costo estimado y los conocimientos de las características, el cliente define un plan para el proyecto. La planificación de las iteraciones es una práctica donde el equipo recibe instrucciones cada varias semanas. El equipo XP construye software en iteraciones de dos semanas, entregando software funcional al final de cada iteración. Durante la realización de las iteraciones, el cliente presenta las características deseadas para las siguientes dos semanas. Los programadores las dividen en tareas y estiman sus costos (en un nivel más detallado que en la planificación de entregas). Basados en la cantidad de trabajo realizado en las iteraciones anteriores, el equipo decide que se realizará en la iteración actual. Estos pasos de planificación son muy sencillos, además proveen buena información al cliente. Este enfoque en resultados visibles es una pequeña paradoja, por un lado, el cliente está en posición de cancelar el proyecto si el progreso no es suficiente. Por otro lado, el progreso es tan visible, y la habilidad de decidir qué es lo siguiente en realizar es tan completa, que los proyectos XP tienden a dar más de lo que es requerido, con menor presión y estrés. - Programación en parejas: Todos los productos en XP son construidos por dos programadores, sentados juntos, en el mismo computador. Esta práctica asegura que todo el código de producción es revisado al menos por otro programador siendo el resultado mejor diseñado, mejor probado y mejor códificado. - Adaptación de programación en parejas: El equipo de trabajo en XP debe estar constituido al menos por dos programadores, sentados en el mismo computador. Sin embargo para efectos de este trabajo de grado un solo programador se encargó de producir código, mejorarlo y entre todo el equipo XP se realizaron pruebas para poder mejorar la codificación. 25 - Refactorización: La programación extrema se enfoca en entregar valores de negocio en cada iteración. Para lograr esto a lo largo de todo el proyecto, el software debe estar bien diseñado. Así XP utiliza un proceso de mejora continua de diseño llamado refactorización. El proceso de refactorización se centra en la eliminación de la duplicación (un signo seguro de mal diseño), y en el aumento de la cohesión del código, mientras que se reduce el acoplamiento. Alta cohesión y bajo acoplamiento han sido reconocidas como las características de buen diseño de código de al menos treinta años. El resultado es que los equipos XP empiezan con un diseño simple y generalmente, aumentan la velocidad a medida que el proyecto sigue adelante. - Test del Cliente: Como parte del proceso de presentación de las características del proyecto, el cliente de XP define uno o más test de aceptación para mostrar que cada característica funciona. El equipo construye estos test y los utilizan para realizar pruebas en conjunto con el cliente, para certificar que las funcionalidades estén implementadas correctamente. La automatización es importante ya que con la presión del tiempo, se saltan las pruebas manuales. 3.2.2 Ciclo de vida El ciclo de vida ideal de XP consiste de seis fases: Exploración, Planificación de la Entrega (Release), Iteraciones, Producción, Mantenimiento y Muerte del Proyecto. Estas fases se presentan de acuerdo con Beck (1999): En la fase de exploración, los clientes escriben las historias de usuario que desean para ser incluidas en la primera versión. Cada historia describe una característica que se añade en el programa. La fase de planificación establece el orden de prioridad para las historias y se acuerda el contenido de la primera versión. Los programadores primero estiman cuánto esfuerzo requiere cada historia y se acuerda el calendario. La fase de iteraciones incluye varias iteraciones de los sistemas antes la primera versión. El cliente decide que historias serán seleccionadas para cada 26 iteración. Las pruebas funcionales creadas por el cliente se ejecutan al final de cada iteración. Al final de la última iteración el sistema está listo para la producción. La fase de producción requiere pruebas adicionales y el control del rendimiento del sistema antes de que el sistema pueda ser entregado al cliente. Después de que se produce la primera versión para uso del cliente, el proyecto XP debe mantener el sistema en funcionamiento mientras que se producen nuevas iteraciones. Con el fin de hacer esto, la Fase de mantenimiento requiere un mayor esfuerzo también para satisfacer las tareas cliente. Por lo tanto, la velocidad de desarrollo puede desacelerarse después de que sistema está en producción. La fase de muerte está cerca cuando el cliente ya no tiene más historias para implementar. Esto requiere que el sistema satisfaga las necesidades cliente también en otros aspectos (por ejemplo, en relación con el rendimiento y fiabilidad). En la Figura 1 se muestra el ciclo de vida de XP 3.2.3 Actividades Las actividades de XP se reflejan en la Figura 1 y se detallan a continuación: - Planificación: Para la planificación se utilizan historias de usuarios, las historias de usuarios son la técnica especificar los requisitos del software, estas tienen como propósito describir los requerimientos del cliente. Se crea una planificación de entrega, que debe servir para crear un calendario que todos puedan ver y cumplir. El desarrollo se divide en iteraciones, esto agrega agilidad al proceso de desarrollo, a cada iteración se le agregan un conjunto de historias de usuario. Se evita la sobrecarga de trabajo. 27 Figura 1 - Ciclo de vida XP. Fuente: Espinoza (2007). (p.55). - Diseño: El diseño crea una estructura que organiza la lógica del sistema. Desde el punto de vista de la simplicidad se puede decir que el desarrollo del sistema no necesita más que la codificación, la prueba y escuchar al usuario. Si esas actividades se llevan a cabo así, el resultado debe ser que el sistema siempre funciona. En la práctica, esto no funcionará. Se puede llegar muy lejos sin el diseño, pero es sistema se puede tornar complejo a medida que se agregan funcionalidades al sistema, por eso las dependencias del sistema deben ser claras. Se puede evitar esto mediante la creación de una estructura de diseño que organice la lógica del sistema. - Codificación: La fase de codificación expresa la interpretación del problema. El código se ajusta a los estándares de codificación, manteniendo la consistencia y legibilidad del mismo, facilitando así, la comprensión y refactorización para los involucrados en el desarrollo del sistema. Las pruebas unitarias se crean antes que el código, facilitando y agilizando la codificación. Estas pruebas también ayudan a identificar las necesidades que realmente se tienen que considerar al momento de codificar el sistema. La codificación también puede ser usada para determinar la solución más adecuada. 28 - Pruebas: En esta fase se realizan pruebas unitarias y pruebas de aceptación. La pruebas unitarias sirven para determinar si una característica funciona según lo previsto Las pruebas de aceptación verifican que los requerimientos fueron comprendidos con exactitud por los programadores para satisfacer las necesidades del cliente. - Roles y responsabilidades: Hay diferentes roles en XP para diferentes tareas y propósitos durante el proceso y sus prácticas. A continuación, estos papeles se presentan según Beck (1999). - Programador: es el encargado del desarrollo de la solución, arquitecto y responsable de la codificación. - Cliente: El cliente escribe las historias y las pruebas funcionales, y decide cuando cada requisito se cumple. El cliente establece la prioridad de ejecución de los requisitos. - Encargado de pruebas (Tester): corren las pruebas funcionales regularmente, transmiten los resultados de la prueba y mantienen las herramientas de prueba. - Encargado de seguimiento (Tracker): encargado de seguimiento da retroalimentación en XP. - Entrenador (Coach): responsable del proceso global. Debe proveer guías al equipo de forma que se apliquen las prácticas XP y se siga el proceso correctamente. - Consultor: El consultor es un miembro externo que posee los conocimientos técnicos específicos necesarios. El consultor guía al equipo en la solución de sus problemas específicos. - Gestor (Big Boss): El gestor toma las decisiones. Con el fin de ser capaz de distinguir cualquier dificultad o deficiencia en el proceso. 29 CAPÍTULO IV MARCO APLICATIVO En este capítulo se detallan las prácticas y principios que se toman del proceso de desarrollo para la creación de una aplicación móvil para la verificación de unidades de monitor en tratamiento de radiocirugía intracraneal. Se ha tomado este proceso de desarrollo y la metodología debido a que se desea que el desarrollo sea flexible, el diseño simple y abierto al cambio, donde el objetivo principal sea la realización de la aplicación móvil y no producir una extensa documentación que necesite muchos artefactos. XP especifica un conjunto de prácticas y actividades que se utilizan a lo largo de la elaboración de la aplicación móvil. Se aplicó una adaptación de las prácticas de la metodología XP detallada en el capítulo anterior Iteraciones Siguiendo el proceso de desarrollo de XP se utilizan iteraciones. En cada una de ellas se planifican un conjunto de actividades y tareas que deben desarrollarse en un período de tiempo determinado. Las iteraciones son relativamente cortas, es por esto que su duración se estima en una semana aproximadamente Actividades En cada iteración se aplican las cuatro actividades que propone XP, estas no necesariamente se tienen que realizar en un orden específico y se puede intercambiar de una a otra cuando se considere necesario. Estas actividades se utilizan como se detalla a continuación: Planificación 30 En esta actividad se determina el alcance que se le da a cada iteración, definiendo que objetivos y metas deben ser realizadas y quien podría ser el encargado de realizarlas. También es posible definir modificaciones de las responsabilidades o tareas en una iteración, ya sea una iteración en curso o una iteración pendiente. De esta manera se evidencia la flexibilidad de esta metodología. También se utilizan historias de usuario, donde se describen los requerimientos del sistema. Éstas sirven de base para las pruebas funcionales y ayudan a proporcionar una estimación del tiempo necesario para el desarrollo. El formato para escribir las Historias de Usuario se presenta en la Tabla 3 Tabla 3: Formato de historias de usuario Diseño Siguiendo la metodología de XP, el diseño debe ser simple y sencillo. Se define una metáfora del sistema que muestra una visión global de lo que se quiere desarrollar. Adicionalmente, se pueden usar diagramas y modelos simples para entender cada uno de los módulos a implementar. En esta actividad se utiliza la refactorización para cambiar el diseño o código del sistema por otro que se adapte mejor a la solución. Codificación Para esta actividad se codifica en el lenguaje de programación Java manteniendo la consistencia y legibilidad del código, facilitando así, la comprensión para todos los involucrados en el desarrollo del sistema. Pruebas 31 Para cada una de las iteraciones se realizaron pruebas unitarias para verificar la correctitud del código. Durante cada iteración las historias de usuario seleccionadas en la planificación de iteraciones son sometidas a pruebas funcionales. Se establecen escenarios, los cuales permitirán verificar si la historia de usuario ha sido implementada de manera correcta. Las historias de usuario no se consideran completadas hasta que no hayan pasado satisfactoriamente las pruebas unitarias. Es posible que en algunas iteraciones no implementen las 4 (cuatro) actividades antes descritas, debido a que no son requeridas. Planificación de iteraciones El desarrollo de la aplicación móvil se divide en 6 (seis) iteraciones. El objetivo de cada iteración es obtener una versión del sistema que incluya la implantación de las historias de usuario planteadas en la planificación del proceso de desarrollo XP. Los resultados de las iteraciones son evaluados por los desarrolladores y el usuario final (cliente) hasta cumplir con los objetivos planteados. El objetivo de cada iteración se describe a continuación: - Iteración 0: Definir los requerimientos funcionales y no funcionales del sistema tomando como base el problema descrito. - Iteración 1: Desarrollar el módulo de recepción de datos generales de la tabla de plan de tratamiento de un paciente. - Iteración 2: Desarrollar el módulo de recepción de los arcos de la tabla de plan de tratamiento de un paciente. - Iteración 3: Desarrollar el módulo de generación de reportes y cálculo de unidades de monitor independiente. - Iteración 4: Desarrollar funciones encargadas de leer el informe del paciente en formato PDF o JPG/PNG para agilizar la carga de datos en los módulos de datos generales y arcos. 32 - Iteración 5: Desarrollar interfaces de información como: ¿Quiénes somos?, Formalismo de Calculo, Acerca de nosotros y que dosimétrica se usó para hacer los calculo. Desarrollo 4.1 Iteración 0 1 Junio 2016 – 7 Junio 2016 Definir los requerimientos funcionales y no funcionales del sistema tomando como base el problema descrito. Los componentes del sistema fueron representados a través de un esquema grafico (metáfora), a partir de esta iteración se desarrollan las demás iteraciones. 4.1.1 Planificación La aplicación móvil nativa a desarrollar, MU QC SRS (Monitor Units Quality Control Stereotactic Radiosurgery) bajo el ambiente Android capaz de realizar el cálculo de unidades monitor independiente del TPS (Treatment-planning System) para el tratamiento de radiocirugía intracraneal, con acelerador lineal y conos. Adicionalmente se van a desarrollar dos funciones para la captura de los múltiples datos de los planes de tratamiento: una que permita la lectura de PDF sobre el plan de tratamiento generado para un paciente y la otra mediante un OCR que se encargue de tomar los datos del plan de tratamiento a través de una imagen y generación de reportes sobre el cálculo de unidades monitor. Esta aplicación está dirigido a físicos médicos. 4.1.1.1 Requerimientos funcionales Los requerimientos funcionales describen el comportamiento, funciones o servicios de la aplicación móvil, definen las tareas solicitadas por el usuario. Para esta aplicación móvil se definieron los siguientes requerimientos funcionales: 33 4.1.1.2 Ingresar datos generales: El usuario ingresa los datos generales de la planilla del plan de tratamiento (D’0, total dose, number of fraction, treatment percentage, weight at dose máximum y numero de arcos). Ingresar arcos: El usuario ingresa los datos de la tabla de la planilla del tratamiento (cone, depth (mm), weight factor, mu tps). Calcular MU: Tras obtener la información general y los arcos del plan de tratamiento del paciente se procede a hacer un cálculo independiente de unidades de monitor para verificar la dosis. Leer archivos PDF: Permite al usuario subir un plan de tratamiento de un paciente en formato PDF para agilizar la carga de datos. Aplicar OCR: Permite al usuario subir una imagen sobre el plan de tratamiento de un paciente para agilizar la carga de datos. Generar Reportes: Se obtiene un reporte sobre los datos calculados e ingresados incluyendo el MU independiente al TPS. Así como la comparación de las diferencias porcentuales obtenidas en ambos cálculos (primario y secundario) Información de contacto: Se despliega toda la información del grupo encargado de desarrollar la aplicación, quienes son y como contactarlos Información de formalismo de cálculo: Se despliega la información de cómo es calculado el MU y la bibliografía en la que se basan para hacer el cálculo. Información de data dosimétrica: Se despliega una interfaz indicándole al usuario que si desea usar su propia data ponerse en contacto con los desarrolladores. 34 Requerimientos no funcionales Los requerimientos no funcionales describen aspectos del sistema visibles para el usuario, que no están relacionados de forma directa con el comportamiento funcional del sistema. Para esta aplicación móvil se definieron los siguientes requerimientos no funcionales: Usabilidad: Ofrecer interfaces intuitivas, de fácil manejo y fácil de memorizar. Disponibilidad: Tener una aplicación disponible en todo momento. Desempeño: Ofrecer una aplicación que no presente tiempos de retrasos altos. 4.1.2 Diseño Para cumplir con los requerimientos establecidos se realizó un esquema general de la aplicación móvil donde se identifican cada uno de los componentes que lo conforman y la interacción entre cada uno de ellos. Se pueden visualizar en la Figura 2 Figura 2: Metáfora de la aplicación móvil Fuente: Autor, 2016. 35 A continuación se describen los módulos principales de la aplicación que conformaran el sistema a desarrollar: Módulo de recepción de datos del paciente: permite al usuario ingresar datos sobre el plan del tratamiento del paciente, los datos del paciente se dividen en datos generales y arcos. Posee dos sub-módulos importantes que van a facilitar la carga de los datos, son leer PDF y aplicar OCR. Leer PDF consiste en que el usuario debe cargar un documento del plan de tratamiento del paciente en formato PDF y la aplicación se encargará de tomar los datos del documento, agilizando la carga de los datos del paciente. Aplicar OCR consiste en que el usuario debe cargar una imagen en formato JPG y la aplicación envía la imagen a un servicio web a través de una petición JSON y este responde con un JSON los resultados al escanear la imagen con la finalidad de agilizar la carga de los datos del paciente. Módulo de cálculo de MU: permite al usuario tras haber ingresado todos los datos del plan de tratamiento del paciente realizar el cálculo de unidades monitor independiente del plan de tratamiento. Este módulo tiene dos sub-módulos importantes generar reportes y calcular mu. Generar reportes consiste en generar un archivo en formato PDF sobre los parámetros de entrada y el MU calculado para el paciente. Calcular MU consiste en desplegar una lista de las unidades monitor que se calcularon para cada arco y establecer un sistema de comparación con las unidades monitor del plan de tratamiento del paciente. Módulo de información: permite al usuario visualizar información correspondiente al cálculo de unidades monitor independiente y los desarrolladores. Se divide en dos sub-módulos “información sobre el cálculo de MU” e “información sobre los desarrolladores”. La información sobre el cálculo de MU consiste en desplegar interfaces sobre que bibliografía está basado el cálculo independiente de unidades monitor, la tolerancia y si desea utilizar su propia dosimétrica contactar a los desarrolladores. Información sobre los desarrolladores consiste en desplegar 36 información personal y de contacto sobre el equipo de trabajo encargado de diseñar esta aplicación móvil 4.1.2.1 Diagrama de casos de uso XP es una metodología ágil que no utiliza muchos artefactos para el desarrollo de software, sin embargo, se realizaron diagramas de casos de uso explicando el funcionamiento de la aplicación. Por medio de este modelo de Casos de Uso se pueden establecer diferentes niveles, dependiendo de la descripción de cada una de las funcionalidades establecidas para el sistema. En este apartado se tendrá solo un actor que va a interactuar con la aplicación “MU QC SRS”, como se puede observar en la Figura 3 y que es descrita a continuación: Usuario: Es quien va a interactuar con las distintas funciones que ofrece el sistema, esto luego de que haya descargado la aplicación a su dispositivo móvil. Figura 3: Descripción de los actores y su interacción con el sistema Nivel 0. En el nivel 1 (Figura 4) se puede visualizar al actor y las diferentes acciones principales e independientes que puede realizar la aplicación. 37 Figura 4: Descripción de los actores y su interacción con el sistema Nivel 1. A continuación, se explican con detalle cada uno de los casos de uso del nivel 1: Tabla 4: Caso de Uso: Calculation Formalism. 38 Tabla 5: Caso de Uso: Ingresar datos generales. 39 Tabla 6: Caso de Uso: Tolerance. Tabla 7: Caso de Uso: My Own Data. 40 Tabla 8: Caso de Uso: Who we are. Tabla 9: Caso de Uso: Contact. 41 En el nivel 2 (Figura 5) se describen las funcionalidades de la aplicación que resultaron de refinar los casos de uso principales obtenidos en el nivel 1. Figura 51: Refinamiento de los Casos de Uso principales y sus relaciones Nivel 2. Tabla 10: Caso de Uso: Leer PDF. 42 43 Tabla 11: Caso de Uso: Aplicar OCR. 44 Tabla 12: Caso de Uso: Ingresar arcos. Tabla 13: Caso de Uso: Generar Reportes. 45 Tabla 14: Caso de Uso: Calcular MU. Tabla 15: Caso de Uso: Nuevo paciente. 46 4.2 Iteración 1 8 Junio 2016 – 10 Junio 2016: En esta iteración se desarrolla el módulo de recepción de datos generales de la tabla de plan de tratamiento de un paciente. 4.2.1 Planificación Para esta iteración se establece la meta de Desarrollar el módulo de recepción de datos generales de la tabla de plan de tratamiento de un paciente. En la Tabla 16 se encuentran las distintas historias de usuario correspondientes a esta iteración. Tabla 16: Historia de usuario – Iteración 1. Numero Fecha Descripción 1 8/06/2016 – 9/06/2016 Crear un formulario capaz de cargar la data general del usuario (dosimetría, dosis total, número de fracciones, porcentaje de prescipcion, peso de la dosis al máximo, cantidad de arcos). Crear botones de opciones de carga de los datos generales del paciente. 2 10/06/2016 Crear menú de navegación 4.2.2 Diseño En esta se definen las interfaces de usuario a codificar sobre el formulario de datos generales. Aspectos claves a destacar: - El diseño de interfaces fue basado en Material Design. - Los campos a ingresar por el usuario fueron solo de tipo numérico. - El usuario no puede avanzar a la fase de arcos si todos los campos no están completos. - El menú de navegación debe estar ubicado a la izquierda de la aplicación. 47 Prototipo de interfaz Datos Generales En esta interfaz el usuario fue capaz de llenar los datos de generales del paciente (dosimétrica, dosis total, numero de fracciones, porcentaje de prescripción y cantidad de arcos) todos los campos deben ser numéricos. El formulario también posee 3 botones al fondo del formulario los cuales fueron explicados de izquierda a derecha según la Figura 6. El primer botón le permite al usuario subir una imagen (el plan de tratamiento de un paciente) a la que se le va a aplicar OCR. El segundo botón le permite subir un documento (plan de tratamiento de un paciente) en formato PDF. El tercer botón le permite al usuario navegar hasta el formulario de los arcos y solo es posible cuando todos los campos estén completos, de encontrarse algún campo vacío se va a desplegar un mensaje indicándole al usuario que campo se encuentra sin información como se muestra en la figura. Pantalla “Datos Generales”. Pantalla “Datos Generales - Error”. Figura 6: Prototipo de interfaz Datos Generales 48 Prototipo de interfaz Menú desplegable En esta interfaz el usuario es capaz de navegar a las diferentes interfaces independientes que posee la aplicación móvil, se establece que el formulario de Datos Generales fue asociado como la opción de Home como se muestra en la Figura 7. Figura 7: Prototipo de interfaz menú de navegación. 4.2.3 Codificación Para esta iteración la codificación de interfaces fue realizada por un lenguaje de marcado (XML) el cual facilitaba que cada textbox se le pudiera ingresar solo datos numéricos. Se validó que los campos estén completos antes de avanzar a la sección de arcos de paciente. Al momento de presionar el botón que te envía a la sección de los arcos del paciente se hace la siguiente validación: 49 Donde total_dose corresponde al contenido de Total dose, number_fraction corresponde al contenido de Number fraction, treatment_per corresponde al contenido de Treatment Percentage y weight_dose_maximum corresponde al contenido de Weight at dose maximum. 4.2.4 Pruebas Las pruebas se hicieron bajo el siguiente ambiente: Sistema Operativo: Android versión 4.1.2 Configuración de Hardware: CPU: Dual-core 1.5 GHz Scorpion Memoria RAM: 1GB y Memoria Interna: 32 GB Dispositivo utilizado: Sony Ericsson Xperia LT26i Pruebas funcionales En la Tabla 17 se encuentran las distintas pruebas funcionales realizadas para verificar el correcto funcionamiento de las actividades realizadas en esta iteración 50 Tabla 17: Pruebas– Iteración 1. Nro. Nombre de la Prueba Objetivos Resultados Esperados 1 Campos completos Verificar que todos los campos estén completos antes de avanzar a ingresar los arcos Se debe intentar pasar a la sección de arcos con 1 campo incompleto. La aplicación debe enviarle un mensaje al usuario informando cual campo se encuentra vacío Prueba 1 – Campos completos Para verificar el correcto funcionamiento de la validación de los campos completos, se realizaron diferentes pruebas dejando varios campos vacíos. 1. Se dejó el campo Total dose vacío y se presionó el botón de ingresar a la sección de arcos Resultado: La aplicación le envió un mensaje al usuario notificando que el campo Total dose se encontraba vacío como se muestra en la Figura 9. 2. Se dejó el campo Number fraction vacío y se presionó el botón de ingresar a la sección de arcos Resultado: La aplicación le envió un mensaje al usuario notificando que el campo Number fraction se encontraba vacío. 3. Se dejó el campo Treatment percentage vacío y se presionó el botón de ingresar a la sección de arcos 51 Resultado: La aplicación le envió un mensaje al usuario notificando que el campo Treatment percentage se encontraba vacío. Figura 8: Interfaz campos vacíos datos generales. 4. Se dejó el campo Weight at dose maximum vacío y se presionó el botón de ingresar a la sección de arcos Resultado: La aplicación le envió un mensaje al usuario notificando que el campo Weight at dose maximum se encontraba vacío. 4.3 Iteración 2 13 Junio 2016 – 16 Junio 2016 Se desarrolla la sección del módulo de arcos del paciente. 52 4.3.1 Planificación Para esta iteración se establece la meta Desarrollar el módulo de recepción de los arcos de la tabla de plan de tratamiento de un paciente. En la Tabla 18 se encuentran las distintas historias de usuario correspondientes a esta iteración. Tabla 18: Historia de usuario – Iteración 2. Numero Fecha Descripción 1 13/06/2016 - 15/06/2016 Crear un formulario capaz de cargar los arcos del usuario (conos, promedio en profundidad (mm), factor peso, unidades monitor TPS). 2 16/06/2016 Crear una sección de reporte en la cual se podrá visualizar los botones de generar reporte, calcular mu y nuevo reporte. 4.3.2 Diseño En esta se definen las interfaces de usuario a codificar sobre el formulario de datos generales. Aspectos claves a destacar: - El diseño de interfaces fue basado en Material Design. - Los datos generales deben estar cargados y debe ser transparente el cálculo para el usuario 1.1.1. Prototipo de interfaz Insertar arcos. En esta interfaz el usuario fue capaz de ingresar los datos relacionados a los arcos del paciente (cone, avg. Depth (mm), weight factor, MU TPS). Los 53 datos a ingresar fueron solo de tipo numérico. Se crea un tab (un máximo de 19) por arco elegido por usuario en el formulario de Datos Generales. La Figura 9 muestra el prototipo de interfaz para Insertar arcos Figura 9: Prototipo de interfaz “Insertar arcos”. 1.1.2. Prototipo de interfaz Generar reportes/Calcular MU. En esta interfaz se podrán visualizar dos inputText que corresponden al ID del paciente y el ID del plan, estos datos fueron de utilidad al momento de generar reportes. Adicionalmente hay 3 botones, el primero corresponde a la creación de un reporte sobre los datos calculados e ingresados del paciente, el segundo que hace una metáfora referente a limpiar realizara la función de borrar la data para generar un reporte nuevo y el tercero que hace una metáfora referente a calcular corresponde al 54 botón de cálculo de independiente de MU. En la Figura 10 se muestra el prototipo de interfaz para los reportes Figura 10: Prototipo de interfaz “Generar Reporte/Calcular MU”. 4.3.2 Codificación Para esta iteración la codificación de interfaces fue realizada por un lenguaje de marcado (XML) el cual facilitaba que cada textbox se le pudiera ingresar solo datos numéricos para la parte de los arcos y en la interfaz de reportes pueden ser alfanumérico. En consecuencia no hay pruebas funcionales en esta iteración. 55 4.4 Iteración 3 17 Junio 2016 – 24 Junio 2016 Se desarrolla la sección del módulo de generación de reportes del paciente en formato PDF con la librería itextpdf en su versión 5.5.9. Listar los cálculos de unidades monitor para arco que se encuentra en el formulario de Insertar arcos. 4.4.1 Planificación Para esta iteración se establece la meta fue desarrollar el módulo de generación de reportes y cálculo de unidades de monitor independiente. En la Tabla 19 se encuentran las distintas historias de usuario correspondientes a esta iteración. Tabla 19: Historia de usuario – Iteración 3. Numero Fecha Descripción 1 17/06/2016 - 20/06/2016 Crear una planilla en formato PDF donde se muestren los datos ingresados por el usuario (datos generales, arcos, id de plan y el paciente de poseer). 2 21/06/2016 - 24/06/2016 Crear una lista donde se muestren el MU calculado según los datos ingresados del usuario. 4.4.2 Diseño En esta se definen las interfaces de usuario a codificar sobre el formulario de datos generales. Aspectos claves a destacar: - El diseño de interfaces fue basado en Material Design. 56 - Los datos generales y arcos deben estar cargados. 1.1.3. Prototipo de interfaz Insertar arcos. Para interfaz se despliega un dialog indicándole al usuario si desea generar el reporte como se muestra en la figura 11. Si el usuario presiona OK se abre el documento como se muestra en la imagen. Si presiona cancelar no se muestra nada. En caso de que existan campos incompletos se le indicará al usuario cual arco no tiene los datos completos, en la Figura 12 se puede visualizar el mensaje. Interfaz “Generar Reporte”. Formato reporte Figura 11: Prototipo de Interfaz Generar Reporte y Formato del Reporte. 57 Figura 12: Prototipo de interfaz “Generar Reporte/Calcular MU datos incompletos”. 1.1.4. Prototipo de interfaz Calcular MU En esta interfaz se despliega una lista sobre el cálculo de MU, cada ítem posee 3 datos importantes; uno es el MU QC SRS, este campo contiene información sobre el MU calculado por la aplicación, MU TPS hace referencia al MU que posee el plan de tratamiento del paciente y por último el porcentaje de diferencia entre ambas unidades de monitor con un icono indicando 3 niveles de acción verde: optimo, amarillo: satisfactorio y rojo: revisión. En la figura 13 se puede visualizar el prototipo de interfaz. 58 Figura 13: Prototipo de interfaz “Calcular MU”. 4.4.3 Codificación Se incorporan las clases para el cálculo de unidades de monitor. Se agrega la librería para la generación del reporte en formato PDF. Se agregan validaciones para verificar que los campos no estén vacíos. El ambiente de entorno donde se realizaron las pruebas es el mismo de la iteración 1 Clase Output Factor Clase utilizada para obtener los factores de campo, los factores de campo son necesarios para el cálculo de unidades monitor está compuesta como se muestra en la figura 14. La variable tmrArray es una constante que contiene datos 59 obtenidos de la hoja de cálculo de la empresa Servicios RADFIS C.A. para el cálculo de MU independiente. Figura 14: Clase OutputFactor. Definición de los métodos de la clase OUTPUT FACTOR getOutputFactor: Función para obtener el factor de campo dado un cono getIndexConoFromString: Función para obtener un índice del arreglo tmrArray dado un cono 60 Clase TMR: Clase utilizada para el cálculo de unidades monitor está compuesta como se muestra en la Figura 15. Las variables cono son constantes que contienen datos obtenidos de la hoja de cálculo de la empresa Servicios RADFIS C.A. para el cálculo de MU independiente. Figura 15: Clase TMR. Definición de los métodos de la clase TMR getTMR: Función para obtener el TMR dado el cono y la profundidad. Figura X getProfundidadIndex: Función para obtener el índice de los arreglos cono dada la profundidad, como se muestra en el fragmento de código a continuación Clase Six_X_Trilogy Clase utilizada para el cálculo de unidades monitor está compuesta como se muestra en la Figura 16. Esta clase contiene todos los métodos y se encarga de 61 almacenar todos los valores necesarios para realizar el cálculo de MU independiente. Adicionalmente usa los métodos de las clases Output Factor y TMR. Figura 16: Clase Six_X_Trilogy. Definición de los métodos de Six_X_Trilogy El formalismo utilizado para el cálculo de unidades monitor es el sugerido por el fabricante, el cual utiliza el Factor de Peso, Porcentaje de Prescripción, el Promedio de los TMR, el Factor de Calibración y el peso a la dosis máxima, cuyos detalles pueden ser revisado en el sitio web del fabricante, www.myvarian.com. 62 getDose_Fraction: Función que retorna la dosis por fracción tomando la dosis total y el número de fracciones ingresadas en los datos generales del paciente. getRepeatFactor: Función que retorna el factor de repetición tomando la dosis por fracción calculada, porcentaje de prescripción y peso máximo de la dosis. getOutoutFactor: Función que retorna el output factor utilizando la clase Output Factor, se toma como parámetro el cono ingresado por el usuario. getTMR: Función que retorna el TMR utilizando la clase TMR , se toma como parámetro la profundidad en milímetros ingresada por el usuario. getMUQCSRS: Función que realiza el cálculo de unidades monitor independiente. Para realizar este cálculo es necesario calcular el factor repetición, factor de peso, TMR, Output Factor y la dosimétrica. 63 getError: Función que retorna la comparación entre Unidades Monitor (MU SRS) calculadas contra las Unidades Monitor del plan de tratamiento 4.4.4 Pruebas Las pruebas de esta iteración se realizaron bajo el mismo ambiente descrito en la iteración 1. Pruebas Funcionales En la Tabla 20 se encuentran las distintas pruebas funcionales realizadas para verificar el correcto funcionamiento de las actividades realizadas en esta iteración Tabla 20: Pruebas– Iteración 3. Nro. Nombre de la Prueba Objetivos Resultados Esperados 1 Generación de reportes y cálculo de MU independiente Verificar que los datos del reporte estén correctos al igual que el cálculo de MU independiente Los resultados del cálculo de MU independiente deben no deben diferir en 1 unidad de la hoja de cálculo de MU independiente Prueba 1 – Generación de reportes y cálculo de MU independiente Para esta prueba se tomaron 2 (dos) planes de tratamientos de pacientes diferentes. Paciente 1: Paciente 1 Energía: 6X D’0: SAD (1.00) 64 Total dose: 2000.00 (cGy) Number of fraction: 1 Treatment percentage: 80.0 Weight at dose maximum: 5.00 Arcos: 5 Tabla 21: Datos Generales – Paciente 1. Arcos\Datos Conos Aveg. Depth (mm) Weight factor MU TPS 1 5 49.40 1.0 843.0 2 5 59.40 1.0 891.0 3 5 118.70 1.0 1220.0 4 5 102.1 1.0 1118.0 5 5 78.4 1.0 985.0 En la figura 18 se pueden observar cómo se ingresan los datos generales del plan del paciente Paciente 1, mientras que en la figura 17 se puede visualizar un fragmento de los arcos ingresados del plan del paciente Paciente 1. 65 Ingreso de datos Ingreso de arcos Figura 17: Ingreso de datos generales y arcos del paciente MU QC SRS– Paciente 1. Resultado: La salida generada luego de la ejecución del programa fue la siguiente: Al hacer el cálculo de unidades monitor independiente en la aplicación móvil no difirió del cálculo que hace la empresa en una hoja de cálculo aparte donde se lleva el proceso de verificación. En la figura 18 se puede visualizar el cálculo de MU realizado por la aplicación y en la figura 19 se puede visualizar el cálculo de MU realizado por la hoja de cálculo de la empresa Servicios RADFIS C.A. 66 Figura 18: Resultados de cálculo de MU independiente – Paciente 1. Figura 19: Hoja de cálculo de MU independiente – Paciente 1. Al crear el reporte se muestran con éxito los parámetros de entrada y los cálculos realizados para obtener el MU independiente al TPS. En la figura 20 se puede visualizar el reporte creado para Paciente 1. 67 Figura 20: Reporte generado – Paciente 1. Los siguientes pacientes que fueron incluidos en las pruebas tienen 18 arcos Paciente 2: Paciente 2 Energía: 6X D’0: SAD (1.00) Total dose: 2200.00 (cGy) Number of fraction: 1 Treatment percentage: 70.0 Weight at dose maximum: 7.271 Arcos: 18 68 Tabla 22: Datos generales – Paciente 2. Arcos\Datos Conos Aveg. Depth (mm) Weight factor MU TPS 1 14 106.3 1,004 756 2 12 113.2 0,989 794 3 12 121.0 0,989 827 4 12 62.4 1,004 623 5 12 68.8 0,989 634 6 14 86.5 0,989 676 7 5 104.7 0,330 323 8 5 111.7 0,330 336 9 5 119.4 0,330 350 10 5 61.0 0,330 257 11 5 67.1 0,330 265 12 5 84.5 0,330 291 13 5 111.1 0,466 471 14 5 118.1 0,466 490 15 5 123.9 0,466 506 16 5 54.3 0,466 349 17 5 59.0 0,466 358 18 5 76.6 0,466 394 En la figura 21 se pueden observar cómo se ingresan los datos generales del plan del paciente Paciente 2, junto a un fragmento de los arcos ingresados del plan. 69 Ingreso de datos Ingreso de arcos Figura 21: Ingreso de datos generales y arcos del paciente – Paciente 2. Resultado: La salida generada luego de la ejecución del programa fue la siguiente: Al hacer el cálculo de unidades monitor independiente en la aplicación móvil difirió en ±0.001% del cálculo que hace la empresa en una hoja de cálculo aparte donde se lleva el proceso de verificación. En la figura 22 se visualiza el cálculo independiente de MU realizado por la aplicación, mientras que en la figura 23 y 24 se pueden observar el cálculo independiente de MU realizado por la hoja de cálculo de la empresa Servicios RADFIS C.A. 70 Figura 22: Resultados de cálculo de MU independiente – Paciente 2. Figura 23: Hoja de cálculo de MU independiente A – Paciente 2. 71 Figura 24: Hoja de cálculo de MU independiente B – Paciente 2. Al crear el reporte se mostraron con éxito los parámetros de entrada figura 25 y los cálculos realizados figura 26 para obtener el MU independiente al TPS del paciente Paciente 2. Figura 25: Reporte Paciente 2 parámetros de entrada. 72 Figura 26: Reporte Paciente 2 valores calculados. Paciente 3: Paciente 3 Energía: 6X D’0: SAD (1.00) Total dose: 2000.00 (cGy) Number of fraction: 1 Treatment percentage: 50.0 Weight at dose maximum: 16.563 Arcos: 18 73 Tabla 22: Datos Generales – Paciente 3. Arcos\Datos Conos Aveg. Depth (mm) Weight factor MU TPS 1 10 98.0 1.00 431 2 10 98.0 1.00 429 3 10 93.0 1.00 419 4 10 43.0 1.00 324 5 10 45.0 1.00 329 6 10 51.0 1.00 339 7 14 93.0 1.00 395 8 14 93.0 1.00 393 9 14 89.0 1.00 386 10 14 50.0 1.00 318 11 14 51.0 1.00 320 12 14 59.0 1.00 333 13 20 100.0 1.00 390 14 20 98.0 1.00 384 15 20 92.0 1.00 373 16 20 44.0 1.00 293 17 20 45.0 1.00 297 18 20 52.0 1.00 308 En la figura 27 se pueden observar cómo se ingresan los datos generales del plan del paciente Paciente 3, y se puede visualizar un fragmento de los arcos ingresados del plan. 74 Ingreso de datos Ingreso de arcos Figura 27: Ingreso de datos generales y arcos del paciente – Paciente 3. Resultado: La salida generada luego de la ejecución del programa fue la siguiente: Al hacer el cálculo de unidades monitor independiente en la aplicación móvil difirió en ±0.001% del cálculo que hace la empresa en una hoja de cálculo aparte donde se lleva el proceso de verificación. En la figura 28 se visualiza el cálculo independiente de MU realizado por la aplicación, mientras que en la figura 29 y 75 30 se pueden observar el cálculo independiente de MU realizado por la hoja de cálculo de la empresa Servicios RADFIS C.A. Figura 28: Resultados de cálculo de MU independiente – Paciente 3. 76 Figura 29: Hoja de cálculo de MU independiente A – Paciente 3. Figura 30: Hoja de cálculo de MU independiente B – Paciente 3. Al crear el reporte se mostraron con éxito los parámetros de entrada figura 31 y los cálculos realizados figura 32 para obtener el MU independiente al TPS del paciente Paciente 3. 77 Figura 31: Reporte Paciente 3 parámetros de entrada. Figura 32: Reporte Paciente 3 valores calculados. 78 Paciente 4: Paciente 4 Energía: 6X D’0: SAD (1.00) Total dose: 2200.00 (cGy) Number of fraction: 1 Treatment percentage: 60.0 Weight at dose maximum: 12.536 Arcos: 18 Tabla 24: Datos Generales – Paciente 4. Arcos\Datos Conos Aveg. Depth (mm) Weight factor MU TPS 1 5 40.0 1.00 469 2 5 45.0 1.00 482 3 5 54.0 1.00 506 4 5 124.0 1.00 733 5 5 123.0 1.00 732 6 5 116.0 1.00 708 7 10 43.0 1.00 394 8 10 48.0 1.00 404 9 10 57.0 1.00 424 10 10 122.0 1.00 591 11 10 121.0 1.00 590 12 10 116.0 1.00 574 13 5 41.0 1.00 471 14 5 45.0 1.00 481 15 5 53.0 1.00 504 16 5 121.0 1.00 723 17 5 120.0 1.00 722 18 5 112.0 1.00 692 En la figura 33 se pueden observar cómo se ingresan los datos generales del plan del paciente Paciente 4, y se puede visualizar un fragmento de los arcos ingresados del plan. 79 Ingreso de datos generales Ingreso de arcos Figura 33: Ingreso de datos generales y arcos del paciente – Paciente 4. Resultado: La salida generada luego de la ejecución del programa fue la siguiente: Al hacer el cálculo de unidades monitor independiente en la aplicación móvil difirió en ±0.001% del cálculo que hace la empresa en una hoja de cálculo aparte donde se lleva el proceso de verificación. En la figura 34 se visualiza el cálculo independiente de MU realizado por la aplicación, mientras que en la figura 35 y 36 se pueden observar el cálculo independiente de MU realizado por la hoja de cálculo de la empresa Servicios RADFIS C.A. 80 Figura 34: Resultados de cálculo de MU independiente – Paciente 4. Figura 35: Hoja de cálculo de MU independiente A – Paciente 4. 81 Figura 36: Hoja de cálculo de MU independiente B – Paciente 4. Al crear el reporte se mostraron con éxito los parámetros de entrada figura 37 y los cálculos realizados figura 38 para obtener el MU independiente al TPS del paciente Paciente 4. Figura 37: Reporte Paciente 4 parámetros de entrada. 82 Figura 38: Reporte Paciente 4 valores calculados. Paciente 5: Paciente 5 Energía: 6X D’0: SAD (1.00) Total dose: 1800.00 (cGy) Number of fractions: 1 Treatment percentage: 50.0 Weight at dose maximum: 9.510 Arcos: 18 83 Tabla 25: Datos Generales – Paciente 5. Arcos\Datos Conos Aveg. Depth (mm) Weight factor MU TPS 1 28 94.0 0.823 475 2 28 103.0 0.823 496 3 28 111.0 0.823 515 4 28 84.0 0.823 451 5 28 94.0 0.823 473 6 28 104.0 0.823 497 7 18 77.0 1.07 592 8 18 83.0 1.07 611 9 18 90.0 1.07 634 10 18 98.0 1.07 657 11 18 103.0 1.07 674 12 18 106.0 1.07 686 13 5 92.0 1.205 970 14 5 98.0 1.205 999 15 5 102.0 1.205 1023 16 5 89.0 1.205 952 17 5 95.0 1.205 981 18 5 100.0 1.205 1011 En la figura 39 se pueden observar cómo se ingresan los datos generales y arcos ingresados del plan del paciente Paciente 5. 84 Ingreso de datos generales Ingreso de arcos Figura 39: Datos de ingresos del paciente – Paciente 5. Resultado: La salida generada luego de la ejecución del programa fue la siguiente: Al hacer el cálculo de unidades monitor independiente en la aplicación móvil difirió en ±0.001% del cálculo que hace la empresa en una hoja de cálculo aparte donde se lleva el proceso de verificación. En la figura 40 se visualiza el cálculo independiente de MU realizado por la aplicación, mientras que en la figura 41 y 42 se pueden observar el cálculo independiente de MU realizado por la hoja de cálculo de la empresa Servicios RADFIS C.A. 85 Figura 40: Resultados de cálculo de MU independiente – Paciente 5. Figura 41: Hoja de cálculo de MU independiente A – Paciente 5 86 Figura 42: Hoja de cálculo de MU independiente B – Paciente 5 Al crear el reporte se mostraron con éxito los parámetros de entrada figura 43 y los cálculos realizados figura 44 para obtener el MU independiente al TPS del paciente Paciente 5. Figura 43: Reporte Paciente 5 parámetros de entrada. 87 Figura 44: Reporte Paciente 5 valores calculados. 4.5 Iteración 4 27 Junio 2016 – 6 Julio 2016 En esta iteración se va a trabajar con métodos alternativos de carga de datos del plan de tratamiento del paciente. Los métodos a desarrollar son: Lectura de PDF y reconocimiento de texto a través de una imagen 4.5.1 Planificación Para esta iteración se establece la meta de desarrollar funciones encargadas de leer el informe del paciente en formato PDF o JPG para agilizar la carga de datos en los módulos de datos generales y arcos. 88 Tabla 26: Historia de usuario – Iteración 4. Numero Fecha Descripción 1 27/06/2016 - 30/06/2016 Desarrollar un método para la carga de datos del plan de tratamiento de un paciente a través de un documento en formato PDF 2 1/07/2016 - 6/07/2016 Desarrollar un método para la carga de datos del plan de tratamiento de un paciente a través del reconocimiento de texto en una imagen en formato JPG. 4.5.2 Diseño En esta se definen las interfaces de usuario a codificar sobre el formulario de datos generales. Aspectos claves a destacar: - El diseño de interfaces fue basado en Material Design. 1.1.5. Prototipo de interfaz Cargar PDF Esta interfaz consiste en desplegar nuestro explorador de archivos y permitir la navegación solo mostrando archivos en formato PDF. Al escoger el documento se aplica el método de lectura de texto de un PDF. Se puede visualizar el prototipo en la figura 45. 89 Figura 45: Prototipo de interfaz seleccionar documento PDF. 1.1.6. Prototipo de interfaz Aplicar OCR Aplicar OCR consiste en dos acciones escoger el segmento que voy a escanear (cono, profundidad, weight factor y MU TPS) y luego cortar la imagen según el segmento seleccionado. En la figura 46 se visualiza el prototipo de interfaz, se observa un dialog donde el usuario es capaz de seleccionar que columna desea escanear. En la figura 47 se visualiza el prototipo de interfaz al realizar el corte de la columna a escanear. 90 Figura 46: Prototipo de interfaz seleccionar columna OCR. Figura 47: Prototipo de interfaz cortar imagen OCR. 91 4.5.3 Codificación Para esta iteración se crean dos métodos encargados de la extracción y transformación de datos obtenidos por medio de una Imagen en formato JPG/PNG o un documento en formato PDF. getPDFData: Método el cual dado un PDF extraer su contenido en cadenas de caracteres y buscar los datos correspondientes al paciente. Los datos que se pueden obtener del PDF son: total dose, number of fractions, treatment percentage y todo los datos de los arcos (cone, avg. depth (mm), tmr, mu tps). callOCRAPI: Método encargado de realizar una llamada al servicio OCR, recibe como parámetro la imagen sobre el plan de tratamiento del paciente. Para que el OCR funcione se deben tomar las 4 columnas (cone, avg. depth, weight factor y mu tps). Este método solo puede escanear los arcos del paciente. 4.5.4 Pruebas Las pruebas de esta iteración se realizaron bajo el mismo ambiente descrito en la iteración 1. Pruebas Funcionales En la Tabla 27 se encuentran las distintas pruebas funcionales realizadas para verificar el correcto funcionamiento de las actividades realizadas en esta iteración 92 Tabla 27: Pruebas– Iteración 4. Nro. Nombre de la Prueba Objetivos Resultados Esperados 1 Aplicar lectura de PDF Extraer el texto del documento PDF y transformar ese texto en datos útiles para la aplicación Se espera que se pueda extraer la mayor cantidad de datos sobre el paciente de modo que se agilice el proceso de cálculo de unidades monitor. 2 Aplicar OCR Extraer el texto de una imagen en formato JPG y transformar ese texto en datos útiles para la aplicación Se espera que se pueda extraer la mayor cantidad de datos sobre el paciente de modo que se agilice el proceso de cálculo de unidades monitor. Prueba 1 Las pruebas se hicieron bajo el siguiente ambiente: Sistema Operativo: Android versión 4.1.2 Configuración de Hardware: CPU: Dual-core 1.5 GHz Scorpion Memoria RAM: 1GB y Memoria Interna: 32 GB Dispositivo utilizado: Sony Ericsson Xperia LT26i Paciente 1: Los datos del paciente corresponden a Paciente 1 paciente usado en la prueba 1 de la iteración 4. El resultado de las pruebas fueron capturas de pantalla al log del IDE, ya que para el usuario es transparente como se realiza el proceso de lectura de PDF. En la figura 48 y 49 se observa la data cruda extraída del PDF. 93 Figura 48: PDF plan de tratamiento del paciente Paciente 1– raw A. 94 Figura 49: PDF plan de tratamiento del paciente Paciente 1 – raw B. El la figura 50 se puede observar la transformación de la lectura del PDF y los datos extraídos. Figura 50: PDF plan de tratamiento del paciente Paciente 1 – resultado. Paciente 2: Los datos del paciente corresponden a Paciente 2 usado en la prueba 1 de la iteración 4. En la figura 51 y 52 se observa la data cruda extraída del PDF. 95 Figura 51: PDF plan de tratamiento del paciente Paciente 2 – raw A. 96 Figura 52: PDF plan de tratamiento del paciente Paciente 2 – raw B. El la figura 53 se puede observar la transformación de la lectura del PDF y los datos extraídos. Resultados: Al aplicar extracción de datos por PDF se pueden obtener casi todos los campos necesarios para hacer el cálculo de unidades monitor exceptuando el peso máximo de la dosis que debe ser introducida manual. 97 Figura 53: PDF plan de tratamiento del paciente Paciente 2 – resultado. Prueba 2 Los datos del paciente corresponden a Paciente 2 usado en la prueba 1 de la iteración 4. El proceso de cómo se aplica OCR es transparente para el usuario se usaran capturas de pantalla al log del IDE para visualizar la extracción y transformación de los datos. En la figura 54 se visualiza el plan de tratamiento del paciente al que se le aplico OCR. 98 Figura 54: OCR plan de tratamiento del paciente. Conos: En la figura 55 se puede visualizar el log de conos, está dividido en 2 secciones, la sección I/Cone representa lo que detectó el OCR, I/OCR representa todas las filas transformadas separadas por comas. Al aplicar OCR a la columna de conos se detectó todas las filas de manera correcta. En caso de que un valor se salga de rango o no se detecten todas las filas el valor por defecto que se le asigna a las filas faltantes es 5. 99 Figura 55: OCR log Cone. Depth: En la figura 56 se puede visualizar el log de depth, está dividido en 2 secciones, la sección I/Depth representa lo que detectó el OCR, I/OCR representa todas las filas transformadas separadas por comas. Al aplicar OCR a la columna de depth no se detectaron todas las filas de manera correcta, existen filas donde no se detecta la parte decimal del número o que detecta letras por números. También ocurre que una fila detectada se sale del rango y se configura que su valor por defecto sea 20.0 de depth. 100 Figura 56: OCR log Depth. Weight Factor: En la figura 57 se puede visualizar el log de weight factor, está dividido en 2 secciones, la sección I/Weight representa lo que detectó el OCR, I/OCR representa todas las filas transformadas separadas por comas. Al aplicar OCR a la columna de weight factor se detectó todas las filas de manera correcta. En caso de que un valor se salga de rango o no se detecten todas las filas el valor por defecto que se le asigna a las filas faltantes es 1.00 Figura 57: OCR log Weight Factor. 101 MU TPS: En la figura 58 se puede visualizar el log de mu tps, está dividido en 2 secciones, la sección I/MuTps representa lo que detectó el OCR, I/OCR representa todas las filas transformadas separadas por comas. Al aplicar OCR a la columna de depth no se detectaron todas las filas de manera correcta, existen filas donde se detectan letras por números. En caso de que un valor se salga de rango o no se detecten todas las filas el valor por defecto que se le asigna a las filas faltantes es 1. Figura 58: OCR log MU TPS. Resultados: Al aplicar OCR a un plan de tratamiento de un paciente, solo podemos obtener los datos de los arcos, es un procedimiento que no es 100% preciso, sin embargo transformando las cadenas detectadas por el OCR se puede mejorar la precisión y solo unas pocas filas no son correctas. El proceso de cálculo de unidades monitor se agiliza, en especial casos donde son muchos arcos. 4.6 Iteración 5 7 Julio 2016 – 8 Julio 2016 Se desarrollan interfaces para brindarle al usuario información de la aplicación y los desarrolladores. 102 4.6.1 Planificación Para esta iteración se establece la meta para el desarrollo de las interfaces de información como: ¿Quiénes somos?, Formalismo de Cálculo, Acerca de nosotros y que dosimétrica se usó para hacer los cálculo. Tabla 28: Historia de usuario – Iteración 5 Numero Fecha Descripción 1 07/07/2016 - 08/07/2016 Crear interfaces donde se despliegue información sobre la aplicación y los desarrolladores. Las secciones son: Calculation Formalism, Tolerance, My own data, Who we are? Y Contact us. 4.6.2 Diseño Se definen prototipos y estándares en el diseño de interfaces. Aspectos claves a destacar: - El diseño de interfaces fue basado en Material Design. 1.1.7. Prototipo de interfaz Calculation Formalism Interfaz que tiene como objetivo explicar de dónde provienen los cálculos realizados por la aplicación. En la figura 59 se visualiza el prototipo creado para esa interfaz 1.1.8. Prototipo de interfaz Tolerance Interfaz que tiene como objetivo explicar la tolerancia usada en MU QC SRS. En la figura 59 se visualiza el prototipo creado para esa interfaz 103 interfaz Calculation Formalism interfaz Tolerance. Figura 59: Prototipo de interfaz Calculation Formalism e interfaz Tolerance. 1.1.9. Prototipo de interfaz My own data Interfaz que tiene como propósito indicarle al usuario que si desea utilizar su propia dosimétrica, se ponga en contacto con los desarrolladores. En la figura 60 se visualiza el prototipo creado para esa interfaz 104 Figura 60: Prototipo de interfaz My own data 1.1.10. Prototipo de interfaz Who we are? Interfaz que tiene como propósito proveer información personal de los desarrolladores de la aplicación. En la figura 61 se visualiza el prototipo creado para esa interfaz 105 Figura 61: Prototipo de interfaz Who we are? 1.1.11. Prototipo de interfaz Contact us Interfaz que tiene como propósito proveer información de contacto de los desarrolladores de la aplicación. En la figura 62 se visualiza el prototipo creado para esa interfaz 106 Figura 62: Prototipo de interfaz Contact us. 4.6.3 Codificación Para esta iteración la codificación fue diseño de interfaces en XML. A continuación se muestra el diseño final de las interfaces creadas para esta iteración, My own data (figura 63), Tolerance (figura 63), Calculation Formalism (figura 64), Contact us (figura 64) y Who we are? (figura 65). Interfaz My own data Interfaz Tolerance Figura 63: Interfaz My own data y Tolerance. 107 Interfaz Calculation Formalism Interfaz Contact Figura 64: Interfaz Calculation Formalism e Interfaz Contact. 108 Figura 65: Interfaz Who we are? 109 CAPÍTULO V MARCO DE RESULTADOS En el siguiente capítulo se describe el contenido de la aplicación móvil Descripción de la aplicación El formalismo utilizado para el cálculo de unidades monitor es el sugerido por el fabricante, el cual utiliza el Factor de Peso, Porcentaje de Prescripción, el Promedio de los TMR, el Factor de Calibración y el peso a la dosis máxima, cuyos detalles pueden ser revisado en el sitio web del fabricante, www.myvarian.com. MU QC SRS es una aplicación nativa desarrollada en el lenguaje Java con el IDE Android Studio. El punto de partida de la aplicación móvil fue el desarrollo de una hoja de cálculo en Microsoft Excel ® automatizada, basada en el formalismo anteriormente descrito, y en la data dosimétrica obtenida durante la puesta en marcha del Planificador Eclipse Cone Planning. En el proceso de verificación de Unidades Monitor, MU QC SRS fue desarrollada para que el usuario complete los siguientes parámetros: En la primera hoja deberá introducir la dosis total del tratamiento, el número de fracciones, el porcentaje de prescripción y el peso a la dosis máxima (Figura 65 A). En la segunda hoja deberá introducir el tamaño del cono, profundidad promedio, el factor de peso y las unidades monitor calculadas por el sistema de planificación, para cada arco empleado en el plan de tratamiento (Figura 65 B). 110 Figura 65. Captura de Pantalla MU QC SRS. A: Primera hoja de MU QC SRS donde se introducen los parámetros del plan. B: Segunda hoja de MU QC SRS donde se introducen los parámetros de cada arca de tratamiento. Una vez calculadas las Unidades Monitor (MU SRS), estas son comparadas con las Unidades Monitor del sistema de planificación (MU TPS) y calcula un error porcentual, utilizando la siguiente formula: Todos los arcos son calculados y comparados con las Unidades Monitor dadas por el sistema de planificación. La aplicación móvil genera un reporte con los 111 parámetros del plan y los dosimétricos utilizados, el resultado del cálculo y la comparación contra el sistema de planificación (Figura 66). Figura 66. Reporte Generado por MU QC SRS. Módulo Ingresar datos generales Este módulo permite al usuario ingresar datos sobre el plan del tratamiento del paciente, los datos del paciente se dividen en la dosis total del tratamiento, el número de fracciones, el porcentaje de prescripción y el peso a la dosis máxima. Posee dos sub-módulos importantes que van a facilitar la carga de los datos, son leer PDF y aplicar OCR. Leer PDF consiste en que el usuario debe cargar un documento del plan de tratamiento del paciente en formato PDF y la aplicación se encargará de tomar los datos del documento, agilizando la carga de los datos del paciente. Aplicar OCR consiste en que el usuario debe cargar una imagen en formato JPG y la aplicación envía la imagen a un servicio web a través de una petición JSON y este responde con 112 un JSON los resultados al escanear la imagen con la finalidad de agilizar la carga de los datos del paciente. Ingresar los datos del paciente de forma manual Verificar la calibración, en esta aplicación se trabaja con SAD ó SSD. Ingresar los campos Total dose (dosis total del tratamiento), Number of fraction (número de fracciones), Treatment percentage (porcentaje de prescripción) y Weight at dose maximum (peso a la dosis máxima). Verificar cuantos arcos posee el plan de tratamiento del paciente y ajustarlo en la aplicación. Una vez estén todos los campos completos presionar el botón con la metáfora del lápiz (Figura 67) si desea introducir los arcos. Si al presionar el botón los campos están incompletos se desplegará un mensaje indicando que campo falta (Figura 68). Ingresar los datos del paciente por un documento en formato PDF Presionar el botón con la metáfora de PDF (Figura 69). Escoger un archivo en formato PDF sobre el plan de tratamiento del paciente. Esperar a que la aplicación procese los datos y luego verificar la veracidad de la información. Ingresar el Weight factor (peso a la dosis máxima) Una vez estén todos los campos completos presionar el botón con la metáfora del lápiz (Figura 67) si desea introducir los arcos. Si al presionar el botón los campos están incompletos se desplegará un mensaje indicando que campo falta (Figura 68). 113 Figura 67. Ingresar a Insertar arcos. 114 Figura 68. Datos generales incompletos. Figura 69. Ingresar los datos del paciente por un documento en formato PDF. 115 Ingresar los datos del paciente a través de una imagen en formato JPG Seleccionar la cantidad de arcos. Presionar el botón con la metáfora de galería (Figura 70). Escoger la columna a escanear (cone, avg. depth, weight factor, mu tps). Escoger un archivo en formato JPG sobre el plan de tratamiento del paciente. Cortar la columna que necesita del plan de tratamiento del paciente (Figura 71). Una vez estén todos los campos completos presionar el botón con la metáfora del lápiz (Figura 67) si desea introducir los arcos. Si al presionar el botón los campos están incompletos se desplegará un mensaje indicando que campo falta (Figura 68). Nota: Es obligatorio cortar las 4 columnas para que el OCR pueda visualizarse en la pantalla de arcos Figura 70. Ingresar los datos del paciente por un documento en formato JPG 116 Figura 71. Cortar columnas del plan de tratamiento del paciente. Módulo Ingresar Arcos Este módulo permite al usuario ingresar datos sobre el plan del tratamiento del paciente, los datos del paciente se dividen en el tamaño del cono, profundidad promedio, el factor de peso y las unidades monitor calculadas por el sistema de planificación, para cada arco empleado en el plan de tratamiento. Posee 2 sub- módulos importantes generar reportes y calcular mu. Generar reportes consiste en generar un archivo en formato PDF sobre los parámetros de entrada y el mu calculado para el paciente. Calcular mu consiste en desplegar una lista de las unidades monitor que se calcularon para cada arco y establecer un sistema de comparación con las unidades monitor del plan de tratamiento del paciente. Calcular MU Ingresar los campos Cone (tamaño del cono), Avg. Depth (profundidad promedio), Weight factor (factor de peso) y MU TPS (unidades monitor del plan de tratamiento del paciente). Verificar que todos los campos estén completos para cada arco que posee el plan de tratamiento del paciente en la aplicación. 117 Una vez estén todos los campos completos presionar el botón con la metáfora de la calculadora (Figura 72) si desea introducir los arcos. Si al presionar el botón los campos están incompletos se desplegará un mensaje indicando que hay campos vacíos en el arco que este incompleto (Figura 73). De encontrarse todos los campos completos se desplegará una lista de las unidades monitor que se calcularon para cada arco y establecer un sistema de comparación con las unidades monitor del plan de tratamiento del paciente. La lista tiene 3 elementos importantes y son: MU QC SRS, este campo contiene información sobre el MU calculado por la aplicación, MU TPS hace referencia al MU que posee el plan de tratamiento del paciente y por último el porcentaje de diferencia entre ambas unidades de monitor con un icono indicando 3 niveles de acción verde: optimo, amarillo: satisfactorio y rojo: revisión. Figura (74). Figura 72. Metáfora calculadora Figura 73. Campos vacíos Crear Reporte/Calcular MU. 118 Figura 74. Calcular MU. Generar Reporte Ingresar los campos Cone (tamaño del cono), Avg. Depth (profundidad promedio), Weight factor (factor de peso) y MU TPS (unidades monitor del plan de tratamiento del paciente). Verificar que todos los campos estén completos para cada arco que posee el plan de tratamiento del paciente en la aplicación. Una vez estén todos los campos completos, si desea rellenar el campo de Patient ID y Plan ID, lo completa (es opcional). Si al presionar el botón los 119 campos están incompletos se desplegará un mensaje indicando que hay campos vacíos en el arco que este incompleto (Figura 73). En la figura 75 se visualizan los campos completos al crear el reporte Figura 75. Crear Reporte. Presionar el botón Create Report (Figura 76). Se desplegará un dialog indicando si desea visualizar el reporte. Si lo desea ver se abre el reporte (Figura 77), en caso contrario, se mantiene en la misma interfaz. 120 Figura 76. Dialog Create Report. Nota: Los reportes son almacenados en la carpeta de Descargas/MU QC SRS/ 121 Figura 77. Reporte. Módulo Calculation Formalism Interfaz que tiene como objetivo explicar de dónde provienen los cálculos realizados por la aplicación. 122 Módulo Tolerance Interfaz que tiene como objetivo explicar la tolerancia usada en MU QC SRS. Módulo My own Data Interfaz que tiene como propósito indicarle al usuario que si desea utilizar su propia dosimétrica, se ponga en contacto con los desarrolladores. Módulo Who we are? Interfaz que tiene como propósito proveer información personal de los desarrolladores de la aplicación. Módulo Contact us Interfaz que tiene como propósito proveer información de contacto de los desarrolladores de la aplicación. 123 CONCLUSIONES Finalmente, con este Trabajo Especial de Grado, se puede concluir que se logró llevar a cabo el diseño y construcción de una aplicación móvil nativa para la verificación MU QC SRS (Monitor Units Quality Control Stereotactic Radiosurgery) bajo el ambiente Android que permite la comprobación del cálculo de las unidades de monitor independiente TPS (Treatment-planning System) para el tratamiento de radiocirugía intracraneal, con acelerador lineal y conos. Para lograr el desarrollo de este sistema se realizaron investigaciones sobre diferentes metodologías agiles, pero XP demostró ser la metodología que más se adaptaba a una aplicación que estaba en constante evolución y no son necesarios tantos artefactos para crear software de calidad. También se puede resaltar que el equipo de trabajo (cliente, gerentes y programador) estaba muy comprometido con el desarrollo de la aplicación y la comunicación era un fuerte en los miembros del equipo. Sin embargo se adaptaron las prácticas de XP, en especial la que indica que se debe producir código en pareja, debido a que solo había un desarrollador para el desarrollo de la aplicación móvil. La aplicación cuenta con métodos simples y bien establecidos para calcular las unidades de monitor, donde el propósito fundamental es generar resultados completamente independientes del sistema de planificación (TPS) principal. La inclusión de bibliotecas dosimétricas genéricas libera al usuario de entrar tablas extensas de datos, lo cual sería desagradable y muy propenso a errores en una aplicación para dispositivos móviles. Las principales funciones que se crearon en esta plataforma son: el cálculo de MU independiente, generación de reportes, lectura de informes sobre el plan de tratamiento de un paciente en formato PDF y reconocimiento de texto en imágenes en formato JPG sobre el plan de tratamiento de un paciente. El cálculo de MU, demostró ser una función que realiza cálculos exactos garantizando al usuario que MU QC SRS 124 es una herramienta confiable para ser usada como control de calidad en el cálculo de unidades monitor independiente y así poder detectar potenciales fallas previas al tratamiento de radiocirugía. La función de generación de reportes, demostró ser un método capaz de brindarle al usuario soporte para verificar los cálculos realizados por MU QC SRS y los datos introducidos por él. La función de lectura plan de tratamiento de un paciente en formato PDF, demostró ser un método capaz de agilizar el cálculo de verificación al ser capaz de obtener casi todos los datos del paciente (datos generales y arcos), el único dato que no se pudo extraer fue el peso de la dosis al máximo y es porque el informe no poseía ese dato. La función de reconocimiento de texto en imágenes fue otro método que garantizo que el proceso de carga de datos del plan de tratamiento del paciente fuese un proceso rápido a pesar de contar con la limitación de solo poder tomar los arcos del plan del paciente. La aplicación puede ser descargada en el playstore a través del siguiente enlace: https://play.google.com/store/apps/details?id=com.servicios.radfis.muqcsrs&hl=es 125 RECOMENDACIONES Los siguientes puntos son una serie de recomendaciones que bien pueden ser tomadas en cuenta con el fin de optimizar y agregar nuevas funcionalidades a la aplicación móvil para la verificación del cálculo de unidades monitor en tratamientos de radiocirugía intracraneal. Desde el punto de vista Físico MU QC SRS está basada en el formalismo utilizado por el algoritmo Cone, Dose Calculation, por lo que la versión actual, sólo puede ser utilizada para verificar cálculos de MU de este algoritmo. La App utiliza la profundidad promedio del arco calculada por el propio sistema de planificación. En principio, este cálculo promedio puede ser una potencial fuente de desviaciones, y por tal razón debe ser verificado de modo independiente. La App solo calcula para la energía de 6 MV. Desde el punto de vista de Software El reconocimiento de texto del plan del paciente a través de imágenes en formato JPG, es realizado por un servicio web. El usuario debe disponer conexión a internet para poder usar este servicio. Se puede incorporar un OCR dentro de la aplicación. Adicionalmente se deben tomar 4 fragmentos(conos, avg. depth (mm), weight factor y mu tps) del plan del paciente para que el OCR funcione correctamente, al incluir un OCR se puede trabajar para que al realizar un corte de toda la tabla de arcos tome las 4 columnas necesarias. Los datos del paciente se pierden si se hace la verificación y no se crea un reporte. Se puede incluir esa información dentro de una base de datos para ser consultada por el usuario en otro momento si así lo desea. 126 Referencias Bibliográficas - Beck, K. (1999). Extreme Programming Explained. Addison-Wesley Professional. - Canós, J. and Letelier, P. (2002). Metodologías Ágiles en el desarrollo de software. - Díaz (2009). Rup vs Extreme Programming. Recopilado de: http://www.usmp.edu.pe/publicaciones/boletin/fia/info49/articulos/RUP%20vs.% 20XP.pdf - Espinoza E. (2007) Lima, Programación Extrema. Recopilado de: http://es.slideshare.net/edgarespinoza/programacion-extrema - Google (2014). Material Design. Recopilado de https://material.google.com/ - Hoch J (2014), La radiocirugía. Recuperado de http://www.angiomaalliance.org/ - International Atomic Energy Agency “IAEA” (2000) Aspectos físicos de la garantía de calidad en radioterapia: Protocolo de control de calidad. Vienna Recuperado de: http://www- pub.iaea.org/MTCD/Publications/PDF/te_1151_prn.pdf - Laudon, K., & Laudon, J. (2012). Sistemas de Información Gerencial. Pearson Educación. - Luque L. (2009), Unidad I Sistemas de Información. Recopilado de http://sistemasdeinformacionpsm.blogspot.com/2009/03/unidad-i-sistemas-de- informacion_29.html - Martínez (2007), Dispositivos Móviles. Recopilado de http://exa.unne.edu.ar/informatica/SO/tfbasterretche.pdf - Pérez E (2014), ¿Qué es Material Design? Recopilado de http://www.elandroidelibre.com/2014/11/que-es-material-design.html - Porto J., Marino M. (2011), Definición de Dispositivo. Recopilado de: http://definicion.de/dispositivo/ - Quin (2015). Extensible Markup Language (XML). Recopilado de: https://www.w3.org/XML/ - Radioterapia Oncológica GURVE (2016), Glosario. Recuperado de http://www.radioterapia.com.ve/. - Raona L. (2009), Aplicación Nativa. Recopilado de http://www.raona.com/es/Solutions/Template/163/App-nativa-web-o- h%C3%ADbrida - Revelo J (2014), Arquitectura Android. Recopilado de: http://www.hermosaprogramacion.com/2014/08/aprendiendo-la-arquitectura-de- android/ - Slideshare: Libro Blanco de apps. (2013). Recuperado el 2015, de http://www.slideshare.net/mmaspain/libro-blanco-de-las-aplicaciones-mviles http://www.usmp.edu.pe/publicaciones/boletin/fia/info49/articulos/RUP%20vs.%20XP.pdf http://www.usmp.edu.pe/publicaciones/boletin/fia/info49/articulos/RUP%20vs.%20XP.pdf http://es.slideshare.net/edgarespinoza/programacion-extrema http://www.angiomaalliance.org/ http://www-pub.iaea.org/MTCD/Publications/PDF/te_1151_prn.pdf http://www-pub.iaea.org/MTCD/Publications/PDF/te_1151_prn.pdf http://sistemasdeinformacionpsm.blogspot.com/2009/03/unidad-i-sistemas-de-informacion_29.html http://sistemasdeinformacionpsm.blogspot.com/2009/03/unidad-i-sistemas-de-informacion_29.html http://exa.unne.edu.ar/informatica/SO/tfbasterretche.pdf http://www.elandroidelibre.com/2014/11/que-es-material-design.html http://definicion.de/dispositivo/ https://www.w3.org/XML/ http://www.radioterapia.com.ve/ http://www.raona.com/es/Solutions/Template/163/App-nativa-web-o-h%C3%ADbrida http://www.raona.com/es/Solutions/Template/163/App-nativa-web-o-h%C3%ADbrida 127 - Sommerville I. (2002). Ingeniería de Software, Pearson Educación, Recopilado de: http://zeus.inf.ucv.cl/~bcrawford/AULA_ICI441/Ingenieria%20del%20Software %207ma.%20Ed.%20-%20Ian%20Sommerville.pdf - Vélez G (2004), Introducción a la física de la Radioterapia. Recopilado de http://www.efn.uncor.edu/escuelas/biomedica/Plandeestudios/materias%20compl etas/Medicina%20Nuclear/material%20medicina%20nuclear/Introducci%F3n%2 0a%20la%20F%EDsica%20de%20la%20Radioterapia.pdf http://zeus.inf.ucv.cl/~bcrawford/AULA_ICI441/Ingenieria%20del%20Software%207ma.%20Ed.%20-%20Ian%20Sommerville.pdf http://zeus.inf.ucv.cl/~bcrawford/AULA_ICI441/Ingenieria%20del%20Software%207ma.%20Ed.%20-%20Ian%20Sommerville.pdf http://www.efn.uncor.edu/escuelas/biomedica/Plandeestudios/materias%20completas/Medicina%20Nuclear/material%20medicina%20nuclear/Introducci%F3n%20a%20la%20F%EDsica%20de%20la%20Radioterapia.pdf http://www.efn.uncor.edu/escuelas/biomedica/Plandeestudios/materias%20completas/Medicina%20Nuclear/material%20medicina%20nuclear/Introducci%F3n%20a%20la%20F%EDsica%20de%20la%20Radioterapia.pdf http://www.efn.uncor.edu/escuelas/biomedica/Plandeestudios/materias%20completas/Medicina%20Nuclear/material%20medicina%20nuclear/Introducci%F3n%20a%20la%20F%EDsica%20de%20la%20Radioterapia.pdf