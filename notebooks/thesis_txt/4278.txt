Microsoft Word - aaRev_TEG_AlvaroPaz_BAG_Módulo_de_Consulta_OPAC_ver18Ab2015_verYC_02Mayo _1_ UNIVERSIDAD CENTRO DE ENSEÑANZA ASISTIDA POR COMPUTADOR Desarrollo del Módulo de C Línea (OPAC) de la Biblioteca Alonso Ga Trabajo Especial de Grado presentado ante la Ilustre Universidad Central de Venezuela por Br. para optar al título de Licenciado en Computación Tutora: Profa. Yusneyi Y Ciudad Universitaria de UNIVERSIDAD CENTRAL DE VENEZUELA FACULTAD DE CIENCIAS ESCUELA DE COMPUTACIÓN CENTRO DE ENSEÑANZA ASISTIDA POR COMPUTADOR - llo del Módulo de Consulta del Catálogo de Acceso Público en de la Biblioteca Alonso Gamero de la Facultad de Ciencias, UCV Trabajo Especial de Grado presentado ante la Ilustre Universidad Central de Venezuela por el Br. Alvaro Joel Paz Monsalve C.I. 20.027.561 optar al título de Licenciado en Computación Tutora: Profa. Yusneyi Yasmira Carballo Barrera Ciudad Universitaria de Caracas, 11 de Mayo de 2015. CENEAC Acceso Público en mero de la Facultad de Trabajo Especial de Grado presentado ante la Ilustre Acta Agradecimientos 3 Primeramente gracias a Dios por darme conocimiento, sabiduría y guiarme en cada uno de mis pasos, metas y horizontes trazados en mi vida. Gracias a mis Padres Arecio Paz y María Monsalve por su gran amor incondicional, por darme la vida y porque cada día me apoyan en cada uno de mis pasos en la vida. Por los mejores consejos y haberme dado excelentes valores que me han enriquecido humildemente como persona para poder alcanzar mis metas. Le doy gracias Dios por tener unos padres como ellos. A mis hermanos Albert Paz y Alba Paz, por su apoyo y amor incondicional para poder seguir adelante. También por sus mejores consejos para poder tomar las mejores decisiones de todo momento. Gracias a mi amiga Ynelvis Revette, a su madre Ynelda, porque durante el transcurso de la carrera he tenido siempre el apoyo y consejos de ellas. Gracias por esa humilde y sincera amistad que cada día valoro más. Gracias a mi compañero de Tesis Cerrar Herrera del Módulo de Préstamos por su paciencia, esfuerzo durante el desarrollo de la Tesis y la carrera, ya que personas como el serán recomendadas por mi persona, gracias por su humilde y sincera amistad. También muy gradecido con sus Padres por el apoyo que nos brindaron día a día, muchas gracias. A mi amigo y compañero de trabajo Luiyit Hernández por haber sido de gran apoyo al haberme ayudado a entender algunas de las herramientas de desarrollo que se utilizaron en este proyecto, gracias por su humilde y sincera amistad. Gracias por el apoyo a los Licenciados María Gamboa, José Camargo y Alejandro Uzcátegui por el apoyo y siempre tenderme la mano cuando lo necesitaba. Gracias a la Sra. Maritza y al señor Valerio por su apoyo incondicional durante la Carrera, el Seminario y el desarrollo de la Tesis, por su sincera y humilde amistad que siempre voy a valorar y cuidar. Gracias por haberme brindado la mano cuando lo necesitaba y las veces que estuve sin Internet en mi casa que fue gran parte del Seminario y la Tesis, me brindaron su apoyo en su casa para poder realizar mi Tesis con el Internet de ellos. Agradecimientos 4 A mi amiga María Gabriela De Freitas, Jonatan Aparicio, Cesar Herrera, Kimelly Ruiz, Maddelein de la Oz, Luiyit Hernández, y amigos más cercanos por su apoyo incondicional. Gracias a mi Tutora Yusneyi Carballo Barrera, por su confianza, apoyo, paciencia, tiempo y dedicación, así como también permitirme realizar este proyecto tan importante. También por ser una excelente persona de gran calidad humana. Gracias a la Profesora Carmen Marrero por ser una excelente persona de gran calidad humana y por su tiempo, apoyo, paciencia, dedicación y por guiarme en tan excelente proyecto así como también al equipo de trabajo de la BAG, muchas gracias. Gracias los Profesores de la Escuela de Computación por su tiempo y dedicación en la formación académica y enseñanza. Centro de Enseñanza Asistida por Computador Desarrollo del Módulo de C de la Biblioteca Alonso Ga En la Biblioteca Alonso Game Venezuela se desarrolló un macro proy de Préstamos, los cuales son importantes para el desenvolvimiento servicios orientados al personal bibliotecario usuarios externos. En el presente proyecto se desarrolló un nuevo Acceso Público en Línea (OPAC requerimientos y dando soluciones a problemas y necesidades que la BAG presentaba. realizó una optimización, reestructuración y depuración de la base de datos, así como convenciones de nombres y campos de las tablas. demás bibliotecas de la Facultad de Ciencias para poder consultar sus recursos y lograr una integración con la BAG. Se utilizaron tecnologías actuales para el usabilidad mediante autocompletado en los campos Metodología de Desarrollo Ágil trabajo del lado del servidor Laravel 4 implementado bajo un enfoque fron con servicios web, de esta forma para que en futuros desarrollos servicios web. Palabras Claves: Catálogo de Acceso Público en Línea, OPAC, Catalogación, Gamero. 5 Universidad Central de Venezuela Facultad de Ciencias Escuela de Computación Centro de Enseñanza Asistida por Computador – CENEAC Módulo de Consulta del Catálogo de Acceso Público en Línea (OPAC) de la Biblioteca Alonso Gamero de la Facultad de Ciencias Autor: Alvaro Joel Paz Monsalve C.I. 20.027.561 Correo-e: alvaropaz20@gmail.com Tutora: Profa. Yusneyi Carballo Barrera Correo-e: yusneyi.carballo@ciens.ucv.ve Fecha: 11 de Mayo de 2015 RESUMEN a Biblioteca Alonso Gamero (BAG) de la Facultad de Ciencias de la Universidad Central de macro proyecto dividido en tres módulos: Módulo de Consulta, de on importantes para el desenvolvimiento de los procesos de la BAG y par servicios orientados al personal bibliotecario, estudiantes, profesores, a la comunidad En el presente proyecto se desarrolló un nuevo Módulo de Consulta (OPAC por sus siglas en inglés)”. De esta forma, se dieron respuestas a requerimientos y dando soluciones a problemas y necesidades que la BAG presentaba. realizó una optimización, reestructuración y depuración de la base de datos, así como convenciones de Cabe destacar que en este proyecto se dieron soluciones a las dependencias y demás bibliotecas de la Facultad de Ciencias para poder consultar sus recursos y lograr una integración con la Se utilizaron tecnologías actuales para el desarrollo de búsquedas eficientes e incrementando la autocompletado en los campos para consultar los recursos de la BAG Desarrollo Ágil Scrum, el marco de trabajo del lado del cliente AngularJS, trabajo del lado del servidor Laravel 4, PHP y el SMBD PostgreSQL. El desarrollo del proyecto fue bajo un enfoque frontend y backend, permitiendo la comunicación median , de esta forma realizando una integración e interoperabilidad con el Módulo de P para que en futuros desarrollos múltiples dispositivos se puedan comunicar con la aplicaci Catálogo de Acceso Público en Línea, OPAC, Catalogación, Servicios Biblioteca Alonso Resumen CENEAC onsulta del Catálogo de Acceso Público en Línea (OPAC) mero de la Facultad de Ciencias, UCV : Alvaro Joel Paz Monsalve 561 alvaropaz20@gmail.com Yusneyi Carballo Barrera usneyi.carballo@ciens.ucv.ve de 2015 de la Universidad Central de onsulta, de Catalogación y de los procesos de la BAG y para los estudiantes, profesores, a la comunidad universitaria y a onsulta del “Catálogo de De esta forma, se dieron respuestas a requerimientos y dando soluciones a problemas y necesidades que la BAG presentaba. En este proyecto se realizó una optimización, reestructuración y depuración de la base de datos, así como convenciones de Cabe destacar que en este proyecto se dieron soluciones a las dependencias y demás bibliotecas de la Facultad de Ciencias para poder consultar sus recursos y lograr una integración con la desarrollo de búsquedas eficientes e incrementando la para consultar los recursos de la BAG. Se utilizó la AngularJS, el marco de El desarrollo del proyecto fue la comunicación mediante API’s RESTful con el Módulo de Préstamos y dispositivos se puedan comunicar con la aplicación mediante Servicios Biblioteca Alonso Índice 6 Índice Introducción ................................................................................................................................ 10 CAPÍTULO I ............................................................................................................................... 12 1. Planteamiento del Problema ................................................................................................. 12 1.1. Situación actual ............................................................................................................. 12 1.1.1. Avances de las aplicaciones informáticas de la Biblioteca Alonso Gamero .............. 12 1.2. Planteamiento del problema ........................................................................................... 13 1.3. Planteamiento de la solución .......................................................................................... 14 1.4. Objetivos del Trabajo Especial de Grado ....................................................................... 15 1.4.1. Objetivo General...................................................................................................... 15 1.4.2. Objetivos Específicos............................................................................................... 15 1.5. Alcance del Trabajo Especial de Grado ........................................................................... 16 1.6. Usuarios potenciales ....................................................................................................... 16 CAPÍTULO II .............................................................................................................................. 17 2. Marco conceptual ................................................................................................................. 17 2.1. Antecedentes ................................................................................................................ 17 2.2. Marco conceptual .......................................................................................................... 19 2.2.1. Biblioteca ................................................................................................................ 19 2.2.2. Biblioteca virtual ..................................................................................................... 19 2.2.3. Catálogo de Acceso Público en Línea ....................................................................... 20 2.2.4. Buscador ................................................................................................................. 27 2.2.5. Tipos de buscadores ................................................................................................. 27 2.3. Herramientas de desarrollo ............................................................................................ 28 CAPÍTULO III ............................................................................................................................ 29 3. Marco metodológico y tecnologías de desarrollo ................................................................... 29 3.1. Metodología ................................................................................................................... 29 3.2. Metodologías ágiles de desarrollo de software ................................................................ 29 3.3. Diferencias entres las metodologías de desarrollo ágiles y las metodologías tradicionales . 31 3.4. Metodología para el desarrollo de la aplicación ............................................................... 32 3.4.1. Beneficios de Scrum ................................................................................................ 33 Índice 7 3.4.2. Artefactos de Scrum ................................................................................................. 34 3.4.3. Roles en el proceso de Scrum ................................................................................... 34 3.5. Tecnologías para el desarrollo del módulo ...................................................................... 35 3.5.1. Base de datos ........................................................................................................... 35 3.5.2. Sistemas de Dases de Datos ..................................................................................... 37 3.5.3. Sistemas Manejadores de Bases de Datos ................................................................. 37 3.5.4. Sistema Manejador de Bases de Datos PostgreSQL .................................................. 39 3.5.5. Lenguajes de programación del lado del servidor ..................................................... 40 3.5.7. Lenguajes de programación del lado del cliente ........................................................ 42 3.5.8. Marco de Trabajo (Framework) ............................................................................... 42 3.5.9. Framework Laravel 4 PHP ....................................................................................... 43 3.5.10. Framework AngularJS ........................................................................................... 45 CAPÍTULO IV ............................................................................................................................ 47 4. Marco aplicativo ................................................................................................................... 47 4.1. Perfiles de usuarios ......................................................................................................... 47 4.2. Requerimientos del Módulo de Consulta ......................................................................... 47 4.3. Aplicación de la metodología Scrum ............................................................................... 49 4.3.1. Lista de objetivos (ProductBacklog) ....................................................................... 49 4.3.2. Lista de tareas de la iteración: Sprint Backlog.......................................................... 50 4.4. Análisis del modelo de datos y definición ....................................................................... 54 4.4.1. Tablas del nuevo modelo de base de datos ................................................................ 56 4.5. Principales interfaces diseñadas ...................................................................................... 59 4.5.1. Nueva Página Principal del sitio web de la Biblioteca Alonso Gamero .................... 60 4.5.2. Interfaz adaptativa (responsive) para cualquier dispositivo móvil ............................ 61 4.5.3. Interfaces del buscador básico y avanzado ............................................................... 62 4.5.4. Ventana modal de consulta de un recurso ................................................................ 65 4.5.5. Acciones de funcionalidades al seleccionar recursos. ............................................... 66 4.5.6. Interfaz del buscador de índices de recursos por títulos o autores ............................. 72 4.6. Pruebas realizadas y Resultados ...................................................................................... 74 Conclusiones, Recomendaciones y Trabajos Futuros .................................................................... 77 Referencias Bibliográficas ........................................................................................................... 79 Referencia figuras 8 Índice de Figuras Figura 1: OPAC de la Biblioteca Virtual UCV ............................................................................. 21 Figura 2: Búsqueda sencilla del OPAC de la Biblioteca Nacional de España ................................ 22 Figura 3: Búsqueda avanzada del OPAC de la Biblioteca Nacional de España .............................. 22 Figura 4: Búsqueda alfabética de la Biblioteca Nacional de España .............................................. 23 Figura 5: Búsqueda por signatura de la Biblioteca Nacional de España ......................................... 23 Figura 6: Búsqueda de obras digitalizadas de la Biblioteca Nacional de España ............................ 24 Figura 7: OPAC de los Servicios Bibliotecarios de la Universidad de los Andes (SERBIULA) ..... 25 Figura 8: Buscador básico del OPAC de la UACB ....................................................................... 26 Figura 9: Buscador avanzado del OPAC de la UCAB. .................................................................. 26 Figura 10: Metodología de desarrollo ágil Scrum. ........................................................................ 35 Figura 11: Niveles de abstracción de datos ................................................................................... 37 Figura 12: Componentes del SMBD PostgreSQL ......................................................................... 39 Figura 13: Logo del Framework (marco de trabajo) Laravel 4 PHP. ............................................. 43 Figura 14: Estructura de Laravel 4 PHP. ....................................................................................... 45 Figura 15: Logo del Framework AngularJS. ................................................................................. 46 Figura 16: Modelo de la base de datos (primera parte). ................................................................. 58 Figura 17: Modelo de la base de datos (segunda parte). ................................................................ 59 Figura 18: Página principal del sitio web de la BAG. .................................................................... 60 Figura19: Menú principal y opciones del Módulo de Consulta. ..................................................... 61 Figura 20: Diseño responsive (diseño web adaptable) del sitio web de la BAG en un dispositivo móvil inteligente. ......................................................................................................................... 62 Figura21: Interfaz del buscador básico y despliegue de autocompletado. ...................................... 63 Figura 22: Vista del despliegue de recursos en el buscador básico. ............................................... 64 Figura 23: Vista del buscador avanzado ....................................................................................... 65 Figura 24: Ventana modal de la información un recurso. .............................................................. 66 Figura 25: Acciones de funcionalidades de recursos. .................................................................... 67 Figura 26: Formato en documento pdf descargado de la información de recursos consultados....... 68 Figura 27: Envío exitoso de correo electrónico. ............................................................................ 69 Figura 28: Formato del correo electrónico de un recurso............................................................... 69 Figura29: Código QR generado para un recurso y para varios recursos seleccionados ................... 70 Figura 30: Documento de Trabajo Especial de Grado en texto completo. ...................................... 71 Figura 31: Confirmación de agregación de preferencias de un recurso. ......................................... 71 Figura 32: Preferencia de un recurso agregada al Módulo de Préstamos. ....................................... 72 Figura 33: Interfaz de índices por títulos o autores. ....................................................................... 73 Referencia Tablas 9 Índice de Tablas Tabla 1: Cuadro comparativo de evaluación de los OPAC’s investigados. .................................... 27 Tabla 2: Diferencias entres las metodologías ágiles de desarrollo y las metodologías tradicionales. .................................................................................................................................................... 31 Tabla 3: Lenguajes de Programación en el lado del Servidor. ....................................................... 41 Tabla 4: Lenguajes de programación del lado del Cliente. ............................................................ 42 Tabla 5: Lista de Sprints realizados en el desarrollo del Módulo de Consulta. ............................... 49 Tabla 6: Listado de las tablas del modelo de base de datos de la aplicación. .................................. 57 Introducción 10 Introducción El gran avance de la tecnología, ha dado paso a la evolución de recursos de la computación, el procesamiento, consulta, y distribución de la información. Las tecnologías han tenido que evolucionar a medida que las necesidades humanas han incrementado, a su vez para resolver los distintos problemas que se presenten. En las últimas décadas el crecimiento del Internet ha sido exponencial, esto ha permitido que la información pueda estar en muchos sitios de la red, y poder acceder a ella desde cualquier parte del mundo para su utilización. La red de redes ha servido como puente de comunicación entre los usuarios, y también en aplicaciones web que se han desarrollado; todo esto permitiendo la accesibilidad de usuarios de forma cómoda y desde cualquier parte de la red. La expansión de la información ha traído como consecuencia el almacenamiento, la estructuración, organización y representación de la misma para que los usuarios puedan consultarla de forma fácil y amena. Así como han surgido estas necesidades, también han nacido las bibliotecas virtuales a partir de requerimientos, apoyadas del Internet y las distintas tecnologías que han ido evolucionando con el tiempo, para poder satisfacer necesidades de estudiantes y bibliotecarios, automatizando todos los procesos que se realizan a diario en una biblioteca común, donde existen una gran variedad de libros, revistas, tesis especiales de grado, investigaciones etc. Los datos asociados a los materiales mencionados anteriormente, se necesitan tener almacenados, estructurados, organizados y puedan ser representados de una forma clara y precisa a la hora de realizar una consulta sobre los elementos de la biblioteca. Hoy en día los sistemas bibliotecarios cuentan con un Módulo de Catalogación, el cual consiste en almacenar los libros mediante datos bibliográficos en un formato adecuado. En este proceso se toma la decisión de almacenar títulos, autores, palabras claves y localización de la obra a ser catalogada. Los elementos mencionados anteriormente pasan a ser datos bibliográficos, los cuales se pueden editar, crear, actualizar, borrar y manipular por personal bibliotecario bajo roles de usuarios que delegue el administrador del sistema. Una vez catalogado los libros de la biblioteca, los usuarios necesitan un medio para visualizar la información. Las bibliotecas virtuales poseen un Módulo de Consulta, también conocido como “Online Public Access Catalog”, en español Catálogo de Acceso Público en Introducción 11 Línea, éste es un catálogo automatizado mediante el cual se accede y se consulta información bibliográfica referente a materiales de una biblioteca de forma pública y en línea, haciendo uso del Internet. El presente Trabajo Especial de Grado, tiene como objetivo general el desarrollo del Módulo de Consulta del “Catálogo de Acceso Público en Línea OPAC” de la Biblioteca Alonso Gamero de la Faculta de Ciencias, Universidad Central de Venezuela. Se desarrolló un nuevo Módulo de Consulta para dar soluciones a requerimientos definidos en el Seminario y resolver los distintos problemas que el equipo de la BAG manifestó. Para esto se utilizó un conjunto de tecnologías que permitieran el desarrollo eficaz y eficiente del proyecto, entre ellas tecnologías del lado del cliente como el marco de trabajo AngularJS (desarrollado en el lenguaje JavaScript) y del lado del servidor el marco de trabajo Laravel 4 (desarrollado en el lenguaje PHP), PostgreSQL (Sistema manejador de Bases de Datos) y la metodología ágil de desarrollo de software Scrum. Este documento está estructurado de la siguiente forma: En el Capítulo I, se describe la situación actual, planteamiento del problema y de la solución, se exponen el objetivo general y los objetivos específicos del Trabajo Especial de Grado así como también se presenta el alcance de la aplicación y los usuarios potenciales. El Capítulo II, se muestra los antecedentes, un marco conceptual asociado a un conjunto de definiciones asociadas al tema del Trabajo Especial de Grado y ejemplos de los OPAC’s de otras bibliotecas. En el Capítulo III, se describe la metodología y tecnologías utilizadas en el desarrollo del módulo. El Capítulo IV, realiza la descripción general del Módulo de Consulta, se expone la lista de objetivos, requerimientos, lista de tareas de cada iteración, análisis y definición del modelo de datos, interfaz general de la aplicación y se explican las pruebas realizadas a la aplicación y los resultados obtenidos. Para finalizar se presentan las secciones finales como: Conclusiones, Recomendaciones, Trabajos Futuros, Referencias Bibliográficas y Anexos. Capítulo I Planteamiento del Problema 12 CAPÍTULO I 1. Planteamiento del Problema 1.1. Situación actual Actualmente la BAG de la Facultad de Ciencias de la Universidad Central de Venezuela cuenta con el sistema bibliotecario Alejandría. El sistema cuenta con un catálogo conformado por: • 13.775 libros, principalmente en las áreas de física, química, matemática, biología, computación, geoquímica y tecnología. • 17.134 publicaciones seriadas. • 9.862 ejemplares de Trabajo Especial de Grado, Postgrado (Maestría, Doctoral, Especialización) y Trabajos de Ascenso. 1.1.1. Avances de las aplicaciones informáticas de la Biblioteca Alonso Gamero Los avances que se han realizado en la BAG desde el año 2009 son los siguientes: • Migración de la información de las bases de datos de SIDULA y MICROISIS de la BAG y de la Biblioteca Janis Racenis del IZET, hacia el sistema Alejandría. • Corrección de la base de datos y etiquetado de 17.030 ejemplares migrados desde SIDULA hacia Alejandría correspondiente a libros (monografías) de la BAG. • Uso versión del Cliente de Alejandría 751.20. • Desarrollo de scripts 1.- para obtener la información necesaria para realizar inventario de monografías de la BAG; 2.- para llevar el control de la impresión de etiquetas para los ejemplares. • Instalación del backend y configuración (portal web) del IZET y de la BAG. • Instalación y configuración de los clientes de acceso para catalogar (IZET y BAG). • Creación y configuración de la etiqueta para la BAG. • Instalación de la impresora y configuración de sus parámetros. • Configuración de respaldo de la base de datos. • Uso de la versión del backend de Alejandría BE 7.6.1b1. • Recuperación de recursos de forma rápida. Capítulo I Planteamiento del Problema 13 • Facilidades para filtrar la búsqueda avanzada. • Acceso al repositorio (OAI). • Desarrollo del Módulo de Préstamos para estudiantes y profesores. 1.2. Planteamiento del problema La BAG provee de todos sus servicios mediante el sistema de Biblioteca Virtual Alejandría que comprende una serie de módulos, referente a los servicios bibliotecarios primordiales para el desenvolvimiento y automatización de todos los procesos que una biblioteca requiere. El sistema cuenta con el Módulo de Consulta OPAC, es un catálogo automatizado de acceso público, en el cual la comunidad universitaria y otros usuarios pueden acceder a consultar los recursos bibliográficos de la BAG. El menú principal consta de los siguientes ítems orientados a la consulta de recursos: búsqueda simple, búsqueda avanzada, buscador de trabajos digitales de la Facultad de Ciencias, índices de autores, índices por títulos y acceso al repositorio (OAI). La BAG realizó la migración de la base de datos del sistema SIDULA al sistema Alejandría en el año 2009. Para este entonces ocurrió una redundancia e inconsistencia de los datos, y un déficit del comportamiento de funcionalidades y respuestas de las búsquedas mencionadas anteriormente. Al principio se contaba con que el sistema cumpliera todas sus funcionalidades de forma exitosa, pero todos estos inconvenientes trajeron como consecuencias problemas de usabilidad del sistema y así como funcionalidades prometidas por el personal de Alejandría que al final no cumplieron con las expectativas de la BAG. Las principales dificultades que el OPAC del sistema Alejandría reportadas por el equipo de la BAG son las siguientes: • El sistema no permite la selección de los resultados obtenidos para su posterior exportación a un procesador o documento de visualización. • El sistema presenta dificultades a la selección de los recursos para el envío de los recursos mediante el correo electrónico. Capítulo I Planteamiento del Problema 14 • En la interfaz de las búsquedas, el menú principal se interpone sobre el despliegue de resultados en algunas ocasiones. • No se permite buscar las Tesis por tutor académico, por jurado ni por dependencias. Cabe destacar que las dependencias de la Facultad de Ciencias son las siguientes: Escuela de Computación, Escuela de Física, Química, Matemática y de Geoquímica, El Instituto de Zoología y Ecología Tropical (IZET), Instituto de Ciencia y Tecnología de Alimentos (ICTA) y el Instituto de Bilogía Experimental (IBE). • No hay integración con las otras bibliotecas de la Faculta de Ciencias como: la Biblioteca Janis Racenis (IZET), Biblioteca Dr. Nikitta Czyhrinciw (ICTA), Biblioteca del IBE, Biblioteca de Postgrado de la Escuela de Computación, entre otras. Cabe destacar que tampoco se puede consultar y catalogar los recursos bibliográficos de estas bibliotecas en la BAG. • Con respecto a las publicaciones seriadas no se pueden recuperar por área, por volumen, por año, ni por título. • El acceso al repositorio OAI responde de manera intermitente y con limitaciones. • No funcionan bien los operadores lógicos en el buscador avanzado. • No hay funcionalidad para obtener texto completo de libros y tesis. 1.3. Planteamiento de la solución La BAG bajo la dirección de la Profesora Carmen Marrero, tomó la iniciativa en exponer una serie de problemáticas y debilidades a la Profesora Yusneyi Carballo (Tutora del presente Trabajo Especial de Grado, Escuela de Computación), limitaciones principalmente relacionadas con las funcionalidades e integridad de los datos que el sistema Alejandría ha presentado desde su instalación y migración de la base de datos desde el año 2009, cuando se llevó a cabo este proceso. Todo esto permitió poder levantar y proponer un conjunto de requerimientos con el análisis respectivo de los mismos para poder dar soluciones parciales y efectivas. Las situaciones planteadas anteriormente dieron paso a desarrollar un nuevo Módulo de Consulta para la BAG y revisar el estado de las tablas de la base de datos, relaciones entre las mismas, registros y campos que permitieran gestionar el funcionamiento de las búsquedas. Se dieron soluciones a requerimientos, así como también la optimización de la base de datos y Capítulo I Planteamiento del Problema 15 convenciones de nombres y campos de las tablas. También se tomó la decisión de desarrollar el módulo con tecnologías actuales y con el cumplimiento de estándares de desarrollo de software. El nuevo Módulo de Consulta permite variedades de funcionalidades de búsquedas con respuestas rápidas y eficientes, así mismo incrementando la usabilidad del sistema y proporcionando la integridad de la base de datos. Los principales beneficiarios de este Trabajo Especial de Grado son los estudiantes y profesores de la Facultad de Ciencias, el personal bibliotecario de la BAG, la comunidad universitaria y otros usuarios externos, al contar con un nuevo Módulo de Consulta y poder acceder desde cualquier parte de la red de forma muy cómoda y accesible. 1.4. Objetivos del Trabajo Especial de Grado 1.4.1. Objetivo General Desarrollar el Módulo de Consulta del Catálogo de Acceso Público en Línea (OPAC) de la Biblioteca Alonso Gamero de la Facultad de Ciencias, Universidad Central de Venezuela. 1.4.2. Objetivos Específicos 1. Utilizar un proceso o metodología de desarrollo ágil para la creación del Módulo de Consulta del “Catálogo de Acceso Público en Línea OPAC” de la BAG de la Facultad de Ciencias, UCV. 2. Reestructurar y optimizar el diseño lógico y físico de la base de datos para poder consultar y catalogar los recursos bibliotecarios. 3. Realizar la limpieza de la base de datos en cuanto a la redundancia de datos y crear convenciones de nombre de tablas y campos. 4. Aplicar modelos de diseño web, estándares, patrones y lineamientos de usabilidad para lograr un diseño claro, limpio y acorde para el desarrollo del módulo. 5. Hacer las validaciones y pruebas respectivas de diseños con el objetivo de revisar la correcta funcionalidad y la visualización de la interfaces. Capítulo I Planteamiento del Problema 16 1.5. Alcance del Trabajo Especial de Grado El alcance del TEG es el siguiente: • Trabajar en base a la fuente de datos de Alejandría. • Dar soluciones a las bibliotecas y dependencias de la Facultad de Ciencias. Las dependencias son las siguientes: la Escuela de Computación, Química, Física, Matemática, Biología, Geoquímica, el Instituto de Zoología y Ecología Tropical (IZET), Instituto de Ciencia y Tecnología de Alimentos (ICTA) y el Instituto de Biología Experimental. Las bibliotecas son las siguientes: Biblioteca Alonso Gamero (BAG), Biblioteca Janis Racenis (IZET), Biblioteca Dr. Nikitta Czyhrinciw (ICTA), Biblioteca de Postgrado de la Escuela de Computación y la Biblioteca del IBE, entre otras. 1.6. Usuarios potenciales La aplicación va principalmente dirigida a los estudiantes y profesores de la Facultad de Ciencias de la Universidad Central de Venezuela, el personal bibliotecario de la BAG, la comunidad universitaria y usuarios externos. Capítulo II Marco Teórico 17 CAPÍTULO II 2. Marco conceptual 2.1. Antecedentes Durante el transcurso del tiempo el término biblioteca ha estado ligado a las tecnologías, ya que éstas han permitido la automatización de procesos pertenecientes al de una biblioteca física. Gracias a la tecnología los grandes volúmenes de libros y otros materiales que una biblioteca posee han podido ser catalogados y consultados de una forma rápida y eficiente. Según los autores Hípola, Quesada y Ruiz (2000) Antiguamente las bibliotecas estaban formadas por un conjunto de tablillas de arcilla, posteriormente, de rollos de papiro en el antiguo Egipto, Grecia y Roma. En la Edad Media comenzó a utilizarse el pergamino como nuevo formato, hasta que surgió la imprenta en el siglo XV. Al aumentar la creación de libros para que aquella época, surgió la necesidad en cuanto a la invención de bibliotecas públicas. A finales del siglo XX, el avance de la tecnología y la expansión de Internet dieron lugar a la aparición de bibliotecas electrónicas, virtuales y digitales. Las necesidades estudiantiles y de bibliotecarios dieron paso a requerimientos, consecuentemente con la realización e innovación de bibliotecas virtuales, donde se pudieran gestionar todos los procesos bibliotecarios. Según Lobato, Sánchez y Aparicio (2010), a principios de los años 90 apareció Internet casi nadie imaginaba la importancia que este llegaría a tener en la actualidad. Tal es así que casi 20 años después se ha convertido en uno de los medios más importantes entre la población y es muy probable que en un futuro siga aumentando cada vez mas. Una de las características más importantes que posee Internet y que ha aportado a la sociedad es su gran capacidad de almacenamiento la cual permite guardar en distintos servidores un número ilimitado de archivos y aplicaciones que pueden ser accedidas por usuarios desde sitios remotos. Estos lugares que permiten el almacenamiento se conocen como bibliotecas virtuales, que resumiendo son aplicaciones web que se encuentran alojadas en servidores donde podemos almacenar todo tipo de archivos digitales y consultar materiales bibliográficos. Capítulo II Marco Teórico 18 A mediados de los noventa la red empezaba a crecer cada vez más. Esto provoco la aparición de los primeros fondos documentales o bibliotecas virtuales. Tal es así que en 1995 surgió la biblioteca del Congreso de los Estados Unidos. Este archivo contiene 19 millones de documentos y se considera el mayor fondo documental del mundo. En un principio la biblioteca solo contenía la versión digital de libros que previamente existían en formato papel, pero según fue incorporando material esto fue cambiando. Actualmente esta biblioteca ha comprado los derechos de todos los datos de Twitter, algunos de los cuales se consideran que tienen valor histórico. Otro tipo de datos de formato digital que alberga la biblioteca son las páginas web tanto de los candidatos a cargos nacionales como de los miembros del Consejo. Por último, en los últimos años los administradores han decidido incluir en la biblioteca 70.000 libros de más de 200 años de antigüedad para descarga gratuita. Esta página web es la más visitada dentro de entre las bibliotecas virtuales ya que recibe 81 millones de visitas al año. En el año 1999, cuando la Biblioteca del Congreso de los Estados Unidos empezaba a tomar importancia fue inaugurada la Biblioteca Virtual Miguel de Cervantes con la ayuda de la Universidad de alicante, el Banco Santander y la fundación Marcelino Botín. En un principio surgió como un proyecto de edición digital del patrimonio documental tanto español con hispanoamericano cuyo objetivo era dar a conocer la cultura hispana al resto del mundo. Aunque al principio solo se ocupaba de documentos relacionados con España e Hispanoamérica el paso de los años ha incluido estudios no relacionados con la cultura hispana y que han sido tratados por autores tanto de nuestro país como del continente americano. En la actualidad se ha convertido en la biblioteca digital más importante del castellano. El autor Lamarca (2013) afirma que el “El catálogo en forma de fichas comenzó a utilizarse en Francia a mediados del XVIII, pero es en el siglo XX cuando se produce una revolución radical en la presentación de los catálogos gracias a la automatización y a la aplicación de las técnicas fotográficas. Las nuevas tecnologías informáticas, ha supuesto una gran renovación para conseguir una mayor eficacia y rapidez en la obtención de información. Es en el siglo XX cuando aparecen los grandes catálogos colectivos y cuando los ordenadores permiten la consulta directa por medio de terminales (OPAC’s) Online Public Access Catalog”. Cuando las bibliotecas virtuales fueron tomando auge gracias las tecnologías ligadas con el Internet, se vio en la necesidad de contar con un módulo llamado Catálogo de Acceso Público en Línea (OPAC). El desarrollo de este módulo tuvo como principal objetivo, tener acceso y consultar Capítulo II Marco Teórico 19 la información de materiales bibliográficos de la biblioteca y otros requerimientos que sugieran para la implementación del OPAC, de forma fácil y eficiente, desde cualquier parte de la red. En una biblioteca el OPAC es considerado como uno de los procesos de automatización con mayor importancia. Tanto el personal bibliotecario como los usuarios son los principales beneficiados, esto se debe a que existe una mayor accesibilidad a la información bibliográfica de la biblioteca. 2.2. Marco conceptual A continuación se definen y describen lo principales conceptos, definiciones y teorías realizadas por autores en publicaciones que fundamentan el marco conceptual de este TEG. Por consiguiente, se busca que todos los elementos tengan coherencia con respecto al tema que se está enfocando, a su vez que estén organizados y estructurados de forma secuencial para un mejor interpretación, haciendo más fructífero el TEG. 2.2.1. Biblioteca La Real Academia Española (RAE) define Biblioteca como “Institución cuye finalidad consiste en la adquisición, conservación, estudio y exposición de libros y documentos”; y también como una “Colección de libros o tratados análogos o semejantes entre sí, ya por las materias de que tratan, por la época y nación o autores a que pertenecen”. 2.2.2. Biblioteca virtual Una biblioteca virtual consiste en un conjunto de recursos que proveen de información, los cuales se pueden presentar en distintos formatos como Pdf, Doc, Html, etc. Los usuarios acceden a estos recursos por medio de computadoras, haciendo uso del Internet para poder ver la información desde lugares remotos. Las bibliotecas virtuales poseen un portal web, en el cual se puede observar la información descriptiva de las mismas y dar un contexto bibliográfico a sus documentos en la web. Este portal Capítulo II Marco Teórico 20 posee un catálogo de acceso público en línea donde se pueden consultar los materiales de la biblioteca permitiendo una mejor accesibilidad a los usuarios, este elemento será definido con mejor precisión en los próximos ítems del marco conceptual. Por último en el desarrollo de una biblioteca virtual se debe tener en cuenta que todos los elementos o recursos que intervienen en el material bibliográfico, deben estar orientados a la enseñanza, investigación, formación y al aprendizaje. Estos recurso deben ser fácil acceso para todos los usuarios de la biblioteca virtual, a su vez está debe estar administrada y mantenida por profesional capacitado en el área de computación para el mejor desempeño y respuesta a los usuarios. 2.2.3. Catálogo de Acceso Público en Línea En el sitio web (upct, 2014) de la Biblioteca de la Universidad Politécnica de Cartagena definen OPAC de la siguiente manera, “El catálogo automatizado (también llamado OPAC), es la aplicación que nos permite conocer los recursos documentales de la UPCT (o de cualquier biblioteca), saber su localización dentro de la biblioteca y su estado, es decir, si están disponibles, prestados, en adquisición, etc.”. Según el autor De Volder (2005) “los OPAC’s constituyen el resultado de mayor impacto de la automatización bibliotecaria. Los usuarios son sin duda los principales beneficiario, debido al enorme aumento de las posibilidades de acceso a la información bibliográfica que proporcionan”. 2.2.3.2. Ejemplos de Catálogo de Acceso Público en Línea OPAC de la Biblioteca Central de la Universidad Central de Venezuela: (http://190.169.28.6/cgi-win/be_alex.exe?nombrebd=bibcentral&pie=0) Este OPAC presenta las funcionalidades Alejandría como sistema bibliotecario. Realiza las siguientes actividades: • Recuperar información por autores, títulos, temas o palabras claves. Capítulo II Marco Teórico 21 • Recuperar imágenes y documentos electrónicos multimedia asociados a cualquier registro. • Reservar objetos de información para su posterior préstamo. • Manejar foros por objeto de información. • Consultar información de servidores de información Z39.50. • Diseminar selectivamente la información. • Administrar y auditar registros. • Visualizar estadísticas de consulta. Figura 1: OPAC de la Biblioteca Virtual UCV Fuente: (http://190.169.28.6/cgi-win/be_alex.exe?nombrebd=bibcentral&pie=0) OPAC de la Biblioteca Nacional de España:(http://catalogo.bne.es/uhtbin/webcat) Este catálogo provee de cuatro tipos de búsquedas: • Búsqueda sencilla: Posee un campo de búsqueda donde se suministra una palabra o palabras que puedan coincidir con los recursos bibliotecarios biblioteca. Tiene una opción de seleccionar filtrar por varios campos como autor, título, materia, Capítulo II Marco Teórico 22 colección/series, notas, Número Estándar Internacional de Libros (ISBN), Número Internacional Normalizado de Publicaciones Seriadas (ISSN), datos de publicación y también poder realizar la búsqueda por todos los campos (ver Figura 2). • Figura 2: Búsqueda sencilla del OPAC de la Biblioteca Nacional de España Fuente: (http://catalogo.bne.es/uhtbin/cgisirsi/4jxE9rTUjn/BNMADRID/0/49) • Búsqueda avanzada: Este tipo de búsqueda permite filtrar mediante los campos mencionados anteriormente, pero con la posibilidad de poder realizar el filtrado por más de un campo al mismo tiempo mediante la utilización de los operadores lógicos. Adicionalmente se puede filtrar por idioma, tipo de documentos, año de publicación y ordenar por varios campos (ver Figura 3). Figura 3: Búsqueda avanzada del OPAC de la Biblioteca Nacional de España Fuente: (http://catalogo.bne.es/uhtbin/cgisirsi/eX4s68d2Ut/BNMADRID/76670053/38/0/POWER_SEARCH) Capítulo II Marco Teórico 23 • Búsqueda Alfabética: Mediante este tipo de búsqueda, se provee de un campo para escribir una palabra asociada al filtro por autor, título, materia o serie. Los resultados obtenidos son mostrados en orden alfabético según la palabra suministrada (ver Figura 4). Figura 4: Búsqueda alfabética de la Biblioteca Nacional de España Fuente: (http://catalogo.bne.es/uhtbin/cgisirsi/kI8mH1n6bT/BNMADRID/74740009/60/77/X ) • Búsqueda por signatura: Permite realizar la búsqueda por signatura o cota la cual representa la ubicación física del recurso en la biblioteca (ver Figura 5). Figura 5: Búsqueda por signatura de la Biblioteca Nacional de España Fuente: http://catalogo.bne.es/uhtbin/cgisirsi/vX5PmFfp1x/BNMADRID/74740009/61/78/X • Búsqueda de obras digitales: Este tipo de búsqueda tiene las mismas características mencionadas anteriormente al de la búsqueda avanzada, solo que está orientadas a las obras digitales que la Biblioteca Nacional de España posee (ver Figura 6). Capítulo II Marco Teórico 24 Figura 6: Búsqueda de obras digitalizadas de la Biblioteca Nacional de España Fuente: http://catalogo.bne.es/uhtbin/cgisirsi/RscVqpoJtS/BNMADRID/74740009/60/88/X OPAC de los Servicios Bibliotecarios de la Universidad de los Andes SERBIULA: (http://www.serbi.ula.ve/serbiula/catalogo_publico.php) Los Servicios Bibliotecarios de la Universidad de los Andes, cuentan con un OPAC para que los usuarios puedan hacer sus respectivas consultas a los materiales de las bibliotecas que la Universidad posee a lo largo del estado Mérida. El buscador permite realizar búsquedas sobre libros y revistas por los siguientes campos: títulos, materia, ISBN, ISSN, notas, editorial, descriptores y cota. Como se mencionó anteriormente este sistema gestiona la búsqueda en todas las bibliotecas de la ULA, el OPAC tiene la opción de seleccionar la biblioteca en cual se desea consultar los libros o revistas (ver Figura 7). Capítulo II Marco Teórico 25 Figura 7: OPAC de los Servicios Bibliotecarios de la Universidad de los Andes (SERBIULA) Fuente: http://www.serbi.ula.ve/serbiula/catalogo_publico.php OPAC de la Biblioteca Virtual de la Universidad Católica Andrés Bello (UCAB): (http://biblioteca2.ucab.edu.ve/) Este OPAC posee dos tipos de índices: normales por categoría autor y títulos, e índices especiales donde se muestran los libros, tesis y revisas digitalizadas. Todos los índices muestran los recursos bibliográficos en orden alfabético. OPAC posee dos tipos de búsquedas las cuales son las siguientes: buscador básico (ver Figura 8) y buscador avanzado (ver Figura 9). Ambos buscadores permiten filtrar las búsquedas por autor personal, autor institucional, título, título de serie, materia, categoría geográfica, editor, editorial, fecha de publicación, tipo de material, tipo de disertación, grado académico, facultad, escuela y lugar de publicación. La diferencia entre los dos buscadores es que el buscador básico permite un único filtrado de los que se mencionaron anteriormente y el buscador avanzado permite más de un filtrado mediante la utilización de operadores lógicos. Capítulo II Marco Teórico 26 Figura 8: Buscador básico del OPAC de la UACB Fuente: (http://biblioteca2.ucab.edu.ve/) Figura 9: Buscador avanzado del OPAC de la UCAB. Fuente:http://biblioteca2.ucab.edu.ve/biblioteca/marc/php/busquedaavanzada.php?base=marc&cipar=marc.par&prologo= S Capítulo II Marco Teórico 27 2.3.2.3. Cuadro comparativo de evaluación de los OPAC’s investigados Campos UCV UCAB SERBIULA BNE Año de publicación NO SI NO SI Autor SI SI SI SI Editor SI SI SI NO Título SI SI SI SI Tema/materia SI SI SI SI Descriptores NO NO SI NO Palabras claves SI NO NO NO Signatura SI NO NO NO Colección/serie SI SI SI SI ISBN SI NO SI SI ISSN SI NO SI SI Todos los campos NO NO SI SI Cualquier campo SI SI SI SI Otros SI SI SI SI Tabla 1: Cuadro comparativo de evaluación de los OPAC’s investigados. 2.2.4. Buscador Un buscador se define como un programa o una aplicación web que se emplea con el objetivo de buscar una variedad de formatos como documentos de texto, información almacenada en base de daros, páginas web, archivos de video y música, etc. 2.2.5. Tipos de buscadores Principalmente hoy en día existen dos tipos de buscadores: los índices temáticos y los motores de búsqueda. Distintos autores mencionan otros tipos de buscadores, pero éstos son combinados entre ellos. Capítulo II Marco Teórico 28 2.2.5.1. Índices temáticos o directorios Según Lamarca (2013 ) los índices temáticos o directorios “son listas de recursos organizados por categorías temáticas que se estructuran jerárquicamente en un árbol de materias que permite visualizar los recursos descendiendo desde los temas más generales situados en las ramas superiores, a los temas más específicos situados en las ramas inferiores”. 2.2.5.2. Motores de búsqueda Un motor de búsqueda es básicamente una herramienta, programa, software o aplicación web que basa su funcionamiento en la búsqueda de palabras que son suministradas por usuarios, con el objetivo principal de recolectar información a partir de bases de datos con índices a los recursos y páginas web disponibles en Internet de manera automatizada, a su vez representando la información de forma adecuada. 2.3. Herramientas de desarrollo Una vez que se analizaron los OPAC’s mencionados anteriormente, se tomó la decisión de utilizar un conjunto de herramientas de desarrollo software para el nuevo Módulo de Consulta OPAC de la BAG de la Facultad de Ciencias, Universidad Central de Venezuela. Estas herramientas proveen un enfoque web debido a que todas las bibliotecas virtuales y OPAC’s investigados son aplicaciones web alojados en servidores con sus respectivas bases de dato. Estas herramientas de desarrollo proveen de facilidad para el desarrollo del OPAC, entre ellas encuentran: Framework (entornos de trabajo), contenedores web, lenguajes de programación, tecnologías del lado del cliente y del servidor, manejadores de bases de datos, repositorios para tener respaldos de los códigos fuentes en la nube y permitir la sincronización local en donde se está desarrollando la aplicación. Capítulo III Marco Metodológico y Tecnologías de Desarrollo 29 CAPÍTULO III 3. Marco metodológico y tecnologías de desarrollo 3.1. Metodología Luego de investigar en varios sitios web de una definición clara y concreta de metodología, en el sitio web (definición, 2014) definen una metodología de la siguiente forma: “Metodología es un vocablo generado a partir de tres palabras de origen griego: metá (“más allá”), odós (“camino“) y logo (“estudio”). El concepto hace referencia al plan de investigación que permite cumplir ciertos objetivos en el marco de la ciencia. Cabe destacar que la metodología también puede ser aplicada en el ámbito artístico, cuando se lleva una observación rigurosa. Por lo tanto, puede entenderse a la metodología como el conjunto de procedimientos que determinan una investigación de tipo científico o marcan el rumbo de una exposición doctrinal. 3.2. Metodologías ágiles de desarrollo de software Al desarrollar o diseñar un software es recomendable utilizar una metodología de desarrollo de software, la cual consiste en una forma de trabajo que permite la estructuración y organización de un proyecto en cuanto a planificación, herramientas, métodos y tiempos desarrollo, cumpliendo con un conjunto de etapas y procesos que abarcan los requerimientos hasta la finalización del proyecto cuando la aplicación es colocada en producción. Las metodologías de desarrollo de software tradicionales o pesadas, tienden imponer una disciplina de trabajo durante la toda la etapa de desarrollo de software, con el objetivo de obtener un producto de software eficiente. Estas metodologías se basan en una estricta definición de roles, actividades, artefacto, herramientas y notaciones para el modelado y documentación detallada. Otro característica de las metodologías tradicionales es que no se adaptan adecuadamente si en alguna etapa de desarrollo ocurren cambios, es decir, no son los métodos más adecuados donde los requisitos no pueden variar o bien predecirse. Capítulo III Marco Metodológico y Tecnologías de Desarrollo 30 Debido a que las metodologías de desarrollo tradicionales o pesadas no eran las más adecuadas, surgieron las metodologías de desarrollo ágiles. La metodología de desarrollo ágil o modelado ágil (en inglés Agile Modeling, AM) fue propuesta por Scottc (2009) y señala que es “un conjunto de valores, principios y prácticas para modelar software que pueda ser aplicados a un proyecto de desarrollo de una forma efectiva y ligera, que complementan a las diferentes metodologías o procesos de desarrollo, ágiles o no, de manera de hacerlas adaptables a requerimientos cambiantes del cliente y lograr un proceso acorde a las necesidades de cada proyecto”. Los principios de Modelado ágil propuesto por (Beck, 2001) son los siguientes: • La prioridad más alta es satisfacer al cliente con entregas rápidas y continuas del producto de software. • Los cambios a los requerimientos son aceptados, inclusive durante el desarrollo. Un proceso ágil permite incorporar los cambios a fin de que el cliente posea ventaja competitiva. • El software se entrega frecuentemente. • Los clientes y los desarrolladores deben trabajar juntos diariamente hasta la finalización del proyecto. • La manera más eficiente y efectiva de transmitir la información dentro de un equipo de desarrollo es la interacción personal. • El software que funciona es la principal medida del progreso. • Un proceso ágil promueve el desarrollo. Los clientes, desarrolladores y los usuarios deben mantener un ritmo constante de trabajo. • Prestar continua atención a la excelencia técnica y realizar buenos diseños. • La simplicidad permitirá abarcar la cantidad de trabajo del proyecto. • Es una buena arquitectura, los requerimientos y diseños, son producto de un equipo bien organizado. • En intervalos de tiempo regulares, el equipo de trabajo reflexiona sobre cómo serían más efectivos y ajustan su comportamiento. Adaptativamente. Capítulo III Marco Metodológico y Tecnologías de Desarrollo 31 3.3. Diferencias entres las metodologías de desarrollo ágiles y las metodologías tradicionales Según Letelier y Penadés (2006) las diferencias entre las metodologías ágiles y las metodologías tradicionales son las siguientes: Metodologías Ágiles Metodologías Tradicionales Basadas en heurísticas provenientes de prácticas de producción de código. Basadas en normas provenientes de estándares seguidos por el entorno de desarrollo. Especialmente preparados para cambios durante el proyecto. Cierta resistencia a los cambios. Impuestas internamente (por el equipo de desarrollo). Impuesta externamente. Proceso menos controlado, con pocos principios. Proceso mucho más controlado, con numerosas políticas/normas. No existe contrato tradicional o al menos es bastante flexible. Existe un contrato prefijado. El cliente es parte del equipo de desarrollo. El cliente interactúa con el equipo de desarrollo mediante reuniones. Grupos pequeños (<10 integrantes) y trabajando en el mismo sitio. Grupos grandes y posiblemente distribuidos Pocos artefactos y pocos roles. Más artefactos y más roles. Menos énfasis en la arquitectura del software. La arquitectura del software es esencial y se expresa mediante modelos. Tabla 2: Diferencias entres las metodologías ágiles de desarrollo y las metodologías tradicionales. Fuente: http://www.cyta.com.ar/ta0502/v5n2a1.htm Capítulo III Marco Metodológico y Tecnologías de Desarrollo 32 3.4. Metodología para el desarrollo de la aplicación La metodología de desarrollo de software utilizada para la realización del Módulo de Consulta del “Catálogo de Acceso Público en Línea (OPAC)” de la BAG de la Facultad de Ciencias, Universidad Central de Venezuela, fue la metodología de desarrollo ágil Scrum. La decisión de utilizar este tipo de metodología viene dada por lo siguiente: Scrum permite que el grupo de desarrollo de software pueda adaptarse a cambios en requerimientos que surgen en el camino por parte del cliente, facilitando interacción entre el grupo de desarrollo y el cliente, proporcionando la simplicidad cuando se abarca la cantidad de trabajo del proyecto y sobre todo satisfacer al cliente con entregas en cortos plazos. Esta metodología proporciona mucha ventaja durante desarrollo en cuanto la planificación y entregas, ya que a medida que se iban dando soluciones a los requerimientos de la BAG, se iban mostrando los avances en cortos plazos y en caso de adaptarse a cambios, se realizaban los mismos con nuevas mejoras. En el sitio web oficial (Scrum, 2015) definen la metodología de desarrollo ágil Scrum como “es un marco simple para la colaboración eficaz en equipo para proyectos complejos. Sin embargo, Scrum es mucho más que un simple marco ya que este apoya la necesidad del ser humano en el ámbito laborar: de pertenecer, de aprender, de hacer, de crear y ser creativos, de crecer, de mejorar, y para interactuar con otras personas. En otras palabras, Scrum aprovecha las características innatas y las características de las personas, para que puedan hacer grandes cosas en conjunto”. Desde el inicio del proyecto hasta su finalización, la metodología Scrum estructura el desarrollo del proyecto en un conjunto de etapas o iteraciones denominadas Sprintque tienen un período entre dos y tres semanas. Por consiguiente, en el momento que finaliza un Sprint, se genera una tarea con el objetivo de que el cliente pueda evaluar los adelantos del proyecto, y poder tomar decisiones para mejorarlos adelantos o posibles cambios a requerimientos. De esta forma el desarrollo del proyecto va siendo incremental, así como la comunicación entre el grupo de desarrollo y cliente. Capítulo III Marco Metodológico y Tecnologías de Desarrollo 33 3.4.1. Beneficios de Scrum Los beneficios de la metodología de desarrollo ágil Scrum son los siguientes: • Gestión regular de las expectativas del cliente: El cliente comprueba de manera regular si se van cumpliendo sus expectativas, da feedback, ya desde el inicio del proyecto puede tomar decisiones informadas a partir de resultados objetivos y dirige estos resultados del proyecto, iteración a iteración, hacia su meta. De esta forma, sea ahorra esfuerzo y tiempo. • Resultados anticipados: Antes de la finalización del proyecto del cliente puede verificar y corroborar los resultados más resaltantes del proyecto. • Flexibilidad y adaptación: De manera regular el cliente redirige el proyecto en función de sus nuevas prioridades, de los cambios en el mercado, de los requisitos completados que le permiten entender mejor el producto, de la velocidad real de desarrollo, etc. Al final de cada iteración el cliente puede aprovechar la parte de producto completada hasta ese momento para hacer pruebas de concepto con usuarios o consumidores y tomar decisiones en función del resultado obtenido. • Productividad y calidad: Los integrantes del grupo de desarrollo van mejorando y simplificando la forma de trabajar. Se enfocan de una forma más eficiente cuando se tiene una fecha corta de entrega. • Mitigación de riesgos: El hecho de llevar a cabo las funcionalidades de mayor valor en primer lugar y de saber la velocidad a la que el equipo avanza en el proyecto, permite despejar riesgos efectivamente de manera anticipada. • Alineamiento entre cliente y equipo: Los Integrantes del proyecto, tanto cliente como el equipo de desarrollo conocen cuál es el objetivo a conseguir. El producto se enriquece con las aportaciones de todos.Los resultados y esfuerzos del proyecto se miden en forma de objetivos y requisitos entregados. • Equipo motivado: Las personas están más motivadas cuando pueden usar su creatividad para resolver problemas y cuando pueden decidir organizar su trabajo. Los integrantes del proyecto se sienten más satisfechos cuando pueden mostrar los logros que consiguen y se plantearon desde el comienzo de desarrollo del proyecto. Capítulo III Marco Metodológico y Tecnologías de Desarrollo 34 3.4.2. Artefactos de Scrum Para cumplir con los objetivos, organización y planificación de esta metodología de desarrollo ágil, se deben tomar en cuenta los siguientes artefactos de la misma: • Pila del producto: Consiste en una listado de requisitos por parte del cliente, en cual se da una visión de comienzo del proyecto, incrementando durante las etapas del desarrollo del proyecto. En el caso del presente proyecto, los requerimientos fueron suministrados por la Profesora Carmen Marrero, actual directora de la BAG de la Facultad de Ciencias, Universidad Central de Venezuela. • Pila del sprint: Consiste en una lista de tareas o trabajos específicos que se realizarán durante el periodo de tiempo del sprint. • Incremento: Consiste en el resultado de cada sprint. Cabe destacar que este resultado estaría listo para que el cliente lo pueda usar, debido a que previamente ya debió ser revisado. • Planificación del sprint: Es una jornada de trabajo donde se planifica cada sprint, determinando lo que se va a realizar y cuáles son los objetivos que se deben abarcar en dicha iteración. • Revisión del Sprint: Consiste en un análisis y revisión del incremento que se ha generado. 3.4.3. Roles en el proceso de Scrum Para el desarrollo del Módulo de Consulta se tienen tres tipos de roles: • Facilitador (ScrumMaster): Se encarga de guiar y seguir al equipo de desarrollo, en cuanto al cumplimiento de los objetivos. En este caso el rol de Facilitador lo cumple la Profesora y Tutora Yusneyi Carballo de la Escuela de Computación de la Facultad de Ciencias, Universidad Central de Venezuela. • Cliente (ProductOwner): En el presente proyecto quien cumple este rol es la Profesora Carmen Marrero, actual directora de la Biblioteca Alonso Gamero. Validando que se hayan dado soluciones a los requerimientos determinados. Capítulo III Marco Metodológico y Tecnologías de Desarrollo 35 • Equipo (TeamDeveloper): Consiste en el conjunto de personas que desarrollan el proyecto. En el presente proyecto representado por el TesistaAlvaro Joel Paz Monsalve de la Escuela de Computación de la Facultad de Ciencias, Universidad Central de Venezuela. Figura 10: Metodología de desarrollo ágil Scrum. Fuente: http://www.navegapolis.net/files/s/NST-010_01.pdf 3.5. Tecnologías para el desarrollo del módulo Para el desarrollo del módulo se utilizaron un conjunto de tecnologías y herramientas de desarrollo que permitieron gestionar la realización del módulo. Todas estas tecnologías fueron previamente investigadas para tener seguridad que se podría satisfacer todas las necesidades de la BAG y dar soluciones a los requerimientos definidos. 3.5.1. Base de datos Según Marqués (2011, p. 2) definen base de datos como “un conjunto de datos almacenados en memoria externa que están organizados mediante una estructura de datos”. Capítulo III Marco Metodológico y Tecnologías de Desarrollo 36 3.5.1.1. Características de bases de datos Las características de las bases de datos son las siguientes: • Independencia lógica y física de los datos. • Redundancia mínima. • Acceso concurrente por parte de múltiples usuarios. • Integridad de los datos. • Consultas complejas optimizadas. • Seguridad de acceso y auditoría. • Respaldo y recuperación. • Acceso a través de lenguajes de programación estándar. 3.5.1.2. Niveles de base de datos • Nivel físico: Este nivel representa la forma en cómo se almacenan los datos físicamente, permitiendo conocer la estructura de cómo están organizados y almacenados. • Nivel lógico o conceptual: En este nivel es donde se describe cuales datos son almacenados en la base de datos y como se pueden relacionar. En este nivel los datos en entidades u objetos. • Nivel de vistas: En este nivel los usuarios interactúan con la base de datos desde una interfaz. Capítulo III Marco Metodológico y Tecnologías de Desarrollo 37 Figura 11: Niveles de abstracción de datos Fuente:Silberschat, Korth, Sudarshan (2002) 3.5.2. Sistemas de Dases de Datos Los autores Silberschatz, Korth y Sudarshan (2002, p. 27) definen un Sistema de Bases de Datos como “una colección de archivos interrelacionados y un conjunto de programas que permiten a los usuarios acceder y modificar estos archivos”. Uno de los propósitos principales de un Sistema de Bases de Datos es proporcionar a los usuarios una visión abstracta de los datos. Es decir, el sistema esconde ciertos detalles de cómo se almacenan y mantienen los datos. 3.5.3. Sistemas Manejadores de Bases de Datos Un Sistema Manejador de Bases de Datos (SMBD) consiste en un conjunto de programas los cuales son encargados de manejar la creación y todos los accesos a la base de datos. El SMBD está compuesto por dos lenguajes: Lenguaje de Definición de Datos (DDL) y el Lenguaje de Manipulación de Datos (DML). Cabe destacar que en la mayoría de los SMBD se realizan las consultas mediante un lenguaje SQL. Capítulo III Marco Metodológico y Tecnologías de Desarrollo 38 El SMBD provee de una interfaz que tiene como función, ser intermediaria entre la base de datos física y las peticiones que realizan los usuarios. El SMBD interpreta las peticiones de entrada/salida del usuario y las manda al sistema operativo para la transferencia de datos el disco duro o memoria segundaria y la memoria principal. Para el presente módulo se propuso en el Seminario (Capítulo de Propuesta de Trabajo Especial de Grado) utilizar el manejador de base de datos MySQL. Al iniciar con el desarrollo de la aplicación la Profesora y Tutora Yusneyi Carballo sugirió utilizar el manejador de base de datos PostgreSQL ya que las universidades autónomas también están regidas por una Ley de Infogobierno. Para acatar esta ley debe usar herramientas de software libre. Seguidamente se procedió a investigar y a documentarse sobre dicha ley, luego de leer y analizar esta ley efectivamente se decidió utilizar el SMDB PostgreSQL (software libre) ya que el SMDB MySQL había sido comprado por la empresa ORACLE e iba a pasar a ser software privado. Ley de Infogobierno: Lo explicado anteriormente en cuanto a la toma de decisiones sobre la utilización de SMBD PostgreSQL está reflejado en los siguientes artículos de la Ley de Infogobierno: Artículo 2. “Están sometidos a la aplicación de la presente Ley: Las universidades públicas, así como cualquier otra institución del sector universitario de naturaleza pública”. Artículo 5: “A los efectos de la presente ley, se entenderá por: Software libre: Programa de computación en cuya licencia el autor o desabollador garantiza al usuario el acceso al código fuente y lo autoriza a usar el programa con cualquier propósito, copiarlo, modificarlo y redistribuirlo con o sin modificaciones, preservando en todo caso el derecho moral al reconocimiento de autoría”. Artículo 34.“El desarrollo, adquisición, implementación y uso de las tecnologías de información por el Poder Público, tiene como base el conocimiento libre. En las actuaciones que se realicen con el uso de las tecnologías de información, sólo empleará programas informáticos en software libre y estándares abiertos para garantizar al Poder Público el control sobre las tecnologías de Capítulo III Marco Metodológico y Tecnologías de Desarrollo 39 información empleadas y el acceso de las personas a los servicios prestados. Los programas informáticos que se empleen para la gestión de los servicios públicos prestados por el Poder Popular, a través de las tecnologías de información, deben ser en software libre y con estándares abiertos”. 3.5.4. Sistema Manejador de Bases de Datos PostgreSQL PostgreSQL es un Sistema Manejador de Bases de Datos (SMDB) del tipo objeto relacional. Este SMBD está distribuido bajo la licencia BSD (Berkeley Software Distribution, en español Distribución de Software Berkeley). Es uno de los SMBD de código abierto (software libre) con mayor potencia en el mercado y las últimas versiones han sido un avance considerable. Este SMBD utiliza un modelo cliente/servidor y usa multiprocesos en vez de multihilos para garantizar la estabilidad del sistema. Un fallo en uno de los procesos no afectará el resto y el sistema continuará funcionando. En el sitio web (postgresql, 2015) ilustran mediante un gráfico de forma muy general los componentes más esenciales e importantes en PostgreSQL. Figura 12: Componentes del SMBD PostgreSQL Fuente: http://www.postgresql.org.es/sobre_postgresql Capítulo III Marco Metodológico y Tecnologías de Desarrollo 40 • Aplicación cliente: Esta es la aplicación cliente que utiliza PostgreSQL como administrador de bases de datos. La conexión puede ocurrir via TCP/IP ó sockets locales. • Demonio postmaster: Este es el proceso principal de PostgreSQL. Es el encargado de escuchar por un puerto/socket por conexiones entrantes de clientes. También es el encargado de crear los procesos hijos que se encargaran de autentificar estas peticiones, gestionar las consultas y mandar los resultados a las aplicaciones clientes. • Ficheros de configuracion: Los 3 ficheros principales de configuración utilizados por PostgreSQL, postgresql.conf, pg_hba.conf y pg_ident.conf. • Procesos hijos postgres: Procesos hijos que se encargan de autentificar a los clientes, de gestionar las consultas y mandar los resultados a las aplicaciones clientes. • PostgreSQL share buffer cache: Memoria compartida usada por PostgreSQL para almacenar datos en caché. • Write-Ahead Log (WAL): Componente del sistema encargado de asegurar la integridad de los datos (recuperación de tipo REDO). • Kernel disk buffer cache: Caché de disco del sistema operativo • Disco: Disco físico donde se almacenan los datos y toda la información necesaria para que PostgreSQL funcione. 3.5.5. Lenguajes de programación del lado del servidor En un paradigma Cliente-Servidor los lenguajes de programación del lado del servidor son aquellos que son interpretados y ejecutados en el servidor con el objetivo de responder a peticiones realizadas por los cliente y dicha respuesta en un formato adecuado para su posterior representación en el cliente. Cabe destacar permiten estos lenguajes permiten realizar los accesos a las bases de datos en el servidor. Lenguajes de Programación Marcos de Trabajo (Frameworks) Python Django, TurboGears, Zope2, Pylons. C# ASO .NET Ruby Rails, Vintage, Merb, Sinatra. Java FFSprings, JSF. Capítulo III Marco Metodológico y Tecnologías de Desarrollo 41 PHP LARAVEL 4, CakePHP, Zend, Yii, CodeIgniter, Symphony. Perl Catalyst, Jifty, Mojolicious. Tabla 3: Lenguajes de Programación en el lado del Servidor. 3.5.6. Lenguaje de programación PHP PHP (Hypertext Pre-processor, en español Pre-procesador de Hipertexto), es un lenguaje de programación interpretado del lado del servidor, desarrollado en el año 1995 por Rasmus Lerdorf PHP Group. Este lenguaje es orientado al desarrollo web y puede ser incrustado en el código HTML. También permite realizar los accesos a las bases de datos en el servidor y dar respuesta a las peticiones de los clientes en un formato pre-procesado de hipertexto y poder ser representado de forma adecuada en el los navegadores web (clientes). Algunas de las características de PHP son las siguientes: • Posee una amplia documentación en su sitio web oficial, entre la cual se destaca que todas las funciones del sistema están explicadas y ejemplificadas en un único archivo de ayuda. • Orientado al desarrollo de aplicaciones web dinámicas con acceso a información almacenada en una base de datos. • El código fuente escrito en PHP es invisible al navegador web y al cliente, ya que es el servidor el que se encarga de ejecutar el código y enviar su resultado HTML al navegador. Esto hace que la programación en PHP sea segura y confiable. • Orientado al desarrollo de aplicaciones web dinámicas con acceso a información almacenada en una base de datos. • Permite la conexión con una variedad de los motores de base de datos existentes en la actualidad, la elección de los desarrolladores en su mayoría de los casos viene dada con los manejadores de bases de datos MySQL y PostgreSQL. Capítulo III Marco Metodológico y Tecnologías de Desarrollo 42 3.5.7. Lenguajes de programación del lado del cliente Los lenguajes de programación del lado del cliente son aquellos lenguajes que son interpretados por el cliente (navegador web). Cada lenguaje tiene una función en específico, algunos lenguajes permiten realizar peticiones http al servidor, manipulación del árbol DOM de los navegadores web, dar formato de hipertexto, y otros dar estilos a las páginas, entre otras funciones. Lenguajes Librerías y Frameworks JavaScript AngularJS, Jquery, BatmanJS, Moo Tools, Prototype, Backbone. VBScript - CSS TwitterBootstrap, YAML, WYMstyle, YUI Grids. Java Applet - Tabla 4: Lenguajes de programación del lado del Cliente. 3.5.8. Marco de Trabajo (Framework) La traducción del inglés al español del término Framework es marco de trabajo, éste es utilizado en el contexto de desarrollo de software y en el ámbito de desarrollo de aplicaciones web. Existen distintos marcos de trabajo, entre los cuales pueden estar dirigidos: para el desarrollo de video juegos, desarrollo de aplicaciones médicas, de visión por computador y desarrollo de aplicaciones web, etc. En términos generales, cuando se habla de Framework, se está refiriendo a una estructura o arquitectura de software que tiene componentes personalizables e intercambiables para el desarrollo de una aplicación. Los marcos de trabajo permiten estructurar los proyectos de aplicaciones de forma modular, permitiendo la integración de todos sus componentes y haciendo el mantenimiento de la aplicación mucho más fácil. En otras palabras, un marco de trabajo se puede considerar como una aplicación genérica incompleta y configurable a la que se le puede añadir las últimas piezas para construir una aplicación concreta, es decir, una especie de rompe cabezas al cual se le van añadiendo piezas o componentes hasta formar la aplicación complete. Capítulo III Marco Metodológico y Tecnologías de Desarrollo 43 Los objetivos de un marco de trabajo son los siguientes: • Acelerar el proceso de desarrollo. • Reutilizar código ya existente. • Promover buenas prácticas de desarrollo como el uso de patrones. 3.5.9. Framework Laravel 4 PHP Para el desarrollo del Módulo de Consulta se utilizó un Framework llamado Laravel 4 PHP, éste es de código abierto desarrollado en el lenguaje de programación del lado del servidor PHP, para desarrollar aplicaciones y servicios web con la versión de php 5. Actualmente tiene una gran influencia como los Frameworks: Ruby onRails, Cake PHP, Sinatra Symfony y ASP.NET MVC. El tipo de patrón de arquitectura que utiliza este marco de trabajo es MCV (Model View Controller, en español Modelo Vista Controlador). Laravel tiene como objetivo ser un marco de trabajo que permita el uso de una sintaxis elegante, simple y expresita para implementar código de forma sencilla y así suministrando variedades de funcionalidades. Éste aprovecha lo mejor de otros marcos de trabajo y las características de las más recientes versiones del lenguaje de programación PHP. Laravel está conformado por dependencias, especialmente de Symfony, esto aplica que el desarrollo de Laravel dependa también del desarrollo de sus dependencias. Figura 13: Logo del Framework (marco de trabajo) Laravel 4 PHP. Fuente: http://laravel.com/ Capítulo III Marco Metodológico y Tecnologías de Desarrollo 44 3.5.9.1. Estructura del Framework Laravel 4 PHP En el sitio web (codehero, 2015) describen la estructura de un proyecto cuando es creado en este Framework: • /app: Contiene los controladores, modelos, vistas y configuraciones de la aplicación. En esta carpeta escribiremos la mayoría del código para que nuestra aplicación funcione. • /public: Es la única carpeta a la que los usuarios de la aplicación pueden acceder. Todo las peticiones y solicitudes a la aplicación pasan por esta carpeta, ya que en ella se encuentra el index.php, este archivo es el que inicia todo el proceso de ejecución del Framework. En este directorio también se alojan los archivos CSS, JavaScript, imágenes y otros archivos que se quieran hacer públicos. • /vendor: En esta carpeta se alojan todas las librerías que conforman el framework y sus dependencias. • /lang: En esta carpeta se guardan archivos PHP que contienen Arrays con los textos de diferentes lenguajes, en caso que se desee que la aplicación se pueda traducir. • /app/config: Aquí se pueden se pueden encontrar todos los archivos de configuración de la aplicación. Base datos, cache, correos, sesiones o cualquier otra configuración general de la aplicación. • /app/controller : Contiene todos los archivos con las clases de los controladores que sirven para interactuar con los modelos, las vistas y manejar la lógica de la aplicación. • /app/model: Los modelos son clases que representan la información (datos) de la aplicación y las reglas para manipularlos. En la mayoría de los casos cada tabla de la base datos está representada con un modelo. La lógica de negocio de la aplicación esta contendía en los modelos. • /app/views: Este directorio contiene las plantillas de HTML que usan los controladores para mostrar la información. Hay que tener en cuenta que en esta carpeta no van los JavaScript, CSS o imágenes, ese tipo de archivos van alojados en la carpeta/public. Capítulo III Marco Metodológico y Tecnologías de Desarrollo 45 Figura 14: Estructura de Laravel 4 PHP. 3.5.10. Framework AngularJS AngularJS es un framework MVC (Modelo Vista Controlador) del lenguaje de programación interpretado del lado del cliente JavaScript para el Desarrollo web frontend que permite crear aplicaciones SPA (Single-Page Applications, en español Aplicaciones de Páginas Sencillas). El actual propietario de este marco de trabajo es Google. Este marco de trabajo tiene los siguientes objetivos: • Facilitar la manipulación del DOM. • Separar el lado del cliente de las aplicaciones del lado del servidor. • Proveer arquitectura MCV. • Proveer funcionalidades y servicios para que los desarrollados puedan hacer uso de las mismas. • Simplificar el código y mejorar las matenibilidad y facilitar las pruebas. Capítulo III Marco Metodológico y Tecnologías de Desarrollo 46 • Comunicación con el lado del servidor mediante peticiones HTTP a servicios web. Cabe destacar que AngularJS angular tiene como una de sus funcionalidades pre- procesar el código HTML que es interpretado en los navegadores web. Utiliza directivas que son sistema en componentes del Framework y funcionan colocando el nombre de éstas en las etiquetas HTML. Figura 15: Logo del Framework AngularJS. Fuente: https://angularjs.org/ El desarrollo de la aplicación del Módulo de Consulta OPAC de la BAG estuvo basado en un enfoque frontend y backend. En este desarrollo el Framework AngularJS jugó un importante en el desarrollo del módulo, ya que se pudieron realizar las peticiones HTTP a servicios web que la aplicación del servidor provee mediante un conjunto de servicios web basados en API RESTful. Capítulo IV Marco Aplicativo 47 CAPÍTULO IV 4. Marco aplicativo El presente capítulo es uno los más resaltantes e importantes, en el cual se definen las funcionalidades del Módulo de Consulta del Catálogo de Acceso Público en Línea (OPAC) de la Biblioteca Alonso Gamero de la Facultad de Ciencias, Universidad Central de Venezuela. Se describen los perfiles de usuarios, los Sprints realizados utilizando la metodología de desarrollo ágil Scrum y las pruebas respectivas realizadas sobre la aplicación 4.1. Perfiles de usuarios • Visitante no registrado: este tipo de usuario puede consultar cualquier recurso bibliográfico del Módulo de Consulta de la BAG y las páginas informativas del sitio web. Podrá entrar a la sección de índices bibliográficos y realizar consultas mediante el buscador básico o el avanzado, descargar un recurso o múltiples recursos en un pdf al seleccionarlos y poder enviar información de los recursos al correo electrónico, así como tener acceso a la generación de código QR de un recurso y descargar los recursos en texto completo. • Visitante registrado: posee los mismos privilegios que el visitante no registrado salvo que cuando este usuario desea enviar un correo electrónico asociado a uno o más recursos, no necesita suministrar su correo debido a que el sistema al reconocer que el usuario está registrado y autenticado en dicho momento, automáticamente obtiene el correo electrónico del usuario para su posterior envío de correo electrónico. Este tipo de usuario se le activa una funcionalidad de seccionar uno o más recursos de preferencia, este tipo de funcionalidad es un servicio web que se estableció con el Módulo de Préstamos. 4.2. Requerimientos del Módulo de Consulta La BAG por parte de la Profesora Carmen Marrero (actual directora de la biblioteca), presentó un conjunto de requerimientos, los cuales son los siguientes: 1. Realizar un buscador simple y un buscado avanzado. Capítulo IV Marco Aplicativo 48 2. Realizar búsqueda con truncamiento de palabras. 3. Utilización de operadores lógico en el buscador avanzado. 4. Generación dinámica de campos en el buscador avanzado. 5. Realizar buscador índice por títulos y autores de recursos. 6. Consultar recursos en un rango de años. 7. Selección de múltiple recursos consultados para su envío por correo electrónico. 8. Seleccionar de múltiples recursos a descargar en un documento de visualización 9. Realizar búsquedas por tutor académico, por jurado de tesis. 10. Realizar búsquedas por bibliotecas y dependencias de la Facultad de Ciencias. 11. Descargar libros y tesis en texto completo. 12. Mostrar autocompletados en la búsqueda simple. 13. Agregar más de un correo electrónico al enviar un recurso. 14. Autenticar usuarios. 15. Realización de paginación de los resultados obtenidos al consultar recursos bibliográficos. 16. Agregar opción de números de recursos por página en el despliegue de los resultados al consultar un recurso. Adicionalmente su realizó una funcionalidad de generación de código QR al consultar los recursos. Este código consiste en una imagen que se genera mostrando un código el cual puede ser escaneado por una aplicación de los teléfonos inteligentes con sistema operativo Android o iOS y el resultado obtenido es la información de los recursos en un formato de documento portable (.pdf). La interfaz anterior del sistema Alejandría tenía muchas dificultades en cuanto a estándares e interposición del menú principal en los resultados de las búsquedas, por lo cual se tomó la decisión de desarrollar una nueva interfaz siguiendo principios de usabilidad, que además de solventar los problemas antes vistos en algunas secciones de la interfaz anterior también se ajusta a la pantalla dependiendo del dispositivo, característica (“Resposive”) que tienen las vistas en aplicaciones modernas con esto ayudando también a la accesibilidad del sistema. Para finalizar la definición de requerimientos, se añadió una funcionalidad adicional que consiste en la utilización del lector del código de barra óptico de la BAG para poder realizar las búsquedas por el ID del ejemplar de los recursos. Capítulo IV Marco Aplicativo 49 4.3. Aplicación de la metodología Scrum 4.3.1. Lista de objetivos (ProductBacklog) A continuación se mostrará una lista de los Sprint de la metodología que se llevaron a cabo para el desarrollo del Módulo de Consulta de la BAG: Sprint Actividad Fecha 1 • Entrenamiento con Laravel 4 y AngularJS 12-12-2014 al 26-12-2014 2 • Análisis del diseño lógico y físico de la base de datos 27-12-2014 al 24-01-2015 3 • Correcciones del diseño de la base de datos. • Configuración y pruebas de conexión con Laravel y PostgreSQL. • Creación de clases del lado servidor. 26-01-2015 al 14-02-2015 4 • Creación de relaciones entre los modelos • Creación de API’s RESTful para servicios web. • Creación de autenticación de usuarios. 15-02-2015 al 01-03-2015 5 • Creación de las secciones de la vista. • Desarrollo del buscador simple. • Desarrollo del buscador por índices de títulos y autores. • Creación de nuevas tablas. • Elaboración del documento. 02-03-2015 al 14-03-2015 6 • Creación de autocompletado en la búsqueda simple. • Desarrollo del buscador avanzado. • Creación de acciones de funcionalidades de los recursos. • Instalación del sistema en un servidor de prueba. • Elaboración del documento. 14-03-2015 al 28-03-2015 7 • Ajustes finales del desarrollo. • Desarrollo de la funcionalidad y del servicio para el lector de código barra. • Finalización del tomo del presente trabajo de grado. 29-03-2015 al 12-04-2015 Tabla 5: Lista de Sprints realizados en el desarrollo del Módulo de Consulta. Capítulo IV Marco Aplicativo 50 4.3.2. Lista de tareas de la iteración: Sprint Backlog Sprint 1: Entrenamiento con el Framework Laravel 4 PHP Y AngularJS. En este primer Sprint de la metodología Scrum se reforzó conocimientos en cuanto los marcos de trabajo Laravel 4 PHP y AngularJS. Luego se realizó la instalación y configuración del marco de trabajo Laravel 4 PHP con el contenedor web (WAMP server), y la configuración del servidor local Apache con el SMBD PostgreSQL. Luego se realizó la instalación de Node.js con el objetivo de utilizar y ejecutar el gestor de tareas Gulp que tiene como función proveer un mecanismo de empaquetado de la app de frontend, minificando conjunto de hojas de estilos y archivo de JavaScript. Sprint 2: Análisis del diseño lógico y físico de la base de datos El sistema de Alejandría cuenta como un número de 158 tablas de la base de datos. A partir de estas tablas de realizó un análisis con el objetivo de encontrar que problemas eran causantes de los fallos e inconsistencia de datos faltantes los cuales no eran reflejados en las búsquedas del OPAC. Luego de este primer análisis el número disminuyó a 65 tablas debido a que 93 tablas del modelo no eran necesarias y estaban vacías ya que el sistema las utilizaba con otros propósitos, por ejemplo: ventas de libros. Se realizaron pruebas de consultas a la base de datos para ir obteniendo los datos y saber cuáles campos contenían los datos requeridos. Sprint 3: Correcciones del diseño de la base de datos. Configuración y pruebas de conexión con Laravel y PostgreSQL. Creación de clases del lado servidor. Se realizó un ajuste en el diseño de la base de datos en cuanto a reestructuración, optimización, creación de convenciones de nombre de campos y tablas. Se crearon índices de búsquedas para que el SMBD PostgreSQL pudiera realizar las búsquedas de una manera óptima y en el menor tiempo posible. También crearon los respaldos y restauraciones de las 35 nuevas tablasdel nuevo modelo. Se realizó un unificación de la tabla central y document obtenida del modelo de Alejandría, debido a que eran tablas idénticas y los datos estaban dispersados en estas dos tablas y esto traía como consecuencia que no se reflejaran todos los recursos en las búsquedas del OPAC, para esto se creó una tabla llamada recursos. Otra de las tareas realizadas fue la creación Capítulo IV Marco Aplicativo 51 de la tabla libros añadiendo el campo ISSN, ya que estaba en las tablas central y document pero habían recursos que no poseían campo ISBN y por ende quedaban vacíos. En paralelo a estas optimizaciones de la base de datos, se fueron creando recursos del framework (cada recurso incluye: migraciones, modelos, vistas y controladores). En esta etapa se empezó ya a desarrollar el módulo en cuanto a implementación de código. Sprint 4: Instalación y configuración de AngularJS para establecer el lado cliente. Creación de relaciones entre los modelos, API’s RESTful para servicios web y autenticación de usuarios. Como primera tarea de este Sprint se realizó la instalación y configuración del marco de Trabajo AngularJS junto con la herramienta de gestión de tareas de automatización Gulp, permitiendo minificar los archivos CSS y JS. Se crearon las relaciones entre los modelos asociados a las tablas y la creación de API’s RESTful para servicios web. Al tener una aplicación basada en servicios web permitirá que para un futuro otras aplicaciones puedan comunicarse mediante servicios web al Módulo de Consulta de la BAG. Otra de las tareas que se realizó fue la creación de los servicios para la autenticación de los usuarios de la BAG. Sprint 5: Creación de las secciones de la vista. Desarrollo del buscador simple y del buscador índices de títulos y autores. Creación de nuevas tablas. Se realizó la creación de todas las correspondientes secciones de las vistas del sitio web donde se integran los módulos de la BAG. Estas secciones corresponden al encabezado de páginas, el pie de página, el banner y la sección de contenido correspondiente al Módulo de Consulta. También se creó el buscador simple, permitiendo consultar recursos bibliográficos de la BAG en distintos campos como títulos, autores, editoriales, descriptores como materias o materia temática, entre otros, desplegando de forma fácil los recursos y permitiendo parametrizar el despliegue según el número de recursos por páginas que se desee obtener. El otro buscador realizado en esta iteración es el buscador de índices por títulos y por autores, éste consistió en obtener el despliegue de un índice de autores filtrando por un tipo de recursos como: libros, tesis, publicaciones seriadas o filtrar en todos los recursos, y por un tipo de letra del abecedario por la cual comienza el título o autor de los recursos, cabe destacar que para este tipo de buscador también se permite parametrizar por el número de recursos por página en el despliegue. Capítulo IV Marco Aplicativo 52 Para poder dar soluciones a las dependencias y demás bibliotecas de la Facultad de Ciencias se crearon nuevas tablas: dependencias, bibliotecas, recursos_bibliotecas, recursos_dependencias para poder consultar y catalogar los recursos por bibliotecas y por dependencias, en principio para poder consultar tesis por dependencias (entras ellas las Escuelas de la Facultad de Ciencias). Entre las dependencias de las Facultad de Ciencias se tienen: la Escuela de Computación, Química, Física, Matemática, Biología y Geoquímica, el Instituto de Zoología y Ecología Tropical (IZET), el Instituto de Ciencia y Tecnología de Alimentos (ICTA) y el Instituto de Biología Experimental (IBE). Entre las bibliotecas se tienen la Biblioteca Alonso Gamero (BAG), Biblioteca Janis Racenis (IZET), Biblioteca Dr. Nikitta Czyhrinciw (ICTA), Biblioteca del IBE, Biblioteca de Postgrado de Computación y otras bibliotecas que serán catalogadas. Sprint 6: Creación de autocompletado en la búsqueda simple. Desarrollo del buscador avanzado. Creación de acciones de funcionalidades de los recursos. Para incrementar la usabilidad de la aplicación, se creó un autocompletado en el buscador básico con el objetivo de realizar una consulta previa mientras el usuario va escribiendo en el campo de búsqueda, entonces para el usuario es más fácil poder saber si lo que está escribiendo se encuentra en los registros bibliográficos de la base de datos de la BAG. Otra de las tareas que se realizó en este Sprint fue la creación del buscador avanzado, el cual consta de un menú principal de selección de recursos como libros, revistas o publicaciones seriadas, tesis y todos los documentos. Al seleccionar cada una de las opciones mencionadas anteriormente se muestran sólo los campos en la selección de filtrado correspondientes al tipo de recurso sin mezclar campos como en otros buscadores existentes. Actualmente, los buscadores avanzados de otros OPAC’s existentes en otras bibliotecas poseen fijo solo 3 o 5 ítems de filtrado de campos, entonces para realizar algo innovador para el OPAC de la BAG se implementó una opción para que estos ítems fueran dinámicos, es decir, el usuario al dar clic en botón se van generando nuevos ítems de filtrado de búsqueda, permitiendo así la utilización de los operadores lógico como “Y” (and), “O” (or) y “NO” (not). Con respecto a los ítems dinámicos mencionados, también se implemento una opción para que puedan borrar los ítems generados en el caso que el usuario ya no desee buscar por más campos. Capítulo IV Marco Aplicativo 53 Una vez realizados los buscadores, se procedió a implementar un conjunto de acciones en la selección múltiple de los recursos y en el modal del despliegue del recurso, estas acciones son las siguientes: • Descargar PDF: Esta acción permite que el usuario pueda descargar la información del recurso consultado de los recursos seleccionados. • Enviar por correo electrónico: Al seleccionar múltiples recursos o al desplegar en un modal la información, esta acción permite que el usuario pueda enviar un recurso a su correo electrónico o a otros usuarios. Cabe destacar, si el usuario está autenticado no será necesario que suministre su nombre y el correo electrónico, ya que el sistema le suministra los datos de usuario en los campos, y en caso que se desea enviar a otros correos electrónicos se le provee al usuario una opción para poder generar dinámicamente otros campos para colocar más correos y una opción de borrar campo de correo electrónico. • Generar código QR: Esta acción consiste en generar un código QR de un recurso consultado o generar varios códigos sobre recursos seleccionados y mostrarlos en un modal. Una vez se muestra una imagen que tiene el código, este código está asociado a una ruta que realiza la petición RESTful al servidor, y la respuesta del servidor es un formato de documento portable (.pdf) con la información del recurso. Para poder completar esta acción y obtener los resultados esperados, se debe tener instalada una aplicación llamada QR Droid en teléfonos inteligentes con sistema operativo Android o iOS, esta aplicación tiene como función escanear el código de la imagen y luego enviar la petición asociada al QR, y el resultado generado es la información de los recursos seleccionado en un formato PDF. • Descargar recurso en texto completo: Uno de los requerimientos por parte de la BAG fue que se pudieran catalogar y descargar tesis y libros en texto completos desde el OPAC. Esta opción se muestra como un botón en el modal que se despliega el recurso previamente consultado, en caso de que dicho recurso esté disponible en un documento o procesador de texto como. • Agregar a preferencias: Esta acción consiste en un servicio web que se estableció con el Módulo de Préstamos para que el usuario previamente autenticado, al momento de consultar un recurso desde del OPAC pueda también agregar las preferencias de recursos de usuario y automáticamente aparecen en el Módulo de Préstamos. Capítulo IV Marco Aplicativo 54 Para finalizar este Sprint se hicieron las configuraciones respectivas para colocar la aplicación en producción, en servidor de la empresa Widget Personal Computer C.A, cabe destacar que este servidor fue suministrado de forma de temporal para poder hacer las pruebas de la aplicación de forma remota. Sprint 7: Ajustes finales del desarrollo. Finalización del tomo del presente trabajo de grado. Se realizaron ajustes finales sobre la interfaz, el autocompletado del buscador simple, y una limpieza de forma parcial sobre la tabla autores ya que había un mismo autor catalogado varias veces en la misma tabla. También se finalizó el tomo del documento para ser entregado a la Tutora Profesora Yusneyi Carballo Barrera para su posterior revisión. 4.4. Análisis del modelo de datos y definición La BAG contaba con el sistema bibliotecario Alejandría mediante el cual se llevaba a cabo las consultas, catalogación y préstamos de los recursos bibliotecarios. Debido a la estructuración de la base de datos, a problemas que venían desde el año 2009 desde la migración de la base de datos del sistema bibliotecario SIDULA al sistema Alejandría y al uso inadecuado de catalogación de recursos en algunos casos trajeron como consecuencia un mal comportamiento e inconsistencia de los datos en las consultas. Para llevar a cabo nuevo modelo de base datos se tuvo que reutilizar la data de la base de datos del sistema Alejandría, y ciertas estructuras de tablas y relaciones que contribuyeron con el desarrollo e implementación del nuevo modelo. Al contar con el nuevo modelo de base de datos, ya estructurado y optimizado se determinó que la base de datos del sistema Alejandría cuenta con un total de 158 tablas, entre las cuales solo 93 tablas estaban vacías y eran utilizadas en ningún proceso de la BAG, luego las tablas resultantes con data cargada obtuvo un número de 65 tablas en las cuales sí se podían llevar a cabo las consultas respectivas del Módulo de Consulta OPAC. Luego se logró un análisis más minucioso sobre las 65 tablas, se descubrió que en algunas tablas existían datos en común y guardaban la Capítulo IV Marco Aplicativo 55 misma estructura, por lo cual se procedió a realizar unificación de tablas, así mismo disminuyendo la cantidad de las mismas y la complejidad del modelo de base de datos. Al finalizar el análisis mencionando anteriormente, de las 65 tablas se disminuyó a 35 tablas, manteniendo y reutilizando la data del sistema Alejandría pero con una limpieza parcial y una mejor estructura del modelo para que luego se pueda limpiar la data en una gran totalidad mediante el Módulo de Catalogación. Al tener listas las tablas se crearon convenciones de nombres de tablas y campos con el objetivo de mantener una correspondencia con el marco de trabajo Laravel 4 PHP, dando un mejor significado de las tablas en cuanto al contexto y aprovechando al máximo la funcionalidad que este Framework provee. Las convenciones que se acordadas junto con los otros módulos son las siguientes: • El nombre de las tablas en plural, siguiendo el estándar de Laravel 4 PHP. • La claves foráneas o ajenas (foreignKeys) en las relaciones ‘a muchos’ (hasMany), ‘pertenece a’ (belongsTo) y ‘a uno’ (hasOne) se reconocen por defecto si el nombre del campo se escribe usando el singular de la tabla con la que se relación y terminando en ‘_id’. • Todas las tablas deben tener un campo identificar ‘id’. • Nombres de las tablas en minúsculas. El marco de trabajo Laravel 4 PHP provee de un mecanismo mediante el cual se pueden crear clases llamadas migraciones, estas clases permiten modelar las tablas de la base de datos obteniendo un nivel de abstracción sobre la base de datos. En éstas se especificaron los nombres de campos y tablas. Al tener este conjunto de migraciones permite que la base de datos del nuevo sistema sea muy portable debido a que Laravel posee un archivo de configuración donde se puede indicar el tipo de manejador de base datos a usar y teniendo este conjunto de migraciones, con un comando “php artisan mígrate” el marco de trabajo se encarga de crear las tablas que tiene especificadas de las clases de migraciones, haciendo portable la base de datos ya que se puede generar para otro tipos de manejadores de base de datos en algún futuro que se requiera. Capítulo IV Marco Aplicativo 56 4.4.1. Tablas del nuevo modelo de base de datos En el siguiente listado se muestran los nombres de las tablas del nuevo modelo de base de datos con su respetiva descripción: Nombre de la Tabla Descripción 1. autores Permite almacenar las datos básicos de los autores y su tipo 2. bibliotecas Esta tabla almacena los nombres y las siglas de las bibliotecas asociadas a la B.A.G. 3. dependencias Permite almacenar los nombres y siglas de las dependencias de la Facultad de Ciencias de la Universidad Central de Venezuela. 4. descriptores Permite almacenar los descriptores, los cuales son un conjunto de datos adicionales acerca de cada recurso bibliográfico. 5. devoluciones Permite almacenar los datos relacionados con una devolución de un recurso prestado, como la fecha, id del usuario que lo solicito, etc. 6. editoriales Permite almacenar la información básica de las editoriales de algunos recursos bibliográficos. 7. ejemplares Permite almacenar los códigos de cada ejemplar así como su estado (si esta prestado o disponible), a su vez está relacionada con la tabla recursos que guarda los códigos de cada material bibliográfico ubicado en la B.A.G. 8. hipertextos Permite almacenar la información adicional de algunos recursos que poseen ubicaciones virtuales. 9. instituciones Permite almacenar la información básica de instituciones y su relación con la tabla países. 10. libros Permite almacenar el ISBN (International Standard Book Number) de cada libro. 11. migrations Tabla creada automáticamente por Laravel al hacer la migración. 12. países Permite almacenar los nombres de países con un código abreviado. 13. preferencias Tabla creada para relacionar los usuarios con sus preferencias o recursos bibliográficos favoritos. 14. préstamos Tabla creada para guardar los datos de préstamo de cada usuario, así como el recurso que se le prestó, fecha y hora, entre otros datos. Capítulo IV Marco Aplicativo 57 15. publicaciones_seriadas Tabla creada para guardar información extra de las publicaciones periódicas (revistas). 16. recursos Tabla creada para almacenar la información base de cada recurso bibliográfico de la biblioteca, como su id, cota, tipo, entre otros 17. recursos_autores Tabla creada para relacionar los recursos con sus autores. 18. recursos_bibliotecas Tabla creada para relacionar los recursos con sus bibliotecas. 19. recursos_dependencias Tabla creada para relacionar los recursos con sus dependencias. 20. recursos_descriptores Tabla creada para relacionar los recursos con sus descriptores. 21. recursos_editoriales Tabla creada para relacionar los recursos con sus editoriales. 22. recursos_titulos Tabla creada para relacionar los recursos con sus títulos. 23. suspensiones Tabla creada para almacenar los datos de la suspensión de cada usuario que haya quedado suspendido, y las observaciones de la suspensión. 24. tesis Tabla creada para almacenar datos extra de las tesis. 25. tipo_autores Tabla creada para almacenar los tipos de autores, ejemplo autores principales, jurados, tutores, etc. 26. tipo_descriptores Tabla creada para almacenar los tipos de descriptores. 27. tipo_docs Tabla creada para almacenar los tipos de materiales bibliográficos, como lo son libros, tesis, publicaciones periódicas, entre otros. 28. tipo_editoriales Tabla creada para almacenar los tipos de editoriales. 29. tipo_estado_ejemplares Tabla creada para almacenar los tipos de estados que puede tener un ejemplar (ejemplo: normal, perdido, en catalogación, etc.). 30. tipo_titulos Tabla creada para almacenar los tipos de títulos. 31. tipo_usuarios Tabla creada para almacenar los tipos de usuarios que interactúan con el sistema. 32. títulos Tabla creada para almacenar los títulos de cada recurso bibliográfico. 33. usuarios Tabla creada para almacenar los usuarios y sus datos como cedula, contraseña, correo, nombre, dependencia, estado, entre otros. 34. variables_reportes Tabla creada para variables del sistema, y datos diarios para generar reportes estadísticos. 35. correos_pendientes tabla creada para almacenar una lista de correos pendientes, con fecha de expiración, fecha en que fue agregado, destinatarios y contenido. Tabla 6: Listado de las tablas del modelo de base de datos de la aplicación. Capítulo IV Marco Aplicativo 58 Figura 16: Modelo de la base de datos (primera parte). Capítulo IV Marco Aplicativo 59 Figura 17: Modelo de la base de datos (segunda parte). 4.5. Principales interfaces diseñadas El presente segmento del documento del Trabajo Especial de Grado, tiene como objetivo mostrar, especificar y describir el conjunto de interfaces realizadas en el desarrollo del Módulo de Consulta del Catálogo de Acceso Público en Línea (OPAC) de la BAG de la Facultad de Ciencias UCV. Cabe destacar, que las interfaces realizadas cumplen un patrón de diseño al igual que los otros módulos de Tesis involucrados en el desarrollo del marco proyecto, es decir, al ser una solución integral los tres Módulos (Consulta, Préstamos y Catalogación) cumplen con una consistencia en cuanto a la interfaces, independientemente de las funcionalidades de cada solución de Trabajo Especial de Grado. Capítulo IV Marco Aplicativo 60 4.5.1. Nueva Página Principal del sitio web de la Biblioteca Alonso Gamero Figura 18: Página principal del sitio web de la BAG. • Inicio: Esta sección permite que todo tipo de usuario pueda acceder a la información pública del nuevo sitio web de la BAG, en cual se proporciona los enlaces a los módulos respectivos del sistema a través el menú principal. • Logos: Se muestran tres logos institucionales, los cuales son los siguientes: el del lado izquierdo representa al logo de la BAG, el central es el logo de la Facultad de Ciencias y el logo de la derecha representa a la Ilustre casa de estudios Universidad Central de Venezuela. Capítulo IV Marco Aplicativo 61 Figura19: Menú principal y opciones del Módulo de Consulta. • Iniciar Sesión: Permite que un usuario pueda ser autenticado mediante el correo electrónico y una contraseña en la parte superior derecha de la página. • Cerrar Sesión: Un usuario puede cerrar sesión en cualquier momento que lo desee, en la opción “cerrar sesión” de la parte superior derecha. • Buscador simple: En este buscador se podrá buscar recursos bibliográficos en varios campos como cota, título, materia, autor y editorial. • Pie de página: En esta sección de la página se muestra información de interés como la dirección de la BAG y enlaces a la página de la Facultad de Ciencias y la Universidad Central de Venezuela, así como también el código postal, teléfonos y fax. • Catálogo: Permite poder seleccionar las opciones del Módulo de Consulta: índices y buscadores. 4.5.2. Interfaz adaptativa (responsive) para cualquier dispositivo móvil El desarrollo de la interfaz estuvo enfocado en base a un diseño web adaptable RWD (Responsive Web Design), el cual consiste en un diseño mediante el cual las interfaces se puedan adaptar a las dimensiones de cualquier dispositivo inteligente o pantalla de un computador. En la Figura 20, se puede visualizar como se puede apreciar la interfaz principal del nuevo sitio web de la BAG en un dispositivo móvil inteligente. Figura 20: Diseño responsive (diseño web adaptable) 4.5.3. Interfaces del buscador b En la siguiente Interfaz se puede observar un submenú que consta de un botón para el buscador básico y otro para el buscador avanzado. los recursos bibliográficos de la BAG y un autocompletado búsqueda para dar sugerencias y ayuda al usuario a completar su búsqueda autocompletado como el buscador tutores académicos, editoriales, año, cota, la búsqueda también se puede realizar por buscador también realiza la búsqueda po una funcionalidad y un servicio como requerimiento adicional en el Trabajo Especial de Grado para poder leer el código de barra de los recursos bibliotecarios m BAG posee. Capítulo IV Marco Aplicativo 62 (diseño web adaptable) del sitio web de la BAG en un dispositivo móvil del buscador básico y avanzado Interfaz se puede observar un submenú que consta de un botón para el buscador básico y otro para el buscador avanzado. El buscador básico posee un campo para buscar los recursos bibliográficos de la BAG y un autocompletado en la Figura 21. que realiza una previa a dar sugerencias y ayuda al usuario a completar su búsqueda autocompletado como el buscador realizan las búsquedas por los campos títulos, autores, jurados, tutores académicos, editoriales, año, cota, materias, entre otros campos. Al realizar el despli la búsqueda también se puede realizar por reconocimiento de palabras. Cabe destacar, que este buscador también realiza la búsqueda por el ID del ejemplares de libros, por lo cual se tuvo realizar onalidad y un servicio como requerimiento adicional en el Trabajo Especial de Grado para poder leer el código de barra de los recursos bibliotecarios mediante un lector óptico de barra que la Capítulo IV Marco Aplicativo en un dispositivo móvil inteligente. Interfaz se puede observar un submenú que consta de un botón para el un campo para buscar que realiza una previa a dar sugerencias y ayuda al usuario a completar su búsqueda. Tanto el títulos, autores, jurados, Al realizar el despliegue de Cabe destacar, que este r el ID del ejemplares de libros, por lo cual se tuvo realizar onalidad y un servicio como requerimiento adicional en el Trabajo Especial de Grado para diante un lector óptico de barra que la Capítulo IV Marco Aplicativo 63 Figura21: Interfaz del buscador básico y despliegue de autocompletado. En la Figura 22, se muestra el despliegue de los recursos en el buscador básico, en el cual también se realiza la búsqueda por reconocimiento de palabra. Seguidamente se despliega un mensaje del número de recursos encontrados y una paginación indicando en el número de página que el usuario está viendo. En la tabla se muestra datos básicos como la cota, título, autor, tipo de recurso y el año. También se permite la selección múltiple de recursos para realizar acciones que serán explicadas más adelante. Capítulo IV Marco Aplicativo 64 Figura 22: Vista del despliegue de recursos en el buscador básico. En la Figura 23, se muestra el buscador avanzado, en el cual se tiene un submenú mediante el cual se puede filtrar por recursos. Al contar con este tipo de filtro, automáticamente se colocan los campos que le competen al tipo de recurso, esto marca la diferencia en cuanto a otros buscares avanzados de otros módulos de consultar existentes en donde mezclan los campos. También se permite filtrar la búsqueda por ubicación que corresponde a las Bibliotecas como la Biblioteca Alonso Gamero (BAG), Biblioteca Janis Racenis (IZET), Biblioteca Dr. Nikitta Czyhrinciw (ICTA), Biblioteca de Postgrado de la Escuela de Computación y la Biblioteca del IBE, ente otras permitiendo futuros registros de otras bibliotecas. En cuanto a las dependencias de la Facultad de Ciencias se puede consultar por la Escuela de Computación, Química, Física, Matemática, Biología, Geoquímica, el Instituto de Zoología y Ecología Tropical (IZET), Instituto de Ciencia y Tecnología de Alimentos (ICTA) y el Instituto de Biología Experimental, inicialmente para poder buscar los Trabajos Especiales de Grado por dependencias. El presente buscador tiene la facilidad de poder filtrar los recursos por un rango de años y poder especificar cuantos recursos se desea desplegar por página. Este buscador cuenta con una función que marca la diferencia a los otros OPAC’s con Capítulo IV Marco Aplicativo 65 respecto a los campos fijos y no dinámicos, al contrario el nuevo buscador de la BAG puede generar campos de búsqueda dinámicamente, así como también poder eliminarlos. Figura 23: Vista del buscador avanzado 4.5.4. Ventana modal de consulta de un recurso En la Figura 24, se aprecia una ventana modal en la cual una vez seleccionado un recurso, se muestra la información del mismo incluyendo la cantidad de ejemplares que este posee y la cantidad de ejemplares disponibles. En la parte superior izquierda se proveen de un conjunto de acciones para que los usuarios, las cuales son las siguientes: descargar el recurso en formato de documento portable (.pdf), enviar por correo electrónico y generar el código QR del recurso. Capítulo IV Marco Aplicativo 66 Figura 24: Ventana modal de la información un recurso. 4.5.5. Acciones de funcionalidades al seleccionar recursos. El Módulo de Consulta provee de un conjunto de acciones habilitadas cuando son seleccionados uno o más recursos al ser listados o al desplegar un recurso consultado. Estas acciones corresponden a descargar el recurso en .pdf, enviar por correo electrónico, generar código QR y agregar a preferencias de préstamos. En la parte superior izquierda en el recuadro resaltado de color verde de la Figura 25, se muestran las acciones de funcionalidad mencionadas anteriormente. Capítulo IV Marco Aplicativo 67 Figura 25: Acciones de funcionalidades de recursos. • Descargar PDF: Esta funcionalidad permite descargar la información del recurso consultado en un formato de documento portable (.pdf). En la Figura 26, se ilustra el formato en que es descargado la ficha bibliográfica. Capítulo IV Marco Aplicativo 68 Figura 26: Formato en documento pdf descargado de la información de recursos consultados. • Enviar recurso por correo electrónico: Permite enviar la información de un recurso o de varios recursos seleccionados a uno o más correos electrónicos. A continuación se muestra en la Figura 27, el formulario de correos en donde se suministra los correos electrónicos con la opción de borrar campos de correos o generar nuevos campos dinámicamente. En la Figura 28, se muestra el formato del correo que es enviado con éxito. Cabe destacar, cuando el usuario está autenticado no necesita suministrar el correo debido a que el sistema le provee del correo en el formulario con la posibilidad de agregar nuevos correos si el usuario lo requiere. Capítulo IV Marco Aplicativo 69 Figura 27: Envío exitoso de correo electrónico. Figura 28: Formato del correo electrónico de un recurso. Capítulo IV Marco Aplicativo 70 • Generar código QR: Esta función se encarga de generar un código QR de un recurso o generar varios códigos sobre recursos seleccionados y mostrarlos en un modal. Una vez se muestra una imagen que tiene el código, este código está asociado a una ruta que realiza la petición RESTful al servidor, y la respuesta del servidor es un documento portable (.pdf) con la información del recurso. Para poder completar esta acción y obtener los resultados esperados, se debe tener instalada una aplicación llamada QR Droid en teléfonos inteligentes con sistema operativo Android o iOS, esta aplicación tiene como función escanear el código de la imagen y luego enviar la petición asociada al QR, y el resultado generado es la información de los recursos seleccionado en un formato PDF. En la Figura 29, se muestra la generación de código QR de uno o más recursos consultados. Figura29: Código QR generado para un recurso y para varios recursos seleccionados • Descargar recurso en texto completo: Uno de los requerimientos por parte de la BAG fue que se pudieran catalogar y descargar tesis y libros en texto completos desde el OPAC. Esta opción se muestra como un botón en el modal que se despliega el recurso previamente consultado, en caso de que dicho recurso esté disponible en un documento o procesador de texto como. Capítulo IV Marco Aplicativo 71 Figura 30: Documento de Trabajo Especial de Grado en texto completo. • Agregar a preferencias: Esta acción consiste en un servicio web que se estableció y se acordó con el Módulo de Préstamos para que el usuario previamente autenticado, al momento de consultar un recurso desde del OPAC pueda también agregar las preferencias de recursos de usuario y automáticamente aparecen en el Módulo de Préstamos. Figura 31: Confirmación de agregación de preferencias de un recurso. Capítulo IV Marco Aplicativo 72 Figura 32: Preferencia de un recurso agregada al Módulo de Préstamos. 4.5.6. Interfaz del buscador de índices de recursos por títulos o autores En la siguiente Figura 33, se muestra el buscador de índices de recursos por títulos o autores. Este buscador permite generar un listado de títulos o recursos mostrando el número recursos que éstos poseen, filtrando por el tipo de recurso y por la letra del abecedario que empieza, así como también filtrando el número de títulos o autores que el usuario desee que aparezcan en el despliegue resultados. Luego de generarse el listado de índice, se muestra el número de recursos que tienen dicho título o autor y al seleccionarlo se muestra una sub-tabla con los recursos respectivos. Capítulo IV Marco Aplicativo 73 Figura 33: Interfaz de índices por títulos o autores. Capítulo IV Marco Aplicativo 74 4.6. Pruebas realizadas y Resultados Pruebas Durante las etapas de desarrollo del Trabajo Especial de Grado, se llevaron a cabo pruebas de funcionalidades de la aplicación con el objetivo de verificar el comportamiento de la aplicación y ver si se estaban dando soluciones a los requerimientos expuestos por la BAG. Cada cierto período de dos semanas se iban realizando reuniones la Profesora y Tutora Yusneyi Carballo Barrera y con la Profesora Carmen Marrero (actual directora de la BAG) junto al personal bibliotecario. En cada una de las reuniones se realizaban correcciones y sugerencias que eran inmediatamente incorporadas al desarrollo, entre ellas se realizaron correcciones en cuanto al autocompletado y el despliegue de las búsquedas, campos de búsquedas y reestructuración de tablas para dar soluciones a las dependencias y bibliotecas de la Facultad de Ciencias, también se llevaron a cabo mejoras en la interfaces de usuario. En cada una de las reuniones los resultados fueron muy positivos y fructíferos ya que estaban dando soluciones a la BAG de forma efectiva y la comunicación con la Profesora Yusneyi fue muy fluida, al mismo sus sugerencias, consejos y recomendaciones dieron gran avance al proyecto. En algunas reuniones se habló con el personal de la BAG en cuanto a la integración del código lector de barra que poseen. Este lector consiste en un dispositivo de entrada mediante el cual se encarga de leer y decodificar los códigos de barras de los ejemplares o recursos bibliográficos. Posteriormente, se llevó a cabo una reunión para poder realizar pruebas y ver si era factible integrar el dispositivo con el Módulo de Consulta. Efectivamente, luego de la reunión fue afirmativo el hecho de poder integrarlo con la aplicación, de esta forma, se planificó una próxima reunión para la cual, se realizó la funcionalidad y un servicio en la aplicación para poder interactuar con el lector de barra, en dicha reunión se realizaron las pruebas respectivas con algunos ejemplares y la búsqueda fue exitosa, solo con escanear el código de barra. Cabe destacar, que la metodología ágil de desarrollo Scrum tuvo un papel importante en el desarrollo del proyecto, ya que permitió gestionar el tiempo y planificación en cuanto al desarrollo de funcionalidades de servicios webs e integración con el Módulo de Préstamos con el cual se realizó un desarrollo en paralelo logrando resultados exitosos y trabajando en equipo para alcanzar Capítulo IV Marco Aplicativo 75 los objetivos en común y sobre todo gracias a la constancia en el desarrollo que demanda la metodología de desarrollo de software. Para las pruebas de aceptación se realizó un cuestionario, el cual es ilustrado en el Anexo A. Esta prueba fue realizada a personas del área de la computación, algunas personas que no son del área y a estudiantes que hacen uso normalmente de la biblioteca. El objetivo del conjunto de preguntas del cuestionario es saber la opinión de forma general sobre las funcionalidades del Módulo de Consulta, así como el diseño y la usabilidad de la aplicación. De esta forma, se lograron obtener opiniones positivas por parte de las personas encuestadas, dando posibilidad de realizar mejoras tanto en el presente módulo y para futuros Trabajos Especiales de Grado que puedan incorporarse en este excelente proyecto. Resultados En cuanto al desarrollo del proyecto se realizó una reestructuración, organización de la base de datos, así como una limpieza de datos de forma parcial debido a la redundancia que se presentaba anteriormente. Se desarrolló un buscador simple, avanzado, un buscador de índices de títulos o por autores. Adicionalmente se realizaron un conjunto de funcionalidades sobres los recursos bibliográficos como las siguientes: descargar en un documento de visualización de pdf, enviar por correo electrónico, generación de código QR, descargar recursos en texto completo, y agregación recursos a preferencias préstamos de usuarios que se estableció un servicio web que provee el Módulo de Préstamos, y así mismo el presente Módulo de Consulta le suministró servicios web de búsqueda o consulta al Módulo de Préstamos. Se realizó un autocompletado en las búsquedas para dar sugerencias a los usuarios sobre las consultas que realizan. Al mismo tiempo se realizó una interfaz responsive (diseño web adaptable) para que la interfaz se pueda adaptar a la pantalla de cualquier dispositivo. Cabe destacar, que también se dieron soluciones las dependencias de la Facultad de Ciencias y a las otras bibliotecas. Se utilizó un cuestionario como herramienta para realizar las pruebas y obtener resultados según la opinión de los usuarios. Se realizó el cuestionario a un total de 20 personas de las cuales 5 son desarrolladores de software y 15 usuarios comunes. Las preguntas estuvieron asociadas a funcionalidades de la aplicación en cuantos aspectos de accesibilidad y usabilidad del sistema. Las opciones de respuestas para la calificación estuvieron en un rango de 1 a 5 para cada pregunta, Capítulo IV Marco Aplicativo 76 siendo 1 el de más baja efectividad y 5 el de mayor efectividad. Los resultados obtenidos permitieron poder realizar un conjunto de gráficas por cada pregunta realizada en función de la cantidad de personas y el rango. Los resultados obtenidos fueron muy positivos, ya que en la mayoría de las respuestas estuvieron posicionadas en valores mayores de efectividad del rango establecido, más de la mitad de las personas en cada una de las preguntas posicionaron sus respuestas según el rango de efectividad en el valor 5. En el Anexo B, se puede observar los resultados obtenidos a partir de respuestas del cuestionario realizado a los usuarios. Conclusiones y Recomendaciones 77 Conclusiones, Recomendaciones y Trabajos Futuros Gracias al auge de los Catálogos de Acceso Público en Línea (OPAC), los usuarios pueden consultar recursos bibliográficos de forma fácil y accesible, haciendo uso de buscadores básicos o buscadores avanzados que hacen más específicas las consultas. El Módulo de Consulta de una biblioteca juega un papel importante dentro de los procesos que se llevan a cabo en una biblioteca, permitiendo el acceso de los usuarios a los recursos bibliotecarios desde cualquier parte de la red de redes (Internet) y representan una gran parte importante de la cara e imagen de la biblioteca virtual. Para el presente Trabajo Especial de Grado se desarrolló del Módulo de Consulta del Catálogo de Acceso Público en Línea (OPAC) de la Biblioteca Alonso Gamero de la Facultad de Ciencias, Universidad Central de Venezuela. La Biblioteca Alonso Gamero por parte de la Profesora Carmen Marrero expuso un conjunto de problemas y debilidades que el sistema Alejandría presentaba y un conjunto de requerimientos, en base a esto con este Trabajo Especial de Grado se logró dar respuestas a estos requerimientos y dar soluciones a problemas y debilidades que la BAG presentaba. El desarrollo del módulo en base a la implementación estuvo basado en un conjunto de tecnologías actuales que permitiendo el desarrollo eficiente y efectivo del Módulo de Consulta. Se utilizó el Framework (marco de trabajo) Laravel 4 PHP para el lado del servidor y el framework AngularJS para el lado del cliente. La aplicación está basada en un enfoque frontend y backend con la realización de peticiones a servicios web mediante API’s RESTful que se estableció desde el lado del servidor, de esta forma, futuras aplicaciones de la Facultad de Ciencias o de la comunidad universitaria podrán realizar peticiones y hacer uso del Módulo de Consulta, así como cualquier dispositivo. El uso de la metodología ágil de desarrolló Scrum tomó un papel fundamental en desarrollo del proyecto al facilitar la organización de tareas, así como a la planificación en tiempo y la interacción con el cliente. Con respecto a los resultados obtenidos a partir de las pruebas que se realizaron sobre la aplicación, fueron positivos ya que se cumplieron con los objetivos, requerimientos y soluciones a problemas y dificultades que la BAG presentaba, pudiendo así, realizar mejoras en futuros Trabajos Especiales de Grado. Conclusiones y Recomendaciones 78 Se logró alcanzar los objetivos propuestos para el desarrollo del proyecto, cumpliendo con los requerimientos definidos, gracias a Dios y al seguimiento, perseverancia, constante trabajo y aplicando todos los conocimientos obtenidos en la carrera de la Escuela de Computación de la Facultad de Ciencias, Universidad Central de Venezuela. Este Trabajo de Grado fue un gran meta y fructífera al contribuir con nuestra Casa de Estudios de Vence las Sombras, la Universidad Central de Venezuela, por haber aportado los conocimientos y un gran nivel de crecimiento profesional. Trabajos Futuros Para Trabajos futuros es recomendable realizar los siguientes ítems: • Incrementar el desarrollo del sitio web mediante la implementación de un Sistema Manejador de Contenido. • Agregar aspectos de sociabilidad. • Seguir el enfoque frontend y backend. • Utilizar el conjunto de API’s RESTful de la aplicación. • Realizar la aplicación móvil de la BAG. • Dar seguimiento a pasantes para que realicen de forma correcta la catalogación de recursos futuros, así como la actualización de recursos. Referencias Bibliográficas 79 Referencias Bibliográficas Camargo, J. y Uzcátegui, A. (2014). Análisis de las principales limitaciones de los portales web de la Biblioteca Central y Biblioteca Virtual pertenecientes a la Gerencia de Información, Conocimiento y Talento de la Universidad Central de Venezuela orientado al diseño uniforme del portal “Biblioteca Central en línea”. Trabajo de Seminario. Universidad Central de Venezuela. Caracas. Paz Monsalve, Alvaro J. (2014). Análisis de requerimientos para el Módulo de Consulta del “Catálogo de Acceso Público en Línea (OPAC)” de la Biblioteca Alonso Gamero, Universidad Central de Venezuela. Trabajo de Seminario de Seminario. Universidad Central de Venezuela. Caracas. Quintana, N. y Guzmán, H. (2012). Desarrollo del Módulo “Libros” del Proyecto Biblioteca Virtual Musicológica “Juan Meserón”, Escuela de Artes de la Universidad Central de Venezuela. Trabajo Especial de Grado. Licenciatura en Computación. Universidad Central de Venezuela. Caracas. Gamboa, María (2014). Desarrollo de los Módulos Iconografía Musical, Música Impresa y Música Manuscrita del Proyecto Biblioteca Virtual MusicológicaJuan Meserón Escuela de Artes de la Universidad Central de Venezuela. Trabajo Especial de Grado. Licenciatura en Computación. Universidad Central de Venezuela. Caracas. Marqués, M (2011). Base de Datos. Primera Edición. Castellón de la Plana: Sapentía. Scott W. Ambler. (2002) Agile Modeling: Effective Practices for EXtreme Programming and the Unified Process. Silberschatz, A.; Korth, H. y Sudarsahn, S. (2002). Fundamentos de Bases de Datos. Cuarta Edición. Madrid: Mc Graw Hill. Referencias de Internet Concepto de Biblioteca. Real Academia Española. (Consulta realizada el 18 de Enero de 2015). Disponible en: http://lema.rae.es/drae/?val=biblioteca HÍPOLA, Pedro, VARGAS, Benjamín y SENSO, José. Bibliotecas digitales: situación actual y problemas. (Consulta realizada el 15 de Enero de 2015). Disponible en:http://www.elprofesionaldelainformacion.com/contenidos/2000/abril/2.pdf LAMARCAR, María. Del catálogo tradicional al catálogo en línea. Tesis doctoral, Universidad Complutense de Madrid. (Consulta realizada el 18 de Enero de 2015). Disponible en: http://www.hipertexto.info/documentos/catalogo.htm Referencias Bibliográficas 80 LAMARCAR, María. Tipos de Buscadores. Tesis doctoral, Universidad Complutense de Madrid. (Consulta realizada el 03 de Mayo de 2015). Disponible en: http://www.hipertexto.info/documentos/tipos_buscador.htm Laravel. Documentación del Framework (marco de trabajo) Laravel 4 PHP. (Consulta realizada desde 2 de Diciembre de 2012 hasta 15 de Abril de 2015). Disponible en: http://laravel.com/docs/5.0. Scrum. Página oficial de Scrum. (Consulta realizada el 24 de Enero de 2015). Disponible en: http://www.scrum.org/ Maestros del Web. ¿Qué son las bases de datos. (Consulta realizada 2 de Febrero de 2015). Disponible en: http://www.maestrosdelweb.com/que-son-las-bases-de-datos/ OPAC de la Biblioteca de la Universidad Politécnica de Cartagena. (Consulta realizada el 03 de mayo de 2015). Disponible en: http://www.bib.upct.es/index.php/colecciones/catalogo-opac Patricio Letelier, María Carmen Penadés. “Metodologías ágiles para el desarrollo de software: eXtremeProgramming (XP)”. Departamento de Sistemas Informáticos y Computación (DSIC), Universidad Politécnica de Valencia (UPV). . (Consulta realizada el 03 de mayo de 2015). Disponible en: http://www.cyta.com.ar/ta0502/v5n2a1.htm PostgreSQL. Sobre PostgreSQL. (Consulta realizada el 5 de Febrero de 2015). Disponible en: http://www.postgresql.org.es/sobre_postgresql Referencias legales: Ley de Infogobierno. Gaceta Oficial N° 40.274, de fecha 17 de Agosto de 2014 Anexo A. 81 Anexos Anexos 82 Anexo B. Anexos 83 Anexos 84 Anexos 85