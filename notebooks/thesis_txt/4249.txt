UNIVERSIDAD CENTRAL DE VENEZUELA Dedicatoria UNIVERSIDAD CENTRAL DE VENEZUELA FACULTAD DE CIENCIAS ESCUELA DE COMPUTACIÓN CENTRO DE ENSEÑANZA ASISTIDA POR COMPUTADOR - CENEAC Evaluador de Criterios de Accesibilidad Web para pautas relacionadas con Discapacidad Visual y Discapacidad Motora Trabajo Especial de Grado presentado ante la Ilustre Universidad Central de Venezuela por la Bachiller María Gabriela Acosta Vásquez C.I. V-17.514.329 Tutora: Profa. Yusneyi Y. Carballo Barrera Caracas, Noviembre de 2014 Dedicatoria Dedico este Trabajo Especial de Grado a mis padres, principalmente por su apoyo y amor incondicional. A mi papá por ser el guardián de mis pasos y garante de mi bienestar, a mi mamá por ser la promotora de mis sueños y soporte fundamental, a mi tía, abuela y hermana por siempre creer en mí, a mi hermano y abuelo porque hasta el momento en el que me acompañaron siempre me alentaron. A las cuatro bendiciones de mi casa, porque sencillamente llenan de alegría nuestros días y por sobre todas las cosas se lo dedico a Dios por iluminar cada uno de mis pasos. Agradecimientos En primer lugar agradezco a Dios por llenarme de fuerza y darme la sabiduría necesaria cada vez que lo necesité, por acompañarme y no desampararme en cada reto superado y así bendecirme cada día de mi vida. A mi papá por esforzarse día a día para que nada me falte y así facilitar el camino que me trajo hasta este punto, apoyándome incondicionalmente. A mi mamá por ser la mujer más increíble del universo entero, con su amor ilimitado y cuidados inigualables que hacen de mí paso por la vida un momento inigualable. A mi tía Katy por creer en mi por sobre todas las cosas y alentarme en cada momento para llegar a este punto. Uno de sus deseos más anhelados está llegando con este TEG. A mi abuela por cada una de sus oraciones para que dios me iluminara el camino. A mi hermana, hermano y cuñado por regalarme esos 4 nenes que alegran mi existencia. A mi tío Manuel Falcón, por adentrarme en esta profesión y con paciencia enseñarme miles de cosas útiles para mi carrera. A Ricardo, Karla, Kelly, Joel, Mafer y Adrián por ser esos amigos de mi etapa universitaria que siempre estuvieron en las buenas y en las malas. A Recrea, Figsocial y Team Work, porque gran parte de mi formación profesional las adquirí con ellos y esas oportunidades de vincular mi carrera con mi pasión hicieron que mis trabajos sean increíbles. A mi tutora, Yusneyi Carballo Barrera, por tenderme la mano cuando ni siquiera me conocía y darme la oportunidad de realizar este trabajo, teniendo toda la paciencia del mundo cada vez que mi trabajo colmaba mi tiempo, brindándome en cada momento su conocimiento con la mejor disposición acompañada de una sonrisa y sus correos oportunos lleno de infinitos consejos para lograr esta meta en conjunto. A mi casa de estudios, la Universidad Central de Venezuela, a la Escuela de Computación de la Facultad de Ciencias y al CENEAC por brindarme la oportunidad de aprender y vencer las sombras, ser Ucevista es todo un sueño cumplido!!!. A todos mi infinito aprecio y gratitud! Resumen Universidad Central de Venezuela Facultad de Ciencias Escuela de Computación Centro de Enseñanza Asistida por Computador – CENEAC Trabajo Especial de Grado Título: Evaluador de Criterios de Accesibilidad Web para pautas relacionadas con Discapacidad Visual y Discapacidad Motora Autor: María Gabriela Acosta Vásquez Unidad de Investigación: Tecnologías Educativas. Tutora: Profa. Yusneyi Carballo Barrera Fecha de presentación: Noviembre 2014 Resumen El acceso a la información en la Web constituye un factor importante para los usuarios, a medida que pasa el tiempo aparecen nuevas tendencias de desarrollo y diseño Web, marcando la diferencia con respecto a las anteriores, pero lamentablemente el avance de las nuevas tecnologías no se ha realizado de manera íntegra, ya que en ocasiones se olvidan detalles que marcan la diferencia entre las aplicaciones Web accesibles y las no accesibles. Es importante destacar la existencia de pautas bien definidas de accesibilidad Web que al aplicarlas ayudan a garantizar un grado de accesibilidad mayor en las aplicaciones Web, independientemente de padecer algún tipo de discapacidad, el hardware que posean o ubicación geográfica. Las pautas de accesibilidad surgen de iniciativas de la organización W3C1, los cuales, presentaron su propuesta con el objetivo de promover la idea de mejorar la accesibilidad Web, bajo el nombre de “Guías de Accesibilidad de Contenido Web”. En este TEG se presenta el proceso de desarrollo de una herramienta para la evaluación de accesibilidad Web encargada de verificar las pautas relacionadas con la discapacidad visual y discapacidad motora, enviando una petición HTTP a diversos servidores, incluyendo el validador de marcado X-HTML y de CSS de W3C que se encarga del análisis sintáctico, al culminar la evaluación, el usuario podrá leer las advertencias pertinentes de los errores detectados. Esta herramienta lleva por nombre EAW (Evaluador de Accesibilidad para sitios Web). Cabe destacar que el CENEAC2 inició esta investigación anteriormente con TEG del Licenciado Ronald Aguilera titulado “Desarrollo de una Herramienta para Verificación de Criterios de Accesibilidad en sitios Web – HEVAC”, del cual, se tomaron algunas recomendaciones para trabajos futuros al momento de desarrollar EAW. Palabras Clave: Accesibilidad, Discapacidad Visual, Discapacidad Motora, W3C, pautas de accesibilidad, PHP, CSS, X-HTML. 1 W3C (Consorcio World Wide Web): Consorcio encargado de la creación de estándares Web. 2 CENEAC Producciones C.A. Empresa de la Universidad Central de Venezuela dedicada al área de investigación y cursos de programación. Índices Índice Introducción ............................................................................................................................ i Capítulo I- El Problema ..................................................................................................... - 3 - 1.1- Planteamiento del Problema .....................................................................................- 3 - 1.2- Justificación para el Desarrollo de otro Evaluador de Accesibilidad ................................- 3 - 1.3- Objetivos ................................................................................................................- 4 - 1.4- Límites y Alcances ...................................................................................................- 5 - 1.5- Resultados Esperados del TEG ..................................................................................- 5 - Capítulo II – Marco Teórico ............................................................................................... - 6 - 2.1- Usabilidad y Accesibilidad Web ......................................................................................- 6 - 2.1.1- Principios de la Usabilidad Web ...................................................................................- 6 - 2.1.2- Beneficios de la Usabilidad .........................................................................................- 7 - 2.1.3- Accesibilidad Web .....................................................................................................- 7 - 2.1.4- Importancia de la Accesibilidad...................................................................................- 8 - 2.1.5- Accesibilidad Web y Discapacidad Visual ......................................................................- 9 - 2.1.6- Accesibilidad Web y Discapacidad Motriz .................................................................... - 12 - 2.1.7- Diseño Universal ..................................................................................................... - 13 - 2.2- Tiflotecnología ........................................................................................................... - 14 - 2.3- Normas UNE ............................................................................................................. - 15 - 2.4- Introducción a las Pautas de Accesibilidad Web ............................................................. - 16 - 2.4.1- Conformidad con WCAG 2.0 ..................................................................................... - 21 - 2.5- Herramientas para la evaluación de Accesibilidad Web ................................................... - 23 - 2.6- Ventajas y Limitaciones de los Evaluadores de Accesibilidad TAW, HERA Y HEVAC ............ - 33 - 2.7- Análisis no Automático de Pautas de Accesibilidad Web .................................................. - 34 - Capítulo III- Marco Metodológico y Desarrollo de la Herramienta .................................. - 36 - 3.1- Aplicaciones Web ....................................................................................................... - 36 - 3.2- Metodología de Desarrollo........................................................................................... - 37 - 3.2.1- Fases de la Metodología Ad-Hoc Implementada .......................................................... - 38 - 3.3- Casos de Uso ............................................................................................................ - 39 - 3.4- Documentación de los casos de uso ............................................................................. - 42 - 3.5- Componentes de la aplicación ..................................................................................... - 48 - 3.6- Diagrama de secuencias de la aplicación ...................................................................... - 50 - 3.7- Herramientas Tecnológicas para el Desarrollo de la Aplicación ........................................ - 54 - 3.7.1- Tecnologías del Lado del Cliente ............................................................................... - 55 - 3.7.2- Servidor ................................................................................................................. - 57 - 3.7.3- Tecnologías del Lado del Servidor ............................................................................. - 57 - 3.7.4- Sistema Manejador de Base de Datos ........................................................................ - 59 - 3.8- Fase de Codificación ................................................................................................... - 63 - 3.9- Navegabilidad de la herramienta ................................................................................. - 68 - 3.9- Consideraciones de diseño .......................................................................................... - 69 - 3.10- Cálculo de Resultados de la Evaluación y Estadísticas .................................................. - 76 - Capítulo IV – Pruebas y Resultados ................................................................................ - 78 - 4.1- Proceso de Pruebas .................................................................................................... - 78 - 4.1.1- Pruebas realizadas a las funcionalidades de la aplicación EAW ..................................... - 78 - 4.1.2- Evaluación de Accesibilidad ...................................................................................... - 93 - Índices 4.1.3- Pruebas de Usabilidad ............................................................................................. - 94 - 4.1.4- Uso de EAW y comparación con otras Herramientas.................................................... - 99 - 4.1.5- Evaluaciones realizadas con EAW ............................................................................ - 101 - Resultados, Conclusiones y Trabajos Futuros ............................................................... - 103 - Referencias Bibliográficas y Digitales ........................................................................... - 105 - Anexo 1 - Principios Básicos y Pautas WCAG 2.0 .......................................................... - 108 - Anexo 2 - Metodología Programación Extrema ............................................................. - 113 - Anexo 3 – Plataforma de desarrollo para la aplicación ................................................. - 117 - Anexo 4- Uso de la aplicación EAW para evaluar la accesibilidad en sitios Web ........... - 120 - Índices Índice de Ilustraciones Ilustración 1– Ejemplo de imagen no apta para personas daltónicas ......................................... - 11 - Ilustración 2– Logotipos del nivel de conformidad en aplicaciones Web...................................... - 22 - Ilustración 3– Página principal de TAW .................................................................................. - 24 - Ilustración 4– Uso del verificador de accesibilidad TAW............................................................ - 25 - Ilustración 5– Informe en HTML arrojado por el evaluador de accesibilidad TAW ........................ - 25 - Ilustración 6– Leyenda de iconos del evaluador de accesibilidad Web TAW ................................ - 26 - Ilustración 7– Informe del resultado clasificado según los cuatro principios ................................ - 27 - Ilustración 8– Parte de la interfaz de usuario de HERA ............................................................. - 28 - Ilustración 9– Tabla de resultados del evaluador de accesibilidad HERA ..................................... - 28 - Ilustración 10– Botones para revisar las pautas de accesibilidad en el evaluador HERA ............... - 29 - Ilustración 11– Criterio de accesibilidad de la pauta 12 mostrado en HERA ................................ - 29 - Ilustración 12– Página principal de HEVAC ............................................................................. - 30 - Ilustración 13– Página de resultados completados de HEVAC ................................................... - 31 - Ilustración 14– Página de resultados completos del análisis del Sitio Web .................................. - 32 - Ilustración 15– Patrón de diseño MVC .................................................................................... - 37 - Ilustración 16– Diagrama de casos de uso: “Evaluar Web según nivel de conformidad” ............... - 40 - Ilustración 17– Diagrama de casos de uso: “Evaluar Web según principio de accesibilidad” ......... - 41 - Ilustración 18– Diagrama de componentes ............................................................................. - 48 - Ilustración 19– Diagrama de secuencia para evaluación por principio de accesibilidad ................. - 51 - Ilustración 20– Diagrama de secuencia para revisar evaluación desde el historial ....................... - 52 - Ilustración 21– Diagrama de secuencia para actualizar evaluación del historial .......................... - 53 - Ilustración 22– Diagrama de secuencia para eliminar evaluación del historial ............................. - 54 - Ilustración 23– Diagrama Entidad – Relación de la aplicación ................................................... - 61 - Ilustración 24– Vista principal de la aplicación ........................................................................ - 63 - Ilustración 25– Vista para realizar una nueva evaluación ......................................................... - 64 - Ilustración 26– Orientación para el usuario al momento de realizar una nueva evaluación ........... - 64 - Ilustración 27– Opciones para el tipo de evaluación que se quiere realizar ................................. - 65 - Ilustración 28– Vista para mostrar el resultado de la evaluación ............................................... - 66 - Ilustración 29– Vista detallada de los resultados de la evaluación ............................................. - 67 - Ilustración 30– Diagrama de navegación del sitio Web ............................................................ - 69 - Ilustración 31– Formulario de evaluación de TAW y HEVAC ..................................................... - 69 - Ilustración 32– Opciones de tipos de evaluación de la aplicación............................................... - 70 - Ilustración 33– Botón de ayuda y campo para el nombre de la evaluación de EAW ..................... - 71 - Ilustración 34– Comparación de los datos, fecha y tipo de evaluación ....................................... - 71 - Ilustración 35– Comparación de las tablas de detalles de los criterios evaluados ........................ - 72 - Ilustración 36– Consejos para programadores para solventar incidencias de error ...................... - 72 - Ilustración 37– Comparación de los resultados del grado de accesibilidad de la página evaluada .. - 73 - Ilustración 38– Historial de evaluaciones realizadas ................................................................ - 73 - Ilustración 39– Captura de pantalla de la página evaluada mostrada al inicio del resultado.......... - 74 - Ilustración 40– Enlaces encontrados en la Web, y panel de botones de EAW .............................. - 74 - Ilustración 41– Información numérica de recursos evaluados ................................................... - 75 - Ilustración 42– Foro de la aplicación ...................................................................................... - 75 - Ilustración 43– Contadores de criterios aprobados y reprobados ............................................... - 76 - Ilustración 44– Cálculo del porcentaje de criterios aprobados y reprobados por etiqueta ............. - 76 - Índices Ilustración 45– Suma de todos los elementos evaluables dentro de la página............................. - 77 - Ilustración 46– Cálculo del grado de accesibilidad global del recurso ......................................... - 77 - Ilustración 47– Prueba de evaluación del Nivel de Conformidad “A” .......................................... - 78 - Ilustración 48– Resultado de prueba de evaluación del Nivel de Conformidad “A” ....................... - 79 - Ilustración 49– Resultado de prueba de evaluación del Nivel de Conformidad “A” ....................... - 80 - Ilustración 50– Resultado de prueba de evaluación del Nivel de Conformidad “AAA” ................... - 81 - Ilustración 51– Prueba de evaluación: Principios de Accesibilidad Perceptible y Comprensible ...... - 82 - Ilustración 52– Prueba de evaluación de Principios de Accesibilidad Perceptible y Comprensible ... - 83 - Ilustración 53– Prueba de evaluación de Principios de Accesibilidad Perceptible y Comprensible ... - 84 - Ilustración 54– Resultado de la prueba de Principios de Accesibilidad Operable y Robusto ........... - 85 - Ilustración 55– Validación de marcado de W3C del código mostrado en la ilustración 55 ............. - 86 - Ilustración 56– Listado de enlaces encontrados en la página analizada ...................................... - 86 - Ilustración 57– Formulario de evaluación para página perteneciente a sitio Web que ya evaluado - 87 - Ilustración 58– Listado de enlaces encontrados en la página analizada con un enlace ya evaluado- 88 - Ilustración 59– Ubicación del botón para imprimir resultado ..................................................... - 89 - Ilustración 60– Comentarios de los resultados ........................................................................ - 89 - Ilustración 61– Realizar comentarios de los resultados ............................................................ - 90 - Ilustración 62– Historial de evaluaciones realizadas ................................................................ - 90 - Ilustración 63– Botón Visitar Web ......................................................................................... - 91 - Ilustración 64– Botón Actualizar Web .................................................................................... - 91 - Ilustración 65– Botón Eliminar Evaluación .............................................................................. - 92 - Ilustración 66– Prueba de accesibilidad de EAW utilizando versión espejo .................................. - 93 - Ilustración 67– Gráfico de resultados de la pregunta 1 del cuestionario .................................... - 94 - Ilustración 68– Gráfico de resultados de la pregunta 2 del cuestionario .................................... - 95 - Ilustración 69– Respuestas abiertas del cuestionario de las pruebas de usabilidad de EAW .......... - 95 - Ilustración 70– Respuestas abiertas del cuestionario de las pruebas de usabilidad de EAW .......... - 95 - Ilustración 71– Respuesta abierta del cuestionario de las pruebas de usabilidad de EAW ............. - 96 - Ilustración 72– Gráfico de resultados de la pregunta 4 del cuestionario .................................... - 96 - Ilustración 73– Gráfico de resultados de la pregunta 5 del cuestionario .................................... - 96 - Ilustración 74– Respuesta abierta del cuestionario de las pruebas de usabilidad de EAW ............. - 97 - Ilustración 75– Respuesta abierta del cuestionario de las pruebas de usabilidad de EAW ............. - 97 - Ilustración 76– Gráfico de resultados de la pregunta 8 del cuestionario .................................... - 98 - Ilustración 77– Gráfico de resultados de la pregunta 9 del cuestionario .................................... - 98 - Ilustración 78– Respuesta abierta del cuestionario de las pruebas de usabilidad de EAW ............. - 99 - Ilustración 79– Iconos de WAMP Server ............................................................................... - 118 - Ilustración 80– Resultado de la evaluación de la Web de la Escuela de Computación de la UCV . - 121 - Ilustración 81– Resultado de la evaluación de la Web de la Escuela de Biología de la UCV ......... - 123 - Ilustración 82– Resultado de la evaluación de la Web de la Escuela de Matemática de la UCV .... - 125 - Ilustración 83– Resultado de la evaluación de la Web de Oracle Corporation ............................ - 127 - Ilustración 84– Resultado de la evaluación de la Web de Java ................................................ - 129 - Ilustración 85– Resultado de la evaluación de la Web de Laravel ............................................ - 131 - Ilustración 86– Resultado de la evaluación de la Web del CNE ................................................ - 133 - Ilustración 87– Resultado de la evaluación de la Web del Seniat ............................................. - 135 - Ilustración 88– Resultado de la evaluación de la Web de la Gobernación de Miranda ................. - 137 - Índices Índice de Tablas Tabla 1– Tabla comparativa de los evaluadores de accesibilidad TAW, Hera y HEVAC .................. - 33 - Tabla 2– Documento de caso de uso 1 ................................................................................... - 42 - Tabla 3– Documento de caso de uso 2 ................................................................................... - 42 - Tabla 4– Documento de caso de uso 3 ................................................................................... - 43 - Tabla 5– Documento de caso de uso 4 ................................................................................... - 43 - Tabla 6– Documento de caso de uso 5 ................................................................................... - 44 - Tabla 7– Documento de caso de uso 6 ................................................................................... - 44 - Tabla 8– Documento de caso de uso 7 ................................................................................... - 45 - Tabla 9– Documento de caso de uso 8 ................................................................................... - 45 - Tabla 10– Documento de caso de uso 9 ................................................................................. - 46 - Tabla 11– Documento de caso de uso 10 ............................................................................... - 46 - Tabla 12– Documento de caso de uso 11 ............................................................................... - 47 - Tabla 13– Componentes de la aplicación ................................................................................ - 49 - Tabla 14– Leyenda de comentarios de la ilustración 28............................................................ - 65 - Tabla 15– Tabla comparativa de funcionalidades de aplicaciones ............................................ - 100 - Tabla 16– Tabla comparativa con el grado de accesibilidad de sitios Web evaluados ................. - 101 - Introducción i Introducción La accesibilidad de los sitios Web está relacionada con la capacidad de acceso a sus contenidos por los usuarios, independientemente de las limitaciones que pueda presentar el individuo (discapacidad) o de las limitaciones que se deriven del contexto de uso tecnológico o ambiental. El Consorcio World Wide Web (W3C), es una comunidad internacional donde las organizaciones miembro trabajan conjuntamente para desarrollar estándares Web, el cual, creó la institución de referencia a nivel mundial WAI (Iniciativa de Accesibilidad a la Web), con la idea de hacer más accesible para todos los usuarios el contenido Web. Para desarrollar código Web accesible, la WAI publicó en el año 1999 las Web Content Accessibility Guidelines 1.0 (WCAG 1.0), también conocidas como Pautas de Accesibilidad del Contenido en la Web 1.0, las cuáles, están diseñadas para que los desarrolladores tengan a disposición una serie de criterios que los ayuden a crear “Diseño accesible”. En el año 2008 se publicó la última versión hasta el momento de las Pautas de Accesibilidad del Contenido en la Web 2.0, las mismas pasaron a ser estándar internacional en el año 20123. WCAG 2.0, está conformado por catorce (14) pautas, las mismas, explican cómo hacer accesibles los contenidos de la web para el acceso de personas con discapacidad. El fin principal de las pautas es promover accesibilidad. Con referencia a lo anterior, existen herramientas de validación y monitorización de la accesibilidad que se tomaron en cuenta como antecedentes para este TEG, como lo son, TAW4, HERA5 y HEVAC6, las cuales, tomando como referencia técnica las Pautas de Accesibilidad del Contenido en la Web (WCAG) en sus versiones 1 y 2 verifican la accesibilidad de los sitios Web. En el año 2012, el Licenciado Ronald Aguilera de la mano del CENEAC7 realizó su trabajo de investigación en el área, titulado Desarrollo de una Herramienta para Verificación de Criterios de Accesibilidad en sitios Web – Hevac, el cual, acompaño con el desarrollo de una aplicación, permite conocer el grado de cumplimiento de los requisitos de accesibilidad para los sitios Web, que apoyen a los usuarios que presentan algún tipo de discapacidad visual. En el referido trabajo, El autor destaca una serie de recomendaciones para investigaciones futuras en el área, las mismas, fueron tomadas en cuenta para el desarrollo de EAW (Evaluador de Accesibilidad para sitios Web), aplicación que se desarrolló en esta ocasión con el fin de continuar el trabajo de investigación del CENEAC y extender su alcance. Con este TEG, el objetivo es desarrollar un evaluador de accesibilidad Web dedicado a verificar las pautas de accesibilidad WCAG 2.0 relacionadas con la discapacidad visual y motora cuyo alcance pueda cubrir parte de las recomendaciones para trabajos futuros aportadas por el Licenciado Ronald Aguilera en su TEG. Tomando en cuenta, que la herramienta no verificara código JavaScript y sólo evaluara los criterios anteriormente mencionados. EAW, presenta como novedad para la investigación del CENEAC, la consideración de los criterios relacionados con la discapacidad motriz, sin omitir los de discapacidad visual incluidos en las verificaciones de HEVAC, e incluye también la evaluación de las Hojas de Estilo en Cascada (CSS) y la potencialización de la sociabilidad, la cual, se logra con una sección de comentarios para cada 3 ISO/IEC 40500:2012. 4 TAW (Test de Accesibilidad Web): Familia de herramientas para el análisis de la accesibilidad desarrolladas por la Fundación CTIC. 5 HERA (Hojas de Estilo para la Revisión de la Accesibilidad): Utilidad para revisar la accesibilidad desarrollada por SIDAR 6 HEVAC (Herramienta de Verificación de Accesibilidad): Evaluador de accesibilidad desarrollado por Ronald Aguilera 7 CENEAC (Centro de Enseñanza Asistida por Computador): Empresa de Productos y Servicios en el área de la informática y en particular en el campo de la Enseñanza Asistida por Computador de la Universidad Central de Venezuela. Introducción ii evaluación realizada. Además el usuario podrá evaluar diversas páginas pertenecientes al sitio web evaluado que conformen el primer nivel de enlaces disponibles. El desarrollo de la Herramienta EAW se apoya en una metodología de desarrollo ad-hoc utilizando en principio la Programación Extrema (XP) y los artefactos de notación UML en las etapas de análisis y diseño. Para facilitar la comprensión del lector, este documento está estructurado de la siguiente manera: CAPÍTULO 1: PRESENTACION DEL TRABAJO ESPECIAL DE GRADO. Describe el problema y la solución planteada, también se define el objetivo general, los objetivos específicos, el alcance y las limitaciones del presente trabajo de investigación. CAPÍTULO 2, MARCO TEÓRICO. Presenta los fundamentos conceptuales que sustentan el trabajo de investigación. El lector podrá leer una breve introducción del tema de accesibilidad y usabilidad Web, luego se exponen las necesidades de los usuarios que presentan algún tipo de discapacidad (especialmente visual y motriz en cuanto al manejo del ratón). También se encuentra una lista de criterios y pautas relacionadas con el apoyo que se les brinda a estas personas para mejorar sus experiencias al momento de navegar. CAPÍTULO 3, MARCO METODOLÓGICO Y DESARROLLO DE LAHERRAMIENTA. Presenta la metodología de desarrollo empleada, los lineamientos de diseño y los patrones de interacción utilizados para la solución. CAPITULO 4, PRUEBAS Y RESULTADOS. Describe las pruebas realizadas a la aplicación EAW y sus respectivos resultados detallando cada fase. Finalmente se encuentran las conclusiones, recomendaciones para futuros trabajos relacionados y las referencias bibliográficas y electrónicas consultadas durante la investigación. Capítulo I. - 3 - Capítulo I- El Problema En este capítulo podrá encontrar los motivos por los cuales se realizó la siguiente investigación, y por consiguiente, los objetivos tanto generales como específicos que se pretenden lograr en el transcurso del desarrollo del evaluador de accesibilidad Web. Además, se exponen los resultados que se esperan obtener, el alcance y público al cual está orientado. 1.1- Planteamiento del Problema En la actualidad se cuenta con cientos de aplicaciones Web disponibles en la red, en teoría, para todos los usuarios, pero ¿realmente todos los usuarios pueden disfrutar del contenido de la Web en su totalidad? La respuesta a esta pregunta lamentablemente es no, aunque algunos usuarios tengan la mejor disposición para navegar por la red y posean el hardware y software necesario, aún hay barreras que se deben superar, como es en el caso de personas con discapacidad visual y discapacidad motriz en lo que al manejo del ratón se refiere. El acceso a la información es un derecho del que todos debemos disfrutar, las personas con discapacidad visual y discapacidad motora, cuentan con una serie de herramientas de apoyo que les facilitan el acceso al contenido Web, como lo son los lectores de pantalla y amplificadores de caracteres en el caso de ceguera parcial y simuladores de ratones en el caso de personas con discapacidad motora, pero lamentablemente, aunque existan estas herramientas, mientras los desarrolladores Web no sometan sus aplicaciones Web a evaluadores de accesibilidad, que les indiquen las pautas que aún no cubren sus aplicaciones Web y cómo solventarlas, seguirán pasando por alto ciertos detalles que terminan afectando a este tipo de usuarios finales. Es muy común encontrar aplicaciones Web que no cumplen del todo con las pautas de accesibilidad necesarias. Sin embargo, este problema tiene solución, y está en manos de los desarrolladores Web al tomar en cuenta la existencia de pautas y criterios de accesibilidad existentes, desarrollados por el Consorcio World Wide Web (W3C). Durante el año 2012, el Licenciado Ronald Aguilera de la mano del CENEAC8 publicó su TEG, titulado “Desarrollo de una Herramienta para Verificación de Criterios de Accesibilidad en sitios Web – HEVAC9”. La herramienta cumplió con todas las funcionalidades expuestas en el alcance del mencionado TEG, pero la investigación puede continuar y extender su alcance, ya que aún faltaban diversas funcionalidades por incluir, muchas de las cuales, se nombran en las recomendaciones para trabajos futuros del TEG de Ronald Aguilera. El problema descrito, básicamente está relacionado con la extensión del alcance de la investigación que promueve el CENEAC. 1.2- Justificación para el Desarrollo de otro Evaluador de Accesibilidad Indiscutiblemente la información proporcionada por medio del internet debe estar a disposición de la mayor cantidad de personas posibles, más aún cuando vivimos en una sociedad que promueve la inclusión, es por ello que no se pueden descartar los usuarios que padecen algún tipo de discapacidad visual o motriz, por el contrario, los desarrolladores deben trabajar en pro de facilitar el acceso a la Web por parte de la mayor cantidad de usuarios. 8 CENEAC (Centro de Enseñanza Asistida por Computador): Empresa de Productos y Servicios en el área de la informática y en particular en el campo de la Enseñanza Asistida por Computador de la Universidad Central de Venezuela. 9HEVAC (Herramienta de Verificación de Accesibilidad): Evaluador de accesibilidad desarrollado por Ronald Aguilera Capítulo I. - 4 - Considerando que aún se puede extender el alcance de la investigación del Licenciado Ronald Aguilera de su TEG (Desarrollo de una Herramienta para Verificación de Criterios de Accesibilidad en sitios Web – HEVAC, 2012), y además, continuar con la investigación en el área de la accesibilidad Web que promueve el CENEAC, se desarrolló una nueva aplicación que toma en cuenta las recomendaciones para trabajos futuros que dejo por escrito Aguilera en el mismo trabajo, con el fin de agregar otras funcionalidades que no incluye HEVAC, de las cuales, algunas fueron ideadas por desarrolladores de aplicaciones comerciales como es el caso de TAW10 o HERA11. Un evaluador de accesibilidad Web dedicado a verificar específicamente criterios orientados al apoyo de este tipo de usuarios con discapacidad visual y motora favorece tanto a los desarrolladores orientándolos en lo que a posibles errores que puedan estar cometiendo al escribir su código se refiere, como también favorece a los usuarios que presentan discapacidad visual o motriz, ya que pueden ahorrar tiempo verificando antes de navegar en determinados sitios Web si cumplen con los criterios mínimos de navegación para su perfil de usuario. 1.3- Objetivos A continuación se presenta el objetivo general y los objetivos específicos que se pretenden alcanzar con este trabajo: Objetivo General Desarrollar una herramienta de evaluación de accesibilidad Web dedicada a verificar las pautas de accesibilidad WCAG12 2.0 relacionadas con la discapacidad visual y discapacidad motora. Objetivos Específicos 1- Analizar los principales estándares de accesibilidad Web existentes hasta el momento e identificar los criterios relacionados con el apoyo a personas que padecen de alguna discapacidad motora en cuanto al uso del ratón y personas con discapacidad visual. 2- Realizar pruebas de algunos evaluadores de accesibilidad Web existentes. 3- Desarrollar una herramienta de evaluación de criterios de accesibilidad Web relacionados con el apoyo de dificultades motoras referentes al uso del ratón y discapacidad visual. Dicha herramienta debe incluir la implementación del módulo de verificación de tecnología CSS y una sección de comentarios por cada evaluación para que los usuarios puedan opinar sobre los problemas presentados en las páginas evaluadas. 4- Realizar pruebas de accesibilidad, usabilidad y funcionalidad. 5- Probar la aplicación con un grupo de páginas seleccionadas previamente. 6- Documentar la investigación realizada. 10 TAW: (Test de Accesibilidad Web): Familia de herramientas para el análisis de la accesibilidad desarrolladas por la Fundación CTIC. 11 HERA: HERA (Hojas de Estilo para la Revisión de la Accesibilidad): Utilidad para revisar la accesibilidad desarrollada por SIDAR 12 WCAG - Pautas de Accesibilidad del Contenido en la Web. Capítulo I. - 5 - 1.4- Límites y Alcances El alcance de la herramienta desarrollada es el siguiente: - La aplicación tiene como objetivo orientar a los desarrolladores Web en cuanto al nivel de accesibilidad que puedan tener los diversos sitio Web que deseen evaluar, a su vez, también ayudará a las personas que asisten a los usuarios que presentan algún tipo de discapacidad visual o motriz al momento de seleccionar cuáles son las páginas que pueden navegar de manera más sencilla encontrando menor cantidad de límites de accesibilidad. - La aplicación está desarrollada con el framework Laravel de código abierto en lenguaje PHP en su versión 5.4.3, como framework de CSS se utilizó Bootstrap y para realizar las reiteradas pruebas durante el desarrollo se instaló el servidor local WAMPServer por incluir los cuatro elementos necesarios para un servidor Web: un sistema operativo (Windows), un manejador de base de datos (MySQL), un software para el servidor Web (Apache) y un software de programación script Web (PHP, Python o Perl), en este caso como se mencionó antes se utilizó como lenguaje de programación PHP. - La herramienta evalúa los criterios pertenecientes a las pautas citadas en la especificación WCAG 2.0. que están relacionadas con discapacidad visual y discapacidad motriz que puedan ser evaluadas de forma automática - La aplicación además de evaluar código HTML de las páginas sometidas a evaluación, también evalúa el código de las hojas de estilo en cascada CSS y almacena un historial de resultados para posteriores consultas por parte del usuario con la opción de actualizar la revisión. - Los usuarios pueden dejar su comentario en cada página previamente evaluada, lo cual les permitirá responder dudas ajenas o aclarar dudas emergentes. 1.5- Resultados Esperados del TEG Introducir una aplicación que permite evaluar el cumplimiento de criterios de éxito en sitios Web y de esta manera indicar el grado de accesibilidad que alcanzan, así como también, indica los criterios de éxito que no se cumplen y por lo tanto presentan problemas de accesibilidad. Por otro lado, a demanda del usuario se muestran exactamente los errores encontrados y así el desarrollador Web puede corregirlos si así lo desea, buscando con esto aumentar el grado de accesibilidad en sus sitios Web. El resultado arrojado inicialmente muestra la cantidad de errores encontrados, si el usuario desea conocer exactamente la naturaleza del problema y su ubicación podrá encontrarlo en el mismo reporte en las líneas inferiores. Cada etiqueta del HTML que presente problema según el resultado de la evaluación cuenta con su explicación, es decir, el usuario tiene la opción de visualizar exactamente el criterio incumplido clasificado por etiqueta y por principio de accesibilidad. El usuario tiene a su disposición un historial de páginas revisadas con la opción de eliminar el resultado o actualizar la evaluación de cada página sin necesidad de volver a registrarla. Al final del reporte el usuario puede tener acceso a la sección de comentarios dedicada a cada página Web evaluada previamente, en el cual, se pretende recopilar comentarios de los usuarios y así potenciar la sociabilidad. Como se puede apreciar, en este capítulo, se desea extender el alcance de la investigación del CENEAC en el área, tomando como punto de partida las recomendaciones para trabajos futuros que indicó el Licenciado Ronald Aguilera en su TEG titulado Desarrollo de una Herramienta para Verificación de Criterios de Accesibilidad en sitios Web – HEVAC, publicada en el año 2012, para lo cual, se desarrolló una aplicación que cubre parte de esas recomendaciones extendiendo con ello el alcance de la investigación en el CENEAC incluyendo en esta ocasión los criterios de accesibilidad orientados al apoyo de personas con discapacidad motriz. Capítulo II. - 6 - Capítulo II – Marco Teórico En este capítulo se pretende explicar de forma resumida todo lo referente al tema de la usabilidad y accesibilidad Web, abordando posteriormente los problemas que se encuentran al navegar a diario los usuarios que presentan algún tipo de discapacidad visual o motora en cuanto al uso del ratón. También están las pautas y criterios seleccionados que se le recomienda emplear a los desarrolladores para lograr aplicaciones Web de acceso universal y así evitar la exclusión de este tipo de usuarios. Al final se analizan algunas herramientas ya existentes que son utilizadas para la evaluación de accesibilidad Web. 2.1- Usabilidad y Accesibilidad Web La usabilidad es un atributo de calidad que se enfoca en la facilidad de navegación de las aplicaciones Web, buscando con ello que la interfaz de usuario sea intuitiva y cómoda para cualquier persona, lo cual, debe ser uno de los objetivos de cualquier aplicación Web. Todo usuario al acceder a un sitio Web espera encontrar la información deseada y ejecutar las acciones pertinentes de manera cómoda y sencilla, es justo aquí donde entra en juego la importancia del diseño de la aplicación y el nivel de dificultad que tenga en lo que a interacción se refiere. En la ISO13, definen la usabilidad de dos maneras: “La capacidad de un software de ser comprendido, aprendido, usado y ser atractivo para el usuario, en condiciones específicas de uso”. (ISO/IEC 9126). “Grado de eficacia, eficiencia y satisfacción con la que usuarios específicos pueden lograr objetivos específicos, en contextos de usos específicos”. (ISO/IEC 9241). Dada la definición anterior, se puede deducir que la usabilidad la componen tres tipos de atributos: - Los cuantificables de forma objetiva o Eficacia: Es cuando el usuario logra lo que quiere con el menor número de errores cometidos. o Eficiencia: Tiempo empleado por el usuario para lograr el objetivo. - Los cuantificables de forma subjetiva o Satisfacción de uso: Al interrogar al usuario, éste dará un feedback de la usabilidad percibida al interactuar con la aplicación. Dado punto anterior, una de las características importantes en las que se hizo énfasis al momento del desarrollo del evaluador de accesibilidad Web EAW fue la usabilidad. Se quiere que los usuarios al acceder al evaluador de manera intuitiva tengan idea de cómo ejecutar la evaluación, donde buscar los resultados y de qué manera conocer los criterios que presentaron problemas y su ubicación dentro del código fuente. Toda esta interacción con el sistema debe fluir de manera natural sin complicaciones. 2.1.1- Principios de la Usabilidad Web En el año 2006 Jakob Nielsen, estudió 249 problemas de usabilidad y a partir de ellos, diseñó lo que denominó las “reglas generales” o “Principios de la Usabilidad” para identificar los posibles problemas de usabilidad, los cuales, se describen a continuación: 1- Visibilidad del estado del sistema: el sistema siempre debería mantener informados a los usuarios de lo que está ocurriendo, a través de retroalimentación apropiada dentro de un tiempo razonable. 2- Relación entre el sistema y el mundo real: el sistema debería hablar el lenguaje de los usuarios mediante palabras, frases y conceptos que sean familiares al usuario, más que con términos 13 ISO: Acrónimo de la Organización Internacional de Normalización Capítulo II. - 7 - relacionados con el sistema. Seguir las convenciones del mundo real, haciendo que la información aparezca en un orden natural y lógico. 3- Control y libertad del usuario: hay ocasiones en que los usuarios elegirán las funciones del sistema por error y necesitarán una “salida de emergencia” claramente marcada para dejar el estado no deseado al que accedieron, sin tener que pasar por una serie de pasos. Se deben apoyar las funciones de deshacer y rehacer. 4- Consistencia y estándares: los usuarios no deberían cuestionarse si acciones, situaciones o palabras diferentes significan en realidad la misma cosa; siga las convenciones establecidas. 5- Prevención de errores: mucho mejor que un buen diseño de mensajes de error es realizar un diseño cuidadoso que prevenga la ocurrencia de problemas. 6- Reconocimiento antes que recuerdo: se deben hacer visibles los objetos, acciones y opciones, El usuario no tendría que recordar la información que se le da en una parte del proceso, para seguir adelante. Las instrucciones para el uso del sistema deben estar a la vista o ser fácilmente recuperables cuando sea necesario. 7- Flexibilidad y eficiencia de uso: la presencia de aceleradores, que no son vistos por los usuarios novatos, puede ofrecer una interacción más rápida a los usuarios expertos que la que el sistema puede proveer a los usuarios de todo tipo. Se debe permitir que los usuarios adapte el sistema para usos frecuentes. 8- Estética y diseño minimalista: los diálogos no deben contener información que es irrelevante o poco usada. Cada unidad extra de información en un diálogo, compite con las unidades de información relevante y disminuye su visibilidad relativa. 9- Ayudar a los usuarios a reconocer, diagnosticar y recuperarse de errores: los mensajes de error se deben entregar en un lenguaje claro y simple, indicando en forma precisa el problema y sugerir una solución constructiva al problema. 10- Ayuda y documentación: incluso en los casos en que el sistema pueda ser usado sin documentación, podría ser necesario ofrecer ayuda y documentación. Dicha información debería ser fácil de buscar, estar enfocada en las tareas del usuario, con una lista concreta de pasos a desarrollar y no ser demasiado extensa. (Nielsen, 2005) 2.1.2- Beneficios de la Usabilidad Según Roger S. Pressman en su publicación Ingeniería del software: un enfoque práctico la usabilidad tiene los siguientes beneficios: - Reducción del costo de aprendizaje - Disminución del costo de asistencia y asesorías para usuario - Optimización de los costos de diseño y mantenimiento de los sitios - Aumenta el prestigio del sitio Web y mejora la imagen. - Reduce el estrés de los usuarios, incrementa la satisfacción y la productividad. (Pressman, 2002) 2.1.3- Accesibilidad Web Cuando se habla de accesibilidad, se tiende a relacionar el término con ciertos sinónimos, como lo son la facilidad de acceso que se tenga a determinado lugar o información, que sea alcanzable, asequible, abordable, entre otras, que al fin y al cabo, engloban una misma característica, cualquier individuo, sin importar condición, podrá gozar de todos los beneficios ofrecidos sin mayor limitación. Si llevamos el término al ámbito Web, encontramos la necesidad de acceso a la información que tienen todos los usuarios, entre ellos encontramos a los que presentan algún tipo de discapacidad que no les permita disfrutar del todo, el contenido de determinada aplicación Web, por ejemplo, las personas con discapacidad visual no podrán saber de qué tratan las imágenes mostradas, a menos que el Capítulo II. - 8 - desarrollador Web se haya tomado la tarea de etiquetar el contenido de la foto, siguiendo con ello una de las pautas de accesibilidad propuestas por la W3C. Desde el momento en el que el desarrollador comienza a tomar la accesibilidad Web con la debida importancia que merece, se comienzan a derribar esas barreras, permitiéndole así, crear sitios Web flexibles que se acomoden a las diferentes necesidades y preferencias de los usuarios donde puedan navegar e interactuar libremente independientemente de sus limitaciones, con lo cual, se tiene un diseño centrado en el usuario sin exclusión alguna. El Consorcio World Wide Web (W3C), es una comunidad internacional donde las organizaciones miembro trabajan conjuntamente para desarrollar estándares Web, el cual, creó la institución de referencia a nivel mundial WAI (Iniciativa de Accesibilidad a la Web), con la idea de hacer más accesible el contenido Web para todos los usuarios. En el sitio web oficial del W3C se encuentra lo siguiente: “La accesibilidad Web significa que personas con algún tipo de discapacidad van a poder hacer uso de la Web. En concreto, al hablar de accesibilidad Web se está haciendo referencia a un diseño Web que va a permitir que estas personas puedan percibir, entender, navegar e interactuar con la Web, aportando a su vez contenidos. La accesibilidad Web también beneficia a otras personas, incluyendo personas de edad avanzada que han visto mermadas sus habilidad a consecuencia de la edad.” (Shawn, 2005). Dada la importancia de la accesibilidad, al momento de desarrollar el evaluador de criterios de accesibilidad EAW, también se tomó en cuenta la accesibilidad y la usabilidad de la herramienta para también poder cubrir las necesidades de usuarios que puedan padecer algún tipo de discapacidad visual o discapacidad motriz que deseen hacer uso de la misma. 2.1.4- Importancia de la Accesibilidad Entre las razones por las cuales la accesibilidad poco a poco se ha ido convirtiendo en una necesidad podemos encontrar las propuestas por la usabilidad Web como lo son la funcionalidad, utilidad y credibilidad y las razones éticas, sociales, políticas, económicas y sociales, las cuales se explican a continuación: - Sociales: Promueven la inclusión, ampliando la cantidad de usuarios beneficiados incluyendo a las personas con problemas de discapacidad, conexiones lentas o computadoras que no se encuentren en óptimas condiciones. - Éticas: el desarrollador no solo debe enfocar su atención a un grupo selecto de usuarios, lo correcto es diseñar y desarrollar pensando en el bienestar del mayor número de personas. - Políticas: Promueve la democracia al permitirle a los usuarios libre acceso a la interacción con la aplicación Web y a su vez dar plena libertad de gestión. - Legales: actualmente se cuenta con autoridades competentes que se encargan de proteger el cumplimiento de ciertas leyes de accesibilidad Web. - Económicas: mientras más usuarios tenga la aplicación Web, más se incrementaran las ventas en caso del comercio electrónico. - Funcionalidad: está relacionado con el funcionamiento correcto de la aplicación Web soportando las tareas que el usuario desee realizar. - Utilidad: Medida en la que la aplicación Web cubre las necesidades de los usuarios por lo cual podrán aprovechar su utilidad dejándolos satisfechos. - Credibilidad: confianza que transmitirá la aplicación Web. Capítulo II. - 9 - 2.1.5- Accesibilidad Web y Discapacidad Visual Discapacidad, término aceptado por la Real Academia Española de la Lengua hace más de 10 años, el cual, definen como “cualidad de discapacitado”. A su vez, definen el término de discapacitado de la siguiente manera: “1. adj. Dicho de una persona: Que tiene impedida o entorpecida alguna de las actividades cotidianas consideradas normales, por alteración de sus funciones intelectuales o físicas. U.t.c.s.” Otra definición interesante encontrada en la Web es la siguiente: “Es la restricción o ausencia para desenvolverse en la vida cotidiana, producida por pérdida o problema en uno de sus miembros, órganos u otra parte o estructura del cuerpo, incluidos los sistemas propios de la función mental”. (Lourdes Fernández. Sin fecha. Instituto Herman Hollerith.) En el artículo 4 de la Ley para las Personas con Discapacidad (2006) de la República Bolivariana de Venezuela, se encuentra lo siguiente: “Se entiende por discapacidad la condición compleja del ser humano constituida por factores biopsicosociales, que evidencia una disminución o supresión temporal o permanente, de alguna de sus capacidades sensoriales, motrices o intelectuales que puede manifestarse en ausencias, anomalías, defectos, pérdidas o dificultades para percibir, desplazarse sin apoyo, ver u oír, comunicarse con otros, o integrarse a las actividades de educación o trabajo, en la familia con la comunidad, que limitan el ejercicio de derechos, la participación social y el disfrute de una buena calidad de vida, o impiden la participación activa de las personas en las actividades de la vida familiar y social, sin que ello implique necesariamente incapacidad o inhabilidad para insertarse socialmente.” Posteriormente, en el artículo 5 de la Ley para las Personas con Discapacidad (2006) de la República Bolivariana de Venezuela, se encuentra la definición de Personas con Discapacidad de la siguiente manera: “Son todas aquellas personas que por causas congénitas o adquiridas presenten alguna disfunción o ausencia de sus capacidades de orden físico, mental, intelectual, sensorial o combinaciones de ellas; de carácter temporal, permanente o intermitente, que al interactuar con diversas barreras impliquen desventajas que dificultan o impidan su participación, inclusión e integración a la vida familiar y social, así como el ejercicio pleno de sus derechos humanos en igualdad de condiciones con los demás. Se reconoce como personas con discapacidad: Las sordas, las ciegas, las sordo ciegas, las que tienen disfunciones visuales, auditivas, intelectuales, motoras de cualquier tipo, alteraciones de la integración y la capacidad cognoscitiva, las de baja talla, las autistas, y con cualesquiera combinaciones de algunas de las disfunciones o ausencias mencionadas, y quienes padezcan alguna enfermedad o trastorno discapacitante científica, técnica y profesionalmente calificada de acuerdo con la Clasificación Internacional del Funcionamiento, la Discapacidad y la Salud de la Organización Mundial de la Salud.” Finalmente encontramos la definición de discapacidad propuesta por la Organización Mundial de la Salud (OMS), la cual dice lo siguiente: “Cualquier restricción o carencia (resultado de una deficiencia) de la capacidad de realizar una actividad en la misma forma o grado que se considera normal para un ser humano. Se refiere a actividades complejas e integradas que se esperan de las personas o del cuerpo en conjunto, como pueden ser las representadas por tareas, aptitudes y conductas”.(OMS, 2001) Agudeza Visual, Deficiencia y Discapacidad Visual La agudeza visual se refiere a la claridad con la cual el individuo puede ver un objeto y la definición con que ve los detalles. Generalmente se miden la agudeza visual de cerca y la agudeza visual de lejos. Para medir la agudeza visual de cerca se toma como máxima distancia para la prueba 40 cm, por otro lado, para medir la agudeza visual de lejos se toma como mínima distancia 40 cm. Por ejemplo, cuando se utiliza la expresión de visión 20/70, significa que el individuo está a 20 pies de la tabla visual que le están mostrando para realizar la prueba y 70 pies es la distancia donde la persona con una vista perfecta estaría situada para poder verla. Así, alguien que tiene una visión de 20/70, puede ver a 20 pies (6 metros) lo que alguien con vista perfecta puede ver a 70 pies (21 m) de distancia. Dado el ejemplo anterior, cuanto mayor es el segundo número de la fracción, menor es la agudeza de lejos que una persona tiene. La gente con agudezas de 20/200, 20/400 o 20/600 tienen algo de visión, Capítulo II. - 10 - pero no ven con el mismo grado de claridad que alguien con una de 20/20 o 20/40. Cuando una persona tiene una agudeza de lejos de 20/200 durante un examen, generalmente sólo puede ver la "E" grande en la tabla visual en la consulta del especialista de atención ocular. La deficiencia visual es aquella visión menor de 20/400, considerando siempre el mejor ojo y con la mejor corrección. Se considera que existe ceguera parcial cuando la visión es menor de 20/200 en el mejor ojo y con la mejor corrección. O que independientemente de que su visión sea mejor, tiene un campo visual inferior a 20º. (OMS) Se puede definir la discapacidad visual como la alteración del sistema visual o la deficiencia en la estructura o funcionamiento de los órganos visuales, lo cual, ocasiona la dificultad en el desarrollo normal de las actividades cotidianas que requieran el uso de la visión. (Valdez, L. Discapacidad Visual, 2010) En el documento del seminario de la autora de este TEG, Análisis de Requerimientos para el Diseño de un Evaluador de Criterios de Accesibilidad Web que verifique pautas relacionadas con Discapacidad Visual y Discapacidad Motora, se encuentra información relacionada con las diferentes enfermedades oftalmológicas o patologías oculares. (Acosta, 2013) A pesar de la existencia de ciertas pautas de accesibilidad Web que todo programador debería emplear, los usuarios con discapacidad visual suelen encontrar limitantes, por lo que una problemática actual es que las personas discapacitadas no pueden disfrutar de todo el contenido Web disponible. Lo cual, podría mejorar si los programadores web buscan la manera de transmitir la información por diversos canales, por ejemplo, describiendo el contenido de las imágenes usando el atributo “alt” de la etiqueta “img” de HTML14. Para poder brindar la ayuda requerida, es necesario contemplar los diferentes procedimientos que se deben aplicar para poder brindar acceso a las personas con discapacidad visual, ya que no todas presentan el mismo problema. Todos estos usuarios tienen que buscar alternativas que los ayuden a la hora de acceder a la información valiéndose de los canales de percepción que les queden. Entre los distintos tipos de discapacidad visual y la manera en la que interactúan con la Web se pueden encontrar las siguientes: - Usuarios con ceguera total o visión muy reducida: los usuarios con este tipo de discapacidad visual obviamente no pueden sacar provecho en lo absoluto del monitor por lo que su único medio para poder acceder a la información de determinado sitio Web es por medio del uso de tecnologías de apoyo como lo son los lectores de pantalla. - Baja visión, también conocida como resto visual. Se trata de una condición en las personas que no puede ser corregida con el uso de lentes correctivo convencionales, lentes de contacto, cirugías o medicamentos. Las personas que lo padecen cuentan con una privación de vista parcial. Según la definición de la Organización Mundial de la Salud “La Baja Visión es la pérdida de la agudeza visual y/o campo visual que incapacita para la realización de las tareas de la vida diaria”. Las personas con baja visión tienen limitaciones al momento de acceder a contenido Web muy pequeño que no se pueda agrandar o que no posea suficiente contraste. Este tipo de usuarios no pueden ver del todo la información presentada en la pantalla del computador por lo cual recurren al uso de diferentes técnicas como lo son el cambio de tamaño de las fuentes, combinaciones de colores con un alto contraste o se apoyan en el uso de software o dispositivos de hardware magnificadores de pantalla que les permitan un aumento de tamaño considerable de los elementos mostrados por pantalla. La baja visión es causa de enfermedades como la degeneración macular, glaucoma, retinopatía diabética o catarata. 14 HTML (HyperText Markup Language): lenguaje de marcado para la elaboración de páginas web. Capítulo II. - 11 - - Usuarios con ceguera al color (Daltonismo): Ocurre cuando hay un problema genético con los gránulos (pigmentos) que causa dificultad a la hora de distinguir ciertos colores por ciertas neuronas del ojo denominadas conos, los cuales se encuentran ubicados en la retina, la cual es una capa del tejido sensible a la luz que recubre la parte posterior del ojo. Dependiendo de los colores que suelan confundirse se determina qué tipo de daltonismo padece el usuario. Al momento de diseñar aplicaciones Web, se debe tomar en cuenta los usuarios con daltonismo, no se trata de la omisión de imágenes y mucho menos limitarse al blanco y negro, solo se requiere transmitir la información por diversos canales, no solamente por colores, es decir, cualquier imagen que se utilice debe entenderse tanto en colores como en blanco y negro, proporcionando otro medio para comunicar la información. En la Ilustración 1 se pueden observar los dos extremos, es decir, por un lado se consideran las necesidades de las personas con daltonismo por el otro no. Como se puede visualizar una persona con daltonismo no podría diferenciar las líneas, ya que el gráfico las distingue sólo por colores, pero por otro lado, toda persona con daltonismo si puede identificar cuáles son los tramos en construcción, la estaciones de transferencia y la transferencia de líneas ya que éstas se identifican por medio de símbolos y no solo de colores. Ilustración 1- Ejemplo de imagen no apta para personas daltónicas Fuente: Scott, L. El Metro de Caracas (antes y después) Para cerrar este punto, es importante destacar el alto grado de contraste que debe existir entre el primer plano y los colores de fondo, para esto el mejor contraste lo dan las letras negras y el fondo blanco asegurando con ello una mejor legibilidad del sitio Web. Al hacer uso de colores como verde o azul para el fondo disminuye potencialmente la legibilidad de los sitios Web. Mientras sea posible también debe evitarse el uso de color rojo como fondo ya que sin importar el color de las letras disminuye la legibilidad de las mismas. El uso del color gris claro o azules ligeros como fondo aumenta el estrés óptico de muchos usuarios con daltonismo. Dificultades de Accesibilidad Web de los Usuarios con Discapacidad Visual Cuando los usuarios con algún tipo de discapacidad visual desean navegar por la web, puede que se encuentren diversas limitaciones, la cuales, se presentan a continuación clasificadas por los principios de accesibilidad Web que se deben tomar en cuenta: - Navegabilidad: generalmente las personas que presentan discapacidad visual navegan por internet mediante el uso de un teclado y no del ratón por la dificultad que representa mover el cursor que probablemente no logran distinguir claramente (en el caso de ceguera parcial). Capítulo II. - 12 - - Percepción: si el usuario presenta ceguera total no podrá visualizar la información (gráficos, imágenes, símbolos, entre otros). - Robustez: la ayuda técnica que utilizan las personas con discapacidad visual, no siempre será capaz de interactuar con toda la tecnología existente, en especial ocurre cuando las tecnologías son muy nuevas y los dispositivos tiflotécnicos aún no tienen soporte para las mismas. - Comprensible: el acceso al contenido no se hace de manera secuencial ni con un orden lógico lineal, lo cual dificulta la navegación de un sitio Web. 2.1.6- Accesibilidad Web y Discapacidad Motriz Se define discapacidad motriz como el impedimento físico o dificultad para trasladarse o mover algún miembro inferior o superior del cuerpo, debido a que dichos miembros no lograron desarrollarse normalmente o sufrieron algún tipo de traumatismo. Los individuos que nacen con algún problema motriz no tienen la misma habilidad en todos sus sentidos, esto se debe a una falta de control cefálico que presentan, lo cual repercute en sus habilidades para trasladarse o interactuar y manipular algunos objetos. Clasificación de Alteraciones Motrices Entre las principales causas de estas alteraciones motrices se encuentran las siguientes: - Causas Prenatales: Son aquellas que ocurren durante el embarazo debido a diversas causas como lo son las enfermedades infecciosas o metabólicas que pueda padecer la madre durante el período de gestación o la incompatibilidad de los componentes sanguíneos de los padres. - Causas Perinatales: Son las que ocurren durante el nacimiento, como en el caso de la falta prolongada de oxígeno, o la obstrucción de las vías respiratorias, partos prematuros, entre otras. - Causas Posnatales: Son todas aquellas que aparecen tiempo después del nacimiento, las cuales tienen diversos motivos como es el hecho de que el niño se contraiga meningitis, sufra alguna hemorragia cerebral o trombosis, envenenamiento con plomo, traumatismo craneoencefálico y falta de oxigenación. A continuación se presenta una serie de enfermedades relacionadas con las alteraciones motrices: - Parálisis cerebral: Se refiere al grupo de trastornos del desarrollo psicomotor permanente y no progresivo, los cuales se traducen en una serie de limitaciones ocasionadas por lesiones en una o más partes del cerebro que se encargan de controlar la habilidad motriz de los músculos. A continuación se explican algunos trastornos pertenecientes al grupo de parálisis cerebral: o Cuadriplejia: También conocida como tetraplejia, este trastorno se caracteriza por la parálisis de las cuatro extremidades la cual es causada por alguna lesión en la médula espinal o enfermedad del sistema nervioso central como por ejemplo, la esclerosis múltiple. o Hemiplejia: trastorno en el cual se paraliza la mitad del cuerpo del paciente o causar limitaciones en el desarrollo de algunas funciones. - Distrofia muscular: Desorden genético en el que se encuentran dañados los genes de las proteínas musculares. Está caracterizado por la debilidad progresiva y la pérdida de tejido muscular. Si el tipo de distrofia muscular es grave puede ser fatal, por el contrario, si la distrofia muscular no es grave, se puede llegar a tener una vida relativamente normal con una leve debilidad muscular. Capítulo II. - 13 - - Esclerosis múltiple: este trastorno se caracteriza por la erosión de la mielina15, lo cual trae como consecuencia que las fibras nerviosas sean incapaces de enviar las señales desde el sistema nervioso central a los músculos. - Espina bífida: Malformación congénita del tubo neural16, en la cual, el recubrimiento de la médula espinal no se cierra correctamente, dejando parte de la médula al descubierto y en contacto con el exterior. Las diferentes alteraciones neurológicas en el movimiento y el funcionamiento de los órganos dependen de la extensión y la altura de la lesión. - Artritis: Inflamación de articulaciones caracterizada por dolor y limitaciones de movimiento. - Enfermedad de Parkinson: Desorden del sistema nervioso central que provoca rigidez muscular y temblores incontrolables. Dificultades de Accesibilidad Web de los Usuarios con Discapacidad Motriz - Las discapacidades que afectan el aparato locomotor, específicamente en lo que se refiere a las extremidades superiores, dificultan el empleo del ratón y en algunos casos del teclado por lo que el acceso a la información por medio de la Web puede verse afectado. - En su mayoría, los casos que más se repiten en las personas que presentan alguna discapacidad motora al momento de intentar navegar por la Web son el uso del ratón y el teclado. En el caso del uso del ratón puede que no tengan la precisión o coordinación necesaria para ejecutar los movimientos. En el caso del teclado necesitan tener la fuerza y precisión para teclear. - Las personas afectadas por la artritis presentan dolores en las articulaciones los cuales pueden causar fatiga y limitar el tiempo que las personas suelen emplear para la utilización del ratón y del teclado. - Otros casos como los de las personas que padecen de espina bífida, van acompañados de deficiencias de aprendizaje, lo cual trae como consecuencia problemas para acceder al contenido cuando la información no está expuesta de forma clara y precisa. 2.1.7- Diseño Universal Uno de los principios básicos de la accesibilidad es el diseño para todos, también conocido como diseño universal el cual consiste en diseñar productos, servicios y entornos o aplicaciones para la mayor cantidad de usuarios posible sin que ellos tengan la necesidad de adaptarlos o rediseñarlos. “El Diseño Universal busca estimular el diseño de productos atractivos y comerciales que sean utilizables por cualquier tipo de persona. Está orientado al diseño de soluciones ligadas a la construcción y a los objetos que respondan a las necesidades de una amplia gama de usuarios.” (Ron Mace, Sin fecha). Principios del Diseño Universal A continuación se encuentran los siete principios del diseño universal publicados por el Centro para el Diseño Universal (NC State University, The Center for Universal Design, 1997): 1- Uso equiparable: el diseño resulta útil para personas con diversas capacidades. 2- Uso flexible: el diseño se adapta a las diversas preferencias y habilidades individuales. 3- Simple e intuitivo: el uso del software es fácil de comprender debido a previas experiencias, conocimientos y habilidades. 4- Información Perceptible: la transmisión de la información requerida por el usuario es eficaz, atendiendo a las condiciones ambientales o a las capacidades sensoriales del usuario. 15La mielina es una sustancia proteica que recubre las neuronas para aumentar la velocidad de impulsos nerviosos. 16 Estructura embriónica que luego formará el cerebro y la médula espinal. Capítulo II. - 14 - 5- Tolerancia al error: el diseño debe minimizar los riesgos que puedan tener ciertas acciones por parte del usuario y sus respectivas consecuencias. Dichas acciones pueden ser involuntarias o accidentales. 6- Que exija poco esfuerzo físico: El usuario debe sentirse cómodo al momento de utilizar la aplicación Web y lograr interactuar con la misma de manera exitosa sin mucho esfuerzo. 7- Tamaño y espacio para el acceso y uso: el diseño proporciona un espacio y tamaño adecuado para el acceso correcto, manipulación y uso, sin descuidar el tamaño del cuerpo, la movilidad o la postura del cuerpo. (SIDAR17, Sin fecha). Los siete (7) Principios del Diseño Universal o Diseño para Todos, se centran en el diseño utilizable por todos, pero se debe tener en cuenta que en el diseño intervienen otros aspectos, como lo son el costo, la cultura en la que será usado, el ambiente, entre otros. Estos principios generales del diseño, son aplicables en la arquitectura, la ingeniería y, por supuesto, en las aplicaciones Web. El Diseño Universal cobra cada día más importancia por el notorio aumento de la población de mayor edad y la inclusión de las personas con discapacidad a las actividades de la vida diaria. Más que construir o diseñar en forma accesible, si los profesionales diseñaran o construyeran con los principios de este diseño no serían necesarias las adaptaciones en los proyectos o artículos. Este diseño se proyecta para obtener una mejor calidad de vida para todos los ciudadanos. Es el arte y desafío de proyectar para todos y será óptimo si cubre el mayor espacio de necesidades dentro del espectro de personas al que va dirigido. Dado lo anterior, se reconocen las limitaciones o dificultades que pueden encontrar los usuarios con discapacidad visual o discapacidad motriz al momento de navegar por la Web, además se rescata la importancia que tiene el “diseño para todos” o mejor conocido Diseño Universal, es por ello, que en esta ocasión se desarrolló una aplicación teniendo en cuenta no solamente su funcionalidad como evaluador, también se mantuvo la atención en fomentar lo que se predica, es decir, un evaluador de accesibilidad a su vez debe cumplir en su interfaz de usuario con el 100% de los criterios que evalúa, ideada para que la mayor cantidad de usuarios posible pueda hacer uso de la misma. 2.2- Tiflotecnología En el año 2008 se incorpora al diccionario de la Real Academia Española el término: Tiflotecnología, del griego Tiflo (ciego), donde se define como: “estudio de la adaptación de procedimientos y técnicas para su utilización por los ciegos”. En otras palabras, la tiflotecnología se trata de un conjunto de conocimientos, técnicas y recursos orientados a brindarle apoyo a personas con algún tipo de discapacidad visual para el uso correcto de las tecnologías, buscando con ello favorecer su autonomía personal, integración laboral, social y educativa. Justo en este punto entra en juego la importancia de los materiales tiflotécnicos, los cuales, van desde los más sencillos y de fácil manejo (bajo nivel de especialización) hasta los materiales más complejos que requieren previo entrenamiento para el correcto manejo debido a su alta complejidad. La mayoría de los materiales tiflotécnicos existentes hasta el momento pertenecen al grupo de materiales más complejos o de alto nivel de especialización, sin embargo, en la actualidad aún se utilizan con relativa normalidad por las personas con discapacidad visual. Entre las adaptaciones de alto nivel de especialización, encontramos los revisores de pantalla, los revisores de documentos y los tomadores de notas. 17 Fundación Sidar: Seminario Internacional para la Discapacidad y Acceso a la Red. España Capítulo II. - 15 - Las adaptaciones de bajo nivel de especialización, son materiales sencillos y de fácil manejo, entre los cuales podemos encontrar los ampliadores de imagen, sintetizadores de voz, grabadoras de sonido y la salida braille. Impacto de la Tecnología en Personas con Discapacidad Gracias al internet, hoy en día se encuentran millones de sitios Web ofreciendo información en cualquier parte del mundo permanentemente, pero el hecho de que se encuentre la información por todos lados no implica que esté al acceso total de cualquier persona que desee obtenerla, como es el caso de las personas que presentan algún tipo de discapacidad, ya sea discapacidad física, sensorial, psíquica o mental. En esta ocasión se tratarán las dificultades que se encuentran las personas con discapacidad visual o dificultad motriz en cuanto al manejo del ratón a la hora de buscar determinada información en sitios Web y por otro lado el grado de accesibilidad que pueden llegar a encontrar debido al buen diseño Web enmarcado en el cumplimento de las pautas de accesibilidad Web creadas por el W3C. Sin duda alguna los aparatos tiflotécnicos han representado una ayuda importante para las personas con discapacidad, ya que de alguna manera les permite acceder a la información, sin embargo, se debe acotar que gran parte de estos recursos son económicamente costosos, lo que los aleja de estar al alcance de una parte de las personas que presentan discapacidad y no tienen poder adquisitivo para los mismos, además, en algunos casos estos aparatos representan una carga pesada para el usuario al momento de trasladarlos. Dada la situación, es más sencillo contar con aplicaciones diseñadas para el uso de la mayor cantidad de personas posibles, disminuyendo la necesidad de grandes inversiones en aparatos tiflotécnicos o la carga que representa su movilización. 2.3- Normas UNE18 En diciembre del año 2004 fue publicada la Norma UNE 139803:2004 titulada “Aplicaciones Informáticas para personas con discapacidad. Requisitos de Accesibilidad para Contenidos en la Web” por AENOR19, la cual, hace referencia a las características que deben tener las aplicaciones Web para poder ser navegadas por la mayor cantidad de usuarios posibles, incluyendo los que tienen algún tipo de discapacidad o edad avanzada. La Norma UNE 139803:2004 “Aplicaciones informáticas para personas con discapacidad. Requisitos de Accesibilidad para Contenidos en la Web” (UNE, 2004) fue creada a partir de la referencia del WCAG 1.0 propuesta por la WAI (Iniciativa para la accesibilidad a Internet) estableciendo una correspondencia directa entre los requisitos que se consideran y los puntos de verificación de las pautas del WCAG 1.0. Los requisitos de accesibilidad de la Norma UNE 139803:2004, mencionados anteriormente, están distribuidos en siete categorías, y a su vez, dentro de cada categoría, los requisitos están clasificados según su respectiva prioridad, uno dos o tres: - Prioridad uno: Siempre se debe cumplir con dicho requisito. - Prioridad dos: Se recomienda cumplir con este requisito si se desea evitar problemas de acceso. - Prioridad tres: Es un requisito opcional que mejorara el nivel de accesibilidad de la aplicación Web. Se considera que una aplicación Web es accesible si cumple con los dos primeros niveles de prioridad según lo dictado en el “Real Decreto 1494 / 2007 del doce de noviembre, por el que se aprueba el 18 UNE (Una Norma Española): conjunto de normas tecnológicas creadas por los Comités Técnicos de Normalización (CTN). 19 AENOR: Organismo responsable en España de elaborar las normas para todos los sectores industriales y de servicio. Capítulo II. - 16 - Reglamento sobre las condiciones básicas para el acceso de las personas con discapacidad a las tecnologías, productos y servicios relacionados con la sociedad de la información y medios de comunicación social”. 2.4- Introducción a las Pautas de Accesibilidad Web A principios de 1998, para continuar con el propósito de guiar la Web hacia su máximo potencial, el W3C creo la WAI, la cual, se enfocó en extender los protocolos y formatos de datos para lograr un mayor grado de accesibilidad Web, consiguiendo con ello la inclusión de muchos más usuarios sin darle mayor importancia a sus respectivas condiciones. Gracias al trabajo llevado a cabo por la el Grupo de Trabajo de las Pautas de Accesibilidad al Contenido en la Web (WCAG WG), los desarrolladores Web cuentan con una serie de documentos conocidos como Pautas de Accesibilidad al Contenido en la Web (WCAG) los cuales conforman los estándares que deben seguirse para desarrollar aplicaciones Web accesibles para personas con discapacidad. Al momento de referirse a “contenido en la Web” hacen referencia a las imágenes, formularios, texto, sonido, entre otras. WCAG contiene las pautas de accesibilidad Web tanto para Herramientas de Autor (ATAG) como para Agentes de Usuario (UAAG), en las cuales, se define la manera en la que se debe utilizar el texto alternativo en relación a la accesibilidad de los diferentes componentes. El documento denominado WCAG 1.0 fue aprobado en mayo de 1999, el cual, con el tiempo se convirtió en una versión estable de referencia, y posteriormente, el 11 de diciembre del 2008 fue aprobado el WCAG 2.0 por el W3C, el cual, está desarrollado sobre los fundamentos de WCAG 1.0. La versión 2.0 aclara que sus pautas son independientes de la tecnología, está conformado por criterios más claros y demostrables, se caracteriza por su mayor adaptabilidad y flexibilidad en casos y usos además de contar con una excelente documentación. Sin duda alguna uno de los principales cambios de la WCAG 2.0 con respecto a la WCAG 1.0 es la aplicación de pautas de accesibilidad a todo tipo de contenido Web, no sólo documentos HTML sino que por el contrario, todo documento alojado en algún servidor podrá ser valorado en cuanto al grado de accesibilidad que disponga. Esto incluye archivos en PDF, presentaciones en Microsoft PowerPoint, Microsoft Word, entre otros; los cuales tendrán que cumplir los cuatro principios básicos de accesibilidad: ser perceptibles, operables, robustos y comprensibles. Documentos que Conforman las Pautas WCAG 2 Al igual que en la primera versión, el WCAG 2.0 está conformado por un conjunto de documentos, de los cuales algunos están destinados al apoyo, es decir, son de carácter informativo para la correcta comprensión de las pautas de accesibilidad. A continuación se procede a explicar cada uno de los cuatro documentos componentes del WCAG 2.0, el primero de los documentos es el documento estable, normativo y por ello no admite modificación alguna. Los demás documentos son de carácter informativo por lo cual si pueden ser sometidos a diferentes cambios a fin de mejorar la comprensión de las pautas de accesibilidad. - Recomendación WCAG 2.0: Este es el documento principal del WCAG 2.0, en el cual, se explica cada una de las doce (12) Pautas, los cuatro (4) Principios de Accesibilidad, Criterios de Éxito y la Adecuación. - Técnicas para WCAG 2.0: Dados los criterios de accesibilidad recogidos en las pautas se proporcionan un conjunto de soluciones técnicas que ayuden a su cumplimiento. Se dan técnicas tanto para tecnologías específicas como para tecnologías generales. Las técnicas pueden ser “de suficiencia” o “Complementarias”. Se dice que son “de suficiencia” cuando al aplicar dicha técnica se considera cumplido el criterio, por otro lado, se dice que son “Complementarias” cuando su uso está destinado Capítulo II. - 17 - a mejorar el grado de accesibilidad, más no implica necesariamente el cumplimiento del criterio en cuestión. - Comprender WCAG 2.0: En este documento se detalla cada pauta y criterio de éxito además de explicar la importancia de su aplicación para los usuarios que tengan algún tipo de discapacidad. También contiene notas acerca del soporte de los diferentes navegadores. - Cómo cumplir con WCAG 2.0: este documento básicamente es una guía rápida para comprender los criterios de éxito. Conformado de manera configurable mediante el uso de casillas de verificación marcadas por el usuario para que este pueda navegar a través de sus puntos de interés, por ejemplo: si el usuario está interesado en CSS nivel AA solo tendrá que seleccionar determinadas casillas para leer únicamente los criterios de su interés. Los documentos anteriormente mencionados del WCAG 2.0 fueron revisados en su totalidad para realizar este TEG y desarrollo de la aplicación EAU, dada la importancia de poder contar con un aplicación que además de evaluar criterios de éxito para la accesibilidad sea en sí misma accesible para la mayor cantidad de usuarios posible. En las próximas secciones de este documento se encuentra de manera más detallada pero aún resumida la información de parte de la documentación de WCAG 2.0. Estructura y Organización de las Pautas WCAG 2.0 A continuación se presenta un resumen de los Principios de la Accesibilidad, Pautas y Criterios de Éxito de WCAG 2.0. Los Cuatro Principios de la Accesibilidad Web según WCAG 2.0 Las pautas que conforman el WCAG 2.0 giran en torno a cuatro principios teóricos que buscan a fin de cuentas garantizar la accesibilidad a las aplicaciones Web. Dichos principios se concretan en determinada aplicación Web siguiendo una a una las pautas del WCAG 2.0. En cada pauta se describen los criterios de éxito que servirán de guía para la posterior comprobación de su cumplimiento. A continuación se procede a la descripción de dichos principios: - El contenido Web debe ser “perceptible” como mínimo por uno de los sentidos de las personas, por ejemplo, las imágenes de toda aplicación Web deben tener su respectiva explicación para que los usuarios con discapacidad visual puedan enterarse del contenido que quiere transmitiré la imagen contenida en la Web. - El contenido Web debe ser “operable”, es decir, los usuarios deben estar en la capacidad de interactuar con el sin mayor complicación logrando con ello el máximo aprovechamiento que se pueda sacar. - El contenido Web debe ser “comprensible”, a pesar de ser uno de los principios más difíciles de cumplir y de evaluar, se deben tomar en cuenta a los usuarios con discapacidad de aprendizaje, como lo son usuarios con dislexia o discapacidad cognitiva. - Todo contenido Web debe ser “robusto”, en otras palabras, el contenido debe estar suficientemente descrito como para poder ser leído por los diferentes tipos de usuarios, con los distintos tipos de tecnología existente. Capítulo II. - 18 - Pautas WCAG 2.0 Relacionadas con Discapacidad Visual y Motora A continuación se encuentra una breve descripción de los principios y pautas relacionados con el apoyo a personas con discapacidad visual o discapacidad motora con dificultad para manejar el ratón. En el anexo 1 se incluye el resto de pautas para una referencia más completa. Principio 1: Perceptible “La información y los elementos de la interfaz de usuario deben presentarse a los usuarios de formas en las que los usuarios puedan percibirlos”. Pauta 1.1- Contenido no textual: El desarrollador Web debe proveer alternativas textuales para todo el contenido no textual, es decir, todas las imágenes o botones de imagen deben contar con una descripción del contenido de la imagen de tal manera que permita la modificación para la posterior adaptación que pueda cubrir las necesidades de cada usuario, por ejemplo, la descripción del contenido de la imagen puede ser leída por un sintetizador de voz, pasarla a braille o simplemente aumentar el tamaño de su fuente.  Criterio 1.1.1- Contenido no textual Dicha descripción se implementa por medio del uso de la etiqueta “alt” en las imágenes, la cual, será de gran utilidad para las personas que por motivos de discapacidad visual o del uso de algún navegador de texto no pueden ver dicha imagen. El uso correcto de la etiqueta “alt” es el siguiente: <img src="logo.png" alt="logo de la empresa" />. Como se puede observar en el ejemplo anterior se abre una etiqueta de imagen (img), de inmediato se indica la ubicación de la imagen por medio del “src”, y por último se encuentra la etiqueta “alt” la cual da una idea con su breve descripción del contenido de la imagen, en este caso nos dice que la imagen es el logotipo de alguna empresa. Cabe destacar que la descripción aportada por la etiqueta “alt” aparecerá antes de que cargue el archivo asociado por lo cual también sirve para mantener informados a los usuarios sobre el contenido que están por ver. También aparecerá la descripción cuando se pase el cursor por la imagen. Para cerrar la breve descripción de este punto se dejan a continuación consejos prácticos que aseguraran el cumplimiento de la pauta 1.1: 1- Las imágenes que no estén destinadas a transmitir información simplemente porque se limitan a ser decorativas se les debe colocar cadena vacía con alternativa: alt=””. 2- Colocar nombres descriptivos (value) en los botones de los formularios. 3- Colocar etiquetas asociadas a los elementos de los formularios (label) o etiqueta, y si no es posible, un (title) o título. 4- Identificar mediante textos accesibles todos los elementos multimedia incrustados. 5- Colocar títulos apropiados a los marcos (frames). Pauta 1.2- Contenido multimedia dependiente del tiempo: todo contenido de audio, video, animaciones o presentaciones interactivas es considerado como contenido multimedia. La manera alternativa de accesibilidad para este tipo de contenidos es suministrando la posibilidad de acceder a transcripciones, subtítulos, audio o descripciones dependiendo de la presentación inicial del contenido multimedia, es decir, si se trata de un video, las personas con discapacidad visual tendrán acceso a la información que se quiera transmitir por medio de él, pero si este video cuenta con una pista de audio describiendo cada suceso el usuario con discapacidad visual podrá enterarse de todo lo que se está Capítulo II. - 19 - reproduciendo en dicho video. Por otro lado, y siguiendo con el mismo ejemplo del video, las personas con discapacidad auditiva podrán ver el video más no escucharlo, la alternativa para ayudarlos es el uso de subtítulos que vayan sincronizados con el audio del video en reproducción.  Criterio 1.2.1 – Contenidos de solo audio o solo video pregrabado: Es conveniente hacer uso del texto alternativo (etiqueta alt) con la descripción del contenido multimedia. Pauta 1.3- Adaptabilidad: Se debe crear contenido flexible que pueda presentarse de diversas maneras sin que por ello se pierda parte de la información ni su estructura al tener que adaptarse a otras modalidades y tecnologías. Una de las principales recomendaciones para lograr cumplir con esta pauta es el uso de las hojas de estilo.  Criterio 1.3.1 – Información y relaciones: La información, las estructuras y relaciones transmitidas por medio de la presentación pueden ser leídas e interpretadas independientemente del dispositivo y el formato utilizado o también se podrán encontrar disponibles por formato de texto. Cuando se trata de contenidos de texto se deberá utilizar la estructura correcta para que estos puedan ser leídos e interpretados correctamente independientemente del formato. Para lograr esto se debe hacer uso de los encabezados con <h1>, listas con <ul>, <dl> y <ol>, texto enfatizado con <strong>, <blockquote>, entre otras. Las tablas deben ser utilizadas para marcar datos tabulados, las celdas <td> contendrán los datos y los encabezados asociados <th> donde sea requerido su uso. Las tablas se deben identificar además con su respectivo título y su resumen. Cuando se trata de formularios se deben asociar las etiquetas (label) con sus respectivos campos correspondientes (input) y a su vez los elementos del formulario que estén relacionados se deben agrupar mediante el uso de fieldset y legend que son los encargados de crear bloques de elementos dentro de los formularios. Pauta 1.4- Distinguible: Es conveniente la facilidad que se le dé al usuario para que este pueda ver, escuchar el contenido y distinguir la separación entre el primer plano y el fondo.  Criterio 1.4.3 – Contraste (mínimo): La presentación visual de los textos o las imágenes de texto deben tener una relación de contraste de al menos 4.5:1. Como excepción encontramos un par de casos: Gran tamaño: todo texto que supere los diez y ocho puntos o los catorce puntos (en negrita) tienen una relación de contraste de al menos 3:1. Incidental: todo texto que sea parte de la interfaz de usuario inactivo o que sea simplemente decorativo no tiene requisitos mínimos de contraste siempre y cuando no aporten información alguna.  Criterio 1.4.4 – Variar el tamaño del texto: Se debe permitir el aumento del tamaño del texto hasta un doscientos por ciento sin necesidad de utilizar tecnología de apoyo, sin que esto afecte las funciones ni se pierdan los contenidos.  Criterio 1.4.6 – Contraste aumentado: La presentación visual del texto y las imágenes de texto deben tener una relación de contraste de mínimo 7:1 con la excepción de los dos casos mencionados en el punto 1.4.3.  Criterio 1.4.8 – Presentación visual: Para los bloques de texto que contengan más de una frase se deben seguir las siguientes indicaciones: Capítulo II. - 20 - 1- Tendrán especificados un color de primer plano y de fondo. 2- No se deben exceder de ochenta caracteres por línea 3- No estarán justificados a ambos lados 4- El interlineado debe ser de al menos la mitad de la altura de la fuente del texto, y el espacio entre cada párrafo debe ser del tamaño de un interlineado y medio. 5- No aparecerá desplazamiento horizontal cuando el tamaño de texto se duplique. Principio 2: Operable “Los componentes de la interfaz y la navegación deben ser operables” Pauta 2.1- Acceso por medio del teclado: Toda funcionalidad debe ser operable a través del teclado.  Criterio 2.1.1 – Teclado: toda funcionalidad de la aplicación Web debe ser operado a través del teclado siempre y cuando éste lo permita y en caso de emplear algún comando, este no debe interferir con los comandos que trae por defecto el sistema operativo ni el navegador.  Criterio 2.1.2 – Sin trampa de teclado o teclado no bloqueado: El foco del teclado debe tener acceso a todos los elementos de navegación que contenga la aplicación Web. En caso de que el usuario deba utilizar otro medio para desplazarse, deberá ser indicado. Pauta 2.4- Navegable: Proporcione la ayuda suficiente para que los usuarios puedan ubicarse y navegar sin problemas.  Criterio 2.4.1 – Saltar bloques o accesos directos: cuando se repitan bloques de información en diversas áreas de la aplicación Web, se deben colocar saltos de bloque, de esta manera los usuarios por medio de enlaces podrán avanzar hacia otros contenidos. Por ejemplo: “ir a la página inicial”.  Criterio 2.4.2 – Título en las páginas: toda aplicación Web debe contar con su respectivo título que informe su tema o propósito.  Criterio 2.4.7 – Foco visible: a nivel visual el foco actual del teclado debe distinguirse claramente. Al utilizar el tabulador el foco debe desplazarse.  Criterio 2.4.9 – Propósito de los vínculos: Cada vínculo debe expresar por medio de su propio texto el propósito que tiene y no deben existir enlaces con el mismo nombre (o descripción) que lleven a páginas diferentes. Principio 3: Comprensible “La información y el manejo de la interfaz de usuario debe ser comprensible” Pauta 3.1- el contenido debe ser textual, comprensible y legible  Criterio 3.1.1 – Idioma de la página: El idioma de la página debe ser detectado automáticamente para esto debe ser identificado previamente. Ejemplo: <HTML lang=”es”> Principio 4: Robusto “El contenido debe ser suficientemente robusto para que pueda ser interpretado por una amplia variedad de agentes de usuario, incluyendo los productos de apoyo”. Pauta 4.1- Compatible: Maximice la compatibilidad con los agentes de usuario actuales y futuros, incluyendo los productos de apoyo.  Criterio 4.1.1 – Interpretación: todo desarrollador debe comprobar que las etiquetas utilizadas están correctamente anidadas y todas cuentan con su respetiva etiqueta de cierre. Para comprobar este criterio el W3C pone a disposición su propio validador. Capítulo II. - 21 - Como se pudo apreciar en este apartado, para realizar este TEG, se filtraron las pautas de accesibilidad y criterios de éxito relacionados con la discapacidad visual y discapacidad motriz, para posteriormente evaluar cuales podían ser evaluados de manera automática por EAU. A continuación se explican los niveles de conformidad del WCAG 2.0, los cuales, se tomaron en cuenta para ser parte de una de las opciones de evaluación en EAU. 2.4.1- Conformidad con WCAG 2.0 Para que una aplicación Web cumpla con las pautas de accesibilidad del WCAG 2.0, se deben cubrir una serie de criterios que tratan el alcance y la manera en la cual se utilizan las tecnologías, además del nivel de conformidad: - Nivel de conformidad: al igual que en el WCAG 1.0, nuevamente contamos con los tres niveles en el WCAG 2.0, el A, el Doble A (AA) y el Triple A (AAA). o Simple A (A): la página web debe satisfacer todos los Criterios de Conformidad del Nivel A. o Doble A (AA): la página web debe satisfacer todos los Criterios de Conformidad de los Niveles A y AA. o Triple A (AAA): la página web debe satisfacer todos los Criterios de Conformidad de los Niveles A, AA y AAA Sin embargo no se recomienda la adopción del nivel de conformidad AAA para una aplicación Web en su totalidad, ya que los criterios que se deben cumplir dependen del tipo de contenido que se pretenda exponer. - Páginas completas: se habla de conformidad para páginas completas cuando se aplica la evaluación en todas las páginas que conforman el sitio web. - Procesos complejos: cuando una página es parte de un proceso, todas las páginas pertenecientes al conjunto deben cumplir o el nivel declarado o uno mayor, es decir, ninguna de las páginas puede cumplir con un nivel inferior al estipulado. - Sólo depender de formas de uso de las tecnologías que proporcionen soporte para la accesibilidad: si se cuenta con determinada tecnología que cubra cierta parte de los requerimientos de accesibilidad y la otra parte no la cumpla, se pueden aprovechar las virtudes que si cumplen con dichos requerimientos de accesibilidad. Con la parte que no ofrece el soporte de accesibilidad a pesar de que si se puede utilizar no se debe establecer la independencia al momento de transmitir la información, se debe buscar una forma alternativa que cumpla con los requerimientos de accesibilidad al a la hora de transmitir la información. - No interferir con el contenido o impedir el acceso al mismo: Siempre y cuando no se ofrezcan contenidos equivalentes se permitirá el uso de tecnologías sin soporte para la accesibilidad, sin embargo el uso de este tipo de tecnologías jamás debe interferir con el acceso al resto de la página por parte del usuario. Para su cumplimiento, las pautas definen cuatro criterios de éxito que son aplicables a todo el contenido de una página Web, incluyendo el contenido no imprescindible, debido a que el incumplimiento de estos criterios puede interferir con el uso de la página. Los criterios antes mencionados son: o 1.4.2 – Control de audio: Si algún sonido de la aplicación Web tiene una duración mayor a los tres segundos es requisito indispensable contar con un controlador de audio independiente al del audio en general para que el usuario pueda pausar o bajar el volumen en caso de así requerirlo y así poder escuchar con claridad al sintetizador de voz. o 2.1.2- Trampas del teclado: El foco del teclado debe tener acceso a todos los elementos de navegación que contenga la aplicación Web. En caso de que el usuario deba utilizar otro medio para desplazarse, deberá ser indicado. o 2.2.2- Pausar, detener, ocultar: para cualquier contenido que inicie automáticamente se debe disponer de controles que le permitan al usuario iniciar, detener, atrasar, adelantar u ocultar la Capítulo II. - 22 - información, es decir, el usuario podrá manipular a su gusto la reproducción aun cuando se configuro para que iniciara automáticamente. La excepción está en el hecho de que la información que se desee transmitir sea de suma importancia para el usuario y no se deba omitir, en este caso el usuario no contara con los controles antes mencionados. o 2.3.1 – Tres destellos o debajo del umbral: ningún contenido puede producir más de tres destellos en un segundo a menos que el área donde estos destellos ocurran sea inferior al veinte y cinco por ciento del campo visual de diez grados a una distancia que se considere normal o el área sea de bajo contraste y no contenga demasiado rojo. En caso de que una aplicación Web cumpla con las pautas del WCAG 2.0 puede incluir una Declaración para indicar a los usuarios que dicha aplicación cumple con los estándares del W3C. El nivel de conformidad alcanzado por la aplicación es representado por alguno de los siguientes logotipos - Ilustración 2: Para impulsar la promoción de la accesibilidad en la Web, el W3C ha presentado los logos de conformidad con las directrices de WCAG 2.0. En la Ilustración 2 se puede visualizar una mustra de los logos. Los proveedores de contenido pueden usar estos logos en sus sitios Web para indicar su declaración de conformidad con un nivel específico alcanzado. Ilustración 2– Logotipos del nivel de conformidad en aplicaciones Web Fuente: www.w3c.es Si se hace uso de aluno de estos logotipos anteriormente referenciados debe ir acompañado de la siguiente información: - Fecha de revisión de la aplicación para determinar su cumplimiento. - Título, versión y URL de las pautas del WCAG 2.0. - Nivel de conformidad alcanzado (A, AA o AAA). - Alcance: Cantidad de páginas exactas que cumplen con las pautas del WCAG 2.0. - Listado de tecnologías de las cuales es depende el contenido. Para poder incluir alguno de los logos de la Ilustración 2 en los sitios Web, los desarrolladores deben someter a la evaluación oficial del W3C su aplicación, dado el resultado se le otorga el derecho de usar el logo correspondiente. Declaración de Conformidad Parcial por Contenido Externo Es común el hecho de que muchas páginas Web agregan más información a su contenido original con el pasar del tiempo como es el caso de las Web que permiten la publicación de los comentarios de los usuarios, también los noticieros Web que son actualizados por diversos colabores o las páginas que añaden contenido de fuentes externas automáticamente. En estas ocasiones el tipo de contenido no puede ser controlado automáticamente lo cual puede afectar directamente el nivel de accesibilidad. En este caso se tienen dos opciones: Capítulo II. - 23 - 1- Determinar la “conformidad basándose en la monitorización”: 3sta acción se puede tomar siempre y cuando todos los contenidos agregados sean monitorizados en un plazo máximo de dos días hábiles tras su detección, en caso de encontrar contenido no apropiado se corrige para que sea conforme o se elimina. 2- Incluir una “declaración de conformidad parcial”: se le debe indicar a los usuarios que la página no es conforme, debido a que parte de su contenido pertenece a fuentes externas que probablemente no cumplan con un nivel mínimo de conformidad, pero de no ser por esas partes de contenido externas la página sería conforme. La aclaratoria debe ser algo así: “Esta página no es conforme, pero sería conforme con WCAG 2.0 en su Nivel X si se eliminaran las siguientes partes de contenido, procedentes de fuentes no controladas”. Además, no se debe permitir que el autor tenga control sobre el contenido y los usuarios entender claramente cuáles son las partes del contenido que no son conformes. Declaración de Conformidad Parcial Debido al Idioma En caso de que la página Web no sea conforme porque no cuenta con el soporte para la accesibilidad en todos los idiomas disponibles en la página, se debe mostrar una declaración parecida a la siguiente: Esta página no es conforme, pero sería conforme con WCAG 2.0 en su nivel X si existiera soporte de accesibilidad para los siguientes idiomas”. 2.5- Herramientas para la evaluación de Accesibilidad Web La tarea de evaluar el nivel de accesibilidad de una aplicación Web no es fácil pero tampoco imposible ya que siguiendo una serie de pasos se puede determinar si la página Web cumple o no con los requisitos de accesibilidad. Este proceso de evaluación de accesibilidad se divide en dos etapas: la etapa de análisis automático y la etapa de análisis manual. Análisis Automático El software encargado de analizar automáticamente si una aplicación cumple o no con los estándares de accesibilidad es conocido como validador automático, el cual, a petición del usuario, realizan una evaluación a la aplicación Web, siguiendo los Puntos de Verificación o Criterios de Éxito. En el mercado se pueden encontrar los evaluadores que trabajan en línea o los que proporcionan un archivo instalable. A pesar de que constituyen una ayuda importante para los desarrolladores debido a su gran utilidad, no se deben perder de vista las limitaciones que puedan tener, ya que no están en la capacidad de identificar absolutamente todos los problemas de accesibilidad de determinada aplicación Web. Entre los validadores tomados en cuenta para este TEG, se encuentra el Test de Accesibilidad Web (TAW), desarrollado por la Fundación CTIC20 de España, también el software HERA desarrollado por la Fundación Sidar21, el cual, revisa la accesibilidad según las WCAG 1.0 y HEVAC, herramienta desarrollada por el Licenciado Ronald Aguilera promovido por el CENEAC. A continuación se presenta una breve reseña de cada una de las herramientas de evaluación de accesibilidad tomadas en cuenta al momento de realizar este TEG. 20 CTIC: Centro de Tecnologías de Información y Comunicaciones. España. 21 Fundación Sidar: Seminario Internacional para la Discapacidad y Acceso a la Red. España Capítulo II. - 24 - Test de Accesibilidad Web (TAW) TAW es el acrónimo de la herramienta de verificación de accesibilidad Web desarrollada por la Fundación CTIC en España. Además, fue la primera en poner a disposición para los usuarios un evaluador de accesibilidad en español. El usuario puede elegir si la evaluación la hace utilizando los puntos de verificación de WCAG 1.0 o los criterios de éxito del WCAG 2.0. También, es importante destacar que la herramienta puede ser utilizada por diversos tipos de usuario, no solo se limita a personas con conocimientos técnicos en el área del desarrollo web. El nivel de accesibilidad alcanzado por las aplicaciones Web se mide de acuerdo con las pautas del WAI – W3C (WCAG 1.0 y WCAG 2.0), está orientada para el público en general y en especial para desarrolladores y diseñadores de aplicaciones Web con el objetivo de permitirles el acceso a todos los usuarios independientemente de sus características diferenciadoras. A continuación se dará una breve explicación del uso de TAW para la evaluación de la accesibilidad Web. En primer lugar, el usuario debe escribir el URL www.tawdis.net, con el navegador Web de su preferencia. En la Ilustración 3, se muestra la interfaz de usuario de la página de inicio de TAW. Ilustración 3– Página principal de TAW Fuente: http://www.tawdis.net/ En la Ilustración 4, se observa la caja de texto donde el usuario debe escribir la dirección Web del sitio que desea evaluar, también debe elegir la pestaña de WCAG 1.0 en caso de querer evaluar los puntos de verificación, la pestaña WCAG 2.0 si quiere evaluar los criterios de éxito o la pestaña mobileOK22 si desea evaluar la accesibilidad Web para dispositivos móviles de alguna página. Esta última opción aún está en su versión beta. 22 mobileOK: evaluador del W3C que valida el cumplimiento de las Buenas Practicas en Web Móvil 1.0 publicadas en la Iniciativa de Web Móvil del W3C. Capítulo II. - 25 - Ilustración 4– Uso del verificador de accesibilidad TAW Fuente: http://www.tawdis.net/ En la Ilustración 5 se muestra un ejemplo del resultado arrojado por TAW al realizar la evaluación del sitio Web de la Facultad de Ciencias de la Universidad Central de Venezuela. El cuál, como se puede apreciar, se clasifica en tres grupos, los problemas, las advertencias y los criterios de éxito (o principios de verificación en caso del WCAG 1.0) que deben ser revisados de manera no automática. Ilustración 5– Informe en HTML arrojado por el evaluador de accesibilidad TAW Fuente: http://www.tawdis.net/ Como se puede observar en la Ilustración 5, el sitio Web de la Facultad de Ciencias de la Universidad Central de Venezuela, tiene un nivel de conformidad AA, lo cual indica que el sitio es accesible. Además se encuentra la siguiente información del análisis: - Sitio Web analizado: http://www.ciens.ucv.ve - Fecha y hora del análisis realizado: 02/11/2014 18:01 - Pautas: WCAG 2.0 - Nivel de Análisis: AA - Tecnologías: HTML, CSS Capítulo II. - 26 - También se puede observar en los resultados, que el sitio Web de la Facultad de Ciencias de la Universidad Central de Venezuela tiene tres (3) problemas de accesibilidad, una (1) advertencia y diez y ocho (18) criterios de éxito no verificados. En la Ilustración 6 se aprecia la leyenda con los iconos de esta herramienta. - Si en el resultado de la evaluación arrojado por TAW no se encuentra ningún problema asociado a la accesibilidad se muestra un visto de color verde. - Si en el resultado de la evaluación arrojado por TAW se encuentran problemas de accesibilidad, mostrara una “X” roja. - Si en el resultado de la evaluación arrojado por TAW, aparece un signo de admiración dentro de un círculo amarillo significa que esa(s) parte(s) del código necesita una revisión no automática. - Si en el resultado de la evaluación arrojado por TAW muestra un signo de interrogación azul puede tener dos significados, el primero está asociado a la imposibilidad de comprobación automática y el segundo significa que dicha comprobación automática no es aplicable a esa(s) parte(s) del código. Ilustración 6– Leyenda de iconos del evaluador de accesibilidad Web TAW Fuente: http://www.tawdis.net/ El próximo paso lógico sería revisar detalladamente cada uno de los resultados arrojados por el evaluador. En la Ilustración 7 se puede visualizar el resultado clasificado por principio de accesibilidad accediendo a la vista “Detalle” que proporciona TAW. En el informe de errores del botón “Detalle” aparecerán los siguientes datos: - La información de análisis: Por cada principio, se mostrará la descripción de pautas con incidencias. - Para cada pauta con incidencia se muestran las técnicas para corregirlas y solucionarlas. - Resultado de incidencia: por cada tipo de problema de accesibilidad, se contabilizan la cantidad de incidencias asociadas. - Número de Líneas: El evaluador muestra las líneas del código donde se encuentran las incidencias. Es aquí donde el programador debe concentrarse en los problemas detectados por el evaluador de accesibilidad y aplicar las técnicas recomendadas para poder corregirlos y solucionarlos. Luego se deben revisar las advertencias arrojadas por el evaluador de accesibilidad, ellas indican la posible existencia de algunos problemas, los cuales deben ser revisados de manera no automática y tomar la decisión de confirmarlos o descartarlos. En caso de que el evaluador de accesibilidad detecte puntos que no pueden ser verificados, se debe proceder a realizar una verificación no automática para asegurar la accesibilidad de la aplicación Web, aunque este paso de revisión no automática debe tomarse como una buena costumbre, aparezcan o no puntos no verificados ya que los evaluadores de accesibilidad automáticos no tienen el cien por ciento de confiabilidad. Capítulo II. - 27 - Ilustración 7- Informe del resultado clasificado según los cuatro principios Fuente: http://www.tawdis.net/ Como se pudo apreciar el evaluador de accesibilidad TAW es una herramienta que cuenta con diversas características y funcionalidades, las cuales, sirven de ayuda para cualquier programador Web. Algunas de esas funcionalidades fueron tomadas en cuenta al momento de desarrollar EAU por su valioso aporte a la aplicación. Hojas de Estilo para la Revisión de la Accesibilidad (HERA) HERA es un evaluador de accesibilidad automático para aplicaciones Web, el mismo, compara el código fuente de la aplicación contra las pautas de accesibilidad del WCAG 1.0. Posteriormente muestra un informe con los errores y puntos de verificación detectables con este tipo de evaluación automática. La evaluación no automática es imprescindible para corroborar que efectivamente la aplicación Web es accesible. En este caso la herramienta de evaluación HERA proporciona los puntos que deben ser sometidos a este tipo de revisión no automática, también indica las posibles técnicas que deben ser aplicadas para corregir y así solucionar los problemas facilitándole el proceso al programador. Además HERA ofrece dos vistas de la página, una con el código HTML y otra con la interfaz de usuario. También destaca los elementos relevantes con iconos y colores distintivos. HERA cuenta con un formulario que permite modificar los resultados automáticos, agregar comentarios a los diversos puntos de verificación e indicar el nombre de la persona que ha realizado la revisión. Es posible imprimir el informe final o descargarlo en formato PDF, HTML o RDF. Como ventaja, este evaluador de accesibilidad en línea conserva los resultados de la evaluación por un lapso de siete días en la base de datos de Sidar. Durante esos siete días el usuario puede volver a revisar el resultado de la evaluación con tan solo introducir el URL en la caja de texto para realizar una nueva evaluación. A continuación se procede a revisar la página de la Facultad de Ciencias de la Universidad Central de Venezuela con el evaluador de accesibilidad HERA en dos simples pasos: Capítulo II. - 28 - 1- Por medio del navegador Web acceder a la siguiente dirección: http://www.sidar.org/hera/ y de inmediato se procede a escribir en la caja de texto indicada en la Ilustración 8, la dirección Web de la página que se desea evaluar, en este caso será www.ciens.ucv.ve. Ilustración 8- Parte de la interfaz de usuario de HERA Fuente: http://www.sidar.org/hera/ 2- Como se puede apreciar en la Ilustración 9, HERA mostrará un cuadro resumen con los resultados de la evaluación. Los puntos que tienen una lupa al lado derecho son los que deben ser sometidos a una evaluación no automática, para mayor especificación bastará con hacer clic en cada una de las lupas. También se muestran los criterios de éxito aprobados, los reprobados y los que no aplican ya que no se encuentran en la página incidencias de los mismos, por lo tanto no son considerados en el análisis. Al inicio del reporte de errores aparecerán los siguientes datos: - URL: htp://ciens.ucv.ve - Fecha/hora: 02/11/2014 – 21:53 GMT - Total: 1 elemento - Análisis automático: 0 segundos - Errores: 6 errores - A verificar manualmente: 22 puntos - Revisor: (Desconocido) - Navegador: (Sin identificar) Ilustración 9– Tabla de resultados del evaluador de accesibilidad HERA Fuente: http://www.sidar.org/hera/ En la Ilustración 10, se puede apreciar una serie de botones que aparecen en la parte inferior del informe del resultado arrojado por HERA, donde cada uno muestra los criterios de accesibilidad incluidos en la pauta que indica el botón. Capítulo II. - 29 - Ilustración 10– Botones para revisar cada una de las pautas de accesibilidad en el evaluador HERA Fuente: http://www.sidar.org/hera/ Como se puede apreciar en la Ilustración 11, al seleccionar uno de los botones de las pautas mostrados en la Ilustración 10, aparecerán los criterios incluidos en la misma pauta indicada por el nombre del botón. Ilustración 11– Criterio de accesibilidad de la pauta 12 mostrado en HERA Fuente: http://www.sidar.org/hera/ Al revisar HERA, se puede deducir que facilita al desarrollador la localización de errores en las páginas Web, además ofrece orientación al indicar cuál es la falta detectada. La principal funcionalidad de HERA que se implementó también en EAU fue la de almacenar los resultados en una base de datos, con el fin de poder realizar consultas posteriores. Es importante destacar que se encontró cierta inestabilidad en la aplicación en el informe de resultados, ya que al navegar por las diversas páginas de resultado arrojado, si el usuario hace el intento de regresar a una sección anterior aparece una página de error de conexión y para acceder a los resultados se debe evaluar la página web nuevamente. Capítulo II. - 30 - Herramienta de Verificación de Accesibilidad (HEVAC) Herramienta Web desarrollada por Ronald Aguilera como parte de su TEG en el año 2012, la cual, se encarga de mostrar los resultados de las verificaciones de criterios relacionados con la discapacidad visual. En la Ilustración 12 se aprecia la interfaz de usuario de HEVAC. Ilustración 12- Página principal de HEVAC Autor: Aguilera, Ronald (2012) En la Ilustración 12, también se aprecian las opciones que los usuarios pueden elegir para la evaluación, entre los cuales se encuentran, los principios de accesibilidad y los niveles de conformidad. La primera vista de los resultados (Ilustración 13) muestra el recuadro básico que indica la cantidad de problemas y advertencias encontradas al realizar la evaluación de accesibilidad. Por otro lado, se ofrece una vista detallada de problemas, a la cual se accede mediante un enlace alternativo. Capítulo II. - 31 - Ilustración 13- Página de resultados completados de HEVAC Autor: Aguilera, Ronald (2012) En la vista detallada (Ilustración 14) se muestra exactamente la parte del código donde se encontró el problema junto a un consejo de desarrollo o recomendación. Capítulo II. - 32 - Ilustración 14- Página de resultados completos del análisis del Sitio Web Autor: Aguilera, Ronald (2012) Al finalizar la evaluación, el usuario tiene la opción e descargar los resultados en un archivo pdf, ya sea la vista clásica o la detallada. Actualmente la aplicación HEVAC no se encuentra disponible en un servidor Web para realizar las pruebas de navegación pertinentes, sin embargo, las funcionalidades de HEVAC están documentadas en su totalidad, al igual que su alcance, por lo cual, se pudo conocer las limitaciones que presento y tomarlas como referencia para continuar con la investigación. Una vez analizadas las tres aplicaciones (TAW, HERA y HEVAC), se reconocieron diversas funcionalidades que servían de aporte para el desarrollo de EAU. Tomando en cuenta características importantes de las tres aplicaciones y agregando ideas personales, se pudo desarrollar un evaluador de accesibilidad nuevo, y aunque aún no tiene el alcance de TAW es un avance importante en los trabajos de investigación de la Universidad Central de Venezuela. Capítulo II. - 33 - 2.6- Ventajas y Limitaciones de los Evaluadores de Accesibilidad TAW, HERA Y HEVAC A continuación se encuentra una tabla comparativa con las características observadas en los evaluadores de accesibilidad Web. Tabla 1- Tabla comparativa de los evaluadores de accesibilidad TAW, Hera y HEVAC Descripción TAW HERA HEVAC Sistemas operativos soportados Windows, Mac Os X, Unix, Linux, AIX, Solaris, HP-UX Cualquiera que ejecute un navegador Cualquiera que ejecute un navegador Tamaño 3 MB 329 Kb No se dispone de información Lenguaje de Programación Java, lenguaje de programación orientado a objetos PHP, lenguaje de programación interpretado Java, lenguaje de programación orientado a objetos Cobertura del WCAG WCAG 1.0, WCAG 2.0 Sólo la versión WCAG 1.0 Sólo la versión WCAG 2.0 Trabaja en modo: Offline - Versiones de escritorio, aplicación instalable de forma local Sí aplica Sí aplica Sí aplica Trabaja en modo: Online: Solo funciona si se cuenta con un equipo con acceso a internet Sí aplica Sí aplica Sí aplica Disponibilidad de Múltiples idiomas Español, inglés, gallego y catalán Español, alemán, portugués, francés, catalán, inglés, francés, gallego, italiano, danés, rumano y serbio Español Múltiples páginas: Evaluación de múltiples páginas en un mismo ciclo de revisión. Si lo permite No lo permite No lo permite HTTPS (Protocolo seguro de transferencia e hipertexto) Sí lo soporta No lo soporta No se dispone de información MobileOK: Comprobación de la adecuación de contenido móvil al nivel mobileOK23 Opción permitida Opción no permitida Opción no permitida Reporte de resultados Si lo permite. Se presenta en su versión HTML Si lo permite. Los formatos disponibles para la descarga son: XHTML, RDF y PDF Si lo permite. Se presenta en su versión HTML Almacenamiento de Resultados en base de datos No aplica Almacenamiento por 7 días No se dispone de información Licencia Licencia: Propietario Licencia: Open Source Licencia: Open Source 23 Certificado de cumplimiento de las Buenas Prácticas para la Web Móvil. Capítulo II. - 34 - Dada la tabla anterior, se pueden observar las características que se tomaron en cuanta al momento de realizar la investigación de cada una de las herramientas de evaluación. En el caso de TAW, la única funcionalidad que no cumple es la del almacenamiento de los resultados en una base de datos, por lo demás, cubre el resto de funcionalidades evaluadas. Por el contrario, HERA si almacena los resultados obtenidos de las evaluaciones, sin embargo, carece de diversas funcionalidades que si cumple TAW, además de seguir evaluando solo los puntos de verificación de WCAG 1.0 cuando ya desde el año 2008 se pusieron en práctica los principios de accesibilidad de WCAG 2.0. HEVAC es una aplicación desarrollada como parte de un TEG del Licenciado Ronald Aguilera, en el cual, se expresó claramente su alcance, el mismo, no cumplía con todas las funcionalidades presentes en TAW, por este motivo, el CENEAC desea continuar ampliando el alcance de la investigación y se desarrolló EAW, sin embargo, a pesar de que aún EAW no alcanza la cantidad de funcionalidades de TAW, cubre algunas que HEVAC no tuvo en su momento, como por ejemplo, la revisión de diversas páginas del sitio Web a demanda del usuario. 2.7- Análisis no Automático de Pautas de Accesibilidad Web A pesar de que las herramientas de evaluación de accesibilidad automática son de gran ayuda para los desarrolladores Web, no son cien por ciento confiables, por lo cual, es necesario hacer una revisión manual para completar la evaluación y brindar un mayor grado de accesibilidad Web. La ventaja que representa hacer una revisión manual con respecto a la revisión automática es la detección de problemas de accesibilidad que no son detectados con los evaluadores automáticos. Por otro lado se encuentran entre sus desventajas: - Requiere mayor inversión de tiempo. - Se deben probar configuraciones diferentes y complementar con otras herramientas. - El criterio personal de la persona encargada de la revisión juega el papel principal. - Algunos puntos son difíciles de descifrar. - Algunos fallos pueden no ser detectados. También existen herramientas que permiten facilitar el proceso de evaluación manual como son las extensiones para los navegadores. Entre las herramientas más conocidas se encuentran las siguientes: - Web Accessibility Toolbar (Internet Explorer y Ópera): Complemento que una vez instalado en el explorador permitirá realizar un conjunto de pruebas de comprobación de accesibilidad Web. Entre sus principales funciones se pueden encontrar: 1- Activar o desactivar las hojas de estilo 2- Localizar ciertas características desaconsejadas 3- Sustituir por texto alternativo las imágenes 4- Realizar pruebas semánticas y estructurales 5- Realizar pruebas de color - Web Developer Toolbar (Mozilla Firefox): Es una barra de herramientas especializada en la evaluación de accesibilidad Web. Entre sus funciones encontramos: 1- Deshabilitar las hojas de estilo y el JavaScript 2- Remplazar toda imagen por su respectivo texto alternativo 3- Identificar los encabezados de los elementos estructurales desaconsejados, tablas de datos, enlaces, marcos, entre otros. - Internet Explorer Developer Toolbar: Es una barra de herramientas especializada en la evaluación de accesibilidad Web. Entre sus funciones encontramos: Capítulo II. - 35 - 1- Permite desactivar de manera selectiva las opciones del navegador. 2- Permite selección de elementos específicos de la Web. 3- Comprueba el código HTML y CSS. 4- Permite mostrar la información de las tablas e imágenes. - Firefox Accesibility Extension: complemento que permite agregar una barra de herramientas que proporciona opciones para la navegación por el contenido por parte de las personas con discapacidad y a su vez realiza comprobaciones de accesibilidad. Métodos de revisión no automática El análisis no automático de accesibilidad se realiza mediante la verificación del funcionamiento de un sitio web bajo distintas circunstancias, en las que posiblemente algunos usuarios van a acceder al mismo. En la documentación del WCAG 2.0 se recomiendan los siguientes métodos de revisión no automática: - Utilice un navegador sólo-texto o un emulador - Utilice varios navegadores gráficos con: o Sonidos y gráficos cargados o Gráficos no cargados o Sonidos no cargados o Marcos, scripts, hojas de estilo y applets no cargados - Utilice varios navegadores actualizados y desactualizados - Navegue por el sitio Web sin ratón - Utilice un navegador por voz - Utilice un lector de pantallas - Utilice un software de magnificación Es importante considerar que no basta con mirar la página Web para observar anomalías. Se debe interactuar con el sitio para detectar los posibles problemas. Esto significa realizar las siguientes acciones: - Navegar por el sitio Web. - Buscar información en el sitio. - Usar los formularios. - Realizar tareas concretas que los usuarios desarrollan habitualmente en el sitio. Es importante utilizar estos métodos de revisión y validación desde las primeras fases del desarrollo del sitio Web para evitar que se multipliquen los mismos errores en todo el sitio Web. Como se pudo apreciar en este segundo capítulo del trabajo de investigación, existen estándares que promueven el uso de técnicas de desarrollo Web incluyentes para lograr un mayor grado de accesibilidad en la red, para ello, se deben emplear diversos criterios de accesibilidad Web pertenecientes al WCAG versión 2.0, de los cuales fueron seleccionados los que están relacionados con la discapacidad visual y motora. También se probaron algunos evaluadores de accesibilidad Web existentes, los cuales, intentan cubrir la mayor cantidad de criterios de accesibilidad posibles durante la verificación, en nuestro caso los criterios que desean verificar son los seleccionados en el apartado 2.24, ya que están relacionados con la discapacidad visual y motora. Capítulo III. - 36 - Capítulo III- Marco Metodológico y Desarrollo de la Herramienta A continuación se explica la metodología seguida para la implementación y desarrollo del Evaluador de Accesibilidad para sitios Web (EAW). 3.1- Aplicaciones Web Definición de aplicación Web Es un sitio Web que contiene páginas con contenido sin determinar, parcialmente o en su totalidad. El contenido final de una página se determina sólo cuando el usuario solicita una página del servidor Web. Cuando el contenido final de la página varía de una petición a otra en función de las acciones del visitante, se trata de una página dinámica. Las aplicaciones Web se crean en respuesta a diversas necesidades o problemas. Modelo Vista Controlador (MVC) Después de un cuidadoso análisis de los objetivos del TEG, se determinó que la mejor manera de estructurar el sistema es haciendo uso del “patrón de diseño”24 Modelo-Vista-Controlador. MVC es un patrón de diseño de arquitectura de software, usado principalmente en aplicaciones que manejan gran cantidad de datos y transacciones complejas, donde, además se requiere una mejor separación de conceptos para que el desarrollo esté estructurado de una mejor manera, facilitando la programación en diferentes capas de manera paralela e independiente. MVC sugiere la separación del software en 3 estratos: Modelo, Vista y Controlador, los cuales, se explican a continuación: - Modelo: Es la representación de la información que maneja la aplicación. El modelo en sí son los datos puros que puestos en contexto del sistema proveen la información al usuario o a la misma aplicación. - Vista: Es la representación del modelo en forma gráfica disponible para la interacción con el usuario. En el caso de una aplicación Web, la “Vista” es una página HTML con contenido dinámico sobre el cual, el usuario puede realizar operaciones. - Controlador: Es la capa encargada de manejar y responder las solicitudes del usuario, procesando la información necesaria y modificando el Modelo en caso de ser necesario. En la Ilustración 15 se muestra paso a paso el funcionamiento del patrón de diseño MVC, a continuación su explicación: 1- El usuario realiza una petición. 2- El controlador captura el evento y hace la llamada al modelo correspondiente efectuando las modificaciones pertinentes sobre el mismo. 3- El modelo interactúa con la base de datos. 4- El modelo correspondiente recibe los resultados de las consultas realizadas en la base de datos. 5- El controlador recibe la información envida por el modelo. 6- El controlador le envía la información a la vista 7- La vista muestra la información solicitada por el usuario. 24 Un patrón de diseño es una solución probada para un problema en contexto Capítulo III. - 37 - Ilustración 15- Patrón de diseño MVC En esta ocasión para el desarrollo de la aplicación EAW se implementó la arquitectura MVC, dado que el entorno de desarrollo Web elegido sigue el paradigma de la arquitectura Modelo Vista Controlador. En el apartado 3.7.3 encontrará más información relacionada con el entorno de desarrollo antes mencionado. 3.2- Metodología de Desarrollo En vista de la dificultad que conlleva el desarrollo de software se han creado diversas propuestas metodológicas que inciden en distintas dimensiones del proceso de desarrollo e implementación. Primero se encuentran las propuestas tradicionales, las cuales están centradas en el control del proceso, estableciendo claramente cada etapa involucrada, los artefactos que se desarrollarán y las herramientas y notaciones que serán utilizadas. Este tipo de propuestas tradicionales han demostrado ser exitosas en un gran número de proyectos y en otros no tanto. La otra opción que se puede encontrar son las propuestas de metodologías ágiles, las cuales están centradas en otras dimensiones como lo son el factor humano o el producto software, otorgándole mayor valor al individuo, a la colaboración que puede aportar el cliente y al desarrollo de software incremental con iteraciones muy cortas. La metodología elegida para el desarrollo de la solución de TEG es ad-hoc, utilizando en principio Programación Extrema (XP) y los artefactos de notación UML en las etapas de análisis y diseño. Programación Extrema (XP) La Programación Extrema (XP, eXtreme Programming) forma parte de las metodologías ágiles o ligeras (Chin, G. 2004), la cual está centrada en la importancia que se le debe dar a la retroalimentación continua entre el cliente y el equipo de desarrollo, la simplicidad y facilidad en la implementación de soluciones y rápida adaptación a los cambios emergentes basada en una serie de valores y una docena de principios. Es importante destacar que en la aplicación que se implementará para el TEG se aplicará la programación extrema pero de manera individual. Capítulo III. - 38 - Objetivos de la XP El principal objetivo de la XP es el de cubrir necesidades y por lo tanto expectativas del cliente ya que se procura darle exactamente la solución que desea en el momento que la necesita, por lo que el cliente debe recibir respuestas oportunas y rápidas aun cuando surjan requerimientos emergentes de última hora. El segundo objetivo de la programación extrema es fomentar el trabajo en equipo involucrando en el mismo al cliente, jefes de proyecto y desarrolladores, fortaleciendo con ello la habilidad para la vida de trabajo en equipo para cada miembro involucrado en el desarrollo del software. Sin embargo, en esta oportunidad, el desarrollo se realizó de manera individual. Para mayor información relacionada con la metodología XP consulte el anexo 2. Para el desarrollo de EAW, se utilizó parte de esta metodología de desarrollo, basando su principal argumento en la adaptabilidad de las necesidades de ésta, como por ejemplo, las comprobaciones de criterios de éxito que se incorporaron de manera incremental. No obstante, la metodología XP fue aplicada parcialmente en el desarrollo de la herramienta, ya que se incorporan otros artefactos en las fases de análisis y diseño, tales como los diagramas de casos de uso, diagramas de componentes y diagramas de secuencia. 3.2.1- Fases de la Metodología Ad-Hoc Implementada Como se mencionó anteriormente la metodología elegida para el desarrollo de la solución de TEG es ad- hoc, utilizando en principio Programación Extrema (XP) y los artefactos de notación UML en las etapas de análisis y diseño. La XP propone el uso de historias de usuario, las cuales están escritas en lenguaje coloquial, es decir, no técnico, utilizando en la medida posible las palabras del usuario con el objetivo de conseguir reflejar los requisitos de la aplicación. En esta oportunidad, para el desarrollo de EAW en vez de realizar las historias de usuario propuestas en la metodología XP se realizaron diagramas de casos de uso25 de UML26 y otros artefactos más también pertenecientes a UML por el aporte de información más completo que suelen dar. Dado que XP tiene cuatro (4) fases bien definidas se siguieron de la siguiente manera: - Fase de planeación: En esta fase se determinaron los requerimientos de la aplicación por medio del uso de artefactos UML, también se diseñó un bosquejo a groso modo de la interfaz de usuario y se creó la base de datos. - Fase de Diseño: esta fase se caracterizó por sus múltiples iteraciones mencionadas a continuación 1- Obtención de la información contenida en las páginas web a partir de la URL. 2- Una iteración por la implementación de cada evaluación de criterio de accesibilidad realizada. 3- Una vez se culminó la implementación de cada evaluación de criterios de accesibilidad se procedió a diseñar el filtro de los tipos de evaluación, es decir, validar las diversas combinaciones de principios de accesibilidad o el nivel de conformidad. 4- Se desarrolló la sección de comentarios para usuarios 5- Se editó la interfaz con el objetivo de mejorar el acceso al historial 25Casos de Uso: técnica para especificar el comportamiento del sistema cuando el usuario lo opera. Definido en el apartado 3.3. 26 UML: (Lenguaje Unificado de Modelado) Es un lenguaje gráfico para visualizar, especificar, construir y documentar un sistema. Capítulo III. - 39 - 6- Se desarrolló el fragmento de código encargado de recuperar los datos estadísticos de la evaluación para cada sitio Web. - Fase de Codificación: Se diseñaron códigos HTML y CSS para aplicar posteriormente las respectivas pruebas en su fase correspondiente. Algunos de esos códigos se podrán visualizar en el capítulo IV de este TEG. - Fase de Pruebas: Dado que el desarrollo se realizó por iteraciones, la correcta evaluación de cada criterio de accesibilidad se fue probando por separado a medida que se iban implementando las funciones pertenecientes a cada requerimiento. 3.3- Casos de Uso Los casos de uso se utilizan como técnica para especificar el comportamiento del sistema cuando el usuario lo opera, es decir, permite visualizar la secuencia de interacciones entre el sistema y el usuario o componente que ejecuta alguno de sus servicios. Los sistemas cuentan con, al menos, un diagrama de caso de uso que es una representación gráfica del entorno del sistema (actores) y su funcionalidad principal (caso de uso). Un diagrama de casos de uso cuenta con los siguientes elementos: - Actores: Así se denomina toda entidad externa al sistema que de alguna manera guarde algún tipo de relación con el mismo. Este rol puede ser asumido por personas, otros sistemas o máquinas. En el diagrama son representados como “hombres de palo” conocidos como stick man. Es importante diferenciar el usuario del actor ya que el actor es un rol mientras que el usuario es una persona que cuando usa el sistema asume un rol, por lo tanto, dicho usuario puede acceder a determinado sistema como distintos actores para realizar tareas diferentes. - Casos de Uso: secuencia de interacciones entre un sistema y alguien o algo que usa alguno de sus servicios. Los casos de uso son iniciados por un actor y son representados en el diagrama por un ovalo con el nombre del caso escrito en su interior. - Comunicación: representa las relaciones de uso y herencia que existen entre los actores y los casos de uso. Ventajas de los casos de uso: - Expresar la intención que tiene el actor. - Extraer los requerimientos del usuario y del sistema. - Centrar al analista en las tareas principales de usuario (describiendo los casos de mayor importancia). - Tener en cuenta todos los usuarios evitando que las personas especializadas en informática dirijan la funcionalidad del nuevo sistema basándose exclusivamente en criterios tecnológicos. Desventajas de los casos de uso: - No permiten establecer los requisitos que no sean funcionales - Los casos de uso deben ser complementados con información adicional como lo son las reglas de negocio, los requisitos no funcionales y el diccionario de datos que complemente los requerimientos del sistema. - Cada caso crítico de uso debe tener al menos un requisito no funcional centrado en el funcionamiento asociado (Cano, 2009). El diagrama de casos de uso del evaluador de accesibilidad Web se presenta a continuación en la ilustración 16 y la ilustración 17. Capítulo III. - 40 - Ilustración 16- Diagrama de casos de uso: “Evaluar Web según nivel de conformidad” Capítulo III. - 41 - Ilustración 17 - Diagrama de casos de uso: “Evaluar Web según principio de accesibilidad” Capítulo III. - 42 - 3.4- Documentación de los casos de uso Tabla 2 Documento de caso de uso 1 Caso de Uso: Evaluar Web según nivel de conformidad. Actores: Usuario Web. Tipo: Flujo básico. Propósito: El usuario desea evaluar la página Web por un nivel de conformidad en específico. Resumen: El usuario dispone de tres niveles de conformidad a elegir para evaluar la página Web. Estos niveles verifican criterios previamente seleccionados vinculados con el apoyo a usuarios que presenten discapacidad visual y motriz. Precondiciones: El contenido proporcionado por el URL debe ser válido y estar disponible como un recurso HTML. Flujo Principal:  El usuario accede a la página principal de la aplicación hospedada en un servidor web.  El usuario accede a la sección “Nuevo”.  El usuario introduce el nombre del sitio Web que desea evaluar.  El usuario introduce el URL del sitio Web que desea evaluar.  El usuario elige en el tipo de evaluación: Evaluar por nivel de conformidad.  El usuario selecciona el nivel de conformidad que desea verificar: A, AA o AAA.  El usuario envía la petición al sistema. Flujo Alternativo: Ninguno. Excepciones: Error en la URL proporcionada por el usuario. Tabla 3- Documento de caso de uso 2 Caso de Uso: Evaluar Web según principio de accesibilidad. Actores: Usuario Web. Tipo: Flujo básico. Propósito: El usuario desea evaluar la página Web por principios de accesibilidad deseados. Resumen: El usuario dispone de cuatro principios de accesibilidad a elegir, los cuales pueden ser combinados a su gusto para evaluar la página Web. Dichos principios de accesibilidad están compuestos por los criterios previamente seleccionados vinculados con el apoyo a usuarios que presentan discapacidad visual y motriz. Precondiciones: El contenido proporcionado por la URL debe ser válido y estar disponible como un recurso HTML. Flujo Principal:  El usuario accede a la página principal de la aplicación hospedada en un servidor web..  El usuario accede a la sección “Nuevo”.  El usuario introduce el nombre del sitio Web que desea evaluar.  El usuario introduce el URL del sitio Web que desea evaluar.  El usuario elige en el tipo de evaluación: Evaluar por principio de accesibilidad.  El usuario selecciona la combinación de principios de accesibilidad que desee verificar.  El usuario envía la petición al sistema. Flujo Alternativo: Ninguno. Excepciones: Error en la URL proporcionada por el usuario. Capítulo III. - 43 - Tabla 4- Documento de caso de uso 3 Caso de Uso: Evaluar otras páginas que conformen el sitio Web. Actores: Usuario Web. Tipo: Flujo de extensión. Propósito: El usuario desea evaluar otras páginas que formen parte del sitio Web. Resumen: Una vez evaluada la primera página Web del sitio, el usuario podrá evaluar los enlaces contenidos en dicha página. Precondiciones: Se tiene que haber evaluado previamente una de las páginas del sitio Web. Flujo Principal:  El usuario accede a la página principal de la aplicación hospedada en un servidor web.  El usuario accede a la sección “Nuevo”.  El usuario introduce el nombre del sitio Web que desea evaluar.  El usuario introduce el URL del sitio Web que desea evaluar.  El usuario elige en el tipo de evaluación que desea realizar.  El usuario envía la petición al sistema.  En la sección de resultados el usuario puede elegir entre los enlaces disponibles del mismo sitio Web la próxima página que desea evaluar.  El usuario tendrá que seleccionar el tipo de evaluación que desea aplicar. Flujo Alternativo:  El usuario accede a la página principal de la aplicación donde encontrará el listado de todas las evaluaciones previamente realizadas.  Hace clic en la página deseada y accede a dicho resultado.  En la sección de resultados el usuario puede elegir entre los enlaces disponibles del mismo sitio Web la próxima página que desea evaluar haciendo clic en analizar.  El usuario tendrá que seleccionar el tipo de evaluación que desea aplicar.  El usuario envía la petición al sistema. Excepciones: Interrupción de la operación durante el tiempo de ejecución. Tabla 5- Documento de caso de uso 4 Caso de Uso: Visualizar resultado en formato HTML. Actores: Usuario Web. Tipo: Flujo de inclusión. Propósito: El usuario dispone de los resultados en formato HTML. Resumen: La aplicación mostrará los resultados de la evaluación de accesibilidad Web del URL indicado por el usuario en una nueva página HTML verificadas. Precondiciones: El contenido proporcionado por el URL debe ser válido y estar disponible como un recurso HTML. Flujo Principal:  El usuario accede a la sección “Nueva evaluación” desde la página principal.  El usuario introduce el nombre del sitio Web que desea evaluar.  El usuario introduce el URL del sitio Web que desea evaluar.  El usuario elige en el tipo de evaluación que desea verificar.  El usuario envía la petición al sistema.  El usuario visualiza el resultado en formato HTML. Flujo Alternativo:  El usuario accede a la página principal de la aplicación donde encontrará el listado de todas las evaluaciones previamente realizadas.  Hace clic en la página deseada y accede a dicho resultado. Excepciones: Interrupción de la operación durante el tiempo de ejecución. Capítulo III. - 44 - Tabla 6 - Documento de caso de uso 5 Caso de Uso: Imprimir resultado. Actores: Usuario Web. Tipo: Flujo de extensión. Propósito: Proporcionarle al usuario un respaldo en físico de los resultados de la evaluación. Resumen: Dada una evaluación realizada por el usuario, los resultados son presentados en formato HTML que podrá ser impreso haciendo clic en el botón “Imprimir”. Precondiciones: El contenido proporcionado por el URL debe ser válido y estar disponible como un recurso HTML. Flujo Principal:  El usuario accede a la sección “Nueva evaluación” desde la página principal.  El usuario introduce el nombre del sitio Web que desea evaluar.  El usuario introduce el URL del sitio Web que desea evaluar.  El usuario elige en el tipo de evaluación que desea verificar.  El usuario envía la petición al sistema.  El usuario presiona el botón “Imprimir”. Flujo Alternativo:  El usuario accede a la página principal de la aplicación donde encontrará el listado de todas las evaluaciones previamente realizadas.  Hace clic en la página deseada y accede a dicho resultado.  En la página de resultado hace clic en el botón “Imprimir”. Excepciones: Interrupción de la operación durante el tiempo de ejecución. Tabla 7- Documento de caso de uso 6 Caso de Uso: Verificar comentarios de otros usuarios. Actores: Usuario Web. Tipo: Flujo de inclusión. Propósito: Acceder a los comentarios de otros usuarios para conocer su opinión con respecto a los resultados de la evaluación a la misma página Web. Resumen: Al someter a evaluación cualquier página Web que anteriormente haya sido evaluada y comentada por otro usuario, se podrá acceder a la sección de comentarios y leer sus opiniones, sugerencias y consejos. Precondiciones: La página debe haber sido evaluada y comentada previamente por al menos un usuario. Flujo Principal:  El usuario accede a la sección “Nueva evaluación” desde la página principal.  El usuario introduce el nombre y URL del sitio Web que desea evaluar.  El usuario elige en el tipo de evaluación que desea verificar y envía petición.  El usuario hace clic en el botón de comentarios o se dirige manualmente a los comentarios ubicados en la zona inferior de la página de resultados. Flujo Alternativo:  El usuario accede a la página principal de la aplicación donde encontrará el listado de todas las evaluaciones previamente realizadas.  Hace clic en la página deseada y accede a dicho resultado.  El usuario presiona el botón de comentarios o se dirige manualmente a la zona inferior de la página Web de resultados para poder leer los comentarios. Excepciones: Interrupción de la operación durante el tiempo de ejecución. Capítulo III. - 45 - Tabla 8- Documento de caso de uso 7 Caso de Uso: Comentar resultado. Actores: Usuario Web. Tipo: Flujo de extensión. Propósito: El usuario podrá expresar su opinión con respecto a los resultados obtenidos en la evaluación. Resumen: El usuario tras la evaluación podrá comentar su opinión, sugerencias y consejos para que posteriormente otros usuarios puedan conocer ese punto de vista. Precondiciones: Haber sometido a evaluación la página Web. Flujo Principal:  El usuario accede a la página principal de la aplicación hospedada en un servidor web.  El usuario accede a la sección “Nuevo”.  El usuario introduce el nombre del sitio Web que desea evaluar.  El usuario introduce el URL del sitio Web que desea evaluar.  El usuario elige en el tipo de evaluación que desea verificar.  El usuario envía la petición al sistema.  El usuario presiona el botón de comentarios o se dirige manualmente a la zona inferior de la página Web de resultados donde encontrará la caja de texto para escribir su comentario.  El usuario envía petición de almacenamiento de comentario en la base de datos. Flujo Alternativo:  El usuario accede a la página principal de la aplicación donde encontrará el listado de todas las evaluaciones previamente realizadas.  Hace clic en la página deseada y accede a dicho resultado.  El usuario presiona el botón de comentarios o se dirige manualmente a la zona inferior de la página Web de resultados donde encontrará la caja de texto para escribir su comentario.  El usuario envía petición de almacenamiento de comentario en la base de datos. Excepciones: Interrupción de la operación durante el tiempo de ejecución. Tabla 9- Documento de caso de uso 8 Caso de Uso: Acceder a evaluaciones anteriores en el historial. Actores: Usuario Web. Tipo: Flujo de extensión. Propósito: Agilizar proceso de revisión de resultados de evaluaciones que anteriormente fueron realizadas. Resumen: El usuario podrá acceder a resultados almacenados en la base de datos, de esta manera se ahorra tiempo al no tener que volver a someter a evaluación la misma página Web. Precondiciones: Haber ejecutado la evaluación de la página Web anteriormente. Flujo Principal:  El usuario accede a la página principal de la aplicación hospedada en un servidor web, donde encontrará el listado de todas las evaluaciones previamente realizadas.  Hace clic en la página deseada y accede a dichos resultados. Flujo Alternativo: Ninguno. Excepciones: Interrupción de la operación durante el tiempo de ejecución. Capítulo III. - 46 - Tabla 10– Documento de caso de uso 9 Caso de Uso: Visitar Web evaluada. Actores: Usuario Web. Tipo: Flujo de extensión. Propósito: Proporcionar un acceso directo a la Web evaluada. Resumen: El usuario tras la evaluación podrá dirigirse a la página evaluada optimizando su tiempo al no tener que escribir el URL. Precondiciones: Haber ejecutado la evaluación al menos una vez. Flujo Principal:  El usuario accede a la sección “Nueva evaluación” desde la página principal.  El usuario introduce el nombre del sitio Web que desea evaluar.  El usuario introduce el URL del sitio Web que desea evaluar.  El usuario elige en el tipo de evaluación que desea verificar.  El usuario envía la petición al sistema.  El usuario hace clic en el botón “Visitar”. Flujo Alternativo:  El usuario accede a la página principal de la aplicación donde encontrará el listado de todas las evaluaciones previamente realizadas.  Hace clic en la página deseada y accede a dicho resultado.  En la página de resultado hace clic en el botón “Visitar”. Excepciones: Interrupción de la operación durante el tiempo de ejecución. Tabla 11- Documento de caso de uso 10 Caso de Uso: Actualizar evaluación. Actores: Usuario Web. Tipo: Flujo de extensión. Propósito: Actualizar resultados de la evaluación de accesibilidad a un sitio Web sin tener que llenar nuevamente los campos requeridos para la evaluación. Resumen: En caso de que el usuario desee saber si el desarrollador Web optimizo la accesibilidad de su sitio Web, o al cargar contenido nuevo verificar su accesibilidad, el usuario contará con un botón que agilice la actualización de resultados. Precondiciones: Haber ejecutado la evaluación al menos una vez. Flujo Principal:  El usuario accede a la sección “Nueva evaluación” desde la página principal.  El usuario introduce el nombre del sitio Web que desea evaluar.  El usuario introduce el URL del sitio Web que desea evaluar.  El usuario elige en el tipo de evaluación que desea verificar.  El usuario envía la petición al sistema.  El usuario hace clic en el botón “Actualizar”. Flujo Alternativo:  El usuario accede a la página principal de la aplicación donde encontrará el listado de todas las evaluaciones previamente realizadas.  Hace clic en la página deseada y accede a dicho resultado.  En la página de resultado hace clic en el botón “Actualizar”. Excepciones: Interrupción de la operación durante el tiempo de ejecución. Capítulo III. - 47 - Tabla 12- Documento de caso de uso 11 Caso de Uso: Eliminar evaluación. Actores: Usuario Web. Tipo: Flujo de extensión. Propósito: Eliminar resultados de evaluaciones previas. Resumen: En caso de que el usuario no desee conservar los resultados de alguna evaluación previa cuenta con un botón que elimina de la base de datos dichos resultados. Precondiciones: Haber ejecutado la evaluación al menos una vez. Flujo Principal:  El usuario accede a la sección “Nueva evaluación” desde la página principal.  El usuario introduce el nombre del sitio Web que desea evaluar.  El usuario introduce el URL del sitio Web que desea evaluar.  El usuario elige en el tipo de evaluación que desea verificar.  El usuario envía la petición al sistema.  El usuario hace clic en el botón “Eliminar”. Flujo Alternativo:  El usuario accede a la página principal de la aplicación hospedada en un servidor web, donde encontrará el listado de todas las evaluaciones previamente realizadas.  Hace clic en la página deseada y accede a dicho resultado.  En la página de resultado hace clic en el botón “Eliminar”. Excepciones: Interrupción de la operación durante el tiempo de ejecución. Capítulo III. - 48 - 3.5- Componentes de la aplicación Un componente de software representa un elemento del sistema de software que ofrece un conjunto de servicios y funcionalidades por medio de interfaces bien definidas. En los diagramas de componentes se muestran los elementos de diseño de un sistema de software, de esta manera es más fácil visualizar la estructura general del sistema y el comportamiento de servicios que dichos componentes prestan y utilizan a través de las interfaces, su comunicación y relación entre ellos. El diagrama de componentes de la aplicación se puede observar en la Ilustración 18, en la cual se destacan las tres (3) vistas, un (1) controlador, cinco (5) modelos y una base de datos. Ilustración 18- Diagrama de componentes La aplicación consta de diez (10) componentes principales descritos y clasificados a continuación en la tabla 13. (La base de datos se explicara más adelante en el apartado 3.8.1). Capítulo III. - 49 - Tabla 13- Componentes de la aplicación Vista  Index (Página de Inicio): Página principal de la aplicación en la cual se encontrará el historial de sitios Web evaluados previamente y el enlace de acceso para realizar una nueva evaluación.  Create (Nueva Evaluación): interfaz de la aplicación donde el usuario debe ingresar al momento de evaluar un nuevo sitio Web para poder agregar los datos de dicho sitio.  Show (Página de Resultado): interfaz que muestra el resultado de la evaluación y los comentarios de los usuarios que también realizaron dicha evaluación. Controlador  WebpageController: contiene las clases que sirven para interactuar con los modelos, las vistas y manejar la lógica de la aplicación. Los métodos que contiene el controlador son: - - index: Redirige la aplicación a su página principal Webpages.index. Si el usuario cuenta con un historial de evaluaciones es esta función quien se encargará de cargar dicho historial en la página principal de la aplicación. - - créate: el controlador invoca la vista Webpage.create para crear la entrada a la base de datos de un nuevo registro (evaluación). - - store: se encarga de obtener todos los datos que el usuario envió por formulario y por medio del método passes de la clase validator verifica la validez de los mismos. Además comprueba si ya existe en el historial del usuario algún registro con el mismo id de esa página que desea evaluar el usuario. En caso de que exista dicho id en la base de datos se le indica al usuario que la página fue evaluada previamente, si no existe el id se procede a validar el URL por medio del método validateURL del modelo Webpage el cual retornará el URL bien formado y se lo pasará al Curl para que pueda manipular el código HTML y crear un objeto DOMDocument, luego se genera la captura de pantalla de la página a evaluar y contacta a los métodos de los modelos requeridos para la evaluación indicada por el usuario, finalmente invoca al método show del controlador. - - show: el controlador invoca la vista Webpage.show para mostrar los resultados de la evaluación junto a los comentarios realizados por los usuarios que también realizaron la evaluación a dicha página. - - edit: este método es el que se invoca cuando el usuario desea actualizar el resultado de alguna de las evaluaciones pertenecientes a su historial. - - destroy: este método se ejecuta cuando el usuario confirma la eliminación de un registro perteneciente a su historial de evaluaciones. Modelo  Webpage: encargado de gestionar las verificaciones requeridas para que la evaluación pueda generare correctamente.  child: indica si la página evaluada es parte (hija) de un sitio Web cuya página principal (padre) ya fue evaluada.  comment: se encarga de almacenar comentarios y luego mostrarlos en los resultados de la evaluación.  tag: este modelo es el encargado de chequear el cumplimiento de los criterios por cada etiqueta del código HTML.  css: depura y valida código CSS y verifica reglas de contraste del fondo y colores. Capítulo III. - 50 - 3.6- Diagrama de secuencias de la aplicación Con los diagramas de secuencia se busca modelar la interacción entre objetos en un sistema través del tiempo para cada caso de uso. En cada diagrama de secuencia se deben indicar los módulos o clases que forman parte del programa, así como también las llamadas que se le realizan a cada uno de ellos para la ejecución de sus respectivas tareas. Se deben realizar los diagramas de secuencia para definir las acciones que se puedan ejecutar en la aplicación, por lo cual, a continuación se presentan los diagramas de secuencias de las acciones más destacadas de la aplicación como lo son: 1- Realizar una nueva evaluación 2- Revisar evaluación 3- Actualizar Revisión 4- Eliminar Evaluación En la Ilustración 19 se puede apreciar el diagrama de secuencia en el caso de que el usuario desee realizar una nueva evaluación. A continuación se describe paso a paso la secuencia: 1- El usuario hace clic en el enlace “Nueva evaluación”. 2- El enrutador recibe la petición y se comunica con el controlador 3- El usuario recibe la interfaz para llenar el formulario con los datos de la página Web que desea evaluar. 4- El método store del controlador recibe los datos que envió el usuario. 5- En el controlador se verifica la validez de los datos. 6- El controlador le hace la petición al modelo Webpage para que valide el URL por medio del método validateURL. 7- Se retorna el URL bien formado al controlador para que se lo envíe al Curl y se pueda manipular el código HTML y crear un objeto DOMDocument. 8- El controlador comprueba si ya existe en la base de datos algún registro con el mismo URL de esa página que desea evaluar el usuario. En caso de que no exista el URL en la base de datos se procede a crear una nueva entrada en la misma. 9- El controlador hace las respectivas peticiones a los modelos “tag” y “css” para ejecutar la evaluación de los criterios de éxito. 10- Los modelos le pasan el resultado al controlador y el método show del mismo envía la información a la vista show. 11- El usuario obtiene los resultados. Capítulo III. - 51 - Ilustración 19- Diagrama de secuencia para evaluación por principio de accesibilidad En la Ilustración 20 se puede apreciar el diagrama de secuencia en el caso de que el usuario desee revisar el resultado de algún sitio Web evaluado anteriormente, el cual quedo disponible en el historial de la aplicación. 1- El usuario accede a la página principal de la aplicación donde se encuentran los vínculos a todas las evaluaciones almacenadas en la base de datos. 2- El usuario selecciona la evaluación del sitio Web que desea revisar, de inmediato se realiza una consulta en la base de datos buscando el sitio Web por su respectivo identificador. 3- La base de datos retorna el resultado de la consulta 4- El usuario visualiza el resultado. Capítulo III. - 52 - Ilustración 20- Diagrama de secuencia para revisar evaluación desde el historial En la Ilustración 21 se puede apreciar el diagrama de secuencia en el caso de que el usuario desee actualizar la evaluación de algún sitio Web, el cual, obviamente ya fue evaluado en otra ocasión. La ventaja de esta acción es que el usuario no tiene que volver a llenar los datos del formulario. 1- El usuario accede a la página principal de la aplicación donde se encuentran los vínculos a todas las evaluaciones almacenadas en la base de datos. 2- El usuario selecciona la evaluación del sitio Web que desea revisar, de inmediato se realiza una consulta en la base de datos buscando el sitio Web por su respectivo identificador. 3- La base de datos retorna el resultado de la consulta. 4- El usuario hace clic en el botón “actualizar” con el cual se llama a la función edit del controlador WebpageController. 5- Se elimina el resultado anterior de la evaluación almacenado en la base de datos. 6- Se valida la existencia del URL (por los casos en los que la página deja de existir). 7- Se retorna el URL bien formado al controlador para que se lo envíe al Curl y se pueda manipular el código HTML y crear un objeto DOMDocument. 8- El controlador hace las respectivas peticiones a los modelos “tag” y “css” para ejecutar la evaluación de los criterios de éxito. 9- Los modelos le pasan el resultado al controlador y el método show del mismo envía la información a la vista show. 10- El usuario obtiene los resultados. Capítulo III. - 53 - Ilustración 21- Diagrama de secuencia para actualizar evaluación del historial En la Ilustración 22 se puede apreciar el diagrama de secuencia en el caso de que el usuario desee eliminar la evaluación de algún sitio Web. 1- El usuario accede a la página principal de la aplicación donde se encuentran los vínculos a todas las evaluaciones almacenadas en la base de datos. 2- El usuario selecciona la evaluación del sitio Web que desea revisar, de inmediato se realiza una consulta en la base de datos buscando el sitio Web por su respectivo identificador. 3- La base de datos retorna el resultado de la consulta. 4- El usuario hace clic en el botón “eliminar” con el cual se llama a la función destroy del controlador WebpageController. 5- Se elimina el resultado almacenado en la base de datos (incluyendo el resultado de las evaluaciones de páginas hijas del mismo sitio Web si las tiene). 6- Se redirecciona a la página de inicio de EAW. 7- El usuario queda con la interfaz de la página de inicio de EAW. Capítulo III. - 54 - Ilustración 22- Diagrama de secuencia para eliminar evaluación del historial 3.7- Herramientas Tecnológicas para el Desarrollo de la Aplicación Entre las tecnologías requeridas para el desarrollo de una aplicación Web se deben tener en cuenta las que permitan diseñar y estructurar el contenido de las páginas, implementar las funcionalidades y el dinamismo de las mismas, alojarlas y ponerlas en funcionamiento para su utilización por parte de los usuarios. El Evaluador de Accesibilidad Web (EAW), fue desarrollado en el lenguaje de programación PHP. Para establecer conexión con los servidores o proporcionar soporte para realizar peticiones HTTP y realizar scraping27 se utilizó el paquete curl perteneciente a la librería libcurl y para la implementación se aprovecharon las ventajas del framework Laravel versión 4.0. En lo que a la interfaz de usuario se refiere se hizo uso del framework Bootstrap basado en HTML y CSS. Entre esas tecnologías se encuentran: - Tecnologías del lado del cliente: se encuentran insertadas en la página HTML del cliente, las cuales, son interpretadas y ejecutadas por el navegador. Este tipo de tecnología se utiliza para mostrar la información y dar estética al sitio Web. Las tecnologías del lado del cliente utilizadas para el desarrollo de EAW son HTML, CSS, JavaScript y el framework Bootstrap. - Servidor Web: proporciona infraestructura y servicios a una aplicación cliente soportando la ejecución y disponibilidad de las aplicaciones desplegadas, gestionando la mayor parte de las funciones de lógica de negocio y de acceso a los datos de dichas aplicaciones. 27 Scraping: técnica utilizada mediante programas de software para extraer información de sitios Web. http://es.wikipedia.org/wiki/Programa_inform%C3%A1tico http://es.wikipedia.org/wiki/Sitio_web Capítulo III. - 55 - - Tecnologías del lado del servidor: son las que permiten desarrollar código que será ejecutado en el servidor Web. Posteriormente se envía la información al cliente a través de la red. La tecnología del lado del servidor utilizada para el desarrollo de EAW fue PHP. - Sistemas manejadores de base de datos: conjunto de programas que se encargan de manejar la creación y todos los accesos a la base de datos. Se compone de un lenguaje de definición de datos (DDL), un lenguaje de manipulación de datos (DML) y un lenguaje de consulta (SQL). En esta ocasión se utilizó el SMBD MySQL. 3.7.1- Tecnologías del Lado del Cliente A continuación encontrará una breve reseña de las tecnologías del lado del cliente utilizadas para el desarrollo de EAW. HTML (Hyper Text Markup Languag) HTML es un lenguaje de marcas diseñado para estructurar textos y presentarlos en forma de hipertexto con enlaces que redireccionan a otras fuentes de información, saltos de línea, listas, tablas, entre otros. Es empleado para el diseño y estructuración de página Web dado que es el estándar usado en la World Wide Web. El proceso de indicar las diferentes partes que componen la información se denomina marcar (markup en inglés). Cada una de las palabras que se emplean para marcar el inicio y el final de una sección se denominan etiquetas. Por medio del uso de etiquetas, HTML describe el aspecto visual que debe tener una página Web y de esta forma determinar la manera en la que se mostraran en el navegador los textos, contenido multimedia y otros elementos. Los enlaces, vínculos o hipervínculos, son elementos de un documento electrónico que hacen referencia a otro recurso. Al pulsar sobre él, instruimos al navegador para abrir el recurso al que hace referencia. Un documento en HTML está conformado por dos partes: la cabecera y el cuerpo. La primera se engloba entre las etiquetas <head>cabecera<</head> y el cuerpo se identifica por estar contenido entre las etiquetas <body>cuerpo</body>. De tal forma que la cabecera y cuerpo se enmarcan entre las etiquetas <html> y </html>. CSS (Cascading Style Sheets - Hojas de Estilo en Cascada) CSS es un lenguaje que describe la presentación de los documentos estructurados en hojas de estilo para diferentes métodos de interpretación, es decir, describe cómo se va a mostrar un documento en pantalla, por impresora, por voz (cuando la información es pronunciada a través de un dispositivo de lectura) o en dispositivos táctiles basados en Braille. CSS es una especificación desarrollada por el W3C, con el objetivo de permitir la separación de los contenidos de la página Web de la presentación del documento, incluyendo elementos tales como los colores, fondos, márgenes, bordes, tipos de letra, entre otros, modificando la apariencia de una página Web de forma sencilla, permitiendo a los desarrolladores controlar el estilo y formato de sus documentos. Separar la definición de los contenidos y la definición de su aspecto presenta numerosas ventajas, ya que obliga a crear documentos HTML/XHTML bien definidos y con significado completo, también conocidos como documentos semánticos. Además, mejora la accesibilidad del documento, reduce la complejidad de su mantenimiento y permite visualizar el mismo documento en infinidad de dispositivos diferentes. http://es.wikipedia.org/wiki/Documento_electr%C3%B3nico http://es.wikipedia.org/wiki/Recurso Capítulo III. - 56 - JavaScript JavaScript es un lenguaje de programación que se utiliza principalmente para crear páginas web dinámicas. Surgió con el objetivo inicial de programar ciertos comportamientos sobre las páginas Web, respondiendo a la interacción del usuario y la realización de automatismos sencillos. Una página web dinámica es aquella que incorpora efectos como texto que aparece y desaparece, animaciones, acciones que se activan al pulsar botones y ventanas con mensajes de aviso al usuario. Técnicamente, JavaScript es un lenguaje de programación interpretado, por lo que no es necesario compilar los programas para ejecutarlos. En otras palabras, los programas escritos con JavaScript se pueden probar directamente en cualquier navegador sin necesidad de procesos intermedios. A pesar de su nombre, JavaScript no guarda ninguna relación directa con el lenguaje de programación Java. Legalmente, JavaScript es una marca registrada de la empresa Sun Microsystems. La Web 2.0 se basa en el uso de JavaScript para implementar aplicaciones enriquecidas que son capaces de realizar gran cantidad de efectos, interfaces de usuario y comunicación asíncrona con el servidor por medio de Ajax28. JavaScript tiene dos características principales, por un lado que es un lenguaje basado en objetos, es decir, su paradigma de programación es orientado a objetos, y por otro lado es un lenguaje orientado a eventos, lo que implica que gran parte de la programación en JavaScript se centra en describir objetos y escribir funciones que respondan a eventos del usuario, por ejemplo, movimientos del ratón, pulsación de teclas, apertura y cerrado de ventanas o carga de una página. Bootstrap Es un framework CSS liberado por Twitter que permite crear interfaz Web con CSS y JavaScript. Además de manera automática adapta la interfaz dependiendo del tamaño de la pantalla del dispositivo en el que se visualice la página Web o navegador, esto se denomina diseño adaptativo. Entre las características de Bootstrap se pueden encontrar las siguientes: - Utiliza componentes y servicios creados por la comunidad Web - Utiliza un sistema de rejillas que por defecto incluye 12 columnas - Ofrece un diseño sólido usando LESS (procesador CSS) y estándares HTML5 y CSS3 - Es OOCSS, es decir, orientado a objetos, organizado por módulos independientes y reutilizables. - Tiene un tema por defecto optimizado que es modificable fácilmente. - Se integra perfectamente con las principales librerías Javascript, por ejemplo JQuery. - Permite crear interfaces que se adapten a los diferentes navegadores, tanto de escritorio como dispositivos móviles a distintas escalas y resoluciones. Dado que EAW es un evaluador de accesibilidad se tomó en cuenta al momento de desarrollo la posibilidad de que los usuarios podrían realizar sus respectivas evaluaciones desde diversos dispositivos y una manera de garantizar que la aplicación no se vea alterada en diversos dispositivos era con el uso de este framework CSS. Es por ello que se eligió Bootstrap para el diseño de esta herramienta. 28 AJAX, acrónimo de Asynchronous JavaScript And XML (JavaScript asíncrono y XML), es una técnica de desarrollo Web para crear aplicaciones interactivas que se ejecutan en el cliente, mientras se mantiene la comunicación asíncrona con el servidor en segundo plano. http://es.wikipedia.org/wiki/JavaScript http://es.wikipedia.org/wiki/XML http://es.wikipedia.org/wiki/Desarrollo_web http://es.wikipedia.org/wiki/Desarrollo_web http://es.wikipedia.org/wiki/Cliente_%28inform%C3%A1tica%29 http://es.wikipedia.org/wiki/As%C3%ADncrono Capítulo III. - 57 - 3.7.2- Servidor El servidor Web HTTP de implementación en esta herramienta de desarrollo es Apache en su versión 2.4.2, es de código abierto, multiplataforma, admite la Interfaz Common Gateway Interface (CGI) y el Server Side Includes (SSI). CGI se usa como un medio común de comunicación entre el software externo y el servidor Web, mientras que SSI es un archivo de comandos para el servidor. Los usuarios de Apache también pueden instalar otros módulos tales como un directorio de inicio para usuarios, redirección de URL, autenticación o acceso anónimo del usuario, entre otros. 3.7.3- Tecnologías del Lado del Servidor A continuación encontrará una breve reseña de las tecnologías del lado del servidor utilizadas para el desarrollo de EAW. PHP (Hypertext Pre-processor) PHP es un lenguaje de programación, diseñado originalmente para la creación de páginas Web dinámicas. Es usado principalmente en interpretación del lado del servidor pero actualmente puede ser utilizado desde una interfaz de línea de comandos o en la creación de otros tipos de programas incluyendo aplicaciones con interfaz gráfica usando las bibliotecas Qt29 o GTK+30. PHP es un lenguaje interpretado de propósito general ampliamente usado, que está diseñado especialmente para desarrollo Web y que puede ser embebido dentro de código HTML. Generalmente se ejecuta en un servidor Web. El 13 de julio de 2004, fue lanzado PHP 5, utilizando el motor Zend Engine31. La versión más reciente de PHP es la 5.2.6 (1 de Mayo de 2008), que incluye todas las ventajas que provee el nuevo Zend Engine 2 como: - Mejor soporte para la Programación Orientada a Objetos - Mejoras de rendimiento - Mejor soporte para MySQL - Mejor soporte a XML (XPath, DOM, etc.) - Soporte nativo para SQLite - Soporte integrado para SOAP - Manejo de excepciones 29 Qt es una biblioteca multiplataforma ampliamente usada para desarrollar aplicaciones con interfaz gráfica de usuario, así como también para el desarrollo de programas sin interfaz gráfica, como herramientas para la línea de comandos y consolas para servidores. 30 Conjunto de bibliotecas multiplataforma para desarrollar interfaces gráficas de usuario 31 El motor Zend es un motor de procesamiento para la interpretación y cifrado del código PHP, desde la versión 4. Desarrollado por Zend Technologies http://es.wikipedia.org/wiki/Biblioteca_%28inform%C3%A1tica%29 http://es.wikipedia.org/wiki/Multiplataforma http://es.wikipedia.org/wiki/Interfaz_gr%C3%A1fica_de_usuario http://es.wikipedia.org/wiki/Interfaz_gr%C3%A1fica_de_usuario http://es.wikipedia.org/wiki/Biblioteca_%28programa%29 http://es.wikipedia.org/wiki/Multiplataforma http://es.wikipedia.org/wiki/Interfaz_gr%C3%A1fica_de_usuario http://es.wikipedia.org/wiki/Zend_Technologies Capítulo III. - 58 - Laravel Laravel es un framework de código abierto para el desarrollo de aplicaciones web en PHP 5 que posee una sintaxis simple y elegante. Framework para el desarrollo de aplicaciones Web en PHP 5, desarrollado por Taylor Otwell en el año 2011, es de código abierto y viene con una propuesta simple con la opción de mantener el patrón modelo, vista, controlador para el desarrollo o interactuar directamente con peticiones HTTP a través de funciones anónimas asociadas a una ruta, lo cual permite reducir significativamente la cantidad de código. Algunas de las características de Laravel son las siguientes: - Actualmente va por la versión 4.1 publicada en octubre del 2013. - Está inspirado en Ruby and Rail y Symfony, del cual, posee muchas dependencias. - Incluye el sistema de mapeo de datos relacional Eloquent ORM. - Utiliza un sistema de procesamiento de plantillas llamado Blade. El mismo, utiliza la memoria cache para aportar mayor velocidad. Entre las razones por las cuales se eligió Laravel como framework para el desarrollo de EAW se encuentran las siguientes: - Incluye un ORM32: a diferencia de CodeIgniter33, Laravel incluye un ORM integrado. - Bundles: existen varios paquetes que extienden las funcionalidades de Laravel. - Tienen como filosofía evitar el código desordenado respetando la arquitectura MVC. - Se puede manejar la base de datos desde la misma aplicación (vía código) y tener un control de versiones de acciones que se hacen sobre la misma, a lo cual denominan migrations. - Aprovecha de las ventajas de PHP 5.3. A diferencia de CodeIgniter. - Las rutas te permiten tener control de las peticiones. Una misma ruta puede responder de distinto modo a un método GET o POST. A diferencia de CodeIgniter, en Laravel no hay riesgo de que ‘descubran’ una ruta (URL) mientras no la hayas definido. - Cuenta con su propio motor de plantillas HTML. - El framework es actualizable utilizando composer update y listo, nada de descargar un ZIP y estar remplazando. - La comunidad está viva. Todas mis dudas me las responden en menos de 5 minutos en el chat IRC, son todos muy amables. Curl Curl es una herramienta que permite abrir conexiones en una amplia variedad de protocolos y que está disponible tanto como herramienta de consola o como librería para usarla en código. El trabajo y tratamiento de información de las URL, como por ejemplo, comprobar existencia de dicha URL, explorar el contenido de una Web y copiar el contenido de la URL se realiza con curl, el cual, es 32 ORM- (Object-Relational Mapping): Permite interactuar con la base de datos como si cada tabla fuera un Modelo, respetando el patrón Modelo Vista Contrlador. 33 Framework PHP para el desarrollo rápido de aplicaciones web. Capítulo III. - 59 - compatible con PHP, y es el que se encarga de conectarse y comunicarse con diversos servidores y distintos protocolos, este paquete perteneciente a la librería libcurl fue creado por Daniel Stenberg. Actualmente, libcurl soporta los protocolos http, https, ftp, gopher, telnet, dict, file y ldap. Además libcurl también soporta certificados HTTPS, métodos HTTP POST y HTTP PUT, envío por FTP (que también puede realizarse con la extensión ftp de PHP), envío mediante HTTP de archivos en formularios HTML, servidores proxy, cookies y autenticación de usuario y contraseña. 3.7.4- Sistema Manejador de Base de Datos MySQL (My Estructured Query Language - Lenguaje de Consulta Estructurado) Es un sistema de gestión de bases de datos relacional, multiusuario y multihilo de código abierto con licencia dual ya que además de contar con su versión gratuita también existe la versión comercial que incluye diversos complementos. Las características más importantes de MySQL se describen a continuación: - Núcleo de aplicación completamente multihilo. Puede usar múltiples CPUs, si están disponibles. - Disponibilidad en diversas plataformas y sistemas operativos (Linux, Windows, Solaris, MacOS - X, OS/2, AIX, entre otros). - Provee motores de almacenamiento que tratan con distintos tipos de tablas, tanto transaccionales como no transaccionales. Entre ellos tenemos MyISAM, Memory, Merge, InnoBD, BDB. - APIs disponibles para C, C++, Eiffel, Java, Perl, PHP, Ruby and TCL. - El código de MySQL está comprobado por Purify (herramienta para verificación de problemas de memoria). - Soporta un ambiente Cliente/Servidor. - Relativamente sencillo de añadir otro sistema de almacenamiento. Esto es útil si desea añadir una interfaz SQL para una base de datos propia. - Las funciones SQL están implementadas usando una librería altamente optimizada y deben ser tan rápidas como sea posible. Entre las sentencias y funciones se tiene lo siguiente: - Soporte de operadores en la sentencia SELECT y la clausura WHERE. - Soporte de clausuras GROUP BY y ORDER BY, al igual que el grupo de funciones: count(), avg(),sum(), max, min(), entre otras. - En esta versión de MySQL se incorpora nuevas funcionalidades como los disparadores (triggers), procedimientos almacenados (Stored procedures) y vistas. A continuación se encuentran las ventajas de MySQL: - MySQL es de código abierto. - Proporciona velocidad al momento de realizar las operaciones, lo cual, se traduce en un excelente rendimiento. - Debido a su bajo consumo de recursos, es un manejador de base de datos ideal para una gran variedad de equipos con diversas características, incluyendo los de menos recursos. - Su instalación y configuración es sencilla para el usuario común. - La probabilidad de corromper datos es muy baja, incluso si los errores no se producen en el gestor, sino en el sistema donde se encuentra. Capítulo III. - 60 - - Su velocidad, conectividad y seguridad hacen que MySQL Server sea altamente apropiado para acceder bases de datos en Internet. - El software MySQL usa la licencia GPL (General Public License) la cual, garantiza a los usuarios finales la libertad de usar, estudiar, compartir y modificar el software. - Es escalable - Permite recurrir a bases de datos multiusuarios a través de la red. Por otro lado las desventajas son las siguientes - Gran porcentaje de las utilidades de MySQL no están documentadas. - No es intuitivo a diferencia de Access. - Dos de las funcionalidades de la aplicación requieren el uso de base de datos para almacenar la información requerida, la primera se trata del almacenamiento del historial de evaluaciones hechas, incluyendo las evaluaciones de páginas hijas, las cuales son subpáginas de la página principal del sitio Web evaluado y la segunda función que requiere almacenamiento de datos es la sección de comentarios mostrada en cada resultado de evaluación. Para tal fin el sistema manejador de base de datos seleccionado fue MySQL en su versión 5.5.24. Dos de las funcionalidades de la aplicación requieren el uso de base de datos para almacenar la información requerida, la primera se trata del almacenamiento del historial de evaluaciones hechas, incluyendo las evaluaciones de páginas hijas, las cuales son subpáginas de la página principal del sitio Web evaluado y la segunda función que requiere almacenamiento de datos es la sección de comentarios mostrada en cada resultado de evaluación. Para tal fin el sistema manejador de base de datos seleccionado fue MySQL en su versión 5.5.24. Para EAW se eligió MySQL como Sistema Manejador de Bases de Datos (SMBD), debido a su rapidez y facilidad de uso. Además de contar con un gran número de librerías y otras herramientas que permiten su uso a través de una variedad de lenguajes de programación, es de fácil instalación y configuración. En el evaluador de criterios de accesibilidad desarrollado para este Trabajo Especial de Grado contamos con la siguiente estructura en la base de datos llamada Webpageparser. Ilustración 23. Capítulo III. - 61 - Ilustración 23- Diagrama Entidad – Relación de la aplicación Como se puede apreciar en la ilustración 23, la base de datos Webpageparser cuenta con cuatro (4) tablas, para cubrir las dos funcionalidades antes mencionadas. A continuación se presenta la descripción de los campos de las principales tablas de la base de datos diseñada para la aplicación. Los nombres en inglés de las tablas se deben básicamente a la preferencia de la autora de este TEG, debido a las siguientes razones: 1- Siendo PHP el lenguaje utilizado para el desarrollo de la aplicación y considerando que su sintaxis es en inglés, se evita mezclar idiomas lo que hace más fácil la lectura del código. 2- En caso de que la aplicación pueda llegar a manos de algún programador foráneo podrá brindar ayuda y colaborar en posteriores actualizaciones siendo el inglés el idioma de manejo universal más sencillo. 3- Se evitan nombres de variables con palabras acentuadas que puedan causar confusión o con la letra ñ. Tabla Webpages: - id: campo que identifica de forma unívoca cada registro de la tabla, en este caso cada página que se evalúe tendrá su respectivo id. - name: almacena el nombre que el usuario le quiera asignar a la página que evaluará para identificarla en su historial de sitios evaluados. - url: dirección Web de la página a evaluar. - w3c: almacena el resultado de la evaluación de los criterios del w3c. - isParent: registro que guarda información relacionada con las paginas padres o hijas, si son padre en el campo se registra el número (1), si es hija se registra con el número cero (0). - screenshot: almacena la imagen de captura de pantalla del sitio Web evaluado. - evaluation: En este campo se registra la evaluación aplicada, en caso de que el tipo de evaluación sea por principios de accesibilidad almacenará los principios evaluados, en caso de que el tipo de evaluación sea por nivel de conformidad indicará cual nivel se evaluó. - created_at: día en el que se evaluó el sitio Web y se creó la entrada en la tabla. - updated_at: día de actualización de la tabla. Capítulo III. - 62 - Tabla children: - id: campo que identifica de forma unívoca cada registro de la tabla, en este caso cada página hija que se evalúe tendrá su respectivo id. - Webpage_id: en caso de que se esté evaluando una página hija, este campo almacena el identificador de la evaluación de la página padre, el cual a su vez es la clave primaria en la tabla Webpages en el registro de la página padre. - child_ Webpage_id: almacena el identificador de la evaluación de la página hija, el cual, a su vez es clave primaria en la tabla Webpages. - tag_id: almacena la clave primaria perteneciente a la tabla tags, indicando la etiqueta encontrada en la evaluación. - created_at: día en el que se evaluó el sitio Web y se creó la entrada en la tabla. - updated_at: día de actualización de la tabla. Tabla tags: - id: campo que identifica de forma unívoca cada registro de la tabla, en este caso cada etiqueta encontrada en el sitio Web evaluado. - Webpage_id: este campo almacena el identificador de la evaluación de la página evaluada donde se encontró la etiqueta a la que le pertenece la clave primaria del registro en cuestión. - index: en caso de que la etiqueta aparezca varias veces en la misma página evaluada es necesario diferenciar cada repetición de la misma, por este fin se cuenta con un índice de etiqueta. - line: almacena la línea del código fuente donde se encuentra la etiqueta perteneciente a la misma entrada de la tabla. - name: nombre de la etiqueta. - attributes_content: atributos de la etiquetas. - important_value: Se almacenan los enlaces encontrados en la página evaluada. - evaluation: Tipo de principio o nivel de conformidad que se aplicó en la evaluación de esa etiqueta. - approved: si la etiqueta evaluada cumple con la regla se registra un uno (1) en el campo, si no cumple con la regla se registra un cero (0). - detail: hay etiquetas donde es necesario dar alguna explicación del resultado. - created_at: día en el que se evaluó el sitio Web y se creó la entrada en la tabla. - updated_at: día de actualización de la tabla. Tabla comments: - id: campo que identifica de forma unívoca cada registro de la tabla, en este caso, cada comentario encontrado en el sitio Web evaluado. - Webpage_id: este campo almacena el identificador de la evaluación de la página evaluada donde se encontró el comentario - author: este campo almacena el nombre de la persona que realizó el comentario. - comment: comentario realizado por la persona cuyo nombre se almacena en el campo autor del mismo registro. - created_at: día en el que se creó la entrada en la tabla. - updated_at: día de actualización de la tabla. Para más detalles referentes a la plataforma de desarrollo para EAW puede consultar el Anexo 3. Capítulo III. - 63 - 3.8- Fase de Codificación Con el fin de cumplir con los requerimientos y funcionalidades de la aplicación se procedió a integrar y organizar los componentes en un ambiente de desarrollo utilizando Laravel, bajo la estructura de Modelo, Vista, Controlador que este framework permite implementar con facilidad. A continuación se encuentra una breve explicación de las funciones desarrolladas para hacer posible el funcionamiento de la aplicación, clasificadas según la arquitectura de software MVC: Vistas: La aplicación cuenta con tres (3) vistas, en la primera se muestra la página de inicio (ver Ilustración 24), en la cual se encuentra el historial de páginas evaluadas anteriormente indicadas con el comentario de color amarillo y el enlace para realizar una nueva evaluación en la barra de menú superior junto al comentario de color verde. Ilustración 24- Vista principal de la aplicación La segunda vista se puede observar en la Ilustración 25, la cual, contiene el formulario para que el usuario pueda ingresar los datos de la página Web que desea evaluar. El comentario de color verde indica el cuadro de texto donde el usuario debe escribir el URL de la página que desea valuar, el comentario de color amarillo indica la lista desplegable que contiene las opciones con los tipos de evaluación disponibles y el comentario morado muestra el botón de orientación para el usuario. Capítulo III. - 64 - Ilustración 25- Vista para realizar una nueva evaluación También en la vista de la “Nueva Evaluación”, el usuario dispone de un botón ubicado en la barra de menú superior, con el objetivo de poder orientar al usuario que lo necesite en cuanto a la información requerida para elegir las opciones de evaluación de sitios Web según nivel de conformidad o principio de accesibilidad. Cuando el usuario haga clic en ese botón de desplegará una ventana emergente como se muestra en la Ilustración 26. Ilustración 26- Orientación para el usuario al momento de realizar una nueva evaluación En la ilustración 27 se pueden apreciar las dos modalidades de evaluación disponibles en la aplicación EAW, evaluación por principios de accesibilidad (la cual, está indicada en la Ilustración 27 con un cuadro verde) o evaluación por nivel de conformidad (señalado por un recuadro de color anaranjado en la misma Ilustración), otro detalle importante que se puede apreciar es que en los principios de accesibilidad el usuario puede elegir múltiples opciones mientras que en la evaluación por nivel de conformidad solo se permite elegir uno. Capítulo III. - 65 - Ilustración 27- Opciones para el tipo de evaluación que se quiere realizar En la Ilustración 28 se puede apreciar que en la tercera vista se muestran los resultados de la evaluación, filtrados por principios de accesibilidad, los detalles se encuentran en la tabla 14: Tabla 14– Leyenda de comentarios de la ilustración 28 Color del comentario Descripción del comentario En la Ilustración 27 junto al cuadro verde se puede observar la captura de la pantalla de la Web evaluada. En la Ilustración 27 junto al cuadro anaranjado se aprecia la evaluación de criterios clasificados por etiquetas. En la Ilustración 27 junto al cuadro morado se ubica el porcentaje asociado al grado de accesibilidad del recurso y el porcentaje de recursos que presentan problemas. En la Ilustración 27 junto al cuadro azul se encuentra la sección de comentarios de usuarios. En la Ilustración 27 junto al cuadro amarillo se aprecia la información referente al tipo de evaluación, URL, tecnologías verificadas y la fecha en la que se llevó a cabo. En la Ilustración 27 junto al cuadro rojo se encuentran los enlaces de páginas que conforman el sitio Web para que puedan ser evaluados a solicitud del usuario. En la Ilustración 27 junto al cuadro rosado se muestra el panel de botones para actualizar evaluación, visitar Web, ir al historial o imprimir el resultado. Capítulo III. - 66 - Ilustración 28- Vista para mostrar el resultado de la evaluación Cuando se muestran los resultados clasificados por etiqueta el usuario tiene la opción de desplegar la tabla para ver los detalles de cada criterio evaluado, esto se logra pulsando el botón “Ver/ocultar resultado de la evaluación” ubicado en cada etiqueta. En la Ilustración 29 se puede ver junto al comentario de color verde el botón ver resultados, es decir, la tabla de la etiqueta ‹img› esta oculta aún, por el contrario, el comentario anaranjado, muestra en la etiqueta ‹input› el botón “Ocultar resultado”, ya que la tabla si está desplegada mostrando los detalles de la evaluación de esos criterios (comentario amarillo). Capítulo III. - 67 - Ilustración 29- Vista detallada de los resultados de la evaluación Controlador Como se pudo apreciar en la Ilustración 18, para el funcionamiento de EAW solo se desarrolló un controlador, el cual, está conformado por seis (6) funciones principales las cuales se describen a continuación: - Función index: Redirecciona la aplicación a la página de inicio. - Función create: función invocada cada vez que se solicita la evaluación de una Web. - Función store: se encarga de validar los datos de entrada del formulario de una nueva evaluación, verifica si ya ese URL está almacenado en la base de datos, estandariza el URL, interpreta y escanea el código HTML para extraer cualquier información relevante para la evaluación por medio del uso de la clase DOMdocument de PHP. Posteriormente se comunica con los modelos requeridos según el tipo de evaluación solicitada por el usuario, recibe los resultados de la evaluación y gestiona la petición de almacenamiento. - Función show: dado el identificador de la Web evaluada, se realiza la búsqueda en la base de datos y se retorna el resultado por medio de la vista show. - Función edit: función convocada al momento de solicitar actualización de una evaluación existente. - Función destroy: gestiona la petición de eliminación de la base de datos los registros relacionados con la evaluación de determinada página Web. Modelo En la arquitectura de software MVC, es en el modelo donde se efectúa la interacción con la base de datos además de gestionar la lógica de negocios. Para el desarrollo de EAW, se implementaron cinco (5) modelos que interactúan con el controlador y la base de datos, los cuales, se presentan a continuación: Capítulo III. - 68 - - Modelo Webpage: cuenta con funciones encargadas de validar la URL proporcionada por el usuario para su respectiva evaluación, estandarizar dicha URL bajo un mismo formato (por ejemplo: http://direción.com) e inicializar el curl para poder manipular el código HTML. - Modelo Child: se encarga de cargar la lista de páginas “hijas” de la Web analizada. Al hacer referencia a páginas hijas se trata de los enlaces encontrados en la página que está mostrándose como resultado de una evaluación la cual cumpliría el rol de página padre. - Modelo Comment: valida que la cantidad de caracteres de los comentarios que desean realizar los usuarios en determinada página Web no pasen los 255 caracteres y carga los comentarios que se han hecho anteriormente. - Modelo CSS: en este modelo se encuentra la función encargada de localizar el o los archivos con la extensión CSS del sitio Web, la etiquetas de estilo dentro del HTML y otras funciones que permiten depurar el código de comentarios, pasarlo a string y separar los selectores y declaraciones en diferentes cadenas de caracteres para poder analizarlas posteriormente accediendo al arreglo donde se almacenaron. Además cuenta con las funciones encargadas de evaluar el contraste y la iluminación del sitio Web y la justificación de los párrafos. - Modelo Tag: Dados los diferentes escenarios que pueden presentarse según la elección del usuario en cuanto al tipo de evaluación deseada, en el modelo Tag se encuentran las funciones asociadas a cada uno de esos posibles escenarios, y estas funciones, a su vez, llamarán a las funciones encargadas de evaluar cada criterio de accesibilidad según sea el caso. 3.9- Navegabilidad de la herramienta La interacción con la herramienta se realiza a través de un sitio Web desarrollado con páginas dinámicas en PHP, el cual, a partir de ciertos datos de entrada que proporciona el usuario puede realizar la evaluación de criterios de accesibilidad solicitados. El esquema de navegación de EAW es simple, una vez que el usuario se encuentre en la página de inicio tiene dos opciones, realizar una nueva evaluación o revisar el resultado de algún evaluación del historial mostrado en la página principal. Si el usuario elige la opción de realizar una nueva evaluación se pueden presentar cualquiera de los siguientes dos escenarios: A continuación se describirá el diagrama de navegabilidad de EAW mostrado en la Ilustración 30: Desde la página de inicio el usuario tiene dos opciones: A. Hacer clic en el enlace que lo lleva a la página para realizar una nueva evaluación. B. Revisar alguna evaluación del historial, el cual forma parte de la página principal de EAW. Si el usuario eligió la opción “A” puede ocurrir cualquiera de los siguientes escenarios: C. El URL del sitio Web que el usuario desea evaluar ya existe en la base de datos de EAW. D. El URL del sitio Web que el usuario desea evaluar es válido y se ejecuta la evaluación. En caso de que el escenario “C” se ocurra el usuario tendrá dos (2) opciones: E. Ir al historial y buscar la evaluación de la página deseada F. Volver a llenar el formulario de “Nueva Evaluación” con datos válidos. (Se dice que los datos son válidos cuando el URL está correctamente escrito y no existe en la base de datos de EAW). En caso de que el escenario “D” o “F” ocurran se le muestra al usuario el resultado de la evaluación solicitada. Capítulo III. - 69 - Ilustración 30- Diagrama de navegación del sitio Web 3.9- Consideraciones de diseño En este apartado se describirá el proceso de selección de patrones de diseño de interfaz y el origen de los elementos principales de la interfaz de la aplicación. Es importante destacar que dado que existen aplicaciones reconocidas diseñadas para el mismo propósito de evaluar la accesibilidad de las páginas Web, como es el caso de TAW, HERA o HEVAC, se incorporaron a EAW elementos que están implementados en la interfaz de usuario de cada una de ellas, sin replicar bajo ninguna circunstancia su código. En la Ilustración 31 se muestra la interfaz de los formularios de evaluación de TAW y la de HEVAC, donde claramente se puede apreciar la caja de texto para que el usuario escriba el URL de la página Web que desea evaluar, y en el caso de HEVAC aparece el menú de opciones para el tipo de evaluación, ambas características se implementaron en EAW. Ilustración 31– Formulario de evaluación de TAW y HEVAC Capítulo III. - 70 - En este caso, EAW, también tiene en su página de inicio el historial de evaluaciones realizadas anteriormente y el enlace que conducirá a la interfaz para realizar nueva evaluación. En cuanto al formulario de la aplicación para realizar una nueva evaluación de accesibilidad se tomó en cuenta el diseño de HEVAC en lo que se refiere al uso de radio buttons y checkboxes para la elección de nivel de conformidad o principios de accesibilidad respectivamente. Además, también cuenta con la caja de texto dispuesta para que el usuario introduzca el URL de la página Web que desea evaluar, como se puede apreciar e la Ilustración 32. Estas ideas para la interfaz de usuario se implementaron también en EAW por la facilidad que aportan para el proceso de realizar una nueva evaluación, en el caso de los principios de accesibilidad, lo ideal era el uso de checkboxes considerando que el usuario puede elegir la combinación que desee de principios de accesibilidad para su evaluación, por el contrario, cuando se trata de evaluar por nivel de conformidad sólo se debe elegir un nivel, por este motivo los radio buttons fueron considerados los más indicados e intuitivos. En la ilustración 32 se destacan tres comentarios: 1- En lado inferior izquierdo bordeado por un recuadro amarillo, se encuentra la opción de evaluación por principio de accesibilidad, donde se destacan los checkboxes para la elección de la combinación de principios de accesibilidad deseada. 2- En el lado inferior derecho bordeado por un recuadro azul, se encuentra la opción de evaluación por nivel de conformidad, donde se destacan los radio buttons para la elección de alguno de los niveles disponibles. 3- En zona superior de la ilustración, bordeado por un rectángulo de color rojo, se destacan los cuadros de texto donde el usuario debe escribir tanto el URL de la página Web que desea evaluar como también el nombre que le asignara a esa evaluación. Ilustración 32– Opciones de tipos de evaluación de la aplicación Como aporte personal en lo que se refiere específicamente a esta vista de la aplicación, se le agregó a EAW un botón cuya finalidad es la de orientar al usuario en cuanto a la teoría relacionada con los principios de accesibilidad y niveles de conformidad, de esta manera el usuario estará informado sobre las posibles opciones entre las que puede elegir al momento de realizar la evaluación. Además cuenta con un campo para el nombre descriptivo que el usuario desee asignarle a la evaluación, lo cual se puede apreciar en la Ilustración 33. Capítulo III. - 71 - Ilustración 33– Botón de ayuda y campo para el nombre de la evaluación de la interfaz de usuario de EAW En lo que a resultados se refiere, se rescataron varias ideas importantes de TAW y HEVAC para implementarlas en EAW, entre los cuales se encuentran: - Datos de la evaluación realizada, como lo son la fecha y el tipo de evaluación, en la Ilustración 34 se ve en lado izquierdo los datos que muestra la aplicación HEVAC en sus resultados de evaluación y en el lado derecho están los datos que se muestran en EAW. Ilustración 34– Comparación de los datos, fecha y tipo de evaluación - Indicar detalles relevantes de los criterios evaluados y su ubicación en el código fuente. En la ilustración 35 se puede apreciar la comparación entre la tabla de detalles mostrada en la aplicación HEVAC y EAW. Capítulo III. - 72 - Ilustración 35– Comparación de las tablas de detalles de los criterios evaluados - En cuanto a reglas o criterios evaluados, el usuario tiene la opción de presionar el botón “Ver reglas aplicadas” y verificar qué criterios se evaluaron, de esta manera podría solventar las incidencias de error mostradas. Un ejemplo de estas ventanas emergentes con la explicación de reglas aplicadas se puede observar en la Ilustración 36. Ilustración 36– Consejos para programadores para solventar incidencias de error - Presentar el porcentaje del grado de accesibilidad global de la página evaluada es un factor importante para facilitar la comprensión del resultado aportado en este caso por la interfaz de la aplicación TAW, adaptado por HEVAC y nuevamente tomado en cuenta por la aplicación desarrollada para este TEG, EAW, como se puede visualizar en la imagen 37. Capítulo III. - 73 - Ilustración 37– Comparación de la presentación de los resultados del grado de accesibilidad de la página evaluada Como ideas propias para la interfaz de usuario de EAW se implementó un conjunto de características descritas a continuación: - En la Ilustración 38 se puede apreciar la página principal de EAW, desde la cual, el usuario puede acceder a cualquier evaluación del historial haciendo clic en la captura de imagen perteneciente a la página evaluada. Ilustración 38- Captura de pantalla de la página principal de EAW mostrando el historial de evaluaciones realizadas - En la ilustración 39 se muestra la página de resultados y claramente se puede apreciar en el cuadrante superior izquierdo la captura de imagen de la página evaluada. Capítulo III. - 74 - Ilustración 39– Captura de pantalla de la página evaluada mostrada al inicio del resultado - En el cuadrante superior derecho de la vista de resultados, se muestra un listado con los enlaces encontrados en la página evaluada como se puede observar en la Ilustración 40, cada enlace tiene la opción para ser evaluado posteriormente (botón “Analizar” señalado con el comentario morado de la Ilustración 40) o también se pueden revisar las evaluaciones ya realizadas a esos enlaces con el botón “ver”, además el usuario cuenta con una serie de botones para eliminar, actualizar la evaluación o visitar página Web señalados con el comentario del recuadro amarillo en la Ilustración 40. Ilustración 40– Listado de enlaces encontrados en la Web para ser evaluados y botones de edición de evaluación y visita al sitio Web evaluado - Los resultados se presentan clasificados por etiqueta HTML, por cada una de ellas se muestra la cantidad de aciertos e incidencias de error como se muestra en el comentario del rectángulo amarillo de la Ilustración 41. En caso de que el usuario desee más información acerca de dichos criterios aprobados y reprobados podrá acceder en detalle a dichos resultados haciendo clic en el enlace superior “Ver resultado de la evaluación de la etiqueta”. Capítulo III. - 75 - Ilustración 41– Información numérica de recursos evaluados - Al final del resultado de cada evaluación el usuario dispone de una sección para comentarios, la cual, se puede apreciar en la Ilustración 42, la misma se implementó con el fin de que los usuarios puedan aportar comentarios relacionados con la evaluación, ayudas técnicas al desarrollador de la página evaluada o consejos a futuros visitantes. Ilustración 42– Foro de la aplicación Capítulo III. - 76 - 3.10- Cálculo de Resultados de la Evaluación y Estadísticas Dados los resultados clasificados por las etiquetas HTML, se muestra la cantidad de criterios aprobados o reprobados por cada una de ellas junto a su respectivo porcentaje. A su vez, al final de la página de resultados se encuentra el grado de accesibilidad global del recurso y el porcentaje de recursos que presentan problema. Para realizar el cálculo de criterios aprobados o reprobados por cada etiqueta se realizan las siguientes acciones: - En el ciclo encargado de verificar el cumplimiento de criterios por cada etiqueta se inicializaron dos variables para ser utilizadas como contadores: $approvedCount=0; $noApprovedCount=0; - Dada una consulta en la base de datos de la evaluación realizada por medio de un condicional insertado en un ciclo, se va verificando si cada criterio es aprobado o no (Ilustración 43), y según sea el caso se va sumando un punto al contador correspondiente: Ilustración 43– Contadores de criterios aprobados y reprobados - Al finalizar el ciclo completo por cada etiqueta se sumarán las cantidades de ambos contadores, de esta manera, se toman en cuenta los criterios aprobados y reprobados obteniendo el 100% de criterios evaluados y por medio de una regla de tres se puede conocer el porcentaje de criterios aprobados y reprobados por etiqueta como se puede apreciar en la Ilustración 44. Ilustración 44– Cálculo del porcentaje de criterios aprobados y reprobados por etiqueta Capítulo III. - 77 - En lo que al grado de accesibilidad global de la página se refiere, se realizaron dos consultas en la base de datos de resultados de la evaluación, si el criterio fue aprobado se le asignó el valor uno (1), si el criterio fue reprobado se le asignó el valor cero (0). Teniendo esta información en cuenta y al sumar la cantidad de criterios aprobados y reprobados de la página evaluada independientemente de la etiqueta a la que pertenezcan se tiene el total de recursos evaluables dentro de la página como se puede apreciar en la Ilustración 45. Ilustración 45- Suma de todos los elementos evaluables dentro de la página ya sean aprobados o reprobados Una vez obtenida la cantidad total de recursos evaluables de la página en cuestión, es posible calcular el grado de accesibilidad global de la página por medio de una regla de tres como se aprecia en la Ilustración 46. Ilustración 46– Cálculo del grado de accesibilidad global del recurso Capítulo IV. - 78 - Capítulo IV – Pruebas y Resultados 4.1- Proceso de Pruebas Para cumplir con esta etapa, se le aplicaron cinco tipos de prueba a EAW: 1- Prueba de funcionalidad, la cual, fue realizada ejecutando y revisando cada una de las funciones previamente diseñadas en los diagramas de casos de uso. 2- Evaluación del grado de accesibilidad de EAW utilizando una versión espejo de sí misma para someterla a prueba. 3- Pruebas de usabilidad donde serán los usuarios quienes experimenten con la aplicación y posteriormente expresen su opinión acerca de la misma. 4- Comparación de EAW con otras herramientas de evaluación. 5- Evaluación de algunos sitios Web reconocidos con EAW. A continuación se encuentran las pruebas realizadas con la herramienta EAW y los respectivos resultados en cada una de ellas. 4.1.1- Pruebas realizadas a las funcionalidades de la aplicación EAW Con el objetivo de cumplir con otra de las fases del proceso de pruebas, se tomó en cuenta cada caso de uso planteado en el apartado 3.3 de este TEG, y de esta manera, ejecutar las pruebas comprobando el correcto funcionamiento de los mismos. Caso de uso 1: Evaluar Web según nivel de conformidad Para llevar a cabo esta prueba fueron seleccionadas algunas técnicas de suficiencia pertenecientes a dos criterios del nivel de conformidad “A”, las técnicas que se tomaron en cuenta para este caso son: - La etiqueta ‹html› debe contener el atributo lang. - El documento debe contener la etiqueta ‹title› - La etiqueta ‹img› debe tener el atributo alt. Ilustración 47– Prueba de evaluación de algunos criterios de accesibilidad verificados para el Nivel de Conformidad “A” Capítulo IV. - 79 - Como se puede apreciar en la Ilustración 47, se muestran en el código dos incidencias de error escritas de manera intencional y dos (2) criterios de accesibilidad cumplidos resaltados en rojo y verde respectivamente. Cabe destacar que en el ejemplo de la ilustración 47 se sometieron a prueba tres (3) de los criterios que se toman en cuenta al momento de realizar una evaluación de Nivel de Conformidad “A”. A continuación en la ilustración 48 se puede visualizar el resultado arrojado por la aplicación al solicitar la evaluación del código expuesto en la Ilustración 47. Al analizar los resultados de la Ilustración 48, se observa que efectivamente las dos incidencias de error escritas intencionalmente en el código salen reflejadas como criterios reprobados en las líneas 2 y 11 enmarcadas en rectángulos rojos, por otro lado, los dos criterios escritos correctamente salen en estado aprobado y sus líneas indicadas correctamente, 5 y 12 enmarcadas en rectángulos verdes. Es importante destacar que en la tabla de resultados por cada etiqueta, el campo evaluación muestra claramente que el nivel de conformidad “A” resaltado en color amarillo como se propuso desde el principio. Ilustración 48– Resultado de prueba de evaluación de algunos criterios de accesibilidad verificados para el Nivel de Conformidad “A” Capítulo IV. - 80 - Ahora se realizará la prueba con otro nivel de conformidad, en esta oportunidad, con el nivel AAA, para tomando en cuenta los siguientes criterios: - Como requisito para la etiqueta ‹a› si posee el atributo name el valor debe ser único. - La etiqueta ‹a› debe tener algún contenido dentro de la etiqueta. En la Ilustración 49 se puede visualizar el código fuente con el que se hizo la prueba de nivel de conformidad “AAA”, la cual, contiene premeditadamente cuatro (4) incidencias de error señaladas con un comentario rojo en la misma imagen, también tiene un acierto en los criterios señalado con un comentario verde. El resultado de esta prueba se puede visualizar en la Ilustración 49. Ilustración 49– Resultado de prueba de evaluación de algunos criterios de accesibilidad verificados para el Nivel de Conformidad “A” Al analizar los resultados de la Ilustración 50, se puede visualizar que efectivamente las cuatro (4) incidencias de error escritas intencionalmente en el código salen reflejadas como criterios reprobados en las líneas 15, 16,18 y 20 señalizadas con rectángulos rojos, por otro lado, el criterio escrito correctamente sale en estado aprobado en la tabla de detalles de la etiqueta ‹a› y su línea indicada correctamente es la 3 señalizada con rectángulo verde. Es importante destacar que en la tabla de resultados por cada etiqueta, el campo evaluación muestra claramente que el nivel de conformidad “AAA” como se propuso desde el principio, lo cual se destaca en color amarillo en la misma ilustración. Capítulo IV. - 81 - Ilustración 50– Resultado de prueba de evaluación de algunos criterios de accesibilidad verificados para el Nivel de Conformidad “AAA” Dadas las evidencias anteriores se puede concluir que el Caso de Uso 1: “Evaluar Web según nivel de conformidad” se cumple, distinguiendo las incidencias según su nivel de conformidad. Caso de uso 2: Evaluar Web según principio de accesibilidad Para llevar a cabo esta prueba se seguirá el mismo patrón de evaluación que en la prueba anterior, con la diferencia de que en esta oportunidad se evaluaran los principios de accesibilidad. La primera prueba será con los principios de accesibilidad perceptible y comprensible, la segunda prueba se realizará con los principios robusto y operable. Como se mencionó anteriormente la primera evaluación de esta prueba se realizará tomando en cuenta los principios de accesibilidad perceptible y comprensible, de los cuales se toman los siguientes criterios a ser cumplidos para el ejemplo. Para chequear los criterios del principio de accesibilidad “Perceptible” se tomarán en cuenta tres criterios. - La etiqueta ‹input› debe tener el atributo value. - En la etiqueta ‹label› el valor del atributo for debe coincidir con el valor del atributo name de la etiqueta ‹input› que se encuentre en el mismo formulario. - La etiqueta ‹table› debe contener la etiqueta ‹tr› que a su vez contiene la etiqueta ‹th›. Capítulo IV. - 82 - Para chequear el criterio del principio de accesibilidad “Comprensible” que coincide con el apoyo de usuarios que presenten algún tipo de discapacidad visual o motriz, se debe verificar que la etiqueta ‹html› contenga el atributo lang. En la ilustración 51 se puede apreciar el código fuente con el cual se realizó la primera prueba del segundo caso de uso. Ilustración 51- Prueba de evaluación: Principios de Accesibilidad Perceptible y Comprensible Dado el código fuente de la Ilustración 51, al evaluarlo con EAW, se obtiene el resultado mostrado en la Ilustración 52, del cual se puede destacar los principios evaluados en la columna denominada “Evaluación”. Capítulo IV. - 83 - Ilustración 52- Prueba de evaluación de algunos criterios de accesibilidad verificados para los Principios de Accesibilidad Perceptible y Comprensible Como se pudo apreciar en la Ilustración 52, el criterio que se evaluaría para verificar el principio de accesibilidad “Comprensible” sería que la etiqueta ‹html› tuviera el atributo lang, en la línea 1 del código fuente de la Ilustración 51 se puede apreciar el cumplimiento de dicho criterio resaltado en verde para afirmar que intencionalmente se escribió correctamente para realizar la prueba, Capítulo IV. - 84 - posteriormente en la Ilustración 52 se muestra los resultados se verifica que efectivamente el criterio bajo la evaluación del principio “Comprensible” se cumplió. En cuanto a los criterios relacionados con el principio de accesibilidad “Perceptible” del código de la Ilustración 51, se pueden apreciar que efectivamente en la línea 14 y 15 se cumple el criterio de la etiqueta <label> donde el valor del atributo form coincide con el valor del atributo name de la etiqueta <input>, al igual que en el ejemplo de las líneas 18 y 19. El resultado se puede apreciar en la Ilustración 52. La segunda prueba del caso de uso 2, se realizará evaluando un código fuente bajo los principios de accesibilidad “Operable” y “Robusto”, el cual se puede apreciar en la Ilustración 53. Ilustración 53- Prueba de evaluación de algunos criterios de accesibilidad verificados para los Principios de Accesibilidad Perceptible y Comprensible Del principio de accesibilidad “Operable” se considera que la etiqueta <input> debe tener el atributo tabindex y del principio de accesibilidad “Robusto” se evaluará con el Servicio de Marcado de W3C. Como se puede apreciar en la Ilustración 53, el formulario contiene cinco (5) campos y un botón enviar, de los cuales un solo campo no cuenta con el atributo tabindex, en la Ilustración 53, se encuentra resaltada la incidencia del error intencional para efectos de la prueba en color rojo. A continuación, en la Ilustración 54, se muestra el resultado de la evaluación del código fuente de la Ilustración 53, como se puede apreciar los criterios sometidos a evaluación en esta prueba según el código estan resaltados en amarillo. Capítulo IV. - 85 - Ilustración 54– Resultado de la prueba de evaluación para los Principios de Accesibilidad Operable y Robusto En lo que se refiere a la evaluación de la etiqueta <input> en cuanto al contenido del atributo tabindex, se evidencia la correspondencia entre la ilustración 53 y la Ilustración 54 al comparar las líneas de reporte de error o reporte de criterio aprobado, es decir, en la Ilustración 53 se muestra el error del tabindex faltante en la línea e código número 13, luego si se revisa la Ilustración 54 que contiene los resultados para esta prueba arrojados por la aplicación, se puede apreciar que el único error registrado en la evaluación de etiqueta <input> se encuentra en la línea número 13 coincidiendo con el código fuente mostrado en la Ilustración 53. Por otro lado, el resultado arrojado por el Servicio de Validación de Marcado de W3C a pesar de que se muestra parcialmente, el usuario puede acceder en detalle al resultado haciendo clic en el enlace “Ver Capítulo IV. - 86 - reglas aplicadas” el cual mostrará una ventana emergente y al dirigirse al URL indicado aparecerá detalladamente el resultado arrojado por el Servicio de Validación de Marcado W3C (Ilustración 55). Ilustración 55– Validación de marcado de W3C del código mostrado en la ilustración 55 Dados los resultados de las dos pruebas anteriores se puede concluir que el caso 2 se cumple en la aplicación ya que la funcionalidad de evaluar páginas Web por principio de accesibilidad se ejecutó de manera exitosa. Caso de uso 3: Evaluar otras páginas que conformen el sitio Web Para poder tener acceso a los enlaces contenidos dentro de una página Web y optar por la opción de evaluar también esas páginas, es primordial contar primero con la evaluación de una de las páginas del sitio Web, ya que a partir de esa primera evaluación es cuando se podrán obtener los demás enlaces. Para probar este caso de uso se tendrán cuarto páginas en un sitio Web, en cada una existirán los enlaces a las otras tres páginas, y se procederá a evaluar la página principal (Index). Ilustración 56). Ilustración 56– Listado de enlaces encontrados en la página analizada Capítulo IV. - 87 - Como se puede apreciar en la Ilustración 56, se muestra el listado de enlaces encontrados en la página evaluada, cada uno de esos enlaces tiene al lado a opción para analizar la página. Al presionar el botón “Analizar” ubicado junto a un icono que representa una “X” de color rojo que indica que el enlace que tiene a su lado izquierdo no ha sido analizado, se muestra la interfaz de usuario de la Ilustración 57, donde se puede apreciar que los campos señalizados con rectángulos amarillos no son editables, ya que estos contienen las URL del sitio principal de la página evaluada anteriormente y el enlace del sitio Web que se quiere evaluar actualmente. Los campos que están señalizados con rectángulos morados si son editables, ya que el nombre que se le quiera dar a la evaluación o el tipo de evaluación que se le quiera aplicar a dicha página es independiente del nombre y tipo de evaluación de las demás páginas pertenecientes al mismo sitio Web. Ilustración 57- Formulario de evaluación para página perteneciente a sitio Web que ya fue evaluado anteriormente Una vez analizada la página del enlace elegido se mostrará la vista de resultados con los datos correspondientes. En caso de que el usuario desee volver a la página principal, se puede dirigir al historial de páginas Web evaluadas y al acceder a la evaluación de la página inicialmente evaluada se encontrará con la lista de enlaces de la página actualizada, es decir, el icono con la “X” roja que se encontraba al lado de la palabra “Analizar” paso a ser un icono de visto bueno verde y la palabra “Analizar” paso a ser “Ver” ya que el resultado de la evaluación queda almacenado (Ilustración 58). Capítulo IV. - 88 - Ilustración 58– Listado de enlaces encontrados en la página analizada con un enlace ya evaluado Dada las pruebas de funcionalidad del caso 3, se pudo apreciar que efectivamente la lista de enlaces mostrada en la primera evaluación permite acceder al resto de los enlaces del sitio Web para evaluarlos o revisar las evaluaciones que ya se le han realizado previamente. Caso de uso 4: Visualizar resultado en formato HTML Este caso de uso se vio reflejado en el diagrama de casos de uso. El usuario accede a través de cada evaluación realizada, mostrado el resultado de la evaluación por medio de una página HTML generada con el resumen de las incidencias encontradas durante la evaluación, clasificados principalmente por nombre de la etiqueta y a su vez cada etiqueta contiene una tabla de detalles, en la cual, las incidencias encontradas están clasificadas por principio de accesibilidad, mostrando con ello la parte del código y la línea de ubicación en donde ocurre la incidencia. Dado que para realizar las pruebas de funcionalidad de los casos de uso 1, 2 y 3 se tuvo que desplegar el resultado de cada prueba ejecutando la aplicación por medio de un navegador Web, el cual generó un código HTML y posteriormente desplego los resultados se concluye que el caso de uso 4 también funciona correctamente. Caso de uso 5: Imprimir resultado En caso de que el usuario desee imprimir el resultado de alguna evaluación, cuenta con un botón de fácil acceso a la impresión en el menú de botones de edición, el cual se puede observar en la Ilustración 59. Capítulo IV. - 89 - Ilustración 59 – Ubicación del botón para imprimir resultado Una vez el usuario presione el botón “Imprimir Resultado” aparecerá la ventana de opciones para imprimir, con lo cual, se cumple la funcionalidad del caso de uso 5. Caso de uso 6: Verificar comentarios de otros usuarios En la parte inferior de cada resultado de evaluación en la interfaz de usuario se encuentran los comentarios realizados por los usuarios que también hicieron o revisaron la evaluación, con la intención de que dejen plasmados ahí sus consejos o dudas. En la Ilustración 60 se pueden apreciar comentarios de una evaluación realizada, los cuales, residen a su vez en la base de datos de la aplicación. Ilustración 60– Comentarios de los resultados Dada la ilustración 60 se puede concluir que el caso de uso 6 también se cumple, dado que los usuarios pueden escribir sus comentarios para que otros los lean utilizando la sección de comentarios de cada evaluación de EAW. Caso de uso 7: Comentar resultado Como complemento al caso de uso 6 “Verificar comentarios de otros usuarios” se tiene el caso de uso 7, comentar el resultado, cada usuario es libre de realizar consultas o dar consejos en pro de mejorar la accesibilidad Web, es por ello que en la figura 61 se puede visualizar un antes y un después de realizar un comentario. Capítulo IV. - 90 - Ilustración 61– Realizar comentarios de los resultados En el lado izquierdo de la Ilustración 61 se muestra el comentario mientras se está escribiendo enmarcado en un rectángulo amarillo, en el lado derecho ya sale el comentario después de enviado en otro rectángulo amarillo, por lo tanto queda probada la funcionalidad del caso de uso 7. Caso de uso 8: Acceder a evaluaciones anteriores en el historial En la página principal de la aplicación se encontrarán las capturas de pantalla en miniatura de las páginas almacenadas en el historial, las cuales, a su vez, funcionan como botones para acceder a la evaluación de la imagen correspondiente (Ilustración 62). Ilustración 62– Historial de evaluaciones realizadas Capítulo IV. - 91 - En la Ilustración 62 se puede apreciar que entre las páginas evaluadas se encuentra el sitio Web de la Escuela de Computación, al hacer clic sobre el botón con la imagen de la captura de pantalla de esa Web se muestran los resultado de su evaluación. Es por ello que el caso de uso 8 se cumple ya que su funcionalidad de visitar evaluaciones del historial se puede realizar de manera exitosa. Caso de uso 9: Visitar Web evaluada Como complemento para la aplicación se dispuso de un botón denominado “Visitar Web”, el cual, está ubicado en el grupo de botones de edición en la página de resultados (Ilustración 63), con este botón se podrá redireccionar a la página que se evaluó directamente y queda cubierto el caso de uso 9. Ilustración 63– Botón Visitar Web Caso de uso 10: Actualizar evaluación En caso de que el usuario necesite volver a evaluar algún sitio Web bajo los mismos principios de accesibilidad o nivel de conformidad a los cuales se sometió durante la evaluación anterior, se dispuso de un botón llamado “Actualizar Evaluación” el cual está ubicado en el grupo de botones de edición en la página de resultados (Ilustración 64), con el cual, se podrá volver a ejecutar la misma evaluación nuevamente sin tener que volver a llenar el formulario de nueva evaluación. Ilustración 64– Botón Actualizar Web Una vez presionado el botón aparecerá una ventana emergente confirmando la decisión de actualizar la evaluación, al hacer clic en el botón “Actualizar Evaluación” de la ventana emergente se ejecutará nuevamente la evaluación, si por el contrario, se hace clic en el botón cancelar se devolverá a la vista anterior del resultado. Con dicha acción se cumple el caso de uso 10 de la aplicación. Capítulo IV. - 92 - Caso de uso 11: Eliminar evaluación Para facilitar la gestión del historial de evaluaciones se dispone del botón “Eliminar Actualización” (Ilustración 65), el cual, elimina la entrada en la base de datos de la evaluación respectiva. Ilustración 65– Botón Eliminar Evaluación Una vez presionado el botón, aparecerá una ventana emergente confirmando la decisión del usuario de eliminar la evaluación del historial, al hacer clic en el botón “Eliminar” de la ventana emergente se ejecutará la sentencia y se eliminará la evaluación de la base de datos, si por el contrario, se hace clic en el botón cancelar se devolverá a la vista anterior del resultado, con lo cual la funcionalidad del caso de uso 11 de la aplicación también se cumple. Capítulo IV. - 93 - 4.1.2- Evaluación de Accesibilidad Dado que la aplicación es un evaluador de criterios de accesibilidad Web, lo más lógico es evaluar la accesibilidad de la aplicación con una versión espejo de la misma, para ello se subió una versión de EAW a un servidor Web y se ejecutó la evaluación, obteniendo los resultados que se muestran en la Ilustración 66. Ilustración 66– Prueba de accesibilidad de EAW utilizando versión espejo Capítulo IV. - 94 - Dados los criterios y pautas de accesibilidad relacionados con el apoyo que se les puede brindar a los usuarios que presenten algún tipo de discapacidad visual o discapacidad motriz al momento de navegar por los sitios Web, la herramienta EAW fue sometida a la prueba de accesibilidad para verificar si específicamente dichos criterios cumplen con un grado de accesibilidad del 100% utilizando una versión espejo alojada en un servidor y obteniendo como resultado de la autoevaluación un nivel de accesibilidad del 100% en lo que a los criterios anteriormente mencionados se refiere, sin embargo, la aplicación tiene según el sitio oficial del W3C 151 errores y 121 advertencias no relacionadas con los criterios que forman parte del apoyo para el tipo de usuario especificado. 4.1.3- Pruebas de Usabilidad Para realizar las pruebas de usabilidad se le solicitó la colaboración a diez (10) usuarios con diferentes niveles de conocimientos relacionados con la navegación Web, que pudieran hacer uso de la herramienta y posteriormente respondieran el cuestionario proporcionado a cada uno de ellos. A continuación se presentan los resultados clasificados por cada una de las doce (12) preguntas realizadas en el cuestionario, de las cuales, siete (7) eran obligatorias de selección simple y las cinco (5) preguntas de respuesta abierta eran opcionales. En la Ilustración 67 se puede apreciar el gráfico con los resultados de las respuestas recibidas para la primera pregunta del cuestionario, como se puede observar cuatro (4) de la los diez (10) usuarios calificaron el grado de usabilidad de EAW con la máxima puntuación seguido de otros tres (3) usuarios que le asignaron nueve (9) puntos y otros tres (3) usuarios la calificaron con ocho (8) puntos. Ilustración 67– Gráfico de resultados de la pregunta 1 del cuestionario de las pruebas de usabilidad de EAW En la ilustración 68, se aprecia claramente que solo un 10% (el equivalente a un usuario de los que realizaron las pruebas) expresó el haber encontrado algún grado de dificultad al momento de utilizar la aplicación EAW, el resto de los usuarios no reportaron problemas relacionados con la dificultad de navegación y uso del programa. Capítulo IV. - 95 - Ilustración 68Gráfico de resultados de la pregunta 2 del cuestionario de las pruebas de usabilidad de EAW A continuación, en la Ilustración 69 se puede leer la respuesta del usuario que encontró dificultad al momento de hacer uso de la aplicación, como se puede apreciar en esta ilustración, el usuario manifestó conocer los criterios y principios de accesibilidad, los cuales, pudo encontrar posteriormente haciendo uso del botón de ayuda dispuesto en la barra superior. Ilustración 69– Respuestas abiertas del cuestionario de las pruebas de usabilidad de EAW En la Ilustración 70 se puede apreciar que la respuesta de los usuarios cuando se les pregunta acerca de presentación de resultados de las evaluaciones, el 70% de ellos no encontraron dificultad, sin embargo, el 30% restante manifestó no entender la información recibida. A esta altura del cuestionario aún no se les preguntaba específicamente el motivo de su respuesta en caso de ser negativa. Ilustración 70– Respuestas abiertas del cuestionario de las pruebas de usabilidad de EAW La Ilustración 71 muestra las respuestas de los tres (3) usuarios que manifestaron en la pregunta anterior no entender los resultados, como se puede apreciar en esta ilustración, los usuarios comentan no entender el lenguaje HTML con el cual se muestran exactamente donde se encuentran los aciertos y errores de los criterios de los sitios Web evaluados, lo cual generó incomodidad al no saber qué hacer con los resultados. Capítulo IV. - 96 - Ilustración 71– Respuesta abierta del cuestionario de las pruebas de usabilidad de EAW Dada la Ilustración 72, se observa como el 70% de los usuarios quedó conforme con la implementación de un historial de sitios Web evaluados en la página principal de la aplicación, el cual les pareció fácil de entender y utilizar, por el contrario, el 30% restante manifestó incomodidad al momento de realizar alguna búsqueda en dicho historial. Ilustración 72– Gráfico de resultados de la pregunta 4 del cuestionario de las pruebas de usabilidad de EAW En la Ilustración 73 claramente se puede observar que por unanimidad los usuarios opinan que el diseño de EAW es agradable para su uso. Ilustración 73– Gráfico de resultados de la pregunta 5 del cuestionario de las pruebas de usabilidad de EAW En la Ilustración 74, muestra las respuestas de los usuarios en cuanto a sus propuestas relacionadas con aspectos que se le podrían agregar a la aplicación en el futuro. Capítulo IV. - 97 - Ilustración 74– Respuesta abierta del cuestionario de las pruebas de usabilidad de EAW En la Ilustración 75 se muestran las respuestas de los usuarios relacionadas con las funcionalidades que consideran que se le puede agregar a EAW, entre las cuales se encuentran el acceso a los sitios Web del historial por medio de un menú alfabético que los lleve al historial de sitios Web evaluados cuyo nombre inicie con la letra del alfabeto seleccionada por el usuario, otro requerimiento solicitado es la posibilidad de enviar los resultados por correo. Por último, uno de los usuarios comenta la utilidad que tienen las redes sociales para propagar la información. Ilustración 75– Respuesta abierta del cuestionario de las pruebas de usabilidad de EAW En la octava pregunta los usuarios calificaron la funcionalidad de EAW, en esta ocasión, el uno (1) representa la menor calificación y el (10) la máxima calificación. El 70% de los usuarios le asignó (10) puntos a la funcionalidad de la aplicación, seguido de 20% que la calificó con nueve (9) puntos y finalmente 10% de los usuarios le asignó ocho (8) puntos. Dichos resultados se pueden ver en la Ilustración 76. Capítulo IV. - 98 - Ilustración 76– Gráfico de resultados de la pregunta 8 del cuestionario de las pruebas de usabilidad de EAW En cuanto a la velocidad con la que la aplicación le muestra los resultados a los usuarios se tiene que 40% de los usuarios encuestados consideran que fue “Excelente” seguido de 30% que opina que fue ”Muy buena” y finalmente, el 30% de los usuarios restantes manifestaron que la velocidad es “Buena”. Ilustración 77. Ilustración 77– Gráfico de resultados de la pregunta 9 del cuestionario de las pruebas de usabilidad de EAW En la Ilustración 78, se muestran las respuestas de los usuarios en cuanto a su experiencia al momento de hacer uso de EAW evaluando diversos sitios Web. Capítulo IV. - 99 - Ilustración 78– Respuesta abierta del cuestionario de las pruebas de usabilidad de EAW Como se pudo apreciar, la prueba de usabilidad tuvo dos etapas, en la primera cada usuario se dedicó a explorar la aplicación, en la segunda etapa se les pidió que llenaran un cuestionario con el fin de registrar los resultados de la prueba de usabilidad. Un factor común en la mayoría de los usuarios que probaron la aplicación fue el hecho de evaluar páginas Web de redes sociales como Facebook y entretenimiento como es el caso de Youtube. Es importante destacar que el cuestionario de las pruebas de usabilidad se realizó con la herramienta de crear formularios de Google Drive, al igual que la presentación de resultados. 4.1.4- Uso de EAW y comparación con otras Herramientas A lo largo de este documento, se ha mencionado en diversas oportunidades la existencia de otras herramientas cuyo objetivo también es la evaluación de las pautas de accesibilidad Web, incluyendo a HEVAC. Con el desarrollo de EAW se buscaba extender la evaluación también a la verificación de criterios de accesibilidad para discapacidad motriz y tecnología CSS con el fin de seguir avanzando en la investigación propuesta por el CENEAC y contribuir con esta aplicación como un aporte a la misma. Como parte del proceso de pruebas, se realizó una tabla comparativa de EAW con otras aplicaciones, para poder visualizar de manera más sencilla el conjunto de semejanzas y diferencias con respecto a las aplicaciones TAW y HEVAC, las cuales se muestran a continuación en la tabla 15: Capítulo IV. - 100 - Tabla 15- Tabla comparativa de funcionalidades de aplicaciones Características EAW HEVAC TAW Pautas WCAG 2.0 WCAG 2.0 WCAG 1.0, WCAG 2.0, MobileOK34 Tecnologías Soportadas HTML, CCS HTML HTML, CSS, Javascript (parcialmente) Técnicas HTML Parcial (Basado en criterios de discapacidad visual y motriz) Parcial (Basado en criterios de discapacidad visual) Completa Selección del nivel de análisis Si Si Si Selección de Principios de Accesibilidad Si Si No Clasificación de comprobaciones Por principios de accesibilidad y niveles de conformidad Por nomenclatura de técnicas propias de su herramienta. Por numeración de criterios de éxito. Indicación de comprobaciones no realizadas Parcialmente (Para el caso del color del fondo del párrafo en el que la página cuenta con varias capas) No Si Agrupación de resultados por Principios Si Si Si Consejos de desarrollo Si Si No (Posee un enlace a la página de la técnica en el sitio del WCAG) Indicación del Grado de Accesibilidad Si Si No Pre-visualización de la página evaluada Si No Si Indicación del problema en el código fuente Si Si Si Visualización en formato PDF Si Si No Registró histórico de verificaciones No Si No Verificación de tecnología HTML Si Si Si Verificación de tecnología CSS Si No Si Sección de comentarios para usuarios Si No No Posibilidad de revisión de páginas hijas de la Web Si No Si 34 MobileOK es una herramienta para verificar la adecuación del contenido móvil a nivel móvilOK Basic según las especificaciones definidas por la W3C basadas en el W3C Mobile Web Best Practices 1.0. Capítulo IV. - 101 - Como se puede apreciar, al momento de desarrollar EAW, ya existían las herramientas TAW y HEVAC, sin embargo, con el trabajo se buscó mejorar el alcance de la investigación propuesta por el CENEAC e iniciada por el Licenciado Ronald Aguilera con el desarrollo de HEVAC. En la tabla 15 se observan algunas diferencias con respecto a HEVAC, las cuales destacan que efectivamente se desarrollaron otras funcionalidades para mejorar el alcance. 4.1.5- Evaluaciones realizadas con EAW En este apartado, se muestran los resultados de las evaluaciones realizadas en algunas páginas Web pertenecientes a cuatro ámbitos diferentes. En esta prueba se evaluará únicamente la página principal de cada sitio Web elegido, se registrarán los resultados y posteriormente se hará un breve resumen. Es importante destacar que para las evaluaciones se tomaron en cuenta los cuatro principios de accesibilidad, garantizando igualdad de condiciones para todos los sitios Web. Si desea la información detallada de cada evaluación con sus respectivos resultados puede consultar el anexo 4. Tabla 16- Tabla comparativa con el grado de accesibilidad de sitios Web evaluados Página Principal Evaluada Accesibilidad del recurso Porcentaje de recursos con problemas Incidencia de error más destacada Escuela de Computación de la UCV 93,27% 6,73% Si la etiqueta <a>posee el atributo name su valor debe ser único Escuela de Matemática de la UCV 89,77% 10,23% Si la etiqueta <a>posee el atributo name su valor debe ser único Escuela de Biología de la UCV 84,78% 15,22% La etiqueta <img>debe tener el atributo alt Universidad de Carabobo 93,37% 2,61% La etiqueta <img>debe tener el atributo alt Universidad Simón Bolívar 91,48% 8,52% Si la etiqueta <a>posee el atributo name su valor debe ser único Universidad Católica Andrés Bello 99,71% 0,29% La etiqueta <img>debe tener el atributo alt Laravel 100% 0% N/A Oracle 99,03% 0,97% La etiqueta <input>debe tener el atributo tabindex y el atributo value Java 88,57% 11,43% La etiqueta <input>debe tener el atributo tabindex CNE 85,11% 14,89% La etiqueta <table>debe tener los atributos tr y th Gobernación de Miranda 85,11% 14,89% La etiqueta <table>debe tener los atributos tr y th Seniat 51,75% 48,25% La etiqueta <table>debe tener los atributos tr y th Banco de Venezuela 91,99% 8,01% Si la etiqueta <a>posee el atributo name su valor debe ser único Banesco 83,05% 16,95% Si la etiqueta <a>posee el atributo name su valor debe ser único Banco Mercantil 97,05% 2,95% La etiqueta <img>debe tener el atributo alt Culminada esta prueba, se puede apreciar en la tabla 16 que solo el 53,33% de los sitios Web evaluados pasan el 90% del grado de accesibilidad y que el 73,33% de los mismos sitios Web superan el 5% de criterios con problemas de accesibilidad. También se puede observar que la incidencia más Capítulo IV. - 102 - frecuente es la omisión de los atributos tr y th en las tablas seguido de la omisión del atributo de tabindex y el atributo value de la etiqueta <input>. Como se pudo apreciar en este capítulo, se le realizaron las pruebas pertinentes al Evaluador de Accesibilidad Web EAW contemplando diversos puntos de interés como lo son la funcionalidad de cada uno de los requisitos determinados en los diagramas de casos de uso, asegurar que la propia aplicación cumpla de manera exitosa con los criterios evaluados por ella misma en la prueba de accesibilidad. También fue usada por un grupo de personas con diversos niveles de conocimientos en el área, los cuales, describieron su experiencia llenando un cuestionario. Otro punto importante en la etapa de pruebas fue el poder evaluar diversos sitios Web conocidos para poder registrar las incidencias de sus errores y cuáles fueron cometidos con mayor frecuencia. No se pasa por alto la comparación con otras herramientas de evaluación, en este punto, se puede decir que la aplicación EAW cubrió parte de las recomendaciones para trabajos futuros que dejo el Licenciado Ronald Aguilera en su TEG titulado Desarrollo de una Herramienta para Verificación de Criterios de Accesibilidad en sitios Web – Hevac. EAW como herramienta de utilidad para el desarrollo Web, es un nuevo evaluador disponible en el CENEA de la Universidad Central de Venezuela. Conclusiones - 103 - Resultados, Conclusiones y Trabajos Futuros Al concluir la realización de este Trabajo Especial de Grado, se presenta el desarrollo de una aplicación Web, denominada Evaluador de Accesibilidad para sitios Web, la cual, cumple satisfactoriamente con los objetivos planteados al principio de este trabajo y extiende el alcance de la investigación propuesta por el CENEAC. Se logró la obtención de un producto que cumple con todos los requerimientos planteados en los casos de uso, así mismo se logro En este mismo orden de ideas, se deja a disposición de los usuarios una aplicación con la que pueden evaluar los criterios accesibilidad relacionados con la discapacidad visual y motriz de las páginas Web, así como también les brindara a los desarrolladores Web orientación para solventar las incidencias de error presentadas en la evaluación y su ubicación específica. Adicionalmente, EAW cuenta con la funcionalidad de elegir el tipo de evaluación que desea realizar el usuario, ya sea por principios de accesibilidad o por niveles de conformidad. En el caso de los principios de accesibilidad, el usuario podrá elegir la combinación que desee de los mismos, mientras que con los niveles de conformidad si es obligatorio decidirse por uno solo. Durante la implementación de EAW se presentó la dificultad de buscar el método adecuado, con el cual, se recorriera el código HTML y CSS de los sitios Web, después de unos días de investigación se optó por usar el paquete curl de la librería libcurl con PHP como la mejor opción considerando la comodidad que representa para la autora la programación en PHP, sin embargo, se podía optar también por desarrollar la aplicación con otras tecnologías, por ejemplo en Java. El uso de PHP como tecnología del lado del servidor y Laravel como entorno de desarrollo, agilizó considerablemente el proceso de implementación ya que se aprovecharon sus características y con la simplicidad de su sintaxis se minimiza el tiempo y esfuerzo de codificación. Así mismo el paradigma MVC que posee Laravel brindó una organización al trabajar en el desarrollo, ya que permite tener una separación lógica y física de los componentes de la aplicación. La metodología ad hoc que involucra tanto aspectos de XP como artefactos UML permitió que el diseño y construcción se realizara en iteraciones, lo cual facilitó el desarrollo de la aplicación, puesto que dio flexibilidad para cubrir e implementar cada uno de los requerimientos. En lo que se refiere a los aportes de EAW para la investigación en el área del CENEAC, se puede concluir que el alcance se extendió con respecto a la aplicación HEVAC desarrollada en el año 2012 por el Licenciado Ronald Aguilera. En esta oportunidad, EAW además de tomar en cuenta los criterios relacionados con la discapacidad visual también cubre los criterios de discapacidad motriz. También el usuario tiene la opción de evaluar a demanda diversas páginas que componen el sitio Web y esta evaluación se hace tanto en el código HTML como el CSS a diferencia de HEVAC que solo evalúa HTML. Otra opción que los usuarios tienen con EAW y no se encontró en ninguna otra aplicación de evaluación de accesibilidad, es la posibilidad de sociabilizar con otros usuarios, en este caso cada página evaluada cuenta con su respectiva sección de comentarios. Dada la posibilidad de que en alguna oportunidad otro desarrollador desee continuar agregándole funcionalidades a la aplicación o extender el alcance de la investigación en el área, se dejan a continuación algunas recomendaciones para desarrollar la solución a una escala más amplia. Las recomendaciones que se encuentran a continuación para trabajos futuros son las siguientes - Para desarrollos futuros sería conveniente la posibilidad de agregarle a la aplicación soporte para el análisis de elementos de marcos o frames en HTML, dado que la inclusión de dicha funcionalidad permitirá el análisis de páginas Web que se encuentren inmersas en marcos internos de una página Web superior sometida a evaluación. Conclusiones - 104 - - Hoy en día es común ver sitios Web dinámicos, dicho dinamismo es aportado en algunos casos por el empleo de tecnología JavaScript o plug-Ins de terceros como lo es Adobe Flash lo cual implica que para una mayor cobertura de evaluación se requiere agregarle la posibilidad de verificar el cumplimiento de pautas y criterios de accesibilidad cuando la página Web cuente con dichas tecnologías. - Disponer de la opción para verificar el cumplimiento de criterios y pautas de accesibilidad para contenido Web móvil tomando en cuenta la Iniciativa Web Móvil (MWI). Desarrollar un sitio totalmente accesible es una tarea ardua que debe comenzar, sin duda, por conseguir que tanto su código HTML como el de la hoja de estilo (CSS) sean correctos de acuerdo a los estándares del W3C. Mejorando las herramientas para la evaluación de accesibilidad Web y llevando a cabo una labor educativa de concienciación en relación a la importancia del diseño accesible de páginas Web y abriendo nuevos campos en accesibilidad a través de la investigación en esta área se puede lograr el cometido. Referencias Bibliográficas - 105 - Referencias Bibliográficas y Digitales Acosta, M (2012). Análisis de Requerimientos para el Diseño de un Evaluador de Criterios de Accesibilidad Web que Verifique pautas relacionadas con Discapacidad Visual y Discapacidad Motora. Fuente: https://www.dropbox.com/s/rb3a58opmfcp3qm/Seminario_MariaGabrielaAcosta_Versi%C3%B3n%20d e%20agosto-octubre.doc?dl=0 AENOR. (2007). Norma UNE 139803:2004 titulada “Aplicaciones Informáticas para personas con discapacidad. Requisitos de Accesibilidad para Contenidos en la Web”. Recuperada el 5 de abril del 2012, de http://www.inteco.es/Accesibilidad/difusion/Normativa/Descarga/DescargaUNE_139803 Aguilera, Ronald. (2012). Desarrollo de una Herramienta para Verificación de Criterios de Accesibilidad en sitios Web. Trabajo Especial de Grado. Universidad Central de Venezuela. Fuente: https://www.dropbox.com/s/nabab9pi1v8b67n/Documento%20de%20Tesis%20- %20Ronald%20Aguilera.pdf?dl=0 Anónimo. Adaptaciones y otros Recursos. Recuperado el 07 de julio del 2012 de:http://personal.telefonica.terra.es/Web/formatel/Adaptaciones_hardware/ Anónimo. Movilidad. Recuperado el 22 de agosto del 2012. Fuente: http://www.tawdis.net/servicios/movilidad/?lang=es Anónimo. ¿Qué es la baja visión?. www.ulloabajavision.com. Recuperado el 31 de marzo del 2012, de http://www.ulloabajavision.com/que-es-la-bajavision.html Anónimo. (2009-2010). The Web and Mobile Devices. Fuente: http://www.w3.org/Mobile/ Anónimo. Elementos de UML. Recuperado el 20 de abril del 2014 de https://docs.kde.org/stable/es/kdesdk/umbrello/uml-elements.html Anónimo. Curl groks URLs. Recuperado el 5 de septiembre del 2013 de http://curl.haxx.se/ Asodispro. (2012). ¿Qué es la discapacidad?. Recuperado el 5 de noviembre del 2012 de http://www.asodispro.com/index.php?option=com_content&view=article&id=8&Itemid=10 Beck, Kent. (1999) Extreme Programming Explained. p. 105-111. Belmonte, F. (21 de Junio del 2010). Programación Extrema. Recuperado el 30 de abril del 2012, de http://parasitovirtual.wordpress.com/category/cursos-y-articulos/ingenieria-del- software/metodologias-agiles-de-desarrollo/programacion-extrema-xp/. Benavídez, C. Revisando la accesibilidad con estilo. Ilustración 4. Recuperado el 7 de abril del 2012 de http://www.sidar.org/hera/ Benavídez, C. Revisando la accesibilidad con estilo. Ilustración 5. Recuperado el 7 de abril del 2012 de http://www.sidar.org/hera/ Brito, A. (6 de Agosto del 2009). www.circulodemaquetadores.com. Recuperado el 31 de marzo del 2012, de http://www.circulodemaquetadores.com/usabilidad-test-herramientas/ Bourdon, R. WampServer. Recuperado el 14 de agosto del 2013 de http://www.wampserver.com/en/ Cabañero, A. accesibilidadWeb.dlsi.ua.es. Recuperado el 31 de marzo del 2012, de http://accesibilidadWeb.dlsi.ua.es/?menu=deficit-visual-introduccion Canós, José. & Letelier, P. & Penadés, C. Metodologías Ágiles en el Desarrollo del Software. Recuperado el 28 de abril del 2012, de http://www.willydev.net/descargas/prev/TodoAgil.Pdf Casas, V. (2005). Hábitos de consumo de servicios recreativos en personas con discapacidad motora. Recuperado el 04 de julio del 2012. Fuente: http://biblioteca2.ucab.edu.ve/anexos/biblioteca/marc/texto/AAH5896.pdf Chisholm, W. Técnicas CSS para las Pautas de Accesibilidad al Contenido en la Web 1.0. Recuperado el 30 de enero del 2012 de http://www.discapnet.es/Web_accesible/tecnicas/css/WCAG10-CSS-TECHS_es.html Confederación de Empresarios de Andalucía. Accesibilidad Web - Elemento diferenciador para el acceso universal. Recuperado el 10 de abril del 2012, de http://Webaccesible.cea.es/?q=inicio Referencias Bibliográficas - 106 - CTIC. TAW Online. Ilustración 5. Recuperado el 6 de abril del 2012 de http://www.tawdis.net/ CTIC. TAW Online. Ilustración 6. Recuperado el 6 de abril del 2012 de http://www.tawdis.net/ CTIC. TAW Online. Ilustración 7. Recuperado el 6 de abril del 2012 de http://www.tawdis.net/ CTIC. TAW Online. Ilustración 8. Recuperado el 6 de abril del 2012 de http://www.tawdis.net/ CTIC. TAW Online. Ilustración 9. Recuperado el 7 de abril del 2012 de http://www.tawdis.net/ García, C. Comparativa WCAG 1.0 - 2.0 .Tabla 1.(16 de abril del 2009). Recuperado el 10 de marzo del 2012 de http://www.w3c.es/Presentaciones/2009/0416-W3C-BCN-JG/#%289%29 García, C. & Sarabia A. www.dispersium.es. Recuperado el 21 de marzo del 2012, de http://dispersium.es/z- otros/manual-accesibilidad-Web/Diseno-De-Paginas-Web-Accesibles.pdf Grupo Fundosa. (2011). Guía de Accesibilidad para Desarrolladores. Recuperado el 18 de marzo del 2012, de http://www.uoc.edu/portal/_resources/CA/documents/la_universitat/accessibilitat/2011_Guia_de_estilo _accesibilidad_-_UOC.pdf Hassan, Y. & Fernández, F. & Lazza, G. (2004). Diseño Web Centrado en el Usuario: Usabilidad y Arquitectura de la Información. Recuperado el 21 de marzo del 2012, de http://www.hipertext.net/Web/pag206.htm#1 Ley para las Personas con Discapacidad. (Artículo 4). (2006). Gaceta Oficial de la República de Venezuela, 38.598, Diciembre 2006. Mochales, S. www.sidar.org. Recuperado el 20 de marzo del 2012, de http://www.sidar.org/publica/press/recortes/25ciegos.htm Moreau, A. www.fluxit.com.ar. Recuperado el 31 de marzo del 2012, de http://www.fluxit.com.ar/servicios/usabilidad MWI. (2005). Mobile Web Best Practices Working Group. Recuperado el 27 de octubre de http://www.w3.org/2005/MWI/BPWG/ Nice23. Características de la Discapacidad. Recuperado el 04 de julio del 2012. Fuente: http://caracteristicasdelasdiscapacidades.blogspot.com/2008/03/los-diferentes-tipos-de-discapacidad- y.html Nielsen, J. & Loranger, H. (2006). Prioritizing web usability. Berkeley: New Riders. Organización Mundial de la Salud. Discapacidades. Recuperado el 04 de julio del 2012. Fuente: http://www.who.int/topics/disabilities/es/ Organización Mundial de la Salud. (2011). Informe Mundial sobre la Discapacidad. Recuperado el 5 de noviembre del 2012. Fuente: http://www.who.int/disabilities/world_report/2011/summary_es.pdf Otwell, T. Laravel. Recuperado el 9 de julio del 2013 de http://laravel.com/ Pressman, R. (2002). Ingeniería del Software. Un Enfoque Práctico. 5ta. Edición. Quevedo, R. España. Recuperado el 04 de julio del 2012. Fuente: http://accesibles.org/quienes/discapacidades-motoras/enfermedades Sanchez, M. Metodología RUP:: Cómo documentar casos de uso. Recuperado el 15 de febrero del 2014 de: https://docs.google.com/presentation/d/1tlnIcuyIokcKUc9HfZppgAurpLyg2jFaeRJbx86CocA/edit#slide= id.i0 Scott, L. El Metro de Caracas (antes y después). Ilustración 1. (31 de julio del 2010). Recuperado el 5 de marzo del 2012 de: http://lycettescott.blogspot.com/2010/07/el-metro-de-caracas-antes-y- despues.html Shawn, H. (Septiembre del 2005). www.w3c.es. Recuperado el 20 de marzo del 2012, de http://www.w3c.es/Traducciones/es/WAI/intro/accessibility Torres, K. (2013). Ventajas del Por Qué usar MySQL como Sistema Gestor de Bases de Datos. Recuperado el 13 de abril del 2014, de http://www.slideshare.net/Ing-D-SW-TorresKhano--ME/ventajas-del-por-qu- usar-mysql-como-sistema-gestor-de-bases-de-datos Referencias Bibliográficas - 107 - UNE. 2004. Norma UNE 139803:2004. Recuperado el 14 de abril del 2012 de: http://www.inteco.es/file/rWv1Oqb051U Wells, D. (2009). Extreme Programming: A gentle introduction. Recuperado el 28 de abril del 2012, de http://www.extremeprogramming.org/ Anexos - 108 - Anexo 1 - Principios Básicos y Pautas WCAG 2.0 Para una referencia más completa y mejor comprensión de las pautas y criterio de accesibilidad se deja un resumen en el siguiente apartado de todas las pautas pertenecientes al WCAG 2.0. 1.1- Principio 1: Perceptible “La información y los elementos de la interfaz de usuario deben presentarse a los usuarios de formas en las que los usuarios puedan percibirlos”. o Pauta 1.1- Contenido no textual: El desarrollador Web debe proveer alternativas textuales para todo el contenido no textual, es decir, todas las imágenes o botones de imagen deben contar con una descripción del contenido de la imagen de tal manera que permita la modificación para la posterior adaptación que pueda cubrir las necesidades de cada usuario, por ejemplo, la descripción del contenido de la imagen puede ser leída por un sintetizador de voz, pasarla a braille o simplemente aumentar el tamaño de su fuente.  Criterio 1.1.1- Contenido no textual Dicha descripción se implementa por medio del uso de la etiqueta “alt” en las imágenes, la cual será de gran utilidad para las personas que por motivos de discapacidad visual o del uso de algún navegador de texto no pueden ver dicha imagen. El uso correcto de la etiqueta “alt” es el siguiente: <img src="logo.png" alt="logo de la empresa" />. Como se puede observar en el ejemplo anterior se abre una etiqueta de imagen (img), de inmediato se indica la ubicación de la imagen por medio del “src”, y por último se encuentra la etiqueta “alt” la cual da una idea con su breve descripción del contenido de la imagen, en este caso nos dice que la imagen es el logotipo de alguna empresa. Cabe destacar que la descripción aportada por la etiqueta “alt” aparecerá antes de que cargue el archivo asociado por lo cual también sirve para mantener informados a los usuarios sobre el contenido que están por ver. También aparecerá la descripción cuando se pase el cursor por la imagen. Para cerrar la breve descripción de este punto se dejan a continuación consejos prácticos que asegurarán el cumplimiento de la pauta 1.1: 1- Las imágenes que no estén destinadas a transmitir información simplemente porque se limitan a ser decorativas se les debe colocar cadena vacía con alternativa: alt=””. 2- Colocar nombres descriptivos (value) en los botones de los formularios. 3- Colocar etiquetas asociadas a los elementos de los formularios (label) o etiqueta, y si no es posible, un (title) o título. 4- Identificar mediante textos accesibles todos los elementos multimedia incrustados. 5- Colocar títulos apropiados a los marcos (frames). o Pauta 1.2- Contenido multimedia dependiente del tiempo: todo contenido de audio, video, animaciones o presentaciones interactivas es considerado como contenido multimedia. La manera alternativa de accesibilidad para este tipo de contenidos es suministrando la posibilidad de acceder a transcripciones, subtítulos, audio o descripciones dependiendo de la presentación inicial del contenido multimedia, es decir, si se trata de un video, las personas con discapacidad visual tendrán acceso a la información que se quiera transmitir por medio de él, pero si este video cuenta con una pista de audio describiendo cada suceso el usuario con discapacidad visual podrá enterarse de todo lo que se está reproduciendo en dicho video. Por otro lado, y siguiendo con el mismo ejemplo del video, las personas con discapacidad auditiva podrán ver el video más no escucharlo, la alternativa para ayudarlos es el uso de subtítulos que vayan sincronizados con el audio del video en reproducción.  Criterio 1.2.1 – Contenidos de solo audio o solo video pregrabado: Es conveniente hacer uso del texto alternativo (etiqueta alt) con la descripción del contenido multimedia.  Criterio 1.2.2 - Subtítulos en los contenidos de video pregrabados: Es conveniente contar con los subtítulos de los videos para las personas con discapacidad auditiva o que no posean salida de audio.  Criterio 1.2.3 – Audio-descripción al video o contenidos media alternativos: Este criterio consiste en agregarle la descripción por audio de lo que está ocurriendo en el video o la lectura de los subtítulos. De esta manera las personas con discapacidad visual podrán enterarse de todo lo que ocurre en el video. Otra opción para cumplir este criterio sería agregar dicha descripción del video como texto alternativo. Anexos - 109 -  Criterio 1.2.4 - Subtítulos a los archivos de audio en directo: se debe proporcionar los subtítulos sincronizados para los contenidos de audio en directo, siempre y cuando no se cuente previamente con la transcripción completa del audio o el lenguaje de señas.  Criterio 1.2.5 – Audio-descripción en los videos: este criterio es similar al 1.2.3 con la diferencia de que no acepta la opción de proporcionar texto alternativo en lugar del audio descriptivo sincronizado con el video. Lo cual representa un nivel de exigencia más alto ya que es de carácter obligatorio el uso del audio con o la descripción sincronizada con el video. Con el cumplimiento de este criterio se benefician tanto las personas con discapacidad visual como las personas con discapacidad cognitiva que tienen dificultad para comprender de manera visual lo que está ocurriendo en el video. Lo ideal es ir mostrando de manera paralela al video la descripción de los sucesos, actitudes, contexto, imágenes, entre otras.  Criterio 1.2.6 – Interpretación con Lengua de señas: es oportuno para las personas con discapacidad auditiva recibir la información por medio de lengua de señas la cual a su vez está sincronizada con el audio que se esté reproduciendo.  Criterio 1.2.7 – Audio descripción extendida (pregrabada): esta opción es útil cuando el audio explicativo del video es insuficiente para poder transmitir la información correspondiente, de esta manera, el video se irá explicando cada cierto tiempo por medio de una grabación de audio cuyo propósito será aclarar lo ocurrido en el segmento anterior del video reproducido. o Pauta 1.3- Adaptabilidad: Se debe crear contenido flexible que pueda presentarse de diversas maneras sin que por ello se pierda parte de la información ni su estructura al tener que adaptarse a otras modalidades y tecnologías. Una de las principales recomendaciones para lograr cumplir con esta pauta es el uso de las hojas de estilo.  Criterio 1.3.1 – Información y relaciones: La información, las estructuras y relaciones transmitidas por medio de la presentación pueden ser leídas e interpretadas independientemente del dispositivo y el formato utilizado o también se podrán encontrar disponibles por formato de texto. Cuando se trata de contenidos de texto se deberá utilizar la estructura correcta para que estos puedan ser leídos e interpretados correctamente independientemente del formato. Para lograr esto se debe hacer uso de los encabezados con <h1>, listas con <ul>, <dl> y <ol>, texto enfatizado con <strong>, <blockquote>, entre otras. Las tablas deben ser utilizadas para marcar datos tabulados, las celdas <td> contendrán los datos y los encabezados asociados <th> donde sea requerido su uso. Las tablas se deben identificar además con su respectivo título y su resumen. Cuando se trata de formularios se deben asociar las etiquetas (label) con sus respectivos campos correspondientes (input) y a su vez los elementos del formulario que estén relacionados se deben agrupar mediante el uso de fieldset y legend que son los encargados de crear bloques de elementos dentro de los formularios.  Criterio 1.3.2 – Secuencia Significativa: en caso de que el orden en el cual se presente el contenido sea importante para poder transmitir correctamente la información, debe seguirse un orden lógico e intuitivo además de resaltar la importancia de la simplicidad de los comandos de navegación haciéndolos lo más intuitivos posible.  Criterio 1.3.3 – Características sensoriales: toda instrucción que se le dé al usuario para que pueda comprender los mecanismos de interacción con la aplicación debe estar asociada a más de una relación de asociación. Ejemplo: si asociamos un componente a una característica sensorial quizás no todos los usuarios podrán comprender lo que se quiere transmitir, si el usuario debe hacer clic en el botón rojo y no posee más información acerca de este botón más allá de su color, los usuarios que tengan alguna discapacidad visual no podrán seguir la instrucción que reciban. o Pauta 1.4- Distinguible: Es conveniente la facilidad que se le dé al usuario para que este pueda ver, escuchar el contenido y distinguir la separación entre el primer plano y el fondo.  Criterio 1.4.1 – Empleo del color: jamás se debe utilizar un único medio como transmisor de la información, en este caso sería el color, indicar una acción, provocar alguna respuesta o distinguir visualmente un elemento de los demás deben ser acciones que llamen la atención del usuario por más de un canal perceptivo.  Criterio 1.4.2 – Control de audio: Si algún sonido de la aplicación Web tiene una duración mayor a los tres segundos es requisito indispensable contar con un controlador de audio Anexos - 110 - independiente al del audio en general para que el usuario pueda pausar o bajar el volumen en caso de así requerirlo y así poder escuchar con claridad al sintetizador de voz.  Criterio 1.4.3 – Contraste (mínimo): La presentación visual de los textos o las imágenes de texto deben tener una relación de contraste de al menos 4.5:1. Como excepción encontramos un par de casos: Gran tamaño: todo texto que supere los diez y ocho puntos o los catorce puntos (en negrita) tienen una relación de contraste de al menos 3:1. Incidental: todo texto que sea parte de la interfaz de usuario inactivo o que sea simplemente decorativo no tiene requisitos mínimos de contraste siempre y cuando no aporten información alguna.  Criterio 1.4.4 – Variar el tamaño del texto: Se debe permitir el aumento del tamaño del texto hasta un doscientos por ciento sin necesidad de utilizar tecnología de apoyo, sin que esto afecte las funciones ni se pierdan los contenidos.  Criterio 1.4.5 – Imágenes de texto: En la mayoría de los casos es más recomendable transmitir información por texto que por imágenes de texto, a excepción de que la imagen de texto pueda ser personalizada cubriendo con ello las necesidades del usuario.  Criterio 1.4.6 – Contraste aumentado: La presentación visual del texto y las imágenes de texto deben tener una relación de contraste de mínimo 7:1 con la excepción de los dos casos mencionados en el punto 1.4.3.  Criterio 1.4.7 – Bajo o sin sonido de fondo: Todo sonido de fondo (en caso de que exista), debe ser lo suficientemente bajo tal que se permita distinguir fácilmente del resto de sonidos que se puedan requerir.  Criterio 1.4.8 – Presentación visual: Para los bloques de texto que contengan más de una frase se deben seguir las siguientes indicaciones: Tendrán especificados un color de primer plano y de fondo. No se deben exceder de ochenta caracteres por línea No estarán justificados a ambos lados El interlineado debe ser de al menos la mitad de la altura de la fuente del texto, y el espacio entre cada párrafo debe ser del tamaño de un interlineado y medio. No aparecerá desplazamiento horizontal cuando el tamaño de texto se duplique.  Criterio 1.4.9 – Imágenes de texto sin excepción: Las imágenes de texto sólo deben ser utilizadas cuando no tienen como propósito transmitir ningún tipo de información o no se puedan presentar de otra forma diferente. 1.2- Principio 2: Operable “Los componentes de la interfaz y la navegación deben ser operables” o Pauta 2.1- Acceso por medio del teclado: Toda funcionalidad debe ser operable a través del teclado.  Criterio 2.1.1 – Teclado: toda funcionalidad de la aplicación Web debe ser operado a través del teclado siempre y cuando éste lo permita y en caso de emplear algún comando, este no debe interferir con los comandos que trae por defecto el sistema operativo ni el navegador.  Criterio 2.1.2 – Sin trampa de teclado o teclado no bloqueado: El foco del teclado debe tener acceso a todos los elementos de navegación que contenga la aplicación Web. En caso de que el usuario deba utilizar otro medio para desplazarse, deberá ser indicado. o Pauta 2.2- Tiempo suficiente: Debido a que los usuarios tienen diferentes tiempos de lectura, se debe considerar un tiempo promedio prudencial para poder transmitir la información de manera efectiva y además puedan interactuar con la aplicación.  Criterio 2.2.1 – Límite de tiempo ajustable: Si la aplicación Web tiene un límite de tiempo se le debe permitir al usuario que puedan culminar la tarea dentro de ese tiempo estipulado. Para ello se propone permitirle al usuario extender o ajusta el tiempo o simplemente detenerlo.  Criterio 2.2.2 – Pausar, detener, ocultar: para cualquier contenido que inicie automáticamente se debe disponer de controles que le permitan al usuario iniciar, detener, atrasar, adelantar u ocultar la información, es decir, el usuario podrá manipular a su gusto la reproducción aun cuando se configuro para que iniciara automáticamente. La excepción está en el hecho de que la información que se desee transmitir sea de suma importancia para el usuario y no se deba omitir, en este caso el usuario no contará con los controles antes mencionados. Anexos - 111 - o Pauta 2.3- Destellos: Al momento de diseñar el contenido de la aplicación Web se deben evitar los destellos y los cambios de luminosidad bruscos ya que pueden ser causantes de ataques epilépticos en determinados usuarios.  Criterio 2.3.1 – Tres destellos o debajo del umbral: ningún contenido puede producir más de tres destellos en un segundo a menos que el área donde estos destellos ocurran sea inferior al veinte y cinco por ciento del campo visual de diez grados a una distancia que se considere normal o el área sea de bajo contraste y no contenga demasiado rojo.  Criterio 2.3.2 – Tres detalles: No se deben crear contenidos con más de tres destellos por segundo. o Pauta 2.4- Navegable: Proporcione la ayuda suficiente para que los usuarios puedan ubicarse y navegar sin problemas.  Criterio 2.4.1 – Saltar bloques o accesos directos: cuando se repitan bloques de información en diversas áreas de la aplicación Web, se deben colocar saltos de bloque, de esta manera los usuarios por medio de enlaces podrán avanzar hacia otros contenidos. Por ejemplo: “ir a la página inicial”.  Criterio 2.4.2 – Título en las páginas: toda aplicación Web debe contar con su respectivo título que informe su tema o propósito.  Criterio 2.4.3 – Orden de foco: Los componentes de la aplicación Web deben recibir el foco en un orden que permita que la navegación se realice de manera secuencial con un orden lógico e intuitivo.  Criterio 2.4.4 – Propósito de un vínculo (en su contexto): Todo vínculo o enlace de la aplicación debe ser lo suficientemente intuitivo como para que el usuario tenga el conocimiento de la información que obtendrá si elige dicho enlace.  Criterio 2.4.5 – Múltiples medios: En el momento de diseñar la estructura de la aplicación Web es importante ofrecer diferentes maneras de llegar a las diversas páginas que componen el sitio Web.  Criterio 2.4.6 – Encabezados y etiquetas: Todo encabezado o etiqueta debe describir su propósito el tema, lo cual debe ser aplicado tanto en los controles de los formularios, como en los encabezados que se utilicen dentro de la página con lo cual se logra seguir una secuencia lógica de navegación.  Criterio 2.4.7 – Foco visible: a nivel visual el foco actual del teclado debe distinguirse claramente. Al utilizar el tabulador el foco debe desplazarse.  Criterio 2.4.8 – Ubicación: El usuario siempre debe saber dónde está ubicado y esto en parte lo sabrá gracias a la ayuda con la que contará.  Criterio 2.4.9 – Propósito de los vínculos: Cada vínculo debe expresar por medio de su propio texto el propósito que tiene y no deben existir enlaces con el mismo nombre (o descripción) que lleven a páginas diferentes.  Criterio 2.4.10 – Encabezados de sección: Estos encabezados son de utilidad a la hora de mantener organizados los equipos y diseñar la estructura para que sean de fácil y lógico acceso. 1.3- Principio 3: Comprensible “La información y el manejo de la interfaz de usuario debe ser comprensible” o Pauta 3.1- el contenido debe ser textual, comprensible y legible  Criterio 3.1.1 – Idioma de la página: El idioma de la página debe ser detectado automáticamente para esto debe ser identificado previamente. Ejemplo: <HTML lang=”es”>  Criterio 3.1.2 – Idioma de partes: En caso de tener contenidos en diferentes idiomas es necesario identificarlos previamente para que esto pueda ser detectado automáticamente. Esta regla no aplica cuando se trata de nombres propios, términos técnicos, frases propias de la lengua o palabras de un idioma indeterminado.  Criterio 3.1.3 – Palabras inusuales: En caso de que se utilicen palabras ambiguas, desconocidas o modismos es recomendable brindar algún mecanismo adicional de apoyo al usuario para su mejor comprensión, como es el caso del uso de un glosario de términos.  Criterio 3.1.4 – Abreviaturas: Para que todos los usuarios tengan el conocimiento sobre el significado de las abreviaturas empleadas en el contenido de la aplicación Web se recomienda el uso de la etiqueta <abbr> o de un glosario. En caso de etiquetar acrónimos se debe utilizar la etiqueta <acronym>.  Criterio 3.1.5 – Nivel de lectura: En caso de que el contenido tenga un grado de complejidad mayor se recomienda contar con un texto alternativo o versión complementaria. Anexos - 112 -  Criterio 3.1.6 – Pronunciación: Si en el contenido hay una palabra que deba ser pronunciada de manera específica para comprender su significado, se recomienda que seguido a la palabra se proporcione la pronunciación o se establezca en dicha palabra un vínculo o enlace a un glosario. o Pauta 3.2- Desarrolle páginas Web que aparezcan y se manejen de manera predecible  Criterio 3.2.1 – Con foco: Recibir el foco por parte de cualquier componente no provocara ningún cambio en el contexto.  Criterio 3.2.2 – Con entrada de datos: El cambio de configuración en cualquier componente perteneciente a la interfaz gráfica del usuario no causará ningún cambio de contexto. En caso de que dicho cambio si pueda ocurrir se debe advertir al usuario con anterioridad.  Criterio 3.2.3 – Navegación Consistente: El orden y distribución de los controles de navegación se debe mantener idéntico en todas las páginas pertenecientes a la aplicación Web. De existir un cambio siempre será por deseo del usuario.  Criterio 3.2.4 – Identificación Consistente: Si se cuenta con un grupo de componentes que compartan la misma funcionalidad en la aplicación Web deben ser identificados de forma consistente.  Criterio 3.2.5 – Cambio a petición: todo cambio de contexto debe iniciarse a petición del usuario. o Pauta 3.3- Ayude a los usuarios a evitar y corregir los errores  Criterio 3.3.1 – Identificación de errores: En caso de que ocurra un error se recomienda indicarle de inmediato al usuario el motivo del error, el lugar y que puede hacer para solventarlo.  Criterio 3.3.2 – Instrucciones o etiquetas: Siempre se debe asumir que el usuario tiene un mínimo conocimiento acerca del funcionamiento del sistema por lo cual es prudente proporcionarle todas las indicaciones o instrucciones pertinentes para que puedan hacer uso correcto de los elementos interactivos.  Criterio 3.3.3 – Sugerencias tras error: inmediatamente al detectar algún error de entrada se debe notificar al usuario tanto la ocurrencia de dicho error como la manera de solventarlo de forma oportuna y accesible.  Criterio 3.3.4 – Prevención de errores (legales, financieros, de datos): en caso de que la aplicación Web cuente con un módulo donde el usuario pueda realizar transacciones económicas se debe tomar en cuenta que los envíos pueden ser reversibles, lo datos pueden ser corregidos y posteriormente deben ser validados además de proporcionar el mecanismo por el cual los usuarios puedan modificar y aprobar los datos antes de finalizar el envío de la información.  Criterio 3.3.5 – Ayuda: se debe proporcionar la ayuda pertinente contextual.  Criterio 3.3.6 – Prevención de errores (todo error): cualquier acción del usuario debe ser reversible y la información enviada siempre podrá ser confirmada. 1.4- Principio 4: Robusto “El contenido debe ser suficientemente robusto para que pueda ser interpretado por una amplia variedad de agentes de usuario, incluyendo los productos de apoyo”. o Pauta 4.1- Compatible: Maximice la compatibilidad con los agentes de usuario actuales y futuros, incluyendo los productos de apoyo.  Criterio 4.1.1 – Interpretación: todo desarrollador debe comprobar que las etiquetas utilizadas están correctamente anidadas y todas cuentan con su respetiva etiqueta de cierre. Para comprobar este criterio el W3C pone a disposición su propio validador.  Criterio 4.1.2 – Nombre, rol, valor: Este criterio está pensado para los desarrolladores de interfaz. Todo componente perteneciente a la interfaz de usuario debe estar correctamente determinado, el nombre, el rol y el valor puede ser interpretado por los navegadores, reproductores multimedia, lectores y magnificadores de pantalla, software de reconocimiento de voz, teclados alternativos, entre otros. Anexos - 113 - Anexo 2 - Metodología Programación Extrema Las Cuatro Variables de la XP En la Programación Extrema (XP, eXtreme Programming) se definen cuatro variables para los proyectos de software: tiempo, calidad, coste y ámbito. De esas cuatro variables el alcance es una de las más potentes ya que reduce el riesgo de tener un posible retraso durante la implementación de alguna funcionalidad, es decir, se limitan a desarrollar solo lo que está definido para determinado período de tiempo, luego es posible extender el alcance del proyecto a medida que avanza el tiempo y aumenta el conocimiento. En cuanto al coste, generalmente en la industria del desarrollo de software aceptar cambios durante el proceso supone el aumento exponencial de costos con el tiempo. Por el contrario la programación extrema propone el cambio inmediato del sistema cuando el actual hace que el coste del software aumente con el pasar del tiempo, entre las prácticas recomendadas para lograr lo anterior se recomienda que el diseño se realice lo más sencillo posible, para hacer solo lo imprescindible en determinado momento. Siempre que el código sea simple y se realicen continuamente sus respectivas pruebas se podrán hacer los cambios que sean necesarios en el momento que ellos surjan. En XP no se recomienda tomar todas las decisiones importantes al principio, lo ideal es desarrollar software donde se puedan tomar decisiones emergentes rápidamente sustentadas en pruebas que aporten mejoras en el diseño del software. Los Cuatro Valores de la XP La XP está basada en cuatro (4) valores para desarrollar el trabajo y lograr los objetivos de manera exitosa. Los desarrolladores Web deben tener presente que en el ciclo de vida de todo proyecto pueden surgir cambios repentinos donde cambiarán reglas de negocio, requisitos, el personal o la tecnología, por lo que dicho cambio no se debe afrontar como un problema, por el contrario se deben asumir siguiendo los cuatro valores propuestos en XP: 1- Comunicación: Dado que la documentación en los proyectos es escasa, la comunicación en el equipo representa un punto cumbre en la XP, de esta manera se pueden evitar los problemas por falta de comunicación como lo pueden ser omitir la toma de decisiones de puntos críticos en el diseño. 2- Simplicidad: como toda metodología ágil, XP apuesta por la sencillez en todo sentido en su máxima expresión para que el código pueda ser entendido por todos y posteriormente mejorarlas mediante recodificación en caso de ser necesario. 3- Retroalimentación: Por medio de una serie de pruebas funcionales que se le realizarán al software, los desarrolladores Web obtendrán una realimentación que el mismo sistema estará aportando detectando con ello el nivel de calidad en determinado momento. 4- Valentía: Se trata de asumir retos y afrontar los problemas sin importar su dificultad, buscando la manera más sencilla de salir adelante de manera exitosa. Las Cuatro Actividades de XP Después de haber definido los cuatro valores necesarios para garantizar el éxito del proyecto, es justo especificar las actividades que deben llevarse a cabo según la Programación Extrema: 1. Codificar: De las cuatro actividades, esta es la única imprescindible y más importante, ya que si no existe código fuente no hay software. 2. Hacer Pruebas: son las pruebas las que le indican al programador la calidad del código implementado, el hecho de haber logrado o no lo propuesto solo es comprobable mediante dichas pruebas. 3. Escuchar: En todo proyecto se debe escuchar todo requerimiento aportado por el cliente. En cada prueba se debe preguntar si se está obteniendo lo requerido y de esta manera cumplimos con uno de los cuatro valores antes mencionados como lo es la retroalimentación. 4. Diseñar: Se debe crear una estructura de diseño para evitar los posibles problemas que puedan surgir organizando la lógica del sistema. Anexos - 114 - Fases de la Programación Extrema La metodología ágil XP, cuenta con su respectivo ciclo de vida35 para el desarrollo de software el cual se explica a continuación: - Planificación: Esta es la primera actividad en el proceso de desarrollo de software, aunque se mantiene con diálogo permanente a lo largo del proyecto. Es en esta etapa donde se describen las funcionalidades del software que se va a desarrollar y su respectiva prioridad. Una vez establecidos los requerimientos, se fija la fecha de entrega. Las personas involucradas en el negocio necesitan determinar lo siguientes puntos: 1- Ámbito: ¿Cuál es el problema que el software debe resolver? 2- Prioridad: Establecer la importancia de cada requerimiento para saber el orden en el que se deben implementar. 3- Composición de versiones: Justo en el momento donde lo que ha implementado puede aportar algún beneficio al cliente se puede entregar esa versión. 4- Fechas de versiones: Se deben establecer claros plazos de entregas de avances significativos para el proyecto. 5- Estimaciones: Se debe determinar el tiempo aproximado que llevará el desarrollo de las funciones. 6- Consecuencias: Se debe mantener informado al cliente sobre el posible desenlace provocado por la toma de decisiones. 7- Procesos: ¿Cómo se debe organizar el trabajo en equipo? 8- Programación detallada: Una vez divido el problema a resolver en varias versiones de requerimientos se debe determinar en cada versión cuál será el requerimiento que se solventará primero. - Diseño: El diseño sigue la premisa de ser siempre sencillo el cual se puede ir modificando a lo largo del desarrollo. Las definiciones más importantes en este punto son las siguientes: o Simplicidad: Todo diseño complejo tardará más en implementarse que uno sencillo, por lo mismo XP propone crear el diseño más sencillo pero funcional. Se recomienda no adelantar la implementación de requerimientos pertenecientes a otras iteraciones. o Soluciones “spike36”: En el momento en el que se presentan problemas técnicos o dificultad en el momento de calcular el tiempo estimado para la implementación de alguna aplicación se permite la utilización de simples programas de prueba llamados “spike” que servirán para la exploración y evaluación de posibles soluciones. o Recodificación: Consiste en escribir el código y un programa haciendo del mismo algo más simple, y fácil de comprender sin perder en ningún momento su funcionalidad. Con la metodología XP se recomienda recodificar cada vez que sea necesario, puede que parezca un paso innecesario y pérdida de tiempo pero sus beneficios se podrán apreciar en las iteraciones siguientes cuando por alguna razón sea necesario extender la funcionalidad o cambiar alguna parte en específico. o Metáforas: las metáforas se utilizan para que todos puedan comprender las situaciones planteadas sin mayor explicación técnica. En la programación extrema se recomienda usar las metáforas para explicar el propósito del proyecto y así poder guiar la estructura y arquitectura del mismo. Cabe destacar que es de suma importancia el manejo de la misma metáfora por parte del grupo de desarrolladores y del cliente para facilitar la comunicación entre ellos. - Codificación: o Disponibilidad del cliente: uno de los principales requerimientos encontrados en la programación extrema es la de contar constantemente con el apoyo del cliente como otro miembro más del equipo de trabajo. Antes de iniciar el proyecto, el cliente debe proporcionar las historias de los usuarios, dichas historias son cortas y no proporcionan detalles significativos para la programación del código 35 Fases de la Programación Extrema propuestas por Kent Beck, en su libro “Extreme Programming Explained”. 1999. 36 Spike: se traduce como “punta” o “clavo” o también como “frustrar”. – Joskowicz, José. Reglas y Prácticas en eXtreme Programing - 2008 Anexos - 115 - fuente. La documentación extensa de especificaciones no es requerida en la Programación Extrema, lo que se requiere es que el cliente proporcione los detalles en el momento adecuado. La ventaja de tener contacto permanente con el cliente durante todo el ciclo de vida del proyecto, es que cualquier situación no deseada o funcionamiento mal interpretado puede ser detectado a tiempo. o Uso de estándares: Para facilitar la codificación y comprensión, la programación extrema es otra de las metodologías que se basa en estándares ya conocidos. o Programación dirigida por las pruebas: En la Programación Extrema una de las primeras actividades que se realiza es el planteamiento de pruebas que el sistema debe superar y luego la implementación debe ser la mínima requerida como para poder comprobar el funcionamiento y aprobación de sus respectivas pruebas unitarias. o Programación en pares: En la Programación extrema se les recomienda a los desarrolladores trabajar en pareja usando un mismo computador, de esta manera se logra mejorar la calidad y disminuye la cantidad de errores, los tiempos de recuperación o resolución de problemas son menores, las relaciones interpersonales mejoran fomentando el trabajo en equipo y al final son más los desarrolladores que conocen el código y pueden responder ante determinada situación. o Integraciones permanentes: En la programación extrema se requiere trabajar siempre sobre la última versión ya que programar sobre las antiguas versiones puede traer consigo graves consecuencias y restar tiempo que debería invertirse en algo productivo. Lo ideal es que a diario se obtenga una nueva versión sin error alguno y que no exista concurrencia al momento de actualizar versiones por parte de los desarrolladores. o Propiedad colectiva del código: Cuando se trabaja bajo la metodología XP toda pareja de desarrolladores puede modificar cualquier módulo que desee para mejorarlo y/o adaptarlo para que este funcione con determinado requerimiento. Todos son dueños y responsables del código sin importar quien lo desarrollo. o Ritmo sostenido: la filosofía que maneja la Programación Extrema con respecto al tiempo de trabajo no necesariamente se fija a una cantidad exacta de horas de trabajo, lo que se debe fijar es que la cantidad de horas que se trabajen a la semana si se mantenga a lo largo de todo el proyecto sin sobrecargar al personal, asegurando que se un ritmo constante y razonable. - Pruebas: o Pruebas unitarias: Todo módulo programado debe pasar por sus respectivas pruebas antes de ser publicados y compartidos. o Detección y corrección de errores: cada error detectado debe ser corregido de manera inmediata o Pruebas de aceptación: En cada iteración y basándose en las historias de los usuarios se crean las pruebas de aceptación. Dados los posibles escenarios proporcionados por el cliente se procede a comprobar si los respectivos requerimientos fueron implementados correctamente. Roles En la propuesta original de la metodología XP de Kent Beck, publicada en el año 1999 en el libro Extreme Programming Explained, se proponen los siguientes roles: - Programador: Es el encargado de crear tanto el código fuente del software como las pruebas unitarias. En este proyecto, la programadora es la estudiante María Gabriela Acosta. - Cliente: Se encarga de escribir las pruebas de los usuarios y las pruebas funcionales que servirán para validar la implementación. Es el cliente quien asigna la prioridad de requerimientos a programar. En este proyecto, el rol del cliente está a cargo de la Profesora Yusneyi Carballo. - Encargado de pruebas (Tester): Es quien encamina al cliente durante la creación de las pruebas funcionales y posteriormente se encarga de someter el software a continuas pruebas. En este proyecto, la encargada de pruebas es la estudiante María Gabriela Acosta. - Encargado de seguimiento (Tracker): Es el encargado de proporcionar la retroalimentación al equipo, además de realizar el seguimiento de cada proceso en todas las iteraciones verificando el nivel de acierto entre el tiempo contemplado y el tiempo real que se llevó la implementación en determinada iteración para mejorar los tiempos estimados de las próximas estimaciones y/o contemplaciones de tiempo. En este proyecto, el rol de encargada de seguimiento está a cargo de la Profesora Yusneyi Carballo. Anexos - 116 - - Entrenador (Coach): Es el encargado de supervisar el proyecto global garantizando además que se cumpla con la metodología XP proporcionándole guías al equipo de trabajo. En este proyecto, el rol de entrenadora está a cargo de la Profesora Yusneyi Carballo. - Consultor: Es un miembro externo al equipo de trabajo, el cual es experto en el manejo de determinado tema necesario para la elaboración del software. - Gestor (Big boss): Es el mediador entre el cliente y los desarrolladores asegurando con su trabajo que el cliente obtenga el software que espera. En este proyecto, la encargada de pruebas es la estudiante María Gabriela Acosta. Anexos - 117 - Anexo 3 – Plataforma de desarrollo para la aplicación Para el desarrollo de la aplicación utilizando como lenguaje de programación PHP con el framework Laravel, se instaló el entorno de desarrollo Web para Windows denominado WAMP, el cual, provee a los desarrolladores de cuatro (4) elementos necesarios para un servidor Web, como lo son, la compatibilidad con sistema operativo Windows, manejo de base de datos MySQL, Apache como software para servidor Web y software de programación script Web, en este caso se usó PHP pero también se podría emplear Python o Perl. Para el desarrollo y las pruebas de la aplicación, las especificaciones del ambiente son las siguientes: Sistema Operativo: Windows 8 (Versión de 64 bits) Procesador: Intel® Core™ i7-3537U CPU @ 2.00GHz 2.50 GHz. Velocidad del Bus de Sistema: 1024 MHz Memoria Física del Sistema: 8192 MB RAM Disco Duro Principal: 466 GB Versión de PHP: 5.4.3 Versión Apache: 2.4.2 Versión PhpMyAdmin: 3.5.1 Versión de MySQL: 5.5.24 Versión de Laravel: 4.1 Versión de Wamp: 2.2 WAMP Entorno de desarrollo Web para Windows, con el cual, es posible la implementación de aplicaciones Web con Apache, PHP y bases de datos MySQL database, además incluye PHPMyAdmin y SQLiteManager para la gestión eficiente y sencilla de bases de datos. Dado lo anterior se pueden resumir las características de WAMP en los siguientes puntos: - Provee a los desarrolladores de los cuatro elementos necesarios para un servidor Web - Compatible con el sistema operativo Windows. - Manejado de base de datos MySQL. - Apache como software para servidor Web. - Software de programación script Web, en este caso se usó PHP pero también se podría emplear Python o Perl. - Como todos sus componentes es software libre. - Incluye además de las últimas versiones de Apache, PHP y MySQL, versiones anteriores para los desarrolles que deseen testear sus aplicaciones en diversos entornos de desarrollo. Utilidad de WAMP Server La utilidad de WAMP Server es servir páginas HTML a internet, además de gestionar los datos y proporcionar los lenguajes de programación para desarrollar las aplicaciones Web. Anexos - 118 - Requerimientos de WAMP Server con PHP Para determinar los requerimientos para el buen funcionamiento de WAMP Server los dividiremos en dos, los requerimientos del lado del cliente y los requerimientos del lado del servidor: - Del lado del cliente se requiere: o Navegador Web - Del lado del servidor se requiere: o Apache (servidor de aplicaciones) o PHP (Lenguaje de programación Web) o MySQL (Base de datos) Lenguajes de Programación Entre los lenguajes de programación soportados por WAMP se encuentran: - HTML - JavaScript - PHP - ASP - ASP.NET - JSP - Python - RUBY - APACHE Instalación del software de desarrollo Los pasos que se deben seguir para la instalación de WAMP Server son los siguientes: 1- El primer paso es asegurarse de tener instalado Visual C++ 2010 SP1 ya que es requisito fundamental para el funcionamiento de WAMP Server, si no lo tiene instalado los enlaces de descarga se encuentran en el sitio oficial de Microsoft. 2- Descargar la última versión del servidor desde su página Web oficial. 3- Una vez descargado el ejecutable de Wamp Server podemos iniciarlo y seguir los pasos indicados por el instalador. 4- Durante la instalación se le preguntará cual es el explorador que desea utilizar con Wamp y el nombre del servidor SMTP, el cual se puede dejar como localhost, nombre que trae la aplicación por defecto. 5- Una vez finalizada la instalación se procede a la inicialización del WAMP Server, el cual nos indicará que está listo para funcionar cuando el icono de la barra de tareas derecha pasa por tres estados, llegando a su estado verde (Ilustración 79). Ilustración 79- Iconos de WAMP Server A pesar de que la implementación y las pruebas se realizaron en el ambiente anteriormente descrito, la aplicación puede migrarse en un archivo WAR (comprimido final que representa físicamente la aplicación, el cual incluye el código y librerías empleadas) a otro ambiente que cuente por lo menos con el servidor Web local, en su defecto, la aplicación puede ser accedida por cualquier usuario si se publica en la Web por un hosting y el único requerimiento necesario sería conexión a internet. Anexos - 119 - Anexos - 120 - Anexo 4- Uso de la aplicación EAW para evaluar la accesibilidad en sitios Web A continuación se presentan los resultados detallados de las evaluaciones realizadas con la aplicación a diferentes sitios Web de cuatro sectores importantes, como lo son, la educación universitaria, sitios gubernamentales banca venezolana y desarrolladores de software. Escuela de Computación UCV Sitio Web del tipo informativo para aspirantes a nuevo ingreso, estudiantes y profesores de la Escuela de Computación de la Facultad de Ciencias de la Universidad Central de Venezuela, en el cual se encuentran noticias, calendario académico, información acerca de las inscripciones o reincorporaciones, pensum, normativas, directorio, ofertas de pasantías entre otros temas de importancia para los integrantes de la Escuela. - URL: http://www.ciens.ucv.ve/escueladecomputacion/inicio/index# - Tipo de Evaluación: Por principios de accesibilidad Perceptible, Comprensible, Operable y Robusto. - Resultado del Servicio de validación de Marcado W3C: 13 Errores. - Accesibilidad Global del Recurso: 93,27%. - Recursos con Problemas: 6,73%. - Captura de pantalla del Resultado: Ilustración 80 Como se puede apreciar en la ilustración 80, el grado de accesibilidad global del recurso es de 93,27%, lo cual, representa un valor considerado alto tomando en cuenta que la máxima ponderación es de 100% y que los recursos que presentan problema rondan el 6,73% de los recursos totales de la página Web, es decir, los recursos con problemas no superan ni siquiera el 10% de recursos totales, por lo que se puede garantizar que un gran número de usuarios tienen la posibilidad de acceder al portal y navegar sin las limitaciones que pueda causarle algún tipo de discapacidad visual o motriz que presente el mismo. Anexos - 121 - Ilustración 80- Resultado de la evaluación de la Web de la Escuela de Computación de la UCV Anexos - 122 - Escuela de Biología UCV Sitio Web del tipo informativo para aspirantes a nuevo ingreso, estudiantes y profesores de la Escuela de Bilogía de la Facultad de Ciencias de la Universidad Central de Venezuela, en el cual, se encuentran los informes de consejos de escuela y actas aprobadas, información de laboratorios, asignaturas e inventario del depósito de laboratorios docentes, entre otros temas de importancia para los integrantes de la escuela. - URL: http://www.ciens.ucv.ve/biologia/ - Tipo de Evaluación: Por principios de accesibilidad Perceptible, Comprensible, Operable y Robusto. - Resultado del Servicio de validación de Marcado W3C: No se puede ejecutar por un error de codificación en la línea 24. - Accesibilidad Global del Recurso: 84,78%. - Recursos con Problemas: 15,22%. - Captura de pantalla del Resultado: Ilustración 81 Como se puede apreciar en la ilustración 81, el grado de accesibilidad global del recurso es de 84,78%, lo cual, representa un valor considerado medianamente alto tomando en cuenta que la máxima ponderación es de 100% y que los recursos que presentan problema rondan el 15,22% de los recursos totales de la página Web, es decir, los recursos con problemas superan el 15% de recursos totales, por lo que se llega a la conclusión de que a pesar de que un gran número de usuarios tienen la posibilidad de acceder al portal y navegar en él, podrían en cualquier momento encontrarse con ciertas limitaciones no tomadas en cuenta para usuarios que presenten algún tipo de discapacidad visual o motriz. La incidencia de error con mayor número de repeticiones se trata de la omisión del atributo alt en las imágenes. Anexos - 123 - Ilustración 81– Resultado de la evaluación de la Web de la Escuela de Biología de la UCV Anexos - 124 - Escuela de Matemática UCV Sitio Web del tipo informativo para aspirantes a nuevo ingreso, estudiantes y profesores de la Escuela de Matemática de la Facultad de Ciencias de la Universidad Central de Venezuela, en el cual se encuentran noticias, calendario académico, información acerca de las inscripciones o reincorporaciones, pensum, normativas, información clasificada por área de investigación, entre otros temas de importancia para los integrantes de la escuela. - URL: http://www.matematica.ciens.ucv.ve/ - Tipo de Evaluación: Por principios de accesibilidad Perceptible, Comprensible, Operable y Robusto. - Resultado del Servicio de validación de Marcado W3C: 24 Errores. - Accesibilidad Global del Recurso: 89,77%. - Recursos con Problemas: 10,23%. - Captura de pantalla del Resultado: Ilustración 82. Como se puede apreciar en la ilustración 82, el grado de accesibilidad global del recurso es de 89,77%, lo cual, representa un valor alto tomando en cuenta que la máxima ponderación es de 100% y que los recursos que presentan problema rondan el 10,23% de los recursos totales de la página Web, es decir, los recursos con problemas superan por muy poco el 10% de recursos totales, por lo que se llega a la conclusión de que a pesar de que un gran número de usuarios tienen la posibilidad de acceder al portal y navegar en él, podrían en cualquier momento encontrarse con ciertas limitaciones no tomadas en cuenta para usuarios que presenten algún tipo de discapacidad visual o motriz. Los recursos que presentan problemas en la página Web no están vinculados a una misma etiqueta, ya que se evidencian problemas diversos, entre los cuales se encuentran:  La etiqueta html no cuenta con el atributo lang, por lo tanto, no se declara el idioma predeterminado del texto de la página.  Una imagen no cuenta con el atributo alt, por lo tanto, si un usuario que presente discapacidad visual y está usando en su navegador alguna aplicación que convierta el texto de la página en audio, al llegar a la imagen sin descripción por falta del atributo alt no sabrá interpretar su contenido y el usuario no tendrá acceso a dicha información.  Las tablas utilizadas no están correctamente estructuradas ya que se omitieron atributos.  Por último, el valor del atributo name de la etiqueta <a> debe ser único y dentro de la página se incurre en este error. Anexos - 125 - Ilustración 82– Resultado de la evaluación de la Web de la Escuela de Matemática de la UCV Anexos - 126 - Oracle Corporation Sitio Web de una compañía de desarrollo de software de un reconocido gestor de bases de datos objeto-relacional, que brinda tanto material informativo relacionado con sus productos como también contiene una sección de soporte al usuario, área de descargas y formación para usuarios interesados en adquirir más conocimientos. Dicha Web contiene gran volumen de información muy condensada de manera muy organizada por categorías. - URL: http://www.oracle.com/es/index.html - Tipo de Evaluación: Por principios de accesibilidad Perceptible, Comprensible, Operable y Robusto. - Resultado del Servicio de validación de Marcado W3C: 18 Errores. - Accesibilidad Global del Recurso: 99,03%. - Recursos con Problemas: 0,97%. - Captura de pantalla del Resultado: Ilustración 83. Como se puede apreciar en la ilustración 83, el grado de accesibilidad global del recurso es de 99,03%, lo cual, representa un valor alto tomando en cuenta que la máxima ponderación es de 100% y que los recursos que presentan problema rondan el 0,97% de los recursos totales de la página Web, es decir, los recursos con problemas no alcanzan el 1% de recursos totales, por lo que se llega a la conclusión de que el sitio Web de Oracle Corporation en lo que se refiera a la accesibilidad de usuarios que presentan algún tipo de discapacidad visual o motriz presenta un código casi impecable, salvo algunos errores de marcado, garantizando así, el acceso y navegación exitosa a un gran número de usuarios. El error encontrado en la página es por la falta del atributo tabindex en una etiqueta <input>. Anexos - 127 - Ilustración 83– Resultado de la evaluación de la Web de Oracle Corporation Anexos - 128 - Java Sitio Web de un reconocido lenguaje de programación, que brinda tanto material informativo como también contiene una sección de asistencia al usuario, área de descargas y preguntas generales de usuarios. - URL: http://www.java.com/es - Tipo de Evaluación: Por principios de accesibilidad Perceptible, Comprensible, Operable y Robusto. - Resultado del Servicio de validación de Marcado W3C: 9 Errores. - Accesibilidad Global del Recurso: 88,57%. - Recursos con Problemas: 11,43%. - Captura de pantalla del Resultado: Ilustración 84. Como se puede apreciar en la ilustración 84, el grado de accesibilidad global del recurso es de 88.57%, lo cual, representa un valor alto tomando en cuenta que la máxima ponderación es de 11,43% y que los recursos que presentan problema rondan el 11,43% de los recursos totales de la página Web, es decir, los recursos con problemas superan por muy poco el 10% de recursos totales, por lo que se llega a la conclusión de que a pesar de que un gran número de usuarios tienen la posibilidad de acceder al portal y navegar en él, podrían en cualquier momento encontrarse con ciertas limitaciones no tomadas en cuenta para usuarios que presenten algún tipo de discapacidad visual o motriz. Los recursos que presentan problemas en la página Web no están vinculados a una misma etiqueta, ya que se evidencian problemas diversos, entre los cuales se encuentran:  A las etiquetas input le falta el atributo tabindex en reiteradas ocasiones y en una de las etiquetas input no se encentra el atributo value.  Por último, el valor del atributo name de la etiqueta <a> debe ser único y la etiqueta debe presentar algún contenido. Anexos - 129 - Ilustración 84– Resultado de la evaluación de la Web de Java Anexos - 130 - Laravel Sitio Web de framework de código abierto para desarrollar aplicaciones y servicios Web con PHP 5, un reconocido lenguaje de programación, que brinda material informativo y cuanta con su sección de descargas y documentación. - URL: http://laravel.com/ - Tipo de Evaluación: Por principios de accesibilidad Perceptible, Comprensible, Operable y Robusto. - Resultado del Servicio de validación de Marcado W3C: 2 Errores. - Accesibilidad Global del Recurso: 100%. - Recursos con Problemas: 0%. - Captura de pantalla del Resultado: Ilustración 85. Como se puede apreciar en la ilustración 85, el grado de accesibilidad global del recurso es de 100%, lo cual, representa el valor máximo en lo que agrado de accesibilidad se refiere, lo cual indica que no contiene recursos que presenten problemas en la página Web, por lo que se llega a la conclusión de que el sitio Web de Laravel en lo que se refiera a la accesibilidad de usuarios que presentan algún tipo de discapacidad visual o motriz presenta un código impecable, salvo 2 errores de marcado, garantizando así, el acceso y navegación exitosa a un gran número de usuarios. Anexos - 131 - Ilustración 85– Resultado de la evaluación de la Web de Laravel Anexos - 132 - Consejo Nacional Electoral (CNE) Sitio Web de uno de los cinco poderes independientes de la República Bolivariana de Venezuela, responsable y garante de la transparencia de los procesos electorales y refrendarios que se llevan a cabo en la nación. En este sitio Web, se encuentra información relacionada con procesos electorales próximos y resultados de los anteriores, normativas electorales, registro electoral entre otros. - URL: http://localhost/WebpageParser3/public/Webpage/164 - Tipo de Evaluación: Por principios de accesibilidad Perceptible, Comprensible, Operable y Robusto. - Resultado del Servicio de validación de Marcado W3C: 2 Errores. - Accesibilidad Global del Recurso: 85,11%. - Recursos con Problemas: 14,89%. - Captura de pantalla del Resultado: Ilustración 86. Como se puede apreciar en la ilustración 86, el grado de accesibilidad global del recurso es de 85.11%, lo cual, representa un valor medianamente alto tomando en cuenta que la máxima ponderación es de 100% y que los recursos que presentan problema rondan el 14,89% de los recursos totales de la página Web, es decir, los recursos con problemas se acercan al 15% de recursos totales, por lo que se llega a la conclusión de que a pesar de que un gran número de usuarios tienen la posibilidad de acceder al portal y navegar en él, podrían en cualquier momento encontrarse con ciertas limitaciones no tomadas en cuenta para usuarios que presenten algún tipo de discapacidad visual o motriz y considerando la importancia del sitio Web para todos los ciudadanos del país ese 14,89% de recursos inaccesibles representa un porcentaje importante. Los recursos que presentan problemas en la página Web no están vinculados a una misma etiqueta, ya que se evidencian problemas diversos, entre los cuales se encuentran:  Las tablas utilizadas no están correctamente estructuradas ya que se omitieron atributos.  A las etiquetas input le falta el atributo tabindex en reiteradas ocasiones. Anexos - 133 - Ilustración 86– Resultado de la evaluación de la Web del CNE Anexos - 134 - Servicio Nacional Integrado de Administración Aduanera y Tributaria (Seniat) Sitio Web del órgano de ejecución de la administración tributaria nacional de Venezuela, por medio del cual, los usuarios pueden informarse acerca de las normativas legales, educación aduanera y tributaria, gestionar todo lo referente al R.I.F. personal o jurídico, retención de impuestos y recibir asistencia como ciudadano contribuyente. - URL: http://declaraciones.seniat.gob.ve/portal/page/portal/PORTAL_SENIAT - Tipo de Evaluación: Por principios de accesibilidad Perceptible, Comprensible, Operable y Robusto. - Resultado del Servicio de validación de Marcado W3C: 177 Errores. - Accesibilidad Global del Recurso: 51,75%. - Recursos con Problemas: 48,25%. - Captura de pantalla del Resultado: Ilustración 87. Como se puede apreciar en la ilustración 87, el grado de accesibilidad global del recurso es de 51,75%, lo cual, representa un valor medianamente bajo tomando en cuenta que la máxima ponderación es de 100% y que los recursos que presentan problema rondan el 48,25% de los recursos totales de la página Web, es decir, los recursos con problemas se acercan al 50% de recursos totales, por lo que se llega a la conclusión de que existen altas probabilidades de que los usuarios que presenten algún tipo de discapacidad visual o motriz se encuentren con limitaciones o problema de accesibilidad al intentar navegar por este sitio Web tan importante para los ciudadanos por las gestiones que allí se realizan.  Una imagen no cuenta con el atributo alt, por lo tanto, si un usuario que presente discapacidad visual y está usando en su navegador alguna aplicación que convierta el texto de la página en audio, al llegar a la imagen sin descripción por falta del atributo alt no sabrá interpretar su contenido y el usuario no tendrá acceso a dicha información.  A las etiquetas input le falta el atributo tabindex en reiteradas ocasiones y en una de las etiquetas input no se encentra el atributo value.  Por último, las tablas utilizadas no están correctamente estructuradas ya que se omitieron atributos. Anexos - 135 - Ilustración 87– Resultado de la evaluación de la Web del Seniat Anexos - 136 - Gobernación de Miranda Sitio Web destinado a los ciudadanos que habitan el estado Miranda de la República Bolivariana de Venezuela, de carácter informativo, reportando los proyectos sociales que benefician directamente a todas las comunidades presentes en el estado. - URL: http://www.miranda.gov.ve/ - Tipo de Evaluación: Por principios de accesibilidad Perceptible, Comprensible, Operable y Robusto. - Resultado del Servicio de validación de Marcado W3C: No se puede ejecutar por un error de codificación en la línea 112. - Accesibilidad Global del Recurso: 84,23%. - Recursos con Problemas: 15,77%. - Captura de pantalla del Resultado: Ilustración 88. Como se puede apreciar en la ilustración 88, el grado de accesibilidad global del recurso es de 85,11%, lo cual, representa un valor medianamente alto tomando en cuenta que la máxima ponderación es de 100% y que los recursos que presentan problema rondan el 14,89% de los recursos totales de la página Web, es decir, los recursos con problemas se acercan al 15% de recursos totales, por lo que se llega a la conclusión de que a pesar de que un gran número de usuarios tienen la posibilidad de acceder al portal y navegar en él, podrían en cualquier momento encontrarse con ciertas limitaciones no tomadas en cuenta para usuarios que presenten algún tipo de discapacidad visual o motriz.  La etiqueta html no cuenta con el atributo lang, por lo tanto, no se declara el idioma predeterminado del texto de la página.  Una imagen no cuenta con el atributo alt, por lo tanto, si un usuario que presente discapacidad visual y está usando en su navegador alguna aplicación que convierta el texto de la página en audio, al llegar a la imagen sin descripción por falta del atributo alt no sabrá interpretar su contenido y el usuario no tendrá acceso a dicha información.  A las etiquetas input le falta el atributo tabindex en reiteradas ocasiones y en una de las etiquetas input no se encentra el atributo value.  El valor del atributo for de la etiqueta <label> debe coincidir con el valor del atributo name de la etiqueta <input>, en caso de que esto no se cumpla, debería tener el atributo title.  Las tablas utilizadas no están correctamente estructuradas ya que se omitieron atributos. Anexos - 137 - Ilustración 88 – Resultado de la evaluación de la Web de la Gobernación de Miranda