UNIVERSIDAD CENTRAL DE VENEZUELA UNIVERSIDAD CENTRAL DE VENEZUELA FACULTAD DE CIENCIAS ESCUELA DE COMPUTACIÓN CARACAS - VENEZUELA INTEGRACIÓN DEL REPOSITORIO DE OBJETOS DE APRENDIZAJE DE AMBAR CON LA PLATAFORMA MOODLE Trabajo Especial de Grado presentado ante la ilustre Universidad Central de Venezuela Por los Bachilleres: Br. Joubert Castellanos, Irian Carolina Br. Ramírez Duque, Elizabeth del Carmen Tutoras: Prof. Yosly Hernández Prof. Vanessa Miguel Caracas, Febrero 2011 ii ACTA Quienes suscriben, miembros del Jurado designado por el Consejo de la Escuela de Computación, para examinar el Trabajo Especial de Grado presentado por las Bachilleres Irian Carolina Joubert Castellanos C.I.:18.028.186 y Elizabeth del Carmen Ramírez Duque C.I.:17.058.660, con el título: “Integración del Repositorio de Objetos de Aprendizaje de AMBAR con la plataforma MOODLE”, a fines de optar al título de Licenciado en Computación, dejan constancia de lo siguiente: Leído como fue, dicho trabajo por cada uno de los miembros del Jurado, se fijó el día 18 de febrero de 2011 a las 09:00 am, para que sus autoras lo defiendan en forma pública, lo que hicieron en el aula PA-III de la Escuela de Computación de la Facultad de Ciencias de la Universidad Central de Venezuela, mediante una presentación oral de su contenido, luego de lo cual respondieron las preguntas formuladas. Finalizada la defensa pública del Trabajo Especial de Grado, el Jurado decidió aprobarlo. En fe de lo cual se levanta la presente Acta, en Caracas a los dieciocho (18) días del mes de febrero del año dos mil once dejándose también constancia de que actuó como Coordinador del Jurado la Profesora Tutor Yosly Hernández. ______________________ _______________________ Prof. Yosly Hernández Prof. Vanessa Miguel Tutor Tutor ______________________ ________________________ Prof. Nora Montaño Prof. Antonio Silva Jurado Principal Jurado Principal iii RESUMEN AMBAR es un proyecto de investigación de la Universidad Central de Venezuela, que busca proporcionar herramientas de software que apoyen el proceso de enseñanza y aprendizaje. Actualmente, uno de sus principales componentes es el Repositorio de Objetos de Aprendizaje (ROA) de AMBAR, el cual se encuentra integrado con un Repositorio de Metadata, a través de la Capa de Servicios Web. El objetivo general del presente trabajo fue integrar el ROA de AMBAR con la plataforma MOODLE, el Sistema de Gestión de Aprendizaje (LMS) utilizado por la Universidad Central de Venezuela como plataforma de Educación a Distancia, a través de la Capa de Servicios Web. Entre el ROA de AMBAR y MOODLE no existía una conexión transparente para el usuario final, lo que resultaba ineficiente y complicaba el proceso de construcción de un curso particular si se deseaba utilizar Objetos de Aprendizaje (OA) alojados en dicho repositorio. Para ello se empleó el Modelado Ágil (MA) como Método de Desarrollo de Software, en el cual a través de cuatro iteraciones se creó el tipo de recurso “Objeto de Aprendizaje (OA) Básico”, el módulo de actividades “Objeto de Aprendizaje (OA) Estandarizado” y el bloque “ROA de AMBAR” en la plataforma MOODLE; y se rediseñó el ROA de AMBAR en cuanto a su interfaz gráfica de usuario y sus métodos internos. Con este trabajo, se está facilitando la gestión de los OA almacenados en el repositorio, desde el mismo entorno de trabajo de MOODLE, lo cual resulta en grandes beneficios para los usuarios de dicha plataforma, debido a que pueden incorporar los OA directamente en su curso y hacerlos disponibles para su uso general. Además, permite hacer del ROA de AMBAR y de MOODLE sistemas mucho más completos al incrementar sus usuarios, retroalimentación, funcionalidades y recursos, respectivamente. Palabras Clave: Objetos de Aprendizaje (OA), AMBAR, MOODLE, Repositorio de Objetos de Aprendizaje (ROA), Servicios Web, e-Learning, LMS. iv ÍNDICE GENERAL ÍNDICE DE FIGURAS ................................................................................................... viii ÍNDICE DE TABLAS ..................................................................................................... xiii TABLA DE ABREVIATURAS UTILIZADAS .............................................................. xiv INTRODUCCIÓN ............................................................................................................. 1 CAPÍTULO I: .................................................................................................................... 3 EL PROBLEMA DE INVESTIGACIÓN ........................................................................... 3 1.1.-Planteamiento del problema ..................................................................................... 3 1.2.-Justificación ............................................................................................................. 5 1.3.-Objetivo General...................................................................................................... 6 1.4.- Objetivos Específicos.............................................................................................. 6 1.5.-Alcance.................................................................................................................... 6 1.6.- Antecedentes .......................................................................................................... 8 1.7.-Bases legales ......................................................................................................... 10 1.8.-Método de Desarrollo de Software ......................................................................... 11 CAPÍTULO II: ................................................................................................................. 17 MARCO CONCEPTUAL ................................................................................................ 17 2.1.- Proyecto AMBAR ................................................................................................ 18 2.1.1.-Repositorio de Objetos de Aprendizaje de AMBAR.......................................... 21 2.1.2.- Características y Funcionalidades del Repositorio de Objetos de Aprendizaje de AMBAR ..................................................................................................................... 22 2.2.- MOODLE ............................................................................................................. 30 2.2.1.-Arquitectura de MOODLE................................................................................ 30 v 2.2.2.-Enfoque Pedagógico de MOODLE ................................................................... 31 2.2.3.-Características Generales de MOODLE ............................................................ 32 2.2.4.-Actividades y Recursos de MOODLE ............................................................... 33 2.2.5.-Funcionalidad de MOODLE ............................................................................. 34 2.2.6.-Tipos de Cursos de MOODLE .......................................................................... 34 2.2.7.-Administración de MOODLE ........................................................................... 35 2.2.8.-Módulos de MOODLE ..................................................................................... 35 2.2.9.-Ventajas y desventajas de usar MOODLE ......................................................... 36 CAPÍTULO III: ................................................................................................................ 39 MARCO METODOLÓGICO ........................................................................................... 39 3.1.-Iteración 0: Iniciación del Proyecto ........................................................................ 39 3.1.1.-Fase I: Contemplar necesidades iniciales .......................................................... 39 3.1.1.1-Requerimientos Funcionales y No Funcionales .......................................... 40 3.1.1.2.-Pila de Requerimientos ............................................................................. 41 3.1.1.3.-Modelado General de los Casos de Uso ..................................................... 41 3.1.2.-Fase II: Descripción de la arquitectura de MOODLE y del ROA de AMBAR ... 44 3.2.-Iteración 1: Migración del ROA y del Repositorio de Metadata de AMBAR, implementación del Repositorio de Usuarios, adaptación de servicios web existentes e implementación de nuevos servicios de la Capa de Servicios Web de AMBAR. ........... 44 3.2.1.-Fase I: Modelado de la iteración: Migración del SMBD DB4O a MYSQL ........ 45 3.2.2.- Fase II: Desarrollo y Prueba: Adaptación de servicios existentes e implementación de nuevos servicios de la Capa de Servicios Web de AMBAR. ......... 48 3.3.-Iteración 2: Rediseño de la interfaz gráfica de usuario del ROA de AMBAR. ........ 49 3.3.1. Fase I: Modelado de la iteración: ....................................................................... 49 vi 3.3.1.1.- Refinamiento del Diagrama de Casos de Uso ........................................... 49 3.3.1.2.- Modelado de las Actividades.................................................................... 52 3.3.2.-Fase II: Desarrollo y Prueba: Interfaz del ROA de AMBAR ............................. 54 3.4.-Iteración 3: Desarrollo del tipo de recurso “Objeto de Aprendizaje (OA) Básico”, del módulo de actividades “Objeto de Aprendizaje (OA) Estandarizado” y del bloque “ROA de AMBAR” en MOODLE. .......................................................................................... 60 3.4.1.-Fase I: Modelado de la iteración: ...................................................................... 60 3.4.1.1.-Refinamiento del Diagrama de Casos de Uso ............................................ 60 3.4.1.2.- Modelado de las Actividades.................................................................... 64 3.4.2.-Fase II: Desarrollo y Prueba: Interfaz del tipo de recurso “Objeto de Aprendizaje (OA) Básico”, del módulo de actividades “Objeto de Aprendizaje (OA) Estandarizado” y del bloque “ROA de AMBAR” de MOODLE. ......................................................... 66 3.4.2.1.- Recurso “Objeto de Aprendizaje (OA) Básico” ........................................ 67 3.4.2.2.- Actividad “Objeto de Aprendizaje (OA) Estandarizado” .......................... 69 3.4.2.3.- Bloque “ROA de AMBAR” en MOODLE ............................................... 71 CAPÍTULO IV ................................................................................................................. 73 ANÁLISIS DE RESULTADOS ....................................................................................... 73 4.1.- Descripción de la interfaz del ROA de AMBAR ................................................... 73 4.2.- Descripción de la interfaz del tipo de recurso “Objeto de Aprendizaje (OA) Básico”, del módulo de actividades “Objeto de Aprendizaje (OA) Estandarizado” y del bloque “ROA de AMBAR”, de MOODLE ............................................................................... 80 CONCLUSIONES ........................................................................................................... 87 RECOMENDACIONES .................................................................................................. 89 REFERENCIAS ............................................................................................................... 90 vii ANEXOS ......................................................................................................................... 95 Anexo A: Representación gráfica de las iteraciones y fases del proyecto de acuerdo al Modelado Ágil (MA) .................................................................................................... 96 Anexo B: Metodología para la elicitación de Requisitos de Sistemas de Software ......... 97 Anexo C: Requerimientos Funcionales y No Funcionales del Trabajo Especial de Grado…………………………………………………………………………………...103 Anexo D: Descripción de los Roles de Usuario de MOODLE ..................................... 109 Anexo E: Diseño de los servicios disponibles en la Capa de Servicios Web para el Repositorio de Metadata, ROA y el Repositorio de Usuarios de AMBAR ................... 110 Anexo F: Detalle de los Requerimientos Funcionales asociados a la Iteración 2 del proyecto ...................................................................................................................... 114 Anexo G: Códigos asociados a la construcción del tipo de recurso “Objeto de Aprendizaje (OA) Básico” en MOODLE .................................................................... 119 Anexo H: Códigos asociados a la construcción del módulo de actividades “Objeto de Aprendizaje (OA) Estandarizado” en MOODLE ......................................................... 122 Anexo I: Código asociado a la construcción del bloque “ROA de AMBAR” en MOODLE ................................................................................................................... 124 viii ÍNDICE DE FIGURAS Figura 1: Ciclo de Vida del Modelado Ágil (MA) (Ambler, 2002) ................................... 13 Figura 2: Modelado Ágil (MA) a través del ciclo de desarrollo (Ambler, 2002). .............. 13 Figura 3: Modelado de las iteraciones: proceso de gestión de cambios de requerimientos. (Ambler, 2002) ................................................................................................................. 15 Figura 4: Modelo Conceptual del ROA de AMBAR (Quintero, 2009) ............................. 25 Figura 5: Ciclos de desarrollo de los Servicios Web del ROA de AMBAR ...................... 26 Figura 6: Modelo Conceptual del Repositorio de Metadata de AMBAR (Alegría y Nieves, 2008) ................................................................................................................... 27 Figura 7: Modelo Conceptual del ROA de AMBAR modificado (Quintero, 2009) .......... 29 Figura 8: Pila de Requerimientos de la Integración ROA de AMBAR - MOODLE ......... 41 Figura 9: Diagrama de Casos de Uso de la vista general de los usuarios de la Integración ROA de AMBAR – MOODLE ......................................................................................... 42 Figura 10: Diagrama de Casos de Uso - Usuario “Administrador del curso” con la funcionalidad “Administrar OA”. ..................................................................................... 43 Figura 11: Particularización de la funcionalidad “Almacenar OA desde el ROA de AMBAR”. ........................................................................................................................ 43 Figura 12: Diagrama de Casos de Uso - Usuario “Administrador del curso” con la funcionalidad “Gestionar OA”. ......................................................................................... 43 Figura 13: Diagrama de Casos de Uso – Usuarios “Administrador del Curso” y “Usuario del curso” con la funcionalidad “Visualizar OA”. ............................................................. 44 Figura 14: Modelo Conceptual actual del ROA de AMBAR ............................................ 46 Figura 15: Modelo Conceptual actual del Repositorio de Metadata de AMBAR .............. 47 Figura 16: Modelo Conceptual del Repositorio de Usuarios de AMBAR ......................... 48 ix Figura 17: Diagrama de Casos de Uso – Almacenar OA en el ROA de AMBAR. ............ 50 Figura 18: Diagrama de Casos de Uso – Eliminar OA del ROA de AMBAR. .................. 50 Figura 19: Diagrama de Casos de Uso – Modificar metadata del OA en el ROA de AMBAR ........................................................................................................................... 51 Figura 20: Diagrama de Actividades: Administrador del Curso en MOODLE – Buscar OA en el ROA de AMBAR ..................................................................................................... 52 Figura 21: Diagrama de Actividades: Administrador del Curso en MOODLE – Gestionar OA en el ROA de AMBAR .............................................................................................. 53 Figura 22: Diagrama de Secuencia del ROA de AMBAR para Buscar OA – Búsqueda Básica. ............................................................................................................................. 55 Figura 23: Diagrama de Secuencia del ROA de AMBAR para Buscar OA – Búsqueda Avanzada. ........................................................................................................................ 56 Figura 24: Diagrama de Secuencia del ROA de AMBAR para Almacenar OA. ............... 57 Figura 25: Diagrama de Secuencia del ROA de AMBAR para Modificar OA ................. 58 Figura 26: Diagrama de Secuencia del ROA de AMBAR para Eliminar OA ................... 59 Figura 27: Diagrama de Casos de Uso - Agregar OA en el curso desde el ROA de AMBAR. .......................................................................................................................... 61 Figura 28: Diagrama de Casos de Uso - Ir al ROA de AMBAR ....................................... 62 Figura 29: Diagrama de Casos de Uso - Editar información del OA en el curso. .............. 63 Figura 30: Diagrama de Casos de Uso - Eliminar OA del Curso. ..................................... 63 Figura 31: Diagrama de Actividades: Administrador del Curso en MOODLE – Agregar OA al Curso ..................................................................................................................... 64 Figura 32: Diagrama de Actividades: Administrador del Curso en MOODLE – OA del Curso................................................................................................................................ 65 Figura 33: Diagrama de Actividades: Usuario del Curso en MOODLE – OA del Curso .. 65 x Figura 34: Estructura de directorios de MOODLE ........................................................... 67 Figura 35: Estructura de directorios de la carpeta oaBasico en MOODLE. ...................... 68 Figura 36: Estructura de directorios de la carpeta OA en MOODLE ................................ 70 Figura 37: Estructura de directorios de la carpeta roa_ambar en MOODLE. ................... 72 Figura 38: Banner de la aplicación del ROA de AMBAR ................................................ 73 Figura 39: Búsqueda Básica ............................................................................................ 74 Figura 40: Búsqueda Avanzada. ...................................................................................... 74 Figura 41: Búsqueda Avanzada (Cont.). .......................................................................... 75 Figura 42: Listado de Resultados para las búsquedas. ...................................................... 76 Figura 43: Almacenar OA – Paso 1. ................................................................................ 77 Figura 44: Almacenar OA – Paso 2. ................................................................................ 77 Figura 45: Almacenar OA – Paso 3. ................................................................................ 78 Figura 46: Almacenar OA – Paso 3 (Cont.). .................................................................... 78 Figura 47: Almacenar OA - Usuario No Registrado......................................................... 79 Figura 48: Registro de Usuario. ....................................................................................... 79 Figura 49: Listado de Recursos y Listados de Actividades de MOODLE......................... 81 Figura 50: Cabecera general del recurso “Objeto de Aprendizaje (OA) Básico” de MOODLE. ....................................................................................................................... 81 Figura 51: Cabeceras Enlazar un Objeto de Aprendizaje (OA) Básico, Ventana, Parámetros y Ajustes comunes del módulo; y botones de acción del Recurso “Objeto de Aprendizaje (OA) Básico” de MOODLE. ......................................................................... 82 Figura 52: Ejemplo de un OA básico en un curso de MOODLE, junto con su logo distintivo. ......................................................................................................................... 82 Figura 53: Formulario del módulo de actividades “Objeto de Aprendizaje (OA) Estandarizado” de MOODLE. .......................................................................................... 84 xi Figura 54: Opciones de edición de un OA en MOODLE ................................................. 85 Figura 55: Bloque “ROA de AMBAR” en MOODLE. .................................................... 85 Figura 56: Visibilidad del bloque “ROA de AMBAR” en MOODLE de acuerdo al rol de usuario. ............................................................................................................................ 86 Figura B.1: Tareas de elicitación de requisitos ................................................................. 98 Figura B.2: Plantilla para requisitos funcionales (Casos de Uso) ................................... 100 Figura B.3: Plantilla para requisitos no funcionales ....................................................... 102 Figura E.1: Servicios Web del Repositorio de Metadata de AMBAR. ............................ 110 Figura E.2: Servicios Web del Repositorio de Metadata de AMBAR. (Cont.) ............... 111 Figura E.3: Servicios Web del Repositorio de Metadata de AMBAR. (Cont2.) .............. 112 Figura E.4: Servicios Web del ROA de AMBAR. ......................................................... 113 Figura E.5: Servicios Web del Repositorio de Usuarios de AMBAR. ............................ 113 Figura F.1: Diagrama de Casos de Uso – Ingresar datos del propietario del OA............. 114 Figura F.2: Diagrama de Casos de Uso – Ingresar Metadata. ........................................ 114 Figura F.3: Diagrama de Casos de Uso – Metadata General .......................................... 115 Figura F.4: Diagrama de Casos de Uso – Metadata Ciclo de Vida ................................ 115 Figura F.5: Diagrama de Casos de Uso – Meta - Metadata ............................................ 116 Figura F.6: Diagrama de Casos de Uso – Metadata Técnica .......................................... 116 Figura F.7: Diagrama de Casos de Uso – Metadata Educacional ................................... 117 Figura F.8: Diagrama de Casos de Uso – Metadata Autor ............................................. 118 Figura F.9: Diagrama de Casos de Uso – Metadata Relación ......................................... 118 Figura F.10: Diagrama de Casos de Uso – Metadata Anotaciones ................................. 118 Figura F.11: Diagrama de Casos de Uso – Metadata Clasificaciones ............................ 118 Figura G.1: Porción del código de la función display() de resource.class.php. .............. 119 xii Figura G.2: Porción del código de la función setup_elements() de resource.class.php. .. 120 Figura G.3: Validación del tipo de recurso para su posterior identificación. Función resource_get_coursemodule_info() del archivo lib.php. .................................................. 121 Figura H.1: Código del archivo lang/oa.php del módulo de actividades Objeto de Aprendizaje (OA) Estandarizado de MOODLE. ............................................................. 122 Figura H.2: Código del archivo mod_form.php del módulo de actividades Objeto de Aprendizaje (OA) Estandarizado de MOODLE. ............................................................. 122 Figura H.3: Porción de código del archivo mod_form.php del módulo SCORM de MOODLE. ..................................................................................................................... 123 Figura I: Porción de código de la función get_content() del archivo block_ambar_roa.php ....................................................................................................................................... 124 xiii ÍNDICE DE TABLAS Tabla 1: Objetivos y principios del Modelado Ágil (MA) (Ambler, 2002) ....................... 12 Tabla 2: Métodos y Servicios del Repositorio de Metadata de AMBAR................... 26 (Alegría y Nieves, 2008).................................................................................................. 26 Tabla 3: Algunos módulos de MOODLE y sus aspectos relevantes. ................................ 37 Tabla 4: Ventajas y Desventajas de usar Moodle ............................................................. 38 Tabla A: Iteraciones y Fases del proyecto ........................................................................ 96 Tabla C.1: Requerimiento Funcional 1 - Agregar OA en el curso desde el ROA de AMBAR ......................................................................................................................... 103 Tabla C.2: Requerimiento Funcional 2 - Abrir OA en el curso ....................................... 104 Tabla C.3: Requerimiento Funcional 3 – Editar información del OA en el curso............ 104 Tabla C.4: Requerimiento Funcional 4 – Eliminar OA del curso ................................... 105 Tabla C.5: Requerimiento Funcional 5 – Ir al ROA de AMBAR ................................... 105 Tabla C.6: Requerimiento Funcional 6 – Almacenar OA en el ROA de AMBAR .......... 106 Tabla C.7: Requerimiento Funcional 7 – Modificar metadata del OA en el ROA de AMBAR ......................................................................................................................... 107 Tabla C.8: Requerimiento Funcional 8 – Eliminar OA del ROA de AMBAR ................ 108 Tabla C.9: Requerimientos No Funcionales ................................................................... 108 Tabla D: Roles de Usuario de MOODLE ....................................................................... 109 xiv TABLA DE ABREVIATURAS UTILIZADAS ADL Advanced Distributed Learning (Aprendizaje Avanzado y Distribuido) MA Modelado Ágil AMBAR Ambientes de Enseñanza-Aprendizaje Constructivistas basado en Objetos de Aprendizaje MERLOT Multimedia Educational Resource for Learning and Online Teaching CAREO Campus Alberta Repository of Educational Objects MOODLE Modular Object-Oriented Dynamic Learning Environment (Entorno de Aprendizaje Dinámico Orientado a Objetos y Modular) CLOE Co-operative Learning Object Exchange MVC Modelo Vista Controlador DAO Data Access Object (Datos de Acceso a Objetos) NCLB No Child Left Behind DB4O Data Base For Object OA Objeto de Aprendizaje ESB Enterprise Services Bus (Bus de Integración Empresarial) PHP Hipertext Preprocessor (Lenguaje de Procesamiento de Hipertexto) GIFT Graphics Interchange Format (Formato Gráfico de Intercambio) ROA Repositorio de Objetos de Aprendizaje GLP General Public Licence (Licencia Pública General) RSS Really Simple Syndication HTML HyperText Markup Language (Lenguaje de Marcado de Hipertexto) SCORM Sharable Content Object Reference Model (Modelo de Referencia de Objetos de Contenido Compartible) IMAP Internet Message Access Protocol (Protocolo de Red de Acceso a Mensajes Electrónicos) SMBDOO Sistema Manejador de Base de Datos Orientada a Objetos IMS-LD IMS Learning Design (Diseño de Aprendizaje IMS) SMDB Sistema Manejador de Base de Datos JSP Java Server Pages SOA Arquitectura Orientada a Servicio LACLO Latin American Community of Learning Objects (Comunidad Latinoamericana de Objetos de Aprendizaje) SOAP Simple Object Access Protocol (Protocolo de Acceso Objetos Simples+B7) LAMS Learning Activity Management System (Sistema de Control de Actividades de Aprendizaje) TIC Tecnología de la Información y Comunicación LDAP Lightweight Directory Access Protocol (Protocolo Ligero de Acceso a Directorios) UP Unified Process (Proceso Unificado) LMS Learning Management System (Sistema de Gestión de Aprendizaje) WSDL Web Service Description Language (Lenguaje de Descripción de Servicios Web) LOM Learning Object Metadata (Metadatos de Objetos de Aprendizaje) XML eXtensible Markup Language (Lenguaje de Marcado Extensible) 1 INTRODUCCIÓN En la actualidad, la modalidad de formación e-Learning o Aprendizaje Electrónico se puede considerar como el concepto que involucra cualquier actividad educativa basada en medios electrónicos y la entrega de contenidos digitales por diferentes vías. Formalmente es la “capacitación no presencial que, a través de plataformas tecnológicas, posibilita y flexibiliza el acceso y el tiempo en el proceso de enseñanza-aprendizaje, adecuándolos a las habilidades, necesidades y disponibilidades de cada discente, además de garantizar ambientes de aprendizaje colaborativo mediante el uso de herramientas de comunicación síncrona y asíncrona, potenciando en suma el proceso de gestión basado en competencias” (García, 2009, p.2). Uno de los aspectos más relevantes de esta modalidad de aprendizaje, es la utilización de recursos digitales como Software Educativos, Objetos de Aprendizaje (OA), entre otros; a través del uso de Sistemas de Gestión de Aprendizaje (LMS), como por ejemplo MOODLE (Modular Object-Oriented Dynamic Learning Environment). Específicamente los OA, pueden ser almacenados en repositorios, los cuales tienen como función principal resguardarlos, hacerlos disponibles para diversos usos y compartirlos con otras aplicaciones, facilitando con esto el flujo de contenidos y la expansión de servicios. Uno de estos repositorios es el Repositorio de Objetos de Aprendizaje (ROA) de AMBAR, el cual ha sido desarrollado como parte del proyecto de investigación AMBAR de la Escuela de Computación de la Facultad de Ciencias de la Universidad Central de Venezuela. Con base en la rápida introducción del Aprendizaje Electrónico en todos los ámbitos del quehacer mundial, es importante mantener la mayor interconexión entre repositorios de recursos digitales, especialmente los ROA; y los sistemas de gestión de los mismos, para facilitarle al docente o a cualquier usuario en general, la consulta, administración y reutilización de tales elementos. Es por ello, que el objetivo general del presente trabajo es integrar el ROA de AMBAR con la plataforma MOODLE, a través de la Capa de Servicios Web. 2 La siguiente investigación consta de cuatro capítulos, denominados El Problema de Investigación, Marco Conceptual, Marco Metodológico y Análisis de Resultados. El primer capítulo, está basado en los aspectos: planteamiento del problema, justificación, objetivo general y específicos, alcance, método de desarrollo de software, entre otros. En el segundo capítulo, se presentan aspectos relevantes del sistema AMBAR, con el propósito de centrar posteriormente el estudio, en su ROA. De este repositorio se destacan sus características, funciones, implementación y su modelo conceptual. Además, se describen aspectos relevantes de la plataforma MOODLE, tales como: arquitectura, características, actividades y recursos, tipos de cursos, módulos, entre otros. En el tercer capítulo, se explican cada una de las iteraciones realizadas para dar cumplimiento al objetivo general de este trabajo, según el método de desarrollo de software Modelado Ágil (MA). Por otra parte, en el cuarto capítulo, se describen los resultados obtenidos durante el desarrollo del trabajo. Por último, se presentan, las conclusiones y recomendaciones más importantes para proyectos futuros, las referencias bibliográficas consultadas y algunos anexos. 3 CAPÍTULO I: EL PROBLEMA DE INVESTIGACIÓN En el siguiente capítulo se describe el planteamiento del problema, justificación, el objetivo general y los respectivos objetivos específicos. Además, se plantea el alcance del trabajo, así como los antecedentes al mismo. Posteriormente, se explican las bases legales del trabajo y los aspectos relacionados al método de desarrollo de software empleado. 1.1.-Planteamiento del problema En la Escuela de Computación, Facultad de Ciencias de la Universidad Central de Venezuela se ha desarrollado un proyecto de investigación, conocido como Sistema Generador de Ambientes de Enseñanza-Aprendizaje Constructivistas basado en Objetos de Aprendizaje (AMBAR), el cual ha sido concebido, según López, Miguel y Montaño (2008), como un trabajo con una visión interdisciplinaria, incluyendo un enfoque cognitivo- constructivista del aprendizaje, los conceptos de Objeto de Aprendizaje (OA) y Repositorio de Objetos de Aprendizaje (ROA), los estándares para el desarrollo de ambientes de aprendizaje en línea y la visión de web semántica. Uno de los componentes más importantes de AMBAR, es el ROA, el cual actualmente se encuentra integrado a través de la capa de servicios web con el Repositorio de Metadata, desarrollado para “permitir la organización estructurada de los atributos que describen a los OA, facilitando su búsqueda, recuperación y administración” (Quintero, 2009, p.40). El ROA de AMBAR es capaz de soportar el almacenamiento, consulta, uso y reutilización de diversos artefactos generados, a través de una interfaz sencilla y usable; el manejo de versiones y diferentes niveles de granularidad de los OA, entre otros. Su funcionamiento está determinado por una aplicación de usuario, la cual interactúa con la capa de servicios web, donde existe completa correspondencia entre los servicios de ambos repositorios, permitiendo la comunicación entre los mismos a nivel de los OA y su 4 metadata, lo que facilita la búsqueda, recuperación y modificación de los OA por parte del usuario final y permite establecer una estandarización en el almacenamiento de los mismos. Por otro lado, siguiendo la filosofía constructivista social en el proceso de enseñanza-aprendizaje, se encuentran diversas plataformas de gestión de contenido, entre las cuales una de las más utilizadas y premiadas a nivel internacional de acuerdo al estudio realizado en marzo del 2008 por el Instruccional Tecnology Council (http://www.itcnetwork.org), es el Sistema de Gestión de Aprendizaje (LMS) MOODLE. Según la versión 2007 de la documentación publicada por la Comunidad MOODLE (http://docs.moodle.org/es/Acerca_de_Moodle), es el acrónimo de Modular Object- Oriented Dynamic Learning Environment (Entorno de Aprendizaje Dinámico Orientado a Objetos y Modular). En este sistema se crean diversas comunidades en línea, con la finalidad de permitir una amplia gama de modos de enseñanza, la generación de contenido de aprendizaje y la interacción docente-alumno en un entorno virtual; permitiéndole al docente, entre otras funcionalidades, enlazar un OA como parte de la estructura de su curso, enriqueciendo el contenido e incrementando la interactividad del mismo. Anterior al desarrollo de este trabajo, para poder realizar tal enlace, era necesario almacenar el objeto de forma local a la máquina del docente, para posteriormente cargarlo en la plataforma. Esto resultaba ineficiente y requería la realización de un proceso de búsqueda y descarga de tal recurso desde diversos ROA externos a MOODLE, retrasando y complicando el proceso de construcción de un curso determinado, además que no se podía explotar en su totalidad las funcionalidades de tales repositorios, por no existir una interconexión entre ellos y el resto de las plataformas de aprendizaje. Por otra parte, el hecho de que desde MOODLE el docente sólo pudiera contar con sus propios OA, por no tener acceso a un repositorio determinado, limitaba en gran medida la capacidad de reutilización inherente a la naturaleza de este tipo de recurso digital. En tal sentido, se precisó establecer la conexión del ROA de AMBAR con la plataforma MOODLE, poniendo a disposición de los docentes, el conjunto de OA disponibles en el mismo, de tal forma que éstos puedan ser parte de la estructura de cualquier curso en desarrollo en la plataforma virtual. http://www.itcnetwork.org/ http://docs.moodle.org/es/Acerca_de_Moodle 5 Con base en lo anterior, se planteó como pregunta general de investigación ¿Cómo realizar la integración del Repositorio de Objetos de Aprendizaje de AMBAR con la plataforma MOODLE, con el fin de aprovechar las funcionalidades de ambos sistemas? 1.2.-Justificación Con la aparición de la Tecnología de la Información y Comunicación (TIC), en el proceso de enseñanza y aprendizaje, se hace imprescindible interconectar los diferentes sistemas disponibles en el amplio mundo del Internet, tales como MOODLE y AMBAR, buscando complementar los recursos existentes, obteniendo así la información más completa posible y aumentando las oportunidades de crear recursos mucho más dinámicos e interactivos, que apoyen al mencionado proceso, en base a una educación de calidad. Por ello, es necesario llevar a cabo los proyectos de investigación, en los cuales se establezcan las integraciones entre sistemas afines de un modo eficiente. Esta investigación sentó las bases, en cuanto a la conexión de un ROA con una plataforma de aprendizaje independiente. Esto resultó importante, debido a que MOODLE es una de las plataformas de enseñanza virtual más utilizadas en diversos niveles de la educación formal internacionalmente, por ejemplo según la publicación de Molist (2008), sólo en España para el 2008, tenía registrados más de 25 millones de usuarios y más de 4 mil escuelas, institutos, academias, universidades y empresas. En el contexto nacional, es la plataforma sobre la cual se ha desarrollado el Sistema de Educación a Distancia de la Universidad Central de Venezuela (SEDUCV), el cual alberga los campos virtuales de las diversas facultades de tan reconocida universidad. Anteriormente la plataforma MOODLE, sólo podía manejar OA en formato SCORM (Sharable Content Object Reference Model), así que al incorporarle nuevas funcionalidades, en este caso, la posibilidad de asociar un OA recuperado de AMBAR, el cual se puede encontrar en otro formato, se abrió una nueva puerta para el enriquecimiento de la educación a nivel mundial, en base a esos recursos desarrollados a través de las nuevas TIC. 6 Además, el hecho de que los docentes puedan contar no sólo con sus propios OA sino también con otros, almacenados en diversos ROA y puedan compartir tales objetos, almacenándolos en cualquier repositorio, todo esto desde el mismo entorno de MOODLE, fomenta la reutilización de los OA dentro de una comunidad global y convierte a ésta plataforma en una herramienta de generación de contenido de aprendizaje mucho más poderosa y enriquecida tecnológicamente. 1.3.-Objetivo General Integrar el Repositorio de Objetos de Aprendizaje de AMBAR con la plataforma MOODLE a través de la Capa de Servicios Web. 1.4.- Objetivos Específicos Definir las funcionalidades del ROA de AMBAR y de la plataforma MOODLE necesarios para la integración. Determinar los formatos de Objetos de Aprendizaje con los que se trabajarán. Analizar los roles de usuarios que tendrán acceso al ROA de AMBAR desde la plataforma MOODLE. Migrar el ROA y el Repositorio de Metadata de AMBAR de un Sistema Manejador de Base de Datos Orientado a Objetos a uno Relacional. Implementar el Repositorio de Usuarios de AMBAR. Desarrollar las interfaces de conexión entre el ROA de AMBAR y MOODLE. 1.5.-Alcance El alcance del presente trabajo, viene dado por una parte, por la implementación en la plataforma MOODLE, de un nuevo tipo de recurso, llamado “Objeto de Aprendizaje (OA) Básico” y de un nuevo módulo de actividades, denominado “Objeto de Aprendizaje (OA) Estandarizado”, mediante los cuales se permite la conexión con el ROA de AMBAR, 7 el acceso a los OA almacenados en dicha base de datos y la incorporación de un objeto recuperado del mismo, en la estructura de un curso particular; y por la otra, por la construcción de un bloque en la misma plataforma, llamado “ROA de AMBAR”, para la gestión de los objetos almacenados en el mencionado repositorio, incluyendo el almacenamiento, modificación y eliminación de los mismos, desde el entorno de MOODLE. En cuanto a la utilización en MOODLE de los objetos recuperados del ROA de AMBAR, se trabajó con los siguientes formatos de OA: .jpeg, .gif, .pdf, .doc, .ppt, .mp3, .mpeg, .flv, .avi y .zip. La conexión entre la plataforma MOODLE y el ROA de AMBAR se estableció en base a las restricciones propias del rol del usuario en dicha plataforma, en donde sólo aquellos usuarios con privilegios de edición sobre el curso en particular, podrán acceder al repositorio a través del recurso, del módulo o del bloque mencionados anteriormente, con el fin de explorar y exportar los objetos del repositorio al curso donde se encuentre asociado. El acceso de cada usuario de MOODLE, por medio del Bloque “ROA de AMBAR”, al repositorio, se permitió a través de la validación de los datos personales del mismo, contra los registrados en el Repositorio de Usuarios de AMBAR, de esta forma sólo los usuarios que estén debidamente registrados en el ROA podrán almacenar o importar nuevos objetos y eliminar o modificar los objetos de su propiedad. Cabe destacar que la implementación de éste último repositorio, fue parte importante de este trabajo especial de grado y permitirá en un futuro centralizar el control de acceso de usuarios para todas las aplicaciones disponibles en el amplio proyecto AMBAR. Finalmente, para realizar dichas validaciones y posteriormente la completa integración, se llevó a cabo el rediseño del ROA de AMBAR en cuanto a sus interfaces gráficas de usuario y algunas funcionalidades. Además se realizó la migración del ROA y del Repositorio de Metadata de AMBAR, desde el Sistema Manejador de Base de Datos Orientada a Objetos (SMBDOO) Database forObjects (DB4O) a MYSQL, lo que incluyó la modificación de los servicios de la capa de servicios web para adaptarlos a tal migración. Por último se crearon nuevos servicios web, los cuales faciliten algunas tareas tanto para este proyecto como para trabajos futuros. 8 1.6.- Antecedentes Los antecedentes significativos para el presente trabajo, se plantean desde dos perspectivas, a saber: la modificación de un módulo de MOODLE y la integración de los repositorios de AMBAR. En tal sentido, algunos estudios destacables, relacionados con la integración a implementar, fueron los siguientes: Castillo, L., Figueroa M. J. & Morales, L. (2008). Modificación del Módulo SCORM para el Soporte Básico del IMS-Learnig Design (IMS-LD). Universidad de Granada. Barcelona, España. Se analizó e implementó la integración del estándar IMS - LD dentro del sistema gestor de aprendizaje MOODLE a través de la modificación del módulo SCORM. Con dicha modificación se permitió adaptar el contenido de una actividad tipo SCORM/AICC, cuyos objetos de aprendizaje deberán estar etiquetados en base al estándar IEEE/LOM y al perfil de cada alumno matriculado en el curso que utiliza dicha actividad. Di Blasi, L. L. (2010, Mayo). Desarrollo del módulo WebQuest basado en la especificación IMS Learning Design para la creación de cursos en la plataforma Moodle. Universidad Central de Venezuela, Caracas, Venezuela. Se desarrolló un módulo basado en la Estrategia de Aprendizaje WebQuest que además de permitir el desarrollo de cursos en la plataforma MOODLE, se basó en la especificación IMS Learning Design para la generación de Unidades de Aprendizaje a partir de estos cursos, permitiendo su reutilización en diferentes plataformas o sistemas de Enseñanza - Aprendizaje que soporten dicha especificación. Alegría, G. R. A. & Nieves, H. C. (2008, Mayo). Repositorio de Metadata de los Objetos del Sistema Generador de Ambientes de Enseñanza Aprendizaje 9 Constructivistas basados en Objetos de Aprendizaje (AMBAR). Universidad Central de Venezuela, Caracas, Venezuela. Presentó la implementación del Repositorio de Metadata de Objetos de Aprendizaje de AMBAR, en términos de análisis, diseño y construcción del mismo. Por otro lado el repositorio donde se almacena la Metadata, fue diseñado sobre el SMBDOO DB4O, el cual es accedido mediante una capa web basada en servicios. Además se construyó la aplicación de usuario, la cual a través del uso de los servicios web definidos, permite interactuar con el Repositorio de Metadata de AMBAR. Beleño, M. C. M. (2007, Octubre 30). Capa de Servicios de Base de Datos del Sistema Generador de AMBientes de enseñanza- ApRendizaje AMBAR. Universidad Central de Venezuela, Caracas, Venezuela. Consistió en el análisis, diseño e implementación de la Capa de Servicios Web de Base de Datos del Sistema Generador de Ambientes de Enseñanza-Aprendizaje (AMBAR) como implementación de una SOA. El sistema desarrollado proporcionó un espacio para manipular OA, los cuales pueden ser almacenados y recuperados de la base de datos de AMBAR a través del SMBDOO DB4O, basado en una arquitectura MVC (Modelo Vista Controlador) para los servicios web y haciendo uso del patrón DAO (Data Access Object) para el acceso a los datos Quintero, S. J. A. (2009, Abril). Integración del Repositorio de AMBAR con el Repositorio de Metadata a través de la Capa de Servicios. Universidad Central de Venezuela. Caracas, Venezuela. Se estableció el proceso de integración de la base de datos de AMBAR con el Repositorio de Metadata a través de la Capa de Servicios Web asociado sólo a los Objetos de Aprendizaje (OA). Dicha integración proporcionó un espacio para manipular OA que 10 pueden ser almacenados y recuperados de manera eficiente de forma transparente para el usuario final. 1.7.-Bases legales En base a lo presentado por la documentación oficial de la plataforma, en la versión del año 2007 (http://docs.moodle.org/es/Acerca_de_Moodle), se puede decir que el LMS MOODLE, es una marca registrada del Trust MOODLE (http://moodle.com). El paquete de software MOODLE globalmente es Copyright © 1999 y siguientes, bajo la licencia GNU General Public Licence (GPL), lo cual lo hace software libre con la posibilidad de redistribuirlo y/o modificarlo bajo ciertos términos, básicamente esto significa que tiene derechos de autor, con algunas libertades para copiar, usar y modificarlo siempre que se acepte proporcionar el código fuente a otros, no modificar o eliminar la licencia original o los derechos de autor original y aplicar esta misma licencia a cualquier trabajo derivado de él. Como no hay pagos por licencias o límites de crecimiento, una institución puede añadir los servidores MOODLE que necesite. La documentación de MOODLE es Copyright © 2005 y siguientes, de los autores individuales de cada página y se proporciona bajo los mismos términos de la GPL del paquete MOODLE. Martin Dougiamas es el creador, desarrollador principal y director de proyecto de toda la plataforma MOODLE. Por su parte el sistema AMBAR, es un proyecto de investigación de la Universidad Central de Venezuela, en el cual se ha desarrollado una plataforma tecnológica, la cual soporte el almacenamiento, generación, uso y reuso de OA. Su base teórica abarca el modelo de aprendizaje constructivista, como el Aprendizaje Generativo y la Teoría de la Flexibilidad Cognitiva. Según López, Miguel y Montaño (2008), surge de la identificación de problemas en el contexto educativo venezolano, tales como: dificultades para acceder a las TIC, falta de herramientas de software, basadas en OA y en teorías constructivistas y falta de métodos para la creación y reutilización de OA de manera efectiva. http://docs.moodle.org/es/Acerca_de_Moodle http://moodle.com/ 11 1.8.-Método de Desarrollo de Software Los procesos ágiles de desarrollo de software intentan evitar los difíciles caminos de las metodologías tradicionales enfocándose en la gente y en los resultados, una de estas metodologías es el Modelado Ágil (MA), el cual según Ambler (2002) (http://www.agilemodeling.com/) es una metodología basada en la práctica para modelado efectivo de sistemas de software, centrada en la comunicación asertiva de los que intervienen en el proceso de desarrollo de software. Se puede considerar como una colección de prácticas que reflejan los principios y valores compartidos por muchos experimentados desarrolladores de software. La metodología del MA es una colección de prácticas, guiadas por principios y valores. El MA no es un proceso prescriptivo, ni define procedimientos detallados de cómo crear un tipo de modelo dado. En lugar de eso, sugiere prácticas para ser un modelador efectivo, aspecto primordial de las metodologías ágiles en general. A partir de este modelado, se obtiene el código y otros modelos secundarios, es decir, en vez de crear modelos extensivos antes de escribir el código, se crean modelos ágiles, los cuales son usados para explorar y analizar los requerimientos. Algunos de los objetivos y principios del MA, establecidos por Ambler (2002) se pueden apreciar en la tabla 1. La figura 1, representa el ciclo de vida de alto nivel del MA para el lanzamiento de un sistema. En donde, cada caja representa una actividad del desarrollo. En la primera actividad, caja verde, se nota que se incluyen dos sub-actividades principales: Contemplar necesidades iníciales y Contemplar arquitectura inicial. Éstas se realizan durante la iteración 0; las otras actividades: Modelar iteración, Tormenta de modelos y desarrollo/pruebas ocurren potencialmente durante cualquier iteración, incluyendo la iteración 0. La figura 2 es la representación de cómo las actividades del MA se realizan en las diferentes iteraciones del ciclo de vida de desarrollo de software ágil. Es simplemente otra manera de demostrar que un proyecto ágil comienza con algunos modelados y que el mismo se produce en cada iteración de la construcción. Por lo general, durante la primera http://www.agilemodeling.com/ 12 semana del proyecto la meta es identificar el alcance del sistema y de la arquitectura probable para tratarla. Para hacer esto se necesita obtener los requerimientos de alto nivel y modelar la arquitectura de lo necesitado. El objetivo no es escribir especificaciones detalladas, que sean arriesgadas, sino explorar las necesidades y llegar a una estrategia global. Tabla 1: Objetivos y principios del Modelado Ágil (MA) (Ambler, 2002) Objetivos Principios Definir y mostrar cómo poner en práctica una colección de valores, principios y prácticas que conlleven a un modelado ligero efectivo. Explorar la aplicación de técnicas de modelado en proyectos de software, a través de un enfoque ágil. La mayor prioridad es satisfacer al cliente a través de tempranos y continuos entregables. Entregas frecuentes de la aplicación desarrollada, preferiblemente en una escala de tiempo pequeña. El modelado ágil promueve el desarrollo sostenible. Los patrocinadores, desarrolladores y usuarios deben ser capaces de mantener el paso constante indefinidamente. La atención continua a la excelencia y los buenos diseños mejoran la agilidad. Asumir simplicidad (el arte de maximizar cantidad de trabajo no realizado) es esencial. Las mejores arquitecturas, requisitos y diseños emergen de equipos que lo organizan por sí mismos. A intervalos regulares, el equipo refleja sobre cómo ponerse más eficaz, entonces ajusta su conducta de acuerdo con ello. 13 Figura 1: Ciclo de Vida del Modelado Ágil (MA) (Ambler, 2002) Figura 2: Modelado Ágil (MA) a través del ciclo de desarrollo (Ambler, 2002). 14 Para los proyectos cortos, de quizás varias semanas de duración, es posible hacer este trabajo en las primeras horas y para los proyectos largos, en el orden de doce o más meses, se puede decidir invertir dos semanas en este esfuerzo. Se sugiere no invertir más tiempo que el indicado, ya que se corre el riesgo de que se modele algo que contiene demasiados problemas. A continuación se explicará de manera detallada, cada una de las etapas que intervienen en el MA según Ambler (2002): Contemplar necesidades iniciales: Su objetivo es construir un entendimiento común, no es para escribir documentación detallada. Un factor clave del éxito para lograr contemplar las necesidades iniciales, es la participación activa de los interesados. Para la primera versión de un sistema es necesario identificar algunos requerimientos de alto nivel, así como el alcance que ésta versión va a tener y lo que el sistema debe hacer. Para el modelado inicial de los requerimientos es necesario un modelo experto con el cual se estudie cómo los usuarios trabajarán con el sistema, un modelo inicial del dominio en el que se identifique los requerimientos fundamentales de la entidad de negocio y las relaciones; y un modelo inicial de interfaz que explore la interfaz de usuario y la usabilidad. El modelado inicial de la arquitectura: El objetivo del modelado inicial de la arquitectura, es identificar una arquitectura que brinde grandes oportunidades para realizar el desarrollo de la aplicación. Esto permite fijar una dirección hacia la técnica más viable para realizar el proyecto y proporcionar información suficiente para organizar el equipo de trabajo alrededor de la arquitectura, algo que es particularmente importante en relación con los equipos de trabajos grandes o distribuidos. Por el lado de la arquitectura se suelen crear los diagramas de forma libre, aquellos que exploran la infraestructura técnica; y los modelos iniciales del dominio, para explorar las entidades de negocio principales y sus relaciones. En posteriores iteraciones los requerimientos iniciales y la arquitectura inicial tendrán que evolucionar a medida que se definen más, pero por ahora la meta es obtener el modelado de una arquitectura inicial. En versiones posteriores se puede decidir acortar la iteración 0 a varios días, varias horas, o incluso eliminarla por completo, 15 como la situación lo requiera. El secreto es mantener las cosas simples. No es necesario que se modele con mucho detalle, simplemente modelar lo necesario. Al realizar el modelo de casos de uso, por ejemplo se pueden observar los diversos requerimientos de forma clara. Muchos desarrolladores tradicionales de software usan el MA para el modelado inicial, por ser iterativo e incremental. El modelado de las iteraciones. Pensar que se hará en cada iteración: Al comienzo de cada iteración de la construcción del software, el equipo debe planificar los trabajos a desarrollar en la misma. Una de las etapas que a menudo se descuida es el modelado de las actividades, es por ello que el MA ordena los requerimientos de la aplicación por prioridad, en la figura 3 se puede observar, que a lo largo de una iteración el valor de los requerimientos es variable, ya que el de mayor importancia está en la cima de la pila. Para hacer esto con éxito se tiene que calcular con exactitud el tiempo de dedicación para cada requerimiento y a continuación en función de la velocidad de la iteración previa, calcular el tiempo promedio de procesamiento de cada requerimiento. Figura 3: Modelado de las iteraciones: proceso de gestión de cambios de requerimientos. (Ambler, 2002) 16 Model Storming (Tormenta de Modelos): La experiencia de la gran mayoría de las sesiones de modelado es la participación de unas pocas personas, por lo general sólo dos o tres. El equipo de trabajo se reúne alrededor de una herramienta, en la que se modela de forma compartida, identificando los problemas que se tendrán que resolver. Estos modelos de ideas son improvisados, de igual forma que cuando ocurre una tormenta de ideas. Es poco común que el modelo de ideas dure más de treinta minutos. Desarrollo/Pruebas: A continuación se implementa el desarrollo del código, el cual se puede realizar durante varias horas e incluso varios días a la vez. Aquí es donde el equipo de trabajo se consume la mayor parte del tiempo. En el MA los equipos de trabajo tratan de realizar la mayor parte de su modelación de manera detallada, junto al cliente o con pruebas de desarrollo. Estas Pruebas del Cliente, también llamadas Pruebas de Aceptación, validan el código de la aplicación y las especificaciones del mismo y son realizadas para reforzar los requerimientos detallados y desarrollar un mejor diseño. 17 CAPÍTULO II: MARCO CONCEPTUAL En el presente capítulo se presentan los aspectos más relevantes del Repositorio de Objetos de Aprendizaje (ROA) del Sistema Generador de Ambientes de Enseñanza- Aprendizaje Constructivista basado en Objetos de Aprendizaje (AMBAR) y en base a la importancia de los sistemas de e-Learning, se toma como caso de estudio, la plataforma MOODLE, del cual se describirá su arquitectura, características generales, principales módulos, entre otros. En tal sentido, es importante recordar ciertos conceptos asociados a la investigación, comenzando por Objetos de Aprendizaje (OA), en primer lugar. Esta definición es tan variada como las mismas fuentes de información, sin embargo vale destacar una aproximación a la misma. García (2005), se refiere a los OA en general, como “archivos digitales o elementos con cierto nivel de interactividad e independencia, los cuales podrían utilizarse o ensamblarse, sin necesidad de una modificación previa, en diferentes situaciones de enseñanza-aprendizaje, sean éstas similares o desiguales entre sí y que deberían disponer de las indicaciones suficientes para su referencia e identificación” (p.1). En segundo lugar, partiendo de lo anterior, tales indicaciones disponibles junto a los OA, las cuales son suficientes para la referencia e identificación del mismo, son conocidas como Metadatos y formalmente “son un conjunto de atributos o elementos necesarios para describir al objeto, a través de ellos se tiene un primer acercamiento con el mismo” (Hernández, 2009, p.16). Gracias a lo evidenciado durante la presente investigación, se puede afirmar que si un recurso no tiene un conjunto de metadatos asociados, no puede considerarse como un OA, lo que limita considerablemente sus características de uso, reutilización, actualización, acceso, disponibilidad, entre otras. Al considerar la disponibilidad inherente a un OA, surge el tercer y último concepto a destacar, el Repositorio de Objetos de Aprendizaje (ROA), el cual es “la infraestructura clave para el desarrollo, almacenamiento, administración, localización y recuperación de todo tipo de contenido digital” (ADL, 2002) citado por Quintero (2009, p.19). En el estudio 18 de los ROA, se han identificado dos tipos principales, los cuales se denotan según la concentración de los recursos: en locales o distribuidos; y según la distribución de los metadatos: en aplicaciones independientes o módulos adicionales a otros sistemas. En general, un ROA tiene las siguientes funciones básicas: buscar o localizar un OA apropiado, incluyendo su despliegue; pedir un OA previamente localizado; recuperar un OA pedido; enviar o entregar a un repositorio un OA para ser almacenado; almacenar dentro de un registro de datos un objeto, con un identificador único, tal que le permita ser localizado; colectar u obtener metadatos de los objetos de otros repositorios por búsquedas federadas y publicar o proveer metadatos a otros repositorios. Actualmente algunos de los portales de repositorios más utilizados, mencionados por Quintero (2009) son: MERLOT (Multimedia Educational Resource for Learning and Online Teaching), CAREO (Campus Alberta Repository of Educational Objects), CLOE (Co-operative Learning Object Exchange). En el ámbito latinoamericano cabe destacar LA FLOR, acrónimo de Repositorio Latinoamericano de Objetos de Aprendizaje (Latin American Federation of Learning Object Repositories), proyecto de investigación propuesto por la Comunidad Latinoamericana de Objetos de Aprendizaje (LACLO)(http://www.laclo.org/ index.php?option=com_content&task=view&id=26&Itemid=53), cuya importancia, es promover “el acceso a través de estándares internacionales a repositorios institucionales existentes en la región” (párr. 1). A continuación, con propósitos prácticos para el presente trabajo, se describirán los aspectos relacionados con el ROA de AMBAR, como uno de los sistemas clave para el desarrollo de la investigación. 2.1.- Proyecto AMBAR López, Miguel, Montaño, Pernalete (2007) establecen que AMBAR, siglas del sistema generador de AMBbientes constructivistas de enseñanza-ApRendizaje, es un proyecto de investigación desarrollado en la Escuela de Computación, Facultad de http://www.laclo.org/%20index.php?option=com_content&task=view&id=26&Itemid=53 http://www.laclo.org/%20index.php?option=com_content&task=view&id=26&Itemid=53 19 Ciencias, Universidad Central de Venezuela, el cual tiene como objetivo general crear un sistema generador de ambientes constructivistas de enseñanza-aprendizaje, es decir, un sistema capaz de servir de herramienta de ayuda a profesores, estudiantes y demás usuarios, para la enseñanza y/o aprendizaje de cualquier tema académico, a fin de asegurar la interoperabilidad, reutilización, gestionabilidad, accesibilidad, durabilidad y escalabilidad de los mismos basándose en una arquitectura de software flexible fundamentada en repositorios. Las principales características de AMBAR presentadas por Quintero (2009), son: Permite a los profesores y aprendices elaborar y participar en procesos de enseñanza aprendizaje basados en OA reusables. AMBAR están formado por tres ambientes: “un ambiente para facilitarle al docente el diseño instruccional, un ambiente para la colaboración entre estudiantes y docentes para la generación de conocimiento basado en un modelo pedagógico y un módulo para el mantenimiento del repositorio de OA y todos los demás elementos asociados al ambiente” (p.31). Permite almacenar, consultar, usar y reutilizar los OA producidos o usados en los ambientes de aprendizaje, y que estos OA puedan ser soportados por diferentes plataformas y por diferentes herramientas. A nivel genérico, los tipos de OA manejados en AMBAR son: OA Fundamentales, OA Generativo-Instruccionales y Estrategias. Soporta actividades de aprendizaje generativo, es decir, proveer la capacidad de que los aprendices puedan crear artefactos con diferentes niveles de granularidad y convertirlos en OA. Hacer más flexible el contenido de los objetos y soportar las actividades de un ambiente de aprendizaje constructivista, es decir, proveer la capacidad de considerar diferentes OA como los fundamentales, los combinados y los frameworks. AMBAR está desarrollado bajo dos bases conceptuales bien definidas, las cuales según López, Miguel, Montaño y Pernalete (2007) son la Arquitectura Orientada a Servicio (SOA) y el Bus de Integración Empresarial (ESB). 20 Por un parte, SOA “es un concepto de arquitectura de software, la cual promueve el empleo coordinado de un conjunto de servicios reutilizables débilmente acoplados entre sí para dar soporte a los requerimientos de software del usuario. Las bases de SOA provienen de las experiencias en la utilización de tecnologías basadas en objetos distribuidos” (López, Miguel, Montaño y Pernalete, 2007, p.8). Entre sus principales características se pueden especificar: Definición de servicios mediante interfaces, las cuales abstraen al cliente de los detalles de implementación del servicio. Los servicios están generalmente implementados usando la misma infraestructura de comunicaciones dando soporte al resto de servicios cliente/servidor. Reutilización de servicios en un ambiente SOA, los nodos de la red hacen disponibles sus recursos a otros participantes en la red como servicios independientes a los que tienen acceso de un modo estandarizado. Seguidamente, el ESB según López, Miguel, Montaño y Pernalete (2007), es un producto de software, el cual provee de la infraestructura de comunicaciones subyacente a otros componentes de software. A pesar de que existen muchas opciones tecnológicas amoldadas a esta descripción, para que un producto se califique como ESB debe emplear el Lenguaje de Marcado Extensible (XML) como formato de intercambio de mensajes. Un ESB provee la infraestructura básica, a la que se le pueden incorporar componentes en forma de módulos. Con estos dos conceptos se logró proponer una arquitectura para AMBAR basada en servicios web, establecida por las autoras anteriores, en el año 2007, en la cual se utiliza una aplicación SOA. En tal sentido, un servicio “debe ser una aplicación completamente autónoma e independiente, ésta establece una interfaz de llamada, basada en mensajes, los cuales pueden ser accedidos desde la red. Los servicios incluyen tanto lógica de negocio como manejo de estados, relevantes a la solución del problema para el cual fueron diseñados” (López, Miguel, Montaño y Pernalete, 2007, p. 9). 21 Buscando que los servicios de AMBAR, pudieran ser accedidos desde la misma aplicación o desde otros sistemas, la definición de los mismos es independiente de la tecnología específica con la que se implementaron. Para ello, se usó el Lenguaje de Descripción de Servicios Web (WSDL) basado en XML sobre el esquema que describe el servicio. Utilizando tecnologías como Java Server Pages (JSP) y Java Servlets, el Kit de desarrollo Java (J2ee SDK), el lenguaje de programación JavaScript, un servidor Apache Tomcat, la implementación de software libre de SOAP Apache Axis y el SMBDOO DB4O, entre otros; AMBAR se implementó “como un Framework modular, diseñado en capas. Entre las capas, se incorpora un middleware ESB, permitiendo la interoperabilidad, orientado al servicio, basado en componentes, opción de múltiples enlaces, comportamientos, modelos de datos y estructura plug and play” (López, Miguel, Montaño y Pernalete, 2007, p. 10). 2.1.1.-Repositorio de Objetos de Aprendizaje de AMBAR Tal como se vio anteriormente, para hacer mejor uso de los OA, éstos se deben encontrar almacenados en repositorios destinados para tal fin. Es por esto que surge el Repositorio de Objetos de Aprendizaje (ROA) de AMBAR, el cual “es considerado uno de los componentes fundamentales del sistema, debido a que es capaz de almacenar y gestionar de una manera eficiente tanto los OA, como los ambientes de aprendizaje a definir y utilizar” (Beleño, Hernández, López, Miguel, Montaño y Pernalete, 2008, p. 3). Como resultado del trabajo presentado por Quintero (2009), actualmente el ROA de AMBAR se encuentra integrado con otro de los componentes del mismo sistema: el Repositorio de Metadata, el cual “permite la organización estructurada de los atributos que describen a los OA, facilitando su búsqueda, recuperación y administración” (p. 40). Esta integración estuvo centrada específicamente en la sección de OA contenida en la Capa de Servicios del ROA de AMBAR, adicionalmente se reestructuró la Capa de Presentación del sistema en general. Es importante destacar que la metadata del ROA está basada en el 22 estándar LOM (Learning Object Metadata), el cual, según la comunidad del Advanced Distributed Learning (ADL) (http://www.adlnet.gov), es un estándar que tiene como objetivo principal guiar en el marcado de recursos educativos para potenciar su búsqueda, evaluación, obtención y utilización, es decir, establece un modelo de datos utilizado por SCORM, usualmente codificado en XML, que se utiliza para describir un OA y así facilita la reutilización de OA y su interacción. 2.1.2.- Características y Funcionalidades del Repositorio de Objetos de Aprendizaje de AMBAR Haciendo énfasis en el ROA de AMBAR, de acuerdo con lo presentado por Beleño, López, Hernández et al. (2008), entre sus características más relevantes se tienen: Es compatible con el estándar IMS-LD y el modelo SCORM, en cuanto a su metadata. Puede ser accedido por diversas aplicaciones por medio de los servicios web desarrollados. Está basado en una arquitectura SOA. Usa el SMBDOO DB4O para almacenar los objetos y otros recursos. Los OA se representan por medio del estándar SCORM Posee una interfaz web, la cual hace uso de los servicios web definidos. De igual forma, Beleño, López, Hernández et al (2008) presentan las principales funcionalidades del repositorio, las cuales son: Soporte (almacenamiento, consulta, uso y reutilización) de OA producidos o usados en los Ambientes de Aprendizaje de AMBAR. Soporte de múltiples niveles de granularidad de los OA para permitir su reutilización, flexibilidad, accesibilidad y adaptabilidad. http://www.adlnet.gov/ 23 Soporte de frameworks como OA, los cuales proveen estructura para experiencias instruccionales e incorporen sistemas de enlaces para facilitar el llenado de contenido. Manejar múltiples versiones de OA. Implementar un recolector de basura para el borrado del repositorio de contribuciones eliminadas o desactualizadas. Etiquetamiento de OA de acuerdo a los estándares para permitir el descubrimiento, recuperación y manipulación de los OA almacenados. El desarrollo del sistema AMBAR en general, está basado en un proceso iterativo e incremental, en el cual se van obteniendo prototipos funcionales en base a un subconjunto de requerimientos. En cuanto al ROA, los logros de la primera iteración de su implementación, presentados por Adriani, Díaz, López, Miguel y Montaño (2006), así como Quintero (2009), se pueden resumir en cinco (5) grandes aspectos: El ROA, se desarrolló a través de la Capa de Servicios Web como implementación de una SOA. Para la implementación de los Servicios Web se usó AXIS, una implementación opensource de SOAP, la cual proporciona un entorno de ejecución para servicios web implementados en Java. Se desarrolló el modelo conceptual del ROA sobre el SMBDOO DB4O, basado en una arquitectura MVC (Modelo Vista Controlador) para los servicios y haciendo uso del patrón DAO (Data Access Object) para el acceso a los datos. La representación de este modelo, según Quintero (2009), se puede observar en la figura 4. Se usó el Proceso Unificado (UP), con tres ciclos, como Método de Desarrollo de Software. Cada ciclo de desarrollo consistió en la aplicación de las fases: Inicio, Elaboración, Construcción y Transición; pero de una manera ágil. Los servicios web implementados en cada ciclo y los recursos sobre los cuales se desarrollaron, 24 siguiendo el modelo conceptual anterior, según Beleño, Hernández, López et al. (2008), se pueden observar en la figura 5. Se desarrolló una aplicación, la cual provee la interfaz para el usuario final y hace uso de los servicios web implementados. En cuanto al Repositorio de Metadata, según lo desarrollado por Alegría y Nieves (2008), se implementó en siete fases, las cuales se pueden resumir de la siguiente forma: Levantamiento de los requerimientos. Diseño del esquema de la metadata basado en el estándar LOM Implementación del diseño conceptual del repositorio en el SMBDOO DB4O. El modelo conceptual desarrollado, se puede observar en la figura 6. Al respecto es importante destacar que como la metadata está basada en el estándar LOM, en el modelo conceptual se puede observar la clase Metadata, la cual a su vez está relacionada con otras nueve (9) clases, representativas de las categorías de LOM. Diseño y desarrollo de métodos para manipular la metadata a través de los servicios web. La descripción de tales métodos y servicios se puede apreciar en la tabla 2. Diseño e implementación de la interfaz de usuario. Revisión y pruebas finales sobre todo el sistema. 25 Figura 4: Modelo Conceptual del ROA de AMBAR (Quintero, 2009) 26 Figura 5: Ciclos de desarrollo de los Servicios Web del ROA de AMBAR Tabla 2: Métodos y Servicios del Repositorio de Metadata de AMBAR (Alegría y Nieves, 2008) Métodos para interactuar con la Metadata y su descripción Servicios del Repositorio Agregar Metadata Recibe la metadata desde la aplicación web, la convierte en un objeto de estructura LOM y la almacena en el repositorio. agregarMD Buscar Metadata Recupera toda la metadata asociada a un OA basado en tres criterios: por título, por contexto y por propósito. busquedaBasica busquedaPorOID busquedaAvanzada Modificar Metadata Consiste en modificar elementos de la metadata de un OA específico. Eliminar Metadata Eliminar la metadata en el repositorio. eliminarPorOID 27 Figura 6: Modelo Conceptual del Repositorio de Metadata de AMBAR (Alegría y Nieves, 2008) 28 Por último, tal como se mencionó anteriormente, en la actualidad ambos repositorios de AMBAR se encuentran integrados a través de la capa de servicios. Esta integración, producto del trabajo desarrollado por Quintero (2009), permite establecer una correspondencia entre los servicios del ROA y del Repositorio de Metadata de AMBAR en cuanto al manejo de los OA, facilitando la organización, estandarización y almacenamiento de la información, así como el aumento en la eficiencia de los procesos de recuperación y manipulación de la misma. Es importante mencionar las dos iteraciones, llevada a cabo en esta integración, las cuales contemplaron a grandes rasgos: “adecuación del repositorio de Metadata, tanto a nivel funcional como la interfaz de usuario, de manera que se pueda integrar con la base de datos de AMBAR a través de la Capa de Servicios y la reestructuración de la Capa de Presentación y de los enlaces correspondientes al almacenamiento, modificación y eliminación de OA de la Capa de Servicios Web de la base de datos de AMBAR para que utilicen los servicios correspondientes, a cada uno de ellos, del Repositorio de Metadata” (p. 45). En esta implementación, el modelo conceptual del ROA de AMBAR sufre varias modificaciones, las cuales se encuentran resaltadas en la figura 7. Dando inicio a la segunda parte de este Marco Conceptual, es importante señalar que, aprovechando las ventajas presentadas por el aprendizaje electrónico, por ejemplo el ahorro de costos y desplazamientos, autonomía del conocimiento, registro continuo de las actividades realizadas por los usuarios para su posterior análisis, entre otras; se han desarrollado sistemas LMS, los cuales según la Coordinación General de Estudios Interactivos a Distancia de la Universidad de Los Andes, Venezuela (http://www.ceidis.ula.ve/index.php?option=com_content&task=category&sectionid=5&id =17&Itemid=31), son aplicaciones de software, instaladas en servidores y se emplean para administrar y controlar las actividades, programas y cursos de formación no presencial o e- Learning en una institución u organización y permitir el uso de herramientas de trabajo para colaborar en grupo. A grandes rasgos permiten también “la distribución de contenidos reutilizables e intercambiables” (Fernández, 2006, p.13). http://www.ceidis.ula.ve/index.php?option=com_content&task=category&sectionid=5&id=17&Itemid=31 http://www.ceidis.ula.ve/index.php?option=com_content&task=category&sectionid=5&id=17&Itemid=31 29 Figura 7: Modelo Conceptual del ROA de AMBAR modificado (Quintero, 2009) 30 Al revisar los trabajos de Calderón (2009) y Fernández (2006) se pueden observar algunos ejemplos de LMS tanto comerciales como de software libre, tales como: WebCT, ATutor, Dokeos y Claroline, respectivamente. Dentro de los LMS de software libre, se encuentra también MOODLE, el cual es de vital importancia para la presente investigación, por lo que a continuación se presentarán en detalle, los aspectos más relevantes dentro de la misma, tales como su arquitectura, enfoque pedagógico, características generales, módulos disponibles, entre otros. 2.2.- MOODLE MOODLE, según la versión 2007 de la documentación publicada por la Comunidad MOODLE (http://docs.moodle.org/es/Acerca_de_Moodle), se puede definir como un LMS fundamentalmente útil para programadores y teóricos de la educación, desarrollado pensando en la manera creativa en que un estudiante o profesor podrían aproximarse al estudio o enseñanza de un curso en línea. Luego de descartar múltiples prototipos, la primera versión oficial, MOODLE 1.0, apareció el 20 de agosto de 2002, creada por Martín Dougiamas y a partir de ésta, ha continuado siendo “un proyecto en desarrollo diseñado para dar soporte a un marco de educación social constructivista” (párr. 1) y aprendizaje colaborativo. 2.2.1.-Arquitectura de MOODLE La Comunidad MOODLE, le ha hecho un seguimiento continuo al desarrollo de esta plataforma, por lo tanto basado en la publicación del año 2006 (http://docs.moodle.org/es/Arquitectura_de_Moodle), se puede decir que en términos de arquitectura, es una aplicación web que se ejecuta sin modificaciones en Unix, GNU/Linux, OpenSolaris, FreeBSD, Windows, Mac OS X, NetWare y otros sistemas que soportan PHP (Hipertext Preprocessor), incluyendo la mayoría de proveedores de hosting web. Hay algunos paquetes autoinstalables para facilitar el despliegue de MOODLE, incluyendo Fantástico, JumpBox, y el paquete para Debian GNU/Linux. Los datos son almacenados en http://docs.moodle.org/es/Acerca_de_Moodle http://docs.moodle.org/es/Arquitectura_de_Moodle 31 una sola base de datos SQL, en MOODLE 1.6, los servidores de base de datos MySql y PostgreSql fueron las únicas opciones. La versión 1.7, publicada en Noviembre de 2006, hace uso total de abstracción de base de datos para que los instaladores puedan elegir entre alguno de los diversos tipos de servidores, por ejemplo Oracle y Microsoft SQL Server. La última versión estable es MOODLE 1.9.1.0. La versión en desarrollo es MOODLE 2.0.1, publicada en Diciembre de 2010. Según esta misma documentación, MOODLE ha sido desarrollado desde 1999 y desde 2001 mantiene la arquitectura actual, ha sido traducido a más de 70 idiomas y de la versión 1.5 en adelante presenta mejoras importantes en cuanto a accesibilidad y flexibilidad de visualización. Hasta Julio de 2008, la base de usuarios registrados incluye más 21 millones, distribuidos en 46000 sitios en todo el mundo. 2.2.2.-Enfoque Pedagógico de MOODLE En cuanto a su enfoque pedagógico, se puede decir que según lo propuesto por Iriarte (2008), la filosofía de MOODLE incluye una aproximación constructiva y constructivista social de la educación, enfatizando que los estudiantes y no sólo los profesores, pueden contribuir a la experiencia educativa en muchas formas. Sus características reflejan esto en varios aspectos, como hacer posible que los estudiantes puedan comentar en entradas de bases de datos o inclusive construir entradas ellos mismos, o trabajar colaborativamente en un wiki. Habiendo dicho esto, MOODLE es lo suficientemente flexible para permitir una amplia gama de modos de enseñanza. Puede ser utilizado para generar contenido de manera básica o avanzada, por ejemplo páginas web; o evaluación, y no requiere un enfoque constructivista de enseñanza. Según este mismo autor, el constructivismo es a veces visto en contraposición con las ideas de la educación enfocada en resultados, como No Child Left Behind Act (NCLB) en los Estados Unidos. La contabilidad hace hincapié en los resultados de las evaluaciones, no en las técnicas de enseñanza o en pedagogía, pero MOODLE es también útil en un ambiente orientado al salón de clase debido a su flexibilidad. 32 2.2.3.-Características Generales de MOODLE En cuanto a su diseño general, presenta las siguientes características, observadas a lo largo de la diversa documentación de la Comunidad MOODLE (http://docs.moodle.org/es/Características) y en lo presentado por López y Sein-Echaluce (2010): Soporte Técnico Comunitario. Flexible y personalizable por poseer código abierto. Estándar y compatible con otros formatos como SCORM, IMS, entre otros. Promueve una pedagogía constructivista social, apoyado en colaboración, actividades, reflexión crítica, entre otros. Su arquitectura y herramientas son apropiadas para clases en línea, así como también para complementar el aprendizaje presencial, facilitando la comunicación a distancia. Tiene una interfaz de navegador de tecnología sencilla, ligera, y compatible. Su instalación es sencilla requiriendo una plataforma que soporte PHP y la disponibilidad de una base de datos. La lista de cursos muestra descripciones de cada uno de los cursos que hay en el servidor, incluyendo la posibilidad de acceder como invitado. Los cursos pueden clasificarse por categorías y también pueden ser buscados. Durante su desarrollo se ha puesto énfasis en una seguridad sólida en toda la plataforma, revisando todos los formularios, manteniendo las cookies cifradas, entre otros. La mayoría de las áreas de introducción de texto, materiales, mensajes de los foros y entradas de los diarios, pueden ser editados usando el editor para el Lenguaje de Marcado de Hipertexto (HTML), tan sencillo como cualquier editor de texto. Alto grado de interoperabilidad, particularmente en: autenticación, usando el Protocolo Ligero de Acceso a Directorios (LDAP), Shibboleth, o varios métodos estándares como el Protocolo de Red de Acceso a Mensajes Electrónicos (IMAP); http://docs.moodle.org/es/Características 33 inscripción, usando IMS Enterprise o por interacción directa con una base de datos externa; concursos y preguntas, permitiendo la importación y exportación en diversos formatos como el Formato Gráfico de Intercambio (GIFT) formato propio de MOODLE; y recursos, usando IMS Content Packaging, SCORM, entre otros. Integración con otros sistemas de administración de contenidos, como PostNuke, Joomla, entre otros; a través de extensiones de terceros. Sindicalización usando noticias RSS (Really Simple Sindication) o Atom, las noticias de fuentes externas pueden ser mostradas en un curso. Los foros, blogs y otras características pueden ser puestas a disposición de otros como noticias. MOODLE también tiene características de importación para uso con otros sistemas específicos, como la importación de preguntas o cursos enteros para Blackboard o WebCT. 2.2.4.-Actividades y Recursos de MOODLE De acuerdo con lo presentado por De la Torre (2005), se puede afirmar que MOODLE distingue claramente los elementos que pueden ser usados dentro de la estrucura de un curso, a saber: Recursos y Actividades. En principio, los recursos son los elementos que permitirán a los estudiantes acceder a los contenidos. Las actividades, son las herramientas de trabajo sobre los contenidos. No obstante, el carácter abierto de la mayoría de los elementos del sistema, hace que en ocasiones cueste trabajo distinguir entre ambas categorías, sin embargo en el ambiente MOODLE se pueden encontrar los siguientes recursos: páginas de texto plano, fragmentos HTML, archivos cargados en el servidor, enlaces web y páginas web. Además se pueden llevar a cabo tres tipos de actividades, las cuales son: actividades de comunicación, como foros, chats, mensajería interna, consultas y encuestas; actividades formativas, como lecciones, tareas, talleres, wikis, foros, entre otros; y actividades evaluación, como cuestionarios y exámenes con preguntas de autoevaluación de diversos tipos. 34 2.2.5.-Funcionalidad de MOODLE Al revisar el trabajo realizado por López y Sein-Echaluce (2010) como parte de la publicación de la Universidad de Zaragoza, se puede decir que las funcionalidades de MOODLE se han ido expandiendo a medida que su uso se ha hecho más popular, por ello actualmente permite complementar asignaturas del curriculum, crear cursos on-line o semipresenciales como punto de encuentro de colectivos, mediante sus salas virtuales de profesores, grupos de trabajo o investigaciones, portal de clubes o asociaciones; y como página web de información interactiva. Además, otras de sus funcionalidades como LMS de “tercera generación” (p. 3) son: permite distribuir materiales de aprendizaje; crear y gestionar debates temáticos y tablones de anuncios; presentar cuestionarios; evaluar tareas; integrar recursos de Internet; crear glosarios y diccionarios; gestionar el tiempo a través de un calendario global de distintas asignaturas; ofrecer herramientas de comunicación entre los estudiantes; permitir la tutoría electrónica en privado o en grupo; calcular estadísticas; gestionar las calificaciones; entre otras. 2.2.6.-Tipos de Cursos de MOODLE Los cursos de MOODLE se pueden categorizar en cuatro tipos, según lo publicado por Bello (2009), entre los cuales se pueden citar: Formato de Temas, organizado como un libro de texto donde el profesor elige el número de temas y las actividades a presentar y es el más apropiado para la mayoría de los cursos; Formato Social, basado en un foro central y es el más apropiado para grupos de trabajo; Formato Semanal, el curso se divide y se organiza por semanas con actividades particulares; y Formatos SCORM, IMS y LAMS (Learning Activity Management System), los que permiten integrar contenidos en estos estándares y se pueden exportar a otras plataformas. Desde mayo de 2010, se cuenta con el tipo de curso, WebQuest, descrito en los antecedentes de este documento. 35 2.2.7.-Administración de MOODLE Con respecto a la administración de MOODLE, Irisarri (1997) establece: Administración del sitio: Se establece un Usuario Administrador durante la instalación. En la personalización del sitio, se utilizan temas que definen los estilos, los colores del sitio, la tipografía, la presentación, la distribución, entre otros. Pueden añadirse nuevos módulos de actividades a los ya instalados en MOODLE. Los paquetes de idiomas permiten una localización completa de cualquier idioma. Estos paquetes pueden editarse usando un editor integrado. Administración de los usuarios: Los estudiantes pueden crear sus propias cuentas de acceso, en donde, la dirección de correo electrónico se verifica mediante la confirmación. Cada persona necesita sólo una cuenta para el acceso al servidor. Por otra parte, cada cuenta puede tener diferentes tipos de acceso. Los profesores pueden añadir una clave de acceso para sus cursos, con el fin de impedir el acceso de quienes no sean sus estudiantes. Administración de cursos: El profesor tiene control total sobre todas las opciones de un curso. Se puede elegir entre varios formatos de curso tales como semanal, por temas o el formato social, basado en debates. Además, se le pueden añadir actividades a los cursos tales como: foros, diarios, cuestionarios, materiales, consultas, encuestas y tareas. Todas las calificaciones pueden verse en una única página y descargarse como un archivo de hoja de cálculo. 2.2.8.-Módulos de MOODLE Entre los principales módulos que presenta MOODLE, según la versión 2006 de su documentación (http://docs.moodle.org/es/Caracter%C3%ADsticas), se pueden mencionar los módulos de: Tareas, Chat, Consultas, Foro, Glosario, HotPotatoes, LAMS, Lecciones, Cuestionarios, SCORM, Encuestas, Wiki, entre otros. Algunos de los módulos con mayor relación con la presente investigación, debido a su capacidad de distribuir contenido entre http://docs.moodle.org/es/Caracter%C3%ADsticas 36 los integrantes del curso, así como sus aspectos más relevantes se pueden observar en la tabla 3. 2.2.9.-Ventajas y desventajas de usar MOODLE Como último aspecto de relevancia considerable en el estudio de esta plataforma surgen algunas ventajas y desventajas, enumeradas en la tabla 4, al observar lo presentado por la Comunidad MOODLE en su documentación del año 2006 (http://docs.moodle.org/es/A_favor_de_Moodle); algunas de sus implementaciones, como por ejemplo el Sistema de Educación a Distancia de la Universidad Central de Venezuela (SEDUCV); y las surgidas de la revisión del trabajo de Arredondo (2004) y Guardia (2008). http://docs.moodle.org/es/A_favor_de_Moodle 37 Tabla 3: Algunos módulos de MOODLE y sus aspectos relevantes. Nombre Descripción Características Relevantes Módulo de Tareas Permite al profesor calificar varios tipos de envíos de los estudiantes: actividades fuera de línea, subida de un sólo archivo o avanzada, tarea de texto en línea, entre otros. Los estudiantes pueden subir sus tareas en cualquier formato. Por cada tarea puede evaluarse a toda la clase, mediante calificaciones y comentarios. El profesor puede adjuntar sus observaciones a la página de tareas del estudiante. Módulo de HotPotatoes (HotPot) Permite al profesor administrar los ejercicios elaborados con los editores HotPotatoes y TextToys a través de MOODLE, creados en el ordenador del profesor y luego incorporados al curso. Se dispone de diversos tipos de informes, los cuales mostrarán las respuestas de los estudiantes a cada una de las preguntas y se establecerán estadísticas sobre las puntuaciones obtenidas. Su pueden importar los ejercicios realizados en HotPotatoes e incluir los resultados de los ejercicios en el libro de calificaciones. Módulo SCORM Permite cargar fácilmente cualquier paquete SCORM y convertirlo en parte de un curso. Puede aceptar cualquier contenido SCORM y ponerlo disponible para que sea visualizado y recorrido por los usuarios de la plataforma. Provee un entorno de ejecución en el cual los contenidos son iniciados y exhibidos mediante un navegador web. El entorno de ejecución cumple con ciertos requisitos técnicos definidos por SCORM. 38 Tabla 4: Ventajas y Desventajas de usar Moodle Ventajas Desventajas Gracias a su licenciamiento GNU GPL, las universidades o distintas instituciones podrán implementar su MOODLE local y así poder crear sus plataformas para cursos específicos en la misma universidad, moviéndose en su mismo idioma y pudiendo abrir cursos a los alumnos que se encuentren en cualquier parte del planeta. Presenta una interfaz web de alta disponibilidad, permitiendo a los aprendices, tutores y administradores iniciar sesión de manera permanente y ejecutar sus tareas diarias. Su infraestructura se puede ampliar en términos de volumen de contenidos educativos como del número de estudiantes. Funciona con una amplia variedad de tecnologías de servidores web y bases de datos, soportando de manera confiable una implementación productiva a gran escala de manera continua. Permite admitir contenido de diferentes fuentes, y soluciones de equipos de cómputo o programas de diversos proveedores y así intercambiar información utilizando estándares abiertos de la industria para implementaciones WEB. Limita y controla selectivamente el acceso de su diversa comunidad de usuarios a los contenidos en línea, recursos y funciones del servidor tanto interna como externamente. Permite colocar recursos variados para formar una unidad de contenidos: etiquetas, archivos en formato, entre otros. Las tareas son evaluadas según varios criterios de evaluación. Dicha evaluación es continua y permanente. Con respecto al proceso de enseñanza y aprendizaje permite un acercamiento a los temas desde varios enfoques, con actividades múltiples que ponen en juego distintas capacidades (análisis, búsqueda y selección de información, elaboración de información, crítica, entre otros). Permite que cada estudiante establezca su propio ritmo de trabajo, en donde se establecen plazos de entrega de actividades y el profesor monitorea el desarrollo. Por estar basado en tecnología PHP, la configuración de un servidor con muchos usuarios debe ser cuidadosa para obtener el mejor desempeño. La interfaz de Moodle se debe mejorar, para que se muestre de una manera mucho más sencilla. Con respecto a la seguridad, hay que tener presente dónde se esta alojando la instalación de Moodle, y así verificar cuáles son las políticas de seguridad y la infraestructura tecnológica con la cual se cuente durante la instalación. Por ser una plataforma de tecnología abierta y por lo tanto gratuita, no se incluyen servicios gratuitos de soporte por lo que los costos de consultoría y soporte técnico están sujetos a firmas y entidades externas. No se encuentra conectado a un Repositorio de Objetos de Aprendizaje (ROA), lo que disminuye el aprovechamiento de sus recursos por parte de sistemas ajenos al mismo. 39 CAPÍTULO III: MARCO METODOLÓGICO En el siguiente capítulo se describen las iteraciones generadas al aplicar el Modelado Ágil (MA) como Método de Desarrollo de Software y llevadas al cabo durante la implementación del tipo de recurso “Objeto de Aprendizaje (OA) Básico”, el módulo de actividades “Objeto de Aprendizaje (OA) Estandarizado” y el bloque “ROA de AMBAR” para MOODLE, así como del rediseño del ROA de AMBAR, con el fin de lograr la integración entre ellos. En dicho proceso, las iteraciones están conformadas por fases, las cuales van desde lo más general hacia lo más específico, partiendo de la definición de la pila de requerimientos. Una representación gráfica de tales iteraciones y sus fases correspondientes, se puede apreciar en el Anexo A. 3.1.-Iteración 0: Iniciación del Proyecto En esta primera iteración se realizó un análisis de los requerimientos funcionales y no funcionales del proyecto. Se definió la pila de requerimientos en base a las prioridades y se realizó el modelado de los casos de uso generales. 3.1.1.-Fase I: Contemplar necesidades iniciales Partiendo del análisis del problema de la investigación, surgió un conjunto de requerimientos funcionales y no funcionales de vital importancia para el desarrollo del proyecto. La representación gráfica de los requerimientos en general, está basada en la Metodología para la Elicitación de Requisitos de Sistemas Software, de la Universidad de Sevilla (Toro y Jiménez, 2000), disponible como Anexo B. 40 3.1.1.1-Requerimientos Funcionales y No Funcionales Los Requerimientos Funcionales, según Toro y Jiménez (2000) deben responder a la pregunta "¿qué debe hacer el sistema con la información almacenada para alcanzar los objetivos de su negocio?” (p.45), por lo tanto a continuación se mencionan los requerimientos funcionales para este proyecto de investigación: 1. Agregar OA en curso desde el ROA de AMBAR. 2. Abrir OA en el curso. 3. Editar información del OA en el curso. 4. Eliminar OA del curso. 5. Ir al ROA de AMBAR. 6. Almacenar OA en el ROA de AMBAR. 7. Modificar metadata del OA en el ROA de AMBAR. 8. Eliminar OA del ROA de AMBAR. Por su parte los Requerimientos No Funcionales, formalmente según Alarcón (2006), “describen otras prestaciones, características y limitaciones que debe tener el sistema para garantizar el éxito” (p. 84) además “engloban características como rendimiento, facilidad de uso, presupuestos, tiempo de entrega, documentación, seguridad y auditorías internas” (p. 85). A continuación se presentan los requerimientos no funcionales para el proyecto: 1. Confiabilidad. 2. Robustez. 3. Usabilidad. 4. Seguridad. 5. Consistencia. Gráficamente, el detalle de los requerimientos y no funcionales se puede apreciar en el Anexo C. 41 3.1.1.2.-Pila de Requerimientos Con la pila de requerimientos se planificó y se ordenó, en base a la prioridad, el flujo de trabajo realizado en cada una de las iteraciones. En la figura 8, se presenta la pila de requerimientos a implementar. Figura 8: Pila de Requerimientos de la Integración ROA de AMBAR - MOODLE 3.1.1.3.-Modelado General de los Casos de Uso A continuación se detallarán los casos de usos modelados en esta iteración y los actores que intervienen: Administrador del curso: usuario perteneciente a la plataforma MOODLE, el cual tiene el privilegio de modificar la estructura del curso, así como su contenido. Interactúa con el recurso “Objeto de Aprendizaje (OA) Básico” ó el módulo de actividades “Objeto de Aprendizaje (OA) Estandarizado”, para buscar objetos en el ROA de AMBAR e incorporarlos en su curso, así como también, puede utilizar el 42 bloque “ROA de AMBAR” para gestionar los OA que se encuentran almacenados en el mismo repositorio. A los efectos de este trabajo, este usuario incluye los roles Administrador de MOODLE, Creador del Curso y Profesor Editor. Una descripción detallada de todos los roles de usuarios de MOODLE, se encuentra disponible en el Anexo D. Usuario del curso: son todos aquellos usuarios que interactúan con la Plataforma MOODLE, principalmente con el contenido de los cursos a los cuales se encuentre matriculado, para poder consultar su información publicada, realizar diversas actividades, entre otras. No tienen el privilegio de editar la estructura del curso ni la información publicada en el mismo. Este usuario incluye los roles de MOODLE Estudiante, Invitado, Usuario Autenticado y Profesor No Editor. Figura 9: Diagrama de Casos de Uso de la vista general de los usuarios de la Integración ROA de AMBAR – MOODLE 43 Figura 10: Diagrama de Casos de Uso - Usuario “Administrador del curso” con la funcionalidad “Administrar OA”. Figura 11: Particularización de la funcionalidad “Almacenar OA desde el ROA de AMBAR”. Figura 12: Diagrama de Casos de Uso - Usuario “Administrador del curso” con la funcionalidad “Gestionar OA”. 44 Figura 13: Diagrama de Casos de Uso – Usuarios “Administrador del Curso” y “Usuario del curso” con la funcionalidad “Visualizar OA”. 3.1.2.-Fase II: Descripción de la arquitectura de MOODLE y del ROA de AMBAR Haciendo referencia a lo presentado en el marco conceptual de esta investigación vale la pena destacar que para lograr la integración entre el ROA de AMBAR y la plataforma MOODLE, se contó con las siguientes arquitecturas: Arquitectura Orientada a Servicios (SOA), Arquitectura MVC (Modelo Vista Controlador) y el framework de la aplicación MOODLE. 3.2.-Iteración 1: Migración del ROA y del Repositorio de Metadata de AMBAR, implementación del Repositorio de Usuarios, adaptación de servicios web existentes e implementación de nuevos servicios de la Capa de Servicios Web de AMBAR. En esta iteración se realizó en primer lugar, la migración del ROA y del Repositorio de Metadata de AMBAR, del SMBD DB4O a MYSQL, motivado principalmente por la fuerte naturaleza de Software Libre y de licenciamiento dual, que mantiene este otro SMBD. También el hecho de que MOODLE es fácilmente instalable sobre MYSQL, 45 resulta en grandes beneficios al interconectar los diferentes proyectos en desarrollo en el contexto de AMBAR con esta integración. La decisión se vio soportada, por el hecho de utilizar un producto más comercial y sobre el cual se tenga una comunidad mucho más grande y estable de usuarios y desarrolladores incluso a nivel internacional, así como una documentación más completa y un conjunto de versiones más accesibles para su descarga e instalación. Seguidamente, se llevó a cabo la implementación del Repositorio de Usuarios de AMBAR y la adaptación de los servicios existentes en la capa de servicios web para el ROA y para el Repositorio de Metadata con el propósito de establecer la conexión entre ellos y la nueva BD. Por último, se agregaron nuevos servicios web a esa capa, de acuerdo a las necesidades del proyecto. 3.2.1.-Fase I: Modelado de la iteración: Migración del SMBD DB4O a MYSQL Con el propósito de adaptar la nueva BD a los requerimientos del proyecto, surgieron ciertas modificaciones de los modelos conceptuales originales: en cuanto al ROA de AMBAR (ver figura 14), siguiendo el Patrón de Diseño Composite, en el cual según Sáez, García y Jiménez (1999), se busca que los elementos compuestos sean tratados de la misma forma que los elementos individuales; se modificó la relación de agregación entre un OA de Información Compuesta y un OA general, así como los atributos de cada uno de ellos. En el modelo conceptual del Repositorio de Metadata (ver figura 15), la modificación más significativa se realizó en los atributos de la clase Metadata, donde se agregó el identificador de cada instancia, el cual se corresponde con el atributo id_metadata de un OA; y el nombre del archivo físico del recurso. Estos nuevos identificadores facilitan las operaciones de búsqueda y recuperación de un objeto dado. 46 Por último, con la finalidad de llevar un control centralizado de los usuarios de todo el sistema AMBAR y facilitar el control de acceso a las diversas aplicaciones y proyectos disponibles en el mismo, se implementó un Repositorio de Usuarios totalmente independiente, cuyo modelo conceptual se aprecia en la figura 16. Figura 14: Modelo Conceptual actual del ROA de AMBAR 47 Figura 15: Modelo Conceptual actual del Repositorio de Metadata de AMBAR 48 Figura 16: Modelo Conceptual del Repositorio de Usuarios de AMBAR 3.2.2.- Fase II: Desarrollo y Prueba: Adaptación de servicios existentes e implementación de nuevos servicios de la Capa de Servicios Web de AMBAR. Una vez implementadas las bases de datos correspondientes a los modelos conceptuales anteriormente señalados, se procedió a adaptar los servicios web existentes e implementar los nuevos servicios, de acuerdo a los requerimientos del proyecto. En el Anexo E, se puede apreciar el diseño de todos los servicios disponibles en la capa de servicios web de AMBAR para el Repositorio de Metadata, el ROA y el Repositorio de Usuarios. Es importante señalar que los servicios: eliminarPorOID, busquedaBasica, busquedaAvanzada, agregarMD y buscarPorOID, ya existían como implementaciones de proyectos anteriores, sin embargo fueron adaptados en cuanto al método de conexión con la nueva base de datos en MYSQL y a la modificación de algunos parámetros de entrada o salida de los mismos; el resto de los servicios presentados fueron creados durante este proyecto. En cuanto a los servicios web para el ROA, éstos siguen estando integrados a los del repositorio de metadata; sin embargo, durante el proyecto se 49 agregaron los servicios: listarOA y buscarPersonaPorOID; y se modificó el resto de los servicios existentes. Por último, continuando con el enfoque SOA, para el Repositorio de Usuarios de AMBAR se implementaron los servicios: buscarRol, verificarRegistroPersona, registrarUsuario. 3.3.-Iteración 2: Rediseño de la interfaz gráfica de usuario del ROA de AMBAR. En esta iteración se realizó el rediseño de las interfaces del ROA de AMBAR, para permitir por una parte, la posterior conexión con MOODLE y la validación y autenticación de sus usuarios en el repositorio; y por la otra, mantener la integridad del sistema al ser utilizado de forma independiente a cualquier LMS. 3.3.1. Fase I: Modelado de la iteración: 3.3.1.1.- Refinamiento del Diagrama de Casos de Uso A continuación se describen en detalle los requerimientos funcionales asociados a esta segunda iteración, tales como: Almacenar OA, Modificar la metadata del OA y Eliminar OA en el repositorio. Los casos de uso de segundo nivel como: Ingresar datos del propietario del OA e Ingresar metadata; y los de tercer nivel como: Metadata General, Metadata Ciclo de Vida, Meta-Metadata, Metadata Técnica, Metadata Educacional, Metadata Autor, Metadata Relación, Metadata Anotaciones, Metadata Clasificaciones; se encuentran detallados en el Anexo F. 50 Figura 17: Diagrama de Casos de Uso – Almacenar OA en el ROA de AMBAR. Figura 18: Diagrama de Casos de Uso – Eliminar OA del ROA de AMBAR. 51 Figura 19: Diagrama de Casos de Uso – Modificar metadata del OA en el ROA de AMBAR 52 3.3.1.2.- Modelado de las Actividades Los Diagramas de Actividades presentados a continuación, representan el flujo de trabajo llevados a cabo por los actores del sistema, en su interacción con el ROA de AMBAR, a través del sistema MOODLE. Figura 20: Diagrama de Actividades: Administrador del Curso en MOODLE – Buscar OA en el ROA de AMBAR 53 Figura 21: Diagrama de Actividades: Administrador del Curso en MOODLE – Gestionar OA en el ROA de AMBAR 54 3.3.2.-Fase II: Desarrollo y Prueba: Interfaz del ROA de AMBAR En base a los requerimientos del proyecto, se realizó el rediseño de la interfaz gráfica de usuario del ROA de AMBAR, en cuanto a sus elementos principales, los cuales se simplificaron en gran medida, dando como resultado una interfaz más usable y adaptable tanto para este proyecto como para futuros trabajos cuyo propósito también sea conectarse a este repositorio. El proceso para llevar a cabo dicho rediseño se describe a continuación: 1. Se creó un nuevo banner para la aplicación de usuario. 2. En la estructura interna del proyecto, se dividieron las funcionalidades del ROA en dos grupos: buscar y gestionar. En la búsqueda se mantuvo, la búsqueda básica y avanzada, así como sus funcionalidades asociadas. En la gestión, se agrupó el almacenamiento, modificación y eliminación de un OA. 3. Se desarrolló una función de envío de correo, de forma que se pueda informar al usuario sobre el almacenamiento exitoso de un nuevo OA y sirva como el medio para confirmar la posible modificación o eliminación de un recurso existente. 4. Se creó el menú principal con las opciones: Almacenar, Modificar y Eliminar OA. 5. El almacenamiento se implementó de forma tal que, se realice la verificación de los datos personales ingresados, contra la base de datos de usuarios a través del servicio web correspondiente, para validar que efectivamente la persona se encuentra registrada en AMBAR. 6. Para aquellas personas que no se encuentren registradas, se creó un prototipo del sistema de registro, el cual le asigna al nuevo usuario el rol Registrado de AMBAR. Este rol asignado por defecto, permite agregar, modificar y eliminar objetos propios del ROA. Este sistema de registro también utiliza la función de envío de correo descrita anteriormente para informar el registro exitoso de un nuevo usuario en AMBAR. 7. Los procesos de modificación y eliminación de un OA, se trabajaron en base a una validación de los datos personales del usuario contra los datos de los propietarios de los recursos, generando de esta forma un listado de resultados, el cual contendrá sólo aquellos objetos que ese usuario en particular, puede modificar o eliminar. La 55 culminación de cualquiera de estas acciones, depende de la confirmación del usuario, a través del correo enviado por la función habilitada en pasos anteriores. 8. Se diseñaron ayudas rápidas para todos los elementos de las distintas interfaces del ROA de AMBAR, con el propósito de asistir al usuario en el ingreso de los datos. Por último, en este rediseño se siguió trabajando bajo una Arquitectura MVC, donde los componentes mantienen constante intercambio de comunicación, tal y como se ilustra en las figuras 22 – 26. Figura 22: Diagrama de Secuencia del ROA de AMBAR para Buscar OA – Búsqueda Básica. 56 Figura 23: Diagrama de Secuencia del ROA de AMBAR para Buscar OA – Búsqueda Avanzada. 57 Figura 24: Diagrama de Secuencia del ROA de AMBAR para Almacenar OA. 58 Figura 25: Diagrama de Secuencia del ROA de AMBAR para Modificar OA 59 Figura 26: Diagrama de Secuencia del ROA de AMBAR para Eliminar OA 60 3.4.-Iteración 3: Desarrollo del tipo de recurso “Objeto de Aprendizaje (OA) Básico”, del módulo de actividades “Objeto de Aprendizaje (OA) Estandarizado” y del bloque “ROA de AMBAR” en MOODLE. En esta iteración se desarrolló un nuevo tipo de recurso y un módulo de actividades en MOODLE llamados “Objeto de Aprendizaje (OA) Básico” y “Objeto de Aprendizaje (OA) Estandarizado”, respectivamente, la finalidad de los mismos es que un usuario Administrador del Curso, pueda agregar un OA en su curso, por medio de la búsqueda y recuperación de tal objeto desde el ROA de AMBAR desde el mismo entorno de trabajo de MOODLE. De igual manera, se creó un bloque en MOODLE denominado “ROA de AMBAR”, con el cual el usuario va poder gestionar los objetos almacenados en dicho repositorio. 3.4.1.-Fase I: Modelado de la iteración: 3.4.1.1.-Refinamiento del Diagrama de Casos de Uso A continuación se describen en detalle los requerimientos funcionales asociados a esta tercera iteración, tales como: Agregar OA en el curso desde el ROA de AMBAR, Ir al ROA de AMBAR, Editar información del OA en el curso y Eliminar OA del curso en MOODLE. 61 Figura 27: Diagrama de Casos de Uso - Agregar OA en el curso desde el ROA de AMBAR. 62 Figura 28: Diagrama de Casos de Uso - Ir al ROA de AMBAR 63 Figura 29: Diagrama de Casos de Uso - Editar información del OA en el curso. Figura 30: Diagrama de Casos de Uso - Eliminar OA del Curso. 64 3.4.1.2.- Modelado de las Actividades Los Diagramas de Actividades presentados a continuación, representan el flujo de trabajo llevados a cabo por los actores del sistema, en su interacción con el tipo de recurso “Objeto de Aprendizaje (OA) Básico”, con el módulo de actividades “Objetos de Aprendizaje (OA) Estandarizado” y con un OA almacenado en el curso de MOODLE. Figura 31: Diagrama de Actividades: Administrador del Curso en MOODLE – Agregar OA al Curso 65 Figura 32: Diagrama de Actividades: Administrador del Curso en MOODLE – OA del Curso Figura 33: Diagrama de Actividades: Usuario del Curso en MOODLE – OA del Curso 66 3.4.2.-Fase II: Desarrollo y Prueba: Interfaz del tipo de recurso “Objeto de Aprendizaje (OA) Básico”, del módulo de actividades “Objeto de Aprendizaje (OA) Estandarizado” y del bloque “ROA de AMBAR” de MOODLE. Una vez culminado el modelado de esta iteración, presentado en la fase anterior, se procedió a descargar e instalar el paquete de la versión 1.9.1.0 de MOODLE para Windows, el cual contiene la estructura de directorios presentada en la figura 34. Es importante tomar en cuenta, que un OA se puede encontrar en diversos formatos, los cuales se categorizaron como: Básicos y Estandarizados. Los OA Básicos, son aquellos en formatos: .jpeg, .gif, .pdf, .doc, .ppt, .mp3, .mpeg, .flv, .avi.; y los OA Estandarizados son los recursos que siguen el estándar SCORM y son presentados en formato .zip. Fue necesario tomar en cuenta la categoría a la que pertenece un OA, ya que los OA básicos se representan como recursos y los estandarizados como actividades, dentro de la estructura de MOODLE. Recordando lo presentado en el marco conceptual del presente trabajo, un recurso dentro de MOODLE, permite desplegar un contenido para que el usuario final adquiera conocimiento; mientras que una actividad, se basa en llevar a cabo un conjunto de pasos para generar un producto, el cual pueda ser evaluado por el docente del curso. Tomando en cuenta lo anterior, es necesario recalcar, que dentro del contexto de este proyecto, aquellos objetos que se encuentran en formato .zip fueron manejados como una actividad para seguir con la estructura lógica y física que MOODLE asocia a los archivos en dicho formato, generados mediante el estándar SCORM. 67 Figura 34: Estructura de directorios de MOODLE 3.4.2.1.- Recurso “Objeto de Aprendizaje (OA) Básico” Para trabajar el OA Básico como un recurso, se creó en el siguiente directorio: C: \...\moodle\mod\resource\type\; la carpeta oaBasico, la cual contendrá aquellos archivos requeridos para el correcto funcionamiento del mismo. Gráficamente, ésta nueva carpeta y los archivos asociados a la misma se pueden observar en la figura 35. De estos archivos, es importante mencionar el tercero de ellos, resource.class.php, en el cual se define por medio de una clase, los atributos propios del recurso, así como los métodos que establecen su comportamiento. De esta clase, se analizó el método display(), el cual valida el tipo de archivo a cargar en el curso como un OA básico, por ejemplo: una imagen (jpeg, gif, pdf), un video (avi, mpeg, flv), entre otros; una porción del código de esta función se puede apreciar en Anexo G. 68 Figura 35: Estructura de directorios de la carpeta oaBasico en MOODLE. Posteriormente, se realizó un conjunto de modificaciones a la función setup_elements(), del mismo archivo resource.class.php, con la finalidad de crear un formulario personalizado (ver Anexo G), por medio del cual el administrador del curso pueda introducir los valores descriptivos del objeto a almacenar. Este formulario está compuesto por las siguientes cabeceras y sus elementos propios: General: donde se especifica el nombre del recurso y el resumen de su contenido. Ambos campos son obligatorios. Enlazar un Objeto de Aprendizaje (OA) Básico: se especifica la ubicación física del recurso. El valor de este campo se completará automáticamente al buscar y 69 seleccionar el OA en el ROA de AMBAR, por medio del botón IR al ROA de AMBAR, el cual también pertenece a esta cabecera. Ventana: permite configurar las opciones de la ventana del navegador donde se visualizará posteriormente el OA almacenado en el curso. Algunas de las opciones contenidas en esta cabecera son: forzar descarga, abrir en la misma/nueva ventana, cambiar propiedades de la nueva ventana, mostrar/ocultar marco de la ventana, cambiar el tamaño de la nueva ventana, entre otras. En este caso se configura como valor por defecto: abrir en la misma ventana con el marco visible. Parámetros: contiene un conjunto de parámetros adicionales que pueden ser de relevancia para el administrador del curso a la hora de almacenar un nuevo OA. Ajustes comunes del módulo: permite configurar la visibilidad del OA a agregar, de forma que esté disponible o no para su consulta y utilización. Otra modificación significativa, resulta la validación hecha en la función resource_get_coursemodule_info() del archivo lib.php, ubicado en el directorio C:\... \moodle\mod\resource, para identificar un OA básico dentro de todos los recursos del curso. En esta función (ver Anexo G), además se especificó que si un recurso es de tipo OA Básico, entonces debe ir acompañado de un logo distintivo, diseñado especialmente para este caso. De esta forma, queda construido el tipo de recurso Objeto de Aprendizaje (OA) Básico de MOODLE. 3.4.2.2.- Actividad “Objeto de Aprendizaje (OA) Estandarizado” Seguidamente, se procedió a implementar el módulo de actividad “Objeto de Aprendizaje (OA) Estandarizado”, para lo cual se creó en el directorio C:\Archivos de programa\Apache Software Foundation\Apache2.2\htdocs\moodle\mod\, la carpeta llamada OA, cuya estructura de directorios se observa en la figura 36. 70 Figura 36: Estructura de directorios de la carpeta OA en MOODLE Uno de los archivos contenidos en esta carpeta es lang/oa.php, en el cual se establecieron todas las etiquetas de los elementos de la actividad, por ejemplo, el título con el que se identifica el ítem en el listado de actividades del curso, entre otros. Otro archivo relevante es mod_form, en el cual se definieron las variables globales para el curso y para la sección actual de trabajo y se redireccionó el flujo hacia el módulo SCORM, definido previamente en la instalación de MOODLE. Una porción del código de los archivos mencionados, se puede visualizar en el Anexo H. Al realizar el redireccionamiento se envía un parámetro para indicarle al módulo SCORM que se almacenará un OA, de tal forma que se muestre un mensaje descriptivo en la interfaz gráfica y el botón Ir al ROA DE AMBAR; el código que permitió la captura de dicho parámetro y la definición del botón es parte del Anexo H. En cuanto a los requerimientos funcionales: abrir, modificar la información y eliminar un OA, se puede decir que se implementaron a través de las funciones provistas por el mismo framework de MOODLE al activar la edición del curso, por lo que no fue necesario llevar a cabo ninguna modificación al respecto. 71 3.4.2.3.- Bloque “ROA de AMBAR” en MOODLE El tercer producto de esta iteración, viene dado por la construcción del bloque “ROA de AMBAR” en esta misma plataforma. A través de este bloque, el administrador del curso, podrá acceder desde el entorno de trabajo, al ROA de AMBAR para gestionar (almacenar, modificar y eliminar) los OA almacenados en este repositorio. Para ello, en primer lugar, como se observa en la figura 37, se crea la carpeta roa_ambar en el directorio C:\…\moodle\blocks, formando parte del resto de bloques estándares de MOODLE. Por último, la configuración de este bloque es un proceso bastante sencillo, el cual requiere la modificación del archivo block_ambar_roa.php, contenido en el directorio mencionado anteriormente, en el cual se modificó la función get_content() (ver Anexo I). Esta función, permite establecer la estructura del bloque, la cual en este caso será un simple enlace hacia el repositorio. De acuerdo a los requerimientos del proyecto en general, se decidió crear un bloque no editable, de tal forma que el administrador puede habilitarlo o deshabilitarlo en su curso, pero no puede cambiar el contenido propio del bloque. Además, un aspecto importante con respecto a este bloque, es la validación del acceso al mismo por parte de todos los usuarios de MOODLE, en este sentido, sólo los administradores de MOOODLE, los creadores de cursos o los profesores editores, podrán visualizarlo y hacer uso del mismo; esto con la finalidad de evitar que los estudiantes ingresen al ROA de AMBAR sin previa autorización. 72 Figura 37: Estructura de directorios de la carpeta roa_ambar en MOODLE. 73 CAPÍTULO IV ANÁLISIS DE RESULTADOS En el siguiente capítulo se presenta el resultado final de llevar a cabo cada una de las iteraciones descritas por el Modelado Ágil (MA); quedando representado por el rediseño del ROA de AMBAR, la construcción del tipo de recurso “Objeto de Aprendizaje (OA) Básico”, del módulo de actividades “Objeto de Aprendizaje (OA) Estandarizado” y del bloque “ROA de AMBAR” para MOODLE. Además se describen sus respectivas interfaces y su funcionamiento general. 4.1.- Descripción de la interfaz del ROA de AMBAR Al realizar la creación del nuevo banner para el ROA de AMBAR, se combinaron elementos gráficos en cuanto a colores y formas, de lo que conceptualmente es un OA (cubo), junto con MOODLE (birrete) y AMBAR (colores); el resultado de esto se puede apreciar en la figura 38. Figura 38: Banner de la aplicación del ROA de AMBAR Al dividir las funcionalidades del ROA de AMBAR en dos grupos: buscar y gestionar, se modificaron las interfaces respectivas. Para la búsqueda, la interfaz presenta un menú con las opciones de búsqueda básica (figura 39) y avanzada (figuras 40 y 41), así como el respectivo formulario de ingreso de datos. Una vez que el usuario realiza la búsqueda, en cualquiera de sus formas, se le presenta un listado de los objetos correspondientes (figura 42), de los cuales se puede visualizar su contenido o seleccionar alguno para ser cargado en el curso de MOODLE. 74 Figura 39: Búsqueda Básica Figura 40: Búsqueda Avanzada. 75 Figura 41: Búsqueda Avanzada (Cont.). 76 Figura 42: Listado de Resultados para las búsquedas. Para la gestión de un OA, la interfaz presenta un menú con cada una de las opciones disponibles, la cuales son almacenar, modificar o eliminar OA. El almacenamiento se realiza en tres pasos: insertar los datos personales del usuario, insertar la ubicación física del archivo a almacenar y luego de verificar todos los datos, ingresar la metadata asociada al mismo. Estos pasos se pueden apreciar gráficamente en las figuras 43 – 46. Durante el primer paso, si el usuario que está intentando almacenar un nuevo recurso, no se encuentra registrado en AMBAR, se le muestra un mensaje informando esta condición (figura 47) y dándole la opción de registrarse en el sistema. La página de registro, presentada en la figura 48, contiene un formulario bastante sencillo, el cual permite agregar los datos del usuario al sistema. Una vez que el usuario agrega exitosamente un nuevo OA al repositorio, se le envía un correo electrónico a la dirección ingresada anteriormente. 77 Figura 43: Almacenar OA – Paso 1. Figura 44: Almacenar OA – Paso 2. 78 Figura 45: Almacenar OA – Paso 3. Figura 46: Almacenar OA – Paso 3 (Cont.). 79 Figura 47: Almacenar OA - Usuario No Registrado. Figura 48: Registro de Usuario. 80 Las siguientes opciones del menú principal son Modificar y Eliminar OA, las cuales a través de dos pasos, combinan elementos mencionados anteriormente, tales como introducir datos personales y la realización de una búsqueda básica o avanzada. En estos casos, el listado de resultado, contendrá sólo aquellos objetos que ese usuario en particular, puede modificar o eliminar. Tanto en la modificación como en la eliminación, se envía un correo de confirmación para culminar tal acción. Todos los elementos de las distintas interfaces del ROA de AMBAR, contienen una ayuda rápida, para asistir al usuario en el ingreso de los datos, esta ayuda se puede observar en la misma figura 48. 4.2.- Descripción de la interfaz del tipo de recurso “Objeto de Aprendizaje (OA) Básico”, del módulo de actividades “Objeto de Aprendizaje (OA) Estandarizado” y del bloque “ROA de AMBAR”, de MOODLE Recordando la distinción que hace MOODLE en cuanto a sus recursos y actividades, es importante señalar que, para que el administrador de cualquier curso, luego de activar la opción de edición, pueda añadir un OA en el mismo, debe revisar el formato del objeto y decidir de antemano cuál listado debe consultar: el listado de recursos, para los OA básicos (.mp3, .flv, .doc, .ppt, entre otros); ó el listado de actividades, para los OA estandarizados bajo SCORM (.zip). De esta forma debe proceder a buscar el ítem Enlazar un Objeto de Aprendizaje que corresponda a cada caso, tal y como se muestra en la figura 49. En primer lugar, en el caso de agregar un recurso de tipo OA básico, se le presenta al usuario un formulario, en el cual debe ingresar los datos de identificación del OA dentro del curso, así como la ruta del archivo físico a almacenar, la cual se debe obtener mediante la realización de una búsqueda básica o avanzada dentro del ROA de AMBAR; a través del botón “Ir al ROA de AMBAR”, presente en el mismo formulario. La interfaz gráfica del formulario y el detalle de cada una de las cabeceras que posee, se pueden apreciar en las figuras 50 y 51. Una vez que el OA básico ha sido añadido al curso, se identifica con un 81 logo particular diseñado especialmente para este caso. Un ejemplo de un OA disponible en el curso se puede apreciar en la figura 52. Figura 49: Listado de Recursos y Listados de Actividades de MOODLE Figura 50: Cabecera general del recurso “Objeto de Aprendizaje (OA) Básico” de MOODLE. 82 Figura 51: Cabeceras Enlazar un Objeto de Aprendizaje (OA) Básico, Ventana, Parámetros y Ajustes comunes del módulo; y botones de acción del Recurso “Objeto de Aprendizaje (OA) Básico” de MOODLE. Figura 52: Ejemplo de un OA básico en un curso de MOODLE, junto con su logo distintivo. 83 En segundo lugar, en el caso de añadir una actividad de tipo OA Estandarizado, también se le presenta al usuario un formulario de identificación (ver figura 53). Las cabeceras de este formulario son las que corresponden a la actividad SCORM de MOODLE, por estar desarrollados bajo el mismo estándar. Igualmente, por medio del botón “Ir al ROA de AMBAR” de este formulario se puede realizar la búsqueda de un OA en dicho repositorio. Todos los recursos y actividades de MOODLE, tienen asociadas las opciones de edición: mover derecha/izquierda, mover arriba/abajo, editar información, eliminar y ocultar/mostrar; tal como se ilustra en la figura 54. Por último, la interfaz gráfica del bloque “ROA de AMBAR” de MOODLE, es bastante sencilla, estando compuesta por un enlace hacia el repositorio (ver figura 55). Este enlace le permite al usuario, almacenar, modificar o eliminar un OA del ROA desde el mismo entorno de su curso en MOODLE. Es importante recordar que este bloque sólo estará visible para los usuarios con privilegios de edición, es decir que ni los estudiantes, ni los profesores no editores, podrán acceder al ROA desde esta plataforma, tal y como se muestra en la figura 56. 84 Figura 53: Formulario del módulo de actividades “Objeto de Aprendizaje (OA) Estandarizado” de MOODLE. 85 Figura 54: Opciones de edición de un OA en MOODLE Figura 55: Bloque “ROA de AMBAR” en MOODLE. 86 Figura 56: Visibilidad del bloque “ROA de AMBAR” en MOODLE de acuerdo al rol de usuario. 87 CONCLUSIONES Una vez concluido este Trabajo Especial de Grado, se puede afirmar que se alcanzó el objetivo planteado de integrar el Repositorio de Objetos de Aprendizaje (ROA) de AMBAR con la plataforma MOODLE a través de la capa de servicios web; mediante la creación del tipo de recurso “Objeto de Aprendizaje (OA) Básico”, del módulo de actividades “Objeto de Aprendizaje (OA) Estandarizado” y del bloque “ROA de AMBAR”, en MOODLE. El tipo de recurso y el módulo de actividades desarrollados para MOODLE, le permiten a un administrador del curso o a un profesor editor, enlazar un OA como parte de la estructura de un curso virtual, a través de un formulario estándar y con la posibilidad de realizar búsquedas en el ROA de AMBAR, desde el mismo entorno de trabajo. Por su parte el bloque mencionado, facilita la gestión, en cuanto a modificación y eliminación, de los recursos disponibles en dicho repositorio, posibilitando además el almacenamiento de nuevos OA en el mismo. Cabe destacar que este trabajo fue desarrollado sobre la versión 1.9.1.0 de MOODLE, la cual era la versión estable para el momento, a pesar de estar en desarrollo la versión 2.0.1. Gracias a la experiencia adquirida durante este trabajo especial de grado, se puede decir que la SOA y la arquitectura MVC del ROA de AMBAR, fueron elementos claves que permitieron en gran medida aprovechar desde MOODLE, las funcionalidades definidas para el ROA de AMBAR, tales como: búsqueda básica y avanzada, almacenamiento, modificación y eliminación de un OA; facilitando la modificación y agregación de otros servicios web útiles para el proyecto AMBAR en general. De igual manera, las herramientas de desarrollo disponibles en el entorno de MOODLE (archivos, documentación, comunidad, entre otros) también significaron aportes efectivos para el éxito de este trabajo. A través del Modelado Ágil (MA) como método de desarrollo de software, se lograron desarrollar los requerimientos propuestos y de esta forma, cumplir con los objetivos específicos inicialmente planteados. Se pudo apreciar cómo esta metodología es 88 lo suficientemente flexible como para permitir agregar requerimientos de trabajo al proyecto en general, en distintos momentos del período de desarrollo, en este caso: la implementación de los repositorios de AMBAR en el SMBD MYSQL. Este requerimiento fue de vital importancia para el trabajo y a través del MA se le pudo asignar la máxima prioridad en el desarrollo. Finalmente, es importante señalar que con la migración mencionada, se obtuvieron resultados favorables en cuanto a la implementación de los repositorios de AMBAR en un SMBD Software Libre que cuenta además con una comunidad de desarrollo robusta y estable, por lo tanto en este sentido se puede concluir que como trabajo de investigación resulta factible probar otras soluciones dentro del desarrollo de AMBAR con el fin de evaluar y comparar el desempeño de sus componentes sobre distintas plataformas. 89 RECOMENDACIONES Este trabajo sirve como antecedente para continuar la integración entre MOODLE y ROA independientes, aumentando el uso de estas entidades y enriqueciendo los diferentes cursos virtuales, al incorporar en su estructura objetos complejos para beneficiar el proceso de enseñanza y aprendizaje. Es importante continuar con proyectos similares para, a largo plazo, construir comunidades internacionales de OA mucho más ricas y completas. Se deja como iniciativa para futuros desarrollos, buscar una mayor estandarización y transparencia en el manejo de los OA por parte de MOODLE, en la cual desaparezca la distinción entre OA Básicos y Estandarizados. De esta forma el proceso de construcción de un curso en particular puede ser aún más fácil y rápido para el docente asociado al mismo; sin embargo, se recomienda que antes de emprender un proyecto de desarrollo sobre esta plataforma, se realice una gran revisión de la documentación, así como instalar, probar y experimentar las diversas versiones disponibles; todo esto con el propósito de entender previamente el funcionamiento y la estructura lógica y física de MOODLE. En cuanto a los SMBD existentes en el mercado, se recomienda llevar a cabo investigaciones asociadas a la implementación de los repositorios de AMBAR en SMBD Objeto-Relacional como por ejemplo PostgreSQL, con el fin de explotar la ventaja de almacenar tipos complejos como parte de la data del repositorio, manteniendo la naturaleza de Software Libre del proyecto en general. Igualmente, se sugiere trabajar los métodos internos de cada servicio web disponible con el fin de asegurar mayor control de concurrencia, así como optimizar las consultas a nivel de base de datos. Además, se alienta a los futuros desarrolladores, a agregar más servicios a la Capa de Servicios Web de AMBAR para aumentar sus funcionalidades. Finalmente, se exhorta a darle gran atención al modelado inicial de cada iteración, independientemente del método de desarrollo empleado; para facilitar notablemente el proceso de desarrollo global, identificando el alcance del sistema y la arquitectura a utilizar. 90 REFERENCIAS Adriani, K., Díaz, S., López, M. G., Miguel, V. Montaño, N. (2006). Prototipo del Repositorio de Objetos de Aprendizaje de un Sistema Generador de Ambientes de Enseñanza – Aprendizaje basados en Objetos de Aprendizaje (AMBAR). III Simposio Pluridisciplinar sobre Objetos de Aprendizaje apoyados en las tecnologías (OD@06). España. Obtenido el 25 de marzo de 2010 desde http://150.185.75.79:8080/Ambar_I/ObjetosAprendizaje/Articulos_Ambar/Ponencia _Repositorio_de_OA_de_AMBAR.pdf Alarcón, F. V. (2006, Junio). Desarrollo de Sistemas de Información. Una metodología basada en el modelado. Ediciones de la Universitat Politécnica de Catalunya, SL. (pp. 216). Alegría, G. R. A. & Nieves, H. C. (2008, Mayo). Repositorio de Metadata de los Objetos del Sistema Generador de Ambientes de Enseñanza Aprendizaje Constructivistas basados en Objetos de Aprendizaje (AMBAR). Trabajo Especial de Grado a los fines de optar al título Licenciado en Computación, presentado ante la ilustre Universidad Central de Venezuela, Facultad de Ciencias, Escuela de Computación. Caracas, Venezuela. Arredondo, K. J. (2004). Seminario de Informática: Moodle. Obtenido el 4 de junio de 2010 desde http://www.slideshare.net/kelvinjose/presentacion-moodle-1959805 Beleño, M. C. M. (2007, Octubre 30). Capa de Servicios de Base de Datos del Sistema Generador de AMBientes de enseñanza- ApRendizaje AMBAR. Trabajo Especial de Grado a los fines de optar al título Licenciado en Computación, presentado ante la ilustre Universidad Central de Venezuela, Facultad de Ciencias, Escuela de Computación. Caracas, Venezuela. http://150.185.75.79:8080/Ambar_I/ObjetosAprendizaje/Articulos_Ambar/Ponencia_Repositorio_de_OA_de_AMBAR.pdf http://150.185.75.79:8080/Ambar_I/ObjetosAprendizaje/Articulos_Ambar/Ponencia_Repositorio_de_OA_de_AMBAR.pdf http://www.slideshare.net/kelvinjose/presentacion-moodle-1959805 91 Beleño, M. C., Hernández, Y., López, M. G., Miguel, V., Montaño, N. & Pernalete, B. (2008, Octubre). Un Repositorio basado en Servicios Web para el Sistema Generador de Ambientes de Aprendizaje AMBAR. V Simposio Pluridisciplinar sobre Diseño y Evaluación de Contenidos Educativos Reutilizables (SPDECE). Salamanca, España. Obtenido el 25 de marzo de 2010 desde http://www.web.upsa.es/spdece08/contribuciones/160_Repositorio_de_AMBAR_ba sado_en_servicios_web-def.pdf Bello, C. F. (2009, Febrero 10). Tipos de Cursos (Moodle). Obtenido el 04 de junio de 2010 desde http://joomla.fcruzbello.es/index.php/moodle/tipos-de-curso Castillo, L. Figueroa, M. J. & Morales, L. (2008). Modificación del Módulo SCORM para el Soporte Básico del IMS-LD. Departamento de Ciencias de la Computación e Inteligencia Artificial de la Universidad de Granada. Barcelona, España. Obtenido el 5 de Marzo de 2010 desde http://decsai.ugr.es/~lcv/Research/Publications/Papers/126-223-1-PB.pdf Calderón, A. (2009, Abril 25). ¿Qué es un LMS?. Obtenido el 2 de marzo de 2010 desde http://aprendizajedistancia.blogspot.com/2009/04/que-es-un-lms.html Di Blasi, L. L. (2010, Mayo). Desarrollo del Módulo WebQuest basado en la especificación IMS Learning Design para la creación de cursos en la plataforma MOODLE. Trabajo Especial de Grado a los fines de optar al título Licenciado en Computación, presentado ante la ilustre Universidad Central de Venezuela, Facultad de Ciencias, Escuela de Computación. Caracas, Venezuela. De la Torre. A. (2005). Recursos y actividades en Moodle. Obtenido el 8 de marzo de 2010 desde http://www.adelat.org/media/docum/moodle/recursos_y_actividades_ en_moodle.html http://www.web.upsa.es/spdece08/contribuciones/160_Repositorio_de_AMBAR_basado_en_servicios_web-def.pdf http://www.web.upsa.es/spdece08/contribuciones/160_Repositorio_de_AMBAR_basado_en_servicios_web-def.pdf http://joomla.fcruzbello.es/index.php/moodle/tipos-de-curso http://decsai.ugr.es/~lcv/Research/Publications/Papers/126-223-1-PB.pdf http://aprendizajedistancia.blogspot.com/2009/04/que-es-un-lms.html http://www.adelat.org/media/docum/moodle/recursos_y_actividades_%20en_moodle.html http://www.adelat.org/media/docum/moodle/recursos_y_actividades_%20en_moodle.html 92 Fernández, M. B. (2006, Marzo). Especificaciones y Estándares en e-learning. Revista de Tecnologías de la Información y Comunicación Educativas de la Red Digital del Ministerio de Educación y Ciencia de España, 1(6), 11-32. Obtenido el 1 de junio de 2010 desde http://reddigital.cnice.mec.es/ 6/Articulos/pdf/Articulos_2.pdf García, A. L. (2005, Abril). Objetos de Aprendizaje: Características y Repositorios. Boletín Electrónico de Noticias de Educación a Distancia CUED, España. 1-5. Obtenido el 25 de marzo de 2010 desde http://ares.unimet.edu.ve/programacion/cursos/tobj/ articObj2.pdf García, P. F. J. (2009, Diciembre 4). Estado actual de los sistemas e-learning. Revista Electrónica Universidad de Salamanca, 3 (10). Obtenido el 2 de marzo de 2010, desde http:// campus.usal.es/ ~teoriaeducacion/ rev_numero_06_2/ n6_02_art_garcia_penalvo.htm Guardia, R. M. (2008, Julio 19). Ventajas – Desventajas de la Plataforma Moodle. Universidad Católica del Perú. Obtenido el 7 de julio de 2010 desde http://blog.pucp.edu.pe/item/26867 Hernández, B. Y. C. (2009, Noviembre). Proceso de Evaluación de la Calidad para los Objetos de Aprendizaje de tipo Combinado Abierto. Trabajo de Grado a los fines de optar al título Magíster Scientiarum Mención Ciencias de la Computación, presentado ante la ilustre Universidad Central de Venezuela, Facultad de Ciencias, Postgrado en Ciencias de la Computación. Caracas, Venezuela. Iriarte, A. W. M. (2008, Julio 17). Moodle y su Enfoque Pedagógico. Universidad Católica del Perú. Obtenido 17 de octubre de 2009 desde http://blog.pucp.edu.pe/item/26522 http://reddigital.cnice.mec.es/%206/Articulos/pdf/Articulos_2.pdf http://reddigital.cnice.mec.es/%206/Articulos/pdf/Articulos_2.pdf http://ares.unimet.edu.ve/programacion/cursos/tobj/%20articObj2.pdf http://ares.unimet.edu.ve/programacion/cursos/tobj/%20articObj2.pdf http://blog.pucp.edu.pe/item/26867 http://blog.pucp.edu.pe/item/26522 93 Irisarri, G. L. (1997). Moodle. Mural de la Universitat de València. Obtenido el 8 de marzo de 2010 desde mural.uv.es/leiga/exposicion.ppt López, G. P. & Sein-Echaluce, L. M. L. (2010). Moodle: Difusión y Funcionalidades. Universidad de Zaragoza (2010), Innovación Docente, Tecnologías de la Información y la Comunicación e Investigación Educativa (pp. 1-12). Obtenido el 8 de marzo de 2010 desde http://www.unizar.es/eees/innovacion06/ COMUNIC_PUBLI/BLOQUE_III/CAP_III_10.pdf López, M., Miguel, V. & Montaño, N. (2008, Enero 31). Sistema Generador de AMBientes de Enseñanza-ApRendizaje Constructivistas basados en Objetos de Aprendizaje AMBAR: la Interdisciplinariedad en los ambientes de aprendizaje en línea. RED: Revista de Educación a Distancia, Murcia, España, 8 (19), 1-14. Obtenido el 29 de abril de 2010 desde http://www.um.es/ead/red/19/gertrudis.pdf López, M. G., Miguel, V., Montaño N. & Pernalete, D. (2007, Septiembre). IMS- Learning Design y el Modelo arquitectural de AMBAR. IV Simposio Plurisdisciplinar sobre Diseño, Evaluación y Desarrollo de Contenidos Educativos Reutilizables (SPDEDCE), Bilbao. Obtenido el 28 de marzo de 2010 desde http://spdece07.ehu.es/actas/Pernalete.pdf Molist, M. (2008). Moodle llena la geografía educativa española de campus virtuales. CiberPaís, El País. Obtenido el 21 de enero de 2010 desde http://www.elpais.com/archivo/hemeroteca.html?cals=0&day=4&month=12&year= 2008 Toro, D. A., & Jiménez, B. B. (2000, Octubre). Metodología para la Elicitación de Requisitos de Sistemas Software. Universidad de Sevilla. Obtenido el 23 de septiembre de 2010 desde http://www.lsi.us.es/~informes/lsi-2000-10.pdf http://mural.uv.es/leiga/exposicion.ppt#_blank http://www.unizar.es/eees/innovacion06/%20COMUNIC_PUBLI/BLOQUE_III/CAP_III_10.pdf http://www.unizar.es/eees/innovacion06/%20COMUNIC_PUBLI/BLOQUE_III/CAP_III_10.pdf http://www.um.es/ead/red/19/gertrudis.pdf http://spdece07.ehu.es/actas/Pernalete.pdf http://www.elpais.com/archivo/hemeroteca.html?cals=0&day=4&month=12&year=2008 http://www.elpais.com/archivo/hemeroteca.html?cals=0&day=4&month=12&year=2008 http://www.lsi.us.es/~informes/lsi-2000-10.pdf 94 Quintero, S. J. A. (2009, Abril). Integración del Repositorio de AMBAR con el Repositorio de Metadata a través de la Capa de Servicios. Trabajo Especial de Grado a los fines de optar al título Licenciado en Computación, presentado ante la ilustre Universidad Central de Venezuela, Facultad de Ciencias, Escuela de Computación. Caracas, Venezuela. Sáez M. J., García M. J. y Jiménez G. P. (1999, Noviembre). Una Arquitectura para una Herramienta de Patrones de Diseño. Universidad de Murcia, España. Obtenido el 13 de Diciembre de 2010 desde http://www.dis.um.es/~jmolina/arquipatronesjis99.pdf http://www.dis.um.es/~jmolina/arquipatronesjis99.pdf 95 ANEXOS 96 Anexo A: Representación gráfica de las iteraciones y fases del proyecto de acuerdo al Modelado Ágil (MA) Tabla A: Iteraciones y Fases del proyecto Iteración Fase 0 – Iniciación del Proyecto I – Contemplar Necesidades Iniciales 1 – Requerimientos Funcionales y No Funcionales 2 – Pila de Requerimientos II – Descripción de la arquitectura de MOODLE y del ROA de AMBAR 1 – Migración del Modelo Conceptual del ROA y del Repositorio de Metadata de AMBAR, adaptación de servicios web existentes e implementación de nuevos servicios de la Capa de Servicios Web de AMBAR I – Modelado de la iteración: Migración del SMBD DB4O a MYSQL II – Desarrollo y Prueba: Adaptación de servicios existentes e implementación de nuevos servicios de la Capa de Servicios Web de AMBAR. 2 – Rediseño de la interfaz gráfica de usuario del ROA de AMBAR. I – Modelado de la iteración 1 – Refinamiento del Diagrama de Casos de Uso 2 – Modelado de las Actividades II – Desarrollo y Prueba: Interfaz del ROA de AMBAR 3 – Desarrollo del tipo de recurso Objeto de Aprendizaje (OA) Básico, del módulo de actividades Objeto de Aprendizaje (OA) Estandarizado y del bloque ROA de AMBAR en MOODLE. I – Modelado de la iteración 1 – Refinamiento del Diagrama de Casos de Uso 2 – Modelado de las Actividades II – Desarrollo y Prueba: Interfaz del tipo de recurso Objeto de Aprendizaje Básico, del módulo de actividades Objeto de Aprendizaje Estandarizado y del Bloque ROA de AMBAR de MOODLE 1 – Objeto de Aprendizaje Básico 2 – Objeto de Aprendizaje Estandarizado 3 – Bloque ROA de AMBAR en MOODLE 97 Anexo B: Metodología para la elicitación de Requisitos de Sistemas de Software Objetivo de la metodología El objetivo de esta metodología es la definición de las tareas a realizar, los productos a obtener y las técnicas a emplear durante la actividad de elicitación de requisitos de la fase de ingeniería de requisitos del desarrollo de software. En esta metodología se distinguen dos tipos de productos: los productos entregables y los roductos no entregables o internos. Los productos entregables son aquellos que se entregan oficialmente al cliente como parte del desarrollo en fechas previamente acordadas, mientras que los no entregables son productos internos al desarrollo que no se entregan al cliente. Tareas recomendadas Las tareas recomendadas para obtener los productos descritos en esta metodología son las siguientes: – Tarea 1: Obtener información sobre el dominio del problema y el sistema actual. – Tarea 2: Preparar y realizar las reuniones de elicitación/negociación. 98 – Tarea 3: Identificar/revisar los objetivos del sistema. – Tarea 4: Identificar/revisar los requisitos de almacenamiento de información. – Tarea 5: Identificar/revisar los requisitos funcionales. – Tarea 6: Identificar/revisar los requisitos no funcionales. – Tarea 7: Priorizar objetivos y requisitos. Figura B.1: Tareas de elicitación de requisitos Plantillas y patrones lingüísticos para elicitación de requisitos Las plantillas y patrones lingüísticos que se presentan en los siguientes apartados están pensados para utilizarse tanto durante las reuniones de elicitación con clientes y usuarios como para registrar y gestionar los requisitos. Su objetivo es doble: por un lado 99 intentar paliar la falta de propuestas concretas sobre la expresión de requisitos. Por otro lado, también pueden usarse como elementos de elicitación y negociación durante las reuniones con clientes y usuarios de forma similar a las conocidas tarjetas CRC (Clase, Responsabilidad, Colaboración). Ambos aspectos, la estructuración de la información en forma de plantilla y la propuesta de frases "estándar", facilita la redacción de los requisitos, permitiendo a los participantes en las actividades de elicitación centrarse en expresar sus necesidades y no en cómo expresarlas. Plantilla para requisitos funcionales Los sistemas de información no sólo almacenan información, también deben proporcionar servicios usando la información que almacenan. La plantilla de requisitos funcionales, describe casos de uso y ayuda a los clientes y usuarios a responder a la pregunta "¿qué debe hacer el sistema con la información almacenada para alcanzar los objetivos de su negocio?". El significado de los campos específicos de esta plantilla es el siguiente (los campos comunes con la plantilla para requisitos de almacenamiento de información tienen el mismo significado): – Identificador y nombre descriptivo: igual que en la plantilla anterior, excepto que los identificadores de los requisitos funcionales empiezan con RF y que el nombre descriptivo suele coincidir con el objetivo que los actores esperan alcanzar al realizar el caso de uso. No se debe confundir este objetivo con los objetivos del sistema. El objetivo que los actores esperan alcanzar al realizar un caso de uso es de más bajo nivel, por ejemplo registrar un nuevo socio o consultar los pedidos pendientes. 100 Figura B.2: Plantilla para requisitos funcionales (Casos de Uso) 101 – Descripción: para los requisitos funcionales, este campo debe completarse de forma distinta en función de que el caso de uso sea abstracto o concreto. Si el caso de uso es abstracto, deben indicarse los casos de uso en los que se debe realizar, es decir, aquellos desde los que es incluido o a los que extiende. Si, por el contrario, se trata de un caso de uso concreto, se debe indicar el evento de activación que provoca su realización. En versiones anteriores aparecían las expresiones caso de uso abstracto y caso de uso concreto. La experiencia durante la utilización de estas plantillas en proyectos reales nos ha llevado a eliminar dichas expresiones, que resultaban difíciles de entender por los participantes en el proceso de elicitación. – Precondición: en este campo se expresan en lenguaje natural las condiciones necesarias para que se pueda realizar el caso de uso. – Secuencia normal: este campo contiene la secuencia normal de interacciones del caso de uso. En cada paso, un actor o el sistema realiza una o más acciones, o se realiza (se incluye) otro caso de uso. Un paso puede tener una condición de realización, en cuyo caso si se realizara otro caso de uso se tendría una relación de extensión. Se asume que, después de realizar el último paso, el caso de uso termina. – Postcondición: en este campo se expresan en lenguaje natural las condiciones que se deben cumplir después de la terminación normal del caso de uso. – Excepciones: este campo especifica el comportamiento del sistema en el caso de que se produzca alguna situación excepcional durante la realización de un paso determinado. Después de realizar las acciones o el caso de uso asociados a la excepción (una extensión), el caso de uso puede continuar la secuencia normal o terminar, lo que suele ir acompañado por una cancelación de todas las acciones realizadas en el caso de uso dejando al sistema en el mismo estado que antes de comenzar el caso de uso, asumiendo una semántica transaccional. – Rendimiento: en este campo puede especificarse el tiempo máximo para cada paso en el que el sistema realice una acción. 102 – Frecuencia esperada: en este campo se indica la frecuencia esperada de realización del caso de uso, que aunque no es realmente un requisito, es una información interesante para los desarrolladores. Plantilla para requisitos no funcionales Los requisitos no funcionales del sistema se pueden expresar usando la plantilla que a continuación visualizaremos. El único campo específico de esta plantilla es la descripción, que debe completarse con la capacidad que deberá presentar el sistema, el significado del resto de los campos es el mismo que para las plantillas anteriores. Figura B.3: Plantilla para requisitos no funcionales 103 Anexo C: Requerimientos Funcionales y No Funcionales del Trabajo Especial de Grado Tabla C.1: Requerimiento Funcional 1 - Agregar OA en el curso desde el ROA de AMBAR RF - 01 Agregar OA en el curso desde el ROA de AMBAR Requisito Asociado Permitir el almacenamiento de un OA como parte de la estructura de un curso de MOODLE, obtenido desde el ROA de AMBAR por medio de un proceso de búsqueda. Descripción Funcionalidad que permite cargar en un curso de MOODLE un OA recuperado desde el ROA de AMBAR. Precondición El usuario debe estar autenticado en MOODLE y debe poseer privilegios de edición sobre el curso asociado. El curso debe tener activada la opción de edición. Secuencia Normal Paso Acción 1 Seleccionar la opción Enlazar Objeto de Aprendizaje (OA) Básico desde el listado de recursos ó Enlazar Objeto de Aprendizaje (OA) Estandarizado desde el listado de actividades de MOODLE. 2 Completar los datos relativos a la información del OA. 3 Hacer click en el botón Ir al ROA de AMBAR. 4 Realizar la búsqueda del OA en el ROA de AMBAR de acuerdo a los parámetros deseados. 5 Seleccionar el OA a cargar en MOODLE, por medio del botón Cargar en MOODLE. 6 Confirmar el almacenamiento del OA, haciendo click en el botón Guardar y Volver ó Guardar y Mostrar. Post condición El OA forma parte de la estructura de un curso de MOODLE. Excepciones Paso Acción 2 Falta completar datos obligatorios. 4 La búsqueda no retorna resultados. 6 Se cancela el almacenamiento. Rendimiento Paso Acción 4 10 segundos. 6 15 segundos. Frecuencia Esperada 10 objetos / día Estabilidad Alta 104 Tabla C.2: Requerimiento Funcional 2 - Abrir OA en el curso RF - 02 Abrir OA en el curso Requisito Asociado Permitir la visualización en el entorno de MOODLE del OA almacenado desde el ROA de AMBAR. Descripción Funcionalidad que permite visualizar el contenido del OA en un curso de MOODLE. Precondición El usuario debe estar autenticado en MOODLE y el OA debe haber sido almacenado como parte del curso. Secuencia Normal Paso Acción 1 Seleccionar el OA a abrir. 2 Visualizar el contenido del OA. Post condición El usuario consulta el contenido del OA. Rendimiento Paso Acción 2 10 segundos. Frecuencia Esperada 10 objetos / día Estabilidad Alta Tabla C.3: Requerimiento Funcional 3 – Editar información del OA en el curso RF - 03 Editar información del OA en el curso Requisito Asociado Actualizar la información descriptiva del objeto almacenado en el curso. Descripción Funcionalidad que permite modificar los valores de los atributos del objeto previamente almacenado en el curso. Precondición El objeto debe haber sido almacenado en el curso. Secuencia Normal Paso Acción 1 Seleccionar el objeto a editar 2 Modificar los valores actuales de la información 3 Confirmar la edición de la información Post condición La información del OA se encuentra actualizada. Excepciones Paso Acción 2 Falta completar campos obligatorios. 3 Se cancela la edición. Rendimiento Paso Acción 3 10 segundos. Frecuencia Esperada 5 objetos / día Estabilidad Alta 105 Tabla C.4: Requerimiento Funcional 4 – Eliminar OA del curso RF - 04 Eliminar OA del curso Requisito Asociado Permitir la eliminación de un objeto almacenado en el curso. Descripción Funcionalidad que permite eliminar un objeto del conjunto de recursos asociados al curso en MOODLE. Precondición El OA debe haber sido almacenado en el curso. Secuencia Normal Paso Acción 1 Seleccionar el objeto a eliminar 2 Confirmar la eliminación Post condición El OA se elimina de la estructura del curso. Excepciones Paso Acción 2 Se cancela la eliminación. Rendimiento Paso Acción 2 10 segundos. Frecuencia Esperada 3 objetos / dia Estabilidad Alta Tabla C.5: Requerimiento Funcional 5 – Ir al ROA de AMBAR RF - 05 Ir al ROA de AMBAR Requisito Asociado Permitirle al usuario el acceso al ROA de AMBAR desde el entorno de MOODLE, para realizar la búsqueda de un OA y almacenarlo en el curso. Descripción Funcionalidad que permite la navegación del usuario entre MOODLE y el ROA de AMBAR para buscar un OA y almacenarlo en el curso. Precondición El usuario debe estar autenticado en MOODLE Secuencia Normal Paso Acción 1 Hacer click en el botón Ir al ROA de AMBAR. 2 Realizar la búsqueda del OA en el ROA de AMBAR. Post condición El usuario tiene acceso al ROA de AMBAR desde MOODLE. Excepciones Paso Acción 2 Cerrar la nueva ventana. Rendimiento Paso Acción 1 10 segundos. Frecuencia Esperada 10 accesos / día Estabilidad Alta 106 Tabla C.6: Requerimiento Funcional 6 – Almacenar OA en el ROA de AMBAR RF - 06 Almacenar OA en el ROA de AMBAR Requisito Asociado Permitir guardar nuevos OA en el ROA de AMBAR desde MOODLE. Descripción Funcionalidad que le permite al usuario almacenar un nuevo OA, así como la metadata asociada al mismo, en el ROA de AMBAR desde el entorno de MOODLE. Precondición El usuario debe estar debidamente autenticado en MOODLE Secuencia Normal Paso Acción 1 Hacer click en el enlace presentado en el bloque ROA de AMBAR de MOODLE. 2 Hacer click en la opción Almacenar OA del menú principal. 3 Ingresar los datos de identificación del propietario del OA. 4 Ingresar la ubicación del OA. 5 Completar los datos relativos a la metadata del OA. 6 Confirmar el almacenamiento del nuevo OA. Post condición El usuario coloca a disposición un nuevo OA en el ROA de AMBAR desde su curso en MOODLE. Excepciones Paso Acción 3 El usuario no se encuentra registrado en AMBAR. 4 Falta indicar la ubicación del OA. 5 Falta completar datos obligatorios de la metadata del OA. 6 Se cancela el almacenamiento. Rendimiento Paso Acción 5 15 segundos. Frecuencia Esperada 10 objetos / día. Estabilidad Alta 107 Tabla C.7: Requerimiento Funcional 7 – Modificar metadata del OA en el ROA de AMBAR RF - 07 Modificar metadata del OA en el ROA de AMBAR Requisito Asociado Permitir editar la metadata de un OA previamente almacenado en el ROA de AMBAR Descripción Funcionalidad que le permite al usuario editar la metadata del OA previamente almacenada en el ROA de AMBAR a través de la interfaz de conexión desde MOODLE. Precondición El usuario debe estar debidamente autenticado en MOODLE y debe haber accedido al Bloque ROA de AMBAR en MOODLE. Secuencia Normal Paso Acción 1 Hacer click en el enlace presentado en el bloque ROA de AMBAR en MOODLE. 2 Hacer click en la opción Modificar OA en el menú principal. 3 Insertar los datos personales del propietario del OA. 4 Realizar la búsqueda del OA al cual se le modificar su metadata. 5 Seleccionar el OA a modificar. 6 Cambiar los valores de los atributos de la metadata del OA. 7 Confirmar modificación. Post condición El usuario modifica los valores de la metadata existente asociada a un OA de su propiedad, el cual fue almacenado previamente en el ROA de AMBAR. Excepciones Paso Acción 3 El usuario no es el propietario del OA. 4 La búsqueda no arroja resultados. 6 Faltan datos obligatorios. 7 Se cancela la modificación. Rendimiento Paso Acción 4 10 segundos. 7 5 segundos. Frecuencia Esperada 5 objetos / dia Estabilidad Alta 108 Tabla C.8: Requerimiento Funcional 8 – Eliminar OA del ROA de AMBAR RF - 08 Eliminar OA del ROA de AMBAR Requisito Asociado Permitirle al usuario poder eliminar un OA de su propiedad, del ROA de AMBAR desde MOODLE. Descripción Funcionalidad que permite eliminar un OA del conjunto de objetos almacenados en el ROA de AMBAR desde MOODLE. Precondición El usuario debe estar debidamente autenticado en MOODLE. Secuencia Normal Paso Acción 1 Hacer click en el enlace presentado en el bloque ROA de AMBAR en MOODLE. 2 Hacer click en la opción Eliminar OA en el menú principal. 3 Insertar los datos personales del propietario del OA. 4 Realizar la búsqueda del OA a eliminar. 5 Seleccionar el OA a eliminar. 6 Confirmar la eliminación Post condición El usuario visualiza el listado de OA previamente almacenados por él mismo con la opción de seleccionar alguno para su posterior eliminación del repositorio. Excepciones Paso Acción 3 El usuario no es el propietario del OA. 4 La búsqueda no arroja resultados. 5 Se cancela la eliminación Rendimiento Paso Acción 4 10 segundos. 6 5 segundos. Frecuencia Esperada 3 objetos / día Estabilidad Alta Tabla C.9: Requerimientos No Funcionales RNF - 01 Aprendizaje Colaborativo Descripción Proporcionar el espacio (MOODLE) en el cual los usuarios puedan desarrollar y reforzar los aprendizajes tecnológicos. RNF - 02 Confiabilidad Descripción Los sistemas (MOODLE y el ROA de AMBAR) deben comportarse de acuerdo con lo que se espera de ellos en el tiempo preciso, para que los usuarios culminen con éxito las acciones. RNF – 03 Robustez Descripción Los sistemas (MOODLE y el ROA de AMBAR), deben tener la capacidad de dar respuestas ante cualquier circunstancia que no haya sido anticipada en los requerimientos. RNF – 04 Usabilidad Descripción El usuario debe encontrar los sistemas fáciles de usar, de memorizar y pocos propensos a generar errores. RNF - 05 Seguridad Descripción La información en los sistemas debe estar protegida contra accesos no autorizados utilizando mecanismos de autenticación que puedan garantizar el cumplimiento de esto. RNF - 06 Consistencia Descripción No se presentan contradicciones entre las funcionalidades de los sistemas. 109 Anexo D: Descripción de los Roles de Usuario de MOODLE Tabla D: Roles de Usuario de MOODLE Nombre del Rol Descripción Administrador de MOODLE Por lo general pueden ejecutar cualquier acción, en la plataforma, en todos los cursos. Creador del Curso Pueden crear nuevos cursos. Profesor Editor Pueden hacer de todo dentro de un curso, incluyendo cambiar las actividades y evaluar a los estudiantes. Profesor No Editor Pueden enseñar a través del curso y evaluar a los estudiantes, pero no pueden cambiar las actividades. Estudiante Tienen menos privilegios dentro de un curso. Invitado Los huéspedes tienen privilegios mínimos y por lo general no pueden introducir texto en ningún lugar. Usuario Autenticado Todos los usuarios registrados. 110 Anexo E: Diseño de los servicios disponibles en la Capa de Servicios Web para el Repositorio de Metadata, ROA y el Repositorio de Usuarios de AMBAR Figura E.1: Servicios Web del Repositorio de Metadata de AMBAR. 111 Figura E.2: Servicios Web del Repositorio de Metadata de AMBAR. (Cont.) 112 Figura E.3: Servicios Web del Repositorio de Metadata de AMBAR. (Cont2.) 113 Figura E.4: Servicios Web del ROA de AMBAR. Figura E.5: Servicios Web del Repositorio de Usuarios de AMBAR. 114 Anexo F: Detalle de los Requerimientos Funcionales asociados a la Iteración 2 del proyecto Figura F.1: Diagrama de Casos de Uso – Ingresar datos del propietario del OA. Figura F.2: Diagrama de Casos de Uso – Ingresar Metadata. 115 Figura F.3: Diagrama de Casos de Uso – Metadata General Figura F.4: Diagrama de Casos de Uso – Metadata Ciclo de Vida 116 Figura F.5: Diagrama de Casos de Uso – Meta - Metadata Figura F.6: Diagrama de Casos de Uso – Metadata Técnica 117 Figura F.7: Diagrama de Casos de Uso – Metadata Educacional 118 Figura F.8: Diagrama de Casos de Uso – Metadata Autor Figura F.9: Diagrama de Casos de Uso – Metadata Relación Figura F.10: Diagrama de Casos de Uso – Metadata Anotaciones Figura F.11: Diagrama de Casos de Uso – Metadata Clasificaciones 119 Anexo G: Códigos asociados a la construcción del tipo de recurso “Objeto de Aprendizaje (OA) Básico” en MOODLE Figura G.1: Porción del código de la función display() de resource.class.php. 120 Figura G.2: Porción del código de la función setup_elements() de resource.class.php. 121 Figura G.3: Validación del tipo de recurso para su posterior identificación. Función resource_get_coursemodule_info() del archivo lib.php. 122 Anexo H: Códigos asociados a la construcción del módulo de actividades “Objeto de Aprendizaje (OA) Estandarizado” en MOODLE Figura H.1: Código del archivo lang/oa.php del módulo de actividades Objeto de Aprendizaje (OA) Estandarizado de MOODLE. Figura H.2: Código del archivo mod_form.php del módulo de actividades Objeto de Aprendizaje (OA) Estandarizado de MOODLE. 123 Figura H.3: Porción de código del archivo mod_form.php del módulo SCORM de MOODLE. 124 Anexo I: Código asociado a la construcción del bloque “ROA de AMBAR” en MOODLE Figura I: Porción de código de la función get_content() del archivo block_ambar_roa.phpUNIVERSIDAD CENTRAL DE VENEZUELA UNIVERSIDAD CENTRAL DE VENEZUELA FACULTAD DE CIENCIAS ESCUELA DE COMPUTACIÓN CARACAS - VENEZUELA INTEGRACIÓN DEL REPOSITORIO DE OBJETOS DE APRENDIZAJE DE AMBAR CON LA PLATAFORMA MOODLE Trabajo Especial de Grado presentado ante la ilustre Universidad Central de Venezuela Por los Bachilleres: Br. Joubert Castellanos, Irian Carolina Br. Ramírez Duque, Elizabeth del Carmen Tutoras: Prof. Yosly Hernández Prof. Vanessa Miguel Caracas, Febrero 2011 ii ACTA Quienes suscriben, miembros del Jurado designado por el Consejo de la Escuela de Computación, para examinar el Trabajo Especial de Grado presentado por las Bachilleres Irian Carolina Joubert Castellanos C.I.:18.028.186 y Elizabeth del Carmen Ramírez Duque C.I.:17.058.660, con el título: “Integración del Repositorio de Objetos de Aprendizaje de AMBAR con la plataforma MOODLE”, a fines de optar al título de Licenciado en Computación, dejan constancia de lo siguiente: Leído como fue, dicho trabajo por cada uno de los miembros del Jurado, se fijó el día 18 de febrero de 2011 a las 09:00 am, para que sus autoras lo defiendan en forma pública, lo que hicieron en el aula PA-III de la Escuela de Computación de la Facultad de Ciencias de la Universidad Central de Venezuela, mediante una presentación oral de su contenido, luego de lo cual respondieron las preguntas formuladas. Finalizada la defensa pública del Trabajo Especial de Grado, el Jurado decidió aprobarlo. En fe de lo cual se levanta la presente Acta, en Caracas a los dieciocho (18) días del mes de febrero del año dos mil once dejándose también constancia de que actuó como Coordinador del Jurado la Profesora Tutor Yosly Hernández. ______________________ _______________________ Prof. Yosly Hernández Prof. Vanessa Miguel Tutor Tutor ______________________ ________________________ Prof. Nora Montaño Prof. Antonio Silva Jurado Principal Jurado Principal iii RESUMEN AMBAR es un proyecto de investigación de la Universidad Central de Venezuela, que busca proporcionar herramientas de software que apoyen el proceso de enseñanza y aprendizaje. Actualmente, uno de sus principales componentes es el Repositorio de Objetos de Aprendizaje (ROA) de AMBAR, el cual se encuentra integrado con un Repositorio de Metadata, a través de la Capa de Servicios Web. El objetivo general del presente trabajo fue integrar el ROA de AMBAR con la plataforma MOODLE, el Sistema de Gestión de Aprendizaje (LMS) utilizado por la Universidad Central de Venezuela como plataforma de Educación a Distancia, a través de la Capa de Servicios Web. Entre el ROA de AMBAR y MOODLE no existía una conexión transparente para el usuario final, lo que resultaba ineficiente y complicaba el proceso de construcción de un curso particular si se deseaba utilizar Objetos de Aprendizaje (OA) alojados en dicho repositorio. Para ello se empleó el Modelado Ágil (MA) como Método de Desarrollo de Software, en el cual a través de cuatro iteraciones se creó el tipo de recurso “Objeto de Aprendizaje (OA) Básico”, el módulo de actividades “Objeto de Aprendizaje (OA) Estandarizado” y el bloque “ROA de AMBAR” en la plataforma MOODLE; y se rediseñó el ROA de AMBAR en cuanto a su interfaz gráfica de usuario y sus métodos internos. Con este trabajo, se está facilitando la gestión de los OA almacenados en el repositorio, desde el mismo entorno de trabajo de MOODLE, lo cual resulta en grandes beneficios para los usuarios de dicha plataforma, debido a que pueden incorporar los OA directamente en su curso y hacerlos disponibles para su uso general. Además, permite hacer del ROA de AMBAR y de MOODLE sistemas mucho más completos al incrementar sus usuarios, retroalimentación, funcionalidades y recursos, respectivamente. Palabras Clave: Objetos de Aprendizaje (OA), AMBAR, MOODLE, Repositorio de Objetos de Aprendizaje (ROA), Servicios Web, e-Learning, LMS. iv ÍNDICE GENERAL ÍNDICE DE FIGURAS ................................................................................................... viii ÍNDICE DE TABLAS ..................................................................................................... xiii TABLA DE ABREVIATURAS UTILIZADAS .............................................................. xiv INTRODUCCIÓN ............................................................................................................. 1 CAPÍTULO I: .................................................................................................................... 3 EL PROBLEMA DE INVESTIGACIÓN ........................................................................... 3 1.1.-Planteamiento del problema ..................................................................................... 3 1.2.-Justificación ............................................................................................................. 5 1.3.-Objetivo General...................................................................................................... 6 1.4.- Objetivos Específicos.............................................................................................. 6 1.5.-Alcance.................................................................................................................... 6 1.6.- Antecedentes .......................................................................................................... 8 1.7.-Bases legales ......................................................................................................... 10 1.8.-Método de Desarrollo de Software ......................................................................... 11 CAPÍTULO II: ................................................................................................................. 17 MARCO CONCEPTUAL ................................................................................................ 17 2.1.- Proyecto AMBAR ................................................................................................ 18 2.1.1.-Repositorio de Objetos de Aprendizaje de AMBAR.......................................... 21 2.1.2.- Características y Funcionalidades del Repositorio de Objetos de Aprendizaje de AMBAR ..................................................................................................................... 22 2.2.- MOODLE ............................................................................................................. 30 2.2.1.-Arquitectura de MOODLE................................................................................ 30 v 2.2.2.-Enfoque Pedagógico de MOODLE ................................................................... 31 2.2.3.-Características Generales de MOODLE ............................................................ 32 2.2.4.-Actividades y Recursos de MOODLE ............................................................... 33 2.2.5.-Funcionalidad de MOODLE ............................................................................. 34 2.2.6.-Tipos de Cursos de MOODLE .......................................................................... 34 2.2.7.-Administración de MOODLE ........................................................................... 35 2.2.8.-Módulos de MOODLE ..................................................................................... 35 2.2.9.-Ventajas y desventajas de usar MOODLE ......................................................... 36 CAPÍTULO III: ................................................................................................................ 39 MARCO METODOLÓGICO ........................................................................................... 39 3.1.-Iteración 0: Iniciación del Proyecto ........................................................................ 39 3.1.1.-Fase I: Contemplar necesidades iniciales .......................................................... 39 3.1.1.1-Requerimientos Funcionales y No Funcionales .......................................... 40 3.1.1.2.-Pila de Requerimientos ............................................................................. 41 3.1.1.3.-Modelado General de los Casos de Uso ..................................................... 41 3.1.2.-Fase II: Descripción de la arquitectura de MOODLE y del ROA de AMBAR ... 44 3.2.-Iteración 1: Migración del ROA y del Repositorio de Metadata de AMBAR, implementación del Repositorio de Usuarios, adaptación de servicios web existentes e implementación de nuevos servicios de la Capa de Servicios Web de AMBAR. ........... 44 3.2.1.-Fase I: Modelado de la iteración: Migración del SMBD DB4O a MYSQL ........ 45 3.2.2.- Fase II: Desarrollo y Prueba: Adaptación de servicios existentes e implementación de nuevos servicios de la Capa de Servicios Web de AMBAR. ......... 48 3.3.-Iteración 2: Rediseño de la interfaz gráfica de usuario del ROA de AMBAR. ........ 49 3.3.1. Fase I: Modelado de la iteración: ....................................................................... 49 vi 3.3.1.1.- Refinamiento del Diagrama de Casos de Uso ........................................... 49 3.3.1.2.- Modelado de las Actividades.................................................................... 52 3.3.2.-Fase II: Desarrollo y Prueba: Interfaz del ROA de AMBAR ............................. 54 3.4.-Iteración 3: Desarrollo del tipo de recurso “Objeto de Aprendizaje (OA) Básico”, del módulo de actividades “Objeto de Aprendizaje (OA) Estandarizado” y del bloque “ROA de AMBAR” en MOODLE. .......................................................................................... 60 3.4.1.-Fase I: Modelado de la iteración: ...................................................................... 60 3.4.1.1.-Refinamiento del Diagrama de Casos de Uso ............................................ 60 3.4.1.2.- Modelado de las Actividades.................................................................... 64 3.4.2.-Fase II: Desarrollo y Prueba: Interfaz del tipo de recurso “Objeto de Aprendizaje (OA) Básico”, del módulo de actividades “Objeto de Aprendizaje (OA) Estandarizado” y del bloque “ROA de AMBAR” de MOODLE. ......................................................... 66 3.4.2.1.- Recurso “Objeto de Aprendizaje (OA) Básico” ........................................ 67 3.4.2.2.- Actividad “Objeto de Aprendizaje (OA) Estandarizado” .......................... 69 3.4.2.3.- Bloque “ROA de AMBAR” en MOODLE ............................................... 71 CAPÍTULO IV ................................................................................................................. 73 ANÁLISIS DE RESULTADOS ....................................................................................... 73 4.1.- Descripción de la interfaz del ROA de AMBAR ................................................... 73 4.2.- Descripción de la interfaz del tipo de recurso “Objeto de Aprendizaje (OA) Básico”, del módulo de actividades “Objeto de Aprendizaje (OA) Estandarizado” y del bloque “ROA de AMBAR”, de MOODLE ............................................................................... 80 CONCLUSIONES ........................................................................................................... 87 RECOMENDACIONES .................................................................................................. 89 REFERENCIAS ............................................................................................................... 90 vii ANEXOS ......................................................................................................................... 95 Anexo A: Representación gráfica de las iteraciones y fases del proyecto de acuerdo al Modelado Ágil (MA) .................................................................................................... 96 Anexo B: Metodología para la elicitación de Requisitos de Sistemas de Software ......... 97 Anexo C: Requerimientos Funcionales y No Funcionales del Trabajo Especial de Grado…………………………………………………………………………………...103 Anexo D: Descripción de los Roles de Usuario de MOODLE ..................................... 109 Anexo E: Diseño de los servicios disponibles en la Capa de Servicios Web para el Repositorio de Metadata, ROA y el Repositorio de Usuarios de AMBAR ................... 110 Anexo F: Detalle de los Requerimientos Funcionales asociados a la Iteración 2 del proyecto ...................................................................................................................... 114 Anexo G: Códigos asociados a la construcción del tipo de recurso “Objeto de Aprendizaje (OA) Básico” en MOODLE .................................................................... 119 Anexo H: Códigos asociados a la construcción del módulo de actividades “Objeto de Aprendizaje (OA) Estandarizado” en MOODLE ......................................................... 122 Anexo I: Código asociado a la construcción del bloque “ROA de AMBAR” en MOODLE ................................................................................................................... 124 viii ÍNDICE DE FIGURAS Figura 1: Ciclo de Vida del Modelado Ágil (MA) (Ambler, 2002) ................................... 13 Figura 2: Modelado Ágil (MA) a través del ciclo de desarrollo (Ambler, 2002). .............. 13 Figura 3: Modelado de las iteraciones: proceso de gestión de cambios de requerimientos. (Ambler, 2002) ................................................................................................................. 15 Figura 4: Modelo Conceptual del ROA de AMBAR (Quintero, 2009) ............................. 25 Figura 5: Ciclos de desarrollo de los Servicios Web del ROA de AMBAR ...................... 26 Figura 6: Modelo Conceptual del Repositorio de Metadata de AMBAR (Alegría y Nieves, 2008) ................................................................................................................... 27 Figura 7: Modelo Conceptual del ROA de AMBAR modificado (Quintero, 2009) .......... 29 Figura 8: Pila de Requerimientos de la Integración ROA de AMBAR - MOODLE ......... 41 Figura 9: Diagrama de Casos de Uso de la vista general de los usuarios de la Integración ROA de AMBAR – MOODLE ......................................................................................... 42 Figura 10: Diagrama de Casos de Uso - Usuario “Administrador del curso” con la funcionalidad “Administrar OA”. ..................................................................................... 43 Figura 11: Particularización de la funcionalidad “Almacenar OA desde el ROA de AMBAR”. ........................................................................................................................ 43 Figura 12: Diagrama de Casos de Uso - Usuario “Administrador del curso” con la funcionalidad “Gestionar OA”. ......................................................................................... 43 Figura 13: Diagrama de Casos de Uso – Usuarios “Administrador del Curso” y “Usuario del curso” con la funcionalidad “Visualizar OA”. ............................................................. 44 Figura 14: Modelo Conceptual actual del ROA de AMBAR ............................................ 46 Figura 15: Modelo Conceptual actual del Repositorio de Metadata de AMBAR .............. 47 Figura 16: Modelo Conceptual del Repositorio de Usuarios de AMBAR ......................... 48 ix Figura 17: Diagrama de Casos de Uso – Almacenar OA en el ROA de AMBAR. ............ 50 Figura 18: Diagrama de Casos de Uso – Eliminar OA del ROA de AMBAR. .................. 50 Figura 19: Diagrama de Casos de Uso – Modificar metadata del OA en el ROA de AMBAR ........................................................................................................................... 51 Figura 20: Diagrama de Actividades: Administrador del Curso en MOODLE – Buscar OA en el ROA de AMBAR ..................................................................................................... 52 Figura 21: Diagrama de Actividades: Administrador del Curso en MOODLE – Gestionar OA en el ROA de AMBAR .............................................................................................. 53 Figura 22: Diagrama de Secuencia del ROA de AMBAR para Buscar OA – Búsqueda Básica. ............................................................................................................................. 55 Figura 23: Diagrama de Secuencia del ROA de AMBAR para Buscar OA – Búsqueda Avanzada. ........................................................................................................................ 56 Figura 24: Diagrama de Secuencia del ROA de AMBAR para Almacenar OA. ............... 57 Figura 25: Diagrama de Secuencia del ROA de AMBAR para Modificar OA ................. 58 Figura 26: Diagrama de Secuencia del ROA de AMBAR para Eliminar OA ................... 59 Figura 27: Diagrama de Casos de Uso - Agregar OA en el curso desde el ROA de AMBAR. .......................................................................................................................... 61 Figura 28: Diagrama de Casos de Uso - Ir al ROA de AMBAR ....................................... 62 Figura 29: Diagrama de Casos de Uso - Editar información del OA en el curso. .............. 63 Figura 30: Diagrama de Casos de Uso - Eliminar OA del Curso. ..................................... 63 Figura 31: Diagrama de Actividades: Administrador del Curso en MOODLE – Agregar OA al Curso ..................................................................................................................... 64 Figura 32: Diagrama de Actividades: Administrador del Curso en MOODLE – OA del Curso................................................................................................................................ 65 Figura 33: Diagrama de Actividades: Usuario del Curso en MOODLE – OA del Curso .. 65 x Figura 34: Estructura de directorios de MOODLE ........................................................... 67 Figura 35: Estructura de directorios de la carpeta oaBasico en MOODLE. ...................... 68 Figura 36: Estructura de directorios de la carpeta OA en MOODLE ................................ 70 Figura 37: Estructura de directorios de la carpeta roa_ambar en MOODLE. ................... 72 Figura 38: Banner de la aplicación del ROA de AMBAR ................................................ 73 Figura 39: Búsqueda Básica ............................................................................................ 74 Figura 40: Búsqueda Avanzada. ...................................................................................... 74 Figura 41: Búsqueda Avanzada (Cont.). .......................................................................... 75 Figura 42: Listado de Resultados para las búsquedas. ...................................................... 76 Figura 43: Almacenar OA – Paso 1. ................................................................................ 77 Figura 44: Almacenar OA – Paso 2. ................................................................................ 77 Figura 45: Almacenar OA – Paso 3. ................................................................................ 78 Figura 46: Almacenar OA – Paso 3 (Cont.). .................................................................... 78 Figura 47: Almacenar OA - Usuario No Registrado......................................................... 79 Figura 48: Registro de Usuario. ....................................................................................... 79 Figura 49: Listado de Recursos y Listados de Actividades de MOODLE......................... 81 Figura 50: Cabecera general del recurso “Objeto de Aprendizaje (OA) Básico” de MOODLE. ....................................................................................................................... 81 Figura 51: Cabeceras Enlazar un Objeto de Aprendizaje (OA) Básico, Ventana, Parámetros y Ajustes comunes del módulo; y botones de acción del Recurso “Objeto de Aprendizaje (OA) Básico” de MOODLE. ......................................................................... 82 Figura 52: Ejemplo de un OA básico en un curso de MOODLE, junto con su logo distintivo. ......................................................................................................................... 82 Figura 53: Formulario del módulo de actividades “Objeto de Aprendizaje (OA) Estandarizado” de MOODLE. .......................................................................................... 84 xi Figura 54: Opciones de edición de un OA en MOODLE ................................................. 85 Figura 55: Bloque “ROA de AMBAR” en MOODLE. .................................................... 85 Figura 56: Visibilidad del bloque “ROA de AMBAR” en MOODLE de acuerdo al rol de usuario. ............................................................................................................................ 86 Figura B.1: Tareas de elicitación de requisitos ................................................................. 98 Figura B.2: Plantilla para requisitos funcionales (Casos de Uso) ................................... 100 Figura B.3: Plantilla para requisitos no funcionales ....................................................... 102 Figura E.1: Servicios Web del Repositorio de Metadata de AMBAR. ............................ 110 Figura E.2: Servicios Web del Repositorio de Metadata de AMBAR. (Cont.) ............... 111 Figura E.3: Servicios Web del Repositorio de Metadata de AMBAR. (Cont2.) .............. 112 Figura E.4: Servicios Web del ROA de AMBAR. ......................................................... 113 Figura E.5: Servicios Web del Repositorio de Usuarios de AMBAR. ............................ 113 Figura F.1: Diagrama de Casos de Uso – Ingresar datos del propietario del OA............. 114 Figura F.2: Diagrama de Casos de Uso – Ingresar Metadata. ........................................ 114 Figura F.3: Diagrama de Casos de Uso – Metadata General .......................................... 115 Figura F.4: Diagrama de Casos de Uso – Metadata Ciclo de Vida ................................ 115 Figura F.5: Diagrama de Casos de Uso – Meta - Metadata ............................................ 116 Figura F.6: Diagrama de Casos de Uso – Metadata Técnica .......................................... 116 Figura F.7: Diagrama de Casos de Uso – Metadata Educacional ................................... 117 Figura F.8: Diagrama de Casos de Uso – Metadata Autor ............................................. 118 Figura F.9: Diagrama de Casos de Uso – Metadata Relación ......................................... 118 Figura F.10: Diagrama de Casos de Uso – Metadata Anotaciones ................................. 118 Figura F.11: Diagrama de Casos de Uso – Metadata Clasificaciones ............................ 118 Figura G.1: Porción del código de la función display() de resource.class.php. .............. 119 xii Figura G.2: Porción del código de la función setup_elements() de resource.class.php. .. 120 Figura G.3: Validación del tipo de recurso para su posterior identificación. Función resource_get_coursemodule_info() del archivo lib.php. .................................................. 121 Figura H.1: Código del archivo lang/oa.php del módulo de actividades Objeto de Aprendizaje (OA) Estandarizado de MOODLE. ............................................................. 122 Figura H.2: Código del archivo mod_form.php del módulo de actividades Objeto de Aprendizaje (OA) Estandarizado de MOODLE. ............................................................. 122 Figura H.3: Porción de código del archivo mod_form.php del módulo SCORM de MOODLE. ..................................................................................................................... 123 Figura I: Porción de código de la función get_content() del archivo block_ambar_roa.php ....................................................................................................................................... 124 xiii ÍNDICE DE TABLAS Tabla 1: Objetivos y principios del Modelado Ágil (MA) (Ambler, 2002) ....................... 12 Tabla 2: Métodos y Servicios del Repositorio de Metadata de AMBAR................... 26 (Alegría y Nieves, 2008).................................................................................................. 26 Tabla 3: Algunos módulos de MOODLE y sus aspectos relevantes. ................................ 37 Tabla 4: Ventajas y Desventajas de usar Moodle ............................................................. 38 Tabla A: Iteraciones y Fases del proyecto ........................................................................ 96 Tabla C.1: Requerimiento Funcional 1 - Agregar OA en el curso desde el ROA de AMBAR ......................................................................................................................... 103 Tabla C.2: Requerimiento Funcional 2 - Abrir OA en el curso ....................................... 104 Tabla C.3: Requerimiento Funcional 3 – Editar información del OA en el curso............ 104 Tabla C.4: Requerimiento Funcional 4 – Eliminar OA del curso ................................... 105 Tabla C.5: Requerimiento Funcional 5 – Ir al ROA de AMBAR ................................... 105 Tabla C.6: Requerimiento Funcional 6 – Almacenar OA en el ROA de AMBAR .......... 106 Tabla C.7: Requerimiento Funcional 7 – Modificar metadata del OA en el ROA de AMBAR ......................................................................................................................... 107 Tabla C.8: Requerimiento Funcional 8 – Eliminar OA del ROA de AMBAR ................ 108 Tabla C.9: Requerimientos No Funcionales ................................................................... 108 Tabla D: Roles de Usuario de MOODLE ....................................................................... 109 xiv TABLA DE ABREVIATURAS UTILIZADAS ADL Advanced Distributed Learning (Aprendizaje Avanzado y Distribuido) MA Modelado Ágil AMBAR Ambientes de Enseñanza-Aprendizaje Constructivistas basado en Objetos de Aprendizaje MERLOT Multimedia Educational Resource for Learning and Online Teaching CAREO Campus Alberta Repository of Educational Objects MOODLE Modular Object-Oriented Dynamic Learning Environment (Entorno de Aprendizaje Dinámico Orientado a Objetos y Modular) CLOE Co-operative Learning Object Exchange MVC Modelo Vista Controlador DAO Data Access Object (Datos de Acceso a Objetos) NCLB No Child Left Behind DB4O Data Base For Object OA Objeto de Aprendizaje ESB Enterprise Services Bus (Bus de Integración Empresarial) PHP Hipertext Preprocessor (Lenguaje de Procesamiento de Hipertexto) GIFT Graphics Interchange Format (Formato Gráfico de Intercambio) ROA Repositorio de Objetos de Aprendizaje GLP General Public Licence (Licencia Pública General) RSS Really Simple Syndication HTML HyperText Markup Language (Lenguaje de Marcado de Hipertexto) SCORM Sharable Content Object Reference Model (Modelo de Referencia de Objetos de Contenido Compartible) IMAP Internet Message Access Protocol (Protocolo de Red de Acceso a Mensajes Electrónicos) SMBDOO Sistema Manejador de Base de Datos Orientada a Objetos IMS-LD IMS Learning Design (Diseño de Aprendizaje IMS) SMDB Sistema Manejador de Base de Datos JSP Java Server Pages SOA Arquitectura Orientada a Servicio LACLO Latin American Community of Learning Objects (Comunidad Latinoamericana de Objetos de Aprendizaje) SOAP Simple Object Access Protocol (Protocolo de Acceso Objetos Simples+B7) LAMS Learning Activity Management System (Sistema de Control de Actividades de Aprendizaje) TIC Tecnología de la Información y Comunicación LDAP Lightweight Directory Access Protocol (Protocolo Ligero de Acceso a Directorios) UP Unified Process (Proceso Unificado) LMS Learning Management System (Sistema de Gestión de Aprendizaje) WSDL Web Service Description Language (Lenguaje de Descripción de Servicios Web) LOM Learning Object Metadata (Metadatos de Objetos de Aprendizaje) XML eXtensible Markup Language (Lenguaje de Marcado Extensible) 1 INTRODUCCIÓN En la actualidad, la modalidad de formación e-Learning o Aprendizaje Electrónico se puede considerar como el concepto que involucra cualquier actividad educativa basada en medios electrónicos y la entrega de contenidos digitales por diferentes vías. Formalmente es la “capacitación no presencial que, a través de plataformas tecnológicas, posibilita y flexibiliza el acceso y el tiempo en el proceso de enseñanza-aprendizaje, adecuándolos a las habilidades, necesidades y disponibilidades de cada discente, además de garantizar ambientes de aprendizaje colaborativo mediante el uso de herramientas de comunicación síncrona y asíncrona, potenciando en suma el proceso de gestión basado en competencias” (García, 2009, p.2). Uno de los aspectos más relevantes de esta modalidad de aprendizaje, es la utilización de recursos digitales como Software Educativos, Objetos de Aprendizaje (OA), entre otros; a través del uso de Sistemas de Gestión de Aprendizaje (LMS), como por ejemplo MOODLE (Modular Object-Oriented Dynamic Learning Environment). Específicamente los OA, pueden ser almacenados en repositorios, los cuales tienen como función principal resguardarlos, hacerlos disponibles para diversos usos y compartirlos con otras aplicaciones, facilitando con esto el flujo de contenidos y la expansión de servicios. Uno de estos repositorios es el Repositorio de Objetos de Aprendizaje (ROA) de AMBAR, el cual ha sido desarrollado como parte del proyecto de investigación AMBAR de la Escuela de Computación de la Facultad de Ciencias de la Universidad Central de Venezuela. Con base en la rápida introducción del Aprendizaje Electrónico en todos los ámbitos del quehacer mundial, es importante mantener la mayor interconexión entre repositorios de recursos digitales, especialmente los ROA; y los sistemas de gestión de los mismos, para facilitarle al docente o a cualquier usuario en general, la consulta, administración y reutilización de tales elementos. Es por ello, que el objetivo general del presente trabajo es integrar el ROA de AMBAR con la plataforma MOODLE, a través de la Capa de Servicios Web. 2 La siguiente investigación consta de cuatro capítulos, denominados El Problema de Investigación, Marco Conceptual, Marco Metodológico y Análisis de Resultados. El primer capítulo, está basado en los aspectos: planteamiento del problema, justificación, objetivo general y específicos, alcance, método de desarrollo de software, entre otros. En el segundo capítulo, se presentan aspectos relevantes del sistema AMBAR, con el propósito de centrar posteriormente el estudio, en su ROA. De este repositorio se destacan sus características, funciones, implementación y su modelo conceptual. Además, se describen aspectos relevantes de la plataforma MOODLE, tales como: arquitectura, características, actividades y recursos, tipos de cursos, módulos, entre otros. En el tercer capítulo, se explican cada una de las iteraciones realizadas para dar cumplimiento al objetivo general de este trabajo, según el método de desarrollo de software Modelado Ágil (MA). Por otra parte, en el cuarto capítulo, se describen los resultados obtenidos durante el desarrollo del trabajo. Por último, se presentan, las conclusiones y recomendaciones más importantes para proyectos futuros, las referencias bibliográficas consultadas y algunos anexos. 3 CAPÍTULO I: EL PROBLEMA DE INVESTIGACIÓN En el siguiente capítulo se describe el planteamiento del problema, justificación, el objetivo general y los respectivos objetivos específicos. Además, se plantea el alcance del trabajo, así como los antecedentes al mismo. Posteriormente, se explican las bases legales del trabajo y los aspectos relacionados al método de desarrollo de software empleado. 1.1.-Planteamiento del problema En la Escuela de Computación, Facultad de Ciencias de la Universidad Central de Venezuela se ha desarrollado un proyecto de investigación, conocido como Sistema Generador de Ambientes de Enseñanza-Aprendizaje Constructivistas basado en Objetos de Aprendizaje (AMBAR), el cual ha sido concebido, según López, Miguel y Montaño (2008), como un trabajo con una visión interdisciplinaria, incluyendo un enfoque cognitivo- constructivista del aprendizaje, los conceptos de Objeto de Aprendizaje (OA) y Repositorio de Objetos de Aprendizaje (ROA), los estándares para el desarrollo de ambientes de aprendizaje en línea y la visión de web semántica. Uno de los componentes más importantes de AMBAR, es el ROA, el cual actualmente se encuentra integrado a través de la capa de servicios web con el Repositorio de Metadata, desarrollado para “permitir la organización estructurada de los atributos que describen a los OA, facilitando su búsqueda, recuperación y administración” (Quintero, 2009, p.40). El ROA de AMBAR es capaz de soportar el almacenamiento, consulta, uso y reutilización de diversos artefactos generados, a través de una interfaz sencilla y usable; el manejo de versiones y diferentes niveles de granularidad de los OA, entre otros. Su funcionamiento está determinado por una aplicación de usuario, la cual interactúa con la capa de servicios web, donde existe completa correspondencia entre los servicios de ambos repositorios, permitiendo la comunicación entre los mismos a nivel de los OA y su 4 metadata, lo que facilita la búsqueda, recuperación y modificación de los OA por parte del usuario final y permite establecer una estandarización en el almacenamiento de los mismos. Por otro lado, siguiendo la filosofía constructivista social en el proceso de enseñanza-aprendizaje, se encuentran diversas plataformas de gestión de contenido, entre las cuales una de las más utilizadas y premiadas a nivel internacional de acuerdo al estudio realizado en marzo del 2008 por el Instruccional Tecnology Council (http://www.itcnetwork.org), es el Sistema de Gestión de Aprendizaje (LMS) MOODLE. Según la versión 2007 de la documentación publicada por la Comunidad MOODLE (http://docs.moodle.org/es/Acerca_de_Moodle), es el acrónimo de Modular Object- Oriented Dynamic Learning Environment (Entorno de Aprendizaje Dinámico Orientado a Objetos y Modular). En este sistema se crean diversas comunidades en línea, con la finalidad de permitir una amplia gama de modos de enseñanza, la generación de contenido de aprendizaje y la interacción docente-alumno en un entorno virtual; permitiéndole al docente, entre otras funcionalidades, enlazar un OA como parte de la estructura de su curso, enriqueciendo el contenido e incrementando la interactividad del mismo. Anterior al desarrollo de este trabajo, para poder realizar tal enlace, era necesario almacenar el objeto de forma local a la máquina del docente, para posteriormente cargarlo en la plataforma. Esto resultaba ineficiente y requería la realización de un proceso de búsqueda y descarga de tal recurso desde diversos ROA externos a MOODLE, retrasando y complicando el proceso de construcción de un curso determinado, además que no se podía explotar en su totalidad las funcionalidades de tales repositorios, por no existir una interconexión entre ellos y el resto de las plataformas de aprendizaje. Por otra parte, el hecho de que desde MOODLE el docente sólo pudiera contar con sus propios OA, por no tener acceso a un repositorio determinado, limitaba en gran medida la capacidad de reutilización inherente a la naturaleza de este tipo de recurso digital. En tal sentido, se precisó establecer la conexión del ROA de AMBAR con la plataforma MOODLE, poniendo a disposición de los docentes, el conjunto de OA disponibles en el mismo, de tal forma que éstos puedan ser parte de la estructura de cualquier curso en desarrollo en la plataforma virtual. http://www.itcnetwork.org/ http://docs.moodle.org/es/Acerca_de_Moodle 5 Con base en lo anterior, se planteó como pregunta general de investigación ¿Cómo realizar la integración del Repositorio de Objetos de Aprendizaje de AMBAR con la plataforma MOODLE, con el fin de aprovechar las funcionalidades de ambos sistemas? 1.2.-Justificación Con la aparición de la Tecnología de la Información y Comunicación (TIC), en el proceso de enseñanza y aprendizaje, se hace imprescindible interconectar los diferentes sistemas disponibles en el amplio mundo del Internet, tales como MOODLE y AMBAR, buscando complementar los recursos existentes, obteniendo así la información más completa posible y aumentando las oportunidades de crear recursos mucho más dinámicos e interactivos, que apoyen al mencionado proceso, en base a una educación de calidad. Por ello, es necesario llevar a cabo los proyectos de investigación, en los cuales se establezcan las integraciones entre sistemas afines de un modo eficiente. Esta investigación sentó las bases, en cuanto a la conexión de un ROA con una plataforma de aprendizaje independiente. Esto resultó importante, debido a que MOODLE es una de las plataformas de enseñanza virtual más utilizadas en diversos niveles de la educación formal internacionalmente, por ejemplo según la publicación de Molist (2008), sólo en España para el 2008, tenía registrados más de 25 millones de usuarios y más de 4 mil escuelas, institutos, academias, universidades y empresas. En el contexto nacional, es la plataforma sobre la cual se ha desarrollado el Sistema de Educación a Distancia de la Universidad Central de Venezuela (SEDUCV), el cual alberga los campos virtuales de las diversas facultades de tan reconocida universidad. Anteriormente la plataforma MOODLE, sólo podía manejar OA en formato SCORM (Sharable Content Object Reference Model), así que al incorporarle nuevas funcionalidades, en este caso, la posibilidad de asociar un OA recuperado de AMBAR, el cual se puede encontrar en otro formato, se abrió una nueva puerta para el enriquecimiento de la educación a nivel mundial, en base a esos recursos desarrollados a través de las nuevas TIC. 6 Además, el hecho de que los docentes puedan contar no sólo con sus propios OA sino también con otros, almacenados en diversos ROA y puedan compartir tales objetos, almacenándolos en cualquier repositorio, todo esto desde el mismo entorno de MOODLE, fomenta la reutilización de los OA dentro de una comunidad global y convierte a ésta plataforma en una herramienta de generación de contenido de aprendizaje mucho más poderosa y enriquecida tecnológicamente. 1.3.-Objetivo General Integrar el Repositorio de Objetos de Aprendizaje de AMBAR con la plataforma MOODLE a través de la Capa de Servicios Web. 1.4.- Objetivos Específicos Definir las funcionalidades del ROA de AMBAR y de la plataforma MOODLE necesarios para la integración. Determinar los formatos de Objetos de Aprendizaje con los que se trabajarán. Analizar los roles de usuarios que tendrán acceso al ROA de AMBAR desde la plataforma MOODLE. Migrar el ROA y el Repositorio de Metadata de AMBAR de un Sistema Manejador de Base de Datos Orientado a Objetos a uno Relacional. Implementar el Repositorio de Usuarios de AMBAR. Desarrollar las interfaces de conexión entre el ROA de AMBAR y MOODLE. 1.5.-Alcance El alcance del presente trabajo, viene dado por una parte, por la implementación en la plataforma MOODLE, de un nuevo tipo de recurso, llamado “Objeto de Aprendizaje (OA) Básico” y de un nuevo módulo de actividades, denominado “Objeto de Aprendizaje (OA) Estandarizado”, mediante los cuales se permite la conexión con el ROA de AMBAR, 7 el acceso a los OA almacenados en dicha base de datos y la incorporación de un objeto recuperado del mismo, en la estructura de un curso particular; y por la otra, por la construcción de un bloque en la misma plataforma, llamado “ROA de AMBAR”, para la gestión de los objetos almacenados en el mencionado repositorio, incluyendo el almacenamiento, modificación y eliminación de los mismos, desde el entorno de MOODLE. En cuanto a la utilización en MOODLE de los objetos recuperados del ROA de AMBAR, se trabajó con los siguientes formatos de OA: .jpeg, .gif, .pdf, .doc, .ppt, .mp3, .mpeg, .flv, .avi y .zip. La conexión entre la plataforma MOODLE y el ROA de AMBAR se estableció en base a las restricciones propias del rol del usuario en dicha plataforma, en donde sólo aquellos usuarios con privilegios de edición sobre el curso en particular, podrán acceder al repositorio a través del recurso, del módulo o del bloque mencionados anteriormente, con el fin de explorar y exportar los objetos del repositorio al curso donde se encuentre asociado. El acceso de cada usuario de MOODLE, por medio del Bloque “ROA de AMBAR”, al repositorio, se permitió a través de la validación de los datos personales del mismo, contra los registrados en el Repositorio de Usuarios de AMBAR, de esta forma sólo los usuarios que estén debidamente registrados en el ROA podrán almacenar o importar nuevos objetos y eliminar o modificar los objetos de su propiedad. Cabe destacar que la implementación de éste último repositorio, fue parte importante de este trabajo especial de grado y permitirá en un futuro centralizar el control de acceso de usuarios para todas las aplicaciones disponibles en el amplio proyecto AMBAR. Finalmente, para realizar dichas validaciones y posteriormente la completa integración, se llevó a cabo el rediseño del ROA de AMBAR en cuanto a sus interfaces gráficas de usuario y algunas funcionalidades. Además se realizó la migración del ROA y del Repositorio de Metadata de AMBAR, desde el Sistema Manejador de Base de Datos Orientada a Objetos (SMBDOO) Database forObjects (DB4O) a MYSQL, lo que incluyó la modificación de los servicios de la capa de servicios web para adaptarlos a tal migración. Por último se crearon nuevos servicios web, los cuales faciliten algunas tareas tanto para este proyecto como para trabajos futuros. 8 1.6.- Antecedentes Los antecedentes significativos para el presente trabajo, se plantean desde dos perspectivas, a saber: la modificación de un módulo de MOODLE y la integración de los repositorios de AMBAR. En tal sentido, algunos estudios destacables, relacionados con la integración a implementar, fueron los siguientes: Castillo, L., Figueroa M. J. & Morales, L. (2008). Modificación del Módulo SCORM para el Soporte Básico del IMS-Learnig Design (IMS-LD). Universidad de Granada. Barcelona, España. Se analizó e implementó la integración del estándar IMS - LD dentro del sistema gestor de aprendizaje MOODLE a través de la modificación del módulo SCORM. Con dicha modificación se permitió adaptar el contenido de una actividad tipo SCORM/AICC, cuyos objetos de aprendizaje deberán estar etiquetados en base al estándar IEEE/LOM y al perfil de cada alumno matriculado en el curso que utiliza dicha actividad. Di Blasi, L. L. (2010, Mayo). Desarrollo del módulo WebQuest basado en la especificación IMS Learning Design para la creación de cursos en la plataforma Moodle. Universidad Central de Venezuela, Caracas, Venezuela. Se desarrolló un módulo basado en la Estrategia de Aprendizaje WebQuest que además de permitir el desarrollo de cursos en la plataforma MOODLE, se basó en la especificación IMS Learning Design para la generación de Unidades de Aprendizaje a partir de estos cursos, permitiendo su reutilización en diferentes plataformas o sistemas de Enseñanza - Aprendizaje que soporten dicha especificación. Alegría, G. R. A. & Nieves, H. C. (2008, Mayo). Repositorio de Metadata de los Objetos del Sistema Generador de Ambientes de Enseñanza Aprendizaje 9 Constructivistas basados en Objetos de Aprendizaje (AMBAR). Universidad Central de Venezuela, Caracas, Venezuela. Presentó la implementación del Repositorio de Metadata de Objetos de Aprendizaje de AMBAR, en términos de análisis, diseño y construcción del mismo. Por otro lado el repositorio donde se almacena la Metadata, fue diseñado sobre el SMBDOO DB4O, el cual es accedido mediante una capa web basada en servicios. Además se construyó la aplicación de usuario, la cual a través del uso de los servicios web definidos, permite interactuar con el Repositorio de Metadata de AMBAR. Beleño, M. C. M. (2007, Octubre 30). Capa de Servicios de Base de Datos del Sistema Generador de AMBientes de enseñanza- ApRendizaje AMBAR. Universidad Central de Venezuela, Caracas, Venezuela. Consistió en el análisis, diseño e implementación de la Capa de Servicios Web de Base de Datos del Sistema Generador de Ambientes de Enseñanza-Aprendizaje (AMBAR) como implementación de una SOA. El sistema desarrollado proporcionó un espacio para manipular OA, los cuales pueden ser almacenados y recuperados de la base de datos de AMBAR a través del SMBDOO DB4O, basado en una arquitectura MVC (Modelo Vista Controlador) para los servicios web y haciendo uso del patrón DAO (Data Access Object) para el acceso a los datos Quintero, S. J. A. (2009, Abril). Integración del Repositorio de AMBAR con el Repositorio de Metadata a través de la Capa de Servicios. Universidad Central de Venezuela. Caracas, Venezuela. Se estableció el proceso de integración de la base de datos de AMBAR con el Repositorio de Metadata a través de la Capa de Servicios Web asociado sólo a los Objetos de Aprendizaje (OA). Dicha integración proporcionó un espacio para manipular OA que 10 pueden ser almacenados y recuperados de manera eficiente de forma transparente para el usuario final. 1.7.-Bases legales En base a lo presentado por la documentación oficial de la plataforma, en la versión del año 2007 (http://docs.moodle.org/es/Acerca_de_Moodle), se puede decir que el LMS MOODLE, es una marca registrada del Trust MOODLE (http://moodle.com). El paquete de software MOODLE globalmente es Copyright © 1999 y siguientes, bajo la licencia GNU General Public Licence (GPL), lo cual lo hace software libre con la posibilidad de redistribuirlo y/o modificarlo bajo ciertos términos, básicamente esto significa que tiene derechos de autor, con algunas libertades para copiar, usar y modificarlo siempre que se acepte proporcionar el código fuente a otros, no modificar o eliminar la licencia original o los derechos de autor original y aplicar esta misma licencia a cualquier trabajo derivado de él. Como no hay pagos por licencias o límites de crecimiento, una institución puede añadir los servidores MOODLE que necesite. La documentación de MOODLE es Copyright © 2005 y siguientes, de los autores individuales de cada página y se proporciona bajo los mismos términos de la GPL del paquete MOODLE. Martin Dougiamas es el creador, desarrollador principal y director de proyecto de toda la plataforma MOODLE. Por su parte el sistema AMBAR, es un proyecto de investigación de la Universidad Central de Venezuela, en el cual se ha desarrollado una plataforma tecnológica, la cual soporte el almacenamiento, generación, uso y reuso de OA. Su base teórica abarca el modelo de aprendizaje constructivista, como el Aprendizaje Generativo y la Teoría de la Flexibilidad Cognitiva. Según López, Miguel y Montaño (2008), surge de la identificación de problemas en el contexto educativo venezolano, tales como: dificultades para acceder a las TIC, falta de herramientas de software, basadas en OA y en teorías constructivistas y falta de métodos para la creación y reutilización de OA de manera efectiva. http://docs.moodle.org/es/Acerca_de_Moodle http://moodle.com/ 11 1.8.-Método de Desarrollo de Software Los procesos ágiles de desarrollo de software intentan evitar los difíciles caminos de las metodologías tradicionales enfocándose en la gente y en los resultados, una de estas metodologías es el Modelado Ágil (MA), el cual según Ambler (2002) (http://www.agilemodeling.com/) es una metodología basada en la práctica para modelado efectivo de sistemas de software, centrada en la comunicación asertiva de los que intervienen en el proceso de desarrollo de software. Se puede considerar como una colección de prácticas que reflejan los principios y valores compartidos por muchos experimentados desarrolladores de software. La metodología del MA es una colección de prácticas, guiadas por principios y valores. El MA no es un proceso prescriptivo, ni define procedimientos detallados de cómo crear un tipo de modelo dado. En lugar de eso, sugiere prácticas para ser un modelador efectivo, aspecto primordial de las metodologías ágiles en general. A partir de este modelado, se obtiene el código y otros modelos secundarios, es decir, en vez de crear modelos extensivos antes de escribir el código, se crean modelos ágiles, los cuales son usados para explorar y analizar los requerimientos. Algunos de los objetivos y principios del MA, establecidos por Ambler (2002) se pueden apreciar en la tabla 1. La figura 1, representa el ciclo de vida de alto nivel del MA para el lanzamiento de un sistema. En donde, cada caja representa una actividad del desarrollo. En la primera actividad, caja verde, se nota que se incluyen dos sub-actividades principales: Contemplar necesidades iníciales y Contemplar arquitectura inicial. Éstas se realizan durante la iteración 0; las otras actividades: Modelar iteración, Tormenta de modelos y desarrollo/pruebas ocurren potencialmente durante cualquier iteración, incluyendo la iteración 0. La figura 2 es la representación de cómo las actividades del MA se realizan en las diferentes iteraciones del ciclo de vida de desarrollo de software ágil. Es simplemente otra manera de demostrar que un proyecto ágil comienza con algunos modelados y que el mismo se produce en cada iteración de la construcción. Por lo general, durante la primera http://www.agilemodeling.com/ 12 semana del proyecto la meta es identificar el alcance del sistema y de la arquitectura probable para tratarla. Para hacer esto se necesita obtener los requerimientos de alto nivel y modelar la arquitectura de lo necesitado. El objetivo no es escribir especificaciones detalladas, que sean arriesgadas, sino explorar las necesidades y llegar a una estrategia global. Tabla 1: Objetivos y principios del Modelado Ágil (MA) (Ambler, 2002) Objetivos Principios Definir y mostrar cómo poner en práctica una colección de valores, principios y prácticas que conlleven a un modelado ligero efectivo. Explorar la aplicación de técnicas de modelado en proyectos de software, a través de un enfoque ágil. La mayor prioridad es satisfacer al cliente a través de tempranos y continuos entregables. Entregas frecuentes de la aplicación desarrollada, preferiblemente en una escala de tiempo pequeña. El modelado ágil promueve el desarrollo sostenible. Los patrocinadores, desarrolladores y usuarios deben ser capaces de mantener el paso constante indefinidamente. La atención continua a la excelencia y los buenos diseños mejoran la agilidad. Asumir simplicidad (el arte de maximizar cantidad de trabajo no realizado) es esencial. Las mejores arquitecturas, requisitos y diseños emergen de equipos que lo organizan por sí mismos. A intervalos regulares, el equipo refleja sobre cómo ponerse más eficaz, entonces ajusta su conducta de acuerdo con ello. 13 Figura 1: Ciclo de Vida del Modelado Ágil (MA) (Ambler, 2002) Figura 2: Modelado Ágil (MA) a través del ciclo de desarrollo (Ambler, 2002). 14 Para los proyectos cortos, de quizás varias semanas de duración, es posible hacer este trabajo en las primeras horas y para los proyectos largos, en el orden de doce o más meses, se puede decidir invertir dos semanas en este esfuerzo. Se sugiere no invertir más tiempo que el indicado, ya que se corre el riesgo de que se modele algo que contiene demasiados problemas. A continuación se explicará de manera detallada, cada una de las etapas que intervienen en el MA según Ambler (2002): Contemplar necesidades iniciales: Su objetivo es construir un entendimiento común, no es para escribir documentación detallada. Un factor clave del éxito para lograr contemplar las necesidades iniciales, es la participación activa de los interesados. Para la primera versión de un sistema es necesario identificar algunos requerimientos de alto nivel, así como el alcance que ésta versión va a tener y lo que el sistema debe hacer. Para el modelado inicial de los requerimientos es necesario un modelo experto con el cual se estudie cómo los usuarios trabajarán con el sistema, un modelo inicial del dominio en el que se identifique los requerimientos fundamentales de la entidad de negocio y las relaciones; y un modelo inicial de interfaz que explore la interfaz de usuario y la usabilidad. El modelado inicial de la arquitectura: El objetivo del modelado inicial de la arquitectura, es identificar una arquitectura que brinde grandes oportunidades para realizar el desarrollo de la aplicación. Esto permite fijar una dirección hacia la técnica más viable para realizar el proyecto y proporcionar información suficiente para organizar el equipo de trabajo alrededor de la arquitectura, algo que es particularmente importante en relación con los equipos de trabajos grandes o distribuidos. Por el lado de la arquitectura se suelen crear los diagramas de forma libre, aquellos que exploran la infraestructura técnica; y los modelos iniciales del dominio, para explorar las entidades de negocio principales y sus relaciones. En posteriores iteraciones los requerimientos iniciales y la arquitectura inicial tendrán que evolucionar a medida que se definen más, pero por ahora la meta es obtener el modelado de una arquitectura inicial. En versiones posteriores se puede decidir acortar la iteración 0 a varios días, varias horas, o incluso eliminarla por completo, 15 como la situación lo requiera. El secreto es mantener las cosas simples. No es necesario que se modele con mucho detalle, simplemente modelar lo necesario. Al realizar el modelo de casos de uso, por ejemplo se pueden observar los diversos requerimientos de forma clara. Muchos desarrolladores tradicionales de software usan el MA para el modelado inicial, por ser iterativo e incremental. El modelado de las iteraciones. Pensar que se hará en cada iteración: Al comienzo de cada iteración de la construcción del software, el equipo debe planificar los trabajos a desarrollar en la misma. Una de las etapas que a menudo se descuida es el modelado de las actividades, es por ello que el MA ordena los requerimientos de la aplicación por prioridad, en la figura 3 se puede observar, que a lo largo de una iteración el valor de los requerimientos es variable, ya que el de mayor importancia está en la cima de la pila. Para hacer esto con éxito se tiene que calcular con exactitud el tiempo de dedicación para cada requerimiento y a continuación en función de la velocidad de la iteración previa, calcular el tiempo promedio de procesamiento de cada requerimiento. Figura 3: Modelado de las iteraciones: proceso de gestión de cambios de requerimientos. (Ambler, 2002) 16 Model Storming (Tormenta de Modelos): La experiencia de la gran mayoría de las sesiones de modelado es la participación de unas pocas personas, por lo general sólo dos o tres. El equipo de trabajo se reúne alrededor de una herramienta, en la que se modela de forma compartida, identificando los problemas que se tendrán que resolver. Estos modelos de ideas son improvisados, de igual forma que cuando ocurre una tormenta de ideas. Es poco común que el modelo de ideas dure más de treinta minutos. Desarrollo/Pruebas: A continuación se implementa el desarrollo del código, el cual se puede realizar durante varias horas e incluso varios días a la vez. Aquí es donde el equipo de trabajo se consume la mayor parte del tiempo. En el MA los equipos de trabajo tratan de realizar la mayor parte de su modelación de manera detallada, junto al cliente o con pruebas de desarrollo. Estas Pruebas del Cliente, también llamadas Pruebas de Aceptación, validan el código de la aplicación y las especificaciones del mismo y son realizadas para reforzar los requerimientos detallados y desarrollar un mejor diseño. 17 CAPÍTULO II: MARCO CONCEPTUAL En el presente capítulo se presentan los aspectos más relevantes del Repositorio de Objetos de Aprendizaje (ROA) del Sistema Generador de Ambientes de Enseñanza- Aprendizaje Constructivista basado en Objetos de Aprendizaje (AMBAR) y en base a la importancia de los sistemas de e-Learning, se toma como caso de estudio, la plataforma MOODLE, del cual se describirá su arquitectura, características generales, principales módulos, entre otros. En tal sentido, es importante recordar ciertos conceptos asociados a la investigación, comenzando por Objetos de Aprendizaje (OA), en primer lugar. Esta definición es tan variada como las mismas fuentes de información, sin embargo vale destacar una aproximación a la misma. García (2005), se refiere a los OA en general, como “archivos digitales o elementos con cierto nivel de interactividad e independencia, los cuales podrían utilizarse o ensamblarse, sin necesidad de una modificación previa, en diferentes situaciones de enseñanza-aprendizaje, sean éstas similares o desiguales entre sí y que deberían disponer de las indicaciones suficientes para su referencia e identificación” (p.1). En segundo lugar, partiendo de lo anterior, tales indicaciones disponibles junto a los OA, las cuales son suficientes para la referencia e identificación del mismo, son conocidas como Metadatos y formalmente “son un conjunto de atributos o elementos necesarios para describir al objeto, a través de ellos se tiene un primer acercamiento con el mismo” (Hernández, 2009, p.16). Gracias a lo evidenciado durante la presente investigación, se puede afirmar que si un recurso no tiene un conjunto de metadatos asociados, no puede considerarse como un OA, lo que limita considerablemente sus características de uso, reutilización, actualización, acceso, disponibilidad, entre otras. Al considerar la disponibilidad inherente a un OA, surge el tercer y último concepto a destacar, el Repositorio de Objetos de Aprendizaje (ROA), el cual es “la infraestructura clave para el desarrollo, almacenamiento, administración, localización y recuperación de todo tipo de contenido digital” (ADL, 2002) citado por Quintero (2009, p.19). En el estudio 18 de los ROA, se han identificado dos tipos principales, los cuales se denotan según la concentración de los recursos: en locales o distribuidos; y según la distribución de los metadatos: en aplicaciones independientes o módulos adicionales a otros sistemas. En general, un ROA tiene las siguientes funciones básicas: buscar o localizar un OA apropiado, incluyendo su despliegue; pedir un OA previamente localizado; recuperar un OA pedido; enviar o entregar a un repositorio un OA para ser almacenado; almacenar dentro de un registro de datos un objeto, con un identificador único, tal que le permita ser localizado; colectar u obtener metadatos de los objetos de otros repositorios por búsquedas federadas y publicar o proveer metadatos a otros repositorios. Actualmente algunos de los portales de repositorios más utilizados, mencionados por Quintero (2009) son: MERLOT (Multimedia Educational Resource for Learning and Online Teaching), CAREO (Campus Alberta Repository of Educational Objects), CLOE (Co-operative Learning Object Exchange). En el ámbito latinoamericano cabe destacar LA FLOR, acrónimo de Repositorio Latinoamericano de Objetos de Aprendizaje (Latin American Federation of Learning Object Repositories), proyecto de investigación propuesto por la Comunidad Latinoamericana de Objetos de Aprendizaje (LACLO)(http://www.laclo.org/ index.php?option=com_content&task=view&id=26&Itemid=53), cuya importancia, es promover “el acceso a través de estándares internacionales a repositorios institucionales existentes en la región” (párr. 1). A continuación, con propósitos prácticos para el presente trabajo, se describirán los aspectos relacionados con el ROA de AMBAR, como uno de los sistemas clave para el desarrollo de la investigación. 2.1.- Proyecto AMBAR López, Miguel, Montaño, Pernalete (2007) establecen que AMBAR, siglas del sistema generador de AMBbientes constructivistas de enseñanza-ApRendizaje, es un proyecto de investigación desarrollado en la Escuela de Computación, Facultad de http://www.laclo.org/%20index.php?option=com_content&task=view&id=26&Itemid=53 http://www.laclo.org/%20index.php?option=com_content&task=view&id=26&Itemid=53 19 Ciencias, Universidad Central de Venezuela, el cual tiene como objetivo general crear un sistema generador de ambientes constructivistas de enseñanza-aprendizaje, es decir, un sistema capaz de servir de herramienta de ayuda a profesores, estudiantes y demás usuarios, para la enseñanza y/o aprendizaje de cualquier tema académico, a fin de asegurar la interoperabilidad, reutilización, gestionabilidad, accesibilidad, durabilidad y escalabilidad de los mismos basándose en una arquitectura de software flexible fundamentada en repositorios. Las principales características de AMBAR presentadas por Quintero (2009), son: Permite a los profesores y aprendices elaborar y participar en procesos de enseñanza aprendizaje basados en OA reusables. AMBAR están formado por tres ambientes: “un ambiente para facilitarle al docente el diseño instruccional, un ambiente para la colaboración entre estudiantes y docentes para la generación de conocimiento basado en un modelo pedagógico y un módulo para el mantenimiento del repositorio de OA y todos los demás elementos asociados al ambiente” (p.31). Permite almacenar, consultar, usar y reutilizar los OA producidos o usados en los ambientes de aprendizaje, y que estos OA puedan ser soportados por diferentes plataformas y por diferentes herramientas. A nivel genérico, los tipos de OA manejados en AMBAR son: OA Fundamentales, OA Generativo-Instruccionales y Estrategias. Soporta actividades de aprendizaje generativo, es decir, proveer la capacidad de que los aprendices puedan crear artefactos con diferentes niveles de granularidad y convertirlos en OA. Hacer más flexible el contenido de los objetos y soportar las actividades de un ambiente de aprendizaje constructivista, es decir, proveer la capacidad de considerar diferentes OA como los fundamentales, los combinados y los frameworks. AMBAR está desarrollado bajo dos bases conceptuales bien definidas, las cuales según López, Miguel, Montaño y Pernalete (2007) son la Arquitectura Orientada a Servicio (SOA) y el Bus de Integración Empresarial (ESB). 20 Por un parte, SOA “es un concepto de arquitectura de software, la cual promueve el empleo coordinado de un conjunto de servicios reutilizables débilmente acoplados entre sí para dar soporte a los requerimientos de software del usuario. Las bases de SOA provienen de las experiencias en la utilización de tecnologías basadas en objetos distribuidos” (López, Miguel, Montaño y Pernalete, 2007, p.8). Entre sus principales características se pueden especificar: Definición de servicios mediante interfaces, las cuales abstraen al cliente de los detalles de implementación del servicio. Los servicios están generalmente implementados usando la misma infraestructura de comunicaciones dando soporte al resto de servicios cliente/servidor. Reutilización de servicios en un ambiente SOA, los nodos de la red hacen disponibles sus recursos a otros participantes en la red como servicios independientes a los que tienen acceso de un modo estandarizado. Seguidamente, el ESB según López, Miguel, Montaño y Pernalete (2007), es un producto de software, el cual provee de la infraestructura de comunicaciones subyacente a otros componentes de software. A pesar de que existen muchas opciones tecnológicas amoldadas a esta descripción, para que un producto se califique como ESB debe emplear el Lenguaje de Marcado Extensible (XML) como formato de intercambio de mensajes. Un ESB provee la infraestructura básica, a la que se le pueden incorporar componentes en forma de módulos. Con estos dos conceptos se logró proponer una arquitectura para AMBAR basada en servicios web, establecida por las autoras anteriores, en el año 2007, en la cual se utiliza una aplicación SOA. En tal sentido, un servicio “debe ser una aplicación completamente autónoma e independiente, ésta establece una interfaz de llamada, basada en mensajes, los cuales pueden ser accedidos desde la red. Los servicios incluyen tanto lógica de negocio como manejo de estados, relevantes a la solución del problema para el cual fueron diseñados” (López, Miguel, Montaño y Pernalete, 2007, p. 9). 21 Buscando que los servicios de AMBAR, pudieran ser accedidos desde la misma aplicación o desde otros sistemas, la definición de los mismos es independiente de la tecnología específica con la que se implementaron. Para ello, se usó el Lenguaje de Descripción de Servicios Web (WSDL) basado en XML sobre el esquema que describe el servicio. Utilizando tecnologías como Java Server Pages (JSP) y Java Servlets, el Kit de desarrollo Java (J2ee SDK), el lenguaje de programación JavaScript, un servidor Apache Tomcat, la implementación de software libre de SOAP Apache Axis y el SMBDOO DB4O, entre otros; AMBAR se implementó “como un Framework modular, diseñado en capas. Entre las capas, se incorpora un middleware ESB, permitiendo la interoperabilidad, orientado al servicio, basado en componentes, opción de múltiples enlaces, comportamientos, modelos de datos y estructura plug and play” (López, Miguel, Montaño y Pernalete, 2007, p. 10). 2.1.1.-Repositorio de Objetos de Aprendizaje de AMBAR Tal como se vio anteriormente, para hacer mejor uso de los OA, éstos se deben encontrar almacenados en repositorios destinados para tal fin. Es por esto que surge el Repositorio de Objetos de Aprendizaje (ROA) de AMBAR, el cual “es considerado uno de los componentes fundamentales del sistema, debido a que es capaz de almacenar y gestionar de una manera eficiente tanto los OA, como los ambientes de aprendizaje a definir y utilizar” (Beleño, Hernández, López, Miguel, Montaño y Pernalete, 2008, p. 3). Como resultado del trabajo presentado por Quintero (2009), actualmente el ROA de AMBAR se encuentra integrado con otro de los componentes del mismo sistema: el Repositorio de Metadata, el cual “permite la organización estructurada de los atributos que describen a los OA, facilitando su búsqueda, recuperación y administración” (p. 40). Esta integración estuvo centrada específicamente en la sección de OA contenida en la Capa de Servicios del ROA de AMBAR, adicionalmente se reestructuró la Capa de Presentación del sistema en general. Es importante destacar que la metadata del ROA está basada en el 22 estándar LOM (Learning Object Metadata), el cual, según la comunidad del Advanced Distributed Learning (ADL) (http://www.adlnet.gov), es un estándar que tiene como objetivo principal guiar en el marcado de recursos educativos para potenciar su búsqueda, evaluación, obtención y utilización, es decir, establece un modelo de datos utilizado por SCORM, usualmente codificado en XML, que se utiliza para describir un OA y así facilita la reutilización de OA y su interacción. 2.1.2.- Características y Funcionalidades del Repositorio de Objetos de Aprendizaje de AMBAR Haciendo énfasis en el ROA de AMBAR, de acuerdo con lo presentado por Beleño, López, Hernández et al. (2008), entre sus características más relevantes se tienen: Es compatible con el estándar IMS-LD y el modelo SCORM, en cuanto a su metadata. Puede ser accedido por diversas aplicaciones por medio de los servicios web desarrollados. Está basado en una arquitectura SOA. Usa el SMBDOO DB4O para almacenar los objetos y otros recursos. Los OA se representan por medio del estándar SCORM Posee una interfaz web, la cual hace uso de los servicios web definidos. De igual forma, Beleño, López, Hernández et al (2008) presentan las principales funcionalidades del repositorio, las cuales son: Soporte (almacenamiento, consulta, uso y reutilización) de OA producidos o usados en los Ambientes de Aprendizaje de AMBAR. Soporte de múltiples niveles de granularidad de los OA para permitir su reutilización, flexibilidad, accesibilidad y adaptabilidad. http://www.adlnet.gov/ 23 Soporte de frameworks como OA, los cuales proveen estructura para experiencias instruccionales e incorporen sistemas de enlaces para facilitar el llenado de contenido. Manejar múltiples versiones de OA. Implementar un recolector de basura para el borrado del repositorio de contribuciones eliminadas o desactualizadas. Etiquetamiento de OA de acuerdo a los estándares para permitir el descubrimiento, recuperación y manipulación de los OA almacenados. El desarrollo del sistema AMBAR en general, está basado en un proceso iterativo e incremental, en el cual se van obteniendo prototipos funcionales en base a un subconjunto de requerimientos. En cuanto al ROA, los logros de la primera iteración de su implementación, presentados por Adriani, Díaz, López, Miguel y Montaño (2006), así como Quintero (2009), se pueden resumir en cinco (5) grandes aspectos: El ROA, se desarrolló a través de la Capa de Servicios Web como implementación de una SOA. Para la implementación de los Servicios Web se usó AXIS, una implementación opensource de SOAP, la cual proporciona un entorno de ejecución para servicios web implementados en Java. Se desarrolló el modelo conceptual del ROA sobre el SMBDOO DB4O, basado en una arquitectura MVC (Modelo Vista Controlador) para los servicios y haciendo uso del patrón DAO (Data Access Object) para el acceso a los datos. La representación de este modelo, según Quintero (2009), se puede observar en la figura 4. Se usó el Proceso Unificado (UP), con tres ciclos, como Método de Desarrollo de Software. Cada ciclo de desarrollo consistió en la aplicación de las fases: Inicio, Elaboración, Construcción y Transición; pero de una manera ágil. Los servicios web implementados en cada ciclo y los recursos sobre los cuales se desarrollaron, 24 siguiendo el modelo conceptual anterior, según Beleño, Hernández, López et al. (2008), se pueden observar en la figura 5. Se desarrolló una aplicación, la cual provee la interfaz para el usuario final y hace uso de los servicios web implementados. En cuanto al Repositorio de Metadata, según lo desarrollado por Alegría y Nieves (2008), se implementó en siete fases, las cuales se pueden resumir de la siguiente forma: Levantamiento de los requerimientos. Diseño del esquema de la metadata basado en el estándar LOM Implementación del diseño conceptual del repositorio en el SMBDOO DB4O. El modelo conceptual desarrollado, se puede observar en la figura 6. Al respecto es importante destacar que como la metadata está basada en el estándar LOM, en el modelo conceptual se puede observar la clase Metadata, la cual a su vez está relacionada con otras nueve (9) clases, representativas de las categorías de LOM. Diseño y desarrollo de métodos para manipular la metadata a través de los servicios web. La descripción de tales métodos y servicios se puede apreciar en la tabla 2. Diseño e implementación de la interfaz de usuario. Revisión y pruebas finales sobre todo el sistema. 25 Figura 4: Modelo Conceptual del ROA de AMBAR (Quintero, 2009) 26 Figura 5: Ciclos de desarrollo de los Servicios Web del ROA de AMBAR Tabla 2: Métodos y Servicios del Repositorio de Metadata de AMBAR (Alegría y Nieves, 2008) Métodos para interactuar con la Metadata y su descripción Servicios del Repositorio Agregar Metadata Recibe la metadata desde la aplicación web, la convierte en un objeto de estructura LOM y la almacena en el repositorio. agregarMD Buscar Metadata Recupera toda la metadata asociada a un OA basado en tres criterios: por título, por contexto y por propósito. busquedaBasica busquedaPorOID busquedaAvanzada Modificar Metadata Consiste en modificar elementos de la metadata de un OA específico. Eliminar Metadata Eliminar la metadata en el repositorio. eliminarPorOID 27 Figura 6: Modelo Conceptual del Repositorio de Metadata de AMBAR (Alegría y Nieves, 2008) 28 Por último, tal como se mencionó anteriormente, en la actualidad ambos repositorios de AMBAR se encuentran integrados a través de la capa de servicios. Esta integración, producto del trabajo desarrollado por Quintero (2009), permite establecer una correspondencia entre los servicios del ROA y del Repositorio de Metadata de AMBAR en cuanto al manejo de los OA, facilitando la organización, estandarización y almacenamiento de la información, así como el aumento en la eficiencia de los procesos de recuperación y manipulación de la misma. Es importante mencionar las dos iteraciones, llevada a cabo en esta integración, las cuales contemplaron a grandes rasgos: “adecuación del repositorio de Metadata, tanto a nivel funcional como la interfaz de usuario, de manera que se pueda integrar con la base de datos de AMBAR a través de la Capa de Servicios y la reestructuración de la Capa de Presentación y de los enlaces correspondientes al almacenamiento, modificación y eliminación de OA de la Capa de Servicios Web de la base de datos de AMBAR para que utilicen los servicios correspondientes, a cada uno de ellos, del Repositorio de Metadata” (p. 45). En esta implementación, el modelo conceptual del ROA de AMBAR sufre varias modificaciones, las cuales se encuentran resaltadas en la figura 7. Dando inicio a la segunda parte de este Marco Conceptual, es importante señalar que, aprovechando las ventajas presentadas por el aprendizaje electrónico, por ejemplo el ahorro de costos y desplazamientos, autonomía del conocimiento, registro continuo de las actividades realizadas por los usuarios para su posterior análisis, entre otras; se han desarrollado sistemas LMS, los cuales según la Coordinación General de Estudios Interactivos a Distancia de la Universidad de Los Andes, Venezuela (http://www.ceidis.ula.ve/index.php?option=com_content&task=category&sectionid=5&id =17&Itemid=31), son aplicaciones de software, instaladas en servidores y se emplean para administrar y controlar las actividades, programas y cursos de formación no presencial o e- Learning en una institución u organización y permitir el uso de herramientas de trabajo para colaborar en grupo. A grandes rasgos permiten también “la distribución de contenidos reutilizables e intercambiables” (Fernández, 2006, p.13). http://www.ceidis.ula.ve/index.php?option=com_content&task=category&sectionid=5&id=17&Itemid=31 http://www.ceidis.ula.ve/index.php?option=com_content&task=category&sectionid=5&id=17&Itemid=31 29 Figura 7: Modelo Conceptual del ROA de AMBAR modificado (Quintero, 2009) 30 Al revisar los trabajos de Calderón (2009) y Fernández (2006) se pueden observar algunos ejemplos de LMS tanto comerciales como de software libre, tales como: WebCT, ATutor, Dokeos y Claroline, respectivamente. Dentro de los LMS de software libre, se encuentra también MOODLE, el cual es de vital importancia para la presente investigación, por lo que a continuación se presentarán en detalle, los aspectos más relevantes dentro de la misma, tales como su arquitectura, enfoque pedagógico, características generales, módulos disponibles, entre otros. 2.2.- MOODLE MOODLE, según la versión 2007 de la documentación publicada por la Comunidad MOODLE (http://docs.moodle.org/es/Acerca_de_Moodle), se puede definir como un LMS fundamentalmente útil para programadores y teóricos de la educación, desarrollado pensando en la manera creativa en que un estudiante o profesor podrían aproximarse al estudio o enseñanza de un curso en línea. Luego de descartar múltiples prototipos, la primera versión oficial, MOODLE 1.0, apareció el 20 de agosto de 2002, creada por Martín Dougiamas y a partir de ésta, ha continuado siendo “un proyecto en desarrollo diseñado para dar soporte a un marco de educación social constructivista” (párr. 1) y aprendizaje colaborativo. 2.2.1.-Arquitectura de MOODLE La Comunidad MOODLE, le ha hecho un seguimiento continuo al desarrollo de esta plataforma, por lo tanto basado en la publicación del año 2006 (http://docs.moodle.org/es/Arquitectura_de_Moodle), se puede decir que en términos de arquitectura, es una aplicación web que se ejecuta sin modificaciones en Unix, GNU/Linux, OpenSolaris, FreeBSD, Windows, Mac OS X, NetWare y otros sistemas que soportan PHP (Hipertext Preprocessor), incluyendo la mayoría de proveedores de hosting web. Hay algunos paquetes autoinstalables para facilitar el despliegue de MOODLE, incluyendo Fantástico, JumpBox, y el paquete para Debian GNU/Linux. Los datos son almacenados en http://docs.moodle.org/es/Acerca_de_Moodle http://docs.moodle.org/es/Arquitectura_de_Moodle 31 una sola base de datos SQL, en MOODLE 1.6, los servidores de base de datos MySql y PostgreSql fueron las únicas opciones. La versión 1.7, publicada en Noviembre de 2006, hace uso total de abstracción de base de datos para que los instaladores puedan elegir entre alguno de los diversos tipos de servidores, por ejemplo Oracle y Microsoft SQL Server. La última versión estable es MOODLE 1.9.1.0. La versión en desarrollo es MOODLE 2.0.1, publicada en Diciembre de 2010. Según esta misma documentación, MOODLE ha sido desarrollado desde 1999 y desde 2001 mantiene la arquitectura actual, ha sido traducido a más de 70 idiomas y de la versión 1.5 en adelante presenta mejoras importantes en cuanto a accesibilidad y flexibilidad de visualización. Hasta Julio de 2008, la base de usuarios registrados incluye más 21 millones, distribuidos en 46000 sitios en todo el mundo. 2.2.2.-Enfoque Pedagógico de MOODLE En cuanto a su enfoque pedagógico, se puede decir que según lo propuesto por Iriarte (2008), la filosofía de MOODLE incluye una aproximación constructiva y constructivista social de la educación, enfatizando que los estudiantes y no sólo los profesores, pueden contribuir a la experiencia educativa en muchas formas. Sus características reflejan esto en varios aspectos, como hacer posible que los estudiantes puedan comentar en entradas de bases de datos o inclusive construir entradas ellos mismos, o trabajar colaborativamente en un wiki. Habiendo dicho esto, MOODLE es lo suficientemente flexible para permitir una amplia gama de modos de enseñanza. Puede ser utilizado para generar contenido de manera básica o avanzada, por ejemplo páginas web; o evaluación, y no requiere un enfoque constructivista de enseñanza. Según este mismo autor, el constructivismo es a veces visto en contraposición con las ideas de la educación enfocada en resultados, como No Child Left Behind Act (NCLB) en los Estados Unidos. La contabilidad hace hincapié en los resultados de las evaluaciones, no en las técnicas de enseñanza o en pedagogía, pero MOODLE es también útil en un ambiente orientado al salón de clase debido a su flexibilidad. 32 2.2.3.-Características Generales de MOODLE En cuanto a su diseño general, presenta las siguientes características, observadas a lo largo de la diversa documentación de la Comunidad MOODLE (http://docs.moodle.org/es/Características) y en lo presentado por López y Sein-Echaluce (2010): Soporte Técnico Comunitario. Flexible y personalizable por poseer código abierto. Estándar y compatible con otros formatos como SCORM, IMS, entre otros. Promueve una pedagogía constructivista social, apoyado en colaboración, actividades, reflexión crítica, entre otros. Su arquitectura y herramientas son apropiadas para clases en línea, así como también para complementar el aprendizaje presencial, facilitando la comunicación a distancia. Tiene una interfaz de navegador de tecnología sencilla, ligera, y compatible. Su instalación es sencilla requiriendo una plataforma que soporte PHP y la disponibilidad de una base de datos. La lista de cursos muestra descripciones de cada uno de los cursos que hay en el servidor, incluyendo la posibilidad de acceder como invitado. Los cursos pueden clasificarse por categorías y también pueden ser buscados. Durante su desarrollo se ha puesto énfasis en una seguridad sólida en toda la plataforma, revisando todos los formularios, manteniendo las cookies cifradas, entre otros. La mayoría de las áreas de introducción de texto, materiales, mensajes de los foros y entradas de los diarios, pueden ser editados usando el editor para el Lenguaje de Marcado de Hipertexto (HTML), tan sencillo como cualquier editor de texto. Alto grado de interoperabilidad, particularmente en: autenticación, usando el Protocolo Ligero de Acceso a Directorios (LDAP), Shibboleth, o varios métodos estándares como el Protocolo de Red de Acceso a Mensajes Electrónicos (IMAP); http://docs.moodle.org/es/Características 33 inscripción, usando IMS Enterprise o por interacción directa con una base de datos externa; concursos y preguntas, permitiendo la importación y exportación en diversos formatos como el Formato Gráfico de Intercambio (GIFT) formato propio de MOODLE; y recursos, usando IMS Content Packaging, SCORM, entre otros. Integración con otros sistemas de administración de contenidos, como PostNuke, Joomla, entre otros; a través de extensiones de terceros. Sindicalización usando noticias RSS (Really Simple Sindication) o Atom, las noticias de fuentes externas pueden ser mostradas en un curso. Los foros, blogs y otras características pueden ser puestas a disposición de otros como noticias. MOODLE también tiene características de importación para uso con otros sistemas específicos, como la importación de preguntas o cursos enteros para Blackboard o WebCT. 2.2.4.-Actividades y Recursos de MOODLE De acuerdo con lo presentado por De la Torre (2005), se puede afirmar que MOODLE distingue claramente los elementos que pueden ser usados dentro de la estrucura de un curso, a saber: Recursos y Actividades. En principio, los recursos son los elementos que permitirán a los estudiantes acceder a los contenidos. Las actividades, son las herramientas de trabajo sobre los contenidos. No obstante, el carácter abierto de la mayoría de los elementos del sistema, hace que en ocasiones cueste trabajo distinguir entre ambas categorías, sin embargo en el ambiente MOODLE se pueden encontrar los siguientes recursos: páginas de texto plano, fragmentos HTML, archivos cargados en el servidor, enlaces web y páginas web. Además se pueden llevar a cabo tres tipos de actividades, las cuales son: actividades de comunicación, como foros, chats, mensajería interna, consultas y encuestas; actividades formativas, como lecciones, tareas, talleres, wikis, foros, entre otros; y actividades evaluación, como cuestionarios y exámenes con preguntas de autoevaluación de diversos tipos. 34 2.2.5.-Funcionalidad de MOODLE Al revisar el trabajo realizado por López y Sein-Echaluce (2010) como parte de la publicación de la Universidad de Zaragoza, se puede decir que las funcionalidades de MOODLE se han ido expandiendo a medida que su uso se ha hecho más popular, por ello actualmente permite complementar asignaturas del curriculum, crear cursos on-line o semipresenciales como punto de encuentro de colectivos, mediante sus salas virtuales de profesores, grupos de trabajo o investigaciones, portal de clubes o asociaciones; y como página web de información interactiva. Además, otras de sus funcionalidades como LMS de “tercera generación” (p. 3) son: permite distribuir materiales de aprendizaje; crear y gestionar debates temáticos y tablones de anuncios; presentar cuestionarios; evaluar tareas; integrar recursos de Internet; crear glosarios y diccionarios; gestionar el tiempo a través de un calendario global de distintas asignaturas; ofrecer herramientas de comunicación entre los estudiantes; permitir la tutoría electrónica en privado o en grupo; calcular estadísticas; gestionar las calificaciones; entre otras. 2.2.6.-Tipos de Cursos de MOODLE Los cursos de MOODLE se pueden categorizar en cuatro tipos, según lo publicado por Bello (2009), entre los cuales se pueden citar: Formato de Temas, organizado como un libro de texto donde el profesor elige el número de temas y las actividades a presentar y es el más apropiado para la mayoría de los cursos; Formato Social, basado en un foro central y es el más apropiado para grupos de trabajo; Formato Semanal, el curso se divide y se organiza por semanas con actividades particulares; y Formatos SCORM, IMS y LAMS (Learning Activity Management System), los que permiten integrar contenidos en estos estándares y se pueden exportar a otras plataformas. Desde mayo de 2010, se cuenta con el tipo de curso, WebQuest, descrito en los antecedentes de este documento. 35 2.2.7.-Administración de MOODLE Con respecto a la administración de MOODLE, Irisarri (1997) establece: Administración del sitio: Se establece un Usuario Administrador durante la instalación. En la personalización del sitio, se utilizan temas que definen los estilos, los colores del sitio, la tipografía, la presentación, la distribución, entre otros. Pueden añadirse nuevos módulos de actividades a los ya instalados en MOODLE. Los paquetes de idiomas permiten una localización completa de cualquier idioma. Estos paquetes pueden editarse usando un editor integrado. Administración de los usuarios: Los estudiantes pueden crear sus propias cuentas de acceso, en donde, la dirección de correo electrónico se verifica mediante la confirmación. Cada persona necesita sólo una cuenta para el acceso al servidor. Por otra parte, cada cuenta puede tener diferentes tipos de acceso. Los profesores pueden añadir una clave de acceso para sus cursos, con el fin de impedir el acceso de quienes no sean sus estudiantes. Administración de cursos: El profesor tiene control total sobre todas las opciones de un curso. Se puede elegir entre varios formatos de curso tales como semanal, por temas o el formato social, basado en debates. Además, se le pueden añadir actividades a los cursos tales como: foros, diarios, cuestionarios, materiales, consultas, encuestas y tareas. Todas las calificaciones pueden verse en una única página y descargarse como un archivo de hoja de cálculo. 2.2.8.-Módulos de MOODLE Entre los principales módulos que presenta MOODLE, según la versión 2006 de su documentación (http://docs.moodle.org/es/Caracter%C3%ADsticas), se pueden mencionar los módulos de: Tareas, Chat, Consultas, Foro, Glosario, HotPotatoes, LAMS, Lecciones, Cuestionarios, SCORM, Encuestas, Wiki, entre otros. Algunos de los módulos con mayor relación con la presente investigación, debido a su capacidad de distribuir contenido entre http://docs.moodle.org/es/Caracter%C3%ADsticas 36 los integrantes del curso, así como sus aspectos más relevantes se pueden observar en la tabla 3. 2.2.9.-Ventajas y desventajas de usar MOODLE Como último aspecto de relevancia considerable en el estudio de esta plataforma surgen algunas ventajas y desventajas, enumeradas en la tabla 4, al observar lo presentado por la Comunidad MOODLE en su documentación del año 2006 (http://docs.moodle.org/es/A_favor_de_Moodle); algunas de sus implementaciones, como por ejemplo el Sistema de Educación a Distancia de la Universidad Central de Venezuela (SEDUCV); y las surgidas de la revisión del trabajo de Arredondo (2004) y Guardia (2008). http://docs.moodle.org/es/A_favor_de_Moodle 37 Tabla 3: Algunos módulos de MOODLE y sus aspectos relevantes. Nombre Descripción Características Relevantes Módulo de Tareas Permite al profesor calificar varios tipos de envíos de los estudiantes: actividades fuera de línea, subida de un sólo archivo o avanzada, tarea de texto en línea, entre otros. Los estudiantes pueden subir sus tareas en cualquier formato. Por cada tarea puede evaluarse a toda la clase, mediante calificaciones y comentarios. El profesor puede adjuntar sus observaciones a la página de tareas del estudiante. Módulo de HotPotatoes (HotPot) Permite al profesor administrar los ejercicios elaborados con los editores HotPotatoes y TextToys a través de MOODLE, creados en el ordenador del profesor y luego incorporados al curso. Se dispone de diversos tipos de informes, los cuales mostrarán las respuestas de los estudiantes a cada una de las preguntas y se establecerán estadísticas sobre las puntuaciones obtenidas. Su pueden importar los ejercicios realizados en HotPotatoes e incluir los resultados de los ejercicios en el libro de calificaciones. Módulo SCORM Permite cargar fácilmente cualquier paquete SCORM y convertirlo en parte de un curso. Puede aceptar cualquier contenido SCORM y ponerlo disponible para que sea visualizado y recorrido por los usuarios de la plataforma. Provee un entorno de ejecución en el cual los contenidos son iniciados y exhibidos mediante un navegador web. El entorno de ejecución cumple con ciertos requisitos técnicos definidos por SCORM. 38 Tabla 4: Ventajas y Desventajas de usar Moodle Ventajas Desventajas Gracias a su licenciamiento GNU GPL, las universidades o distintas instituciones podrán implementar su MOODLE local y así poder crear sus plataformas para cursos específicos en la misma universidad, moviéndose en su mismo idioma y pudiendo abrir cursos a los alumnos que se encuentren en cualquier parte del planeta. Presenta una interfaz web de alta disponibilidad, permitiendo a los aprendices, tutores y administradores iniciar sesión de manera permanente y ejecutar sus tareas diarias. Su infraestructura se puede ampliar en términos de volumen de contenidos educativos como del número de estudiantes. Funciona con una amplia variedad de tecnologías de servidores web y bases de datos, soportando de manera confiable una implementación productiva a gran escala de manera continua. Permite admitir contenido de diferentes fuentes, y soluciones de equipos de cómputo o programas de diversos proveedores y así intercambiar información utilizando estándares abiertos de la industria para implementaciones WEB. Limita y controla selectivamente el acceso de su diversa comunidad de usuarios a los contenidos en línea, recursos y funciones del servidor tanto interna como externamente. Permite colocar recursos variados para formar una unidad de contenidos: etiquetas, archivos en formato, entre otros. Las tareas son evaluadas según varios criterios de evaluación. Dicha evaluación es continua y permanente. Con respecto al proceso de enseñanza y aprendizaje permite un acercamiento a los temas desde varios enfoques, con actividades múltiples que ponen en juego distintas capacidades (análisis, búsqueda y selección de información, elaboración de información, crítica, entre otros). Permite que cada estudiante establezca su propio ritmo de trabajo, en donde se establecen plazos de entrega de actividades y el profesor monitorea el desarrollo. Por estar basado en tecnología PHP, la configuración de un servidor con muchos usuarios debe ser cuidadosa para obtener el mejor desempeño. La interfaz de Moodle se debe mejorar, para que se muestre de una manera mucho más sencilla. Con respecto a la seguridad, hay que tener presente dónde se esta alojando la instalación de Moodle, y así verificar cuáles son las políticas de seguridad y la infraestructura tecnológica con la cual se cuente durante la instalación. Por ser una plataforma de tecnología abierta y por lo tanto gratuita, no se incluyen servicios gratuitos de soporte por lo que los costos de consultoría y soporte técnico están sujetos a firmas y entidades externas. No se encuentra conectado a un Repositorio de Objetos de Aprendizaje (ROA), lo que disminuye el aprovechamiento de sus recursos por parte de sistemas ajenos al mismo. 39 CAPÍTULO III: MARCO METODOLÓGICO En el siguiente capítulo se describen las iteraciones generadas al aplicar el Modelado Ágil (MA) como Método de Desarrollo de Software y llevadas al cabo durante la implementación del tipo de recurso “Objeto de Aprendizaje (OA) Básico”, el módulo de actividades “Objeto de Aprendizaje (OA) Estandarizado” y el bloque “ROA de AMBAR” para MOODLE, así como del rediseño del ROA de AMBAR, con el fin de lograr la integración entre ellos. En dicho proceso, las iteraciones están conformadas por fases, las cuales van desde lo más general hacia lo más específico, partiendo de la definición de la pila de requerimientos. Una representación gráfica de tales iteraciones y sus fases correspondientes, se puede apreciar en el Anexo A. 3.1.-Iteración 0: Iniciación del Proyecto En esta primera iteración se realizó un análisis de los requerimientos funcionales y no funcionales del proyecto. Se definió la pila de requerimientos en base a las prioridades y se realizó el modelado de los casos de uso generales. 3.1.1.-Fase I: Contemplar necesidades iniciales Partiendo del análisis del problema de la investigación, surgió un conjunto de requerimientos funcionales y no funcionales de vital importancia para el desarrollo del proyecto. La representación gráfica de los requerimientos en general, está basada en la Metodología para la Elicitación de Requisitos de Sistemas Software, de la Universidad de Sevilla (Toro y Jiménez, 2000), disponible como Anexo B. 40 3.1.1.1-Requerimientos Funcionales y No Funcionales Los Requerimientos Funcionales, según Toro y Jiménez (2000) deben responder a la pregunta "¿qué debe hacer el sistema con la información almacenada para alcanzar los objetivos de su negocio?” (p.45), por lo tanto a continuación se mencionan los requerimientos funcionales para este proyecto de investigación: 1. Agregar OA en curso desde el ROA de AMBAR. 2. Abrir OA en el curso. 3. Editar información del OA en el curso. 4. Eliminar OA del curso. 5. Ir al ROA de AMBAR. 6. Almacenar OA en el ROA de AMBAR. 7. Modificar metadata del OA en el ROA de AMBAR. 8. Eliminar OA del ROA de AMBAR. Por su parte los Requerimientos No Funcionales, formalmente según Alarcón (2006), “describen otras prestaciones, características y limitaciones que debe tener el sistema para garantizar el éxito” (p. 84) además “engloban características como rendimiento, facilidad de uso, presupuestos, tiempo de entrega, documentación, seguridad y auditorías internas” (p. 85). A continuación se presentan los requerimientos no funcionales para el proyecto: 1. Confiabilidad. 2. Robustez. 3. Usabilidad. 4. Seguridad. 5. Consistencia. Gráficamente, el detalle de los requerimientos y no funcionales se puede apreciar en el Anexo C. 41 3.1.1.2.-Pila de Requerimientos Con la pila de requerimientos se planificó y se ordenó, en base a la prioridad, el flujo de trabajo realizado en cada una de las iteraciones. En la figura 8, se presenta la pila de requerimientos a implementar. Figura 8: Pila de Requerimientos de la Integración ROA de AMBAR - MOODLE 3.1.1.3.-Modelado General de los Casos de Uso A continuación se detallarán los casos de usos modelados en esta iteración y los actores que intervienen: Administrador del curso: usuario perteneciente a la plataforma MOODLE, el cual tiene el privilegio de modificar la estructura del curso, así como su contenido. Interactúa con el recurso “Objeto de Aprendizaje (OA) Básico” ó el módulo de actividades “Objeto de Aprendizaje (OA) Estandarizado”, para buscar objetos en el ROA de AMBAR e incorporarlos en su curso, así como también, puede utilizar el 42 bloque “ROA de AMBAR” para gestionar los OA que se encuentran almacenados en el mismo repositorio. A los efectos de este trabajo, este usuario incluye los roles Administrador de MOODLE, Creador del Curso y Profesor Editor. Una descripción detallada de todos los roles de usuarios de MOODLE, se encuentra disponible en el Anexo D. Usuario del curso: son todos aquellos usuarios que interactúan con la Plataforma MOODLE, principalmente con el contenido de los cursos a los cuales se encuentre matriculado, para poder consultar su información publicada, realizar diversas actividades, entre otras. No tienen el privilegio de editar la estructura del curso ni la información publicada en el mismo. Este usuario incluye los roles de MOODLE Estudiante, Invitado, Usuario Autenticado y Profesor No Editor. Figura 9: Diagrama de Casos de Uso de la vista general de los usuarios de la Integración ROA de AMBAR – MOODLE 43 Figura 10: Diagrama de Casos de Uso - Usuario “Administrador del curso” con la funcionalidad “Administrar OA”. Figura 11: Particularización de la funcionalidad “Almacenar OA desde el ROA de AMBAR”. Figura 12: Diagrama de Casos de Uso - Usuario “Administrador del curso” con la funcionalidad “Gestionar OA”. 44 Figura 13: Diagrama de Casos de Uso – Usuarios “Administrador del Curso” y “Usuario del curso” con la funcionalidad “Visualizar OA”. 3.1.2.-Fase II: Descripción de la arquitectura de MOODLE y del ROA de AMBAR Haciendo referencia a lo presentado en el marco conceptual de esta investigación vale la pena destacar que para lograr la integración entre el ROA de AMBAR y la plataforma MOODLE, se contó con las siguientes arquitecturas: Arquitectura Orientada a Servicios (SOA), Arquitectura MVC (Modelo Vista Controlador) y el framework de la aplicación MOODLE. 3.2.-Iteración 1: Migración del ROA y del Repositorio de Metadata de AMBAR, implementación del Repositorio de Usuarios, adaptación de servicios web existentes e implementación de nuevos servicios de la Capa de Servicios Web de AMBAR. En esta iteración se realizó en primer lugar, la migración del ROA y del Repositorio de Metadata de AMBAR, del SMBD DB4O a MYSQL, motivado principalmente por la fuerte naturaleza de Software Libre y de licenciamiento dual, que mantiene este otro SMBD. También el hecho de que MOODLE es fácilmente instalable sobre MYSQL, 45 resulta en grandes beneficios al interconectar los diferentes proyectos en desarrollo en el contexto de AMBAR con esta integración. La decisión se vio soportada, por el hecho de utilizar un producto más comercial y sobre el cual se tenga una comunidad mucho más grande y estable de usuarios y desarrolladores incluso a nivel internacional, así como una documentación más completa y un conjunto de versiones más accesibles para su descarga e instalación. Seguidamente, se llevó a cabo la implementación del Repositorio de Usuarios de AMBAR y la adaptación de los servicios existentes en la capa de servicios web para el ROA y para el Repositorio de Metadata con el propósito de establecer la conexión entre ellos y la nueva BD. Por último, se agregaron nuevos servicios web a esa capa, de acuerdo a las necesidades del proyecto. 3.2.1.-Fase I: Modelado de la iteración: Migración del SMBD DB4O a MYSQL Con el propósito de adaptar la nueva BD a los requerimientos del proyecto, surgieron ciertas modificaciones de los modelos conceptuales originales: en cuanto al ROA de AMBAR (ver figura 14), siguiendo el Patrón de Diseño Composite, en el cual según Sáez, García y Jiménez (1999), se busca que los elementos compuestos sean tratados de la misma forma que los elementos individuales; se modificó la relación de agregación entre un OA de Información Compuesta y un OA general, así como los atributos de cada uno de ellos. En el modelo conceptual del Repositorio de Metadata (ver figura 15), la modificación más significativa se realizó en los atributos de la clase Metadata, donde se agregó el identificador de cada instancia, el cual se corresponde con el atributo id_metadata de un OA; y el nombre del archivo físico del recurso. Estos nuevos identificadores facilitan las operaciones de búsqueda y recuperación de un objeto dado. 46 Por último, con la finalidad de llevar un control centralizado de los usuarios de todo el sistema AMBAR y facilitar el control de acceso a las diversas aplicaciones y proyectos disponibles en el mismo, se implementó un Repositorio de Usuarios totalmente independiente, cuyo modelo conceptual se aprecia en la figura 16. Figura 14: Modelo Conceptual actual del ROA de AMBAR 47 Figura 15: Modelo Conceptual actual del Repositorio de Metadata de AMBAR 48 Figura 16: Modelo Conceptual del Repositorio de Usuarios de AMBAR 3.2.2.- Fase II: Desarrollo y Prueba: Adaptación de servicios existentes e implementación de nuevos servicios de la Capa de Servicios Web de AMBAR. Una vez implementadas las bases de datos correspondientes a los modelos conceptuales anteriormente señalados, se procedió a adaptar los servicios web existentes e implementar los nuevos servicios, de acuerdo a los requerimientos del proyecto. En el Anexo E, se puede apreciar el diseño de todos los servicios disponibles en la capa de servicios web de AMBAR para el Repositorio de Metadata, el ROA y el Repositorio de Usuarios. Es importante señalar que los servicios: eliminarPorOID, busquedaBasica, busquedaAvanzada, agregarMD y buscarPorOID, ya existían como implementaciones de proyectos anteriores, sin embargo fueron adaptados en cuanto al método de conexión con la nueva base de datos en MYSQL y a la modificación de algunos parámetros de entrada o salida de los mismos; el resto de los servicios presentados fueron creados durante este proyecto. En cuanto a los servicios web para el ROA, éstos siguen estando integrados a los del repositorio de metadata; sin embargo, durante el proyecto se 49 agregaron los servicios: listarOA y buscarPersonaPorOID; y se modificó el resto de los servicios existentes. Por último, continuando con el enfoque SOA, para el Repositorio de Usuarios de AMBAR se implementaron los servicios: buscarRol, verificarRegistroPersona, registrarUsuario. 3.3.-Iteración 2: Rediseño de la interfaz gráfica de usuario del ROA de AMBAR. En esta iteración se realizó el rediseño de las interfaces del ROA de AMBAR, para permitir por una parte, la posterior conexión con MOODLE y la validación y autenticación de sus usuarios en el repositorio; y por la otra, mantener la integridad del sistema al ser utilizado de forma independiente a cualquier LMS. 3.3.1. Fase I: Modelado de la iteración: 3.3.1.1.- Refinamiento del Diagrama de Casos de Uso A continuación se describen en detalle los requerimientos funcionales asociados a esta segunda iteración, tales como: Almacenar OA, Modificar la metadata del OA y Eliminar OA en el repositorio. Los casos de uso de segundo nivel como: Ingresar datos del propietario del OA e Ingresar metadata; y los de tercer nivel como: Metadata General, Metadata Ciclo de Vida, Meta-Metadata, Metadata Técnica, Metadata Educacional, Metadata Autor, Metadata Relación, Metadata Anotaciones, Metadata Clasificaciones; se encuentran detallados en el Anexo F. 50 Figura 17: Diagrama de Casos de Uso – Almacenar OA en el ROA de AMBAR. Figura 18: Diagrama de Casos de Uso – Eliminar OA del ROA de AMBAR. 51 Figura 19: Diagrama de Casos de Uso – Modificar metadata del OA en el ROA de AMBAR 52 3.3.1.2.- Modelado de las Actividades Los Diagramas de Actividades presentados a continuación, representan el flujo de trabajo llevados a cabo por los actores del sistema, en su interacción con el ROA de AMBAR, a través del sistema MOODLE. Figura 20: Diagrama de Actividades: Administrador del Curso en MOODLE – Buscar OA en el ROA de AMBAR 53 Figura 21: Diagrama de Actividades: Administrador del Curso en MOODLE – Gestionar OA en el ROA de AMBAR 54 3.3.2.-Fase II: Desarrollo y Prueba: Interfaz del ROA de AMBAR En base a los requerimientos del proyecto, se realizó el rediseño de la interfaz gráfica de usuario del ROA de AMBAR, en cuanto a sus elementos principales, los cuales se simplificaron en gran medida, dando como resultado una interfaz más usable y adaptable tanto para este proyecto como para futuros trabajos cuyo propósito también sea conectarse a este repositorio. El proceso para llevar a cabo dicho rediseño se describe a continuación: 1. Se creó un nuevo banner para la aplicación de usuario. 2. En la estructura interna del proyecto, se dividieron las funcionalidades del ROA en dos grupos: buscar y gestionar. En la búsqueda se mantuvo, la búsqueda básica y avanzada, así como sus funcionalidades asociadas. En la gestión, se agrupó el almacenamiento, modificación y eliminación de un OA. 3. Se desarrolló una función de envío de correo, de forma que se pueda informar al usuario sobre el almacenamiento exitoso de un nuevo OA y sirva como el medio para confirmar la posible modificación o eliminación de un recurso existente. 4. Se creó el menú principal con las opciones: Almacenar, Modificar y Eliminar OA. 5. El almacenamiento se implementó de forma tal que, se realice la verificación de los datos personales ingresados, contra la base de datos de usuarios a través del servicio web correspondiente, para validar que efectivamente la persona se encuentra registrada en AMBAR. 6. Para aquellas personas que no se encuentren registradas, se creó un prototipo del sistema de registro, el cual le asigna al nuevo usuario el rol Registrado de AMBAR. Este rol asignado por defecto, permite agregar, modificar y eliminar objetos propios del ROA. Este sistema de registro también utiliza la función de envío de correo descrita anteriormente para informar el registro exitoso de un nuevo usuario en AMBAR. 7. Los procesos de modificación y eliminación de un OA, se trabajaron en base a una validación de los datos personales del usuario contra los datos de los propietarios de los recursos, generando de esta forma un listado de resultados, el cual contendrá sólo aquellos objetos que ese usuario en particular, puede modificar o eliminar. La 55 culminación de cualquiera de estas acciones, depende de la confirmación del usuario, a través del correo enviado por la función habilitada en pasos anteriores. 8. Se diseñaron ayudas rápidas para todos los elementos de las distintas interfaces del ROA de AMBAR, con el propósito de asistir al usuario en el ingreso de los datos. Por último, en este rediseño se siguió trabajando bajo una Arquitectura MVC, donde los componentes mantienen constante intercambio de comunicación, tal y como se ilustra en las figuras 22 – 26. Figura 22: Diagrama de Secuencia del ROA de AMBAR para Buscar OA – Búsqueda Básica. 56 Figura 23: Diagrama de Secuencia del ROA de AMBAR para Buscar OA – Búsqueda Avanzada. 57 Figura 24: Diagrama de Secuencia del ROA de AMBAR para Almacenar OA. 58 Figura 25: Diagrama de Secuencia del ROA de AMBAR para Modificar OA 59 Figura 26: Diagrama de Secuencia del ROA de AMBAR para Eliminar OA 60 3.4.-Iteración 3: Desarrollo del tipo de recurso “Objeto de Aprendizaje (OA) Básico”, del módulo de actividades “Objeto de Aprendizaje (OA) Estandarizado” y del bloque “ROA de AMBAR” en MOODLE. En esta iteración se desarrolló un nuevo tipo de recurso y un módulo de actividades en MOODLE llamados “Objeto de Aprendizaje (OA) Básico” y “Objeto de Aprendizaje (OA) Estandarizado”, respectivamente, la finalidad de los mismos es que un usuario Administrador del Curso, pueda agregar un OA en su curso, por medio de la búsqueda y recuperación de tal objeto desde el ROA de AMBAR desde el mismo entorno de trabajo de MOODLE. De igual manera, se creó un bloque en MOODLE denominado “ROA de AMBAR”, con el cual el usuario va poder gestionar los objetos almacenados en dicho repositorio. 3.4.1.-Fase I: Modelado de la iteración: 3.4.1.1.-Refinamiento del Diagrama de Casos de Uso A continuación se describen en detalle los requerimientos funcionales asociados a esta tercera iteración, tales como: Agregar OA en el curso desde el ROA de AMBAR, Ir al ROA de AMBAR, Editar información del OA en el curso y Eliminar OA del curso en MOODLE. 61 Figura 27: Diagrama de Casos de Uso - Agregar OA en el curso desde el ROA de AMBAR. 62 Figura 28: Diagrama de Casos de Uso - Ir al ROA de AMBAR 63 Figura 29: Diagrama de Casos de Uso - Editar información del OA en el curso. Figura 30: Diagrama de Casos de Uso - Eliminar OA del Curso. 64 3.4.1.2.- Modelado de las Actividades Los Diagramas de Actividades presentados a continuación, representan el flujo de trabajo llevados a cabo por los actores del sistema, en su interacción con el tipo de recurso “Objeto de Aprendizaje (OA) Básico”, con el módulo de actividades “Objetos de Aprendizaje (OA) Estandarizado” y con un OA almacenado en el curso de MOODLE. Figura 31: Diagrama de Actividades: Administrador del Curso en MOODLE – Agregar OA al Curso 65 Figura 32: Diagrama de Actividades: Administrador del Curso en MOODLE – OA del Curso Figura 33: Diagrama de Actividades: Usuario del Curso en MOODLE – OA del Curso 66 3.4.2.-Fase II: Desarrollo y Prueba: Interfaz del tipo de recurso “Objeto de Aprendizaje (OA) Básico”, del módulo de actividades “Objeto de Aprendizaje (OA) Estandarizado” y del bloque “ROA de AMBAR” de MOODLE. Una vez culminado el modelado de esta iteración, presentado en la fase anterior, se procedió a descargar e instalar el paquete de la versión 1.9.1.0 de MOODLE para Windows, el cual contiene la estructura de directorios presentada en la figura 34. Es importante tomar en cuenta, que un OA se puede encontrar en diversos formatos, los cuales se categorizaron como: Básicos y Estandarizados. Los OA Básicos, son aquellos en formatos: .jpeg, .gif, .pdf, .doc, .ppt, .mp3, .mpeg, .flv, .avi.; y los OA Estandarizados son los recursos que siguen el estándar SCORM y son presentados en formato .zip. Fue necesario tomar en cuenta la categoría a la que pertenece un OA, ya que los OA básicos se representan como recursos y los estandarizados como actividades, dentro de la estructura de MOODLE. Recordando lo presentado en el marco conceptual del presente trabajo, un recurso dentro de MOODLE, permite desplegar un contenido para que el usuario final adquiera conocimiento; mientras que una actividad, se basa en llevar a cabo un conjunto de pasos para generar un producto, el cual pueda ser evaluado por el docente del curso. Tomando en cuenta lo anterior, es necesario recalcar, que dentro del contexto de este proyecto, aquellos objetos que se encuentran en formato .zip fueron manejados como una actividad para seguir con la estructura lógica y física que MOODLE asocia a los archivos en dicho formato, generados mediante el estándar SCORM. 67 Figura 34: Estructura de directorios de MOODLE 3.4.2.1.- Recurso “Objeto de Aprendizaje (OA) Básico” Para trabajar el OA Básico como un recurso, se creó en el siguiente directorio: C: \...\moodle\mod\resource\type\; la carpeta oaBasico, la cual contendrá aquellos archivos requeridos para el correcto funcionamiento del mismo. Gráficamente, ésta nueva carpeta y los archivos asociados a la misma se pueden observar en la figura 35. De estos archivos, es importante mencionar el tercero de ellos, resource.class.php, en el cual se define por medio de una clase, los atributos propios del recurso, así como los métodos que establecen su comportamiento. De esta clase, se analizó el método display(), el cual valida el tipo de archivo a cargar en el curso como un OA básico, por ejemplo: una imagen (jpeg, gif, pdf), un video (avi, mpeg, flv), entre otros; una porción del código de esta función se puede apreciar en Anexo G. 68 Figura 35: Estructura de directorios de la carpeta oaBasico en MOODLE. Posteriormente, se realizó un conjunto de modificaciones a la función setup_elements(), del mismo archivo resource.class.php, con la finalidad de crear un formulario personalizado (ver Anexo G), por medio del cual el administrador del curso pueda introducir los valores descriptivos del objeto a almacenar. Este formulario está compuesto por las siguientes cabeceras y sus elementos propios: General: donde se especifica el nombre del recurso y el resumen de su contenido. Ambos campos son obligatorios. Enlazar un Objeto de Aprendizaje (OA) Básico: se especifica la ubicación física del recurso. El valor de este campo se completará automáticamente al buscar y 69 seleccionar el OA en el ROA de AMBAR, por medio del botón IR al ROA de AMBAR, el cual también pertenece a esta cabecera. Ventana: permite configurar las opciones de la ventana del navegador donde se visualizará posteriormente el OA almacenado en el curso. Algunas de las opciones contenidas en esta cabecera son: forzar descarga, abrir en la misma/nueva ventana, cambiar propiedades de la nueva ventana, mostrar/ocultar marco de la ventana, cambiar el tamaño de la nueva ventana, entre otras. En este caso se configura como valor por defecto: abrir en la misma ventana con el marco visible. Parámetros: contiene un conjunto de parámetros adicionales que pueden ser de relevancia para el administrador del curso a la hora de almacenar un nuevo OA. Ajustes comunes del módulo: permite configurar la visibilidad del OA a agregar, de forma que esté disponible o no para su consulta y utilización. Otra modificación significativa, resulta la validación hecha en la función resource_get_coursemodule_info() del archivo lib.php, ubicado en el directorio C:\... \moodle\mod\resource, para identificar un OA básico dentro de todos los recursos del curso. En esta función (ver Anexo G), además se especificó que si un recurso es de tipo OA Básico, entonces debe ir acompañado de un logo distintivo, diseñado especialmente para este caso. De esta forma, queda construido el tipo de recurso Objeto de Aprendizaje (OA) Básico de MOODLE. 3.4.2.2.- Actividad “Objeto de Aprendizaje (OA) Estandarizado” Seguidamente, se procedió a implementar el módulo de actividad “Objeto de Aprendizaje (OA) Estandarizado”, para lo cual se creó en el directorio C:\Archivos de programa\Apache Software Foundation\Apache2.2\htdocs\moodle\mod\, la carpeta llamada OA, cuya estructura de directorios se observa en la figura 36. 70 Figura 36: Estructura de directorios de la carpeta OA en MOODLE Uno de los archivos contenidos en esta carpeta es lang/oa.php, en el cual se establecieron todas las etiquetas de los elementos de la actividad, por ejemplo, el título con el que se identifica el ítem en el listado de actividades del curso, entre otros. Otro archivo relevante es mod_form, en el cual se definieron las variables globales para el curso y para la sección actual de trabajo y se redireccionó el flujo hacia el módulo SCORM, definido previamente en la instalación de MOODLE. Una porción del código de los archivos mencionados, se puede visualizar en el Anexo H. Al realizar el redireccionamiento se envía un parámetro para indicarle al módulo SCORM que se almacenará un OA, de tal forma que se muestre un mensaje descriptivo en la interfaz gráfica y el botón Ir al ROA DE AMBAR; el código que permitió la captura de dicho parámetro y la definición del botón es parte del Anexo H. En cuanto a los requerimientos funcionales: abrir, modificar la información y eliminar un OA, se puede decir que se implementaron a través de las funciones provistas por el mismo framework de MOODLE al activar la edición del curso, por lo que no fue necesario llevar a cabo ninguna modificación al respecto. 71 3.4.2.3.- Bloque “ROA de AMBAR” en MOODLE El tercer producto de esta iteración, viene dado por la construcción del bloque “ROA de AMBAR” en esta misma plataforma. A través de este bloque, el administrador del curso, podrá acceder desde el entorno de trabajo, al ROA de AMBAR para gestionar (almacenar, modificar y eliminar) los OA almacenados en este repositorio. Para ello, en primer lugar, como se observa en la figura 37, se crea la carpeta roa_ambar en el directorio C:\…\moodle\blocks, formando parte del resto de bloques estándares de MOODLE. Por último, la configuración de este bloque es un proceso bastante sencillo, el cual requiere la modificación del archivo block_ambar_roa.php, contenido en el directorio mencionado anteriormente, en el cual se modificó la función get_content() (ver Anexo I). Esta función, permite establecer la estructura del bloque, la cual en este caso será un simple enlace hacia el repositorio. De acuerdo a los requerimientos del proyecto en general, se decidió crear un bloque no editable, de tal forma que el administrador puede habilitarlo o deshabilitarlo en su curso, pero no puede cambiar el contenido propio del bloque. Además, un aspecto importante con respecto a este bloque, es la validación del acceso al mismo por parte de todos los usuarios de MOODLE, en este sentido, sólo los administradores de MOOODLE, los creadores de cursos o los profesores editores, podrán visualizarlo y hacer uso del mismo; esto con la finalidad de evitar que los estudiantes ingresen al ROA de AMBAR sin previa autorización. 72 Figura 37: Estructura de directorios de la carpeta roa_ambar en MOODLE. 73 CAPÍTULO IV ANÁLISIS DE RESULTADOS En el siguiente capítulo se presenta el resultado final de llevar a cabo cada una de las iteraciones descritas por el Modelado Ágil (MA); quedando representado por el rediseño del ROA de AMBAR, la construcción del tipo de recurso “Objeto de Aprendizaje (OA) Básico”, del módulo de actividades “Objeto de Aprendizaje (OA) Estandarizado” y del bloque “ROA de AMBAR” para MOODLE. Además se describen sus respectivas interfaces y su funcionamiento general. 4.1.- Descripción de la interfaz del ROA de AMBAR Al realizar la creación del nuevo banner para el ROA de AMBAR, se combinaron elementos gráficos en cuanto a colores y formas, de lo que conceptualmente es un OA (cubo), junto con MOODLE (birrete) y AMBAR (colores); el resultado de esto se puede apreciar en la figura 38. Figura 38: Banner de la aplicación del ROA de AMBAR Al dividir las funcionalidades del ROA de AMBAR en dos grupos: buscar y gestionar, se modificaron las interfaces respectivas. Para la búsqueda, la interfaz presenta un menú con las opciones de búsqueda básica (figura 39) y avanzada (figuras 40 y 41), así como el respectivo formulario de ingreso de datos. Una vez que el usuario realiza la búsqueda, en cualquiera de sus formas, se le presenta un listado de los objetos correspondientes (figura 42), de los cuales se puede visualizar su contenido o seleccionar alguno para ser cargado en el curso de MOODLE. 74 Figura 39: Búsqueda Básica Figura 40: Búsqueda Avanzada. 75 Figura 41: Búsqueda Avanzada (Cont.). 76 Figura 42: Listado de Resultados para las búsquedas. Para la gestión de un OA, la interfaz presenta un menú con cada una de las opciones disponibles, la cuales son almacenar, modificar o eliminar OA. El almacenamiento se realiza en tres pasos: insertar los datos personales del usuario, insertar la ubicación física del archivo a almacenar y luego de verificar todos los datos, ingresar la metadata asociada al mismo. Estos pasos se pueden apreciar gráficamente en las figuras 43 – 46. Durante el primer paso, si el usuario que está intentando almacenar un nuevo recurso, no se encuentra registrado en AMBAR, se le muestra un mensaje informando esta condición (figura 47) y dándole la opción de registrarse en el sistema. La página de registro, presentada en la figura 48, contiene un formulario bastante sencillo, el cual permite agregar los datos del usuario al sistema. Una vez que el usuario agrega exitosamente un nuevo OA al repositorio, se le envía un correo electrónico a la dirección ingresada anteriormente. 77 Figura 43: Almacenar OA – Paso 1. Figura 44: Almacenar OA – Paso 2. 78 Figura 45: Almacenar OA – Paso 3. Figura 46: Almacenar OA – Paso 3 (Cont.). 79 Figura 47: Almacenar OA - Usuario No Registrado. Figura 48: Registro de Usuario. 80 Las siguientes opciones del menú principal son Modificar y Eliminar OA, las cuales a través de dos pasos, combinan elementos mencionados anteriormente, tales como introducir datos personales y la realización de una búsqueda básica o avanzada. En estos casos, el listado de resultado, contendrá sólo aquellos objetos que ese usuario en particular, puede modificar o eliminar. Tanto en la modificación como en la eliminación, se envía un correo de confirmación para culminar tal acción. Todos los elementos de las distintas interfaces del ROA de AMBAR, contienen una ayuda rápida, para asistir al usuario en el ingreso de los datos, esta ayuda se puede observar en la misma figura 48. 4.2.- Descripción de la interfaz del tipo de recurso “Objeto de Aprendizaje (OA) Básico”, del módulo de actividades “Objeto de Aprendizaje (OA) Estandarizado” y del bloque “ROA de AMBAR”, de MOODLE Recordando la distinción que hace MOODLE en cuanto a sus recursos y actividades, es importante señalar que, para que el administrador de cualquier curso, luego de activar la opción de edición, pueda añadir un OA en el mismo, debe revisar el formato del objeto y decidir de antemano cuál listado debe consultar: el listado de recursos, para los OA básicos (.mp3, .flv, .doc, .ppt, entre otros); ó el listado de actividades, para los OA estandarizados bajo SCORM (.zip). De esta forma debe proceder a buscar el ítem Enlazar un Objeto de Aprendizaje que corresponda a cada caso, tal y como se muestra en la figura 49. En primer lugar, en el caso de agregar un recurso de tipo OA básico, se le presenta al usuario un formulario, en el cual debe ingresar los datos de identificación del OA dentro del curso, así como la ruta del archivo físico a almacenar, la cual se debe obtener mediante la realización de una búsqueda básica o avanzada dentro del ROA de AMBAR; a través del botón “Ir al ROA de AMBAR”, presente en el mismo formulario. La interfaz gráfica del formulario y el detalle de cada una de las cabeceras que posee, se pueden apreciar en las figuras 50 y 51. Una vez que el OA básico ha sido añadido al curso, se identifica con un 81 logo particular diseñado especialmente para este caso. Un ejemplo de un OA disponible en el curso se puede apreciar en la figura 52. Figura 49: Listado de Recursos y Listados de Actividades de MOODLE Figura 50: Cabecera general del recurso “Objeto de Aprendizaje (OA) Básico” de MOODLE. 82 Figura 51: Cabeceras Enlazar un Objeto de Aprendizaje (OA) Básico, Ventana, Parámetros y Ajustes comunes del módulo; y botones de acción del Recurso “Objeto de Aprendizaje (OA) Básico” de MOODLE. Figura 52: Ejemplo de un OA básico en un curso de MOODLE, junto con su logo distintivo. 83 En segundo lugar, en el caso de añadir una actividad de tipo OA Estandarizado, también se le presenta al usuario un formulario de identificación (ver figura 53). Las cabeceras de este formulario son las que corresponden a la actividad SCORM de MOODLE, por estar desarrollados bajo el mismo estándar. Igualmente, por medio del botón “Ir al ROA de AMBAR” de este formulario se puede realizar la búsqueda de un OA en dicho repositorio. Todos los recursos y actividades de MOODLE, tienen asociadas las opciones de edición: mover derecha/izquierda, mover arriba/abajo, editar información, eliminar y ocultar/mostrar; tal como se ilustra en la figura 54. Por último, la interfaz gráfica del bloque “ROA de AMBAR” de MOODLE, es bastante sencilla, estando compuesta por un enlace hacia el repositorio (ver figura 55). Este enlace le permite al usuario, almacenar, modificar o eliminar un OA del ROA desde el mismo entorno de su curso en MOODLE. Es importante recordar que este bloque sólo estará visible para los usuarios con privilegios de edición, es decir que ni los estudiantes, ni los profesores no editores, podrán acceder al ROA desde esta plataforma, tal y como se muestra en la figura 56. 84 Figura 53: Formulario del módulo de actividades “Objeto de Aprendizaje (OA) Estandarizado” de MOODLE. 85 Figura 54: Opciones de edición de un OA en MOODLE Figura 55: Bloque “ROA de AMBAR” en MOODLE. 86 Figura 56: Visibilidad del bloque “ROA de AMBAR” en MOODLE de acuerdo al rol de usuario. 87 CONCLUSIONES Una vez concluido este Trabajo Especial de Grado, se puede afirmar que se alcanzó el objetivo planteado de integrar el Repositorio de Objetos de Aprendizaje (ROA) de AMBAR con la plataforma MOODLE a través de la capa de servicios web; mediante la creación del tipo de recurso “Objeto de Aprendizaje (OA) Básico”, del módulo de actividades “Objeto de Aprendizaje (OA) Estandarizado” y del bloque “ROA de AMBAR”, en MOODLE. El tipo de recurso y el módulo de actividades desarrollados para MOODLE, le permiten a un administrador del curso o a un profesor editor, enlazar un OA como parte de la estructura de un curso virtual, a través de un formulario estándar y con la posibilidad de realizar búsquedas en el ROA de AMBAR, desde el mismo entorno de trabajo. Por su parte el bloque mencionado, facilita la gestión, en cuanto a modificación y eliminación, de los recursos disponibles en dicho repositorio, posibilitando además el almacenamiento de nuevos OA en el mismo. Cabe destacar que este trabajo fue desarrollado sobre la versión 1.9.1.0 de MOODLE, la cual era la versión estable para el momento, a pesar de estar en desarrollo la versión 2.0.1. Gracias a la experiencia adquirida durante este trabajo especial de grado, se puede decir que la SOA y la arquitectura MVC del ROA de AMBAR, fueron elementos claves que permitieron en gran medida aprovechar desde MOODLE, las funcionalidades definidas para el ROA de AMBAR, tales como: búsqueda básica y avanzada, almacenamiento, modificación y eliminación de un OA; facilitando la modificación y agregación de otros servicios web útiles para el proyecto AMBAR en general. De igual manera, las herramientas de desarrollo disponibles en el entorno de MOODLE (archivos, documentación, comunidad, entre otros) también significaron aportes efectivos para el éxito de este trabajo. A través del Modelado Ágil (MA) como método de desarrollo de software, se lograron desarrollar los requerimientos propuestos y de esta forma, cumplir con los objetivos específicos inicialmente planteados. Se pudo apreciar cómo esta metodología es 88 lo suficientemente flexible como para permitir agregar requerimientos de trabajo al proyecto en general, en distintos momentos del período de desarrollo, en este caso: la implementación de los repositorios de AMBAR en el SMBD MYSQL. Este requerimiento fue de vital importancia para el trabajo y a través del MA se le pudo asignar la máxima prioridad en el desarrollo. Finalmente, es importante señalar que con la migración mencionada, se obtuvieron resultados favorables en cuanto a la implementación de los repositorios de AMBAR en un SMBD Software Libre que cuenta además con una comunidad de desarrollo robusta y estable, por lo tanto en este sentido se puede concluir que como trabajo de investigación resulta factible probar otras soluciones dentro del desarrollo de AMBAR con el fin de evaluar y comparar el desempeño de sus componentes sobre distintas plataformas. 89 RECOMENDACIONES Este trabajo sirve como antecedente para continuar la integración entre MOODLE y ROA independientes, aumentando el uso de estas entidades y enriqueciendo los diferentes cursos virtuales, al incorporar en su estructura objetos complejos para beneficiar el proceso de enseñanza y aprendizaje. Es importante continuar con proyectos similares para, a largo plazo, construir comunidades internacionales de OA mucho más ricas y completas. Se deja como iniciativa para futuros desarrollos, buscar una mayor estandarización y transparencia en el manejo de los OA por parte de MOODLE, en la cual desaparezca la distinción entre OA Básicos y Estandarizados. De esta forma el proceso de construcción de un curso en particular puede ser aún más fácil y rápido para el docente asociado al mismo; sin embargo, se recomienda que antes de emprender un proyecto de desarrollo sobre esta plataforma, se realice una gran revisión de la documentación, así como instalar, probar y experimentar las diversas versiones disponibles; todo esto con el propósito de entender previamente el funcionamiento y la estructura lógica y física de MOODLE. En cuanto a los SMBD existentes en el mercado, se recomienda llevar a cabo investigaciones asociadas a la implementación de los repositorios de AMBAR en SMBD Objeto-Relacional como por ejemplo PostgreSQL, con el fin de explotar la ventaja de almacenar tipos complejos como parte de la data del repositorio, manteniendo la naturaleza de Software Libre del proyecto en general. Igualmente, se sugiere trabajar los métodos internos de cada servicio web disponible con el fin de asegurar mayor control de concurrencia, así como optimizar las consultas a nivel de base de datos. Además, se alienta a los futuros desarrolladores, a agregar más servicios a la Capa de Servicios Web de AMBAR para aumentar sus funcionalidades. Finalmente, se exhorta a darle gran atención al modelado inicial de cada iteración, independientemente del método de desarrollo empleado; para facilitar notablemente el proceso de desarrollo global, identificando el alcance del sistema y la arquitectura a utilizar. 90 REFERENCIAS Adriani, K., Díaz, S., López, M. G., Miguel, V. Montaño, N. (2006). Prototipo del Repositorio de Objetos de Aprendizaje de un Sistema Generador de Ambientes de Enseñanza – Aprendizaje basados en Objetos de Aprendizaje (AMBAR). III Simposio Pluridisciplinar sobre Objetos de Aprendizaje apoyados en las tecnologías (OD@06). España. Obtenido el 25 de marzo de 2010 desde http://150.185.75.79:8080/Ambar_I/ObjetosAprendizaje/Articulos_Ambar/Ponencia _Repositorio_de_OA_de_AMBAR.pdf Alarcón, F. V. (2006, Junio). Desarrollo de Sistemas de Información. Una metodología basada en el modelado. Ediciones de la Universitat Politécnica de Catalunya, SL. (pp. 216). Alegría, G. R. A. & Nieves, H. C. (2008, Mayo). Repositorio de Metadata de los Objetos del Sistema Generador de Ambientes de Enseñanza Aprendizaje Constructivistas basados en Objetos de Aprendizaje (AMBAR). Trabajo Especial de Grado a los fines de optar al título Licenciado en Computación, presentado ante la ilustre Universidad Central de Venezuela, Facultad de Ciencias, Escuela de Computación. Caracas, Venezuela. Arredondo, K. J. (2004). Seminario de Informática: Moodle. Obtenido el 4 de junio de 2010 desde http://www.slideshare.net/kelvinjose/presentacion-moodle-1959805 Beleño, M. C. M. (2007, Octubre 30). Capa de Servicios de Base de Datos del Sistema Generador de AMBientes de enseñanza- ApRendizaje AMBAR. Trabajo Especial de Grado a los fines de optar al título Licenciado en Computación, presentado ante la ilustre Universidad Central de Venezuela, Facultad de Ciencias, Escuela de Computación. Caracas, Venezuela. http://150.185.75.79:8080/Ambar_I/ObjetosAprendizaje/Articulos_Ambar/Ponencia_Repositorio_de_OA_de_AMBAR.pdf http://150.185.75.79:8080/Ambar_I/ObjetosAprendizaje/Articulos_Ambar/Ponencia_Repositorio_de_OA_de_AMBAR.pdf http://www.slideshare.net/kelvinjose/presentacion-moodle-1959805 91 Beleño, M. C., Hernández, Y., López, M. G., Miguel, V., Montaño, N. & Pernalete, B. (2008, Octubre). Un Repositorio basado en Servicios Web para el Sistema Generador de Ambientes de Aprendizaje AMBAR. V Simposio Pluridisciplinar sobre Diseño y Evaluación de Contenidos Educativos Reutilizables (SPDECE). Salamanca, España. Obtenido el 25 de marzo de 2010 desde http://www.web.upsa.es/spdece08/contribuciones/160_Repositorio_de_AMBAR_ba sado_en_servicios_web-def.pdf Bello, C. F. (2009, Febrero 10). Tipos de Cursos (Moodle). Obtenido el 04 de junio de 2010 desde http://joomla.fcruzbello.es/index.php/moodle/tipos-de-curso Castillo, L. Figueroa, M. J. & Morales, L. (2008). Modificación del Módulo SCORM para el Soporte Básico del IMS-LD. Departamento de Ciencias de la Computación e Inteligencia Artificial de la Universidad de Granada. Barcelona, España. Obtenido el 5 de Marzo de 2010 desde http://decsai.ugr.es/~lcv/Research/Publications/Papers/126-223-1-PB.pdf Calderón, A. (2009, Abril 25). ¿Qué es un LMS?. Obtenido el 2 de marzo de 2010 desde http://aprendizajedistancia.blogspot.com/2009/04/que-es-un-lms.html Di Blasi, L. L. (2010, Mayo). Desarrollo del Módulo WebQuest basado en la especificación IMS Learning Design para la creación de cursos en la plataforma MOODLE. Trabajo Especial de Grado a los fines de optar al título Licenciado en Computación, presentado ante la ilustre Universidad Central de Venezuela, Facultad de Ciencias, Escuela de Computación. Caracas, Venezuela. De la Torre. A. (2005). Recursos y actividades en Moodle. Obtenido el 8 de marzo de 2010 desde http://www.adelat.org/media/docum/moodle/recursos_y_actividades_ en_moodle.html http://www.web.upsa.es/spdece08/contribuciones/160_Repositorio_de_AMBAR_basado_en_servicios_web-def.pdf http://www.web.upsa.es/spdece08/contribuciones/160_Repositorio_de_AMBAR_basado_en_servicios_web-def.pdf http://joomla.fcruzbello.es/index.php/moodle/tipos-de-curso http://decsai.ugr.es/~lcv/Research/Publications/Papers/126-223-1-PB.pdf http://aprendizajedistancia.blogspot.com/2009/04/que-es-un-lms.html http://www.adelat.org/media/docum/moodle/recursos_y_actividades_%20en_moodle.html http://www.adelat.org/media/docum/moodle/recursos_y_actividades_%20en_moodle.html 92 Fernández, M. B. (2006, Marzo). Especificaciones y Estándares en e-learning. Revista de Tecnologías de la Información y Comunicación Educativas de la Red Digital del Ministerio de Educación y Ciencia de España, 1(6), 11-32. Obtenido el 1 de junio de 2010 desde http://reddigital.cnice.mec.es/ 6/Articulos/pdf/Articulos_2.pdf García, A. L. (2005, Abril). Objetos de Aprendizaje: Características y Repositorios. Boletín Electrónico de Noticias de Educación a Distancia CUED, España. 1-5. Obtenido el 25 de marzo de 2010 desde http://ares.unimet.edu.ve/programacion/cursos/tobj/ articObj2.pdf García, P. F. J. (2009, Diciembre 4). Estado actual de los sistemas e-learning. Revista Electrónica Universidad de Salamanca, 3 (10). Obtenido el 2 de marzo de 2010, desde http:// campus.usal.es/ ~teoriaeducacion/ rev_numero_06_2/ n6_02_art_garcia_penalvo.htm Guardia, R. M. (2008, Julio 19). Ventajas – Desventajas de la Plataforma Moodle. Universidad Católica del Perú. Obtenido el 7 de julio de 2010 desde http://blog.pucp.edu.pe/item/26867 Hernández, B. Y. C. (2009, Noviembre). Proceso de Evaluación de la Calidad para los Objetos de Aprendizaje de tipo Combinado Abierto. Trabajo de Grado a los fines de optar al título Magíster Scientiarum Mención Ciencias de la Computación, presentado ante la ilustre Universidad Central de Venezuela, Facultad de Ciencias, Postgrado en Ciencias de la Computación. Caracas, Venezuela. Iriarte, A. W. M. (2008, Julio 17). Moodle y su Enfoque Pedagógico. Universidad Católica del Perú. Obtenido 17 de octubre de 2009 desde http://blog.pucp.edu.pe/item/26522 http://reddigital.cnice.mec.es/%206/Articulos/pdf/Articulos_2.pdf http://reddigital.cnice.mec.es/%206/Articulos/pdf/Articulos_2.pdf http://ares.unimet.edu.ve/programacion/cursos/tobj/%20articObj2.pdf http://ares.unimet.edu.ve/programacion/cursos/tobj/%20articObj2.pdf http://blog.pucp.edu.pe/item/26867 http://blog.pucp.edu.pe/item/26522 93 Irisarri, G. L. (1997). Moodle. Mural de la Universitat de València. Obtenido el 8 de marzo de 2010 desde mural.uv.es/leiga/exposicion.ppt López, G. P. & Sein-Echaluce, L. M. L. (2010). Moodle: Difusión y Funcionalidades. Universidad de Zaragoza (2010), Innovación Docente, Tecnologías de la Información y la Comunicación e Investigación Educativa (pp. 1-12). Obtenido el 8 de marzo de 2010 desde http://www.unizar.es/eees/innovacion06/ COMUNIC_PUBLI/BLOQUE_III/CAP_III_10.pdf López, M., Miguel, V. & Montaño, N. (2008, Enero 31). Sistema Generador de AMBientes de Enseñanza-ApRendizaje Constructivistas basados en Objetos de Aprendizaje AMBAR: la Interdisciplinariedad en los ambientes de aprendizaje en línea. RED: Revista de Educación a Distancia, Murcia, España, 8 (19), 1-14. Obtenido el 29 de abril de 2010 desde http://www.um.es/ead/red/19/gertrudis.pdf López, M. G., Miguel, V., Montaño N. & Pernalete, D. (2007, Septiembre). IMS- Learning Design y el Modelo arquitectural de AMBAR. IV Simposio Plurisdisciplinar sobre Diseño, Evaluación y Desarrollo de Contenidos Educativos Reutilizables (SPDEDCE), Bilbao. Obtenido el 28 de marzo de 2010 desde http://spdece07.ehu.es/actas/Pernalete.pdf Molist, M. (2008). Moodle llena la geografía educativa española de campus virtuales. CiberPaís, El País. Obtenido el 21 de enero de 2010 desde http://www.elpais.com/archivo/hemeroteca.html?cals=0&day=4&month=12&year= 2008 Toro, D. A., & Jiménez, B. B. (2000, Octubre). Metodología para la Elicitación de Requisitos de Sistemas Software. Universidad de Sevilla. Obtenido el 23 de septiembre de 2010 desde http://www.lsi.us.es/~informes/lsi-2000-10.pdf http://mural.uv.es/leiga/exposicion.ppt#_blank http://www.unizar.es/eees/innovacion06/%20COMUNIC_PUBLI/BLOQUE_III/CAP_III_10.pdf http://www.unizar.es/eees/innovacion06/%20COMUNIC_PUBLI/BLOQUE_III/CAP_III_10.pdf http://www.um.es/ead/red/19/gertrudis.pdf http://spdece07.ehu.es/actas/Pernalete.pdf http://www.elpais.com/archivo/hemeroteca.html?cals=0&day=4&month=12&year=2008 http://www.elpais.com/archivo/hemeroteca.html?cals=0&day=4&month=12&year=2008 http://www.lsi.us.es/~informes/lsi-2000-10.pdf 94 Quintero, S. J. A. (2009, Abril). Integración del Repositorio de AMBAR con el Repositorio de Metadata a través de la Capa de Servicios. Trabajo Especial de Grado a los fines de optar al título Licenciado en Computación, presentado ante la ilustre Universidad Central de Venezuela, Facultad de Ciencias, Escuela de Computación. Caracas, Venezuela. Sáez M. J., García M. J. y Jiménez G. P. (1999, Noviembre). Una Arquitectura para una Herramienta de Patrones de Diseño. Universidad de Murcia, España. Obtenido el 13 de Diciembre de 2010 desde http://www.dis.um.es/~jmolina/arquipatronesjis99.pdf http://www.dis.um.es/~jmolina/arquipatronesjis99.pdf 95 ANEXOS 96 Anexo A: Representación gráfica de las iteraciones y fases del proyecto de acuerdo al Modelado Ágil (MA) Tabla A: Iteraciones y Fases del proyecto Iteración Fase 0 – Iniciación del Proyecto I – Contemplar Necesidades Iniciales 1 – Requerimientos Funcionales y No Funcionales 2 – Pila de Requerimientos II – Descripción de la arquitectura de MOODLE y del ROA de AMBAR 1 – Migración del Modelo Conceptual del ROA y del Repositorio de Metadata de AMBAR, adaptación de servicios web existentes e implementación de nuevos servicios de la Capa de Servicios Web de AMBAR I – Modelado de la iteración: Migración del SMBD DB4O a MYSQL II – Desarrollo y Prueba: Adaptación de servicios existentes e implementación de nuevos servicios de la Capa de Servicios Web de AMBAR. 2 – Rediseño de la interfaz gráfica de usuario del ROA de AMBAR. I – Modelado de la iteración 1 – Refinamiento del Diagrama de Casos de Uso 2 – Modelado de las Actividades II – Desarrollo y Prueba: Interfaz del ROA de AMBAR 3 – Desarrollo del tipo de recurso Objeto de Aprendizaje (OA) Básico, del módulo de actividades Objeto de Aprendizaje (OA) Estandarizado y del bloque ROA de AMBAR en MOODLE. I – Modelado de la iteración 1 – Refinamiento del Diagrama de Casos de Uso 2 – Modelado de las Actividades II – Desarrollo y Prueba: Interfaz del tipo de recurso Objeto de Aprendizaje Básico, del módulo de actividades Objeto de Aprendizaje Estandarizado y del Bloque ROA de AMBAR de MOODLE 1 – Objeto de Aprendizaje Básico 2 – Objeto de Aprendizaje Estandarizado 3 – Bloque ROA de AMBAR en MOODLE 97 Anexo B: Metodología para la elicitación de Requisitos de Sistemas de Software Objetivo de la metodología El objetivo de esta metodología es la definición de las tareas a realizar, los productos a obtener y las técnicas a emplear durante la actividad de elicitación de requisitos de la fase de ingeniería de requisitos del desarrollo de software. En esta metodología se distinguen dos tipos de productos: los productos entregables y los roductos no entregables o internos. Los productos entregables son aquellos que se entregan oficialmente al cliente como parte del desarrollo en fechas previamente acordadas, mientras que los no entregables son productos internos al desarrollo que no se entregan al cliente. Tareas recomendadas Las tareas recomendadas para obtener los productos descritos en esta metodología son las siguientes: – Tarea 1: Obtener información sobre el dominio del problema y el sistema actual. – Tarea 2: Preparar y realizar las reuniones de elicitación/negociación. 98 – Tarea 3: Identificar/revisar los objetivos del sistema. – Tarea 4: Identificar/revisar los requisitos de almacenamiento de información. – Tarea 5: Identificar/revisar los requisitos funcionales. – Tarea 6: Identificar/revisar los requisitos no funcionales. – Tarea 7: Priorizar objetivos y requisitos. Figura B.1: Tareas de elicitación de requisitos Plantillas y patrones lingüísticos para elicitación de requisitos Las plantillas y patrones lingüísticos que se presentan en los siguientes apartados están pensados para utilizarse tanto durante las reuniones de elicitación con clientes y usuarios como para registrar y gestionar los requisitos. Su objetivo es doble: por un lado 99 intentar paliar la falta de propuestas concretas sobre la expresión de requisitos. Por otro lado, también pueden usarse como elementos de elicitación y negociación durante las reuniones con clientes y usuarios de forma similar a las conocidas tarjetas CRC (Clase, Responsabilidad, Colaboración). Ambos aspectos, la estructuración de la información en forma de plantilla y la propuesta de frases "estándar", facilita la redacción de los requisitos, permitiendo a los participantes en las actividades de elicitación centrarse en expresar sus necesidades y no en cómo expresarlas. Plantilla para requisitos funcionales Los sistemas de información no sólo almacenan información, también deben proporcionar servicios usando la información que almacenan. La plantilla de requisitos funcionales, describe casos de uso y ayuda a los clientes y usuarios a responder a la pregunta "¿qué debe hacer el sistema con la información almacenada para alcanzar los objetivos de su negocio?". El significado de los campos específicos de esta plantilla es el siguiente (los campos comunes con la plantilla para requisitos de almacenamiento de información tienen el mismo significado): – Identificador y nombre descriptivo: igual que en la plantilla anterior, excepto que los identificadores de los requisitos funcionales empiezan con RF y que el nombre descriptivo suele coincidir con el objetivo que los actores esperan alcanzar al realizar el caso de uso. No se debe confundir este objetivo con los objetivos del sistema. El objetivo que los actores esperan alcanzar al realizar un caso de uso es de más bajo nivel, por ejemplo registrar un nuevo socio o consultar los pedidos pendientes. 100 Figura B.2: Plantilla para requisitos funcionales (Casos de Uso) 101 – Descripción: para los requisitos funcionales, este campo debe completarse de forma distinta en función de que el caso de uso sea abstracto o concreto. Si el caso de uso es abstracto, deben indicarse los casos de uso en los que se debe realizar, es decir, aquellos desde los que es incluido o a los que extiende. Si, por el contrario, se trata de un caso de uso concreto, se debe indicar el evento de activación que provoca su realización. En versiones anteriores aparecían las expresiones caso de uso abstracto y caso de uso concreto. La experiencia durante la utilización de estas plantillas en proyectos reales nos ha llevado a eliminar dichas expresiones, que resultaban difíciles de entender por los participantes en el proceso de elicitación. – Precondición: en este campo se expresan en lenguaje natural las condiciones necesarias para que se pueda realizar el caso de uso. – Secuencia normal: este campo contiene la secuencia normal de interacciones del caso de uso. En cada paso, un actor o el sistema realiza una o más acciones, o se realiza (se incluye) otro caso de uso. Un paso puede tener una condición de realización, en cuyo caso si se realizara otro caso de uso se tendría una relación de extensión. Se asume que, después de realizar el último paso, el caso de uso termina. – Postcondición: en este campo se expresan en lenguaje natural las condiciones que se deben cumplir después de la terminación normal del caso de uso. – Excepciones: este campo especifica el comportamiento del sistema en el caso de que se produzca alguna situación excepcional durante la realización de un paso determinado. Después de realizar las acciones o el caso de uso asociados a la excepción (una extensión), el caso de uso puede continuar la secuencia normal o terminar, lo que suele ir acompañado por una cancelación de todas las acciones realizadas en el caso de uso dejando al sistema en el mismo estado que antes de comenzar el caso de uso, asumiendo una semántica transaccional. – Rendimiento: en este campo puede especificarse el tiempo máximo para cada paso en el que el sistema realice una acción. 102 – Frecuencia esperada: en este campo se indica la frecuencia esperada de realización del caso de uso, que aunque no es realmente un requisito, es una información interesante para los desarrolladores. Plantilla para requisitos no funcionales Los requisitos no funcionales del sistema se pueden expresar usando la plantilla que a continuación visualizaremos. El único campo específico de esta plantilla es la descripción, que debe completarse con la capacidad que deberá presentar el sistema, el significado del resto de los campos es el mismo que para las plantillas anteriores. Figura B.3: Plantilla para requisitos no funcionales 103 Anexo C: Requerimientos Funcionales y No Funcionales del Trabajo Especial de Grado Tabla C.1: Requerimiento Funcional 1 - Agregar OA en el curso desde el ROA de AMBAR RF - 01 Agregar OA en el curso desde el ROA de AMBAR Requisito Asociado Permitir el almacenamiento de un OA como parte de la estructura de un curso de MOODLE, obtenido desde el ROA de AMBAR por medio de un proceso de búsqueda. Descripción Funcionalidad que permite cargar en un curso de MOODLE un OA recuperado desde el ROA de AMBAR. Precondición El usuario debe estar autenticado en MOODLE y debe poseer privilegios de edición sobre el curso asociado. El curso debe tener activada la opción de edición. Secuencia Normal Paso Acción 1 Seleccionar la opción Enlazar Objeto de Aprendizaje (OA) Básico desde el listado de recursos ó Enlazar Objeto de Aprendizaje (OA) Estandarizado desde el listado de actividades de MOODLE. 2 Completar los datos relativos a la información del OA. 3 Hacer click en el botón Ir al ROA de AMBAR. 4 Realizar la búsqueda del OA en el ROA de AMBAR de acuerdo a los parámetros deseados. 5 Seleccionar el OA a cargar en MOODLE, por medio del botón Cargar en MOODLE. 6 Confirmar el almacenamiento del OA, haciendo click en el botón Guardar y Volver ó Guardar y Mostrar. Post condición El OA forma parte de la estructura de un curso de MOODLE. Excepciones Paso Acción 2 Falta completar datos obligatorios. 4 La búsqueda no retorna resultados. 6 Se cancela el almacenamiento. Rendimiento Paso Acción 4 10 segundos. 6 15 segundos. Frecuencia Esperada 10 objetos / día Estabilidad Alta 104 Tabla C.2: Requerimiento Funcional 2 - Abrir OA en el curso RF - 02 Abrir OA en el curso Requisito Asociado Permitir la visualización en el entorno de MOODLE del OA almacenado desde el ROA de AMBAR. Descripción Funcionalidad que permite visualizar el contenido del OA en un curso de MOODLE. Precondición El usuario debe estar autenticado en MOODLE y el OA debe haber sido almacenado como parte del curso. Secuencia Normal Paso Acción 1 Seleccionar el OA a abrir. 2 Visualizar el contenido del OA. Post condición El usuario consulta el contenido del OA. Rendimiento Paso Acción 2 10 segundos. Frecuencia Esperada 10 objetos / día Estabilidad Alta Tabla C.3: Requerimiento Funcional 3 – Editar información del OA en el curso RF - 03 Editar información del OA en el curso Requisito Asociado Actualizar la información descriptiva del objeto almacenado en el curso. Descripción Funcionalidad que permite modificar los valores de los atributos del objeto previamente almacenado en el curso. Precondición El objeto debe haber sido almacenado en el curso. Secuencia Normal Paso Acción 1 Seleccionar el objeto a editar 2 Modificar los valores actuales de la información 3 Confirmar la edición de la información Post condición La información del OA se encuentra actualizada. Excepciones Paso Acción 2 Falta completar campos obligatorios. 3 Se cancela la edición. Rendimiento Paso Acción 3 10 segundos. Frecuencia Esperada 5 objetos / día Estabilidad Alta 105 Tabla C.4: Requerimiento Funcional 4 – Eliminar OA del curso RF - 04 Eliminar OA del curso Requisito Asociado Permitir la eliminación de un objeto almacenado en el curso. Descripción Funcionalidad que permite eliminar un objeto del conjunto de recursos asociados al curso en MOODLE. Precondición El OA debe haber sido almacenado en el curso. Secuencia Normal Paso Acción 1 Seleccionar el objeto a eliminar 2 Confirmar la eliminación Post condición El OA se elimina de la estructura del curso. Excepciones Paso Acción 2 Se cancela la eliminación. Rendimiento Paso Acción 2 10 segundos. Frecuencia Esperada 3 objetos / dia Estabilidad Alta Tabla C.5: Requerimiento Funcional 5 – Ir al ROA de AMBAR RF - 05 Ir al ROA de AMBAR Requisito Asociado Permitirle al usuario el acceso al ROA de AMBAR desde el entorno de MOODLE, para realizar la búsqueda de un OA y almacenarlo en el curso. Descripción Funcionalidad que permite la navegación del usuario entre MOODLE y el ROA de AMBAR para buscar un OA y almacenarlo en el curso. Precondición El usuario debe estar autenticado en MOODLE Secuencia Normal Paso Acción 1 Hacer click en el botón Ir al ROA de AMBAR. 2 Realizar la búsqueda del OA en el ROA de AMBAR. Post condición El usuario tiene acceso al ROA de AMBAR desde MOODLE. Excepciones Paso Acción 2 Cerrar la nueva ventana. Rendimiento Paso Acción 1 10 segundos. Frecuencia Esperada 10 accesos / día Estabilidad Alta 106 Tabla C.6: Requerimiento Funcional 6 – Almacenar OA en el ROA de AMBAR RF - 06 Almacenar OA en el ROA de AMBAR Requisito Asociado Permitir guardar nuevos OA en el ROA de AMBAR desde MOODLE. Descripción Funcionalidad que le permite al usuario almacenar un nuevo OA, así como la metadata asociada al mismo, en el ROA de AMBAR desde el entorno de MOODLE. Precondición El usuario debe estar debidamente autenticado en MOODLE Secuencia Normal Paso Acción 1 Hacer click en el enlace presentado en el bloque ROA de AMBAR de MOODLE. 2 Hacer click en la opción Almacenar OA del menú principal. 3 Ingresar los datos de identificación del propietario del OA. 4 Ingresar la ubicación del OA. 5 Completar los datos relativos a la metadata del OA. 6 Confirmar el almacenamiento del nuevo OA. Post condición El usuario coloca a disposición un nuevo OA en el ROA de AMBAR desde su curso en MOODLE. Excepciones Paso Acción 3 El usuario no se encuentra registrado en AMBAR. 4 Falta indicar la ubicación del OA. 5 Falta completar datos obligatorios de la metadata del OA. 6 Se cancela el almacenamiento. Rendimiento Paso Acción 5 15 segundos. Frecuencia Esperada 10 objetos / día. Estabilidad Alta 107 Tabla C.7: Requerimiento Funcional 7 – Modificar metadata del OA en el ROA de AMBAR RF - 07 Modificar metadata del OA en el ROA de AMBAR Requisito Asociado Permitir editar la metadata de un OA previamente almacenado en el ROA de AMBAR Descripción Funcionalidad que le permite al usuario editar la metadata del OA previamente almacenada en el ROA de AMBAR a través de la interfaz de conexión desde MOODLE. Precondición El usuario debe estar debidamente autenticado en MOODLE y debe haber accedido al Bloque ROA de AMBAR en MOODLE. Secuencia Normal Paso Acción 1 Hacer click en el enlace presentado en el bloque ROA de AMBAR en MOODLE. 2 Hacer click en la opción Modificar OA en el menú principal. 3 Insertar los datos personales del propietario del OA. 4 Realizar la búsqueda del OA al cual se le modificar su metadata. 5 Seleccionar el OA a modificar. 6 Cambiar los valores de los atributos de la metadata del OA. 7 Confirmar modificación. Post condición El usuario modifica los valores de la metadata existente asociada a un OA de su propiedad, el cual fue almacenado previamente en el ROA de AMBAR. Excepciones Paso Acción 3 El usuario no es el propietario del OA. 4 La búsqueda no arroja resultados. 6 Faltan datos obligatorios. 7 Se cancela la modificación. Rendimiento Paso Acción 4 10 segundos. 7 5 segundos. Frecuencia Esperada 5 objetos / dia Estabilidad Alta 108 Tabla C.8: Requerimiento Funcional 8 – Eliminar OA del ROA de AMBAR RF - 08 Eliminar OA del ROA de AMBAR Requisito Asociado Permitirle al usuario poder eliminar un OA de su propiedad, del ROA de AMBAR desde MOODLE. Descripción Funcionalidad que permite eliminar un OA del conjunto de objetos almacenados en el ROA de AMBAR desde MOODLE. Precondición El usuario debe estar debidamente autenticado en MOODLE. Secuencia Normal Paso Acción 1 Hacer click en el enlace presentado en el bloque ROA de AMBAR en MOODLE. 2 Hacer click en la opción Eliminar OA en el menú principal. 3 Insertar los datos personales del propietario del OA. 4 Realizar la búsqueda del OA a eliminar. 5 Seleccionar el OA a eliminar. 6 Confirmar la eliminación Post condición El usuario visualiza el listado de OA previamente almacenados por él mismo con la opción de seleccionar alguno para su posterior eliminación del repositorio. Excepciones Paso Acción 3 El usuario no es el propietario del OA. 4 La búsqueda no arroja resultados. 5 Se cancela la eliminación Rendimiento Paso Acción 4 10 segundos. 6 5 segundos. Frecuencia Esperada 3 objetos / día Estabilidad Alta Tabla C.9: Requerimientos No Funcionales RNF - 01 Aprendizaje Colaborativo Descripción Proporcionar el espacio (MOODLE) en el cual los usuarios puedan desarrollar y reforzar los aprendizajes tecnológicos. RNF - 02 Confiabilidad Descripción Los sistemas (MOODLE y el ROA de AMBAR) deben comportarse de acuerdo con lo que se espera de ellos en el tiempo preciso, para que los usuarios culminen con éxito las acciones. RNF – 03 Robustez Descripción Los sistemas (MOODLE y el ROA de AMBAR), deben tener la capacidad de dar respuestas ante cualquier circunstancia que no haya sido anticipada en los requerimientos. RNF – 04 Usabilidad Descripción El usuario debe encontrar los sistemas fáciles de usar, de memorizar y pocos propensos a generar errores. RNF - 05 Seguridad Descripción La información en los sistemas debe estar protegida contra accesos no autorizados utilizando mecanismos de autenticación que puedan garantizar el cumplimiento de esto. RNF - 06 Consistencia Descripción No se presentan contradicciones entre las funcionalidades de los sistemas. 109 Anexo D: Descripción de los Roles de Usuario de MOODLE Tabla D: Roles de Usuario de MOODLE Nombre del Rol Descripción Administrador de MOODLE Por lo general pueden ejecutar cualquier acción, en la plataforma, en todos los cursos. Creador del Curso Pueden crear nuevos cursos. Profesor Editor Pueden hacer de todo dentro de un curso, incluyendo cambiar las actividades y evaluar a los estudiantes. Profesor No Editor Pueden enseñar a través del curso y evaluar a los estudiantes, pero no pueden cambiar las actividades. Estudiante Tienen menos privilegios dentro de un curso. Invitado Los huéspedes tienen privilegios mínimos y por lo general no pueden introducir texto en ningún lugar. Usuario Autenticado Todos los usuarios registrados. 110 Anexo E: Diseño de los servicios disponibles en la Capa de Servicios Web para el Repositorio de Metadata, ROA y el Repositorio de Usuarios de AMBAR Figura E.1: Servicios Web del Repositorio de Metadata de AMBAR. 111 Figura E.2: Servicios Web del Repositorio de Metadata de AMBAR. (Cont.) 112 Figura E.3: Servicios Web del Repositorio de Metadata de AMBAR. (Cont2.) 113 Figura E.4: Servicios Web del ROA de AMBAR. Figura E.5: Servicios Web del Repositorio de Usuarios de AMBAR. 114 Anexo F: Detalle de los Requerimientos Funcionales asociados a la Iteración 2 del proyecto Figura F.1: Diagrama de Casos de Uso – Ingresar datos del propietario del OA. Figura F.2: Diagrama de Casos de Uso – Ingresar Metadata. 115 Figura F.3: Diagrama de Casos de Uso – Metadata General Figura F.4: Diagrama de Casos de Uso – Metadata Ciclo de Vida 116 Figura F.5: Diagrama de Casos de Uso – Meta - Metadata Figura F.6: Diagrama de Casos de Uso – Metadata Técnica 117 Figura F.7: Diagrama de Casos de Uso – Metadata Educacional 118 Figura F.8: Diagrama de Casos de Uso – Metadata Autor Figura F.9: Diagrama de Casos de Uso – Metadata Relación Figura F.10: Diagrama de Casos de Uso – Metadata Anotaciones Figura F.11: Diagrama de Casos de Uso – Metadata Clasificaciones 119 Anexo G: Códigos asociados a la construcción del tipo de recurso “Objeto de Aprendizaje (OA) Básico” en MOODLE Figura G.1: Porción del código de la función display() de resource.class.php. 120 Figura G.2: Porción del código de la función setup_elements() de resource.class.php. 121 Figura G.3: Validación del tipo de recurso para su posterior identificación. Función resource_get_coursemodule_info() del archivo lib.php. 122 Anexo H: Códigos asociados a la construcción del módulo de actividades “Objeto de Aprendizaje (OA) Estandarizado” en MOODLE Figura H.1: Código del archivo lang/oa.php del módulo de actividades Objeto de Aprendizaje (OA) Estandarizado de MOODLE. Figura H.2: Código del archivo mod_form.php del módulo de actividades Objeto de Aprendizaje (OA) Estandarizado de MOODLE. 123 Figura H.3: Porción de código del archivo mod_form.php del módulo SCORM de MOODLE. 124 Anexo I: Código asociado a la construcción del bloque “ROA de AMBAR” en MOODLE Figura I: Porción de código de la función get_content() del archivo block_ambar_roa.php