Universidad Central de Venezuela Facultad de Ciencias Escuela de Computación Centro de Ingeniería de Software y Sistemas Laboratorio de Inteligencia Artificial Trabajo Especial de Grado presentado ante la Ilustre Universidad Central de Venezuela, por los Bachilleres Medina S. Migdalia C. C.I.: 16871228 Mendoza M. William J. CI: 15586921 para optar al título de Licenciado en Computación Tutores: Profa. Esmeralda Ramos Prof. Anibal Ghanem Caracas, Octubre de 2015 Un Enfoque Ontológico para Gestionar el Conocimiento de Soporte Técnico de los Infocentros de Venezuela i ACTA DE VEREDICTO Quienes suscriben, miembros del jurado designado por el Consejo de Escuela de Computación de la Facultad de Ciencias de la Universidad Central de Venezuela para examinar el Trabajo Especial de Grado de los Bachilleres Medina Migdalia C.I.: 16871228 y Mendoza William CI: 15586921, bajo el título: “Un Enfoque Ontológico para Gestionar el Conocimiento de Soporte Técnico de los Infocentros de Venezuela”, a fines de cumplir con el requisito legal para optar al grado de Licenciado en Computación, dejan constancia de lo siguiente: Leído el trabajo por cada uno de los miembros del jurado, se fijó el día cinco de octubre de 2015, a las 5:00 pm, para que sus autores lo defendieran en forma pública, en la sala 1 de la Escuela de Computación, Facultad de Ciencias de la Universidad Central de Venezuela, lo cual estos realizaron mediante una exposición oral de su contenido, y luego respondieron satisfactoriamente a las preguntas que les fueron formuladas por el Jurado, todo ello conforme a lo dispuesto en la Ley de Universidades y demás normativas vigentes de la Universidad Central de Venezuela. Finalizada la defensa pública del Trabajo Especial de Grado, el jurado decidió aprobarlo. En fe de lo cual se levanta la presente acta a los cinco días del mes de octubre de dos mil quince. ____________________________ Profa. Esmeralda Ramos (Tutor) _____________________________ _____________________________ Prof. José Sosa. (Jurado) Prof. Wilfredo Rangel (Jurado) ii DEDICATORIA A Dios, por darme la oportunidad de alcanzar este momento tan importante. Por darme la paciencia y la sabiduría para no rendirme ante las adversidades. A mis padres y hermana, por su inmenso amor y apoyo incondicional. Por siempre estar a mi lado, sobre todo en los momentos más difíciles. A mi amada esposa, por su dedicación, cariño y paciencia, para poder alcanzar esta meta. William Javier Mendoza Mero iii AGRADECIMIENTOS A la Universidad Central de Venezuela, por darme la oportunidad de ser uno de sus estudiantes, por todas las enseñanzas aprendidas y por toda la gente maravillosa que me permitió conocer. A mis padres, por todo su esfuerzo y sacrificio para que yo pudiera culminar mis estudios universitarios, y ser una mejor persona. Las palabras se quedan cortas para poder agradecerles. A los profesores Esmeralda Ramos y Anibal Ghanem, por su paciencia, apoyo y dedicación para que este trabajo fuese posible. A la Fundación Infocentro por el apoyo para la culminación de este trabajo. A mi familia, amigos y a todos los que, de alguna u otra manera, me han permitido alcanzar este sueño. William Javier Mendoza Mero iv Universidad Central de Venezuela Facultad de Ciencias Escuela de Computación Centro de Ingeniería del Software y Sistemas Laboratorio de Inteligencia Artificial Un Enfoque Ontológico para Gestionar el Conocimiento de Soporte Técnico de los Infocentros de Venezuela Resumen En este trabajo, se presenta el desarrollo de un conjunto de funcionalidades que permiten la actualización de un sistema de gestión de conocimiento de soporte técnico (ST), con un enfoque ontológico basado en la Web, que facilita la reutilización y socialización del conocimiento de las actividades de soporte tecnológico en los Infocentros del país. El sistema permite: (a) consultar las características de los elementos tecnológicos y de las incidencias de soporte técnico, (b) realizar búsquedas semánticas sobre los patrones de soporte técnico, (c) insertar y modificar elementos tecnológicos e incidencias de soporte técnico, (d) insertar y modificar patrones de soporte técnico, y (d) administrar los usuarios del sistema y sus niveles de acceso, para controlar quien puede ejercer funciones de administración. La solución propuesta permitió extender las características del sistema de gestión de conocimiento de ST, facilitando a los usuarios finales (facilitadores) las búsquedas de patrones de solución para poder solventar los problemas de soporte técnico que se les presentan día a día; así también aportó un valor agregado, al permitir que se administren (inserten, modifiquen o eliminen) los elementos tecnológicos y las incidencias de soporte técnico, para que el sistema se mantenga adaptado a las dinámicas de los componentes tecnológicos presentes en los Infocentros. Se realizaron un conjunto de pruebas con los usuarios finales y los expertos de conocimiento, de las cuales se obtuvieron resultados satisfactorios. Las tecnologías utilizadas incluyen la ontología; la librería Arc2 para dar soporte a las consultas de la ontología sobre una base de datos; y tecnologías Web actuales. Palabras claves: ontologías, patrones, gestión de conocimiento, soporte técnico, elementos tecnológicos. v INDICE DE GENERAL LISTA DE FIGURAS .................................................................................................... vii LISTA DE TABLAS ....................................................................................................... xi INTRODUCCIÓN ............................................................................................................ 2 CAPÍTULO I. CONTEXTO, PLANTEAMIENTO DEL PROBLEMA Y OBJETIVOS 4 I.1 Los Infocentros de Venezuela ............................................................................... 4 I.2 Soporte técnico en los Infocentros ........................................................................ 5 I.3 Antecedentes ......................................................................................................... 8 I.4 Solución Propuesta ................................................................................................ 9 I.5 Objetivos ............................................................................................................. 11 I.5.1 Objetivo General ..................................................................................... 11 I.5.2 Objetivos Específicos .............................................................................. 11 I.6 Aportes de la solución propuesta......................................................................... 12 CAPÍTULO II. GESTIÓN DE CONOCIMIENTO CON ENFOQUE ONTOLÓGICO 14 II.1 La Gestión del Conocimiento .............................................................................. 14 II.2 Modelos de Gestión del Conocimiento ............................................................... 15 II.3 Tecnologías de Información para Gestionar Conocimiento ................................ 17 II.3.1 Ontologías................................................................................................ 17 II.3.2 Componentes de las Ontologías .............................................................. 19 II.3.3 Proceso de Desarrollo de Ontologías ...................................................... 20 II.3.4 Metodología Methontology ..................................................................... 20 II.3.5 Lenguajes que se utilizan para desarrollar ontologías ............................. 23 II.3.6 Lenguajes para consultar ontologías: SPARQL ...................................... 24 CAPÍTULO III. DESARROLLO DE LA SOLUCIÓN DE GESTIÓN DE CONOCIMIENTO .......................................................................................................... 26 III.1 Subsistema de la solución ................................................................................... 26 III.2 Ontología de soporte técnico .............................................................................. 29 III.3 Repositorios ........................................................................................................ 36 CAPÍTULO IV. DESARROLLO DE LA APLICACIÓN WEB ................................... 38 IV.1 Modelado de la aplicación ................................................................................. 38 IV.2 Interfaces de la aplicación y ejemplos de consultas para acceder y recuperar información desde la ontología ........................................................................... 54 IV.2.1 Ejemplo de consulta de Elementos Tecnológicos ................................... 56 IV.2.2 Ejemplo de búsquedas de incidencias de soporte técnico ....................... 60 IV.2.3 Ejemplo de administración de instancias de Elementos Tecnológicos ... 66 IV.2.4 Ejemplo de exportar la ontología a owl ................................................... 79 IV.2.5 Ejemplo de consultas para generar la solución de ST a PDF .................. 81 IV.3 Tecnologías utilizadas en el desarrollo ............................................................. 83 vi IV.3.1 Ontología de soporte técnico ................................................................... 84 IV.3.2 Librería Arc2 ........................................................................................... 84 IV.3.3 Patrón de desarrollo Modelo-Vista-Controlador (MVC) ........................ 85 IV.3.4 Otras ........................................................................................................ 85 IV.4 Pruebas y resultados .......................................................................................... 86 IV.4.1 Pruebas de unidad .................................................................................... 86 IV.4.2 Pruebas de integración ............................................................................. 87 IV.4.3 Pruebas de validación .............................................................................. 88 IV.4.4 Pruebas de validación dirigidas a los facilitadores de los Infocentros .... 89 IV.4.5 Pruebas de validación dirigidas a los expertos de conocimiento ............ 91 IV.4.6 Análisis de Resultados ............................................................................. 93 CONCLUSIONES Y RECOMENDACIONES .............................................................. 94 REFERENCIAS BIBLIOGRÁFICAS ............................................................................ 96 ANEXO A. Justificación del Elemento Tecnológico a Poblar en la Ontología............ 100 ANEXO B. Instalación de ARC2.................................................................................. 105 ANEXO C. Creación de la Base de datos para la carga de la Ontología con ARC2 y PHP ............................................................................................................................... 106 ANEXO D. Glosario de Términos ................................................................................ 109 ANEXO E. Tabla de Instancias .................................................................................... 113 ANEXO F. Ejemplo de consultas de las incidencias de soporte técnico (ST) y sus soluciones ...................................................................................................................... 115 ANEXO G. Ejemplo de administración de instancias de incidencias de ST y sus soluciones ...................................................................................................................... 120 ANEXO H. Ejemplos de administración de usuarios ................................................... 134 vii LISTA DE FIGURAS FIGURA 1 Taxonomía de los Elementos Tecnológicos de los Infocentros. ........................... 7 2 Taxonomía de Soporte Técnico en los Infocentros. .............................................. 8 3 Esquema general propuesta para SIGECOST ..................................................... 10 4 Arquitectura para la gestión del conocimiento (Kerschberg, 2001).................... 16 5 Tareas de conceptualización de Methontology ................................................... 21 6 Arquitectura del sistema para la gestión de conocimiento de soporte técnico en Infocentros (Ghanem, Núñez y Ramos, 2014) .................................................... 26 7 Taxonomía de Soporte Técnico en los Infocentros ............................................. 31 8 Resultado luego de aplicar el analizador sintáctico a la ontología ...................... 33 9 Ejemplo de la respuesta a una pregunta de competencia, que permite consultar el patrón de solución tecnológica, para la instalación de la aplicación ofimática LibreOffice 4.4.1 sobre el sistema operativo Debian GNU/Linux Squeeze 6.0 . 35 10 Ejemplo de un patrón de solución ....................................................................... 37 11 Casos de uso de la aplicación de gestión de conocimiento de soporte técnico en los Infocentros ..................................................................................................... 39 12 Diagrama de Casos de Uso Administrar elemento tecnológico .......................... 42 13 Diagrama de Casos de uso: Administrar incidencia de soporte técnico ............. 46 14 Diagrama de casos de uso: Exportar la ontología ............................................... 50 15 Diagrama de casos de uso: Administrar cuenta .................................................. 51 16 Diagrama de casos de uso: Consultar usuarios ................................................... 51 17 Diagrama de casos de uso: Administrar usuarios................................................ 52 18 Interfaz inicio del sistema ................................................................................... 56 19 Resultado de ejemplo de Consulta de Elemento Tecnológico. ........................... 57 20 Interfaz de consulta de Elementos Tecnológicos ................................................ 58 21 Resultado de ejemplo de consulta de total de instancia de ET............................ 59 22 Resultado Consulta de Instancias de ET Aplicación de Ofimática ..................... 59 23 Interfaz Instancias de ET Aplicaciones de Ofimática ......................................... 60 viii 24 Interfaz de búsqueda de soluciones de incidencias de ST ................................... 61 25 Interfaz de búsqueda de soluciones de incidencias de ST ................................... 61 26 Ejemplo de consulta con el Iri Elemento Tecnológico (Clase Padre) ................. 62 27 Ejemplo de consulta con Iri Aplicación de Programa (SubClase Padre) ............ 63 28 Interfaz ejemplo de búsqueda de incidencias de ST ........................................... 64 29 Resultado de consulta de Solución de incidencia de ST ..................................... 65 30 Interfaz ejemplo de patrón de solución a una incidencia de ST .......................... 66 31 Interfaz Inicio de Administrar Instancias de ET ................................................. 67 32 Interfaz de administración de instancias de ET ................................................... 68 33 Interfaz formulario de ejemplo de insertar instancia de ET ................................ 69 34 Interfaz ejemplo de inserción de una instancia de ET ......................................... 69 35 Interfaz, con mensaje de existencia de instancia de ET ...................................... 70 36 Interfaz ejemplo de inserción de instancia de ET ............................................... 71 37 Interfaz instancias de ET después de la inserción ............................................... 71 38 Interfaz de instancias de ET Aplicación de Ofimática ........................................ 72 39 Resultado de ejemplo de ver detalles de instancia de ET ................................... 73 40 Interfaz ejemplo de detalles de una instancia de ET ........................................... 73 41 Interfaz de ejemplo de edición de instancia de ET (instancia a modificar) ........ 74 42 Interfaz de ejemplo de modificación de instancia de ET .................................... 74 43 Interfaz ejemplo de modificación de instancia de ET exitosa ............................. 76 44 Interfaz resultado de instancia modificada en lista de ET ................................... 76 45 Interfaz ejemplo de instancia seleccionada a eliminar ........................................ 77 46 Interfaz de confirmación para eliminar instancia de ET ..................................... 77 47 Interfaz mensaje de instancia de ET utilizada por otra de ST ............................. 78 48 Interfaz de ejemplo de instancia eliminada satisfactoriamente ........................... 79 49 Interfaz exportar ontología .................................................................................. 79 50 Interfaz exportar ontología a owl ........................................................................ 80 51 Extracto de archivo owl exportado con Sigecost ................................................ 81 52 Resultado de buscar incidencia de ST en la ontología ........................................ 82 ix 53 Interfaz de ejemplo de patrón de solución a incidente de ST en formato pdf ..... 83 54 Interfaz de inicio-Consulta de Incidencia de ST ............................................... 115 55 Resultado de ejemplo de consulta de incidencia de ST .................................... 116 56 Interfaz de ejemplo de consulta de incidencia de ST ........................................ 116 57 Resultado de ejemplo de consulta de incidencia de ST .................................... 117 58 Interfaz ejemplo de consulta de incidencia de ST ............................................. 118 59 Interfaz ejemplo de solución a incidente de ST ................................................ 118 60 Interfaz exportar a PDF solución a incidente de ST.......................................... 119 61 Interfaz Ejemplo de solución a incidente de ST en PDF................................... 119 62 Interfaz inicio-Administración de incidencias de ST ........................................ 120 63 Interfaz Administración de instancias de incidencias de ST ............................. 121 64 Interfaz Formulario de inserción de instancia de incidencia de ST .................. 122 65 Interfaz, ejemplo de llenado de patrón de solución .......................................... 123 66 Interfaz instancia de incidencia de ST agregada ............................................... 124 67 Interfaz consulta de Instancias de a incidencias de instalación de aplicación de ofimática. ........................................................................................................... 125 68 Resultado de consulta a ejemplo de: total de elementos de ST ......................... 126 69 Resultado de consulta de detalles de instancias de ST en instalación de aplicación ofimática .......................................................................................... 127 70 Resultado de consulta: detalles de la incidencia de ST de la instancia instalación de aplicación de ofimática, editor de presentaciones Libreoffice 3.3.1 en Canaima 3.1 ....................................................................................................... 128 71 Interfaz del patrón de solución a la incidencia: instalación de aplicación de ofimática del editor de presentaciones Libreoffice 3.3.1 en sistema operativo Canaima3.1 ........................................................................................................ 129 72 Interfaz Modificar instancia de ST de aplicación ofimática ............................. 130 73 Interfaz resultado de ejemplo en modificación de incidencia de ST ................. 132 74 Interfaz de ejemplo de eliminación de instancia de incidencia de ST en aplicación ofimática. ......................................................................................... 133 75 Interfaz Administración de usuarios ................................................................. 134 76 Interfaz detalles de usuarios del sistema ........................................................... 135 x 77 Interfaz de formulario de ingreso de nuevo usuario .......................................... 135 78 Interfaz 1 para administrar usuarios de Sigecost ............................................... 136 79 Interfaz 2 de administración de usuarios de Sigecost ....................................... 137 80 Interfaz detalles de usuario ................................................................................ 137 81 Interfaz ejemplo de un formulario para modificar datos de usuario ................. 138 82 Interfaz ejemplo de actualización de datos de usuario ...................................... 139 83 Interfaz usuario actualizado .............................................................................. 140 84 Interfaz administrar Mi cuenta .......................................................................... 140 85 Interfaz formulario para actualizar datos a través de la operación Mi cuenta ... 141 86 Interfaz datos actualizados a través de la opción Mi cuenta ............................. 141 xi LISTA DE TABLAS TABLA 1 Actividad de especificación para la ontología de Soporte Técnico .................... 29 2 Acrónimos y sinónimos incorporados al glosario de términos ........................... 30 3 Fragmento de tabla de instancias agregadas a la ontología .............................. 31 4 Evaluación del vocabulario de la ontología ....................................................... 34 5 Caso de Uso: Consultar incidencia de soporte técnico y su solución tecnológica ......................................................................................................... 40 6 Caso de Uso: Buscar solución tecnológica ........................................................ 41 7 Caso de Uso: Administrar elemento tecnológico ................................................ 42 8 Caso de Uso: Insertar instancia de elemento tecnológico .................................. 42 9 Caso de Uso: Modificar instancia de elemento tecnológico............................... 43 10 Caso de Uso: Eliminar instancia de elemento tecnológico ................................ 45 11 Caso de Uso:Administrar incidencia de soporte técnico y su solución tecnológica .......................................................................................................... 46 12 Caso de Uso: Insertar incidencia de soporte técnico y/o solución tecnológica . 47 13 Caso de Uso: Modificar solución tecnológica de una incidencia de soporte técnico ................................................................................................................. 48 14 Caso de Uso: Eliminar incidencia de soporte técnico y su solución tecnológica .......................................................................................................... 49 15 Caso de Uso: Exportar la ontología ................................................................... 50 16 Caso de Uso: Administrar cuenta ....................................................................... 51 17 Caso de Uso: Consultar usuarios ....................................................................... 52 18 Caso de Uso: Administrar usuarios .................................................................... 52 19 Caso de Uso: Insertar usuario ........................................................................... 53 20 Caso de Uso: Modificar usuario ......................................................................... 53 21 Resultados de las pruebas de validación tipo alfa realizadas en 4 Infocentros . 90 22 Resultados de las pruebas de validación tipo alfa, para la consulta de patronesde solución tecnológica, realizada por el experto de conocimiento ..... 91 xii 23 Resultados de las pruebas de validación tipo alfa, para la administración de elementos tecnológicos, realizada por el experto de conocimiento .................... 92 24 Resultados de las pruebas de validación tipo alfa, para la administración de incidencias de soporte técnico, realizada por el experto de conocimiento ........ 92 25 Resultados de las pruebas de validación tipo alfa, para exportar la ontología, realizada por el experto de conocimiento ........................................................... 93 26 Resultados de las pruebas de validación tipo alfa, para la administración de los usuarios, realizada por el experto de conocimiento ........................................... 93 2 INTRODUCCIÓN Actualmente en Venezuela, existe una cantidad importante de Infocentros que se encuentran distribuidos a nivel nacional en diferentes espacios públicos. Los Infocentros, son un tipo de centro tecnológico comunitario de uso masivo y gratuito, que comúnmente se encuentran conformados por un definido número de computadoras (en su mayoría no más de diez), y otros elementos tecnológicos, tales como impresoras y escáneres, para dar un valor agregado a los servicios que en ellos se prestan. Estos centros tecnológicos, propician la apropiación de las tecnologías de información y comunicación (TIC), por parte de las comunidades. Debido a su continúo funcionamiento y al desgaste natural de sus componentes, los equipos tecnológicos con que cuentan los Infocentros, con frecuencia suelen presentar fallas o incidencias tecnológicas, para solventarlas, existe un personal capacitado de soporte técnico. Sin embargo, se presentan inconvenientes de logística en este proceso, entre los que se incluyen: los altos costos para la contratación de este personal, la disponibilidad de mecanismos para socializar el conocimiento de los elementos tecnológicos que forman parte de los Infocentros, y de cómo se realiza el soporte y mantenimiento por parte de las personas encargadas de estas labores. Para dar respuesta a estos inconvenientes, Ghanem, Núñez, y Ramos (2014), desarrollaron un sistema de gestión de conocimiento, basado en el uso de ontologías y patrones de solución, denominado SIGECOST. A través de este sistema se puede navegar sobre la información relacionada con los elementos tecnológicos que se encuentran en los Infocentros, y las incidencias que pueden ocurrir sobre éstos, así como administrar el almacenamiento y recuperación de patrones de solución de soporte técnico sobre dichas incidencias. Actualmente, el sistema solo permite consultar los patrones de solución para las incidencias tecnológicas en el proceso de instalación de impresoras. No obstante, este sistema presenta algunas carencias, tales como las soluciones tecnológicas a otras incidencias frecuentes, como por ejemplo, la instalación de aplicaciones de programas, el cierre inesperado de aplicaciones, las impresiones 3 manchadas, etc., facilidades para actualizar la ontología que permitan la inserción, modificación y eliminación de los elementos tecnológicos y de las incidencias de los Infocentros, y de sencillez en el proceso de búsquedas de soluciones tecnológicas. El objetivo del presente trabajo está orientado a ampliar las funcionalidades del SIGECOST mediante la incorporación de procesos que permitan la búsqueda, recuperación y actualización de soluciones de soporte técnico. Para llevar a cabo este objetivo, se plantea: (a) incorporar un módulo de administración de ontologías, (b) desarrollar un módulo de búsquedas semánticas para la carga y visualización de los elementos de la ontología y las soluciones de soporte técnico, (c) ampliar la base de patrones que proporcionen soluciones a otro tipo de incidencias, (d) actualizar la interfaz del sistema, (e) realizar las pruebas necesarias en algunos Infocentros, para verificar el correcto funcionamiento del sistema y su aceptación por parte de los facilitadores. El siguiente documento se encuentra estructurado de la siguiente forma: en el Capítulo I, se describe el contexto del problema, los antecedentes, los objetivos, la solución propuesta y los aportes de la investigación. Los conceptos y metodologías vinculados al paradigma de gestión del conocimiento y al desarrollo de ontologías, son presentados en el Capítulo II. En el Capítulo III, se describen los repositorios utilizados y el subsistema de la solución. Para luego, en el Capítulo IV, detallar el modelado y desarrollo de la aplicación Web, las consultas para acceder y recuperar información desde la ontología, las interfaces de la aplicación, las tecnologías utilizadas en el desarrollo de la solución. En este capítulo también se exponen las pruebas y resultados de aceptación y funcionamiento del sistema. Por último, se presentan las conclusiones y recomendaciones, además de las referencias bibliográficas impresas y digitales consultadas durante el desarrollo de este trabajo de investigación. 4 CAPÍTULO I CONTEXTO, PLANTEAMIENTO DEL PROBLEMA Y OBJETIVOS En este capítulo se detalla el contexto del trabajo de investigación, asociado a los Infocentros del país, y su problemática con las actividades de soporte técnico. Se presentan los antecedentes que abordan este tipo de contexto, y en base a ellos se propone una solución, que implica la actualización y mejoramiento de un sistema basado en la gestión del conocimiento utilizando ontologías. Luego, se definen los objetivos y se explican los aportes de la solución propuesta. I.1 Los Infocentros de Venezuela Los Infocentros de Venezuela, son un tipo de centro tecnológico comunitario que se caracterizan por propiciar la realización de procesos formativos y de apropiación de las Tecnologías de Información y Comunicación (TIC) por los sectores populares. Los Infocentros se concentran en fortalecer el desarrollo de las potencialidades locales, las redes sociales, la construcción colectiva, la transferencia de saberes y conocimiento, las relaciones de colaboración y de coordinación y la comunicación popular. (Fundación Infocentro, 2008). A la fecha, existen en el país la cantidad de 897 Infocentros, distribuidos a nivel nacional en diferentes espacios públicos, con especial énfasis en zonas rurales y populares. Están conformados, con equipos de computación, a través de los cuales se prestan una variedad de servicios a las comunidades, entre los que se encuentra el acceso gratuito a Internet. Estos centros tecnológicos brindan desde formación socio- tecnológica hasta el impulso de proyectos comunales para el avance y desarrollo de las comunidades, permitiendo a las mismas la apropiarse de las TIC. La gestión de cada uno de los Infocentros es realizada por los facilitadores. “El facilitador es el guía e impulsor de las actividades que se desarrollan conjuntamente con las comunidades y entre sus funciones se encuentran las propias e inherentes al funcionamiento del Infocentro referente a la plataforma tecnológica, así como aquellas 5 que contribuyan a hacer del centro, un espacio que ofrezca a la comunidad las herramientas tecnológicas para el desarrollo de actividades que potencien el mejoramiento y fortalecimiento de su calidad de vida en la localidad”. I.2 Soporte técnico en los Infocentros Como se mencionó con anterioridad, los Infocentros están conformados por un conjunto de equipos tecnológicos que con frecuencia presentan fallas; y debido a que la gran mayoría de los facilitadores no cuentan con el conocimiento requerido para resolverlas, se contratan personas bajo la figura de soporte técnico, las cuales poseen habilidades y destrezas en el área de informática para solucionar estas incidencias tecnológicas. Sin embargo, acontecen algunos inconvenientes entre los que se pueden destacar:  El alto costo que representa la contratación de personas para el ejercicio de soporte técnico y su movilización, dado que, los Infocentros en la mayoría de los casos se encuentran geográficamente distantes y en zonas de difícil acceso, lo que trae como consecuencia que transcurran largos períodos de tiempo para que éstos sean atendidos tecnológicamente.  No se dispone de mecanismos para socializar el conocimiento de los elementos tecnológicos que forman parte de los Infocentros, ni de cómo se realiza su soporte y mantenimiento por las personas que los gestionan activamente (facilitadores y miembros de la comunidad).  Existen diversos niveles de competencia para la realización de las tareas de soporte técnico de acuerdo a la complejidad del problema, lo que limita socializar, en una primera etapa, el soporte y mantenimiento tecnológico básico. Para dar solución a algunos de estos inconvenientes, Ghanem, Núñez, & Ramos (2014), desarrollaron un prototipo de sistema de gestión de conocimiento (SIGECOST), 6 el cual permitió apoyar las actividades de soporte técnico en los Infocentros del país. Este sistema, se encuentra es fase de producción (en uso) en la Fundación Infocentro. SIGECOST da respuesta a un conjunto de requerimientos funcionales, a saber: (a) consultar los elementos tecnológicos presentes en los Infocentros, (b) consultar las distintas opciones de soporte técnico presentes en los Infocentros, (c) recuperar los patrones de soporte técnico en instalación de impresoras y los ambientes tecnológicos donde éstas ocurran, y (d) administrar los patrones de soporte técnico. SIGECOST se encuentra apoyado en el uso de ontologías y patrones de soporte técnico, como herramientas para organizar, almacenar y administrar el conocimiento. La ontología almacena de manera estructurada y organizada los conceptos y relaciones que se utilizan cotidianamente en el entorno de soporte técnico en los Infocentros, y “dirige la búsqueda y recuperación de conocimiento a una base de patrones que contiene las soluciones de soporte técnico a los incidentes que comúnmente se presentan en los Infocentros”. Dichas soluciones, están representadas a través de un esquema basado en patrones, definidos a partir de la concepción de la representación: contexto, problema y solución, donde, los patrones de solución de soporte técnico, están constituidos por actividades que realiza el personal de soporte técnico para dar solución a fallas que presentan los elementos tecnológicos de los Infocentros, estos elementos pueden ser de tipo software tales como aplicaciones de programa o tipo hardware como equipos de computación. Arquitectónicamente SIGECOST, se fundamenta en una adaptación del modelo para la gestión del conocimiento propuesta por (Kerschberg, 2001), la cual permite la consulta de los elementos tecnológicos modelados en la ontología, así como también la recuperación de los patrones de soluciones a diversos problemas tecnológicos. Además, la utilización de este modelo permite organizar de manera estructurada los componentes que conforman el sistema de gestión de conocimiento. 7 El conocimiento presente en la ontología permite guiar al usuario acerca de cuál patrón de soporte técnico recuperar para la solución efectiva de algún incidente tecnológico. La taxonomía de elementos tecnológicos presentes en los Infocentros se visualiza en la Figura 1, así mismo, los tipos de soporte técnico asociados a los elementos tecnológicos, se muestra en la Figura 2. Figura 1. Taxonomía de los Elementos Tecnológicos de los Infocentros. (Ghanem, Núñez & Ramos, 2014) 8 Figura 2. Taxonomía de Soporte Técnico en los Infocentros. (Ghanem, Núñez & Ramos, 2014) Sin embargo, esta solución presenta algunas carencias, ya que en ella, sólo se encuentran implementadas las soluciones de soporte técnico para los problemas frecuentes que se manifiestan en el proceso de instalación de impresoras. Por lo que sería necesario complementar el sistema, extendiendo la base de patrones mediante la incorporación de soluciones a incidencias de otros elementos tecnológicos, que se presentan con cierta frecuencia y que requieren soporte técnico, tales como, aplicaciones de programas. De igual forma, es preciso agregar al sistema un módulo de administración de ontologías, que le permita adaptarse a la dinámica de los elementos tecnológicos dentro de los Infocentros; así como un módulo que facilite el proceso de búsquedas de soluciones tecnológicas. I.3 Antecedentes A continuación se describen un conjunto de desarrollos de aplicaciones, que automatizan la gestión de conocimiento, en contextos tales como, la resolución de incidencias tecnológicas de soportes técnicos y similares. Rojas y Sánchez (2009), desarrollaron una ontología para el modelado del dominio en el contexto del servicio de soporte en tecnologías de información. La ontología es 9 utilizada como base de conocimiento en una arquitectura de gestión, que permite mejorar los servicios de soporte técnico de la organización objeto de estudio. En el mismo orden de ideas, Vizcaíno, Soto, García, Ruiz y Piattini (2006), plantean la implementación de un sistema de gestión de conocimiento basado en una ontología como mecanismo de representación del conocimiento, a través del cual se definen los conceptos involucrados en el mantenimiento de software, con el fin de potenciar su reutilización para que los ingenieros de mantenimiento puedan aprovechar la experiencia y lecciones aprendidas de otros trabajos. Similar al anterior, en Ruiz y Dolado (2008), presentan una ontología para la gestión de conocimiento de proyectos de software. Dicha ontología representa un modelo formal de los procesos, actividades, herramientas y técnicas específicas de la gestión de proyectos. De esta manera, la ontología proporciona una descripción completa de los términos fundamentales y características inherentes al manejo de la información, asociada a la gestión, seguimiento, control y dirección de los proyectos, así como de los procesos, relaciones, restricciones y aserciones sobre los datos de proyectos. Así mismo, Caro, Jiménez y Toscano (2011), plantean una arquitectura para un sistema informático de gestión del conocimiento, para apoyar el proceso de investigación formativa, mediante la captura, almacenamiento e integración del conocimiento de los expertos evaluadores y el conocimiento generado por estudiantes e investigadores, durante la realización de sus trabajos de investigación. Para las consultas de éstos últimos, se utiliza una ontología tipo tesauro, que a su vez contiene un micro- tesauro por cada trabajo de investigación asociado a un macro-tesauro, que permite realizar una búsqueda semántica y como resultado muestra a los usuarios los términos, conceptos y teoría de cada trabajo. I.4 Solución Propuesta Considerando las carencias presentes en el sistema SIGECOST, en su propósito de ayudar a solucionar la problemática presente en las actividades de soporte técnico en los 10 Infocentros, en este trabajo se propone el desarrollo de un conjunto de módulos que agreguen las siguientes funcionalidades o procesos a dicho sistema:  Incorporar a la base de soluciones de soporte técnico, la resolución de problemas presentes en las impresoras, tales como: (a) desatascar papel, (b) reparar impresión corrida y (c) corregir impresión manchada.  Incorporar a la base de soluciones de soporte técnico, la resolución de problemas en aplicaciones de programa, específicamente en instalación de aplicaciones de ofimática. En el anexo A, se visualiza la justificación de la elección de este elemento tecnológico.  Desarrollar el módulo de administración de ontologías, que permita insertar, modificar y eliminar instancias a la ontología. Lo cual, posibilita la incorporación y/o desincorporación de los elementos tecnológicos de los Infocentros.  Desarrollar un módulo de búsquedas semánticas, que permita a través de una o más palabras claves, encontrar un patrón de solución de soporte técnico para una incidencia presentada. La Figura 3 muestra gráficamente la solución propuesta para el sistema SIGECOST. Figura 3. Esquema general propuesta para SIGECOST 11 La propuesta en este trabajo se centra principalmente en dos de estos módulos:  Módulo de administración de ontología: que permita dinámicamente crear, modificar y eliminar las instancias.  Módulo de asistencia tecnológica: que permita realizar búsquedas semánticas a través de palabras claves. I.5 Objetivos En base a la solución propuesta, y con la finalidad de contribuir y mejorar el desenvolvimiento de las actividades de soporte técnico en los Infocentros del país, se definen los siguientes objetivos, general y específicos. I.5.1 Objetivo General Desarrollar funcionalidades adicionales para un sistema de gestión de conocimiento con enfoque ontológico basado en la Web, denominado SIGECOST, que permitan la búsqueda, recuperación y actualización de las soluciones de incidencias de soporte técnico de los Infocentros del país. I.5.2 Objetivos Específicos a) Migrar la ontología desde el lenguaje RDF al lenguaje OWL. b) Ampliar la base de patrones del SIGECOST para que proporcionen soluciones a otro tipo de incidencias; tales como: i) Incidencias en la resolución de problemas con los equipos de reproducción (impresoras). ii) Incidencias en instalación de programas de ofimática. c) Identificar los requerimientos funcionales para la creación del módulo de administración de ontologías. d) Incorporar al SIGECOST un módulo de administración de ontologías, que permita insertar, modificar y eliminar instancias a la ontología. 12 e) Incorporar al SIGECOST un módulo de búsquedas semánticas, que permita la recuperación de las soluciones tecnológicas, a partir de una o más palabras claves. f) Actualizar la interfaz del Sistema SIGECOST. g) Realizar las pruebas necesarias en algunos Infocentros, para verificar el correcto funcionamiento del sistema y su aceptación. I.6 Aportes de la solución propuesta Se espera que la solución propuesta permita conseguir lo siguiente:  Permitir a los facilitadores y personas encargadas del Infocentro, resolver incidencias de soporte técnico, haciendo uso de las soluciones almacenadas en el repositorio de soluciones de soporte técnico, evitando largos tiempos de espera por el personal de soporte técnico, además de reducir los costos de traslado del personal técnico para realizar tareas sencillas que pueden realizar los facilitadores.  Contar con una mayor cantidad de elementos tecnológicos en buen funcionamiento disponibles para la comunidad, y poder hacer de los Infocentros, espacios que ofrezcan a la comunidad las herramientas tecnológicas en buenas condiciones para su uso.  Disponer de mecanismos para socializar el conocimiento de los elementos tecnológicos que forman parte de los Infocentros, y de cómo se realiza su soporte y mantenimiento.  Extender y mejorar algunas funcionalidades de SIGECOST, como la incorporación de búsquedas semánticas, que faciliten el proceso de recuperación de soluciones tecnológicas; y la incorporación de un administrador de sistema que permita, (a) agregar nuevos patrones de soporte técnico y nuevos elementos tecnológicos a los Infocentros, (b) desincorporar 13 patrones de soporte técnico sub-utilizados y elementos tecnológicos obsoletos de los Infocentros. 14 CAPÍTULO II GESTIÓN DE CONOCIMIENTO CON ENFOQUE ONTOLÓGICO En este capítulo se presenta la disciplina de gestión del conocimiento y algunos de los modelos más utilizados para su correcta implementación. Además, se exponen las tecnologías utilizadas en la gestión del conocimiento, detallando especialmente el uso de las ontologías y el lenguaje de consulta, SPARQL. II.1 La Gestión del Conocimiento Actualmente, las organizaciones dan por sentado que su activo más importante es el conocimiento, y que al aplicarlo correctamente se agrega valor a las cosas o áreas donde es usado, alcanzando mayor crecimiento y capacidad. Surge así la necesidad de saber qué hacer con este conocimiento, cómo ponerlo en práctica, cómo implantarlo y administrarlo, de manera tal que cumpla con los objetivos organizacionales. Esta es una de las razones por las cuales cada vez más, las organizaciones recurren a la disciplina denominada Gestión de Conocimiento (GC), ya que esta les asegura la protección de este importante recurso, garantiza su adecuado acceso y recuperación además de su persistencia en el tiempo. Esta disciplina ha motivado a muchos autores a exponer variadas definiciones, como Arvind y Srinivas (2010), que consideran que la GC consiste en la administración explícita y sistemática vital para el conocimiento, asociando los procesos de creación, recolección, organización, difusión, uso y explotación, en el logro de los objetivos organizacionales. Para Giner (2004), es el conjunto de procesos que logran capturar, almacenar, distribuir, compartir y preservar objetos de “saber hacer” creados en las organizaciones, con el objetivo de generar nuevos saberes y fomentar el aprendizaje empresarial. En (Abecker y van Elst, 2009), la GC se considera una actividad de administración sistemática, que contempla el conocimiento implícito y explícito como un recurso estratégico de las organizaciones, y cuyo objetivo es mejorar su manipulación a nivel de individuos, grupos, organización e inter-organización. 15 Es así como la GC pone a disposición de los integrantes de una organización de manera ordenada, práctica y eficaz, la totalidad de los conocimientos tácitos y explícitos de sus miembros; que puedan ser útiles para su mejor funcionamiento (Del Moral, Pazos, Rodríguez, Rodríguez-Patón y Suárez, 2007). Los objetivos que se pretenden alcanzar al gestionar conocimiento son, entre otros:  Crear un repositorio de conocimiento.  Mejorar el acceso al conocimiento.  Propiciar un ambiente de intercambio de conocimiento.  Administrar el conocimiento como un activo.  Facilitar la creación de nuevo conocimiento. II.2 Modelos de Gestión del Conocimiento Para desarrollar sistemas que posibiliten la (GC), es fundamental disponer de una adecuada infraestructura, la cual es generalmente proporcionada por un modelo de gestión. Los modelos de GC constituyen una herramienta para representar el conocimiento de forma simplificada, resumida y simbólica, permitiendo delimitar alguna de sus dimensiones, describir procesos y estructuras, orientar estrategias y aportar datos importantes. Son variadas las orientaciones y enfoques acerca de la naturaleza de los modelos existentes, debido a la interdisciplinaridad que caracteriza el proceso de gestión de conocimiento. Existen diferentes taxonomías de clasificación de modelos. Las taxonomías en cuestión contemplan modelos con enfoques: (a) conceptuales, teóricos y filosóficos, (b) cognitivos, (c) redes sociales y de trabajo, (d) científicos-tecnológicas, (e) holísticos, (f) socioculturales, (g) almacenamiento; entre otros. Resultan de especial interés en este trabajo, los modelos científico-tecnológicos los cuales incorporan las tecnologías de información para facilitar el uso y aplicación del 16 conocimiento. Estos modelos desarrollan y utilizan data warehouse (almacén de datos), internet, sistemas expertos y de información, motores de búsqueda, herramientas multimedia y de toma de decisiones, ontologías; entre otras tecnologías, y se orientan a promover la investigación y el crecimiento en las organizaciones (Barragán, 2009). Un modelo de GC tecnológico caracterizado por integrar servicios y fuentes de datos heterogéneas, es propuesto en (Kerschberg, 2001). El modelo está organizado en tres capas que apoyan los procesos y herramientas para adquirir, refinar, almacenar, diseminar, presentar e intercambiar conocimiento. En la Figura 4, se observa la organización en capas del modelo, así como los diferentes tipos de fuentes de datos que pueden ser utilizados. Figura 4. Arquitectura para la gestión del conocimiento (Kerschberg, 2001) Este modelo presenta un alto nivel de integración entre los componentes de cada una de las capas, lo que permite trabajar con estándares y lenguajes comunes y provee 17 un alto nivel de comunicación entre los usuarios, lo que posibilita el dinamismo y la funcionalidad (Soto y Barrios, 2006). II.3 Tecnologías de Información para Gestionar Conocimiento Son variadas las tecnologías de información usadas en las organizaciones, que posibilitan la transferencia y difusión del conocimiento entre sus miembros, las cuales van desde aplicaciones de software tradicionales (grupos de discusión, intranet, correo electrónico, tormenta de ideas, mapas mentales, etc.) hasta aplicaciones inteligentes (minería de datos, sistemas basados en conocimiento, memorias organizacionales, lecciones aprendidas, herramientas de adquisición de conocimiento, ontologías, entre otros). Actualmente, las ontologías son la tecnología más extendida para representar conocimiento en Inteligencia Artificial (IA), porque proporcionan una representación estructural y formal del conocimiento, y estas representaciones ontológicas son compartibles y reutilizables. II.3.1 Ontologías El término ontología tiene su origen en la filosofía, disciplina que trata de dar una explicación sistemática de la existencia; proviene de la conjunción de los términos griegos “ontos” y “logos” que significan existencia y estudio, respectivamente. En la última década, este término ha ganado relevancia entre los Ingenieros de Conocimiento tomando una interpretación particular; y es por ello que, en 1995, Guariano y Giaretta proponen utilizar la palabra “Ontología” para referirse a ella en el contexto de la Ingeniería del Conocimiento. (Flores, 2011). En la IA, disciplina que trata sobre cómo lograr que las computadoras realicen tareas que, por el momento, los humanos hacen mejor, la definición de ontología ampliamente aceptada es la de Gruber (1993): “una ontología es una especificación explicita y formal de una conceptualización”, es decir, una ontología modela los 18 distintos conceptos relevantes de algún fenómeno de forma explícita y se representa por medio de un lenguaje formalizado, así mismo debe ser compartida y aceptada como mínimo por el grupo de personas que deben usarla. Resulta de especial interés el uso de las ontologías en la GC, debido a que éstas pueden funcionar como un marco para la unificación de diferentes puntos de vista del conocimiento y servir como base para (Uschold y Gruninger, 1996):  La comunicación entre personas con diferentes necesidades, que compartan un área de conocimiento.  Facilitar la interoperabilidad entre sistemas, la cual se alcanza por la traducción entre diferentes modelos, métodos, paradigmas, lenguajes y herramientas de software.  La reutilización del software (base para la codificación de entidades, atributos, procesos, etc.), realizar chequeos de consistencia (fiabilidad del software), adquirir conocimiento (punto de partida en la construcción de sistemas basados en conocimiento) y para la especificación de requerimientos. Con las ontologías se intenta expresar un esquema conceptual exhaustivo y riguroso de un dominio particular, con la finalidad de facilitar la comunicación y reutilización de conocimiento e información entre los miembros de las organizaciones, computadores y humanos. Una ontología define un vocabulario común que incluye, además, la interpretación de los conceptos básicos del dominio y sus relaciones. Noy y McGuinness (2001), plantean que las ontologías tienen como objetivos principales los siguientes:  Compartir la compresión común de la estructura de información entre personas o agentes de software, lo que debe revertirse de forma positiva y casi necesaria en la extracción y recuperación de información, por ejemplo en páginas Web de contenidos conectados temáticamente.  Permitir la reutilización del conocimiento perteneciente a un dominio. 19  Hacer explícitos los supuestos de un dominio.  Hacer posible el análisis del conocimiento de un campo, en lo que se refiere al estudio de los términos y relaciones que lo integran ya sea formalmente o no. II.3.2 Componentes de las Ontologías Los componentes de una ontología varían de acuerdo al dominio de interés y a las necesidades de los ingenieros ontológicos. Los elementos básicos que componen una ontología son los siguientes (Lozano-Tello, 2002):  Clases: son las ideas a formalizar y representan los conceptos en el sentido más amplio. Son la base de la descripción del conocimiento en las ontologías, se usan para describir los conceptos del dominio, pueden ser clases de objetos, métodos, planes, estrategias, procesos de razonamiento, entre otros. Por lo general, las clases se organizan en jerarquías o taxonomías.  Relaciones: usadas para expresar las interacciones entre los conceptos del dominio.  Funciones: son un tipo concreto de relación donde se identifica un elemento mediante el cálculo de una función.  Instancias: representan objetos (individuos o ejemplos) determinados de un concepto.  Taxonomía: conjunto de conceptos organizados jerárquicamente.  Axiomas: usados para modelar sentencias que son siempre ciertas, éstos permiten, junto con la herencia de conceptos, inferir conocimiento que no esté indicado explícitamente en la taxonomía de conceptos. 20  Propiedades (Slots): características o atributos que describen a los conceptos. Para un concepto dado, las propiedades y las restricciones sobre estos son heredadas por las subclases y las instancias de la clase. II.3.3 Proceso de Desarrollo de Ontologías En líneas generales, el proceso de construcción de ontologías no difiere del usado para construir software tradicional. Las ontologías, como productos de software, deben ser desarrolladas siguiendo los estándares establecidos para esto, por supuesto, adaptados a las características de las ontologías. Entre las metodologías existentes, se tienen las propuestas iniciales de Uschold y King (1995) y la de Grüninger y Fox (1995), que fueron la base de posteriores planteamientos metodológicos. Destacan de manera particular, aquellas metodologías cuyo ciclo de vida se basan en el desarrollo de prototipos, ya que este modelo permite realizar actualizaciones en cualquier momento de la construcción y de acuerdo a las necesidades que surjan se encuentran en este grupo On-To-Knowledge (Sure y Studer, 2003) y Methontology (Gómez-Pérez, Fernández-López y Corcho, 2004). II.3.4 Metodología Methontology La metodología Methontology, permite la construcción de ontologías a nivel de conocimiento e incluye la identificación del proceso de desarrollo, un ciclo de vida basado en el desarrollo de prototipos y técnicas particulares para realizar cada actividad. Tiene sus raíces en las actividades identificadas por el Instituto de Ingeniería Eléctrica y Electrónica (IEEE) para el proceso de desarrollo de software y ha sido propuesta para la construcción de ontologías por la FIPA (Corcho, Fernández-López, Gómez-Pérez y López, 2005). Methontology plantea un ciclo de vida basado en la evolución de prototipos que permite a los ingenieros ontológicos añadir, cambiar y eliminar términos en cada nueva 21 versión (prototipo). Las actividades de desarrollo identificadas para Methontology son las siguientes:  Especificación: Realizar un documento donde se señale el alcance, objetivos, propósito, nivel de formalidad y usuarios finales de la ontología.  Conceptualización: Consiste en organizar y convertir una percepción informal de un dominio en una especificación semi-formal usando un conjunto de representaciones intermedias (tablas, diagramas) que puedan ser entendidas por los expertos del dominio y los desarrolladores de ontologías. Las tareas de conceptualización en Methontology son: (ver Figura 5): Figura 5. Tareas de conceptualización de Methontology (Corcho, Fernández-López, Gómez-Pérez y López, 2005) o Tarea 1: Construir el glosario de términos: crear un conjunto de los términos relevantes del dominio, las descripciones en lenguaje natural, sinónimos y acrónimos. o Tarea 2: Construir la taxonomía de conceptos: definir la jerarquía entre los conceptos del glosario de términos. Tarea 1 Construir glosario de términos Tarea 2 Construir taxonomía de conceptos Tarea 3 Construir diagrama de relaciones binarias Tarea 4 Construir diccionario de conceptos Tarea 11 Definir instancias Tarea 6 Definir atributos de instancias en detalle Tarea 5 Definir relaciones binarias en detalle Tarea 7 Definir atributos de clases en detalle Tarea 8 Definir constantes en detalle Tarea 9 Definir axiomas formales Tarea 10 Definir reglas Tarea 1 Construir glosario de términos Tarea 2 Construir taxonomía de conceptos Tarea 3 Construir diagrama de relaciones binarias Tarea 4 Construir diccionario de conceptos Tarea 11 Definir instancias Tarea 6 Definir atributos de instancias en detalle Tarea 5 Definir relaciones binarias en detalle Tarea 7 Definir atributos de clases en detalle Tarea 8 Definir constantes en detalle Tarea 9 Definir axiomas formales Tarea 10 Definir reglas 22 o Tarea 3: Construir un diagrama de relaciones binarias: generar un diagrama en el que se establezcan las relaciones entre los conceptos de una o más taxonomías de conceptos. o Tarea 4: Construir el diccionario de conceptos: crear un glosario que incluya los conceptos del dominio, relaciones, instancias, atributos de clases y atributos de instancias. o Tarea 5: Definir las relaciones binarias en detalle: crear una tabla que describe detalladamente las relaciones binarias incluidas en el diccionario de conceptos. o Tarea 6: Definir los atributos de instancia en detalle: describir detalladamente todos los atributos de las instancias incluidas en el diccionario de conceptos. o Tarea 7: Definir los atributos de clases en detalle: crear una tabla en la que se describen de manera precisa todos los atributos de clases incluidos en el diccionario de conceptos. o Tarea 8: Definir las constantes en detalle: crear una tabla en la que se describe detalladamente cada una de las constantes definidas en el glosario de términos. o Tarea 9: Definir los axiomas formales: identificar los axiomas formales necesarios en la ontología y describirlos con precisión en una tabla. o Tarea 10: Definir las reglas: identificar cuáles reglas son necesarias en la ontología y describirlas en una tabla de reglas. o Tarea 11: Definir las instancias: una vez creado el modelo conceptual de la ontología, se definen en una tabla las instancias relevantes que aparecen en el diccionario de conceptos. 23  Formalización: Realizar la transformación del modelo conceptual en un modelo formal o semi-computable.  Implementación: Codificar la ontología utilizando un lenguaje formal (Ontolingua, XOL, OIL, DAML, OWL, entre otros).  Mantenimiento: Esta actividad permite la actualización y corrección de la ontología. II.3.5 Lenguajes que se utilizan para desarrollar ontologías Los lenguajes de codificación de ontologías, permiten representar las ontologías y posibilitan la utilización de las mismas por parte de entes computarizados. Es importante conocer los diferentes lenguajes que existen y cuáles son los ámbitos de aplicación de cada uno de ellos, para poder usar el que mejor se adapte a nuestras necesidades. Flores (2011), menciona “entre los lenguajes para representar ontologías existen XML, RDF, OIL, DAML + OIL y OWL, de los cuales el W3C1 recomienda RDF y OWL”. OWL (Web Ontology Language) o lenguaje de ontologías para la Web: Es un lenguaje de etiquetado semántico para publicar y compartir ontologías en la Web. Se trata de una recomendación del W3C, y puede usarse para representar ontologías de forma explícita, es decir, permite definir el significado de términos en vocabularios y las relaciones entre estos términos. Es un lenguaje diseñado para usarse cuando la información contenida en los documentos necesita ser procesada por programas o aplicaciones, en oposición a situaciones donde el contenido solamente necesita ser presentado a los seres humanos (Lamarca, 2013). 1 World Wide Web Consortium http://www.w3.org 24 OWL surge como una revisión al lenguaje DAML-OIL y es mucho más potente que éste. Al igual que OIL, OWL se estructura en capas que difieren en la complejidad y puede ser adaptado a las necesidades de cada usuario, al nivel de expresividad que se precise y a los distintos tipos de aplicaciones existentes (motores de búsqueda, agentes, etc.). OWL fue desarrollado como una extensión del vocabulario de RDF y deriva del lenguaje DAML+OIL (Lamarca, 2013). II.3.6 Lenguajes para consultar ontologías: SPARQL Sus siglas son un acrónimo recursivo del inglés SPARQL Protocol and RDF Query Language. Fue estandarizado por el DAWG2 del W3C. En el marco de la recuperación y organización de la información, Prud’hommeaux y Seaborne (2006), definen SPARQL (Protocol and RDF Query Language), como un lenguaje de recuperación para RDF/RDFS y también para OWL. Esta tecnología de consulta permite que los usuarios puedan centrarse en la información que requieren, sin tener en cuenta la tecnología de base de datos o el formato utilizado para almacenar estos datos. Debido a que las consultas en el lenguaje SPARQL expresan objetivos de alto nivel, es fácil extenderlos a orígenes de datos inesperados, o incluso transferirlos a nuevas aplicaciones. El lenguaje de recuperación SPARQL ha sido diseñado para un uso a escala en la Web, así permite hacer consultas sobre orígenes de datos distribuidos, independientemente del formato. Es más fácil crear una consulta sencilla y recuperar información en una sola consulta a través de diferentes almacenes de datos, que crear múltiples consultas, además de tener un costo menor y de ofrecer mejores resultados. Debido a que SPARQL no está ligado a un formato de base de datos específico, puede ser utilizado para beneficiarse de la Web 2.0 y de la composición de éstos con otros recursos de la Web Semántica en las aplicaciones. La especificación de SPARQL define un lenguaje de consulta y un protocolo, y trabaja con el resto de las tecnologías 2 Data Access Working Group 25 esenciales del W3C de la Web Semántica: Infraestructura de Descripción de Recursos (RDF) para la representación de datos; RDF Schema; Lenguaje de Ontologías Web (OWL) para construcción de vocabularios. 26 CAPÍTULO III DESARROLLO DE LA SOLUCIÓN DE GESTIÓN DE CONOCIMIENTO En este capítulo se detalla la estructura del sistema para la gestión de conocimiento de soporte técnico en los Infocentros, con sus componentes y relaciones. Además, se describen los cambios en las actividades de desarrollo de ontologías, siguiendo la metodología Methontology, necesarias para agregar las nuevas funcionalidades a este sistema. Por último, se explican los repositorios utilizados. III.1 Subsistema de la solución Como se ha dicho, el objetivo de este trabajo es extender y mejorar las funcionalidades del sistema para la gestión de conocimiento de soporte técnico en los Infocentros, desarrollado por Ghanem, Núñez y Ramos (2014). La arquitectura de este sistema se muestra en la Figura 6, la cual se fundamenta en la propuesta de Kerschberg (2001), que permite modelar y organizar de manera estructurada los componentes que lo conforman. Figura 6. Arquitectura del sistema para la gestión de conocimiento de soporte técnico en Infocentros (Ghanem, Núñez y Ramos, 2014) 27 La arquitectura se encuentra constituida por tres capas a saber: 1) Capa de presentación del conocimiento: que dispone de una interfaz Web para la consulta y el acceso a la información. Esta capa será complementada, para que se adapte a las nuevas funcionalidades del sistema. Más información acerca de esta capa será abordada en el Capítulo IV. 2) Capa de administración de conocimiento: a través de ésta el usuario final (facilitadores, y demás miembros de la comunidad) sin tener conocimientos de gestión de conocimiento e inteligencia artificial, puede navegar, realizar consultas de características de los elementos tecnológicos modelados en la ontología, y hacer búsquedas, para solucionar incidentes tecnológicos presentes en los Infocentros, a través de la recuperación de patrones de solución de soporte. Esta capa está conformada por dos módulos funcionales y una ontología: o El módulo de asistencia tecnológica: a través del cual los usuarios podrán realizar consultas de conceptos presentes en la ontología y recuperar patrones de soporte técnico, en este módulo el usuario interactúa con el sistema usándolo de forma explícita (el usuario es consciente, es decir, conoce la existencia de la ontología y puede usar la misma como vocabulario), o implícita (el usuario no es consciente del uso de la ontología y la usa como parte normal de su interacción con el sistema para hacer preguntas o navegar). En este módulo se agregará la funcionalidad de búsquedas semánticas. Donde, el usuario debe proporcionar una o más palabras claves para realizar la búsqueda de patrones de soluciones tecnológicas, y opcionalmente, podrá indicar en qué elementos de la ontología desea realizar la búsqueda, tales como:  Clases de elementos tecnológicos: indica que se pueden buscar coincidencias entre la(s) palabra(s) clave(s) y los valores de nombres, 28 acrónimos, sinónimos y descripciones, definidos en las clases de elementos tecnológicos.  Clases de incidencias de soporte técnico: indica que se pueden buscar coincidencias entre la(s) palabra(s) clave(s) y los valores de nombres, acrónimos, sinónimos y descripciones, definidos en las clases de soporte técnico.  Instancias de elementos tecnológicos: indica que se pueden buscar coincidencias entre la(s) palabra(s) clave(s) y los valores de las propiedades definidas en las instancias de los elementos tecnológicos, tales como los valores de las propiedades de nombre, versión, marca, modelo, etc. o El módulo de administración: permitirá a un usuario que haya iniciado sesión con el rol de “administrador”, realizar operaciones de inserción, modificación y/o eliminación, tanto de soluciones de soporte técnico como de instancias de elementos tecnológicos; así mismo, permitirá exportar la ontología en formato OWL. o La ontología: almacenará y describirá de manera estructurada y organizada los conceptos (y sus relaciones) que se utilizan cotidianamente en el entorno de soporte técnico en los Infocentros, y permitirá guiar al usuario acerca de cuál patrón de soporte técnico recuperar para la solución efectiva de algún incidente tecnológico. 3) Capa de fuente de datos: conformada por soluciones de soporte técnico, que almacena los casos tecnológicos caracterizados por el incidente, el ambiente tecnológico en donde se presenta, los pasos requeridos para solucionarlo e información histórica tal como, autor y fecha de creación. Así, a través de la ontología, se guía la consulta o la búsqueda semántica de soluciones tecnológicas, para obtener un identificador del patrón de solución de soporte 29 técnico necesitado. Luego, con este identificador, se consigue una solución desde el repositorio de soluciones de soporte técnico. En la siguiente sección se detallan los cambios realizados en la ontología, al ampliar la base de patrones del sistema de gestión de conocimiento de soporte técnico de los Infocentros. III.2 Ontología de soporte técnico Entre los objetivos de este trabajo, se encuentra la actualización de las soluciones de soporte técnico. Por lo que, se incorporaron un conjunto de instancias a la ontología, específicamente instancias pertenecientes al elemento tecnológico aplicaciones de programa, lo que conllevó al crecimiento del corpus de la ontología. Debido a que la metodología Methontology plantea un ciclo de vida basado en la evolución de prototipos, que permite añadir, cambiar y eliminar términos en cada nueva versión (prototipo), se hace necesaria la actualización de algunas actividades de desarrollo que propone dicha metodología, entre ellas:  Actividad de especificación: Se actualizaron, el alcance y las preguntas de competencias, quedando de la siguiente manera: Tabla 1 Actividad de especificación para la ontología de Soporte Técnico Nombre ontología Ontología de Soporte Técnico de los Infocentros Propósito Representar, organizar, formalizar, estandarizar y compartir el conocimiento concerniente con los elementos tecnológicos presentes en los Infocentros y del soporte técnico que aplica sobre ellos. Alcance 1. Resolución de problemas frecuentes que requieran soporte técnico del elemento tecnológico equipos de reproducción, específicamente de impresoras. 2. Resolución de problemas frecuentes que requieran soporte técnico del elemento tecnológico aplicaciones de programas, específicamente de aplicaciones de ofimática. Nivel de formalidad Formal Tipo de ontología Ontología de dominio (proporciona el lenguaje necesario para describir el dominio estudiado). 30 Usuarios finales Facilitadores, personal de soporte técnico, miembros de la comunidad que hacen vida en los Infocentros. Fuentes de conocimiento Expertos del dominio (profesionales y docentes), libros y/o manuales especializados, artículos de revistas, guías e Internet. Preguntas de competencia - Conociendo la marca y modelo de una impresora, cuáles son las acciones a ejecutar para solucionar problemas de impresión corrida o distorsionada. - Conociendo la marca y modelo de una impresora, cuáles son las acciones a ejecutar para corregir problemas de impresión manchada. - Conociendo la marca y modelo de una impresora, cuáles son las acciones a ejecutar para desatascar papel. - Conociendo la marca y modelo de una impresora, y el nombre y la versión de un sistema operativo, cuáles son las acciones a ejecutar para instalar la impresora. - Conociendo el nombre y versión de la aplicación de la suite ofimática, y el nombre y versión de un sistema operativo, cuáles son las acciones a ejecutar para instalar la aplicación ofimática. - Conociendo el nombre y versión de la aplicación de la suite ofimática, y el nombre y versión de un sistema operativo, cuáles son las acciones a ejecutar para corregir cierre inesperado. - Conociendo el nombre y versión de la aplicación de la suite ofimática, y el nombre y versión de un sistema operativo, cuáles son las acciones a ejecutar para restablecer barra herramientas, función, formato y/o dibujo.  Actividad de conceptualización: durante esta fase se adquirieron, formalizaron y representaron nuevos elementos de conocimiento pertenecientes al dominio de interés, a través de representaciones intermedias (tablas y diagramas) y fueron extendidas las siguientes tareas de conceptualización en Methontology: o En la tarea 1, se añadieron al glosario de términos diversos sinónimos y acrónimos, que se detallan a continuación. Tabla 2 Acrónimos y sinónimos incorporados al glosario de términos Nombre Sinónimo Acrónimo Descripción Tipo Computador de escritorio Ordenador, Computador PC Equipo de computación suficientemente pequeño para caber cómodamente en un espacio de trabajo individual (WordNet, 2012). Concepto Sistema operativo Distribución SO S.O. Conjunto de programas que hacen funcionar al equipo de computación controlando toda la actividad que ésta realiza, sus componentes y la interrelación entre los programas de aplicación y los Concepto 31 diversos dispositivos del equipo de computación (Suárez y Mujica, 2012). Soporte técnico Servicio técnico S.T. Es un conjunto de actividades preventivas y correctivas que se realizan sobre elementos tecnológicos, con el fin de mantener su operatividad. Concepto o En la tarea 2, que corresponde a construir la taxonomía de conceptos, se agregaron las fallas frecuentes de soporte técnico que se aplican sobre el elemento tecnológico de aplicaciones de ofimática. En la Figura 7, se muestra la organización taxonómica de soporte técnico. Figura 7. Taxonomía de Soporte Técnico en los Infocentros En la tabla de definición de instancias, que corresponde a la tarea 11 de Methontoly, se incorporaron algunas instancias de aplicaciones ofimáticas. Estas instancias también se unieron al glosario de términos de la ontología. La Tabla 3, muestra un fragmento de la tabla. (Ver tabla de instancias completa en el Anexo E). Tabla 3 Fragmento de tabla de instancias agregadas a la ontología Nombre de instancia Concepto al que pertenece Atributos Valores Procesador de texto Libreoffice 4.4.1 Aplicación de ofimática Nombre de la aplicación de programa Procesador de texto Libreoffice Versión de la aplicación de programa 4.4.1 32 Openoffice Calc 4.4.1 Aplicación de ofimática Nombre de la aplicación de programa Openoffice Calc Versión de la aplicación de programa 4.4.1 Openoffice Draw 4.1.1 Aplicación de ofimática Nombre de la aplicación de programa Openoffice Draw Versión de la aplicación de programa 4.1.1  Actividad de formalización e implementación: En esta actividad, Methontology propone realizar la transformación del modelo conceptual en un modelo formal o semi-computable. La ontología construida por Ghanem, Núñez, y Ramos (2014), se presenta en formato RDF; pero el Lenguaje de Ontologías Web (OWL) facilita un mejor mecanismo de interpretabilidad del contenido Web que los mecanismos admitidos por RDF, proporcionando un vocabulario adicional junto con una semántica formal, es decir, OWL posee más poder expresivo que RDF. Recordemos que OWL fue desarrollado como una extensión del vocabulario de RDF. Además, OWL es propuesto como estándar por el W3C. Por estas razones, se migró la ontología al lenguaje OWL, manteniendo las clases y relaciones establecidas inicialmente.  Actividad de mantenimiento: Esta actividad permite actualizar y corregir (evaluar) la ontología construida, para ello se utilizó el esquema de evaluación propuesto por Ramos, Núñez y Casañas (2009), el cual consiste en aplicar cuatro criterios, los cuales son: o Uso correcto del lenguaje: Consiste en evaluar sintácticamente la ontología, lo que permite corregir inconsistencias sintácticas.  Validar que el lenguaje seleccionado cumpla con estándares para desarrollos ontológicos: El lenguaje utilizado fue OWL, el cual es altamente usado por la comunidad de ingenieros ontológicos, además de ser recomendado por el W3C para el desarrollo de ontología. 33  Evaluar sintácticamente la ontología en cada fase del ciclo de desarrollo: Para evaluar sintácticamente la ontología se utilizó el analizador sintáctico de la Universidad de Manchester (http://mowl- power.cs.man.ac.uk:8080/validator/). Este analizador genera como respuesta si la evaluación fue satisfactoria o es caso contrario las violaciones y errores encontrados. Como se muestra en la Figura 8, el resultado fue satisfactorio, además se refleja el IRI de la ontología. Figura 8. Resultado luego de aplicar el analizador sintáctico a la ontología o Exactitud de la estructura taxonómica: La estructura taxonómica de la ontología propuesta por Ghanem, Núñez, y Ramos (2014), no requirió modificaciones, debido a que fue implementada completamente y se encuentra libre de inconsistencias. o Validez del vocabulario: Para evaluar el significado de los términos y conceptos, se realizaron las siguientes actividades:  Análisis del corpus del dominio: se identificaron, extrajeron y organizaron los términos significativos a partir de la consulta con expertos y la revisión de libros y documentos especializados que fueron consultados. En total resultaron 382 los términos relacionados al dominio de soporte técnico en los Infocentros. 34  Evaluación del vocabulario: Se calcula la precisión, que indica el porcentaje de los términos de la ontología que aparecen en el corpus con relación a la cantidad total de términos de la ontología, y el recall (exhaustividad), que no es más que porcentaje de términos del corpus que aparecen en la ontología con relación al total de términos en el corpus, a partir del glosario de términos de la ontología y el corpus. Tabla 4 Evaluación del vocabulario de la ontología Precisión Recall Fórmula CO-C / COnto CO-C / CCorp Descripción CO-C = Cantidad de términos que se solapan entre la ontología y el corpus. COnto = Cantidad total de términos de la ontología. CO-C = Cantidad de términos que se solapan entre la ontología y el corpus. CCorp = Cantidad total de términos del corpus. Resultados CO-C = 293 COnto = 293 Precisión = 293/293 = 1 CO-C = 293 CCorp = 382 términos Recall = 293 / 382 = 0,76 Precisión = 1. Este valor indica que el 100% de los términos codificados en la ontología existen en el corpus. Recall = 0,76. Este valor indica que el 76% de los términos de corpus se encuentran representados en la ontología. Entre las razones que podrían explicar el valor obtenido, destaca que los términos del dominio son altamente especializados y muy numerosos, y por ello no se incluyeron en la ontología, ya que ésta modela solo una porción del dominio. o Adecuación a requerimientos: Para evaluar la adecuación a los requerimientos, se revisa que las especificaciones del documento de requerimientos se cumplan, verificando que los objetivos, la representación del conocimiento y las respuestas correctas a las preguntas de competencia contenidos en el documento de especificación fueron alcanzados. Con el fin de dar respuestas a las preguntas de competencia, se muestra un ejemplo en la Figura 9, con la respuesta a la siguiente pregunta: Conociendo el nombre y la versión de una aplicación ofimática, y el 35 nombre y la versión de un sistema operativo ¿cuáles son las acciones a ejecutar para instalar la aplicación ofimática? En este caso, se seleccionó la instalación de la aplicación ofimática de nombre LibreOffice y versión 4.4.1, sobre el sistema operativo de nombre Debian GNU/Linux y versión Squeeze 6.0. Como resultado, se obtuvo un identificador (uRLSoporteTécnico), correspondiente al patrón de soporte técnico, donde se encuentran almacenados los pasos para ejecutar la solución del incidente tecnológico consultado. Este resultado se muestra en la siguiente figura. Figura 9. Ejemplo de la respuesta a una pregunta de competencia, que permite consultar el patrón de solución tecnológica, para la instalación de la aplicación ofimática LibreOffice 4.4.1 sobre el sistema operativo Debian GNU/Linux Squeeze 6.0 36 III.3 Repositorios La ontología se almacenó en un triplestore. Un triplestore es un sistema manejador de base de datos especialmente construido con el propósito de almacenar y recuperar datos en formato RDF. Estos datos están constituidos de forma estructurada por una entidad denominada tripleta (sujeto, predicado y objeto). El almacenamiento y recuperación de datos en un triplestore se realiza a través del lenguaje de consulta SPARQL. Las soluciones de soporte técnico, son representadas a través de un esquema basado en patrones. Éstos fueron definidos a partir de la concepción de representación de patrones descrito por Alexander C. (1979), en donde se indica que un patrón es una regla que establece una relación entre un contexto, un sistema de fuerzas (hace referencia a un problema), que aparecen en el contexto y una configuración que permite que las fuerzas se resuelvan dentro del contexto. Lo que en un lenguaje más entendible podría denominarse: contexto, problema y solución. Los patrones de solución de soporte técnico, están constituidos por un conjunto de pasos, que expresan las tareas que deben ser ejecutadas para dar solución a un incidente tecnológico. Estos patrones pueden ser impresos en un documento digital, para su posterior consulta. Los patrones se encuentran alojados en un repositorio de base de datos, lo que permite crear nuevas soluciones a otras incidencias tecnológicas, actualizarlas o eliminarlas. La Figura 10 muestra un ejemplo de un patrón de solución de soporte técnico. 37 Figura 10. Ejemplo de un patrón de solución 38 CAPÍTULO IV DESARROLLO DE LA APLICACIÓN WEB En este capítulo se presentan los detalles del desarrollo de una aplicación Web que incorpora las funcionalidades de búsquedas de incidencias de soporte técnico mediante palabras claves, así como las funcionalidades de administración de las instancias de la ontología, y la administración de los usuarios del sistema. Además, se incluyen las pruebas realizadas al sistema. IV.1 Modelado de la aplicación Con el objetivo de ampliar el sistema de gestión SIGECOST, se implementaron un conjunto de requerimientos funcionales, a saber:  Se desarrolló un módulo de administración de la ontología, que permite insertar, modificar y eliminar instancias tanto de elementos tecnológicos como de incidencias de soporte técnico. Cabe destacar que cada operación realizada en este módulo, es registrada de manera permanente en la ontología, mediante un lenguaje de consulta SPARQL. Adicionalmente, como parte de la administración de la ontología, se permite exportar la misma a un archivo en formato OWL. Estás funcionalidades solo estarán disponibles para ser utilizadas por un personal calificado, para ello se dispone de un mecanismo de control de perfiles de usuarios.  Se incorporó al módulo de asistencia de tecnológica la funcionalidad de búsqueda semántica, para permitir al usuario encontrar soluciones de incidencias de soporte técnico mediante una o más palabras claves. Esto se realizó con el propósito de facilitar las búsquedas cuando no se conocen todos los elementos involucrados en la incidencia de soporte técnico, en cuyo caso, la o las palabras claves permiten filtrar las incidencias, reduciendo el número de posibles soluciones. 39  Se desarrolló un módulo de administración de usuarios, que permite crear y modificar los diferentes usuarios autorizados para administrar el sistema. Esta administración comprende dos tipos de usuarios: uno con permisos para administrar las instancias de la ontología y las soluciones de soporte técnico, y otro con permisos para administrar los usuarios en sí mismos. En el análisis del sistema se utilizaron los diagramas de casos de uso y diagramas de estado propuestos por Booch, Rumbaugh y Jacobson, (2006). En la Figura 11, se aprecia el nivel 0, del diagrama de casos de uso del sistema, donde se incorporaron los nuevos casos de uso con las actualizaciones planteadas en este trabajo de investigación. Figura 11. Casos de uso de la aplicación de gestión de conocimiento de soporte técnico en los Infocentros 40 A continuación se muestran los detalles de los casos de uso incorporados al sistema con sus respectivos diagramas de estado.  Detalles del caso de uso: Consultar incidencia de soporte técnico y su solución tecnológica Tabla 5 Caso de Uso: Consultar incidencia de soporte técnico y su solución tecnológica Nombre del caso de uso Consultar incidencia de soporte técnico y su solución tecnológica Actor(es) Usuario Precondición N/A Descripción 1. El usuario visualiza las opciones que brinda el sistema en su inicio. 2. El usuario selecciona la opción de consultas de las incidencias de soporte técnico y sus soluciones, presionando el botón consultar. 3. El sistema despliega los tipos de incidencias de soporte técnico encontradas. 4. El usuario selecciona un tipo de incidencia de soporte técnico de la lista desplegada, presionando el botón consultar. 5. El sistema despliega las instancias del tipo de incidencia de soporte técnico seleccionada. Junto a cada incidencia, se muestra un pequeño resumen, de la solución tecnológica. 6. El usuario selecciona la instancia a consultar, de la lista desplegada, presionando el botón ver detalles. 7. El sistema muestra el detalle de la instancia de incidencia de soporte técnico, así como el detalle de su solución tecnológica. Diagrama de estado Postcondición Se muestra el detalle de la instancia consultada. 41  Detalles del caso de uso: Buscar solución tecnológica Tabla 6 Caso de Uso: Buscar solución tecnológica Nombre del caso de uso Buscar solución tecnológica Actor(es) Usuario Precondición N/A Descripción 1. El usuario visualiza las opciones que brinda el sistema en su inicio. 2. El usuario selecciona la opción Buscar. 3. El sistema muestra una barra de búsqueda. 4. El usuario introduce una o más palabras claves. 5. El sistema despliega las instancias de incidencias de soporte técnico encontradas. 6. El usuario selecciona la instancia de soporte técnico que desea consultar, presionando el botón ver detalles. 7. El sistema muestra el detalle de la solución tecnológica. Diagrama de estado Postcondición Se muestra la solución de soporte técnico de la instancia seleccionada. La Figura 12 muestra el refinamiento del caso de uso administrar elemento tecnológico. 42 Figura 12. Diagrama de Casos de Uso Administrar elemento tecnológico La Tabla 7 muestra los detalles del caso de uso administrar elemento tecnológico: Tabla 7 Caso de Uso: Administrar elemento tecnológico Nombre del caso de uso Administrar elemento tecnológico Actor(es) Experto Precondición Haber sido validado como usuario administrador de la ontología Descripción El experto puede seleccionar alguna de las siguientes tres opciones de administración: a.- Insertar instancia de elemento tecnológico. b.- Modificar instancia de elemento tecnológico. c.- Eliminar instancia de elemento tecnológico. Postcondición Una nueva instancia de elemento tecnológico insertada, modificada o eliminada dependiendo de la acción de administración ejecutada por el experto.  Detalles del caso de uso: Insertar instancia de elemento tecnológico Tabla 8 Caso de Uso: Insertar instancia de elemento tecnológico Nombre del caso de uso Insertar instancia de elemento tecnológico Actor(es) Experto Precondición Haber sido validado como usuario administrador de la ontología. Descripción 1. El experto visualiza las opciones que brinda el sistema en su inicio. 2. El experto selecciona la opción administración de las incidencias de elementos tecnológicos, presionando el botón administrar. 3. El sistema despliega los tipos de elementos tecnológicos encontrados. 43 4. El experto selecciona un tipo de elemento tecnológico de la lista desplegada, presionando el botón insertar. 5. El sistema muestra un formulario, donde el experto puede escribir los detalles y características de la instancia que se va a insertar. 6. El experto llena el formulario. 7. El experto indica que se registre la instancia, presionando el botón guardar. Diagrama de estado Postcondición Instancia de elemento tecnológico insertada.  Detalles del caso de uso: Modificar instancia de elemento tecnológico Tabla 9 Caso de Uso: Modificar instancia de elemento tecnológico Nombre del caso de uso Modificar instancia de elemento tecnológico Actor(es) Experto Precondición Haber sido validado como usuario administrador de la ontología. Descripción 1. El experto visualiza las opciones que brinda el sistema en su inicio. 2. El experto selecciona la opción administración de las incidencias de elementos tecnológicos, presionando el botón administrar. 3. El sistema despliega los tipos de elementos tecnológicos encontrados. 4. El experto selecciona un tipo de elemento tecnológico de la lista desplegada, presionando el botón consultar. 5. El sistema despliega las instancias del tipo de elemento tecnológico seleccionado. 6. El experto selecciona la instancia a modificar, de la lista desplegada, presionando el botón ver detalles. 7. El sistema muestra el detalle de la instancia de elemento tecnológico seleccionada. 8. El experto selecciona la opción de modificar la instancia, presionando el botón modificar. 9. El sistema muestra el detalle de la instancia de elemento tecnológico, en modo de actualización, a través de un formulario. 10. El experto modifica los detalles de la instancia. 11. El experto indica que se guarden los cambios, presionando el botón actualizar. Diagrama de estado 44 Postcondición Instancia de elemento tecnológico modificada 45  Detalles del caso de uso: Eliminar instancia de elemento tecnológico Tabla 10 Caso de Uso: Eliminar instancia de elemento tecnológico Nombre del caso de uso Eliminar instancia de elemento tecnológico Actor(es) Experto Precondición Haber sido validado como usuario administrador de la ontología. Descripción 1. El experto visualiza las opciones que brinda el sistema en su inicio. 2. El experto selecciona la opción de administración de las incidencias de elementos tecnológicos, presionando el botón administrar. 3. El sistema despliega los tipos de elementos tecnológicos encontrados. 4. El experto selecciona un tipo de elemento tecnológico de la lista desplegada, presionando el botón consultar. 5. El sistema despliega las instancias del tipo de elemento tecnológico seleccionado. 6. El experto selecciona la instancia a eliminar, de la lista desplegada, presionando el botón ver detalles. 7. El sistema muestra el detalle de la instancia de elemento tecnológico seleccionada. 8. El experto selecciona la opción de eliminar la instancia, presionando el botón eliminar. 9. El experto confirma la eliminación de la instancia, en la ventana emergente, presionando el botón aceptar. Diagrama de estado Postcondición Instancia de elemento tecnológico eliminada. 46 La Figura 13 muestra el refinamiento del caso de uso administrar incidencia de soporte técnico y su solución tecnológica. Figura 13. Diagrama de Casos de uso: Administrar incidencia de soporte técnico y su solución tecnológica A continuación se muestran los detalles del caso de uso Administrar incidencia de soporte técnico y su solución tecnológica Tabla 11 Caso de Uso: Administrar incidencia de soporte técnico y su solución tecnológica Nombre del caso de uso Administrar incidencia de soporte técnico y su solución tecnológica Actor(es) Experto Precondición Haber sido validado como usuario administrador de incidencias Descripción 1. El experto puede seleccionar alguna de las siguientes opciones de administración: a.- Insertar incidencia de soporte técnico. b.- Modificar incidencia de soporte técnico. c.- Eliminar incidencia de soporte técnico. Postcondición Una incidencia de soporte técnico insertada, modificada o eliminada dependiendo de la acción de administración ejecutada por el experto. 47  Detalles del caso de uso: Insertar incidencia de soporte técnico y/o solución tecnológica Tabla 12 Caso de Uso: Insertar incidencia de soporte técnico y/o solución tecnológica Nombre del caso de uso Insertar incidencia de soporte técnico y/o solución tecnológica Actor(es) Experto Precondición Haber sido validado como usuario administrador de incidencias. Descripción 1. El experto visualiza las opciones que brinda el sistema en su inicio. 2. El experto selecciona la opción administración de las instancias de incidencias de soporte técnico y sus soluciones, presionando el botón administrar. 3. El sistema despliega los tipos de incidencias de soporte técnico. 4. El experto selecciona un tipo de incidencia de soporte técnico de la lista desplegada, presionando el botón insertar. 5. El sistema muestra un formulario, donde el experto puede seleccionar la instancia de un elemento tecnológico y escribir los pasos para la solución de la incidencia a insertar. 6. El experto llena el formulario. 7. El experto indica que se registre la instancia de incidencia de soporte técnico con su solución, presionando el botón guardar. Diagrama de estado Postcondición Instancia de incidencias de soporte técnico insertada 48  Detalles del caso de uso: Modificar solución tecnológica de una incidencia de soporte técnico Tabla 13 Caso de Uso: Modificar solución tecnológica de una incidencia de soporte técnico Nombre del caso de uso Modificar solución tecnológica de una incidencia de soporte técnico Actor(es) Experto Precondición Haber sido validado como usuario administrador de incidencias. Descripción 1. El experto visualiza las opciones que brinda el sistema en su inicio. 2. El experto selecciona la opción administración de las instancias de incidencias de soporte técnico y sus soluciones, presionando el botón administrar. 3. El sistema despliega los tipos de incidencias de soporte técnico. 4. El experto selecciona un tipo de incidencia de soporte técnico de la lista desplegada, presionando el botón consultar. 5. El sistema muestra una lista de las instancias de las incidencias de soporte técnico y un breve resumen de su solución tecnológica. 6. El experto selecciona una instancia de incidencia de soporte técnico, presionando el botón ver detalles. 7. El sistema muestra los detalles de la incidencia de soporte técnico y su solución tecnológica. 8. El experto selecciona la opción modificar solución tecnológica de la incidencia de soporte técnico seleccionada en el paso anterior, presionando el botón modificar. 9. El sistema muestra un formulario que permite la modificación de la solución de soporte técnico. 10. El experto modifica la solución de soporte técnico. 11. El experto indica que se guarden los cambios, presionando el botón actualizar. Diagrama de estado Postcondición Instancia de incidencias de soporte técnico modificada. 49  Detalles del caso de uso Eliminar incidencia de soporte técnico y su solución tecnológica Tabla 14 Caso de Uso: Eliminar incidencia de soporte técnico y su solución tecnológica Nombre del caso de uso Eliminar incidencia de soporte técnico y su solución tecnológica Actor(es) Experto Precondición Haber sido validado como usuario administrador de incidencias. Descripción 1. El experto visualiza las opciones que brinda el sistema en su inicio. 2. El experto selecciona la opción administración de las instancias de incidencias de soporte técnico y sus soluciones, presionando el botón administrar. 3. El sistema despliega los tipos de incidencias de soporte técnico. 4. El experto selecciona un tipo de incidencia de soporte técnico de la lista desplegada, presionando el botón consultar. 5. El sistema muestra una lista de las instancias de las incidencias de soporte técnico y un pequeño resumen de su solución tecnológica. 6. El experto selecciona una instancia de incidencia de soporte técnico, presionando el botón ver detalles. 7. El sistema muestra los detalles de la incidencia de soporte técnico y su solución tecnológica. 8. El experto selecciona la opción eliminar solución tecnológica de la incidencia de soporte técnico seleccionada en el paso anterior, presionando el botón eliminar. 9. El experto confirma la eliminación de la instancia de incidencia de soporte técnico, en la ventana emergente, presionando el botón aceptar. Diagrama de estado Postcondición Instancia de incidencia de soporte técnico y su solución eliminada. 50 La Figura 14 muestra el refinamiento del caso de uso exportar la ontología. Figura 14. Diagrama de casos de uso: Exportar la ontología  Detalles del caso de uso: Exportar la ontología Tabla 15 Caso de Uso: Exportar la ontología Nombre del caso de uso Exportar la ontología Actor(es) Experto Precondición Haber sido validado como usuario administrador. Descripción 1. El experto selecciona en la barra de menú la siguiente opción: Archivo -> Exportar la ontología 2. El sistema muestra la opción para exportar la ontología a OWL. 3. El experto puede seleccionar la opción de exportar la ontología a OWL. Diagrama de estado Postcondición La ontología exportada a formato OWL si el experto selecciona la opción. 51 La Figura 15 muestra el refinamiento del caso de uso administrar cuenta. Figura 15. Diagrama de casos de uso: Administrar cuenta  Detalles del caso de uso: Administrar cuenta Tabla 16 Caso de Uso: Administrar cuenta Nombre del caso de uso Administrar cuenta Actor(es) Administrador de usuarios, Experto. Precondición Haber iniciado sesión en el sistema. Descripción 1. El actor selecciona en la barra de menú la siguiente opción: Mi cuenta. 2. El sistema muestra un formulario con los detalles de la cuenta, y permite la modificación únicamente de los campos usuario y contraseña. 3. El actor, modifica uno o los dos campos del formulario. 4. El actor indica que se guarden los cambios, presionando el botón actualizar. Diagrama de estado Postcondición Datos de la cuenta actualizados. La Figura 16 muestra el refinamiento del caso de uso consultar usuarios. Figura 16. Diagrama de casos de uso: Consultar usuarios 52  Detalles del caso de uso: Consultar usuarios Tabla 17 Caso de Uso: Consultar usuarios Nombre del caso de uso Consultar usuarios Actor(es) Administrador de usuarios. Precondición Haber sido validado como administrador de usuarios. Descripción 1. El administrador selecciona en la barra de menú la siguiente opción: Administración -> Usuarios. 2. El sistema muestra una lista de usuarios encontrados. 3. El administrador selecciona el usuario que desea consultar, presionando el botón ver detalles. 4. El sistema muestra los datos del usuario consultado. Diagrama de estado Postcondición Datos de usuario mostrados. La Figura 17 muestra el refinamiento del caso de uso administrar usuarios. Figura 17. Diagrama de casos de uso: Administrar usuarios  Detalles del caso de uso: Administrar usuarios Tabla 18 Caso de Uso: Administrar usuarios Nombre del caso de uso Administrar usuarios Actor(es) Administrador de usuarios Precondición Haber sido validado como administrador de usuarios Descripción El administrador puede seleccionar dos opciones de administración: 1. Insertar usuario. 2. Modificar usuario. Postcondición Un usuario insertado o modificado dependiendo de la acción de administración ejecutada. 53  Detalles del caso de uso: Insertar usuario Tabla 19 Caso de Uso: Insertar usuario Nombre del caso de uso Insertar usuarios Actor(es) Administrador de usuarios. Precondición Haber sido validado como administrador de usuarios. Descripción 1.El administrador selecciona en la barra de menú la siguiente opción: Administración -> Usuarios. 2.El sistema muestra una lista de usuarios encontrados. 3.El administrador selecciona la pestaña Insertar. 4.El sistema muestra un formulario, que permite al administrador escribir los datos del usuario a insertar. 5.El administrador llena el formulario. 6.El administrador guarda los datos del nuevo usuario, con el botón guardar. Diagrama de estado Postcondición Un nuevo usuario insertado.  Detalles del caso de uso: Modificar usuario Tabla 20 Caso de Uso: Modificar usuario Nombre del caso de uso Modificar usuarios Actor(es) Administrador de usuarios. Precondición Haber sido validado como administrador de usuarios. Descripción 1.El administrador selecciona en la barra de menú la siguiente opción: Administración -> Usuarios. 2.El sistema muestra una lista de usuarios encontrados. 3.El administrador selecciona el usuario que desea modificar, presionando el botón ver detalles. 4.El sistema muestra los datos del usuario seleccionado. 5.El administrador presiona el botón modificar. 6.El sistema muestra un formulario con los datos del usuario y permite la modificación de todos los campos. 7.El administrador modifica los campos del formulario. 8.El administrador, indica que desea guardar los datos modificados, presionando el botón actualizar. Diagrama de estado Postcondición Un usuario modificado. 54 IV.2 Interfaces de la aplicación y ejemplos de consultas para acceder y recuperar información desde la ontología En la siguiente sección, se describen algunos ejemplos de consultas realizadas a la ontología, mediante la interacción usuario-sistema, y se muestran las interfaces con los resultados obtenidos de cada consulta realizada. Esta interacción permite visualizar la navegación que realiza el usuario y las respuestas que emite el sistema, con el fin de hacer más entendible el proceso de obtención del conocimiento. Para conocer el sistema con más detenimiento ver el siguiente enlace: http://soporte.infocentro.net.ve/sigecost/. Para realizar las consultas, el sistema desarrollado requirió de la manipulación de la ontología (almacenada en una base de datos). Este proceso fue llevado a cabo con la ayuda de la librería Arc2, mediante el lenguaje de consulta SPARQL, el cual está optimizado para realizar consultas de recuperación, inserción y eliminación sobre la ontología. Las consultas en SPARQL trabajan a nivel de tripletas (sujeto, predicado, objeto), pudiendo verse afectadas más de una tripleta en una sola consulta. Cada instancia en la ontología requiere más de una tripleta para definirse, por lo que cualquier operación de consulta, inserción, modificación y/o eliminación requieren afectar más de una tripleta. Así, la estrategia utilizada en este trabajo, para investigar cuantas y cuales tripletas eran requeridas por una instancia, continuó los siguientes pasos:  Definir la instancia en la ontología mediante el editor Protégé.  Cargar en el sistema el archivo OWL generado por Protégé.  Obtener las tripletas que conforman la instancia creada desde Protégé. De esta manera, se pudieron utilizar las tripletas encontradas, para definir los procesos de inserción, modificación y eliminación de instancias. Convenciones para las consultas de la ontología Para una mejor estructuración y claridad en el contenido de las consultas de la ontología, se asumen las siguientes convenciones. 55 Espacios de nombres En esta sección, a menos que se indique lo contrario se asumen los siguientes vínculos de prefijos de espacios de nombres: Prefijo IRI : http://www.owl-ontologies.com/OntologySoporteTecnico.owl# rdf http://www.w3.org/1999/02/22-rdf-syntax-ns# rdfs http://www.w3.org/2000/01/rdf-schema# owl: http://www.w3.org/2002/07/owl# xsd: http://www.w3.org/2001/XMLSchema# Terminología A continuación se definen algunos de los términos relacionados con las consultas de la ontología. IRI3 Un IRI (Internationalized Resource Identifiers, por sus siglas en inglés) es una secuencia compacta para identificar recursos Web. Consta de un IRI absoluto, y opcionalmente de un identificador de fragmento, separados por el carácter “#”. Tiene como delimitadores los caracteres “<” y “>”. Por ejemplo, a continuación se muestra el IRI del elemento tecnológico aplicación ofimática: <http://www.owl-ontologies.com/OntologySoporteTecnico.owl#SoporteTecnicoAplicacionOfimatica> Donde: El IRI absoluto es: http://www.owl-ontologies.com/OntologySoporteTecnico.owl El Identificador de fragmento es: SoporteTecnicoAplicacionOfimatica Los IRIs pueden especificarse con nombres prefijados, para lo cual se utiliza la palabra clave PREFIX, seguida de un nombre de prefijo y el carácter “:”; por último se específica el IRI prefijado. El siguiente ejemplo muestra dos formas de referenciar el elemento tecnológico impresora: 3 http://www.ietf.org/rfc/rfc3987.txt 56 <http://www.owl-ontologies.com/OntologySoporteTecnico.owl#SoporteTecnicoImpresora> PREFIX onto: <http://www.owl-ontologies.com/OntologySoporteTecnico.owl#> onto:SoporteTecnicoImpresora Opcionalmente, se puede especificar un IRI prefijado sin el nombre de prefijo, quedando solo por el carácter “:” como referencia. A continuación se describen las consultas más relevantes, realizadas a través de SPARQL, para la administración de las instancias en la ontología. IV.2.1 Ejemplo de consulta de los Elementos Tecnológicos (ET) Permite consultar los diferentes ET definidos en el sistema. Se pueden visualizar tanto sus descripciones como detalles técnicos de marca, modelo, versión, etc. Figura 18. Interfaz inicio del sistema a.- El usuario selecciona la opción Consultas de los elementos tecnológicos presionando el botón consultar. 57 b.- El sistema crea un arreglo (estructura de datos) con los iris de las clases de elementos tecnológicos presentes en la ontología, al que se denomina irisET. Para obtener la información de cada ET, se extrae de la ontología, las clases (conceptos) que coincidan con los iris del arreglo irisET, a través de los comment que contiene las definiciones y sinónimos de cada ET, así como los label que contiene el nombre de la clase que será desplegada en la siguiente vista. La consulta en Sparql y función que realiza esta acción es la siguiente: foreach ($iriClases AS $iriClase){ $filtroClase .= ''.( $filtroClase != ''?'||':'').'?clase = <'.$iriClase.'>';} $query = ' PREFIX : <http://www.owl-ontologies.com/OntologySoporteTecnico.owl#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT ?clase ?labelClase ?commentClase ?clasePadre WHERE { ?clase rdf:type owl:Class . ?clase rdfs:label ?labelClase . OPTIONAL { ?clase rdfs:comment ?commentClase . } . OPTIONAL { ?clase rdfs:subClassOf ?clasePadre . } . FILTER ('.$filtroClase.' ) . } ORDER BY ?labelClase '; En este código se aplica un filtro con los iris del arreglo irisET, Por ejemplo: si se sustituye $filtroClase por: FILTER (?clase = <http://www.owl- ontologies.com/OntologySoporteTecnico.owl#AplicacionOfimatica>), se obtiene lo siguiente: Figura 19. Resultado de ejemplo de Consulta de Elemento Tecnológico. 58 De esta manera, se construye la siguiente vista de todos los elementos tecnológicos presentes en la ontología. La vista está constituida por nombre y definición de cada ET. Figura 20. Interfaz de consulta de Elementos Tecnológicos c.- Para obtener información de las instancias, el usuario selecciona un tipo de ET y presiona el botón consultar. Por ejemplo: el usuario presiona el botón consultar de la opción Aplicación Ofimática, el sistema primero busca el total de instancias, con el siguiente query de Sparql. $query = ' PREFIX : <http://www.owl-ontologies.com/OntologySoporteTecnico.owl#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT (COUNT(?iriAplicacion) AS ?totalElementos) WHERE { ?iriAplicacion rdf:type :AplicacionOfimatica. ?iriAplicacion :nombreAplicacionPrograma ?nombreAplicacion . ?iriAplicacion :versionAplicacionPrograma ?versionAplicacion . } '; La ejecución de esta consulta tiene por resultado un valor semejante al de la siguiente imagen. 59 Figura 21. Resultado de ejemplo de consulta de total de instancia de ET de Aplicación de Ofimática d.- Una vez obtenida la cantidad de instancias de Aplicación Ofimática, el sistema verifica si el total de elementos es mayor a cero, entonces se buscan las instancias a partir del iri con el siguiente query: $query= ' PREFIX : <http://www.owl-ontologies.com/OntologySoporteTecnico.owl#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?iriAplicacion ?nombreAplicacion ?versionAplicacion WHERE { ?iriAplicacion rdf:type :AplicacionOfimatica. ?iriAplicacion :nombreAplicacionPrograma ?nombreAplicacion . ?iriAplicacion :versionAplicacionPrograma ?versionAplicacion . } ORDER BY ?nombreAplicacion ?versionAplicacion '; Un ejemplo de ejecución de esta consulta es la siguiente: Figura 22. Resultado Consulta de Instancias de ET Aplicación de Ofimática e.- Con estos resultados se construye una interfaz, como se visualiza en la siguiente imagen: 60 Figura 23. Interfaz Instancias de ET Aplicaciones de Ofimática De la misma forma, el sistema permite la consulta de instancias de incidencias de soporte técnico (ST) y sus soluciones, ver ANEXO F. IV.2.2 Ejemplo de búsquedas de incidencias de soporte técnico (ST) Permite buscar soluciones de incidencias de soporte técnico a partir de una o más palabras claves. Se pueden seleccionar los elementos sobre los cuales se realizarán las búsquedas:  Tipos de elementos tecnológicos  Tipos de incidencias de soporte técnico  Ejemplos 61 Figura 24. Interfaz de búsqueda de soluciones de incidencias de ST a.- El usuario presiona el botón Buscar, y el sistema muestra la siguiente interfaz: Figura 25. Interfaz de búsqueda de soluciones de incidencias de ST La barra de búsqueda permite indagar en los tipos de elementos tecnológicos, en los tipos de incidencias de soporte técnico y en ejemplos de incidencias de ST. b.- El usuario teclea en la barra de búsqueda una o más palabras claves, por ejemplo, si escribe la palabra ofimática, el sistema busca, dependiendo de las opciones que se marquen, si no se ha marcado ninguna se busca en las clases de los elementos tecnológicos, en las clases de soporte técnico y en los ejemplos (instancias) que están presentes en la ontología. Para ello el sistema construye un arreglo de nodos de padres 62 con sus respectivos hijos de elementos tecnológicos recursivamente, esto se realiza mediante el siguiente query: $query = ' PREFIX : <http://www.owl-ontologies.com/OntologySoporteTecnico.owl#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT ?claseHijo WHERE { ?clasePadre rdf:type owl:Class . ?claseHijo rdfs:subClassOf ?clasePadre . ?claseHijo rdf:type owl:Class . FILTER (?clasePadre = <'.$iriPadre.'>) . } ORDER BY ?claseHijo'; La variable $iriPadre es sustituido por el siguiente iri: http://www.owl- ontologies.com/OntologySoporteTecnico.owl#ElementoTecnologico, luego el sistema determina si el primer hijo de Elemento Tecnológico es una clase padre (Clase con subclases), de ser así, el sistema realiza otra búsqueda para obtener el próximo hijo (Subclase), reemplazando el iri de la clase padre hasta que sea hallada una hoja (clase sin subclases), por lo tanto el siguiente iri a buscar en la ontología es: http://www.owl- ontologies.com/OntologySoporteTecnico.owl#AplicacionPrograma. Un ejemplo de ejecución de esta consulta se visualiza en la siguiente figura: Figura 26. Ejemplo de consulta con el Iri Elemento Tecnológico (Clase Padre) 63 Figura 27. Ejemplo de consulta con Iri Aplicación de Programa (SubClase Padre) c.- Cuando el sistema ha obtenido todos los hijos de cada clase padre de elemento tecnológico, busca la palabra clave introducida por el usuario en los label y comment de esas clases. El siguiente query es un ejemplo: $query = ' PREFIX : <http://www.owl-ontologies.com/OntologySoporteTecnico.owl#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?claseET WHERE { ?claseET rdf:type owl:Class . ?claseET rdfs:label ?labelClaseET . OPTIONAL { ?claseET rdfs:comment ?commentClaseET . } . FILTER ( regex(?labelClaseET, "'.$clave.'"^^xsd:string, "i") #Filtro sobre el label de la clase elemento tecnológico || regex(?commentClaseET, "'.$clave.'"^^xsd:string, "i") #Filtro sobre el comment de la clase elemento tecnológico ) . '.$filtroClaseET.' } ORDER BY ?claseET '; $clave se sustituye por la expresión regular ofimática, y $filtroClaseET se sustiye por por todas las clases de elemento tecnológico. d.- De la misma forma, el sistema busca la palabra clave en los label y comment de las clases de soporte técnico y luego en propiedades e instancias de la ontología. Lo que permite mostrar la siguiente interfaz, formada por las incidencias de soporte técnico encontradas, el nombre y la versión de aplicación sobre la cual se aplica el patrón y un 64 resumen de la solución, este resumen está compuesto por las primeras palabras de la solución. Figura 28. Interfaz ejemplo de búsqueda de incidencias de ST e.- Cuando el usuario elige alguna solución referente al criterio de su búsqueda, presiona el botón ver detalles, que permite visualizar el patrón de solución a la incidencia seleccionada. Para obtener este resultado suponga que el usuario selecciona la incidencia instalación de aplicación ofimática LibreOffice versión 4.4.1 en el sistema operativo Debian Squezze GNU/Linux versión 6.0, el sistema obtiene el patrón de solución mediante la siguiente consulta: $query = ' PREFIX : <http://www.owl-ontologies.com/OntologySoporteTecnico.owl#> 65 PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?iri ?urlSoporteTecnico ?iriAplicacion ?nombreAplicacion ?versionAplicacion WHERE { ?iri rdf:type : InstalacionAplicacionOfimatica . OPTIONAL { ?iri :uRLSoporteTecnico ?urlSoporteTecnico } . ?iri :aplicacionOfimatica ?iriAplicacion . FILTER (?iri = <'.$iri.'>) . ?iriAplicacion rdf:type :AplicacionOfimatica . ?iriAplicacion :nombreAplicacionPrograma ?nombreAplicacion . ?iriAplicacion :versionAplicacionPrograma ?versionAplicacion . } '; El '.$iri.' que es aplicado en el filtro es obtenido de la instancia consultada, para este caso, el iri correspondiente a la instancia seleccionada es el siguiente: http://www.owl-ontologies.com/OntologySoporteTecnico.owl#InstalacionAplicacionOfimatica_2 Una ejecución de esta consulta muestra el siguiente resultado: Figura 29. Resultado de consulta de Solución de incidencia de ST Con el url de soporte técnico (id del patrón para este ejemplo PST_13) obtenido en esta consulta, el sistema busca la solución en el repositorio soluciones de soporte técnico con el siguiente query de mysql: $query = ' SELECT patrones.codigo AS patron_codigo, patrones.nombre AS patron_nombre, patrones.solucion AS patron_solucion, patrones.autor_crea, DATE_FORMAT( CONVERT_TZ(patrones.fecha_crea,'".GetConfig('timeZone')."','".GetConfig('displayTimeZone')."'), '%d/%m/%Y %H:%i:%s' ) AS patron_fecha_creacion, patrones.autor_mod, DATE_FORMAT( CONVERT_TZ(patrones.fecha_mod,'".GetConfig('timeZone')."','".GetConfig('displayTimeZone')."'), 66 '%d/%m/%Y %H:%i:%s' ) AS patron_fecha_ultima_modificacion FROM patrones WHERE patrones.codigo = '".$codigo."' "; Una vez obtenido los datos del patrón, se muestra la siguiente interfaz: Figura 30. Interfaz ejemplo de patrón de solución a una incidencia de ST El Patrón de Solución: está formado por: el nombre del patrón, constituido por la incidencia de soporte técnico; el nombre del autor, el cual crea el patrón con su solución; la fecha de creación y por último una descripción que indica las actividades que se deben realizar para solucionar el incidente consultado. IV.2.3 Ejemplo de administración de instancias de los elementos tecnológicos Permite consultar y realizar un conjunto de operaciones sobre las instancias de elementos tecnológicos definidas en la ontología. Estas operaciones incluyen insertar, modificar y/o eliminar las instancias. Para realizar cualquiera de las operaciones mencionadas, el usuario realiza los siguientes pasos en común: 67 a.- El usuario inicia sesión en el sistema como administrador, y presiona el botón Administrar que se encuentra en la opción Administración de las instancias de elementos tecnológicos, como se muestra en la Figura 31: Figura 31. Interfaz Inicio de Administrar Instancias de ET b.- El sistema muestra la siguiente interfaz de administración de instancias de elementos tecnológicos, que está constituida por tipo de ET y su definición, obtenida con los label y comment de la taxonomía de ET de la ontología. 68 Figura 32. Interfaz de administración de instancias de ET La forma de obtener esta lista de ET se describe en el ejemplo 1 consulta de elemento tecnológico, explicado anteriormente. A partir de esta interfaz, el usuario puede insertar, modificar o eliminar instancias de Elementos Tecnológicos (ET). o Ejemplo de Insertar instancia de Elemento Tecnológico a.- El administrador, presiona el botón Insertar, el sistema muestra el formulario solicitando las características de la instancia a insertar. Por ejemplo suponga que el usuario selecciona la opción insertar ET en Aplicación de Ofimática, el sistema muestra la siguiente interfaz, compuesta por un formulario que solicita las características de la instancia a insertar. 69 Figura 33. Interfaz formulario de ejemplo de insertar instancia de ET b.- El administrador llena el formulario y presiona el botón guardar. Supongamos que sea crea la instancia con nombre Draw-LibreOffice que es una aplicación de dibujo de ofimática, y versión 4.4, como se muestra en la Figura 34. Figura 34. Interfaz ejemplo de inserción de una instancia de ET c.- El sistema realiza una comprobación de existencia de instancia, es decir, busca si existe una instancia con las mismas características, a través del siguiente query: $query = ' PREFIX : <http://www.owl-ontologies.com/OntologySoporteTecnico.owl#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> ASK { ?instanciaAplicacion rdf:type : AplicacionOfimatica . ?instanciaAplicacion :nombreAplicacionPrograma "'.$aplicacion->getNombre().'"^^xsd:string . ?instanciaAplicacion :versionAplicacionPrograma "'.$aplicacion->getVersion().'"^^xsd:string . FILTER (?instanciaAplicacion != <'.$aplicacion->getIri().'>) .' }'; 70 d.- Si existe una instancia con esas características, el sistema muestra el siguiente mensaje: Figura 35. Interfaz, con mensaje de existencia de instancia de ET De lo contrario, el sistema consulta el número de secuencia (obtiene el iri con mayor número consecutivo) para la siguiente instancia de aplicación a crear por medio de la consulta a continuación: $query = ' PREFIX : <http://www.owl-ontologies.com/OntologySoporteTecnico.owl#> PREFIX mysql: <http://web-semantics.org/ns/mysql/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?iriInstanciaMayorConsecutivo WHERE{ ?iriInstanciaMayorConsecutivo rdf:type :'.$fragmentoIriClase.' FILTER regex( mysql:substring( ?iriInstanciaMayorConsecutivo,(mysql:length(:) + 1), (mysql:length(?iriInstanciaMayorConsecutivo) – mysql:length(:)), "'.$fragmentoIriInstancia.'" ) } ORDER BY DESC(mysql:substring( ?iriInstanciaMayorConsecutivo, ( mysql:length(:) + mysql:length("'.$fragmentoIriInstancia.'") + 1 ), ( mysql:length (?iriInstanciaMayorConsecutivo)- mysql:length(:) - mysql:length (" .$fragmentoIriInstancia.'") ) ) + 0) LIMIT 1 '; e.- Con el resultado de este query, se construye el fragmento de la nueva instancia de aplicación ofimática a insertar, concatenando el fragmento de la clase aplicación AplicacionOfimatica con el el carácter underscore "_" y el número de secuencia obtenido aumentado en uno. El sistema guardar la nueva instancia de aplicación ofimática con el siguiente query: $query = ' PREFIX : <http://www.owl-ontologies.com/OntologySoporteTecnico.owl#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> INSERT INTO <'.SIGECOST_IRI_GRAFO_POR_DEFECTO.'> { :'.$fragmentoIriInstancia.' rdf:type : AplicacionOfimatica . :'.$fragmentoIriInstancia.' :nombreAplicacionPrograma "'.$aplicacion->getNombre().'"^^xsd:string . :'.$fragmentoIriInstancia.' :versionAplicacionPrograma "'.$aplicacion->getVersion().'"^^xsd:string. }'; f.- El sistema muestra los resultados del proceso de inserción. En la siguiente interfaz se visualiza un ejemplo de inserción exitosa. 71 Figura 36. Interfaz ejemplo de inserción de instancia de ET g.- Al presionar la pestaña consultar de la interfaz anterior, se observa la nueva instancia creada en la lista de ET. Figura 37. Interfaz instancias de ET después de la inserción 72 o Ejemplo de Modificar instancia de Elemento Tecnológico a.- Supóngase que el usuario desea modificar una instancia de ET de Aplicación Ofimática. El usuario presiona el botón consultar de la interfaz de administración de instancias de ET (ver Figura 32), el sistema lo lleva a la interfaz de las instancias del ET seleccionado, (ver Figura 38). Figura 38. Interfaz de instancias de ET Aplicación de Ofimática A través de esta interfaz (ver Figura 38), el administrador podrá consultar los detalles de una instancia para modificarla o eliminarla según la necesidad, presionando el botón ver detalles. Para obtener los detalles de una instancia el sistema, mediante el iri de la instancia seleccionada realiza la siguiente consulta: $query = ' PREFIX : <http://www.owl-ontologies.com/OntologySoporteTecnico.owl#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?iriAplicacion ?nombreAplicacion ?versionAplicacion WHERE { ?iriAplicacion rdf:type :AplicacionOfimatica . ?iriAplicacion :nombreAplicacionPrograma ?nombreAplicacion . ?iriAplicacion :versionAplicacionPrograma ?versionAplicacion . FILTER (?iriAplicacion = <'.$iri.'>) .}'; 73 La consulta filtra el resultado según el '.$iri.' de la instancia seleccionada. Para este ejemplo, supongamos que el usuario selecciona la instancia Editor de hoja de cálculo libreoffice versión 3.4.3. El iri de esta instancia es el siguiente: http://www.owl- ontologies.com/OntologySoporteTecnico.owl#ontologiasoportetecnicov1_Class30044 que corresponde a la instancia mencionada y ejecutando el query, se obtiene el resultado de la Figura 39. Figura 39. Resultado de ejemplo de ver detalles de instancia de ET Los datos obtenidos de la consulta, son usados para habilitar la modificación y eliminación de la instancia, por lo tanto el sistema los mantiene en una estructura de datos y son mostrados en la siguiente interfaz del sistema: Figura 40. Interfaz ejemplo de detalles de una instancia de ET c.- El administrador hace clic en el botón modificar. 74 d.- El sistema permite modificar los datos de la instancia, para este caso puede modificar el nombre y la versión, supongamos que el usuario desea cambiar el nombre de la instancia por el siguiente: Calc, que corresponde al nombre del editor de la hoja de cálculo de LibreOffice, el administrador debe borrar el nombre actual, escribir el nuevo y presionar el botón actualizar, como se muestra en la siguiente imagen: Figura 41 Interfaz de ejemplo de edición de instancia de ET (instancia a modificar) Figura 42. Interfaz de ejemplo de modificación de instancia de ET e.- El sistema consulta en la ontología, si existe una instancia de elemento tecnológico en aplicación ofimática, con esas características mediante el siguiente query: $query = ' PREFIX : <http://www.owl-ontologies.com/OntologySoporteTecnico.owl#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> ASK { ?instanciaAplicacion rdf:type : AplicacionOfimatica . 75 ?instanciaAplicacion :nombreAplicacionPrograma "'.$aplicacion->getNombre().'"^^xsd:string . ?instanciaAplicacion :versionAplicacionPrograma "'.$aplicacion->getVersion().'"^^xsd:string . FILTER (?instanciaAplicacion != <'.$aplicacion->getIri().'>) .' }'; Las variables getNombre() y getVersion(), se obtienen del formulario anterior. Si el iri presente en: $aplicacion->getIri(), se encuentra en la ontología, será ignorado en la verificación. Si de esta consulta, resulta que no existe instancia con esas características, entonces el sistema borra de la ontología la instancia con el siguiente query: $query = ' PREFIX : <http://www.owl-ontologies.com/OntologySoporteTecnico.owl#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> DELETE FROM <'.SIGECOST_IRI_GRAFO_POR_DEFECTO.'> { ?iri :nombreAplicacionPrograma ?nombreAplicacion . ?iri :versionAplicacionPrograma ?versionAplicacion . } WHERE { ?iri rdf:type :AplicacionOfimatica . ?iri :nombreAplicacionPrograma ?nombreAplicacion . ?iri :versionAplicacionPrograma ?versionAplicacion . FILTER ( ?iri = http://www.owl-ontologies.com/OntologySoporteTecnico.owl#ontologiasoportetecnicov1_Class30044). } '; f.- El sistema realiza la carga de la instancia con los nuevos valores mediante el siguiente query, manteniendo el mismo iri guardado en la estructura de datos: $query = ' PREFIX : <http://www.owl-ontologies.com/OntologySoporteTecnico.owl#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> INSERT INTO <'.SIGECOST_IRI_GRAFO_POR_DEFECTO.'> { <'.$instancia->getIri().'> :nombreAplicacionPrograma "' .$instancia->getNombre().'"^^xsd:string . <'.$instancia->getIri().'> :versionAplicacionPrograma "' .$instancia->getVersion().'"^^xsd:string . }'; Las variables getIri(), getNombre() y getVersion(), corresponden al iri de la instancia, nombre y versión respectivamente que tomarán su valor correspondiente al ser candidatas a modificación. g.- Una vez que son ejecutados los querys anteriores, el sistema muestra el resultado de la modificación de la instancia, para este ejemplo se visualiza la siguiente interfaz: 76 Figura 43. Interfaz ejemplo de modificación de instancia de ET exitosa h.- Si el usuario hace clic en la pestaña Consultar, se visualizarán los cambios, algo como la siguiente imagen: Figura 44. Interfaz resultado de instancia modificada en lista de ET 77 o Ejemplo de Eliminar instancia de Elemento Tecnológico a.- Desde la interfaz de instancias de ET de Aplicación Ofimática (ver Figura 38), el administrador selecciona la instancia que va a ser eliminada presionando el botón ver detalles, supongamos que se selecciona la opción Calc versión 3.4.3, el sistema mostrará las características de la instancia seleccionada y dos botones, uno para modificar y otro que para eliminar, como se puede ver en la Figura 45. Figura 45. Interfaz ejemplo de instancia seleccionada a eliminar b.- El administrador presiona el botón eliminar. c.- El sistema muestra una ventana emergente como se muestra en la Figura 46, que permitirá continuar o cancelar la operación, se permite la continuidad del proceso a través del botón aceptar. Figura 46. Interfaz de confirmación para eliminar instancia de ET 78 e.- El sistema verifica si la instancia a eliminar está siendo utilizada por algún patrón de solución de soporte técnico, esta validación se realiza a través de la siguiente consulta: $query = ' PREFIX : PREFIX : <http://www.owl-ontologies.com/OntologySoporteTecnico.owl#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> ASK { ?instanciaAplicacion rdf:type :AplicacionOfimatica . ?instanciaST :aplicacionOfimatica ?instanciaAplicacion . FILTER ( ?instanciaAplicacion = <http://www.owl- ontologies.com/OntologySoporteTecnico.owl#ontologiasoportetecnicov1_Class30044> ) . }'; f.- Si la instancia está siendo utilizada, el sistema muestra el siguiente mensaje: Figura 47. Interfaz mensaje de instancia de ET utilizada por otra de ST Lo que quiere decir, es que esta instancia tiene al menos un patrón de solución de soporte técnico asociado y no puede ser eliminada, a menos que sea eliminada con anterioridad desde la administración de instancias de incidencia de soporte técnico. Si la instancia está libre de asociación de solución de ST, el sistema la borrará a través del siguiente query: $query = ' PREFIX : <http://www.owl-ontologies.com/OntologySoporteTecnico.owl#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> DELETE FROM <'.SIGECOST_IRI_GRAFO_POR_DEFECTO.'> { ?iri ?predicado ?objeto . } WHERE { ?iri rdf:type :AplicacionOfimatica . ?iri ?predicado ?objeto . FILTER ( ?iri = <http://www.owl- ontologies.com/OntologySoporteTecnico.owl#ontologiasoportetecnicov1_Class30044> ) . }'; e.- El sistema muestra como resultado de la operación el siguiente mensaje: instancia eliminada satisfactoriamente y la lista de instancias de ET que quedaron en la ontología, la Figura 48 muestra el resultado de la ejecución del query anterior. 79 Figura 48. Interfaz de ejemplo de instancia eliminada satisfactoriamente La administración de las instancias de ET se efectúa de manera muy similar a la administración de soporte técnico y sus soluciones. Para conocer más acerca de esta administración, ver ANEXO G. IV.2.4 Ejemplo de exportar la ontología a owl a.- el usuario administrador, selecciona la opción Archivo, que se encuentra en el menú del sistema (parte superior del sistema), y elige Exportar la ontología. Figura 49. Interfaz exportar ontología b.- El sistema, despliega la interfaz exportar ontología, en ella, el administrador presiona el botón Exportar, como se muestra en la siguiente pantalla: 80 Figura 50. Interfaz exportar ontología a owl c.- El sistema usa el siguiente query para construir un grafo con todas las tripletas de la ontología. $query = ' CONSTRUCT { ?subject ?property ?object } WHERE { ?subject ?property ?object } '; d.- El sistema con las funcionalidades de ARC2, realiza una serialización (codificación de un objeto en un medio de almacenamiento, como puede ser un archivo o un buffer de memoria, con el fin de transmitirlo a través de una conexión en red) de la ontología. $config = array( 'serializer_default_ns' => http://www.owl-ontologies.com/OntologySoporteTecnico.owl# base' => http://localhost/sigecost2/controlador/soporte_tecnico.owl ); Con esta serialización, el sistema a través de funciones de ARC2, obtiene todos los componentes de la ontología, con el que construye el grafo. $graph = ARC2::getGraph($config); e.- Una vez obtenido el grafo, el sistema genera un documento XML que contiene la ontología. La imagen 51 muestra un extracto de un archivo exportado a owl mediante SIGECOST. 81 Figura 51. Extracto de archivo owl exportado con Sigecost IV.2.5 Ejemplo de consultas para generar la solución de incidencia de ST a PDF a.- El usuario realiza la navegación por el sistema, visualiza los pasos de la solución a un incidente, y presiona el botón PDF. b.- El sistema a través del iri de la instancia, obtiene el identificador del patrón de solución que se encuentra en la ontología, un ejemplo de la consulta que genera esta solución es la que se muestra a continuación: $query = ' PREFIX : <http://www.owl-ontologies.com/OntologySoporteTecnico.owl#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?iri ?urlSoporteTecnico ?iriEquipoReproduccion ?marcaEquipoReproduccion ?modeloEquipoReproduccion WHERE { ?iri rdf:type : CorregirImpresionManchada . OPTIONAL { ?iri :uRLSoporteTecnico ?urlSoporteTecnico } . ?iri :enImpresora ?iriEquipoReproduccion . FILTER (?iri =<http://www.owl- ontologies.com/OntologySoporteTecnico.owl#CorregirImpresionManchada_1>) . ?iriEquipoReproduccion rdf:type :Impresora . ?iriEquipoReproduccion :marcaEquipoReproduccion ?marcaEquipoReproduccion . ?iriEquipoReproduccion :modeloEquipoReproduccion ?modeloEquipoReproduccion . }'; 82 Este query al ser ejecutado traerá una solución como la que se muestra a continuación: Figura 52. Resultado de buscar incidencia de ST en la ontología c.- Para este ejemplo, el sistema toma el urlSoporteTecnico, del resultado de la consulta cuyo valor es PST_13, éste es un identificador del patrón de ST que se encuentra en el repositorio de patrones de soluciones, y mediante el siguiente query se obtiene la solución solicitada: $query = ' SELECT patrones.codigo AS patron_codigo, patrones.nombre AS patron_nombre, patrones.solucion AS patron_solucion, patrones.autor_crea, DATE_FORMAT(CONVERT_TZ( patrones.fecha_crea,'".GetConfig('timeZone')."','".GetConfig('displayTimeZone')."'), '%d/%m/%Y %H:%i:%s') AS patron_fecha_creacion, patrones.autor_mod, DATE_FORMAT(CONVERT_TZ( patrones.fecha_mod,'".GetConfig('timeZone')."','".GetConfig('displayTimeZone')."'), '%d/%m/%Y %H:%i:%s') AS patron_fecha_ultima_modificacion FROM Patrones WHERE patrones.codigo = '".$codigo."' '; d.- El sistema además del patrón, obtiene el usuario creador del patrón con la siguiente consulta: $query = ' SELECT usuario.id AS usuario_id, usuario.cedula AS usuario_cedula, usuario.usuario AS usuario_usuario, usuario.contrasena AS usuario_constrasena, usuario.nombre AS usuario_nombre, usuario.apellido AS usuario_apellido, usuario.estatus AS usuario_estatus FROM usuario WHERE id = '".$id."' '; 83 e.- Una vez obtenido todos los campos que se muestran en la solución, el sistema genera el contenido con todos los parámetros que éste requiere, como lo son: número de páginas, formato, orientación, lenguaje, entre otros, así como los pasos de la solución al incidente consultado. El sistema muestra la solución en formato PDF (ver la siguiente lustración): Figura 53. Interfaz de ejemplo de patrón de solución a incidente de ST en formato pdf IV.3 Tecnologías utilizadas en el desarrollo Para llevar a cabo la implementación de la solución propuesta en este trabajo fue necesario recurrir a un conjunto de tecnologías, entre las que se destacan: las ontologías como mecanismo de gestión de conocimiento, la librería de Arc2 como interfaz para poder administrar la ontología desde una base de datos, así como para poder interactuar con esta a través del lenguaje de consultas SPARQL; y el patrón modelo-vista- controlador, para guiar la estructura del desarrollo. 84 Más información acerca de éstas y otras tecnologías utilizadas, a continuación. IV.3.1 Ontología de soporte técnico La ontología fue migrada desde el lenguaje RDF hasta el lenguaje OWL, con la ayuda del editor de ontologías Protégé4. En este proceso se realizaron las tareas de conceptualización, que establece la metodología Methontology, llevadas a cabo previamente por Ghanem, Núñez y Ramos (2014). IV.3.2 Librería Arc2 La librería de Arc2 permite la serialización, análisis, almacenamiento y consulta de archivos XML/RDF (GitHub, 2013). Arc2 es una implementación de un sistema triplestore (más información acerca del sistema triplestore en el Capítulo III, sección 3) basado en MySQL, que brinda soporte al lenguaje de consulta SPARQL, que permite la recuperación y eliminación de las tripletas contenidas en el triplestore. De esta manera, Arc2 permite administrar la ontología desde un triplestore en MySQL. Al igual que una base de datos relacional, el almacenamiento y recuperación de datos en un triplestore, se realiza a través de un lenguaje de consulta, pero a diferencia de una base de datos relacional, un triplestore está optimizado para el almacenamiento y recuperación de tripletas. Arc2, es de código abierto, está escrito en PHP y funciona en la mayoría de los entornos de servidor Web (todo lo necesario es PHP 5.3 o superior, y MySQL 4.0.18 o superior). Tiene capacidades propias de un analizador RDF y un motor SPARQL. Permite la carga y el procesamiento de RDF y OWL, acceso y almacenamiento de RDF remoto, y acceso y almacenamiento de RDF local. Las fuentes siguen a disposición de la comunidad a través de GitHub5. 4 http://protege.stanford.edu/ 5 https://github.com/semsol/arc2 85 IV.3.3 Patrón de desarrollo Modelo-Vista-Controlador (MVC) El sistema de gestión fue implementado bajo el patrón de desarrollo MVC. Este patrón arquitectónico se encuentra conformado por tres niveles (Potencier y Zaninotto, 2013): El Modelo, representa la información con la que trabaja la aplicación, es decir, su lógica de negocio. Es el único componente que tiene relación con la base de datos. La Vista, transforma el modelo en una página Web que permite al usuario interactuar con ella. Se encarga de la presentación de la aplicación. Es la visualización de lo que el modelo realizó y llega a través del controlador; de igual forma, cuando un usuario ingresa datos a través de ésta, es enviada al controlador. El Controlador, se encarga de procesar las interacciones del usuario y realiza los cambios apropiados en el modelo o en la vista. Es la parte de la aplicación que toma la información ingresada por el usuario a través de la vista y la envía al modelo, a su vez es quien deja la información lista para vista. IV.3.4 Otras Durante el proceso de desarrollo también se utilizaron las siguientes tecnologías: o El manejador de base de datos MySQL, que permite el almacenamiento de los patrones de solución de soporte técnico, y los datos de los usuarios. o El entorno de desarrollo de software PHP, para la interacción del usuario con el servidor. Esta función es transparente al usuario. o El framewok para la interfaz Web Bootstrap, formado por un conjunto de plantillas prediseñadas de códigos HTML, CSS y JQuery, que brindan la facilidad de personalizar los componentes de la interfaz de usuario. Estos componentes son editables y se adaptan fácilmente a los diferentes tamaños de los navegadores Web. 86 IV.4 Pruebas y resultados Para garantizar el correcto funcionamiento del sistema se realizaron una serie de pruebas sugeridas por Pressman (2002). Durante el desarrollo se realizaron pruebas de unidad y pruebas de integración, para validar cada módulo por separado y el sistema como un todo, respectivamente. Luego, se realizaron pruebas de validación, dirigidas a los expertos de conocimiento y a los facilitadores de los Infocentros. IV.4.1 Pruebas de unidad La prueba de unidad se enfoca en la unidad más pequeña de software, con una funcionalidad específica y bien delimitada. De esta manera, se facilita la tarea de encontrar errores dentro de las fronteras de la unidad. A continuación se detallan las pruebas de unidad realizadas. La primera prueba de unidad ejecutada, fue sobre la librería Arc2. En este proceso se construyó un controlador que permitió cargar la ontología desde un archivo OWL hacia la base de datos, y mostró todas las tripletas cargadas, pudiéndose verificar que estaban completas y correctas. Posteriormente, se adaptó el controlador para realizar pruebas en el proceso de inserción, actualización y eliminación de tripletas, durante la cual se pudo comprobar que la librería no permitía la actualización dentro de su implementación, pero como proceso alternativo, se podía simular mediante una eliminación y una inserción con los datos actualizados. Si bien esta alternativa resolvió el problema de la actualización, introdujo un nuevo inconveniente: como se necesitan dos consultas para realizar la modificación, estás no se encuentran dentro de una única transacción, y si el sistema falla, por ejemplo, al realizar la inserción, no hay forma de hacer rollback sobre la eliminación ya ejecutada. Y en este punto, no se encontró un API de la librería que permitiera el manejo de transacciones. Para cada elemento que se administra en la ontología, sean instancias de elementos tecnológicos o de incidencias de soporte técnico, existe una pequeña unidad funcional encargada de servir de interfaz para cada proceso administración de las mismas: 87 consulta, inserción, modificación, eliminación, etc. Cada una de estas unidades se probó por separado, con la ayuda de un controlador, que permitió proporcionar datos de prueba, para realizar las funciones de administración de las instancias, pudiéndose comprobar que los datos en la base de datos quedaron correctos. Posteriormente, se realizaron pruebas de unidad sobre el módulo de administración de los patrones de solución de soporte técnico. Verificando que los datos en la base de datos quedaron correctos, una vez realizadas las acciones sobre los patrones de solución: inserción, modificación y eliminación. De la misma manera se realizaron pruebas de unidad sobre el módulo de administración de usuarios, verificando la exactitud de los datos en la base de datos, después de realizar operaciones de inserción y modificación. IV.4.2 Pruebas de integración Si bien es cierto, que ya se verificaron cada uno de los componentes de manera individual, es necesario verificar cómo funcionan los componentes acoplados entre sí, ya que esta integración puede traer un serie de problemas: los datos pueden perderse a través de una interfaz; un componente puede tener un inadvertido efecto adverso sobre otro; las subfunciones, cuando se combinan, pueden no producir la función principal deseada; la imprecisión aceptable individualmente puede magnificarse a niveles inaceptables; las estructuras de datos globales pueden presentar problemas, etc. Por lo tanto, a continuación se detallan las pruebas de integración realizadas. La primera prueba de integración que se realizó, fue para validar la administración de las instancias de la ontología. Se introdujeron datos de prueba desde la interfaz Web, para crear instancias, luego las instancias fueron consultadas desde la misma interfaz Web, y se construyó un controlador, para visualizar las tripletas guardas en la base de datos; pudiendo verificar que los datos se agregaron correctamente. De la misma forma, se verificaron las operaciones de modificación y eliminación de instancias. En el mismo orden de ideas, se realizaron pruebas de integración con el módulo que permite exportar 88 la ontología a OWL; así, se realizaron una serie de inserciones, modificaciones y eliminaciones de instancias, a la vez que se exportaba la ontología en formato OWL a un archivo; este archivo fue abierto desde el editor de ontología Protégé, verificando que las instancias quedaron correctas en la ontología. Luego, se realizaron pruebas de integración sobre las funcionalidades de consultas de instancias de elementos tecnológicos, y de consultas y búsquedas de incidencias de soporte técnico y sus respectivos patrones de solución. En esta prueba también se realizaron operaciones de inserción, modificación y eliminación, tanto de instancias de la ontología como de patrones de solución, y posteriormente, realizando consultas y búsquedas, para validar que las operaciones se hicieran de manera exitosa. Estas pruebas arrojaron los resultados esperados. Por último, se realizaron pruebas integrando el módulo de usuarios. Se crearon y modificaron usuarios, se les agregaron los perfiles de administración de la ontología y de usuarios. Se verificó que los menús se desplegaran correctamente, para cada tarea sobre la que el usuario tenía permisos, y se ejecutaron cada una de estas tareas. En cada caso, se corrigieron los errores que se descubrieron a medida que se realizaban las pruebas. IV.4.3 Pruebas de validación Se realizaron dos tipos de pruebas de validación, una dirigida a los facilitadores de los Infocentros, y otra a los expertos de conocimiento, para comprobar la conformidad de éstos antes las respuestas proporcionadas por el sistema. Las pruebas de validación tienen como propósito mostrar al usuario el cumplimiento de un requisito del software, más especificamente: a) describen un escenario (secuencia de pasos) de ejecución o uso del sistema desde la perspectiva del usuario, b) pueden estar asociadas a requisitos funcionales o no funcionales, c) un requisito tiene una o más prueabs de validación asociadas y d) cubren desde escenarios típicos/frecuentes hasta los más excepcionales (Pressman, R., 2002). 89 La mayoría de los constructores de productos de software usan un proceso llamado prueba alfa y prueba beta para descubrir errores que al parecer sólo el usuario final es capaz de encontrar. La prueba alfa se realiza en un ambiente controlado, con la presencia del desarrollador, y es llevada a cabo por el usuario final, mientras el desarrollador registra los errores y problemas de uso. La prueba beta es realizada por el usuario final, generalmente sin la presencia del desarrollador. Por lo tanto, este no puede controlar el ambiente donde se realiza. El usuario registra los problemas encontrados durante esta prueba y los informa al desarrollador periódicamente. Por lo tanto, se realizaron pruebas de tipo alfa detalladas a continuación. IV.4.4 Pruebas de validación dirigidas a los facilitadores de los Infocentros Las pruebas de validación dirigidas a los facilitadores, se realizaron en cuatro Infocentros distintos, ubicados en Distrito Capital, en las cercanías de la sede principal de la fundación Infocentro, en ellas se solicita al facilitador que realice las siguientes acciones: (a) Hacer búsquedas de incidencias de soporte técnico, a través de una barra de búsquedas, (b) Consultar detalles de elementos tecnológicos presentes en los Infocentros, y (c) consultar incidencias de soporte técnico, seleccionado opciones de la lista de incidencias tecnológicas que muestra el sistema. Para ello, se construyeron las siguientes preguntas que fueron respondidas por los facilitadores. 1. ¿Fue posible usar la barra de búsqueda sin inconveniente? 2. ¿Obtuvo un resultado satisfactorio de acuerdo a la palabra clave introducida? 3. ¿Fue posible obtener detalles de al menos un elemento tecnológico presente en los Infocentros? 4. ¿Fue posible obtener soluciones a incidencias de soporte técnico de acuerdo a su selección? 90 5. ¿La solución de soporte técnico obtenido le permitió resolver el problema? 6. ¿Se sintió asistido por el sistema para resolver un problema de soporte técnico? Los resultados obtenidos, fueron tabulados en la Tabla 21. Tabla 21 Resultados de las pruebas de validación tipo alfa realizadas en 4 Infocentros Infocentro Facilitador(a) Pregunta Si No Mega MPPEUCTI José Luis Rodrígez 1. ¿Fue posible usar la barra de búsqueda sin inconveniente? X 2. ¿Obtuvo un resultado satisfactorio de acuerdo a la palabra clave introducida? X 3. ¿Fue posible obtener detalles de al menos un elemento tecnológico presentes en los Infocentros? X 4. ¿Fue posible obtener soluciones a incidencias de soporte técnico de acuerdo a su selección? X 5. ¿La solución de soporte técnico obtenido le permitió resolver el problema? X 6. ¿Se sintió asistido por el sistema para resolver un problema de soporte técnico? X Mega El Silencio Riensy Moreno 1. ¿Fue posible usar la barra de búsqueda sin inconveniente? X 2. ¿Obtuvo un resultado satisfactorio de acuerdo a la palabra clave introducida? X 3. ¿Fue posible obtener detalles de al menos un elemento tecnológico presentes en los Infocentros? X 4. ¿Fue posible obtener soluciones a incidencias de soporte técnico de acuerdo a su selección? X 5. ¿La solución de soporte técnico obtenido le permitió resolver el problema? X 6. ¿Se sintió asistido por el sistema para resolver un problema de soporte técnico? X Infocentro Catedral Jorge Bolívar 1. ¿Fue posible usar la barra de búsqueda sin inconveniente? X 2. ¿Obtuvo un resultado satisfactorio de acuerdo a la palabra clave introducida? X 3. ¿Fue posible obtener detalles de al menos un elemento tecnológico presentes en los Infocentros? X 4. ¿Fue posible obtener soluciones a incidencias X 91 de soporte técnico de acuerdo a su selección? 5. ¿La solución de soporte técnico obtenido le permitió resolver el problema? X 6. ¿Se sintió asistido por el sistema para resolver un problema de soporte técnico? Teatros Leonardo Escalona 1. ¿Fue posible usar la barra de búsqueda sin inconveniente? X 2. ¿Obtuvo un resultado satisfactorio de acuerdo a la palabra clave introducida? X 3. ¿Fue posible obtener detalles de al menos un elemento tecnológico presentes en los Infocentros? X 4. ¿Fue posible obtener soluciones a incidencias de soporte técnico de acuerdo a su selección? X 5. ¿La solución de soporte técnico obtenido le permitió resolver el problema? X 6. ¿Se sintió asistido por el sistema para resolver un problema de soporte técnico? X IV.4.5 Pruebas de validación dirigidas a los expertos de conocimiento Para realizar las pruebas de validación con los expertos de conocimiento, se creó un usuario con los permisos de administrador de ontología y de usuarios, luego se le solicitó un experto que navegara por el sistema e interactuara, siguiendo las siguientes consideraciones: o Realizar consultas de la misma forma que un facilitador, para esto utilizaron las mismas preguntas empleadas en la prueba anterior, obteniendo el resultado mostrado en la Tabla 22. Tabla 22 Resultados de las pruebas de validación tipo alfa, para la consulta de patrones de solución tecnológica, realizada por el experto de conocimiento Pregunta Si No 1. ¿Fue posible usar la barra de búsqueda sin inconveniente? X 2. ¿Obtuvo un resultado satisfactorio de acuerdo a la palabra clave introducida? X 3. ¿Fue posible obtener detalles de al menos un elemento tecnológico X 92 presentes en los Infocentros? 4. ¿Fue posible obtener soluciones a incidencias de soporte técnico de acuerdo a su selección? X 5. ¿La solución de soporte técnico obtenido le permitió resolver el problema? X 6. ¿Se sintió asistido por el sistema para resolver un problema de soporte técnico? X 7. ¿Está de acuerdo con la solución de soporte técnico consultada? X o Realizar inserción, modificación y eliminación de al menos una instancia de un tipo de elemento tecnológico. En esta prueba se obtuvo el siguiente resultado: Tabla 23 Resultados de las pruebas de validación tipo alfa, para la administración de elementos tecnológicos, realizada por el experto de conocimiento Pregunta Si No 1. ¿Fue posible insertar una nueva instancia de un tipo de elemento tecnológico y lo vio reflejado en el sistema? X 2. ¿Fue posible modificar una instancia de un tipo de elemento tecnológico existente y vio reflejado sus cambios en el sistema? X 3. ¿Fue posible eliminar una instancia de un tipo de elemento tecnológico existente y vio reflejado sus cambios en el sistema? X o Realizar inserción, modificación y eliminación de una instancia de incidencia y de una solución a una incidencia de soporte técnico. En esta prueba se obtuvo el siguiente resultado: Tabla 24 Resultados de las pruebas de validación tipo alfa, para la administración de incidencias de soporte técnico, realizada por el experto de conocimiento Pregunta Si No 1. ¿Fue posible insertar una nueva instancia de un tipo de incidencia tecnológica y la vio reflejado en el sistema? X 2. ¿Fue posible modificar una instancia de un tipo de incidencia tecnológica existente y vio reflejado sus cambios en el sistema? X 3. ¿Fue posible eliminar una instancia de un tipo de incidencia tecnológica existente y vio reflejado sus cambios en el sistema? X 4. ¿Fue posible insertar una solución de soporte técnico a una instancia de un tipo de incidencia tecnológica y la vio reflejado en el sistema? X 5. ¿Fue posible modificar una solución de soporte técnico a una instancia de un tipo de incidencia tecnológica existente y vio reflejado sus cambios en el sistema? X 6. ¿Fue posible eliminar una solución de soporte solución de soporte técnico a una instancia de un tipo de incidencia tecnológica existente y vio reflejado sus cambios en el sistema? X 93 o Exportar la ontología. En esta prueba se obtuvo el siguiente resultado: Tabla 25 Resultados de las pruebas de validación tipo alfa, para exportar la ontología, realizada por el experto de conocimiento Pregunta Si No ¿Fue posible exportar la ontología del sistema? X o Por último, se solicita al experto que consulte y que realice inserción y modificación de datos de usuarios. Tabla 26 Resultados de las pruebas de validación tipo alfa, para la administración de los usuarios, realizada por el experto de conocimiento Pregunta Si No 1. ¿Fue posible visualizar los distintos usuarios del sistema? X 2. ¿Fue posible insertar un nuevo usuario en el sistema? X 3. ¿Fue posible modificar los datos de un usuario del sistema? X IV.4.6 Análisis de Resultados Al analizar los resultados obtenidos, después de la realización de las pruebas mencionadas anteriormente, se observó que el sistema responde satisfactoriamente a las consultas realizadas y permite resolver problemas de soporte técnico de una forma asistida. También, permite crear nuevas soluciones de incidencias tecnológicas e incorporar nuevos elementos tecnológicos presentes en los Infocentros, lo que posibilita que los datos del sistema puedan incrementarse y actualizarse. Así mismo, se pudo constatar la necesidad de incorporar otras soluciones de soporte técnico, no implementadas en esta versión, como problemas con la instalación y solución a fallas frecuentes del navegador de Internet. Estas fallas fueron mencionadas por dos facilitadores consultados. 94 CONCLUSIONES Y RECOMENDACIONES Los desarrollos de sistemas que facilitan la gestión de conocimiento, son piezas estratégicas en las organizaciones, ya que permiten registrar, organizar, almacenar y consultar la información contenidas en ellas, para dar soluciones a las necesidades de un grupo de individuos. Es por ello que se ha diseñado un sistema basado en una ontología y soluciones de soporte técnico, que permite gestionar el conocimiento relacionado con el soporte técnico de los elementos tecnológicos presentes en los Infocentros, el cual contiene soluciones a las dificultades más frecuentes con las que se enfrentan los facilitadores en su día a día, para el mantenimiento y soporte técnico de los elementos tecnológicos que se encuentran en su espacio de trabajo. La ontología dirige la búsqueda, para obtener y recuperar de un repositorio de soluciones de soporte técnico, los incidentes que comúnmente se presentan en los Infocentros. Se pudo comprobar a través de pruebas de validación, realizadas a los facilitadores y expertos de conocimiento, que el sistema aporta soluciones a incidencias en instalación de programas de ofimática y en la resolución de problemas frecuentes con equipos de reproducción (impresoras), mediante la navegación por el sistema y las búsquedas semánticas a través de una o más palabras claves; incorporación de nuevos conocimientos a la ontología y a la base de patrones de soluciones, mediante un módulo de administración que posee funcionalidades que permite, a un personal de soporte técnico, agregar nuevas soluciones y nuevos elementos tecnológicos presentes en los Infocentros, así como desincorporar soluciones sub-utilizadas y elementos tecnológicos obsoletos de los Infocentros, cumpliendo de esta manera con los objetivos propuesto en esta investigación. El sistema desarrollado permite que los facilitadores y personal de soporte técnico, puedan acceder de manera sencilla y desde cualquier ubicación geográfica al conocimiento representado en la ontología concerniente a los conceptos de soporte técnico, a través de una arquitectura de software basada en el modelo propuesto por 95 (Kerschberg, 2001), así como la administración de la ontología y de las soluciones de soporte técnico. Recomendaciones Como todo sistema que se encuentra en constante crecimiento, es importante señalar algunas recomendaciones futuras para la mejorar y ampliar el sistema, a saber:  Incorporar nuevas soluciones de soporte técnico a otras incidencias de soporte técnico, como la instalación y resolución de problemas frecuentes con el navegador.  Incorporar el manejo de transacciones sobre Arc2, para evitar las inconsistencias en la base de datos de la ontología si llega a ocurrir algún error en un proceso de inserción, actualización o modificación.  Incorporar un módulo que permita la carga y el almacenamiento de imágenes en el sistema, que luego puedan ser referenciadas en cualquier patrón de solución tecnológica. 96 REFERENCIAS BIBLIOGRÁFICAS Abecker, A. y van Elst, L. (2009). Ontologies for Knowledge Management. En: Staab, S and Studer, R. (Eds). Handbook on Ontologies. International Handbooks 713 on Information Systems. Springer-Verlag Berlin Heidelberg. DOI 10.1007/978-3-540-92673-3. Alexander, C. (1979). The Timeless Way of Building. Inglaterra: The Oxford University Press. ISBN 978-0-19-502402-9. Arvind, R. y Srinivas, P. (2010). Knowledge based Systems. Jones and Bartlett Publishers. ISBN: 13-978-0-7637-7647-3. Barragán, A. (2009). Aproximación a una taxonomía de modelos de gestión de conocimiento. Intangible Capital. 5(1):65-101. ISSN: 1697-9818. Booch, G., Rumbaugh, J. y Jacobson, I. (2006). El lenguaje unificado de modelado. Madrid: PEARSON EDUCACIÓN, S.A. ISBN: 84-7829-076-1. Caro, M., Jiménez, J. y Toscano, R. (2011). Una arquitectura integrada para el modelado de sistemas informáticos de gestión de conocimiento en investigación formativa. Revista Avances en Sistemas e Informática. 8(3):157-163. ISSN: 1657-7663. Corcho, O., Fernández-López, M., Gómez-Pérez, A. y López, A. (2005). Building legal ontologies with METHONTOLOGY and WebODE. En: V.R. Benjamins et al (Eds). Law and the Semantic Web: Legal Ontologies, Methodologies, Legal Information Retrieval, and Applications. LNCS, 3369:142-157. Springer-Verlag. ISBN: 78-3-540-25063-0. Del Moral, A., Pazos, J., Rodríguez, E., Rodríguez-Patón, A. y Suárez, S. (2007). Gestión del Conocimiento. Thomson Editores. España. Fundación Infocentro (2008). La Fundación Infocentro: Razón de ser, Estrategias y Planes. [Documento en línea]. Disponible: http:// http://www.infocentro.gob.ve/descargas_detalle.php?id=73. [Consulta: 2014, Octubre 14]. Flores, I. (2011). Introducción al Razonamiento Sobre Ontologías. Nota de docencia del curso Ingeniería Ontológica. Escuela de Computación. Universidad Central de Venezuela. ND 2011-01. ISSN 1316-6239. Ghanem, A. (2013). Turorial ARC2.Universidad Central de Venezuela, Caracas, Venezuela. 97 Ghanem, A., Núñez, H. y Ramos, E. (2014). Un Sistema con Enfoque Ontológico para Gestionar Conocimiento de Soporte Técnico en los Infocentros. III Simposio Científico y Tecnológico en Computación - SCTC 2014 - Universidad Central de Venezuela, Caracas, Venezuela Giner, F. (2004). Los sistemas de información en la sociedad del conocimiento. España: Esic Editorial. ISBN: 84-7356-370-0. GitHub ARC2: Easy RDF and SPARQL for LAMP systems. 2013. [Programa de compu-tación en línea]. Disponible: https://github.com/semsol/arc2/ Gómez-Pérez, A., Fernández-López, M. y Corcho, M. (2004). Ontological Engineering. London: Springer-Verlag. Gruber, T. (1993). A Translation Approach to Portable Ontology Specifications. In: Knowledge Acquisition, 5(2):199-220, 1993. [Documento en línea]. Disponible:http://tomgruber.org/writing/ontolingua-kaj-1993.pdf. [Consulta: 2014, Octubre 16]. Grüninger, M. y Fox, M. (1995). Methodology for the design and evaluation of ontologies.[Documento en línea].IJCAI'95 Workshop on Basic Ontological Issues in Knowledge Sharing. Disponible: http://iir.ruc.edu.cn/pdf/Methodology%20for%20the%20Design%20and%20 Evaluation%20of%20Ontologies.pdf. [Consulta: 2014, Septiembre 27]. Kerschberg, L. (2001). Knowledge management in heterogeneous data warehouse environments. En: Kambayashi, Y., Winiwarter, W. y Arikawa, M. (Eds). Proceedings of the Third International Conference on Data Warehousing and Knowledge Discovery. LNCS, 2114:1-10. Springer-Verlag. Lamarca, M. (2013). Hipertexto: el nuevo concepto de documento en la cultura de la imagen. Tesis doctoral. Universidad Complutense de Madrid. [Documento en línea]. Disponible: http://www.hipertexto.info/documentos/owl.htm [Consulta: 2014, Octubre 16]. Lozano-Tello, A. (2002). Métrica de idoneidad de ontologías. Tesis Doctoral, Escuela Politécnica de Cáceres. Departamento de Informática. Universidad de Extremadura. España. ISBN: 84-7723-537-6. Noy, N. y McGuinness, D. (2001). Ontology development 101: A Guide to creating your first ontology. Stanford University. Stanford knowledge Systems Laboratory. Technical Report KSL-01-05. (2001). [Documento en línea]. Disponible: http://protegewiki.stanford.edu/wiki/Ontology101. [Consulta: 2014, Julio 03]. 98 Potencier F. y Zaninotto, F. (2013). Symfony 1.4, la guia definitiva. [Libro en línea]. Disponible: http://librosweb.es/symfony_1_4/capitulo_2/el_patron_mvc.html. [Consulta: 2014, Enero 24]. Pressman, R. (2002). Ingeniería del software, un enfoque práctico. 5° Edition. McGrawHill. Prud’hommeaux, E. y Seaborne, A. (2006). SPARQL Query Language for RDF. World Wide Web Consortium (W3C). [Documento en línea]. Disponible: http://www.w3.org/TR/2006/CR-rdf-sparql-query-20060406. [Consulta: 2014, Enero 18]. Ramos, E., Nuñez, H. y Casañas, R. (2009). Esquema para evaluar ontologías únicas para un dominio de conocimiento. Enl@ce: Revista Venezolana de Información, Tecnología y Conocimiento. 6(1):57-71. ISSN: 1690-7515. Rojas, M. y Sánchez, M. (2009). Diseño de un modelo conceptual para la construcción de una base de conocimiento del servicio de soporte en tecnologías de información. Revista Colombiana de Tecnología de Avanzada. 1(15):80-87. ISSN: 1692-7257. Ruiz, F. y Dolado, J. (2008). Una Ontología para la gestión del conocimiento de proyectos de software. Revista Española de Innovación, Calidad e Ingeniería del Software. 4(1):6-22. ISSN: 1885-4486. Soto, N. y Barrios, N. (2006). Gestión del conocimiento. Parte I. Revision crítica del estado del arte. Acimed: Revista cubana de los profesionales de la información y la comunicación en salud. 14(2). ISSN-e 1530-2880. Suárez, M. de. y Mujica, D. de. (2012). Nociones de informática I. Caracas: Distribuidora Escolar, S.A., ISBN: 980-07-6648-0. Sure, Y. y Studer, R. (2003). A Methodology for Ontology-based Knowledge Management. En: Davies, J., Fensel D. y van Harmelen F. (Eds). Towards the Semantic Web Ontology-driven Knowledge Management. Chapter 3. John Wiley y Sons, LTD. Uschold, M y King, M. (1995). Towards a methodology for building ontologies. [Documento en línea]. IJCAI'95 Workshop on Basic Ontological Issues in Knowledge Sharing. Disponible: http://citeseerx.ist.psu.edu/viewdoc/ download?doi=10.1.1.55.5357&rep=rep1&type=pdf Uschold, M. y Gruninger, M. (1996). Ontologies: Principles, Methods and ApplicationsKnowledge Engineering Review. 11(02): 93-136. [Documento en http://citeseerx.ist.psu.edu/ 99 línea]. Disponible:http://dx.doi.org/10.1017/S0269888900007797. [Consulta: 2014, Octubre 1]. Vizcaíno, A., Soto, J., García F., Ruiz, F. y Piattini, M. (2006). Aplicando gestión de conocimiento en el proceso de mantenimiento del software. Revista Iberoamericana de Inteligencia Artificial. 10(31):91-98. ISSN: 1137-3601. World Wide Web Consortium W3C (2014). Resource Description Framework (RDF). Consultado el 27/04/2014 de http://www.w3.org/RDF/ 100 ANEXO A. JUSTIFICACIÓN DEL ELEMENTO TECNOLÓGICO A POBLAR EN LA ONTOLOGÍA El proceso de adquisición de conocimiento, fue llevado a cabo inicialmente, por la Gerencia de Educación de la Fundación Infocentro. Esta gerencia trabajó en la elaboración de un material didáctico denominado “Orientaciones para la atención integral de nuestros recursos TECNOLÓGICOS”, dirigido a los facilitadores y a la comunidad que hace vida en los Infocentros, para que pudieran resolver, de manera autosuficiente, las diversas incidencias que se presentan en una parte de los equipos tecnológicos de los Infocentros. Como parte de este proceso, la Gerencia de Educación convocó una mesa de trabajo, a la que asistieron 5 facilitadores y 4 soportes técnicos, entre otros. Mediante esta mesa de trabajo, se lograron categorizar las incidencias más frecuentes de la siguiente manera:  Sobre instalación de programas o No puedo instalar un programa o No puedo desinstalar un programa o Cómo actualizo un programa o Cómo instalar Canaima  Problemas con la impresora o No aparece la impresora o No puedo imprimir o La impresión me sale corrida o distorsionada o La impresión me sale manchada o El papel se atascó en la impresora o El papel se atascó en la fotocopiadora o No puedo imprimir en otras máquinas  Problemas de conexión o No me puedo conectar a internet o No me puedo conectar a ciertas páginas o No tengo acceso a la carpeta compartida  Problemas de ofimática  Problemas con la computadora o La máquina se apaga sola o La máquina se reinicia sola o El equipo tiene ruido o No enciende el computador o Prende pero no sale la imagen en el monitor o La PC se queda pegada o guindada o La computadora emite pitidos  Problemas con el escritorio o Se borró el panel inferior o superior o No puedo cambiar la hora y fecha o No puedo ver las ventanas minimizadas o Se desconfiguró la resolución del escritorio o Se invirtió la imagen del escritorio o No aparece el icono de la red o No consigo el menú de inicio o La imagen es inestable o No se ven los iconos del escritorio 101 o Se cierra inesperadamente la aplicación de ofimática o No salen las barras de herramientas, función formato y/o dibujo o No funciona el diccionario en la aplicación de ofimática o Anda lenta la aplicación de ofimática o No se ven las imágenes en la aplicación de ofimática  Otros problemas frecuentes o No lee la memoria externa (pendrive) o No lee el CD o El proyector no muestra la imagen o No reconoce el proyector o No reconoce el lector o El puntero del ratón no se mueve  Problemas con el navegador o No puedo ver videos en el navegador o No veo la barra de navegación o de herramientas en el navegador o No se escucha en el navegador o No puedo abrir ciertas aplicaciones de internet en el navegador o Se visualiza muy grande o muy pequeño en el navegador Luego, continuando con el proceso de adquisición de conocimiento, se envío un cuestionario, vía correo electrónico, a todos los soportes técnicos desplegados alrededor del territorio nacional. Recibiendo respuesta, de 44 de estos soportes técnicos. Los datos obtenidos fueron categorizados de la siguiente manera:  Incidentes en aplicaciones o Instalación de aplicaciones o programas o Configuración de aplicaciones o programas o Instalación de paquetes de software o Configuración de paquetes de software o Problemas en las aplicaciones o Actualización de aplicaciones o Instalación de Kdenlive o Instalación de GIMP o Instalación de Audacity o Instalación de la suite educativa gcompriss o Instalación de juegos educativos o Instalación y configuración de plugins y complementos de java para utilizar la aplicación elluminate o Instalación y configuración de elluminate o Instalación y configuración de orca  Incidentes en el sistema operativo o Reinstalación del sistema operativo por fallas en el inicio o Kernel del sistema operativo dañado o Actualización del sistema operativo o Equipos en donde no arranca el sistema operativo satisfactoriamente o Instalación del sistema operativo o Daños en el sistema operativo o Sistema operativo caído con mensaje (code 4) kernel panic o Errores en el grub o Fallo al iniciar el servidor X, splashy error o Configuración del sistema operativo o Reparar paquetes rotos del sistema o Pérdida del sistema operativo o Canaima se queda pegado arrancando el sistema en 102 o Recuperación de información o Respaldos de información o Instalación de aplicaciones de control de tiempo  Incidentes en el navegador o Bloqueo de páginas indebidas o no autorizadas o Actualización del navegador web o Actualización de los plugins del navegador web o Eliminar del historial del navegador web por exceso de páginas en memoria o Permitir acceso a páginas relacionadas a redes sociales o Configuración de los plugins para el navegador web o Actualización de los plugins de flash en el navegador o Instalación de flash player en el navegador o Actualización del plugin de java en el navegador web  Incidentes en el escritorio o Cambio en el fondo de escritorio y exceso de íconos en éste o Entorno gráfico (Gnome) desconfigurado o Desconfiguración del desktop o Mal posicionamiento de la barra de menú o Accesos directos eliminados por los usuarios o Reestablecer paneles del escritorio del sistema o Limpiar escritorio del sistema operativo o Eliminación de las barras de menú o de estado por los usuarios o Ruta de acceso a carpeta de usuario dañada o Los usuarios modifican la interfaz gráfica de los equipos de computación  Incidentes en equipos de computación o Instalación de equipos nuevos en el Infocentro o Arreglo de equipos con fallas en el Infocentro o Equipo que no inicializa y se procede a su limpieza física o Cables de alimentación o corriente desajustados o No reconoce la memoria RAM o Computadora se cuelga o paraliza o Enciende el equipo y no da video o Mantenimiento preventivo y correctivo del equipo el grubsplash o Daños en el sistema de arranque del sistema operativo o Resolución de video no moderada o muy alta o Actualización de los repositorios para la corrección de algunas fallas del sistema operativo o Desconfiguración del sistema operativo o Problemas con el servidor X o No carga el sistema operativo o Problemas con las particiones en disco o Actualización de las aplicaciones del sistema operativo o Configuración de la red (Ips, Dnss, etc) o Errores en los clusters del disco duro o Creación de la carpeta compartida en la taquilla o Configuración del visor de escritorio remoto o Configuración de sonido o Instalación de complementos de video o Inconsistencias en el sistema de archivos de la partición raíz del sistema o Errores en el montaje de particiones de disco o El Canaima no reconoce muchas tarjetas inalámbricas integradas a las tarjetas madres. o Colapso del cups o Uso del xsane o Los servicios de red a veces fallan o Desconfiguración de la interfaz de red o Corrupción de datos o Computadora lenta por ejecutar al menos 2 aplicaciones al mismo tiempo  Incidentes en equipos de reproducción o Fotocopiadora dañada o Reinstalación por desconfiguración de escáner o Reinstalación por desconfiguración de impresora o Instalación de escáner o Instalación de impresora o Configuración de impresora o Configuración de escáner o Impresora dañada o Problemas con controladores de impresora o Atasco de papel en la impresora o Fallas de conexión entre las piezas de la impresora 103 o Fallas de hardware en el equipo de computación o Configurar hora del sistema y bios o Computador se reinicia o apaga cada cierto tiempo o El equipo no enciende o Problemas de navegar por muchas páginas por problemas de fechas o Limpieza interna del equipo de computación  Incidentes en equipos de computación (partes) o Disco duro con sectores dañados o Fuente de poder dañada o Limpieza del ventilador de la fuente de poder o Mantenimiento de conectores (RAM, disco duro, unidad de DVD, etc). o Instalación y configuración de piezas y partes por sustitución o Falso contacto con la memoria RAM o Equipos que pierden la configuración de la BIOS por pila gastada o Equipos que presentan alarmas sonoras por fallas en la tarjeta madre, memoria o video o Limpieza de conectores y buses de los equipos o Desconfiguración de las placas de red o Problemas de arranque por fallas de conexión de algún dispositivo ya sea RAM, disco duro, etc. o Fallas en el video o Memoria RAM dañada o Memoria sulfatada o Instalación de cámara web o Limpieza de la memoria RAM o Procesador dañado o Teclados con botones que se pegan o Sucio en los rodillos o Problemas con el servicio de impresión  Incidentes en la conectividad a Internet o Internet lento o caído o Baja conectividad o intermitencia en conexión satelital o Lentitud en la conexión a internet satelital o Lentitud en la conexión a internet o Se cae la conexión a internet satelital o Problemas con el ancho de banda o La conectividad es muy inestable en el servicio satelital o Problemas con la conectividad satelital o Problemas en la conectividad a internet o No hay internet  Incidentes en la red de datos o Cables de puntos de red dañados o Conectores RJ45 dañados o Reinstalación y certificación del cableado estructurado en algunos Infocentros o Revisión de los puntos de red o Cables de red dañados o Fallas en los puntos de red o Problemas con la red de datos Posteriormente, se realizaron entrevistas en la unidad de Medición de Impacto, la Gerencia de Tecnología y la Jefatura de Seguimiento y Control. Siendo está última, la encargada de gestionar los reportes de incidencias sobre los equipos tecnológicos en los Infocentros, de estas entrevistas se obtuvieron las siguientes conclusiones: Los facilitadores están capacitados y/o autorizados para resolver solo ciertos tipos de incidencias sobre los equipos tecnológicos. Para ello pueden valerse de algún tipo de 104 guía o manual, que los ayude en el proceso. Además, se les puede brindar ayuda vía telefónica, por parte del personal de la Fundación Infocentro. Solo los soportes técnicos están autorizados y capacitados para resolver las incidencias de hardware sobre los equipos tecnológicos. Esto debido, a que por ejemplo, si no se manipula correctamente una computadora durante la revisión de alguna parte de su hardware interno, está podría resultar dañada. También existen casos donde los equipos se encuentran en garantía y si su hardware interno es manipulado, se pierda dicha garantía. Dentro del grupo de las incidencias que pueden ser resueltas por los facilitadores, la que actualmente presenta mayor frecuencia es la instalación de programas. Además, otras incidencias relacionadas y con alto número de frecuencias son: la instalación de complementos, la instalación de drivers (para la cámara web, por ejemplo), la actualización del navegador y la instalación de complementos sobre el navegador. Debido a que la instalación de programas es la incidencia que presenta mayor número de frecuencias, y puede ser abordada mediante el sistema propuesto, se decidió seleccionar este como el elemento de soporte técnico a poblar dentro de la ontología. 105 ANEXO B. INSTALACIÓN DE ARC2 Para la instalación del plugin ARC2 se debe cumplir los siguientes requisitos: servidor web con soporte PHP4.3 o PHP5, puede descargarse a través del portal siguiente: http://www.php.net. También se necesita el Manejador de base de datos MySQL 5.0 o por encima, puede descargarse a través del portal siguiente: http://www.mysql.com. Para la instalación de las librerías de PHP los pasos a seguir son los siguientes: 1.- En un navegador web, ir a la página: https://github.com/tuukka/arc2-starter- pack, y descargar el paquete llamado tuukka-arc2-starter-pack-f9865d2.zip desde https://github.com/tuukka/arc2-starter-pack/zipball/master. 2.- Extraerlo en el directorio local con el nombre de tuukka-arc2-starter-pack- f9865d2.zip. Luego, navegar al directorio raíz del servidor web, por ejemplo: /var/www y crear dentro de éste un subdirectorio denominado arc2-starter-pack. 5.- Copiar el contenido del directorio tuukka-arc2-starter-pack- f9865d2 dentro del directorio arc2-starter-pack. Los siguientes directorios y archivos deberían estar dentro del directorio arc2-starter-pack: admin/ <dir>, cli.php, config.php, endpoint.php, index.php, README. En el directorio arc2-starter-pack crear un subdirectorio denominado arc. 6.- Volver al navegador web, ir a https://github.com/semsol/arc2/zipball/master y descargar el archivo semsol-arc2-495d10b.zip 7.- Extraerlo en el directorio local con el nombre semsol-arc2-495d10b.zip y copiar el contenido del directorio semsol-arc2-495d10b.zip dentro del directorio arc2- starter-pack/arc. Los siguientes directorios y archivos deberían estar dentro del directorio arc2-starter-pack/arc: extractors/ <dir>, parsers/ <dir>, serializers/ <dir>, parqlscript/ <dir>, store/ <dir>, .gitignore, ARC2.php, ARC2_Class.php, ARC2_getFormat.php, ARC2_getPreferredFormat.php, ARC2_Reader.php, ARC2_Resource.php, ARC2_TestHandler.php. https://github.com/tuukka/arc2-starter-pack https://github.com/tuukka/arc2-starter-pack https://github.com/tuukka/arc2-starter-pack/zipball/master https://github.com/semsol/arc2/zipball/master 106 ANEXO C. CREACIÓN DE LA BASE DE DATOS PARA LA CARGA DE LA ONTOLOGÍA CON ARC2 Y PHP Para la carga de la base de datos, en Ghanem (2013) se desarrolló el siguiente procedimiento: Sea un proyecto ontológico ontologiasoportetecnicov4.owl, que contiene la conceptualización de los equipos tecnológicos que pueden estar presentes en un centro tecnológico comunitario de acceso a internet. La ontología que contiene el proyecto ontológico se encuentra conformada por un archivo con extensión .owl cuyo contenido referencia al esquema de la ontología, sus conceptos, atributos de instancia y descripciones, y además contiene la base de conocimiento de la ontología (sus instancias). 1.- Vamos a generar un nuevo con extensión (.owl), éste archivo lo alojamos dentro del directorio arc2-starter-pack. 2.- Luego, a través de un manejador de base de datos local MySQL, creamos una base de datos denominada onto_st 3.- Creamos un archivo denominado load.php en el directorio arc2-starter-pack y escribimos el siguiente código: <?php include_once("./arc/ARC2.php"); $config = array( /* db */ 'db_name' => 'onto_st', /* nombre de la base de datos */ 'db_user' => 'root', /* nombre del usuario root de nuestro manejador*/ 'db_pwd' => '654321', /* clave del usuario root de nuestro manejador */ /* store */ 'store_name' => 'soporte', /* nombre del almacenamiento */ /* stop after 100 errors */ 'max_errors' => 100, ); $store = ARC2::getStore($config); if (!$store->isSetUp()) { $store->setUp(); } $store->query('LOAD <http://localhost/arc2-starter-pack/ontologiasoportetecnicoUnido.rdf>'); /* ruta de la ontología a cargar en la bd (archivo creado anteriormente) */ ?> 107 4.- Corriendo los servicios MYSQL, Apache, PHP, vamos al navegador y corremos el archivo load.php, escribiendo en la barra http://localhost/arc2-starter- pack/load.php. 5.- Para acceder a la ontología a través de SPARQL, haremos lo siguiente: Abriremos el archivo config.php que se encuentra en el directorio arc2-starter-pack/ y lo editaremos de la siguiente manera: <?php include_once(dirname(__FILE__).'/arc/ARC2.php'); // path to the file ARC2.php // SQL database configuration for storing the postings: $arc_config = array( /* MySQL database settings */ 'db_host' => 'localhost', 'db_user' => 'root', 'db_pwd' => '654321', 'db_name' => 'onto_st'/*'arc2test'*/, /* ARC2 store settings */ 'store_name' => 'soporte'/*'sandbox'*/, /* SPARQL endpoint settings */ 'endpoint_features' => array( 'select', 'construct', 'ask', 'describe', // allow read 'load', 'insert', 'delete', // allow update 'dump' // allow backup ), 'endpoint_timeout' => 60, /* not implemented in ARC2 preview */ 'endpoint_read_key' => '', /* optional */ 'endpoint_write_key' => '', /* optional */ 'endpoint_max_limit' => 250, /* optional */ ); 6.- Ya hemos cargado la ontología en la base de datos creada y ahora mostraremos cada una de las tripletas (sujeto – propiedad - objeto) de la ontología, almacenadas en la base de datos. Para ello, creamos un archivo llamado consulta1.php con el siguiente código. <?php include_once("arc/ARC2.php"); include_once('config.php'); $store = ARC2::getStore($arc_config); if (!$store->isSetUp()) { $store->setUp(); //create MySQL tables } $q = ' SELECT DISTINCT ?subject ?property ?object WHERE { ?subject ?property ?object . }'; $rows = $store->query($q, 'rows'); $r = ''; if ($rows = $store->query($q, 'rows')) { $r = '<table border=1> <th>Subject</th><th>Property</th><th>Object</th>'."\n"; foreach ($rows as $row) { $r .= '<tr><td>'.$row['subject'] . '</td><td>'.$row['property'] . '</td><td>'.$row['object'] . '</td></tr>'."\n";} $r .='</table>'."\n"; 108 } else{ $r = '<em>No data returned</em>'; } echo $r; ?> 7.- Vamos al navegador y corremos nuestro archivo consulta1.php escribiendo en la barra http://localhost/arc2-starter-pack/consulta1.php 8.- Ahora mostraremos cada uno de los conceptos de la ontología con sus respectivas descripciones, almacenados en la base de datos. Creamos un archivo consulta2.php <?php include_once("arc/ARC2.php"); include_once('config.php'); $store = ARC2::getStore($arc_config); if (!$store->isSetUp()) { $store->setUp(); //create MySQL tables } $q =' PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX kb: <http://protege.stanford.edu/kb#> SELECT ?label ?comment WHERE { ?clase rdfs:label ?label . ?clase rdfs:comment ?comment; rdf:type "http://www.w3.org/2000/01/rdf-schema#Class" . } '; $rows = $store->query($q, 'rows'); $r = ''; $i = 1; if ($rows = $store->query($q, 'rows')) { $r = '<table border=1><th>Número</th><th>Concepto</th><th>Descripción</th>'."\n"; foreach ($rows as $row) { $r .= '<tr><td>'. $i .'</td><td>'.$row['label'] . '</td><td>'. utf8_decode($row['comment']) . '</td></tr>'."\n"; $i ++; } $r .='</table>'."\n"; } else{ $r = '<em>No data returned</em>'; } echo $r; ?> 109 ANEXO D. GLOSARIO DE TÉRMINOS Nombre Sinónimo Acrónimo Descripción Tipo Computador de escritorio Ordenador, Computador PC Equipo de computación suficientemente pequeño para caber cómodamente en un espacio de trabajo individual (WordNet, 2012). Concepto Editor de hoja de cálculo Libreoffice 4.3.6 Calc - Aplicación de hoja de cálculo contenida en la aplicación de ofimática Libreoffice versión 4.3.6, que brinda la posibilidad de realizar representaciones gráficas y análisis de datos, integra la utilización de fórmulas complejas. Permite leer, ordenar y filtrar datos de bases de datos externas. Instancia Editor de hoja de cálculo Libreoffice 4.4.1 Calc - Aplicación de hoja de cálculo contenida en la aplicación de ofimática Libreoffice versión 4.4.1, permite realizar representaciones gráficas y análisis de datos, integra la utilización de fórmulas complejas. Permite leer, ordenar y filtrar datos de bases de datos externas. Instancia Editor de presentaciones Libreoffice 4.3.6 Impress - Aplicación de presentaciones contenida en la aplicación de ofimática Libreoffice versión 4.3.6 que permite crear de manera sencilla y rápida presentaciones multimedia efectivas. Provee funciones para añadir impresionantes efectos de animación y sensacionales efectos especiales, así como muchísimas funcionalidades más para la elaboración de presentaciones profesionales. Instancia Editor de presentaciones Libreoffice 4.4.1 Impress - Aplicación de presentaciones contenida en la aplicación de ofimática Libreoffice versión 4.4.1, que permite crear de manera sencilla y rápida presentaciones multimedia efectivas. Provee funciones para añadir impresionantes efectos de animación y sensacionales efectos especiales, así como muchísimas funcionalidades más para la elaboración de presentaciones profesionales. Instancia Libreoffice Base 4.4.1 Base de Datos BD DB Aplicación de gestión de bases de datos contenida en la aplicación de ofimática Libreoffice versión 4.4.1. Cuenta con una amplia gama de características, permite crear tablas, consultas, Instancia 110 formularios e informes, junto con un conjunto predefinido de definiciones de tablas para controlar activos, clientes, órdenes de venta, facturas y mucho más. Libreoffice Draw 4.4.1 Draw Dibujo - Aplicación de dibujo, contenida en la aplicación de ofimática Libreoffice versión 4.4.1. Es una herramienta que permite el diseño de gráficos de manera sencilla, permite generar fácilmente gráficas, dibujos, diagramas, etc., a partir de un documento nuevo o utilizando plantillas y gráficos provistos por Libreoffice-Draw es un excelente paquete para producir dibujos técnicos, carteles, etc, permite manipular objetos gráficos, agruparlos, recortarlos, usar objetos en 3D y mucho más. Instancia Libreoffice.org Math 4.4.1 Math - Aplicación de Libreoffice.org en su versión 4.4.1. Es una herramienta para crear y editar fórmulas matemáticas. Las fórmulas creadas se pueden importar a otros documentos de Libreoffice.org, tales como los creados en Writer. Math soporta múltiples fuentes y puede exportar a PDF. Instancia Openoffice calc 4.4.1 Calc - Aplicación de hoja de cálculo contenida en la aplicación de ofimática Openoffice versión 4.4.1, brinda la posibilidad de realizar representaciones gráficas y análisis para ayudar a generar transparentes conclusiones. También integra la utilización de fórmulas complejas. Permite leer, ordenar y filtrar datos de bases de datos externas para producir análisis estadísticos. Instancia Openoffice Draw 4.1.1 Draw Dibujo - Es un paquete gráfico contenido en el paquete Openoffice en su versión 4.1.1, proporciona las herramientas para comunicar con gráficos y diagramas. para pósteres técnicos o generales, etc, permite manipular objetos, rotarlos en dos o tres dimensiones, agruparlos y modificarlos; posee un controlador 3D, cuenta con esferas, anillos cubos, etc, permite crear imágenes fotorealísticas con su propia textura, efectos de iluminación, transparencia, perspectiva, etc. Instancia 111 Openoffice Impress 4.4.1 Impress - Aplicación de presentaciones contenida en la aplicación de ofimática Openoffice versión 4.4.1, que permite crear de manera sencilla y rápida presentaciones multimedia efectivas. Provee funciones para añadir impresionantes efectos de animación y sensacionales efectos especiales, así como muchísimas funcionalidades más para la elaboración de presentaciones profesionales. Instancia Openoffice Math 4.1.1 Math - Es un componente de Openoffice 4.1.1, para la creación de ecuaciones matemáticas. Generalmente se usa como editor de ecuaciones par documentos de texto pero también se puede usar con otros tipos de documento o como herramienta independiente. Cuando se utiliza dentro de Writer las ecuaciones son tratadas como objetos dentro del documento. Del mismo modo puede insertarlas en otros programas de Openoffice como Calc o Impress. Instancia Openoffice Writer 4.4.1 Writer - Procesador de texto contenido en la aplicación de ofimática Openoffice versión 4.4.1, que sirve para escribir desde una rápida carta hasta un libro completo, con sus tablas de contenido, ilustraciones incrustadas, bibliografías y diagramas. Permite la auto- completación, el autoformato y el chequeo de ortográfico automático, mientras se escribe, así como otras muchísimas funcionalidades. Instancia Procesador de texto Libreoffice 4.3.6 Writer - Procesador de texto contenido en la aplicación de ofimática Libreoffice versión 4.3.6, que sirve para escribir desde una rápida carta hasta un libro completo, con sus tablas de contenido, ilustraciones incrustadas, bibliografías y diagramas. Permite la auto- completación, el autoformato y el chequeo de ortográfico automático, mientras se escribe, así como otras muchísimas funcionalidades. Instancia Procesador de texto Libreoffice 4.4.1 Writer - Procesador de texto contenido en la aplicación de ofimática Libreoffice versión 4.4.1, que sirve para escribir desde una rápida carta hasta un libro completo, con sus tablas de contenido, ilustraciones incrustadas, bibliografías y Instancia 112 diagramas. Permite la auto- completación, el autoformato y el chequeo de ortográfico automático, mientras se escribe, así como otras muchísimas funcionalidades. Esta versión incluye nuevos tipos de letras, compartir documentos en SharePoint, OneDrive y cualquier otro sistema de gestión de contenidos que funcione con CMIS, sin necesidad de salir de Libreoffice. Sistema operativo Distribución SO S.O. Conjunto de programas que hacen funcionar al equipo de computación controlando toda la actividad que ésta realiza, sus componentes y la interrelación entre los programas de aplicación y los diversos dispositivos del equipo de computación (Suárez y Mujica, 2012). Concepto Soporte técnico Servicio técnico S.T. Es un conjunto de actividades preventivas y correctivas que se realizan sobre elementos tecnológicos, con el fin de mantener su operatividad. Concepto 113 ANEXO E. TABLA DE INSTANCIAS Nombre de instancia Concepto al que pertenece Atributos Valores Editor de hoja de cálculo Libreoffice 4.3.6 Aplicación de ofimática Nombre de la aplicación de programa Editor de hoja de cálculo Libreoffice Versión de la aplicación de programa 4.3.6 Editor de hoja de cálculo Libreoffice 4.4.1 Aplicación de ofimática Nombre de la aplicación de programa Editor de hoja de cálculo Libreoffice Versión de la aplicación de programa 4.4.1 Editor de presentaciones Libreoffice 4.3.6 Aplicación de ofimática Nombre de la aplicación de programa Editor de presentaciones Libreoffice Versión de la aplicación de programa 4.3.6 Editor de presentaciones Libreoffice 4.4.1 Aplicación de ofimática Nombre de la aplicación de programa Editor de presentaciones Libreoffice Versión de la aplicación de programa 4.4.1 Libreoffice Base 4.4.1 Aplicación de ofimática Nombre de la aplicación de programa Libreoffice Base Versión de la aplicación de programa 4.4.1 Libreoffice Draw 4.4.1 Aplicación de ofimática Nombre de la aplicación de programa Libreoffice Draw Versión de la aplicación de programa 4.4.1 Libreoffice Math 4.4.1 Aplicación de ofimática Nombre de la aplicación de programa Libreoffice Math Versión de la aplicación de programa 4.4.1 Openoffice Base 4.1.1 Aplicación de ofimática Nombre de la aplicación de programa Openoffice Base Versión de la aplicación de programa 4.1.1 114 Openoffice calc 4.4.1 Aplicación de ofimática Nombre de la aplicación de programa Openoffice calc Versión de la aplicación de programa 4.4.1 Openoffice Draw 4.1.1 Aplicación de ofimática Nombre de la aplicación de programa Openoffice Draw Versión de la aplicación de programa 4.1.1 Openoffice Impress 4.4.1 Aplicación de ofimática Nombre de la aplicación de programa Openoffice Impress Versión de la aplicación de programa 4.4.1 Openoffice Math 4.1.1 Aplicación de ofimática Nombre de la aplicación de programa Openoffice Math Versión de la aplicación de programa 4.1.1 Openoffice Writer 4.4.1 Aplicación de ofimática Nombre de la aplicación de programa Openoffice Writer Versión de la aplicación de programa 4.4.1 Procesador de texto Libreoffice 4.3.6 Aplicación de ofimática Nombre de la aplicación de programa Procesador de texto Libreoffice Versión de la aplicación de programa 4.3.6 Procesador de texto Libreoffice 4.4.1 Aplicación de ofimática Nombre de la aplicación de programa Procesador de texto Libreoffice Versión de la aplicación de programa 4.4.1 115 ANEXO F. EJEMPLO DE CONSULTAS DE LAS INCIDENCIAS DE SOPORTE TÉCNICO (ST) Y SUS SOLUCIONES Permite consultar las incidencias de soporte técnico definidas en el sistema. Se pueden visualizar tanto sus descripciones como los detalles de los elementos tecnológicos involucrados en las incidencias, y las soluciones a éstas. Figura 54. Interfaz de inicio-Consulta de Incidencia de ST a.- El usuario presiona el botón consultar incidencias de soporte técnico. b.- El sistema crea un arreglo con los iris de las clases de elementos tecnológicos presentes en la ontología al que se denomina irisST. Para obtener los datos de cada incidencia, se crea una lista de clases y se busca en la ontología las clases que hacen match con cada iri del arreglo antes mencionado, se obtienen los comment (contiene las definiciones y sinónimo de cada incidencia de soporte técnico), así como los label (nombre de la clase) que será desplegada en la siguiente vista. La consulta en sparql y función que realiza esta acción es la misma utilizada en el ejemplo de consulta de elemento tecnológico, donde cada $filtroClase es reemplazado por el siguiente iri presente en el arreglo irisST. Por ejemplo: si se sustituye FILTER('.$filtroClase.' ) por un iri que se encuentre en el arreglo iriST como el siguiente: FILTER (?clase = <http://www.owl- 116 ontologies.com/OntologySoporteTecnico.owl#CorregirImpresionManchada > ), se obtiene una solución similar a la que muestra en la Figura 55. Figura 55. Resultado de ejemplo de consulta de incidencia de ST De esta manera, se construye la siguiente vista de consultas de las incidencias de soporte técnico constituida por nombre (label) y definición (comment). Figura 56. Interfaz de ejemplo de consulta de incidencia de ST 117 c.- Presionando el botón consultar, se obtienen las instancias de la incidencia seleccionada y un resumen de la solución a esa incidencia. Por ejemplo si se hace clic en consultar de la incidencia corregir impresión manchada, el sistema busca el total de incidencias con el siguiente query de sparql. $query = ' PREFIX : <http://www.owl-ontologies.com/OntologySoporteTecnico.owl#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT (COUNT(?iri) AS ?totalElementos) WHERE { ?iri rdf:type :CorregirImpresionManchada. OPTIONAL { ?iri :uRLSoporteTecnico ?urlSoporteTecnico } . ?iri :enImpresora ?iriEquipoReproduccion . ?iriEquipoReproduccion rdf:type :Impresora. ?iriEquipoReproduccion :marcaEquipoReproduccion ?marcaEquipoReproduccion . ?iriEquipoReproduccion :modeloEquipoReproduccion ?modeloEquipoReproduccion . }'; Un ejemplo de ejecución de esta consulta es la siguiente: Figura 57. Resultado de ejemplo de consulta de incidencia de ST Una vez obtenida la cantidad, el sistema verifica si el total de elementos es mayor a cero, entonces se buscan las instancias a partir del iri y con estos resultados se construye la siguiente interfaz: 118 Figura 58. Interfaz ejemplo de consulta de incidencia de ST d.- El usuario hace clic en el botón ver detalles, el sistema muestra la solución del incidente consultado. (Ver Figura 59). Figura 59. Interfaz ejemplo de solución a incidente de ST 119 Al final de esta interfaz, se muestra las opciones siguientes: a) Regresar a la Búsqueda, y b) PDF. Figura 60. Interfaz exportar a PDF solución a incidente de ST e.- El usuario selecciona la opción PDF y el sistema genera la solución mostrada en el formato PDF, como se puede ver en la Figura 61. Figura 61. Interfaz Ejemplo de solución a incidente de ST en PDF 120 ANEXO G. EJEMPLO DE ADMINISTRACIÓN DE INSTANCIAS DE INCIDENCIAS DE ST Y SUS SOLUCIONES A través de esta opción el usuario con perfil administrador, podrá consultar y realizar un conjunto de operaciones sobre las instancias de las incidencias de soporte técnico definidas en la ontología. Estas operaciones incluyen insertar, modificar y eliminar las instancias. Además, se puede consultar e ingresar las soluciones de incidencias de soporte técnico, para cada una de estas instancias. Para los siguientes ejemplos, se crea un usuario con perfil administrador cuyo nombre y apellido es Administrador. Figura 62. Interfaz inicio-Administración de incidencias de ST a.- Una vez que el administrador presiona el botón Administrar de la opción instancias de incidencias de soporte técnico y sus soluciones. b.- El sistema crea un arreglo con los iris de las clases de soporte técnico, presentes en la ontología al que se denomina irisST. Para obtener los datos se crea una lista de clases y se busca en la ontología las clases de soporte técnico que haga match con cada iri del arreglo irisST, de estos, se obtienen los comment que contiene las definiciones y sinónimo de cada clase de ST, así como los label que contiene el nombre 121 de la clase. La consulta en Sparql y función que realiza esta acción es la misma utilizada en el ejemplo1 consulta de elemento tecnológico. De esta manera, se construye la siguiente vista de Administración de las instancias de las incidencias de soporte técnico constituida por nombre (label) y definición (comment). Figura 63. Interfaz Administración de instancias de incidencias de ST  Ejemplo de Inserción de instancia de incidencia de ST a.- Por Ejemplo el usuario selecciona la opción instalación de aplicación ofimática y de ella presiona el botón Insertar. d.- El sistema, muestra un formulario, que permitirá la inserción de una nueva instancia incidencia de ST con su solución (ver Figura 58). 122 Figura 64. Interfaz Formulario de inserción de instancia de incidencia de ST e.- El administrador desea agregar una nueva solución para la instalación de presentaciones Libreoffice 3.3.1 en el sistema operativo Canaima 3.1, para ello llena el formulario y presiona el botón Guardar. La Figura 65, muestra un ejemplo de llenado del formulario de patrón de solución a la incidencia Instalación de aplicación de ofimática, por parte del usuario. 123 Figura 65. Interfaz, ejemplo de llenado de patrón de solución f.- El sistema muestra el siguiente mensaje: Instancia de guardada satisfactoriamente, y refleja en detalle la instancia de incidencia agregada, como muestra la Figura 66. 124 Figura 66. Interfaz instancia de incidencia de ST agregada g.- Al seleccionar la pestaña Consultar de la vista mostrada en la Figura 66, el sistema muestra todas las incidencias de aplicación ofimática y en ella se visualiza la instancia agregada, ver Figura 67. 125 Figura 67. Interfaz consulta de Instancias de a incidencias de instalación de aplicación de ofimática.  Ejemplo de Modificación o eliminación de instancia de incidencia de ST a.- El usuario inicia sesión como administrador, y en la pantalla inicial del sistema, presiona el botón Administrar en la opción Administración de las instancias de incidencias de soporte técnico y sus soluciones. b.- El sistema obtiene la lista de instancias de incidencias de soporte técnico, de la misma forma como se describe en el ejemplo anterior (ejemplo de Inserción de instancia de incidencia de ST). c.- El usuario elige la opción instalación de aplicación ofimática y presiona el botón Consultar. d.- El sistema, obtiene la cantidad total de elementos de ST para la instalación de aplicación ofimática que existen en la ontología, para ello se utiliza el siguiente query: $query = ' PREFIX : <http://www.owl-ontologies.com/OntologySoporteTecnico.owl#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT (COUNT(?iri) AS ?totalElementos) 126 WHERE { ?iri rdf:type :InstalacionAplicacionOfimatica. OPTIONAL { ?iri :uRLSoporteTecnico ?urlSoporteTecnico } . ?iri :aplicacionOfimatica ?iriAplicacion . ?iri :sobreSistemaOperativo ?iriSistemaOperativo . ?iriAplicacion rdf:type :AplicacionOfimatica . ?iriAplicacion :nombreAplicacionPrograma ?nombreAplicacion . ?iriAplicacion :versionAplicacionPrograma ?versionAplicacion . ?iriSistemaOperativo rdf:type :SistemaOperativo. ?iriSistemaOperativo :nombreSistemaOperativo ?nombreSistemaOperativo . ?iriSistemaOperativo :versionSistemaOperativo ?versionSistemaOperativo . } '; La ejecución de esta consulta trae un resultado como el que se muestra en la siguiente imagen: Figura 68. Resultado de consulta a ejemplo de: total de elementos de ST para la instalación de aplicación ofimática e.- Una vez obtenida la cantidad de elementos, el sistema busca las instancias de ST en instalación de aplicación de ofimática, esto se logra a través de la siguiente consulta: PREFIX : <http://www.owl-ontologies.com/OntologySoporteTecnico.owl#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?iri ?urlSoporteTecnico ?iriAplicacion ?nombreAplicacion ?versionAplicacion ?iriSistemaOperativo ?nombreSistemaOperativo ?versionSistemaOperativo WHERE { ?iri rdf:type :InstalacionAplicacionOfimatica. OPTIONAL { ?iri :uRLSoporteTecnico ?urlSoporteTecnico } . ?iri :aplicacionOfimatica ?iriAplicacion . ?iri :sobreSistemaOperativo ?iriSistemaOperativo . ?iriAplicacion rdf:type :AplicacionOfimatica . ?iriAplicacion :nombreAplicacionPrograma ?nombreAplicacion . ?iriAplicacion :versionAplicacionPrograma ?versionAplicacion . ?iriSistemaOperativo rdf:type :SistemaOperativo. 127 ?iriSistemaOperativo :nombreSistemaOperativo ?nombreSistemaOperativo . ?iriSistemaOperativo :versionSistemaOperativo ?versionSistemaOperativo . } ORDER BY ?nombreAplicacion ?versionAplicacion ?nombreSistemaOperativo ?versionSistemaOperativo ?urlSoporteTecnico f.- Con la ejecución de esta consulta, se obtiene los detalles de las instancias que serán mostradas al usuario, este resultado es similar al que se muestra en la Figura 69. Figura 69. Resultado de consulta de detalles de instancias de ST en instalación de aplicación ofimática g.- Con estos resultados el sistema construye y despliega la interfaz mostrada en la Figura 71, (Interfaz Consulta de Instancias de incidencias de instalación de aplicación de ofimática). A través de esta interfaz el administrador puede modificar o eliminar una instancia de la lista desplegada presionando el botón ver detalles. Opción a).- El usuario selecciona la instancia que desea modificar, por ejemplo elige la opción nro4 Editor de presentaciones libreoffice versión 3.3.1, cuyo sistema operativo es CanaimaGNU/Linux versión 3.1 y posee una Solución de incidencia de soporte técnico que fue agregada en el ejemplo anterior (inserción), el usuario presiona el botón Ver Detalles. 128 i.- El sistema, mediante el iri de la instancia elegida obtiene los detalles de la misma, con el siguiente query de Sparql: $query = ' PREFIX : <http://www.owl-ontologies.com/OntologySoporteTecnico.owl#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?iri ?urlSoporteTecnico ?iriAplicacion ?nombreAplicacion ?versionAplicacion ?iriSistemaOperativo ?nombreSistemaOperativo ?versionSistemaOperativo WHERE { ?iri rdf:type :InstalacionAplicacionOfimatica . OPTIONAL { ?iri :uRLSoporteTecnico ?urlSoporteTecnico } . ?iri :aplicacionOfimatica ?iriAplicacion . ?iri :sobreSistemaOperativo ?iriSistemaOperativo . FILTER (?iri = <'.$iri.'>) . ?iriAplicacion rdf:type :AplicacionOfimatica. ?iriAplicacion :nombreAplicacionPrograma ?nombreAplicacion . ?iriAplicacion :versionAplicacionPrograma ?versionAplicacion . ?iriSistemaOperativo rdf:type :SistemaOperativo . ?iriSistemaOperativo :nombreSistemaOperativo ?nombreSistemaOperativo . ?iriSistemaOperativo :versionSistemaOperativo ?versionSistemaOperativo . } '; El Filtro usado en esta consulta dependerá de la instancia elegida, en este ejemplo el iri correspondiente es: InstalacionAplicacionOfimatica_1. Lo que trae como resultado los detalles que se visualizan en la siguiente imagen: Figura 70. Resultado de consulta: detalles de la incidencia de ST de la instancia instalación de aplicación de ofimática, editor de presentaciones Libreoffice 3.3.1 en Canaima 3.1 Con este resultado y el Url de Soporte Técnico obtenido (PST_12), se busca la solución de la incidencia en el repositorio de patrones de soluciones y luego se construye la vista que se muestra al usuario, la imagen siguiente es un ejemplo: 129 Figura 71. Interfaz patrón de solución a la incidencia: instalación de aplicación de ofimática del editor de presentaciones Libreoffice 3.3.1 en sistema operativo Canaima 3.1 Esta imagen muestra un patrón de solución de ST de la instancia instalación de aplicación ofimática, el cual está constituido por: (a) detalles del elemento tecnológico al cual se da solución, para este ejemplo corresponde a: nombre de la aplicación de programa y su versión, sistema operativo y su versión; (b) detalles del patrón de solución el cual contiene el nombre de la incidencia que resuelve seguido de la instancia de ET al que hace referencia, nombre del creador de la solución con su fecha de creación, nombre del autor que modificó por última vez el patrón y de igual manera la fecha de modificación, por último se muestra la descripción de la solución la cual está formada 130 por un conjunto de pasos a seguir para dar respuesta al incidente de ST, en este ejemplo en la incidencia instalación de aplicación ofimática. El usuario presiona el botón Modificar, el sistema permite la edición del patrón de solución para la instancia seleccionada, ésta última no podrá ser modificada mediante esta interfaz. En este ejemplo, el usuario modifica los pasos del patrón y presiona el botón Actualizar, como se muestra en la Figura 72. Figura 72. Interfaz Modificar instancia de ST de aplicación ofimática El sistema captura y guarda los datos del formulario, establece el usuario que realiza la modificación del patrón, y luego actualiza la instancia de soporte técnico en 131 instalación de aplicación ofimática, en la base de datos, para ello primero el sistema guarda los datos del usuario que hace la modificación, luego valida los datos capturados del formulario, obtiene el Url de soporte técnico del patrón asociado a la instancia con la siguiente consulta: INSERT INTO patrones ( codigo, nombre, solucion, autor_crea, fecha_crea ) VALUES ( '".$codigo."', '".$GLOBALS['PATRONES_CLASS_DB']->Quote($patron->getNombre())."', '".$GLOBALS['PATRONES_CLASS_DB']->Quote($patron->getSolucion())."', ".$patron->getUsuarioCreador()->getId().", NOW() ) Si el patrón no tiene un nombre, el sistema lo crea a partir del nombre de la incidencia de ST, por ejemplo: InstalaciónAplicacionOfimatica, lo concatena con el nombre de la aplicación Editor de presentaciones libreoffice 3.3.1, y el nombre del sistema operativo y su versión. Si no existe un patrón para la instancia a actualizar, el sistema crea uno con el formulario respectivo y lo guarda en el repositorio de patrones de soluciones mediante el siguiente query: $query = " UPDATE patrones SET nombre = '".$GLOBALS['PATRONES_CLASS_DB']->Quote($patron->getNombre())."', solucion = '".$GLOBALS['PATRONES_CLASS_DB']->Quote($patron->getSolucion())."', autor_mod = ".$patron->getUsuarioUltimaModificacion()->getId().", fecha_mod = NOW() WHERE codigo = '".$patron->getCodigo()."' "; El sistema muestra como resultado el siguiente mensaje: instancia actualizada satisfactoriamente y despliega los detalles de la instancia modificada, como se ilustra en la siguiente imagen: 132 Figura 73. Interfaz resultado de ejemplo en modificación de incidencia de ST Opción b).- El usuario presiona el botón Eliminar a- El usuario selecciona la instancia que desea eliminar, por ejemplo elige la opción Editor de presentaciones libreoffice versión 3.3.1, cuyo sistema operativo es CanaimaGNU/Linux versión 3.1 y posee una Solución de incidencia de soporte técnico que fue agregada en el ejemplo de inserción, el usuario presiona el botón ver detalles. b.- El sistema primero elimina el patrón del repositorio mediante la siguiente consulta: $query = " DELETE FROM patrones WHERE codigo = '".$codigo."' "; c.- el sistema borra los datos de la instancia, desde la base de datos usando el siguiente query, para este ejemplo, se sustituyen las variables por los valores correspondientes a la instancia que va a ser eliminada: $query = ' PREFIX : <http://www.owl-ontologies.com/OntologySoporteTecnico.owl#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 133 DELETE FROM <'.SIGECOST_IRI_GRAFO_POR_DEFECTO.'> { ?iri ?predicado ?objeto . } WHERE { ?iri rdf:type :InstalacionAplicacionOfimatica . ?iri ?predicado ?objeto . FILTER (?iri = <InstalacionAplicacionOfimatica_1>) . } '; El sistema muestra una ventana emergente en la cual solicita una confirmación de este procedimiento, en esta ventana se muestra la siguiente pregunta: ¿Está seguro que desea eliminar la instancia?, el usuario presiona el botón aceptar. El sistema muestra por resultado el mensaje siguiente: Instancia eliminada satisfactoriamente, adicionalmente despliega la lista de Instancias de instalación de aplicación ofimática, donde se puede corroborar que la instancia ya no existe, la Figura 74 es un ejemplo de la interfaz mostrada al usuario al ejecutar esta operación: Figura 74. Interfaz de ejemplo de eliminación de instancia de incidencia de ST en aplicación ofimática. 134 ANEXO H. EJEMPLOS DE ADMINISTRACIÓN DE USUARIOS La administración de usuarios, permite crear y modificar usuarios del sistema, el sistema otorga hasta dos opciones de administración: opción a) administrador de incidencias que permite al usuario gestionar incidencias de ST y sus soluciones, opción b) administrador de usuarios, permite la gestión de usuarios del sistema. o Ejemplo de creación de usuario: a.- El usuario logueado con perfil de administración de usuario, hace clic en Usuarios de la barra de navegación, (ver Figura 75). Figura 75. Interfaz Administración de usuarios b.- El sistema obtiene la cantidad total de elementos de usuarios que se obtendrán en la búsqueda, a través de la siguiente consulta: $query = " SELECT count(*) AS totalElementos FROM usuario "; Una vez obtenido el total de elementos, el sistema realiza las validaciones respectivas y luego hace la siguiente consulta para obtener los datos que serán mostrados. $query = " SELECT usuario.id AS usuario_id, usuario.cedula AS usuario_cedula, usuario.usuario AS usuario_usuario, #usuario.contrasena AS usuario_constrasena, usuario.nombre AS usuario_nombre, usuario.apellido AS usuario_apellido, usuario.estatus AS usuario_estatus FROM usuario ORDER BY usuario.nombre, usuario.apellido "; Con estos resultados, el sistema muestra una interfaz como la siguiente: 135 Figura 76. Interfaz detalles de usuarios del sistema c.- El usuario presiona la pestaña Insertar, y el sistema despliega el siguiente formulario que permite el ingreso de datos. Figura 77. Interfaz de formulario de ingreso de nuevo usuario d.- El usuario, introduce los datos, y presiona el botón Guardar. 136 e.- El sistema, obtiene, valida y guarda todos los valores de los campos del formulario en variables y luego las almacena en la base de datos con el siguiente query: $query = " INSERT INTO usuario ( usuario, contrasena, cedula, nombre, apellido ) VALUES ( '".$GLOBALS['PATRONES_CLASS_DB']->Quote($usuario->getUsuario())."', '".$GLOBALS['PATRONES_CLASS_DB']->Quote($usuario->getContrasena())."', '".$GLOBALS['PATRONES_CLASS_DB']->Quote($usuario->getCedula())."', '".$GLOBALS['PATRONES_CLASS_DB']->Quote($usuario->getNombre())."', '".$GLOBALS['PATRONES_CLASS_DB']->Quote($usuario->getApellido())."' )"; f.- El sistema guarda los roles del usuario mediante el siguiente query: $query = " INSERT INTO usuario_rol ( id_usuario, id_rol ) VALUES ( '".$GLOBALS['PATRONES_CLASS_DB']->Quote($usuario->getId())."', '".$GLOBALS['PATRONES_CLASS_DB']->Quote($rol->getId())."' ) "; g.- El sistema despliega un mensaje indicando que se ha guardado el nuevo usuario satisfactoriamente, y muestra los detalles del usuario creado. o Ejemplo de modificación de datos de usuario a.- El administrador una vez logueado y con perfil de administrador de usuarios, hace clic en Usuarios que se encuentra en la barra de navegación del sistema (ver Figura 78). Figura 78. Interfaz 1 para administrar usuarios de Sigecost b.- el sistema obtiene los datos de los usuarios encontrados en la base de datos y los muestra en una interfaz como la siguiente: (ver Figura 79). 137 Figura 79. Interfaz 2 de administración de usuarios de Sigecost c.- el administrador de usuarios, elige el usuario al cual desea modificar y presiona el botón ver detalles. Por ejemplo el usuario elige el número 3 de la lista (jsoto). d.- El sistema, envía el id del usuario para su búsqueda en la base de datos. e.- el sistema realiza la siguiente consulta para obtener los datos: $query = " SELECT usuario.id AS usuario_id, usuario.cedula AS usuario_cedula, usuario.usuario AS usuario_usuario, usuario.contrasena AS usuario_constrasena, usuario.nombre AS usuario_nombre, usuario.apellido AS usuario_apellido, usuario.estatus AS usuario_estatus FROM usuario WHERE id = '".$id."' "; f.- El sistema muestra los detalles del usuario consultado, como se muestra en la siguiente pantalla: Figura 80. Interfaz detalles de usuario 138 g.- El administrador presiona el botón Modificar. h.- el sistema muestra un formulario que permite la edición de los campos del usuario a modificar (ver Figura 81). Figura 81. Interfaz ejemplo de un formulario para modificar datos de usuario i.- Por ejemplo, el administrador, cambia los datos de usuario, en los siguientes campos del formulario: usuario, cedula y otorga el rol es administrado de incidencias. Luego presiona el botón Actualizar. La siguiente imagen es un ejemplo de modificación de datos: 139 Figura 82. Interfaz ejemplo de actualización de datos de usuario j.- El sistema, obtiene, valida y guarda los datos desde el formulario y luego actualiza con el siguiente query: $query = " UPDATE usuario SET usuario = '".$GLOBALS['PATRONES_CLASS_DB']->Quote($usuario->getUsuario())."', contrasena = '" .$GLOBALS['PATRONES_CLASS_DB']->Quote($usuario->getContrasena())."', cedula = '".$GLOBALS['PATRONES_CLASS_DB']->Quote($usuario->getCedula())."', nombre = '".$GLOBALS['PATRONES_CLASS_DB']->Quote($usuario->getNombre())."', apellido = '".$GLOBALS['PATRONES_CLASS_DB']->Quote($usuario->getApellido())."' WHERE id = '".$usuario->getId()."' "; k.- El sistema borra los roles de administración que posee el usuario, antes de la actualización en la base de datos, mediante el siguiente query: $query = " DELETE FROM usuario_rol WHERE id_usuario = '".$usuario->getId()."' "; l.- El sistema hace la inserción de los nuevos roles del usuario en la base de datos a través del siguiente query: INSERT INTO usuario_rol (id_usuario, id_rol ) VALUES ( '".$GLOBALS['PATRONES_CLASS_DB']->Quote($usuario->getId())."', '".$GLOBALS['PATRONES_CLASS_DB']->Quote($rol->getId())."' ) "; m.- finalmente, el sistema muestra en la próxima interfaz los datos del usuario actualizado. (Ver siguiente figura): 140 Figura 83. Interfaz usuario actualizado o Ejemplo de modificar datos de Mi Cuenta A través de esta opción los usuarios registrados en el sistema, pueden modificar sus datos. a.- El usuario inicia sesión en el sistema, y presiona el botón Mi Cuenta, que se encuentra en el menú principal del sistema (ver Figura 83): Figura 84. Interfaz administrar Mi cuenta b.- el sistema valida que el usuario haya iniciado sesión, luego obtiene los datos del usuario mediante el id y con el siguiente query: $query = " SELECT usuario.id AS usuario_id, usuario.cedula AS usuario_cedula, usuario.usuario AS usuario_usuario, usuario.contrasena AS usuario_constrasena, usuario.nombre AS usuario_nombre, usuario.apellido AS usuario_apellido, usuario.estatus AS usuario_estatus FROM usuario WHERE id = '".$id."' "; 141 c.- Los datos obtenidos de la ejecución del query anterior, se muestran al usuario en un formulario cuyos únicos campos modificables son: usuario y contraseña. Figura 85. Interfaz formulario para actualizar datos a través de la operación Mi cuenta d.- El usuario cambia el valor del campo usuario, dejando la antigua contraseña, y el sistema realiza la actualización de datos, de la misma forma que en el ejemplo anterior (modificar datos de usuario) y muestra los resultados de esta operación. Figura 86. Interfaz datos actualizados a través de la opción Mi cuentaUniversidad Central de Venezuela Facultad de Ciencias Escuela de Computación Centro de Ingeniería de Software y Sistemas Laboratorio de Inteligencia Artificial Trabajo Especial de Grado presentado ante la Ilustre Universidad Central de Venezuela, por los Bachilleres Medina S. Migdalia C. C.I.: 16871228 Mendoza M. William J. CI: 15586921 para optar al título de Licenciado en Computación Tutores: Profa. Esmeralda Ramos Prof. Anibal Ghanem Caracas, Octubre de 2015 Un Enfoque Ontológico para Gestionar el Conocimiento de Soporte Técnico de los Infocentros de Venezuela i ACTA DE VEREDICTO Quienes suscriben, miembros del jurado designado por el Consejo de Escuela de Computación de la Facultad de Ciencias de la Universidad Central de Venezuela para examinar el Trabajo Especial de Grado de los Bachilleres Medina Migdalia C.I.: 16871228 y Mendoza William CI: 15586921, bajo el título: “Un Enfoque Ontológico para Gestionar el Conocimiento de Soporte Técnico de los Infocentros de Venezuela”, a fines de cumplir con el requisito legal para optar al grado de Licenciado en Computación, dejan constancia de lo siguiente: Leído el trabajo por cada uno de los miembros del jurado, se fijó el día cinco de octubre de 2015, a las 5:00 pm, para que sus autores lo defendieran en forma pública, en la sala 1 de la Escuela de Computación, Facultad de Ciencias de la Universidad Central de Venezuela, lo cual estos realizaron mediante una exposición oral de su contenido, y luego respondieron satisfactoriamente a las preguntas que les fueron formuladas por el Jurado, todo ello conforme a lo dispuesto en la Ley de Universidades y demás normativas vigentes de la Universidad Central de Venezuela. Finalizada la defensa pública del Trabajo Especial de Grado, el jurado decidió aprobarlo. En fe de lo cual se levanta la presente acta a los cinco días del mes de octubre de dos mil quince. ____________________________ Profa. Esmeralda Ramos (Tutor) _____________________________ _____________________________ Prof. José Sosa. (Jurado) Prof. Wilfredo Rangel (Jurado) ii DEDICATORIA A Dios, por darme la oportunidad de alcanzar este momento tan importante. Por darme la paciencia y la sabiduría para no rendirme ante las adversidades. A mis padres y hermana, por su inmenso amor y apoyo incondicional. Por siempre estar a mi lado, sobre todo en los momentos más difíciles. A mi amada esposa, por su dedicación, cariño y paciencia, para poder alcanzar esta meta. William Javier Mendoza Mero iii AGRADECIMIENTOS A la Universidad Central de Venezuela, por darme la oportunidad de ser uno de sus estudiantes, por todas las enseñanzas aprendidas y por toda la gente maravillosa que me permitió conocer. A mis padres, por todo su esfuerzo y sacrificio para que yo pudiera culminar mis estudios universitarios, y ser una mejor persona. Las palabras se quedan cortas para poder agradecerles. A los profesores Esmeralda Ramos y Anibal Ghanem, por su paciencia, apoyo y dedicación para que este trabajo fuese posible. A la Fundación Infocentro por el apoyo para la culminación de este trabajo. A mi familia, amigos y a todos los que, de alguna u otra manera, me han permitido alcanzar este sueño. William Javier Mendoza Mero iv Universidad Central de Venezuela Facultad de Ciencias Escuela de Computación Centro de Ingeniería del Software y Sistemas Laboratorio de Inteligencia Artificial Un Enfoque Ontológico para Gestionar el Conocimiento de Soporte Técnico de los Infocentros de Venezuela Resumen En este trabajo, se presenta el desarrollo de un conjunto de funcionalidades que permiten la actualización de un sistema de gestión de conocimiento de soporte técnico (ST), con un enfoque ontológico basado en la Web, que facilita la reutilización y socialización del conocimiento de las actividades de soporte tecnológico en los Infocentros del país. El sistema permite: (a) consultar las características de los elementos tecnológicos y de las incidencias de soporte técnico, (b) realizar búsquedas semánticas sobre los patrones de soporte técnico, (c) insertar y modificar elementos tecnológicos e incidencias de soporte técnico, (d) insertar y modificar patrones de soporte técnico, y (d) administrar los usuarios del sistema y sus niveles de acceso, para controlar quien puede ejercer funciones de administración. La solución propuesta permitió extender las características del sistema de gestión de conocimiento de ST, facilitando a los usuarios finales (facilitadores) las búsquedas de patrones de solución para poder solventar los problemas de soporte técnico que se les presentan día a día; así también aportó un valor agregado, al permitir que se administren (inserten, modifiquen o eliminen) los elementos tecnológicos y las incidencias de soporte técnico, para que el sistema se mantenga adaptado a las dinámicas de los componentes tecnológicos presentes en los Infocentros. Se realizaron un conjunto de pruebas con los usuarios finales y los expertos de conocimiento, de las cuales se obtuvieron resultados satisfactorios. Las tecnologías utilizadas incluyen la ontología; la librería Arc2 para dar soporte a las consultas de la ontología sobre una base de datos; y tecnologías Web actuales. Palabras claves: ontologías, patrones, gestión de conocimiento, soporte técnico, elementos tecnológicos. v INDICE DE GENERAL LISTA DE FIGURAS .................................................................................................... vii LISTA DE TABLAS ....................................................................................................... xi INTRODUCCIÓN ............................................................................................................ 2 CAPÍTULO I. CONTEXTO, PLANTEAMIENTO DEL PROBLEMA Y OBJETIVOS 4 I.1 Los Infocentros de Venezuela ............................................................................... 4 I.2 Soporte técnico en los Infocentros ........................................................................ 5 I.3 Antecedentes ......................................................................................................... 8 I.4 Solución Propuesta ................................................................................................ 9 I.5 Objetivos ............................................................................................................. 11 I.5.1 Objetivo General ..................................................................................... 11 I.5.2 Objetivos Específicos .............................................................................. 11 I.6 Aportes de la solución propuesta......................................................................... 12 CAPÍTULO II. GESTIÓN DE CONOCIMIENTO CON ENFOQUE ONTOLÓGICO 14 II.1 La Gestión del Conocimiento .............................................................................. 14 II.2 Modelos de Gestión del Conocimiento ............................................................... 15 II.3 Tecnologías de Información para Gestionar Conocimiento ................................ 17 II.3.1 Ontologías................................................................................................ 17 II.3.2 Componentes de las Ontologías .............................................................. 19 II.3.3 Proceso de Desarrollo de Ontologías ...................................................... 20 II.3.4 Metodología Methontology ..................................................................... 20 II.3.5 Lenguajes que se utilizan para desarrollar ontologías ............................. 23 II.3.6 Lenguajes para consultar ontologías: SPARQL ...................................... 24 CAPÍTULO III. DESARROLLO DE LA SOLUCIÓN DE GESTIÓN DE CONOCIMIENTO .......................................................................................................... 26 III.1 Subsistema de la solución ................................................................................... 26 III.2 Ontología de soporte técnico .............................................................................. 29 III.3 Repositorios ........................................................................................................ 36 CAPÍTULO IV. DESARROLLO DE LA APLICACIÓN WEB ................................... 38 IV.1 Modelado de la aplicación ................................................................................. 38 IV.2 Interfaces de la aplicación y ejemplos de consultas para acceder y recuperar información desde la ontología ........................................................................... 54 IV.2.1 Ejemplo de consulta de Elementos Tecnológicos ................................... 56 IV.2.2 Ejemplo de búsquedas de incidencias de soporte técnico ....................... 60 IV.2.3 Ejemplo de administración de instancias de Elementos Tecnológicos ... 66 IV.2.4 Ejemplo de exportar la ontología a owl ................................................... 79 IV.2.5 Ejemplo de consultas para generar la solución de ST a PDF .................. 81 IV.3 Tecnologías utilizadas en el desarrollo ............................................................. 83 vi IV.3.1 Ontología de soporte técnico ................................................................... 84 IV.3.2 Librería Arc2 ........................................................................................... 84 IV.3.3 Patrón de desarrollo Modelo-Vista-Controlador (MVC) ........................ 85 IV.3.4 Otras ........................................................................................................ 85 IV.4 Pruebas y resultados .......................................................................................... 86 IV.4.1 Pruebas de unidad .................................................................................... 86 IV.4.2 Pruebas de integración ............................................................................. 87 IV.4.3 Pruebas de validación .............................................................................. 88 IV.4.4 Pruebas de validación dirigidas a los facilitadores de los Infocentros .... 89 IV.4.5 Pruebas de validación dirigidas a los expertos de conocimiento ............ 91 IV.4.6 Análisis de Resultados ............................................................................. 93 CONCLUSIONES Y RECOMENDACIONES .............................................................. 94 REFERENCIAS BIBLIOGRÁFICAS ............................................................................ 96 ANEXO A. Justificación del Elemento Tecnológico a Poblar en la Ontología............ 100 ANEXO B. Instalación de ARC2.................................................................................. 105 ANEXO C. Creación de la Base de datos para la carga de la Ontología con ARC2 y PHP ............................................................................................................................... 106 ANEXO D. Glosario de Términos ................................................................................ 109 ANEXO E. Tabla de Instancias .................................................................................... 113 ANEXO F. Ejemplo de consultas de las incidencias de soporte técnico (ST) y sus soluciones ...................................................................................................................... 115 ANEXO G. Ejemplo de administración de instancias de incidencias de ST y sus soluciones ...................................................................................................................... 120 ANEXO H. Ejemplos de administración de usuarios ................................................... 134 vii LISTA DE FIGURAS FIGURA 1 Taxonomía de los Elementos Tecnológicos de los Infocentros. ........................... 7 2 Taxonomía de Soporte Técnico en los Infocentros. .............................................. 8 3 Esquema general propuesta para SIGECOST ..................................................... 10 4 Arquitectura para la gestión del conocimiento (Kerschberg, 2001).................... 16 5 Tareas de conceptualización de Methontology ................................................... 21 6 Arquitectura del sistema para la gestión de conocimiento de soporte técnico en Infocentros (Ghanem, Núñez y Ramos, 2014) .................................................... 26 7 Taxonomía de Soporte Técnico en los Infocentros ............................................. 31 8 Resultado luego de aplicar el analizador sintáctico a la ontología ...................... 33 9 Ejemplo de la respuesta a una pregunta de competencia, que permite consultar el patrón de solución tecnológica, para la instalación de la aplicación ofimática LibreOffice 4.4.1 sobre el sistema operativo Debian GNU/Linux Squeeze 6.0 . 35 10 Ejemplo de un patrón de solución ....................................................................... 37 11 Casos de uso de la aplicación de gestión de conocimiento de soporte técnico en los Infocentros ..................................................................................................... 39 12 Diagrama de Casos de Uso Administrar elemento tecnológico .......................... 42 13 Diagrama de Casos de uso: Administrar incidencia de soporte técnico ............. 46 14 Diagrama de casos de uso: Exportar la ontología ............................................... 50 15 Diagrama de casos de uso: Administrar cuenta .................................................. 51 16 Diagrama de casos de uso: Consultar usuarios ................................................... 51 17 Diagrama de casos de uso: Administrar usuarios................................................ 52 18 Interfaz inicio del sistema ................................................................................... 56 19 Resultado de ejemplo de Consulta de Elemento Tecnológico. ........................... 57 20 Interfaz de consulta de Elementos Tecnológicos ................................................ 58 21 Resultado de ejemplo de consulta de total de instancia de ET............................ 59 22 Resultado Consulta de Instancias de ET Aplicación de Ofimática ..................... 59 23 Interfaz Instancias de ET Aplicaciones de Ofimática ......................................... 60 viii 24 Interfaz de búsqueda de soluciones de incidencias de ST ................................... 61 25 Interfaz de búsqueda de soluciones de incidencias de ST ................................... 61 26 Ejemplo de consulta con el Iri Elemento Tecnológico (Clase Padre) ................. 62 27 Ejemplo de consulta con Iri Aplicación de Programa (SubClase Padre) ............ 63 28 Interfaz ejemplo de búsqueda de incidencias de ST ........................................... 64 29 Resultado de consulta de Solución de incidencia de ST ..................................... 65 30 Interfaz ejemplo de patrón de solución a una incidencia de ST .......................... 66 31 Interfaz Inicio de Administrar Instancias de ET ................................................. 67 32 Interfaz de administración de instancias de ET ................................................... 68 33 Interfaz formulario de ejemplo de insertar instancia de ET ................................ 69 34 Interfaz ejemplo de inserción de una instancia de ET ......................................... 69 35 Interfaz, con mensaje de existencia de instancia de ET ...................................... 70 36 Interfaz ejemplo de inserción de instancia de ET ............................................... 71 37 Interfaz instancias de ET después de la inserción ............................................... 71 38 Interfaz de instancias de ET Aplicación de Ofimática ........................................ 72 39 Resultado de ejemplo de ver detalles de instancia de ET ................................... 73 40 Interfaz ejemplo de detalles de una instancia de ET ........................................... 73 41 Interfaz de ejemplo de edición de instancia de ET (instancia a modificar) ........ 74 42 Interfaz de ejemplo de modificación de instancia de ET .................................... 74 43 Interfaz ejemplo de modificación de instancia de ET exitosa ............................. 76 44 Interfaz resultado de instancia modificada en lista de ET ................................... 76 45 Interfaz ejemplo de instancia seleccionada a eliminar ........................................ 77 46 Interfaz de confirmación para eliminar instancia de ET ..................................... 77 47 Interfaz mensaje de instancia de ET utilizada por otra de ST ............................. 78 48 Interfaz de ejemplo de instancia eliminada satisfactoriamente ........................... 79 49 Interfaz exportar ontología .................................................................................. 79 50 Interfaz exportar ontología a owl ........................................................................ 80 51 Extracto de archivo owl exportado con Sigecost ................................................ 81 52 Resultado de buscar incidencia de ST en la ontología ........................................ 82 ix 53 Interfaz de ejemplo de patrón de solución a incidente de ST en formato pdf ..... 83 54 Interfaz de inicio-Consulta de Incidencia de ST ............................................... 115 55 Resultado de ejemplo de consulta de incidencia de ST .................................... 116 56 Interfaz de ejemplo de consulta de incidencia de ST ........................................ 116 57 Resultado de ejemplo de consulta de incidencia de ST .................................... 117 58 Interfaz ejemplo de consulta de incidencia de ST ............................................. 118 59 Interfaz ejemplo de solución a incidente de ST ................................................ 118 60 Interfaz exportar a PDF solución a incidente de ST.......................................... 119 61 Interfaz Ejemplo de solución a incidente de ST en PDF................................... 119 62 Interfaz inicio-Administración de incidencias de ST ........................................ 120 63 Interfaz Administración de instancias de incidencias de ST ............................. 121 64 Interfaz Formulario de inserción de instancia de incidencia de ST .................. 122 65 Interfaz, ejemplo de llenado de patrón de solución .......................................... 123 66 Interfaz instancia de incidencia de ST agregada ............................................... 124 67 Interfaz consulta de Instancias de a incidencias de instalación de aplicación de ofimática. ........................................................................................................... 125 68 Resultado de consulta a ejemplo de: total de elementos de ST ......................... 126 69 Resultado de consulta de detalles de instancias de ST en instalación de aplicación ofimática .......................................................................................... 127 70 Resultado de consulta: detalles de la incidencia de ST de la instancia instalación de aplicación de ofimática, editor de presentaciones Libreoffice 3.3.1 en Canaima 3.1 ....................................................................................................... 128 71 Interfaz del patrón de solución a la incidencia: instalación de aplicación de ofimática del editor de presentaciones Libreoffice 3.3.1 en sistema operativo Canaima3.1 ........................................................................................................ 129 72 Interfaz Modificar instancia de ST de aplicación ofimática ............................. 130 73 Interfaz resultado de ejemplo en modificación de incidencia de ST ................. 132 74 Interfaz de ejemplo de eliminación de instancia de incidencia de ST en aplicación ofimática. ......................................................................................... 133 75 Interfaz Administración de usuarios ................................................................. 134 76 Interfaz detalles de usuarios del sistema ........................................................... 135 x 77 Interfaz de formulario de ingreso de nuevo usuario .......................................... 135 78 Interfaz 1 para administrar usuarios de Sigecost ............................................... 136 79 Interfaz 2 de administración de usuarios de Sigecost ....................................... 137 80 Interfaz detalles de usuario ................................................................................ 137 81 Interfaz ejemplo de un formulario para modificar datos de usuario ................. 138 82 Interfaz ejemplo de actualización de datos de usuario ...................................... 139 83 Interfaz usuario actualizado .............................................................................. 140 84 Interfaz administrar Mi cuenta .......................................................................... 140 85 Interfaz formulario para actualizar datos a través de la operación Mi cuenta ... 141 86 Interfaz datos actualizados a través de la opción Mi cuenta ............................. 141 xi LISTA DE TABLAS TABLA 1 Actividad de especificación para la ontología de Soporte Técnico .................... 29 2 Acrónimos y sinónimos incorporados al glosario de términos ........................... 30 3 Fragmento de tabla de instancias agregadas a la ontología .............................. 31 4 Evaluación del vocabulario de la ontología ....................................................... 34 5 Caso de Uso: Consultar incidencia de soporte técnico y su solución tecnológica ......................................................................................................... 40 6 Caso de Uso: Buscar solución tecnológica ........................................................ 41 7 Caso de Uso: Administrar elemento tecnológico ................................................ 42 8 Caso de Uso: Insertar instancia de elemento tecnológico .................................. 42 9 Caso de Uso: Modificar instancia de elemento tecnológico............................... 43 10 Caso de Uso: Eliminar instancia de elemento tecnológico ................................ 45 11 Caso de Uso:Administrar incidencia de soporte técnico y su solución tecnológica .......................................................................................................... 46 12 Caso de Uso: Insertar incidencia de soporte técnico y/o solución tecnológica . 47 13 Caso de Uso: Modificar solución tecnológica de una incidencia de soporte técnico ................................................................................................................. 48 14 Caso de Uso: Eliminar incidencia de soporte técnico y su solución tecnológica .......................................................................................................... 49 15 Caso de Uso: Exportar la ontología ................................................................... 50 16 Caso de Uso: Administrar cuenta ....................................................................... 51 17 Caso de Uso: Consultar usuarios ....................................................................... 52 18 Caso de Uso: Administrar usuarios .................................................................... 52 19 Caso de Uso: Insertar usuario ........................................................................... 53 20 Caso de Uso: Modificar usuario ......................................................................... 53 21 Resultados de las pruebas de validación tipo alfa realizadas en 4 Infocentros . 90 22 Resultados de las pruebas de validación tipo alfa, para la consulta de patronesde solución tecnológica, realizada por el experto de conocimiento ..... 91 xii 23 Resultados de las pruebas de validación tipo alfa, para la administración de elementos tecnológicos, realizada por el experto de conocimiento .................... 92 24 Resultados de las pruebas de validación tipo alfa, para la administración de incidencias de soporte técnico, realizada por el experto de conocimiento ........ 92 25 Resultados de las pruebas de validación tipo alfa, para exportar la ontología, realizada por el experto de conocimiento ........................................................... 93 26 Resultados de las pruebas de validación tipo alfa, para la administración de los usuarios, realizada por el experto de conocimiento ........................................... 93 2 INTRODUCCIÓN Actualmente en Venezuela, existe una cantidad importante de Infocentros que se encuentran distribuidos a nivel nacional en diferentes espacios públicos. Los Infocentros, son un tipo de centro tecnológico comunitario de uso masivo y gratuito, que comúnmente se encuentran conformados por un definido número de computadoras (en su mayoría no más de diez), y otros elementos tecnológicos, tales como impresoras y escáneres, para dar un valor agregado a los servicios que en ellos se prestan. Estos centros tecnológicos, propician la apropiación de las tecnologías de información y comunicación (TIC), por parte de las comunidades. Debido a su continúo funcionamiento y al desgaste natural de sus componentes, los equipos tecnológicos con que cuentan los Infocentros, con frecuencia suelen presentar fallas o incidencias tecnológicas, para solventarlas, existe un personal capacitado de soporte técnico. Sin embargo, se presentan inconvenientes de logística en este proceso, entre los que se incluyen: los altos costos para la contratación de este personal, la disponibilidad de mecanismos para socializar el conocimiento de los elementos tecnológicos que forman parte de los Infocentros, y de cómo se realiza el soporte y mantenimiento por parte de las personas encargadas de estas labores. Para dar respuesta a estos inconvenientes, Ghanem, Núñez, y Ramos (2014), desarrollaron un sistema de gestión de conocimiento, basado en el uso de ontologías y patrones de solución, denominado SIGECOST. A través de este sistema se puede navegar sobre la información relacionada con los elementos tecnológicos que se encuentran en los Infocentros, y las incidencias que pueden ocurrir sobre éstos, así como administrar el almacenamiento y recuperación de patrones de solución de soporte técnico sobre dichas incidencias. Actualmente, el sistema solo permite consultar los patrones de solución para las incidencias tecnológicas en el proceso de instalación de impresoras. No obstante, este sistema presenta algunas carencias, tales como las soluciones tecnológicas a otras incidencias frecuentes, como por ejemplo, la instalación de aplicaciones de programas, el cierre inesperado de aplicaciones, las impresiones 3 manchadas, etc., facilidades para actualizar la ontología que permitan la inserción, modificación y eliminación de los elementos tecnológicos y de las incidencias de los Infocentros, y de sencillez en el proceso de búsquedas de soluciones tecnológicas. El objetivo del presente trabajo está orientado a ampliar las funcionalidades del SIGECOST mediante la incorporación de procesos que permitan la búsqueda, recuperación y actualización de soluciones de soporte técnico. Para llevar a cabo este objetivo, se plantea: (a) incorporar un módulo de administración de ontologías, (b) desarrollar un módulo de búsquedas semánticas para la carga y visualización de los elementos de la ontología y las soluciones de soporte técnico, (c) ampliar la base de patrones que proporcionen soluciones a otro tipo de incidencias, (d) actualizar la interfaz del sistema, (e) realizar las pruebas necesarias en algunos Infocentros, para verificar el correcto funcionamiento del sistema y su aceptación por parte de los facilitadores. El siguiente documento se encuentra estructurado de la siguiente forma: en el Capítulo I, se describe el contexto del problema, los antecedentes, los objetivos, la solución propuesta y los aportes de la investigación. Los conceptos y metodologías vinculados al paradigma de gestión del conocimiento y al desarrollo de ontologías, son presentados en el Capítulo II. En el Capítulo III, se describen los repositorios utilizados y el subsistema de la solución. Para luego, en el Capítulo IV, detallar el modelado y desarrollo de la aplicación Web, las consultas para acceder y recuperar información desde la ontología, las interfaces de la aplicación, las tecnologías utilizadas en el desarrollo de la solución. En este capítulo también se exponen las pruebas y resultados de aceptación y funcionamiento del sistema. Por último, se presentan las conclusiones y recomendaciones, además de las referencias bibliográficas impresas y digitales consultadas durante el desarrollo de este trabajo de investigación. 4 CAPÍTULO I CONTEXTO, PLANTEAMIENTO DEL PROBLEMA Y OBJETIVOS En este capítulo se detalla el contexto del trabajo de investigación, asociado a los Infocentros del país, y su problemática con las actividades de soporte técnico. Se presentan los antecedentes que abordan este tipo de contexto, y en base a ellos se propone una solución, que implica la actualización y mejoramiento de un sistema basado en la gestión del conocimiento utilizando ontologías. Luego, se definen los objetivos y se explican los aportes de la solución propuesta. I.1 Los Infocentros de Venezuela Los Infocentros de Venezuela, son un tipo de centro tecnológico comunitario que se caracterizan por propiciar la realización de procesos formativos y de apropiación de las Tecnologías de Información y Comunicación (TIC) por los sectores populares. Los Infocentros se concentran en fortalecer el desarrollo de las potencialidades locales, las redes sociales, la construcción colectiva, la transferencia de saberes y conocimiento, las relaciones de colaboración y de coordinación y la comunicación popular. (Fundación Infocentro, 2008). A la fecha, existen en el país la cantidad de 897 Infocentros, distribuidos a nivel nacional en diferentes espacios públicos, con especial énfasis en zonas rurales y populares. Están conformados, con equipos de computación, a través de los cuales se prestan una variedad de servicios a las comunidades, entre los que se encuentra el acceso gratuito a Internet. Estos centros tecnológicos brindan desde formación socio- tecnológica hasta el impulso de proyectos comunales para el avance y desarrollo de las comunidades, permitiendo a las mismas la apropiarse de las TIC. La gestión de cada uno de los Infocentros es realizada por los facilitadores. “El facilitador es el guía e impulsor de las actividades que se desarrollan conjuntamente con las comunidades y entre sus funciones se encuentran las propias e inherentes al funcionamiento del Infocentro referente a la plataforma tecnológica, así como aquellas 5 que contribuyan a hacer del centro, un espacio que ofrezca a la comunidad las herramientas tecnológicas para el desarrollo de actividades que potencien el mejoramiento y fortalecimiento de su calidad de vida en la localidad”. I.2 Soporte técnico en los Infocentros Como se mencionó con anterioridad, los Infocentros están conformados por un conjunto de equipos tecnológicos que con frecuencia presentan fallas; y debido a que la gran mayoría de los facilitadores no cuentan con el conocimiento requerido para resolverlas, se contratan personas bajo la figura de soporte técnico, las cuales poseen habilidades y destrezas en el área de informática para solucionar estas incidencias tecnológicas. Sin embargo, acontecen algunos inconvenientes entre los que se pueden destacar:  El alto costo que representa la contratación de personas para el ejercicio de soporte técnico y su movilización, dado que, los Infocentros en la mayoría de los casos se encuentran geográficamente distantes y en zonas de difícil acceso, lo que trae como consecuencia que transcurran largos períodos de tiempo para que éstos sean atendidos tecnológicamente.  No se dispone de mecanismos para socializar el conocimiento de los elementos tecnológicos que forman parte de los Infocentros, ni de cómo se realiza su soporte y mantenimiento por las personas que los gestionan activamente (facilitadores y miembros de la comunidad).  Existen diversos niveles de competencia para la realización de las tareas de soporte técnico de acuerdo a la complejidad del problema, lo que limita socializar, en una primera etapa, el soporte y mantenimiento tecnológico básico. Para dar solución a algunos de estos inconvenientes, Ghanem, Núñez, & Ramos (2014), desarrollaron un prototipo de sistema de gestión de conocimiento (SIGECOST), 6 el cual permitió apoyar las actividades de soporte técnico en los Infocentros del país. Este sistema, se encuentra es fase de producción (en uso) en la Fundación Infocentro. SIGECOST da respuesta a un conjunto de requerimientos funcionales, a saber: (a) consultar los elementos tecnológicos presentes en los Infocentros, (b) consultar las distintas opciones de soporte técnico presentes en los Infocentros, (c) recuperar los patrones de soporte técnico en instalación de impresoras y los ambientes tecnológicos donde éstas ocurran, y (d) administrar los patrones de soporte técnico. SIGECOST se encuentra apoyado en el uso de ontologías y patrones de soporte técnico, como herramientas para organizar, almacenar y administrar el conocimiento. La ontología almacena de manera estructurada y organizada los conceptos y relaciones que se utilizan cotidianamente en el entorno de soporte técnico en los Infocentros, y “dirige la búsqueda y recuperación de conocimiento a una base de patrones que contiene las soluciones de soporte técnico a los incidentes que comúnmente se presentan en los Infocentros”. Dichas soluciones, están representadas a través de un esquema basado en patrones, definidos a partir de la concepción de la representación: contexto, problema y solución, donde, los patrones de solución de soporte técnico, están constituidos por actividades que realiza el personal de soporte técnico para dar solución a fallas que presentan los elementos tecnológicos de los Infocentros, estos elementos pueden ser de tipo software tales como aplicaciones de programa o tipo hardware como equipos de computación. Arquitectónicamente SIGECOST, se fundamenta en una adaptación del modelo para la gestión del conocimiento propuesta por (Kerschberg, 2001), la cual permite la consulta de los elementos tecnológicos modelados en la ontología, así como también la recuperación de los patrones de soluciones a diversos problemas tecnológicos. Además, la utilización de este modelo permite organizar de manera estructurada los componentes que conforman el sistema de gestión de conocimiento. 7 El conocimiento presente en la ontología permite guiar al usuario acerca de cuál patrón de soporte técnico recuperar para la solución efectiva de algún incidente tecnológico. La taxonomía de elementos tecnológicos presentes en los Infocentros se visualiza en la Figura 1, así mismo, los tipos de soporte técnico asociados a los elementos tecnológicos, se muestra en la Figura 2. Figura 1. Taxonomía de los Elementos Tecnológicos de los Infocentros. (Ghanem, Núñez & Ramos, 2014) 8 Figura 2. Taxonomía de Soporte Técnico en los Infocentros. (Ghanem, Núñez & Ramos, 2014) Sin embargo, esta solución presenta algunas carencias, ya que en ella, sólo se encuentran implementadas las soluciones de soporte técnico para los problemas frecuentes que se manifiestan en el proceso de instalación de impresoras. Por lo que sería necesario complementar el sistema, extendiendo la base de patrones mediante la incorporación de soluciones a incidencias de otros elementos tecnológicos, que se presentan con cierta frecuencia y que requieren soporte técnico, tales como, aplicaciones de programas. De igual forma, es preciso agregar al sistema un módulo de administración de ontologías, que le permita adaptarse a la dinámica de los elementos tecnológicos dentro de los Infocentros; así como un módulo que facilite el proceso de búsquedas de soluciones tecnológicas. I.3 Antecedentes A continuación se describen un conjunto de desarrollos de aplicaciones, que automatizan la gestión de conocimiento, en contextos tales como, la resolución de incidencias tecnológicas de soportes técnicos y similares. Rojas y Sánchez (2009), desarrollaron una ontología para el modelado del dominio en el contexto del servicio de soporte en tecnologías de información. La ontología es 9 utilizada como base de conocimiento en una arquitectura de gestión, que permite mejorar los servicios de soporte técnico de la organización objeto de estudio. En el mismo orden de ideas, Vizcaíno, Soto, García, Ruiz y Piattini (2006), plantean la implementación de un sistema de gestión de conocimiento basado en una ontología como mecanismo de representación del conocimiento, a través del cual se definen los conceptos involucrados en el mantenimiento de software, con el fin de potenciar su reutilización para que los ingenieros de mantenimiento puedan aprovechar la experiencia y lecciones aprendidas de otros trabajos. Similar al anterior, en Ruiz y Dolado (2008), presentan una ontología para la gestión de conocimiento de proyectos de software. Dicha ontología representa un modelo formal de los procesos, actividades, herramientas y técnicas específicas de la gestión de proyectos. De esta manera, la ontología proporciona una descripción completa de los términos fundamentales y características inherentes al manejo de la información, asociada a la gestión, seguimiento, control y dirección de los proyectos, así como de los procesos, relaciones, restricciones y aserciones sobre los datos de proyectos. Así mismo, Caro, Jiménez y Toscano (2011), plantean una arquitectura para un sistema informático de gestión del conocimiento, para apoyar el proceso de investigación formativa, mediante la captura, almacenamiento e integración del conocimiento de los expertos evaluadores y el conocimiento generado por estudiantes e investigadores, durante la realización de sus trabajos de investigación. Para las consultas de éstos últimos, se utiliza una ontología tipo tesauro, que a su vez contiene un micro- tesauro por cada trabajo de investigación asociado a un macro-tesauro, que permite realizar una búsqueda semántica y como resultado muestra a los usuarios los términos, conceptos y teoría de cada trabajo. I.4 Solución Propuesta Considerando las carencias presentes en el sistema SIGECOST, en su propósito de ayudar a solucionar la problemática presente en las actividades de soporte técnico en los 10 Infocentros, en este trabajo se propone el desarrollo de un conjunto de módulos que agreguen las siguientes funcionalidades o procesos a dicho sistema:  Incorporar a la base de soluciones de soporte técnico, la resolución de problemas presentes en las impresoras, tales como: (a) desatascar papel, (b) reparar impresión corrida y (c) corregir impresión manchada.  Incorporar a la base de soluciones de soporte técnico, la resolución de problemas en aplicaciones de programa, específicamente en instalación de aplicaciones de ofimática. En el anexo A, se visualiza la justificación de la elección de este elemento tecnológico.  Desarrollar el módulo de administración de ontologías, que permita insertar, modificar y eliminar instancias a la ontología. Lo cual, posibilita la incorporación y/o desincorporación de los elementos tecnológicos de los Infocentros.  Desarrollar un módulo de búsquedas semánticas, que permita a través de una o más palabras claves, encontrar un patrón de solución de soporte técnico para una incidencia presentada. La Figura 3 muestra gráficamente la solución propuesta para el sistema SIGECOST. Figura 3. Esquema general propuesta para SIGECOST 11 La propuesta en este trabajo se centra principalmente en dos de estos módulos:  Módulo de administración de ontología: que permita dinámicamente crear, modificar y eliminar las instancias.  Módulo de asistencia tecnológica: que permita realizar búsquedas semánticas a través de palabras claves. I.5 Objetivos En base a la solución propuesta, y con la finalidad de contribuir y mejorar el desenvolvimiento de las actividades de soporte técnico en los Infocentros del país, se definen los siguientes objetivos, general y específicos. I.5.1 Objetivo General Desarrollar funcionalidades adicionales para un sistema de gestión de conocimiento con enfoque ontológico basado en la Web, denominado SIGECOST, que permitan la búsqueda, recuperación y actualización de las soluciones de incidencias de soporte técnico de los Infocentros del país. I.5.2 Objetivos Específicos a) Migrar la ontología desde el lenguaje RDF al lenguaje OWL. b) Ampliar la base de patrones del SIGECOST para que proporcionen soluciones a otro tipo de incidencias; tales como: i) Incidencias en la resolución de problemas con los equipos de reproducción (impresoras). ii) Incidencias en instalación de programas de ofimática. c) Identificar los requerimientos funcionales para la creación del módulo de administración de ontologías. d) Incorporar al SIGECOST un módulo de administración de ontologías, que permita insertar, modificar y eliminar instancias a la ontología. 12 e) Incorporar al SIGECOST un módulo de búsquedas semánticas, que permita la recuperación de las soluciones tecnológicas, a partir de una o más palabras claves. f) Actualizar la interfaz del Sistema SIGECOST. g) Realizar las pruebas necesarias en algunos Infocentros, para verificar el correcto funcionamiento del sistema y su aceptación. I.6 Aportes de la solución propuesta Se espera que la solución propuesta permita conseguir lo siguiente:  Permitir a los facilitadores y personas encargadas del Infocentro, resolver incidencias de soporte técnico, haciendo uso de las soluciones almacenadas en el repositorio de soluciones de soporte técnico, evitando largos tiempos de espera por el personal de soporte técnico, además de reducir los costos de traslado del personal técnico para realizar tareas sencillas que pueden realizar los facilitadores.  Contar con una mayor cantidad de elementos tecnológicos en buen funcionamiento disponibles para la comunidad, y poder hacer de los Infocentros, espacios que ofrezcan a la comunidad las herramientas tecnológicas en buenas condiciones para su uso.  Disponer de mecanismos para socializar el conocimiento de los elementos tecnológicos que forman parte de los Infocentros, y de cómo se realiza su soporte y mantenimiento.  Extender y mejorar algunas funcionalidades de SIGECOST, como la incorporación de búsquedas semánticas, que faciliten el proceso de recuperación de soluciones tecnológicas; y la incorporación de un administrador de sistema que permita, (a) agregar nuevos patrones de soporte técnico y nuevos elementos tecnológicos a los Infocentros, (b) desincorporar 13 patrones de soporte técnico sub-utilizados y elementos tecnológicos obsoletos de los Infocentros. 14 CAPÍTULO II GESTIÓN DE CONOCIMIENTO CON ENFOQUE ONTOLÓGICO En este capítulo se presenta la disciplina de gestión del conocimiento y algunos de los modelos más utilizados para su correcta implementación. Además, se exponen las tecnologías utilizadas en la gestión del conocimiento, detallando especialmente el uso de las ontologías y el lenguaje de consulta, SPARQL. II.1 La Gestión del Conocimiento Actualmente, las organizaciones dan por sentado que su activo más importante es el conocimiento, y que al aplicarlo correctamente se agrega valor a las cosas o áreas donde es usado, alcanzando mayor crecimiento y capacidad. Surge así la necesidad de saber qué hacer con este conocimiento, cómo ponerlo en práctica, cómo implantarlo y administrarlo, de manera tal que cumpla con los objetivos organizacionales. Esta es una de las razones por las cuales cada vez más, las organizaciones recurren a la disciplina denominada Gestión de Conocimiento (GC), ya que esta les asegura la protección de este importante recurso, garantiza su adecuado acceso y recuperación además de su persistencia en el tiempo. Esta disciplina ha motivado a muchos autores a exponer variadas definiciones, como Arvind y Srinivas (2010), que consideran que la GC consiste en la administración explícita y sistemática vital para el conocimiento, asociando los procesos de creación, recolección, organización, difusión, uso y explotación, en el logro de los objetivos organizacionales. Para Giner (2004), es el conjunto de procesos que logran capturar, almacenar, distribuir, compartir y preservar objetos de “saber hacer” creados en las organizaciones, con el objetivo de generar nuevos saberes y fomentar el aprendizaje empresarial. En (Abecker y van Elst, 2009), la GC se considera una actividad de administración sistemática, que contempla el conocimiento implícito y explícito como un recurso estratégico de las organizaciones, y cuyo objetivo es mejorar su manipulación a nivel de individuos, grupos, organización e inter-organización. 15 Es así como la GC pone a disposición de los integrantes de una organización de manera ordenada, práctica y eficaz, la totalidad de los conocimientos tácitos y explícitos de sus miembros; que puedan ser útiles para su mejor funcionamiento (Del Moral, Pazos, Rodríguez, Rodríguez-Patón y Suárez, 2007). Los objetivos que se pretenden alcanzar al gestionar conocimiento son, entre otros:  Crear un repositorio de conocimiento.  Mejorar el acceso al conocimiento.  Propiciar un ambiente de intercambio de conocimiento.  Administrar el conocimiento como un activo.  Facilitar la creación de nuevo conocimiento. II.2 Modelos de Gestión del Conocimiento Para desarrollar sistemas que posibiliten la (GC), es fundamental disponer de una adecuada infraestructura, la cual es generalmente proporcionada por un modelo de gestión. Los modelos de GC constituyen una herramienta para representar el conocimiento de forma simplificada, resumida y simbólica, permitiendo delimitar alguna de sus dimensiones, describir procesos y estructuras, orientar estrategias y aportar datos importantes. Son variadas las orientaciones y enfoques acerca de la naturaleza de los modelos existentes, debido a la interdisciplinaridad que caracteriza el proceso de gestión de conocimiento. Existen diferentes taxonomías de clasificación de modelos. Las taxonomías en cuestión contemplan modelos con enfoques: (a) conceptuales, teóricos y filosóficos, (b) cognitivos, (c) redes sociales y de trabajo, (d) científicos-tecnológicas, (e) holísticos, (f) socioculturales, (g) almacenamiento; entre otros. Resultan de especial interés en este trabajo, los modelos científico-tecnológicos los cuales incorporan las tecnologías de información para facilitar el uso y aplicación del 16 conocimiento. Estos modelos desarrollan y utilizan data warehouse (almacén de datos), internet, sistemas expertos y de información, motores de búsqueda, herramientas multimedia y de toma de decisiones, ontologías; entre otras tecnologías, y se orientan a promover la investigación y el crecimiento en las organizaciones (Barragán, 2009). Un modelo de GC tecnológico caracterizado por integrar servicios y fuentes de datos heterogéneas, es propuesto en (Kerschberg, 2001). El modelo está organizado en tres capas que apoyan los procesos y herramientas para adquirir, refinar, almacenar, diseminar, presentar e intercambiar conocimiento. En la Figura 4, se observa la organización en capas del modelo, así como los diferentes tipos de fuentes de datos que pueden ser utilizados. Figura 4. Arquitectura para la gestión del conocimiento (Kerschberg, 2001) Este modelo presenta un alto nivel de integración entre los componentes de cada una de las capas, lo que permite trabajar con estándares y lenguajes comunes y provee 17 un alto nivel de comunicación entre los usuarios, lo que posibilita el dinamismo y la funcionalidad (Soto y Barrios, 2006). II.3 Tecnologías de Información para Gestionar Conocimiento Son variadas las tecnologías de información usadas en las organizaciones, que posibilitan la transferencia y difusión del conocimiento entre sus miembros, las cuales van desde aplicaciones de software tradicionales (grupos de discusión, intranet, correo electrónico, tormenta de ideas, mapas mentales, etc.) hasta aplicaciones inteligentes (minería de datos, sistemas basados en conocimiento, memorias organizacionales, lecciones aprendidas, herramientas de adquisición de conocimiento, ontologías, entre otros). Actualmente, las ontologías son la tecnología más extendida para representar conocimiento en Inteligencia Artificial (IA), porque proporcionan una representación estructural y formal del conocimiento, y estas representaciones ontológicas son compartibles y reutilizables. II.3.1 Ontologías El término ontología tiene su origen en la filosofía, disciplina que trata de dar una explicación sistemática de la existencia; proviene de la conjunción de los términos griegos “ontos” y “logos” que significan existencia y estudio, respectivamente. En la última década, este término ha ganado relevancia entre los Ingenieros de Conocimiento tomando una interpretación particular; y es por ello que, en 1995, Guariano y Giaretta proponen utilizar la palabra “Ontología” para referirse a ella en el contexto de la Ingeniería del Conocimiento. (Flores, 2011). En la IA, disciplina que trata sobre cómo lograr que las computadoras realicen tareas que, por el momento, los humanos hacen mejor, la definición de ontología ampliamente aceptada es la de Gruber (1993): “una ontología es una especificación explicita y formal de una conceptualización”, es decir, una ontología modela los 18 distintos conceptos relevantes de algún fenómeno de forma explícita y se representa por medio de un lenguaje formalizado, así mismo debe ser compartida y aceptada como mínimo por el grupo de personas que deben usarla. Resulta de especial interés el uso de las ontologías en la GC, debido a que éstas pueden funcionar como un marco para la unificación de diferentes puntos de vista del conocimiento y servir como base para (Uschold y Gruninger, 1996):  La comunicación entre personas con diferentes necesidades, que compartan un área de conocimiento.  Facilitar la interoperabilidad entre sistemas, la cual se alcanza por la traducción entre diferentes modelos, métodos, paradigmas, lenguajes y herramientas de software.  La reutilización del software (base para la codificación de entidades, atributos, procesos, etc.), realizar chequeos de consistencia (fiabilidad del software), adquirir conocimiento (punto de partida en la construcción de sistemas basados en conocimiento) y para la especificación de requerimientos. Con las ontologías se intenta expresar un esquema conceptual exhaustivo y riguroso de un dominio particular, con la finalidad de facilitar la comunicación y reutilización de conocimiento e información entre los miembros de las organizaciones, computadores y humanos. Una ontología define un vocabulario común que incluye, además, la interpretación de los conceptos básicos del dominio y sus relaciones. Noy y McGuinness (2001), plantean que las ontologías tienen como objetivos principales los siguientes:  Compartir la compresión común de la estructura de información entre personas o agentes de software, lo que debe revertirse de forma positiva y casi necesaria en la extracción y recuperación de información, por ejemplo en páginas Web de contenidos conectados temáticamente.  Permitir la reutilización del conocimiento perteneciente a un dominio. 19  Hacer explícitos los supuestos de un dominio.  Hacer posible el análisis del conocimiento de un campo, en lo que se refiere al estudio de los términos y relaciones que lo integran ya sea formalmente o no. II.3.2 Componentes de las Ontologías Los componentes de una ontología varían de acuerdo al dominio de interés y a las necesidades de los ingenieros ontológicos. Los elementos básicos que componen una ontología son los siguientes (Lozano-Tello, 2002):  Clases: son las ideas a formalizar y representan los conceptos en el sentido más amplio. Son la base de la descripción del conocimiento en las ontologías, se usan para describir los conceptos del dominio, pueden ser clases de objetos, métodos, planes, estrategias, procesos de razonamiento, entre otros. Por lo general, las clases se organizan en jerarquías o taxonomías.  Relaciones: usadas para expresar las interacciones entre los conceptos del dominio.  Funciones: son un tipo concreto de relación donde se identifica un elemento mediante el cálculo de una función.  Instancias: representan objetos (individuos o ejemplos) determinados de un concepto.  Taxonomía: conjunto de conceptos organizados jerárquicamente.  Axiomas: usados para modelar sentencias que son siempre ciertas, éstos permiten, junto con la herencia de conceptos, inferir conocimiento que no esté indicado explícitamente en la taxonomía de conceptos. 20  Propiedades (Slots): características o atributos que describen a los conceptos. Para un concepto dado, las propiedades y las restricciones sobre estos son heredadas por las subclases y las instancias de la clase. II.3.3 Proceso de Desarrollo de Ontologías En líneas generales, el proceso de construcción de ontologías no difiere del usado para construir software tradicional. Las ontologías, como productos de software, deben ser desarrolladas siguiendo los estándares establecidos para esto, por supuesto, adaptados a las características de las ontologías. Entre las metodologías existentes, se tienen las propuestas iniciales de Uschold y King (1995) y la de Grüninger y Fox (1995), que fueron la base de posteriores planteamientos metodológicos. Destacan de manera particular, aquellas metodologías cuyo ciclo de vida se basan en el desarrollo de prototipos, ya que este modelo permite realizar actualizaciones en cualquier momento de la construcción y de acuerdo a las necesidades que surjan se encuentran en este grupo On-To-Knowledge (Sure y Studer, 2003) y Methontology (Gómez-Pérez, Fernández-López y Corcho, 2004). II.3.4 Metodología Methontology La metodología Methontology, permite la construcción de ontologías a nivel de conocimiento e incluye la identificación del proceso de desarrollo, un ciclo de vida basado en el desarrollo de prototipos y técnicas particulares para realizar cada actividad. Tiene sus raíces en las actividades identificadas por el Instituto de Ingeniería Eléctrica y Electrónica (IEEE) para el proceso de desarrollo de software y ha sido propuesta para la construcción de ontologías por la FIPA (Corcho, Fernández-López, Gómez-Pérez y López, 2005). Methontology plantea un ciclo de vida basado en la evolución de prototipos que permite a los ingenieros ontológicos añadir, cambiar y eliminar términos en cada nueva 21 versión (prototipo). Las actividades de desarrollo identificadas para Methontology son las siguientes:  Especificación: Realizar un documento donde se señale el alcance, objetivos, propósito, nivel de formalidad y usuarios finales de la ontología.  Conceptualización: Consiste en organizar y convertir una percepción informal de un dominio en una especificación semi-formal usando un conjunto de representaciones intermedias (tablas, diagramas) que puedan ser entendidas por los expertos del dominio y los desarrolladores de ontologías. Las tareas de conceptualización en Methontology son: (ver Figura 5): Figura 5. Tareas de conceptualización de Methontology (Corcho, Fernández-López, Gómez-Pérez y López, 2005) o Tarea 1: Construir el glosario de términos: crear un conjunto de los términos relevantes del dominio, las descripciones en lenguaje natural, sinónimos y acrónimos. o Tarea 2: Construir la taxonomía de conceptos: definir la jerarquía entre los conceptos del glosario de términos. Tarea 1 Construir glosario de términos Tarea 2 Construir taxonomía de conceptos Tarea 3 Construir diagrama de relaciones binarias Tarea 4 Construir diccionario de conceptos Tarea 11 Definir instancias Tarea 6 Definir atributos de instancias en detalle Tarea 5 Definir relaciones binarias en detalle Tarea 7 Definir atributos de clases en detalle Tarea 8 Definir constantes en detalle Tarea 9 Definir axiomas formales Tarea 10 Definir reglas Tarea 1 Construir glosario de términos Tarea 2 Construir taxonomía de conceptos Tarea 3 Construir diagrama de relaciones binarias Tarea 4 Construir diccionario de conceptos Tarea 11 Definir instancias Tarea 6 Definir atributos de instancias en detalle Tarea 5 Definir relaciones binarias en detalle Tarea 7 Definir atributos de clases en detalle Tarea 8 Definir constantes en detalle Tarea 9 Definir axiomas formales Tarea 10 Definir reglas 22 o Tarea 3: Construir un diagrama de relaciones binarias: generar un diagrama en el que se establezcan las relaciones entre los conceptos de una o más taxonomías de conceptos. o Tarea 4: Construir el diccionario de conceptos: crear un glosario que incluya los conceptos del dominio, relaciones, instancias, atributos de clases y atributos de instancias. o Tarea 5: Definir las relaciones binarias en detalle: crear una tabla que describe detalladamente las relaciones binarias incluidas en el diccionario de conceptos. o Tarea 6: Definir los atributos de instancia en detalle: describir detalladamente todos los atributos de las instancias incluidas en el diccionario de conceptos. o Tarea 7: Definir los atributos de clases en detalle: crear una tabla en la que se describen de manera precisa todos los atributos de clases incluidos en el diccionario de conceptos. o Tarea 8: Definir las constantes en detalle: crear una tabla en la que se describe detalladamente cada una de las constantes definidas en el glosario de términos. o Tarea 9: Definir los axiomas formales: identificar los axiomas formales necesarios en la ontología y describirlos con precisión en una tabla. o Tarea 10: Definir las reglas: identificar cuáles reglas son necesarias en la ontología y describirlas en una tabla de reglas. o Tarea 11: Definir las instancias: una vez creado el modelo conceptual de la ontología, se definen en una tabla las instancias relevantes que aparecen en el diccionario de conceptos. 23  Formalización: Realizar la transformación del modelo conceptual en un modelo formal o semi-computable.  Implementación: Codificar la ontología utilizando un lenguaje formal (Ontolingua, XOL, OIL, DAML, OWL, entre otros).  Mantenimiento: Esta actividad permite la actualización y corrección de la ontología. II.3.5 Lenguajes que se utilizan para desarrollar ontologías Los lenguajes de codificación de ontologías, permiten representar las ontologías y posibilitan la utilización de las mismas por parte de entes computarizados. Es importante conocer los diferentes lenguajes que existen y cuáles son los ámbitos de aplicación de cada uno de ellos, para poder usar el que mejor se adapte a nuestras necesidades. Flores (2011), menciona “entre los lenguajes para representar ontologías existen XML, RDF, OIL, DAML + OIL y OWL, de los cuales el W3C1 recomienda RDF y OWL”. OWL (Web Ontology Language) o lenguaje de ontologías para la Web: Es un lenguaje de etiquetado semántico para publicar y compartir ontologías en la Web. Se trata de una recomendación del W3C, y puede usarse para representar ontologías de forma explícita, es decir, permite definir el significado de términos en vocabularios y las relaciones entre estos términos. Es un lenguaje diseñado para usarse cuando la información contenida en los documentos necesita ser procesada por programas o aplicaciones, en oposición a situaciones donde el contenido solamente necesita ser presentado a los seres humanos (Lamarca, 2013). 1 World Wide Web Consortium http://www.w3.org 24 OWL surge como una revisión al lenguaje DAML-OIL y es mucho más potente que éste. Al igual que OIL, OWL se estructura en capas que difieren en la complejidad y puede ser adaptado a las necesidades de cada usuario, al nivel de expresividad que se precise y a los distintos tipos de aplicaciones existentes (motores de búsqueda, agentes, etc.). OWL fue desarrollado como una extensión del vocabulario de RDF y deriva del lenguaje DAML+OIL (Lamarca, 2013). II.3.6 Lenguajes para consultar ontologías: SPARQL Sus siglas son un acrónimo recursivo del inglés SPARQL Protocol and RDF Query Language. Fue estandarizado por el DAWG2 del W3C. En el marco de la recuperación y organización de la información, Prud’hommeaux y Seaborne (2006), definen SPARQL (Protocol and RDF Query Language), como un lenguaje de recuperación para RDF/RDFS y también para OWL. Esta tecnología de consulta permite que los usuarios puedan centrarse en la información que requieren, sin tener en cuenta la tecnología de base de datos o el formato utilizado para almacenar estos datos. Debido a que las consultas en el lenguaje SPARQL expresan objetivos de alto nivel, es fácil extenderlos a orígenes de datos inesperados, o incluso transferirlos a nuevas aplicaciones. El lenguaje de recuperación SPARQL ha sido diseñado para un uso a escala en la Web, así permite hacer consultas sobre orígenes de datos distribuidos, independientemente del formato. Es más fácil crear una consulta sencilla y recuperar información en una sola consulta a través de diferentes almacenes de datos, que crear múltiples consultas, además de tener un costo menor y de ofrecer mejores resultados. Debido a que SPARQL no está ligado a un formato de base de datos específico, puede ser utilizado para beneficiarse de la Web 2.0 y de la composición de éstos con otros recursos de la Web Semántica en las aplicaciones. La especificación de SPARQL define un lenguaje de consulta y un protocolo, y trabaja con el resto de las tecnologías 2 Data Access Working Group 25 esenciales del W3C de la Web Semántica: Infraestructura de Descripción de Recursos (RDF) para la representación de datos; RDF Schema; Lenguaje de Ontologías Web (OWL) para construcción de vocabularios. 26 CAPÍTULO III DESARROLLO DE LA SOLUCIÓN DE GESTIÓN DE CONOCIMIENTO En este capítulo se detalla la estructura del sistema para la gestión de conocimiento de soporte técnico en los Infocentros, con sus componentes y relaciones. Además, se describen los cambios en las actividades de desarrollo de ontologías, siguiendo la metodología Methontology, necesarias para agregar las nuevas funcionalidades a este sistema. Por último, se explican los repositorios utilizados. III.1 Subsistema de la solución Como se ha dicho, el objetivo de este trabajo es extender y mejorar las funcionalidades del sistema para la gestión de conocimiento de soporte técnico en los Infocentros, desarrollado por Ghanem, Núñez y Ramos (2014). La arquitectura de este sistema se muestra en la Figura 6, la cual se fundamenta en la propuesta de Kerschberg (2001), que permite modelar y organizar de manera estructurada los componentes que lo conforman. Figura 6. Arquitectura del sistema para la gestión de conocimiento de soporte técnico en Infocentros (Ghanem, Núñez y Ramos, 2014) 27 La arquitectura se encuentra constituida por tres capas a saber: 1) Capa de presentación del conocimiento: que dispone de una interfaz Web para la consulta y el acceso a la información. Esta capa será complementada, para que se adapte a las nuevas funcionalidades del sistema. Más información acerca de esta capa será abordada en el Capítulo IV. 2) Capa de administración de conocimiento: a través de ésta el usuario final (facilitadores, y demás miembros de la comunidad) sin tener conocimientos de gestión de conocimiento e inteligencia artificial, puede navegar, realizar consultas de características de los elementos tecnológicos modelados en la ontología, y hacer búsquedas, para solucionar incidentes tecnológicos presentes en los Infocentros, a través de la recuperación de patrones de solución de soporte. Esta capa está conformada por dos módulos funcionales y una ontología: o El módulo de asistencia tecnológica: a través del cual los usuarios podrán realizar consultas de conceptos presentes en la ontología y recuperar patrones de soporte técnico, en este módulo el usuario interactúa con el sistema usándolo de forma explícita (el usuario es consciente, es decir, conoce la existencia de la ontología y puede usar la misma como vocabulario), o implícita (el usuario no es consciente del uso de la ontología y la usa como parte normal de su interacción con el sistema para hacer preguntas o navegar). En este módulo se agregará la funcionalidad de búsquedas semánticas. Donde, el usuario debe proporcionar una o más palabras claves para realizar la búsqueda de patrones de soluciones tecnológicas, y opcionalmente, podrá indicar en qué elementos de la ontología desea realizar la búsqueda, tales como:  Clases de elementos tecnológicos: indica que se pueden buscar coincidencias entre la(s) palabra(s) clave(s) y los valores de nombres, 28 acrónimos, sinónimos y descripciones, definidos en las clases de elementos tecnológicos.  Clases de incidencias de soporte técnico: indica que se pueden buscar coincidencias entre la(s) palabra(s) clave(s) y los valores de nombres, acrónimos, sinónimos y descripciones, definidos en las clases de soporte técnico.  Instancias de elementos tecnológicos: indica que se pueden buscar coincidencias entre la(s) palabra(s) clave(s) y los valores de las propiedades definidas en las instancias de los elementos tecnológicos, tales como los valores de las propiedades de nombre, versión, marca, modelo, etc. o El módulo de administración: permitirá a un usuario que haya iniciado sesión con el rol de “administrador”, realizar operaciones de inserción, modificación y/o eliminación, tanto de soluciones de soporte técnico como de instancias de elementos tecnológicos; así mismo, permitirá exportar la ontología en formato OWL. o La ontología: almacenará y describirá de manera estructurada y organizada los conceptos (y sus relaciones) que se utilizan cotidianamente en el entorno de soporte técnico en los Infocentros, y permitirá guiar al usuario acerca de cuál patrón de soporte técnico recuperar para la solución efectiva de algún incidente tecnológico. 3) Capa de fuente de datos: conformada por soluciones de soporte técnico, que almacena los casos tecnológicos caracterizados por el incidente, el ambiente tecnológico en donde se presenta, los pasos requeridos para solucionarlo e información histórica tal como, autor y fecha de creación. Así, a través de la ontología, se guía la consulta o la búsqueda semántica de soluciones tecnológicas, para obtener un identificador del patrón de solución de soporte 29 técnico necesitado. Luego, con este identificador, se consigue una solución desde el repositorio de soluciones de soporte técnico. En la siguiente sección se detallan los cambios realizados en la ontología, al ampliar la base de patrones del sistema de gestión de conocimiento de soporte técnico de los Infocentros. III.2 Ontología de soporte técnico Entre los objetivos de este trabajo, se encuentra la actualización de las soluciones de soporte técnico. Por lo que, se incorporaron un conjunto de instancias a la ontología, específicamente instancias pertenecientes al elemento tecnológico aplicaciones de programa, lo que conllevó al crecimiento del corpus de la ontología. Debido a que la metodología Methontology plantea un ciclo de vida basado en la evolución de prototipos, que permite añadir, cambiar y eliminar términos en cada nueva versión (prototipo), se hace necesaria la actualización de algunas actividades de desarrollo que propone dicha metodología, entre ellas:  Actividad de especificación: Se actualizaron, el alcance y las preguntas de competencias, quedando de la siguiente manera: Tabla 1 Actividad de especificación para la ontología de Soporte Técnico Nombre ontología Ontología de Soporte Técnico de los Infocentros Propósito Representar, organizar, formalizar, estandarizar y compartir el conocimiento concerniente con los elementos tecnológicos presentes en los Infocentros y del soporte técnico que aplica sobre ellos. Alcance 1. Resolución de problemas frecuentes que requieran soporte técnico del elemento tecnológico equipos de reproducción, específicamente de impresoras. 2. Resolución de problemas frecuentes que requieran soporte técnico del elemento tecnológico aplicaciones de programas, específicamente de aplicaciones de ofimática. Nivel de formalidad Formal Tipo de ontología Ontología de dominio (proporciona el lenguaje necesario para describir el dominio estudiado). 30 Usuarios finales Facilitadores, personal de soporte técnico, miembros de la comunidad que hacen vida en los Infocentros. Fuentes de conocimiento Expertos del dominio (profesionales y docentes), libros y/o manuales especializados, artículos de revistas, guías e Internet. Preguntas de competencia - Conociendo la marca y modelo de una impresora, cuáles son las acciones a ejecutar para solucionar problemas de impresión corrida o distorsionada. - Conociendo la marca y modelo de una impresora, cuáles son las acciones a ejecutar para corregir problemas de impresión manchada. - Conociendo la marca y modelo de una impresora, cuáles son las acciones a ejecutar para desatascar papel. - Conociendo la marca y modelo de una impresora, y el nombre y la versión de un sistema operativo, cuáles son las acciones a ejecutar para instalar la impresora. - Conociendo el nombre y versión de la aplicación de la suite ofimática, y el nombre y versión de un sistema operativo, cuáles son las acciones a ejecutar para instalar la aplicación ofimática. - Conociendo el nombre y versión de la aplicación de la suite ofimática, y el nombre y versión de un sistema operativo, cuáles son las acciones a ejecutar para corregir cierre inesperado. - Conociendo el nombre y versión de la aplicación de la suite ofimática, y el nombre y versión de un sistema operativo, cuáles son las acciones a ejecutar para restablecer barra herramientas, función, formato y/o dibujo.  Actividad de conceptualización: durante esta fase se adquirieron, formalizaron y representaron nuevos elementos de conocimiento pertenecientes al dominio de interés, a través de representaciones intermedias (tablas y diagramas) y fueron extendidas las siguientes tareas de conceptualización en Methontology: o En la tarea 1, se añadieron al glosario de términos diversos sinónimos y acrónimos, que se detallan a continuación. Tabla 2 Acrónimos y sinónimos incorporados al glosario de términos Nombre Sinónimo Acrónimo Descripción Tipo Computador de escritorio Ordenador, Computador PC Equipo de computación suficientemente pequeño para caber cómodamente en un espacio de trabajo individual (WordNet, 2012). Concepto Sistema operativo Distribución SO S.O. Conjunto de programas que hacen funcionar al equipo de computación controlando toda la actividad que ésta realiza, sus componentes y la interrelación entre los programas de aplicación y los Concepto 31 diversos dispositivos del equipo de computación (Suárez y Mujica, 2012). Soporte técnico Servicio técnico S.T. Es un conjunto de actividades preventivas y correctivas que se realizan sobre elementos tecnológicos, con el fin de mantener su operatividad. Concepto o En la tarea 2, que corresponde a construir la taxonomía de conceptos, se agregaron las fallas frecuentes de soporte técnico que se aplican sobre el elemento tecnológico de aplicaciones de ofimática. En la Figura 7, se muestra la organización taxonómica de soporte técnico. Figura 7. Taxonomía de Soporte Técnico en los Infocentros En la tabla de definición de instancias, que corresponde a la tarea 11 de Methontoly, se incorporaron algunas instancias de aplicaciones ofimáticas. Estas instancias también se unieron al glosario de términos de la ontología. La Tabla 3, muestra un fragmento de la tabla. (Ver tabla de instancias completa en el Anexo E). Tabla 3 Fragmento de tabla de instancias agregadas a la ontología Nombre de instancia Concepto al que pertenece Atributos Valores Procesador de texto Libreoffice 4.4.1 Aplicación de ofimática Nombre de la aplicación de programa Procesador de texto Libreoffice Versión de la aplicación de programa 4.4.1 32 Openoffice Calc 4.4.1 Aplicación de ofimática Nombre de la aplicación de programa Openoffice Calc Versión de la aplicación de programa 4.4.1 Openoffice Draw 4.1.1 Aplicación de ofimática Nombre de la aplicación de programa Openoffice Draw Versión de la aplicación de programa 4.1.1  Actividad de formalización e implementación: En esta actividad, Methontology propone realizar la transformación del modelo conceptual en un modelo formal o semi-computable. La ontología construida por Ghanem, Núñez, y Ramos (2014), se presenta en formato RDF; pero el Lenguaje de Ontologías Web (OWL) facilita un mejor mecanismo de interpretabilidad del contenido Web que los mecanismos admitidos por RDF, proporcionando un vocabulario adicional junto con una semántica formal, es decir, OWL posee más poder expresivo que RDF. Recordemos que OWL fue desarrollado como una extensión del vocabulario de RDF. Además, OWL es propuesto como estándar por el W3C. Por estas razones, se migró la ontología al lenguaje OWL, manteniendo las clases y relaciones establecidas inicialmente.  Actividad de mantenimiento: Esta actividad permite actualizar y corregir (evaluar) la ontología construida, para ello se utilizó el esquema de evaluación propuesto por Ramos, Núñez y Casañas (2009), el cual consiste en aplicar cuatro criterios, los cuales son: o Uso correcto del lenguaje: Consiste en evaluar sintácticamente la ontología, lo que permite corregir inconsistencias sintácticas.  Validar que el lenguaje seleccionado cumpla con estándares para desarrollos ontológicos: El lenguaje utilizado fue OWL, el cual es altamente usado por la comunidad de ingenieros ontológicos, además de ser recomendado por el W3C para el desarrollo de ontología. 33  Evaluar sintácticamente la ontología en cada fase del ciclo de desarrollo: Para evaluar sintácticamente la ontología se utilizó el analizador sintáctico de la Universidad de Manchester (http://mowl- power.cs.man.ac.uk:8080/validator/). Este analizador genera como respuesta si la evaluación fue satisfactoria o es caso contrario las violaciones y errores encontrados. Como se muestra en la Figura 8, el resultado fue satisfactorio, además se refleja el IRI de la ontología. Figura 8. Resultado luego de aplicar el analizador sintáctico a la ontología o Exactitud de la estructura taxonómica: La estructura taxonómica de la ontología propuesta por Ghanem, Núñez, y Ramos (2014), no requirió modificaciones, debido a que fue implementada completamente y se encuentra libre de inconsistencias. o Validez del vocabulario: Para evaluar el significado de los términos y conceptos, se realizaron las siguientes actividades:  Análisis del corpus del dominio: se identificaron, extrajeron y organizaron los términos significativos a partir de la consulta con expertos y la revisión de libros y documentos especializados que fueron consultados. En total resultaron 382 los términos relacionados al dominio de soporte técnico en los Infocentros. 34  Evaluación del vocabulario: Se calcula la precisión, que indica el porcentaje de los términos de la ontología que aparecen en el corpus con relación a la cantidad total de términos de la ontología, y el recall (exhaustividad), que no es más que porcentaje de términos del corpus que aparecen en la ontología con relación al total de términos en el corpus, a partir del glosario de términos de la ontología y el corpus. Tabla 4 Evaluación del vocabulario de la ontología Precisión Recall Fórmula CO-C / COnto CO-C / CCorp Descripción CO-C = Cantidad de términos que se solapan entre la ontología y el corpus. COnto = Cantidad total de términos de la ontología. CO-C = Cantidad de términos que se solapan entre la ontología y el corpus. CCorp = Cantidad total de términos del corpus. Resultados CO-C = 293 COnto = 293 Precisión = 293/293 = 1 CO-C = 293 CCorp = 382 términos Recall = 293 / 382 = 0,76 Precisión = 1. Este valor indica que el 100% de los términos codificados en la ontología existen en el corpus. Recall = 0,76. Este valor indica que el 76% de los términos de corpus se encuentran representados en la ontología. Entre las razones que podrían explicar el valor obtenido, destaca que los términos del dominio son altamente especializados y muy numerosos, y por ello no se incluyeron en la ontología, ya que ésta modela solo una porción del dominio. o Adecuación a requerimientos: Para evaluar la adecuación a los requerimientos, se revisa que las especificaciones del documento de requerimientos se cumplan, verificando que los objetivos, la representación del conocimiento y las respuestas correctas a las preguntas de competencia contenidos en el documento de especificación fueron alcanzados. Con el fin de dar respuestas a las preguntas de competencia, se muestra un ejemplo en la Figura 9, con la respuesta a la siguiente pregunta: Conociendo el nombre y la versión de una aplicación ofimática, y el 35 nombre y la versión de un sistema operativo ¿cuáles son las acciones a ejecutar para instalar la aplicación ofimática? En este caso, se seleccionó la instalación de la aplicación ofimática de nombre LibreOffice y versión 4.4.1, sobre el sistema operativo de nombre Debian GNU/Linux y versión Squeeze 6.0. Como resultado, se obtuvo un identificador (uRLSoporteTécnico), correspondiente al patrón de soporte técnico, donde se encuentran almacenados los pasos para ejecutar la solución del incidente tecnológico consultado. Este resultado se muestra en la siguiente figura. Figura 9. Ejemplo de la respuesta a una pregunta de competencia, que permite consultar el patrón de solución tecnológica, para la instalación de la aplicación ofimática LibreOffice 4.4.1 sobre el sistema operativo Debian GNU/Linux Squeeze 6.0 36 III.3 Repositorios La ontología se almacenó en un triplestore. Un triplestore es un sistema manejador de base de datos especialmente construido con el propósito de almacenar y recuperar datos en formato RDF. Estos datos están constituidos de forma estructurada por una entidad denominada tripleta (sujeto, predicado y objeto). El almacenamiento y recuperación de datos en un triplestore se realiza a través del lenguaje de consulta SPARQL. Las soluciones de soporte técnico, son representadas a través de un esquema basado en patrones. Éstos fueron definidos a partir de la concepción de representación de patrones descrito por Alexander C. (1979), en donde se indica que un patrón es una regla que establece una relación entre un contexto, un sistema de fuerzas (hace referencia a un problema), que aparecen en el contexto y una configuración que permite que las fuerzas se resuelvan dentro del contexto. Lo que en un lenguaje más entendible podría denominarse: contexto, problema y solución. Los patrones de solución de soporte técnico, están constituidos por un conjunto de pasos, que expresan las tareas que deben ser ejecutadas para dar solución a un incidente tecnológico. Estos patrones pueden ser impresos en un documento digital, para su posterior consulta. Los patrones se encuentran alojados en un repositorio de base de datos, lo que permite crear nuevas soluciones a otras incidencias tecnológicas, actualizarlas o eliminarlas. La Figura 10 muestra un ejemplo de un patrón de solución de soporte técnico. 37 Figura 10. Ejemplo de un patrón de solución 38 CAPÍTULO IV DESARROLLO DE LA APLICACIÓN WEB En este capítulo se presentan los detalles del desarrollo de una aplicación Web que incorpora las funcionalidades de búsquedas de incidencias de soporte técnico mediante palabras claves, así como las funcionalidades de administración de las instancias de la ontología, y la administración de los usuarios del sistema. Además, se incluyen las pruebas realizadas al sistema. IV.1 Modelado de la aplicación Con el objetivo de ampliar el sistema de gestión SIGECOST, se implementaron un conjunto de requerimientos funcionales, a saber:  Se desarrolló un módulo de administración de la ontología, que permite insertar, modificar y eliminar instancias tanto de elementos tecnológicos como de incidencias de soporte técnico. Cabe destacar que cada operación realizada en este módulo, es registrada de manera permanente en la ontología, mediante un lenguaje de consulta SPARQL. Adicionalmente, como parte de la administración de la ontología, se permite exportar la misma a un archivo en formato OWL. Estás funcionalidades solo estarán disponibles para ser utilizadas por un personal calificado, para ello se dispone de un mecanismo de control de perfiles de usuarios.  Se incorporó al módulo de asistencia de tecnológica la funcionalidad de búsqueda semántica, para permitir al usuario encontrar soluciones de incidencias de soporte técnico mediante una o más palabras claves. Esto se realizó con el propósito de facilitar las búsquedas cuando no se conocen todos los elementos involucrados en la incidencia de soporte técnico, en cuyo caso, la o las palabras claves permiten filtrar las incidencias, reduciendo el número de posibles soluciones. 39  Se desarrolló un módulo de administración de usuarios, que permite crear y modificar los diferentes usuarios autorizados para administrar el sistema. Esta administración comprende dos tipos de usuarios: uno con permisos para administrar las instancias de la ontología y las soluciones de soporte técnico, y otro con permisos para administrar los usuarios en sí mismos. En el análisis del sistema se utilizaron los diagramas de casos de uso y diagramas de estado propuestos por Booch, Rumbaugh y Jacobson, (2006). En la Figura 11, se aprecia el nivel 0, del diagrama de casos de uso del sistema, donde se incorporaron los nuevos casos de uso con las actualizaciones planteadas en este trabajo de investigación. Figura 11. Casos de uso de la aplicación de gestión de conocimiento de soporte técnico en los Infocentros 40 A continuación se muestran los detalles de los casos de uso incorporados al sistema con sus respectivos diagramas de estado.  Detalles del caso de uso: Consultar incidencia de soporte técnico y su solución tecnológica Tabla 5 Caso de Uso: Consultar incidencia de soporte técnico y su solución tecnológica Nombre del caso de uso Consultar incidencia de soporte técnico y su solución tecnológica Actor(es) Usuario Precondición N/A Descripción 1. El usuario visualiza las opciones que brinda el sistema en su inicio. 2. El usuario selecciona la opción de consultas de las incidencias de soporte técnico y sus soluciones, presionando el botón consultar. 3. El sistema despliega los tipos de incidencias de soporte técnico encontradas. 4. El usuario selecciona un tipo de incidencia de soporte técnico de la lista desplegada, presionando el botón consultar. 5. El sistema despliega las instancias del tipo de incidencia de soporte técnico seleccionada. Junto a cada incidencia, se muestra un pequeño resumen, de la solución tecnológica. 6. El usuario selecciona la instancia a consultar, de la lista desplegada, presionando el botón ver detalles. 7. El sistema muestra el detalle de la instancia de incidencia de soporte técnico, así como el detalle de su solución tecnológica. Diagrama de estado Postcondición Se muestra el detalle de la instancia consultada. 41  Detalles del caso de uso: Buscar solución tecnológica Tabla 6 Caso de Uso: Buscar solución tecnológica Nombre del caso de uso Buscar solución tecnológica Actor(es) Usuario Precondición N/A Descripción 1. El usuario visualiza las opciones que brinda el sistema en su inicio. 2. El usuario selecciona la opción Buscar. 3. El sistema muestra una barra de búsqueda. 4. El usuario introduce una o más palabras claves. 5. El sistema despliega las instancias de incidencias de soporte técnico encontradas. 6. El usuario selecciona la instancia de soporte técnico que desea consultar, presionando el botón ver detalles. 7. El sistema muestra el detalle de la solución tecnológica. Diagrama de estado Postcondición Se muestra la solución de soporte técnico de la instancia seleccionada. La Figura 12 muestra el refinamiento del caso de uso administrar elemento tecnológico. 42 Figura 12. Diagrama de Casos de Uso Administrar elemento tecnológico La Tabla 7 muestra los detalles del caso de uso administrar elemento tecnológico: Tabla 7 Caso de Uso: Administrar elemento tecnológico Nombre del caso de uso Administrar elemento tecnológico Actor(es) Experto Precondición Haber sido validado como usuario administrador de la ontología Descripción El experto puede seleccionar alguna de las siguientes tres opciones de administración: a.- Insertar instancia de elemento tecnológico. b.- Modificar instancia de elemento tecnológico. c.- Eliminar instancia de elemento tecnológico. Postcondición Una nueva instancia de elemento tecnológico insertada, modificada o eliminada dependiendo de la acción de administración ejecutada por el experto.  Detalles del caso de uso: Insertar instancia de elemento tecnológico Tabla 8 Caso de Uso: Insertar instancia de elemento tecnológico Nombre del caso de uso Insertar instancia de elemento tecnológico Actor(es) Experto Precondición Haber sido validado como usuario administrador de la ontología. Descripción 1. El experto visualiza las opciones que brinda el sistema en su inicio. 2. El experto selecciona la opción administración de las incidencias de elementos tecnológicos, presionando el botón administrar. 3. El sistema despliega los tipos de elementos tecnológicos encontrados. 43 4. El experto selecciona un tipo de elemento tecnológico de la lista desplegada, presionando el botón insertar. 5. El sistema muestra un formulario, donde el experto puede escribir los detalles y características de la instancia que se va a insertar. 6. El experto llena el formulario. 7. El experto indica que se registre la instancia, presionando el botón guardar. Diagrama de estado Postcondición Instancia de elemento tecnológico insertada.  Detalles del caso de uso: Modificar instancia de elemento tecnológico Tabla 9 Caso de Uso: Modificar instancia de elemento tecnológico Nombre del caso de uso Modificar instancia de elemento tecnológico Actor(es) Experto Precondición Haber sido validado como usuario administrador de la ontología. Descripción 1. El experto visualiza las opciones que brinda el sistema en su inicio. 2. El experto selecciona la opción administración de las incidencias de elementos tecnológicos, presionando el botón administrar. 3. El sistema despliega los tipos de elementos tecnológicos encontrados. 4. El experto selecciona un tipo de elemento tecnológico de la lista desplegada, presionando el botón consultar. 5. El sistema despliega las instancias del tipo de elemento tecnológico seleccionado. 6. El experto selecciona la instancia a modificar, de la lista desplegada, presionando el botón ver detalles. 7. El sistema muestra el detalle de la instancia de elemento tecnológico seleccionada. 8. El experto selecciona la opción de modificar la instancia, presionando el botón modificar. 9. El sistema muestra el detalle de la instancia de elemento tecnológico, en modo de actualización, a través de un formulario. 10. El experto modifica los detalles de la instancia. 11. El experto indica que se guarden los cambios, presionando el botón actualizar. Diagrama de estado 44 Postcondición Instancia de elemento tecnológico modificada 45  Detalles del caso de uso: Eliminar instancia de elemento tecnológico Tabla 10 Caso de Uso: Eliminar instancia de elemento tecnológico Nombre del caso de uso Eliminar instancia de elemento tecnológico Actor(es) Experto Precondición Haber sido validado como usuario administrador de la ontología. Descripción 1. El experto visualiza las opciones que brinda el sistema en su inicio. 2. El experto selecciona la opción de administración de las incidencias de elementos tecnológicos, presionando el botón administrar. 3. El sistema despliega los tipos de elementos tecnológicos encontrados. 4. El experto selecciona un tipo de elemento tecnológico de la lista desplegada, presionando el botón consultar. 5. El sistema despliega las instancias del tipo de elemento tecnológico seleccionado. 6. El experto selecciona la instancia a eliminar, de la lista desplegada, presionando el botón ver detalles. 7. El sistema muestra el detalle de la instancia de elemento tecnológico seleccionada. 8. El experto selecciona la opción de eliminar la instancia, presionando el botón eliminar. 9. El experto confirma la eliminación de la instancia, en la ventana emergente, presionando el botón aceptar. Diagrama de estado Postcondición Instancia de elemento tecnológico eliminada. 46 La Figura 13 muestra el refinamiento del caso de uso administrar incidencia de soporte técnico y su solución tecnológica. Figura 13. Diagrama de Casos de uso: Administrar incidencia de soporte técnico y su solución tecnológica A continuación se muestran los detalles del caso de uso Administrar incidencia de soporte técnico y su solución tecnológica Tabla 11 Caso de Uso: Administrar incidencia de soporte técnico y su solución tecnológica Nombre del caso de uso Administrar incidencia de soporte técnico y su solución tecnológica Actor(es) Experto Precondición Haber sido validado como usuario administrador de incidencias Descripción 1. El experto puede seleccionar alguna de las siguientes opciones de administración: a.- Insertar incidencia de soporte técnico. b.- Modificar incidencia de soporte técnico. c.- Eliminar incidencia de soporte técnico. Postcondición Una incidencia de soporte técnico insertada, modificada o eliminada dependiendo de la acción de administración ejecutada por el experto. 47  Detalles del caso de uso: Insertar incidencia de soporte técnico y/o solución tecnológica Tabla 12 Caso de Uso: Insertar incidencia de soporte técnico y/o solución tecnológica Nombre del caso de uso Insertar incidencia de soporte técnico y/o solución tecnológica Actor(es) Experto Precondición Haber sido validado como usuario administrador de incidencias. Descripción 1. El experto visualiza las opciones que brinda el sistema en su inicio. 2. El experto selecciona la opción administración de las instancias de incidencias de soporte técnico y sus soluciones, presionando el botón administrar. 3. El sistema despliega los tipos de incidencias de soporte técnico. 4. El experto selecciona un tipo de incidencia de soporte técnico de la lista desplegada, presionando el botón insertar. 5. El sistema muestra un formulario, donde el experto puede seleccionar la instancia de un elemento tecnológico y escribir los pasos para la solución de la incidencia a insertar. 6. El experto llena el formulario. 7. El experto indica que se registre la instancia de incidencia de soporte técnico con su solución, presionando el botón guardar. Diagrama de estado Postcondición Instancia de incidencias de soporte técnico insertada 48  Detalles del caso de uso: Modificar solución tecnológica de una incidencia de soporte técnico Tabla 13 Caso de Uso: Modificar solución tecnológica de una incidencia de soporte técnico Nombre del caso de uso Modificar solución tecnológica de una incidencia de soporte técnico Actor(es) Experto Precondición Haber sido validado como usuario administrador de incidencias. Descripción 1. El experto visualiza las opciones que brinda el sistema en su inicio. 2. El experto selecciona la opción administración de las instancias de incidencias de soporte técnico y sus soluciones, presionando el botón administrar. 3. El sistema despliega los tipos de incidencias de soporte técnico. 4. El experto selecciona un tipo de incidencia de soporte técnico de la lista desplegada, presionando el botón consultar. 5. El sistema muestra una lista de las instancias de las incidencias de soporte técnico y un breve resumen de su solución tecnológica. 6. El experto selecciona una instancia de incidencia de soporte técnico, presionando el botón ver detalles. 7. El sistema muestra los detalles de la incidencia de soporte técnico y su solución tecnológica. 8. El experto selecciona la opción modificar solución tecnológica de la incidencia de soporte técnico seleccionada en el paso anterior, presionando el botón modificar. 9. El sistema muestra un formulario que permite la modificación de la solución de soporte técnico. 10. El experto modifica la solución de soporte técnico. 11. El experto indica que se guarden los cambios, presionando el botón actualizar. Diagrama de estado Postcondición Instancia de incidencias de soporte técnico modificada. 49  Detalles del caso de uso Eliminar incidencia de soporte técnico y su solución tecnológica Tabla 14 Caso de Uso: Eliminar incidencia de soporte técnico y su solución tecnológica Nombre del caso de uso Eliminar incidencia de soporte técnico y su solución tecnológica Actor(es) Experto Precondición Haber sido validado como usuario administrador de incidencias. Descripción 1. El experto visualiza las opciones que brinda el sistema en su inicio. 2. El experto selecciona la opción administración de las instancias de incidencias de soporte técnico y sus soluciones, presionando el botón administrar. 3. El sistema despliega los tipos de incidencias de soporte técnico. 4. El experto selecciona un tipo de incidencia de soporte técnico de la lista desplegada, presionando el botón consultar. 5. El sistema muestra una lista de las instancias de las incidencias de soporte técnico y un pequeño resumen de su solución tecnológica. 6. El experto selecciona una instancia de incidencia de soporte técnico, presionando el botón ver detalles. 7. El sistema muestra los detalles de la incidencia de soporte técnico y su solución tecnológica. 8. El experto selecciona la opción eliminar solución tecnológica de la incidencia de soporte técnico seleccionada en el paso anterior, presionando el botón eliminar. 9. El experto confirma la eliminación de la instancia de incidencia de soporte técnico, en la ventana emergente, presionando el botón aceptar. Diagrama de estado Postcondición Instancia de incidencia de soporte técnico y su solución eliminada. 50 La Figura 14 muestra el refinamiento del caso de uso exportar la ontología. Figura 14. Diagrama de casos de uso: Exportar la ontología  Detalles del caso de uso: Exportar la ontología Tabla 15 Caso de Uso: Exportar la ontología Nombre del caso de uso Exportar la ontología Actor(es) Experto Precondición Haber sido validado como usuario administrador. Descripción 1. El experto selecciona en la barra de menú la siguiente opción: Archivo -> Exportar la ontología 2. El sistema muestra la opción para exportar la ontología a OWL. 3. El experto puede seleccionar la opción de exportar la ontología a OWL. Diagrama de estado Postcondición La ontología exportada a formato OWL si el experto selecciona la opción. 51 La Figura 15 muestra el refinamiento del caso de uso administrar cuenta. Figura 15. Diagrama de casos de uso: Administrar cuenta  Detalles del caso de uso: Administrar cuenta Tabla 16 Caso de Uso: Administrar cuenta Nombre del caso de uso Administrar cuenta Actor(es) Administrador de usuarios, Experto. Precondición Haber iniciado sesión en el sistema. Descripción 1. El actor selecciona en la barra de menú la siguiente opción: Mi cuenta. 2. El sistema muestra un formulario con los detalles de la cuenta, y permite la modificación únicamente de los campos usuario y contraseña. 3. El actor, modifica uno o los dos campos del formulario. 4. El actor indica que se guarden los cambios, presionando el botón actualizar. Diagrama de estado Postcondición Datos de la cuenta actualizados. La Figura 16 muestra el refinamiento del caso de uso consultar usuarios. Figura 16. Diagrama de casos de uso: Consultar usuarios 52  Detalles del caso de uso: Consultar usuarios Tabla 17 Caso de Uso: Consultar usuarios Nombre del caso de uso Consultar usuarios Actor(es) Administrador de usuarios. Precondición Haber sido validado como administrador de usuarios. Descripción 1. El administrador selecciona en la barra de menú la siguiente opción: Administración -> Usuarios. 2. El sistema muestra una lista de usuarios encontrados. 3. El administrador selecciona el usuario que desea consultar, presionando el botón ver detalles. 4. El sistema muestra los datos del usuario consultado. Diagrama de estado Postcondición Datos de usuario mostrados. La Figura 17 muestra el refinamiento del caso de uso administrar usuarios. Figura 17. Diagrama de casos de uso: Administrar usuarios  Detalles del caso de uso: Administrar usuarios Tabla 18 Caso de Uso: Administrar usuarios Nombre del caso de uso Administrar usuarios Actor(es) Administrador de usuarios Precondición Haber sido validado como administrador de usuarios Descripción El administrador puede seleccionar dos opciones de administración: 1. Insertar usuario. 2. Modificar usuario. Postcondición Un usuario insertado o modificado dependiendo de la acción de administración ejecutada. 53  Detalles del caso de uso: Insertar usuario Tabla 19 Caso de Uso: Insertar usuario Nombre del caso de uso Insertar usuarios Actor(es) Administrador de usuarios. Precondición Haber sido validado como administrador de usuarios. Descripción 1.El administrador selecciona en la barra de menú la siguiente opción: Administración -> Usuarios. 2.El sistema muestra una lista de usuarios encontrados. 3.El administrador selecciona la pestaña Insertar. 4.El sistema muestra un formulario, que permite al administrador escribir los datos del usuario a insertar. 5.El administrador llena el formulario. 6.El administrador guarda los datos del nuevo usuario, con el botón guardar. Diagrama de estado Postcondición Un nuevo usuario insertado.  Detalles del caso de uso: Modificar usuario Tabla 20 Caso de Uso: Modificar usuario Nombre del caso de uso Modificar usuarios Actor(es) Administrador de usuarios. Precondición Haber sido validado como administrador de usuarios. Descripción 1.El administrador selecciona en la barra de menú la siguiente opción: Administración -> Usuarios. 2.El sistema muestra una lista de usuarios encontrados. 3.El administrador selecciona el usuario que desea modificar, presionando el botón ver detalles. 4.El sistema muestra los datos del usuario seleccionado. 5.El administrador presiona el botón modificar. 6.El sistema muestra un formulario con los datos del usuario y permite la modificación de todos los campos. 7.El administrador modifica los campos del formulario. 8.El administrador, indica que desea guardar los datos modificados, presionando el botón actualizar. Diagrama de estado Postcondición Un usuario modificado. 54 IV.2 Interfaces de la aplicación y ejemplos de consultas para acceder y recuperar información desde la ontología En la siguiente sección, se describen algunos ejemplos de consultas realizadas a la ontología, mediante la interacción usuario-sistema, y se muestran las interfaces con los resultados obtenidos de cada consulta realizada. Esta interacción permite visualizar la navegación que realiza el usuario y las respuestas que emite el sistema, con el fin de hacer más entendible el proceso de obtención del conocimiento. Para conocer el sistema con más detenimiento ver el siguiente enlace: http://soporte.infocentro.net.ve/sigecost/. Para realizar las consultas, el sistema desarrollado requirió de la manipulación de la ontología (almacenada en una base de datos). Este proceso fue llevado a cabo con la ayuda de la librería Arc2, mediante el lenguaje de consulta SPARQL, el cual está optimizado para realizar consultas de recuperación, inserción y eliminación sobre la ontología. Las consultas en SPARQL trabajan a nivel de tripletas (sujeto, predicado, objeto), pudiendo verse afectadas más de una tripleta en una sola consulta. Cada instancia en la ontología requiere más de una tripleta para definirse, por lo que cualquier operación de consulta, inserción, modificación y/o eliminación requieren afectar más de una tripleta. Así, la estrategia utilizada en este trabajo, para investigar cuantas y cuales tripletas eran requeridas por una instancia, continuó los siguientes pasos:  Definir la instancia en la ontología mediante el editor Protégé.  Cargar en el sistema el archivo OWL generado por Protégé.  Obtener las tripletas que conforman la instancia creada desde Protégé. De esta manera, se pudieron utilizar las tripletas encontradas, para definir los procesos de inserción, modificación y eliminación de instancias. Convenciones para las consultas de la ontología Para una mejor estructuración y claridad en el contenido de las consultas de la ontología, se asumen las siguientes convenciones. 55 Espacios de nombres En esta sección, a menos que se indique lo contrario se asumen los siguientes vínculos de prefijos de espacios de nombres: Prefijo IRI : http://www.owl-ontologies.com/OntologySoporteTecnico.owl# rdf http://www.w3.org/1999/02/22-rdf-syntax-ns# rdfs http://www.w3.org/2000/01/rdf-schema# owl: http://www.w3.org/2002/07/owl# xsd: http://www.w3.org/2001/XMLSchema# Terminología A continuación se definen algunos de los términos relacionados con las consultas de la ontología. IRI3 Un IRI (Internationalized Resource Identifiers, por sus siglas en inglés) es una secuencia compacta para identificar recursos Web. Consta de un IRI absoluto, y opcionalmente de un identificador de fragmento, separados por el carácter “#”. Tiene como delimitadores los caracteres “<” y “>”. Por ejemplo, a continuación se muestra el IRI del elemento tecnológico aplicación ofimática: <http://www.owl-ontologies.com/OntologySoporteTecnico.owl#SoporteTecnicoAplicacionOfimatica> Donde: El IRI absoluto es: http://www.owl-ontologies.com/OntologySoporteTecnico.owl El Identificador de fragmento es: SoporteTecnicoAplicacionOfimatica Los IRIs pueden especificarse con nombres prefijados, para lo cual se utiliza la palabra clave PREFIX, seguida de un nombre de prefijo y el carácter “:”; por último se específica el IRI prefijado. El siguiente ejemplo muestra dos formas de referenciar el elemento tecnológico impresora: 3 http://www.ietf.org/rfc/rfc3987.txt 56 <http://www.owl-ontologies.com/OntologySoporteTecnico.owl#SoporteTecnicoImpresora> PREFIX onto: <http://www.owl-ontologies.com/OntologySoporteTecnico.owl#> onto:SoporteTecnicoImpresora Opcionalmente, se puede especificar un IRI prefijado sin el nombre de prefijo, quedando solo por el carácter “:” como referencia. A continuación se describen las consultas más relevantes, realizadas a través de SPARQL, para la administración de las instancias en la ontología. IV.2.1 Ejemplo de consulta de los Elementos Tecnológicos (ET) Permite consultar los diferentes ET definidos en el sistema. Se pueden visualizar tanto sus descripciones como detalles técnicos de marca, modelo, versión, etc. Figura 18. Interfaz inicio del sistema a.- El usuario selecciona la opción Consultas de los elementos tecnológicos presionando el botón consultar. 57 b.- El sistema crea un arreglo (estructura de datos) con los iris de las clases de elementos tecnológicos presentes en la ontología, al que se denomina irisET. Para obtener la información de cada ET, se extrae de la ontología, las clases (conceptos) que coincidan con los iris del arreglo irisET, a través de los comment que contiene las definiciones y sinónimos de cada ET, así como los label que contiene el nombre de la clase que será desplegada en la siguiente vista. La consulta en Sparql y función que realiza esta acción es la siguiente: foreach ($iriClases AS $iriClase){ $filtroClase .= ''.( $filtroClase != ''?'||':'').'?clase = <'.$iriClase.'>';} $query = ' PREFIX : <http://www.owl-ontologies.com/OntologySoporteTecnico.owl#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT ?clase ?labelClase ?commentClase ?clasePadre WHERE { ?clase rdf:type owl:Class . ?clase rdfs:label ?labelClase . OPTIONAL { ?clase rdfs:comment ?commentClase . } . OPTIONAL { ?clase rdfs:subClassOf ?clasePadre . } . FILTER ('.$filtroClase.' ) . } ORDER BY ?labelClase '; En este código se aplica un filtro con los iris del arreglo irisET, Por ejemplo: si se sustituye $filtroClase por: FILTER (?clase = <http://www.owl- ontologies.com/OntologySoporteTecnico.owl#AplicacionOfimatica>), se obtiene lo siguiente: Figura 19. Resultado de ejemplo de Consulta de Elemento Tecnológico. 58 De esta manera, se construye la siguiente vista de todos los elementos tecnológicos presentes en la ontología. La vista está constituida por nombre y definición de cada ET. Figura 20. Interfaz de consulta de Elementos Tecnológicos c.- Para obtener información de las instancias, el usuario selecciona un tipo de ET y presiona el botón consultar. Por ejemplo: el usuario presiona el botón consultar de la opción Aplicación Ofimática, el sistema primero busca el total de instancias, con el siguiente query de Sparql. $query = ' PREFIX : <http://www.owl-ontologies.com/OntologySoporteTecnico.owl#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT (COUNT(?iriAplicacion) AS ?totalElementos) WHERE { ?iriAplicacion rdf:type :AplicacionOfimatica. ?iriAplicacion :nombreAplicacionPrograma ?nombreAplicacion . ?iriAplicacion :versionAplicacionPrograma ?versionAplicacion . } '; La ejecución de esta consulta tiene por resultado un valor semejante al de la siguiente imagen. 59 Figura 21. Resultado de ejemplo de consulta de total de instancia de ET de Aplicación de Ofimática d.- Una vez obtenida la cantidad de instancias de Aplicación Ofimática, el sistema verifica si el total de elementos es mayor a cero, entonces se buscan las instancias a partir del iri con el siguiente query: $query= ' PREFIX : <http://www.owl-ontologies.com/OntologySoporteTecnico.owl#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?iriAplicacion ?nombreAplicacion ?versionAplicacion WHERE { ?iriAplicacion rdf:type :AplicacionOfimatica. ?iriAplicacion :nombreAplicacionPrograma ?nombreAplicacion . ?iriAplicacion :versionAplicacionPrograma ?versionAplicacion . } ORDER BY ?nombreAplicacion ?versionAplicacion '; Un ejemplo de ejecución de esta consulta es la siguiente: Figura 22. Resultado Consulta de Instancias de ET Aplicación de Ofimática e.- Con estos resultados se construye una interfaz, como se visualiza en la siguiente imagen: 60 Figura 23. Interfaz Instancias de ET Aplicaciones de Ofimática De la misma forma, el sistema permite la consulta de instancias de incidencias de soporte técnico (ST) y sus soluciones, ver ANEXO F. IV.2.2 Ejemplo de búsquedas de incidencias de soporte técnico (ST) Permite buscar soluciones de incidencias de soporte técnico a partir de una o más palabras claves. Se pueden seleccionar los elementos sobre los cuales se realizarán las búsquedas:  Tipos de elementos tecnológicos  Tipos de incidencias de soporte técnico  Ejemplos 61 Figura 24. Interfaz de búsqueda de soluciones de incidencias de ST a.- El usuario presiona el botón Buscar, y el sistema muestra la siguiente interfaz: Figura 25. Interfaz de búsqueda de soluciones de incidencias de ST La barra de búsqueda permite indagar en los tipos de elementos tecnológicos, en los tipos de incidencias de soporte técnico y en ejemplos de incidencias de ST. b.- El usuario teclea en la barra de búsqueda una o más palabras claves, por ejemplo, si escribe la palabra ofimática, el sistema busca, dependiendo de las opciones que se marquen, si no se ha marcado ninguna se busca en las clases de los elementos tecnológicos, en las clases de soporte técnico y en los ejemplos (instancias) que están presentes en la ontología. Para ello el sistema construye un arreglo de nodos de padres 62 con sus respectivos hijos de elementos tecnológicos recursivamente, esto se realiza mediante el siguiente query: $query = ' PREFIX : <http://www.owl-ontologies.com/OntologySoporteTecnico.owl#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT ?claseHijo WHERE { ?clasePadre rdf:type owl:Class . ?claseHijo rdfs:subClassOf ?clasePadre . ?claseHijo rdf:type owl:Class . FILTER (?clasePadre = <'.$iriPadre.'>) . } ORDER BY ?claseHijo'; La variable $iriPadre es sustituido por el siguiente iri: http://www.owl- ontologies.com/OntologySoporteTecnico.owl#ElementoTecnologico, luego el sistema determina si el primer hijo de Elemento Tecnológico es una clase padre (Clase con subclases), de ser así, el sistema realiza otra búsqueda para obtener el próximo hijo (Subclase), reemplazando el iri de la clase padre hasta que sea hallada una hoja (clase sin subclases), por lo tanto el siguiente iri a buscar en la ontología es: http://www.owl- ontologies.com/OntologySoporteTecnico.owl#AplicacionPrograma. Un ejemplo de ejecución de esta consulta se visualiza en la siguiente figura: Figura 26. Ejemplo de consulta con el Iri Elemento Tecnológico (Clase Padre) 63 Figura 27. Ejemplo de consulta con Iri Aplicación de Programa (SubClase Padre) c.- Cuando el sistema ha obtenido todos los hijos de cada clase padre de elemento tecnológico, busca la palabra clave introducida por el usuario en los label y comment de esas clases. El siguiente query es un ejemplo: $query = ' PREFIX : <http://www.owl-ontologies.com/OntologySoporteTecnico.owl#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX owl: <http://www.w3.org/2002/07/owl#> PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> SELECT DISTINCT ?claseET WHERE { ?claseET rdf:type owl:Class . ?claseET rdfs:label ?labelClaseET . OPTIONAL { ?claseET rdfs:comment ?commentClaseET . } . FILTER ( regex(?labelClaseET, "'.$clave.'"^^xsd:string, "i") #Filtro sobre el label de la clase elemento tecnológico || regex(?commentClaseET, "'.$clave.'"^^xsd:string, "i") #Filtro sobre el comment de la clase elemento tecnológico ) . '.$filtroClaseET.' } ORDER BY ?claseET '; $clave se sustituye por la expresión regular ofimática, y $filtroClaseET se sustiye por por todas las clases de elemento tecnológico. d.- De la misma forma, el sistema busca la palabra clave en los label y comment de las clases de soporte técnico y luego en propiedades e instancias de la ontología. Lo que permite mostrar la siguiente interfaz, formada por las incidencias de soporte técnico encontradas, el nombre y la versión de aplicación sobre la cual se aplica el patrón y un 64 resumen de la solución, este resumen está compuesto por las primeras palabras de la solución. Figura 28. Interfaz ejemplo de búsqueda de incidencias de ST e.- Cuando el usuario elige alguna solución referente al criterio de su búsqueda, presiona el botón ver detalles, que permite visualizar el patrón de solución a la incidencia seleccionada. Para obtener este resultado suponga que el usuario selecciona la incidencia instalación de aplicación ofimática LibreOffice versión 4.4.1 en el sistema operativo Debian Squezze GNU/Linux versión 6.0, el sistema obtiene el patrón de solución mediante la siguiente consulta: $query = ' PREFIX : <http://www.owl-ontologies.com/OntologySoporteTecnico.owl#> 65 PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?iri ?urlSoporteTecnico ?iriAplicacion ?nombreAplicacion ?versionAplicacion WHERE { ?iri rdf:type : InstalacionAplicacionOfimatica . OPTIONAL { ?iri :uRLSoporteTecnico ?urlSoporteTecnico } . ?iri :aplicacionOfimatica ?iriAplicacion . FILTER (?iri = <'.$iri.'>) . ?iriAplicacion rdf:type :AplicacionOfimatica . ?iriAplicacion :nombreAplicacionPrograma ?nombreAplicacion . ?iriAplicacion :versionAplicacionPrograma ?versionAplicacion . } '; El '.$iri.' que es aplicado en el filtro es obtenido de la instancia consultada, para este caso, el iri correspondiente a la instancia seleccionada es el siguiente: http://www.owl-ontologies.com/OntologySoporteTecnico.owl#InstalacionAplicacionOfimatica_2 Una ejecución de esta consulta muestra el siguiente resultado: Figura 29. Resultado de consulta de Solución de incidencia de ST Con el url de soporte técnico (id del patrón para este ejemplo PST_13) obtenido en esta consulta, el sistema busca la solución en el repositorio soluciones de soporte técnico con el siguiente query de mysql: $query = ' SELECT patrones.codigo AS patron_codigo, patrones.nombre AS patron_nombre, patrones.solucion AS patron_solucion, patrones.autor_crea, DATE_FORMAT( CONVERT_TZ(patrones.fecha_crea,'".GetConfig('timeZone')."','".GetConfig('displayTimeZone')."'), '%d/%m/%Y %H:%i:%s' ) AS patron_fecha_creacion, patrones.autor_mod, DATE_FORMAT( CONVERT_TZ(patrones.fecha_mod,'".GetConfig('timeZone')."','".GetConfig('displayTimeZone')."'), 66 '%d/%m/%Y %H:%i:%s' ) AS patron_fecha_ultima_modificacion FROM patrones WHERE patrones.codigo = '".$codigo."' "; Una vez obtenido los datos del patrón, se muestra la siguiente interfaz: Figura 30. Interfaz ejemplo de patrón de solución a una incidencia de ST El Patrón de Solución: está formado por: el nombre del patrón, constituido por la incidencia de soporte técnico; el nombre del autor, el cual crea el patrón con su solución; la fecha de creación y por último una descripción que indica las actividades que se deben realizar para solucionar el incidente consultado. IV.2.3 Ejemplo de administración de instancias de los elementos tecnológicos Permite consultar y realizar un conjunto de operaciones sobre las instancias de elementos tecnológicos definidas en la ontología. Estas operaciones incluyen insertar, modificar y/o eliminar las instancias. Para realizar cualquiera de las operaciones mencionadas, el usuario realiza los siguientes pasos en común: 67 a.- El usuario inicia sesión en el sistema como administrador, y presiona el botón Administrar que se encuentra en la opción Administración de las instancias de elementos tecnológicos, como se muestra en la Figura 31: Figura 31. Interfaz Inicio de Administrar Instancias de ET b.- El sistema muestra la siguiente interfaz de administración de instancias de elementos tecnológicos, que está constituida por tipo de ET y su definición, obtenida con los label y comment de la taxonomía de ET de la ontología. 68 Figura 32. Interfaz de administración de instancias de ET La forma de obtener esta lista de ET se describe en el ejemplo 1 consulta de elemento tecnológico, explicado anteriormente. A partir de esta interfaz, el usuario puede insertar, modificar o eliminar instancias de Elementos Tecnológicos (ET). o Ejemplo de Insertar instancia de Elemento Tecnológico a.- El administrador, presiona el botón Insertar, el sistema muestra el formulario solicitando las características de la instancia a insertar. Por ejemplo suponga que el usuario selecciona la opción insertar ET en Aplicación de Ofimática, el sistema muestra la siguiente interfaz, compuesta por un formulario que solicita las características de la instancia a insertar. 69 Figura 33. Interfaz formulario de ejemplo de insertar instancia de ET b.- El administrador llena el formulario y presiona el botón guardar. Supongamos que sea crea la instancia con nombre Draw-LibreOffice que es una aplicación de dibujo de ofimática, y versión 4.4, como se muestra en la Figura 34. Figura 34. Interfaz ejemplo de inserción de una instancia de ET c.- El sistema realiza una comprobación de existencia de instancia, es decir, busca si existe una instancia con las mismas características, a través del siguiente query: $query = ' PREFIX : <http://www.owl-ontologies.com/OntologySoporteTecnico.owl#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> ASK { ?instanciaAplicacion rdf:type : AplicacionOfimatica . ?instanciaAplicacion :nombreAplicacionPrograma "'.$aplicacion->getNombre().'"^^xsd:string . ?instanciaAplicacion :versionAplicacionPrograma "'.$aplicacion->getVersion().'"^^xsd:string . FILTER (?instanciaAplicacion != <'.$aplicacion->getIri().'>) .' }'; 70 d.- Si existe una instancia con esas características, el sistema muestra el siguiente mensaje: Figura 35. Interfaz, con mensaje de existencia de instancia de ET De lo contrario, el sistema consulta el número de secuencia (obtiene el iri con mayor número consecutivo) para la siguiente instancia de aplicación a crear por medio de la consulta a continuación: $query = ' PREFIX : <http://www.owl-ontologies.com/OntologySoporteTecnico.owl#> PREFIX mysql: <http://web-semantics.org/ns/mysql/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?iriInstanciaMayorConsecutivo WHERE{ ?iriInstanciaMayorConsecutivo rdf:type :'.$fragmentoIriClase.' FILTER regex( mysql:substring( ?iriInstanciaMayorConsecutivo,(mysql:length(:) + 1), (mysql:length(?iriInstanciaMayorConsecutivo) – mysql:length(:)), "'.$fragmentoIriInstancia.'" ) } ORDER BY DESC(mysql:substring( ?iriInstanciaMayorConsecutivo, ( mysql:length(:) + mysql:length("'.$fragmentoIriInstancia.'") + 1 ), ( mysql:length (?iriInstanciaMayorConsecutivo)- mysql:length(:) - mysql:length (" .$fragmentoIriInstancia.'") ) ) + 0) LIMIT 1 '; e.- Con el resultado de este query, se construye el fragmento de la nueva instancia de aplicación ofimática a insertar, concatenando el fragmento de la clase aplicación AplicacionOfimatica con el el carácter underscore "_" y el número de secuencia obtenido aumentado en uno. El sistema guardar la nueva instancia de aplicación ofimática con el siguiente query: $query = ' PREFIX : <http://www.owl-ontologies.com/OntologySoporteTecnico.owl#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> INSERT INTO <'.SIGECOST_IRI_GRAFO_POR_DEFECTO.'> { :'.$fragmentoIriInstancia.' rdf:type : AplicacionOfimatica . :'.$fragmentoIriInstancia.' :nombreAplicacionPrograma "'.$aplicacion->getNombre().'"^^xsd:string . :'.$fragmentoIriInstancia.' :versionAplicacionPrograma "'.$aplicacion->getVersion().'"^^xsd:string. }'; f.- El sistema muestra los resultados del proceso de inserción. En la siguiente interfaz se visualiza un ejemplo de inserción exitosa. 71 Figura 36. Interfaz ejemplo de inserción de instancia de ET g.- Al presionar la pestaña consultar de la interfaz anterior, se observa la nueva instancia creada en la lista de ET. Figura 37. Interfaz instancias de ET después de la inserción 72 o Ejemplo de Modificar instancia de Elemento Tecnológico a.- Supóngase que el usuario desea modificar una instancia de ET de Aplicación Ofimática. El usuario presiona el botón consultar de la interfaz de administración de instancias de ET (ver Figura 32), el sistema lo lleva a la interfaz de las instancias del ET seleccionado, (ver Figura 38). Figura 38. Interfaz de instancias de ET Aplicación de Ofimática A través de esta interfaz (ver Figura 38), el administrador podrá consultar los detalles de una instancia para modificarla o eliminarla según la necesidad, presionando el botón ver detalles. Para obtener los detalles de una instancia el sistema, mediante el iri de la instancia seleccionada realiza la siguiente consulta: $query = ' PREFIX : <http://www.owl-ontologies.com/OntologySoporteTecnico.owl#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?iriAplicacion ?nombreAplicacion ?versionAplicacion WHERE { ?iriAplicacion rdf:type :AplicacionOfimatica . ?iriAplicacion :nombreAplicacionPrograma ?nombreAplicacion . ?iriAplicacion :versionAplicacionPrograma ?versionAplicacion . FILTER (?iriAplicacion = <'.$iri.'>) .}'; 73 La consulta filtra el resultado según el '.$iri.' de la instancia seleccionada. Para este ejemplo, supongamos que el usuario selecciona la instancia Editor de hoja de cálculo libreoffice versión 3.4.3. El iri de esta instancia es el siguiente: http://www.owl- ontologies.com/OntologySoporteTecnico.owl#ontologiasoportetecnicov1_Class30044 que corresponde a la instancia mencionada y ejecutando el query, se obtiene el resultado de la Figura 39. Figura 39. Resultado de ejemplo de ver detalles de instancia de ET Los datos obtenidos de la consulta, son usados para habilitar la modificación y eliminación de la instancia, por lo tanto el sistema los mantiene en una estructura de datos y son mostrados en la siguiente interfaz del sistema: Figura 40. Interfaz ejemplo de detalles de una instancia de ET c.- El administrador hace clic en el botón modificar. 74 d.- El sistema permite modificar los datos de la instancia, para este caso puede modificar el nombre y la versión, supongamos que el usuario desea cambiar el nombre de la instancia por el siguiente: Calc, que corresponde al nombre del editor de la hoja de cálculo de LibreOffice, el administrador debe borrar el nombre actual, escribir el nuevo y presionar el botón actualizar, como se muestra en la siguiente imagen: Figura 41 Interfaz de ejemplo de edición de instancia de ET (instancia a modificar) Figura 42. Interfaz de ejemplo de modificación de instancia de ET e.- El sistema consulta en la ontología, si existe una instancia de elemento tecnológico en aplicación ofimática, con esas características mediante el siguiente query: $query = ' PREFIX : <http://www.owl-ontologies.com/OntologySoporteTecnico.owl#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> ASK { ?instanciaAplicacion rdf:type : AplicacionOfimatica . 75 ?instanciaAplicacion :nombreAplicacionPrograma "'.$aplicacion->getNombre().'"^^xsd:string . ?instanciaAplicacion :versionAplicacionPrograma "'.$aplicacion->getVersion().'"^^xsd:string . FILTER (?instanciaAplicacion != <'.$aplicacion->getIri().'>) .' }'; Las variables getNombre() y getVersion(), se obtienen del formulario anterior. Si el iri presente en: $aplicacion->getIri(), se encuentra en la ontología, será ignorado en la verificación. Si de esta consulta, resulta que no existe instancia con esas características, entonces el sistema borra de la ontología la instancia con el siguiente query: $query = ' PREFIX : <http://www.owl-ontologies.com/OntologySoporteTecnico.owl#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> DELETE FROM <'.SIGECOST_IRI_GRAFO_POR_DEFECTO.'> { ?iri :nombreAplicacionPrograma ?nombreAplicacion . ?iri :versionAplicacionPrograma ?versionAplicacion . } WHERE { ?iri rdf:type :AplicacionOfimatica . ?iri :nombreAplicacionPrograma ?nombreAplicacion . ?iri :versionAplicacionPrograma ?versionAplicacion . FILTER ( ?iri = http://www.owl-ontologies.com/OntologySoporteTecnico.owl#ontologiasoportetecnicov1_Class30044). } '; f.- El sistema realiza la carga de la instancia con los nuevos valores mediante el siguiente query, manteniendo el mismo iri guardado en la estructura de datos: $query = ' PREFIX : <http://www.owl-ontologies.com/OntologySoporteTecnico.owl#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> INSERT INTO <'.SIGECOST_IRI_GRAFO_POR_DEFECTO.'> { <'.$instancia->getIri().'> :nombreAplicacionPrograma "' .$instancia->getNombre().'"^^xsd:string . <'.$instancia->getIri().'> :versionAplicacionPrograma "' .$instancia->getVersion().'"^^xsd:string . }'; Las variables getIri(), getNombre() y getVersion(), corresponden al iri de la instancia, nombre y versión respectivamente que tomarán su valor correspondiente al ser candidatas a modificación. g.- Una vez que son ejecutados los querys anteriores, el sistema muestra el resultado de la modificación de la instancia, para este ejemplo se visualiza la siguiente interfaz: 76 Figura 43. Interfaz ejemplo de modificación de instancia de ET exitosa h.- Si el usuario hace clic en la pestaña Consultar, se visualizarán los cambios, algo como la siguiente imagen: Figura 44. Interfaz resultado de instancia modificada en lista de ET 77 o Ejemplo de Eliminar instancia de Elemento Tecnológico a.- Desde la interfaz de instancias de ET de Aplicación Ofimática (ver Figura 38), el administrador selecciona la instancia que va a ser eliminada presionando el botón ver detalles, supongamos que se selecciona la opción Calc versión 3.4.3, el sistema mostrará las características de la instancia seleccionada y dos botones, uno para modificar y otro que para eliminar, como se puede ver en la Figura 45. Figura 45. Interfaz ejemplo de instancia seleccionada a eliminar b.- El administrador presiona el botón eliminar. c.- El sistema muestra una ventana emergente como se muestra en la Figura 46, que permitirá continuar o cancelar la operación, se permite la continuidad del proceso a través del botón aceptar. Figura 46. Interfaz de confirmación para eliminar instancia de ET 78 e.- El sistema verifica si la instancia a eliminar está siendo utilizada por algún patrón de solución de soporte técnico, esta validación se realiza a través de la siguiente consulta: $query = ' PREFIX : PREFIX : <http://www.owl-ontologies.com/OntologySoporteTecnico.owl#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> ASK { ?instanciaAplicacion rdf:type :AplicacionOfimatica . ?instanciaST :aplicacionOfimatica ?instanciaAplicacion . FILTER ( ?instanciaAplicacion = <http://www.owl- ontologies.com/OntologySoporteTecnico.owl#ontologiasoportetecnicov1_Class30044> ) . }'; f.- Si la instancia está siendo utilizada, el sistema muestra el siguiente mensaje: Figura 47. Interfaz mensaje de instancia de ET utilizada por otra de ST Lo que quiere decir, es que esta instancia tiene al menos un patrón de solución de soporte técnico asociado y no puede ser eliminada, a menos que sea eliminada con anterioridad desde la administración de instancias de incidencia de soporte técnico. Si la instancia está libre de asociación de solución de ST, el sistema la borrará a través del siguiente query: $query = ' PREFIX : <http://www.owl-ontologies.com/OntologySoporteTecnico.owl#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> DELETE FROM <'.SIGECOST_IRI_GRAFO_POR_DEFECTO.'> { ?iri ?predicado ?objeto . } WHERE { ?iri rdf:type :AplicacionOfimatica . ?iri ?predicado ?objeto . FILTER ( ?iri = <http://www.owl- ontologies.com/OntologySoporteTecnico.owl#ontologiasoportetecnicov1_Class30044> ) . }'; e.- El sistema muestra como resultado de la operación el siguiente mensaje: instancia eliminada satisfactoriamente y la lista de instancias de ET que quedaron en la ontología, la Figura 48 muestra el resultado de la ejecución del query anterior. 79 Figura 48. Interfaz de ejemplo de instancia eliminada satisfactoriamente La administración de las instancias de ET se efectúa de manera muy similar a la administración de soporte técnico y sus soluciones. Para conocer más acerca de esta administración, ver ANEXO G. IV.2.4 Ejemplo de exportar la ontología a owl a.- el usuario administrador, selecciona la opción Archivo, que se encuentra en el menú del sistema (parte superior del sistema), y elige Exportar la ontología. Figura 49. Interfaz exportar ontología b.- El sistema, despliega la interfaz exportar ontología, en ella, el administrador presiona el botón Exportar, como se muestra en la siguiente pantalla: 80 Figura 50. Interfaz exportar ontología a owl c.- El sistema usa el siguiente query para construir un grafo con todas las tripletas de la ontología. $query = ' CONSTRUCT { ?subject ?property ?object } WHERE { ?subject ?property ?object } '; d.- El sistema con las funcionalidades de ARC2, realiza una serialización (codificación de un objeto en un medio de almacenamiento, como puede ser un archivo o un buffer de memoria, con el fin de transmitirlo a través de una conexión en red) de la ontología. $config = array( 'serializer_default_ns' => http://www.owl-ontologies.com/OntologySoporteTecnico.owl# base' => http://localhost/sigecost2/controlador/soporte_tecnico.owl ); Con esta serialización, el sistema a través de funciones de ARC2, obtiene todos los componentes de la ontología, con el que construye el grafo. $graph = ARC2::getGraph($config); e.- Una vez obtenido el grafo, el sistema genera un documento XML que contiene la ontología. La imagen 51 muestra un extracto de un archivo exportado a owl mediante SIGECOST. 81 Figura 51. Extracto de archivo owl exportado con Sigecost IV.2.5 Ejemplo de consultas para generar la solución de incidencia de ST a PDF a.- El usuario realiza la navegación por el sistema, visualiza los pasos de la solución a un incidente, y presiona el botón PDF. b.- El sistema a través del iri de la instancia, obtiene el identificador del patrón de solución que se encuentra en la ontología, un ejemplo de la consulta que genera esta solución es la que se muestra a continuación: $query = ' PREFIX : <http://www.owl-ontologies.com/OntologySoporteTecnico.owl#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?iri ?urlSoporteTecnico ?iriEquipoReproduccion ?marcaEquipoReproduccion ?modeloEquipoReproduccion WHERE { ?iri rdf:type : CorregirImpresionManchada . OPTIONAL { ?iri :uRLSoporteTecnico ?urlSoporteTecnico } . ?iri :enImpresora ?iriEquipoReproduccion . FILTER (?iri =<http://www.owl- ontologies.com/OntologySoporteTecnico.owl#CorregirImpresionManchada_1>) . ?iriEquipoReproduccion rdf:type :Impresora . ?iriEquipoReproduccion :marcaEquipoReproduccion ?marcaEquipoReproduccion . ?iriEquipoReproduccion :modeloEquipoReproduccion ?modeloEquipoReproduccion . }'; 82 Este query al ser ejecutado traerá una solución como la que se muestra a continuación: Figura 52. Resultado de buscar incidencia de ST en la ontología c.- Para este ejemplo, el sistema toma el urlSoporteTecnico, del resultado de la consulta cuyo valor es PST_13, éste es un identificador del patrón de ST que se encuentra en el repositorio de patrones de soluciones, y mediante el siguiente query se obtiene la solución solicitada: $query = ' SELECT patrones.codigo AS patron_codigo, patrones.nombre AS patron_nombre, patrones.solucion AS patron_solucion, patrones.autor_crea, DATE_FORMAT(CONVERT_TZ( patrones.fecha_crea,'".GetConfig('timeZone')."','".GetConfig('displayTimeZone')."'), '%d/%m/%Y %H:%i:%s') AS patron_fecha_creacion, patrones.autor_mod, DATE_FORMAT(CONVERT_TZ( patrones.fecha_mod,'".GetConfig('timeZone')."','".GetConfig('displayTimeZone')."'), '%d/%m/%Y %H:%i:%s') AS patron_fecha_ultima_modificacion FROM Patrones WHERE patrones.codigo = '".$codigo."' '; d.- El sistema además del patrón, obtiene el usuario creador del patrón con la siguiente consulta: $query = ' SELECT usuario.id AS usuario_id, usuario.cedula AS usuario_cedula, usuario.usuario AS usuario_usuario, usuario.contrasena AS usuario_constrasena, usuario.nombre AS usuario_nombre, usuario.apellido AS usuario_apellido, usuario.estatus AS usuario_estatus FROM usuario WHERE id = '".$id."' '; 83 e.- Una vez obtenido todos los campos que se muestran en la solución, el sistema genera el contenido con todos los parámetros que éste requiere, como lo son: número de páginas, formato, orientación, lenguaje, entre otros, así como los pasos de la solución al incidente consultado. El sistema muestra la solución en formato PDF (ver la siguiente lustración): Figura 53. Interfaz de ejemplo de patrón de solución a incidente de ST en formato pdf IV.3 Tecnologías utilizadas en el desarrollo Para llevar a cabo la implementación de la solución propuesta en este trabajo fue necesario recurrir a un conjunto de tecnologías, entre las que se destacan: las ontologías como mecanismo de gestión de conocimiento, la librería de Arc2 como interfaz para poder administrar la ontología desde una base de datos, así como para poder interactuar con esta a través del lenguaje de consultas SPARQL; y el patrón modelo-vista- controlador, para guiar la estructura del desarrollo. 84 Más información acerca de éstas y otras tecnologías utilizadas, a continuación. IV.3.1 Ontología de soporte técnico La ontología fue migrada desde el lenguaje RDF hasta el lenguaje OWL, con la ayuda del editor de ontologías Protégé4. En este proceso se realizaron las tareas de conceptualización, que establece la metodología Methontology, llevadas a cabo previamente por Ghanem, Núñez y Ramos (2014). IV.3.2 Librería Arc2 La librería de Arc2 permite la serialización, análisis, almacenamiento y consulta de archivos XML/RDF (GitHub, 2013). Arc2 es una implementación de un sistema triplestore (más información acerca del sistema triplestore en el Capítulo III, sección 3) basado en MySQL, que brinda soporte al lenguaje de consulta SPARQL, que permite la recuperación y eliminación de las tripletas contenidas en el triplestore. De esta manera, Arc2 permite administrar la ontología desde un triplestore en MySQL. Al igual que una base de datos relacional, el almacenamiento y recuperación de datos en un triplestore, se realiza a través de un lenguaje de consulta, pero a diferencia de una base de datos relacional, un triplestore está optimizado para el almacenamiento y recuperación de tripletas. Arc2, es de código abierto, está escrito en PHP y funciona en la mayoría de los entornos de servidor Web (todo lo necesario es PHP 5.3 o superior, y MySQL 4.0.18 o superior). Tiene capacidades propias de un analizador RDF y un motor SPARQL. Permite la carga y el procesamiento de RDF y OWL, acceso y almacenamiento de RDF remoto, y acceso y almacenamiento de RDF local. Las fuentes siguen a disposición de la comunidad a través de GitHub5. 4 http://protege.stanford.edu/ 5 https://github.com/semsol/arc2 85 IV.3.3 Patrón de desarrollo Modelo-Vista-Controlador (MVC) El sistema de gestión fue implementado bajo el patrón de desarrollo MVC. Este patrón arquitectónico se encuentra conformado por tres niveles (Potencier y Zaninotto, 2013): El Modelo, representa la información con la que trabaja la aplicación, es decir, su lógica de negocio. Es el único componente que tiene relación con la base de datos. La Vista, transforma el modelo en una página Web que permite al usuario interactuar con ella. Se encarga de la presentación de la aplicación. Es la visualización de lo que el modelo realizó y llega a través del controlador; de igual forma, cuando un usuario ingresa datos a través de ésta, es enviada al controlador. El Controlador, se encarga de procesar las interacciones del usuario y realiza los cambios apropiados en el modelo o en la vista. Es la parte de la aplicación que toma la información ingresada por el usuario a través de la vista y la envía al modelo, a su vez es quien deja la información lista para vista. IV.3.4 Otras Durante el proceso de desarrollo también se utilizaron las siguientes tecnologías: o El manejador de base de datos MySQL, que permite el almacenamiento de los patrones de solución de soporte técnico, y los datos de los usuarios. o El entorno de desarrollo de software PHP, para la interacción del usuario con el servidor. Esta función es transparente al usuario. o El framewok para la interfaz Web Bootstrap, formado por un conjunto de plantillas prediseñadas de códigos HTML, CSS y JQuery, que brindan la facilidad de personalizar los componentes de la interfaz de usuario. Estos componentes son editables y se adaptan fácilmente a los diferentes tamaños de los navegadores Web. 86 IV.4 Pruebas y resultados Para garantizar el correcto funcionamiento del sistema se realizaron una serie de pruebas sugeridas por Pressman (2002). Durante el desarrollo se realizaron pruebas de unidad y pruebas de integración, para validar cada módulo por separado y el sistema como un todo, respectivamente. Luego, se realizaron pruebas de validación, dirigidas a los expertos de conocimiento y a los facilitadores de los Infocentros. IV.4.1 Pruebas de unidad La prueba de unidad se enfoca en la unidad más pequeña de software, con una funcionalidad específica y bien delimitada. De esta manera, se facilita la tarea de encontrar errores dentro de las fronteras de la unidad. A continuación se detallan las pruebas de unidad realizadas. La primera prueba de unidad ejecutada, fue sobre la librería Arc2. En este proceso se construyó un controlador que permitió cargar la ontología desde un archivo OWL hacia la base de datos, y mostró todas las tripletas cargadas, pudiéndose verificar que estaban completas y correctas. Posteriormente, se adaptó el controlador para realizar pruebas en el proceso de inserción, actualización y eliminación de tripletas, durante la cual se pudo comprobar que la librería no permitía la actualización dentro de su implementación, pero como proceso alternativo, se podía simular mediante una eliminación y una inserción con los datos actualizados. Si bien esta alternativa resolvió el problema de la actualización, introdujo un nuevo inconveniente: como se necesitan dos consultas para realizar la modificación, estás no se encuentran dentro de una única transacción, y si el sistema falla, por ejemplo, al realizar la inserción, no hay forma de hacer rollback sobre la eliminación ya ejecutada. Y en este punto, no se encontró un API de la librería que permitiera el manejo de transacciones. Para cada elemento que se administra en la ontología, sean instancias de elementos tecnológicos o de incidencias de soporte técnico, existe una pequeña unidad funcional encargada de servir de interfaz para cada proceso administración de las mismas: 87 consulta, inserción, modificación, eliminación, etc. Cada una de estas unidades se probó por separado, con la ayuda de un controlador, que permitió proporcionar datos de prueba, para realizar las funciones de administración de las instancias, pudiéndose comprobar que los datos en la base de datos quedaron correctos. Posteriormente, se realizaron pruebas de unidad sobre el módulo de administración de los patrones de solución de soporte técnico. Verificando que los datos en la base de datos quedaron correctos, una vez realizadas las acciones sobre los patrones de solución: inserción, modificación y eliminación. De la misma manera se realizaron pruebas de unidad sobre el módulo de administración de usuarios, verificando la exactitud de los datos en la base de datos, después de realizar operaciones de inserción y modificación. IV.4.2 Pruebas de integración Si bien es cierto, que ya se verificaron cada uno de los componentes de manera individual, es necesario verificar cómo funcionan los componentes acoplados entre sí, ya que esta integración puede traer un serie de problemas: los datos pueden perderse a través de una interfaz; un componente puede tener un inadvertido efecto adverso sobre otro; las subfunciones, cuando se combinan, pueden no producir la función principal deseada; la imprecisión aceptable individualmente puede magnificarse a niveles inaceptables; las estructuras de datos globales pueden presentar problemas, etc. Por lo tanto, a continuación se detallan las pruebas de integración realizadas. La primera prueba de integración que se realizó, fue para validar la administración de las instancias de la ontología. Se introdujeron datos de prueba desde la interfaz Web, para crear instancias, luego las instancias fueron consultadas desde la misma interfaz Web, y se construyó un controlador, para visualizar las tripletas guardas en la base de datos; pudiendo verificar que los datos se agregaron correctamente. De la misma forma, se verificaron las operaciones de modificación y eliminación de instancias. En el mismo orden de ideas, se realizaron pruebas de integración con el módulo que permite exportar 88 la ontología a OWL; así, se realizaron una serie de inserciones, modificaciones y eliminaciones de instancias, a la vez que se exportaba la ontología en formato OWL a un archivo; este archivo fue abierto desde el editor de ontología Protégé, verificando que las instancias quedaron correctas en la ontología. Luego, se realizaron pruebas de integración sobre las funcionalidades de consultas de instancias de elementos tecnológicos, y de consultas y búsquedas de incidencias de soporte técnico y sus respectivos patrones de solución. En esta prueba también se realizaron operaciones de inserción, modificación y eliminación, tanto de instancias de la ontología como de patrones de solución, y posteriormente, realizando consultas y búsquedas, para validar que las operaciones se hicieran de manera exitosa. Estas pruebas arrojaron los resultados esperados. Por último, se realizaron pruebas integrando el módulo de usuarios. Se crearon y modificaron usuarios, se les agregaron los perfiles de administración de la ontología y de usuarios. Se verificó que los menús se desplegaran correctamente, para cada tarea sobre la que el usuario tenía permisos, y se ejecutaron cada una de estas tareas. En cada caso, se corrigieron los errores que se descubrieron a medida que se realizaban las pruebas. IV.4.3 Pruebas de validación Se realizaron dos tipos de pruebas de validación, una dirigida a los facilitadores de los Infocentros, y otra a los expertos de conocimiento, para comprobar la conformidad de éstos antes las respuestas proporcionadas por el sistema. Las pruebas de validación tienen como propósito mostrar al usuario el cumplimiento de un requisito del software, más especificamente: a) describen un escenario (secuencia de pasos) de ejecución o uso del sistema desde la perspectiva del usuario, b) pueden estar asociadas a requisitos funcionales o no funcionales, c) un requisito tiene una o más prueabs de validación asociadas y d) cubren desde escenarios típicos/frecuentes hasta los más excepcionales (Pressman, R., 2002). 89 La mayoría de los constructores de productos de software usan un proceso llamado prueba alfa y prueba beta para descubrir errores que al parecer sólo el usuario final es capaz de encontrar. La prueba alfa se realiza en un ambiente controlado, con la presencia del desarrollador, y es llevada a cabo por el usuario final, mientras el desarrollador registra los errores y problemas de uso. La prueba beta es realizada por el usuario final, generalmente sin la presencia del desarrollador. Por lo tanto, este no puede controlar el ambiente donde se realiza. El usuario registra los problemas encontrados durante esta prueba y los informa al desarrollador periódicamente. Por lo tanto, se realizaron pruebas de tipo alfa detalladas a continuación. IV.4.4 Pruebas de validación dirigidas a los facilitadores de los Infocentros Las pruebas de validación dirigidas a los facilitadores, se realizaron en cuatro Infocentros distintos, ubicados en Distrito Capital, en las cercanías de la sede principal de la fundación Infocentro, en ellas se solicita al facilitador que realice las siguientes acciones: (a) Hacer búsquedas de incidencias de soporte técnico, a través de una barra de búsquedas, (b) Consultar detalles de elementos tecnológicos presentes en los Infocentros, y (c) consultar incidencias de soporte técnico, seleccionado opciones de la lista de incidencias tecnológicas que muestra el sistema. Para ello, se construyeron las siguientes preguntas que fueron respondidas por los facilitadores. 1. ¿Fue posible usar la barra de búsqueda sin inconveniente? 2. ¿Obtuvo un resultado satisfactorio de acuerdo a la palabra clave introducida? 3. ¿Fue posible obtener detalles de al menos un elemento tecnológico presente en los Infocentros? 4. ¿Fue posible obtener soluciones a incidencias de soporte técnico de acuerdo a su selección? 90 5. ¿La solución de soporte técnico obtenido le permitió resolver el problema? 6. ¿Se sintió asistido por el sistema para resolver un problema de soporte técnico? Los resultados obtenidos, fueron tabulados en la Tabla 21. Tabla 21 Resultados de las pruebas de validación tipo alfa realizadas en 4 Infocentros Infocentro Facilitador(a) Pregunta Si No Mega MPPEUCTI José Luis Rodrígez 1. ¿Fue posible usar la barra de búsqueda sin inconveniente? X 2. ¿Obtuvo un resultado satisfactorio de acuerdo a la palabra clave introducida? X 3. ¿Fue posible obtener detalles de al menos un elemento tecnológico presentes en los Infocentros? X 4. ¿Fue posible obtener soluciones a incidencias de soporte técnico de acuerdo a su selección? X 5. ¿La solución de soporte técnico obtenido le permitió resolver el problema? X 6. ¿Se sintió asistido por el sistema para resolver un problema de soporte técnico? X Mega El Silencio Riensy Moreno 1. ¿Fue posible usar la barra de búsqueda sin inconveniente? X 2. ¿Obtuvo un resultado satisfactorio de acuerdo a la palabra clave introducida? X 3. ¿Fue posible obtener detalles de al menos un elemento tecnológico presentes en los Infocentros? X 4. ¿Fue posible obtener soluciones a incidencias de soporte técnico de acuerdo a su selección? X 5. ¿La solución de soporte técnico obtenido le permitió resolver el problema? X 6. ¿Se sintió asistido por el sistema para resolver un problema de soporte técnico? X Infocentro Catedral Jorge Bolívar 1. ¿Fue posible usar la barra de búsqueda sin inconveniente? X 2. ¿Obtuvo un resultado satisfactorio de acuerdo a la palabra clave introducida? X 3. ¿Fue posible obtener detalles de al menos un elemento tecnológico presentes en los Infocentros? X 4. ¿Fue posible obtener soluciones a incidencias X 91 de soporte técnico de acuerdo a su selección? 5. ¿La solución de soporte técnico obtenido le permitió resolver el problema? X 6. ¿Se sintió asistido por el sistema para resolver un problema de soporte técnico? Teatros Leonardo Escalona 1. ¿Fue posible usar la barra de búsqueda sin inconveniente? X 2. ¿Obtuvo un resultado satisfactorio de acuerdo a la palabra clave introducida? X 3. ¿Fue posible obtener detalles de al menos un elemento tecnológico presentes en los Infocentros? X 4. ¿Fue posible obtener soluciones a incidencias de soporte técnico de acuerdo a su selección? X 5. ¿La solución de soporte técnico obtenido le permitió resolver el problema? X 6. ¿Se sintió asistido por el sistema para resolver un problema de soporte técnico? X IV.4.5 Pruebas de validación dirigidas a los expertos de conocimiento Para realizar las pruebas de validación con los expertos de conocimiento, se creó un usuario con los permisos de administrador de ontología y de usuarios, luego se le solicitó un experto que navegara por el sistema e interactuara, siguiendo las siguientes consideraciones: o Realizar consultas de la misma forma que un facilitador, para esto utilizaron las mismas preguntas empleadas en la prueba anterior, obteniendo el resultado mostrado en la Tabla 22. Tabla 22 Resultados de las pruebas de validación tipo alfa, para la consulta de patrones de solución tecnológica, realizada por el experto de conocimiento Pregunta Si No 1. ¿Fue posible usar la barra de búsqueda sin inconveniente? X 2. ¿Obtuvo un resultado satisfactorio de acuerdo a la palabra clave introducida? X 3. ¿Fue posible obtener detalles de al menos un elemento tecnológico X 92 presentes en los Infocentros? 4. ¿Fue posible obtener soluciones a incidencias de soporte técnico de acuerdo a su selección? X 5. ¿La solución de soporte técnico obtenido le permitió resolver el problema? X 6. ¿Se sintió asistido por el sistema para resolver un problema de soporte técnico? X 7. ¿Está de acuerdo con la solución de soporte técnico consultada? X o Realizar inserción, modificación y eliminación de al menos una instancia de un tipo de elemento tecnológico. En esta prueba se obtuvo el siguiente resultado: Tabla 23 Resultados de las pruebas de validación tipo alfa, para la administración de elementos tecnológicos, realizada por el experto de conocimiento Pregunta Si No 1. ¿Fue posible insertar una nueva instancia de un tipo de elemento tecnológico y lo vio reflejado en el sistema? X 2. ¿Fue posible modificar una instancia de un tipo de elemento tecnológico existente y vio reflejado sus cambios en el sistema? X 3. ¿Fue posible eliminar una instancia de un tipo de elemento tecnológico existente y vio reflejado sus cambios en el sistema? X o Realizar inserción, modificación y eliminación de una instancia de incidencia y de una solución a una incidencia de soporte técnico. En esta prueba se obtuvo el siguiente resultado: Tabla 24 Resultados de las pruebas de validación tipo alfa, para la administración de incidencias de soporte técnico, realizada por el experto de conocimiento Pregunta Si No 1. ¿Fue posible insertar una nueva instancia de un tipo de incidencia tecnológica y la vio reflejado en el sistema? X 2. ¿Fue posible modificar una instancia de un tipo de incidencia tecnológica existente y vio reflejado sus cambios en el sistema? X 3. ¿Fue posible eliminar una instancia de un tipo de incidencia tecnológica existente y vio reflejado sus cambios en el sistema? X 4. ¿Fue posible insertar una solución de soporte técnico a una instancia de un tipo de incidencia tecnológica y la vio reflejado en el sistema? X 5. ¿Fue posible modificar una solución de soporte técnico a una instancia de un tipo de incidencia tecnológica existente y vio reflejado sus cambios en el sistema? X 6. ¿Fue posible eliminar una solución de soporte solución de soporte técnico a una instancia de un tipo de incidencia tecnológica existente y vio reflejado sus cambios en el sistema? X 93 o Exportar la ontología. En esta prueba se obtuvo el siguiente resultado: Tabla 25 Resultados de las pruebas de validación tipo alfa, para exportar la ontología, realizada por el experto de conocimiento Pregunta Si No ¿Fue posible exportar la ontología del sistema? X o Por último, se solicita al experto que consulte y que realice inserción y modificación de datos de usuarios. Tabla 26 Resultados de las pruebas de validación tipo alfa, para la administración de los usuarios, realizada por el experto de conocimiento Pregunta Si No 1. ¿Fue posible visualizar los distintos usuarios del sistema? X 2. ¿Fue posible insertar un nuevo usuario en el sistema? X 3. ¿Fue posible modificar los datos de un usuario del sistema? X IV.4.6 Análisis de Resultados Al analizar los resultados obtenidos, después de la realización de las pruebas mencionadas anteriormente, se observó que el sistema responde satisfactoriamente a las consultas realizadas y permite resolver problemas de soporte técnico de una forma asistida. También, permite crear nuevas soluciones de incidencias tecnológicas e incorporar nuevos elementos tecnológicos presentes en los Infocentros, lo que posibilita que los datos del sistema puedan incrementarse y actualizarse. Así mismo, se pudo constatar la necesidad de incorporar otras soluciones de soporte técnico, no implementadas en esta versión, como problemas con la instalación y solución a fallas frecuentes del navegador de Internet. Estas fallas fueron mencionadas por dos facilitadores consultados. 94 CONCLUSIONES Y RECOMENDACIONES Los desarrollos de sistemas que facilitan la gestión de conocimiento, son piezas estratégicas en las organizaciones, ya que permiten registrar, organizar, almacenar y consultar la información contenidas en ellas, para dar soluciones a las necesidades de un grupo de individuos. Es por ello que se ha diseñado un sistema basado en una ontología y soluciones de soporte técnico, que permite gestionar el conocimiento relacionado con el soporte técnico de los elementos tecnológicos presentes en los Infocentros, el cual contiene soluciones a las dificultades más frecuentes con las que se enfrentan los facilitadores en su día a día, para el mantenimiento y soporte técnico de los elementos tecnológicos que se encuentran en su espacio de trabajo. La ontología dirige la búsqueda, para obtener y recuperar de un repositorio de soluciones de soporte técnico, los incidentes que comúnmente se presentan en los Infocentros. Se pudo comprobar a través de pruebas de validación, realizadas a los facilitadores y expertos de conocimiento, que el sistema aporta soluciones a incidencias en instalación de programas de ofimática y en la resolución de problemas frecuentes con equipos de reproducción (impresoras), mediante la navegación por el sistema y las búsquedas semánticas a través de una o más palabras claves; incorporación de nuevos conocimientos a la ontología y a la base de patrones de soluciones, mediante un módulo de administración que posee funcionalidades que permite, a un personal de soporte técnico, agregar nuevas soluciones y nuevos elementos tecnológicos presentes en los Infocentros, así como desincorporar soluciones sub-utilizadas y elementos tecnológicos obsoletos de los Infocentros, cumpliendo de esta manera con los objetivos propuesto en esta investigación. El sistema desarrollado permite que los facilitadores y personal de soporte técnico, puedan acceder de manera sencilla y desde cualquier ubicación geográfica al conocimiento representado en la ontología concerniente a los conceptos de soporte técnico, a través de una arquitectura de software basada en el modelo propuesto por 95 (Kerschberg, 2001), así como la administración de la ontología y de las soluciones de soporte técnico. Recomendaciones Como todo sistema que se encuentra en constante crecimiento, es importante señalar algunas recomendaciones futuras para la mejorar y ampliar el sistema, a saber:  Incorporar nuevas soluciones de soporte técnico a otras incidencias de soporte técnico, como la instalación y resolución de problemas frecuentes con el navegador.  Incorporar el manejo de transacciones sobre Arc2, para evitar las inconsistencias en la base de datos de la ontología si llega a ocurrir algún error en un proceso de inserción, actualización o modificación.  Incorporar un módulo que permita la carga y el almacenamiento de imágenes en el sistema, que luego puedan ser referenciadas en cualquier patrón de solución tecnológica. 96 REFERENCIAS BIBLIOGRÁFICAS Abecker, A. y van Elst, L. (2009). Ontologies for Knowledge Management. En: Staab, S and Studer, R. (Eds). Handbook on Ontologies. International Handbooks 713 on Information Systems. Springer-Verlag Berlin Heidelberg. DOI 10.1007/978-3-540-92673-3. Alexander, C. (1979). The Timeless Way of Building. Inglaterra: The Oxford University Press. ISBN 978-0-19-502402-9. Arvind, R. y Srinivas, P. (2010). Knowledge based Systems. Jones and Bartlett Publishers. ISBN: 13-978-0-7637-7647-3. Barragán, A. (2009). Aproximación a una taxonomía de modelos de gestión de conocimiento. Intangible Capital. 5(1):65-101. ISSN: 1697-9818. Booch, G., Rumbaugh, J. y Jacobson, I. (2006). El lenguaje unificado de modelado. Madrid: PEARSON EDUCACIÓN, S.A. ISBN: 84-7829-076-1. Caro, M., Jiménez, J. y Toscano, R. (2011). Una arquitectura integrada para el modelado de sistemas informáticos de gestión de conocimiento en investigación formativa. Revista Avances en Sistemas e Informática. 8(3):157-163. ISSN: 1657-7663. Corcho, O., Fernández-López, M., Gómez-Pérez, A. y López, A. (2005). Building legal ontologies with METHONTOLOGY and WebODE. En: V.R. Benjamins et al (Eds). Law and the Semantic Web: Legal Ontologies, Methodologies, Legal Information Retrieval, and Applications. LNCS, 3369:142-157. Springer-Verlag. ISBN: 78-3-540-25063-0. Del Moral, A., Pazos, J., Rodríguez, E., Rodríguez-Patón, A. y Suárez, S. (2007). Gestión del Conocimiento. Thomson Editores. España. Fundación Infocentro (2008). La Fundación Infocentro: Razón de ser, Estrategias y Planes. [Documento en línea]. Disponible: http:// http://www.infocentro.gob.ve/descargas_detalle.php?id=73. [Consulta: 2014, Octubre 14]. Flores, I. (2011). Introducción al Razonamiento Sobre Ontologías. Nota de docencia del curso Ingeniería Ontológica. Escuela de Computación. Universidad Central de Venezuela. ND 2011-01. ISSN 1316-6239. Ghanem, A. (2013). Turorial ARC2.Universidad Central de Venezuela, Caracas, Venezuela. 97 Ghanem, A., Núñez, H. y Ramos, E. (2014). Un Sistema con Enfoque Ontológico para Gestionar Conocimiento de Soporte Técnico en los Infocentros. III Simposio Científico y Tecnológico en Computación - SCTC 2014 - Universidad Central de Venezuela, Caracas, Venezuela Giner, F. (2004). Los sistemas de información en la sociedad del conocimiento. España: Esic Editorial. ISBN: 84-7356-370-0. GitHub ARC2: Easy RDF and SPARQL for LAMP systems. 2013. [Programa de compu-tación en línea]. Disponible: https://github.com/semsol/arc2/ Gómez-Pérez, A., Fernández-López, M. y Corcho, M. (2004). Ontological Engineering. London: Springer-Verlag. Gruber, T. (1993). A Translation Approach to Portable Ontology Specifications. In: Knowledge Acquisition, 5(2):199-220, 1993. [Documento en línea]. Disponible:http://tomgruber.org/writing/ontolingua-kaj-1993.pdf. [Consulta: 2014, Octubre 16]. Grüninger, M. y Fox, M. (1995). Methodology for the design and evaluation of ontologies.[Documento en línea].IJCAI'95 Workshop on Basic Ontological Issues in Knowledge Sharing. Disponible: http://iir.ruc.edu.cn/pdf/Methodology%20for%20the%20Design%20and%20 Evaluation%20of%20Ontologies.pdf. [Consulta: 2014, Septiembre 27]. Kerschberg, L. (2001). Knowledge management in heterogeneous data warehouse environments. En: Kambayashi, Y., Winiwarter, W. y Arikawa, M. (Eds). Proceedings of the Third International Conference on Data Warehousing and Knowledge Discovery. LNCS, 2114:1-10. Springer-Verlag. Lamarca, M. (2013). Hipertexto: el nuevo concepto de documento en la cultura de la imagen. Tesis doctoral. Universidad Complutense de Madrid. [Documento en línea]. Disponible: http://www.hipertexto.info/documentos/owl.htm [Consulta: 2014, Octubre 16]. Lozano-Tello, A. (2002). Métrica de idoneidad de ontologías. Tesis Doctoral, Escuela Politécnica de Cáceres. Departamento de Informática. Universidad de Extremadura. España. ISBN: 84-7723-537-6. Noy, N. y McGuinness, D. (2001). Ontology development 101: A Guide to creating your first ontology. Stanford University. Stanford knowledge Systems Laboratory. Technical Report KSL-01-05. (2001). [Documento en línea]. Disponible: http://protegewiki.stanford.edu/wiki/Ontology101. [Consulta: 2014, Julio 03]. 98 Potencier F. y Zaninotto, F. (2013). Symfony 1.4, la guia definitiva. [Libro en línea]. Disponible: http://librosweb.es/symfony_1_4/capitulo_2/el_patron_mvc.html. [Consulta: 2014, Enero 24]. Pressman, R. (2002). Ingeniería del software, un enfoque práctico. 5° Edition. McGrawHill. Prud’hommeaux, E. y Seaborne, A. (2006). SPARQL Query Language for RDF. World Wide Web Consortium (W3C). [Documento en línea]. Disponible: http://www.w3.org/TR/2006/CR-rdf-sparql-query-20060406. [Consulta: 2014, Enero 18]. Ramos, E., Nuñez, H. y Casañas, R. (2009). Esquema para evaluar ontologías únicas para un dominio de conocimiento. Enl@ce: Revista Venezolana de Información, Tecnología y Conocimiento. 6(1):57-71. ISSN: 1690-7515. Rojas, M. y Sánchez, M. (2009). Diseño de un modelo conceptual para la construcción de una base de conocimiento del servicio de soporte en tecnologías de información. Revista Colombiana de Tecnología de Avanzada. 1(15):80-87. ISSN: 1692-7257. Ruiz, F. y Dolado, J. (2008). Una Ontología para la gestión del conocimiento de proyectos de software. Revista Española de Innovación, Calidad e Ingeniería del Software. 4(1):6-22. ISSN: 1885-4486. Soto, N. y Barrios, N. (2006). Gestión del conocimiento. Parte I. Revision crítica del estado del arte. Acimed: Revista cubana de los profesionales de la información y la comunicación en salud. 14(2). ISSN-e 1530-2880. Suárez, M. de. y Mujica, D. de. (2012). Nociones de informática I. Caracas: Distribuidora Escolar, S.A., ISBN: 980-07-6648-0. Sure, Y. y Studer, R. (2003). A Methodology for Ontology-based Knowledge Management. En: Davies, J., Fensel D. y van Harmelen F. (Eds). Towards the Semantic Web Ontology-driven Knowledge Management. Chapter 3. John Wiley y Sons, LTD. Uschold, M y King, M. (1995). Towards a methodology for building ontologies. [Documento en línea]. IJCAI'95 Workshop on Basic Ontological Issues in Knowledge Sharing. Disponible: http://citeseerx.ist.psu.edu/viewdoc/ download?doi=10.1.1.55.5357&rep=rep1&type=pdf Uschold, M. y Gruninger, M. (1996). Ontologies: Principles, Methods and ApplicationsKnowledge Engineering Review. 11(02): 93-136. [Documento en http://citeseerx.ist.psu.edu/ 99 línea]. Disponible:http://dx.doi.org/10.1017/S0269888900007797. [Consulta: 2014, Octubre 1]. Vizcaíno, A., Soto, J., García F., Ruiz, F. y Piattini, M. (2006). Aplicando gestión de conocimiento en el proceso de mantenimiento del software. Revista Iberoamericana de Inteligencia Artificial. 10(31):91-98. ISSN: 1137-3601. World Wide Web Consortium W3C (2014). Resource Description Framework (RDF). Consultado el 27/04/2014 de http://www.w3.org/RDF/ 100 ANEXO A. JUSTIFICACIÓN DEL ELEMENTO TECNOLÓGICO A POBLAR EN LA ONTOLOGÍA El proceso de adquisición de conocimiento, fue llevado a cabo inicialmente, por la Gerencia de Educación de la Fundación Infocentro. Esta gerencia trabajó en la elaboración de un material didáctico denominado “Orientaciones para la atención integral de nuestros recursos TECNOLÓGICOS”, dirigido a los facilitadores y a la comunidad que hace vida en los Infocentros, para que pudieran resolver, de manera autosuficiente, las diversas incidencias que se presentan en una parte de los equipos tecnológicos de los Infocentros. Como parte de este proceso, la Gerencia de Educación convocó una mesa de trabajo, a la que asistieron 5 facilitadores y 4 soportes técnicos, entre otros. Mediante esta mesa de trabajo, se lograron categorizar las incidencias más frecuentes de la siguiente manera:  Sobre instalación de programas o No puedo instalar un programa o No puedo desinstalar un programa o Cómo actualizo un programa o Cómo instalar Canaima  Problemas con la impresora o No aparece la impresora o No puedo imprimir o La impresión me sale corrida o distorsionada o La impresión me sale manchada o El papel se atascó en la impresora o El papel se atascó en la fotocopiadora o No puedo imprimir en otras máquinas  Problemas de conexión o No me puedo conectar a internet o No me puedo conectar a ciertas páginas o No tengo acceso a la carpeta compartida  Problemas de ofimática  Problemas con la computadora o La máquina se apaga sola o La máquina se reinicia sola o El equipo tiene ruido o No enciende el computador o Prende pero no sale la imagen en el monitor o La PC se queda pegada o guindada o La computadora emite pitidos  Problemas con el escritorio o Se borró el panel inferior o superior o No puedo cambiar la hora y fecha o No puedo ver las ventanas minimizadas o Se desconfiguró la resolución del escritorio o Se invirtió la imagen del escritorio o No aparece el icono de la red o No consigo el menú de inicio o La imagen es inestable o No se ven los iconos del escritorio 101 o Se cierra inesperadamente la aplicación de ofimática o No salen las barras de herramientas, función formato y/o dibujo o No funciona el diccionario en la aplicación de ofimática o Anda lenta la aplicación de ofimática o No se ven las imágenes en la aplicación de ofimática  Otros problemas frecuentes o No lee la memoria externa (pendrive) o No lee el CD o El proyector no muestra la imagen o No reconoce el proyector o No reconoce el lector o El puntero del ratón no se mueve  Problemas con el navegador o No puedo ver videos en el navegador o No veo la barra de navegación o de herramientas en el navegador o No se escucha en el navegador o No puedo abrir ciertas aplicaciones de internet en el navegador o Se visualiza muy grande o muy pequeño en el navegador Luego, continuando con el proceso de adquisición de conocimiento, se envío un cuestionario, vía correo electrónico, a todos los soportes técnicos desplegados alrededor del territorio nacional. Recibiendo respuesta, de 44 de estos soportes técnicos. Los datos obtenidos fueron categorizados de la siguiente manera:  Incidentes en aplicaciones o Instalación de aplicaciones o programas o Configuración de aplicaciones o programas o Instalación de paquetes de software o Configuración de paquetes de software o Problemas en las aplicaciones o Actualización de aplicaciones o Instalación de Kdenlive o Instalación de GIMP o Instalación de Audacity o Instalación de la suite educativa gcompriss o Instalación de juegos educativos o Instalación y configuración de plugins y complementos de java para utilizar la aplicación elluminate o Instalación y configuración de elluminate o Instalación y configuración de orca  Incidentes en el sistema operativo o Reinstalación del sistema operativo por fallas en el inicio o Kernel del sistema operativo dañado o Actualización del sistema operativo o Equipos en donde no arranca el sistema operativo satisfactoriamente o Instalación del sistema operativo o Daños en el sistema operativo o Sistema operativo caído con mensaje (code 4) kernel panic o Errores en el grub o Fallo al iniciar el servidor X, splashy error o Configuración del sistema operativo o Reparar paquetes rotos del sistema o Pérdida del sistema operativo o Canaima se queda pegado arrancando el sistema en 102 o Recuperación de información o Respaldos de información o Instalación de aplicaciones de control de tiempo  Incidentes en el navegador o Bloqueo de páginas indebidas o no autorizadas o Actualización del navegador web o Actualización de los plugins del navegador web o Eliminar del historial del navegador web por exceso de páginas en memoria o Permitir acceso a páginas relacionadas a redes sociales o Configuración de los plugins para el navegador web o Actualización de los plugins de flash en el navegador o Instalación de flash player en el navegador o Actualización del plugin de java en el navegador web  Incidentes en el escritorio o Cambio en el fondo de escritorio y exceso de íconos en éste o Entorno gráfico (Gnome) desconfigurado o Desconfiguración del desktop o Mal posicionamiento de la barra de menú o Accesos directos eliminados por los usuarios o Reestablecer paneles del escritorio del sistema o Limpiar escritorio del sistema operativo o Eliminación de las barras de menú o de estado por los usuarios o Ruta de acceso a carpeta de usuario dañada o Los usuarios modifican la interfaz gráfica de los equipos de computación  Incidentes en equipos de computación o Instalación de equipos nuevos en el Infocentro o Arreglo de equipos con fallas en el Infocentro o Equipo que no inicializa y se procede a su limpieza física o Cables de alimentación o corriente desajustados o No reconoce la memoria RAM o Computadora se cuelga o paraliza o Enciende el equipo y no da video o Mantenimiento preventivo y correctivo del equipo el grubsplash o Daños en el sistema de arranque del sistema operativo o Resolución de video no moderada o muy alta o Actualización de los repositorios para la corrección de algunas fallas del sistema operativo o Desconfiguración del sistema operativo o Problemas con el servidor X o No carga el sistema operativo o Problemas con las particiones en disco o Actualización de las aplicaciones del sistema operativo o Configuración de la red (Ips, Dnss, etc) o Errores en los clusters del disco duro o Creación de la carpeta compartida en la taquilla o Configuración del visor de escritorio remoto o Configuración de sonido o Instalación de complementos de video o Inconsistencias en el sistema de archivos de la partición raíz del sistema o Errores en el montaje de particiones de disco o El Canaima no reconoce muchas tarjetas inalámbricas integradas a las tarjetas madres. o Colapso del cups o Uso del xsane o Los servicios de red a veces fallan o Desconfiguración de la interfaz de red o Corrupción de datos o Computadora lenta por ejecutar al menos 2 aplicaciones al mismo tiempo  Incidentes en equipos de reproducción o Fotocopiadora dañada o Reinstalación por desconfiguración de escáner o Reinstalación por desconfiguración de impresora o Instalación de escáner o Instalación de impresora o Configuración de impresora o Configuración de escáner o Impresora dañada o Problemas con controladores de impresora o Atasco de papel en la impresora o Fallas de conexión entre las piezas de la impresora 103 o Fallas de hardware en el equipo de computación o Configurar hora del sistema y bios o Computador se reinicia o apaga cada cierto tiempo o El equipo no enciende o Problemas de navegar por muchas páginas por problemas de fechas o Limpieza interna del equipo de computación  Incidentes en equipos de computación (partes) o Disco duro con sectores dañados o Fuente de poder dañada o Limpieza del ventilador de la fuente de poder o Mantenimiento de conectores (RAM, disco duro, unidad de DVD, etc). o Instalación y configuración de piezas y partes por sustitución o Falso contacto con la memoria RAM o Equipos que pierden la configuración de la BIOS por pila gastada o Equipos que presentan alarmas sonoras por fallas en la tarjeta madre, memoria o video o Limpieza de conectores y buses de los equipos o Desconfiguración de las placas de red o Problemas de arranque por fallas de conexión de algún dispositivo ya sea RAM, disco duro, etc. o Fallas en el video o Memoria RAM dañada o Memoria sulfatada o Instalación de cámara web o Limpieza de la memoria RAM o Procesador dañado o Teclados con botones que se pegan o Sucio en los rodillos o Problemas con el servicio de impresión  Incidentes en la conectividad a Internet o Internet lento o caído o Baja conectividad o intermitencia en conexión satelital o Lentitud en la conexión a internet satelital o Lentitud en la conexión a internet o Se cae la conexión a internet satelital o Problemas con el ancho de banda o La conectividad es muy inestable en el servicio satelital o Problemas con la conectividad satelital o Problemas en la conectividad a internet o No hay internet  Incidentes en la red de datos o Cables de puntos de red dañados o Conectores RJ45 dañados o Reinstalación y certificación del cableado estructurado en algunos Infocentros o Revisión de los puntos de red o Cables de red dañados o Fallas en los puntos de red o Problemas con la red de datos Posteriormente, se realizaron entrevistas en la unidad de Medición de Impacto, la Gerencia de Tecnología y la Jefatura de Seguimiento y Control. Siendo está última, la encargada de gestionar los reportes de incidencias sobre los equipos tecnológicos en los Infocentros, de estas entrevistas se obtuvieron las siguientes conclusiones: Los facilitadores están capacitados y/o autorizados para resolver solo ciertos tipos de incidencias sobre los equipos tecnológicos. Para ello pueden valerse de algún tipo de 104 guía o manual, que los ayude en el proceso. Además, se les puede brindar ayuda vía telefónica, por parte del personal de la Fundación Infocentro. Solo los soportes técnicos están autorizados y capacitados para resolver las incidencias de hardware sobre los equipos tecnológicos. Esto debido, a que por ejemplo, si no se manipula correctamente una computadora durante la revisión de alguna parte de su hardware interno, está podría resultar dañada. También existen casos donde los equipos se encuentran en garantía y si su hardware interno es manipulado, se pierda dicha garantía. Dentro del grupo de las incidencias que pueden ser resueltas por los facilitadores, la que actualmente presenta mayor frecuencia es la instalación de programas. Además, otras incidencias relacionadas y con alto número de frecuencias son: la instalación de complementos, la instalación de drivers (para la cámara web, por ejemplo), la actualización del navegador y la instalación de complementos sobre el navegador. Debido a que la instalación de programas es la incidencia que presenta mayor número de frecuencias, y puede ser abordada mediante el sistema propuesto, se decidió seleccionar este como el elemento de soporte técnico a poblar dentro de la ontología. 105 ANEXO B. INSTALACIÓN DE ARC2 Para la instalación del plugin ARC2 se debe cumplir los siguientes requisitos: servidor web con soporte PHP4.3 o PHP5, puede descargarse a través del portal siguiente: http://www.php.net. También se necesita el Manejador de base de datos MySQL 5.0 o por encima, puede descargarse a través del portal siguiente: http://www.mysql.com. Para la instalación de las librerías de PHP los pasos a seguir son los siguientes: 1.- En un navegador web, ir a la página: https://github.com/tuukka/arc2-starter- pack, y descargar el paquete llamado tuukka-arc2-starter-pack-f9865d2.zip desde https://github.com/tuukka/arc2-starter-pack/zipball/master. 2.- Extraerlo en el directorio local con el nombre de tuukka-arc2-starter-pack- f9865d2.zip. Luego, navegar al directorio raíz del servidor web, por ejemplo: /var/www y crear dentro de éste un subdirectorio denominado arc2-starter-pack. 5.- Copiar el contenido del directorio tuukka-arc2-starter-pack- f9865d2 dentro del directorio arc2-starter-pack. Los siguientes directorios y archivos deberían estar dentro del directorio arc2-starter-pack: admin/ <dir>, cli.php, config.php, endpoint.php, index.php, README. En el directorio arc2-starter-pack crear un subdirectorio denominado arc. 6.- Volver al navegador web, ir a https://github.com/semsol/arc2/zipball/master y descargar el archivo semsol-arc2-495d10b.zip 7.- Extraerlo en el directorio local con el nombre semsol-arc2-495d10b.zip y copiar el contenido del directorio semsol-arc2-495d10b.zip dentro del directorio arc2- starter-pack/arc. Los siguientes directorios y archivos deberían estar dentro del directorio arc2-starter-pack/arc: extractors/ <dir>, parsers/ <dir>, serializers/ <dir>, parqlscript/ <dir>, store/ <dir>, .gitignore, ARC2.php, ARC2_Class.php, ARC2_getFormat.php, ARC2_getPreferredFormat.php, ARC2_Reader.php, ARC2_Resource.php, ARC2_TestHandler.php. https://github.com/tuukka/arc2-starter-pack https://github.com/tuukka/arc2-starter-pack https://github.com/tuukka/arc2-starter-pack/zipball/master https://github.com/semsol/arc2/zipball/master 106 ANEXO C. CREACIÓN DE LA BASE DE DATOS PARA LA CARGA DE LA ONTOLOGÍA CON ARC2 Y PHP Para la carga de la base de datos, en Ghanem (2013) se desarrolló el siguiente procedimiento: Sea un proyecto ontológico ontologiasoportetecnicov4.owl, que contiene la conceptualización de los equipos tecnológicos que pueden estar presentes en un centro tecnológico comunitario de acceso a internet. La ontología que contiene el proyecto ontológico se encuentra conformada por un archivo con extensión .owl cuyo contenido referencia al esquema de la ontología, sus conceptos, atributos de instancia y descripciones, y además contiene la base de conocimiento de la ontología (sus instancias). 1.- Vamos a generar un nuevo con extensión (.owl), éste archivo lo alojamos dentro del directorio arc2-starter-pack. 2.- Luego, a través de un manejador de base de datos local MySQL, creamos una base de datos denominada onto_st 3.- Creamos un archivo denominado load.php en el directorio arc2-starter-pack y escribimos el siguiente código: <?php include_once("./arc/ARC2.php"); $config = array( /* db */ 'db_name' => 'onto_st', /* nombre de la base de datos */ 'db_user' => 'root', /* nombre del usuario root de nuestro manejador*/ 'db_pwd' => '654321', /* clave del usuario root de nuestro manejador */ /* store */ 'store_name' => 'soporte', /* nombre del almacenamiento */ /* stop after 100 errors */ 'max_errors' => 100, ); $store = ARC2::getStore($config); if (!$store->isSetUp()) { $store->setUp(); } $store->query('LOAD <http://localhost/arc2-starter-pack/ontologiasoportetecnicoUnido.rdf>'); /* ruta de la ontología a cargar en la bd (archivo creado anteriormente) */ ?> 107 4.- Corriendo los servicios MYSQL, Apache, PHP, vamos al navegador y corremos el archivo load.php, escribiendo en la barra http://localhost/arc2-starter- pack/load.php. 5.- Para acceder a la ontología a través de SPARQL, haremos lo siguiente: Abriremos el archivo config.php que se encuentra en el directorio arc2-starter-pack/ y lo editaremos de la siguiente manera: <?php include_once(dirname(__FILE__).'/arc/ARC2.php'); // path to the file ARC2.php // SQL database configuration for storing the postings: $arc_config = array( /* MySQL database settings */ 'db_host' => 'localhost', 'db_user' => 'root', 'db_pwd' => '654321', 'db_name' => 'onto_st'/*'arc2test'*/, /* ARC2 store settings */ 'store_name' => 'soporte'/*'sandbox'*/, /* SPARQL endpoint settings */ 'endpoint_features' => array( 'select', 'construct', 'ask', 'describe', // allow read 'load', 'insert', 'delete', // allow update 'dump' // allow backup ), 'endpoint_timeout' => 60, /* not implemented in ARC2 preview */ 'endpoint_read_key' => '', /* optional */ 'endpoint_write_key' => '', /* optional */ 'endpoint_max_limit' => 250, /* optional */ ); 6.- Ya hemos cargado la ontología en la base de datos creada y ahora mostraremos cada una de las tripletas (sujeto – propiedad - objeto) de la ontología, almacenadas en la base de datos. Para ello, creamos un archivo llamado consulta1.php con el siguiente código. <?php include_once("arc/ARC2.php"); include_once('config.php'); $store = ARC2::getStore($arc_config); if (!$store->isSetUp()) { $store->setUp(); //create MySQL tables } $q = ' SELECT DISTINCT ?subject ?property ?object WHERE { ?subject ?property ?object . }'; $rows = $store->query($q, 'rows'); $r = ''; if ($rows = $store->query($q, 'rows')) { $r = '<table border=1> <th>Subject</th><th>Property</th><th>Object</th>'."\n"; foreach ($rows as $row) { $r .= '<tr><td>'.$row['subject'] . '</td><td>'.$row['property'] . '</td><td>'.$row['object'] . '</td></tr>'."\n";} $r .='</table>'."\n"; 108 } else{ $r = '<em>No data returned</em>'; } echo $r; ?> 7.- Vamos al navegador y corremos nuestro archivo consulta1.php escribiendo en la barra http://localhost/arc2-starter-pack/consulta1.php 8.- Ahora mostraremos cada uno de los conceptos de la ontología con sus respectivas descripciones, almacenados en la base de datos. Creamos un archivo consulta2.php <?php include_once("arc/ARC2.php"); include_once('config.php'); $store = ARC2::getStore($arc_config); if (!$store->isSetUp()) { $store->setUp(); //create MySQL tables } $q =' PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX kb: <http://protege.stanford.edu/kb#> SELECT ?label ?comment WHERE { ?clase rdfs:label ?label . ?clase rdfs:comment ?comment; rdf:type "http://www.w3.org/2000/01/rdf-schema#Class" . } '; $rows = $store->query($q, 'rows'); $r = ''; $i = 1; if ($rows = $store->query($q, 'rows')) { $r = '<table border=1><th>Número</th><th>Concepto</th><th>Descripción</th>'."\n"; foreach ($rows as $row) { $r .= '<tr><td>'. $i .'</td><td>'.$row['label'] . '</td><td>'. utf8_decode($row['comment']) . '</td></tr>'."\n"; $i ++; } $r .='</table>'."\n"; } else{ $r = '<em>No data returned</em>'; } echo $r; ?> 109 ANEXO D. GLOSARIO DE TÉRMINOS Nombre Sinónimo Acrónimo Descripción Tipo Computador de escritorio Ordenador, Computador PC Equipo de computación suficientemente pequeño para caber cómodamente en un espacio de trabajo individual (WordNet, 2012). Concepto Editor de hoja de cálculo Libreoffice 4.3.6 Calc - Aplicación de hoja de cálculo contenida en la aplicación de ofimática Libreoffice versión 4.3.6, que brinda la posibilidad de realizar representaciones gráficas y análisis de datos, integra la utilización de fórmulas complejas. Permite leer, ordenar y filtrar datos de bases de datos externas. Instancia Editor de hoja de cálculo Libreoffice 4.4.1 Calc - Aplicación de hoja de cálculo contenida en la aplicación de ofimática Libreoffice versión 4.4.1, permite realizar representaciones gráficas y análisis de datos, integra la utilización de fórmulas complejas. Permite leer, ordenar y filtrar datos de bases de datos externas. Instancia Editor de presentaciones Libreoffice 4.3.6 Impress - Aplicación de presentaciones contenida en la aplicación de ofimática Libreoffice versión 4.3.6 que permite crear de manera sencilla y rápida presentaciones multimedia efectivas. Provee funciones para añadir impresionantes efectos de animación y sensacionales efectos especiales, así como muchísimas funcionalidades más para la elaboración de presentaciones profesionales. Instancia Editor de presentaciones Libreoffice 4.4.1 Impress - Aplicación de presentaciones contenida en la aplicación de ofimática Libreoffice versión 4.4.1, que permite crear de manera sencilla y rápida presentaciones multimedia efectivas. Provee funciones para añadir impresionantes efectos de animación y sensacionales efectos especiales, así como muchísimas funcionalidades más para la elaboración de presentaciones profesionales. Instancia Libreoffice Base 4.4.1 Base de Datos BD DB Aplicación de gestión de bases de datos contenida en la aplicación de ofimática Libreoffice versión 4.4.1. Cuenta con una amplia gama de características, permite crear tablas, consultas, Instancia 110 formularios e informes, junto con un conjunto predefinido de definiciones de tablas para controlar activos, clientes, órdenes de venta, facturas y mucho más. Libreoffice Draw 4.4.1 Draw Dibujo - Aplicación de dibujo, contenida en la aplicación de ofimática Libreoffice versión 4.4.1. Es una herramienta que permite el diseño de gráficos de manera sencilla, permite generar fácilmente gráficas, dibujos, diagramas, etc., a partir de un documento nuevo o utilizando plantillas y gráficos provistos por Libreoffice-Draw es un excelente paquete para producir dibujos técnicos, carteles, etc, permite manipular objetos gráficos, agruparlos, recortarlos, usar objetos en 3D y mucho más. Instancia Libreoffice.org Math 4.4.1 Math - Aplicación de Libreoffice.org en su versión 4.4.1. Es una herramienta para crear y editar fórmulas matemáticas. Las fórmulas creadas se pueden importar a otros documentos de Libreoffice.org, tales como los creados en Writer. Math soporta múltiples fuentes y puede exportar a PDF. Instancia Openoffice calc 4.4.1 Calc - Aplicación de hoja de cálculo contenida en la aplicación de ofimática Openoffice versión 4.4.1, brinda la posibilidad de realizar representaciones gráficas y análisis para ayudar a generar transparentes conclusiones. También integra la utilización de fórmulas complejas. Permite leer, ordenar y filtrar datos de bases de datos externas para producir análisis estadísticos. Instancia Openoffice Draw 4.1.1 Draw Dibujo - Es un paquete gráfico contenido en el paquete Openoffice en su versión 4.1.1, proporciona las herramientas para comunicar con gráficos y diagramas. para pósteres técnicos o generales, etc, permite manipular objetos, rotarlos en dos o tres dimensiones, agruparlos y modificarlos; posee un controlador 3D, cuenta con esferas, anillos cubos, etc, permite crear imágenes fotorealísticas con su propia textura, efectos de iluminación, transparencia, perspectiva, etc. Instancia 111 Openoffice Impress 4.4.1 Impress - Aplicación de presentaciones contenida en la aplicación de ofimática Openoffice versión 4.4.1, que permite crear de manera sencilla y rápida presentaciones multimedia efectivas. Provee funciones para añadir impresionantes efectos de animación y sensacionales efectos especiales, así como muchísimas funcionalidades más para la elaboración de presentaciones profesionales. Instancia Openoffice Math 4.1.1 Math - Es un componente de Openoffice 4.1.1, para la creación de ecuaciones matemáticas. Generalmente se usa como editor de ecuaciones par documentos de texto pero también se puede usar con otros tipos de documento o como herramienta independiente. Cuando se utiliza dentro de Writer las ecuaciones son tratadas como objetos dentro del documento. Del mismo modo puede insertarlas en otros programas de Openoffice como Calc o Impress. Instancia Openoffice Writer 4.4.1 Writer - Procesador de texto contenido en la aplicación de ofimática Openoffice versión 4.4.1, que sirve para escribir desde una rápida carta hasta un libro completo, con sus tablas de contenido, ilustraciones incrustadas, bibliografías y diagramas. Permite la auto- completación, el autoformato y el chequeo de ortográfico automático, mientras se escribe, así como otras muchísimas funcionalidades. Instancia Procesador de texto Libreoffice 4.3.6 Writer - Procesador de texto contenido en la aplicación de ofimática Libreoffice versión 4.3.6, que sirve para escribir desde una rápida carta hasta un libro completo, con sus tablas de contenido, ilustraciones incrustadas, bibliografías y diagramas. Permite la auto- completación, el autoformato y el chequeo de ortográfico automático, mientras se escribe, así como otras muchísimas funcionalidades. Instancia Procesador de texto Libreoffice 4.4.1 Writer - Procesador de texto contenido en la aplicación de ofimática Libreoffice versión 4.4.1, que sirve para escribir desde una rápida carta hasta un libro completo, con sus tablas de contenido, ilustraciones incrustadas, bibliografías y Instancia 112 diagramas. Permite la auto- completación, el autoformato y el chequeo de ortográfico automático, mientras se escribe, así como otras muchísimas funcionalidades. Esta versión incluye nuevos tipos de letras, compartir documentos en SharePoint, OneDrive y cualquier otro sistema de gestión de contenidos que funcione con CMIS, sin necesidad de salir de Libreoffice. Sistema operativo Distribución SO S.O. Conjunto de programas que hacen funcionar al equipo de computación controlando toda la actividad que ésta realiza, sus componentes y la interrelación entre los programas de aplicación y los diversos dispositivos del equipo de computación (Suárez y Mujica, 2012). Concepto Soporte técnico Servicio técnico S.T. Es un conjunto de actividades preventivas y correctivas que se realizan sobre elementos tecnológicos, con el fin de mantener su operatividad. Concepto 113 ANEXO E. TABLA DE INSTANCIAS Nombre de instancia Concepto al que pertenece Atributos Valores Editor de hoja de cálculo Libreoffice 4.3.6 Aplicación de ofimática Nombre de la aplicación de programa Editor de hoja de cálculo Libreoffice Versión de la aplicación de programa 4.3.6 Editor de hoja de cálculo Libreoffice 4.4.1 Aplicación de ofimática Nombre de la aplicación de programa Editor de hoja de cálculo Libreoffice Versión de la aplicación de programa 4.4.1 Editor de presentaciones Libreoffice 4.3.6 Aplicación de ofimática Nombre de la aplicación de programa Editor de presentaciones Libreoffice Versión de la aplicación de programa 4.3.6 Editor de presentaciones Libreoffice 4.4.1 Aplicación de ofimática Nombre de la aplicación de programa Editor de presentaciones Libreoffice Versión de la aplicación de programa 4.4.1 Libreoffice Base 4.4.1 Aplicación de ofimática Nombre de la aplicación de programa Libreoffice Base Versión de la aplicación de programa 4.4.1 Libreoffice Draw 4.4.1 Aplicación de ofimática Nombre de la aplicación de programa Libreoffice Draw Versión de la aplicación de programa 4.4.1 Libreoffice Math 4.4.1 Aplicación de ofimática Nombre de la aplicación de programa Libreoffice Math Versión de la aplicación de programa 4.4.1 Openoffice Base 4.1.1 Aplicación de ofimática Nombre de la aplicación de programa Openoffice Base Versión de la aplicación de programa 4.1.1 114 Openoffice calc 4.4.1 Aplicación de ofimática Nombre de la aplicación de programa Openoffice calc Versión de la aplicación de programa 4.4.1 Openoffice Draw 4.1.1 Aplicación de ofimática Nombre de la aplicación de programa Openoffice Draw Versión de la aplicación de programa 4.1.1 Openoffice Impress 4.4.1 Aplicación de ofimática Nombre de la aplicación de programa Openoffice Impress Versión de la aplicación de programa 4.4.1 Openoffice Math 4.1.1 Aplicación de ofimática Nombre de la aplicación de programa Openoffice Math Versión de la aplicación de programa 4.1.1 Openoffice Writer 4.4.1 Aplicación de ofimática Nombre de la aplicación de programa Openoffice Writer Versión de la aplicación de programa 4.4.1 Procesador de texto Libreoffice 4.3.6 Aplicación de ofimática Nombre de la aplicación de programa Procesador de texto Libreoffice Versión de la aplicación de programa 4.3.6 Procesador de texto Libreoffice 4.4.1 Aplicación de ofimática Nombre de la aplicación de programa Procesador de texto Libreoffice Versión de la aplicación de programa 4.4.1 115 ANEXO F. EJEMPLO DE CONSULTAS DE LAS INCIDENCIAS DE SOPORTE TÉCNICO (ST) Y SUS SOLUCIONES Permite consultar las incidencias de soporte técnico definidas en el sistema. Se pueden visualizar tanto sus descripciones como los detalles de los elementos tecnológicos involucrados en las incidencias, y las soluciones a éstas. Figura 54. Interfaz de inicio-Consulta de Incidencia de ST a.- El usuario presiona el botón consultar incidencias de soporte técnico. b.- El sistema crea un arreglo con los iris de las clases de elementos tecnológicos presentes en la ontología al que se denomina irisST. Para obtener los datos de cada incidencia, se crea una lista de clases y se busca en la ontología las clases que hacen match con cada iri del arreglo antes mencionado, se obtienen los comment (contiene las definiciones y sinónimo de cada incidencia de soporte técnico), así como los label (nombre de la clase) que será desplegada en la siguiente vista. La consulta en sparql y función que realiza esta acción es la misma utilizada en el ejemplo de consulta de elemento tecnológico, donde cada $filtroClase es reemplazado por el siguiente iri presente en el arreglo irisST. Por ejemplo: si se sustituye FILTER('.$filtroClase.' ) por un iri que se encuentre en el arreglo iriST como el siguiente: FILTER (?clase = <http://www.owl- 116 ontologies.com/OntologySoporteTecnico.owl#CorregirImpresionManchada > ), se obtiene una solución similar a la que muestra en la Figura 55. Figura 55. Resultado de ejemplo de consulta de incidencia de ST De esta manera, se construye la siguiente vista de consultas de las incidencias de soporte técnico constituida por nombre (label) y definición (comment). Figura 56. Interfaz de ejemplo de consulta de incidencia de ST 117 c.- Presionando el botón consultar, se obtienen las instancias de la incidencia seleccionada y un resumen de la solución a esa incidencia. Por ejemplo si se hace clic en consultar de la incidencia corregir impresión manchada, el sistema busca el total de incidencias con el siguiente query de sparql. $query = ' PREFIX : <http://www.owl-ontologies.com/OntologySoporteTecnico.owl#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT (COUNT(?iri) AS ?totalElementos) WHERE { ?iri rdf:type :CorregirImpresionManchada. OPTIONAL { ?iri :uRLSoporteTecnico ?urlSoporteTecnico } . ?iri :enImpresora ?iriEquipoReproduccion . ?iriEquipoReproduccion rdf:type :Impresora. ?iriEquipoReproduccion :marcaEquipoReproduccion ?marcaEquipoReproduccion . ?iriEquipoReproduccion :modeloEquipoReproduccion ?modeloEquipoReproduccion . }'; Un ejemplo de ejecución de esta consulta es la siguiente: Figura 57. Resultado de ejemplo de consulta de incidencia de ST Una vez obtenida la cantidad, el sistema verifica si el total de elementos es mayor a cero, entonces se buscan las instancias a partir del iri y con estos resultados se construye la siguiente interfaz: 118 Figura 58. Interfaz ejemplo de consulta de incidencia de ST d.- El usuario hace clic en el botón ver detalles, el sistema muestra la solución del incidente consultado. (Ver Figura 59). Figura 59. Interfaz ejemplo de solución a incidente de ST 119 Al final de esta interfaz, se muestra las opciones siguientes: a) Regresar a la Búsqueda, y b) PDF. Figura 60. Interfaz exportar a PDF solución a incidente de ST e.- El usuario selecciona la opción PDF y el sistema genera la solución mostrada en el formato PDF, como se puede ver en la Figura 61. Figura 61. Interfaz Ejemplo de solución a incidente de ST en PDF 120 ANEXO G. EJEMPLO DE ADMINISTRACIÓN DE INSTANCIAS DE INCIDENCIAS DE ST Y SUS SOLUCIONES A través de esta opción el usuario con perfil administrador, podrá consultar y realizar un conjunto de operaciones sobre las instancias de las incidencias de soporte técnico definidas en la ontología. Estas operaciones incluyen insertar, modificar y eliminar las instancias. Además, se puede consultar e ingresar las soluciones de incidencias de soporte técnico, para cada una de estas instancias. Para los siguientes ejemplos, se crea un usuario con perfil administrador cuyo nombre y apellido es Administrador. Figura 62. Interfaz inicio-Administración de incidencias de ST a.- Una vez que el administrador presiona el botón Administrar de la opción instancias de incidencias de soporte técnico y sus soluciones. b.- El sistema crea un arreglo con los iris de las clases de soporte técnico, presentes en la ontología al que se denomina irisST. Para obtener los datos se crea una lista de clases y se busca en la ontología las clases de soporte técnico que haga match con cada iri del arreglo irisST, de estos, se obtienen los comment que contiene las definiciones y sinónimo de cada clase de ST, así como los label que contiene el nombre 121 de la clase. La consulta en Sparql y función que realiza esta acción es la misma utilizada en el ejemplo1 consulta de elemento tecnológico. De esta manera, se construye la siguiente vista de Administración de las instancias de las incidencias de soporte técnico constituida por nombre (label) y definición (comment). Figura 63. Interfaz Administración de instancias de incidencias de ST  Ejemplo de Inserción de instancia de incidencia de ST a.- Por Ejemplo el usuario selecciona la opción instalación de aplicación ofimática y de ella presiona el botón Insertar. d.- El sistema, muestra un formulario, que permitirá la inserción de una nueva instancia incidencia de ST con su solución (ver Figura 58). 122 Figura 64. Interfaz Formulario de inserción de instancia de incidencia de ST e.- El administrador desea agregar una nueva solución para la instalación de presentaciones Libreoffice 3.3.1 en el sistema operativo Canaima 3.1, para ello llena el formulario y presiona el botón Guardar. La Figura 65, muestra un ejemplo de llenado del formulario de patrón de solución a la incidencia Instalación de aplicación de ofimática, por parte del usuario. 123 Figura 65. Interfaz, ejemplo de llenado de patrón de solución f.- El sistema muestra el siguiente mensaje: Instancia de guardada satisfactoriamente, y refleja en detalle la instancia de incidencia agregada, como muestra la Figura 66. 124 Figura 66. Interfaz instancia de incidencia de ST agregada g.- Al seleccionar la pestaña Consultar de la vista mostrada en la Figura 66, el sistema muestra todas las incidencias de aplicación ofimática y en ella se visualiza la instancia agregada, ver Figura 67. 125 Figura 67. Interfaz consulta de Instancias de a incidencias de instalación de aplicación de ofimática.  Ejemplo de Modificación o eliminación de instancia de incidencia de ST a.- El usuario inicia sesión como administrador, y en la pantalla inicial del sistema, presiona el botón Administrar en la opción Administración de las instancias de incidencias de soporte técnico y sus soluciones. b.- El sistema obtiene la lista de instancias de incidencias de soporte técnico, de la misma forma como se describe en el ejemplo anterior (ejemplo de Inserción de instancia de incidencia de ST). c.- El usuario elige la opción instalación de aplicación ofimática y presiona el botón Consultar. d.- El sistema, obtiene la cantidad total de elementos de ST para la instalación de aplicación ofimática que existen en la ontología, para ello se utiliza el siguiente query: $query = ' PREFIX : <http://www.owl-ontologies.com/OntologySoporteTecnico.owl#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT (COUNT(?iri) AS ?totalElementos) 126 WHERE { ?iri rdf:type :InstalacionAplicacionOfimatica. OPTIONAL { ?iri :uRLSoporteTecnico ?urlSoporteTecnico } . ?iri :aplicacionOfimatica ?iriAplicacion . ?iri :sobreSistemaOperativo ?iriSistemaOperativo . ?iriAplicacion rdf:type :AplicacionOfimatica . ?iriAplicacion :nombreAplicacionPrograma ?nombreAplicacion . ?iriAplicacion :versionAplicacionPrograma ?versionAplicacion . ?iriSistemaOperativo rdf:type :SistemaOperativo. ?iriSistemaOperativo :nombreSistemaOperativo ?nombreSistemaOperativo . ?iriSistemaOperativo :versionSistemaOperativo ?versionSistemaOperativo . } '; La ejecución de esta consulta trae un resultado como el que se muestra en la siguiente imagen: Figura 68. Resultado de consulta a ejemplo de: total de elementos de ST para la instalación de aplicación ofimática e.- Una vez obtenida la cantidad de elementos, el sistema busca las instancias de ST en instalación de aplicación de ofimática, esto se logra a través de la siguiente consulta: PREFIX : <http://www.owl-ontologies.com/OntologySoporteTecnico.owl#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?iri ?urlSoporteTecnico ?iriAplicacion ?nombreAplicacion ?versionAplicacion ?iriSistemaOperativo ?nombreSistemaOperativo ?versionSistemaOperativo WHERE { ?iri rdf:type :InstalacionAplicacionOfimatica. OPTIONAL { ?iri :uRLSoporteTecnico ?urlSoporteTecnico } . ?iri :aplicacionOfimatica ?iriAplicacion . ?iri :sobreSistemaOperativo ?iriSistemaOperativo . ?iriAplicacion rdf:type :AplicacionOfimatica . ?iriAplicacion :nombreAplicacionPrograma ?nombreAplicacion . ?iriAplicacion :versionAplicacionPrograma ?versionAplicacion . ?iriSistemaOperativo rdf:type :SistemaOperativo. 127 ?iriSistemaOperativo :nombreSistemaOperativo ?nombreSistemaOperativo . ?iriSistemaOperativo :versionSistemaOperativo ?versionSistemaOperativo . } ORDER BY ?nombreAplicacion ?versionAplicacion ?nombreSistemaOperativo ?versionSistemaOperativo ?urlSoporteTecnico f.- Con la ejecución de esta consulta, se obtiene los detalles de las instancias que serán mostradas al usuario, este resultado es similar al que se muestra en la Figura 69. Figura 69. Resultado de consulta de detalles de instancias de ST en instalación de aplicación ofimática g.- Con estos resultados el sistema construye y despliega la interfaz mostrada en la Figura 71, (Interfaz Consulta de Instancias de incidencias de instalación de aplicación de ofimática). A través de esta interfaz el administrador puede modificar o eliminar una instancia de la lista desplegada presionando el botón ver detalles. Opción a).- El usuario selecciona la instancia que desea modificar, por ejemplo elige la opción nro4 Editor de presentaciones libreoffice versión 3.3.1, cuyo sistema operativo es CanaimaGNU/Linux versión 3.1 y posee una Solución de incidencia de soporte técnico que fue agregada en el ejemplo anterior (inserción), el usuario presiona el botón Ver Detalles. 128 i.- El sistema, mediante el iri de la instancia elegida obtiene los detalles de la misma, con el siguiente query de Sparql: $query = ' PREFIX : <http://www.owl-ontologies.com/OntologySoporteTecnico.owl#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?iri ?urlSoporteTecnico ?iriAplicacion ?nombreAplicacion ?versionAplicacion ?iriSistemaOperativo ?nombreSistemaOperativo ?versionSistemaOperativo WHERE { ?iri rdf:type :InstalacionAplicacionOfimatica . OPTIONAL { ?iri :uRLSoporteTecnico ?urlSoporteTecnico } . ?iri :aplicacionOfimatica ?iriAplicacion . ?iri :sobreSistemaOperativo ?iriSistemaOperativo . FILTER (?iri = <'.$iri.'>) . ?iriAplicacion rdf:type :AplicacionOfimatica. ?iriAplicacion :nombreAplicacionPrograma ?nombreAplicacion . ?iriAplicacion :versionAplicacionPrograma ?versionAplicacion . ?iriSistemaOperativo rdf:type :SistemaOperativo . ?iriSistemaOperativo :nombreSistemaOperativo ?nombreSistemaOperativo . ?iriSistemaOperativo :versionSistemaOperativo ?versionSistemaOperativo . } '; El Filtro usado en esta consulta dependerá de la instancia elegida, en este ejemplo el iri correspondiente es: InstalacionAplicacionOfimatica_1. Lo que trae como resultado los detalles que se visualizan en la siguiente imagen: Figura 70. Resultado de consulta: detalles de la incidencia de ST de la instancia instalación de aplicación de ofimática, editor de presentaciones Libreoffice 3.3.1 en Canaima 3.1 Con este resultado y el Url de Soporte Técnico obtenido (PST_12), se busca la solución de la incidencia en el repositorio de patrones de soluciones y luego se construye la vista que se muestra al usuario, la imagen siguiente es un ejemplo: 129 Figura 71. Interfaz patrón de solución a la incidencia: instalación de aplicación de ofimática del editor de presentaciones Libreoffice 3.3.1 en sistema operativo Canaima 3.1 Esta imagen muestra un patrón de solución de ST de la instancia instalación de aplicación ofimática, el cual está constituido por: (a) detalles del elemento tecnológico al cual se da solución, para este ejemplo corresponde a: nombre de la aplicación de programa y su versión, sistema operativo y su versión; (b) detalles del patrón de solución el cual contiene el nombre de la incidencia que resuelve seguido de la instancia de ET al que hace referencia, nombre del creador de la solución con su fecha de creación, nombre del autor que modificó por última vez el patrón y de igual manera la fecha de modificación, por último se muestra la descripción de la solución la cual está formada 130 por un conjunto de pasos a seguir para dar respuesta al incidente de ST, en este ejemplo en la incidencia instalación de aplicación ofimática. El usuario presiona el botón Modificar, el sistema permite la edición del patrón de solución para la instancia seleccionada, ésta última no podrá ser modificada mediante esta interfaz. En este ejemplo, el usuario modifica los pasos del patrón y presiona el botón Actualizar, como se muestra en la Figura 72. Figura 72. Interfaz Modificar instancia de ST de aplicación ofimática El sistema captura y guarda los datos del formulario, establece el usuario que realiza la modificación del patrón, y luego actualiza la instancia de soporte técnico en 131 instalación de aplicación ofimática, en la base de datos, para ello primero el sistema guarda los datos del usuario que hace la modificación, luego valida los datos capturados del formulario, obtiene el Url de soporte técnico del patrón asociado a la instancia con la siguiente consulta: INSERT INTO patrones ( codigo, nombre, solucion, autor_crea, fecha_crea ) VALUES ( '".$codigo."', '".$GLOBALS['PATRONES_CLASS_DB']->Quote($patron->getNombre())."', '".$GLOBALS['PATRONES_CLASS_DB']->Quote($patron->getSolucion())."', ".$patron->getUsuarioCreador()->getId().", NOW() ) Si el patrón no tiene un nombre, el sistema lo crea a partir del nombre de la incidencia de ST, por ejemplo: InstalaciónAplicacionOfimatica, lo concatena con el nombre de la aplicación Editor de presentaciones libreoffice 3.3.1, y el nombre del sistema operativo y su versión. Si no existe un patrón para la instancia a actualizar, el sistema crea uno con el formulario respectivo y lo guarda en el repositorio de patrones de soluciones mediante el siguiente query: $query = " UPDATE patrones SET nombre = '".$GLOBALS['PATRONES_CLASS_DB']->Quote($patron->getNombre())."', solucion = '".$GLOBALS['PATRONES_CLASS_DB']->Quote($patron->getSolucion())."', autor_mod = ".$patron->getUsuarioUltimaModificacion()->getId().", fecha_mod = NOW() WHERE codigo = '".$patron->getCodigo()."' "; El sistema muestra como resultado el siguiente mensaje: instancia actualizada satisfactoriamente y despliega los detalles de la instancia modificada, como se ilustra en la siguiente imagen: 132 Figura 73. Interfaz resultado de ejemplo en modificación de incidencia de ST Opción b).- El usuario presiona el botón Eliminar a- El usuario selecciona la instancia que desea eliminar, por ejemplo elige la opción Editor de presentaciones libreoffice versión 3.3.1, cuyo sistema operativo es CanaimaGNU/Linux versión 3.1 y posee una Solución de incidencia de soporte técnico que fue agregada en el ejemplo de inserción, el usuario presiona el botón ver detalles. b.- El sistema primero elimina el patrón del repositorio mediante la siguiente consulta: $query = " DELETE FROM patrones WHERE codigo = '".$codigo."' "; c.- el sistema borra los datos de la instancia, desde la base de datos usando el siguiente query, para este ejemplo, se sustituyen las variables por los valores correspondientes a la instancia que va a ser eliminada: $query = ' PREFIX : <http://www.owl-ontologies.com/OntologySoporteTecnico.owl#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> 133 DELETE FROM <'.SIGECOST_IRI_GRAFO_POR_DEFECTO.'> { ?iri ?predicado ?objeto . } WHERE { ?iri rdf:type :InstalacionAplicacionOfimatica . ?iri ?predicado ?objeto . FILTER (?iri = <InstalacionAplicacionOfimatica_1>) . } '; El sistema muestra una ventana emergente en la cual solicita una confirmación de este procedimiento, en esta ventana se muestra la siguiente pregunta: ¿Está seguro que desea eliminar la instancia?, el usuario presiona el botón aceptar. El sistema muestra por resultado el mensaje siguiente: Instancia eliminada satisfactoriamente, adicionalmente despliega la lista de Instancias de instalación de aplicación ofimática, donde se puede corroborar que la instancia ya no existe, la Figura 74 es un ejemplo de la interfaz mostrada al usuario al ejecutar esta operación: Figura 74. Interfaz de ejemplo de eliminación de instancia de incidencia de ST en aplicación ofimática. 134 ANEXO H. EJEMPLOS DE ADMINISTRACIÓN DE USUARIOS La administración de usuarios, permite crear y modificar usuarios del sistema, el sistema otorga hasta dos opciones de administración: opción a) administrador de incidencias que permite al usuario gestionar incidencias de ST y sus soluciones, opción b) administrador de usuarios, permite la gestión de usuarios del sistema. o Ejemplo de creación de usuario: a.- El usuario logueado con perfil de administración de usuario, hace clic en Usuarios de la barra de navegación, (ver Figura 75). Figura 75. Interfaz Administración de usuarios b.- El sistema obtiene la cantidad total de elementos de usuarios que se obtendrán en la búsqueda, a través de la siguiente consulta: $query = " SELECT count(*) AS totalElementos FROM usuario "; Una vez obtenido el total de elementos, el sistema realiza las validaciones respectivas y luego hace la siguiente consulta para obtener los datos que serán mostrados. $query = " SELECT usuario.id AS usuario_id, usuario.cedula AS usuario_cedula, usuario.usuario AS usuario_usuario, #usuario.contrasena AS usuario_constrasena, usuario.nombre AS usuario_nombre, usuario.apellido AS usuario_apellido, usuario.estatus AS usuario_estatus FROM usuario ORDER BY usuario.nombre, usuario.apellido "; Con estos resultados, el sistema muestra una interfaz como la siguiente: 135 Figura 76. Interfaz detalles de usuarios del sistema c.- El usuario presiona la pestaña Insertar, y el sistema despliega el siguiente formulario que permite el ingreso de datos. Figura 77. Interfaz de formulario de ingreso de nuevo usuario d.- El usuario, introduce los datos, y presiona el botón Guardar. 136 e.- El sistema, obtiene, valida y guarda todos los valores de los campos del formulario en variables y luego las almacena en la base de datos con el siguiente query: $query = " INSERT INTO usuario ( usuario, contrasena, cedula, nombre, apellido ) VALUES ( '".$GLOBALS['PATRONES_CLASS_DB']->Quote($usuario->getUsuario())."', '".$GLOBALS['PATRONES_CLASS_DB']->Quote($usuario->getContrasena())."', '".$GLOBALS['PATRONES_CLASS_DB']->Quote($usuario->getCedula())."', '".$GLOBALS['PATRONES_CLASS_DB']->Quote($usuario->getNombre())."', '".$GLOBALS['PATRONES_CLASS_DB']->Quote($usuario->getApellido())."' )"; f.- El sistema guarda los roles del usuario mediante el siguiente query: $query = " INSERT INTO usuario_rol ( id_usuario, id_rol ) VALUES ( '".$GLOBALS['PATRONES_CLASS_DB']->Quote($usuario->getId())."', '".$GLOBALS['PATRONES_CLASS_DB']->Quote($rol->getId())."' ) "; g.- El sistema despliega un mensaje indicando que se ha guardado el nuevo usuario satisfactoriamente, y muestra los detalles del usuario creado. o Ejemplo de modificación de datos de usuario a.- El administrador una vez logueado y con perfil de administrador de usuarios, hace clic en Usuarios que se encuentra en la barra de navegación del sistema (ver Figura 78). Figura 78. Interfaz 1 para administrar usuarios de Sigecost b.- el sistema obtiene los datos de los usuarios encontrados en la base de datos y los muestra en una interfaz como la siguiente: (ver Figura 79). 137 Figura 79. Interfaz 2 de administración de usuarios de Sigecost c.- el administrador de usuarios, elige el usuario al cual desea modificar y presiona el botón ver detalles. Por ejemplo el usuario elige el número 3 de la lista (jsoto). d.- El sistema, envía el id del usuario para su búsqueda en la base de datos. e.- el sistema realiza la siguiente consulta para obtener los datos: $query = " SELECT usuario.id AS usuario_id, usuario.cedula AS usuario_cedula, usuario.usuario AS usuario_usuario, usuario.contrasena AS usuario_constrasena, usuario.nombre AS usuario_nombre, usuario.apellido AS usuario_apellido, usuario.estatus AS usuario_estatus FROM usuario WHERE id = '".$id."' "; f.- El sistema muestra los detalles del usuario consultado, como se muestra en la siguiente pantalla: Figura 80. Interfaz detalles de usuario 138 g.- El administrador presiona el botón Modificar. h.- el sistema muestra un formulario que permite la edición de los campos del usuario a modificar (ver Figura 81). Figura 81. Interfaz ejemplo de un formulario para modificar datos de usuario i.- Por ejemplo, el administrador, cambia los datos de usuario, en los siguientes campos del formulario: usuario, cedula y otorga el rol es administrado de incidencias. Luego presiona el botón Actualizar. La siguiente imagen es un ejemplo de modificación de datos: 139 Figura 82. Interfaz ejemplo de actualización de datos de usuario j.- El sistema, obtiene, valida y guarda los datos desde el formulario y luego actualiza con el siguiente query: $query = " UPDATE usuario SET usuario = '".$GLOBALS['PATRONES_CLASS_DB']->Quote($usuario->getUsuario())."', contrasena = '" .$GLOBALS['PATRONES_CLASS_DB']->Quote($usuario->getContrasena())."', cedula = '".$GLOBALS['PATRONES_CLASS_DB']->Quote($usuario->getCedula())."', nombre = '".$GLOBALS['PATRONES_CLASS_DB']->Quote($usuario->getNombre())."', apellido = '".$GLOBALS['PATRONES_CLASS_DB']->Quote($usuario->getApellido())."' WHERE id = '".$usuario->getId()."' "; k.- El sistema borra los roles de administración que posee el usuario, antes de la actualización en la base de datos, mediante el siguiente query: $query = " DELETE FROM usuario_rol WHERE id_usuario = '".$usuario->getId()."' "; l.- El sistema hace la inserción de los nuevos roles del usuario en la base de datos a través del siguiente query: INSERT INTO usuario_rol (id_usuario, id_rol ) VALUES ( '".$GLOBALS['PATRONES_CLASS_DB']->Quote($usuario->getId())."', '".$GLOBALS['PATRONES_CLASS_DB']->Quote($rol->getId())."' ) "; m.- finalmente, el sistema muestra en la próxima interfaz los datos del usuario actualizado. (Ver siguiente figura): 140 Figura 83. Interfaz usuario actualizado o Ejemplo de modificar datos de Mi Cuenta A través de esta opción los usuarios registrados en el sistema, pueden modificar sus datos. a.- El usuario inicia sesión en el sistema, y presiona el botón Mi Cuenta, que se encuentra en el menú principal del sistema (ver Figura 83): Figura 84. Interfaz administrar Mi cuenta b.- el sistema valida que el usuario haya iniciado sesión, luego obtiene los datos del usuario mediante el id y con el siguiente query: $query = " SELECT usuario.id AS usuario_id, usuario.cedula AS usuario_cedula, usuario.usuario AS usuario_usuario, usuario.contrasena AS usuario_constrasena, usuario.nombre AS usuario_nombre, usuario.apellido AS usuario_apellido, usuario.estatus AS usuario_estatus FROM usuario WHERE id = '".$id."' "; 141 c.- Los datos obtenidos de la ejecución del query anterior, se muestran al usuario en un formulario cuyos únicos campos modificables son: usuario y contraseña. Figura 85. Interfaz formulario para actualizar datos a través de la operación Mi cuenta d.- El usuario cambia el valor del campo usuario, dejando la antigua contraseña, y el sistema realiza la actualización de datos, de la misma forma que en el ejemplo anterior (modificar datos de usuario) y muestra los resultados de esta operación. Figura 86. Interfaz datos actualizados a través de la opción Mi cuenta