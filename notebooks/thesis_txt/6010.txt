UNIVERSIDAD CENTRAL DE VENEZUELA FACULTAD DE CIENCIAS ESCUELA DE COMPUTACIÓN APLICACIÓN MÓVIL DE PREGUNTAS Y RESPUESTAS ENTRE PROFESORES Y ESTUDIANTES (Q&A PLATFORM) Trabajo Especial de Grado presentado ante la Ilustre Universidad Central de Venezuela Por los Bachilleres: Ronald Ramón Prado Palacios Diego Mauricio Brito Pérez Para optar por el título de Licenciado en Computación Tutor: Robinson Rivas Caracas, abril 2017 1 2 DEDICATORIA A mi madre, a quien amo, que ha sido mi gran apoyo y me enseño que con constancia y perseverancia puedo alcanzar todas mis metas y ser siempre un hombre de bien. A mi padre, a quien amo, mi gran compañero, quien me dio siempre su ejemplo de lucha y esfuerzo para convertirme en un gran profesional y un hombre de bien, tal como soy. A mi hermana, a quien amo, que siempre representará mi ejemplo a seguir en muchos aspectos y en mi desempeño como persona y como profesional, porque represento su ejemplo a seguir también. A mi novia, amiga y compañera de vida, quien me ha ayudado a buscar la fortaleza y enseña que la felicidad está en las cosas más simples, como el amor que le tengo y siempre le tendré. A mis abuelos maternos, que están en el cielo y mi abuela paterna que sigue en vida, a quienes amo y les pido todos los días me cuiden, den fuerzas y ánimo para seguir adelante. A mis amigos que en la distancia o cercanía me han colaborado y apoyado y a todas las personas que puedan beneficiarse directa o indirectamente con este proyecto. Ronald A mi madre, quien nunca dejó de confiar en mi por sobre todas las cosas, me enseñó sin palabras a que con amor, todo es posible. A mi padre, quien solo con su ejemplo me mostró todo lo que necesitaba saber y más, de él aprendí a que no hay límites y a odiar la frase “no puedo”, porque todo es posible. A mi hermana, mi amiga y segunda madre, por siempre estar para mí para lo que sea, me enseñó a valorar a mi familia antes que nada. A mi hermano, mi amigo y segundo padre, por cuidarme y protegerme por sobre todas las cosas, por hacerme sentir cada vez más grande con su orgullo hacia mí. A Patricia, Camila y Sophia, mis sobrinas por amarme sin condiciones, sus sonrisas llenan mi vida de felicidad y hacen que luche para seguir adelante. A mi abuela, que en paz descanse, por enseñarme a siempre ver los problemas con una sonrisa y con buen humor. A todos mis amigos, quienes con su amistad me brindaron un hogar y en ellos encontré el amor de familia que necesité cuando me sentí solo. Diego 3 AGRADECIMIENTOS A Dios. A nuestras familias y personas amadas. A nuestros amigos. A Ana Morales. A Robinson Rivas. Y a todos los estudiantes que intervinieron en este proyecto de manera directa o indirecta y al equipo perteneciente al Portal de Sitios Web de Asignaturas. 4 RESUMEN La comunicación entre profesores y estudiantes en la Facultad de Ciencias de la Universidad Central de Venezuela, es un tema de suma importancia y mientras existan medios más eficaces y en mayor cantidad para garantizar dicha comunicación, se asegura la educación de calidad esperada en esta casa de estudios. Este trabajo presenta la elaboración e implementación de una aplicación móvil integrada al Portal del Asignaturas de la Facultad de Ciencias (Portalasig). Se basa en el desarrollo de una aplicación móvil híbrida para el sistema operativo Android, construida con Ionic Framework y la librería AngularJS (basado en el lenguaje de programación JavaScript). La aplicación móvil es una plataforma de preguntas y respuestas (Q&A Platform) del tipo Fuente de Multitud (Crowdsourcing) organizada por materias y grupos de trabajo (generales y específicos) para los estudiantes y profesores. La aplicación móvil resultante, se comunica con Portalasig a través de una API en funcionamiento, por lo tanto, no hace falta un registro de usuarios en la misma. Los estudiantes y profesores tendrán a la mano el acceso a un foro de las materias que imparten, sin importar el lugar donde se encuentren, gracias a la practicidad de dicha aplicación en su dispositivo móvil. La aplicación móvil se probó en un contexto real de una materia obligatoria de la Escuela de Computación de la UCV, mostrándose al final del documento los resultados obtenidos en cuanto a interacción y aceptación de la herramienta Palabras clave: aplicación móvil, plataforma Q&A 5 ÍNDICE TEMÁTICO RESUMEN ................................................................................................................................... 4 ÍNDICE DE FIGURAS ............................................................................................................... 7 ÍNDICE DE TABLAS ............................................................................................................... 10 INTRODUCCIÓN ..................................................................................................................... 11 CAPÍTULO I – PROBLEMA DE INVESTIGACIÓN .......................................................... 14 1.1. INTRODUCCIÓN ................................................................................................................ 14 1.2. PLANTEAMIENTO DEL PROBLEMA .................................................................................... 14 1.3. SOLUCIÓN PROPUESTA...................................................................................................... 17 1.4. OBJETIVOS ........................................................................................................................ 18 1.4.1. Objetivo General ....................................................................................................... 18 1.4.2. Objetivos Específicos ................................................................................................ 18 1.5. JUSTIFICACIÓN.................................................................................................................. 19 1.6. ALCANCES ........................................................................................................................ 19 CAPÍTULO II – MARCO CONCEPTUAL ........................................................................... 21 2.1. INTRODUCCIÓN ................................................................................................................ 21 2.2. PLATAFORMAS DE PREGUNTAS Y RESPUESTAS ................................................................ 21 2.2.1. Piazza ........................................................................................................................ 22 2.2.2. Lore ........................................................................................................................... 31 2.2.3. Academia ................................................................................................................... 35 2.2.4. Portalasig (Portal de sitios web de asignaturas) ........................................................ 44 2.2.5. Comparación ............................................................................................................. 51 2.3. TECNOLOGÍAS DE DESARROLLO ....................................................................................... 53 2.3.1. Tipos de aplicaciones móviles ................................................................................... 53 2.3.2. Tecnologías de desarrollo del “Lado del Cliente” ..................................................... 57 2.3.3. Tecnologías de desarrollo del “Lado del Servidor” .................................................. 66 CAPÍTULO III – MARCO METODOLÓGICO ................................................................... 67 3.1. INTRODUCCIÓN ................................................................................................................. 67 3.2. METODOLOGÍA DE DESARROLLO ..................................................................................... 67 3.3. ETAPAS DEL DESARROLLO ............................................................................................... 69 3.3.1. Etapa I. Planificación ................................................................................................ 69 3.3.2. Etapa II. Diseño ......................................................................................................... 70 3.3.3. Etapa III. Codificación .............................................................................................. 70 3.3.3. Etapa IV. Pruebas ...................................................................................................... 72 6 CAPÍTULO IV – MARCO APLICATIVO ............................................................................ 73 4.1. INTRODUCCIÓN ................................................................................................................. 73 4.2. CONTEXTO DEL PROYECTO .............................................................................................. 73 4.3. DETALLE DE LA SOLUCIÓN .............................................................................................. 73 4.4. ETAPAS DE DESARROLLO DE APLICACIÓN HÍBRIDA PARA ANDROID ................................ 79 4.4.1. Etapa I. Planificación ................................................................................................ 79 4.4.2. Etapa II. Diseño ......................................................................................................... 80 4.4.3. Etapa III. Codificación ............................................................................................. 81 4.4.3.1. Arquitectura .................................................................................................... 81 4.4.3.2. Aplicación Web Móvil .................................................................................. 82 4.4.3.3. Funcionalidades de la aplicación e interfaz de usuario .................................. 90 4.4.4 Etapa IV. Pruebas .................................................................................................... 105 CAPÍTULO V – RESULTADOS GENERALES ................................................................. 112 CAPÍTULO VI – CONCLUSIONES .................................................................................... 115 APÉNDICE 1 ........................................................................................................................... 118 APÉNDICE 2 ........................................................................................................................... 139 APÉNDICE 3 ........................................................................................................................... 146 REFERENCIAS BIBLIOGRÁFICAS .................................................................................. 147 7 ÍNDICE DE FIGURAS Figura 1. Vista inicial Piazza. .................................................................................................... 23 Figura 2. Filtrar por publicaciones en Piazza.. ........................................................................... 24 Figura 3. Agregar clase.. ............................................................................................................ 25 Figura 4. Buscar clase.. .............................................................................................................. 25 Figura 5. Escoger clase.. ............................................................................................................ 26 Figura 6. Menú principal.. .......................................................................................................... 26 Figura 7. Menú lateral.. .............................................................................................................. 27 Figura 8. Opciones.. ................................................................................................................... 27 Figura 9. Nueva pregunta.. ......................................................................................................... 28 Figura 10. Detalle nueva pregunta.. ........................................................................................... 28 Figura 11. Línea del tiempo.. ..................................................................................................... 29 Figura 12. Responder pregunta.. ................................................................................................ 29 Figura 13. Nueva pregunta.. ....................................................................................................... 30 Figura 14. Línea del tiempo pregunta respondida.. .................................................................... 30 Figura 15. Vista principal Lore.. ................................................................................................ 31 Figura 16. Nuevo post Lore. ...................................................................................................... 32 Figura 17. Nuevo evento Lore. .................................................................................................. 33 Figura 18. Nuevo examen Lore. ................................................................................................. 33 Figura 19. Invitar miembro Lore. ............................................................................................... 33 Figura 20. Biblioteca Lore. ........................................................................................................ 34 Figura 21. Programa de clases Lore. .......................................................................................... 34 Figura 22. Ajustes de la clase Lore.. .......................................................................................... 34 Figura 23. Comentario de estudiante en Lore. ........................................................................... 35 Figura 24. Menú Stack Exchange y barra principal.. ................................................................. 36 Figura 25. Sección de notificaciones o publicaciones.. .............................................................. 36 Figura 26. Enlace principal: Questions. ..................................................................................... 37 Figura 27. Enlace principal: Tags.. ............................................................................................ 37 Figura 28. Enlace principal: Users. ............................................................................................ 38 Figura 29. Enlace principal: Badges. ......................................................................................... 38 Figura 30. Enlace principal: Unanswered .................................................................................. 39 Figura 31. Enlace principal: Ask Question. ............................................................................... 39 Figura 32. Detalle de una pregunta y su respuesta(s). ................................................................ 40 Figura 33. Menú móvil de las comunidades de Stack Exchange. .............................................. 41 Figura 34. Menú principal, enlaces principales y preguntas. ..................................................... 41 Figura 35. Listado de tags del sistema. ...................................................................................... 42 Figura 36. Listado de usuarios del sistema. ............................................................................... 42 Figura 37. Formulario para crear una pregunta. ......................................................................... 43 Figura 38. Detalle de una pregunta. ........................................................................................... 43 Figura 39. Login del sistema ...................................................................................................... 44 Figura 40. Página inicial de Portalasig. ...................................................................................... 45 Figura 41. Agregar nueva materia .............................................................................................. 46 8 Figura 42. Sección de Información General............................................................................... 46 Figura 43. Sección de Contenido Temático. .............................................................................. 47 Figura 44. Listado del grupo docente. ........................................................................................ 47 Figura 45. Gestión y búsqueda de preparadores. ....................................................................... 48 Figura 46. Gestión de horarios. .................................................................................................. 48 Figura 47. Gestión de estudiantes. ............................................................................................. 49 Figura 48. Gestión de entregas. .................................................................................................. 49 Figura 49. Creación de un nuevo foro. ....................................................................................... 50 Figura 50. Publicación dentro de un foro. .................................................................................. 50 Figura 51. Publicación dentro de un foro. .................................................................................. 51 Figura 52. Selector HTML. ........................................................................................................ 60 Figura 53. Selector de clase. ...................................................................................................... 60 Figura 54. Selector ID. ............................................................................................................... 61 Figura 55. Gráfico de lenguajes de programación más usados del Lado del Servidor .............. 66 Figura 56. Etapas de la Metodología XP.................................................................................... 69 Figura 57. Arquitectura del sistema móvil Cienciapp. ............................................................... 71 Figura 58. Flujo de interacción MVC. ....................................................................................... 72 Figura 59. Estructura del proyecto en Ionic Framework (Frontend). ......................................... 83 Figura 60. Se busca un usuario en la base de datos mediante CakePHP. .................................. 84 Figura 61. Se busca un usuario en el API de Portalsig mediante PHP ....................................... 84 Figura 62. Estructura del Framework CakePHP (Backend). ..................................................... 85 Figura 63. Datos JSON al crear sesión. ...................................................................................... 87 Figura 64. Datos JSON al recuperar información del usuario ................................................... 87 Figura 65. Datos JSON de la información del semestre actual. ................................................. 88 Figura 66. Datos JSON de la materia impartida por el profesor. ............................................... 88 Figura 67. Modelo Entidad-Relación de la base de datos de la aplicación. ............................... 89 Figura 68. Interfaz de login en la aplicación. ............................................................................. 90 Figura 69. Interfaz de bienvenida y menú principal (PROFESOR). .......................................... 90 Figura 70. Interfaz de perfil (PROFESOR). ............................................................................... 91 Figura 71. Interfaz de aulas. Aula inactiva (PROFESOR). ........................................................ 92 Figura 72. Interfaz del listado de aulas y detalle de un aula. Aula activa (PROFESOR).. ........ 92 Figura 73. Interfaz del listado de estudiantes y filtro de alguno (PROFESOR). ....................... 93 Figura 74. Interfaz del foro general (PROFESOR) .................................................................... 94 Figura 75. Interfaz de crear nuevo tema dentro del foro general (PROFESOR) ....................... 94 Figura 76. Notificación emergente. Eliminar un tema del foro general (PROFESOR). ............ 95 Figura 77. Interfaz de editar un tema dentro del foro general (PROFESOR). ........................... 95 Figura 78. Interfaz de detalle de un tema y sus respuestas dentro del foro general (PROFESOR). ………………………………………………………………………………………...96 Figura 79. Mensaje emergente, confirmación de respuesta correcta de un tema (PROFESOR).97 Figura 80. Explorador de archivos del Smartphone y mensaje de éxito al adjuntar archivo (PROFESOR)…………………………………………………………………………...97 Figura 81. Interfaz de foro por grupos. Listado de grupos (PROFESOR) ................................. 98 Figura 82. Interfaz de crear nuevo foro por grupos. Listado de participantes (PROFESOR). ... 98 Figura 83. Interfaz de editar foro por grupos. Listado de participantes (PROFESOR).. ........... 99 9 Figura 84. Interfaz del detalle del foro por grupos. Listado de temas dentro del mismo (PROFESOR)………………………………………………………………………..100 Figura 85. Interfaz de mensajes privados. Detalle de una conversación (PROFESOR). ......... 100 Figura 86. Interfaz de bienvenida (ESTUDIANTE). ............................................................... 101 Figura 87. Detalle de un aula y secciones disponibles (ESTUDIANTE). ............................... 102 Figura 88. Interfaz del foro general. Listado de temas (ESTUDIANTE). .............................. .103 Figura 89. Interfaz del foro por grupos. Listado de grupos al que pertenece (ESTUDIANTE).104 10 ÍNDICE DE TABLAS Tabla 1. Tabla comparativa de las herramientas de preguntas y respuestas ............................... 52 Tabla 2. Comparación de características claves para el desarrollo y uso entre aplicaciones nativas y web móviles ................................................................................................................. 56 Tabla 3. Compatibilidad de los nuevos controles de formulario por navegador ........................ 58 Tabla 4. Comparación de características de los frameworks MVC descritos ............................ 66 Tabla 5. Notificaciones vía correo electrónico de la aplicación ............................................... 105 Tabla 6. Prueba de funcionamiento 1 ....................................................................................... 106 Tabla 7. Prueba de funcionamiento 2 ....................................................................................... 106 Tabla 8. Prueba de funcionamiento 3 ....................................................................................... 107 Tabla 9. Prueba de funcionamiento 4 ....................................................................................... 107 Tabla 10. Prueba de funcionamiento 5 ..................................................................................... 108 Tabla 11. Prueba de funcionamiento 6 ..................................................................................... 108 Tabla 12. Prueba de funcionamiento 7 ..................................................................................... 109 Tabla 13. Prueba de funcionamiento 8 ..................................................................................... 109 Tabla 14. Prueba de funcionamiento 9. Android ...................................................................... 110 Tabla 15. Prueba de funcionamiento 10 ................................................................................... 110 Tabla 16. Prueba de funcionamiento 11 ................................................................................... 111 Tabla 17. Prueba de funcionamiento 12 ................................................................................... 111 11 INTRODUCCIÓN En la actualidad resulta difícil caminar por las calles de las principales ciudades de Venezuela o del mundo, sin darse cuenta de la gran cantidad de personas que poseen algún tipo de dispositivo móvil, en específico un teléfono inteligente (Smartphone). De igual forma sucede al caminar por los pasillos de la Facultad de Ciencias de la Universidad Central de Venezuela, donde se evidencia la gran cantidad de estudiantes y profesores que poseen estos dispositivos. Los dispositivos móviles son pequeños computadores de mano, que permiten a sus usuarios realizar diferentes actividades mientras se desplazan de un lugar a otro. Por esta razón, este tipo de dispositivo tiene una gran cantidad de aplicaciones en el campo de la educación. Gracias al uso de dispositivos móviles los profesores y estudiantes pueden tener acceso a información sin importar el lugar donde se encuentren. Esta información incluye libros de texto, material de investigación, ejemplos de exámenes de semestres anteriores, etc. Portalasig es un portal web que contempla el manejo y administración de las asignaturas de la Facultad de Ciencias de la Universidad Central de Venezuela, posee un panel de gestión para los profesores en el cual se puede subir contenido de la asignatura, tales como: notas, material de apoyo, archivos, etc. También tiene la posibilidad de habilitar el foro por materias. Con el fin de ampliar y fortalecer las funcionalidades de Portalasig, se planteó el diseño, desarrollo e implementación de una aplicación móvil, que al integrarse a Portalasig, permita que los profesores y estudiantes de la Facultad de Ciencias de la Universidad Central de Venezuela aumenten su comunicación mediante un foro por materias. La aplicación móvil, representa una herramienta de gran utilidad para los estudiantes y profesores de la facultad, ya que, al estar integrada con el API de Portalasig, requiere un registro previo para utilizarla y complementa al sistema Portalasig con el uso de dispositivos móviles. Entre las ventajas del desarrollo de la aplicación móvil se encuentran:  Aumenta el alcance y beneficios que ofrece el portal web Portalasig.  Acceso a un foro por materia en la que se podrán discutir distintos temas referente a la asignatura y permitiéndole al profesor seleccionar la respuesta correcta de una discusión en específico. 12  Permite la comunicación entre profesores y estudiantes por medio de la aplicación móvil en todo momento.  Creación de grupos de estudiantes dentro de una materia.  El profesor podrá guiar su clase dependiendo de las dudas presentadas en el foro general o grupal dentro de la aplicación móvil. En este trabajo, se evalúan los aspectos técnicos relevantes para la implementación de ésta aplicación, tomando en cuenta las soluciones. Se presenta, además, la metodología y arquitecturas empleadas para la integración de cada una de las herramientas que se adaptan adecuadamente al contexto de la Facultad. Para este desarrollo, se implementó la solución de una aplicación híbrida en el sistema operativo Android bajo el Framework Ionic en conjunto con la librería AngularJS para el frontend y CakePHP para el backend. Esta aplicación está implementada para el usuario “Profesor” y el usuario “Estudiante”, teniendo funcionalidades distintas para los tipos de usuarios. Además, este sistema operativo por ser de tecnología abierta y adaptable, permite realizar cualquier cambio que se requiera hacer durante el desarrollo. Este trabajo especial de grado está conformado por los siguientes capítulos:  Capítulo I. Planteamiento del Problema En este capítulo se plantea la problemática actual y las limitaciones con respecto a la comunicación entre los profesores y los estudiantes, además se definen los objetivos, el alcance y la solución propuesta de esta investigación.  Capítulo II. Marco Conceptual En este capítulo se definen todos los conceptos relacionados con los dispositivos móviles, portales que apoyan la educación a distancia y aplicaciones en el ámbito educativo, además se describe el sistema Portalasig. 13  Capítulo III. Marco Metodológico En este capítulo se describe la metodología utilizada y las diferentes etapas en las que se llevó a cabo el desarrollo de la aplicación.  Capítulo IV. Marco Aplicativo En este capítulo se presentan el detalle de las diferentes etapas de desarrollo por las que se llevaron a cabo la aplicación desarrollada, además se describen las pruebas realizadas y los resultados de las mismas.  Capítulo V. Resultados Generales En este capítulo se presentan los resultados generales obtenidos con el desarrollo de esta investigación.  Capítulo VI. Conclusiones En este capítulo se detallan las conclusiones generales de esta investigación, las limitaciones existentes y las recomendaciones para trabajos futuros. 14 CAPÍTULO I – PROBLEMA DE INVESTIGACIÓN 1.1. Introducción En este capítulo se plantea el problema en relación con las limitaciones de la comunicación entre profesores y estudiantes que forman parte de la Facultad de Ciencias para acortar los tiempos de respuesta y emitir de manera efectiva las dudas y/o consultas por parte de los estudiantes y los materiales de estudio y planificación de evaluaciones de parte de los profesores a los estudiantes. Seguidamente se expone la solución propuesta, se señala el objetivo general de este trabajo y los objetivos específicos, además se justifica la realización de éste trabajo y se delimita su alcance. 1.2. Planteamiento del problema Las clases en la Facultad de Ciencias de la Universidad Central de Venezuela (UCV) son presenciales, los estudiantes tienen horarios y aulas, bien definidos desde el inicio del semestre, en los cuales se encuentran con sus profesores para recibir el conocimiento acerca de una materia en específico. Las materias suelen dividirse entre teoría y práctica. La teoría la imparte el profesor de la materia (sea contratado o de dedicación exclusiva). De igual modo, los laboratorios o clases exclusivas de prácticas de la materia la imparten generalmente estudiantes de semestres avanzados con cargo de preparador. Siendo estos estudiantes activos, comprenden las dudas del alumnado regular, brindan técnicas para la resolución de problemas y resuelven dudas generales. No obstante, se da el caso de profesores que se encargan directamente de estas clases de práctica. Fuera del horario de clases presenciales dentro de la universidad, los profesores asignan y envían al alumnado regular información referente a la materia que imparten. Esta información puede tratarse de láminas digitales de teoría, cuestionarios, guías prácticas, enunciados de prácticas de laboratorio, entre otros. Esto se logra actualmente a través de algunos medios de comunicación como el Internet. El primer medio de comunicación en línea más usado, para este propósito universitario, es el correo electrónico. El profesor a través de una cuenta de correo universitaria (o personal en caso de urgencia, como Gmail, Yahoo, Hotmail, etc.) hace llegar a los estudiantes la información anteriormente descrita. El estudiante regular también lo usa para plantear su duda y esperar una respuesta. 15 Otras de las posibilidades usadas por los profesores son: plantear una pregunta a través del Portal de Sitios Web de Asignaturas Portalasig, que le brinda la posibilidad de crear un foro por materia (dependerá de que el profesor utilice ésta herramienta), accediendo a una cuenta en portales de tipo “wiki” para descargar o subir el material requerido por el profesor y los estudiantes, horas de consultas fuera del horario de clases (esto dependiendo si el profesor es de dedicación exclusiva o no), esperar a la hora de clases para resolver las dudas por parte de los estudiantes. El acceso a Portalasig desde un dispositivo móvil no está disponible actualmente, al igual que la capacidad de gestión de operaciones de edición, eliminación, agregar clases y otras acciones de interacción eficiente que presentan otros portales. Esta situación denota, en la mayoría de los casos, las desventajas del portal propio de la Facultad de Ciencias respecto a otras herramientas de comunicación entre profesores y estudiantes. Sin embargo, existen casos limitados de profesores que utilizan herramientas alternativas, puesto que, ofrecen la facilidad de que pueda manipularse la información de clases desde una plataforma móvil en vez de una plataforma web. Este es el caso de Piazza1, el cual permite que su suba y descargue contenido, crear foros personalizados por clase, edición de preguntas y respuestas por cada foro y la posibilidad de acceso a la cuenta desde una plataforma web o móvil. Estas opciones existentes y mencionadas anteriormente, poseen desventajas que afecta la comunicación efectiva entre profesores y estudiantes a través del tiempo. El correo electrónico, por ejemplo, es un medio de comunicación efectivo en la medida que tanto profesores como estudiantes estén muy al pendiente de responder y consultar los mensajes entrantes en sus respectivas cuentas. Esto debido a que es un medio de comunicación asíncrono, y esto provoca que los tiempos de respuesta tengan un retardo considerable para los involucrados. La herramienta Piazza, a pesar de tener más facilidades en cuanto a gestión y experiencia de usuario, es una herramienta de poco uso debido a la complejidad y cantidad de opciones que en la misma existen, tal que, el usuario (profesor o estudiante) tiende a perder más tiempo en aprender y manipular dichas funcionalidades que en dedicarse a consultar y dar respuesta a la información que se crea por clase y/o foro. Además, esta herramienta tiene muchas funciones u opciones dentro de ella que son más una distracción que componentes de utilidad. 1 http://www.piazza.com 16 Los profesores de dedicación exclusiva son los que permiten horarios de consulta efectivos y fijos dentro de la universidad y la facultad, los que no lo son, se encuentran muy poco disponibles en persona dentro del campus en el caso de una consulta en persona. Con esto, los estudiantes de este profesor deberán recurrir a otro de los medios mencionados anteriormente para poder comunicarse. Si se analiza las situaciones mencionadas de la plataforma “Portalasig” a través de un recurso móvil, se le permite a los profesores y estudiantes de la Facultad una comunicación más efectiva en cuanto a practicidad (puesto que, un dispositivo móvil es un recurso de primera necesidad y prioridad actualmente), tiempo de respuesta y consulta de información (acceder a la información navegando por Internet, a través de un equipo móvil, es comúnmente más rápido que encender una computadora o laptop y conectarse a Internet) y mejora de experiencia de usuario (tanto profesores como estudiantes universitarios, requieren libertad de comunicación y comodidad de acceso a la información donde quiera que se encuentren, sin la limitante de sentarse frente a un computador en un determinado momento o lugar adecuado para poder comunicarse). Existe entonces la necesidad de la implantación de una aplicación móvil que permita el intercambio de información (referente a clases y evaluaciones) y comunicación entre profesores y estudiantes, que se encuentran y hacen vida dentro de la Facultad de Ciencias de la Universidad Central de Venezuela, reutilizando el Portal de Sitios Web de Asignaturas “Portalasig”. Una solución móvil, puede beneficiar a todos los usuarios que acceden y manejan la información dentro de “Portalasig” que utilicen dispositivos móviles, y en particular para los profesores y estudiantes que posean un dispositivo con el sistema operativo Android. Una aplicación que les permita superar las limitaciones con la conexión a Internet y a la información requerida dentro del Portal de Sitios Web de Asignaturas propio de la Facultad, para facilitar la comunicación entre ellos durante cada semestre en curso. 17 1.3. Solución propuesta Se propone el diseño, desarrollo e implementación de una Plataforma de Preguntas y Respuestas (Q&A Platform) del tipo Fuente de Multitud (Crowdsourcing) desarrollada en una aplicación móvil híbrida para el sistema operativo Android, con PHP + Angular JS para el manejo funcional y modelo de datos (backend) y Ionic Framework para completar el funcionamiento en la visualización e interacción de la interfaz de usuario (frontend), que se conecte y consulte los datos de usuarios e información de clases que se encuentran en el API de “portalsig”, y permita la gestión de preguntas y respuestas entre los profesores y estudiantes que utilizan dicho portal dentro de la Facultad de Ciencias. De este modo, ofrecer un medio eficiente y a la mano para consultar, subir y descargar materiales de estudios y evaluaciones, plantear y responder dudas a través de foros interactivos (grupos de participantes) y que los actores de este sistema puedan comunicarse. Para poder implementar dicha aplicación móvil se realiza un levantamiento de información que permita identificar elementos clave en el contexto y dominio de las segundas opiniones. La realización de una aplicación móvil que actúe como una Plataforma de Preguntas y Respuestas (Q&A Platform) del tipo Fuente de Multitud (Crowdsourcing) tiene su dificultad y no representa una tarea trivial, puesto que, es necesario evaluar las plataformas web de este tipo existentes en el mercado, de común y mayor uso, para determinar así las adaptaciones y mejoras que se pueden desarrollar y aplicar aprovechando las ventajas que ofrece la tecnología móvil. Es por esto que se analiza la problemática descrita en el punto anterior con los siguientes criterios principales:  Primera: evaluar las plataformas de Preguntas y Respuestas (Q&A Platform) del tipo Fuente de Multitud (Crowdsourcing) existentes y adoptar así las funcionalidades de interés en una aplicación móvil.  Segunda: ésta se deriva de la primera, en vez de adoptar íntegramente el sistema existente de “Portalasig” e implantarlo de manera móvil, se crearán algunas interfaces, se adoptarán funcionalidades y flujo de información de interés, pero haciendo uso del servicio API, de manera que sea adaptado a las necesidades de la tecnología móvil y poder complementar así el módulo ya existente. 18 Para optar por alguno de estos criterios es necesario previamente conocer las limitaciones que presenta la tecnología móvil con respecto a la tecnología tradicional. Así mismo, se realiza una evaluación completa sobre el sistema actual para determinar así las funcionalidades más importantes y llevarlas de este modo a un ambiente móvil. Esta evaluación es un prerrequisito para el eventual desarrollo y/o implantación de una plataforma móvil de preguntas y respuestas. Posterior a la evaluación, se realiza el desarrollo y/o implementación de la aplicación móvil de preguntas y respuestas. Esto responde a la necesidad de poder mantener la comunicación efectiva e intercambio de información mediante foros entre los profesores y estudiantes que imparten y reciben clases, respectivamente, dentro de la Facultad de Ciencias de la Universidad Central de Venezuela. 1.4. Objetivos 1.4.1. Objetivo General Desarrollar una plataforma de preguntas y respuestas (Q&A Platform) del tipo Fuente de Multitud (Crowdsourcing) en una aplicación móvil que soporte los procesos para la gestión de preguntas, respuestas, subida y descarga de archivos para los tipos de usuarios: profesor y estudiante, integrada a la aplicación web Portalasig. 1.4.2. Objetivos Específicos Para alcanzar el objetivo general planteado se establecen los siguientes objetivos específicos:  Estudiar los sistemas de comunicación educativos existentes actualmente.  Analizar los sistemas de comunicación educativos.  Determinar los requerimientos para desarrollar una aplicación de comunicación educativa del tipo preguntas y respuestas para dispositivos móviles.  Diseñar la aplicación de comunicación educativa del tipo preguntas y respuestas.  Implementar la aplicación de comunicación educativa del tipo preguntas y respuestas.  Realizar pruebas de funcionalidad de aplicación de comunicación educativa desarrollada. 1.5. Justificación 19 El uso de una aplicación móvil de preguntas y respuestas se justifica por las siguientes razones:  Ayuda a fortalecer la comunicación entre los profesores y estudiantes pertenecientes a la Facultad de Ciencias, complementando el Portal o Plataforma de Asignaturas Web (portalasig) mediante el uso de dispositivos móviles.  Permite obtener de manera más rápida y eficiente la información requerida desde “Portalasig” sin limitarse a la plataforma web ya creada (y la dificultad de visualización de la misma en un navegador desde el celular).  Permite realizar la gestión de preguntas y respuestas, asignaciones, entre otras funcionalidades, para los profesores y estudiantes.  Aporta a los usuarios, en mayor medida, reducir el tiempo de espera para la resolución de dudas de los estudiantes y a los profesores llevar un mayor control de su materia.  Asegura que la curva de aprendizaje en cuanto al uso de las funcionalidades claves del Portal de Sitios Web de Asignaturas, no es pronunciada, puesto que, esta plataforma móvil contiene una interfaz de fácil uso, minimalista y simplificada en comparación a las plataformas web del tipo “Fuente de Multitudes” existentes. 1.6. Alcances Se define como alcance del presente proyecto especial de grado los siguientes puntos:  Implementar una plataforma de preguntas y respuesta (Q&A Platform) del tipo “Fuente de Multitud” en una aplicación móvil para dispositivos de sistema operativo Android, que le permita a los miembros de la comunidad de la Facultad de Ciencias de la UCV (profesores y estudiantes) comunicarse mediante mecanismos asíncronos como foros y notificaciones vía correo electrónico, además de la subida y descarga de archivos, tomando como caso de estudio a la Facultad de Ciencias de la UCV.  Integrar a la aplicación de comunicación educativa, características que propicien la sociabilidad virtual entre los usuarios: o Crear un aula virtual agregando estudiantes por parte del profesor. 20 o Agregar y modificar una foto de perfil en la información personal del usuario autenticado. o Activar un aula virtual por parte del profesor. o Crear, editar, eliminar y visualizar foro general, por grupos y temas. o El tipo de usuario profesor, podrá visualizar la lista de estudiantes del semestre actual. o Buscar un tema (resuelto o no resuelto aún) y acceder al detalle del mismo. o Enviar notificaciones al correo electrónico de cada usuario (estudiante o profesor) de las actividades importantes. 21 CAPÍTULO II – MARCO CONCEPTUAL 2.1. Introducción Este Trabajo de Grado se basa en el apoyo tecnológico para el desarrollo, configuración e instalación de una plataforma de preguntas y respuestas en un ambiente móvil, por lo cual, en este capítulo se abordará la conceptualización y definición de cada uno de los conceptos necesarios para el entendimiento del mismo y de cada uno de los términos involucrados en el desenvolvimiento del proyecto. En este capítulo se abarca lo relacionado a las plataformas de preguntas y respuestas del tipo Fuente de Multitudes que están actualmente en el mercado, los tipos de aplicaciones para dispositivos móviles de uso común y las principales tecnologías de desarrollo del lado del cliente como del servidor de mayor uso en dispositivos móviles. 2.2. Plataformas de preguntas y respuestas Una Plataforma de Preguntas y Respuestas (Q&A Platform) es un sistema tecnológico que provee respuestas a consultas hechas en lenguaje “natural”. Existen distintos tipos de Plataformas de Preguntas y Respuestas dependiendo de la forma de generar respuestas de cada una como las explicadas a continuación [1]:  Fuente de Multitud (Crowdsourcing): un tipo de plataforma que solicita respuestas de un grupo grande de usuarios. En la mayoría de los casos, la pregunta y la respuesta son asíncronas y las transacciones se completan en la web.  Solo Algoritmo (Algorithm-only): un tipo de plataforma que utiliza sobre todo un algoritmo para buscar datos específicos, ofrece respuestas directas a algunas de las preguntas más comúnmente pedidas.  Asistencia Humana (Human-assisted): un tipo de plataforma que se basa en la intervención humana para complementar los resultados algorítmicos. 22  Asistencia Virtual (Virtual Assistant): un tipo de plataforma diseñada principalmente para el uso de la voz en un dispositivo Smartphone. La interfaz de usuario es generalmente un ayudante personal virtual, que intenta comprender la intención del usuario a través de una variedad de funciones.  Datos Estructurados (Structured Data): un tipo de plataforma que ofrece principalmente resultados computacionales desde grandes conjuntos estructurados de datos. Recientemente los foros de discusión en línea, los cuales son una plataforma de preguntas y respuestas (Q&A Platform) del tipo “Fuente de Multitud”, se han convertido en fuentes de información alternativas para el aprendizaje del estudiante. Según Eric Zhi-Feng Liua [2] “los estudiantes tendrían un mejor rendimiento de aprendizaje y más comportamientos de discusión cuando se proporcionó un foro de discusión en línea elaborado como recurso de aprendizaje”. A continuación, se presenta un resumen de cada herramienta estudiada, exponiendo su funcionalidad y operatividad para luego compararlas entre ellas. 2.2.1. Piazza Idioma: Inglés [2.1] Piazza es una plataforma libre para instructores para gestionar de manera eficiente la clase. Los estudiantes pueden enviar preguntas y colaborar para editar las respuestas a estas preguntas. Los profesores también pueden responder a las preguntas, endosar respuestas de los estudiantes, y editar o eliminar cualquier contenido publicado. Desarrollada por Pooja Sankar en 2009, Piazza combina aspectos de wikis y foros de una manera que promueve respuestas de alta calidad, separa las preguntas de los profesores y los estudiantes e indica cuales preguntas faltan por resolver. Esta plataforma permite compartir archivos en la aplicación, lo que la convierte en un aula virtual, herramienta de comunicación y de estudio (siendo la motivación principal de la fundadora la timidez entre los estudiantes para compartir conocimientos entre ellos). 23 Plataforma Web En su aplicación Web como muestra la figura 1 cualquier persona puede registrarse (sin necesidad de pago previo) como un estudiante o como un profesor. También brinda la posibilidad de ver clases reales de distintos temas en todo el mundo. Figura 1. Vista inicial Piazza. Fuente: piazza.com (2015). [Fotografía] Al registrarse en Piazza un profesor, podrá:  Crear una clase.  Invitar a sus estudiantes a unirse mediante correo electrónico.  Asignar un “TA” o “Teacher Assisstant” a su clase, esto podría ser un “Preparador”, el cual tiene las mismas funciones que un profesor en Piazza.  Asignar otro profesor a la clase.  Activar o desactivar una clase.  Inhabilitar post anónimos.  Ver estadísticas de su clase.  Crear carpetas personalizadas.  Crear grupos de estudiantes.  Publicar una pregunta, artículo o nota a una clase o grupo de estudiantes.  Adjuntar un archivo a una publicación.  Publicar una encuesta.  Embeber un video a una publicación.  Hacer una publicación pública o privada. 24  Hacer favorito una publicación.  Modificar la información del curso como añadir recursos y enlaces, publicar un anuncio, publicar horas de consulta del/los profesor/es o del/los “TA”/s (Teacher Assitants o Preparadores).  Modificar y actualizar información de perfil de usuario y de notificaciones a su correo electrónico personal. Al registrarse en Piazza un estudiante, podrá:  Registrarse en una clase en la que haya sido invitado.  Publicar una pregunta al grupo de estudiantes que pertenece o al grupo docente.  Publicar una encuesta.  Adjuntar un archivo a una publicación.  Embeber un video a una publicación.  Hacer una publicación pública o privada.  Hacer favorito una publicación.  Seguir o dejar de seguir una publicación.  Filtrar publicaciones por el estado de la publicación como se muestra en la figura 2.  Modificar y actualizar información de perfil de usuario y de notificaciones a su correo electrónico personal y dejar una clase. Figura 2. Filtrar por publicaciones en Piazza. Fuente: piazza.com (2015). [Fotografía] 25 Plataforma Móvil La aplicación móvil de Piazza es más sencilla y fácil de usar que la aplicación Web, a continuación se muestra el proceso para publicar una pregunta por un estudiante para su clase:  El estudiante debe integrarse a la clase ingresando a la aplicación con sus datos y eligiendo la opción “Add a Class…” en el menú como se muestra en la figura 3 y luego busca la clase a la que ingresará como se ilustra a continuación en la figura 4. Figura 3. Agregar clase. Fuente: Piazza Android App (2015). [Fotografía] Figura 4. Buscar clase. Fuente: Piazza Android App (2015). [Fotografía]  El estudiante ingresó correctamente en la clase “01 – Prueba Seminario” y como se puede observar en la figura 5, el estudiante puede estar en más de una clase en Piazza. 26 Figura 5. Escoger clase. Fuente: Piazza Android App (2015). [Fotografía]  Al ingresar a la clase “01 – Prueba Seminario” por la vista principal (figura 5) o por el menú principal (figura 6) podrá publicar una nueva pregunta, nota o encuesta como se muestra en las figuras 7 y 8. Figura 6. Menú principal. Fuente: Piazza Android App (2015). [Fotografía] 27 Figura 7. Menú lateral. Fuente: Piazza Android App (2015). [Fotografía] Figura 8. Opciones. Fuente: Piazza Android App (2015). [Fotografía] 28  En este caso, escogemos la opción “New Question” en la que el estudiante puede indicar el título de la pregunta y una descripción y luego debe ingresarla en una carpeta (en este caso “hw1”), puede adjuntarle un archivo o una foto, publicarla como el estudiante o anónimamente y dirigirla a los profesores, la clase o un grupo en específico en el que el estudiante esté inscrito. Figura 9. Nueva pregunta. Fuente: Piazza Android App (2015). [Fotografía] Figura 10. Detalle nueva pregunta. Fuente: Piazza Android App (2015). [Fotografía] 29  Cuando se publica correctamente la pregunta se mostrará en la vista principal de la clase para todos los estudiantes y para los profesores en forma de “línea del tiempo”, es decir, las preguntas más recientes de primero indicando fecha de la publicación, título, descripción, autor y hora. La pregunta tendrá un indicador color rojo a la derecha como se muestra en la figura 11 el cual indica que la pregunta no ha sido resuelta. Figura 11. Línea del tiempo. Fuente: Piazza Android App (2015). [Fotografía]  A su vez, el profesor puede mediante la aplicación móvil responder la pregunta hecha por un estudiante, ingresando a la clase y posteriormente ingresando a la pregunta para que luego pueda ingresar la respuesta como se muestra en la figura 12 y 13. Figura 12. Responder pregunta. Fuente: Piazza Android App (2015). [Fotografía] 30 Figura 13. Nueva pregunta. Fuente: Piazza Android App (2015). [Fotografía]  Cuando un profesor responde, la pregunta deja de tener el indicador rojo, pues se entiende que la pregunta fue respondida como se muestra en la figura 14. Figura 14. Línea del tiempo pregunta respondida. Fuente: Piazza Android App (2015). [Fotografía] 31 2.2.2. Lore Idioma: Inglés La plataforma Lore2 (anteriormente Coursekit) creada por Joseph Cohen, permite a los profesores crear un sitio Web para su curso. Les da a los instructores la capacidad de iniciar y facilitar los debates estudiantiles, recoger asignaciones y materiales de la clase. También permite a los estudiantes colaborar en línea, hacer y responder preguntas de los demás, compartir contenido relevante, y chatear con otros. Además, Lore permite a sus instructores hacer su curso de libre acceso al público en general a través de su sitio Web [3]. Utiliza en su sitio web estilos dinámicos y funciones intuitivas y fáciles de usar para cualquier tipo de usuarios. Plataforma Web Es una aplicación gratuita que mediante un interactivo registro permite que un profesor o instructor pueda crear una clase e invitar a sus estudiantes ingresando nombre del curso, código, tópicos en los que se basará el curso, horario del curso, fecha de inicio y fin del curso y tiene la posibilidad de crear el curso privado o público, con estos simples pasos un profesor puede crear un curso y empezar a manejar su clase mediante la aplicación. Figura 15. Vista principal Lore. Fuente: lore.com (2015). [Fotografía] Al registrarse en Lore un profesor, podrá:  Publicar una discusión como se muestra en la figura 16. Dicha discusión se publicará indicando el usuario, foto de perfil y hora de la publicación y permitiéndole al profesor luego de publicada la discusión, editarla o eliminarla, 2 http://www.lore.com 32  Publicar una discusión adjuntándole un archivo o el nombre de un libro o ISBN,  Crear un nuevo evento como se muestra en la figura 17,  Crear una nueva tarea o asignación,  Crear un examen como se muestra en la figura 18,  Añadir miembros a la clase como estudiantes, preparadores (TAS), instructores y auditores (figura 19),  Manejar la biblioteca de la clase, añadir, editar, eliminar libros y recursos que apoyen a la clase como se muestra en la figura 20,  Definir un programa para la clase como se puede apreciar en la figura 21,  Modificar los ajustes generales de la clase (figura 22) y,  Modificar su perfil de usuario. Al registrarse en Lore un estudiante, podrá:  Publicar una discusión como se muestra en la figura 16, dicha discusión se publicará indicando el usuario, foto de perfil y hora de la publicación y permitiéndole al estudiante luego de publicada la discusión, editarla o eliminarla,  Publicar una discusión adjuntándole un archivo o el nombre de un libro o ISBN,  Comentar una discusión creada por él mismo o por un profesor como se muestra en la figura 23,  Ver y descargar los archivos de los eventos, asignaciones y exámenes que creó el profesor,  Abandonar un curso,  Ver y descargar los archivos de la biblioteca,  Consultar el programa del curso,  Modificar su perfil de usuario. Figura 16. Nuevo post Lore. Fuente: lore.com (2015). [Fotografía] 33 Figura 17. Nuevo evento Lore. Fuente: lore.com (2015). [Fotografía] Figura 18. Nuevo examen Lore. Fuente: lore.com (2015). [Fotografía] Figura 19. Invitar miembro Lore. Fuente: lore.com (2015). [Fotografía] 34 Figura 20. Biblioteca Lore. Fuente: lore.com (2015). [Fotografía] Figura 21. Programa de clases Lore. Fuente: lore.com (2015). [Fotografía] Figura 22. Ajustes de la clase Lore. Fuente: lore.com (2015). [Fotografía] 35 Figura 23. Comentario de estudiante en Lore. Fuente: lore.com (2015). [Fotografía] Plataforma Móvil Lore además de no contar con una página web responsive (adaptable a dispositivos móviles), tampoco posee una aplicación móvil que sus usuarios puedan descargar en algún tipo de Smartphone. 2.2.3. Academia Idioma: Inglés. Academia3 es un portal web de preguntas y respuestas para los académicos o profesionales de niveles altos de educación. Este portal forma parte de la red de sitios web de preguntas y respuestas sobre temas de distintos campos llamado Stack Exchange, donde cualquier usuario puede plantear una pregunta de manera pública, cualquier otro usuario puede ofrecer una o más respuestas y las mejores respuestas elegidas por los usuarios son mostradas en el ranking más alto. Dentro de este sitio web específico, las preguntas realizadas se etiquetan con un área temática y cada una de ellas puede tener hasta 5 etiquetas máximo, ya que, cada una podría estar relacionada con varios temas [4]. 3 http://academia.stackexchange.com/ 36 Plataforma Web En la barra principal al lado izquierdo se encuentra un menú llamado “Stack Exchange”, que despliega listados de comunidades de intercambio agrupadas por las actuales, las favoritas del usuario y otras comunidades que pueden filtrarse por un buscador. Del lado derecho, un buscador general y enlaces para opciones de ayuda, un recorrido por la aplicación, inicio de sesión y registro de usuario. Figura 24. Menú Stack Exchange y barra principal. Fuente: academia.stackexchange.com (2015). [Fotografía]. Dentro del cuerpo principal de la página, se encuentra un menú lateral derecho con una sección de notificaciones o publicaciones como se muestra en la figura 25. Figura 25. Sección de notificaciones o publicaciones. Fuente: academia.stackexchange.com (2015). [Fotografía]. 37 El banner principal de la página tiene 5 enlaces principales:  Questions: listado general de las preguntas generadas en el sistema. Dicho listado ofrece unas opciones para filtrarlas (nuevas, destacadas, frecuentes, votadas, activas y sin responder). Figura 26. Enlace principal: Questions. Fuente: academia.stackexchange.com (2015). [Fotografía].  Tags: listado de todos los tags usados en el sistema presentados por páginas y un buscador dinámico para los mismos. Figura 27. Enlace principal: Tags. Fuente: academia.stackexchange.com (2015). [Fotografía]. 38  Users: listado de todos los usuarios registrados en el sistema. Se muestra la información, por cada uno, nombre, cargo de trabajo y la ciudad de donde proviene. Posee un buscador dinámico. Dicho listado puede ordenarse por semana, mes, trimestre, año y todos. Los usuarios en general pueden ordenarse por reputación, nuevos usuarios, votantes, editores y mediadores. Figura 28. Enlace principal: Users. Fuente: academia.stackexchange.com (2015). [Fotografía].  Badges: presenta un listado de “insignias”, que actúan como valores de calificación o ranking en el sistema basada en la frecuencia y calidad de respuestas que da un usuario a otras preguntas publicadas. Ofrece la opción de categorizarlas por todas, ganadas, no ganadas, plata y bronce. Figura 29. Enlace principal: Badges. Fuente: academia.stackexchange.com (2015). [Fotografía]. 39  Unanswered: listado de todas las preguntas sin respuestas (cada una exhibe la cantidad de votos obtenidos, el título, una síntesis del contenido o descripción, los tags relacionados a esta pregunta, fecha de modificación y usuario). Dicho listado se puede filtrar por mis tags, nuevos, votados y no respondidos. Figura 30. Enlace principal: Unanswered. Fuente: academia.stackexchange.com (2015). [Fotografía].  Ask Question: es la sección donde un usuario crea su pregunta en el campo “Title”, en el área de edición de texto coloca la descripción y en el campo “Tags” las etiquetas que desea asociar. Del lado derecho a este formulario se ubican dos secciones tipo instrucciones de como preguntar y como dar formato a la descripción de la pregunta. Figura 31. Enlace principal: Ask Question. Fuente: academia.stackexchange.com (2015). [Fotografía]. 40 Al seleccionar en una pregunta se despliega el detalle de la misma, las etiquetas asociadas a ella, el usuario que ha hecho la pregunta, las posibles preguntas relacionadas, las respuestas (si las tiene) y un área de texto identificada como “Tu respuesta” con opciones básicas de edición de texto. Figura 32. Detalle de una pregunta y su respuesta(s). Fuente: academia.stackexchange.com (2015). [Fotografía]. El listado principal de preguntas se presenta en una lista identificada como “Our Questions”. Por encima del listado, se muestran los tags registrados más usados en el sistema. Cada entrada expone la cantidad de votos, respuestas, visitas, el título de la pregunta, los tags relacionados, el tiempo en la que fue modificada o respondida, el usuario y la distancia a la que se encuentra el mismo. Dicho listado puede ser filtrado por activos, destacados, calientes, semana y mes. Plataforma Móvil La plataforma Academia, ofrece desde la misma página web un enlace a una versión responsiva ideada para dispositivos móviles. Este enlace se encuentra en el footer, identificado como “mobile”. El prototipo está disponible únicamente en la página web (no se encuentra en Play Store). Este prototipo móvil ofrece las mismas opciones de funcionalidad que su equivalente en Web. Los enlaces principales se encapsulan en una barra secundaria justo debajo de la principal. 41 Las opciones de filtrados, para los listados, se mantienen y se encapsulan en una lista desplegable en una tercera barra que conforma el buscador de las preguntas. Figura 33. Menú móvil de las comunidades de Stack Exchange. Fuente: meta.stackexchange.com/?__=1219770261 (2015). [Fotografía]. Figura 34. Menú principal, enlaces principales y preguntas. Fuente: meta.stackexchange.com/?__=1219770261 (2015). [Fotografía]. 42 Figura 35. Listado de tags del sistema. Fuente: meta.stackexchange.com/?__=1219770261 (2015). [Fotografía]. Figura 36. Listado de usuarios del sistema. Fuente: meta.stackexchange.com/?__=1219770261 (2015). [Fotografía]. 43 Figura 37. Formulario para crear una pregunta. Fuente: meta.stackexchange.com/?__=1219770261 (2015). [Fotografía]. Figura 38. Detalle de una pregunta. Fuente: meta.stackexchange.com/?__=1219770261 (2015). [Fotografía]. 44 Figura 39. Login del sistema. Fuente: meta.stackexchange.com/?__=1219770261 (2015). [Fotografía]. 2.2.4. Portalasig (Portal de sitios web de asignaturas) Idioma: Español. Portalasig4 es un portal académico pensado en brindar a los estudiantes y profesores una plataforma para gestionar las materias (obligatorias y electivas) en las distintas licenciaturas y categorizadas por semestres. Este portal web fue creado como un trabajo especial de grado por sus autores Manuela Villavicencio y Oswaldo Díaz y presentado el 21 de octubre de 2010, con la finalidad de realizar un intercambio virtual de recursos entre el grupo docente y los estudiantes cursantes de alguna asignatura creada por algún profesor de la Facultad de Ciencias de la Universidad Central de Venezuela. La información y secciones que se habiliten dentro de una materia por un profesor o preparador para sus estudiantes, solo puede ser consultada por los estudiantes asociados a ella. El intercambio de información puede darse a través de foros, una sección de descarga de documentos, una sección de las evaluaciones que se llevarán a cabo, entre otras opciones. 4 http://www.ciens.ucv.ve/portalasig2/#/ 45 Plataforma Web  La página de Inicio de este portal lista las licenciaturas de la facultad en un menú lateral izquierdo y en el contenido principal cada una de las materias ofrecidas en una licenciatura seleccionada. Estas materias pueden verse en dos categorías: Obligatorias y Electivas. Un buscador permite filtrarlas por código o nombre. Figura 40. Página inicial de Portalasig. Fuente: www.ciens.ucv.ve/portalasig/?id=Computación (2015). [Fotografía].  La plataforma cuenta con un módulo de acceso y de registro al sistema. Una vez que un usuario con permisos de profesor se registre al sistema, puede crear una nueva asignatura dentro del portal. Dicha asignatura debe contar con características indispensables como el código, nombre, licenciatura a la cual pertenece, créditos de la misma, si tiene o no asignaturas que deben aprobarse antes de ella (prelación) y el tipo de asignatura. 46 Figura 41. Agregar nueva materia. Fuente: www.ciens.ucv.ve/portalasig/?id=Computación (2015). [Fotografía].  Como parte del grupo docente, el profesor puede administrar cada una de las secciones del sitio web creado para la asignatura. La primera de las secciones es la de “Información General”, en la cual se introduce la información más básica de la asignatura: Código, Nombre, Créditos, Tipo, Requisitos, Objetivos y la Bibliografía Figura 42. Sección de Información General. Fuente: www.ciens.ucv.ve/portalasig/?id=Computación (2015). [Fotografía]. 47  En la sección de “Contenido Temático” se introducen todos los temas que forman parte del curso, clasificándolos por título y descripción. El profesor debe editar la información de uno o más temas (agregando para cada uno el título y descripción). Figura 43. Sección de Contenido Temático. Fuente: www.ciens.ucv.ve/portalasig/?id=Computación (2015). [Fotografía].  En “Grupo Docente” se aumenta el nivel de contenido del sitio web para realizar trabajo colaborativo. Esta sección esta creada para darles la permisología a los demás integrantes del grupo docente para que editen el sitio web también. Figura 44. Listado del grupo docente. Fuente: www.ciens.ucv.ve/portalasig/?id=Computación (2015). [Fotografía]. 48 Figura 45. Gestión y búsqueda de preparadores. Fuente: www.ciens.ucv.ve/portalasig/?id=Computación (2015). [Fotografía].  La siguiente sección es la de “Horarios”. Una vez que las secciones fueron definidas en el grupo docente, es hora de ingresar cada uno de los horarios. Figura 46. Gestión de horarios. Fuente: www.ciens.ucv.ve/portalasig/?id=Computación (2015). [Fotografía]. 49  En la sección de “Estudiantes” el profesor podrá administrar los estudiantes en cada sección. Figura 47. Gestión de estudiantes. Fuente: www.ciens.ucv.ve/portalasig/?id=Computación (2015). [Fotografía].  La sección de “Entregas” está destinada a entregas de asignaciones (Tareas, Proyectos, Laboratorios, entre otros). Sólo se debe colocar el nombre de la asignación y la fecha de entrega. Luego de finalizada la entrega, se podrán descargar todas las tareas que los estudiantes hayan entregado. Figura 48. Gestión de entregas. Fuente: www.ciens.ucv.ve/portalasig/?id=Computación (2015). [Fotografía]. 50  La sección más importante en esta investigación se enfoca en “Foros”. Esta sección permite a los estudiantes intercambiar información entre ellos y el grupo docente, disminuyendo el tiempo de respuesta a las dudas comunes del curso. Figura 49. Creación de un nuevo foro. Fuente: www.ciens.ucv.ve/portalasig/?id=Computación (2015). [Fotografía].  Un estudiante asociado a la materia y puede acceder y publicar dentro del foro creado por el profesor. Una vez ubicado uno en el listado de la sección de foros, se presenta un área de edición de texto para realizar el intercambio de dudas y consultas entre el estudiante y el profesor o preparador. Sin embargo, las respuestas dadas por un profesor dentro del foro, no son enviadas por correo electrónico al estudiante. Este solo puede visualizarlas dentro de su cuenta de portalasig en el sitio web de la materia. Figura 50. Publicación dentro de un foro. Fuente: www.ciens.ucv.ve/portalasig/?id=Computación (2015). [Fotografía]. 51  El profesor podrá, desde su cuenta de usuario, eliminar alguna publicación hecha por algún estudiante (considerándose esta inapropiada o incorrecta) seleccionando en el icono de basura en la publicación. El sistema le preguntará si está seguro de continuar. Figura 51. Publicación dentro de un foro. Fuente: www.ciens.ucv.ve/portalasig/?id=Computación (2015). [Fotografía]. Plataforma Móvil Portalasig, no dispone de una página web responsive (adaptable a dispositivos móviles), y tampoco posee una aplicación móvil que sus usuarios puedan descargar en algún tipo de Smartphone. 2.2.5. Comparación Para realizar una comparación de las herramientas estudiadas definimos los siguientes criterios de evaluación:  Usabilidad Los aspectos de usabilidad que se observarán en la comparación de las herramientas son navegabilidad, memorización, simplicidad, fácil uso, fácil de aprender, eficiencia, satisfacción y seguridad.  Notificaciones Este tópico se refiere a si la herramienta notifica por email al usuario, si su pregunta fue respondida, si algún otro usuario ha realizado una pregunta o una acción en la herramienta. 52  Web La herramienta tiene aplicación web.  Responsive La herramienta web se adapta a todas las resoluciones de pantallas.  Móvil La herramienta tiene aplicación móvil.  Visto Se refiere a si la herramienta notifica cuantos y cuales usuarios han visto una pregunta.  Español La herramienta está disponible en idioma español.  Aula virtual La herramienta le permite al profesor crear un aula virtual, añadiendo los estudiantes y los preparadores por cada materia que imparte.  Búsqueda La herramienta les ofrece a los usuarios buscar las preguntas por distintos filtros o tags. PIAZZA LORE ACADEMIA PORTALASIG USABILIDAD NO SI NO SI AULA VIRTUAL SI SI NO SI NOTIFICACIONES SI SI NO NO VISTO NO NO NO NO WEB SI SI SI SI MOVIL SI NO NO NO RESPONSIVE NO NO NO NO ESPAÑOL NO NO NO SI BUSQUEDA NO NO SI NO Tabla 1. Tabla comparativa de las herramientas de preguntas y respuestas. 53 Se observa, según los datos de la tabla 1, la herramienta Academia es la que posee menos características funcionales y de arquitectura en comparación a Piazza, Lore y Portalasig (contando apenas con una plataforma web y una funcionalidad de búsqueda). Piazza cuenta con una aplicación móvil, pero, la usabilidad de esta herramienta no es un factor que le aporte gran relevancia. Lore se distingue por su usabilidad, funcionar como aula virtual y cuenta con un sistema de notificaciones en tiempo real al usuario en su plataforma web. Portalasig no cuenta con la funcionalidad de notificaciones, pero el idioma del portal está en español. Al analizar estos datos, Lore como herramienta de preguntas y respuestas aunque no cuenta con una aplicación móvil, ni la página web responsive, posee tres características relevantes en éste ámbito: usabilidad, notificaciones, aula virtual. Dichas características pueden considerarse importantes para una herramienta de preguntas y respuestas en el ambiente académico. 2.3. Tecnologías de Desarrollo Actualmente, en el ámbito de desarrollo móvil (así como en el ámbito web) existen gran cantidad de herramientas para el diseño, maquetación, programación y depuración. Las herramientas de desarrollo son importantes ya que permiten agilizar y minimizar el trabajo del desarrollador, es por ello que en esta investigación debemos seleccionar las más adecuadas para satisfacer los requerimientos del problema planteado. 2.3.1. Tipos de aplicaciones móviles En la actualidad, hablar de aplicaciones móviles es natural y un tema de interés y necesidad para los grandes avances en la tecnología del siglo XXI. Cada aplicación móvil posee una naturaleza y características que las definen y diferencian significativamente en el mercado. Robert Ramírez defiende que [5] “Las aplicaciones se pueden clasificar en función de la utilidad que queramos darle, o bien según las necesidades del dispositivo y la complejidad de la propia aplicación”. Siguiendo está justificación, se puede clasificar a las aplicaciones móviles en las siguientes categorías: Aplicaciones básicas Se denominan aplicaciones básicas a las que hacen uso de un sistema de comunicación bidireccional que gestiona el envío de mensajes de texto (SMS o MMS), ya que, reciben y envían información puntual de un usuario con el que se establece dicha comunicación [5]. Dichas aplicaciones, se acompañan de un servicio de mensajes cortos o multimedia de forma predeterminada en los celulares (smatphones o no). “Las aplicaciones básicas tienen las siguientes ventajas: 54 a) Simplicidad. b) Facilidad de venta. c) Gran cantidad de usuarios potenciales. También presentan algunas desventajas: a) Poca o casi nula capacidad de procesamiento del contexto. b) Muy baja complejidad de las aplicaciones realizadas. c) Limitaciones impuestas por la tecnología sobre los diseños de las aplicaciones (ciento sesenta caracteres de texto)”. Webs móviles Las aplicaciones webs móviles se basan en adaptaciones de páginas web existentes para que puedan ser visualizadas en dispositivos móviles. Adaptan la estructura de la información presentada en la web a las capacidades del dispositivo que se esté usando de tal modo que no sature lo consultado por un usuario [5]. Este tipo de aplicaciones son mejoras de las aplicaciones básicas que, por lo general, no usan objetos dinámicos como JavaScript Por tanto no poseen todo el potencial de un navegador web de sobremesa. “Las ventajas de las webs móviles son las siguientes: a) Fácil implementación, testeo y actualización. b) Lenguaje conocido y estándar. c) Pueden soportar múltiples dispositivos con un código fuente. Los inconvenientes de las webs móviles son los siguientes: a) Es difícil soportar múltiples dispositivos, así como conseguir la misma experiencia de usuario con varios tipos de navegadores. b) Ofrecen grandes limitaciones a la hora de realizar programas, tanto de proceso como de acceso a la información del dispositivo y del usuario. Por tanto, es difícil conseguir aplicaciones contextualizadas. 55 c) En muchos casos está pensado para ser visualizado con conexiones lentas, pero dichas conexiones pueden ser demasiado lentas y provocar una experiencia de usuario deficiente. d) En la actualidad, la mayoría de los dispositivos nuevos están incorporando estándares más nuevos (como HTML5), por lo que no se está trabajando en mejorar estos estándares. e) El número de dispositivos que solo pueden ver una página web con este tipo de lenguajes de marcas está disminuyendo.” Aplicaciones web sobre móviles Este tipo de aplicaciones se refieren a las que no tienen la necesidad de instalarse en un dispositivo para ejecutarse pero requieren de un navegador de Internet para poder acceder a ella. Se basan en tecnologías HTML, CSS y JavaScript y su objetivo principal es interaccionar con el dispositivo y el usuario [5] “Las ventajas de las aplicaciones web sobre móviles son las siguientes: a) Posibilidad de acceso a mucha información del dispositivo para realizar aplicaciones relativamente complejas. b) Desarrollo, distribución y pruebas sencillas. c) Convergencia entre aplicaciones de sobremesa y de dispositivos móviles, lo cual tiene muchas implicaciones, como, por ejemplo, que los desarrolladores solo tienen que conocer una tecnología. d) Uso de estándares de la web (claramente definidos). e) Ampliamente soportado por la industria, de manera que la mayoría de los nuevos dispositivos tienen soporte para este tipo de aplicaciones. Por el contrario, también tienen los siguientes inconvenientes: a) Se necesita un navegador que pueda dar soporte a este tipo de tecnología. b) Su rendimiento es menor respecto a las aplicaciones nativas, pues se ejecuta todo mediante el JavaScript del navegador, cuya potencia es limitada. c) Imposibilidad de acceder a todas las posibilidades del dispositivo. No se puede acceder a todo el hardware ni a muchos periféricos”. 56 Aplicaciones Nativas Aplicaciones Web Móviles Crear vs. Consumir contenido Las aplicaciones nativas son más adecuadas para la creación de contenido debido al rendimiento y el acceso al hardware. Las aplicaciones Web móviles son menos adecuadas para la creación de contenidos, pero igualmente adecuadas para el consumo de contenidos. Experiencia de Usuario Integración perfecta con sistemas operativos nativos. Integración limitada, requiere frameworks externos. Frecuencia de Actualización Las actualizaciones son formales a través de las tiendas de aplicaciones. Las actualizaciones son más informales y equivalentes a actualizaciones de sitios Web. Rendimiento Máximo rendimiento y acceso a los dispositivos hardware. El rendimiento es dependiente de la representación JavaScript. Funcionalidad Todas las funcionalidades en el sistema operativo móvil están disponibles. La mayor parte de la funcionalidad del sistema operativo móvil está disponible. Desarrollo Requiere un desarrollo específico para cada sistema operativo móvil. Los lenguajes y navegadores Web de código abierto hacen posible el desarrollo “escribe una vez, ejecútalo en cualquier lugar”. Rentabilidad Los frameworks para la monetización de aplicaciones están disponibles en las tiendas. No está clara, una estrategia unificada para la monetización. Tabla 2. Comparación de características claves para el desarrollo y uso entre aplicaciones nativas y web móviles [13]. En la tabla presentada anteriormente se puede concluir que dependiendo de la aplicación móvil que se desea desarrollar se puede escoger entre el desarrollo de aplicaciones nativas y el desarrollo de aplicaciones web móviles, últimamente se han creado frameworks (explicados más adelante) cada vez más eficientes que logran que el desarrollo web móvil maneje el hardware del dispositivo con facilidad como lo hacen las aplicaciones nativas y considerando también el hecho que las aplicaciones web móviles solo necesitan un código fuente para implementarse en la mayoría de los sistemas operativos móviles, el desarrollo web móvil es una alternativa excelente a la hora de decidir en qué se desarrollará una aplicación en específico. 57 2.3.2. Tecnologías de desarrollo del “Lado del Cliente” HTML5 Según lo definido por Ben Frain [6] “Un diseño Web responsivo, construido con HTML5 y CSS3, permite que un sitio Web ‘funcione’ en múltiples dispositivos y pantallas”.  Antecedentes A mediados del año 2000, se introduce el término “Web2.0” que se caracteriza por un cambio de la mentalidad de “sólo lectura”, en la Web, hacia una que permite la transición activa en el contenido (Web de lectura/escritura). En 2001, se crea XHTML 1 como una mejora de las versiones de HTML (1991), HTML 2 (1994) y HTML 4 (1997). Hablar de HTML5 es remontarse a la creación del grupo WHAT (conformado por miembros de Apple, Mozilla Foundation y Opera) en el 2004. Para 2006, el desarrollo de este nuevo estándar recibe un gran impulso por parte de la W3C. En el año 2006, la organizaciónW3C (organismo encargado de auditar y recomendar el desarrollo de recursos para la Web, presidida por Tim Berners-Lee,) en conjunto al grupo WHAT, deciden hacer un cierre definitivo de XHTML (y sus ocho versiones siguientes) para concentrarse en la nueva propuesta [7]. En 2008, se libera la primera versión oficial de HTML5 (escrita por Ian Hickson). Sin embargo, pese al buen trabajo de Hickson, las comunidades de desarrollo continúa trabajando y se van liberado nuevos elementos. Incluso, en 2014, continúan elementos que están pendientes por desarrollar, como es el caso de las hojas de estilo en cascada y sus prefijos de propietario [7.1]. Para finales de octubre de 2014, el consorcio internacional W3C, liberó el HTML5 como estándar oficial.  Estructura Según Juan Diego Gauchat [8] “Nunca fue declarado oficialmente pero, incluso cuando algunas API´s (Interface de Programación de Aplicaciones) y la especificación de CSS3 por completo no son parte del mismo, HTML5 es considerado el producto de la combinación de HTML, CSS y JavaScript. Estas tecnologías son altamente dependientes y actúan como una sola unidad organizada bajo la especificación de HTML5”. Los documentos HTML exhiben un orden estricto, tal que, cada una de sus partes está representada, declarada y diferenciada por etiquetas específicas. En el caso de 58 HTML5, el diseño está basado en un enfoque semántico (añadir metadatos semánticos y ontológicos a la World Wide Web, que describan el contenido el significado y relación de los datos) y en la inclusión de nuevos tags. Las nuevas etiquetas estructurales de HTML5, según define Teresa Diez [9] “sirven para dividir un documento en partes lógicas, indicando el tipo de contenido que se incluye en cada parte”. A continuación, se mencionan y definen los nuevos elementos incorporados por HTML5: o <header>, representa el encabezado de un documento o de una sección de un documento donde se encapsulan una colección de metadatos del mismo (incluyendo enlaces <a>, o definiciones de scripts y hojas de estilo). o <nav>, define una sección que contiene solo elementos de navegación en las páginas. o <article>, define contenido autónomo (publicado o distribuido de forma independiente), como entradas en blogs o artículos de noticias. o <section>, define un contenedor que engloba un bloque de contenido relacionado representando una sección “general” dentro de un documento o aplicación. o <aside>, define un contenedor que separa un bloque de contenido secundario que está relacionado con el bloque de contenido principal dentro del mismo documento. o <footer>, define el pie de una página o sección, pensado con la finalidad de presentar un mensaje de derechos de autoría, enlaces a información legal, nombre del autor entre otros.  Compatibilidad CONTROLES MAC Windows Safari 5.1 Firefox 1.1 Opera 11.62 Chrome 18 Safari 5.1 IE Firefox 11 Opera 11.61 Chrome 18 Search Sí Sí Sí Sí Sí No Sí Sí Sí Phone Sí Sí Sí Sí Sí No Sí Sí Sí URL Sí Sí Sí Sí Sí No Sí Sí Sí Email Sí Sí Sí Sí Sí No Sí Sí Sí DateTime No No Sí No No No No Sí No 59 Date No No Sí No No No No Sí No Month No No Sí No No No No Sí No Week No No Sí No No No No Sí No Time No No Sí No No No No Sí No LocalTime No No Sí No No No No Sí No Number Sí No Sí Sí Sí No No Sí Sí Range Sí No Sí Sí Sí No No Sí Sí Colour No No Sí No No No No Sí No Autocomple te No Sí Sí Sí No No Sí Sí Sí Autofocus Sí Sí Sí Sí Sí No Sí Sí Sí List Sí Sí Sí No Sí No Sí Sí Sí Placeholder Sí Sí Sí Sí Sí No Sí Sí Sí Min Sí No Sí Sí Sí No No Sí Sí Max Sí No Sí Sí Sí No No Sí Sí Multiple Sí Sí Sí Sí Sí No Sí Sí Sí Pattern Sí Sí Sí Sí Sí No Sí Sí Sí Required Sí Sí Sí Sí Sí No Sí Sí Sí Step Sí No Sí Sí Sí No No Sí Sí Tabla 3. Compatibilidad de los nuevos controles de formulario por navegador [10]. De la anterior tabla se concluye que los navegadores más compatibles con los nuevos controles de formularios son Opera y Chrome seguidos por Safari y Firefox y por último Internet Explorer. CSS / CSS3 CSS (Cascading Style Sheets, hojas de estilo en cascada) es un lenguaje de estilo, introducido por la W3C, en el cual la palabra “cascada” refiere al orden de prioridad en el que se aplicarán las reglas de estilo para el documento a crear. En 2005, surge CSS3 que representa, hasta nuestros días, la última mejora de este lenguaje de estilos. [11] “En contraste a especificaciones de CSS adicionales, CSS3 es modularizado. Se describe por documentos separados, tales como los módulos Selectores, Media Queries, Texto, Fondos y Bordes, Colores, Transformaciones 2D, Transformaciones 3D, Transiciones, Animaciones y Multi-Columnas”. 60  Estructura. El lenguaje de hojas de estilos se estructura en reglas y cada una de estas describen la forma en cómo se visualizan los elementos. Según Jason Cranford Teague [12] “Una regla CSS define como debe lucir el HTML y como debe comportarse en la ventana del navegador”. [12] “Todas las reglas, independientemente de su localización o tipo, tienen los siguientes elementos estructurales: o Selectores. Son los caracteres alfanuméricos que identifican una regla. o Propiedades. Identifica lo que se está buscando. Varias docenas de propiedades están disponibles; cada una es responsable de un aspecto de comportamiento o apariencia del contenido de la página. o Valores. Son asignados a una propiedad para definir su naturaleza. Un valor puede ser una palabra clave como ‘rojo’, un número o un porcentaje”. [12] “a) Selector HTML. La porción de texto de una etiqueta HTML es llamado selector. Por ejemplo, h1 es el selector para la etiqueta <h1>”. h1 { color: #006600; } Figura 52. Selector HTML. [12] “b) Clase. Una clase es una regla ‘agente libre’ que puede ser aplicada a cualquier etiqueta HTML a su discreción”. .abstract { font-size: 1.1em; } Figura 53. Selector de clase. Selector Valor Propiedad Selector Valor Propiedad 61 [12] “c) ID. Como muchas clases selectoras, las reglas ID pueden ser aplicadas a cualquier etiqueta HTML. Los selectores ID, sin embargo, deben ser aplicadas una sola vez a una etiqueta HTML particular o en una página determinada para crear un objeto para usarlo con una función JavaScript”. #objeto{ position: absolute; } Figura 54. Selector ID JavaScript. Es un lenguaje interpretado en el cliente por el navegador al momento de cargarse la página, es multiplataforma, orientado a eventos con manejo de objetos, cuyo código se incluye directamente en el mismo documento HTML. Según lo definido por David Flanagan [13] “JavaScript es el lenguaje de programación de la Web. La gran mayoría de sitios web modernos utilizan JavaScript, y todos los navegadores web modernos - en escritorios, consolas de video juegos, tabletas y teléfonos inteligentes - incluyen intérpretes de JavaScript, haciendo a JavaScript el lenguaje de programación más omnipresente en la historia. JavaScript es parte de la tríada de tecnologías que todos los desarrolladores web deben aprender: HTML para especificar el contenido de páginas web, CSS para especificar la presentación de las páginas web y JavaScript para especificar el comportamiento de páginas web”. JavaScript deriva su sintaxis de Java, es un lenguaje de alto nivel, dinámico, interpretado, orientado a objeto y funcional. El nombre “JavaScript” es un tanto engañosa, a excepción de una sintaxis superficial parecida, JavaScript es completamente diferente al lenguaje de programación Java.  Antecedentes. JavaScript fue creado en Netscape (ahora llamado Mozilla) en los primeros días de la Web, y técnicamente, "JavaScript" es una marca comercial con licencia de SunMicrosystems (ahora Oracle). Netscape presentó el lenguaje para la normalización de ECMA (European Computer Manufacturer’s Asociation) y debido a cuestiones de marcas, la versión estándar del lenguaje fue "ECMAScript". Selector Valor Propiedad 62 Durante la última década, todos los navegadores Web han implementado la versión 3 de JavaScript y no ha habido realmente ninguna necesidad de pensar en los números de versión: el lenguaje estándar era estable y las implementaciones del navegador del lenguaje era, para la mayor parte, interoperable. En junio de 2015 se cerró y publicó el estándar ECMAScript 6, con un soporte irregular entre navegadores y que dota a JavaScript de características avanzadas que se echaban de menos y que son de uso habitual en otros lenguajes como, por ejemplo, módulos para organización del código, verdaderas clases para programación orientada a objetos, expresiones de flecha, iteradores, generadores o promesas para programación asíncrona. La versión 7 de ECMAScript se conoce como ECMAScript 2016, y es la última versión disponible, publicada en junio de 2016. Se trata de la primera versión para la que se usa un nuevo procedimiento de publicación anual y un proceso de desarrollo abierto.  Compatibilidad. En los primeros años de JavaScript era necesario crear código específico casi para cada uno de los navegadores principales para poder obtener resultados equivalentes, actualmente es compatible con todos los navegadores principales como Internet Explorer, Firefox, Safari, Google Chrome y Opera pero para estar seguros que nuestro código JavaScript es correcto en todos los entornos debemos realizar pruebas completas pues existen algunas funciones de JavaScript que son exclusivas de un navegador determinado.  Frameworks MVC. Según Yenisleidy Fernández [14] “El patrón Modelo-Vista-Controlador (MVC) surge con el objetivo de reducir el esfuerzo de programación, necesario en la implementación de sistemas múltiples y sincronizados de los mismos datos, a partir de estandarizar el diseño de las aplicaciones. El patrón MVC es un paradigma que divide las partes que conforman una aplicación en el Modelo, las Vistas y los Controladores, permitiendo la implementación por separado de cada elemento, garantizando así la actualización y mantenimiento del software de forma sencilla y en un reducido espacio de tiempo. A partir del uso de frameworks basados en el patrón MVC se puede lograr una mejor organización del trabajo y mayor especialización de los desarrolladores y diseñadores”. Aplicaciones single-page: Podemos definir aplicación single-page como una aplicación Web que se ejecuta en una única página, logrando así una experiencia de usuario más cercana a una aplicación de escritorio. En una single-page el usuario no navega por un engorroso sistema de enlaces tradicionales si no que en su lugar, 63 mediante el uso cada vez más extendido de JavaScript, Ajax, HTML5 o una combinación de las anteriores, se actualiza lo que el usuario ve siempre desde la misma página (sin cambiar de URL ni refrescar el contenido entero). En la actualidad existen gran variedad de frameworks de JavaScript MVC. En esta investigación se seleccionaron los más utilizados y con single-page con el fin de evaluar las características, ventajas, desventajas, alcances y limitaciones: o Backbone.js Es un framework que permite al desarrollador estructurar la aplicación, delegando ciertas labores a elementos específicos con el fin de hacer aplicaciones escalables, robustas y que brinden al usuario una gran experiencia de uso. Características.  Ayuda a crear estructuras bien definidas para los datos de la aplicación y facilita la creación de eventos cuando los datos cambian. Esto permite olvidarse de la revisión de las variables o la propagación de los cambios en la aplicación cuando los datos de dichas estructuras cambian.  Simplifica el uso de vistas, que te ayudan a pintar o “renderizar” interfaces de usuario en la página.  Permite el uso de colecciones de modelos, en los que tendrás acceso a diferentes operaciones sobre los mismos, como filtrar, buscar, recibir notificaciones cuando cambien, etc. o Ember.js Ember.js es un framework JavaScript para crear aplicaciones Web del lado del cliente (código abierto). Está basado en la arquitectura modelo-vista- controlador (MVC). Está catalogado como unos de los principales frameworks en el mundo de JavaScript ya que permite a los desarrolladores crear aplicaciones de una sola página (single-page) escalables. Características.  Ember.js trata de estandarizar el desarrollo de aplicaciones del lado del cliente, para eso utiliza reglas muy estrictas para crear un potente 64 y sencillo desarrollo de nuestras aplicaciones. Para cumplir este objetivo posee una serie de clases y procedimientos los cuales nos ayudan a “renderizar” nuestras aplicaciones y controlar nuestra data.  Ember.js está muy unido a Handlebars.js, el cual es una librería que nos permite definir plantillas semánticas con las cuales podemos representar data en nuestras vistas de manera sencilla.  La principal características es la automatización de cambios, es decir, cuando un objeto JavaScript que tengamos enlazado cambia, automáticamente se actualiza DOM de la app y viceversa, cuando el DOM cambia se actualiza automáticamente el objeto de JavaScript.  Ember.js te permite enfocarte en el desarrollo de tu aplicación ya que él es el que se encarga de la parte técnica. o Angular.js Es un framework MVC del lado del cliente escrito en JavaScript. Se ejecuta en un navegador Web y ayuda a los desarrolladores a construir páginas modernas, aplicaciones single-page (una sola página) y aplicaciones Web estilo AJAX. Es un framework de propósito general pero muy bueno cuando se utiliza para programar aplicaciones con funcionalidades CRUD (Crear, Leer, Actualizar, Borrar). Características.  Utiliza HTML como lenguaje de plantilla.  No requiere refrescamiento del DOM (Modelo de Objeto del Domino por sus siglas en inglés), como AngularJS es capaz de manejar acciones del usuario, eventos del navegador y cambios en el modelo para determinar cuándo y cual plantilla refrescar.  Cuenta con componentes del subsistema muy interesante y extensible y es capaz de “enseñarle” al navegador como interpretar nuevas etiquetas y atributos.  Comparación. A continuación, se describen brevemente las características generales contenidas en la Tabla 4: 65 o Observable: es una clase (mixin) que da a los objetos la capacidad de notificar sobre los cambios en sus propiedades. o View Bindings: indica como los enlaces se muestran y se recogen por la parte del usuario. Específicamente cuando se permite que las vistas para los objetos se actualicen automáticamente de acuerdo a algún cambio observable generado por la interacción del usuario. o Dos enlaces: permite que la vista pueda ejercer cambios en el objeto observable de forma automática. o Vistas parciales: vistas que incluyen otras vistas. o Vistas de listas filtradas: que el framework posea vistas que puedan filtrar objetos de acuerdo a criterios previamente establecidos. o Capa de presentación Web: dentro de esta característica, lo que se evalúa es que el framework no posea widgets de estilo nativo, la idea es que su conceptualización este centrada en el desarrollo del lado del cliente. o Vinculación UI: establecer si el framework MVC posea un enfoque declarativo para la actualización automática de la capa vista, para cuando se realicen cambios en el modelo base. o Composición de vistas: en esta característica se evalúa si el framework en realidad permite la creación de código reutilizable, planteándose si en este se pueden disponer varias vistas para crear una nueva. CARACTERÍSTICAS ANGULAR.JS BACKBONE.JS EMBER.JS Observable SI SI SI View Bindings SI SI SI Dos enlaces SI NO SI Vistas parciales SI NO SI 66 Vistas de listas filtradas SI NO SI Vinculación UI SI NO SI Capa de presentación Web SI SI SI Composición de vistas NO NO NO Tabla 4. Comparación de características de los frameworks MVC descritos [15]. Por medio de esta tabla, se concluye que los mejores Frameworks MVC son Angular.js y Ember.js teniendo los mismos resultados en las mismas características. 2.3.3. Tecnologías de desarrollo del “Lado del Servidor”. Según Miguel Ángel Álvarez [16] “Un lenguaje del lado del servidor es aquel que se ejecuta en el servidor web, justo antes de que se envíe la página a través de Internet al cliente. Las páginas que se ejecutan en el servidor pueden realizar accesos a bases de datos, conexiones en red, y otras tareas para crear la página final que verá el cliente”. A continuación se muestran los lenguajes de programación más utilizados, según un gráfico del sitio WebW3Techs: Figura 55. Gráfico de lenguajes de programación más usados del Lado del Servidor. Fuente: W3Techs (Marzo de 2017). Como se muestra en la figura anterior, el lenguaje más utilizado a nivel mundial es PHP, esto sirve de referencia para escoger el lenguaje del lado del servidor indicado para el desarrollo de la aplicación móvil. CAPÍTULO III – MARCO METODOLÓGICO El desarrollo de software no es una tarea sencilla. Algunos autores definen una metodología como una colección de procedimientos, técnicas, herramientas y documentos auxiliares que ayudan a los 67 desarrolladores de software en sus esfuerzos por implementar nuevos sistemas de información. Dentro del mundo de desarrollo de aplicaciones móviles se contemplan varios métodos, cada uno con sus puntos fuertes y débiles, de los cuales se busca seleccionar uno de ellos en base a las necesidades inherentes del negocio u objetivo. Los desarrollos móviles se distinguen, mayormente, por su corta duración. Esto debido en parte a la gran competencia en este sector, cambios del mismo por la aparición de mejoras software y hardware o la simplicidad de algunas aplicaciones que no dependen de grandes desarrollos. 3.1 Introducción En este capítulo se presenta la metodología final seleccionada y adaptada para el desarrollo del proyecto. Se describen las diferentes etapas de desarrollo de software de la investigación, las técnicas y procedimientos que son utilizados para llevar a cabo la indagación. Se presenta el "cómo" se realizó el estudio para responder al problema planteado. 3.2. Metodología de Desarrollo Hacer uso de una metodología ágil promueve el desarrollo de iteraciones a lo largo de la vida del proyecto. Por lo general al final de cada iteración se cuenta con una versión funcional del sistema. [17] En esta investigación se utilizó una adaptación de la metodología de desarrollo «Programación Extrema, Extreme Programming», mejor conocido como «XP». La metodología XP pone el énfasis en la adaptabilidad del desarrollo más que sobre la previsibilidad. En la metodología XP se considera que los cambios de los requisitos sobre la marcha son un aspecto natural, inevitable y en muchos casos indeseable. Por tano ser capaz de adaptarse a los posibles cambios de los requisitos durante la vida del proyecto es una aproximación que intenta definir todos los requisitos para luego invertir esfuerzos en controlar que no cambien. [18] Las características fundamentales de la programación extrema son: simplicidad, comunicación, retroalimentación y coraje. [18]  Simplicidad: es la base de la programación extrema. Dividir el problema en pequeñas partes alcanzables y a medida que el proyecto crece se deben redefinir las partes para evitar que la complejidad aumente en forma desmedida. La programación extrema apuesta que es más sencillo hacer algo simple y tener trabajo extra para cambiarlo si se requiere, que realizar algo complicado y nunca utilizarlo.  Comunicación: debe ser constante entre programadores y fluida con el cliente. El cliente forma parte del equipo de desarrollo. Se considera que el código 68 autodocumentado es más fiable y debe documentarse solo aquello que no va a variar, por ejemplo el objetivo de una clase o un método.  Retroalimentación: se realiza un reacomodo del código y sus interfaces al final de cada ciclo iterativo, de manera de reorientar el proyecto en base a satisfacer los requisitos restantes y/o realizar modificaciones sobre partes desarrolladas que no alcanzan a los requisitos planteados. La opinión del cliente es muy importante y se conoce en tiempo real.  Coraje: le permite a los desarrolladores sentirse cómodos para construir el código cuando sea necesario. Esto significa revisar el estado del sistema existente y realizar cambios sobre el código creado, si estos cambios a futuro repercuten en una implementación más simple. Un ejemplo tangible de coraje es saber cuándo desechar código obsoleto, sin importar el tiempo y el esfuerzo invertido en crearlo. Las fases de la metodología XP son (ver figura 56): 1) Planificación: en esta primera fase se debe hacer primero una recopilación de todos los requerimientos del proyecto, también debe haber una interacción con el usuario, y se debe planificar bien entre los desarrolladores del proyecto que es lo que se quiere para el proyecto para así lograr los objetivos finales. 2) Diseño: se sugiere que hay que conseguir diseños simples y sencillos. Para procurar hacerlo todo lo menos complicado posible para el usuario o cliente, para conseguir un diseño fácilmente entendible e implementable que a la larga costará menos tiempo y esfuerzo para desarrollarlo. En esta fase se logrará crear parte del proyecto la parte física (lo bonito) la interfaz que tendrá el usuario o cliente con el proyecto. 3) Codificación: el cliente es una parte más del equipo de desarrollo; su presencia es indispensable en las distintas fases de X.P. A la hora de codificar una historia de usuario su presencia es aún más necesaria. No olvidemos que los clientes son los que crean las historias de usuario y negocian los tiempos en los que serán implementadas. Antes del desarrollo de cada historia de usuario el cliente debe especificar detalladamente lo que ésta hará y también tendrá que estar presente cuando se realicen los test que verifiquen que la historia implementada cumple la funcionalidad especificada. En esta fase de la codificación los clientes y los desarrolladores del proyecto deben estar en comunicación para que los desarrolladores puedan codificar todo los necesario para el proyecto que se requiere, en esta fase está incluido todo lo de codificación o programación por parte de los desarrolladores del proyecto. 4) Pruebas: uno de los pilares de la metodología X.P es el uso de test para comprobar el funcionamiento de los códigos que vayamos implementando. Para esta fase lo que se 69 implementa es el uso de test que son pruebas que se le hacen al proyecto o como ya se dijo a los códigos que se vallan implementando. Figura 56. Etapas de la Metodología XP 3.3. Etapas del Desarrollo Una vez realizado el estudio de la metodología a aplicar, se consideraron las siguientes etapas desarrollo de software de ésta investigación. 3.3.1. Etapa I. Planificación En esta primera etapa se definió el proceso para identificar las necesidades existentes, a través de las reuniones con el equipo que llevó a cabo la primera versión (en uso dentro de la Facultad de Ciencias) del API de “portalasig” y los profesores de la Escuela de Computación Ana Morales, Fernando Crema y Robinson Rivas (como los principales clientes que hacen uso de la plataforma web). De los estudios realizados, se plantearon las soluciones posibles con el propósito de definir y destilar los requerimientos para cumplir las restricciones impuestas por las distintas partes. Esta etapa tiene un gran nivel de complejidad dado que de ella depende una gran parte del éxito del sistema. Por ello, para realizar un buen proceso de determinación de requerimientos, el desarrollo debió soportar de la especificación de cada uno de los requerimientos planteados, de tal forma que tengan los siguientes atributos: a) Deben ser completos, consistentes y han de estar dentro del alcance del proyecto. b) Deben contemplar el esquema de flujo básico del Portal de Sitios Web de Asignaturas existente. c) El registro de usuarios no se lleva a cabo en la plataforma móvil, la idea es el consumo de datos a través del API de portalasig. d) Cumplir con los objetivos del Portal de Sitios Web de Asignaturas. e) Son viables y apropiados para el desarrollo. f) Los requerimientos han de ser "testeables" (deben tener capacidad de prueba). Una vez definidos y estudiados con profundidad los requerimientos, se comienza a estructurar el diseño a través del cual se pondrá en marcha el sistema. 70 3.3.2. Etapa II. Diseño En esta etapa se desarrolló el análisis y estudio del diseño mediante el cual es implementada la aplicación móvil. Se definió la interfaz del sistema, así como los modelos del aspecto gráfico, del contenido, y del funcionamiento del mismo, en base a los requerimientos, necesidades planteadas y formatos existentes en el Portal de Sitios Web de Asignaturas. Los modelos desarrollados son prototipos de la aplicación y reflejan una versión para uso en dispositivos móviles, así como son acordes a los colores, formas y diseño de los sistemas ya existentes, para poder ir evolucionándolos hasta que queden satisfechos con todos los aspectos. El diseño y el análisis se implementó a través de diferentes diagramas UML (Lenguaje Unificado de Modelado, Unified Modeling Language) como lo son: diagrama de casos de uso, diagrama de arquitectura y diagrama de secuencia. A través de los mismos, se pudo conocer a fondo el funcionamiento de la aplicación, para así desarrollar las diferentes funciones acordes al sistema web ya existente. 3.3.3. Etapa III. Codificación Mediante esta etapa se realizó el modelo de diseño, es decir se elaboran y se adaptan los elementos gráficos (botones, menú, navegación, listas, buscadores, campos de texto, etc), se codifican las interfaces, scripts asociados y consultas en el Backend PHP, se define y prepara una base de datos en apoyo a la transferencia de datos desde/hacia el API con el backend para que el sistema quede en funcionamiento. Se incorpora el diseño para la aplicación en desarrollo (móvil híbrida), se codifica en el lenguaje adecuado y se pone en funcionamiento. El desarrollo se implementó bajo una arquitectura cliente-servidor, ver figura 57. En la arquitectura, la capacidad de proceso está repartida entre los clientes y los servidores, Un cliente realiza peticiones a otro programa, el servidor, quien le da respuesta. 71 Figura 57. Arquitectura del sistema móvil Cienciapp Se utilizan patrones de diseño. En particular el patrón de diseño «Modelo Vista Controlador», conocido por sus sigas como «MVC». [19] Es un patrón o modelo de abstracción de desarrollo de software que separa los datos de una aplicación, la interfaz de usuario, y la lógica de negocio en tres componentes distintos. Es usado en aplicaciones web y móviles, dónde la vista es la página o interfaz HTML, el modelo es el Sistema de Gestión de Base de Datos y la lógica interna, y el controlador es el responsable de recibir los eventos y darles solución. La finalidad del modelo es mejorar la reusabilidad por medio del desacople entre la vista y el modelo. Los elementos del patrón son los siguientes [19]:  Modelo: es la representación de la información en el sistema. Trabaja junto a la vista para mostrar la información al usuario y es accedido por el controlador para añadir, eliminar, consultar o actualizar datos.  Vista: es la presentación del modelo en un formato adecuado para que el usuario pueda interactuar con él, casi siempre es la interfaz de usuario.  Controlador: es el elemento más abstracto. Recibe, trata y responde los eventos enviados por el usuario o por la propia aplicación. Interactúa tanto con el modelo como con la vista. 72 Con la utilización de este modelo es posible tener diferentes vistas para un mismo modelo (ejemplo representación de un conjunto de datos como una tabla o como un diagrama de barras). [19] Es posible construir nuevas vistas sin necesidad de modificar el modelo subyacente. Proporciona un mecanismo de configuración a componentes complejos muchos más tratable que el puramente basado en eventos (el modelo puede verse como una representación estructurada del estado de la interacción), como se muestra en la figura 58. Figura 58. Flujo de interacción MVC Luego de esta fase, el sistema móvil está listo para iniciar su funcionamiento e interacción con el API de “Portalsig”. 3.3.4. Etapa IV. Pruebas Una vez que se ha desarrollado la aplicación en base al diseño establecido, se habilitan en Internet mediante los servidores y en las bases de datos locales apropiadas, para que los usuarios comiencen a utilizar los mismos, y mediante éstos detectar posibles fallas o errores para su posterior corrección. En esta etapa se realizan las pruebas necesarias para asegurar el perfecto funcionamiento de la misma, todo esto se hace primero en el ambiente de desarrollo y luego en el servidor de Internet en el que realmente funcionará. Ahora la aplicación se encuentra en pleno funcionamiento con usuarios accediendo y con los administradores realizando las tareas periódicas de mantenimiento, brindando atención a los usuarios, actualización de contenidos y permitiendo el desarrollo de pruebas funcionales y de aceptación por parte del usuario final. 73 CAPÍTULO IV – MARCO APLICATIVO 4.1 Introducción Este capítulo contiene la descripción detallada de la solución móvil de software desarrollada, y se realiza un acercamiento sobre el contexto de ésta solución. Además se exponen las tecnologías utilizadas en el desarrollo de la aplicación, detallando los componentes de la plataforma de desarrollo. El desarrollo está basado en tecnologías HTML, CSS, PHP y JavaScript (librería AngularJS). En este capítulo, también se hace referencia a las actividades realizadas y las decisiones tomadas durante las fases de desarrollo. Respecto a la aplicación móvil resultante, se describe la arquitectura, el diseño y los detalles de implementación que se consideraron pertinentes exponer. Finalmente se muestran el conjunto de pruebas realizadas sobre el producto final y los resultados obtenidos. 4.2 Contexto del Proyecto Este proyecto se enmarca específicamente en el Portal de Sitios Web de Asignaturas (Portalasig) y ha sido desarrollado en el contexto del Trabajo Especial de Grado presentado ante la Universidad Central de Venezuela, Facultad de Ciencias, Escuela de Computación, bajo la tutoría del Profesor Robinson Rivas, para optar al Título de Licenciado en Computación, por parte de los bachilleres: Diego Brito y Ronald Prado, como integrantes del equipo desarrollador. El desarrollo fue supervisado por el tutor antes mencionado quien coordinó la toma de decisiones respecto a la inclusión o descarte de ciertas funcionalidades a mostrar en base al alcance del proyecto y luego realizó pruebas. 4.3 Detalle de la solución Se realizaron ciertas reuniones con tres de los profesores de la Escuela de Computación en la Facultad de Ciencias, los cuales hacen un uso frecuente de la primera y segunda versión del Portal de Sitios Web de Asignaturas en cada uno de los semestres. A partir de estas reuniones se identificó que: 1. Entre las soluciones desarrolladas previamente para la Facultad de Ciencias se encuentran en primera instancia “Portalasig”: una plataforma web del tipo Fuente de Multitudes (Crowdsourcing) que permite el control de materias y aulas, gestión de los materiales de estudios y evaluaciones durante el semestre actual (por parte de los profesores o administradores registrados en 74 el sistema) y la comunicación entre estudiantes y profesores de la Escuela de Computación, a través de los Foros por cada materia creado por los profesores. 2. En segunda instancia, y con una relación directa a la plataforma antes mencionada: una plataforma web que funciona como una potente pila de diseño de API (pensada para desarrolladores) dedicada a diseñar, prototipar, documentar y probar rápidamente APIs, llamada Apiary. Dentro de ella se encuentra el API de “Portalsig”. 3. La necesidad que existía de implementar y ofrecer las funciones más relevantes del Portal de Sitios Web de Asignaturas (autenticación de usuarios registrados en el portal, foros por materias, temas dentro de dichos foros, notificaciones asíncronas, aulas virtuales, subida y descarga de archivos, sistema básico de mensajería entre los usuarios) a través de dispositivos móviles, específicamente, en “smartphones” con el sistema operativo Android. Para conocer los requerimientos y especificaciones de la nueva aplicación, se estudió el proyecto que dio vida a los sistemas mencionados, a saber: “Desarrollo de una nueva versión del portal generador de sitios web de asignaturas (Portalasig) para la Facultad de Ciencias de la Universidad Central de Venezuela”, se exploraron los sistemas, su funcionamiento, los módulos que los conforman y la interrelación entre ambos. A partir de estas actividades, se proyectó el alcance de implementar “Portalsig” para dispositivos móviles. Los requerimientos funcionales y no funcionales definidos son los siguientes: Requerimientos Funcionales. Se requiere desarrollar una aplicación móvil que actúe como una plataforma del Tipo Fuente de Multitudes (Crowdsourcing), que cumpla con los siguientes requerimientos funcionales:  Requerimiento 1 : autenticación y autorización: La aplicación móvil híbrida, deberá poseer dos tipos de usuarios, el usuario «Estudiante» (exclusivamente estudiantes regulares del semestre en curso) y el usuario «Profesor» (profesionales que dictan clases dentro de la Facultad de Ciencias). Todos los usuarios deberán autenticarse para poder ingresar al sistema. Los estudiantes deben estar registrados previamente en la Facultad en el semestre actual (para consultar sus datos desde el API) y estar incluidos previamente 75 en un aula que active un profesor. Solo los profesores tendrán acceso al listado de estudiantes.  Requerimiento 2 : perfil de usuario El usuario una vez autenticado dentro de la aplicación podrá ver una sección básica de sus datos personales o perfil de usuario. Dentro de esta sección, visualizará un icono de (+), que le permitirá al usuario subir/cambiar una imagen de perfil desde su dispositivo móvil, su nombre y apellido completo y su correo electrónico universitario.  Requerimiento 3 : activar/listar aulas asociadas al usuario El usuario una vez autenticado dentro de la aplicación podrá listar las aulas (materias) a las que pertenece o está asociado durante el semestre actual. Al acceder en el menú principal en la sección “Aulas”, se habilita una nueva interfaz que lista las aulas o materias existentes en el semestre actual. El usuario «Profesor» es el único con la capacidad de activar el aula. Luego de que un aula está activa, una notificación por correo electrónico deberá enviarse al (los) estudiante(s).  Requerimiento 4 : listado de estudiantes Luego de ingresar en el aula seleccionada, un usuario «Profesor» tendrá habilitado la opción de ver el listado de estudiantes. Cuando se acceda a esta opción se desplegará una lista de todos los estudiantes inscritos en la materia (aula virtual) seleccionada previamente, y por cada estudiante se muestra el nombre y apellido, correo electrónico universitario y su foto de perfil. Se muestra también un buscador dinámico, para filtrar a los estudiantes de este listado.  Requerimiento 5 : foro general Luego de ingresar en el aula seleccionada, un usuario «Profesor» o «Estudiante» tendrá habilitado la opción de acceder al foro general. Dentro de esta interfaz, se despliega una lista de temas (cada uno detallado con un título, una breve pregunta o descripción, la hora y fecha de creación/edición y el número de respuestas asociadas por cada uno. Los usuarios del tipo «Profesor» y «Estudiante» podrán crear un nuevo tema para este foro general (cada tema creado puede ser accedido por el profesor del aula y todos los estudiantes asociados a ella). 76  Requerimiento 6 : foro general Luego de ingresar en el aula seleccionada, un usuario «Profesor» o «Estudiante» tendrá habilitado la opción de acceder al foro general. Dentro de esta interfaz, se despliega una lista de temas (cada uno detallado con un título, una breve pregunta o descripción, la hora y fecha de creación/edición y el número de respuestas asociadas por cada uno). Un buscador dinámico estará disponible para filtrar un tema del listado. Los usuarios del tipo «Profesor» y «Estudiante» podrán crear un nuevo tema para este foro general (cada tema creado puede ser accedido por el profesor del aula y todos los estudiantes asociados a ella). Cada tema puede ser editado o eliminado por el autor del mismo. Sin embargo, si un usuario de tipo «Profesor» edita un tema que fue creado por un «Estudiante», el primero se convierte automáticamente en autor del tema y viceversa. El nuevo autor, será el único en poder editar y eliminar este tema.  Requerimiento 7 : foro por grupos Luego de ingresar en el aula seleccionada, un usuario «Profesor» o «Estudiante» tendrá habilitado la opción de acceder al foro por grupos. Dentro de esta interfaz, se despliega una lista de temas (cada uno detallado con un título, una breve pregunta o descripción, la hora y fecha de creación/edición y el número de respuestas asociadas por cada uno). Los usuarios de tipo «Estudiante» podrán acceder y ver un tema en este listado, sí y solo sí, un profesor lo asigna al mismo. Un buscador dinámico estará disponible para filtrar un tema del listado. Solo el usuario del tipo «Profesor» podrá crear, editar y eliminar un tema para este foro por grupos (cada tema creado puede ser accedido por el profesor del aula y todos los estudiantes asignados a uno o más temas).  Requerimiento 8 : crear tema Un usuario «Estudiante» o «Profesor» al seleccionar sobre el icono de (+) en el foro general (o únicamente un «Profesor», al encontrarse dentro de la interfaz de foro por grupos), desplegará una interfaz nueva para crear un tema. Dicha interfaz constará de un formulario simple para indicar el título del tema, la descripción (pregunta que quiera plantear) y opcionalmente un botón para realizar la subida de un archivo desde su celular (el formato permitido para subir se limita a .pdf). Luego de ingresar los datos del formulario, cargar un archivo y crear el tema, el usuario regresará al listado de foro correspondiente y visualizará el nuevo tema. 77  Requerimiento 9 : detalle del tema Al seleccionar uno de los temas del listado del foro general o del foro por grupos, se desplegará una nueva interfaz que muestra en detalle el tema seleccionado. El usuario podrá visualizar el título del tema, la imagen de perfil del creador del tema, la pregunta asociada al tema (descripción), un enlace para descargar un archivo adjunto (en caso de existir uno para este tema), el nombre y apellido del creador del tema, la hora y fecha de creación/edición. Debajo de esta información principal del tema, se listarán las respuestas hechas a este tema (cada respuesta exhibe el texto de la respuesta en sí, el nombre de quién hizo la respuesta la hora y fecha de creación/edición). Cada una de las respuestas listadas, exhibirá un color de fondo para identificar si la misma está aprobada por el «Profesor» como correcta (verde manzana) o no (azul rey).  Requerimiento 10 : mensajes privados Al seleccionar en el menú principal, la sección de “Mensajes Privados”, el usuario podrá acceder a la interfaz que lista todas las conversaciones actuales entre un «Profesor» y sus «Estudiante». Únicamente el creador de un nuevo mensaje privado (conversación), podrá eliminar dicha conversación de su interfaz actual (la conversación sólo se elimina en el emisor). Cada conversación se identifica con el nombre del usuario con quien se intercambian los mensajes privados. Los integrantes de una misma conversación, podrán acceder al detalle de la misma. Al hacerlo, se muestra una nueva interfaz que tiene como título el nombre del destinatario y debajo de éste, el listado de mensajes enviados y recibidos del usuario actual (cada mensaje muestra el contenido del mismo, la hora y fecha de creación). Para identificar cada mensaje, se mostrarán alineados a la izquierda y en color azul celeste los recibidos y alineados a la derecha y en azul rey los enviados. Luego de introducir nuevo texto en el input y seleccionar en el botón verde al lado, el nuevo mensaje se muestra en ésta interfaz actualizando el listado existente.  Requerimiento 11 : buscar Al seleccionar en el menú principal, la sección de “Buscar”, el usuario podrá acceder a la interfaz que listará todos los temas (seleccionados como correctos o no por el profesor) y un buscador dinámico que permitirá filtrar un tema. Los temas que se listan en esta interfaz pertenecen tanto al foro general como al foro por grupos. Cuando se filtra y/o selecciona uno de los temas, el usuario podrá ver el detalle del mismo. 78  Requerimiento 12 : cerrar sesión Al seleccionar en el botón de “Cerrar sesión” dentro del menú principal, el usuario saldrá de la aplicación y se redirigirá a la interfaz de autenticación. Estando en esta pantalla de autenticación, al presionar el botón de ir atrás (propio del dispositivo que posea) se mostrará un mensaje de “alert” para confirmar si desea salir y cerrar la aplicación completamente. Requerimientos no funcionales La aplicación móvil híbrida de “Portalasig” debe cumplir con los siguientes requerimientos no funcionales:  La aplicación móvil debe ser usable: su interfaz gráfica debe ser agradable a la vista, intuitiva e ir acorde con la imagen del Portal de Sitios Web de Asignaturas.  La aplicación móvil debe ser escalable: de manera que pueda extender su margen de operaciones permitiendo la agregación de nuevas funcionalidades.  La aplicación móvil debe ser mantenible: es decir que pueda ser modificado para corregir fallas y mejorar su funcionamiento.  La aplicación móvil debe de ser robusta: pudiendo recuperarse de posibles errores y mantenerse en funcionamiento.  Utilizar tecnologías no propietarias: la aplicación móvil debe ser elaborada bajo un entorno de desarrollo Open Source. La razón principal de desarrollar un sistema móvil que se integre al Portal de Sitios Web de Asignaturas, es facilitar el acceso a una mayor cantidad de usuarios que pertenecen a la Facultad de Ciencias de la UCV y están registrados en “Portalasig”, haciendo uso de sus dispositivos móviles y sin importar el lugar en donde se encuentren. Se acordó entonces realizar una aplicación móvil híbrida para el sistema operativo Android, ya que se demostró ser el Sistema Operativo más utilizado, con mayor demanda en la actualidad por ser código abierto. Esta aplicación va dirigida a los estudiantes y profesores de la Facultad de Ciencias de la UCV que podrá tener acceso en todo momento y en cualquier lugar a las preguntas y respuestas por materias que están cursando los estudiantes o están impartiendo los profesores, así como de los archivos subidos en los temas de los foros tanto General como por Grupos y el acceso a la Mensajería Directa que posee la 79 aplicación para mejorar la comunicación Estudiante-Profesor mientras tenga un dispositivo “Smartphone” Android con acceso a internet. El sistema móvil desarrollado fue diseñado e implementado por los autores con la guía del tutor, se utilizó la estructura lógica de una plataforma de preguntas y respuesta de tipo Crowdsourcing o Fuente de Multitud la que se refiere a que la respuesta a una pregunta en lenguaje natural es dada por un grupo de personas naturales y siendo el profesor de la materia quien escoge la respuesta correcta. Este tipo de plataforma de preguntas y respuesta también le permite al profesor medir el nivel de comprensión de un tema en específico para sus estudiantes mediante las respuestas que se ofrecen en el sistema; el profesor también puede hacer estas preguntas, responderlas y apoyarse subiendo al sistema algún material de apoyo en forma de PDF que respalde su pregunta o su respuesta. Para el diseño de la interfaz gráfica se utilizaron colores típicos en aplicaciones educativas que no cansen a la vista y permitan una lectura cómoda del contenido de la aplicación, tales como blanco, azul y verde en tonalidades claras con un logo para la aplicación y una diseño basado en experiencia de usuario creado por los autores del Trabajo de Grado. Los lenguajes y las herramientas de programación utilizadas fueron: HTML5, CSS3 y JavaScript (librería AngularJS) utilizando el Framework para desarrollo híbrido Ionic Framework en su versión 1 y para el lado del servidor PHP y MySQL utilizando el Framework CakePHP en su versión 2.5. 4.4 Etapas de desarrollo de aplicación híbrida para Android En este apartado de describen el conjunto de procedimientos llevados a cabo durante cada etapa de desarrollo del software de la aplicación híbrida desarrollada para el sistema operativo móvil Android. 4.4.1 Etapa I. Planificación Una vez realizados los diferentes estudios de factibilidad y las investigaciones acerca de las funcionalidades requeridas, se planteó el desarrollo de una aplicación híbrida implementada para el sistema operativo móvil Android desarrollada en Ionic Framework, debido a los beneficios que ofrece, pudiendo así, implementar el sistema y abarcar mayores funciones como las que ofrece una aplicación móvil. 80 Para esta aplicación los requerimientos específicos se basan en dos usuarios: cualquier profesor de la Facultad de Ciencias de la UCV que tenga cuenta en el sistema Portalasig y los estudiantes cuyos profesores de sus materias del semestre actual activen el aula en la aplicación. Para el uso de la aplicación es indispensable el servicio de internet en el dispositivo Android 4.4.2 Etapa II. Diseño Para el análisis de la aplicación se utilizó UML, que permitió visualizar, especificar, construir y documentar el sistema, además es una técnica de modelado de objetos y como tal supone una abstracción de un sistema para llegar a construirlo en términos concretos. Los modelos además, al ser una representación que incluye todos los detalles de los originales, permitieron probar más fácilmente el sistema que se modela y determinar los errores. A través de éste lenguaje, se desarrollaron los diagramas del sistema tal como lo son: diagramas de casos de uso y diagrama de secuencia, mediante los cuales se especifica el funcionamiento del sistema y la interacción de los diferentes usuarios con el mismo.  Diagrama de casos de uso Como se mencionó anteriormente, a través de la notación gráfica UML, se representan los casos de uso. Para el desarrollo de esta aplicación, los diagramas de casos de uso están adjuntos en el documento.  Diagrama de secuencia Se construyeron los diagramas de secuencia para cada usuario como se adjuntan en el documento.  Modelo Entidad – Relación Este diagrama permite a través del modelado de datos representar las entidades relevantes de un sistema de información así como sus interrelaciones y 81 propiedades. Se diseñó el siguiente modelo para crear a partir de él, una base de datos que contenga todas las tablas y atributos necesarios para almacenar los datos que proporciona el API de Portalasig y los datos que genera por sí misma la aplicación desarrollada y lograr con ello el manejo de manera óptima de los mismos. 4.4.3 Etapa III. Codificación En el proceso de codificación se implementó la arquitectura propia del sistema móvil híbrido basado en el sistema operativo Android y se desarrollaron los módulos y funcionalidades de cada usuario, a través del Framework Ionic. 4.4.3.1 Arquitectura La arquitectura en base a la cual se diseñó la aplicación (figura 57) está compuesta por:  Servidor del API de Portalasig, donde se almacenan todos los datos del sistema Portalasig y donde la aplicación consulta la información del API necesaria para el funcionamiento.  Servicios Web creados en PHP bajo el Framework CakePHP, instalados en un Servidor Remoto que permiten la comunicación entre la aplicación y la base de datos. Actualmente, esta aplicación está instalada en un servidor externo a la UCV para efectos de prueba, pero debe migrarse internamente para efectos del uso masivo.  Base de Datos MySQL, instalada en un Servidor Remoto, la cual almacena todos los datos de la aplicación y los datos obtenidos del API de Portalasig.  Dispositivos móviles, los diferentes tipos que utilice el sistema operativo móvil Android. 82 4.4.3.2 Aplicación Web Móvil La aplicación es una del tipo híbrida o web móvil, como se mencionó en el Capítulo II, enfocada en el Sistema Operativo Android. Las aplicaciones web móvil se implementan utilizando tecnologías web tales como HTML, CSS y JavaScript. Se utilizó para su desarrollo el framework web móvil Ionic Framework. A continuación se explicará con más detalle las herramientas utilizadas. 4.4.3.2.1 Frontend (Ionic Framework) Ionic es una herramienta gratuita y de código abierto para el desarrollo de aplicaciones híbridas basadas en HTML5, CSS3 y JavaScript. Ionic se inspira en las SDK de desarrollo móviles nativos más importantes, por lo que es fácil de entender para desarrolladores iOS y Android, con la diferencia que se programa una sola vez y se compila para distintas plataformas, en el caso de la aplicación que se desarrolló se exportó solo para Android por ser código abierto. Cuenta con elementos usados en aplicaciones como menús laterales, botones, tipografías, etc. Para instalar y usar Ionic se debe tener instalado con anterioridad NodeJS y usando la cónsola de comandos del sistema operativo en el que se va a trabajar, se tipean los siguientes comandos:  Instalar ionic: npm install –g cordova ionic  Crear un Proyecto: ionic start Cienciapp <blank | tabs | sidemenu> Blank: crea un proyecto vacío Tabs: crea un proyecto con pestañas inferiores Sidemenu: crea un proyecto con menú lateral  Crear plataforma Android: ionic platform add android  Compilar proyecto (generar apk): ionic build android Ionic posee una amplia gama de plugins (http://plugins.cordova.io/) de los cuales en la aplicación desarrollada se utilizó “File Transfer” para la carga y subida de archivos tales como PDF para los foros generales y por grupos e imágenes (JPG, PNG) para la imagen de perfil del usuario. http://plugins.cordova.io/ 83 . Figura 59. Estructura del proyecto en Ionic Framework (Frontend) 4.4.3.2.2 Backend (CakePHP) CakePHP es un framework para el desarrollo de aplicaciones web escrito en PHP, creado sobre los conceptos de Ruby on Rails, es un framework MVC (Modelo, Vista, Controlador) código abierto y facilita al usuario la interacción con la base de datos. En la aplicación que se desarrolló, se utilizó CakePHP para el backend, mediante funciones en AngularJS se comunica el frontend con las funciones desarrolladas en PHP y mediante métodos propios de CakePHP, se interactúa con la base de datos (MySQL) y se retorna la respuesta en formato JSON al requerimiento del frontend (para cubrir los requerimientos de la aplicación). A continuación, se explicarán las funciones más importantes que se implementaron para el funcionamiento de la aplicación.  Login: Para el ingreso de los usuarios en la aplicación, se le solicitan las mismas credenciales que usa para ingresar en el sistema de Portalasig, las cuales son su cédula y contraseña. A través de directivas de angular se envía el requerimiento vía JSON al controlador PHP mediante la url: /<url del servidor>/users/login. Con esto, el controlador realiza las siguientes verificaciones: a) Busca usuario y contraseña en la base de datos, si se encuentra retorna a la función en el frontend (AngularJS) un JSON con los datos del usuario: correo 84 electrónico, nombres, apellidos, tipo de usuario (profesor o estudiante), imagen de perfil (Figura 60) b) Si la búsqueda anterior no fue exitosa se procede a buscar el usuario en el API de Portalasig, si aún no es exitoso, se retorna un mensaje de error de cédula o contraseña inválida, si se encuentra el usuario se genera un token con el que se podrá recuperar la información del usuario y guardarla en base de datos (Figura 61) c) Si el usuario es un profesor, se consulta la materia que está impartiendo en el semestre actual y también se guarda en base de datos y se le da entrada al usuario al sistema, d) Si el usuario es un estudiante pero no tiene ninguna materia activada en base de datos se le muestra un mensaje “Usted no tiene aulas creadas, comuníquese con su profesor.”, si tiene al menos un aula activa, se le da entrada al sistema. Figura 60. Se busca un usuario en la base de datos mediante CakePHP. Figura 61. Se busca un usuario en el API de Portalsig mediante PHP 85 Figura 62. Estructura del Framework CakePHP (Backend)  Activar tema: Cuando un profesor ingresa en la aplicación, se le muestra el listado de materias que está impartiendo en el semestre actual y seleccionando en la opción de activar aula, el controlador consultará en el API de Portalasig y guardará en la base de datos el listado de estudiantes de la materia (además de notificarle por correo electrónico que se ha activado un aula nueva).  Crear tema: Tanto el profesor como el estudiante pueden crear un tema en el Foro General y en el Foro por Grupos. Se le envía al controlador el título del tema, el contenido y el archivo PDF (si es el caso). El controlador mediante la función de guardado de CakePHP, registra el tema en la base de datos y envía un correo a los interesados. En el Apéndice 3 se muestra el código en CakePHP para esta operación.  Eliminar Tema: El controlador recibe el identificador del tema seleccionado por el profesor o el creador del tema para eliminarlo y mediante la función Delete de CakePHP se elimina el tema y se retorna un mensaje de éxito al frontend.  Listado de Estudiantes: El profesor puede revisar el listado de estudiantes de la materia que está impartiendo, el controlador recibe el identificador del aula por parte del frontend y retorna el listado de estudiantes (imagen de perfil, nombres, apellidos y correo electrónico). 86  Enviar mensaje privado: El usuario puede seleccionar de una lista quien será el receptor y enviar un mensaje privado, el controlador recibe el identificador desde el receptor y el contenido del mensaje, lo guarda en la base de datos y se le envía un correo electrónico al receptor con el mensaje. El mensaje se mostrará en la conversación de la aplicación del emisor y el receptor.  Enviar respuesta: El profesor o el estudiante podrá responder un tema y si es de su agrado subir un archivo PDF en la respuesta, el controlador recibirá el archivo, el identificador de la pregunta y el contenido de la respuesta, la guardará en base de datos mediante el método save() de CakePHP y retornará un mensaje de éxito y la respuesta completa en formato JSON para ser mostrada en el listado de respuestas.  Hacer una respuesta correcta: El profesor podrá elegir una respuesta como correcta seleccionando al botón con el símbolo “check”, lo cual le enviará al controlador el identificador de la respuesta y se guardará la respuesta como correcta y el tema como resuelto. Además se enviará un correo a los usuarios involucrados en el tema para notificar que el tema fue seleccionado como resuelto.  API de Portalasig: El API que nos ofrece Portalasig se encuentra alojado en http://docs.portalasig.apiary.io, y en el caso particular de la aplicación desarrollada se utilizaron las siguientes funcionalidades: o Crear Sesión: Figura 63. Datos JSON al crear sesión http://docs.portalasig.apiary.io/ 87 o Recuperar información del usuario: Figura 64. Datos JSON al recuperar información del usuario o Información del semestre actual: Figura 65. Datos JSON de la información del semestre actual 88 o Materia que está impartiendo el profesor Figura 66. Datos JSON de la materia impartida por el profesor o Listado de estudiantes de una materia 4.4.3.2.3 MySQL La base de datos utilizada como se explicó anteriormente es MySQL, respetando las convenciones de CakePHP como lo son:  El identificador de cada tabla será llamado: id  El nombre de las tablas serán en inglés y plural  El nombre de las claves foráneas será: <nombre de la tabla referencia en singular>_id  Las tablas relación (muchos a muchos) será el nombre de las tablas involucradas en plural y en orden alfabético, por ejemplo: classrooms_users 89 Figura 67. Modelo Entidad-Relación de la base de datos de la aplicación. 4.4.3.3 Funcionalidades de la aplicación e interfaz de usuario 4.4.3.3.1 PROFESOR 1. Login: el profesor debe ingresar al sistema con los mismos datos (cédula y contraseña) que posee para ingresar en Portalasig. 90 Figura 68. Interfaz de login en la aplicación. 2. Bienvenida: el sistema le da la bienvenida al profesor y al seleccionar al icono de arriba a la izquierda (tres barras horizontales), se desplegará un menú con las secciones: Perfil, Aulas, Mensajes Privados, Buscar y Cerrar sesión. Figura 69. Interfaz de bienvenida y menú principal (PROFESOR). 3. Perfil: al seleccionar en Perfil, se mostrará la información del profesor tales como nombre, apellido, correo electrónico e imagen de perfil. 1. Subir imagen de perfil: al seleccionar al contenedor de la imagen de perfil con el símbolo de ‘+’, se abrirá la galería del dispositivo Android para seleccionar una imagen a subir. Luego de seleccionar una imagen aparecerá una barra de progreso que se irá completando hasta que la subida de la imagen sea satisfactoria y se actualice en la misma vista de 91 Perfil inmediatamente. La imagen de perfil se puede cambiar cada vez que se desee. Figura 70. Interfaz de perfil (PROFESOR). 4. Aulas: al seleccionar en Aulas, el sistema le mostrará al profesor el listado de materias que está impartiendo en el semestre actual. Se listarán las materias que no estén activas en la aplicación con un fondo de marca de agua y un botón de “Activar Aula” y las materias activas no tendrán dicho botón y su color de fondo será nítido. Figura 71. Interfaz de aulas. Aula inactiva (PROFESOR). 92 1. Activar Aula: al seleccionar en el botón “Activar Aula”, el sistema registrará a todos los estudiantes (de la materia seleccionada) en la base de datos de la aplicación y les enviará un correo haciéndoles saber cuál aula fue activada, y así, otorgándoles acceso al foro general de la materia. Después de estar activa el aula y al seleccionar a la misma, el sistema le mostrará tres nuevas funcionalidades: Estudiantes, Foro General y Foro por Grupos. Figura 72. Interfaz del listado de aulas y detalle de un aula. Aula activa (PROFESOR). 2. Estudiantes: se despliega el listado de estudiantes que están cursando la materia mostrando: imagen de perfil, nombres, apellidos y correo electrónico de cada uno. El buscador permite hacer una búsqueda dinámica que filtra por el nombre y apellido del estudiante y muestra los resultados al instante. Cada grupo de estudiantes está separado por las secciones en la cual estén inscritos (y en cada sección se muestran ordenados alfabéticamente) 93 Figura 73. Interfaz del listado de estudiantes y filtro de alguno (PROFESOR). 3. Foro General: se despliega el listado de temas pertenecientes al foro general mostrando por cada uno: el título, un extracto de la pregunta, la fecha, la hora y minutos en el que fue publicado y el número de respuestas que tiene el tema. Al profesor se le habilitarán dos funcionalidades más en cada tema: eliminar (icono de basura) y editar (icono de lápiz). Adicionalmente, al seleccionar a un tema podrá acceder al detalle del mismo. Arriba a la derecha, en el icono de ‘+’, se podrá agregar un nuevo tema. Cuando no hay ningún tema con su respectiva pregunta, se muestra un mensaje advirtiendo que no hay registros disponibles. De igual modo, ésta interfaz posee una funcionalidad de búsqueda dinámica que filtra por el título del tema. Si alguna respuesta del tema fue seleccionada como correcta por el profesor, el color de fondo del tema en el listado cambiará a un azul más claro, con esto se podrá diferenciar en el listado los temas resueltos y los que no. 94 Figura 74. Interfaz del foro general (PROFESOR). i. Crear Tema: al seleccionar al icono de ‘+’ se muestra un formulario para completar y establecer el título y el contenido del tema, además de un botón para subir un archivo PDF. Figura 75. Interfaz de crear nuevo tema dentro del foro general (PROFESOR). ii. Eliminar Tema: al seleccionar al icono de la basura, se mostrará una ventana emergente que permite confirmar la eliminación del tema. Si se acepta la confirmación al seleccionar en el botón “Eliminar”, se borrará el tema del foro general. 95 Figura 76. Notificación emergente. Eliminar un tema del foro general (PROFESOR). iii. Editar Tema: al seleccionar en el icono del lápiz, se mostrará un formulario con los valores previamente ingresados en el “Crear Tema” dentro de los campos “Titulo” y “Contenido”. El botón para subir archivo reemplazará el archivo (si existe) que tiene asociado actualmente el tema. Figura 77. Interfaz de editar un tema dentro del foro general (PROFESOR). 96 iv. Ver Tema: al seleccionar al tema, se mostrará la información detallada del mismo empezando por el título del tema arriba de la pantalla, luego la imagen de perfil del creador del tema junto con el contenido, el nombre del autor, fecha y hora de la publicación. Además, cuenta con un enlace para descargar el archivo adjunto (si lo tuviese) asociado al tema. Debajo de la descripción del tema, se despliega la lista de las respuestas, mostrando por cada una el nombre del autor de la respuesta, la fecha y hora de la publicación en fondo azul oscuro. El profesor, adicionalmente, puede ver arriba a la derecha de la respuesta un icono de “check” con el cual podrá hacer que dicha respuesta sea la correcta y por lo tanto, el tema estará resuelto, cambiando el color de la respuesta a un verde manzana (además de un icono de “clip” que indica si la respuesta tiene un archivo adjunto). En caso de tener un archivo adjunto, al seleccionar al icono se descargará dicho archivo. Figura 78. Interfaz de detalle de un tema y sus respuestas dentro del foro general (PROFESOR). v. Crear Respuesta: al final de la pantalla se encuentra un campo de texto para responder el tema. Se puede escribir dentro del mismo y enviarlo seleccionando al botón verde. En caso de que se requiera acompañar la respuesta con un archivo, se puede hacer adjuntar al seleccionar en el botón de la izquierda con el icono de “clip”. 97 Figura 79. Mensaje emergente, confirmación de respuesta correcta de un tema (PROFESOR). vi. Subir Archivo: al seleccionar a algún botón con icono de “clip” aparecerá las opciones de las carpetas del dispositivo Android para ubicar el archivo a subir (File Browser). El archivo a subir debe tener un formato PDF y tener un tamaño máximo de 2MB (Megabytes). Figura 80. Explorador de archivos del Smartphone y mensaje de éxito al adjuntar archivo (PROFESOR). vii. Descargar Archivo: se identifica con el enlace en color azul dentro del tema y en cada respuesta (si lo tienen). Algunos dispositivos Android descargarán inmediatamente el archivo y otros lo visualizarán con algún software para ver PDF que esté de manera predeterminada en el dispositivo. 98 4. Foro por Grupo: al seleccionar al Foro por Grupos, se desplegará el listado de los grupos que el profesor creó. Arriba a la derecha, en el botón con el símbolo ‘+’, se encuentra la funcionalidad para “Agregar Grupo”. En el listado de grupos se muestra, por cada uno, el nombre del grupo, el número de integrantes y para el profesor los iconos de eliminar y editar grupo. Seleccionando al grupo se procederá a ver el detalle del mismo. Figura 81. Interfaz de foro por grupos. Listado de grupos (PROFESOR). i. Agregar Grupo: al seleccionar sobre el botón ‘+’, se desplegará un formulario para indicar el nombre del grupo y la descripción. Aparecerá abajo del formulario el listado completo de estudiantes del aula, los cuales se pueden seleccionar y quitar del grupo. Una vez indicados el nombre, descripción e integrantes del grupo se puede proceder a seleccionar al botón “CREAR GRUPO”. El mismo, creará el grupo y redireccionará al profesor al listado del foro por grupos. Figura 82. Interfaz de crear nuevo foro por grupos. Listado de participantes (PROFESOR). 99 ii. Editar Grupo: al seleccionar sobre el icono de lápiz, se desplegará un formulario con el nombre del grupo y la descripción precargados. Se podrá observar más abajo el listado completo de estudiantes del aula tal que, los estudiantes que ya están en el grupo aparecerán marcados con un “check”. Se pueden seleccionar y quitar del grupo uno o más estudiantes. Una vez editados el nombre, descripción e integrantes del grupo se puede proceder a seleccionar al botón “EDITAR GRUPO”. A continuación se modificará el grupo y se redireccionará al profesor al listado del foro por grupos. Figura 83. Interfaz de editar foro por grupos. Listado de participantes (PROFESOR). iii. Eliminar Grupo: al seleccionar en el icono de “basura” se mostrará una alerta de confirmación para eliminar el grupo. Si se acepta, el grupo se eliminará definitivamente. iv. Ver Grupo: al seleccionar al grupo se desplegará el listado de temas de dicho grupo. Todo el funcionamiento a partir de este punto es idéntico al Foro General. 100 Figura 84. Interfaz del detalle del foro por grupos. Listado de temas dentro del mismo (PROFESOR). 5. Mensajes Privados: al seleccionar a la opción “Mensajes Privados” del menú principal, se desplegará el listado de conversaciones que tiene el profesor mostrando el nombre del estudiante que intervino en la conversación. Al seleccionar en el botón que se encuentra arriba a la derecha con el icono de ‘+’, se creará un mensaje privado. Al seleccionar al icono de basura en el mensaje, se eliminará la conversación de la aplicación. Al seleccionar a la conversación, se desplegará el hilo real de la misma y se podrán ver los mensajes del profesor alineados a la derecha y de los estudiantes alineados a la izquierda. Cada mensaje en sí muestra la fecha y hora del envío, ordenados por fecha de envío (donde el último mensaje enviado es el que está más abajo en la pantalla). Se puede responder el mensaje usando el campo de texto abajo al final y para enviar se presiona el botón verde de la derecha. Figura 85. Interfaz de mensajes privados. Detalle de una conversación (PROFESOR). 101 6. Buscar Tema: al seleccionar en el menú principal a la sección “Buscar”, se desplegará el listado de todos los temas del Foro General y del Foro por Grupos que existan en el aula del profesor. Se cuenta con la funcionalidad de buscar por nombre del tema haciendo uso de un buscador dinámico que filtra de manera instantánea los resultados. Cuando se encuentre el tema que se requiere, se puede ingresar en él y ver el detalle del mismo. 7. Cerrar Sesión: al seleccionar en el menú principal a la opción “Cerrar sesión”, el sistema destruye todas las variables de sesión en la app y redireccionará al login. Para volver a ingresar en Cienciapp deberá ingresar sus credenciales de Portalasig nuevamente. 4.4.3.3.2 ESTUDIANTE 1. Login: el estudiante debe ingresar al sistema con los mismos datos (cédula y contraseña) que posee para ingresar en Portalasig. La operación no podrá completarse mientras no le sea activada una materia por parte del profesor en la aplicación. 2. Bienvenida: el sistema le da la bienvenida al estudiante y al seleccionar al icono que tiene tres barras horizontales arriba a la izquierda, se desplegará un menú con las funcionalidades Perfil, Aulas, Mensajes Privados, Buscar y Cerrar sesión. Figura 86. Interfaz de bienvenida (ESTUDIANTE). 3. Perfil: al seleccionar a la sección Perfil se mostrará la información del estudiante tales como nombre, apellido, correo electrónico e imagen de perfil. 1. Subir imagen de perfil: al seleccionar al contenedor de la imagen de perfil con el símbolo de ‘+’, se abrirá la galería del dispositivo Android (File Browser) para 102 seleccionar una. Luego de seleccionarla aparecerá una barra de progreso hasta que la subida sea satisfactoria y la imagen se actualice en la misma vista de “Perfil” inmediatamente. La imagen de perfil se puede cambiar cada vez que se requiera. 4. Aulas: al seleccionar a la sección “Aulas”, el sistema le mostrará al estudiante el listado de materias que tiene activadas en el semestre actual. Al seleccionar a la materia activa, el sistema le mostrará dos nuevas funcionalidades: Foro General y Foro por Grupos. Figura 87. Detalle de un aula y secciones disponibles (ESTUDIANTE). 1. Foro General: se despliega el listado de temas pertenecientes al foro general mostrando por cada uno: el título, un extracto de la pregunta, la fecha, la hora y minutos en el que fue publicado y el número de respuestas que tiene el tema. Al profesor se le habilitarán dos funcionalidades más en cada tema: eliminar (icono de basura) y editar (icono de lápiz). Adicionalmente, al seleccionar a un tema podrá acceder al detalle del mismo. Arriba a la derecha, en el icono de ‘+’, se podrá agregar un nuevo tema. Cuando no hay ningún tema con su respectiva pregunta, se muestra un mensaje advirtiendo que no hay registros disponibles. De igual modo, ésta interfaz posee una funcionalidad de búsqueda dinámica que filtra por el título del tema. Si alguna respuesta del tema fue seleccionada como correcta por el profesor, el color de fondo del tema en el listado cambiará a un azul más claro, con esto se podrá diferenciar en el listado los temas resueltos y los que no. 103 Figura 88. Interfaz del foro general. Listado de temas (ESTUDIANTE). i. Crear Tema: al seleccionar al icono de ‘+’ se muestra un formulario para completar el título y el contenido del tema, además de un botón para subir un archivo PDF. ii. Eliminar Tema: al seleccionar al icono de la basura se mostrará una ventana emergente para confirmar la eliminación del tema, si se acepta, se borrará el tema del foro general. iii. Editar Tema: al seleccionar al icono del lápiz se mostrará un formulario del título y contenido del tema con los valores previamente ingresados en el “Crear Tema”. El botón para subir archivo reemplazará el archivo actual (si existe) que tiene el tema. iv. Ver Tema: al seleccionar al tema se mostrará la información detallada del mismo empezando por el título arriba de la pantalla, luego la imagen de perfil del creador del tema junto con el contenido, el nombre del creador, la fecha y hora de la publicación. Además cuenta con un enlace para descargar el archivo adjunto (si lo tuviese) asociado al tema. Debajo de la descripción del tema se despliega la lista de las respuestas. Cada una exhibe el nombre del autor de la respuesta, la fecha y hora de la publicación en fondo azul oscuro. Si alguna respuesta es la correcta, tendrá color verde manzana además de un icono de “clip” que indica si la respuesta tiene un archivo adjunto. Al seleccionar a dicho icono, se descargará el archivo. 104 v. Crear Respuesta: al final de la pantalla se encuentra un campo de texto para responder el tema, se puede escribir y enviarlo seleccionando al botón verde y si se quiere acompañar la respuesta con un archivo también se puede adjuntar en el botón de la izquierda con el icono de “clip”. vi. Subir Archivo: al seleccionar a algún botón con icono de “clip” aparecerán las opciones de las carpetas del dispositivo Android (File Browser) para ubicar el archivo a subir. El mismo debe tener un formato PDF y un tamaño máximo de 2MB (Megabytes). vii. Descargar Archivo: se identifica con un enlace en color azul dentro del tema y en cada respuesta (si lo tienen). Algunos dispositivos Android descargarán inmediatamente el archivo y otros lo visualizarán con algún software para ver PDF predeterminado en el dispositivo. 2. Foro por Grupo: al seleccionar al Foro por Grupos se desplegará el listado de los grupos en los que el profesor le incluyó. El listado de grupos se muestra por cada identificado con el nombre. Seleccionando al grupo, se procederá a ver el detalle del mismo. Figura 89. Interfaz del foro por grupos. Listado de grupos al que pertenece (ESTUDIANTE). i. Ver Grupo: al seleccionar al grupo se desplegará el listado de temas del mismo. Todo el funcionamiento a partir de este punto es idéntico al Foro General. 105 5. Mensajes Privados: al seleccionar a la sección “Mensajes Privados” del menú principal se desplegará el listado de conversaciones que tiene el estudiante, mostrando el nombre del estudiante o profesor con el que intervino en la conversación. Con el botón que se encuentra arriba a la derecha con el icono de ‘+’, podrá crear un mensaje privado. Al seleccionar al icono de basura en el mensaje, se eliminará la conversación de la aplicación. Al seleccionar a la conversación se desplegará el hilo real, en el cual se podrán ver los mensajes del estudiante alineados a la derecha y los del otro estudiante o el profesor alineados a la izquierda. Cada mensaje en sí, mostrará la fecha y hora del envío. Cada mensaje está ordenado por fecha de envío, donde el último mensaje enviado es el que está más abajo en la pantalla. Se puede responder el mensaje en el campo de texto al final y se envía presionando el botón verde de la derecha. 6. Buscar Tema: al seleccionar en el menú principal en la sección “Buscar” se desplegará el listado de todos los temas del Foro General y del Foro por Grupos que existan en el aula del estudiante. Dentro de esta sección se cuenta con la funcionalidad de buscar por nombre del tema mediante un buscador dinámico que filtra el tema requerido. De igual modo, se puede ingresar en un tema y así acceder al detalle del mismo. 7. Cerrar Sesión: al seleccionar en el menú principal a la opción “Cerrar sesión”, el sistema destruye todas las variables de sesión en la app y redireccionará al login. Para volver a ingresar en Cienciapp deberá ingresar sus credenciales de Portalasig nuevamente. 4.4.3.3.3 Notificaciones vía correo electrónico La aplicación cuenta con un sistema de notificaciones por correo electrónico, en la siguiente tabla las describimos: ACTIVADORES DE NOTIFICACIÓN RECEPTOR(ES) DE LA NOTIFICACIÓN Nueva “Aula Virtual” Profesor y estudiantes del aula involucrada Nuevo Tema en “Foro General” Estudiantes del aula involucrada Nuevo Tema en “Foro por Grupos” Estudiantes del grupo involucrado Tema resuelto en “Foro General” Estudiantes del aula involucrada Tema resuelto en “Foro por Grupos” Estudiantes del grupo involucrado Nuevo “Foro por Grupos” Estudiantes del grupo involucrado Nuevo “Mensaje Privado” Receptor del mensaje Tabla 5. Notificaciones vía correo electrónico de la aplicación. 4.4.4 Etapa IV. Pruebas A continuación se muestran el conjunto de pruebas funcionales de tipo caja cerrada que se realizaron. Se destaca que generalmente se recomienda que el equipo de desarrollo no sea el mismo que realice las pruebas sobre las funcionalidades del sistema, es por eso que en las actividades de pruebas se contó con la participación de profesores y estudiantes de la 106 Facultad de Ciencias de la UCV. Se indican ahora las pruebas realizadas en un total de 12 Tablas. PRUEBAS Nombre de la prueba: Inicio de sesión Prueba: 1 Objetivo: Constatar el inicio de sesión del profesor y estudiante. Entradas:  Se ingresa para el rol del sistema, cédula y contraseña. Evaluación de la prueba: Satisfactoria Resultado Obtenido: El usuario accede al sistema y puede realizar acciones según su perfil. Observaciones:  Se constata que efectivamente el usuario ingresa al sistema de manera correcta.  Si el aula no está creada aún y el estudiante intenta ingresar se genera el mensaje “Usted no tiene aulas creadas, comuníquese con su profesor.”  Si la cédula o la contraseña es incorrecta se muestra el mensaje “Cédula o clave incorrecta, intenta de nuevo.” Tabla 6. Prueba de funcionamiento 1. PRUEBAS Nombre de la prueba: Activar aula Prueba: 2 Objetivo: Activar un aula del profesor Entradas:  El profesor entra en el menú principal y selecciona la opción “Aulas”  El profesor selecciona “Activar Aula” Evaluación de la prueba: Satisfactoria Resultado Obtenido:  Se muestra el mensaje “El aula seleccionada fue activada con éxito”  Se habilita un siguiente menú con las opciones: Listado de Estudiantes, Foro General, Foro por Grupos  El usuario estudiante puede ingresar a la aplicación y en el menú puede ver el aula creada y en el siguiente menú puede ver las opciones: Foro General y Foro por Grupos Observaciones: Se envía correo electrónico a todos los estudiantes indicando que se ha creado el aula en la aplicación y se invita a descargarla. Tabla 7. Prueba de funcionamiento 2. 107 PRUEBAS Nombre de la prueba: Subida de imagen de perfil Prueba: 3 Objetivo: Actualizar la imagen de perfil del usuario Entradas:  Se selecciona en el menú la opción “Perfil”  Se selecciona la imagen con el símbolo de ‘+’  Se escoge una imagen de la galería del dispositivo Android Evaluación de la prueba: Satisfactoria Resultado Obtenido:  Se genera una barra de progreso mientras se está cargando la imagen  Se muestra un mensaje “la imagen de perfil ha sido actualizada con éxito” Observaciones: La imagen se mostrará siempre en la sección de Perfil y en los temas que cree el usuario. Tabla 8. Prueba de funcionamiento 3. PRUEBAS Nombre de la prueba: Crear tema en el Foro General Prueba: 4 Objetivo: Registrar un tema en el foro general de la materia Entradas:  Se selecciona en el menú la opción Aulas  Se selecciona el aula que se desee  Se selecciona la opción Foro General  Se selecciona el símbolo de ‘+’ arriba a la derecha de la pantalla  Se ingresa el título del tema, contenido y archivo PDF Evaluación de la prueba: Satisfactoria Resultado Obtenido: Visualización en el listado de temas del Foro General el tema creado Observaciones: Se pudo constatar el correcto funcionamiento de esta actividad entrando en el detalle del tema y comprobando el título, contenido ingresado y descargando el archivo cargado. Tabla 9. Prueba de funcionamiento 4. 108 PRUEBAS Nombre de la prueba: Editar tema en el Foro General Prueba: 5 Objetivo: Editar en el foro general algún tema previamente creado siendo profesor o el creador del tema Entradas:  Se selecciona en el menú la opción Aulas  Se selecciona el aula que se desee  Se selecciona la opción Foro General  Se selecciona el símbolo de lápiz en el tema  Se actualiza el título del tema, contenido y archivo PDF Evaluación de la prueba: Satisfactoria. Resultado Obtenido: Visualización en el listado de temas del Foro General el tema editado Observaciones: Se pudo constatar el correcto funcionamiento de esta actividad entrando en el detalle del tema y comprobando el título, contenido editado y descargando el archivo cargado en la edición del tema. Tabla 10. Prueba de funcionamiento 5. PRUEBAS Nombre de la prueba: Crear Grupo Prueba: 6 Objetivo: Seleccionar varios estudiantes, colocarle nombre y descripción al grupo y crearlo Entradas:  Se selecciona en el menú la opción Aulas  Se selecciona el aula que se desee  Se selecciona la opción Foro por Grupos  Se selecciona el símbolo de ‘+’ arriba a la derecha de la pantalla  Se ingresa el nombre del grupo, descripción y se seleccionan varios estudiantes del listado. Evaluación de la prueba: Satisfactoria. Resultado Obtenido:  Visualización en el listado de temas del Foro por Grupo el grupo creado especificando la cantidad de integrantes que posee Observaciones:  Se pudo constatar el correcto funcionamiento de esta actividad entrando en el detalle del grupo y habiéndose activado el foro por grupo.  El sistema le envía un correo electrónico a cada integrante del grupo indicándole la creación del grupo en la aplicación Tabla 11. Prueba de funcionamiento 6. 109 PRUEBAS Nombre de la prueba: Editar Grupo Prueba: 7 Objetivo: Seleccionar algún grupo creado, editarle nombre, descripción, eliminar y agregar estudiantes al grupo Entradas:  Se selecciona en el menú la opción Aulas  Se selecciona el aula que se desee  Se selecciona la opción Foro por Grupos  Se selecciona al símbolo de lápiz en el grupo deseado  Se ingresa el nombre del grupo, descripción, se eliminan y se seleccionan varios estudiantes del listado. Evaluación de la prueba: Satisfactoria. Resultado Obtenido:  Visualización en el listado de temas del Foro por Grupo el grupo editado especificando nombre y la cantidad de integrantes que posee Observaciones:  El sistema le envía un correo electrónico a cada integrante del grupo indicándole su participación en el grupo en la aplicación Tabla 12. Prueba de funcionamiento 7. PRUEBAS Nombre de la prueba: Eliminar Tema General Prueba: 8 Objetivo: Eliminar un tema por un profesor o el creador del tema Entradas:  Se selecciona en el menú la opción Aulas  Se selecciona el aula que se desee  Se selecciona la opción Foro General  Se selecciona al símbolo de tobo de basura en el tema deseado  Se selecciona en “Eliminar” Evaluación de la prueba: Satisfactoria. Resultado Obtenido:  Se despliega el listado de temas sin el tema que se acaba de eliminar Observaciones: Se despliega una ventana con el mensaje “¿Está seguro que desea eliminar este tema del foro general?” Tabla 13. Prueba de funcionamiento 8. 110 PRUEBAS Nombre de la prueba: Responder un tema Prueba: 9 Descripción: Discutir en un foro, respondiendo, ya sea como profesor o como estudiante teniendo la opción de adjuntar también un PDF o no Entradas:  Se selecciona en el menú la opción Aulas  Se selecciona el aula que se desee  Se selecciona la opción Foro General  Se selecciona un tema  Se escribe el contenido en el input de abajo  Si se quiere adjuntar un archivo se selecciona al botón de adjuntar y se selecciona un archivo de la memoria del dispositivo Android  Se envía la respuesta Evaluación de la prueba: Satisfactoria. Resultado Obtenido:  Se muestra en el listado de respuestas lo que se respondió Observaciones: Si se adjuntó un archivo se muestra un botón para descargarlo, sino no lo muestra Tabla 14. Prueba de funcionamiento 9. Android PRUEBAS Nombre de la prueba: Enviar mensaje privado Prueba: 10 Objetivo: Enviar un mensaje privado al profesor de la materia o a algún estudiante Entradas:  Se selecciona en el menú la opción Mensajes Privados  Se selecciona el botón de arriba a la derecha con símbolo de ‘+’  Se selecciona el aula perteneciente al receptor del mensaje  Se selecciona el receptor del mensaje  Se escribe el contenido del mensaje y se selecciona a ‘Enviar’ Evaluación de la prueba: Satisfactoria. Resultado Obtenido:  Se recarga la pantalla de los mensajes directos y se muestra el receptor del mensaje, al seleccionarlo se muestra el hilo de la conversación indicando como el último mensaje el que se envió Observaciones: Se le envía un correo al receptor indicándole el emisor y el mensaje privado que se le envió Tabla 15. Prueba de funcionamiento 10. 111 PRUEBAS Nombre de la prueba: Responder mensaje privado Prueba: 11 Objetivo: Responder un mensaje privado de alguna conversación Entradas:  Se selecciona en el menú la opción Mensajes Privados  Se selecciona la conversación que se desea responder  Se escribe el contenido del mensaje y se envía Evaluación de la prueba: Satisfactoria. Resultado Obtenido:  Se recarga la pantalla del hilo de la conversación indicando como el último mensaje el que se envió Observaciones: Se le envía un correo al receptor indicándole el emisor y el mensaje privado que se le envió Tabla 16. Prueba de funcionamiento 11. PRUEBAS Nombre de la prueba: Buscar tema Prueba: 12 Objetivo: Encontrar un tema en el buscador general Entradas:  Se selecciona en el menú la opción Buscar  Se escribe el nombre o una parte del nombre del tema a buscar Evaluación de la prueba: Satisfactoria. Resultado Obtenido:  Se filtra dinámicamente por lo escrito en el input de búsqueda Observaciones: Tabla 17. Prueba de funcionamiento 12. 112 CAPÍTULO V – RESULTADOS GENERALES A partir de los objetivos planteados se obtuvieron los siguientes resultados: Con la finalidad de mejorar la comunicación entre profesores y estudiantes de la Facultad de Ciencias de la Universidad Central de Venezuela y de servir como apoyo a la educación que se brinda en dicha facultad, se realizó un levantamiento de información y un estudio de las plataformas de preguntas y respuestas implementadas en la facultad, llegándose a la conclusión que no existe ninguna aplicación móvil realizada internamente que brinde esta posibilidad. Se detectó la necesidad de los profesores y estudiantes a estar comunicados y en conexión en todo momento y en cualquier lugar para minimizar la pérdida de información y optimizar el rendimiento del estudiante. Este estudio permitió, tomando en cuenta las soluciones existentes y los requisitos específicos identificados, diseñar una plataforma donde los profesores y estudiantes puedan encontrar e interactuar y qué mejor que un dispositivo inteligente que actualmente lo poseen la mayoría de las personas. Mediante la información recolectada y analizada, además del estudio de sistemas actuales de preguntas y respuestas, se pudo modelar el flujo de comunicación ideal para la herramienta propuesta planteando funcionalidades que dieran valor agregado a este proyecto y que permitieran así complementar y mejorar la educación en nuestra facultad. Teniendo como base el API del Portal de Sitios Web de Asignaturas “Portalasig”, que ya tiene registrado a la mayoría de los estudiantes de la Facultad de Ciencias de la UCV y los profesores, se descarta la implementación del módulo de registro de usuarios en la aplicación. La aplicación móvil se pudo integrar con los datos que ya se tienen de estudiantes y profesores. Se desarrolló la solución de software basándose en estos datos y complementándolos con imagen de perfil, mensajería directa y foros. Se completó el desarrollo de una aplicación móvil híbrida para el sistema operativo Android, la cual permite al estudiante realizar preguntas en un foro general por materias y/o en el foro por grupos previamente creado por el profesor, comunicación directa a través del módulo de mensajería privada y al profesor la capacidad de controlar todos los temas discutidos en el aula virtual. 113 Finalmente, se realizaron pruebas funcionales luego del desarrollo de la plataforma de preguntas y respuestas móvil. Las mismas resultaron satisfactorias y permitieron la corrección y mejoramiento de varias funcionalidades. Las pruebas se basaron en las acciones que puede realizar cada usuario dentro del sistema, y en analizar el flujo dentro del mismo. Se implementaron mecanismos para garantizar la seguridad en la aplicación, teniendo como requisito principal la autenticación de los usuarios validando los datos ingresados con los datos almacenados en la base de datos y en el API. Adicionalmente se aplicaron mecanismos de cifrado para almacenar las contraseñas en la base de datos y en la aplicación. Para alcanzar el objetivo general planteado, se establecieron y alcanzaron los siguientes objetivos específicos:  Se estudiaron los sistemas de comunicación educativos existentes actualmente tales como Piazza, Lore, Academia y Portalasig.  Se analizaron los sistemas de comunicación educativos como plataformas de preguntas y respuestas de tipo Fuente de Multitudes (Crowdsourcing), eligiendo como caso específico de estudio y desarrollo para esta investigación el Portal de Sitios Web de Asignaturas.  Se determinaron los requerimientos para desarrollar una aplicación de comunicación educativa del tipo preguntas y respuestas para dispositivos móviles tales como se explica en la sección de “Requerimientos Funcionales y Requerimientos no Funcionales” y en la “Etapa I – Planificación” del Capítulo IV.  Se diseñó la aplicación móvil de comunicación educativa del tipo preguntas y respuestas llamada Cienciapp, tal como se expone en la “Etapa II – Diseño” del Capítulo IV.  Se implementó la aplicación móvil de comunicación educativa del tipo preguntas y respuestas llamada Cienciapp, tal como se expone en la “Etapa III – Codificación” del Capítulo IV.  Se realizaron pruebas de la aplicación móvil de comunicación educativa desarrollada, tal como se expone en la “Etapa IV – Pruebas” del Capítulo IV. De este modo, el objetivo general planteado se alcanzó de manera exitosa. Los resultados del desarrollo de la aplicación móvil son los siguientes: 114 Aplicación Híbrida de Preguntas y Respuestas de Tipo Fuente de Multitudes (Crowdsourcing) - Diseñada para profesores y estudiantes de la Facultad de Ciencias de la U CV. - Permite la comunicación de todos los usuarios del sistema mediante Foro General, Foro por Grupos y Mensajería Privada. - Permite a los usuarios visualizar la información presentada en cada tema del foro. - Permite a los usuarios responder preguntas hechas por los foros de la aplicación. - Aporta beneficios de la comunicación móvil, independientemente del lugar en donde se encuentren los usuarios, pero limitativa en el uso de Internet. - Permite al estudiante crear temas y resolver dudas generadas en horas de clases o de estudio y así reciba ayuda del profesor u otro compañero mediante la aplicación, al instante. - Permite la subida y descarga de archivos PDF en los temas y respuestas de los foros. - Complementa aún más, el sistema de educación de la Facultad de Ciencias de la Universidad Central de Venezuela contando ahora con su propia aplicación móvil de preguntas y respuestas. 115 CAPÍTULO VI – CONCLUSIONES El desarrollo de este Trabajo Especial de Grado, dio como resultado la aplicación móvil de preguntas y respuestas entre profesores y estudiantes, el cual se adapta al formato del Portal de Sitios Web de Asignaturas “Portalasig”, cumpliendo con su objetivo principal que es desarrollar una plataforma de preguntas y respuestas (Q&A Platform) del tipo Fuente de Multitud (Crowdsourcing) en una aplicación móvil que soporte los procesos para la gestión de preguntas, respuestas, subida y descarga de archivos para los tipos de usuarios: profesor y estudiante. Dicha aplicación lleva por nombre “Cienciapp”. Adicionalmente se incluyó una mejora al funcionamiento de este portal, el cual consta de un módulo de mensajes privados (directos) entre estudiantes y profesores. El desarrollo de esta aplicación fue implementada en un ambiente móvil híbrido para el sistema operativo Android, que permite a los profesores y estudiantes acceder de manera más rápida, sencilla y efectiva a la información de interés, dentro de “Portalasig”, por aula o materia durante el semestre en curso y lograr establecer una comunicación eficiente y a la mano sin importar el lugar donde se ubique. Con esto se superan varias de las limitaciones de una comunicación tradicional a través de computadoras personales, y se lleva al mundo móvil permitiendo el proceso de comunicación desde el lugar en donde se encuentran y obteniendo los beneficios que ofrece la tecnología móvil. Al desarrollar la aplicación móvil de preguntas y respuestas “Cienciapp”, se logra que los estudiantes y profesores puedan obtener de manera más rápida y eficiente la información pertinente a la materia asociada al semestre actual con un segundo modo de acceso al Portal de Sitios Web de Asignaturas a través de su propio smartphone, sin necesidad de hacer un registro previo en dicho portal y utilizando las mismas credenciales de acceso establecidas en “Portalasig”. La aplicación móvil de preguntas y respuestas “Cienciapp” colabora en uno de los enfoques de gran importancia en la gestión de asignaturas en línea a través de una Plataforma Q&A (Question & Answer), específicamente del Portal de Sitios Web de Asignaturas, como lo es aportar un medio eficiente y de fácil uso, que utilice la red de internet como canal de comunicación, en el contexto de la educación a distancia. Gracias a que la aplicación proporciona una interfaz móvil que hace posible esta interconexión entre los usuarios (profesor y estudiante) y el contenido del Portal de Sitios Web de Asignaturas, se puede minimizar la necesidad de estar situado frente a una computadora, y más aún, con la posibilidad de utilizar su dispositivo móvil personal como herramienta de gestión, consulta e interacción. En esta investigación, se utilizó una adaptación de la metodología de desarrollo ágil «Programación Extrema», mejor conocido como «XP. La metodología de desarrollo ágil, permitió la adaptabilidad del proyecto frente a los esperados cambios de requisitos sobre la marcha. Además, agilizó el desarrollo permitiendo redefinir la orientación del mismo luego de culminada cada iteración con la finalidad de satisfacer los requisitos restantes. El patrón de diseño utilizado para este proyecto fue «Modelo Vista Controlador», conocido por sus sigas como «MVC». Como resultado se obtuvo una aplicación móvil de preguntas y respuestas para 116 dispositivos móviles que es modular, con clara separación de la interfaz, los datos y la lógica del negocio lo que le permite ser mantenible, reutilizable, y de fácil modificación. La aplicación móvil está desarrollada para que esté disponible desde la versión 4.0 de Android (IceCream Sandwich) y superiores, es decir, está disponible para las versiones de mayor uso, difusión y actuales del sistema operativo, ya que el 99% de los usuarios Android tienen versiones superiores a la versión 4.0 y de hecho la tendencia es la migración a las versiones 5.0 y superiores. Esto permite que la aplicación sea altamente portable y pueda ser utilizada en prácticamente cualquier dispositivo con este sistema operativo. Se tomó la decisión de desarrollar la aplicación híbrida para Android a diferencia de los demás sistemas operativos móviles, principalmente por su bajo costo de desarrollo, facilidad y adaptación con los lenguajes web populares y de mayor uso (mencionados en esta investigación), el framework Ionic posee una documentación (y foros de intercambio de ideas y ayuda) bastante amplia al igual que su integración con AngularJS, el uso del CLI de Ionic permitió la ejecución y configuración simple de un server local (a través de la cónsola de comandos) para correr los prototipos que fueron mejorándose en un navegador web (sin depender estrictamente del uso de un IDE, por ejemplo, Android Studio) y el entorno de codificación, el cual fue un editor de texto (Sublime 2 en nuestro caso), es 100% gratuito. Es necesario destacar que fue invertida, inicialmente, gran cantidad de tiempo para analizar, comprender e instalar el funcionamiento de la herramienta Android SDK, para luego configurar junto a Node.js el entorno de trabajo y desarrollo de esta aplicación híbrida móvil. Ninguno de los miembros del equipo de desarrollo, estaba familiarizado con el entorno. Esa inversión inicial repercutió en beneficios al momento de realizar modificaciones sobre la aplicación. La solución software elaborada es la Aplicación Móvil de Preguntas y Respuestas entre Profesores y Estudiantes (Q&A Platform), llamada “Cienciapp, la cual consta de una aplicación móvil híbrida para dispositivos con el sistema operativo Android (a partir de la versión 4.0 en adelante) y se establece como un primera iniciativa para facilitar y mejorar el uso y experiencia de usuario, entre profesores y estudiantes de la Facultad de Ciencias, con el Portal de Sitios Web de Asignaturas en cuanto a la consulta de información, principalmente, la gestión de preguntas y respuestas entre ambos tipos de usuarios. Se recomienda como futuras mejoras:  Implementar el manejo de archivos de audio, video, ejecutables u otros archivos de solo lectura en la aplicación móvil de preguntas y respuestas, con el fin de enriquecer dicha aplicación con el uso de contenido multimedia.  Desarrollar la misma aplicación para otros sistemas operativos en nativo y de uso común como IOS, Windows Phone y Blackberry y así abarcar más tecnologías. 117  Integrar la aplicación con otras fuentes de información, lo que permitiría usarla para otros contextos educativos. Por ejemplo, usando API’s de otros sistemas de Control de Estudios de la UCV o de otras instituciones  Desarrollar la parte del administrador en backend que permita añadir nuevas funcionalidades a ser tomadas por la aplicación móvil. Por ejemplo, cursos especiales o actividades que no estén en Portalasig 118 APÉNDICE 1 En este apartado se muestran los Diagramas de Casos de Uso (niveles 1 y 2) de la aplicación Cienciapp DIAGRAMA DE CASOS DE USO – NIVEL 1 Cienciapp 119 DIAGRAMA DE CASOS DE USO – NIVEL 2 120 121 122 DESCRIPCIÓN DE CASOS DE USO Nombre: 1 Autenticar Usuario Actor(es): Profesor, Estudiante Descripción: Interfaz de inicio de sesión y validación de credenciales del usuario que permite acceder al sistema Precondición: El usuario debe estar registrado en portalasig Postcondición: Los datos de cédula y contraseña son validados contra los datos registrados en portalasig. Flujo de trabajo: Flujo básico Actor: (1) Inicia cuando el actor completa los campos de cédula y contraseña y selecciona el botón “Iniciar Sesión”. Sistema: (2) El sistema al capturar el evento de selección, recibe los datos y lo valida contra la BD. Si los datos son válidos aprueba la sesión. Actor: (3) El actor visualiza el cambio en la interfaz. Sistema: Flujo alterno Actor: (1) Inicia cuando el actor completa los campos de cédula y contraseña y selecciona el botón “Iniciar Sesión”. Sistema: (2) El sistema al capturar el evento de selección, recibe los datos y lo valida contra la BD. Al ser inválidos no se aprueba la sesión y regresa a la interfaz de inicio de sesión y muestra un error al usuario. Actor: (3) El actor visualiza el mensaje de error que detalla el por qué falló el inicio de sesión. Sistema: Requerimientos especiales: Ninguno Puntos de extensión: Ninguno 123 Nombre: 2 Ver Perfil Actor(es): Profesor, Estudiante Descripción: Interfaz que describe y presenta al usuario sus datos de perfil. Precondición: Seleccionar en la opción “Perfil” del menú principal Postcondición: Se despliega una nueva interfaz con la información del usuario (foto de perfil, nombres y apellidos completos, correo electrónico). Flujo de trabajo: Flujo básico Actor: (1) Inicia cuando el actor selecciona la opción “Perfil” en el menú principal de la app. Sistema: (2) El sistema al capturar el evento de selección, consulta en portalasig la información de ese usuario y redirige a una nueva vista para desplegar la información. Actor: (3) El actor visualiza el cambio en la interfaz y obtiene la información de su perfil. Sistema: Flujo alterno Actor: Sistema: Actor: Sistema: Requerimientos especiales: Ninguno Puntos de extensión: Ninguno Nombre: 2.1 Agregar/Editar foto de Perfil Actor(es): Profesor, Estudiante Descripción: Funcionalidad que permite agregar o editar una imagen dentro del perfil de un usuario. Precondición: Haber iniciado sesión y seleccionar en el botón con el icono de “+” o directamente a la imagen actual Postcondición: Se despliega una vista auxiliar que le permite al usuario elegir una imagen nueva o reemplazar la existente. Flujo de trabajo: Flujo básico Actor: (1) Inicia cuando el actor selecciona el icono de “+” o directamente en la imagen actual dentro de su perfil. Sistema: (2) El sistema al capturar el evento de selección, despliega una vista auxiliar que le permite acceder a la galería del teléfono. Actor: (3) El actor visualiza el cambio en la interfaz, selecciona una nueva imagen para definir en el perfil y completa la acción. Sistema: (4) El sistema almacena en BD la imagen final, y redirecciona a la interfaz del perfil presentando la imagen seleccionada. Actor: (5) El actor visualiza el cambio a la interfaz del perfil y la foto que estableció. Sistema: 124 Flujo alterno Actor: (1) Inicia cuando el actor selecciona el icono de “+” o directamente en la imagen actual dentro de su perfil. Sistema: (2) El sistema al capturar el evento de selección, despliega una vista auxiliar que le permite acceder a la galería del teléfono. Actor: (3) El actor visualiza el cambio en la interfaz, selecciona una nueva imagen para definir en el perfil y completa la acción. Sistema: (4) El sistema falla al intentar subir la imagen al servidor y envía un mensaje de error al usuario. Actor: (5) El actor visualiza el cambio a la interfaz del perfil y un mensaje de error. Requerimientos especiales: Ninguno Puntos de extensión: Ninguno Nombre: 3 Listado de Aulas Actor(es): Profesor, Estudiante Descripción: Interfaz (accedida desde el menú) que muestra un listado de las aulas asociadas al usuario Precondición: Seleccionar en la opción “Aulas” del menú principal Postcondición: Ocurre un cambio de interfaz, y se muestra el listado de aulas a las que pertenece el usuario, cada una con el nombre de la materia. Flujo de trabajo: Flujo básico Actor: (1) Inicia cuando el actor selecciona la opción “Aulas” en el menú principal de la app. Sistema: (2) El sistema al capturar el evento de selección, consulta en portalasig la información de las aulas pertenecientes al usuario y redirige a una nueva vista para desplegar la información. Actor: (3) El actor visualiza el cambio en la interfaz y obtiene un listado de las aulas descritas por el nombre de la materia. Sistema: Flujo alterno Actor: (1) Inicia cuando el actor selecciona la opción “Aulas” en el menú principal de la app. Sistema: (2) El sistema al capturar el evento de selección, consulta en portalasig la información de las aulas pertenecientes al usuario, pero no encuentra ninguna. Se redirige a la vista para 125 desplegar un mensaje de advertencia. Actor: (3) El actor visualiza el cambio en la interfaz y el mensaje de que no hay aulas asociadas. Sistema: Requerimientos especiales: Ninguno Puntos de extensión: Ninguno Nombre: 3.1 Ver Aula Actor(es): Profesor, Estudiante Descripción: Interfaz que muestra tres nuevos accesos: listado de estudiantes, foro general y el foro por grupos Precondición: Seleccionar en la opción “Aulas” del menú principal y luego seleccionar una de ellas. Postcondición: Ocurre un cambio de interfaz, y se muestran tres botones. Un estudiante solo visualiza los accesos al foro general del aula y el foro por grupo, el profesor visualiza ambos accesos y además el listado de sus estudiantes. Flujo de trabajo: Flujo básico Actor: (1) Inicia cuando el actor selecciona una de las aulas. Sistema: (2) El sistema al capturar el evento de selección realiza un cambio de interfaz. Actor: (3) El actor visualiza el cambio en la interfaz y obtiene los nuevos accesos representados en tres botones. Sistema: Flujo alterno Actor: Sistema: Actor: Sistema: Requerimientos especiales: Ninguno Puntos de extensión: Ninguno Nombre: 3.1.1 Ver Listado de Estudiantes Actor(es): Profesor Descripción: Interfaz que expone el listado de los estudiantes de una materia y asociados al profesor que la dicta. Precondición: Seleccionar en la opción “Listado de Estudiantes” dentro de una de las aulas Postcondición: Ocurre un cambio de interfaz, y se muestra un listado de los estudiantes del aula Flujo de trabajo: Flujo básico Actor: (1) Inicia cuando el actor selecciona una de las aulas. Sistema: (2) El sistema al capturar el evento de selección, consulta en portalsig la información 126 de los estudiantes del aula y la retorna en un listado realizando un cambio de interfaz. Actor: (3) El actor visualiza el cambio en la interfaz y obtiene una lista de los estudiantes Sistema: Flujo alterno Actor: Sistema: Actor: Sistema: Requerimientos especiales: Ninguno Puntos de extensión: Ninguno Nombre: 3.1.2 Ver Foro General Actor(es): Profesor, Estudiante Descripción: Interfaz que muestra el listado de conversaciones del foro general de preguntas y respuestas Precondición: Seleccionar en la opción “Foro General” Postcondición: Ocurre un cambio de interfaz, y se muestra un listado de todos los temas activos (resueltos o no) del foro general relacionado a un aula seleccionada anteriormente Flujo de trabajo: Flujo básico Actor: (1) Inicia cuando el actor selecciona una de las aulas y a continuación en el botón de “Foro General”. Sistema: (2) El sistema al capturar el evento de selección, consulta en BD el foro con todos los temas relacionados y los despliega en un listado dentro de una nueva interfaz. Actor: (3) El actor visualiza el cambio en la interfaz y obtiene un listado de todos los temas del foro detallándose con un título, breve contenido, fecha y hora de creación/edición y la cantidad de respuestas asociadas. Sistema: (4) El sistema carga en la nueva vista una funcionalidad de agregar una nuevo tema a través de un icono de “+” en la esquina superior derecha. Flujo alterno Actor: Sistema: Actor: Sistema: Requerimientos especiales: Ninguno Puntos de extensión: Ninguno 127 Nombre: 3.1.2.1 Crear Tema Actor(es): Profesor, Estudiante Descripción: Interfaz que le permite al usuario crear un nuevo tema de discusión dentro del foro general. Precondición: Seleccionar en la opción “Foro General” y seleccionar en el botón de agregar “+”. Postcondición: Ocurre un cambio de interfaz, y se muestra al usuario un formulario simple para crear un nuevo tema. Flujo de trabajo: Flujo básico Actor: (1) Inicia cuando el actor selecciona el botón de agregar un nuevo tema “+” en el listado de “Foro General”. Sistema: (2) El sistema al capturar el evento de selección muestra al usuario una nueva interfaz con un formulario para crear un nuevo tema y la funcionalidad de “Adjuntar Archivo”. Actor: (3) El actor visualiza el cambio en la interfaz, completa los campos del título del tema, el contenido principal y luego selecciona el botón “Enviar”. Sistema: (4) El sistema captura el evento de selección del botón, valida los datos de los campos del formulario, carga en BD el tema nuevo y redirige al usuario a la interfaz del listado del foro general. Actor: (5) El actor visualiza el cambio en la interfaz y el nuevo tema creado en el listado actual. Flujo alterno Actor: Sistema: Actor: Sistema: Requerimientos especiales: Ninguno Puntos de extensión: Ninguno Nombre: 3.1.2.2 Acceder a Tema Actor(es): Profesor, Estudiante Descripción: Funcionalidad que le permite al usuario acceder a un tema de discusión del foro general y visualizar todas las respuestas hechas dentro del mismo Precondición: Seleccionar sobre un tema de discusión del listado del Foro General Postcondición: Ocurre un cambio de interfaz, y se muestran todas las respuestas hechas dentro de un tema de discusión. Flujo de trabajo: Flujo básico Actor: (1) Inicia cuando el actor selecciona uno de los Sistema: (2) El sistema al capturar el evento de selección, consulta en 128 temas de discusión dentro del listado del Foro General. portalasig las respuestas hechas por los usuarios del tema seleccionado y las despliega en una nueva vista. Actor: (3) El actor visualiza el cambio en la interfaz y obtiene un listado nuevo con todas las respuestas hechas a un tema que seleccionó, visualizando en cada una el contenido, el título, hora y fechas de creación de las respuestas y una imagen del creador del tema. Sistema: Flujo alterno Requerimientos especiales: Ninguno Puntos de extensión: Ninguno Nombre: 3.1.3 Ver Foro por Grupos Actor(es): Profesor, Estudiante Descripción: Interfaz que muestra el listado de foros por grupos relacionados a una discusión dentro de un aula. Precondición: Seleccionar en la opción “Foro por Grupos”. Postcondición: Ocurre un cambio de interfaz, y se muestra un listado de foros encapsulados por grupos, donde cada uno está atado a una discusión en un aula. Flujo de trabajo: Flujo básico Actor: (1) Inicia cuando el actor selecciona una de las materias y a continuación en el botón de “Foro por Grupos”. Sistema: (2) El sistema busca en BD todos los foros activos asociados al aula, y los despliega en una nueva interfaz. Actor: (3) El actor visualiza el cambio en la interfaz y obtiene un listado de todos los foros detallándose con un título y la cantidad de integrantes que pertenecen a cada grupo Sistema: (4) El sistema carga en la nueva vista una funcionalidad de agregar un nuevo grupo a través de un icono de “+” en la esquina superior derecha. Flujo alterno Actor: (1) Inicia cuando el actor selecciona una de las materias y a continuación en el botón de “Foro por Grupos”. Sistema: (2) El sistema busca en BD pero no encuentra ninguno creado, despliega entonces un mensaje de advertencia al actor. Actor: (3) El actor visualiza el mensaje de advertencia Sistema: 129 dentro de la interfaz de foro por grupos. Requerimientos especiales: Ninguno Puntos de extensión: Ninguno Nombre: 3.1.3.1 Crear Foro Grupal Actor(es): Profesor, Estudiante Descripción: Funcionalidad que le permite al usuario crear, a través de una interfaz, un nuevo foro por grupos. Precondición: Seleccionar en el icono de agregar foro por grupos “+” Postcondición: Ocurre un cambio de interfaz, y se muestra un formulario con dos campos para el nombre y descripción del grupo y un listado de integrantes para agregar al mismo. Flujo de trabajo: Flujo básico Actor: (1) Inicia cuando el actor selecciona el icono de “+” en la interfaz del listado de foro por grupos. Sistema: (2) El sistema al capturar el evento de selección despliega una nueva interfaz con un formulario y un listado para seleccionar a los integrantes. Actor: (3) El actor visualiza el cambio de interfaz, completa los campos del formulario y selecciona al menos un integrante y selecciona el botón “Crear”. Sistema: (4) El sistema al capturar el evento de selección del botón, crea un nuevo grupo y registra los datos ingresados en BD. Luego redirige al actor al listado de foro por grupos. Actor: (3) El usuario visualiza el cambio de interfaz y el nuevo foro grupal creado dentro del listado. Flujo alterno Actor: Sistema: Actor: Sistema: Requerimientos especiales: Ninguno Puntos de extensión: Ninguno Nombre: 3.1.3.2 Acceder a Foro Grupal Actor(es): Profesor, Estudiante Descripción: Funcionalidad que le permite al usuario acceder a un foro grupal especifico y visualizar todos los temas activos de discusión (resueltos o no) asociados al foro grupal. Precondición: Seleccionar sobre un foro grupal del listado. Postcondición: Ocurre un cambio de interfaz, y se muestra un listado de los temas de discusión dentro del foro grupal. 130 Flujo de trabajo: Flujo básico Actor: (1) Inicia cuando el actor selecciona uno de los foros grupales del listado. Sistema: (2) El sistema al capturar el evento de selección, consulta en BD los temas de discusión activos para dicho foro grupal (mostrando el título, breve contenido, fecha y hora de creación, número de respuestas) y lo despliega en una nueva interfaz. Actor: (3) El actor visualiza el cambio en la interfaz y obtiene un listado nuevo con todos los temas de discusión hechos en el foro grupal seleccionado, visualizando en cada una el contenido, el título, hora y fechas de creación/edición y el número de respuestas. Sistema: Flujo alterno Actor: (1) Inicia cuando el actor selecciona uno de los foros grupales del listado. Sistema: (2) El sistema al capturar el evento de selección, consulta en BD los temas de discusión activos para dicho foro grupal pero no encuentra resultados, entonces despliega un mensaje de advertencia al actor en la misma interfaz. Actor: (3) El actor visualiza el mensaje de advertencia. Requerimientos especiales: Ninguno Puntos de extensión: Ninguno Nombre: 3.1.3.3 Editar Foro Grupal Actor(es): Profesor, Estudiante Descripción: Funcionalidad que le permite al usuario editar la información del foro grupal incluyendo los integrantes que pertenecen al mismo. Precondición: Seleccionar la opción de “Editar” en uno de los foros grupales del listado Postcondición: Se muestra un formulario para editar el título, la descripción y los integrantes seleccionados o no en el foro grupal. Al culminar la edición ocurre un cambio de interfaz, y se muestra nuevamente el listado de foro por grupos. Flujo de trabajo: Flujo básico Actor: (1) Inicia cuando el actor hace selección sobre el Sistema: (2) El sistema al capturar el evento de 131 icono de edición en uno de los foros grupales del listado. selección, carga desde BD la información actual del foro por grupo en un formulario y a los integrantes de la misma y la despliega en una nueva vista. Actor: (3) El actor visualiza la nueva interfaz de edición del foro, completa los campos del formulario de edición y selecciona al menos a un integrante y presiona el botón “Editar”. Sistema: (4) El sistema al capturar el evento de selección sobre el botón, modifica los datos del foro e integrantes correspondientes en BD y redirige al usuario al listado de foros grupales. Actor: (5) El actor visualiza la interfaz del listado de foros por grupos y el foro recién editado. Flujo alterno Requerimientos especiales: Ninguno Puntos de extensión: Ninguno Nombre: 3.1.3.4 Eliminar Foro Grupal Actor(es): Profesor, Estudiante Descripción: Funcionalidad que le permite al usuario eliminar todo un foro grupal incluyendo los integrantes que pertenecen al mismo. Precondición: Seleccionar en la opción de “Eliminar” de un foro por grupos de listado. Postcondición: Se mantiene la misma interfaz y el foro grupal seleccionado es eliminado del sistema. Flujo de trabajo: Flujo básico Actor: (1) Inicia cuando el actor hace selección sobre el icono de eliminación en uno de los foros grupales del listado. Sistema: (2) El sistema al capturar el evento de selección despliega una vista modal (para confirmar la eliminación del grupo) al actor. Actor: (3) El actor visualiza la aparición del modal, luego, el usuario pulsa sobre el botón de eliminar. Sistema: (4) El sistema al capturar el evento de selección, busca en BD el foro y lo elimina (incluyendo las referencias de integrantes asociados). Actor: (5) El actor visualiza el cambio en el listado de foros grupales y que desaparece el foro recién seleccionado. Flujo alterno Actor: (1) Inicia cuando el actor hace selección sobre el Sistema: (2) El sistema al capturar el evento de 132 icono de eliminación en uno de los foros grupales del listado. selección despliega una vista modal (para confirmar la eliminación del grupo) al actor. Actor: (3) El actor visualiza la aparición del modal, luego, el usuario pulsa sobre el botón de cancelar. Sistema: (4) El sistema al capturar el evento de selección, cierra la ventana modal y regresa a la interfaz del listado de foros por grupos. Actor: (5) El actor visualiza el cierre del modal. Requerimientos especiales: Ninguno Puntos de extensión: Ninguno Nombre: 4 Ver Mensajes Privados Actor(es): Profesor, Estudiante Descripción: Interfaz que muestra un listado de las conversaciones establecidas con el usuario actual y otro estudiante o profesor. Precondición: Seleccionar en la opción “Mensajes Privados” del menú principal Postcondición: Ocurre un cambio de interfaz, y se muestra el listado de conversaciones del usuario, cada una identificada con el nombre del destinatario con quien mantiene la conversación. Flujo de trabajo: Flujo básico Actor: (1) Inicia cuando el actor selecciona la opción “Mensajes Privados” en el menú principal de la app. Sistema: (2) El sistema al capturar el evento de selección, consulta en BD las conversaciones relacionadas y las carga en una nueva interfaz. Actor: (3) El actor visualiza el cambio en la interfaz y obtiene un listado de las conversaciones creadas y recientes. Sistema: Flujo alterno Actor: (1) Inicia cuando el actor selecciona la opción “Mensajes Privados” en el menú principal de la app. Sistema: (2) El sistema al capturar el evento de selección, consulta en BD las conversaciones del usuario, pero no encuentra ninguna. Se redirige a la vista para desplegar un mensaje de advertencia. Actor: (3) El actor visualiza el cambio en la interfaz y el mensaje de que no hay conversaciones asociadas. Sistema: Requerimientos especiales: Ninguno 133 Puntos de extensión: Ninguno Nombre: 4.1 Acceder a Mensaje Actor(es): Profesor, Estudiante Descripción: Funcionalidad que muestra el detalle de una mensaje privado o conversación. Precondición: Seleccionar en la opción “Mensajes Privados” del menú principal y luego seleccionar una conversación. Postcondición: Ocurre un cambio de interfaz, y se muestra el detalle de un mensaje privado: título, mensajes enviados y recibidos, fecha y hora por cada mensaje. Flujo de trabajo: Flujo básico Actor: (1) Inicia cuando el actor selecciona uno de los mensajes privados o conversación. Sistema: (2) El sistema al capturar el evento de selección, consulta en BD la información detallada y disponible de esa conversación y la despliega en una nueva interfaz. Actor: (3) El actor visualiza el cambio en la interfaz y obtiene el detalle de la conversación. Sistema: Flujo alterno Requerimientos especiales: Ninguno Puntos de extensión: Ninguno Nombre: 4.1.1 Responder Mensaje Actor(es): Profesor, Estudiante Descripción: Funcionalidad que permite responder instantáneamente un mensaje privado o conversación. Precondición: Seleccionar en la opción “Mensajes Privados” del menú principal, seleccionar una conversación previamente creada. Postcondición: Una nueva respuesta se añade al historial del mensaje privado o conversación. Flujo de trabajo: Flujo básico Actor: (1) Inicia cuando el actor completa el campo de texto señalado para colocar una nueva respuesta y presiona el botón “Enviar” Sistema: (2) El sistema al capturar el evento de selección en el botón, valida el texto dentro del campo, registra los datos de la respuesta en BD y renderiza la respuesta en la misma vista. Actor: (3) El actor visualiza la nueva respuesta en la misma vista. Sistema: Flujo alterno 134 Requerimientos especiales: Ninguno Puntos de extensión: Ninguno Nombre: 4.2 Agregar Mensaje Actor(es): Profesor, Estudiante Descripción: Funcionalidad que permite crear un nuevo mensaje privado o conversación. Precondición: Seleccionar en la opción “Mensajes Privados” del menú principal, y luego selección en el icono de agregar “+” Postcondición: Un nuevo mensaje privado o conversación es creada por el usuario fuente y visualizado por el usuario destino. Flujo de trabajo: Flujo básico Actor: (1) Inicia cuando el actor selecciona el icono de agregar “+”. Sistema: (2) El sistema al capturar el evento de selección despliega una nueva interfaz al usuario que contiene un formulario para crear un mensaje nuevo. Actor: (3) El actor visualiza la nueva interfaz, selecciona un aula y luego un destinatario completa el campo de contenido del mensaje y selecciona el botón “Enviar” Sistema: (4) El sistema al capturar el evento de selección en el botón, valida los campos del formulario, registra los datos del nuevo mensaje en BD y envía dicho mensaje al destinatario indicado. Luego, redirige al usuario al listado principal de mensajes privados. Actor: (5) El actor visualiza el listado de conversaciones y un mensaje nuevo creado y de primero en el listado. Flujo alterno Requerimientos especiales: Ninguno Puntos de extensión: Ninguno 135 Nombre: 5 Buscar Temas Actor(es): Profesor, Estudiante Descripción: Interfaz que muestra un buscador dinámico y un listado de temas de los foros general y por grupos al usuario Precondición: Seleccionar en la opción “Buscar” del menú principal Postcondición: Ocurre un cambio de interfaz, y se muestra en primera instancia la barra de búsqueda dinámica y el listado con todos los temas (resueltos o no) disponibles. Flujo de trabajo: Flujo básico Actor: (1) Inicia cuando el actor selecciona la opción “Buscar” en el menú principal de la app. Sistema: (2) El sistema al capturar el evento de selección consulta en BD los temas pertenecientes a los foros, hace un cambio de interfaz y los despliega en una lista en una nueva interfaz. Actor: (3) El actor visualiza el cambio en la interfaz y obtiene una barra de búsqueda y debajo todos los temas (resueltos o no) de los foros. Flujo alterno Requerimientos especiales: Ninguno Puntos de extensión: Ninguno Nombre: 5.1 Acceder a Tema Actor(es): Profesor, Estudiante Descripción: Interfaz que muestra al usuario el detalle del tema que seleccione junto con las respuestas asociadas al mismo. Precondición: Seleccionar en la opción “Buscar” del menú principal y luego seleccionar en uno de los temas del listado. Postcondición: Ocurre un cambio de interfaz, y se muestra el detalle del tema, una imagen de quien lo creo y las respuestas asociadas. Flujo de trabajo: Flujo básico Actor: (1) Inicia cuando el actor hace selección sobre uno de los temas del listado de la sección “Buscar”. Sistema: (2) El sistema al capturar el evento de selección consulta en BD el detalle y las respuestas (si posee) del tema seleccionado, hace un cambio de interfaz y lo despliega para el usuario. Actor: (3) El actor visualiza el cambio en la interfaz y 136 obtiene una nueva interfaz donde se presenta el título del tema, una imagen del actor que creo el tema, su contenido y todas las respuestas (marcadas como correctas o no) que se asocian al tema. Flujo alterno Actor: Sistema: Actor: Sistema: Requerimientos especiales: Ninguno Puntos de extensión: Ninguno Nombre: 5.2 Filtrar Temas Dinámicamente Actor(es): Profesor, Estudiante Descripción: Interfaz que muestra un buscador y permite hacer un filtrado dinámico del texto ingresado por el usuario. Precondición: Seleccionar en la opción “Buscar” del menú principal y luego ingresar al menos un carácter dentro del buscador dinámico. Postcondición: Ocurre un cambio instantáneo en la interfaz actual y se filtra(n) el (los) tema(s) requerido(s). Flujo de trabajo: Flujo básico Actor: (1) Inicia cuando el actor el actor va ingresando texto dentro de la barra de búsqueda. Sistema: (2) El sistema al capturar el evento del teclado caracter a caracter, va consultando en BD los temas que se asocian al texto ingresado y los actualiza en el listado. Actor: (3) El actor visualiza el cambio en el listado y obtiene el tema buscado. Flujo alterno Actor: (1) Inicia cuando el actor el actor va ingresando texto dentro de la barra de búsqueda. Sistema: (2) El sistema al capturar el evento del teclado caracter a carácter, va consultando en BD los temas que se asocian al texto ingresado pero al no encontrar el tema muestra un mensaje de advertencia al actor debajo de la barra de búsqueda. Actor: (3) El actor visualiza el cambio en el listado y el mensaje de advertencia de que no se encontraron resultados. 137 Requerimientos especiales: Ninguno Puntos de extensión: Ninguno Nombre: 6 Adjuntar/Descargar archivo Actor(es): Profesor, Estudiante Descripción: Funcionalidad que permite cargar archivos al momento de: crear, editar y responder un tema del foro general y por grupos o descargarlos cuando está dentro del detalle del tema y en cada respuesta que tenga un adjunto. Precondición: Seleccionar en el botón de adjuntar un archivo cuando el usuario se encuentre creando, editando o respondiendo un tema de alguno de los foros. Postcondición: Un nuevo archivo es cargado dentro de un tema de algún foro. El mismo estará disponible para su descarga. Flujo de trabajo: Flujo básico Actor: (1) Inicia cuando el actor crea, edita o responde un tema de algún foro y selecciona el botón de adjuntar archivo. Sistema: (2) El sistema al capturar el evento de selección en el botón, accede a las opciones del teléfono (directorio de archivos) que le permitirá añadir un archivo. Actor: (3) El actor selecciona el archivo a adjuntar, y finaliza la acción. Sistema: (4) El sistema captura la operación del usuario y carga en BD el archivo seleccionado. Luego, regresa a la interfaz del tema dentro de un foro. Actor: (5) El actor visualiza el nuevo archivo añadido al tema que seleccionó. Flujo alterno Requerimientos especiales: Ninguno Puntos de extensión: Ninguno 138 Nombre: 7 Cerrar Sesión Actor(es): Profesor, Estudiante Descripción: Enlace en el menú principal que permite salir y cerrar una sesión de usuario. Precondición: El usuario debe tener una sesión iniciada previamente y seleccionar en la opción “Cerrar Sesión” del menú principal Postcondición: Ocurre un cambio de interfaz, y se redirige al usuario a la interfaz de autenticación. Flujo de trabajo: Flujo básico Actor: (1) Inicia cuando el actor selecciona el enlace “Cerrar Sesión” dentro del menú principal de la app. Sistema: (2) El sistema al capturar el evento de selección finaliza la sesión de usuario actual y redirige a la interfaz de autenticación. Actor: (3) El actor visualiza el cambio en la interfaz Sistema: Flujo alterno Actor: Sistema: Actor: Sistema: Requerimientos especiales: Ninguno Puntos de extensión: Ninguno 139 APÉNDICE 2 En este apartado se muestran los Diagramas de Secuencias de la aplicación Cienciapp. DIAGRAMA DE SECUENCIAS 140 141 142 143 144 145 146 APÉNDICE 3 En este apartado se muestran la(s) capturas(s) del código Backend PHP de la aplicación Cienciapp. 147 REFERENCIAS BIBLIOGRÁFICAS [1] R. Trent, F. Richard, L. Ginger, Q&A Platforms Evaluated Using Butler University Q&A Intelligence Index. Buttler University, College of Bussines, Scholarship and Professional Work - Business. Paper 108. 23 p. 2013 [2] Zhi-Feng Liua, Eric, “The Impact of Q&A Forums’ Level of Elaboration on Students’ Learning.” Procedia – Social and Behavioral Sciences 64, 2008. [EN LINEA]. Disponible: http://goo.gl/AsFImS. [2.1] Piazza (Q&A platform) About. [EN LINEA]. Actualizada: 14 julio 2013. [Fecha de consulta: 15 julio 2015]. Disponible: https://piazza.com/ [3] Lore. [EN LINEA]. Actualizada: 23 abril 2012. [Fecha de consulta: 14 julio 2015]. Disponible: http://lore.com/ [4] Academia. [EN LINEA]. Actualizada: 28 junio 2012. [Fecha de consulta: 15 julio 2015]. Disponible: http://academia.stackexchange.com/ [5] Vique, R. R. "Métodos para el desarrollo de aplicaciones móviles". Universidad Oberta de Cataluña. PID_00176755 .2012. [6] B. Frain, “Getting Started with HTML5, CSS3 and Responsive Web Design,” in Community Experience Distilled, Responsive Web Design with HTML5 and CSS3, Learn responsive design using HTML5 and CSS3 to adapt websites to any browser or screen size, Ed. Packt Publishing Ltd, 2012, Referencia de Producción: 1020412, Primera Publicación: Abril 2012. [Fecha de consulta: 15 julio 2015]. [EN LINEA]. Disponible: https://goo.gl/RHL2KC. [7] A. Bradford, “Getting Started: Transitioning to HTML5”, in HTML5 Mastery: Semantics, Standards, and Styling, Ed. Friends of Designer to designer an Apress company, Springer Science+Bussiness Media LLC, ISBN: 978-1-4302-3861-4, 233 Spring Street, New York, pp. 1-21, 2011. [Fecha de consulta: 16 julio 2015]. [EN LÍNEA], Disponible: http://goo.gl/AyG0YG. http://goo.gl/AsFImS https://piazza.com/ http://lore.com/ http://academia.stackexchange.com/ https://goo.gl/RHL2KC 148 [7.1] J. Morales, Origen del HTML, [Fecha de consulta: 25 de marzo 2017]. [EN LÍNEA], Disponible: http://juanca.e-lexia.com/2014/10/origen-del-html/. [8] J. D. Gauchat, “Capítulo 1 Documentos HTML,” in El gran libro de HTML5, CSS3 y JavaScript, Primera Edición, Barcelona, MARCOMBO S.A, Gran Via de les Corts Catalanes, 594, ISBN: 978-84-267-1770-2, pp. 63-64, 2012. [Fecha de consulta: 17 julio 2015]. [EN LINEA]. Disponible: https://goo.gl/P8cDOy. [9] T. Diez, “Creación de páginas Web accesibles con HTML5”. Actas del IV Congreso Internacional ATICA 2012, Universidad Técnica Particular de Loja, Ecuador, Departamento de Ciencias de la Computación, Universidad de Alcalá, España, pp. 119-128, Octubre, 2012. [10] Nuevos estándares en el desarrollo de sitios web: HTML5 y CSS3. 7 Compatibilidad de Navegadores con HTML5. [Fecha de consulta: 17 julio 2015]. [EN LINEA]. Disponible: http://goo.gl/fXnyiD. [11] L. Sikos, “Chapter 5: Style Sheets”, in Web Standards-Mastering HTML5, CSS3, and XML. CREATE OPTIMIZED, BROWSER-INDEPENDENT WEBSITES USING WEB STANDARDS, Ed. Friends of Designer to designer an Apress company, Springer Science+Bussiness Media LLC, ISBN: 978-1-4302-4041-9, 233 Spring Street, New York, pp. 161-188, 2011. [Fecha de consulta: 19 julio 2015]. [EN LÍNEA]. Disponible: https://goo.gl/qKM574. [12] J. Cranford, “Chapter 1. Understanding CSS3”, in Visual Quickstart Guide. CSS3, Ed. Pearson Education, Peachpit Press, 1249 Eighth Street, Berkeley, CA 94710. [Fecha de consulta: 19 julio 2015]. [EN LÍNEA]. Disponible: https://goo.gl/0Jg1Oc. [13] D. Flanagan, “Introduction to JavaScript” in JavaScript The Definitive Guide, Sixth Edition, Ed. O’Reilly Media, Inc., 1005 Gravenstein Highway North, Sebastopol, CA 95472., ISBN: 978-0- 596-80552-4, 2011. [Fecha de consulta: 19 julio 2015]. [EN LÍNEA]. Disponible: http://goo.gl/8FlW6I. [14] Y. Fernández, “Patrón Modelo-Vista-Controlador”. Revista Telem@tica. Vol. 11. No. 1, p. 47-57, enero-abril, 2012. ISSN 1729-3804. [Fecha de consulta: 19 julio 2015]. [EN LINEA]. Disponible: http://goo.gl/fgvbtv. https://goo.gl/qKM574 149 [15] Aymar García, “Estudio del estado del arte sobre los frameworks MVC para el desarrollo de aplicaciones web cliente, caso de estudio Ember.JS”. Universidad Politécnica de Madrid, Mayo 2013. [Fecha de consulta: 19 julio 2015]. [EN LINEA]. Disponible: http://www.dit.upm.es/~posgrado/doc/TFM/TFMs2012-2013/TFM_Aymar_Garcia_2013.pdf [16] Miguel Ángel Álvarez, “Introducción a los lenguajes del web”. DesarrolloWeb.com, Mayo 2012. [EN LINEA]. Disponible: http://www.ipereda.com/descargas/manuales/php/1.- Manual%20de%20Introducci%C3%B3n%20Lenguajes%20Web%20-%2022%20pag.pdf [17] Metodologías de Desarrollo de Software. [En línea] Febrero 2017, http://alarcos.inf- cr.uclm.es/doc/ISOFTWAREI/Tema04.pdf [18] Procesos de Desarrollo: RUP, XP y FDD. [En línea] Marzo 2017 http://www.willydev.net/descargas/Articulos/General/cualxpfddrup.PDF [19] Modelo Vista Controlador. [En línea] Diciembre 2016. http://www.comusoft.com/modelo- vista-controlador-definicion-y-caracteristicas http://www.ipereda.com/descargas/manuales/php/1.-Manual%20de%20Introducci%C3%B3n%20Lenguajes%20Web%20-%2022%20pag.pdf http://www.ipereda.com/descargas/manuales/php/1.-Manual%20de%20Introducci%C3%B3n%20Lenguajes%20Web%20-%2022%20pag.pdf http://www.willydev.net/descargas/Articulos/General/cualxpfddrup.PDF