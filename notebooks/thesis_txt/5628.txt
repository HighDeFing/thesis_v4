TEG_SOA-BPM_14_10 para generar PDF Final 1 Universidad Central de Venezuela Facultad de Ciencias Escuela de Computación Sistemas de Información DESARROLLO DE UNA SOLUCIÓN SOA-BPM PARA OPTIMIZAR EL PROCESO DE ORDEN DE COMPRAS DE UNA EMPRESA DEL SECTOR CONSTRUCCIÓN Trabajo Especial de Grado Presentado ante la Ilustre Universidad Central de Venezuela por el Bachiller: Jonatán Israel Sánchez Canache Para optar al título de Licenciado en Computación Tutor: Prof. María Elena Villapol Caracas, Julio de 2012 2 3 Resumen El presente Trabajo Especial de Grado (TEG) comprende el desarrollo y la implementación de una solución enmarcada en una Arquitectura Orientada a Servicios, que incluye la Gestión de Procesos de Negocios sobre el proceso de orden de compras perteneciente al departamento de compras de una empresa del sector construcción. Este proceso, al igual que los demás en la empresa, eran ejecutados sobre un sistema monolítico, poco flexible ante los cambios en los requerimientos de negocio y con una alto acoplamiento entre los componentes que lo conforman, lo que ocasiona que los cambios en el mismo, sean de gran complejidad y su desarrollo implique una inversión considerable en costos y tiempo. En este sentido se propuso y es implementada una solución SOA, que permite en la actualidad, exponer un conjunto de funcionalidades de negocio a través de servicios, con el fin de reducir la dependencia entre los componentes que conforman el proceso de orden de compras. Además el aspecto BPM de la solución permitió que el proceso de negocio haya sido optimizado de acuerdo a los requerimientos de negocios actuales y según las mejores prácticas de la industria. El desarrollo de la solución SOA-BPM, fue realizado de acuerdo a la metodología SOMA. Esta metodología define un conjunto de fases (Identificación, Especificación, Implementación y Pruebas) que conforman el ciclo de desarrollo de la solución. Además define de manera específica las técnicas utilizadas y los entregables y componentes asociados a cada fase. La plataforma sobre la cual fue implementada la solución comprende un Servidor de Procesos sobre el cual se ejecuta el proceso de negocio de orden de compras y un Servidor de Portlets, el cual es el contenedor de los módulos que serán utilizados por los usuarios funcionales del sistema para llevar a cabo sus funciones. Estos servidores forman parte de la suite de herramientas WebSphere de IBM. Palabras Clave: SOA, BPM, Procesos de Negocio, Portal de Negocios y Servicios. 4 Índice Resumen ........................................................................................................................ 3 Introducción ................................................................................................................ 10 CAPÍTULO 1. Problema de Investigación ................................................................. 12 1.1 Planteamiento del Problema ........................................................................ 12 1.2 Objetivos ..................................................................................................... 14 1.2.1 Objetivo General ..................................................................................... 14 1.2.2 Objetivos Específicos .............................................................................. 14 1.3 Importancia y Justificación ......................................................................... 15 CAPÍTULO 2. Marco Conceptual .............................................................................. 16 2.1 Arquitectura de Software ................................................................................... 16 2.1.1 Estilos de Arquitectura de Software ........................................................... 17 2.2.2 Arquitectura Cliente-Servidor..................................................................... 19 2.2.3 Arquitectura en N Capas ............................................................................. 20 2.2.4 Arquitectura Basada en Componentes ........................................................ 22 2.2 Arquitectura Orientada a Servicios (SOA, Service Oriented Architecture) ...... 24 2.2.1 Servicios en SOA ........................................................................................ 26 2.2.2 Arquitectura de referencia SOA ................................................................. 31 2.2.3 Ciclo de Vida de una Solución SOA .......................................................... 36 2.2.4 Estándares SOA .......................................................................................... 39 2.2.5 Facilitadores de una Arquitectura SOA ...................................................... 40 2.2.6 Beneficios de una Arquitectura Orientada a Servicios ............................... 43 2.3 Gestión de Procesos de Negocio (BPM - Business Process Management)...... 45 2.3.1 Ciclo de vida BPM ...................................................................................... 46 2.3.2 BPMN- Business Process Management Notation ...................................... 47 2.4 SOA y BPM ....................................................................................................... 48 2.5 Metodología de Desarrollo de Soluciones Orientadas a Servicio SOMA (Service-Oriented Modeling And Architecture) ...................................................... 49 2.5.1 Fase Modelado de Negocio y Transformación ........................................... 50 5 2.5.2 Fase de Gestión de la Solución ................................................................... 51 2.5.3 Fase de Identificación ................................................................................. 51 2.5.4 Fase de Especificación ................................................................................ 52 2.5.5 Fase de Realización .................................................................................... 52 2.5.6 Fase de Implementación ............................................................................. 52 2.5.7 Fase de Despliegue y Monitoreo ................................................................ 53 CAPÍTULO 3. Marco Aplicativo ................................................................................ 54 3.1 Fase de modelado de negocio y transformación ............................................ 55 3.2 Fase de Identificación .................................................................................... 62 3.3 Fase de Especificación y Realización ............................................................ 88 3.4 Fase de Implementación .............................................................................. 112 3.5 Fase de Despliegue y Pruebas ............................................................... 128 3.5.1 Estrategia de Desarrollo de Pruebas ...................................................... 128 3.5.2 Alcance de las Pruebas .......................................................................... 129 3.5.3 Áreas de Foco ........................................................................................ 130 3.5.4 Estrategias y Niveles de Pruebas .......................................................... 131 Conclusiones ............................................................................................................. 138 Recomendaciones ...................................................................................................... 140 Referencias ................................................................................................................ 141 6 Índice de Figuras Figura 1. Arquitectura cliente-servidor. ...................................................... 20 Figura 2. Arquitectura en N capas............................................................... 21 Figura 3. Arquitectura basada en componentes. ......................................... 23 Figura 4. Modelo conceptual SOA.............................................................. 25 Figura 5. Tres orígenes de servicios ............................................................ 27 Figura 6. Exponer directamente funciones de aplicaciones existentes como servicios....................................................................................................... 28 Figura 7. Exponer indirectamente funciones como servicios ..................... 29 Figura 8. Origen externo de los servicios consumidos ............................... 30 Figura 9. Capas de una arquitectura SOA ................................................... 32 Figura 10. Componentes de Servicio .......................................................... 34 Figura 11. Orquestación de servicios .......................................................... 35 Figura 12. Ciclo de vida SOA ..................................................................... 36 Figura 13. Ciclo de vida BPM..................................................................... 46 Figura 14. Ciclo de vida SOMA ................................................................. 50 Figura 15. Modelo del Proceso de orden de compra en notación BPMN ... 56 Figura 16. Modelo del Proceso de orden de compra en Websphere Business Modeler ....................................................................................................... 57 Figura 17. Modelo del Proceso para el rol de Generador de Orden ............ 58 Figura 18. Modelo del Proceso para el rol de Analista de Orden ............... 59 Figura 19. Arquitectura Funcional de la Solución ...................................... 89 Figura 20. Interfaz Gestión ODC ................................................................ 92 Figura 21. Diagrama de Clases Mensaje de entrada OP01: registrar .......... 95 Figura 22. Diagrama de Clases Mensaje de salida OP01: registrar ........... 96 Figura 23. Diagrama de Clases Mensaje de entrada OP02: cambiarEstado ..................................................................................................................... 98 Figura 24. Diagrama de Clases Mensaje de salida OP02: cambiarEstado .. 99 7 Figura 25. Diagrama de Clases Mensaje de entrada OP03: consultar ...... 101 Figura 26. Diagrama de Clases Mensaje de salida OP03: consultar ........ 102 Figura 27. Diagrama de Clases Mensaje de entrada OP04: listar ............ 104 Figura 28. Diagrama de Clases Mensaje de salida OP04: listar .............. 105 Figura 29. Diagrama de Clases Mensaje de entrada OP05: actualizar .... 106 Figura 30. Diagrama de Clases Mensaje de salida OP05: actualizar ....... 108 Figura 31. Diagrama de Clases Mensaje de entrada OP06: buscarArticulos ................................................................................................................... 109 Figura 32. Diagrama de Clases Mensaje de salida OP06: buscarArticulos ................................................................................................................... 110 Figura 33. Modelo de Componentes ........................................................ 111 Figura 34. Entorno de desarrollo de Websphere Integration Designer .... 113 Figura 35. Diagrama de Ensamblado del Proceso de orden de compra ... 114 Figura 36. Fragmento del BPEL del proceso orden de compras.............. 115 Figura 37. Diagrama de secuencia Crear orden de compra ..................... 118 Figura 38. Diagrama de secuencia Revisar orden de compra .................. 119 Figura 39. Diagrama de secuencia Modificar orden de compra .............. 121 Figura 40. Diagrama de secuencia Consultar orden de compra ............... 122 Figura 41. Diagrama de secuencia Buscar Artículos ............................... 123 Figura 42. Diagrama de secuencia Buscar Proveedor .............................. 124 Figura 43. Instancia de la Arquitectura SOA para el proceso de orden de compra ....................................................................................................... 126 Figura 44. Estrategia de desarrollo de pruebas ........................................ 128 Figura 45. Resultados de las pruebas funcionales .................................... 135 Figura 46. Resultados de las pruebas de aceptación de usuario ............... 136 8 Índice de Tablas Tabla 1. Estilos de Arquitectura de Software.................................................. 18 Tabla 2. Descripción del Proceso de orden de compras.................................. 60 Tabla 3. Descripción de identificadores / abreviaturas. .................................. 63 Tabla 4. Caso de Uso: Registrar orden de compra. ......................................... 69 Tabla 5. Caso de Uso: Generar orden de compra............................................ 71 Tabla 6. Caso de Uso: Trabajar con orden de compra. ................................... 76 Tabla 7. Caso de Uso: Notificar Evento de orden de compra. ........................ 77 Tabla 8. Caso de Uso: Seleccionar Artículos. ................................................. 80 Tabla 9. Caso de Uso: Listar orden de compras.............................................. 81 Tabla 10. Caso de Uso: Consultar orden de compras. .................................... 82 Tabla 11. Caso de Uso: Cambiar estado de orden de compras. ...................... 84 Tabla 12. Caso de Uso: Revertir estado de orden de compras. ....................... 86 Tabla 13. Servicios candidatos para el proceso de orden de compras. ........... 88 Tabla 14. Descripción del Servicio Gestión ODC .......................................... 91 Tabla 15. Operaciones de la Interfaz GestionODC ......................................... 93 Tabla 16. Eventos por operación de Servicio.................................................. 93 Tabla 17. Mensaje de Entrada OP01: registrar ............................................... 94 Tabla 18. Mensaje de Salida OP01: registrar .................................................. 95 Tabla 19. Mensaje de Entrada OP02: cambiarEstado ..................................... 97 Tabla 20. Mensaje de Salida OP02: cambiarEstado ....................................... 99 Tabla 21. Mensaje de Entrada OP03: consultar ............................................ 100 Tabla 22. Mensaje de Salida OP03: consultar .............................................. 101 Tabla 23. Mensaje de Entrada OP04: listar ................................................... 103 Tabla 24. Mensaje de Salida OP04: listar ..................................................... 104 Tabla 25. Mensaje de Entrada OP05: actualizar ........................................... 106 Tabla 26. Mensaje de Salida OP05: actualizar.............................................. 107 Tabla 27. Mensaje de Entrada OP06: buscarArticulos ................................. 109 9 Tabla 28. Mensaje de Salida OP06: buscarArticulos ................................... 110 Tabla 29. Descripción de los portlets pertenecientes al proceso de orden de compras ......................................................................................................... 117 Tabla 30. Áreas foco de las pruebas a la solución implementada ................. 130 Tabla 31. Pruebas Unitarias al proceso de orden de compra ........................ 132 Tabla 32. Pruebas Funcionales-Sistema al proceso de orden de compra ...... 133 Tabla 33. Pruebas de aceptación de usuarios al proceso de orden de compra ....................................................................................................................... 136 10 Introducción En la actualidad las empresas deben adaptarse constantemente a los cambios de un entorno comercial muy variante, con frecuentes cambios en las reglas de negocio a las cuales debe adecuarse de la forma más rápida y con el menor impacto posible en el desempeño de sus funciones diarias. Por lo tanto es imprescindible que la tecnología que soporta sus procesos de negocios, le permita asimilar de manera eficiente los cambios en la forma como ejecutan sus negocios. El Departamento de Compras dentro de cualquier empresa tiene la responsabilidad de la adquisición de los insumos que son indispensables para cumplir con la producción de bienes y servicios. Estos insumos pueden ser materia prima, herramientas, equipos, artículos de oficina, contratación de servicios de terceros, entre otros. Además la compra de estos insumos debe ser realizada en el momento adecuado, a precios razonables con la cantidad y calidad requerida. En el momento en que los distintos departamentos de una empresa identifican las necesidades de insumos, proceden a elaborar una requisición de compra, la cual será generalmente la iniciativa para la creación de una orden de compra. Una orden de compra es un documento generado por el comprador donde realiza una solicitud formal al proveedor de los insumos que requiere. Una vez generada la orden de compra, el proceso continúa a través de una serie de análisis que permitirán tomar una decisión de aprobación, modificación o rechazo de la misma. Finalmente en caso de aprobación se emite oficialmente la orden para realizar el pedido al proveedor respectivo. El presente caso de estudio incluye el proceso de orden de compras de una empresa del sector construcción. Un proceso de negocio el cual está implementado sobre un sistema rígido y de difícil mantenibilidad, que está atado a las limitaciones inherentes del mismo y que por lo tanto evita que los cambios en el proceso de negocio sean factibles de realizar. En este sentido se propone la implementación de una solución SOA (Service Oriented Architecture) y BPM (Business Process Management) para el proceso de orden de compras que aprovechando las funcionalidades del sistema existente, permita optimizar el proceso de negocio, soportado por un paradigma orientado a servicios. El objetivo por consiguiente es la implementación del proceso mencionado 11 bajo una arquitectura SOA, lo cual permitirá que este sea más flexible y adaptable ante los cambios en las reglas de negocio. A lo largo de este trabajo de grado se describirán las actividades realizadas de la siguiente manera: En el Capítulo I: Se inicia describiendo el problema de investigación y la situación actual especificando así las necesidades y los objetivos generales y específicos de la solución. El Capítulo II se refiere al marco conceptual de la arquitectura orientada a servicios donde se expondrán las características que la convierten en la solución adecuada para el tratamiento de los requerimientos del negocio. Además se plantea la metodología de desarrollo SOMA que guiará el desarrollo de la solución. El Capítulo III comprende el marco aplicativo de acuerdo a la metodología SOMA, describiendo cada una de las fases aplicadas y las pruebas realizadas al sistema. Finalmente se presentan las conclusiones, donde se menciona los resultados luego del desarrollo de la solución orientada a servicios aplicada al proceso de negocios. 12 CAPÍTULO 1. Problema de Investigación El proceso de generación de las órdenes de compra, se realiza a través de un único sistema que provee las funcionalidades requeridas por los usuarios y soporta la ejecución de las operaciones diarias que se llevan a cabo en la empresa. En el proceso, los usuarios con el rol de Generador de orden de compra y Analista de orden de compra, ingresan al sistema para realizar el ingreso y revisión de una orden respectivamente. El proceso de orden de compra forma parte de los procesos de negocios que conforman el macro proceso de compras de la empresa y es fundamental en la consecución de los objetivos de negocio de la misma. 1.1 Planteamiento del Problema Actualmente los procesos de la empresa, incluyendo el proceso de orden de compra, están soportados por un sistema legado implementado en el lenguaje de programación RPG (Report Program Generator). Un lenguaje para el desarrollo de aplicaciones de negocios, poderoso y que ha funcionado operacionalmente para la empresa, no obstante dicho sistema, no permite que la empresa cuente con mayor flexibilidad al momento de la gestión de sus procesos de negocios. En este sentido la empresa cuenta con un sistema que si bien ha cumplido hasta ahora con las exigencias operacionales de la empresa, se trata de un sistema monolítico que encapsula una gran cantidad de funcionalidades del negocio y que determina como los procesos son implementados y ejecutados. Además han surgido exigencias y necesidades en los procesos de negocio, luego del desarrollo original de las aplicaciones, que no están soportados por el sistema y que sencillamente son llevadas de forma manual ya que su inclusión implica cambios significativos en lo que ya está construido o implica la construcción de nuevas aplicaciones desde cero, con la complejidad inherente que implica la integración con las funcionalidades existentes. 13 En el caso del proceso de orden de compra no se encuentra claramente definido ni delimitado su alcance real. No existe una forma de gestionar el proceso existente por lo que optimizar el proceso no es una tarea de baja complejidad. Aunado a lo anterior, el sistema no ofrece el uso de requisiciones de compra existentes para el cargado de las órdenes por lo que esta tarea se realiza de forma manual ingresando cada uno de los artículos. Dicha situación ocurre con otras tareas menores que no están soportadas por el sistema. Punto aparte tiene que ver con la interfaz grafica de usuario (GUI) la cual no es intuitiva ni usable por la naturaleza del lenguaje de implementación del sistema. En vista de que los procesos de negocios no se encuentran alineados con el sistema de información actual, por sus limitaciones técnicas y de implementación, los cambios son complejos en implementación y costos. Además no existe forma de analizar y gestionar el desempeño del proceso a fin de optimizarlo e integrarlo con los otros procesos de la empresa y mucho menos existe una forma de obtener información que soporte la toma de decisiones. 14 1.2 Objetivos 1.2.1 Objetivo General Desarrollar una solución enfocada en una Arquitectura Orientada a Servicios (SOA, por sus siglas en inglés) y en la Gestión de los Procesos de Negocios (BPM, por sus siglas en inglés) para la optimización del proceso de orden de compra de una empresa del sector construcción. 1.2.2 Objetivos Específicos El presente trabajo pretende alcanzar los siguientes objetivos específicos: • Identificar y especificar los requerimientos funcionales y no funcionales del proceso de orden de compra. • Elaborar el modelo de proceso de orden de compras en la herramienta de modelado de procesos. • Especificar interfaz de usuarios (matriz de datos y pantallas). • Identificar servicios candidatos. • Elaborar especificación de servicios que conformarán la solución. • Definir especificación técnica de la solución propuesta: Componentes y Servicios. • Implementar los componentes y servicios en el Servidor de Procesos. • Desarrollar los módulos web de la interfaz de usuario del proceso. • Realizar pruebas unitarias, funcionales y de aceptación de usuario a cada uno de los componentes de la solución. 15 1.3 Importancia y Justificación Actualmente los ajustes a los procesos de negocio de la empresa son realizados si son extremadamente necesarios y en la mayoría de las veces se evita tocar el código de las aplicaciones ya que su modificación implica actualizar los muchos componentes dependientes entre sí. En otros casos se opta por ser llevados manualmente por medio de aplicaciones de escritorio como Office, lo cual aumenta el número de repositorios de información que deben ser mantenidos en el tiempo. Por esto es de suma importancia que la ejecución de los procesos de negocio de la empresa deban ser mejorados y que sus funcionalidades puedan ser expuestas de forma independiente, aprovechando por supuesto las funcionalidades que han sido desarrolladas en el sistema legado existente. Una arquitectura de servicios aplicada sobre procesos de negocio optimizados y de eficiente ejecución permite mejorar el tiempo de respuesta de la empresa ante las exigencias de un mercado competitivo en el que se incorporan además, de manera frecuente, cambios en las reglas de negocio. 16 CAPÍTULO 2. Marco Conceptual 2.1 Arquitectura de Software La arquitectura de software representa un marco de referencia que sirve de guía para la construcción de software, representa el nivel más alto en el diseño de un sistema, ya que establece la relación entre los componentes que lo conforman. Shaw M., y Garlan D. (1994) detallan “la arquitectura de software define al sistema en términos de componentes de cómputo y las interacciones entre esos componentes.” Así mismo Bass, Clements, y Kazman (2003) definen la arquitectura de software como “la estructura o estructuras del sistema, que comprende elementos de software, las propiedades externamente visibles de esos elementos, y las relaciones entre ellos”. En este sentido concibiendo la arquitectura de software como la estructura del sistema definida en términos de componentes y sus relaciones, es indispensable tomar en cuenta además el contexto (restricciones y particularidades) y lineamientos de diseño, según lo define la ISO/IEC/IEEE 42010:2011: “la organización fundamental de un sistema formada por sus componentes, las relaciones entre ellos y el contexto en el que se implantarán, y los principios que orientan su diseño y evolución”. La definición de una arquitectura se debe realizar en las fases iniciales del ciclo de desarrollo una vez que han sido identificados los requerimientos y riesgos siendo por lo tanto un artefacto de la actividad de diseño que debe ser dirigida por las necesidades de las personas que forman parte del proyecto: cliente, usuarios finales, departamento de TI, soporte, producción, etc. Una vez definido el concepto de arquitectura de software, es ventajoso definir además los términos que conforman dicha definición como son: los componentes y sus relaciones. Un componente puede entenderse como los bloques de construcción y/o composición que constituyen las partes de un sistema de software. Según Herzum y Sims, “un componente es un artefacto de software autocontenido y claramente identificable que describe ó ejecuta funciones específicas; que tiene, además, una 17 interfaz claramente establecida, una documentación apropiada y un estatus de uso recurrente bien definido”. Clemens Szyperski define componente como “una unidad de composición con interfaces especificadas contractualmente y solamente dependencias explícitas de contexto. Un componente de software puede ser desplegado independientemente y está sujeto a composición por terceros”. Por consiguiente se puede definir un componente como un elemento de software autónomo que implementa una funcionalidad expuesta a través de interfaces claramente definidas. Exponer un componente permite la reutilización además de su composición dentro de un sistema de software. La interacción entre los componentes se define a través de un modelo de componentes, el cual en base a estándares y convenciones, define el esquema de interacción especificando: como los componentes son localizados, los protocolos de comunicación empleados y detallando aspectos de calidad como seguridad, transacciones y alta disponibilidad entre otros. 2.1.1 Estilos de Arquitectura de Software Un estilo arquitectónico, a veces llamado un patrón arquitectónico, es un conjunto de principios, un patrón de grano grueso, que proporciona un marco de trabajo o framework abstracto para una familia de sistemas. Un estilo arquitectónico mejora la partición y promueve la reutilización de diseños, proporcionando soluciones a problemas recurrentes. Proveen un vocabulario común que incluye guías, esquemas de organización y lineamientos para el diseño y organización coherente de la arquitectura del sistema. Shaw M., y Garlan D. (1994) definen estilo arquitectónico como “una familia de sistemas de software en términos de un patrón de organización estructural, que define un vocabulario de componentes y tipos de conectores y un conjunto de restricciones de cómo pueden ser combinados”. Un estilo de arquitectura busca definir: • Un conjunto de componentes que realizan una función requerida por el sistema. 18 • Un conjunto de conectores (elementos de datos o de proceso) que permiten la comunicación, coordinación y cooperación entre los componentes. • Restricciones que definen cómo se integran los componentes para formar el sistema. • Modelos semánticos que permiten a un diseñador comprender las propiedades generales de un sistema. A continuación la tabla 1 resume los principales estilos arquitectónicos, atributos de calidad que propician y la arquitectura específica que lo implementa, según Shaw y Garland (1994) y el grupo de Bass, Clements y Kazman (1996): Estilo Descripción Atributos asociados Implementación Flujo de Datos Estilo apropiado para sistemas que emplean transformaciones de datos en pasos sucesivos donde los datos que ingresa en el sistema fluyen entre los componentes, de uno en uno, hasta que se le asigne un destino final (salida o repositorio). Si el flujo degenera en una única línea de transformación se denomina secuencial batch o en lote. Reutilización y modificabilidad Tubería y filtros Centrado en Datos Apropiado para sistemas que se basan en acceso y actualización de datos compartidos en estructuras de almacenamientos. Proporciona integridad Integrabilidad, escalabilidad y modificabilidad Arquitecturas de Pizarra o Repositorio Llamada y retorno Aplicados generalmente en sistemas de gran escalas. Comprende dos subestilos: el primero el cual establece una jerarquía de control donde componentes principales invocan otros componentes subordinados. Otro enfoque denominado llamada de procedimiento remoto donde se distribuye los diferentes componentes de la arquitectura entre diferentes computadores de la red. Modificabilidad y escalabiilidad Modelo Vista Controlador (MVC), Arquitectura en capas, Arquitectura basada en componentes y Cliente-Servidor Código Móvil Ideal en sistemas donde se busca simular funcionalidades que no son nativas del hardware o software sobre el que se está implementado. Portabilidad Arquitectura de máquinas virtuales Entre semejant es (Peer to- Peer) El estilo se basa en la especificación de procesos independientes o entidades que se comunican a través de mensajes. Además se aprovecha de la superposición de capas que permiten entre otras cosas crear mecanismos y dar soporte para la comunicación entre cada uno de los elementos de la arquitectura. Modificabilidad y escalabilidad Arquitecturas basadas en eventos, Arquitecturas Orientadas a Servicios (SOA) y Arquitecturas basadas en recursos. Tabla 1. Estilos de Arquitectura de Software. 19 La arquitectura de un sistema de software generalmente no se limita a un único estilo, a menudo la solución está conformada por una combinación de estilos arquitectónicos. En la escogencia de una arquitectura de software influyen numerosos factores entre los que se puede mencionar los siguientes: • Escenarios significativos del proyecto. • Atributos de calidad requeridos: seguridad, performance, concurrencia y configuración. • Plataforma existente: sistemas operativos, manejador de bases de datos, sistemas existentes, entre otros. • Arquitecturas previas. • Capacidad y experiencia de los desarrolladores. • Riesgos. A continuación se describirán los estilos arquitectónicos más representativos y vigentes. 2.2.2 Arquitectura Cliente-Servidor El estilo de arquitectura cliente-servidor describe la arquitectura de sistemas distribuidos conectados a través de una red, como se puede ver en la figura 1. Describe la relación entre múltiples clientes y uno o más servidores, donde los clientes inician la comunicación a través de solicitudes y esperan por la respuesta, el servidor usualmente verifica la autenticidad del usuario, procesa el requerimiento y genera el resultado enviándolo al nodo que hizo la solicitud. La comunicación entre cliente y servidor se realiza según protocolos y formatos de datos claramente definidos. 20 Figura 1. Arquitectura cliente-servidor. Fuente. www.usuaris.tinet.cat La arquitectura cliente-servidor es apropiada en los casos en los que se desea gestionar la lógica de negocios o una única interfaz de usuario en un sitio centralizado. Es también ideal en los casos que se desea tener un manejo centralizado de los datos o se quiere exponer funcionalidades a un conjunto de clientes desde un punto único. Entre los beneficios de este estilo arquitectónico se mencionan: • Alto control de la seguridad. • Sencilla administración al centralizar el acceso y actualización de los datos. • Las responsabilidades se distribuyen entre servidores lo que representa fácil mantenimiento. Definida como una arquitectura de n capas. Las limitaciones en cuanto a extensibilidad y escalabilidad son las desventajas de esta arquitectura cuando la lógica de negocios y datos es combinada de manera muy estrecha. En cuanto a la confiabilidad un mayor riesgo está presente si se cuenta con un servidor centralizado, no obstante la arquitectura cliente-servidor de n capas intenta superar dichas limitaciones. 2.2.3 Arquitectura en N Capas Shaw y Garlan (1994) definen la arquitectura de capas como una organización jerárquica donde cada capa proporciona funcionalidades a la capa inmediata superior 21 y a su vez se sirve de los servicios de la capa inmediatamente inferior. En la figura 2 se puede observar el diseño general de una arquitectura en capas. Figura 2. Arquitectura en N capas. Fuente. www.arevalomaria.wordpress.com La arquitectura en capas se caracteriza por la descomposición funcional de las aplicaciones, los componentes del servicio, y en la implementación distribuida, proporcionando una escalabilidad mejorada, disponibilidad, gestión y utilización de recursos. Cada nivel es completamente independiente de todos los niveles, excepto para aquellos inmediatamente por encima y debajo de ella. El nivel enésimo sólo tiene que saber cómo manejar una petición de la capa n+ 1, y transmitir esa solicitud a la capa n-1 (si la hay), y cómo manejar los resultados de la solicitud. La comunicación entre niveles es típicamente asincrónica con el fin de apoyar una mejor escalabilidad. Este estilo es apropiado para situaciones de arquitectura donde la gestión de reglas de negocios y procesos es compleja. También debe tomarse en cuenta cuando ya se dispone de aplicaciones que exponen funcionalidades a los procesos de negocios con interfaces de servicios bien definidas. 22 Entre los beneficios de este estilo arquitectónico tenemos: • Permite la descomposición de un escenario complejo de arquitectura en una secuencia de pasos incrementales. • Permite optimizaciones y refinamiento de las capas de forma natural al ser estas independientes y mantener la definición de las interfaces entre capas adyacentes. El mantenimiento de la arquitectura resulta menos complejo al no afectar “toda” la arquitectura. • Debido a que el despliegue se realiza por capas es fuertemente escalable. • Incrementa la flexibilidad al ser mantenible y escalable de manera independiente. • Propicia la reusabilidad. • Bajo acoplamiento entre capas. Entretanto no todos los problemas de arquitectura pueden representarse como una arquitectura en capas, lo que algunas veces convierte sistemas simples en sistemas no razonablemente complejos. De la misma forma en algunos casos definir las fronteras de funcionalidades entre una capa y la otra puede resultar difícil. 2.2.4 Arquitectura Basada en Componentes La arquitectura basada en componentes se centra en la descomposición en componentes funcionales o lógicos que exponen interfaces de comunicación bien definidas y que incluyen métodos, eventos y propiedades. Un ejemplo de una arquitectura basada en componentes se muestra en la figura 3. Los principios para el diseño de componentes incluyen los siguientes: • Reusabilidad: componentes o aplicaciones. • Reemplazables y extensibles: los componentes pueden ser sustituidos o actualizados para incluir nuevas funcionalidades. • Encapsulamiento: los componentes exponen interfaces que permite a otros componentes usar su f implementación. • Independencia: los componentes dependencia entre sí. El estilo basado en componentes es apropiado cuando se desea crear una arquitectura que permita rápi individuales. Figura 3. Arquitectura basada en componentes. Fuente. www.arevalomaria.wordpress.com Los principios para el diseño de componentes incluyen los siguientes: bilidad: los componentes son diseñados para ser reutiliz componentes o aplicaciones. Reemplazables y extensibles: los componentes pueden ser sustituidos o actualizados para incluir nuevas funcionalidades. Encapsulamiento: los componentes exponen interfaces que permite a otros componentes usar su funcionalidad sin revelar detalles internos de su implementación. Independencia: los componentes deben ser diseñados para dependencia entre sí. El estilo basado en componentes es apropiado cuando se desea crear una arquitectura que permita rápidamente actualizar y reemplazar componentes 23 . Los principios para el diseño de componentes incluyen los siguientes: los componentes son diseñados para ser reutilizados por otros Reemplazables y extensibles: los componentes pueden ser sustituidos o Encapsulamiento: los componentes exponen interfaces que permite a otros uncionalidad sin revelar detalles internos de su diseñados para tener mínima El estilo basado en componentes es apropiado cuando se desea crear una damente actualizar y reemplazar componentes 24 Entre los beneficios de esta arquitectura se encuentran: • Fácil despliegue, al ser los componentes fácilmente reemplazables sin afectar la arquitectura completa. • Fácil desarrollo, la especificación y diseño de las interfaces es realizada sin impactar la arquitectura. • La reusabilidad de los componentes al emplear componentes desarrollados por terceros permite reducir los costos de desarrollo y mantenimiento. 2.2 Arquitectura Orientada a Servicios (SOA, Service Oriented Architecture) El crecimiento de las organizaciones depende en gran medida en la capacidad de adaptación y flexibilidad ante los cambios en el actual mundo competitivo. Responder rápidamente y optimizar los procesos de negocios es factor fundamental para la consecución de los objetivos de la organización. La agilidad de respuesta ante situaciones de cambio puede verse limitada en entornos de Tecnologías de Información (TI) que no pueden responder de forma flexible. Disponibilizar las funcionalidades y recurso de TI de forma general a toda la organización facilita la optimización de los procesos y mejora la agilidad empresarial. La Arquitectura Orientada a Servicios (SOA, Service Oriented Architecture) busca la alineación de los elementos de TI con los objetivos del negocio por medio de la organización general de dichos elementos de manera que sean expuestos como una red de recursos integrados, simplificada y flexible. SOA es un enfoque de diseño de arquitectura cuyo objetivo es integrar las distintas funcionalidades del negocio y exponerlas en forma de servicios. Una arquitectura orientada a servicios busca optimizar los procesos de negocios mejorando el flujo de información y la toma de decisiones, beneficios que le otorgan agilidad y flexibilidad a la organización. IBM la define como: “Una arquitectura de aplicación en la cual todas las funciones se definen como servicios independientes con interfaces invocables bien definidas, que pueden ser llamadas en secuencias definidas para formar procesos de negocios”. (IBM, 2006) De igual forma Gartner define la arquitectura orientada a servicios como “ relación de servicios y consumidores de servicios, ambos suficientemente amplios para representar una función de ne En este sentido se puede definir SOA como un modelo de interacción entre tres partes principales, como se puede observar en la figura 4: • El proveedor de servicios, quien publica la descripción del servicio y provee su implementación. • El consumidor de servicios quien ubica el servicio por medio de un identificador (URI) o directamente en un repositorio de servicios. • Un componente de integración que proporciona y da mantenimiento al repositorio de servicios. Fuente. SOA define un estilo arquitectónico que describe un conjunto de guías y patrones para la creación de servicios alineados a los elementos de TI y negocios. Se vale de estándares de la ind heterogéneas que están soportados por plataformas y protocolos de comunicación igualmente heterogéneas con el fin de proveer una gran red de recursos integrados que pueda ser aprovechada por la o Gartner define la arquitectura orientada a servicios como “ relación de servicios y consumidores de servicios, ambos suficientemente amplios para representar una función de negocios completa”. (Gartner, 1996) En este sentido se puede definir SOA como un modelo de interacción entre tres partes principales, como se puede observar en la figura 4: proveedor de servicios, quien publica la descripción del servicio y provee plementación. El consumidor de servicios quien ubica el servicio por medio de un identificador (URI) o directamente en un repositorio de servicios. Un componente de integración que proporciona y da mantenimiento al repositorio de servicios. Figura 4. Modelo conceptual SOA Fuente. www.ibm.com/developerworks. Modificado SOA define un estilo arquitectónico que describe un conjunto de guías y patrones para la creación de servicios alineados a los elementos de TI y negocios. Se vale de estándares de la industria para lograr la integración de sistemas y aplicaciones heterogéneas que están soportados por plataformas y protocolos de comunicación igualmente heterogéneas con el fin de proveer una gran red de recursos integrados que pueda ser aprovechada por la organización. 25 Gartner define la arquitectura orientada a servicios como “una relación de servicios y consumidores de servicios, ambos suficientemente amplios (Gartner, 1996) En este sentido se puede definir SOA como un modelo de interacción entre tres proveedor de servicios, quien publica la descripción del servicio y provee El consumidor de servicios quien ubica el servicio por medio de un identificador (URI) o directamente en un repositorio de servicios. Un componente de integración que proporciona y da mantenimiento al SOA define un estilo arquitectónico que describe un conjunto de guías y patrones para la creación de servicios alineados a los elementos de TI y negocios. Se vale de ustria para lograr la integración de sistemas y aplicaciones heterogéneas que están soportados por plataformas y protocolos de comunicación igualmente heterogéneas con el fin de proveer una gran red de recursos integrados 26 2.2.1 Servicios en SOA Un servicio en SOA es una función empaquetada como un componente reutilizable que puede ser utilizado por un proceso de negocio. Se trata de un elemento de software “descubrible” con una descripción de servicio que debe ser expuesta indicando el detalle de la funcionalidad ofrecida y especificando el mecanismo de interacción con el mismo. Para IBM los servicios “son funciones accesibles a través de una red por medio de interfaces bien definidas en la capa de servicios”(IBM, 2009) Un servicio puede corresponder a un servicio de negocio cuando realiza una tarea que conlleva a la consecución de objetivos de los procesos de negocios. Se habla de servicios de aplicación cuando son servicios cuya lógica se orienta a dar soporte a los servicios de negocios y están acotados al contexto de la aplicación. En una arquitectura SOA los servicios son desarrollados de manera que sean independientes, autónomos, reusables y con capacidad para interconectarse adecuadamente con el fin de integrarse fácilmente en aplicaciones complejas cuando la dinámica operacional de la organización así lo requiera. Para Thomas Erl (2004) los servicios desarrollados bajo una arquitectura orientada a servicios deben satisfacer los siguientes principios: • Reusabilidad: los servicios deben ser diseñados y desarrollados pensando en la reutilización • Deben proporcionar un contrato formal: todo servicio debe proporcionar un contrato donde se especifique su especificación: nombre del servicio, mecanismo de acceso, operaciones que ofrece, forma de invocar las operaciones en términos de protocolos y direcciones, mensajes de entrada y salida y tipos de datos. • Bajo acoplamiento: Los servicios deben ser independientes entre ellos. • Composición: Los servicios deben ser desarrollados con miras a lograr su composición con otros, a fin de formar servicios de mayor nivel. • Autónomos: cada servicio debe tener su propio entorno de ejecución. • Sin estado: los servicios no deben almacenar ningún tipo de información, solo debe contener la lógica de su implementación. • Descubribles: los servicios deben permitir ser descubiertos a fin de evitar la creación de servicios con funcionalidades similares. La Orquestación y Coreografía de servicios son utilizadas para integración de servicios. La orquestación de servicios se basa en un modelo centralizado donde la comunicación entre servicios no se realiza directamente sino a través de una entidad encargada de la lógica de interacción. El lenguaje BPEL ( Language) permite definir la lógica de interacción entre servicios web, el motor de ejecución BPEL es el encargado de la orquestación. La coreografía de servicios se basa en un modelo distribuido donde la interacción entre servicios es realizada sin la intervención de una entidad rectora. Con la coreografía se establece la forma en que los participantes se comunican entre pares especificando los protocolos usados para el intercambio de mensajes. Dicha forma de interacción debe ser vi coreografía. Según IBM existen 3 orígenes principales para servicios en SOA, como se puede observar en la figura 5: Fuente. El enfoque recomendado es comenzar comparando lo que se necesita y lo que se tiene, se pueden crear servicios desde cero, comprarlos o adquirirlos de terceros o habilitar servicios presentes en el ambiente tecnológico que se dispone. A continuación se detallaran estos enfoques. Descubribles: los servicios deben permitir ser descubiertos a fin de evitar la creación de servicios con funcionalidades similares. La Orquestación y Coreografía de servicios son utilizadas para integración de servicios. La orquestación de servicios se basa en un modelo centralizado donde la comunicación entre servicios no se realiza directamente sino a través de una entidad encargada de la lógica de interacción. El lenguaje BPEL (Business Process Execution ) permite definir la lógica de interacción entre servicios web, el motor de ejecución BPEL es el encargado de la orquestación. La coreografía de servicios se basa en un modelo distribuido donde la interacción es realizada sin la intervención de una entidad rectora. Con la coreografía se establece la forma en que los participantes se comunican entre pares especificando los protocolos usados para el intercambio de mensajes. Dicha forma de interacción debe ser visible para todos los participantes que forman parte de la Según IBM existen 3 orígenes principales para servicios en SOA, como se puede observar en la figura 5: Figura 5. Tres orígenes de servicios Fuente. www.ibm.com/developerworks. Modificado El enfoque recomendado es comenzar comparando lo que se necesita y lo que se tiene, se pueden crear servicios desde cero, comprarlos o adquirirlos de terceros o habilitar servicios presentes en el ambiente tecnológico que se dispone. A detallaran estos enfoques. 27 Descubribles: los servicios deben permitir ser descubiertos a fin de evitar la La Orquestación y Coreografía de servicios son utilizadas para lograr la La orquestación de servicios se basa en un modelo centralizado donde la comunicación entre servicios no se realiza directamente sino a través de una entidad iness Process Execution ) permite definir la lógica de interacción entre servicios web, el motor de La coreografía de servicios se basa en un modelo distribuido donde la interacción es realizada sin la intervención de una entidad rectora. Con la coreografía se establece la forma en que los participantes se comunican entre pares especificando los protocolos usados para el intercambio de mensajes. Dicha forma de sible para todos los participantes que forman parte de la Según IBM existen 3 orígenes principales para servicios en SOA, como se puede El enfoque recomendado es comenzar comparando lo que se necesita y lo que se tiene, se pueden crear servicios desde cero, comprarlos o adquirirlos de terceros o habilitar servicios presentes en el ambiente tecnológico que se dispone. A 28 2.2.1.1 Habilitar Servicios de Activos Existentes SOA no se trata de quitar y reemplazar, la idea es identificar tareas de negocio significativas y de alto valor en los sistemas, aplicaciones y activos existentes de manera de aplicarles las técnicas y principios SOA para exponerlas como servicios. De esta manera se evita la inversión en nuevas tecnologías, se acelera significativamente la adopción SOA y reduce los riesgos del proyecto. Este enfoque generalmente cuenta con un mayor grado de profundidad en el conocimiento de la lógica del negocio, en relación a un enfoque de construcción de servicios desde cero. Por lo tanto es una buena opción cuando se desea aprovechar las funcionalidades existentes en los sistemas de TI con los que dispone la organización. En este sentido se definen dos patrones arquitectónicos para habilitar servicios de activos existentes: • Exponer directamente funciones de aplicaciones existentes como servicios. • Exponer indirectamente funciones como componentes de servicio. Exponer directamente funciones de aplicaciones existentes como servicios, se centra en la exposición de funcionalidades de aplicaciones existentes como servicios con la salvedad de que las funcionalidades no son mejoradas, sencillamente son expuestas usando tecnología de servicios, como se observa en la figura 6. Figura 6. Exponer directamente funciones de aplicaciones existentes como servicios Fuente. www.redbooks.ibm.com. Modificado 29 Se trata de un escenario sencillo que no requiere inversión en nueva tecnología ya que los servicios corren en la misma plataforma que soporta a la aplicación. Además los servicios desarrollados bajo este patrón no requieren un análisis extenso en la especificación de las interfaces debido a que el legado que lo soporta ya las ha definido, lo que reduce los tiempos de implementación del proyecto. Este patrón es útil cuando los servicios expuestos son accedidos por diversos sistemas y aplicaciones o diferentes canales de acceso. El segundo patrón para habilitar servicios tomando en cuenta los activos existentes se trata de exponer indirectamente funciones como componentes de servicio. Este patrón proporciona una capa de software intermedia entre la funcionalidad de la aplicación y el servicio, como se observa en la figura 7. En esta capa intermedia se definen componentes de software que proporcionan una capa de abstracción entre la implementación del servicio y la ejecución real del servicio. Figura 7. Exponer indirectamente funciones como servicios Fuente. www.redbooks.ibm.com. Modificado En este caso la especificación de las interfaces de los servicios no necesariamente debe ser la misma definida en las aplicaciones existentes. Además la definición de un componente de servicios permite encapsular el mecanismo de acceso a sistemas operativos diferentes. Al igual que el patrón anterior permite mantener alineadas de forma más estrecha las interfaces de servicios con el negocio. 30 Debido a que involucra el diseño de un componente intermedio, requiere un tiempo adicional y un diseño de mayor complejidad en relación al patrón de exposición directa 2.2.2.2 Consumir Servicios Provistos por Terceros Este enfoque el origen de los servicios es proveedores externos a la organización. En este caso una vez definido claramente los requisitos funcionales, las siguientes acciones a realizar será la de establecer los criterios para la selección de los proveedores adecuados, tomando en cuenta aspectos como la madurez del proveedor, aplicación de estándares en las implementaciones ofrecidas, entre otras. La aplicación de este enfoque puede observarse en la figura 8. Figura 8. Origen externo de los servicios consumidos Fuente. www.redbooks.ibm.com. Modificado Con este enfoque se evita el tiempo de desarrollo de los servicios y por lo tanto el ciclo de desarrollo SOA tiene a ser más reducido. 31 2.2.2.3 Creación de Servicios desde Cero En este caso se trata sencillamente de realizar la definición, diseño y desarrollo de los servicios desde cero. Por supuesto esta alternativa requiere un mayor tiempo para la implantación de un proyecto SOA, no obstante su gran ventaja radica en que el diseño de los servicios se basa con gran apego en los requerimientos futuros que tiene el negocio. Los servicios son diseñados enteramente como la organización lo desea. Es una alternativa que implica mayor costo en relación al enfoque de habilitar servicios a partir de activos existentes y que requiere con gran énfasis de una metodología que guie el ciclo de desarrollo, como por ejemplo SOMA. Los enfoques mencionados anteriormente no son excluyentes entre sí, la escogencia de uno u otro dependerá de las características particulares de cada empresa y el alcance del proyecto SOA a implementar, siendo la más común, la combinación de los enfoques de manera de obtener mayores beneficios y alinear los elementos de TI con los objetivos del negocio. 2.2.2 Arquitectura de referencia SOA En este apartado se va a presentar la arquitectura de referencia en la que se fundamenta una arquitectura orientada a servicios, la cual proporciona una abstracción de alto nivel segmentado en capas. (Ver figura 9). Detrás de esta arquitectura de capas lógicas se tiene un metamodelo que consiste en capas, bloques arquitectónicos de construcción, patrones de interacción, y decisiones arquitectónicas que servirán de guías al arquitecto para la creación de la arquitectura. 32 Figura 9. Capas de una arquitectura SOA Fuente. Ghosh S. (2008). Modificado La arquitectura de referencia SOA representa un bosquejo de la arquitectura a implementar en la organización y está basada en la especificación de los bloques de construcción SOA: servicios, componentes y flujos que combinados apoyan los procesos de negocio y los objetivos de la empresa. En esta arquitectura de capas lógicas, una capa no solo depende de la capa inferior sino que puede acceder directamente a capas inferiores dentro de las restricciones de la arquitectura SOA, por ejemplo un consumidor puede acceder a la capa de procesos de negocio o consumir directamente servicios de la capa de servicios, como se pudo observar en el apartado de orígenes de servicios. En esta arquitectura se asume lo siguiente: • Existen una serie de requisitos, llamados requisitos de servicio que en conjunto determinan los objetivos de la arquitectura SOA, y que están definidos en base a requisitos funcionales y no funcionales. • Un requisito de servicio es la capacidad de documentar lo que se desea que un servicio produzca. 33 • El cumplimiento de un requisito de servicio se puede lograr por medio de las capacidades de una sola capa o la combinación de varias capas de la arquitectura de referencia. • La identificación de las necesidades del servicio y la asignación de los requisitos para cada una de las capas de la pila de soluciones es un aspecto clave en el desarrollo de una arquitectura SOA para la empresa. A continuación se describirán cada una de las capas que conforman la arquitectura SOA. 2.2.2.1 Capa 1. Sistemas Operacionales Esta capa consiste de los activos e infraestructura tecnológica que forman parte del ambiente TI que soporta las actividades del negocio. Está conformada por los sistemas de software existentes en la empresa y que permitirán ser aprovechados en la implementación de la arquitectura SOA. En esta capa se encuentran: • Sistemas y aplicaciones legadas. • Aplicaciones monolíticas customizadas. • Sistemas de procesamiento de transacciones. • Bases de datos. • Aplicaciones y soluciones empaquetadas como CRM, ERP, SAP y soluciones Oracle entre otras. 2.2.2.2 Capa 2. Capa de Componentes de Servicios Esta capa contiene los componentes de servicios que proporcionan la implementación de los mismos. Se maneja tanto la calidad de los servicios como su funcionalidad. La capa de componentes de servicio se ajusta a los contratos de servicios definidos en la capa de servicio, lo que garantiza la alineación de la implementación con la descripción del servicio. Los componentes definidos en esta capa permiten lograr un bajo acoplamiento a través del ocultamiento de los detalles de implementación a los consumidores del servicio, como puede observarse en la figura 10, donde el servicio B confía en la descripción de servicios y el servicio A sirve de fachada a la implementación del servicio Fuente. 2.2.2.3 Capa 3. Capa de Servicios Esta capa está conformada por todos los servicios de negocios seleccionados para ser expuestos. Provee una especificación detall consumidores poder invocar la funcionalidad expuesta. Los servicios en esta capa pueden ser versiones de otros, además puede ser descubribles o ser estáticos y ser invocados o coreografiados para formar servicio compuestos. La capa específicos de unidades de negocio, y componentes específicos del proyecto que exteriorizan sus interfaces en forma de descripciones de servicios. De esta forma los componentes proporcionan servicios a través de sus interfaces. en forma aislada (atómica) o servicios compuestos. La capa de servicios en resumen contiene los contratos de servicio que unen al proveedor y consumidor de servicios. Los ser independientemente de la aplicación y el transporte, lo que permite a los servicios ser expuestos alrededor de múltiples canales de acceso. Los componentes definidos en esta capa permiten lograr un bajo acoplamiento a través del ocultamiento de los detalles de implementación a los consumidores del servicio, como puede observarse en la figura 10, donde el servicio B confía en la descripción de servicios y el servicio A sirve de fachada a la implementación del Figura 10. Componentes de Servicio Fuente. www.ibm.com/developerworks. Modificado Capa 3. Capa de Servicios Esta capa está conformada por todos los servicios de negocios seleccionados para ser expuestos. Provee una especificación detallada de cada servicio que permite a los consumidores poder invocar la funcionalidad expuesta. Los servicios en esta capa pueden ser versiones de otros, además puede ser descubribles o ser estáticos y ser invocados o coreografiados para formar servicio La capa también tiene componentes a escala empresarial, componentes específicos de unidades de negocio, y componentes específicos del proyecto que exteriorizan sus interfaces en forma de descripciones de servicios. De esta forma los es proporcionan servicios a través de sus interfaces. Los servicios existen en forma aislada (atómica) o servicios compuestos. La capa de servicios en resumen contiene los contratos de servicio que unen al proveedor y consumidor de servicios. Los servicios son accedidos independientemente de la aplicación y el transporte, lo que permite a los servicios ser expuestos alrededor de múltiples canales de acceso. 34 Los componentes definidos en esta capa permiten lograr un bajo acoplamiento a través del ocultamiento de los detalles de implementación a los consumidores del servicio, como puede observarse en la figura 10, donde el servicio B confía en la descripción de servicios y el servicio A sirve de fachada a la implementación del Esta capa está conformada por todos los servicios de negocios seleccionados para ada de cada servicio que permite a los Los servicios en esta capa pueden ser versiones de otros, además puede ser descubribles o ser estáticos y ser invocados o coreografiados para formar servicios también tiene componentes a escala empresarial, componentes específicos de unidades de negocio, y componentes específicos del proyecto que exteriorizan sus interfaces en forma de descripciones de servicios. De esta forma los Los servicios existen La capa de servicios en resumen contiene los contratos de servicio que unen al vicios son accedidos independientemente de la aplicación y el transporte, lo que permite a los servicios ser 35 2.2.2.4 Capa 4. Capa de Procesos de Negocios En esta capa se definen la composición y coreografía de servicios expuestos en la capa de servicios. Los servicios se combinan en flujos a través de la orquestación, composición y coreografía para formar aplicaciones de servicios. Los procesos de negocio contienen la lógica necesaria para determinar la secuencia de servicios que deben ser invocados y ejecutados (ver figura 11). Los servicios invocados pueden ser servicios simples o servicios compuestos. Figura 11. Orquestación de servicios Fuente. www.ibm.com/developerworks. Modificado Esta capa incluye la representación de los procesos de negocio y métodos de composición representados en una secuencia lógica la cual se encuentra alineada con los objetivos de negocio, además incluye el control del intercambio de información para permitir la interacción entre servicios y los procesos. En esta capa se agrega también el motor de ejecución de los procesos de negocio. El ciclo de vida para la orquestación y coreografía se gestiona igualmente en esta capa. 36 2.2.2.5 Capa 5. Capa de Consumidores o Presentación Esta capa representa las funcionalidades necesarias para la creación de la interfaz o front-end de los procesos de negocios, por medio del uso de tecnologías como portlets y widgets. La adopción de patrones y estándares front-end fomenta la creación de bloques de construcción que pueden ser reutilizados y por lo tanto disminuye el tiempo de desarrollo, complejidad y costos. 2.2.3 Ciclo de Vida de una Solución SOA El ciclo de vida del desarrollo de una solución SOA según IBM, está conformada por cuatro fases: Modelado, Ensamblado, Despliegue y Monitoreo, estas fases iterativas, están compuestas por actividades claramente definidas que deben cumplirse para alcanzar los objetivos del proyecto SOA. (Ver figura 12.) Figura 12. Ciclo de vida SOA Fuente. www.ibm.com 37 Aún cuando el detalle de las actividades a ejecutar en cada fase, dependerá de factores como la metodología adoptada para el desarrollo de la solución SOA, los patrones seleccionados para el origen y creación de servicios, tiempo de implementación y costos entre otros, se describirá en forma general las actividades que tienen a lugar en cada una de las fases del ciclo de vida SOA. 2.2.3.1 Fase de Modelado El propósito de esta fase es la obtención de los requerimientos de negocio y el diseño de los procesos de negocio que cumplirán con los objetivos de la empresa. En esta fase el objetivo principal es la optimización de los procesos de negocio combinando los activos nuevos y existentes que forman parte el ambiente de TI. Esta fase inicial es de suma importancia en el ciclo de vida de la implementación de una arquitectura SOA, debido a que esta fase determina (en un enfoque top-down) los requerimientos de componentes, servicios, infraestructura tecnológica y estándares que van a ser empleados durante la implementación de la arquitectura. Importante además, que la ejecución de esta fase permite el acercamiento entre el personal de TI y de procesos de la empresa, ya que intervienen roles como el del analista funcional de procesos y los analista de TI, quienes en forma colaborativa deberán guiar el diseño y modelado de los procesos de negocio. Entre las actividades o tareas presentes en esta fase se encuentran: • Obtención de requerimientos funcionales y no funcionales. • Diseño y modelado de los procesos de negocio, haciendo énfasis en la optimización. • Inventario de activos existentes de TI: aplicaciones y sistemas • Simulación de procesos. • Definir la metodología para la implementación de la arquitectura orientada a servicios. • Determinar los patrones de diseño y creación de los servicios. En esta fase juega un papel importante la adopción de mejores prácticas, patrones, estandarización de componentes de modelado, y la selección de las estrategias y artefactos adecuados para la obtención de los requerimientos. 38 2.2.3.2 Fase de Ensamblado La fase de ensamblado está dedicada a implementar las actividades del proceso de negocio, ya verificado en la etapa anterior, en su estado de Modelo de Documentación. Esta etapa está encargada de constituir el proceso de negocio a partir del diseño de los componentes que lo soportan, abarcando su implementación, por ejemplo en el Lenguaje de Ejecución de Procesos de Negocio (BPEL, por sus siglas en inglés). La implementación del proceso, los componentes y elementos indicados incluyen tareas de verificación de funcionalidad y pruebas. Los roles que intervienen en esta fase son la del arquitecto de software, desarrolladores de aplicación y desarrolladores de integración. Esta fase incluye la definición y especificación de los servicios. Se determina el portafolio de servicios que dará soporte a los procesos de negocios definidos en la fase anterior. El desarrollo de servicios permite al arquitecto de software modelar los datos, flujo funcional e interacción entre sistemas y procesos. Los desarrolladores de integración utilizan herramientas especializadas para la interacción entre los procesos de negocio y los servicios. Entre otras las actividades en esta fase son las siguientes: • Definición de portafolio de servicios a desarrollar. • Diseño y especificación de servicios: contratos y firmas de servicios. • Establecer los mecanismos de interacción entre servicios y sistemas existentes de la empresa. • Realizar pruebas de código. Para una solución end to end que implementa los procesos de negocio como una orquestación de servicios, este escenario puede ser interpretado como el diseño de servicios y el desarrollo, el ensamblado representa la coreografía de estos servicios en el contexto de los procesos de negocio. 39 2.2.3.3 Fase de Despliegue Durante esta fase las aplicaciones SOA son configuradas según las necesidades específicas del negocio y son desplegadas generalmente en el servidor de aplicaciones. Esta fase da soporte a los procesos de negocios y procesos con interacciones humanas dentro de la automatización del sistema. Los activos: componentes, servicios y procesos son desplegados en un ambiente integrado y seguro, aprovechando funcionalidades que soportan la integración con tareas que requieren la interacción de usuarios, procesos y flujo de información. Este nivel de integración asegura que todos los elementos esenciales de la empresa están conectados y trabajan juntos. 2.2.3.4 Fase de Monitoreo o Gestión El despliegue de los servicios necesita ser monitoreado y gestionado. Esta fase permite el monitoreo de los procesos de negocio, con el objeto de una mejora continua de cara a la optimización de los procesos desplegados. La fase de monitoreo involucra el mantenimiento y disponibilidad de los servicios, evaluación de los tiempos de respuesta, así como la gestión de todos los activos que forman parte de la infraestructura SOA. La visualización en tiempo real de la ejecución de los procesos permite obtener referencias estadísticas no solo de los aspectos técnicos de los procesos implementados, sino también los indicadores claves de performance que facilitan la toma de decisiones con miras a una mayor alineación de los procesos y los objetivos de la empresa. 2.2.4 Estándares SOA La arquitectura orientada a servicios se basa en estándares OASIS y W3C de la industria para la especificación de sus componentes y servicios, entre ellos enunciamos: 40 • Web Services Protocol Stack: Así se denomina al conjunto de servicios y protocolos de los servicios Web. • XML (Extensible Markup Language): Es el formato estándar para los datos que se vayan a intercambiar. • SOAP (Simple Object Access Protocol) o XML-RPC (XML Remote Procedure Call): Protocolos sobre los que se establece el intercambio. • WSDL (Web Services Description Language): Es el lenguaje de la interfaz pública para los servicios Web. Es una descripción basada en XML de los requisitos funcionales necesarios para establecer una comunicación con los servicios Web. • UDDI (Universal Description, Discovery and Integration): Protocolo para publicar la información de los servicios Web. Permite comprobar qué servicios web están disponibles. • WS-Security (Web Service Security): Protocolo de seguridad aceptado como estándar por OASIS (Organization for the Advancement of Structured Information Standards). Garantiza la autenticación de los actores y la confidencialidad de los mensajes enviados. 2.2.5 Facilitadores de una Arquitectura SOA Existen facilitadores que permiten desde el punto de vista tecnológico la implantación de una arquitectura orientada a servicios (SOA), según un estudio realizado por el Centro de Alto Rendimiento Accenture (2010) se pueden incluir ciertos facilitadores para apoyar el proceso de adopción de una arquitectura orientada a servicios. 2.2.5.1 Gestión de Procesos de Negocio (BPM - Business Process Management) Constituye el principal facilitador, que permite el diseño, especificación y modelado de los procesos de negocio. BPM es una disciplina de gestión que busca la optimización de los procesos y que junto con SOA pueden ser concebidas como disciplinas complementarias. 41 Permite la orquestación de los servicios en una capa de procesos de negocio. BPM combina una visión centrada en procesos y de integración de funcionalidades existentes, tomando en cuenta reglas de negocio, métricas, kpi y los elementos de TI que intervienen. Es fundamental su adopción cuando se desea implantar una arquitectura como SOA ya que permite una estrecha definición de los procesos y la definición de la arquitectura del sistema. 2.2.5.2 Tecnología de Servicios Web Este facilitador tecnológico permite encapsular los servicios en un estándar ampliamente aceptado por fabricantes y proveedores. Aun cuando SOA no implica el uso de servicios Web, estos son su implementación más habitual. Los servicios Web son aplicaciones que utilizan estándares para el transporte, codificación y protocolo de intercambio de información. Su adopción es ventajosa cuando se implanta una arquitectura basada en estándares como SOA. El conjunto de estándares de comunicación utilizados por servicios Web incluye, XML para la representación de datos, SOAP (Simple Object Access Protocol) para el intercambio de datos y el lenguaje WSDL (Web Services Description Language) para describir las funcionalidades de un servicio Web. Existen más especificaciones, a las que se denomina genéricamente como la arquitectura WS-*, que definen distintas funcionalidades para el descubrimiento de servicios Web, gestión de eventos, archivos adjuntos, seguridad, gestión y fiabilidad en el intercambio de mensajes y transacciones. 2.2.5.3 El Bus Empresarial de Servicios (ESB - Enterprise Service Bus) Es una infraestructura de conectividad flexible para integrar aplicaciones y servicios, diseñado para permitir el desarrollo de arquitecturas orientadas a servicios (SOA). 42 Un ESB entrega conectividad e integración de soluciones basada en estándares, que permite a los usuarios crear y desplegar interacciones rápidas y sencillas entre las aplicaciones y servicios, con una cantidad y una complejidad reducida de interfaces. El bus de servicios Facilita la conexión entre sistemas y servicios heterogéneos. Proporciona un elemento de integración que en una arquitectura SOA, permitirá exponer las funcionalidades en forma de servicios, encargándose de la comunicación entre pares, transformación de los formatos de mensajes, y aportando criterios de calidad de servicio como disponibilidad, garantía de entrega, encapsulación y seguridad. 2.2.5.4 Monitoreo de la Actividad de Negocio (BAM - Business Activity Monitoring) El monitoreo en tiempo real de la ejecución de los procesos, permite obtener métricas y estadísticas del rendimiento de los procesos a fin de optimizar su desempeño. Su aplicación dentro de la arquitectura puede ser prescindible y dependerá del alcance del proyecto SOA 2.2.5.5 Repositorio de Servicios Aunque la implementación de un repositorio de servicios no es imprescindible representa un gran activo en una arquitectura de servicios, ya que permite mantener un catalogo de servicios que puede ser compartido por los distintos departamentos de la empresa. Un repositorio de servicios permite mantener un inventario de las funcionalidades expuestas y que disminuye los tiempos de desarrollo al evitar crear servicios con funcionalidades similares. 43 2.2.6 Beneficios de una Arquitectura Orientada a Servicios Podemos dividir los beneficios de la arquitectura orientada a servicios en dos niveles distintos: el nivel del usuario funcional u organizacional y el nivel de la organización de TI, en base a esta división serán mencionadas los beneficios que aporta a la empresa la adopción de una arquitectura SOA A nivel del usuario funcional se tiene: Permite la documentación de los procesos de negocios que ejecuta la empresa. Es importante que los actores principales de los procesos conozcan la secuencia de actividades que se llevan a cabo para la consecución de los objetivos de la empresa, además de visualizar las responsabilidades inherentes a cada rol. Apoya la toma de decisiones. Al integrar el acceso a los servicios y la información del negocio en aplicaciones dinámicas compuestas (portal de servicios), los usuarios disponen de información oportuna y actualizada lo que permite mejorar la toma de decisiones. Obtener la información de forma rápida y exacta permite a la empresa reaccionar de forma más ágil ante situaciones de cambio. Mejora la productividad de los empleados. Al contar con un acceso oportuno a la información, los empleados pueden mejorar su desempeño y enfocarse en las actividades que representan valor para la empresa. Permite alinear y acercar las aéreas de negocio y tecnología. Permite que ambas aéreas puedan comunicarse por medio de un lenguaje común: el de procesos. El trabajo colaborativo entre las dos áreas es vital en una implantación SOA, la de negocio en la definición de los procesos según la estrategia y objetivos de la empresa y la de tecnología en la implementación de los procesos definidos haciendo uso de la infraestructura tecnología existente. Mejora la agilidad y flexibilidad de las organizaciones. La aplicación de estándares, que permiten la reutilización de componentes, el bajo acoplamiento de los mismos, aunado a un enfoque de desarrollo de componentes que piensa en la integración de servicios, permite que la organización pueda adaptarse rápidamente a los problemas y situaciones de cambio sin impactar totalmente las capacidades de sus sistemas de software. 44 Desde el punto de vista de TI, se puede mencionar: Aplicaciones más productivas y flexibles. El enfoque arquitectónico SOA permite aprovechar los sistemas y aplicaciones existentes en la empresa, potenciando sus funcionalidades por medio de la integración de las mismas. El utilizar servicios le aporta a la organización independencia de las plataformas y lenguajes de programación. Desarrollo de aplicaciones más rápido y económico. La reutilización y bajo acoplamiento de componentes y servicios que proporciona una arquitectura basada en estándares como SOA permite disponer de un repositorio de funcionalidades que puede ser compartido por toda la organización. Lo que redunda en menos tiempo de desarrollo de nuevas funcionalidades y por ende en el tiempo de desarrollo. Permite aislar los sistemas frente a cambios generados en otras áreas. La modularidad que proporciona la organización en términos de servicios disminuye notablemente el impacto de los cambios que sean requeridos. Aplicaciones más seguras y versionables. En SOA se accede a los servicios no a las aplicaciones, por lo tanto la generación de nuevas funcionalidades, esta soportada por una infraestructura común que permite desarrollar nuevos servicios seguros y gestionables. La arquitectura incluye mecanismo de autorización y autenticación robustos en los servicios, lo que provee un alto nivel de seguridad. 45 2.3 Gestión de Procesos de Negocio (BPM - Business Process Management) Un proceso de negocio puede definirse como un conjunto de tareas o actividades ejecutadas secuencialmente con el fin de satisfacer requerimientos del negocio. Los procesos de negocio no solo cumplen con la solución de problemas operacionales y funcionales, sino que su ejecución agrega valor al negocio. La Gestión de Procesos de Negocios es una disciplina que busca la automatización y optimización de los procesos de negocios, para lograrlo se vale de la identificación, diseño, ejecución, monitoreo, documentación y medición de los procesos de negocio que la organización implementa. Por otro lado Weske (2010) la define: “La gestión de procesos de negocio incluye conceptos, métodos y técnicas que apoyan el proceso de diseño, administración, configuración, promoción y análisis de los procesos de negocios”. La optimización de procesos toma en cuenta los procesos manuales y automatizados que se llevan a cabo. BPM no es una tecnología, más bien se trata de un enfoque que se apoya de herramientas de software y tecnológicas para permitir a la empresa contar con procesos claramente definidos y alineados con los elementos de TI y objetivos del negocio. Existen en el mercado numerosas herramientas de software y tecnologías que contribuyen a: • Modelar procesos • Simular procesos • Definir requerimientos • Creación de workflows de sistemas • Desarrollar aplicación de integración • Monitorear procesos • Identificar servicios de negocios reusables La finalidad de un BPM es descomponer la actividad global de una empresa u organización en un conjunto de ‘Procesos’, las cuales son entidades de funcionamiento relativamente independiente, aunque conectadas con las demás, que pueden ser analizadas con detalle y cuyas acciones repetitivas puedan ser 46 automatizadas, tanto en lo concerniente a los sistemas como a las personas que intervienen, para optimizar tiempos, oportunidades y costos, sin perder la capacidad de adaptación constante y rápida a los cambios y conservando la coexistencia de métodos seguros con la necesaria flexibilidad para facilitar la intervención activa y fundamental de las personas en los procesos. 2.3.1 Ciclo de vida BPM Hepp y Hinkelmann (2007) describen el ciclo de vida , soportado por los sistemas actuales de BPM, como se describe en la figura 13, para una empresa generalmente consta de cinco fases: análisis o diseño, modelado, ejecución, monitoreo y optimización. Figura 13. Ciclo de vida BPM Fuente. www.experiencias-ti.blogspot.com La fase de análisis o diseño comprende la definición de los requerimientos de negocios y análisis de los procesos actuales: manuales y automáticos. El rol involucrado en esta fase es el analista de negocios. La idea es esta fase es alinear los procesos de negocios con los objetivos de la organización. La simulación de procesos y el monitoreo de los procesos existentes apoya significativamente el análisis de los procesos, al proporcionar métricas e indicadores acerca del performance de los mismos. 47 En la fase de desarrollo se trata de especificar los procesos de negocio en detalle: se definen los recursos tecnológicos y humanos involucrados, secuencia de actividades, sistemas y aplicaciones involucradas, reglas de negocios que intervienen en la lógica de los procesos, además de métricas y kpi’s para el monitoreo del proceso. En esta fase se realiza el modelado del proceso generalmente apoyado en notación estándar como BPMN. El analista de TI y el analista de procesos colaboran en esta fase. La fase de ejecución permite el despliegue de los procesos de negocios. Habitualmente son desplegados en servidor de procesos que permite la ejecución de los procesos de negocio, implementados en un lenguaje de ejecución de procesos como BPEL. En él se ejecutan: • Aplicaciones compuestas (flujos BPM) • Workflows tradicionales • Orquestación de servicios Fases de monitoreo y optimización se encargan del análisis de las métricas e indicadores claves de performance de los procesos, las cuales son generadas por medio de eventos capturados durante la ejecución del proceso. El monitoreo del desempeño de los procesos de negocio y la captura y generación de estadísticas, datos y medidores claves de rendimiento permiten contar con información oportuna y confiable para la optimización de los procesos de negocios. Ambas fases son soportadas por el servidor de procesos. 2.3.2 BPMN- Business Process Management Notation BPM se basa en un estándar de notación para el modelado de los procesos de negocios denominado Business Process Management Notation (BPMN). El estándar BPMN permite definir los siguientes elementos de un proceso: • Actividades : representan funcionalidades del negocio • Tarea: Funcionalidad a más bajo nivel que puede ser representada en el diagrama 48 • Proceso: Conjunto de unidades funcionales que son realizadas en una secuencia. • Tarea Humana: Tarea que un sistema asigna a una persona (rol) para terminarla. • Flujos de Control: determinan el flujo del proceso. • Nodos de Control • Reglas de negocio: Define como las políticas del negocio o prácticas aplican en la actividad del negocio. • Objetos de negocio: representa el flujo de información que es transmitido a lo largo del proceso. Los beneficios que da BPM a una organización se mencionan a continuación. • Permite alinear los procesos, personas y tecnologías de información. Permite a la empresa conocer sus procesos de negocio. • Otorga control de los procesos, gracias al monitoreo en tiempo real. • Permite la reutilización de funcionalidades entre procesos. • Permite la documentación detallada de los procesos de negocios. • Automatización de procesos. • Evaluación de los procesos en términos de consecución de los objetivos de la organización. 2.4 SOA y BPM SOA y BPM son disciplinas complementarias cuyo objetivo es otorgar agilidad y flexibilidad a la empresa. Como se mencionó anteriormente BPM es un facilitador tecnológico de la arquitectura orientada a servicios y aun cuando BPM puede existir sin SOA, la implementación de BPM estará soportada en la arquitectura de la empresa y si esta se trata de una arquitectura orientada a servicios se consigue la agilidad deseada. Por otro lado una implementación de SOA con BPM le otorga una cara de negocio a la arquitectura. BPM permite identificar necesidades existentes en los procesos de negocio, estos requerimientos comunes permitirá diseñar los servicios SOA reutilizables que podrán 49 ser compartidos por distintos procesos. Desde el punto de vista del negocio SOA es un habilitador de la implantación de BPM. En síntesis, BPM ayuda a identificar los servicios y componentes SOA que deben componer la arquitectura y SOA permite que los sistemas que soportan la automatización de los procesos de negocio puedan reaccionar de forma más flexible y ágil al momento de producirse cambios en la empresa. 2.5 Metodología de Desarrollo de Soluciones Orientadas a Servicio SOMA (Service-Oriented Modeling And Architecture) SOMA, Service-Oriented Modeling And Architecture, es un método que sustenta el ciclo de desarrollo de software para el diseño y construcción de soluciones basadas en SOA. Se trata de un método de desarrollo de sofware end to end que define técnicas claves, tareas específicas, lineamientos y normas que sirven de guía para el análisis detallado, diseño, implementación, pruebas, despliegue de servicios, diseño de componentes, flujos y políticas necesarias para la construcción de una exitosa solución SOA. Es una metodología inventada y desarrollada por IBM. SOMA produce un modelo de servicios y otros productos claves que son esenciales para la entrega exitosa de una solución basada en SOA. El modelo de servicios es creado combinando varias técnicas complementarias que han probado ser ideales y acertadas para modelar arquitecturas orientadas a servicios. SOMA es adecuada para proyectos pequeños de organizaciones que están empezando a implementar soluciones SOA, donde es clave establecer mejores prácticas y entregar exitosamente proyectos para procesos específicos pequeños. SOMA es también adecuado para proyectos SOA complejos de gran tamaño basados en la transformación del negocio donde la reducción del riesgo y la aceleración del proyecto son factores críticos para el éxito. El ciclo de vida SOMA, está compuesto por varias fases, como se observa en la figura 14, que se mencionan a continuación. • Modelado de negocio y transformación. • Gestión de la solución • Identificación • Especificación • Realización • Implementación • Despliegue y monitoreo 2.5.1 Fase Modelado de La fase de modelado de negocio y transformación compr procesos de negocio que se ejecutan actualmente (AS análisis de los procesos actuales permitirá determinar si los mismos se encuentran alineados con los objetivos de negocio de la empresa. El resultado será un conjunto de requerimientos y funcionalidades que deberán ser reflejadas en el modelo futuro del proceso (To Be). La optimización de los procesos es el objetivo de esta fase. Es una fase que no es estrictamente requerida pero es altamente recomendada. tificación Especificación Implementación Despliegue y monitoreo Figura 14. Ciclo de vida SOMA Fuente. Ghosh S. (2008). Modificado Fase Modelado de Negocio y Transformación La fase de modelado de negocio y transformación comprende el análisis de los procesos de negocio que se ejecutan actualmente (AS-IS) en la organización. El análisis de los procesos actuales permitirá determinar si los mismos se encuentran alineados con los objetivos de negocio de la empresa. do será un conjunto de requerimientos y funcionalidades que deberán ser reflejadas en el modelo futuro del proceso (To Be). La optimización de los procesos es el objetivo de esta fase. Es una fase que no es estrictamente requerida pero es dada. 50 ende el análisis de los IS) en la organización. El análisis de los procesos actuales permitirá determinar si los mismos se encuentran do será un conjunto de requerimientos y funcionalidades que deberán ser reflejadas en el modelo futuro del proceso (To Be). La optimización de los procesos es el objetivo de esta fase. Es una fase que no es estrictamente requerida pero es 51 2.5.2 Fase de Gestión de la Solución Una solución SOA involucra la participación de varios tipos de solución que deben ser integradas para ofrecer una red compartida de recursos. La integración con los sistemas existentes de TI, sistemas legados y aplicaciones debe ser coordinada, SOMA está diseñado para apoyar la naturaleza híbrida de soluciones SOA y prescribe actividades específicas y orientación para dar cumplimiento a lo anterior. El método permite la definición de tareas, work products, roles y lineamientos específicos para cada tipo de solución, y es externalizado como una plantilla de solución. 2.5.3 Fase de Identificación Esta fase involucra la identificación de los tres principales elementos de construcción de una arquitectura SOA: servicios, componentes y flujos. El objetivo en esta fase es la identificación de un conjunto de servicios candidatos y crear un portafolio de servicios alineados al negocio y sistemas TI, que colectivamente apoyen los procesos de negocio y los objetivos de la organización. Los servicios son inicialmente designados como candidatos porque no todas las funcionalidades de los procesos serán ser expuestas como servicios. Esta fase se apoya en diversas técnicas para la identificación de los servicios como por ejemplo: Goal-Service Modeling (GSM), utiliza un enfoque basado en los objetivos del negocio, metas y estrategias corporativas para la identificación de servicios. Combina un análisis top down y bottom up. Descomposición de Dominio se basa en una análisis top down enfocado en el modelado de procesos de negocio, reglas de negocio y flujo de información. Análisis de Activos, análisis bottom up que tiene como base los recursos de TI que conforman el ambiente tecnológico de la empresa para la identificación de las funcionalidades que pueden ser expuestas aprovechando estos recursos. 52 2.5.4 Fase de Especificación En esta fase la arquitectura es diseñada. Involucra el diseño detallado de los servicios y componentes el cual es completado en esta fase. En esta fase se define un modelo de servicios que contiene la dependencia entre servicios, flujos y mensajes, composición, eventos, reglas de negocio, operaciones y requisitos no funcionales. Las actividades en esta fase involucran el análisis de las interfaces del sistema y los parámetros de entrada y salida de los actuales sistemas con el objeto de realizar un mapeo de los servicios y las aplicaciones. El aprovechamiento de de los activos existentes a través de la refactorización y el mapeo de los servicios es un aspecto clave de la orientación al servicio. 2.5.5 Fase de Realización En esta fase se evalúan las decisiones técnicas asumidas a través del diseño y elaboración de prototipos, pruebas de conceptos o pilotos. La exploración de la viabilidad técnica realizada en esta fase es una forma de evaluar y planificar la implementación de las soluciones tecnológicas especificadas con el fin de identificar riesgos operativos y de desarrollo de la solución SOA. En la exploración de la factibilidad técnica, la intención es mitigar los factores de riesgo y los desafíos técnicos se centran en los requisitos no funcionales. 2.5.6 Fase de Implementación En esta fase se construyen y ensamblan los componentes, servicios y flujos que conforman la solución arquitectónica. Involucra la aplicación de pruebas unitarias, pruebas técnicas de integración y rendimiento con sistemas legados y aplicaciones y pruebas funcionales. 53 2.5.7 Fase de Despliegue y Monitoreo Esta fase se concentra en la realización de pruebas de aceptación por parte del usuario y el despliegue de los servicios en el ambiente de producción. Además SOMA proporciona en esta fase el monitoreo y control del performance de los procesos de negocio en tiempo de ejecución. 54 CAPÍTULO 3. Marco Aplicativo En vista del problema expuesto en el capítulo 1 se plantea una solución que busque la optimización de los procesos de la empresa, en particular del proceso de orden de compras, a través del uso de nuevos modelos arquitectónicos que permitan, en definitiva, alinear las necesidades del negocio y las capacidades de los sistemas de información, de modo que éstos sean flexibles y adaptables y puedan responder con rapidez a las necesidades que el negocio pueda requerir. Con la aplicación de una solución SOA-BPM, se pretende que el proceso de orden de compras, se convierta en un proceso de negocio flexible, adaptable y óptimo. En este sentido para ilustrar el contexto en el que fue realizada la implementación, se especifica a continuación el escenario de la solución implantada, la cual soporta los siguientes requerimientos funcionales: • Automatización de Procesos de Negocio. • Modelado de Procesos (TO-BE). • Invocar rutinas del Sistema Legado • Portal que exponga los procesos de negocio a través de portlets. • Portal que habilita las capacidades iniciales para emprender un proyecto de Portal Corporativo para el manejo de información y documentos • Despliegue de la solución en la intranet de la empresa. Para el desarrollo de la solución se utilizará la metodología SOMA. SOMA acelera el análisis y modelado necesario para realizar las iniciativas SOA, produce un Modelo de Servicios y otros productos claves que son esenciales para el éxito de una solución basada en SOA (IBM, 2009). Como se explicó en la sección 2.5 la metodología SOMA define un conjunto de fases que describen las tareas, entradas y salidas, productos de trabajo y técnicas que proporcionan una guía para la identificación, diseño y despliegue de servicios, componentes y flujos que conformarán la solución SOA. SOMA es una metodología iterativa e incremental, por lo que los componentes de salida de una fase, son los insumos de la siguiente fase. No obstante durante el 55 desarrollo de la solución fue necesario regresar a fases previas para la refinación de los mismos. A continuación se describirán cada una de las fases aplicadas para el desarrollo de la solución SOA-BPM para el proceso de orden de compras. Los artefactos, productos de trabajo, tareas y técnicas utilizadas en cada una de las fases durante el ciclo de vida del desarrollo de la solución serán igualmente identificados y expuestos. Factores como el tiempo de desarrollo, adquisición de conocimiento, complejidad del proceso y las necesidades de la organización, determinaron las fases aplicadas de la metodología para nuestro caso, las cuales se listan a continuación: 3.1 Fase de modelado de negocio y transformación En esta fase el objetivo fue el análisis y la comprensión del proceso de negocio de orden de compras en la forma como se ejecutaba en ese momento lo que representaba el modelo As-Is del proceso. Una vez obtenido este modelo, las actividades se orientaron a la generación del modelo To-Be a implementar del proceso de negocio, lo que constituye el entregable o artefacto principal de salida de esta fase. Durante esta fase se realizaron reuniones con los usuarios funcionales en donde se determinaron los siguientes aspectos: • Alcance del proceso a implementar: el ámbito del proceso abarca la creación de la orden de compra, su posterior análisis y toma de decisión a cerca de su aprobación o rechazo y finaliza una vez dicha orden es registrada en el sistema legado para su persistencia. • Roles: los roles involucrados en el proceso serían el Generador de orden de compras y el Analista de orden de compras, quienes serían los encargados de generar y tomar la decisión de aprobación o rechazo de la orden respectivamente. • Especificación inicial de los requerimientos funcionales: durante las reuniones de trabajo con el usuario funcional se determinaron requerimientos específicos como: o Las notificaciones informativas a cada uno de los roles, se realizaría por medio del envío de correo electrónico. 56 o Reglas de negocio para la generación de la orden de compra. o Escenarios de interacción con el sistema legado. o Estados posibles de una orden de compra: aprobada, rechazada, reabierta, abierta, anulada y confirmada. 3.1.1 Modelado del proceso de orden de compras Como se mencionó anteriormente el producto de esta fase es el modelado To-Be del proceso de orden de compras, el cual fue generado siguiendo una perspectiva orientada a servicios y que representa el flujo del proceso según los requerimientos del negocio. El modelo del proceso de orden de compras en notación BPMN y según el alcance de la solución se muestra a continuación en la figura 15. Figura 15. Modelo del Proceso de orden de compra en notación BPMN A continuación en la figura 16 se muestra el modelo del proceso implementado en la herramienta Websphere Business Modeler. Luego en las figuras 17 y 18 se observa con mayor detalle el modelo del proceso según los roles del mismo. 57 Figura 16. Modelo del Proceso de orden de compra en Websphere Business Modeler 58 Figura 17. Modelo del Proceso para el rol de Generador de Orden Figura 18. Modelo del Proceso para el rol de Analista de Orden Figura 18. Modelo del Proceso para el rol de Analista de Orden 59 60 En la tabla 2 a continuación se describe en forma general el proceso de orden de compras. Nombre Sub- Proceso orden De compra Descripción La orden de compra es una autorización al proveedor para entregar los artículos y presentar un Documento de Recepción (factura, nota de entrega y entre otros). La solicitud también especifica los términos de pago y de entrega. Todos los artículos comprados por una compañía deben acompañarse de las Órdenes de compra, que se enumeran en serie con el fin de suministrar control sobre su uso. Inicio El usuario con el Perfil de Generador inicia la Tarea de Registro de la orden de compra Finaliza El usuario con el Perfil de Analista finaliza la Tarea de Análisis de la orden de compra (Aprueba, Rechaza o por modificar). Entradas orden de compra en el caso de que se desea revertir la misma. Salidas Notificación vía correo electrónico al usuario con el Perfil de Generador de una orden de compra Aprobada, Rechazada o por Modificar. Consumidor de este proceso Aplicación Portal Expectativas del cliente de este Sub- proceso Las expectativas del cliente es acceder desde un portal de servicios y se le permita realizar las siguientes funcionalidades: 1. Visualizar desde el Sistema la lista de los artículos a agregar a la orden. 2. Registrar la orden de compra, seleccionando el Proveedor. 3. Solicitar aprobación de la orden de compra (Cambia el estado de la orden de compra a “Por Aprobar”) y envía notificación sobre orden de compra “Por Aprobar” 4. Analizar la orden de compras. 5. Solicitar modificaciones sobre la orden de compra (Cambio de Estado “ReAbierta”) y enviar notificación sobre modificaciones a ser realizadas 6. Rechazar orden de compra (Cambia el estado de los artículos de la orden a “Aprobada” y de la orden de compra a “Rechazada”) y enviar notificación sobre Rechazo de la orden de compra 7. Aprobar orden de compra (Cambia el estado de los artículos de la orden a “Procesado” y de la orden de compra “Aprobado”) y enviar notificación sobre orden de compra “Aprobada” al requirente y al analista de compras 8. Actualizar en el sistema Legado cada una de las funcionalidades. Tabla 2. Descripción del Proceso de orden de compras. 61 La herramienta de modelado de Procesos de Negocio utilizada fue WebSphere Business Modeler. Modeler, es una herramienta que permite modelar, diseñar, simular, analizar y generar reportes para los procesos de negocio además de integrar nuevos procesos y/o revisar los existentes; también permite la definición de la organización, recursos y elementos de negocio. El modelado es la primera actividad del ciclo de vida de optimización e innovación del negocio y además tiene su propio ciclo interactivo, adicional al generado por la realimentación propia de la actividad de gerencia y optimización en el BPM. El ciclo del modelado incluye la documentación, diseño del proceso y análisis con el fin de optimizarlo, disminuyendo riesgos e incrementando la flexibilidad. El modelado del Proceso de negocio es la actividad clave que ayuda a documentar lo que le interesa al negocio, respecto a sus procesos, políticas claves de desempeño, así como eventos de negocio con sus correspondientes acciones. Con la herramienta se generó el BPEL del proceso que posteriormente es importado al servidor de procesos y que permite la ejecución del proceso. Cada una de las tareas representadas en el BPEL del proceso, representa una actividad que es interpretada por el servidor de procesos, en este caso Websphere Process Server, en este aspecto radica la importancia del modelado del proceso ya que en tiempo de ejecución es el motor de procesos de Process Server quien interpretará el BPEL generado y permitirá la orquestación del proceso. Las actividades representadas como tareas humanas, constituyen la interfaz de usuario o front end que en este caso estará representada como portlet´s que serán ejecutados en un servidor de portlet´s o Portal de Negocios. Aquellas tareas de sistema que no son representadas como tareas humanas, son tareas de negocios repetitivas ejecutadas por el sistema y que constituyen invocaciones a servicios, que son expuestos por el sistema legado y consumidos a través de los componentes de servicio. En esta fase, la identificación de estas funcionalidades de negocio repetitivas y comunes permitió definir los candidatos a servicios dentro de la arquitectura. Junto con el flujo del proceso representado en el modelo, se especificaron además los siguientes aspectos técnicos y funcionales: • Especificación de la asignación de roles en función de las tareas del proceso. 62 • Identificación y especificación inicial de los datos que son intercambiados a los largo del flujo de información del proceso, los cuales son representados como objetos de negocios. • Entradas y salidas de cada una de las tareas y del proceso. • Declaración formal (código) de los condicionales que forman parte del modelo. • Documentación funcional de las tareas. Si bien la figura 15 nos muestra el resultado final del modelado del proceso de orden de compras, este fue el producto de sucesivas iteraciones y refinamiento a lo largo del ciclo de desarrollo del proceso. Al instanciar la metodología SOMA para el desarrollo del proceso de orden de compras, actividades de la fase de Gestión de la Solución no fueron requeridas y las actividades de planificación de entregables y productos de trabajo fueron aplicadas dentro de la fase de Identificación, la cual se describe a continuación: 3.2 Fase de Identificación Los objetivos planteados en esta fase fue la identificación de los servicios, componentes y flujos del proceso de orden de compra. En el contexto de la metodología la técnica empleada para la obtención de los aspectos anteriormente citados fue la de Descomposición de Dominio por medio de la elaboración de Casos de Uso. Los productos entregables en esta fase fueron los casos de uso y el portafolio de servicios. Debido a que la solución propuesta incluye el componente de Gestión de Procesos de Negocio (BPM), la técnica de Descomposición de Dominio es la adecuada por su enfoque Top-Down que permitió definir los servicios, componentes y flujos a partir de los procesos de negocio. Para la identificación y especificación de los requerimientos funcionales del sistema a desarrollar, se realizaron reuniones con el cliente a fin de elaborar los casos de uso. Los casos de uso definidos para el proceso de orden de compras, describen la secuencia normal de los procesos de negocios, secuencias alternativas, reglas de negocio, precondiciones y poscondiciones, además reflejan la interacción del sistema 63 con el sistema legado. Esta actividad corresponde a las actividades 4, 5 y 6 de la fase de identificación descritas en la figura 14. 3.2.1 Casos de Uso y Requerimientos Funcionales Los distintos términos a los cuales se harán referencia en los casos de uso se describen en la tabla 3 a continuación: Identificador / Abreviatura Descripción CU Abreviatura de Caso de Uso GG Abreviatura de Grano Grueso, término para identificar que un caso de uso A, depende de otros casos de usos como B, C y D sean ejecutados para lograr el objetivo principal. GF Abreviatura de Grano Fino, término para identificar un caso de uso que es totalmente independiente y que no posee dependencia de otros casos de usos. COMPRAS Es el identificador de un macro proceso dentro de la solución SOA/BPM. ODC Abreviatura del subproceso de compras llamado orden De compra. Tabla 3. Descripción de identificadores / abreviaturas. A continuación serán descritos cada uno de los casos de uso elaborados para la captura de los requerimientos funcionales y no funcionales del proceso. En este sentido la tabla 4 describe el caso de uso relacionado al registro de una orden de compra: ID CU_GG_COMPRAS_ODC_02 Nombre Caso de Uso CU_RegistrarODC Proceso compras 64 Subproceso orden de compras Creado por: Jonatán Sánchez Modificado por: Jonatán Sánchez Fecha de Creación 09.12.2010 Fecha Modificación 24.03.11 Actividad 1. Registrar orden de compras Actores: Generador de orden de compras Descripción: Registrar la orden de compra con los artículos seleccionados del Repositorio de Artículos. Evento iniciador: 1. Invocar el método registrarODC Precondiciones: 1. Los consumidores deben estar correctamente acoplados con el servicio y debe ser una transacción de un consumidor seguro o válido. 2. Debe poseer toda la información necesaria para la elaboración de la orden de compras, entre otros tenemos: 2.1 Análisis de la Lista de Precios. 2.2 Repositorio de Artículos 2.3 Cotizaciones 2.4 Proveedor Postcondiciones: 1. orden de compra registrada. Se graba la orden de compras con estado “Abierta”. 2. Generar la orden de compra (Opcional) 3. Modificar (Opcional) Secuencia Normal: 1. El actor ingresa a la opción de “Registrar usando artículos del Repositorio de Artículos”. 2. El sistema despliega el filtro de tipos de orden de compra. 3. El actor selecciona el tipo de orden de compra que desea registrar. 4. De acuerdo al tipo de orden de compra, el sistema despliega los campos necesarios para la selección e ingreso de la información del encabezado, se invoca caso de uso <CU_GF_COMPRAS_ODC_12> <CU_Desplegar_Encabezado_Tipo_ODC > 5. El actor ingresa y/o selecciona la información en los campos obligatorios comunes para cualquier tipo de orden de compra en el encabezado. 6. El actor selecciona los campos que apliquen para el tipo de orden, éstos pueden ser los siguientes: Condiciones de Venta, IVA, Vías de embarque y/o Condiciones de Pago. 7. El sistema valida que los datos obligatorios mínimos hayan sido ingresados y/o seleccionados en el encabezado. 8. El sistema habilita la opción de “Continuar”. 9. El actor selecciona la opción de continuar para ingresar el Detalle. 10. El sistema habilita la opción de “Agregar artículos del Repositorio de Artículos” y 65 “Agregar Servicio”. 11. El actor selecciona la opción “Agregar artículos del Repositorio de Artículos” (esta funcionalidad podrá ser invocada tantas veces como lo desee el actor). 12. El sistema despliega los filtros de búsqueda y provee la funcionalidad para la selección por parte del actor, se invoca el caso de uso <CU_GF_COMPRAS_ODC_08> <CU_Seleccionar_Articulo>. 13. El sistema despliega la lista de ítems seleccionados y el detalle de cada uno de ellos: Código de artículo, descripción, tipo de artículo, unidad de medida. En el caso de artículos no estándar se agregan los campos espesor, ancho y largo. 14. El sistema habilita las opciones: “Agregar Comentario” y “Borrar ítem del detalle”. 15. La secuencia anterior (pasos 11 al 13) se repite tantas veces lo desee el actor hasta que decida finalizar la secuencia de agregar artículos. 16. El actor ingresa los datos del detalle para cada ítem de la ODC. 17. El sistema agrupa la información de los artículos iguales en un solo ítem y habilita los campos de ingreso: Cantidad y Precio Unitario para cada uno de los ítems del detalle. 18. El sistema valida, que según corresponda al tipo de cada ítem (artículo, servicio o comentario), hayan sido ingresados los datos obligatorios mínimos en el detalle. 19. El sistema valida que según corresponda al tipo de cada ítem (artículo, servicio o comentario), los datos ingresados sean correctos (Ej. El campo precio unitario debe ser numérico). 20. El sistema habilita la opción de “Registrar orden de compra”. 21. El actor selecciona la opción de “Registrar orden de compra”. 22. El sistema despliega un mensaje de confirmación indicándole al actor “¿Está seguro de registrar la orden de compra?”. 23. El actor selecciona la opción aceptar. 24. El sistema envía al Legado la información de la orden de compra. 25. El Legado Registra la orden de compra y retorna un mensaje de respuesta confirmando la operación y el número correlativo de la orden de compra que fue generado. 26. El sistema despliega un mensaje de confirmación de registro de la orden de compra indicando el número que corresponde a la orden registrada. 27. El sistema habilita la opción “Generar orden de compra”. 28. Finalizar el Caso de Uso. Secuencia Alternativa: Secuencia Alternativa 1: No están los datos mínimos obligatorios ingresados en el encabezado. La secuencia alternativa inicia en el paso 7 de la secuencia normal, cuando se establece que el actor no ingresó todos los datos mínimos obligatorios. 1. El sistema despliega un mensaje con la condición del error generado, indicando el 66 nombre del campo declarado obligatorio y ubicando el cursor en éste. 2. La secuencia alternativa termina y retorna al paso 5 de la secuencia normal. Secuencia Alternativa 2: No están los datos mínimos obligatorios ingresados del detalle de los artículos. La secuencia alternativa inicia en el paso 18 de la secuencia normal, cuando se establece que el actor no ingresó todos los datos mínimos obligatorios. 1. El sistema despliega un mensaje con la condición del error generado, indicando el nombre del campo declarado obligatorio y ubicando el cursor en éste 2. La secuencia alternativa termina y retorna al paso 16 de la secuencia normal. Secuencia Alternativa 3: Los datos ingresados de la sección del detalle no son válidos La secuencia alternativa inicia en el paso 19 de la secuencia normal, cuando se establece que los campos ingresados no son validos. 1. El sistema despliega un mensaje con la condición del error generado, indicando el nombre del campo declarado como inválido y ubicando el cursor en éste. 2. La secuencia alternativa termina y retorna al paso 16 de la secuencia normal. Secuencia Alternativa 4: Cancelar La secuencia alternativa inicia cuando el actor invoca la opción cancelar la actividad. 1. El sistema confirma si el actor realmente desea cancelar la actividad. 2. La secuencia alternativa termina y finaliza el caso de uso o al paso previo donde fue seleccionada la opción. Secuencia Alternativa 5: Generar orden de compra La secuencia alternativa inicia en el paso 27 una vez ha sido habilitada la opción de Generar orden de compra. 1. El actor selecciona la opción “Generar orden de compra”. 2. Se invoca el caso de uso <CU_GG_COMPRAS_ODC_03> <CU_Generar_ODC >. 3. La secuencia alternativa termina y retorna al paso 28 de la secuencia normal. Secuencia Alternativa 6: Cancelar Registro de orden de compra La secuencia alternativa inicia en el paso 23 cuando el actor decide no Registrar la orden de compra. 1. El actor selecciona la opción Cancelar. 2. La secuencia alternativa termina y retorna al paso 28 de la secuencia normal. 67 Secuencia Alternativa 7: Agregar Comentarios y/o Servicios a una orden de compra La secuencia alternativa inicia en los pasos 10 y 14 una vez han sido habilitada las opciones “Agregar Comentario” o “Agregar Servicio”. 1. El usuario selecciona cualquiera de las opciones “Agregar Comentario” o “Agregar Servicio” (esta funcionalidad podrá ser invocada tantas veces como lo desee el actor.) 2. El sistema de acuerdo al tipo de detalle (servicio o comentario), acondiciona los campos que el actor debe ingresar y lo agrega la lista de ítems de la orden de compra. 3. La secuencia alternativa termina y retorna al paso 15 de la secuencia normal. Secuencia Alternativa 8: El Legado no pudo Registrar la orden de compra. La secuencia alternativa inicia en el paso 25 cuando el Legado no logra Registrar la orden de compra. 1. El sistema genera un mensaje de error, indicando que “No fue posible Registrar la orden de compra”. 2. La secuencia alterna termina y retorna al paso 28. Secuencia Alternativa 9: No se pudo establecer comunicación con el Legado. La secuencia alternativa inicia para todos aquellos pasos en la secuencia normal que no pueda lograr comunicación con el Legado. 1. El sistema genera un mensaje de error, indicándole al actor que “No se puede establecer comunicación con el sistema Legado”. 2. La secuencia alterna termina y finaliza el caso de uso. Secuencia Alternativa 10: El actor cuenta con los privilegios para registrar Órdenes para más de una compañía. La secuencia alternativa inicia cuando comienza el caso de uso y se determina que el actor puede crear Órdenes para más de una compañía. 1. El sistema consulta al Legado y despliega un filtro de opciones de Compañías, de acuerdo a los privilegios del actor que desea registrar la orden de compra, para facilitar su selección. 2. El actor selecciona la compañía. 3. La secuencia alterna termina y retorna al paso 2 de la secuencia normal. Secuencia Alternativa 11: Borrar un Ítem del detalle 68 La secuencia alternativa inicia en el paso 14, sí y sólo sí el sistema habilita la opción de Borrar Ítem del detalle cuando existe al menos un ítem en el mismo. 1. El actor selecciona la opción de Borrar Ítem. 2. El sistema despliega un mensaje de confirmación indicando al actor “¿Está seguro de borrar el ítem del detalle de la orden de compra?”. 3. El actor selecciona la opción de Aceptar. 4. El sistema borra desde el detalle el ítem indicado por el actor. 5. La secuencia alternativa termina y retorna al paso 15 de la secuencia normal. Secuencia Alternativa 12: Existen artículos no estándar iguales. La secuencia alternativa inicia en el paso 17 cuando se valida que existen 2 o mas artículos no estándar con espesor, ancho o largo iguales. 1. El sistema despliega un mensaje indicando que no es posible agregar artículos no estándar iguales y que debe modificar los campos: espesor, ancho o largo o eliminar alguno de ellos. 2. La secuencia alternativa termina y retorna al paso 16 de la secuencia normal. Secuencia Alternativa 13: Existen artículos estándar iguales. La secuencia alternativa inicia en el paso 17 cuando se valida que existen 2 o mas artículos estándar con código iguales. 1. El sistema despliega un mensaje indicando los artículos que ya se encuentran en la lista de ítems de la orden de compra y que por lo tanto no serán agregados. 2. La secuencia alternativa termina y retorna al paso 16 de la secuencia normal. Secuencia Alternativa 14: Sustituir la lista de artículos seleccionados de la orden de compra. La secuencia alternativa inicia en el paso 13, cuando se indica que la lista de artículos seleccionados debe sustituir la lista actual de artículos. 1. El sistema borra todos los ítems de la orden de compra y despliega la lista de ítems seleccionados y el detalle de cada uno de ellos Código de artículo, descripción, tipo de artículo, unidad de medida y estado. 2. La secuencia Alternativa termina y retorna al paso 14 de la secuencia normal. Secuencia Alternativa 15: Modificar orden de compra. La secuencia alternativa se inicia cuando el actor desea modificar una orden de compra, en este caso se cumplen los pasos del 5 al 19 de la secuencia normal, y luego se ejecuta la 69 siguiente secuencia: 1. El sistema habilita la opción de “Modificar orden de compra”. 2. El actor selecciona la opción de “Modificar orden de compra”. 3. El sistema despliega un mensaje de confirmación indicándole al actor “¿Está seguro de modificar la orden de compra?”. 4. El actor selecciona la opción aceptar. 5. El sistema envía al Legado la información de la orden de compra. 6. El Legado actualiza la orden de compra y retorna un mensaje de respuesta confirmando la operación. 7. El sistema despliega un mensaje de confirmación de modificación de la orden de compra. 8. La secuencia alternativa termina y retorna al paso 27 de la secuencia normal. Includes: <CU_GG_COMPRAS_ODC_03> <CU_Generar_ODC> < CU_GF_COMPRAS_ODC_08> < CU_Seleccionar_Articulo > <CU_GF_COMPRAS_ODC_12> <CU_Desplegar_Encabezado_Tipo_ODC > Prioridad: Alta Frecuencia de uso: Alta Comentarios: Los productos a solicitar deben estar registrados en el Repositorio de artículos. NOTAS: 1. Las órdenes de compra deberán incluir las normas COVENIN y ASTM a las que están sujetos los materiales solicitados. Esta información proviene del Repositorio de artículos. 2. Para proveedores externos se emite un contrato, el cual es identificado a través de un número. Este número debe estar registrado en el sistema. 3. Para cada uno de los ítems de la orden de compra el sistema debe proveer la funcionalidad que permita eliminarlos de la lista antes de ser registrada la orden de compra. Tabla 4. Caso de Uso: Registrar orden de compra. A continuación en la tabla 5 se describe el caso de uso para generar una orden de compra: ID CU_GG_COMPRAS_ODC_03 70 Nombre Caso de Uso CU_Generar_ODC Proceso compras Subproceso orden de compras Creado por: Jonatán Sánchez Modificado por: Jonatán Sánchez Fecha de Creación 09.12.2010 Fecha Modificación 25.03.11 Actividad 1. Generar orden de compras Actores: Generador de orden de compras Descripción: Generar la orden de compra. Evento iniciador: 1. Invocar el método generarODC Precondiciones: 1. Los consumidores deben estar correctamente acoplados con el servicio y debe ser una transacción de un consumidor seguro o válido. 2. Deben existir todos los componentes obligatorios de la orden de compra, es decir, el encabezado, y al menos un artículo. Postcondiciones: 1. Generar la orden de compra con todos los artículos a requerir. Se cambia el estado de la orden de compra “Por Aprobar” 2. Notificar Evento. Secuencia Normal: 1. El actor selecciona la opción Generar orden de compra. 2. El sistema despliega un mensaje al actor preguntando si desea Generar la orden de compra. 3. El actor confirma que desea Generar la orden de compra. 4. El sistema le envía al Legado el número de la orden de compra y le solicita al Legado que modifique el estado de los artículos a “Por Aprobar” <CU_GF_COMPRAS_ODC_07> <CU_Cambiar_Estado_Artículos_ODC>. 5. El sistema despliega un mensaje de confirmación de que la orden de compra fue generada. 6. El sistema ubica con el código del actor, quien es el analista respectivo para enviar el correo, y notificar las órdenes pendientes por aprobar, caso de uso <CU_GG_COMPRAS_ODC_11> <CU_Notificar_Evento_ODC> 7. Finalizar el caso de Uso. Secuencia Alternativa: Secuencia Alternativa 1: Cancelar Generar orden de compra La secuencia alternativa inicia en el paso 3 cuando el actor decide no Generar la orden de compra. 1. El actor selecciona la opción Cancelar. 2. La secuencia alternativa termina y retorna al paso 8 de la secuencia normal. Secuencia Alternativa 2: Cancelar 71 La secuencia alternativa inicia cuando el actor invoca la opción cancelar la actividad. 1. El sistema confirma si el actor realmente desea cancelar la actividad. 2. La secuencia alternativa termina y finaliza el caso de uso o retorna al paso previo donde fue seleccionada la opción. Secuencia Alternativa 3: No se pudo establecer comunicación con Legacy. La secuencia alternativa inicia para todos aquellos pasos en la secuencia normal que no pueda lograr comunicación con el Legado. 1. El sistema genera un mensaje de error, indicándole al actor que “No se puede establecer comunicación con el sistema Legado”. 2. La secuencia alternativa termina y finaliza el caso de uso. Includes: <CU_GF_COMPRAS_ODC_07>< CU_Cambiar_Estado_Artículos_ODC> <CU_GG_COMPRAS_ODC_11><CU_Notificar_Evento_ODC> Prioridad: Alta Frecuencia de uso: Media Tabla 5. Caso de Uso: Generar orden de compra. La tabla 6 a continuación describe el caso de uso Trabajar con orden de compras: ID CU_GG_COMPRAS_ODC_04 Nombre Caso de Uso CU_Trabajar_con_ODC Proceso compras Subproceso orden de compras Creado por: Jonatán Sánchez Modificado por: Jonatán Sánchez Fecha de Creación 10/12/10 Fecha Modificación 06.04.11 Actividad 1. Trabajar con las ordenes de compras Actores: Genrador de orden de compras y Analista de compras Descripción: Trabajar con las órdenes de compra para decidir su generación, aprobación, rechazo, confirmación, modificación o registrar bitácora. Evento iniciador: 1. Invocar el método trabajarConODC Precondiciones: 8. Los consumidores deben estar correctamente acoplados con el servicio, y debe ser una transacción de un consumidor seguro o válido. 72 Postcondiciones: 1. ordenes de compra generadas, aprobadas, rechazadas, confirmadas, modificadas, o sin cambio. Secuencia Normal: 1. El caso de uso inicia cuando el actor accede a la funcionalidad de “Trabajar con orden de compra”. 2. El sistema despliega los filtros de búsqueda por: Compañía, Proveedor y/o Artículo, rango de fecha, tipo de la orden, estado de la orden de compra y la opción de ingresar el número de orden de compra. 3. El actor selecciona los parámetros de los filtros de búsqueda. 4. El sistema habilita la opción “Buscar”. 5. El actor selecciona la opción “Buscar”. 6. El sistema solicita al Legado la lista de órdenes de compra que cumplan con los parámetros de búsqueda seleccionados por el actor <CU_GF_COMPRAS_ODC_04> < CU_Listar_ODC >. 7. El sistema despliega el resultado de la consulta realizada por el actor. 8. El actor selecciona la orden de compra con la que desea Trabajar. 9. El sistema le envía al Legado el número de la orden de compra seleccionada y le solicita la información del encabezado y detalle de la orden de compra, Invocar el caso de uso < CU_GF_COMPRAS_ODC_05> < CU_Consultar_ODC>. 10. El sistema despliega los campos del encabezado y detalle de la orden de compra seleccionada. 11. El sistema valida que el estado de la orden sea “Por Aprobar” y habilita las opciones “Aprobar orden de compra” y “Rechazar orden de compra”. 12. El actor selecciona la opción Aprobar orden de compra. 13. El sistema despliega un mensaje al actor preguntando si desea Aprobar la orden de compra. 14. El actor selecciona la opción aceptar. 15. El sistema le envía al Legado el número de la orden de compra y le solicita que modifique el estado de los artículos a “Aprobada” <CU_GF_COMPRAS_ODC_07> <CU_Cambiar_Estado_Artículos_ODC>. 16. El sistema despliega un mensaje de confirmación indicando que la orden de compra fue Aprobada. 17. El sistema ubica con el código del actor, quien es el Generador de la orden de compra o el Analista según sea el caso, para enviar el correo, y notificar que la orden de compra ha sido generada, aprobada, rechazada, reabierta o confirmada según el caso, se invoca caso de uso <CU_GG_COMPRAS_ODC_11> <CU_Notificar_Evento_ODC>. 18. Finalizar el Caso de Uso. Secuencia Alternativa: Secuencia alternativa 1: Cancelar La secuencia alternativa inicia cuando el actor invoca la opción cancelar la actividad 73 1. El sistema confirma si el actor realmente desea cancelar la actividad. 2. La secuencia alternativa termina sin realizar ninguna modificación en los registros del Sistema y finaliza el caso de uso o al paso previo donde fue seleccionada la opción. Secuencia Alternativa 2: No se pudo establecer comunicación con el Legado. La secuencia alternativa inicia para todos aquellos pasos en la secuencia normal que no pueda lograr comunicación con al Legado. 1. El sistema genera un mensaje de error, indicándole al actor que “No se puede establecer comunicación con el sistema Legado”. 2. La secuencia alternativa termina y finaliza el caso de uso. Secuencia Alternativa 3: Cancelar Aprobar (Generar, Rechazar, Confirmar y Modificar) orden de compra La secuencia alternativa inicia en el paso 14 de la secuencia normal y en las secuencias alternativas donde aplique (generar, rechazar, confirmar y modificar) cuando el actor decide no confirmar la acción. 1. El actor selecciona la opción cancelar. 2. La secuencia alternativa termina y retorna al paso 18 de la secuencia normal. Secuencia Alternativa 4: Rechazar orden de compra La Secuencia Alternativa inicia en el paso 11 de la secuencia normal cuando se desea rechazar una orden de compra. 1. El actor selecciona la opción “Rechazar orden de compra”. 2. El sistema despliega un mensaje preguntando si el rechazo de la orden de compra es definitivo o con opción de modificación y habilita un campo para el ingreso de Observación. 3. El actor selecciona la opción e ingresa la observación acerca del rechazo de la orden de compra. 3.1 El actor selecciona la opción de rechazar la orden de compra de manera definitiva: 3.1.1 El sistema despliega un mensaje al actor preguntando si desea Rechazar de manera definitiva la orden de compra. 3.1.2 El actor selecciona la opción aceptar. 3.1.3 El sistema le envía al Legado el número de la orden de compra y le solicita al Legado que modifique el estado de los artículos a “Rechazada” <CU_GF_COMPRAS_ODC_07> <CU_Cambiar_Estado_Artículos_ODC>. 3.1.4 El sistema despliega un mensaje de confirmación indicando que la orden de compra fue Rechazada. 74 3.2 El actor selecciona la opción de rechazar la orden de compra con opción de modificación: 3.2.1 El sistema despliega un mensaje al actor preguntando si desea Rechazar con opción de modificación. 3.2.2 El actor selecciona la opción aceptar. 3.2.3 El sistema le envía al Legado el número de la orden de compra y le solicita al Legado que modifique el estado de los artículos a “Reabierta” <CU_GF_COMPRAS_ODC_07> <CU_Cambiar_Estado_Artículos_ODC>. 3.2.4 El sistema despliega un mensaje de confirmación indicando que la orden de compra fue Reabierta. 4. La secuencia alternativa termina y retorna al paso 17 de la secuencia normal. Secuencia Alternativa 5: Confirmar orden de compra La Secuencia Alternativa inicia en el paso 11 de la secuencia normal cuando se desea confirmar una orden de compra. 1. El sistema valida que el estado de la orden de compra sea Aprobada. 2. El sistema habilita la opción “Confirmar orden de compra”. 3. El actor selecciona la opción “Confirmar orden de compra”. 4. El sistema despliega un mensaje al actor preguntando si desea Confirmar la orden de compra. 5. El actor acepta que desea Confirmar la orden de compra. 6. El sistema le envía al Legado el número de la orden de compra y le solicita al Legado que modifique el estado de los artículos a “Confirmada” <CU_GF_COMPRAS_ODC_07> <CU_Cambiar_Estado_Artículos_ODC>. 7. El sistema muestra un mensaje de confirmación de que la orden de compra fue confirmada. 8. La secuencia alternativa termina y retorna al paso17 de la secuencia normal. Secuencia Alternativa 6: Generar orden de compra La Secuencia Alternativa inicia en el paso 11 de la secuencia normal cuando se desea Generar una orden de compra. 1. El sistema valida que el estado de la orden de compra sea Abierta o Reabierta 2. El sistema habilita la opción “Generar orden de compra”. 3. El actor selecciona la opción “Generar orden de compra”. 4. El sistema despliega un mensaje al actor preguntando si desea Generar la orden de compra. 5. El actor acepta que desea Generar la orden de compra. 6. El sistema le envía al Legado el número de la orden de compra y le solicita al Legado que modifique el estado de los artículos a “Por Aprobar” <CU_GF_COMPRAS_ODC_07> <CU_Cambiar_Estado_Artículos_ODC>. 7. El sistema muestra un mensaje de confirmación de que la orden de compra fue Generada. 8. La secuencia alternativa termina y retorna al paso 17 de la secuencia normal. 75 9. Secuencia Alternativa 7: Modificar orden de compra La Secuencia Alternativa inicia en el paso 11 de la secuencia normal cuando se desea Modificar una orden de compra. 1. El sistema valida que el estado de la orden de compra sea Abierta o Reabierta. 2. El sistema habilita la opción “Modificar orden de compra”. 3. El actor selecciona la opción “Modificar orden de compra”. 4. El sistema acondiciona los campos modificables de la orden de compra (encabezado y detalle) de forma que puedan ser modificados por el actor. 5. El sistema invoca el caso de uso <CU_GG_COMPRAS_ODC_01> <CU_RegistrarODC> ejecutando la secuencia normal a partir del paso 5. 6. La secuencia alternativa termina y finaliza el caso de uso. Secuencia Alternativa 8: Anular orden de compra La Secuencia Alternativa inicia en el paso 11 de la secuencia normal cuando se desea Modificar una orden de compra. 1. El sistema valida que el estado de la orden de compra sea Aprobada. 2. El sistema habilita la opción “Anular orden de compra”. 3. El actor selecciona la opción “Anular orden de compra”. 4. El sistema despliega un mensaje al actor preguntando si desea Anular la orden de compra. 5. El actor acepta que desea Anular la orden de compra. 6. El sistema le envía al Legado el número de la orden de compra y le solicita al Legado que modifique el estado de los artículos a “Anulada” <CU_GF_COMPRAS_ODC_07> <CU_Cambiar_Estado_Artículos_ODC>. 7. La secuencia alternativa termina y finaliza el caso de uso. Secuencia Alternativa 9: Revertir estado de la orden de compra La Secuencia Alternativa inicia una vez han sido desplegados el encabezado y detalle de la orden de compra en el paso 10 y se desea revertir el estado de una orden de compra al estado anterior. 1. El sistema verifica que el estado de la ODC sea Rechazada, Aprobada, Anulada o Confirmada y habilita la opción “Revertir Estado”. 2. El actor selecciona la opción “Revertir Estado”. 3. El sistema despliega un mensaje indicando el estado al cual se revertirá la orden de compra y pregunta sobre la confirmación de la acción. 4. El actor acepta que desea revertir el estado de la orden de compra. 5. El sistema le envía al Legado el número de la orden de compra y le solicita al Legado que modifique el estado de los artículos al estado anterior correspondiente <CU_GF_COMPRAS_ODC_07> <CU_Cambiar_Estado_Artículos_ODC>. 6. La secuencia alternativa termina y finaliza el caso de uso. 76 Includes: < CU_GF_COMPRAS_ODC_04> <CU_Listar_ODC > <CU_GF_COMPRAS_ODC_05> <CU_Consultar_ODC> <CU_GF_COMPRAS_ODC_07> <CU_Cambiar_Estado_Artículos_ODC> <CU_GG_COMPRAS_ODC_11> <CU_Notificar_Evento_ODC> <CU_GG_COMPRAS_ODC_01> <CU_RegistrarODC_> Prioridad: Alta Frecuencia de uso: Alta Tabla 6. Caso de Uso: Trabajar con orden de compra. El caso de uso relacionado al envío de las notificaciones por correo electrónico se describe en la tabla 7 a continuación: ID CU_GG_COMPRAS_ODC_11 Nombre Caso de Uso CU_Notificar_Evento_ODC Proceso compras Subproceso orden de compra Creado por: Jonatán Sánchez Modificado por: Jonatán Sánchez Fecha de Creación 10/12/10 Fecha Modificación 25.03.11 Actividad 1. Notificar los eventos la orden de compras Actores: Generador de orden de compras y Analista de compras Descripción: Notificar el cambio de estado de las ordenes de compras enviando un correo electrónico con la información Evento iniciador: 1. Invocar el método notificarEventoODC Precondiciones: 3. Los consumidores deben estar correctamente acoplados con el servicio, y debe ser una transacción de un consumidor seguro o válido. Código del correo electrónico, Número de orden de compra. 4. correo electrónico de los destinatarios. Postcondiciones: Notificación de Órdenes de compra Secuencia Normal: 1. Se envía un correo electrónico de acuerdo a los siguientes eventos: 77 1.1 ordenes Generadas, Enviar E-mail al Analista de compras, con el Número de la orden de compra, indicando que la orden se encuentra pendiente por aprobar. Caso de uso <CU_GF_COMPRAS_GNR_02> <CU_Notificar_Por_Email>. 1.2 ordenes Aprobadas, Rechazadas, Confirmadas, Anuladas y Rechazadas con opción de Modificar: Enviar E-mail al Generador de orden de compras (y Generadores de Requisición en caso de ordenes Aprobadas), con el Número de la orden de compra, indicando que la orden ha sido Aprobada, Rechazada, Confirmada, Anuladas o Reabierta para modificación. Caso de uso <CU_GF_COMPRAS_GNR_02> <CU_Notificar_Por_Email>. 2. Finalizar el caso de uso. Secuencia Alternativa: Includes: <CU_GF_COMPRAS_GNR_02> <CU_Notificar_Por_Email> Prioridad: Alta Frecuencia de uso: Alta Tabla 7. Caso de Uso: Notificar Evento de orden de compra. El caso de uso relacionado a la selección de artículos para la generación de la orden de compra se muestra a continuación en la tabla 8: ID CU_GF_COMPRAS_ODC_08 Nombre Caso de Uso CU_Seleccionar_Articulo Proceso compras Subproceso orden de compra Creado por: Jonatán Sánchez Modificado por: Jonatán Sánchez Fecha de Creación 09.12.2010 Fecha Modificación 22.03.2011 Actividad Seleccionar Articulo Actores: Generador de orden de compra. Descripción: Permite seleccionar el artículo Evento iniciador: 1.Invocar el método seleccionarArticulo Precondiciones: 1. Los consumidores deben estar correctamente acoplados con el servicio y debe ser una transacción de un consumidor seguro o válido. 2. Código de Proveedor (Opcional). 78 Postcondiciones: 2. Artículo seleccionado Secuencia Normal: 1. El sistema despliega los filtros de búsqueda de Artículos en el Legado (Repositorio de Artículos). Los filtros son los siguientes: Índice de Clasificación, Código de Clasificación, Código de Artículo y Descripción del Artículo 2. El actor ingresa y/o selecciona información para la búsqueda de los siguientes campos: - Índice de Clasificación de Artículos (Obligatorio) - Código de Clasificación de Artículos (Opcional). - Código del Artículo o parte de él (Opcional). - Descripción del artículo o parte de ella (Opcional). Al menos debe seleccionar un filtro 3. El sistema habilita la opción de “Buscar Artículos”. 4. El actor selecciona la opción de “Buscar Artículos”. 5. El sistema consulta al Legado los artículos con los parámetros de búsqueda seleccionado e ingresados por el actor. 6. El Legado retorna un mensaje de respuesta confirmando la operación con uno o mas artículos encontrados. 7. El sistema despliega la Lista de Artículos con la opción de seleccionar, uno o más Artículos. 8. El sistema muestra y habilita para todos los ítems de la lista campos de entrada de datos, tales como: cantidad, precio unitario, ancho, largo, calibre/espesor y observación. 9. El sistema deshabilita para todos los ítems que sean del tipo Estándar los campos ancho, largo, calibre/espesor. 10. El actor selecciona el(los) Artículo(s) e ingresa los datos que corresponda con el ítem seleccionado. 11. El actor selecciona la opción de Continuar. 12. El sistema valida que los datos de los ítems seleccionados sean correctos. (Ej. La cantidad requerida sea un valor numérico de 15 dígitos enteros y 3 decimales). 13. El sistema despliega un mensaje preguntado al actor si desea agregar los artículos seleccionados o sustituir los existentes con la nueva selección. 14. El actor selecciona la opción Agregar. 15. Finalizar el Caso de Uso. Secuencia Alternativa: Secuencia Alternativa 1: Cancelar Buscar Artículos. La secuencia alterna inicia en el paso 4 una vez que el actor selecciona la opción de Cancelar. 1. El sistema limpia la selección y datos ingresados en los filtros del actor (en dado caso que exista alguna selección y/o ingreso de datos en los filtros). 2. La secuencia alterna termina y retorna al paso 15 de la secuencia normal. 79 Secuencia Alternativa 2: Cancelar Confirmación de Selección de Artículos. La secuencia alterna inicia en el paso 14 una vez que el actor selecciona la opción de Cancelar. 1. La secuencia alterna termina y retorna al paso 7 de la secuencia normal. Secuencia Alternativa 3: El Legado no encuentra Artículos con el criterio de búsqueda. La secuencia alterna inicia en el paso 6 una vez que el sistema no encuentra artículos con el criterio de búsqueda. 1. El Legado indica que no existe Artículos con el criterio de búsqueda. 2. El sistema genera un mensaje indicándose al actor “No se encontró Artículos con el criterio de búsqueda”. 3. La secuencia alterna termina y retorna al paso 2 de la secuencia normal. Secuencia Alternativa 4: No se pudo establecer comunicación con el Legado. La secuencia alterna inicia para todos aquellos pasos en la secuencia normal no pueda lograr comunicación con el Legado. 1. El sistema genera un mensaje de error indicándole al actor “No se puede establecer comunicación con el sistema Legado”. 2. La secuencia alterna termina y finaliza el caso de uso. Secuencia Alternativa 5: Cancelar La secuencia alterna inicia cuando el actor invoca la opción cancelar la actividad. 1. El sistema confirma si el actor realmente desea cancelar la actividad. 2. La secuencia alternativa termina y finaliza el caso de uso o retorna al paso previo donde fue seleccionada la opción. Secuencia Alternativa 6: Sustituir los artículos existentes La secuencia alterna inicia en el paso 13 cuando el sistema pregunta al actor si desea agregar los artículos seleccionados o sustituir los existentes con la nueva selección. 1. El actor selecciona la opción sustituir. 2. El sistema despliega un mensaje indicando al actor que todos los ítems serán sustituidos por la nueva selección de artículos. 3. El actor selecciona la opción aceptar. 4. La secuencia alternativa termina y retorna al paso 15 de la secuencia normal. 80 Prioridad: Alta Frecuencia de uso: Media Requerimientos especiales: El Legado debe indicar la lista de Artículos activos Comentarios: La funcionalidad de este caso de uso será reutilizada en los distintos procesos de negocio. Tabla 8. Caso de Uso: Seleccionar Artículos. En la tabla 9 a continuación se describe la secuencia para el caso de uso Listar orden de compra: ID CU_GF_COMPRAS_ODC_04 Nombre Caso de Uso CU_Listar_ODC Proceso compras Subproceso orden de compras Creado por: Jonatán Sánchez Modificado por: Jonatán Sánchez Fecha de Creación 10/12/10 Fecha Modificación 18.03.11 Actividad Listar las Órdenes de compras de acuerdo al parámetro indicado. Actores: Generador de orden de compras, Analista de compras y Supervisor de Almacén Descripción: Listar las órdenes de compra que serán consultadas. Evento iniciador: Invocar el método ListarODC Precondiciones: 1. Los consumidores deben estar correctamente acoplados con el servicio, y debe ser una transacción de un consumidor seguro o válido. 2. Alguno o combinación de los siguientes parámetros: Compañía, Proveedor y/o Artículo, estado de la orden, Rango de fecha, Tipo de la orden de compra Postcondiciones: 1. Lista de Órdenes de compra a consultar. Secuencia Normal: 1. El sistema solicita al Legado la lista de órdenes de compra que cumplan con los parámetros de búsqueda y el tipo seleccionado por el usuario. 2. El Legado retorna un mensaje de respuesta (Compañía, unidad solicitante, Tipo de la orden, número de la orden, descripción, fecha de elaboración, 81 proveedor, entre otros) con las órdenes que cumplan con los parámetros de búsqueda seleccionados por el usuario. 3. Finalizar el caso de uso. Secuencia Alternativa Secuencia alternativa 1: La búsqueda de orden de compra no arroja resultados La secuencia alternativa inicia en el paso 2 de la secuencia normal, cuando la respuesta del Legado no arroja resultados para los parámetros de búsqueda seleccionados. 1. El sistema muestra un mensaje indicando que no existen Órdenes de compra con los parámetros de búsqueda seleccionados. 2. La secuencia alternativa termina y retorna al paso 3 de la secuencia normal. Secuencia Alternativa 2: No se pudo establecer comunicación con el Legado. La secuencia alternativa inicia para todos aquellos pasos en la secuencia normal que no pueda lograr comunicación con el Legado. 1. El sistema genera un mensaje de error, indicándole al actor que “No se puede establecer comunicación con el sistema Legado”. 2. La secuencia alterna termina y finaliza el caso de uso. Prioridad: Alta Frecuencia de uso: Alta Tabla 9. Caso de Uso: Listar orden de compras. A continuación en la tabla 10 se describe el caso de uso relacionado a Consultar orden de compra: ID CU_GF_COMPRAS_ODC_05 Nombre Caso de Uso CU_Consultar_ODC Proceso compras Subproceso orden de compras Creado por: Jonatán Sánchez Modificado por: Jonatán Sánchez Fecha de Creación 10/12/10 Fecha Modificación 18.03.11 Actividad 1. Consultar la orden de compras 82 Actores: Generador de orden de compras y Analista de compras Descripción: Mostrar el encabezado y detalle de la orden de compra Evento iniciador: Invocar el método ConsultarODC Precondiciones: 1. Los consumidores deben estar correctamente acoplados con el servicio, y debe ser una transacción de un consumidor seguro o válido. 2. Número de orden de compra a consultar Postcondiciones: 3. Información de la orden de compra consultada Secuencia Normal: 1. El sistema le envía al Legado el número de la orden de compra y le solicita la información del encabezado y detalle de la orden de compra. 2. El Legado retorna un mensaje de respuesta con la información de la orden de compra. 3. Finalizar el caso de uso. Secuencia Alternativa: Secuencia alternativa 1: La búsqueda de orden de compra no arroja resultados La secuencia alternativa inicia en el paso 2 de la secuencia normal, cuando la respuesta del Legado no arroja resultados. 1. El sistema muestra un mensaje indicando que no existen Órdenes de compra con el número dado. 2. La secuencia alternativa termina y retorna al paso 3 de la secuencia normal. Secuencia Alternativa 2: No se pudo establecer comunicación con el Legado. La secuencia alternativa inicia para todos aquellos pasos en la secuencia normal donde no se pudo lograr comunicación con el Legado. 1. El sistema genera un mensaje de error, indicándole al actor que “No se puede establecer comunicación con el sistema Legado”. 2. La secuencia alterna termina y finaliza el caso de uso. Prioridad: Alta Frecuencia de uso: Alta Tabla 10. Caso de Uso: Consultar orden de compras. La tabla 11 describe el caso de uso de cambiar estado de artículos de la orden de compra. 83 ID CU_GF_COMPRAS_ODC_07 Nombre Caso de Uso CU_Cambiar_Estado_Artículos_ODC Proceso compras Subproceso ordenes de compras Creado por: Jonatán Sánchez Modificado por: Jonatán Sánchez Fecha de Creación 13.12.2010 Fecha Modificación 22.03.11 Actividad Cambiar el estado del artículo en la orden de compra Actores: Generador de orden de compras y Analista de compras Descripción: Cambiar el estado del artículo en la orden de compra Evento iniciador: 1. Invocar el método cambiarEstadoArticuloODC Precondiciones: 1. Los consumidores deben estar correctamente acoplados con el servicio, y debe ser una transacción de un consumidor seguro o válido. 2. Número de la orden de compra, Lista de Códigos de artículos (al menos un ítem) y el estado (Por Aprobar, Aprobada, Abierta, etc). Postcondiciones: 1. Estado del artículo actualizado en la orden de compra Secuencia Normal: 1. El sistema solicita al legado que modifique el estado de los artículos (le envía el número de la orden de compra, la lista de artículos y el estado a cambiar). 2. El Legado modifica el estado de los artículos de la orden de compra y retorna un mensaje de respuesta confirmando la operación. 3. Finalizar Caso de Uso. Secuencia Alternativa: Secuencia Alternativa 1: El Legado no logra modificar el estado de un artículo La secuencia alternativa inicia en el paso 2 una vez que el Legado no puede modificar el artículo con el nuevo estado. 1. El sistema Legado indica que no fue posible lograr la operación de modificar el estado del artículo. 2. El sistema genera un mensaje de error indicando que “No fue posible modificar el estado del artículo”. 3. La secuencia alterna termina y finaliza el caso de uso. Secuencia Alternativa 2: No se pudo establecer comunicación con el Legado. 84 La secuencia alternativa inicia para todos aquellos pasos en la secuencia normal que no pueda lograr comunicación con el Legado. 1. El sistema genera un mensaje de error, indicándole al actor que “No se puede establecer comunicación con el sistema Legado”. 2. La secuencia alternativa termina y finaliza el caso de uso. Prioridad: Alta Frecuencia de uso: Alta Tabla 11. Caso de Uso: Cambiar estado de orden de compras. Finalmente la tabla 12 describe el caso de uso de Revertir estado de una orden de compra. ID CU_GG_COMPRAS_ODC_06 Nombre Caso de Uso CU_Revertir_orden_compras Proceso compras Subproceso orden de compras Creado por: Jonatán Sánchez Modificado por: Fecha de Creación 16.01.12 Fecha Modificación Actividad 1. Revertir estado de una orden de compras Actores: Generador de orden de compras y Analista de orden de compras Descripción: Permite revertir una orden de compra. Las ordenes Anuladas podrán ser revertidas por el Generador de orden de compras. Las ordenes Aprobadas o Rechazadas podrán ser revertidas por el Analista de orden de compras Evento iniciador: 1. Invocar el método revisarODC Precondiciones: 1. Los consumidores deben estar correctamente acoplados con el servicio, y debe ser una transacción de un consumidor seguro o válido. 2. La orden debe existir y debe estar en estado “Aprobada”, “Rechazada” o “Anulada”. Postcondiciones: 1. orden de compra con estado “Aprobada”, “Rechazada” o “Reabierta” ó en su estado original. Secuencia Normal: 1. El caso de uso inicia cuando el actor accede a la funcionalidad de “Revertir orden de compra”. 85 2. El sistema despliega las Órdenes de compra de acuerdo a los privilegios del actor y según los parámetros seleccionados (caso de uso: < CU_GF_COMPRAS_ODC_04> <CU_Listar_ODC > 3. El actor selecciona la orden de compra que desea revertir. 1. El sistema invoca el caso de uso <CU_GF_COMPRAS_ODC_05> <CU_Consultar_ODC> con el numero de la ODC y la compañía seleccionada en el paso 3 y muestra el detalle de la ODC seleccionada. 5. El sistema muestra los posibles estados a los que se puede revertir la orden de compra seleccionada: a. orden Aprobada puede ser revertida a Rechazada o Reabierta b. orden Rechazada puede ser revertida a Aprobada o Reabierta c. orden Anulada puede ser revertida Reabierta 6. El actor selecciona el estado al cual desea revertir la orden de compra y selecciona la opción “Aceptar” 7. El sistema despliega un mensaje de información indicándole al actor “¿Está seguro que desea procesar esta opción?”. 8. El actor acepta el mensaje de confirmación. 9. El sistema le solicita al Legado el cambio de estado de la orden al estado seleccionado <CU_GF_COMPRAS_ODC_07> <CU_Cambiar_Estado_Artículos_ODC> 10. El Legado retorna un mensaje de respuesta confirmando la operación. 11. El sistema despliega un mensaje de confirmación indicando que la operación ha sido realizada con éxito. 12. Sí el nuevo estado seleccionado por el actor es “Aprobada” ó “Rechazada”, el sistema ubica en el detalle de la orden de compra el email del generador; e Invoca el Caso de Uso <CU_GG_COMPRAS_ODC_11> <CU_Notificar_Evento_ODC> para notificar al generador de la orden del cambio de estado 13. Finaliza el caso de uso Secuencia Alternativa: Secuencia Alternativa 1: Finalizar La secuencia alternativa inicia cuando el actor invoca la opción finalizar la actividad. 1. El sistema confirma si el actor realmente desea finalizar la actividad. 2. La secuencia alternativa termina y finaliza el caso de uso. Secuencia Alternativa 2: No se pudo establecer comunicación con el Legado. 86 La secuencia alternativa inicia para todos aquellos pasos en la secuencia normal que no pueda lograr comunicación con el Legado. 1. El sistema genera un mensaje de error, indicándole al actor que “No se puede establecer comunicación con el sistema Legado”. 2. La secuencia alternativa termina y finaliza el caso de uso. Secuencia Alternativa 3: El usuario no acepta la confirmación La secuencia alternativa inicia en el paso 8 de la secuencia normal cuando el actor no acepta el mensaje de confirmación generado por el usuario 1. El sistema muestra la información de la orden tal cual como fue cargada por el usuario. 2. La secuencia alternativa termina y regresa al paso 3 de la secuencia normal Includes: < CU_GF_COMPRAS_ODC_04> <CU_Listar_ODC > <CU_GF_COMPRAS_ODC_05> <CU_Consultar_ODC> <CU_GF_COMPRAS_ODC_07> <CU_Cambiar_Estado_Artículos_ODC> <CU_GG_COMPRAS_ODC_11> <CU_Notificar_Evento_ODC> <CU_GG_COMPRAS_ODC_01> <CU_RegistrarODC_> Prioridad: Alta Frecuencia de uso: Alta Tabla 12. Caso de Uso: Revertir estado de orden de compras. 3.2.2 Servicios Candidatos Al definir los casos de uso, aquellas actividades repetitivas y que represaban una funcionalidad significativa del negocio fueron identificadas y calificadas como candidatos a servicios. Dichos candidatos a servicios fueron definidos de acuerdo a los principios que enuncia la arquitectura SOA, en la que cada uno de los servicios identificados es atómico y de bajo acoplamiento entre ellos. Esta actividad corresponde a la tarea racionalizar servicios descrita en la figura 14 de la fase de identificación. Los candidatos de servicios identificados son agrupados y clasificados en el portafolio de servicios. El análisis del portafolio permite en esta fase y en la fase de 87 Especificación definir cuáles de ellos serían desarrollados y expuestos como servicios para la organización El resultado de la aplicación de la técnica de descomposición de dominio del proceso en áreas funcionales, obtenido por medio de la definición de los casos de uso y la identificación de servicios candidatos, que conforman el portafolio de servicios, para el proceso de orden de compra se muestran en la siguiente tabla: Dominio Objeto de Negocio (Componente funcional) Servicios Candidatos Registro de la orden de compra orden de compra Registrar orden de compras. Actualizar orden de compras. Obtener datos de compañía. Obtener datos de sucursal. Cambiar estado de orden de compra. Notificar Evento de orden de compra. Repositorio de Artículos Obtener Índices de clasificación de artículos. Obtener Código de clasificación de artículos. Obtener datos de compañía Buscar artículos. Repositorio de Proveedores Obtener Clase de Proveedor Buscar Proveedor Análisis de la orden de compra orden de compra Cambiar estado de orden de compra. Consultar orden de compra Listar orden de compra Notificar orden de compra 88 Revertir orden de compra orden de compra Cambiar estado de orden de compra. Consultar orden de compra Listar orden de compra Tabla 13. Servicios candidatos para el proceso de orden de compras. 3.3 Fase de Especificación y Realización Las actividades de las fases de Especificación y Realización en este caso se fusionaron en el ciclo de vida del desarrollo de la solución. La definición de la arquitectura SOA, la especificación de servicios y componentes se realizó evaluando la factibilidad técnica de las decisiones tomadas y de la mano con los principios del paradigma orientado a servicios. En esta fase se definió de manera formal y con detalle técnico la arquitectura SOA que soporta la solución propuesta para el proceso de orden de compras. Los servicios identificados en la fase anterior son diseñados y fueron especificadas sus referencias, operaciones e interfaces. El resultado de esta fase es la especificación técnica de la Arquitectura SOA y de los servicios y componentes funcionales que constituirán la solución SOA propuesta. 3.3.1 Arquitectura Funcional La arquitectura funcional para esta solución, que corresponde a la actividad de especificación de las capas SOA, se muestra en la siguiente figura: 89 Figura 19. Arquitectura Funcional de la Solución El diagrama representa las capas funcionales descritas en la solución, los elementos inmersos dentro de cada una las capas, y finalmente la forma en que éstas interactúan. La suite de productos Websphere de IBM, fué el conjunto de herramientas seleccionadas por la empresa para la implementación de la solución SOA-BPM. Consumidores: Esta capa representa el equipo de compras de la empresa, los cuales estarán dedicados primordialmente a utilizar e invocar la funcionalidad expuesta por la solución, a través de WebSphere Portal. Websphere Portal proporciona a los usuarios un acceso centralizado a las aplicaciones, al contenido Web y a la información personalizada, es el ambiente de ejecución y el contenedor de los portlets desarrollados y que representan la interfaz de usuario, el front end de la solución SOA. Procesos de Negocio: Es la capa funcional donde residen los procesos de negocio en ejecución, tomando como base el modelamiento del proceso construido a través de Aplicaciones Operacionales Componentes de Servicios (WebSphereProcessServer / WebSphereApplicationServer) Servicios Atómicos y Compuestos (WebSphere ProcessServer) Procesos de Negocio (WebSphere ProcessServer) Consumidores (WebSphere ApplicationServer) Servicio Atómico Servicio Compuesto Datos Datos Operacionales Modelado de Procesos (Business Modeler) Ensamble Procesos (WID) Desarrollo Servicios (WID) Desarrollado Interfaz Usuario Portlet Factory Reglas de negocio / parametrizaciones CIF Motor Decision Motor Decision Data Data Data Data CPT Desarrollo Ejecución Aplicaciones Operacionales Componentes de Servicios (WebSphereProcessServer / WebSphereApplicationServer) Servicios Atómicos y Compuestos (WebSphere ProcessServer) Procesos de Negocio (WebSphere ProcessServer) Consumidores (WebSphere ApplicationServer) Servicio Atómico Servicio Compuesto Datos Datos Operacionales Modelado de Procesos (Business Modeler) Ensamble Procesos (WID) Desarrollo Servicios (WID) Desarrollado Interfaz Usuario Portlet Factory Reglas de negocio / parametrizaciones CIF Motor Decision Motor Decision Data Data Data Data CPT Desarrollo Ejecución Portal Enable ERP 90 WebSphere Business Modeler, los cuales son desplegados para ejecutarse dentro de WebSphere Process Server. Process Server, es el servidor de procesos que provee el ambiente de ejecución para la integración de procesos de negocios. La infraestructura está construida encima de WebSphere Enterprise Service Bus el cual provee todas las capacidades de mediación de flujos de información así como también proporciona la calidad de servicio provista por el servidor de Aplicaciones en el que se sustenta: WebSphere Application Server Network Deployment. WebSphere Process Server soporta distintas clases de procesos de negocios, garantizando la interoperabilidad y flexibilidad como parte de la arquitectura orientada a servicios (SOA) a través de la adopción de estándares como BPEL, servicios Web y XML. El servidor de procesos provee el ambiente de ejecución de componentes del tipo Service Component Architecture (SCA) tales como Procesos de Negocios (BPEL), Tareas Humanas y las Reglas de Negocios que conforman la solución modelada e implementada. Servicios: La capa de servicios es donde se alojarán los protocolos y estándares que sirven para intercambiar los datos entre el sistema Legado y Websphere, publicando las funcionalidades identificadas como servicios reutilizables de la solución, con base en el consumo requerido por las directrices de la empresa en un ambiente ESB. Un bus de servicios de empresa (ESB) es un patrón de “middleware” que unifica y conecta servicios, aplicaciones y recursos dentro de un negocio. Dicho de otra manera, es el marco dentro del cual, las funcionalidades de las aplicaciones de negocios existentes en el sistema legado son puestas a disponibilidad para la reutilización de las aplicaciones implementadas por el sistema desarrollado y que forman parte de la organización. El ESB sobre el cual está construido Process Server es una infraestructura de conectividad flexible que permite la integración de aplicaciones y servicios, permitiendo la conectividad e integración de soluciones basada en estándares, con una cantidad y una complejidad reducida de interfaces. La función de ESB permitirá la exposición de las interfaces orientadas a servicios, manejando la lógica de integración. 91 Aplicaciones: En esta capa está ubicada la funcionalidad que compone el ERP de la empresa, contenida dentro del sistema Legado, el cual permite utilizar dicha funcionalidad a través de mecanismos de integración definidos. La forma en la que serán expuestas las funcionalidades existentes de la organización depende de las características del sistema legado y de cómo están implementadas, en este caso se trata de un sistema monolítico donde las funcionalidades de negocios coexisten con alto acoplamiento entre ellas. En este sentido la integración entre las funcionalidades de los procesos de negocio que debieron ser expuestas como servicios por el sistema legado y el sistema desarrollado será por medio de WebSphere Adapters. WebSphere Adapters permite la integración de aplicaciones y de las soluciones de integración de procesos, conectando las aplicaciones de la empresa dentro de la infraestructura de integración. 3.3.2 Especificación de Servicios El propósito de esta sección es especificar el funcionamiento de la interfaz de servicio del proceso de orden de compras desde una perspectiva lógica funcional (ver tabla 14). Dicha actividad corresponde a la actividad ocho descrita en la figura 14. Nombre del Servicio GestiónODC Dueño Funcional Gerencia de Informática Tipo de Servicio (Catalogación Negocio) - Servicio de Consulta - Servicio de Activación Tipo de Servicio (Catalogación Técnica) - Servicio de Proceso Versión No. 1.0 Tabla 14. Descripción del Servicio Gestión ODC Se describirá las operaciones solicitud, descripción, tipo de dato, longitud aplicarán para el mensaje de entrada y mensaje de excepción que puede requeridos como parte de la respuesta. 3.3.2.1 Interfaz de Servicio GestionODC En esta sección se listan las funciones identificadas que son ejecutadas com del servicio, a partir de las agrupaciones de negocio denotadas en cada una de las interfaces del servicio A continuación interfaz de servicio GestionODC. # Operación del servicio 1 OP01 registrar 2 OP02 cambiarEstado 3 OP03 consultar 4 OP04 listar las operaciones, los mensajes de solicitud y respuesta (atributos de solicitud, descripción, tipo de dato, longitud y cardinalidad), re aplicarán para el mensaje de entrada y mensaje de excepción que puede como parte de la respuesta. Interfaz de Servicio GestionODC se listan las funciones identificadas que son ejecutadas com del servicio, a partir de las agrupaciones de negocio denotadas en cada una de las interfaces del servicio (ver figura 20). Figura 20. Interfaz Gestión ODC A continuación en la tabla 15 se identifican las operaciones que conforman la faz de servicio GestionODC. Nombre de la Operación registrar Síncrona cambiarEstado Síncrona consultar Síncrona listar Síncrona 92 mensajes de solicitud y respuesta (atributos de cardinalidad), restricciones que se aplicarán para el mensaje de entrada y mensaje de excepción que pueden ser se listan las funciones identificadas que son ejecutadas como parte del servicio, a partir de las agrupaciones de negocio denotadas en cada una de las se identifican las operaciones que conforman la Síncrona/Asíncrona Síncrona Síncrona Síncrona Síncrona 93 5 OP05 actualizar Síncrona 6 OP06 buscarArticulos Síncrona Tabla 15. Operaciones de la Interfaz GestionODC 3.3.2.2 Eventos de servicios A continuación la tabla 16 describe los eventos del proceso de negocio que desencadenan las operaciones del servicio. # Operación del servicio Descripción del Evento 1 OP01 <registrar > • En el momento que el usuario completa la información del encabezado y detalle de la orden de compra con data válida, se invoca esta operación. 2 OP02 <cambiarEstado> • En el momento que el usuario con el rol de Generador de orden de compra toma la tarea, evalúa la orden y toma la decisión de Aprobarla, Rechazarla o Solicitar Modificación, se invoca esta operación • En el momento que el usuario con el rol de Generador de orden de compra desea modificar una orden de compra Abierta o Reabierta para solicitar Aprobación, Guardar o Anularla, se invoca esta operación 3 OP03 <consultar> • En el momento en el que un usuario requiere consultar la información de una orden, se dispara esta operación. • En el momento que un usuario requiere Revertir el estado de una orden de compra y selecciona una orden en específico, se dispara esta operación. 4 OP04 <listar> • En el momento que un usuario requiere buscar una orden de compra para Revertir su estado, se dispara esta operación. 5 OP05 <actualizar> • En el momento que un usuario con el rol de Generador de orden de compra procede a modificar el encabezado y detalle la orden con información valida, se invoca esta operación. 6 OP06 <buscarArticulos> • En el momento en el que un usuario con el rol de Generador de orden de compra procede a agregar artículos a una orden, provenientes de del repositorio de artículos, se invoca esta operación Tabla 16. Eventos por operación de Servicio 94 3.3.2.3 Definición de las Operaciones del Servicio OP01: registrar Esta operación tiene como finalidad, registrar una orden de compra con el detalle de los artículos incorporados en la misma, a partir de artículos que se incorporen desde el repositorio de artículos. - Estructura Mensaje de Entrada OP01: registrar En este apartado se define la estructura del mensaje de entrada involucrado en la operación registrar. Elemento Descripción Tipo de Dato Cardinalidad odc Es el elemento que hereda las características del objeto de Negocio CicloEgresos y representa toda la información del objeto de negocio llamado orden de compras (Odc). Además éste funciona para abstraer todos aquellos parámetros necesarios para que el sistema Legado pueda registrar una orden de compras con la información de los artículos que se desea comprar. Odc 1..1 Tabla 17. Mensaje de Entrada OP01: registrar - Diagrama de Clases Mensaje de Entrada OP01: registrar En esta sección se presenta el diagrama de clases del mensaje de entrada de la OP1: registrar, en el cual se muestran las asociaciones entre las clases que lo componen, ver figura 21. 95 Figura 21. Diagrama de Clases Mensaje de entrada OP01: registrar - Estructura Mensaje de Salida OP01: registrar En este apartado se define la estructura del mensaje de salida involucrada en la operación registrar. Elemento Descripción Tipo de Dato Cardinalidad resultadoOperación Es el elemento que representa un objeto técnico común de respuesta para todos los servicios. ResultadoOperación 1..1 Tabla 18. Mensaje de Salida OP01: registrar - Diagrama de Clases Mensaje de Salida OP01: registrar En esta sección se presenta el diagrama de clases del mensaje de salida de la OP1: registrar, en el cual se muestran las asociaciones entre las clases que lo componen. (Ver figura 22). Figura Diagrama de Clases Mensaje de Salida OP01: registrar En esta sección se presenta el diagrama de clases del mensaje de salida de la OP1: registrar, en el cual se muestran las asociaciones entre las clases que lo componen. Figura 22. Diagrama de Clases Mensaje de salida OP01: registrar 96 Diagrama de Clases Mensaje de Salida OP01: registrar En esta sección se presenta el diagrama de clases del mensaje de salida de la OP1: registrar, en el cual se muestran las asociaciones entre las clases que lo componen. . Diagrama de Clases Mensaje de salida OP01: registrar 97 OP02: cambiarEstado Esta operación tiene como funcionalidad el cambio de estado de los artículos de una orden de compra y también de la orden como entidad de negocio. - Estructura del Mensaje de Entrada OP02: cambiarEstado En este apartado se define la estructura del mensaje de entrada involucrado en la operación cambiarEstado. Así mismo, se tomará como premisa la información del elemento detalles del objeto de negocio ODC, si éste posee una colección vacía, se cambiará todos los artículos con el nuevo estado que es definido en el objeto ODC, de lo contrario se tomará cada ítem de dicha colección cambiando el estado de cada artículo que pertenece al campo detalles de la ODC. Elemento Descripción Tipo de Dato Cardinalidad odc Es el elemento que hereda las características del objeto de Negocio CicloEgresos y representa toda la información del objeto de negocio llamado orden de compras (Odc). Además éste funciona para abstraer todos aquellos parámetros necesarios para que el legado pueda registrar una orden de compras con la información de los artículos que se requiere comprar. Odc 1..1 Tabla 19. Mensaje de Entrada OP02: cambiarEstado - Diagrama de Clases Mensaje de Entrada OP02: cambiarEstado En esta sección se presenta el diagrama de clases del mensaje de entrada de la OP2: cambiarEstado, en el cual se muestran las asociaciones entre las clases empleadas en el mensaje de entrada. (Ver figura 23). 98 Figura 23. Diagrama de Clases Mensaje de entrada OP02: cambiarEstado - Estructura del Mensaje de Salida OP02: cambiarEstado En este apartado se define la estructura del mensaje de salida involucrada en la operación cambiarEstado. 99 Elemento Descripción Tipo de Dato Cardinalidad resultadoOperación Es el elemento que representa un objeto técnico común de respuesta para todos los servicios. ResultadoOperación 1..1 Tabla 20. Mensaje de Salida OP02: cambiarEstado - Diagrama de Clases Mensaje de Salida OP02: cambiarEstado En esta sección se presenta el diagrama de clases del mensaje de salida de la OP2:cambiarEstado, en el cual se muestran las asociaciones entre las clases que lo componen. (Ver figura 24). Figura 24. Diagrama de Clases Mensaje de salida OP02: cambiarEstado 100 OP03: consultar La operación consultar tiene como finalidad, consultar la información completa de una orden de compra (encabezado y detalle de una ODC) mediante un número que identifica una única ODC en el sistema legado. - Estructura del Mensaje de Entrada OP03: consultar En este apartado se define la estructura del mensaje de entrada involucrado en la operación consultar. Elemento Descripción Tipo de Dato Cardinalidad odc Es el elemento que hereda las características del objeto de Negocio CicloEgresos y representa toda la información del objeto de negocio llamado orden de compras (Odc). Además éste funciona para abstraer todos aquellos parámetros necesarios para que el legado pueda registrar una orden de compras con la información de los artículos que se requiere comprar. Odc 1..1 Tabla 21. Mensaje de Entrada OP03: consultar - Diagrama de Clases Mensaje de Entrada OP03: consultar En esta sección se presenta el diagrama de clases del mensaje de entrada de la OP3: consultar, en el cual sólo se muestran las asociaciones entre las clases empleadas en el mensaje de entrada. (Ver figura 25). 101 Figura 25. Diagrama de Clases Mensaje de entrada OP03: consultar - Estructura del Mensaje de Salida OP03: consultar En este apartado se define la estructura del mensaje de salida involucrada en la operación consultar. Elemento Descripción Tipo de Dato Cardinalidad resultadoOperación Es el elemento que representa un objeto técnico común de respuesta para todos los servicios. ResultadoOperación 1..1 Tabla 22. Mensaje de Salida OP03: consultar 102 - Diagrama de Clases Mensaje de Salida OP03: consultar En esta sección se presenta el diagrama de clases del mensaje de salida de la OP03:consultar, en el cual se muestran las asociaciones entre las clases que lo componen. (Ver figura 26). Figura 26. Diagrama de Clases Mensaje de salida OP03: consultar 103 OP04: listar Esta operación tiene como finalidad, consultar una lista de orden de compras, según distintos parámetros como Compañía, Proveedor y/o Artículo, estado de la orden, Rango de fecha y Tipo de la orden de compra. - Estructura del Mensaje de Entrada OP04: listar En este apartado se define la estructura del mensaje de entrada involucrado en la operación listar Elemento Descripción Tipo de Dato Cardinalidad odc Es el elemento que hereda las características del objeto de Negocio CicloEgresos y representa toda la información del objeto de negocio llamado orden de compras (Odc). Además éste funciona para abstraer todos aquellos parámetros necesarios para que el sistema legado pueda registrar una orden de compras con la información de los artículos que se requiere comprar. Odc 1..1 Tabla 23. Mensaje de Entrada OP04: listar - Diagrama de Clases Mensaje de Entrada OP04: listar En esta sección se presenta el diagrama de clases del mensaje de entrada de la OP4: listar, en el cual sólo se muestran las asociaciones entre las clases empleadas en el mensaje de entrada. (Ver figura 27). 104 Figura 27. Diagrama de Clases Mensaje de entrada OP04: listar - Estructura Mensaje de Salida OP04:listar En este apartado se define la estructura del mensaje de salida involucrada en la operación listar. Elemento Descripción Tipo de Dato Cardinalidad resultadoOperación Es el elemento que representa un objeto técnico común de respuesta para todos los servicios. ResultadoOperación 1..1 Tabla 24. Mensaje de Salida OP04: listar 105 - Diagrama de Clases Mensaje de Salida OP04: listar En esta sección se presenta el diagrama de clases del mensaje de salida de la OP4: listar, en el cual sólo se muestran las asociaciones entre las clases empleadas en el mensaje de salida. (Ver figura 28). Figura 28. Diagrama de Clases Mensaje de salida OP04: listar OP05: actualizar Esta operación tiene como finalidad, actualizar una ODC en el legado. - Estructura del Mensaje de Entrada OP04: listar En este apartado se define la estructura del mensaje de entrada involucrado en la operación actualizar 106 Elemento Descripción Tipo de Dato Cardinalidad odc Es el elemento que hereda las características del objeto de Negocio CicloEgresos y representa toda la información del objeto de negocio llamado orden de compras (Odc). Además éste funciona para abstraer todos aquellos parámetros necesarios para que el legado pueda registrar una orden de compras con la información de los artículos que se desea comprar. Odc 1..1 Tabla 25. Mensaje de Entrada OP05: actualizar - Diagrama de Clases Mensaje de Entrada OP05: actualizar En esta sección se presenta el diagrama de clases del mensaje de entrada de la OP05:actualizar, en el cual se muestran las asociaciones entre las clases que lo componen. (Ver figura 29). Figura 29. Diagrama de Clases Mensaje de entrada OP05: actualizar 107 - Estructura Mensaje de Salida OP05: actualizar En este apartado se define la estructura del mensaje de salida involucrada en la operación actualizar. Elemento Descripción Tipo de Dato Cardinalidad resultadoOperación Es el elemento que representa un objeto técnico común de respuesta para todos los servicios. ResultadoOperación 1..1 Tabla 26. Mensaje de Salida OP05: actualizar - Diagrama de Clases Mensaje de Salida OP05: actualizar En esta sección se presenta el diagrama de clases del mensaje de salida de la OP05:actualizar, en el cual se muestran las asociaciones entre las clases que lo componen. (Ver figura 30). 108 Figura 30. Diagrama de Clases Mensaje de salida OP05: actualizar OP06: buscarArticulos Esta operación tiene como finalidad la consulta de artículos que pertenecen al repositorio de artículos con el fin de ser agregados a una ODC. La búsqueda de los artículos se realiza según código del artículo, descripción, estado del artículo (índice y código de clasificación). - Estructura del Mensaje de Entrada OP06: buscarArticulos En este apartado se define la estructura del mensaje de entrada involucrado en la operación buscarArticulos. 109 Elemento Descripción Tipo de Dato Cardinalidad parametrosBusquedaArticulo Elemento que contiene los parámetros de búsqueda de artículos en el sistema legado. parametrosArticulo 1..1 Tabla 27. Mensaje de Entrada OP06: buscarArticulos - Diagrama de Clases Mensaje de Entrada OP06: buscarArticulos En esta sección se presenta el diagrama de clases del mensaje de entrada de la OP06:buscarArticulos, en el cual se muestran las asociaciones entre las clases que lo componen. Figura 31. Diagrama de Clases Mensaje de entrada OP06: buscarArticulos - Estructura del Mensaje de Salida OP06: buscarArticulos En este apartado se define la estructura del mensaje de salida involucrado en la operación buscarArticulos. Elemento Descripción Tipo de Dato Cardinalidad resultadoOperación Es el elemento que representa un objeto técnico común de respuesta para todos los ResultadoOperación 1..1 110 servicios. Tabla 28. Mensaje de Salida OP06: buscarArticulos - Diagrama de Clases Mensaje de Salida OP06: buscarArticulos En esta sección se presenta el diagrama de clases del mensaje de salida de la OP06:buscarArticulos, en el cual se muestran las asociaciones entre las clases que lo componen. Figura 32. Diagrama de Clases Mensaje de salida OP06: buscarArticulos 111 3.3.2.4 Modelo de Componentes de Servicios En esta sección se describe el modelo de componentes para el subproceso de ODC, tomando como referencia el modelo de componentes definido para el sistema (Modelo de componentes para SOMA). (Ver figura 33). Figura 33. Modelo de Componentes GestiónODC es un componente de servicio que proporciona una abstracción común del mecanismo de implementación y que contiene elementos de especificación y realización para el subproceso de negocio orden de compras. Este componente de Servicio se vale de la utilización de un componente técnico llamado Mediador que tiene como finalidad la de transformar los datos que son dirigidos o que provengan del sistema legado según los requerimientos que la solución de negocios necesite para cada una de las operaciones del componente GestionODC. Además el Mediador invocará los servicios del sistema legado a través del componente Funcional SubProcesoODC, que tendrá la implementación de la comunicación utilizando un Adaptador. 112 3.4 Fase de Implementación Una vez definidos los requerimientos y la factibilidad técnica de la solución propuesta, se llevó a cabo la construcción de cada uno de los componentes de servicios técnicos y funcionales que fueron definidos en el flujo del proceso. 3.4.1 Herramienta de Desarrollo de Procesos de Negocios y Portlets Para las tareas de desarrollo y construcción asociadas a la implementación de la solución, fue utilizado WebSphere Integration Designer (WID), la cual es la herramienta que permite integrar los procesos de negocio con los servicios existentes y que fueron desarrollados. WID es una herramienta de desarrollo basada en SOA, para trabajar con WebSphere Process Server, WebSphere Enterprise Service Bus, y WebSphere Adapters. WID simplifica la integración con características que aceleran la adopción de la arquitectura orientada a servicio, haciendo rendir al máximo los activos de IT existentes, contribuyendo con la reutilización y la eficiencia. Además la herramienta permitió la integración de los equipos de desarrollo para ensamblar las soluciones de negocios definidas, procesos, adaptadores, y código J2EE, ya que permite el desarrollo dirigido según las necesidades del negocio, integrándose completamente con WebSphere Business Modeler para importar el modelado del proceso de negocio definido en las fases iniciales y reducir los tiempos de implementación. Esta herramienta, como ambiente de desarrollo, permitió además de la implementación de los procesos de negocio, el desarrollo de los portlets que constituyen la interfaz de usuario de las actividades que requieren la interacción del Generador y Analista de orden de compras. Una vista del entorno de desarrollo que presenta el Integration Desginer se muestra en la figura 34. 113 Figura 34. Entorno de desarrollo de Websphere Integration Designer 3.4.2 Implementación del Proceso de Negocio orden de compra La implementación del proceso de orden de compras se inició con la importación del modelo del proceso realizado en Modeler (figura 16), en el Integration Designer, de esta forma es generado una versión inicial del BPEL del proceso que será ejecutado en Process Server. La versión inicial del proceso, contiene el flujo y la secuencia de actividades e invocaciones de servicios que permitirán la orquestación del proceso de negocios en tiempo de ejecución. El siguiente paso en la construcción del BPEL del proceso consistió en la configuración y especificación de las interfaces de servicio y referencias del proceso, que son especificadas de la siguiente manera: • Interfaces de servicio del proceso: Crear y Revertir • Referencias del proceso: Guardar, Actualizar y Cambiar Estado En la figura 35, se muestra las interfaces de servicio y referencias utilizadas por el proceso de orden de compra, representado en el diagrama de ensamblaje en el WID. 114 Figura 35. Diagrama de Ensamblado del Proceso de orden de compra La implementación como tal del módulo de orden de compras y por ende del proceso BPEL definido en el diagrama de ensamblaje consistió en la especificación de cada una de las tareas y actividades del proceso modelado, tomando en cuenta : Objetos de negocio: para cada una de las tareas, según la especificación de servicios (entradas y salidas). Interfaz asociada a las tareas: acuerdo a los objetos de negocio especificados. Referencias de servicios: representadas como invocaciones a servicios necesarios para cumplir con el objetivo de la tarea. Variables del proceso, manejadas durante la ejecución del proceso por las instancias creadas. Asignaciones de valores durante el flujo del proceso representados como componentes Assign 115 Componentes de mediación que permiten la transformación de los datos y la comunicación con los servicios expuestos por el sistema legado, representados en el BPEL como módulos de mediación. El objetivo de la implementación del proceso de orden de compras en el Integration Designer es la generación del BPEL del proceso para la ejecución del proceso de negocio en el servidor de procesos, un fragmento del proceso BPEL de orden de compras se muestra en la figura 36 a continuación. Figura 36. Fragmento del BPEL del proceso orden de compras 116 3.4.3 Desarrollo de los portlet’s asociados a la interfaz de usuario del Proceso Una vez realizada la implementación del proceso para el despliegue en Process Server se procedió al desarrollo de los portlets, los cuales serán la interfaz de usuario requerida a fin de que el Generador y el Analista de orden puedan llevar a cabo las tareas que requieren de su interacción. Los portlets son componentes que producen fragmentos de código que se agregan a una página de un portal, en este caso a WebSphere Portal Server y estos son componentes reutilizables que combinan contenido basado en Web con funcionalidades de la aplicación y que siguen el patrón de MVC y están basados en la tecnología J2EE. En este caso los portlets fueron desarrollados utilizando la tecnología Java Server Faces en su especificación JSR 286. Los portlets desarrollados cubren cada una de las funcionalidades del proceso de orden de compras, para su interacción con los usuarios Generadores y Analistas. 3.4.3.1 Descripción de los Portlets Los portlets que a continuación se listan dan una breve descripción de su funcionalidad dentro del subproceso de orden de compras. Nombre del Portlet Descripción del Portlet Crear orden de compra Portlet para la interacción con la tarea humana Crear orden de compra. Este Portlet permite el ingreso de toda la información necesaria para registrar una orden en el sistema legado. Revisar orden de compra Portlet para la interacción con la tarea humana Revisar orden de compra del subproceso de orden de compras. En este portlet el Analista toma la decisión de Aprobar, Rechazar o Solicitar Modificación de la orden que está revisando. 117 Modificar orden de compra Portlet para la interacción con la tarea humana Modificar orden de compra. Este portlet permite realizar ajustes de la información de la orden y cambiar su estado. Consultar orden de compra Portlet de apoyo para consultar la información de una orden de compra almacenada en el legado a partir de los filtros de búsqueda introducidos. Agregar Artículos Portlet de apoyo que permite seleccionar artículos de una lista filtrada según los criterios de búsqueda establecidos. Buscar Proveedor Portlet de apoyo que permite seleccionar un proveedor de una lista filtrada según los criterios de búsqueda. Tabla 29. Descripción de los portlets pertenecientes al proceso de orden de compras 3.4.3.2 Especificación de Portlets 3.4.3.2.1 Descripción portlet: Crear orden de compra Este portlet permitirá ingresar los datos necesarios del encabezado y detalle para la creación de una nueva orden de compra utilizando el proceso implementado en Websphere Process Server para tal fin. Para el ingreso de los artículos que va a contener la orden de compra, se utilizará el portlet de apoyo Agregar Artículos y Agregar Proveedor. - Casos de uso relacionados • CU_GG_COMPRAS_ODC_02 :CU_RegistrarODC • CU_GF_COMPRAS_ODC_08: CU_Seleccionar_Articulo • CU_GF_COMPRAS_ODC_07: CU_Cambiar_Estado_Artículos_ODC • CU_GG_COMPRAS_ODC_11: CU_Notificar_Evento_ODC 118 - Diagrama de Secuencia En esta sección se muestra un diagrama de secuencia que ilustra el flujo de información a través del Portlet hasta llegar a Websphere Process Server, y el sistema legado. (Ver figura 37). Figura 37. Diagrama de secuencia Crear orden de compra 3.4.3.2.2 Descripción portlet: Revisar orden de compra El portlet Revisar orden de compra permitirá a los usuarios con rol Analista de orden de compras realizar la revisión de las órdenes de compras. A través de este portlet, el aprobador puede tomar una decisión. Las posibles decisiones son: Aprobar, Rechazar y Solicitar Modificación de la orden. 119 - Casos de usos relacionados - • CU_GF_COMPRAS_ODC_05: CU_Consultar_ODC • CU_GF_COMPRAS_ODC_07: CU_Cambiar_Estado_Artículos_ODC • CU_GG_COMPRAS_ODC_11: CU_Notificar_Evento_ODC • CU_GG_COMPRAS_ODC_01: CU_RegistrarODC - Diagrama de Secuencia A continuación en la figura 38 se muestra el diagrama de secuencia que ilustra el flujo de información a través del Portlet hasta llegar a Websphere Process Server , el sistema legado y el LDAP. Figura 38. Diagrama de secuencia Revisar orden de compra 120 3.4.3.2.3 Descripción portlet: Modificar orden de compra El portlet Modificar orden de compra permitirá a los usuarios con el rol Generador de orden de compras realizar la modificación o ajuste de las órdenes de compras que al momento de crearla seleccionaron la opción de "Guardar", estas se encuentran con estado “Abierta” en caso de Modificación o “Reabierta” en caso de ajuste y aparecerán en la bandeja de tarea por hacer de los generadores correspondientes a la unidad de negocio. A través de este portlet, el Generador puede modificar o ajustar la orden y tomar una decisión. Las posibles decisiones son: Solicitar Aprobación, Guardar y Anular. - Casos de usos relacionados: • CU_GF_COMPRAS_ODC_05: CU_Consultar_ODC • CU_GF_COMPRAS_ODC_07: CU_Cambiar_Estado_Artículos_ODC • CU_GG_COMPRAS_ODC_11: CU_Notificar_Evento_ODC • CU_GG_COMPRAS_ODC_01: CU_RegistrarODC - Diagrama de secuencia En esta sección se muestra el diagrama de secuencia que ilustra el flujo de información a través del Portlet hasta llegar a Websphere Process Server, el sistema legado y el LDAP, en relación al portlet Modificar orden de compra. 121 Figura 39. Diagrama de secuencia Modificar orden de compra 3.4.3.2.4 Descripción portlet: Consultar orden de compra El portlet Consultar orden de compra permite a un usuario autorizado consultar una orden almacenada en el legado para visualizar sus datos y su estado. La información manejada en este portlet proviene directamente del sistema legado. - Casos de uso relacionados • <CU_GF_COMPRAS_ODC_05> <CU_Consultar_ODC> 122 - Diagrama de secuencia En esta sección se muestra en la figura 40 un diagrama de secuencia que ilustra el flujo de información a través del Portlet hasta llegar a Websphere Process Server, el sistema legado y el LDAP. Figura 40. Diagrama de secuencia Consultar orden de compra 3.4.3.2.5 Descripción portlet: Agregar Artículos Este es un portlet de soporte que permite ir agregando artículos. Para facilitar la búsqueda de los artículos o servicios se tiene una serie de parámetros que al ejecutarlo se listarán los artículos o servicios que cumplen con ese criterio de búsqueda. 123 - Casos de usos relacionados • < CU_GF_COMPRAS_ODC_08> < CU_Seleccionar_Articulo > - Diagrama de secuencia En esta sección se muestra en la figura 41 un diagrama de secuencia que ilustra el flujo de información a través del Portlet hasta llegar a Websphere Process Server, el sistema legado y el LDAP. Figura 41. Diagrama de secuencia Buscar Artículos 124 3.4.3.2.6 Descripción portlet: Buscar Proveedor Este es un portlet de soporte que permite buscar un proveedor y asociárselo a una orden de compra. Para facilitar la búsqueda del proveedor se tiene una serie de parámetros que al ejecutarlo se listarán los o el proveedor que cumpla con ese criterio de búsqueda. - Casos de uso relacionados Los requerimientos relacionados a este portlet no fueron especificados inicialmente en los casos de uso, no obstante fueron obtenidos durante el ciclo de implementación del proceso para su posterior desarrollo. - Diagrama de secuencia En esta sección se muestra en la figura 42 el diagrama de secuencia que ilustra el flujo de información a través del Portlet hasta llegar a Websphere Process Server y el sistema legado. Figura 42. Diagrama de secuencia Buscar Proveedor 125 3.4.4 Instanciación de la Arquitectura de Referencia SOA En resumen la fase de implementación de la solución SOA estuvo conformada por la construcción del proceso de negocio orden de compra en el BPEL para la orquestación del proceso en Process Server, el cual comprendió la especificación detallada de las interfaces de servicios, especificación de los objetos de negocios que componen el flujo de información del proceso, diseño y especificación de cada una de las secuencias alternativas del flujo del proceso y finalmente la configuración y especificación de las reglas de negocio y manejo de fallas del proceso. Una vez definido el BPEL del proceso, se desarrollaron seis portlets en JSF, los cuales representan la interfaz de usuario a través de la cual los usuarios funcionales de la empresa cumplirán las tareas que requieren de su intervención. De esta forma la instancia de la arquitectura SOA de la solución implementada para el proceso de orden de compras de la empresa queda definida de la siguiente forma, como se muestra en la figura 43. Figura 43. Instancia de la Arquitectura SOA para el proceso de Detallando cada una de las capas tenemos: La capa de Activos existentes comprende los servicios expuestos por el sistema legado de la empresa necesarios para cumplir con los requerimientos del proceso de negocio consumidos por el Process Serve • Crear orden • Actualizar • Cambiar Estado de Instancia de la Arquitectura SOA para el proceso de Detallando cada una de las capas tenemos: ctivos existentes comprende los servicios expuestos por el sistema la empresa. Estos servicios comprenden los servicios de negocios necesarios para cumplir con los requerimientos del proceso de negocio por el Process Server, incluye los siguientes servicios: orden Actualizar orden Cambiar Estado de orden 126 Instancia de la Arquitectura SOA para el proceso de orden de compra ctivos existentes comprende los servicios expuestos por el sistema . Estos servicios comprenden los servicios de negocios necesarios para cumplir con los requerimientos del proceso de negocio y que serán los siguientes servicios: 127 • Buscar Articulos • Buscar Proveedor • Servicios asociados a los formularios como servicio de Índices, servicio de clases, servicio códigos de Iva, entre otros. En la capa de componentes funcionales y de Servicios, se presentan en primera instancia los componentes funcionales que son los encargados de consumir los servicios expuestos por el sistema legado a través de Websphere Adapters. Además esta capa incluye los componentes de Servicios que encapsulan y contienen la implementación del flujo del proceso de negocio, representado como un componente SCA (Service Component Architecture). La capa de servicios está conformada por cada uno de los servicios identificados en las fases de Identificación y especificación y que son expuestos como servicios Web, para ser consumidos por los procesos de negocios o directamente por los portlets. Finalmente se detalla la capa de consumidores, representada por WebSphere Portal Server el cual es el contenedor de los portlets desarrollados para la ejecución de las actividades que requieren de la interacción con los usuarios del proceso de orden de compra. 128 3.5 Fase de Despliegue y Pruebas Las tares de despliegue e integración estuvieron enfocadas en la recepción y la publicación asíncrona de los componentes desarrollados, para ejecutar sobre ellos las pruebas pertinentes. En esta fase el objetivo fue el de la realización de las pruebas, dirigidas a determinar si el comportamiento de la interfaz y la información compartida entre los servicios, cumpliría con los requerimientos especificados. El objetivo fue el de garantizar que todos los servicios entregados a esta fase de pruebas cumplen con lo especificado en la definición de la interfaz, en términos de normas, la validación del formato y los datos. Las pruebas a los componentes de los procesos se hicieron en los ambientes locales de prueba dotados con WebSphere Process Server e integrados al WebSphere Integration Designer. Las pruebas programadas sobre la interfaz de usuario involucradas con Portal se realizaron sobre un ambiente centralizado el cual cuenta con WebSphere Portal Server. 3.5.1 Estrategia de Desarrollo de Pruebas La estrategia de desarrollo está definida por la metodología SOMA, en donde se contemplan la ejecución de los niveles de pruebas que fueron acordados con el cliente, en la fase de implementación, como se muestra en la figura a continuación: Figura 44. Estrategia de desarrollo de pruebas Las pruebas Estáticas corresponden a aquellas pruebas realizadas a los documentos en las fases de diseño de la solución, por ejemplo: Revisiones a 129 documentos de Casos de Uso, Especificación de Servicios y Especificación de Procesos Las pruebas dinámicas corresponden a las pruebas a los programas o al sistema final y se realizaron en esta fase, sin embargo como se trata de un proceso con gran participación del usuario del proceso, fue necesario refinar los requerimientos del negocio y por lo tanto actualizar los documentos definidos en las fases iniciales, por consiguiente las pruebas estáticas fueron aplicadas durante todo el ciclo de desarrollo e implementación de la solución SOA. 3.5.2 Alcance de las Pruebas El alcance de las pruebas comprende la automatización de un conjunto de tareas que conforman el Proceso de orden de compras, tomando en cuenta los diferentes elementos a tener en cuenta para tal propósito. Las funcionalidades tomadas en cuentas fueron: 1. Implementación de las tareas y elementos de decisión correspondientes al proceso de orden de compras conformado por: a. “Crear la orden de compra”. b. “Decisión del generador de la orden (Abierta) c. “Decisión del generador de la orden (Por Aprobar) d. “Revisar la orden”. e. “Cambiar estado de la orden”. f. “Decisión del Analista” (con la opción de aprobada). g. Consultar Órdenes. 2. Implementación de los servicios de integración que soportarán los elementos descritos en el punto anterior. Esto contempla el uso del adaptador propuesto para el intercambio de Información con el Sistema Legado. 3. Servicios para obtener la información necesaria para la creación de la orden (unidades solicitantes, búsqueda y selección de artículos contemplando las unidades de medidas e índices y proveedores, entre otros). 4. Servicio para la inclusión de la orden en el sistema legado. 5. Servicio para la consulta de orden con su detalle. 130 6. Servicio de cambios de estados de la orden. 7. Implementación de la notificación a través del correo electrónico en base al estado de la orden. 8. Implementación de la distribución de tareas de aprobación de órdenes según la estructura jerárquica organizacional. 9. Ejecución de pruebas de distribución de tareas, creando algunas órdenes de compras para unidades organizacionales diferentes. Contemplando los siguientes escenarios: a. Generadores de órdenes diferentes y Analistas de órdenes diferentes. b. Generadores diferentes mismo departamento y la misma compañía solicitando revisión a su aprobador. c. Generadores de diferentes departamentos y de diferentes compañías solicitando revisión a un mismo aprobador. 3.5.3 Áreas de Foco Dado que el objetivo global de las pruebas es reducir los riesgos inherentes en el sistema, conviene entonces considerar áreas de foco y seleccionar las que minimizaran riesgos. El enfoque de las pruebas se puede definir como los atributos de un sistema que deben ser probados para asegurar que los requerimientos técnicos y funcionales sean logrados. Las áreas de foco para la ejecución de las pruebas al sistema son las siguientes: Áreas foco Descripción Funcionalidad y Flujo de Transacciones Toda la funcionalidad implementada debe estar en concordancia con los documentos de requerimientos funcionales y casos de uso. Verificar la correcta y completa ejecución de una transacción desde que es introducida en el sistema, hasta que termina o sale del sistema. Interfaces Prueba que la conexión al sistema legado se realice correctamente. Manejo de Errores Se verificarán las funciones del sistema ante situaciones fuera de borde (parámetros no válidos y desviaciones de los casos de uso). Esto incluye el despliegue de mensajes de error, definidos y aprobados por el cliente, que proveen un feedback adecuado e instrucciones apropiadas al usuario. Tabla 30. Áreas foco de las pruebas a la solución implementada 131 3.5.4 Estrategias y Niveles de Pruebas Según las mejores prácticas se realizaron dos estrategias de pruebas: pruebas estáticas y dinámicas. Las estáticas corresponden a la verificación de la documentación, prototipo y planes según fue definido con el cliente. En este sentido se examinó en detalle las características de ciertos productos de trabajo contra un conjunto esperado de atributos y estándares, con el fin de detectar defectos en las etapas tempranas del proyecto. Lo que permitió reducir los ciclos de prueba y mejorar la calidad de los entregables. Los productos de trabajo revisados en las pruebas estáticas fueron: • Especificaciones de Requerimientos Funcionales y Procesos • Modelo y especificaciones de Casos de Uso • Especificación de Servicios • Matriz de datos • Casos de prueba 3.5.4.1 Pruebas Dinámicas Las pruebas dinámicas consisten en un proceso de verificación o validación operando sobre un producto de trabajo y observando su comportamiento a entradas cambiantes. Estas pruebas se abordaron en etapas. Cada etapa representa un nivel conocido de integración física y calidad. 3.5.4.1.1 Pruebas Unitarias El nivel de pruebas unitarias se refiere a las pruebas iniciales del código perteneciente a un módulo creado. Se verificaron las especificaciones de programas de la lógica interna del programa o módulo y es validada la lógica. Se basaron en las pruebas iniciales realizadas por el desarrollador, al componente o módulo en desarrollo y que determinan que el mismo puede ser entregado para el despliegue. La tabla 31 describe en detalle las pruebas unitarias realizadas en esta fase al proceso de orden de compras. 132 Objetivos • Verificar los componentes de servicios • Autenticación y Autorización • Verificar Entrega y captura de datos desde los legados • Validar Parámetros y variables de session • Validar Formatos y presentación al usuario • Verificar Prueba de comportamiento de cada componente individual • Verificar Pruebas de retorno de información de los servicios expuestos por el legado y requeridos para el modulo Entradas • Especificación de Diseño Detallado • Documento de Arquitectura • Estrategia pruebas Elementos probados • Servicios de autenticación con el Active Directory y el sistema legado. • Servicios para obtener la información necesaria para la creación de la orden de compra (unidades solicitantes, búsqueda y selección de artículos contemplando las unidades de medidas e índices, proveedores, entre otros). • Servicio para la inclusión de la orden en el sistema legado. • Servicio para la consulta de la orden con su detalle. • Servicio de cambios de estados de la orden de compra Salidas • Resultados y/o evidencias de pruebas unitarias Ejecutante • Desarrollador Tabla 31. Pruebas Unitarias al proceso de orden de compra Resultados: Por la naturaleza de las pruebas unitarias realizadas sobre los componentes y portlets desarrollados, no se cuenta con resultados formales. Constancia de su aplicación y culminación satisfactoria de las mismas se ve reflejada en la liberación de estos componentes para el despliegue en el ambiente de calidad y que se convirtieron en los elementos de prueba del siguiente nivel de pruebas: Pruebas de Integración. 133 3.5.4.1.2 Pruebas Funcionales-Sistema Las pruebas estructurales y funcionales fueron ejecutadas para verificar la funcionalidad y solidez del sistema, su detalle se describe a continuación en la tabla 32. Objetivos • Demostrar que el sistema se cumple con los requerimientos funcionales • Ejecutar los tipos apropiados de pruebas relacionados a Flujo de Transacciones y Manejo de Errores Cuando Después de las pruebas Unitarias Entradas • Requerimientos detallados o Modelo de Casos de Uso. o Matriz de requerimientos o Requerimientos no funcionales o Pantallas � Navegación • Diseño externo de la aplicación • Casos de Prueba Salidas Reporte de Pruebas y evidencias Las pruebas de sistema finalizaron una vez todos los casos de prueba fueron ejecutados exitosamente en la iteración número 3. Ejecutante Pruebas Equipo de Pruebas, en este caso el desarrollador y equipo de pruebas de la empresa. Estas pruebas abarcaron lo siguiente: 1. Pruebas Funcionales sobre los siguientes componentes del sistema: • Módulo para la creación de orden de compra • Módulo para la revisión de orden de compra • Módulo para la modificación de orden de compra • Módulo para la Consulta de orden de compra • Pruebas de trazabilidad de errores • Pruebas de flujo de información a través del proceso • Pruebas de Distribución de Tareas Tabla 32. Pruebas Funcionales-Sistema al proceso de orden de compra A fin de probar el sistema y verificar que cumple con los requerimientos funcionales definidos en las fases iniciales, se definieron los casos de prueba en este nivel de pruebas funcionales y que constituyen la especificación detallada de lo que finalmente fue probado. Los casos de prueba incluyen: • Secuencia normal de los casos de uso. 134 • Secuencias alternativas de los casos de uso. • Validaciones asociadas a los campos de entrada de los formularios. • Validaciones asociadas a las reglas de negocios especificadas en el proceso. • Especificación de estilo e interfaz de usuario. • Manejo de errores funcionales • Manejo de errores de la aplicación En total para el proceso de orden de compras fueron definidos 473 casos de pruebas definidos en un documento de Casos de Pruebas. En acuerdo con la empresa fueron realizadas 3 iteraciones para las pruebas y la resolución de defectos, arrojando los resultados presentados en la figura 45. Para la ejecución de las pruebas se definieron dos tipos de defectos: defectos funcionales, relacionados a defectos encontrados en la aplicación inherentes al proceso de negocio, errores de comunicación con el sistema legado y reglas del negocio. También se definieron defectos de interfaz asociados al estilo y la interfaz de los portlets. De igual manera se definieron casos de mejora que surgieron durante el ciclo de iteraciones de las pruebas funcionales y que representaron mejoras y cambios relacionados a la interacción con los portlets y reglas del negocio del proceso. 135 Figura 45. Resultados de las pruebas funcionales El proceso de negocio definido e implementado no fue objeto de modificaciones durante este nivel de pruebas. Como se puede observar en la figura 45, del total de 473 casos de prueba, fallaron en la iteración 1 un total de 15 casos relacionados con defectos funcionales. Para la iteración 2 fallaron 9 casos de pruebas relacionados a defectos funcionales y finalmente para la 3 iteración no se produjeron defectos relacionados a funcionalidades del proceso. En relación a los casos de prueba fallidos asociados a defectos de interfaz, su ocurrencia, aunque mayor que los defectos funcionales representaban correcciones de baja complejidad. 3.5.4.1.3 Pruebas de aceptación de Usuarios Su objetivo fue el de verificar que el sistema alcanzara los requerimientos de usuario especificados. Las pruebas de aceptación con los usuarios persiguieron como objetivo verificar que el sistema se ejecuta como es esperado por el sponsor y por un usuario final de forma tal que puedan aceptar el sistema. 15 9 0 46 30 12 33 35 9 0 10 20 30 40 50 Iteración 1 Iteración 2 Iteración 3 Casos de Prueba Fallidos (Defectos Funcionales) Casos de Prueba Fallidos (Defectos Interfaz usuario) Mejoras 136 Objetivos Validar a través de las pruebas funcionales del sistema que el sistema alcanza la funcionalidad contemplando los requerimientos de usuario Cuando Después de las Pruebas Funcionales ejecutadas por la empresa y el equipo de prueba Usuario final Los usuarios de la empresa realizaron las pruebas de las siguientes tareas del proceso de orden de compra: 1. “Crear la orden de compra”. 2. “Decisión del generador de la orden (Abierta) 3. “Decisión del generador de la orden (Por Aprobar) 4. “Revisar la orden”. 5. “Cambiar estado de la orden”. 6. “Decisión del Analista” (con la opción de aprobada). 7. Consultar Órdenes. Entradas • Necesidades de negocio y requerimientos detallados • Casos de Prueba Salidas • Reporte de pruebas y/o evidencias • Certificación del usuario para el despliegue en producción Ejecutante Usuarios de la empresa Tabla 33. Pruebas de aceptación de usuarios al proceso de orden de compra Se realizaron 2 iteraciones para las pruebas de aceptación de usuario y resolución de defectos, arrojando los resultados presentados en la figura 46. Figura 46. Resultados de las pruebas de aceptación de usuario 2 0 9 3 5 0 0 2 4 6 8 10 Iteración 1 Iteración 2 Defectos Funcionales Defectos Interfaz usuario Mejoras 137 Como se observa en la figura anterior el grueso de los defectos en este nivel de pruebas recayó en defectos asociados a la interfaz de usuario, por lo que una vez resueltos para la segunda iteración se certifica la solución SOA para el proceso de orden de compras y se realiza el despliegue del proceso en el ambiente de Producción. La interacción de los usuarios funcionales no tuvo resultados drásticos, mostrándose los usuarios con gran habilidad para reconocer los mecanismos de interacción como los botones, mensajes y filtros de selección. El despliegue en producción del sistema final incluyó cada uno de las mejoras funcionales reportadas durante la fase de pruebas. No obstante el flujo del proceso de negocio se mantuvo sin modificaciones. El sistema en el ambiente de producción durante esta fase final de pruebas, mostró un desempeño estable y con un manejo robusto de los errores provocados. 138 Conclusiones Una vez culminado el desarrollo e implementación de la solución SOA-BPM para el proceso de orden de compras, descrito en detalle a lo largo de este Trabajo Especial de Grado, se puede concluir que los objetivos planteados fueron alcanzados cumpliendo cabalmente cada una de las fases descritas en la metodología SOMA aplicada. Adaptando la metodología a nuestro caso se llevaron a cabo las siguientes fases para el desarrollo de la solución inicialmente planteada: Identificación, Especificación y Realización, Implementación y Despliegue. En donde cada una de las fases han tenido como resultado un conjunto de entregables y componentes que conforman la solución y entre ellos tenemos: • Especificación de requerimientos funcionales, presentados como Casos de Uso. • Especificación de servicios del Proceso de orden de compra • Modelo del Proceso de orden de compra. • Especificación de flujo del proceso y flujo de componentes y servicios. • Diseño de los componentes funcionales y de servicios. • Portlets desarrollados en JSF bajo la especificación JSR 286 • Resultados de las pruebas unitarias, funcionales y de aceptación de usuario. La implementación satisfactoria de la solución SOA-BPM para el proceso de orden de compra permitió definir una base inicial para la aplicación de la arquitectura SOA a los demás procesos de la empresa en una siguiente etapa. Desde el punto de vista funcional la solución implementada permitió a la empresa: Mejorar el proceso de orden de compra adecuándose a los requerimientos actuales del negocio y permitiendo la especificación detallada del flujo del proceso. Contar con un conjunto de funcionalidades de negocio que ahora son expuestas como servicios y que podrán ser consumidas y aprovechadas por los demás procesos de negocios de la empresa. La interfaz de usuario presentada a través de los portlets desarrollados, representa un cambio de gran importancia para los usuarios funcionales del proceso (Generadores y Analistas) acostumbrados a una interfaz poco usable. La nueva interfaz Web permite contar con un portal de negocios donde conviven los portlets 139 con funcionalidades diversas que permiten llevar a cabo las actividades relacionadas al ciclo completo del proceso de orden de compra. La adaptación del proceso de negocio y la incorporación de nuevas funcionalidades actualmente es de menor impacto ya que el proceso ahora cuenta con un menor acoplamiento entre sus componentes de servicio, ventaja que da la arquitectura de servicios. En conclusión la solución SOA-BPM implementada sobre Process Server y Portal Server para el proceso de orden de compras le permite a la empresa contar con un proceso adaptable y flexible a las necesidades de cambio del negocio, además de contar con un nuevo paradigma de arquitectura para la implementación de los demás procesos de la empresa. Una solución que involucra una arquitectura SOA en conjunto con BPM, permite alinear los activos tecnológicos de la empresa con los procesos de negocios. Su aplicación en conjunto no es imperativa, pero los resultados y beneficios cuando son implementadas en conjunto son mayores. Aquellas empresas con una clara concepción y especificación de sus procesos de negocios, son candidatos para la implementación de una solución de este tipo. Los beneficios de la solución: un portafolio de servicios para la organización, optimización de los procesos de negocios y reducción del acoplamiento entre los componentes, entre otros, permite que la empresa pueda enfrentar los desafíos del entorno en el que se desempeña. 140 Recomendaciones La implementación de la solución para el proceso de orden de compras, fue un proceso complejo, en donde intervinieron factores que influyeron durante todo el ciclo de desarrollo y de los cuales se pueden exponer las siguientes recomendaciones: • Al definir los tiempos de duración de cada fase se debe tomar en cuenta el nivel de conocimiento de las herramientas de software a utilizar por parte del equipo de desarrolladores. • Importante llevar una gestión de manejo del cambio con el cliente de manera que el impacto al asumir los nuevos esquemas pueda ser menos drástico. • Los ambientes de desarrollo y producción deben tener las mismas características técnicas. Esto disminuye los tiempos en desarrollo y adecuación de componentes. 141 Referencias Arsanjani, R., Ghosh S. (2008). SOMA: A method for developing service-oriented solutions, IBM Systems Journal, Vol. 47 no.3 Shaw M., Garlan D. (1994). An Introduction of Software Architecture. World Scientific Publishing Company, Vol I Ganci J., Barcia R. (2008). Case Study: SOA Design Scenario, IBM Red paper Bergland J., Maguil L. (2009). BPM Solution Implementation Guide, IBM Red paper Rolón E. Marco de trabajo para la Gestión en el Modelado de Procesos de Negocio, Universidad Autónoma de Tamaulipas-FIANS Montilva J., Arapé N. (2003). Desarrollo de software basado en componente, Universidad de los Andes, Publicación de las Actas del IV Congreso de Automatización y Control (CAC03) Bass, L., Clements, P., & Kazman, R. (1998). Software Architecture in practice. Addison-Wesley. ISO/IEC/IEEE (2012), Systems and software engineering- Architecture description. Extraído el 14 de abril de 2012 desde www.iso-architecture.org/ieee-1471/ Reinoso C. (2004). Introducción a la Arquitectura de Software, Universidad de Buenos Aires Hepp M., Hinkelmann K. (2007). Workshop on Semantic Business Process and Product Lifecycle Management, Vol. 251 Gartner (2010). Los cinco principios de Gartner para SOA. Extraído el 13 de noviembre de 2011 desde pensandoensoa.com/2010/04/12/los-cinco-principios-de- gartner-para-soa Blanvalet, S., Bolie, J. (2006). BPEL Cookbook: Best Practices for SOA-based integration and composite applications development. Birmingham - Mumbai: Packt Publishing. Lorenz M. (2006). SOA Best Practices. IBM Certified SOA Solution Designer certification. IBM Red paper 142 Meier J., Hill D. (2009). Microsoft Application Architecture Guide, 2nd Edición, Extraído el 14 de abril de 2012 desde www.msdn.microsoft.com/en- us/library/ee658117.aspx#KeyArchitectureStyles Malinverno P., Hill J. (2007). SOA and BPM are Better Togethe, Gartner Esquivel A. (2009). Tecnologías de Información en función de Servicios en una Arquitectura Orientada a Servicio, presentación GBA-IBM Hernández J. (2006). Arquitectura de software: importancia de su ciclo de vida, Extraído el 11 de noviembre de 2011 desde www.enterate.unam.mx/Articulos/2006/febrero/arquitec.htm Ruzek B., Pratt B. (2010) SOA in practice: Case Study in BPEL and SCA. Extraído el 11 de noviembre de 2011 desde www.ibm.com/developerworks/webservices/library/ws-soacasestudy/ Microsoft (2007) La Arquitectura Orientada a Servicios (SOA) de Microsoft aplicada al mundo real, WhitepaperTEG_SOA-BPM_14_10 para generar PDF Final 1 Universidad Central de Venezuela Facultad de Ciencias Escuela de Computación Sistemas de Información DESARROLLO DE UNA SOLUCIÓN SOA-BPM PARA OPTIMIZAR EL PROCESO DE ORDEN DE COMPRAS DE UNA EMPRESA DEL SECTOR CONSTRUCCIÓN Trabajo Especial de Grado Presentado ante la Ilustre Universidad Central de Venezuela por el Bachiller: Jonatán Israel Sánchez Canache Para optar al título de Licenciado en Computación Tutor: Prof. María Elena Villapol Caracas, Julio de 2012 2 3 Resumen El presente Trabajo Especial de Grado (TEG) comprende el desarrollo y la implementación de una solución enmarcada en una Arquitectura Orientada a Servicios, que incluye la Gestión de Procesos de Negocios sobre el proceso de orden de compras perteneciente al departamento de compras de una empresa del sector construcción. Este proceso, al igual que los demás en la empresa, eran ejecutados sobre un sistema monolítico, poco flexible ante los cambios en los requerimientos de negocio y con una alto acoplamiento entre los componentes que lo conforman, lo que ocasiona que los cambios en el mismo, sean de gran complejidad y su desarrollo implique una inversión considerable en costos y tiempo. En este sentido se propuso y es implementada una solución SOA, que permite en la actualidad, exponer un conjunto de funcionalidades de negocio a través de servicios, con el fin de reducir la dependencia entre los componentes que conforman el proceso de orden de compras. Además el aspecto BPM de la solución permitió que el proceso de negocio haya sido optimizado de acuerdo a los requerimientos de negocios actuales y según las mejores prácticas de la industria. El desarrollo de la solución SOA-BPM, fue realizado de acuerdo a la metodología SOMA. Esta metodología define un conjunto de fases (Identificación, Especificación, Implementación y Pruebas) que conforman el ciclo de desarrollo de la solución. Además define de manera específica las técnicas utilizadas y los entregables y componentes asociados a cada fase. La plataforma sobre la cual fue implementada la solución comprende un Servidor de Procesos sobre el cual se ejecuta el proceso de negocio de orden de compras y un Servidor de Portlets, el cual es el contenedor de los módulos que serán utilizados por los usuarios funcionales del sistema para llevar a cabo sus funciones. Estos servidores forman parte de la suite de herramientas WebSphere de IBM. Palabras Clave: SOA, BPM, Procesos de Negocio, Portal de Negocios y Servicios. 4 Índice Resumen ........................................................................................................................ 3 Introducción ................................................................................................................ 10 CAPÍTULO 1. Problema de Investigación ................................................................. 12 1.1 Planteamiento del Problema ........................................................................ 12 1.2 Objetivos ..................................................................................................... 14 1.2.1 Objetivo General ..................................................................................... 14 1.2.2 Objetivos Específicos .............................................................................. 14 1.3 Importancia y Justificación ......................................................................... 15 CAPÍTULO 2. Marco Conceptual .............................................................................. 16 2.1 Arquitectura de Software ................................................................................... 16 2.1.1 Estilos de Arquitectura de Software ........................................................... 17 2.2.2 Arquitectura Cliente-Servidor..................................................................... 19 2.2.3 Arquitectura en N Capas ............................................................................. 20 2.2.4 Arquitectura Basada en Componentes ........................................................ 22 2.2 Arquitectura Orientada a Servicios (SOA, Service Oriented Architecture) ...... 24 2.2.1 Servicios en SOA ........................................................................................ 26 2.2.2 Arquitectura de referencia SOA ................................................................. 31 2.2.3 Ciclo de Vida de una Solución SOA .......................................................... 36 2.2.4 Estándares SOA .......................................................................................... 39 2.2.5 Facilitadores de una Arquitectura SOA ...................................................... 40 2.2.6 Beneficios de una Arquitectura Orientada a Servicios ............................... 43 2.3 Gestión de Procesos de Negocio (BPM - Business Process Management)...... 45 2.3.1 Ciclo de vida BPM ...................................................................................... 46 2.3.2 BPMN- Business Process Management Notation ...................................... 47 2.4 SOA y BPM ....................................................................................................... 48 2.5 Metodología de Desarrollo de Soluciones Orientadas a Servicio SOMA (Service-Oriented Modeling And Architecture) ...................................................... 49 2.5.1 Fase Modelado de Negocio y Transformación ........................................... 50 5 2.5.2 Fase de Gestión de la Solución ................................................................... 51 2.5.3 Fase de Identificación ................................................................................. 51 2.5.4 Fase de Especificación ................................................................................ 52 2.5.5 Fase de Realización .................................................................................... 52 2.5.6 Fase de Implementación ............................................................................. 52 2.5.7 Fase de Despliegue y Monitoreo ................................................................ 53 CAPÍTULO 3. Marco Aplicativo ................................................................................ 54 3.1 Fase de modelado de negocio y transformación ............................................ 55 3.2 Fase de Identificación .................................................................................... 62 3.3 Fase de Especificación y Realización ............................................................ 88 3.4 Fase de Implementación .............................................................................. 112 3.5 Fase de Despliegue y Pruebas ............................................................... 128 3.5.1 Estrategia de Desarrollo de Pruebas ...................................................... 128 3.5.2 Alcance de las Pruebas .......................................................................... 129 3.5.3 Áreas de Foco ........................................................................................ 130 3.5.4 Estrategias y Niveles de Pruebas .......................................................... 131 Conclusiones ............................................................................................................. 138 Recomendaciones ...................................................................................................... 140 Referencias ................................................................................................................ 141 6 Índice de Figuras Figura 1. Arquitectura cliente-servidor. ...................................................... 20 Figura 2. Arquitectura en N capas............................................................... 21 Figura 3. Arquitectura basada en componentes. ......................................... 23 Figura 4. Modelo conceptual SOA.............................................................. 25 Figura 5. Tres orígenes de servicios ............................................................ 27 Figura 6. Exponer directamente funciones de aplicaciones existentes como servicios....................................................................................................... 28 Figura 7. Exponer indirectamente funciones como servicios ..................... 29 Figura 8. Origen externo de los servicios consumidos ............................... 30 Figura 9. Capas de una arquitectura SOA ................................................... 32 Figura 10. Componentes de Servicio .......................................................... 34 Figura 11. Orquestación de servicios .......................................................... 35 Figura 12. Ciclo de vida SOA ..................................................................... 36 Figura 13. Ciclo de vida BPM..................................................................... 46 Figura 14. Ciclo de vida SOMA ................................................................. 50 Figura 15. Modelo del Proceso de orden de compra en notación BPMN ... 56 Figura 16. Modelo del Proceso de orden de compra en Websphere Business Modeler ....................................................................................................... 57 Figura 17. Modelo del Proceso para el rol de Generador de Orden ............ 58 Figura 18. Modelo del Proceso para el rol de Analista de Orden ............... 59 Figura 19. Arquitectura Funcional de la Solución ...................................... 89 Figura 20. Interfaz Gestión ODC ................................................................ 92 Figura 21. Diagrama de Clases Mensaje de entrada OP01: registrar .......... 95 Figura 22. Diagrama de Clases Mensaje de salida OP01: registrar ........... 96 Figura 23. Diagrama de Clases Mensaje de entrada OP02: cambiarEstado ..................................................................................................................... 98 Figura 24. Diagrama de Clases Mensaje de salida OP02: cambiarEstado .. 99 7 Figura 25. Diagrama de Clases Mensaje de entrada OP03: consultar ...... 101 Figura 26. Diagrama de Clases Mensaje de salida OP03: consultar ........ 102 Figura 27. Diagrama de Clases Mensaje de entrada OP04: listar ............ 104 Figura 28. Diagrama de Clases Mensaje de salida OP04: listar .............. 105 Figura 29. Diagrama de Clases Mensaje de entrada OP05: actualizar .... 106 Figura 30. Diagrama de Clases Mensaje de salida OP05: actualizar ....... 108 Figura 31. Diagrama de Clases Mensaje de entrada OP06: buscarArticulos ................................................................................................................... 109 Figura 32. Diagrama de Clases Mensaje de salida OP06: buscarArticulos ................................................................................................................... 110 Figura 33. Modelo de Componentes ........................................................ 111 Figura 34. Entorno de desarrollo de Websphere Integration Designer .... 113 Figura 35. Diagrama de Ensamblado del Proceso de orden de compra ... 114 Figura 36. Fragmento del BPEL del proceso orden de compras.............. 115 Figura 37. Diagrama de secuencia Crear orden de compra ..................... 118 Figura 38. Diagrama de secuencia Revisar orden de compra .................. 119 Figura 39. Diagrama de secuencia Modificar orden de compra .............. 121 Figura 40. Diagrama de secuencia Consultar orden de compra ............... 122 Figura 41. Diagrama de secuencia Buscar Artículos ............................... 123 Figura 42. Diagrama de secuencia Buscar Proveedor .............................. 124 Figura 43. Instancia de la Arquitectura SOA para el proceso de orden de compra ....................................................................................................... 126 Figura 44. Estrategia de desarrollo de pruebas ........................................ 128 Figura 45. Resultados de las pruebas funcionales .................................... 135 Figura 46. Resultados de las pruebas de aceptación de usuario ............... 136 8 Índice de Tablas Tabla 1. Estilos de Arquitectura de Software.................................................. 18 Tabla 2. Descripción del Proceso de orden de compras.................................. 60 Tabla 3. Descripción de identificadores / abreviaturas. .................................. 63 Tabla 4. Caso de Uso: Registrar orden de compra. ......................................... 69 Tabla 5. Caso de Uso: Generar orden de compra............................................ 71 Tabla 6. Caso de Uso: Trabajar con orden de compra. ................................... 76 Tabla 7. Caso de Uso: Notificar Evento de orden de compra. ........................ 77 Tabla 8. Caso de Uso: Seleccionar Artículos. ................................................. 80 Tabla 9. Caso de Uso: Listar orden de compras.............................................. 81 Tabla 10. Caso de Uso: Consultar orden de compras. .................................... 82 Tabla 11. Caso de Uso: Cambiar estado de orden de compras. ...................... 84 Tabla 12. Caso de Uso: Revertir estado de orden de compras. ....................... 86 Tabla 13. Servicios candidatos para el proceso de orden de compras. ........... 88 Tabla 14. Descripción del Servicio Gestión ODC .......................................... 91 Tabla 15. Operaciones de la Interfaz GestionODC ......................................... 93 Tabla 16. Eventos por operación de Servicio.................................................. 93 Tabla 17. Mensaje de Entrada OP01: registrar ............................................... 94 Tabla 18. Mensaje de Salida OP01: registrar .................................................. 95 Tabla 19. Mensaje de Entrada OP02: cambiarEstado ..................................... 97 Tabla 20. Mensaje de Salida OP02: cambiarEstado ....................................... 99 Tabla 21. Mensaje de Entrada OP03: consultar ............................................ 100 Tabla 22. Mensaje de Salida OP03: consultar .............................................. 101 Tabla 23. Mensaje de Entrada OP04: listar ................................................... 103 Tabla 24. Mensaje de Salida OP04: listar ..................................................... 104 Tabla 25. Mensaje de Entrada OP05: actualizar ........................................... 106 Tabla 26. Mensaje de Salida OP05: actualizar.............................................. 107 Tabla 27. Mensaje de Entrada OP06: buscarArticulos ................................. 109 9 Tabla 28. Mensaje de Salida OP06: buscarArticulos ................................... 110 Tabla 29. Descripción de los portlets pertenecientes al proceso de orden de compras ......................................................................................................... 117 Tabla 30. Áreas foco de las pruebas a la solución implementada ................. 130 Tabla 31. Pruebas Unitarias al proceso de orden de compra ........................ 132 Tabla 32. Pruebas Funcionales-Sistema al proceso de orden de compra ...... 133 Tabla 33. Pruebas de aceptación de usuarios al proceso de orden de compra ....................................................................................................................... 136 10 Introducción En la actualidad las empresas deben adaptarse constantemente a los cambios de un entorno comercial muy variante, con frecuentes cambios en las reglas de negocio a las cuales debe adecuarse de la forma más rápida y con el menor impacto posible en el desempeño de sus funciones diarias. Por lo tanto es imprescindible que la tecnología que soporta sus procesos de negocios, le permita asimilar de manera eficiente los cambios en la forma como ejecutan sus negocios. El Departamento de Compras dentro de cualquier empresa tiene la responsabilidad de la adquisición de los insumos que son indispensables para cumplir con la producción de bienes y servicios. Estos insumos pueden ser materia prima, herramientas, equipos, artículos de oficina, contratación de servicios de terceros, entre otros. Además la compra de estos insumos debe ser realizada en el momento adecuado, a precios razonables con la cantidad y calidad requerida. En el momento en que los distintos departamentos de una empresa identifican las necesidades de insumos, proceden a elaborar una requisición de compra, la cual será generalmente la iniciativa para la creación de una orden de compra. Una orden de compra es un documento generado por el comprador donde realiza una solicitud formal al proveedor de los insumos que requiere. Una vez generada la orden de compra, el proceso continúa a través de una serie de análisis que permitirán tomar una decisión de aprobación, modificación o rechazo de la misma. Finalmente en caso de aprobación se emite oficialmente la orden para realizar el pedido al proveedor respectivo. El presente caso de estudio incluye el proceso de orden de compras de una empresa del sector construcción. Un proceso de negocio el cual está implementado sobre un sistema rígido y de difícil mantenibilidad, que está atado a las limitaciones inherentes del mismo y que por lo tanto evita que los cambios en el proceso de negocio sean factibles de realizar. En este sentido se propone la implementación de una solución SOA (Service Oriented Architecture) y BPM (Business Process Management) para el proceso de orden de compras que aprovechando las funcionalidades del sistema existente, permita optimizar el proceso de negocio, soportado por un paradigma orientado a servicios. El objetivo por consiguiente es la implementación del proceso mencionado 11 bajo una arquitectura SOA, lo cual permitirá que este sea más flexible y adaptable ante los cambios en las reglas de negocio. A lo largo de este trabajo de grado se describirán las actividades realizadas de la siguiente manera: En el Capítulo I: Se inicia describiendo el problema de investigación y la situación actual especificando así las necesidades y los objetivos generales y específicos de la solución. El Capítulo II se refiere al marco conceptual de la arquitectura orientada a servicios donde se expondrán las características que la convierten en la solución adecuada para el tratamiento de los requerimientos del negocio. Además se plantea la metodología de desarrollo SOMA que guiará el desarrollo de la solución. El Capítulo III comprende el marco aplicativo de acuerdo a la metodología SOMA, describiendo cada una de las fases aplicadas y las pruebas realizadas al sistema. Finalmente se presentan las conclusiones, donde se menciona los resultados luego del desarrollo de la solución orientada a servicios aplicada al proceso de negocios. 12 CAPÍTULO 1. Problema de Investigación El proceso de generación de las órdenes de compra, se realiza a través de un único sistema que provee las funcionalidades requeridas por los usuarios y soporta la ejecución de las operaciones diarias que se llevan a cabo en la empresa. En el proceso, los usuarios con el rol de Generador de orden de compra y Analista de orden de compra, ingresan al sistema para realizar el ingreso y revisión de una orden respectivamente. El proceso de orden de compra forma parte de los procesos de negocios que conforman el macro proceso de compras de la empresa y es fundamental en la consecución de los objetivos de negocio de la misma. 1.1 Planteamiento del Problema Actualmente los procesos de la empresa, incluyendo el proceso de orden de compra, están soportados por un sistema legado implementado en el lenguaje de programación RPG (Report Program Generator). Un lenguaje para el desarrollo de aplicaciones de negocios, poderoso y que ha funcionado operacionalmente para la empresa, no obstante dicho sistema, no permite que la empresa cuente con mayor flexibilidad al momento de la gestión de sus procesos de negocios. En este sentido la empresa cuenta con un sistema que si bien ha cumplido hasta ahora con las exigencias operacionales de la empresa, se trata de un sistema monolítico que encapsula una gran cantidad de funcionalidades del negocio y que determina como los procesos son implementados y ejecutados. Además han surgido exigencias y necesidades en los procesos de negocio, luego del desarrollo original de las aplicaciones, que no están soportados por el sistema y que sencillamente son llevadas de forma manual ya que su inclusión implica cambios significativos en lo que ya está construido o implica la construcción de nuevas aplicaciones desde cero, con la complejidad inherente que implica la integración con las funcionalidades existentes. 13 En el caso del proceso de orden de compra no se encuentra claramente definido ni delimitado su alcance real. No existe una forma de gestionar el proceso existente por lo que optimizar el proceso no es una tarea de baja complejidad. Aunado a lo anterior, el sistema no ofrece el uso de requisiciones de compra existentes para el cargado de las órdenes por lo que esta tarea se realiza de forma manual ingresando cada uno de los artículos. Dicha situación ocurre con otras tareas menores que no están soportadas por el sistema. Punto aparte tiene que ver con la interfaz grafica de usuario (GUI) la cual no es intuitiva ni usable por la naturaleza del lenguaje de implementación del sistema. En vista de que los procesos de negocios no se encuentran alineados con el sistema de información actual, por sus limitaciones técnicas y de implementación, los cambios son complejos en implementación y costos. Además no existe forma de analizar y gestionar el desempeño del proceso a fin de optimizarlo e integrarlo con los otros procesos de la empresa y mucho menos existe una forma de obtener información que soporte la toma de decisiones. 14 1.2 Objetivos 1.2.1 Objetivo General Desarrollar una solución enfocada en una Arquitectura Orientada a Servicios (SOA, por sus siglas en inglés) y en la Gestión de los Procesos de Negocios (BPM, por sus siglas en inglés) para la optimización del proceso de orden de compra de una empresa del sector construcción. 1.2.2 Objetivos Específicos El presente trabajo pretende alcanzar los siguientes objetivos específicos: • Identificar y especificar los requerimientos funcionales y no funcionales del proceso de orden de compra. • Elaborar el modelo de proceso de orden de compras en la herramienta de modelado de procesos. • Especificar interfaz de usuarios (matriz de datos y pantallas). • Identificar servicios candidatos. • Elaborar especificación de servicios que conformarán la solución. • Definir especificación técnica de la solución propuesta: Componentes y Servicios. • Implementar los componentes y servicios en el Servidor de Procesos. • Desarrollar los módulos web de la interfaz de usuario del proceso. • Realizar pruebas unitarias, funcionales y de aceptación de usuario a cada uno de los componentes de la solución. 15 1.3 Importancia y Justificación Actualmente los ajustes a los procesos de negocio de la empresa son realizados si son extremadamente necesarios y en la mayoría de las veces se evita tocar el código de las aplicaciones ya que su modificación implica actualizar los muchos componentes dependientes entre sí. En otros casos se opta por ser llevados manualmente por medio de aplicaciones de escritorio como Office, lo cual aumenta el número de repositorios de información que deben ser mantenidos en el tiempo. Por esto es de suma importancia que la ejecución de los procesos de negocio de la empresa deban ser mejorados y que sus funcionalidades puedan ser expuestas de forma independiente, aprovechando por supuesto las funcionalidades que han sido desarrolladas en el sistema legado existente. Una arquitectura de servicios aplicada sobre procesos de negocio optimizados y de eficiente ejecución permite mejorar el tiempo de respuesta de la empresa ante las exigencias de un mercado competitivo en el que se incorporan además, de manera frecuente, cambios en las reglas de negocio. 16 CAPÍTULO 2. Marco Conceptual 2.1 Arquitectura de Software La arquitectura de software representa un marco de referencia que sirve de guía para la construcción de software, representa el nivel más alto en el diseño de un sistema, ya que establece la relación entre los componentes que lo conforman. Shaw M., y Garlan D. (1994) detallan “la arquitectura de software define al sistema en términos de componentes de cómputo y las interacciones entre esos componentes.” Así mismo Bass, Clements, y Kazman (2003) definen la arquitectura de software como “la estructura o estructuras del sistema, que comprende elementos de software, las propiedades externamente visibles de esos elementos, y las relaciones entre ellos”. En este sentido concibiendo la arquitectura de software como la estructura del sistema definida en términos de componentes y sus relaciones, es indispensable tomar en cuenta además el contexto (restricciones y particularidades) y lineamientos de diseño, según lo define la ISO/IEC/IEEE 42010:2011: “la organización fundamental de un sistema formada por sus componentes, las relaciones entre ellos y el contexto en el que se implantarán, y los principios que orientan su diseño y evolución”. La definición de una arquitectura se debe realizar en las fases iniciales del ciclo de desarrollo una vez que han sido identificados los requerimientos y riesgos siendo por lo tanto un artefacto de la actividad de diseño que debe ser dirigida por las necesidades de las personas que forman parte del proyecto: cliente, usuarios finales, departamento de TI, soporte, producción, etc. Una vez definido el concepto de arquitectura de software, es ventajoso definir además los términos que conforman dicha definición como son: los componentes y sus relaciones. Un componente puede entenderse como los bloques de construcción y/o composición que constituyen las partes de un sistema de software. Según Herzum y Sims, “un componente es un artefacto de software autocontenido y claramente identificable que describe ó ejecuta funciones específicas; que tiene, además, una 17 interfaz claramente establecida, una documentación apropiada y un estatus de uso recurrente bien definido”. Clemens Szyperski define componente como “una unidad de composición con interfaces especificadas contractualmente y solamente dependencias explícitas de contexto. Un componente de software puede ser desplegado independientemente y está sujeto a composición por terceros”. Por consiguiente se puede definir un componente como un elemento de software autónomo que implementa una funcionalidad expuesta a través de interfaces claramente definidas. Exponer un componente permite la reutilización además de su composición dentro de un sistema de software. La interacción entre los componentes se define a través de un modelo de componentes, el cual en base a estándares y convenciones, define el esquema de interacción especificando: como los componentes son localizados, los protocolos de comunicación empleados y detallando aspectos de calidad como seguridad, transacciones y alta disponibilidad entre otros. 2.1.1 Estilos de Arquitectura de Software Un estilo arquitectónico, a veces llamado un patrón arquitectónico, es un conjunto de principios, un patrón de grano grueso, que proporciona un marco de trabajo o framework abstracto para una familia de sistemas. Un estilo arquitectónico mejora la partición y promueve la reutilización de diseños, proporcionando soluciones a problemas recurrentes. Proveen un vocabulario común que incluye guías, esquemas de organización y lineamientos para el diseño y organización coherente de la arquitectura del sistema. Shaw M., y Garlan D. (1994) definen estilo arquitectónico como “una familia de sistemas de software en términos de un patrón de organización estructural, que define un vocabulario de componentes y tipos de conectores y un conjunto de restricciones de cómo pueden ser combinados”. Un estilo de arquitectura busca definir: • Un conjunto de componentes que realizan una función requerida por el sistema. 18 • Un conjunto de conectores (elementos de datos o de proceso) que permiten la comunicación, coordinación y cooperación entre los componentes. • Restricciones que definen cómo se integran los componentes para formar el sistema. • Modelos semánticos que permiten a un diseñador comprender las propiedades generales de un sistema. A continuación la tabla 1 resume los principales estilos arquitectónicos, atributos de calidad que propician y la arquitectura específica que lo implementa, según Shaw y Garland (1994) y el grupo de Bass, Clements y Kazman (1996): Estilo Descripción Atributos asociados Implementación Flujo de Datos Estilo apropiado para sistemas que emplean transformaciones de datos en pasos sucesivos donde los datos que ingresa en el sistema fluyen entre los componentes, de uno en uno, hasta que se le asigne un destino final (salida o repositorio). Si el flujo degenera en una única línea de transformación se denomina secuencial batch o en lote. Reutilización y modificabilidad Tubería y filtros Centrado en Datos Apropiado para sistemas que se basan en acceso y actualización de datos compartidos en estructuras de almacenamientos. Proporciona integridad Integrabilidad, escalabilidad y modificabilidad Arquitecturas de Pizarra o Repositorio Llamada y retorno Aplicados generalmente en sistemas de gran escalas. Comprende dos subestilos: el primero el cual establece una jerarquía de control donde componentes principales invocan otros componentes subordinados. Otro enfoque denominado llamada de procedimiento remoto donde se distribuye los diferentes componentes de la arquitectura entre diferentes computadores de la red. Modificabilidad y escalabiilidad Modelo Vista Controlador (MVC), Arquitectura en capas, Arquitectura basada en componentes y Cliente-Servidor Código Móvil Ideal en sistemas donde se busca simular funcionalidades que no son nativas del hardware o software sobre el que se está implementado. Portabilidad Arquitectura de máquinas virtuales Entre semejant es (Peer to- Peer) El estilo se basa en la especificación de procesos independientes o entidades que se comunican a través de mensajes. Además se aprovecha de la superposición de capas que permiten entre otras cosas crear mecanismos y dar soporte para la comunicación entre cada uno de los elementos de la arquitectura. Modificabilidad y escalabilidad Arquitecturas basadas en eventos, Arquitecturas Orientadas a Servicios (SOA) y Arquitecturas basadas en recursos. Tabla 1. Estilos de Arquitectura de Software. 19 La arquitectura de un sistema de software generalmente no se limita a un único estilo, a menudo la solución está conformada por una combinación de estilos arquitectónicos. En la escogencia de una arquitectura de software influyen numerosos factores entre los que se puede mencionar los siguientes: • Escenarios significativos del proyecto. • Atributos de calidad requeridos: seguridad, performance, concurrencia y configuración. • Plataforma existente: sistemas operativos, manejador de bases de datos, sistemas existentes, entre otros. • Arquitecturas previas. • Capacidad y experiencia de los desarrolladores. • Riesgos. A continuación se describirán los estilos arquitectónicos más representativos y vigentes. 2.2.2 Arquitectura Cliente-Servidor El estilo de arquitectura cliente-servidor describe la arquitectura de sistemas distribuidos conectados a través de una red, como se puede ver en la figura 1. Describe la relación entre múltiples clientes y uno o más servidores, donde los clientes inician la comunicación a través de solicitudes y esperan por la respuesta, el servidor usualmente verifica la autenticidad del usuario, procesa el requerimiento y genera el resultado enviándolo al nodo que hizo la solicitud. La comunicación entre cliente y servidor se realiza según protocolos y formatos de datos claramente definidos. 20 Figura 1. Arquitectura cliente-servidor. Fuente. www.usuaris.tinet.cat La arquitectura cliente-servidor es apropiada en los casos en los que se desea gestionar la lógica de negocios o una única interfaz de usuario en un sitio centralizado. Es también ideal en los casos que se desea tener un manejo centralizado de los datos o se quiere exponer funcionalidades a un conjunto de clientes desde un punto único. Entre los beneficios de este estilo arquitectónico se mencionan: • Alto control de la seguridad. • Sencilla administración al centralizar el acceso y actualización de los datos. • Las responsabilidades se distribuyen entre servidores lo que representa fácil mantenimiento. Definida como una arquitectura de n capas. Las limitaciones en cuanto a extensibilidad y escalabilidad son las desventajas de esta arquitectura cuando la lógica de negocios y datos es combinada de manera muy estrecha. En cuanto a la confiabilidad un mayor riesgo está presente si se cuenta con un servidor centralizado, no obstante la arquitectura cliente-servidor de n capas intenta superar dichas limitaciones. 2.2.3 Arquitectura en N Capas Shaw y Garlan (1994) definen la arquitectura de capas como una organización jerárquica donde cada capa proporciona funcionalidades a la capa inmediata superior 21 y a su vez se sirve de los servicios de la capa inmediatamente inferior. En la figura 2 se puede observar el diseño general de una arquitectura en capas. Figura 2. Arquitectura en N capas. Fuente. www.arevalomaria.wordpress.com La arquitectura en capas se caracteriza por la descomposición funcional de las aplicaciones, los componentes del servicio, y en la implementación distribuida, proporcionando una escalabilidad mejorada, disponibilidad, gestión y utilización de recursos. Cada nivel es completamente independiente de todos los niveles, excepto para aquellos inmediatamente por encima y debajo de ella. El nivel enésimo sólo tiene que saber cómo manejar una petición de la capa n+ 1, y transmitir esa solicitud a la capa n-1 (si la hay), y cómo manejar los resultados de la solicitud. La comunicación entre niveles es típicamente asincrónica con el fin de apoyar una mejor escalabilidad. Este estilo es apropiado para situaciones de arquitectura donde la gestión de reglas de negocios y procesos es compleja. También debe tomarse en cuenta cuando ya se dispone de aplicaciones que exponen funcionalidades a los procesos de negocios con interfaces de servicios bien definidas. 22 Entre los beneficios de este estilo arquitectónico tenemos: • Permite la descomposición de un escenario complejo de arquitectura en una secuencia de pasos incrementales. • Permite optimizaciones y refinamiento de las capas de forma natural al ser estas independientes y mantener la definición de las interfaces entre capas adyacentes. El mantenimiento de la arquitectura resulta menos complejo al no afectar “toda” la arquitectura. • Debido a que el despliegue se realiza por capas es fuertemente escalable. • Incrementa la flexibilidad al ser mantenible y escalable de manera independiente. • Propicia la reusabilidad. • Bajo acoplamiento entre capas. Entretanto no todos los problemas de arquitectura pueden representarse como una arquitectura en capas, lo que algunas veces convierte sistemas simples en sistemas no razonablemente complejos. De la misma forma en algunos casos definir las fronteras de funcionalidades entre una capa y la otra puede resultar difícil. 2.2.4 Arquitectura Basada en Componentes La arquitectura basada en componentes se centra en la descomposición en componentes funcionales o lógicos que exponen interfaces de comunicación bien definidas y que incluyen métodos, eventos y propiedades. Un ejemplo de una arquitectura basada en componentes se muestra en la figura 3. Los principios para el diseño de componentes incluyen los siguientes: • Reusabilidad: componentes o aplicaciones. • Reemplazables y extensibles: los componentes pueden ser sustituidos o actualizados para incluir nuevas funcionalidades. • Encapsulamiento: los componentes exponen interfaces que permite a otros componentes usar su f implementación. • Independencia: los componentes dependencia entre sí. El estilo basado en componentes es apropiado cuando se desea crear una arquitectura que permita rápi individuales. Figura 3. Arquitectura basada en componentes. Fuente. www.arevalomaria.wordpress.com Los principios para el diseño de componentes incluyen los siguientes: bilidad: los componentes son diseñados para ser reutiliz componentes o aplicaciones. Reemplazables y extensibles: los componentes pueden ser sustituidos o actualizados para incluir nuevas funcionalidades. Encapsulamiento: los componentes exponen interfaces que permite a otros componentes usar su funcionalidad sin revelar detalles internos de su implementación. Independencia: los componentes deben ser diseñados para dependencia entre sí. El estilo basado en componentes es apropiado cuando se desea crear una arquitectura que permita rápidamente actualizar y reemplazar componentes 23 . Los principios para el diseño de componentes incluyen los siguientes: los componentes son diseñados para ser reutilizados por otros Reemplazables y extensibles: los componentes pueden ser sustituidos o Encapsulamiento: los componentes exponen interfaces que permite a otros uncionalidad sin revelar detalles internos de su diseñados para tener mínima El estilo basado en componentes es apropiado cuando se desea crear una damente actualizar y reemplazar componentes 24 Entre los beneficios de esta arquitectura se encuentran: • Fácil despliegue, al ser los componentes fácilmente reemplazables sin afectar la arquitectura completa. • Fácil desarrollo, la especificación y diseño de las interfaces es realizada sin impactar la arquitectura. • La reusabilidad de los componentes al emplear componentes desarrollados por terceros permite reducir los costos de desarrollo y mantenimiento. 2.2 Arquitectura Orientada a Servicios (SOA, Service Oriented Architecture) El crecimiento de las organizaciones depende en gran medida en la capacidad de adaptación y flexibilidad ante los cambios en el actual mundo competitivo. Responder rápidamente y optimizar los procesos de negocios es factor fundamental para la consecución de los objetivos de la organización. La agilidad de respuesta ante situaciones de cambio puede verse limitada en entornos de Tecnologías de Información (TI) que no pueden responder de forma flexible. Disponibilizar las funcionalidades y recurso de TI de forma general a toda la organización facilita la optimización de los procesos y mejora la agilidad empresarial. La Arquitectura Orientada a Servicios (SOA, Service Oriented Architecture) busca la alineación de los elementos de TI con los objetivos del negocio por medio de la organización general de dichos elementos de manera que sean expuestos como una red de recursos integrados, simplificada y flexible. SOA es un enfoque de diseño de arquitectura cuyo objetivo es integrar las distintas funcionalidades del negocio y exponerlas en forma de servicios. Una arquitectura orientada a servicios busca optimizar los procesos de negocios mejorando el flujo de información y la toma de decisiones, beneficios que le otorgan agilidad y flexibilidad a la organización. IBM la define como: “Una arquitectura de aplicación en la cual todas las funciones se definen como servicios independientes con interfaces invocables bien definidas, que pueden ser llamadas en secuencias definidas para formar procesos de negocios”. (IBM, 2006) De igual forma Gartner define la arquitectura orientada a servicios como “ relación de servicios y consumidores de servicios, ambos suficientemente amplios para representar una función de ne En este sentido se puede definir SOA como un modelo de interacción entre tres partes principales, como se puede observar en la figura 4: • El proveedor de servicios, quien publica la descripción del servicio y provee su implementación. • El consumidor de servicios quien ubica el servicio por medio de un identificador (URI) o directamente en un repositorio de servicios. • Un componente de integración que proporciona y da mantenimiento al repositorio de servicios. Fuente. SOA define un estilo arquitectónico que describe un conjunto de guías y patrones para la creación de servicios alineados a los elementos de TI y negocios. Se vale de estándares de la ind heterogéneas que están soportados por plataformas y protocolos de comunicación igualmente heterogéneas con el fin de proveer una gran red de recursos integrados que pueda ser aprovechada por la o Gartner define la arquitectura orientada a servicios como “ relación de servicios y consumidores de servicios, ambos suficientemente amplios para representar una función de negocios completa”. (Gartner, 1996) En este sentido se puede definir SOA como un modelo de interacción entre tres partes principales, como se puede observar en la figura 4: proveedor de servicios, quien publica la descripción del servicio y provee plementación. El consumidor de servicios quien ubica el servicio por medio de un identificador (URI) o directamente en un repositorio de servicios. Un componente de integración que proporciona y da mantenimiento al repositorio de servicios. Figura 4. Modelo conceptual SOA Fuente. www.ibm.com/developerworks. Modificado SOA define un estilo arquitectónico que describe un conjunto de guías y patrones para la creación de servicios alineados a los elementos de TI y negocios. Se vale de estándares de la industria para lograr la integración de sistemas y aplicaciones heterogéneas que están soportados por plataformas y protocolos de comunicación igualmente heterogéneas con el fin de proveer una gran red de recursos integrados que pueda ser aprovechada por la organización. 25 Gartner define la arquitectura orientada a servicios como “una relación de servicios y consumidores de servicios, ambos suficientemente amplios (Gartner, 1996) En este sentido se puede definir SOA como un modelo de interacción entre tres proveedor de servicios, quien publica la descripción del servicio y provee El consumidor de servicios quien ubica el servicio por medio de un identificador (URI) o directamente en un repositorio de servicios. Un componente de integración que proporciona y da mantenimiento al SOA define un estilo arquitectónico que describe un conjunto de guías y patrones para la creación de servicios alineados a los elementos de TI y negocios. Se vale de ustria para lograr la integración de sistemas y aplicaciones heterogéneas que están soportados por plataformas y protocolos de comunicación igualmente heterogéneas con el fin de proveer una gran red de recursos integrados 26 2.2.1 Servicios en SOA Un servicio en SOA es una función empaquetada como un componente reutilizable que puede ser utilizado por un proceso de negocio. Se trata de un elemento de software “descubrible” con una descripción de servicio que debe ser expuesta indicando el detalle de la funcionalidad ofrecida y especificando el mecanismo de interacción con el mismo. Para IBM los servicios “son funciones accesibles a través de una red por medio de interfaces bien definidas en la capa de servicios”(IBM, 2009) Un servicio puede corresponder a un servicio de negocio cuando realiza una tarea que conlleva a la consecución de objetivos de los procesos de negocios. Se habla de servicios de aplicación cuando son servicios cuya lógica se orienta a dar soporte a los servicios de negocios y están acotados al contexto de la aplicación. En una arquitectura SOA los servicios son desarrollados de manera que sean independientes, autónomos, reusables y con capacidad para interconectarse adecuadamente con el fin de integrarse fácilmente en aplicaciones complejas cuando la dinámica operacional de la organización así lo requiera. Para Thomas Erl (2004) los servicios desarrollados bajo una arquitectura orientada a servicios deben satisfacer los siguientes principios: • Reusabilidad: los servicios deben ser diseñados y desarrollados pensando en la reutilización • Deben proporcionar un contrato formal: todo servicio debe proporcionar un contrato donde se especifique su especificación: nombre del servicio, mecanismo de acceso, operaciones que ofrece, forma de invocar las operaciones en términos de protocolos y direcciones, mensajes de entrada y salida y tipos de datos. • Bajo acoplamiento: Los servicios deben ser independientes entre ellos. • Composición: Los servicios deben ser desarrollados con miras a lograr su composición con otros, a fin de formar servicios de mayor nivel. • Autónomos: cada servicio debe tener su propio entorno de ejecución. • Sin estado: los servicios no deben almacenar ningún tipo de información, solo debe contener la lógica de su implementación. • Descubribles: los servicios deben permitir ser descubiertos a fin de evitar la creación de servicios con funcionalidades similares. La Orquestación y Coreografía de servicios son utilizadas para integración de servicios. La orquestación de servicios se basa en un modelo centralizado donde la comunicación entre servicios no se realiza directamente sino a través de una entidad encargada de la lógica de interacción. El lenguaje BPEL ( Language) permite definir la lógica de interacción entre servicios web, el motor de ejecución BPEL es el encargado de la orquestación. La coreografía de servicios se basa en un modelo distribuido donde la interacción entre servicios es realizada sin la intervención de una entidad rectora. Con la coreografía se establece la forma en que los participantes se comunican entre pares especificando los protocolos usados para el intercambio de mensajes. Dicha forma de interacción debe ser vi coreografía. Según IBM existen 3 orígenes principales para servicios en SOA, como se puede observar en la figura 5: Fuente. El enfoque recomendado es comenzar comparando lo que se necesita y lo que se tiene, se pueden crear servicios desde cero, comprarlos o adquirirlos de terceros o habilitar servicios presentes en el ambiente tecnológico que se dispone. A continuación se detallaran estos enfoques. Descubribles: los servicios deben permitir ser descubiertos a fin de evitar la creación de servicios con funcionalidades similares. La Orquestación y Coreografía de servicios son utilizadas para integración de servicios. La orquestación de servicios se basa en un modelo centralizado donde la comunicación entre servicios no se realiza directamente sino a través de una entidad encargada de la lógica de interacción. El lenguaje BPEL (Business Process Execution ) permite definir la lógica de interacción entre servicios web, el motor de ejecución BPEL es el encargado de la orquestación. La coreografía de servicios se basa en un modelo distribuido donde la interacción es realizada sin la intervención de una entidad rectora. Con la coreografía se establece la forma en que los participantes se comunican entre pares especificando los protocolos usados para el intercambio de mensajes. Dicha forma de interacción debe ser visible para todos los participantes que forman parte de la Según IBM existen 3 orígenes principales para servicios en SOA, como se puede observar en la figura 5: Figura 5. Tres orígenes de servicios Fuente. www.ibm.com/developerworks. Modificado El enfoque recomendado es comenzar comparando lo que se necesita y lo que se tiene, se pueden crear servicios desde cero, comprarlos o adquirirlos de terceros o habilitar servicios presentes en el ambiente tecnológico que se dispone. A detallaran estos enfoques. 27 Descubribles: los servicios deben permitir ser descubiertos a fin de evitar la La Orquestación y Coreografía de servicios son utilizadas para lograr la La orquestación de servicios se basa en un modelo centralizado donde la comunicación entre servicios no se realiza directamente sino a través de una entidad iness Process Execution ) permite definir la lógica de interacción entre servicios web, el motor de La coreografía de servicios se basa en un modelo distribuido donde la interacción es realizada sin la intervención de una entidad rectora. Con la coreografía se establece la forma en que los participantes se comunican entre pares especificando los protocolos usados para el intercambio de mensajes. Dicha forma de sible para todos los participantes que forman parte de la Según IBM existen 3 orígenes principales para servicios en SOA, como se puede El enfoque recomendado es comenzar comparando lo que se necesita y lo que se tiene, se pueden crear servicios desde cero, comprarlos o adquirirlos de terceros o habilitar servicios presentes en el ambiente tecnológico que se dispone. A 28 2.2.1.1 Habilitar Servicios de Activos Existentes SOA no se trata de quitar y reemplazar, la idea es identificar tareas de negocio significativas y de alto valor en los sistemas, aplicaciones y activos existentes de manera de aplicarles las técnicas y principios SOA para exponerlas como servicios. De esta manera se evita la inversión en nuevas tecnologías, se acelera significativamente la adopción SOA y reduce los riesgos del proyecto. Este enfoque generalmente cuenta con un mayor grado de profundidad en el conocimiento de la lógica del negocio, en relación a un enfoque de construcción de servicios desde cero. Por lo tanto es una buena opción cuando se desea aprovechar las funcionalidades existentes en los sistemas de TI con los que dispone la organización. En este sentido se definen dos patrones arquitectónicos para habilitar servicios de activos existentes: • Exponer directamente funciones de aplicaciones existentes como servicios. • Exponer indirectamente funciones como componentes de servicio. Exponer directamente funciones de aplicaciones existentes como servicios, se centra en la exposición de funcionalidades de aplicaciones existentes como servicios con la salvedad de que las funcionalidades no son mejoradas, sencillamente son expuestas usando tecnología de servicios, como se observa en la figura 6. Figura 6. Exponer directamente funciones de aplicaciones existentes como servicios Fuente. www.redbooks.ibm.com. Modificado 29 Se trata de un escenario sencillo que no requiere inversión en nueva tecnología ya que los servicios corren en la misma plataforma que soporta a la aplicación. Además los servicios desarrollados bajo este patrón no requieren un análisis extenso en la especificación de las interfaces debido a que el legado que lo soporta ya las ha definido, lo que reduce los tiempos de implementación del proyecto. Este patrón es útil cuando los servicios expuestos son accedidos por diversos sistemas y aplicaciones o diferentes canales de acceso. El segundo patrón para habilitar servicios tomando en cuenta los activos existentes se trata de exponer indirectamente funciones como componentes de servicio. Este patrón proporciona una capa de software intermedia entre la funcionalidad de la aplicación y el servicio, como se observa en la figura 7. En esta capa intermedia se definen componentes de software que proporcionan una capa de abstracción entre la implementación del servicio y la ejecución real del servicio. Figura 7. Exponer indirectamente funciones como servicios Fuente. www.redbooks.ibm.com. Modificado En este caso la especificación de las interfaces de los servicios no necesariamente debe ser la misma definida en las aplicaciones existentes. Además la definición de un componente de servicios permite encapsular el mecanismo de acceso a sistemas operativos diferentes. Al igual que el patrón anterior permite mantener alineadas de forma más estrecha las interfaces de servicios con el negocio. 30 Debido a que involucra el diseño de un componente intermedio, requiere un tiempo adicional y un diseño de mayor complejidad en relación al patrón de exposición directa 2.2.2.2 Consumir Servicios Provistos por Terceros Este enfoque el origen de los servicios es proveedores externos a la organización. En este caso una vez definido claramente los requisitos funcionales, las siguientes acciones a realizar será la de establecer los criterios para la selección de los proveedores adecuados, tomando en cuenta aspectos como la madurez del proveedor, aplicación de estándares en las implementaciones ofrecidas, entre otras. La aplicación de este enfoque puede observarse en la figura 8. Figura 8. Origen externo de los servicios consumidos Fuente. www.redbooks.ibm.com. Modificado Con este enfoque se evita el tiempo de desarrollo de los servicios y por lo tanto el ciclo de desarrollo SOA tiene a ser más reducido. 31 2.2.2.3 Creación de Servicios desde Cero En este caso se trata sencillamente de realizar la definición, diseño y desarrollo de los servicios desde cero. Por supuesto esta alternativa requiere un mayor tiempo para la implantación de un proyecto SOA, no obstante su gran ventaja radica en que el diseño de los servicios se basa con gran apego en los requerimientos futuros que tiene el negocio. Los servicios son diseñados enteramente como la organización lo desea. Es una alternativa que implica mayor costo en relación al enfoque de habilitar servicios a partir de activos existentes y que requiere con gran énfasis de una metodología que guie el ciclo de desarrollo, como por ejemplo SOMA. Los enfoques mencionados anteriormente no son excluyentes entre sí, la escogencia de uno u otro dependerá de las características particulares de cada empresa y el alcance del proyecto SOA a implementar, siendo la más común, la combinación de los enfoques de manera de obtener mayores beneficios y alinear los elementos de TI con los objetivos del negocio. 2.2.2 Arquitectura de referencia SOA En este apartado se va a presentar la arquitectura de referencia en la que se fundamenta una arquitectura orientada a servicios, la cual proporciona una abstracción de alto nivel segmentado en capas. (Ver figura 9). Detrás de esta arquitectura de capas lógicas se tiene un metamodelo que consiste en capas, bloques arquitectónicos de construcción, patrones de interacción, y decisiones arquitectónicas que servirán de guías al arquitecto para la creación de la arquitectura. 32 Figura 9. Capas de una arquitectura SOA Fuente. Ghosh S. (2008). Modificado La arquitectura de referencia SOA representa un bosquejo de la arquitectura a implementar en la organización y está basada en la especificación de los bloques de construcción SOA: servicios, componentes y flujos que combinados apoyan los procesos de negocio y los objetivos de la empresa. En esta arquitectura de capas lógicas, una capa no solo depende de la capa inferior sino que puede acceder directamente a capas inferiores dentro de las restricciones de la arquitectura SOA, por ejemplo un consumidor puede acceder a la capa de procesos de negocio o consumir directamente servicios de la capa de servicios, como se pudo observar en el apartado de orígenes de servicios. En esta arquitectura se asume lo siguiente: • Existen una serie de requisitos, llamados requisitos de servicio que en conjunto determinan los objetivos de la arquitectura SOA, y que están definidos en base a requisitos funcionales y no funcionales. • Un requisito de servicio es la capacidad de documentar lo que se desea que un servicio produzca. 33 • El cumplimiento de un requisito de servicio se puede lograr por medio de las capacidades de una sola capa o la combinación de varias capas de la arquitectura de referencia. • La identificación de las necesidades del servicio y la asignación de los requisitos para cada una de las capas de la pila de soluciones es un aspecto clave en el desarrollo de una arquitectura SOA para la empresa. A continuación se describirán cada una de las capas que conforman la arquitectura SOA. 2.2.2.1 Capa 1. Sistemas Operacionales Esta capa consiste de los activos e infraestructura tecnológica que forman parte del ambiente TI que soporta las actividades del negocio. Está conformada por los sistemas de software existentes en la empresa y que permitirán ser aprovechados en la implementación de la arquitectura SOA. En esta capa se encuentran: • Sistemas y aplicaciones legadas. • Aplicaciones monolíticas customizadas. • Sistemas de procesamiento de transacciones. • Bases de datos. • Aplicaciones y soluciones empaquetadas como CRM, ERP, SAP y soluciones Oracle entre otras. 2.2.2.2 Capa 2. Capa de Componentes de Servicios Esta capa contiene los componentes de servicios que proporcionan la implementación de los mismos. Se maneja tanto la calidad de los servicios como su funcionalidad. La capa de componentes de servicio se ajusta a los contratos de servicios definidos en la capa de servicio, lo que garantiza la alineación de la implementación con la descripción del servicio. Los componentes definidos en esta capa permiten lograr un bajo acoplamiento a través del ocultamiento de los detalles de implementación a los consumidores del servicio, como puede observarse en la figura 10, donde el servicio B confía en la descripción de servicios y el servicio A sirve de fachada a la implementación del servicio Fuente. 2.2.2.3 Capa 3. Capa de Servicios Esta capa está conformada por todos los servicios de negocios seleccionados para ser expuestos. Provee una especificación detall consumidores poder invocar la funcionalidad expuesta. Los servicios en esta capa pueden ser versiones de otros, además puede ser descubribles o ser estáticos y ser invocados o coreografiados para formar servicio compuestos. La capa específicos de unidades de negocio, y componentes específicos del proyecto que exteriorizan sus interfaces en forma de descripciones de servicios. De esta forma los componentes proporcionan servicios a través de sus interfaces. en forma aislada (atómica) o servicios compuestos. La capa de servicios en resumen contiene los contratos de servicio que unen al proveedor y consumidor de servicios. Los ser independientemente de la aplicación y el transporte, lo que permite a los servicios ser expuestos alrededor de múltiples canales de acceso. Los componentes definidos en esta capa permiten lograr un bajo acoplamiento a través del ocultamiento de los detalles de implementación a los consumidores del servicio, como puede observarse en la figura 10, donde el servicio B confía en la descripción de servicios y el servicio A sirve de fachada a la implementación del Figura 10. Componentes de Servicio Fuente. www.ibm.com/developerworks. Modificado Capa 3. Capa de Servicios Esta capa está conformada por todos los servicios de negocios seleccionados para ser expuestos. Provee una especificación detallada de cada servicio que permite a los consumidores poder invocar la funcionalidad expuesta. Los servicios en esta capa pueden ser versiones de otros, además puede ser descubribles o ser estáticos y ser invocados o coreografiados para formar servicio La capa también tiene componentes a escala empresarial, componentes específicos de unidades de negocio, y componentes específicos del proyecto que exteriorizan sus interfaces en forma de descripciones de servicios. De esta forma los es proporcionan servicios a través de sus interfaces. Los servicios existen en forma aislada (atómica) o servicios compuestos. La capa de servicios en resumen contiene los contratos de servicio que unen al proveedor y consumidor de servicios. Los servicios son accedidos independientemente de la aplicación y el transporte, lo que permite a los servicios ser expuestos alrededor de múltiples canales de acceso. 34 Los componentes definidos en esta capa permiten lograr un bajo acoplamiento a través del ocultamiento de los detalles de implementación a los consumidores del servicio, como puede observarse en la figura 10, donde el servicio B confía en la descripción de servicios y el servicio A sirve de fachada a la implementación del Esta capa está conformada por todos los servicios de negocios seleccionados para ada de cada servicio que permite a los Los servicios en esta capa pueden ser versiones de otros, además puede ser descubribles o ser estáticos y ser invocados o coreografiados para formar servicios también tiene componentes a escala empresarial, componentes específicos de unidades de negocio, y componentes específicos del proyecto que exteriorizan sus interfaces en forma de descripciones de servicios. De esta forma los Los servicios existen La capa de servicios en resumen contiene los contratos de servicio que unen al vicios son accedidos independientemente de la aplicación y el transporte, lo que permite a los servicios ser 35 2.2.2.4 Capa 4. Capa de Procesos de Negocios En esta capa se definen la composición y coreografía de servicios expuestos en la capa de servicios. Los servicios se combinan en flujos a través de la orquestación, composición y coreografía para formar aplicaciones de servicios. Los procesos de negocio contienen la lógica necesaria para determinar la secuencia de servicios que deben ser invocados y ejecutados (ver figura 11). Los servicios invocados pueden ser servicios simples o servicios compuestos. Figura 11. Orquestación de servicios Fuente. www.ibm.com/developerworks. Modificado Esta capa incluye la representación de los procesos de negocio y métodos de composición representados en una secuencia lógica la cual se encuentra alineada con los objetivos de negocio, además incluye el control del intercambio de información para permitir la interacción entre servicios y los procesos. En esta capa se agrega también el motor de ejecución de los procesos de negocio. El ciclo de vida para la orquestación y coreografía se gestiona igualmente en esta capa. 36 2.2.2.5 Capa 5. Capa de Consumidores o Presentación Esta capa representa las funcionalidades necesarias para la creación de la interfaz o front-end de los procesos de negocios, por medio del uso de tecnologías como portlets y widgets. La adopción de patrones y estándares front-end fomenta la creación de bloques de construcción que pueden ser reutilizados y por lo tanto disminuye el tiempo de desarrollo, complejidad y costos. 2.2.3 Ciclo de Vida de una Solución SOA El ciclo de vida del desarrollo de una solución SOA según IBM, está conformada por cuatro fases: Modelado, Ensamblado, Despliegue y Monitoreo, estas fases iterativas, están compuestas por actividades claramente definidas que deben cumplirse para alcanzar los objetivos del proyecto SOA. (Ver figura 12.) Figura 12. Ciclo de vida SOA Fuente. www.ibm.com 37 Aún cuando el detalle de las actividades a ejecutar en cada fase, dependerá de factores como la metodología adoptada para el desarrollo de la solución SOA, los patrones seleccionados para el origen y creación de servicios, tiempo de implementación y costos entre otros, se describirá en forma general las actividades que tienen a lugar en cada una de las fases del ciclo de vida SOA. 2.2.3.1 Fase de Modelado El propósito de esta fase es la obtención de los requerimientos de negocio y el diseño de los procesos de negocio que cumplirán con los objetivos de la empresa. En esta fase el objetivo principal es la optimización de los procesos de negocio combinando los activos nuevos y existentes que forman parte el ambiente de TI. Esta fase inicial es de suma importancia en el ciclo de vida de la implementación de una arquitectura SOA, debido a que esta fase determina (en un enfoque top-down) los requerimientos de componentes, servicios, infraestructura tecnológica y estándares que van a ser empleados durante la implementación de la arquitectura. Importante además, que la ejecución de esta fase permite el acercamiento entre el personal de TI y de procesos de la empresa, ya que intervienen roles como el del analista funcional de procesos y los analista de TI, quienes en forma colaborativa deberán guiar el diseño y modelado de los procesos de negocio. Entre las actividades o tareas presentes en esta fase se encuentran: • Obtención de requerimientos funcionales y no funcionales. • Diseño y modelado de los procesos de negocio, haciendo énfasis en la optimización. • Inventario de activos existentes de TI: aplicaciones y sistemas • Simulación de procesos. • Definir la metodología para la implementación de la arquitectura orientada a servicios. • Determinar los patrones de diseño y creación de los servicios. En esta fase juega un papel importante la adopción de mejores prácticas, patrones, estandarización de componentes de modelado, y la selección de las estrategias y artefactos adecuados para la obtención de los requerimientos. 38 2.2.3.2 Fase de Ensamblado La fase de ensamblado está dedicada a implementar las actividades del proceso de negocio, ya verificado en la etapa anterior, en su estado de Modelo de Documentación. Esta etapa está encargada de constituir el proceso de negocio a partir del diseño de los componentes que lo soportan, abarcando su implementación, por ejemplo en el Lenguaje de Ejecución de Procesos de Negocio (BPEL, por sus siglas en inglés). La implementación del proceso, los componentes y elementos indicados incluyen tareas de verificación de funcionalidad y pruebas. Los roles que intervienen en esta fase son la del arquitecto de software, desarrolladores de aplicación y desarrolladores de integración. Esta fase incluye la definición y especificación de los servicios. Se determina el portafolio de servicios que dará soporte a los procesos de negocios definidos en la fase anterior. El desarrollo de servicios permite al arquitecto de software modelar los datos, flujo funcional e interacción entre sistemas y procesos. Los desarrolladores de integración utilizan herramientas especializadas para la interacción entre los procesos de negocio y los servicios. Entre otras las actividades en esta fase son las siguientes: • Definición de portafolio de servicios a desarrollar. • Diseño y especificación de servicios: contratos y firmas de servicios. • Establecer los mecanismos de interacción entre servicios y sistemas existentes de la empresa. • Realizar pruebas de código. Para una solución end to end que implementa los procesos de negocio como una orquestación de servicios, este escenario puede ser interpretado como el diseño de servicios y el desarrollo, el ensamblado representa la coreografía de estos servicios en el contexto de los procesos de negocio. 39 2.2.3.3 Fase de Despliegue Durante esta fase las aplicaciones SOA son configuradas según las necesidades específicas del negocio y son desplegadas generalmente en el servidor de aplicaciones. Esta fase da soporte a los procesos de negocios y procesos con interacciones humanas dentro de la automatización del sistema. Los activos: componentes, servicios y procesos son desplegados en un ambiente integrado y seguro, aprovechando funcionalidades que soportan la integración con tareas que requieren la interacción de usuarios, procesos y flujo de información. Este nivel de integración asegura que todos los elementos esenciales de la empresa están conectados y trabajan juntos. 2.2.3.4 Fase de Monitoreo o Gestión El despliegue de los servicios necesita ser monitoreado y gestionado. Esta fase permite el monitoreo de los procesos de negocio, con el objeto de una mejora continua de cara a la optimización de los procesos desplegados. La fase de monitoreo involucra el mantenimiento y disponibilidad de los servicios, evaluación de los tiempos de respuesta, así como la gestión de todos los activos que forman parte de la infraestructura SOA. La visualización en tiempo real de la ejecución de los procesos permite obtener referencias estadísticas no solo de los aspectos técnicos de los procesos implementados, sino también los indicadores claves de performance que facilitan la toma de decisiones con miras a una mayor alineación de los procesos y los objetivos de la empresa. 2.2.4 Estándares SOA La arquitectura orientada a servicios se basa en estándares OASIS y W3C de la industria para la especificación de sus componentes y servicios, entre ellos enunciamos: 40 • Web Services Protocol Stack: Así se denomina al conjunto de servicios y protocolos de los servicios Web. • XML (Extensible Markup Language): Es el formato estándar para los datos que se vayan a intercambiar. • SOAP (Simple Object Access Protocol) o XML-RPC (XML Remote Procedure Call): Protocolos sobre los que se establece el intercambio. • WSDL (Web Services Description Language): Es el lenguaje de la interfaz pública para los servicios Web. Es una descripción basada en XML de los requisitos funcionales necesarios para establecer una comunicación con los servicios Web. • UDDI (Universal Description, Discovery and Integration): Protocolo para publicar la información de los servicios Web. Permite comprobar qué servicios web están disponibles. • WS-Security (Web Service Security): Protocolo de seguridad aceptado como estándar por OASIS (Organization for the Advancement of Structured Information Standards). Garantiza la autenticación de los actores y la confidencialidad de los mensajes enviados. 2.2.5 Facilitadores de una Arquitectura SOA Existen facilitadores que permiten desde el punto de vista tecnológico la implantación de una arquitectura orientada a servicios (SOA), según un estudio realizado por el Centro de Alto Rendimiento Accenture (2010) se pueden incluir ciertos facilitadores para apoyar el proceso de adopción de una arquitectura orientada a servicios. 2.2.5.1 Gestión de Procesos de Negocio (BPM - Business Process Management) Constituye el principal facilitador, que permite el diseño, especificación y modelado de los procesos de negocio. BPM es una disciplina de gestión que busca la optimización de los procesos y que junto con SOA pueden ser concebidas como disciplinas complementarias. 41 Permite la orquestación de los servicios en una capa de procesos de negocio. BPM combina una visión centrada en procesos y de integración de funcionalidades existentes, tomando en cuenta reglas de negocio, métricas, kpi y los elementos de TI que intervienen. Es fundamental su adopción cuando se desea implantar una arquitectura como SOA ya que permite una estrecha definición de los procesos y la definición de la arquitectura del sistema. 2.2.5.2 Tecnología de Servicios Web Este facilitador tecnológico permite encapsular los servicios en un estándar ampliamente aceptado por fabricantes y proveedores. Aun cuando SOA no implica el uso de servicios Web, estos son su implementación más habitual. Los servicios Web son aplicaciones que utilizan estándares para el transporte, codificación y protocolo de intercambio de información. Su adopción es ventajosa cuando se implanta una arquitectura basada en estándares como SOA. El conjunto de estándares de comunicación utilizados por servicios Web incluye, XML para la representación de datos, SOAP (Simple Object Access Protocol) para el intercambio de datos y el lenguaje WSDL (Web Services Description Language) para describir las funcionalidades de un servicio Web. Existen más especificaciones, a las que se denomina genéricamente como la arquitectura WS-*, que definen distintas funcionalidades para el descubrimiento de servicios Web, gestión de eventos, archivos adjuntos, seguridad, gestión y fiabilidad en el intercambio de mensajes y transacciones. 2.2.5.3 El Bus Empresarial de Servicios (ESB - Enterprise Service Bus) Es una infraestructura de conectividad flexible para integrar aplicaciones y servicios, diseñado para permitir el desarrollo de arquitecturas orientadas a servicios (SOA). 42 Un ESB entrega conectividad e integración de soluciones basada en estándares, que permite a los usuarios crear y desplegar interacciones rápidas y sencillas entre las aplicaciones y servicios, con una cantidad y una complejidad reducida de interfaces. El bus de servicios Facilita la conexión entre sistemas y servicios heterogéneos. Proporciona un elemento de integración que en una arquitectura SOA, permitirá exponer las funcionalidades en forma de servicios, encargándose de la comunicación entre pares, transformación de los formatos de mensajes, y aportando criterios de calidad de servicio como disponibilidad, garantía de entrega, encapsulación y seguridad. 2.2.5.4 Monitoreo de la Actividad de Negocio (BAM - Business Activity Monitoring) El monitoreo en tiempo real de la ejecución de los procesos, permite obtener métricas y estadísticas del rendimiento de los procesos a fin de optimizar su desempeño. Su aplicación dentro de la arquitectura puede ser prescindible y dependerá del alcance del proyecto SOA 2.2.5.5 Repositorio de Servicios Aunque la implementación de un repositorio de servicios no es imprescindible representa un gran activo en una arquitectura de servicios, ya que permite mantener un catalogo de servicios que puede ser compartido por los distintos departamentos de la empresa. Un repositorio de servicios permite mantener un inventario de las funcionalidades expuestas y que disminuye los tiempos de desarrollo al evitar crear servicios con funcionalidades similares. 43 2.2.6 Beneficios de una Arquitectura Orientada a Servicios Podemos dividir los beneficios de la arquitectura orientada a servicios en dos niveles distintos: el nivel del usuario funcional u organizacional y el nivel de la organización de TI, en base a esta división serán mencionadas los beneficios que aporta a la empresa la adopción de una arquitectura SOA A nivel del usuario funcional se tiene: Permite la documentación de los procesos de negocios que ejecuta la empresa. Es importante que los actores principales de los procesos conozcan la secuencia de actividades que se llevan a cabo para la consecución de los objetivos de la empresa, además de visualizar las responsabilidades inherentes a cada rol. Apoya la toma de decisiones. Al integrar el acceso a los servicios y la información del negocio en aplicaciones dinámicas compuestas (portal de servicios), los usuarios disponen de información oportuna y actualizada lo que permite mejorar la toma de decisiones. Obtener la información de forma rápida y exacta permite a la empresa reaccionar de forma más ágil ante situaciones de cambio. Mejora la productividad de los empleados. Al contar con un acceso oportuno a la información, los empleados pueden mejorar su desempeño y enfocarse en las actividades que representan valor para la empresa. Permite alinear y acercar las aéreas de negocio y tecnología. Permite que ambas aéreas puedan comunicarse por medio de un lenguaje común: el de procesos. El trabajo colaborativo entre las dos áreas es vital en una implantación SOA, la de negocio en la definición de los procesos según la estrategia y objetivos de la empresa y la de tecnología en la implementación de los procesos definidos haciendo uso de la infraestructura tecnología existente. Mejora la agilidad y flexibilidad de las organizaciones. La aplicación de estándares, que permiten la reutilización de componentes, el bajo acoplamiento de los mismos, aunado a un enfoque de desarrollo de componentes que piensa en la integración de servicios, permite que la organización pueda adaptarse rápidamente a los problemas y situaciones de cambio sin impactar totalmente las capacidades de sus sistemas de software. 44 Desde el punto de vista de TI, se puede mencionar: Aplicaciones más productivas y flexibles. El enfoque arquitectónico SOA permite aprovechar los sistemas y aplicaciones existentes en la empresa, potenciando sus funcionalidades por medio de la integración de las mismas. El utilizar servicios le aporta a la organización independencia de las plataformas y lenguajes de programación. Desarrollo de aplicaciones más rápido y económico. La reutilización y bajo acoplamiento de componentes y servicios que proporciona una arquitectura basada en estándares como SOA permite disponer de un repositorio de funcionalidades que puede ser compartido por toda la organización. Lo que redunda en menos tiempo de desarrollo de nuevas funcionalidades y por ende en el tiempo de desarrollo. Permite aislar los sistemas frente a cambios generados en otras áreas. La modularidad que proporciona la organización en términos de servicios disminuye notablemente el impacto de los cambios que sean requeridos. Aplicaciones más seguras y versionables. En SOA se accede a los servicios no a las aplicaciones, por lo tanto la generación de nuevas funcionalidades, esta soportada por una infraestructura común que permite desarrollar nuevos servicios seguros y gestionables. La arquitectura incluye mecanismo de autorización y autenticación robustos en los servicios, lo que provee un alto nivel de seguridad. 45 2.3 Gestión de Procesos de Negocio (BPM - Business Process Management) Un proceso de negocio puede definirse como un conjunto de tareas o actividades ejecutadas secuencialmente con el fin de satisfacer requerimientos del negocio. Los procesos de negocio no solo cumplen con la solución de problemas operacionales y funcionales, sino que su ejecución agrega valor al negocio. La Gestión de Procesos de Negocios es una disciplina que busca la automatización y optimización de los procesos de negocios, para lograrlo se vale de la identificación, diseño, ejecución, monitoreo, documentación y medición de los procesos de negocio que la organización implementa. Por otro lado Weske (2010) la define: “La gestión de procesos de negocio incluye conceptos, métodos y técnicas que apoyan el proceso de diseño, administración, configuración, promoción y análisis de los procesos de negocios”. La optimización de procesos toma en cuenta los procesos manuales y automatizados que se llevan a cabo. BPM no es una tecnología, más bien se trata de un enfoque que se apoya de herramientas de software y tecnológicas para permitir a la empresa contar con procesos claramente definidos y alineados con los elementos de TI y objetivos del negocio. Existen en el mercado numerosas herramientas de software y tecnologías que contribuyen a: • Modelar procesos • Simular procesos • Definir requerimientos • Creación de workflows de sistemas • Desarrollar aplicación de integración • Monitorear procesos • Identificar servicios de negocios reusables La finalidad de un BPM es descomponer la actividad global de una empresa u organización en un conjunto de ‘Procesos’, las cuales son entidades de funcionamiento relativamente independiente, aunque conectadas con las demás, que pueden ser analizadas con detalle y cuyas acciones repetitivas puedan ser 46 automatizadas, tanto en lo concerniente a los sistemas como a las personas que intervienen, para optimizar tiempos, oportunidades y costos, sin perder la capacidad de adaptación constante y rápida a los cambios y conservando la coexistencia de métodos seguros con la necesaria flexibilidad para facilitar la intervención activa y fundamental de las personas en los procesos. 2.3.1 Ciclo de vida BPM Hepp y Hinkelmann (2007) describen el ciclo de vida , soportado por los sistemas actuales de BPM, como se describe en la figura 13, para una empresa generalmente consta de cinco fases: análisis o diseño, modelado, ejecución, monitoreo y optimización. Figura 13. Ciclo de vida BPM Fuente. www.experiencias-ti.blogspot.com La fase de análisis o diseño comprende la definición de los requerimientos de negocios y análisis de los procesos actuales: manuales y automáticos. El rol involucrado en esta fase es el analista de negocios. La idea es esta fase es alinear los procesos de negocios con los objetivos de la organización. La simulación de procesos y el monitoreo de los procesos existentes apoya significativamente el análisis de los procesos, al proporcionar métricas e indicadores acerca del performance de los mismos. 47 En la fase de desarrollo se trata de especificar los procesos de negocio en detalle: se definen los recursos tecnológicos y humanos involucrados, secuencia de actividades, sistemas y aplicaciones involucradas, reglas de negocios que intervienen en la lógica de los procesos, además de métricas y kpi’s para el monitoreo del proceso. En esta fase se realiza el modelado del proceso generalmente apoyado en notación estándar como BPMN. El analista de TI y el analista de procesos colaboran en esta fase. La fase de ejecución permite el despliegue de los procesos de negocios. Habitualmente son desplegados en servidor de procesos que permite la ejecución de los procesos de negocio, implementados en un lenguaje de ejecución de procesos como BPEL. En él se ejecutan: • Aplicaciones compuestas (flujos BPM) • Workflows tradicionales • Orquestación de servicios Fases de monitoreo y optimización se encargan del análisis de las métricas e indicadores claves de performance de los procesos, las cuales son generadas por medio de eventos capturados durante la ejecución del proceso. El monitoreo del desempeño de los procesos de negocio y la captura y generación de estadísticas, datos y medidores claves de rendimiento permiten contar con información oportuna y confiable para la optimización de los procesos de negocios. Ambas fases son soportadas por el servidor de procesos. 2.3.2 BPMN- Business Process Management Notation BPM se basa en un estándar de notación para el modelado de los procesos de negocios denominado Business Process Management Notation (BPMN). El estándar BPMN permite definir los siguientes elementos de un proceso: • Actividades : representan funcionalidades del negocio • Tarea: Funcionalidad a más bajo nivel que puede ser representada en el diagrama 48 • Proceso: Conjunto de unidades funcionales que son realizadas en una secuencia. • Tarea Humana: Tarea que un sistema asigna a una persona (rol) para terminarla. • Flujos de Control: determinan el flujo del proceso. • Nodos de Control • Reglas de negocio: Define como las políticas del negocio o prácticas aplican en la actividad del negocio. • Objetos de negocio: representa el flujo de información que es transmitido a lo largo del proceso. Los beneficios que da BPM a una organización se mencionan a continuación. • Permite alinear los procesos, personas y tecnologías de información. Permite a la empresa conocer sus procesos de negocio. • Otorga control de los procesos, gracias al monitoreo en tiempo real. • Permite la reutilización de funcionalidades entre procesos. • Permite la documentación detallada de los procesos de negocios. • Automatización de procesos. • Evaluación de los procesos en términos de consecución de los objetivos de la organización. 2.4 SOA y BPM SOA y BPM son disciplinas complementarias cuyo objetivo es otorgar agilidad y flexibilidad a la empresa. Como se mencionó anteriormente BPM es un facilitador tecnológico de la arquitectura orientada a servicios y aun cuando BPM puede existir sin SOA, la implementación de BPM estará soportada en la arquitectura de la empresa y si esta se trata de una arquitectura orientada a servicios se consigue la agilidad deseada. Por otro lado una implementación de SOA con BPM le otorga una cara de negocio a la arquitectura. BPM permite identificar necesidades existentes en los procesos de negocio, estos requerimientos comunes permitirá diseñar los servicios SOA reutilizables que podrán 49 ser compartidos por distintos procesos. Desde el punto de vista del negocio SOA es un habilitador de la implantación de BPM. En síntesis, BPM ayuda a identificar los servicios y componentes SOA que deben componer la arquitectura y SOA permite que los sistemas que soportan la automatización de los procesos de negocio puedan reaccionar de forma más flexible y ágil al momento de producirse cambios en la empresa. 2.5 Metodología de Desarrollo de Soluciones Orientadas a Servicio SOMA (Service-Oriented Modeling And Architecture) SOMA, Service-Oriented Modeling And Architecture, es un método que sustenta el ciclo de desarrollo de software para el diseño y construcción de soluciones basadas en SOA. Se trata de un método de desarrollo de sofware end to end que define técnicas claves, tareas específicas, lineamientos y normas que sirven de guía para el análisis detallado, diseño, implementación, pruebas, despliegue de servicios, diseño de componentes, flujos y políticas necesarias para la construcción de una exitosa solución SOA. Es una metodología inventada y desarrollada por IBM. SOMA produce un modelo de servicios y otros productos claves que son esenciales para la entrega exitosa de una solución basada en SOA. El modelo de servicios es creado combinando varias técnicas complementarias que han probado ser ideales y acertadas para modelar arquitecturas orientadas a servicios. SOMA es adecuada para proyectos pequeños de organizaciones que están empezando a implementar soluciones SOA, donde es clave establecer mejores prácticas y entregar exitosamente proyectos para procesos específicos pequeños. SOMA es también adecuado para proyectos SOA complejos de gran tamaño basados en la transformación del negocio donde la reducción del riesgo y la aceleración del proyecto son factores críticos para el éxito. El ciclo de vida SOMA, está compuesto por varias fases, como se observa en la figura 14, que se mencionan a continuación. • Modelado de negocio y transformación. • Gestión de la solución • Identificación • Especificación • Realización • Implementación • Despliegue y monitoreo 2.5.1 Fase Modelado de La fase de modelado de negocio y transformación compr procesos de negocio que se ejecutan actualmente (AS análisis de los procesos actuales permitirá determinar si los mismos se encuentran alineados con los objetivos de negocio de la empresa. El resultado será un conjunto de requerimientos y funcionalidades que deberán ser reflejadas en el modelo futuro del proceso (To Be). La optimización de los procesos es el objetivo de esta fase. Es una fase que no es estrictamente requerida pero es altamente recomendada. tificación Especificación Implementación Despliegue y monitoreo Figura 14. Ciclo de vida SOMA Fuente. Ghosh S. (2008). Modificado Fase Modelado de Negocio y Transformación La fase de modelado de negocio y transformación comprende el análisis de los procesos de negocio que se ejecutan actualmente (AS-IS) en la organización. El análisis de los procesos actuales permitirá determinar si los mismos se encuentran alineados con los objetivos de negocio de la empresa. do será un conjunto de requerimientos y funcionalidades que deberán ser reflejadas en el modelo futuro del proceso (To Be). La optimización de los procesos es el objetivo de esta fase. Es una fase que no es estrictamente requerida pero es dada. 50 ende el análisis de los IS) en la organización. El análisis de los procesos actuales permitirá determinar si los mismos se encuentran do será un conjunto de requerimientos y funcionalidades que deberán ser reflejadas en el modelo futuro del proceso (To Be). La optimización de los procesos es el objetivo de esta fase. Es una fase que no es estrictamente requerida pero es 51 2.5.2 Fase de Gestión de la Solución Una solución SOA involucra la participación de varios tipos de solución que deben ser integradas para ofrecer una red compartida de recursos. La integración con los sistemas existentes de TI, sistemas legados y aplicaciones debe ser coordinada, SOMA está diseñado para apoyar la naturaleza híbrida de soluciones SOA y prescribe actividades específicas y orientación para dar cumplimiento a lo anterior. El método permite la definición de tareas, work products, roles y lineamientos específicos para cada tipo de solución, y es externalizado como una plantilla de solución. 2.5.3 Fase de Identificación Esta fase involucra la identificación de los tres principales elementos de construcción de una arquitectura SOA: servicios, componentes y flujos. El objetivo en esta fase es la identificación de un conjunto de servicios candidatos y crear un portafolio de servicios alineados al negocio y sistemas TI, que colectivamente apoyen los procesos de negocio y los objetivos de la organización. Los servicios son inicialmente designados como candidatos porque no todas las funcionalidades de los procesos serán ser expuestas como servicios. Esta fase se apoya en diversas técnicas para la identificación de los servicios como por ejemplo: Goal-Service Modeling (GSM), utiliza un enfoque basado en los objetivos del negocio, metas y estrategias corporativas para la identificación de servicios. Combina un análisis top down y bottom up. Descomposición de Dominio se basa en una análisis top down enfocado en el modelado de procesos de negocio, reglas de negocio y flujo de información. Análisis de Activos, análisis bottom up que tiene como base los recursos de TI que conforman el ambiente tecnológico de la empresa para la identificación de las funcionalidades que pueden ser expuestas aprovechando estos recursos. 52 2.5.4 Fase de Especificación En esta fase la arquitectura es diseñada. Involucra el diseño detallado de los servicios y componentes el cual es completado en esta fase. En esta fase se define un modelo de servicios que contiene la dependencia entre servicios, flujos y mensajes, composición, eventos, reglas de negocio, operaciones y requisitos no funcionales. Las actividades en esta fase involucran el análisis de las interfaces del sistema y los parámetros de entrada y salida de los actuales sistemas con el objeto de realizar un mapeo de los servicios y las aplicaciones. El aprovechamiento de de los activos existentes a través de la refactorización y el mapeo de los servicios es un aspecto clave de la orientación al servicio. 2.5.5 Fase de Realización En esta fase se evalúan las decisiones técnicas asumidas a través del diseño y elaboración de prototipos, pruebas de conceptos o pilotos. La exploración de la viabilidad técnica realizada en esta fase es una forma de evaluar y planificar la implementación de las soluciones tecnológicas especificadas con el fin de identificar riesgos operativos y de desarrollo de la solución SOA. En la exploración de la factibilidad técnica, la intención es mitigar los factores de riesgo y los desafíos técnicos se centran en los requisitos no funcionales. 2.5.6 Fase de Implementación En esta fase se construyen y ensamblan los componentes, servicios y flujos que conforman la solución arquitectónica. Involucra la aplicación de pruebas unitarias, pruebas técnicas de integración y rendimiento con sistemas legados y aplicaciones y pruebas funcionales. 53 2.5.7 Fase de Despliegue y Monitoreo Esta fase se concentra en la realización de pruebas de aceptación por parte del usuario y el despliegue de los servicios en el ambiente de producción. Además SOMA proporciona en esta fase el monitoreo y control del performance de los procesos de negocio en tiempo de ejecución. 54 CAPÍTULO 3. Marco Aplicativo En vista del problema expuesto en el capítulo 1 se plantea una solución que busque la optimización de los procesos de la empresa, en particular del proceso de orden de compras, a través del uso de nuevos modelos arquitectónicos que permitan, en definitiva, alinear las necesidades del negocio y las capacidades de los sistemas de información, de modo que éstos sean flexibles y adaptables y puedan responder con rapidez a las necesidades que el negocio pueda requerir. Con la aplicación de una solución SOA-BPM, se pretende que el proceso de orden de compras, se convierta en un proceso de negocio flexible, adaptable y óptimo. En este sentido para ilustrar el contexto en el que fue realizada la implementación, se especifica a continuación el escenario de la solución implantada, la cual soporta los siguientes requerimientos funcionales: • Automatización de Procesos de Negocio. • Modelado de Procesos (TO-BE). • Invocar rutinas del Sistema Legado • Portal que exponga los procesos de negocio a través de portlets. • Portal que habilita las capacidades iniciales para emprender un proyecto de Portal Corporativo para el manejo de información y documentos • Despliegue de la solución en la intranet de la empresa. Para el desarrollo de la solución se utilizará la metodología SOMA. SOMA acelera el análisis y modelado necesario para realizar las iniciativas SOA, produce un Modelo de Servicios y otros productos claves que son esenciales para el éxito de una solución basada en SOA (IBM, 2009). Como se explicó en la sección 2.5 la metodología SOMA define un conjunto de fases que describen las tareas, entradas y salidas, productos de trabajo y técnicas que proporcionan una guía para la identificación, diseño y despliegue de servicios, componentes y flujos que conformarán la solución SOA. SOMA es una metodología iterativa e incremental, por lo que los componentes de salida de una fase, son los insumos de la siguiente fase. No obstante durante el 55 desarrollo de la solución fue necesario regresar a fases previas para la refinación de los mismos. A continuación se describirán cada una de las fases aplicadas para el desarrollo de la solución SOA-BPM para el proceso de orden de compras. Los artefactos, productos de trabajo, tareas y técnicas utilizadas en cada una de las fases durante el ciclo de vida del desarrollo de la solución serán igualmente identificados y expuestos. Factores como el tiempo de desarrollo, adquisición de conocimiento, complejidad del proceso y las necesidades de la organización, determinaron las fases aplicadas de la metodología para nuestro caso, las cuales se listan a continuación: 3.1 Fase de modelado de negocio y transformación En esta fase el objetivo fue el análisis y la comprensión del proceso de negocio de orden de compras en la forma como se ejecutaba en ese momento lo que representaba el modelo As-Is del proceso. Una vez obtenido este modelo, las actividades se orientaron a la generación del modelo To-Be a implementar del proceso de negocio, lo que constituye el entregable o artefacto principal de salida de esta fase. Durante esta fase se realizaron reuniones con los usuarios funcionales en donde se determinaron los siguientes aspectos: • Alcance del proceso a implementar: el ámbito del proceso abarca la creación de la orden de compra, su posterior análisis y toma de decisión a cerca de su aprobación o rechazo y finaliza una vez dicha orden es registrada en el sistema legado para su persistencia. • Roles: los roles involucrados en el proceso serían el Generador de orden de compras y el Analista de orden de compras, quienes serían los encargados de generar y tomar la decisión de aprobación o rechazo de la orden respectivamente. • Especificación inicial de los requerimientos funcionales: durante las reuniones de trabajo con el usuario funcional se determinaron requerimientos específicos como: o Las notificaciones informativas a cada uno de los roles, se realizaría por medio del envío de correo electrónico. 56 o Reglas de negocio para la generación de la orden de compra. o Escenarios de interacción con el sistema legado. o Estados posibles de una orden de compra: aprobada, rechazada, reabierta, abierta, anulada y confirmada. 3.1.1 Modelado del proceso de orden de compras Como se mencionó anteriormente el producto de esta fase es el modelado To-Be del proceso de orden de compras, el cual fue generado siguiendo una perspectiva orientada a servicios y que representa el flujo del proceso según los requerimientos del negocio. El modelo del proceso de orden de compras en notación BPMN y según el alcance de la solución se muestra a continuación en la figura 15. Figura 15. Modelo del Proceso de orden de compra en notación BPMN A continuación en la figura 16 se muestra el modelo del proceso implementado en la herramienta Websphere Business Modeler. Luego en las figuras 17 y 18 se observa con mayor detalle el modelo del proceso según los roles del mismo. 57 Figura 16. Modelo del Proceso de orden de compra en Websphere Business Modeler 58 Figura 17. Modelo del Proceso para el rol de Generador de Orden Figura 18. Modelo del Proceso para el rol de Analista de Orden Figura 18. Modelo del Proceso para el rol de Analista de Orden 59 60 En la tabla 2 a continuación se describe en forma general el proceso de orden de compras. Nombre Sub- Proceso orden De compra Descripción La orden de compra es una autorización al proveedor para entregar los artículos y presentar un Documento de Recepción (factura, nota de entrega y entre otros). La solicitud también especifica los términos de pago y de entrega. Todos los artículos comprados por una compañía deben acompañarse de las Órdenes de compra, que se enumeran en serie con el fin de suministrar control sobre su uso. Inicio El usuario con el Perfil de Generador inicia la Tarea de Registro de la orden de compra Finaliza El usuario con el Perfil de Analista finaliza la Tarea de Análisis de la orden de compra (Aprueba, Rechaza o por modificar). Entradas orden de compra en el caso de que se desea revertir la misma. Salidas Notificación vía correo electrónico al usuario con el Perfil de Generador de una orden de compra Aprobada, Rechazada o por Modificar. Consumidor de este proceso Aplicación Portal Expectativas del cliente de este Sub- proceso Las expectativas del cliente es acceder desde un portal de servicios y se le permita realizar las siguientes funcionalidades: 1. Visualizar desde el Sistema la lista de los artículos a agregar a la orden. 2. Registrar la orden de compra, seleccionando el Proveedor. 3. Solicitar aprobación de la orden de compra (Cambia el estado de la orden de compra a “Por Aprobar”) y envía notificación sobre orden de compra “Por Aprobar” 4. Analizar la orden de compras. 5. Solicitar modificaciones sobre la orden de compra (Cambio de Estado “ReAbierta”) y enviar notificación sobre modificaciones a ser realizadas 6. Rechazar orden de compra (Cambia el estado de los artículos de la orden a “Aprobada” y de la orden de compra a “Rechazada”) y enviar notificación sobre Rechazo de la orden de compra 7. Aprobar orden de compra (Cambia el estado de los artículos de la orden a “Procesado” y de la orden de compra “Aprobado”) y enviar notificación sobre orden de compra “Aprobada” al requirente y al analista de compras 8. Actualizar en el sistema Legado cada una de las funcionalidades. Tabla 2. Descripción del Proceso de orden de compras. 61 La herramienta de modelado de Procesos de Negocio utilizada fue WebSphere Business Modeler. Modeler, es una herramienta que permite modelar, diseñar, simular, analizar y generar reportes para los procesos de negocio además de integrar nuevos procesos y/o revisar los existentes; también permite la definición de la organización, recursos y elementos de negocio. El modelado es la primera actividad del ciclo de vida de optimización e innovación del negocio y además tiene su propio ciclo interactivo, adicional al generado por la realimentación propia de la actividad de gerencia y optimización en el BPM. El ciclo del modelado incluye la documentación, diseño del proceso y análisis con el fin de optimizarlo, disminuyendo riesgos e incrementando la flexibilidad. El modelado del Proceso de negocio es la actividad clave que ayuda a documentar lo que le interesa al negocio, respecto a sus procesos, políticas claves de desempeño, así como eventos de negocio con sus correspondientes acciones. Con la herramienta se generó el BPEL del proceso que posteriormente es importado al servidor de procesos y que permite la ejecución del proceso. Cada una de las tareas representadas en el BPEL del proceso, representa una actividad que es interpretada por el servidor de procesos, en este caso Websphere Process Server, en este aspecto radica la importancia del modelado del proceso ya que en tiempo de ejecución es el motor de procesos de Process Server quien interpretará el BPEL generado y permitirá la orquestación del proceso. Las actividades representadas como tareas humanas, constituyen la interfaz de usuario o front end que en este caso estará representada como portlet´s que serán ejecutados en un servidor de portlet´s o Portal de Negocios. Aquellas tareas de sistema que no son representadas como tareas humanas, son tareas de negocios repetitivas ejecutadas por el sistema y que constituyen invocaciones a servicios, que son expuestos por el sistema legado y consumidos a través de los componentes de servicio. En esta fase, la identificación de estas funcionalidades de negocio repetitivas y comunes permitió definir los candidatos a servicios dentro de la arquitectura. Junto con el flujo del proceso representado en el modelo, se especificaron además los siguientes aspectos técnicos y funcionales: • Especificación de la asignación de roles en función de las tareas del proceso. 62 • Identificación y especificación inicial de los datos que son intercambiados a los largo del flujo de información del proceso, los cuales son representados como objetos de negocios. • Entradas y salidas de cada una de las tareas y del proceso. • Declaración formal (código) de los condicionales que forman parte del modelo. • Documentación funcional de las tareas. Si bien la figura 15 nos muestra el resultado final del modelado del proceso de orden de compras, este fue el producto de sucesivas iteraciones y refinamiento a lo largo del ciclo de desarrollo del proceso. Al instanciar la metodología SOMA para el desarrollo del proceso de orden de compras, actividades de la fase de Gestión de la Solución no fueron requeridas y las actividades de planificación de entregables y productos de trabajo fueron aplicadas dentro de la fase de Identificación, la cual se describe a continuación: 3.2 Fase de Identificación Los objetivos planteados en esta fase fue la identificación de los servicios, componentes y flujos del proceso de orden de compra. En el contexto de la metodología la técnica empleada para la obtención de los aspectos anteriormente citados fue la de Descomposición de Dominio por medio de la elaboración de Casos de Uso. Los productos entregables en esta fase fueron los casos de uso y el portafolio de servicios. Debido a que la solución propuesta incluye el componente de Gestión de Procesos de Negocio (BPM), la técnica de Descomposición de Dominio es la adecuada por su enfoque Top-Down que permitió definir los servicios, componentes y flujos a partir de los procesos de negocio. Para la identificación y especificación de los requerimientos funcionales del sistema a desarrollar, se realizaron reuniones con el cliente a fin de elaborar los casos de uso. Los casos de uso definidos para el proceso de orden de compras, describen la secuencia normal de los procesos de negocios, secuencias alternativas, reglas de negocio, precondiciones y poscondiciones, además reflejan la interacción del sistema 63 con el sistema legado. Esta actividad corresponde a las actividades 4, 5 y 6 de la fase de identificación descritas en la figura 14. 3.2.1 Casos de Uso y Requerimientos Funcionales Los distintos términos a los cuales se harán referencia en los casos de uso se describen en la tabla 3 a continuación: Identificador / Abreviatura Descripción CU Abreviatura de Caso de Uso GG Abreviatura de Grano Grueso, término para identificar que un caso de uso A, depende de otros casos de usos como B, C y D sean ejecutados para lograr el objetivo principal. GF Abreviatura de Grano Fino, término para identificar un caso de uso que es totalmente independiente y que no posee dependencia de otros casos de usos. COMPRAS Es el identificador de un macro proceso dentro de la solución SOA/BPM. ODC Abreviatura del subproceso de compras llamado orden De compra. Tabla 3. Descripción de identificadores / abreviaturas. A continuación serán descritos cada uno de los casos de uso elaborados para la captura de los requerimientos funcionales y no funcionales del proceso. En este sentido la tabla 4 describe el caso de uso relacionado al registro de una orden de compra: ID CU_GG_COMPRAS_ODC_02 Nombre Caso de Uso CU_RegistrarODC Proceso compras 64 Subproceso orden de compras Creado por: Jonatán Sánchez Modificado por: Jonatán Sánchez Fecha de Creación 09.12.2010 Fecha Modificación 24.03.11 Actividad 1. Registrar orden de compras Actores: Generador de orden de compras Descripción: Registrar la orden de compra con los artículos seleccionados del Repositorio de Artículos. Evento iniciador: 1. Invocar el método registrarODC Precondiciones: 1. Los consumidores deben estar correctamente acoplados con el servicio y debe ser una transacción de un consumidor seguro o válido. 2. Debe poseer toda la información necesaria para la elaboración de la orden de compras, entre otros tenemos: 2.1 Análisis de la Lista de Precios. 2.2 Repositorio de Artículos 2.3 Cotizaciones 2.4 Proveedor Postcondiciones: 1. orden de compra registrada. Se graba la orden de compras con estado “Abierta”. 2. Generar la orden de compra (Opcional) 3. Modificar (Opcional) Secuencia Normal: 1. El actor ingresa a la opción de “Registrar usando artículos del Repositorio de Artículos”. 2. El sistema despliega el filtro de tipos de orden de compra. 3. El actor selecciona el tipo de orden de compra que desea registrar. 4. De acuerdo al tipo de orden de compra, el sistema despliega los campos necesarios para la selección e ingreso de la información del encabezado, se invoca caso de uso <CU_GF_COMPRAS_ODC_12> <CU_Desplegar_Encabezado_Tipo_ODC > 5. El actor ingresa y/o selecciona la información en los campos obligatorios comunes para cualquier tipo de orden de compra en el encabezado. 6. El actor selecciona los campos que apliquen para el tipo de orden, éstos pueden ser los siguientes: Condiciones de Venta, IVA, Vías de embarque y/o Condiciones de Pago. 7. El sistema valida que los datos obligatorios mínimos hayan sido ingresados y/o seleccionados en el encabezado. 8. El sistema habilita la opción de “Continuar”. 9. El actor selecciona la opción de continuar para ingresar el Detalle. 10. El sistema habilita la opción de “Agregar artículos del Repositorio de Artículos” y 65 “Agregar Servicio”. 11. El actor selecciona la opción “Agregar artículos del Repositorio de Artículos” (esta funcionalidad podrá ser invocada tantas veces como lo desee el actor). 12. El sistema despliega los filtros de búsqueda y provee la funcionalidad para la selección por parte del actor, se invoca el caso de uso <CU_GF_COMPRAS_ODC_08> <CU_Seleccionar_Articulo>. 13. El sistema despliega la lista de ítems seleccionados y el detalle de cada uno de ellos: Código de artículo, descripción, tipo de artículo, unidad de medida. En el caso de artículos no estándar se agregan los campos espesor, ancho y largo. 14. El sistema habilita las opciones: “Agregar Comentario” y “Borrar ítem del detalle”. 15. La secuencia anterior (pasos 11 al 13) se repite tantas veces lo desee el actor hasta que decida finalizar la secuencia de agregar artículos. 16. El actor ingresa los datos del detalle para cada ítem de la ODC. 17. El sistema agrupa la información de los artículos iguales en un solo ítem y habilita los campos de ingreso: Cantidad y Precio Unitario para cada uno de los ítems del detalle. 18. El sistema valida, que según corresponda al tipo de cada ítem (artículo, servicio o comentario), hayan sido ingresados los datos obligatorios mínimos en el detalle. 19. El sistema valida que según corresponda al tipo de cada ítem (artículo, servicio o comentario), los datos ingresados sean correctos (Ej. El campo precio unitario debe ser numérico). 20. El sistema habilita la opción de “Registrar orden de compra”. 21. El actor selecciona la opción de “Registrar orden de compra”. 22. El sistema despliega un mensaje de confirmación indicándole al actor “¿Está seguro de registrar la orden de compra?”. 23. El actor selecciona la opción aceptar. 24. El sistema envía al Legado la información de la orden de compra. 25. El Legado Registra la orden de compra y retorna un mensaje de respuesta confirmando la operación y el número correlativo de la orden de compra que fue generado. 26. El sistema despliega un mensaje de confirmación de registro de la orden de compra indicando el número que corresponde a la orden registrada. 27. El sistema habilita la opción “Generar orden de compra”. 28. Finalizar el Caso de Uso. Secuencia Alternativa: Secuencia Alternativa 1: No están los datos mínimos obligatorios ingresados en el encabezado. La secuencia alternativa inicia en el paso 7 de la secuencia normal, cuando se establece que el actor no ingresó todos los datos mínimos obligatorios. 1. El sistema despliega un mensaje con la condición del error generado, indicando el 66 nombre del campo declarado obligatorio y ubicando el cursor en éste. 2. La secuencia alternativa termina y retorna al paso 5 de la secuencia normal. Secuencia Alternativa 2: No están los datos mínimos obligatorios ingresados del detalle de los artículos. La secuencia alternativa inicia en el paso 18 de la secuencia normal, cuando se establece que el actor no ingresó todos los datos mínimos obligatorios. 1. El sistema despliega un mensaje con la condición del error generado, indicando el nombre del campo declarado obligatorio y ubicando el cursor en éste 2. La secuencia alternativa termina y retorna al paso 16 de la secuencia normal. Secuencia Alternativa 3: Los datos ingresados de la sección del detalle no son válidos La secuencia alternativa inicia en el paso 19 de la secuencia normal, cuando se establece que los campos ingresados no son validos. 1. El sistema despliega un mensaje con la condición del error generado, indicando el nombre del campo declarado como inválido y ubicando el cursor en éste. 2. La secuencia alternativa termina y retorna al paso 16 de la secuencia normal. Secuencia Alternativa 4: Cancelar La secuencia alternativa inicia cuando el actor invoca la opción cancelar la actividad. 1. El sistema confirma si el actor realmente desea cancelar la actividad. 2. La secuencia alternativa termina y finaliza el caso de uso o al paso previo donde fue seleccionada la opción. Secuencia Alternativa 5: Generar orden de compra La secuencia alternativa inicia en el paso 27 una vez ha sido habilitada la opción de Generar orden de compra. 1. El actor selecciona la opción “Generar orden de compra”. 2. Se invoca el caso de uso <CU_GG_COMPRAS_ODC_03> <CU_Generar_ODC >. 3. La secuencia alternativa termina y retorna al paso 28 de la secuencia normal. Secuencia Alternativa 6: Cancelar Registro de orden de compra La secuencia alternativa inicia en el paso 23 cuando el actor decide no Registrar la orden de compra. 1. El actor selecciona la opción Cancelar. 2. La secuencia alternativa termina y retorna al paso 28 de la secuencia normal. 67 Secuencia Alternativa 7: Agregar Comentarios y/o Servicios a una orden de compra La secuencia alternativa inicia en los pasos 10 y 14 una vez han sido habilitada las opciones “Agregar Comentario” o “Agregar Servicio”. 1. El usuario selecciona cualquiera de las opciones “Agregar Comentario” o “Agregar Servicio” (esta funcionalidad podrá ser invocada tantas veces como lo desee el actor.) 2. El sistema de acuerdo al tipo de detalle (servicio o comentario), acondiciona los campos que el actor debe ingresar y lo agrega la lista de ítems de la orden de compra. 3. La secuencia alternativa termina y retorna al paso 15 de la secuencia normal. Secuencia Alternativa 8: El Legado no pudo Registrar la orden de compra. La secuencia alternativa inicia en el paso 25 cuando el Legado no logra Registrar la orden de compra. 1. El sistema genera un mensaje de error, indicando que “No fue posible Registrar la orden de compra”. 2. La secuencia alterna termina y retorna al paso 28. Secuencia Alternativa 9: No se pudo establecer comunicación con el Legado. La secuencia alternativa inicia para todos aquellos pasos en la secuencia normal que no pueda lograr comunicación con el Legado. 1. El sistema genera un mensaje de error, indicándole al actor que “No se puede establecer comunicación con el sistema Legado”. 2. La secuencia alterna termina y finaliza el caso de uso. Secuencia Alternativa 10: El actor cuenta con los privilegios para registrar Órdenes para más de una compañía. La secuencia alternativa inicia cuando comienza el caso de uso y se determina que el actor puede crear Órdenes para más de una compañía. 1. El sistema consulta al Legado y despliega un filtro de opciones de Compañías, de acuerdo a los privilegios del actor que desea registrar la orden de compra, para facilitar su selección. 2. El actor selecciona la compañía. 3. La secuencia alterna termina y retorna al paso 2 de la secuencia normal. Secuencia Alternativa 11: Borrar un Ítem del detalle 68 La secuencia alternativa inicia en el paso 14, sí y sólo sí el sistema habilita la opción de Borrar Ítem del detalle cuando existe al menos un ítem en el mismo. 1. El actor selecciona la opción de Borrar Ítem. 2. El sistema despliega un mensaje de confirmación indicando al actor “¿Está seguro de borrar el ítem del detalle de la orden de compra?”. 3. El actor selecciona la opción de Aceptar. 4. El sistema borra desde el detalle el ítem indicado por el actor. 5. La secuencia alternativa termina y retorna al paso 15 de la secuencia normal. Secuencia Alternativa 12: Existen artículos no estándar iguales. La secuencia alternativa inicia en el paso 17 cuando se valida que existen 2 o mas artículos no estándar con espesor, ancho o largo iguales. 1. El sistema despliega un mensaje indicando que no es posible agregar artículos no estándar iguales y que debe modificar los campos: espesor, ancho o largo o eliminar alguno de ellos. 2. La secuencia alternativa termina y retorna al paso 16 de la secuencia normal. Secuencia Alternativa 13: Existen artículos estándar iguales. La secuencia alternativa inicia en el paso 17 cuando se valida que existen 2 o mas artículos estándar con código iguales. 1. El sistema despliega un mensaje indicando los artículos que ya se encuentran en la lista de ítems de la orden de compra y que por lo tanto no serán agregados. 2. La secuencia alternativa termina y retorna al paso 16 de la secuencia normal. Secuencia Alternativa 14: Sustituir la lista de artículos seleccionados de la orden de compra. La secuencia alternativa inicia en el paso 13, cuando se indica que la lista de artículos seleccionados debe sustituir la lista actual de artículos. 1. El sistema borra todos los ítems de la orden de compra y despliega la lista de ítems seleccionados y el detalle de cada uno de ellos Código de artículo, descripción, tipo de artículo, unidad de medida y estado. 2. La secuencia Alternativa termina y retorna al paso 14 de la secuencia normal. Secuencia Alternativa 15: Modificar orden de compra. La secuencia alternativa se inicia cuando el actor desea modificar una orden de compra, en este caso se cumplen los pasos del 5 al 19 de la secuencia normal, y luego se ejecuta la 69 siguiente secuencia: 1. El sistema habilita la opción de “Modificar orden de compra”. 2. El actor selecciona la opción de “Modificar orden de compra”. 3. El sistema despliega un mensaje de confirmación indicándole al actor “¿Está seguro de modificar la orden de compra?”. 4. El actor selecciona la opción aceptar. 5. El sistema envía al Legado la información de la orden de compra. 6. El Legado actualiza la orden de compra y retorna un mensaje de respuesta confirmando la operación. 7. El sistema despliega un mensaje de confirmación de modificación de la orden de compra. 8. La secuencia alternativa termina y retorna al paso 27 de la secuencia normal. Includes: <CU_GG_COMPRAS_ODC_03> <CU_Generar_ODC> < CU_GF_COMPRAS_ODC_08> < CU_Seleccionar_Articulo > <CU_GF_COMPRAS_ODC_12> <CU_Desplegar_Encabezado_Tipo_ODC > Prioridad: Alta Frecuencia de uso: Alta Comentarios: Los productos a solicitar deben estar registrados en el Repositorio de artículos. NOTAS: 1. Las órdenes de compra deberán incluir las normas COVENIN y ASTM a las que están sujetos los materiales solicitados. Esta información proviene del Repositorio de artículos. 2. Para proveedores externos se emite un contrato, el cual es identificado a través de un número. Este número debe estar registrado en el sistema. 3. Para cada uno de los ítems de la orden de compra el sistema debe proveer la funcionalidad que permita eliminarlos de la lista antes de ser registrada la orden de compra. Tabla 4. Caso de Uso: Registrar orden de compra. A continuación en la tabla 5 se describe el caso de uso para generar una orden de compra: ID CU_GG_COMPRAS_ODC_03 70 Nombre Caso de Uso CU_Generar_ODC Proceso compras Subproceso orden de compras Creado por: Jonatán Sánchez Modificado por: Jonatán Sánchez Fecha de Creación 09.12.2010 Fecha Modificación 25.03.11 Actividad 1. Generar orden de compras Actores: Generador de orden de compras Descripción: Generar la orden de compra. Evento iniciador: 1. Invocar el método generarODC Precondiciones: 1. Los consumidores deben estar correctamente acoplados con el servicio y debe ser una transacción de un consumidor seguro o válido. 2. Deben existir todos los componentes obligatorios de la orden de compra, es decir, el encabezado, y al menos un artículo. Postcondiciones: 1. Generar la orden de compra con todos los artículos a requerir. Se cambia el estado de la orden de compra “Por Aprobar” 2. Notificar Evento. Secuencia Normal: 1. El actor selecciona la opción Generar orden de compra. 2. El sistema despliega un mensaje al actor preguntando si desea Generar la orden de compra. 3. El actor confirma que desea Generar la orden de compra. 4. El sistema le envía al Legado el número de la orden de compra y le solicita al Legado que modifique el estado de los artículos a “Por Aprobar” <CU_GF_COMPRAS_ODC_07> <CU_Cambiar_Estado_Artículos_ODC>. 5. El sistema despliega un mensaje de confirmación de que la orden de compra fue generada. 6. El sistema ubica con el código del actor, quien es el analista respectivo para enviar el correo, y notificar las órdenes pendientes por aprobar, caso de uso <CU_GG_COMPRAS_ODC_11> <CU_Notificar_Evento_ODC> 7. Finalizar el caso de Uso. Secuencia Alternativa: Secuencia Alternativa 1: Cancelar Generar orden de compra La secuencia alternativa inicia en el paso 3 cuando el actor decide no Generar la orden de compra. 1. El actor selecciona la opción Cancelar. 2. La secuencia alternativa termina y retorna al paso 8 de la secuencia normal. Secuencia Alternativa 2: Cancelar 71 La secuencia alternativa inicia cuando el actor invoca la opción cancelar la actividad. 1. El sistema confirma si el actor realmente desea cancelar la actividad. 2. La secuencia alternativa termina y finaliza el caso de uso o retorna al paso previo donde fue seleccionada la opción. Secuencia Alternativa 3: No se pudo establecer comunicación con Legacy. La secuencia alternativa inicia para todos aquellos pasos en la secuencia normal que no pueda lograr comunicación con el Legado. 1. El sistema genera un mensaje de error, indicándole al actor que “No se puede establecer comunicación con el sistema Legado”. 2. La secuencia alternativa termina y finaliza el caso de uso. Includes: <CU_GF_COMPRAS_ODC_07>< CU_Cambiar_Estado_Artículos_ODC> <CU_GG_COMPRAS_ODC_11><CU_Notificar_Evento_ODC> Prioridad: Alta Frecuencia de uso: Media Tabla 5. Caso de Uso: Generar orden de compra. La tabla 6 a continuación describe el caso de uso Trabajar con orden de compras: ID CU_GG_COMPRAS_ODC_04 Nombre Caso de Uso CU_Trabajar_con_ODC Proceso compras Subproceso orden de compras Creado por: Jonatán Sánchez Modificado por: Jonatán Sánchez Fecha de Creación 10/12/10 Fecha Modificación 06.04.11 Actividad 1. Trabajar con las ordenes de compras Actores: Genrador de orden de compras y Analista de compras Descripción: Trabajar con las órdenes de compra para decidir su generación, aprobación, rechazo, confirmación, modificación o registrar bitácora. Evento iniciador: 1. Invocar el método trabajarConODC Precondiciones: 8. Los consumidores deben estar correctamente acoplados con el servicio, y debe ser una transacción de un consumidor seguro o válido. 72 Postcondiciones: 1. ordenes de compra generadas, aprobadas, rechazadas, confirmadas, modificadas, o sin cambio. Secuencia Normal: 1. El caso de uso inicia cuando el actor accede a la funcionalidad de “Trabajar con orden de compra”. 2. El sistema despliega los filtros de búsqueda por: Compañía, Proveedor y/o Artículo, rango de fecha, tipo de la orden, estado de la orden de compra y la opción de ingresar el número de orden de compra. 3. El actor selecciona los parámetros de los filtros de búsqueda. 4. El sistema habilita la opción “Buscar”. 5. El actor selecciona la opción “Buscar”. 6. El sistema solicita al Legado la lista de órdenes de compra que cumplan con los parámetros de búsqueda seleccionados por el actor <CU_GF_COMPRAS_ODC_04> < CU_Listar_ODC >. 7. El sistema despliega el resultado de la consulta realizada por el actor. 8. El actor selecciona la orden de compra con la que desea Trabajar. 9. El sistema le envía al Legado el número de la orden de compra seleccionada y le solicita la información del encabezado y detalle de la orden de compra, Invocar el caso de uso < CU_GF_COMPRAS_ODC_05> < CU_Consultar_ODC>. 10. El sistema despliega los campos del encabezado y detalle de la orden de compra seleccionada. 11. El sistema valida que el estado de la orden sea “Por Aprobar” y habilita las opciones “Aprobar orden de compra” y “Rechazar orden de compra”. 12. El actor selecciona la opción Aprobar orden de compra. 13. El sistema despliega un mensaje al actor preguntando si desea Aprobar la orden de compra. 14. El actor selecciona la opción aceptar. 15. El sistema le envía al Legado el número de la orden de compra y le solicita que modifique el estado de los artículos a “Aprobada” <CU_GF_COMPRAS_ODC_07> <CU_Cambiar_Estado_Artículos_ODC>. 16. El sistema despliega un mensaje de confirmación indicando que la orden de compra fue Aprobada. 17. El sistema ubica con el código del actor, quien es el Generador de la orden de compra o el Analista según sea el caso, para enviar el correo, y notificar que la orden de compra ha sido generada, aprobada, rechazada, reabierta o confirmada según el caso, se invoca caso de uso <CU_GG_COMPRAS_ODC_11> <CU_Notificar_Evento_ODC>. 18. Finalizar el Caso de Uso. Secuencia Alternativa: Secuencia alternativa 1: Cancelar La secuencia alternativa inicia cuando el actor invoca la opción cancelar la actividad 73 1. El sistema confirma si el actor realmente desea cancelar la actividad. 2. La secuencia alternativa termina sin realizar ninguna modificación en los registros del Sistema y finaliza el caso de uso o al paso previo donde fue seleccionada la opción. Secuencia Alternativa 2: No se pudo establecer comunicación con el Legado. La secuencia alternativa inicia para todos aquellos pasos en la secuencia normal que no pueda lograr comunicación con al Legado. 1. El sistema genera un mensaje de error, indicándole al actor que “No se puede establecer comunicación con el sistema Legado”. 2. La secuencia alternativa termina y finaliza el caso de uso. Secuencia Alternativa 3: Cancelar Aprobar (Generar, Rechazar, Confirmar y Modificar) orden de compra La secuencia alternativa inicia en el paso 14 de la secuencia normal y en las secuencias alternativas donde aplique (generar, rechazar, confirmar y modificar) cuando el actor decide no confirmar la acción. 1. El actor selecciona la opción cancelar. 2. La secuencia alternativa termina y retorna al paso 18 de la secuencia normal. Secuencia Alternativa 4: Rechazar orden de compra La Secuencia Alternativa inicia en el paso 11 de la secuencia normal cuando se desea rechazar una orden de compra. 1. El actor selecciona la opción “Rechazar orden de compra”. 2. El sistema despliega un mensaje preguntando si el rechazo de la orden de compra es definitivo o con opción de modificación y habilita un campo para el ingreso de Observación. 3. El actor selecciona la opción e ingresa la observación acerca del rechazo de la orden de compra. 3.1 El actor selecciona la opción de rechazar la orden de compra de manera definitiva: 3.1.1 El sistema despliega un mensaje al actor preguntando si desea Rechazar de manera definitiva la orden de compra. 3.1.2 El actor selecciona la opción aceptar. 3.1.3 El sistema le envía al Legado el número de la orden de compra y le solicita al Legado que modifique el estado de los artículos a “Rechazada” <CU_GF_COMPRAS_ODC_07> <CU_Cambiar_Estado_Artículos_ODC>. 3.1.4 El sistema despliega un mensaje de confirmación indicando que la orden de compra fue Rechazada. 74 3.2 El actor selecciona la opción de rechazar la orden de compra con opción de modificación: 3.2.1 El sistema despliega un mensaje al actor preguntando si desea Rechazar con opción de modificación. 3.2.2 El actor selecciona la opción aceptar. 3.2.3 El sistema le envía al Legado el número de la orden de compra y le solicita al Legado que modifique el estado de los artículos a “Reabierta” <CU_GF_COMPRAS_ODC_07> <CU_Cambiar_Estado_Artículos_ODC>. 3.2.4 El sistema despliega un mensaje de confirmación indicando que la orden de compra fue Reabierta. 4. La secuencia alternativa termina y retorna al paso 17 de la secuencia normal. Secuencia Alternativa 5: Confirmar orden de compra La Secuencia Alternativa inicia en el paso 11 de la secuencia normal cuando se desea confirmar una orden de compra. 1. El sistema valida que el estado de la orden de compra sea Aprobada. 2. El sistema habilita la opción “Confirmar orden de compra”. 3. El actor selecciona la opción “Confirmar orden de compra”. 4. El sistema despliega un mensaje al actor preguntando si desea Confirmar la orden de compra. 5. El actor acepta que desea Confirmar la orden de compra. 6. El sistema le envía al Legado el número de la orden de compra y le solicita al Legado que modifique el estado de los artículos a “Confirmada” <CU_GF_COMPRAS_ODC_07> <CU_Cambiar_Estado_Artículos_ODC>. 7. El sistema muestra un mensaje de confirmación de que la orden de compra fue confirmada. 8. La secuencia alternativa termina y retorna al paso17 de la secuencia normal. Secuencia Alternativa 6: Generar orden de compra La Secuencia Alternativa inicia en el paso 11 de la secuencia normal cuando se desea Generar una orden de compra. 1. El sistema valida que el estado de la orden de compra sea Abierta o Reabierta 2. El sistema habilita la opción “Generar orden de compra”. 3. El actor selecciona la opción “Generar orden de compra”. 4. El sistema despliega un mensaje al actor preguntando si desea Generar la orden de compra. 5. El actor acepta que desea Generar la orden de compra. 6. El sistema le envía al Legado el número de la orden de compra y le solicita al Legado que modifique el estado de los artículos a “Por Aprobar” <CU_GF_COMPRAS_ODC_07> <CU_Cambiar_Estado_Artículos_ODC>. 7. El sistema muestra un mensaje de confirmación de que la orden de compra fue Generada. 8. La secuencia alternativa termina y retorna al paso 17 de la secuencia normal. 75 9. Secuencia Alternativa 7: Modificar orden de compra La Secuencia Alternativa inicia en el paso 11 de la secuencia normal cuando se desea Modificar una orden de compra. 1. El sistema valida que el estado de la orden de compra sea Abierta o Reabierta. 2. El sistema habilita la opción “Modificar orden de compra”. 3. El actor selecciona la opción “Modificar orden de compra”. 4. El sistema acondiciona los campos modificables de la orden de compra (encabezado y detalle) de forma que puedan ser modificados por el actor. 5. El sistema invoca el caso de uso <CU_GG_COMPRAS_ODC_01> <CU_RegistrarODC> ejecutando la secuencia normal a partir del paso 5. 6. La secuencia alternativa termina y finaliza el caso de uso. Secuencia Alternativa 8: Anular orden de compra La Secuencia Alternativa inicia en el paso 11 de la secuencia normal cuando se desea Modificar una orden de compra. 1. El sistema valida que el estado de la orden de compra sea Aprobada. 2. El sistema habilita la opción “Anular orden de compra”. 3. El actor selecciona la opción “Anular orden de compra”. 4. El sistema despliega un mensaje al actor preguntando si desea Anular la orden de compra. 5. El actor acepta que desea Anular la orden de compra. 6. El sistema le envía al Legado el número de la orden de compra y le solicita al Legado que modifique el estado de los artículos a “Anulada” <CU_GF_COMPRAS_ODC_07> <CU_Cambiar_Estado_Artículos_ODC>. 7. La secuencia alternativa termina y finaliza el caso de uso. Secuencia Alternativa 9: Revertir estado de la orden de compra La Secuencia Alternativa inicia una vez han sido desplegados el encabezado y detalle de la orden de compra en el paso 10 y se desea revertir el estado de una orden de compra al estado anterior. 1. El sistema verifica que el estado de la ODC sea Rechazada, Aprobada, Anulada o Confirmada y habilita la opción “Revertir Estado”. 2. El actor selecciona la opción “Revertir Estado”. 3. El sistema despliega un mensaje indicando el estado al cual se revertirá la orden de compra y pregunta sobre la confirmación de la acción. 4. El actor acepta que desea revertir el estado de la orden de compra. 5. El sistema le envía al Legado el número de la orden de compra y le solicita al Legado que modifique el estado de los artículos al estado anterior correspondiente <CU_GF_COMPRAS_ODC_07> <CU_Cambiar_Estado_Artículos_ODC>. 6. La secuencia alternativa termina y finaliza el caso de uso. 76 Includes: < CU_GF_COMPRAS_ODC_04> <CU_Listar_ODC > <CU_GF_COMPRAS_ODC_05> <CU_Consultar_ODC> <CU_GF_COMPRAS_ODC_07> <CU_Cambiar_Estado_Artículos_ODC> <CU_GG_COMPRAS_ODC_11> <CU_Notificar_Evento_ODC> <CU_GG_COMPRAS_ODC_01> <CU_RegistrarODC_> Prioridad: Alta Frecuencia de uso: Alta Tabla 6. Caso de Uso: Trabajar con orden de compra. El caso de uso relacionado al envío de las notificaciones por correo electrónico se describe en la tabla 7 a continuación: ID CU_GG_COMPRAS_ODC_11 Nombre Caso de Uso CU_Notificar_Evento_ODC Proceso compras Subproceso orden de compra Creado por: Jonatán Sánchez Modificado por: Jonatán Sánchez Fecha de Creación 10/12/10 Fecha Modificación 25.03.11 Actividad 1. Notificar los eventos la orden de compras Actores: Generador de orden de compras y Analista de compras Descripción: Notificar el cambio de estado de las ordenes de compras enviando un correo electrónico con la información Evento iniciador: 1. Invocar el método notificarEventoODC Precondiciones: 3. Los consumidores deben estar correctamente acoplados con el servicio, y debe ser una transacción de un consumidor seguro o válido. Código del correo electrónico, Número de orden de compra. 4. correo electrónico de los destinatarios. Postcondiciones: Notificación de Órdenes de compra Secuencia Normal: 1. Se envía un correo electrónico de acuerdo a los siguientes eventos: 77 1.1 ordenes Generadas, Enviar E-mail al Analista de compras, con el Número de la orden de compra, indicando que la orden se encuentra pendiente por aprobar. Caso de uso <CU_GF_COMPRAS_GNR_02> <CU_Notificar_Por_Email>. 1.2 ordenes Aprobadas, Rechazadas, Confirmadas, Anuladas y Rechazadas con opción de Modificar: Enviar E-mail al Generador de orden de compras (y Generadores de Requisición en caso de ordenes Aprobadas), con el Número de la orden de compra, indicando que la orden ha sido Aprobada, Rechazada, Confirmada, Anuladas o Reabierta para modificación. Caso de uso <CU_GF_COMPRAS_GNR_02> <CU_Notificar_Por_Email>. 2. Finalizar el caso de uso. Secuencia Alternativa: Includes: <CU_GF_COMPRAS_GNR_02> <CU_Notificar_Por_Email> Prioridad: Alta Frecuencia de uso: Alta Tabla 7. Caso de Uso: Notificar Evento de orden de compra. El caso de uso relacionado a la selección de artículos para la generación de la orden de compra se muestra a continuación en la tabla 8: ID CU_GF_COMPRAS_ODC_08 Nombre Caso de Uso CU_Seleccionar_Articulo Proceso compras Subproceso orden de compra Creado por: Jonatán Sánchez Modificado por: Jonatán Sánchez Fecha de Creación 09.12.2010 Fecha Modificación 22.03.2011 Actividad Seleccionar Articulo Actores: Generador de orden de compra. Descripción: Permite seleccionar el artículo Evento iniciador: 1.Invocar el método seleccionarArticulo Precondiciones: 1. Los consumidores deben estar correctamente acoplados con el servicio y debe ser una transacción de un consumidor seguro o válido. 2. Código de Proveedor (Opcional). 78 Postcondiciones: 2. Artículo seleccionado Secuencia Normal: 1. El sistema despliega los filtros de búsqueda de Artículos en el Legado (Repositorio de Artículos). Los filtros son los siguientes: Índice de Clasificación, Código de Clasificación, Código de Artículo y Descripción del Artículo 2. El actor ingresa y/o selecciona información para la búsqueda de los siguientes campos: - Índice de Clasificación de Artículos (Obligatorio) - Código de Clasificación de Artículos (Opcional). - Código del Artículo o parte de él (Opcional). - Descripción del artículo o parte de ella (Opcional). Al menos debe seleccionar un filtro 3. El sistema habilita la opción de “Buscar Artículos”. 4. El actor selecciona la opción de “Buscar Artículos”. 5. El sistema consulta al Legado los artículos con los parámetros de búsqueda seleccionado e ingresados por el actor. 6. El Legado retorna un mensaje de respuesta confirmando la operación con uno o mas artículos encontrados. 7. El sistema despliega la Lista de Artículos con la opción de seleccionar, uno o más Artículos. 8. El sistema muestra y habilita para todos los ítems de la lista campos de entrada de datos, tales como: cantidad, precio unitario, ancho, largo, calibre/espesor y observación. 9. El sistema deshabilita para todos los ítems que sean del tipo Estándar los campos ancho, largo, calibre/espesor. 10. El actor selecciona el(los) Artículo(s) e ingresa los datos que corresponda con el ítem seleccionado. 11. El actor selecciona la opción de Continuar. 12. El sistema valida que los datos de los ítems seleccionados sean correctos. (Ej. La cantidad requerida sea un valor numérico de 15 dígitos enteros y 3 decimales). 13. El sistema despliega un mensaje preguntado al actor si desea agregar los artículos seleccionados o sustituir los existentes con la nueva selección. 14. El actor selecciona la opción Agregar. 15. Finalizar el Caso de Uso. Secuencia Alternativa: Secuencia Alternativa 1: Cancelar Buscar Artículos. La secuencia alterna inicia en el paso 4 una vez que el actor selecciona la opción de Cancelar. 1. El sistema limpia la selección y datos ingresados en los filtros del actor (en dado caso que exista alguna selección y/o ingreso de datos en los filtros). 2. La secuencia alterna termina y retorna al paso 15 de la secuencia normal. 79 Secuencia Alternativa 2: Cancelar Confirmación de Selección de Artículos. La secuencia alterna inicia en el paso 14 una vez que el actor selecciona la opción de Cancelar. 1. La secuencia alterna termina y retorna al paso 7 de la secuencia normal. Secuencia Alternativa 3: El Legado no encuentra Artículos con el criterio de búsqueda. La secuencia alterna inicia en el paso 6 una vez que el sistema no encuentra artículos con el criterio de búsqueda. 1. El Legado indica que no existe Artículos con el criterio de búsqueda. 2. El sistema genera un mensaje indicándose al actor “No se encontró Artículos con el criterio de búsqueda”. 3. La secuencia alterna termina y retorna al paso 2 de la secuencia normal. Secuencia Alternativa 4: No se pudo establecer comunicación con el Legado. La secuencia alterna inicia para todos aquellos pasos en la secuencia normal no pueda lograr comunicación con el Legado. 1. El sistema genera un mensaje de error indicándole al actor “No se puede establecer comunicación con el sistema Legado”. 2. La secuencia alterna termina y finaliza el caso de uso. Secuencia Alternativa 5: Cancelar La secuencia alterna inicia cuando el actor invoca la opción cancelar la actividad. 1. El sistema confirma si el actor realmente desea cancelar la actividad. 2. La secuencia alternativa termina y finaliza el caso de uso o retorna al paso previo donde fue seleccionada la opción. Secuencia Alternativa 6: Sustituir los artículos existentes La secuencia alterna inicia en el paso 13 cuando el sistema pregunta al actor si desea agregar los artículos seleccionados o sustituir los existentes con la nueva selección. 1. El actor selecciona la opción sustituir. 2. El sistema despliega un mensaje indicando al actor que todos los ítems serán sustituidos por la nueva selección de artículos. 3. El actor selecciona la opción aceptar. 4. La secuencia alternativa termina y retorna al paso 15 de la secuencia normal. 80 Prioridad: Alta Frecuencia de uso: Media Requerimientos especiales: El Legado debe indicar la lista de Artículos activos Comentarios: La funcionalidad de este caso de uso será reutilizada en los distintos procesos de negocio. Tabla 8. Caso de Uso: Seleccionar Artículos. En la tabla 9 a continuación se describe la secuencia para el caso de uso Listar orden de compra: ID CU_GF_COMPRAS_ODC_04 Nombre Caso de Uso CU_Listar_ODC Proceso compras Subproceso orden de compras Creado por: Jonatán Sánchez Modificado por: Jonatán Sánchez Fecha de Creación 10/12/10 Fecha Modificación 18.03.11 Actividad Listar las Órdenes de compras de acuerdo al parámetro indicado. Actores: Generador de orden de compras, Analista de compras y Supervisor de Almacén Descripción: Listar las órdenes de compra que serán consultadas. Evento iniciador: Invocar el método ListarODC Precondiciones: 1. Los consumidores deben estar correctamente acoplados con el servicio, y debe ser una transacción de un consumidor seguro o válido. 2. Alguno o combinación de los siguientes parámetros: Compañía, Proveedor y/o Artículo, estado de la orden, Rango de fecha, Tipo de la orden de compra Postcondiciones: 1. Lista de Órdenes de compra a consultar. Secuencia Normal: 1. El sistema solicita al Legado la lista de órdenes de compra que cumplan con los parámetros de búsqueda y el tipo seleccionado por el usuario. 2. El Legado retorna un mensaje de respuesta (Compañía, unidad solicitante, Tipo de la orden, número de la orden, descripción, fecha de elaboración, 81 proveedor, entre otros) con las órdenes que cumplan con los parámetros de búsqueda seleccionados por el usuario. 3. Finalizar el caso de uso. Secuencia Alternativa Secuencia alternativa 1: La búsqueda de orden de compra no arroja resultados La secuencia alternativa inicia en el paso 2 de la secuencia normal, cuando la respuesta del Legado no arroja resultados para los parámetros de búsqueda seleccionados. 1. El sistema muestra un mensaje indicando que no existen Órdenes de compra con los parámetros de búsqueda seleccionados. 2. La secuencia alternativa termina y retorna al paso 3 de la secuencia normal. Secuencia Alternativa 2: No se pudo establecer comunicación con el Legado. La secuencia alternativa inicia para todos aquellos pasos en la secuencia normal que no pueda lograr comunicación con el Legado. 1. El sistema genera un mensaje de error, indicándole al actor que “No se puede establecer comunicación con el sistema Legado”. 2. La secuencia alterna termina y finaliza el caso de uso. Prioridad: Alta Frecuencia de uso: Alta Tabla 9. Caso de Uso: Listar orden de compras. A continuación en la tabla 10 se describe el caso de uso relacionado a Consultar orden de compra: ID CU_GF_COMPRAS_ODC_05 Nombre Caso de Uso CU_Consultar_ODC Proceso compras Subproceso orden de compras Creado por: Jonatán Sánchez Modificado por: Jonatán Sánchez Fecha de Creación 10/12/10 Fecha Modificación 18.03.11 Actividad 1. Consultar la orden de compras 82 Actores: Generador de orden de compras y Analista de compras Descripción: Mostrar el encabezado y detalle de la orden de compra Evento iniciador: Invocar el método ConsultarODC Precondiciones: 1. Los consumidores deben estar correctamente acoplados con el servicio, y debe ser una transacción de un consumidor seguro o válido. 2. Número de orden de compra a consultar Postcondiciones: 3. Información de la orden de compra consultada Secuencia Normal: 1. El sistema le envía al Legado el número de la orden de compra y le solicita la información del encabezado y detalle de la orden de compra. 2. El Legado retorna un mensaje de respuesta con la información de la orden de compra. 3. Finalizar el caso de uso. Secuencia Alternativa: Secuencia alternativa 1: La búsqueda de orden de compra no arroja resultados La secuencia alternativa inicia en el paso 2 de la secuencia normal, cuando la respuesta del Legado no arroja resultados. 1. El sistema muestra un mensaje indicando que no existen Órdenes de compra con el número dado. 2. La secuencia alternativa termina y retorna al paso 3 de la secuencia normal. Secuencia Alternativa 2: No se pudo establecer comunicación con el Legado. La secuencia alternativa inicia para todos aquellos pasos en la secuencia normal donde no se pudo lograr comunicación con el Legado. 1. El sistema genera un mensaje de error, indicándole al actor que “No se puede establecer comunicación con el sistema Legado”. 2. La secuencia alterna termina y finaliza el caso de uso. Prioridad: Alta Frecuencia de uso: Alta Tabla 10. Caso de Uso: Consultar orden de compras. La tabla 11 describe el caso de uso de cambiar estado de artículos de la orden de compra. 83 ID CU_GF_COMPRAS_ODC_07 Nombre Caso de Uso CU_Cambiar_Estado_Artículos_ODC Proceso compras Subproceso ordenes de compras Creado por: Jonatán Sánchez Modificado por: Jonatán Sánchez Fecha de Creación 13.12.2010 Fecha Modificación 22.03.11 Actividad Cambiar el estado del artículo en la orden de compra Actores: Generador de orden de compras y Analista de compras Descripción: Cambiar el estado del artículo en la orden de compra Evento iniciador: 1. Invocar el método cambiarEstadoArticuloODC Precondiciones: 1. Los consumidores deben estar correctamente acoplados con el servicio, y debe ser una transacción de un consumidor seguro o válido. 2. Número de la orden de compra, Lista de Códigos de artículos (al menos un ítem) y el estado (Por Aprobar, Aprobada, Abierta, etc). Postcondiciones: 1. Estado del artículo actualizado en la orden de compra Secuencia Normal: 1. El sistema solicita al legado que modifique el estado de los artículos (le envía el número de la orden de compra, la lista de artículos y el estado a cambiar). 2. El Legado modifica el estado de los artículos de la orden de compra y retorna un mensaje de respuesta confirmando la operación. 3. Finalizar Caso de Uso. Secuencia Alternativa: Secuencia Alternativa 1: El Legado no logra modificar el estado de un artículo La secuencia alternativa inicia en el paso 2 una vez que el Legado no puede modificar el artículo con el nuevo estado. 1. El sistema Legado indica que no fue posible lograr la operación de modificar el estado del artículo. 2. El sistema genera un mensaje de error indicando que “No fue posible modificar el estado del artículo”. 3. La secuencia alterna termina y finaliza el caso de uso. Secuencia Alternativa 2: No se pudo establecer comunicación con el Legado. 84 La secuencia alternativa inicia para todos aquellos pasos en la secuencia normal que no pueda lograr comunicación con el Legado. 1. El sistema genera un mensaje de error, indicándole al actor que “No se puede establecer comunicación con el sistema Legado”. 2. La secuencia alternativa termina y finaliza el caso de uso. Prioridad: Alta Frecuencia de uso: Alta Tabla 11. Caso de Uso: Cambiar estado de orden de compras. Finalmente la tabla 12 describe el caso de uso de Revertir estado de una orden de compra. ID CU_GG_COMPRAS_ODC_06 Nombre Caso de Uso CU_Revertir_orden_compras Proceso compras Subproceso orden de compras Creado por: Jonatán Sánchez Modificado por: Fecha de Creación 16.01.12 Fecha Modificación Actividad 1. Revertir estado de una orden de compras Actores: Generador de orden de compras y Analista de orden de compras Descripción: Permite revertir una orden de compra. Las ordenes Anuladas podrán ser revertidas por el Generador de orden de compras. Las ordenes Aprobadas o Rechazadas podrán ser revertidas por el Analista de orden de compras Evento iniciador: 1. Invocar el método revisarODC Precondiciones: 1. Los consumidores deben estar correctamente acoplados con el servicio, y debe ser una transacción de un consumidor seguro o válido. 2. La orden debe existir y debe estar en estado “Aprobada”, “Rechazada” o “Anulada”. Postcondiciones: 1. orden de compra con estado “Aprobada”, “Rechazada” o “Reabierta” ó en su estado original. Secuencia Normal: 1. El caso de uso inicia cuando el actor accede a la funcionalidad de “Revertir orden de compra”. 85 2. El sistema despliega las Órdenes de compra de acuerdo a los privilegios del actor y según los parámetros seleccionados (caso de uso: < CU_GF_COMPRAS_ODC_04> <CU_Listar_ODC > 3. El actor selecciona la orden de compra que desea revertir. 1. El sistema invoca el caso de uso <CU_GF_COMPRAS_ODC_05> <CU_Consultar_ODC> con el numero de la ODC y la compañía seleccionada en el paso 3 y muestra el detalle de la ODC seleccionada. 5. El sistema muestra los posibles estados a los que se puede revertir la orden de compra seleccionada: a. orden Aprobada puede ser revertida a Rechazada o Reabierta b. orden Rechazada puede ser revertida a Aprobada o Reabierta c. orden Anulada puede ser revertida Reabierta 6. El actor selecciona el estado al cual desea revertir la orden de compra y selecciona la opción “Aceptar” 7. El sistema despliega un mensaje de información indicándole al actor “¿Está seguro que desea procesar esta opción?”. 8. El actor acepta el mensaje de confirmación. 9. El sistema le solicita al Legado el cambio de estado de la orden al estado seleccionado <CU_GF_COMPRAS_ODC_07> <CU_Cambiar_Estado_Artículos_ODC> 10. El Legado retorna un mensaje de respuesta confirmando la operación. 11. El sistema despliega un mensaje de confirmación indicando que la operación ha sido realizada con éxito. 12. Sí el nuevo estado seleccionado por el actor es “Aprobada” ó “Rechazada”, el sistema ubica en el detalle de la orden de compra el email del generador; e Invoca el Caso de Uso <CU_GG_COMPRAS_ODC_11> <CU_Notificar_Evento_ODC> para notificar al generador de la orden del cambio de estado 13. Finaliza el caso de uso Secuencia Alternativa: Secuencia Alternativa 1: Finalizar La secuencia alternativa inicia cuando el actor invoca la opción finalizar la actividad. 1. El sistema confirma si el actor realmente desea finalizar la actividad. 2. La secuencia alternativa termina y finaliza el caso de uso. Secuencia Alternativa 2: No se pudo establecer comunicación con el Legado. 86 La secuencia alternativa inicia para todos aquellos pasos en la secuencia normal que no pueda lograr comunicación con el Legado. 1. El sistema genera un mensaje de error, indicándole al actor que “No se puede establecer comunicación con el sistema Legado”. 2. La secuencia alternativa termina y finaliza el caso de uso. Secuencia Alternativa 3: El usuario no acepta la confirmación La secuencia alternativa inicia en el paso 8 de la secuencia normal cuando el actor no acepta el mensaje de confirmación generado por el usuario 1. El sistema muestra la información de la orden tal cual como fue cargada por el usuario. 2. La secuencia alternativa termina y regresa al paso 3 de la secuencia normal Includes: < CU_GF_COMPRAS_ODC_04> <CU_Listar_ODC > <CU_GF_COMPRAS_ODC_05> <CU_Consultar_ODC> <CU_GF_COMPRAS_ODC_07> <CU_Cambiar_Estado_Artículos_ODC> <CU_GG_COMPRAS_ODC_11> <CU_Notificar_Evento_ODC> <CU_GG_COMPRAS_ODC_01> <CU_RegistrarODC_> Prioridad: Alta Frecuencia de uso: Alta Tabla 12. Caso de Uso: Revertir estado de orden de compras. 3.2.2 Servicios Candidatos Al definir los casos de uso, aquellas actividades repetitivas y que represaban una funcionalidad significativa del negocio fueron identificadas y calificadas como candidatos a servicios. Dichos candidatos a servicios fueron definidos de acuerdo a los principios que enuncia la arquitectura SOA, en la que cada uno de los servicios identificados es atómico y de bajo acoplamiento entre ellos. Esta actividad corresponde a la tarea racionalizar servicios descrita en la figura 14 de la fase de identificación. Los candidatos de servicios identificados son agrupados y clasificados en el portafolio de servicios. El análisis del portafolio permite en esta fase y en la fase de 87 Especificación definir cuáles de ellos serían desarrollados y expuestos como servicios para la organización El resultado de la aplicación de la técnica de descomposición de dominio del proceso en áreas funcionales, obtenido por medio de la definición de los casos de uso y la identificación de servicios candidatos, que conforman el portafolio de servicios, para el proceso de orden de compra se muestran en la siguiente tabla: Dominio Objeto de Negocio (Componente funcional) Servicios Candidatos Registro de la orden de compra orden de compra Registrar orden de compras. Actualizar orden de compras. Obtener datos de compañía. Obtener datos de sucursal. Cambiar estado de orden de compra. Notificar Evento de orden de compra. Repositorio de Artículos Obtener Índices de clasificación de artículos. Obtener Código de clasificación de artículos. Obtener datos de compañía Buscar artículos. Repositorio de Proveedores Obtener Clase de Proveedor Buscar Proveedor Análisis de la orden de compra orden de compra Cambiar estado de orden de compra. Consultar orden de compra Listar orden de compra Notificar orden de compra 88 Revertir orden de compra orden de compra Cambiar estado de orden de compra. Consultar orden de compra Listar orden de compra Tabla 13. Servicios candidatos para el proceso de orden de compras. 3.3 Fase de Especificación y Realización Las actividades de las fases de Especificación y Realización en este caso se fusionaron en el ciclo de vida del desarrollo de la solución. La definición de la arquitectura SOA, la especificación de servicios y componentes se realizó evaluando la factibilidad técnica de las decisiones tomadas y de la mano con los principios del paradigma orientado a servicios. En esta fase se definió de manera formal y con detalle técnico la arquitectura SOA que soporta la solución propuesta para el proceso de orden de compras. Los servicios identificados en la fase anterior son diseñados y fueron especificadas sus referencias, operaciones e interfaces. El resultado de esta fase es la especificación técnica de la Arquitectura SOA y de los servicios y componentes funcionales que constituirán la solución SOA propuesta. 3.3.1 Arquitectura Funcional La arquitectura funcional para esta solución, que corresponde a la actividad de especificación de las capas SOA, se muestra en la siguiente figura: 89 Figura 19. Arquitectura Funcional de la Solución El diagrama representa las capas funcionales descritas en la solución, los elementos inmersos dentro de cada una las capas, y finalmente la forma en que éstas interactúan. La suite de productos Websphere de IBM, fué el conjunto de herramientas seleccionadas por la empresa para la implementación de la solución SOA-BPM. Consumidores: Esta capa representa el equipo de compras de la empresa, los cuales estarán dedicados primordialmente a utilizar e invocar la funcionalidad expuesta por la solución, a través de WebSphere Portal. Websphere Portal proporciona a los usuarios un acceso centralizado a las aplicaciones, al contenido Web y a la información personalizada, es el ambiente de ejecución y el contenedor de los portlets desarrollados y que representan la interfaz de usuario, el front end de la solución SOA. Procesos de Negocio: Es la capa funcional donde residen los procesos de negocio en ejecución, tomando como base el modelamiento del proceso construido a través de Aplicaciones Operacionales Componentes de Servicios (WebSphereProcessServer / WebSphereApplicationServer) Servicios Atómicos y Compuestos (WebSphere ProcessServer) Procesos de Negocio (WebSphere ProcessServer) Consumidores (WebSphere ApplicationServer) Servicio Atómico Servicio Compuesto Datos Datos Operacionales Modelado de Procesos (Business Modeler) Ensamble Procesos (WID) Desarrollo Servicios (WID) Desarrollado Interfaz Usuario Portlet Factory Reglas de negocio / parametrizaciones CIF Motor Decision Motor Decision Data Data Data Data CPT Desarrollo Ejecución Aplicaciones Operacionales Componentes de Servicios (WebSphereProcessServer / WebSphereApplicationServer) Servicios Atómicos y Compuestos (WebSphere ProcessServer) Procesos de Negocio (WebSphere ProcessServer) Consumidores (WebSphere ApplicationServer) Servicio Atómico Servicio Compuesto Datos Datos Operacionales Modelado de Procesos (Business Modeler) Ensamble Procesos (WID) Desarrollo Servicios (WID) Desarrollado Interfaz Usuario Portlet Factory Reglas de negocio / parametrizaciones CIF Motor Decision Motor Decision Data Data Data Data CPT Desarrollo Ejecución Portal Enable ERP 90 WebSphere Business Modeler, los cuales son desplegados para ejecutarse dentro de WebSphere Process Server. Process Server, es el servidor de procesos que provee el ambiente de ejecución para la integración de procesos de negocios. La infraestructura está construida encima de WebSphere Enterprise Service Bus el cual provee todas las capacidades de mediación de flujos de información así como también proporciona la calidad de servicio provista por el servidor de Aplicaciones en el que se sustenta: WebSphere Application Server Network Deployment. WebSphere Process Server soporta distintas clases de procesos de negocios, garantizando la interoperabilidad y flexibilidad como parte de la arquitectura orientada a servicios (SOA) a través de la adopción de estándares como BPEL, servicios Web y XML. El servidor de procesos provee el ambiente de ejecución de componentes del tipo Service Component Architecture (SCA) tales como Procesos de Negocios (BPEL), Tareas Humanas y las Reglas de Negocios que conforman la solución modelada e implementada. Servicios: La capa de servicios es donde se alojarán los protocolos y estándares que sirven para intercambiar los datos entre el sistema Legado y Websphere, publicando las funcionalidades identificadas como servicios reutilizables de la solución, con base en el consumo requerido por las directrices de la empresa en un ambiente ESB. Un bus de servicios de empresa (ESB) es un patrón de “middleware” que unifica y conecta servicios, aplicaciones y recursos dentro de un negocio. Dicho de otra manera, es el marco dentro del cual, las funcionalidades de las aplicaciones de negocios existentes en el sistema legado son puestas a disponibilidad para la reutilización de las aplicaciones implementadas por el sistema desarrollado y que forman parte de la organización. El ESB sobre el cual está construido Process Server es una infraestructura de conectividad flexible que permite la integración de aplicaciones y servicios, permitiendo la conectividad e integración de soluciones basada en estándares, con una cantidad y una complejidad reducida de interfaces. La función de ESB permitirá la exposición de las interfaces orientadas a servicios, manejando la lógica de integración. 91 Aplicaciones: En esta capa está ubicada la funcionalidad que compone el ERP de la empresa, contenida dentro del sistema Legado, el cual permite utilizar dicha funcionalidad a través de mecanismos de integración definidos. La forma en la que serán expuestas las funcionalidades existentes de la organización depende de las características del sistema legado y de cómo están implementadas, en este caso se trata de un sistema monolítico donde las funcionalidades de negocios coexisten con alto acoplamiento entre ellas. En este sentido la integración entre las funcionalidades de los procesos de negocio que debieron ser expuestas como servicios por el sistema legado y el sistema desarrollado será por medio de WebSphere Adapters. WebSphere Adapters permite la integración de aplicaciones y de las soluciones de integración de procesos, conectando las aplicaciones de la empresa dentro de la infraestructura de integración. 3.3.2 Especificación de Servicios El propósito de esta sección es especificar el funcionamiento de la interfaz de servicio del proceso de orden de compras desde una perspectiva lógica funcional (ver tabla 14). Dicha actividad corresponde a la actividad ocho descrita en la figura 14. Nombre del Servicio GestiónODC Dueño Funcional Gerencia de Informática Tipo de Servicio (Catalogación Negocio) - Servicio de Consulta - Servicio de Activación Tipo de Servicio (Catalogación Técnica) - Servicio de Proceso Versión No. 1.0 Tabla 14. Descripción del Servicio Gestión ODC Se describirá las operaciones solicitud, descripción, tipo de dato, longitud aplicarán para el mensaje de entrada y mensaje de excepción que puede requeridos como parte de la respuesta. 3.3.2.1 Interfaz de Servicio GestionODC En esta sección se listan las funciones identificadas que son ejecutadas com del servicio, a partir de las agrupaciones de negocio denotadas en cada una de las interfaces del servicio A continuación interfaz de servicio GestionODC. # Operación del servicio 1 OP01 registrar 2 OP02 cambiarEstado 3 OP03 consultar 4 OP04 listar las operaciones, los mensajes de solicitud y respuesta (atributos de solicitud, descripción, tipo de dato, longitud y cardinalidad), re aplicarán para el mensaje de entrada y mensaje de excepción que puede como parte de la respuesta. Interfaz de Servicio GestionODC se listan las funciones identificadas que son ejecutadas com del servicio, a partir de las agrupaciones de negocio denotadas en cada una de las interfaces del servicio (ver figura 20). Figura 20. Interfaz Gestión ODC A continuación en la tabla 15 se identifican las operaciones que conforman la faz de servicio GestionODC. Nombre de la Operación registrar Síncrona cambiarEstado Síncrona consultar Síncrona listar Síncrona 92 mensajes de solicitud y respuesta (atributos de cardinalidad), restricciones que se aplicarán para el mensaje de entrada y mensaje de excepción que pueden ser se listan las funciones identificadas que son ejecutadas como parte del servicio, a partir de las agrupaciones de negocio denotadas en cada una de las se identifican las operaciones que conforman la Síncrona/Asíncrona Síncrona Síncrona Síncrona Síncrona 93 5 OP05 actualizar Síncrona 6 OP06 buscarArticulos Síncrona Tabla 15. Operaciones de la Interfaz GestionODC 3.3.2.2 Eventos de servicios A continuación la tabla 16 describe los eventos del proceso de negocio que desencadenan las operaciones del servicio. # Operación del servicio Descripción del Evento 1 OP01 <registrar > • En el momento que el usuario completa la información del encabezado y detalle de la orden de compra con data válida, se invoca esta operación. 2 OP02 <cambiarEstado> • En el momento que el usuario con el rol de Generador de orden de compra toma la tarea, evalúa la orden y toma la decisión de Aprobarla, Rechazarla o Solicitar Modificación, se invoca esta operación • En el momento que el usuario con el rol de Generador de orden de compra desea modificar una orden de compra Abierta o Reabierta para solicitar Aprobación, Guardar o Anularla, se invoca esta operación 3 OP03 <consultar> • En el momento en el que un usuario requiere consultar la información de una orden, se dispara esta operación. • En el momento que un usuario requiere Revertir el estado de una orden de compra y selecciona una orden en específico, se dispara esta operación. 4 OP04 <listar> • En el momento que un usuario requiere buscar una orden de compra para Revertir su estado, se dispara esta operación. 5 OP05 <actualizar> • En el momento que un usuario con el rol de Generador de orden de compra procede a modificar el encabezado y detalle la orden con información valida, se invoca esta operación. 6 OP06 <buscarArticulos> • En el momento en el que un usuario con el rol de Generador de orden de compra procede a agregar artículos a una orden, provenientes de del repositorio de artículos, se invoca esta operación Tabla 16. Eventos por operación de Servicio 94 3.3.2.3 Definición de las Operaciones del Servicio OP01: registrar Esta operación tiene como finalidad, registrar una orden de compra con el detalle de los artículos incorporados en la misma, a partir de artículos que se incorporen desde el repositorio de artículos. - Estructura Mensaje de Entrada OP01: registrar En este apartado se define la estructura del mensaje de entrada involucrado en la operación registrar. Elemento Descripción Tipo de Dato Cardinalidad odc Es el elemento que hereda las características del objeto de Negocio CicloEgresos y representa toda la información del objeto de negocio llamado orden de compras (Odc). Además éste funciona para abstraer todos aquellos parámetros necesarios para que el sistema Legado pueda registrar una orden de compras con la información de los artículos que se desea comprar. Odc 1..1 Tabla 17. Mensaje de Entrada OP01: registrar - Diagrama de Clases Mensaje de Entrada OP01: registrar En esta sección se presenta el diagrama de clases del mensaje de entrada de la OP1: registrar, en el cual se muestran las asociaciones entre las clases que lo componen, ver figura 21. 95 Figura 21. Diagrama de Clases Mensaje de entrada OP01: registrar - Estructura Mensaje de Salida OP01: registrar En este apartado se define la estructura del mensaje de salida involucrada en la operación registrar. Elemento Descripción Tipo de Dato Cardinalidad resultadoOperación Es el elemento que representa un objeto técnico común de respuesta para todos los servicios. ResultadoOperación 1..1 Tabla 18. Mensaje de Salida OP01: registrar - Diagrama de Clases Mensaje de Salida OP01: registrar En esta sección se presenta el diagrama de clases del mensaje de salida de la OP1: registrar, en el cual se muestran las asociaciones entre las clases que lo componen. (Ver figura 22). Figura Diagrama de Clases Mensaje de Salida OP01: registrar En esta sección se presenta el diagrama de clases del mensaje de salida de la OP1: registrar, en el cual se muestran las asociaciones entre las clases que lo componen. Figura 22. Diagrama de Clases Mensaje de salida OP01: registrar 96 Diagrama de Clases Mensaje de Salida OP01: registrar En esta sección se presenta el diagrama de clases del mensaje de salida de la OP1: registrar, en el cual se muestran las asociaciones entre las clases que lo componen. . Diagrama de Clases Mensaje de salida OP01: registrar 97 OP02: cambiarEstado Esta operación tiene como funcionalidad el cambio de estado de los artículos de una orden de compra y también de la orden como entidad de negocio. - Estructura del Mensaje de Entrada OP02: cambiarEstado En este apartado se define la estructura del mensaje de entrada involucrado en la operación cambiarEstado. Así mismo, se tomará como premisa la información del elemento detalles del objeto de negocio ODC, si éste posee una colección vacía, se cambiará todos los artículos con el nuevo estado que es definido en el objeto ODC, de lo contrario se tomará cada ítem de dicha colección cambiando el estado de cada artículo que pertenece al campo detalles de la ODC. Elemento Descripción Tipo de Dato Cardinalidad odc Es el elemento que hereda las características del objeto de Negocio CicloEgresos y representa toda la información del objeto de negocio llamado orden de compras (Odc). Además éste funciona para abstraer todos aquellos parámetros necesarios para que el legado pueda registrar una orden de compras con la información de los artículos que se requiere comprar. Odc 1..1 Tabla 19. Mensaje de Entrada OP02: cambiarEstado - Diagrama de Clases Mensaje de Entrada OP02: cambiarEstado En esta sección se presenta el diagrama de clases del mensaje de entrada de la OP2: cambiarEstado, en el cual se muestran las asociaciones entre las clases empleadas en el mensaje de entrada. (Ver figura 23). 98 Figura 23. Diagrama de Clases Mensaje de entrada OP02: cambiarEstado - Estructura del Mensaje de Salida OP02: cambiarEstado En este apartado se define la estructura del mensaje de salida involucrada en la operación cambiarEstado. 99 Elemento Descripción Tipo de Dato Cardinalidad resultadoOperación Es el elemento que representa un objeto técnico común de respuesta para todos los servicios. ResultadoOperación 1..1 Tabla 20. Mensaje de Salida OP02: cambiarEstado - Diagrama de Clases Mensaje de Salida OP02: cambiarEstado En esta sección se presenta el diagrama de clases del mensaje de salida de la OP2:cambiarEstado, en el cual se muestran las asociaciones entre las clases que lo componen. (Ver figura 24). Figura 24. Diagrama de Clases Mensaje de salida OP02: cambiarEstado 100 OP03: consultar La operación consultar tiene como finalidad, consultar la información completa de una orden de compra (encabezado y detalle de una ODC) mediante un número que identifica una única ODC en el sistema legado. - Estructura del Mensaje de Entrada OP03: consultar En este apartado se define la estructura del mensaje de entrada involucrado en la operación consultar. Elemento Descripción Tipo de Dato Cardinalidad odc Es el elemento que hereda las características del objeto de Negocio CicloEgresos y representa toda la información del objeto de negocio llamado orden de compras (Odc). Además éste funciona para abstraer todos aquellos parámetros necesarios para que el legado pueda registrar una orden de compras con la información de los artículos que se requiere comprar. Odc 1..1 Tabla 21. Mensaje de Entrada OP03: consultar - Diagrama de Clases Mensaje de Entrada OP03: consultar En esta sección se presenta el diagrama de clases del mensaje de entrada de la OP3: consultar, en el cual sólo se muestran las asociaciones entre las clases empleadas en el mensaje de entrada. (Ver figura 25). 101 Figura 25. Diagrama de Clases Mensaje de entrada OP03: consultar - Estructura del Mensaje de Salida OP03: consultar En este apartado se define la estructura del mensaje de salida involucrada en la operación consultar. Elemento Descripción Tipo de Dato Cardinalidad resultadoOperación Es el elemento que representa un objeto técnico común de respuesta para todos los servicios. ResultadoOperación 1..1 Tabla 22. Mensaje de Salida OP03: consultar 102 - Diagrama de Clases Mensaje de Salida OP03: consultar En esta sección se presenta el diagrama de clases del mensaje de salida de la OP03:consultar, en el cual se muestran las asociaciones entre las clases que lo componen. (Ver figura 26). Figura 26. Diagrama de Clases Mensaje de salida OP03: consultar 103 OP04: listar Esta operación tiene como finalidad, consultar una lista de orden de compras, según distintos parámetros como Compañía, Proveedor y/o Artículo, estado de la orden, Rango de fecha y Tipo de la orden de compra. - Estructura del Mensaje de Entrada OP04: listar En este apartado se define la estructura del mensaje de entrada involucrado en la operación listar Elemento Descripción Tipo de Dato Cardinalidad odc Es el elemento que hereda las características del objeto de Negocio CicloEgresos y representa toda la información del objeto de negocio llamado orden de compras (Odc). Además éste funciona para abstraer todos aquellos parámetros necesarios para que el sistema legado pueda registrar una orden de compras con la información de los artículos que se requiere comprar. Odc 1..1 Tabla 23. Mensaje de Entrada OP04: listar - Diagrama de Clases Mensaje de Entrada OP04: listar En esta sección se presenta el diagrama de clases del mensaje de entrada de la OP4: listar, en el cual sólo se muestran las asociaciones entre las clases empleadas en el mensaje de entrada. (Ver figura 27). 104 Figura 27. Diagrama de Clases Mensaje de entrada OP04: listar - Estructura Mensaje de Salida OP04:listar En este apartado se define la estructura del mensaje de salida involucrada en la operación listar. Elemento Descripción Tipo de Dato Cardinalidad resultadoOperación Es el elemento que representa un objeto técnico común de respuesta para todos los servicios. ResultadoOperación 1..1 Tabla 24. Mensaje de Salida OP04: listar 105 - Diagrama de Clases Mensaje de Salida OP04: listar En esta sección se presenta el diagrama de clases del mensaje de salida de la OP4: listar, en el cual sólo se muestran las asociaciones entre las clases empleadas en el mensaje de salida. (Ver figura 28). Figura 28. Diagrama de Clases Mensaje de salida OP04: listar OP05: actualizar Esta operación tiene como finalidad, actualizar una ODC en el legado. - Estructura del Mensaje de Entrada OP04: listar En este apartado se define la estructura del mensaje de entrada involucrado en la operación actualizar 106 Elemento Descripción Tipo de Dato Cardinalidad odc Es el elemento que hereda las características del objeto de Negocio CicloEgresos y representa toda la información del objeto de negocio llamado orden de compras (Odc). Además éste funciona para abstraer todos aquellos parámetros necesarios para que el legado pueda registrar una orden de compras con la información de los artículos que se desea comprar. Odc 1..1 Tabla 25. Mensaje de Entrada OP05: actualizar - Diagrama de Clases Mensaje de Entrada OP05: actualizar En esta sección se presenta el diagrama de clases del mensaje de entrada de la OP05:actualizar, en el cual se muestran las asociaciones entre las clases que lo componen. (Ver figura 29). Figura 29. Diagrama de Clases Mensaje de entrada OP05: actualizar 107 - Estructura Mensaje de Salida OP05: actualizar En este apartado se define la estructura del mensaje de salida involucrada en la operación actualizar. Elemento Descripción Tipo de Dato Cardinalidad resultadoOperación Es el elemento que representa un objeto técnico común de respuesta para todos los servicios. ResultadoOperación 1..1 Tabla 26. Mensaje de Salida OP05: actualizar - Diagrama de Clases Mensaje de Salida OP05: actualizar En esta sección se presenta el diagrama de clases del mensaje de salida de la OP05:actualizar, en el cual se muestran las asociaciones entre las clases que lo componen. (Ver figura 30). 108 Figura 30. Diagrama de Clases Mensaje de salida OP05: actualizar OP06: buscarArticulos Esta operación tiene como finalidad la consulta de artículos que pertenecen al repositorio de artículos con el fin de ser agregados a una ODC. La búsqueda de los artículos se realiza según código del artículo, descripción, estado del artículo (índice y código de clasificación). - Estructura del Mensaje de Entrada OP06: buscarArticulos En este apartado se define la estructura del mensaje de entrada involucrado en la operación buscarArticulos. 109 Elemento Descripción Tipo de Dato Cardinalidad parametrosBusquedaArticulo Elemento que contiene los parámetros de búsqueda de artículos en el sistema legado. parametrosArticulo 1..1 Tabla 27. Mensaje de Entrada OP06: buscarArticulos - Diagrama de Clases Mensaje de Entrada OP06: buscarArticulos En esta sección se presenta el diagrama de clases del mensaje de entrada de la OP06:buscarArticulos, en el cual se muestran las asociaciones entre las clases que lo componen. Figura 31. Diagrama de Clases Mensaje de entrada OP06: buscarArticulos - Estructura del Mensaje de Salida OP06: buscarArticulos En este apartado se define la estructura del mensaje de salida involucrado en la operación buscarArticulos. Elemento Descripción Tipo de Dato Cardinalidad resultadoOperación Es el elemento que representa un objeto técnico común de respuesta para todos los ResultadoOperación 1..1 110 servicios. Tabla 28. Mensaje de Salida OP06: buscarArticulos - Diagrama de Clases Mensaje de Salida OP06: buscarArticulos En esta sección se presenta el diagrama de clases del mensaje de salida de la OP06:buscarArticulos, en el cual se muestran las asociaciones entre las clases que lo componen. Figura 32. Diagrama de Clases Mensaje de salida OP06: buscarArticulos 111 3.3.2.4 Modelo de Componentes de Servicios En esta sección se describe el modelo de componentes para el subproceso de ODC, tomando como referencia el modelo de componentes definido para el sistema (Modelo de componentes para SOMA). (Ver figura 33). Figura 33. Modelo de Componentes GestiónODC es un componente de servicio que proporciona una abstracción común del mecanismo de implementación y que contiene elementos de especificación y realización para el subproceso de negocio orden de compras. Este componente de Servicio se vale de la utilización de un componente técnico llamado Mediador que tiene como finalidad la de transformar los datos que son dirigidos o que provengan del sistema legado según los requerimientos que la solución de negocios necesite para cada una de las operaciones del componente GestionODC. Además el Mediador invocará los servicios del sistema legado a través del componente Funcional SubProcesoODC, que tendrá la implementación de la comunicación utilizando un Adaptador. 112 3.4 Fase de Implementación Una vez definidos los requerimientos y la factibilidad técnica de la solución propuesta, se llevó a cabo la construcción de cada uno de los componentes de servicios técnicos y funcionales que fueron definidos en el flujo del proceso. 3.4.1 Herramienta de Desarrollo de Procesos de Negocios y Portlets Para las tareas de desarrollo y construcción asociadas a la implementación de la solución, fue utilizado WebSphere Integration Designer (WID), la cual es la herramienta que permite integrar los procesos de negocio con los servicios existentes y que fueron desarrollados. WID es una herramienta de desarrollo basada en SOA, para trabajar con WebSphere Process Server, WebSphere Enterprise Service Bus, y WebSphere Adapters. WID simplifica la integración con características que aceleran la adopción de la arquitectura orientada a servicio, haciendo rendir al máximo los activos de IT existentes, contribuyendo con la reutilización y la eficiencia. Además la herramienta permitió la integración de los equipos de desarrollo para ensamblar las soluciones de negocios definidas, procesos, adaptadores, y código J2EE, ya que permite el desarrollo dirigido según las necesidades del negocio, integrándose completamente con WebSphere Business Modeler para importar el modelado del proceso de negocio definido en las fases iniciales y reducir los tiempos de implementación. Esta herramienta, como ambiente de desarrollo, permitió además de la implementación de los procesos de negocio, el desarrollo de los portlets que constituyen la interfaz de usuario de las actividades que requieren la interacción del Generador y Analista de orden de compras. Una vista del entorno de desarrollo que presenta el Integration Desginer se muestra en la figura 34. 113 Figura 34. Entorno de desarrollo de Websphere Integration Designer 3.4.2 Implementación del Proceso de Negocio orden de compra La implementación del proceso de orden de compras se inició con la importación del modelo del proceso realizado en Modeler (figura 16), en el Integration Designer, de esta forma es generado una versión inicial del BPEL del proceso que será ejecutado en Process Server. La versión inicial del proceso, contiene el flujo y la secuencia de actividades e invocaciones de servicios que permitirán la orquestación del proceso de negocios en tiempo de ejecución. El siguiente paso en la construcción del BPEL del proceso consistió en la configuración y especificación de las interfaces de servicio y referencias del proceso, que son especificadas de la siguiente manera: • Interfaces de servicio del proceso: Crear y Revertir • Referencias del proceso: Guardar, Actualizar y Cambiar Estado En la figura 35, se muestra las interfaces de servicio y referencias utilizadas por el proceso de orden de compra, representado en el diagrama de ensamblaje en el WID. 114 Figura 35. Diagrama de Ensamblado del Proceso de orden de compra La implementación como tal del módulo de orden de compras y por ende del proceso BPEL definido en el diagrama de ensamblaje consistió en la especificación de cada una de las tareas y actividades del proceso modelado, tomando en cuenta : Objetos de negocio: para cada una de las tareas, según la especificación de servicios (entradas y salidas). Interfaz asociada a las tareas: acuerdo a los objetos de negocio especificados. Referencias de servicios: representadas como invocaciones a servicios necesarios para cumplir con el objetivo de la tarea. Variables del proceso, manejadas durante la ejecución del proceso por las instancias creadas. Asignaciones de valores durante el flujo del proceso representados como componentes Assign 115 Componentes de mediación que permiten la transformación de los datos y la comunicación con los servicios expuestos por el sistema legado, representados en el BPEL como módulos de mediación. El objetivo de la implementación del proceso de orden de compras en el Integration Designer es la generación del BPEL del proceso para la ejecución del proceso de negocio en el servidor de procesos, un fragmento del proceso BPEL de orden de compras se muestra en la figura 36 a continuación. Figura 36. Fragmento del BPEL del proceso orden de compras 116 3.4.3 Desarrollo de los portlet’s asociados a la interfaz de usuario del Proceso Una vez realizada la implementación del proceso para el despliegue en Process Server se procedió al desarrollo de los portlets, los cuales serán la interfaz de usuario requerida a fin de que el Generador y el Analista de orden puedan llevar a cabo las tareas que requieren de su interacción. Los portlets son componentes que producen fragmentos de código que se agregan a una página de un portal, en este caso a WebSphere Portal Server y estos son componentes reutilizables que combinan contenido basado en Web con funcionalidades de la aplicación y que siguen el patrón de MVC y están basados en la tecnología J2EE. En este caso los portlets fueron desarrollados utilizando la tecnología Java Server Faces en su especificación JSR 286. Los portlets desarrollados cubren cada una de las funcionalidades del proceso de orden de compras, para su interacción con los usuarios Generadores y Analistas. 3.4.3.1 Descripción de los Portlets Los portlets que a continuación se listan dan una breve descripción de su funcionalidad dentro del subproceso de orden de compras. Nombre del Portlet Descripción del Portlet Crear orden de compra Portlet para la interacción con la tarea humana Crear orden de compra. Este Portlet permite el ingreso de toda la información necesaria para registrar una orden en el sistema legado. Revisar orden de compra Portlet para la interacción con la tarea humana Revisar orden de compra del subproceso de orden de compras. En este portlet el Analista toma la decisión de Aprobar, Rechazar o Solicitar Modificación de la orden que está revisando. 117 Modificar orden de compra Portlet para la interacción con la tarea humana Modificar orden de compra. Este portlet permite realizar ajustes de la información de la orden y cambiar su estado. Consultar orden de compra Portlet de apoyo para consultar la información de una orden de compra almacenada en el legado a partir de los filtros de búsqueda introducidos. Agregar Artículos Portlet de apoyo que permite seleccionar artículos de una lista filtrada según los criterios de búsqueda establecidos. Buscar Proveedor Portlet de apoyo que permite seleccionar un proveedor de una lista filtrada según los criterios de búsqueda. Tabla 29. Descripción de los portlets pertenecientes al proceso de orden de compras 3.4.3.2 Especificación de Portlets 3.4.3.2.1 Descripción portlet: Crear orden de compra Este portlet permitirá ingresar los datos necesarios del encabezado y detalle para la creación de una nueva orden de compra utilizando el proceso implementado en Websphere Process Server para tal fin. Para el ingreso de los artículos que va a contener la orden de compra, se utilizará el portlet de apoyo Agregar Artículos y Agregar Proveedor. - Casos de uso relacionados • CU_GG_COMPRAS_ODC_02 :CU_RegistrarODC • CU_GF_COMPRAS_ODC_08: CU_Seleccionar_Articulo • CU_GF_COMPRAS_ODC_07: CU_Cambiar_Estado_Artículos_ODC • CU_GG_COMPRAS_ODC_11: CU_Notificar_Evento_ODC 118 - Diagrama de Secuencia En esta sección se muestra un diagrama de secuencia que ilustra el flujo de información a través del Portlet hasta llegar a Websphere Process Server, y el sistema legado. (Ver figura 37). Figura 37. Diagrama de secuencia Crear orden de compra 3.4.3.2.2 Descripción portlet: Revisar orden de compra El portlet Revisar orden de compra permitirá a los usuarios con rol Analista de orden de compras realizar la revisión de las órdenes de compras. A través de este portlet, el aprobador puede tomar una decisión. Las posibles decisiones son: Aprobar, Rechazar y Solicitar Modificación de la orden. 119 - Casos de usos relacionados - • CU_GF_COMPRAS_ODC_05: CU_Consultar_ODC • CU_GF_COMPRAS_ODC_07: CU_Cambiar_Estado_Artículos_ODC • CU_GG_COMPRAS_ODC_11: CU_Notificar_Evento_ODC • CU_GG_COMPRAS_ODC_01: CU_RegistrarODC - Diagrama de Secuencia A continuación en la figura 38 se muestra el diagrama de secuencia que ilustra el flujo de información a través del Portlet hasta llegar a Websphere Process Server , el sistema legado y el LDAP. Figura 38. Diagrama de secuencia Revisar orden de compra 120 3.4.3.2.3 Descripción portlet: Modificar orden de compra El portlet Modificar orden de compra permitirá a los usuarios con el rol Generador de orden de compras realizar la modificación o ajuste de las órdenes de compras que al momento de crearla seleccionaron la opción de "Guardar", estas se encuentran con estado “Abierta” en caso de Modificación o “Reabierta” en caso de ajuste y aparecerán en la bandeja de tarea por hacer de los generadores correspondientes a la unidad de negocio. A través de este portlet, el Generador puede modificar o ajustar la orden y tomar una decisión. Las posibles decisiones son: Solicitar Aprobación, Guardar y Anular. - Casos de usos relacionados: • CU_GF_COMPRAS_ODC_05: CU_Consultar_ODC • CU_GF_COMPRAS_ODC_07: CU_Cambiar_Estado_Artículos_ODC • CU_GG_COMPRAS_ODC_11: CU_Notificar_Evento_ODC • CU_GG_COMPRAS_ODC_01: CU_RegistrarODC - Diagrama de secuencia En esta sección se muestra el diagrama de secuencia que ilustra el flujo de información a través del Portlet hasta llegar a Websphere Process Server, el sistema legado y el LDAP, en relación al portlet Modificar orden de compra. 121 Figura 39. Diagrama de secuencia Modificar orden de compra 3.4.3.2.4 Descripción portlet: Consultar orden de compra El portlet Consultar orden de compra permite a un usuario autorizado consultar una orden almacenada en el legado para visualizar sus datos y su estado. La información manejada en este portlet proviene directamente del sistema legado. - Casos de uso relacionados • <CU_GF_COMPRAS_ODC_05> <CU_Consultar_ODC> 122 - Diagrama de secuencia En esta sección se muestra en la figura 40 un diagrama de secuencia que ilustra el flujo de información a través del Portlet hasta llegar a Websphere Process Server, el sistema legado y el LDAP. Figura 40. Diagrama de secuencia Consultar orden de compra 3.4.3.2.5 Descripción portlet: Agregar Artículos Este es un portlet de soporte que permite ir agregando artículos. Para facilitar la búsqueda de los artículos o servicios se tiene una serie de parámetros que al ejecutarlo se listarán los artículos o servicios que cumplen con ese criterio de búsqueda. 123 - Casos de usos relacionados • < CU_GF_COMPRAS_ODC_08> < CU_Seleccionar_Articulo > - Diagrama de secuencia En esta sección se muestra en la figura 41 un diagrama de secuencia que ilustra el flujo de información a través del Portlet hasta llegar a Websphere Process Server, el sistema legado y el LDAP. Figura 41. Diagrama de secuencia Buscar Artículos 124 3.4.3.2.6 Descripción portlet: Buscar Proveedor Este es un portlet de soporte que permite buscar un proveedor y asociárselo a una orden de compra. Para facilitar la búsqueda del proveedor se tiene una serie de parámetros que al ejecutarlo se listarán los o el proveedor que cumpla con ese criterio de búsqueda. - Casos de uso relacionados Los requerimientos relacionados a este portlet no fueron especificados inicialmente en los casos de uso, no obstante fueron obtenidos durante el ciclo de implementación del proceso para su posterior desarrollo. - Diagrama de secuencia En esta sección se muestra en la figura 42 el diagrama de secuencia que ilustra el flujo de información a través del Portlet hasta llegar a Websphere Process Server y el sistema legado. Figura 42. Diagrama de secuencia Buscar Proveedor 125 3.4.4 Instanciación de la Arquitectura de Referencia SOA En resumen la fase de implementación de la solución SOA estuvo conformada por la construcción del proceso de negocio orden de compra en el BPEL para la orquestación del proceso en Process Server, el cual comprendió la especificación detallada de las interfaces de servicios, especificación de los objetos de negocios que componen el flujo de información del proceso, diseño y especificación de cada una de las secuencias alternativas del flujo del proceso y finalmente la configuración y especificación de las reglas de negocio y manejo de fallas del proceso. Una vez definido el BPEL del proceso, se desarrollaron seis portlets en JSF, los cuales representan la interfaz de usuario a través de la cual los usuarios funcionales de la empresa cumplirán las tareas que requieren de su intervención. De esta forma la instancia de la arquitectura SOA de la solución implementada para el proceso de orden de compras de la empresa queda definida de la siguiente forma, como se muestra en la figura 43. Figura 43. Instancia de la Arquitectura SOA para el proceso de Detallando cada una de las capas tenemos: La capa de Activos existentes comprende los servicios expuestos por el sistema legado de la empresa necesarios para cumplir con los requerimientos del proceso de negocio consumidos por el Process Serve • Crear orden • Actualizar • Cambiar Estado de Instancia de la Arquitectura SOA para el proceso de Detallando cada una de las capas tenemos: ctivos existentes comprende los servicios expuestos por el sistema la empresa. Estos servicios comprenden los servicios de negocios necesarios para cumplir con los requerimientos del proceso de negocio por el Process Server, incluye los siguientes servicios: orden Actualizar orden Cambiar Estado de orden 126 Instancia de la Arquitectura SOA para el proceso de orden de compra ctivos existentes comprende los servicios expuestos por el sistema . Estos servicios comprenden los servicios de negocios necesarios para cumplir con los requerimientos del proceso de negocio y que serán los siguientes servicios: 127 • Buscar Articulos • Buscar Proveedor • Servicios asociados a los formularios como servicio de Índices, servicio de clases, servicio códigos de Iva, entre otros. En la capa de componentes funcionales y de Servicios, se presentan en primera instancia los componentes funcionales que son los encargados de consumir los servicios expuestos por el sistema legado a través de Websphere Adapters. Además esta capa incluye los componentes de Servicios que encapsulan y contienen la implementación del flujo del proceso de negocio, representado como un componente SCA (Service Component Architecture). La capa de servicios está conformada por cada uno de los servicios identificados en las fases de Identificación y especificación y que son expuestos como servicios Web, para ser consumidos por los procesos de negocios o directamente por los portlets. Finalmente se detalla la capa de consumidores, representada por WebSphere Portal Server el cual es el contenedor de los portlets desarrollados para la ejecución de las actividades que requieren de la interacción con los usuarios del proceso de orden de compra. 128 3.5 Fase de Despliegue y Pruebas Las tares de despliegue e integración estuvieron enfocadas en la recepción y la publicación asíncrona de los componentes desarrollados, para ejecutar sobre ellos las pruebas pertinentes. En esta fase el objetivo fue el de la realización de las pruebas, dirigidas a determinar si el comportamiento de la interfaz y la información compartida entre los servicios, cumpliría con los requerimientos especificados. El objetivo fue el de garantizar que todos los servicios entregados a esta fase de pruebas cumplen con lo especificado en la definición de la interfaz, en términos de normas, la validación del formato y los datos. Las pruebas a los componentes de los procesos se hicieron en los ambientes locales de prueba dotados con WebSphere Process Server e integrados al WebSphere Integration Designer. Las pruebas programadas sobre la interfaz de usuario involucradas con Portal se realizaron sobre un ambiente centralizado el cual cuenta con WebSphere Portal Server. 3.5.1 Estrategia de Desarrollo de Pruebas La estrategia de desarrollo está definida por la metodología SOMA, en donde se contemplan la ejecución de los niveles de pruebas que fueron acordados con el cliente, en la fase de implementación, como se muestra en la figura a continuación: Figura 44. Estrategia de desarrollo de pruebas Las pruebas Estáticas corresponden a aquellas pruebas realizadas a los documentos en las fases de diseño de la solución, por ejemplo: Revisiones a 129 documentos de Casos de Uso, Especificación de Servicios y Especificación de Procesos Las pruebas dinámicas corresponden a las pruebas a los programas o al sistema final y se realizaron en esta fase, sin embargo como se trata de un proceso con gran participación del usuario del proceso, fue necesario refinar los requerimientos del negocio y por lo tanto actualizar los documentos definidos en las fases iniciales, por consiguiente las pruebas estáticas fueron aplicadas durante todo el ciclo de desarrollo e implementación de la solución SOA. 3.5.2 Alcance de las Pruebas El alcance de las pruebas comprende la automatización de un conjunto de tareas que conforman el Proceso de orden de compras, tomando en cuenta los diferentes elementos a tener en cuenta para tal propósito. Las funcionalidades tomadas en cuentas fueron: 1. Implementación de las tareas y elementos de decisión correspondientes al proceso de orden de compras conformado por: a. “Crear la orden de compra”. b. “Decisión del generador de la orden (Abierta) c. “Decisión del generador de la orden (Por Aprobar) d. “Revisar la orden”. e. “Cambiar estado de la orden”. f. “Decisión del Analista” (con la opción de aprobada). g. Consultar Órdenes. 2. Implementación de los servicios de integración que soportarán los elementos descritos en el punto anterior. Esto contempla el uso del adaptador propuesto para el intercambio de Información con el Sistema Legado. 3. Servicios para obtener la información necesaria para la creación de la orden (unidades solicitantes, búsqueda y selección de artículos contemplando las unidades de medidas e índices y proveedores, entre otros). 4. Servicio para la inclusión de la orden en el sistema legado. 5. Servicio para la consulta de orden con su detalle. 130 6. Servicio de cambios de estados de la orden. 7. Implementación de la notificación a través del correo electrónico en base al estado de la orden. 8. Implementación de la distribución de tareas de aprobación de órdenes según la estructura jerárquica organizacional. 9. Ejecución de pruebas de distribución de tareas, creando algunas órdenes de compras para unidades organizacionales diferentes. Contemplando los siguientes escenarios: a. Generadores de órdenes diferentes y Analistas de órdenes diferentes. b. Generadores diferentes mismo departamento y la misma compañía solicitando revisión a su aprobador. c. Generadores de diferentes departamentos y de diferentes compañías solicitando revisión a un mismo aprobador. 3.5.3 Áreas de Foco Dado que el objetivo global de las pruebas es reducir los riesgos inherentes en el sistema, conviene entonces considerar áreas de foco y seleccionar las que minimizaran riesgos. El enfoque de las pruebas se puede definir como los atributos de un sistema que deben ser probados para asegurar que los requerimientos técnicos y funcionales sean logrados. Las áreas de foco para la ejecución de las pruebas al sistema son las siguientes: Áreas foco Descripción Funcionalidad y Flujo de Transacciones Toda la funcionalidad implementada debe estar en concordancia con los documentos de requerimientos funcionales y casos de uso. Verificar la correcta y completa ejecución de una transacción desde que es introducida en el sistema, hasta que termina o sale del sistema. Interfaces Prueba que la conexión al sistema legado se realice correctamente. Manejo de Errores Se verificarán las funciones del sistema ante situaciones fuera de borde (parámetros no válidos y desviaciones de los casos de uso). Esto incluye el despliegue de mensajes de error, definidos y aprobados por el cliente, que proveen un feedback adecuado e instrucciones apropiadas al usuario. Tabla 30. Áreas foco de las pruebas a la solución implementada 131 3.5.4 Estrategias y Niveles de Pruebas Según las mejores prácticas se realizaron dos estrategias de pruebas: pruebas estáticas y dinámicas. Las estáticas corresponden a la verificación de la documentación, prototipo y planes según fue definido con el cliente. En este sentido se examinó en detalle las características de ciertos productos de trabajo contra un conjunto esperado de atributos y estándares, con el fin de detectar defectos en las etapas tempranas del proyecto. Lo que permitió reducir los ciclos de prueba y mejorar la calidad de los entregables. Los productos de trabajo revisados en las pruebas estáticas fueron: • Especificaciones de Requerimientos Funcionales y Procesos • Modelo y especificaciones de Casos de Uso • Especificación de Servicios • Matriz de datos • Casos de prueba 3.5.4.1 Pruebas Dinámicas Las pruebas dinámicas consisten en un proceso de verificación o validación operando sobre un producto de trabajo y observando su comportamiento a entradas cambiantes. Estas pruebas se abordaron en etapas. Cada etapa representa un nivel conocido de integración física y calidad. 3.5.4.1.1 Pruebas Unitarias El nivel de pruebas unitarias se refiere a las pruebas iniciales del código perteneciente a un módulo creado. Se verificaron las especificaciones de programas de la lógica interna del programa o módulo y es validada la lógica. Se basaron en las pruebas iniciales realizadas por el desarrollador, al componente o módulo en desarrollo y que determinan que el mismo puede ser entregado para el despliegue. La tabla 31 describe en detalle las pruebas unitarias realizadas en esta fase al proceso de orden de compras. 132 Objetivos • Verificar los componentes de servicios • Autenticación y Autorización • Verificar Entrega y captura de datos desde los legados • Validar Parámetros y variables de session • Validar Formatos y presentación al usuario • Verificar Prueba de comportamiento de cada componente individual • Verificar Pruebas de retorno de información de los servicios expuestos por el legado y requeridos para el modulo Entradas • Especificación de Diseño Detallado • Documento de Arquitectura • Estrategia pruebas Elementos probados • Servicios de autenticación con el Active Directory y el sistema legado. • Servicios para obtener la información necesaria para la creación de la orden de compra (unidades solicitantes, búsqueda y selección de artículos contemplando las unidades de medidas e índices, proveedores, entre otros). • Servicio para la inclusión de la orden en el sistema legado. • Servicio para la consulta de la orden con su detalle. • Servicio de cambios de estados de la orden de compra Salidas • Resultados y/o evidencias de pruebas unitarias Ejecutante • Desarrollador Tabla 31. Pruebas Unitarias al proceso de orden de compra Resultados: Por la naturaleza de las pruebas unitarias realizadas sobre los componentes y portlets desarrollados, no se cuenta con resultados formales. Constancia de su aplicación y culminación satisfactoria de las mismas se ve reflejada en la liberación de estos componentes para el despliegue en el ambiente de calidad y que se convirtieron en los elementos de prueba del siguiente nivel de pruebas: Pruebas de Integración. 133 3.5.4.1.2 Pruebas Funcionales-Sistema Las pruebas estructurales y funcionales fueron ejecutadas para verificar la funcionalidad y solidez del sistema, su detalle se describe a continuación en la tabla 32. Objetivos • Demostrar que el sistema se cumple con los requerimientos funcionales • Ejecutar los tipos apropiados de pruebas relacionados a Flujo de Transacciones y Manejo de Errores Cuando Después de las pruebas Unitarias Entradas • Requerimientos detallados o Modelo de Casos de Uso. o Matriz de requerimientos o Requerimientos no funcionales o Pantallas � Navegación • Diseño externo de la aplicación • Casos de Prueba Salidas Reporte de Pruebas y evidencias Las pruebas de sistema finalizaron una vez todos los casos de prueba fueron ejecutados exitosamente en la iteración número 3. Ejecutante Pruebas Equipo de Pruebas, en este caso el desarrollador y equipo de pruebas de la empresa. Estas pruebas abarcaron lo siguiente: 1. Pruebas Funcionales sobre los siguientes componentes del sistema: • Módulo para la creación de orden de compra • Módulo para la revisión de orden de compra • Módulo para la modificación de orden de compra • Módulo para la Consulta de orden de compra • Pruebas de trazabilidad de errores • Pruebas de flujo de información a través del proceso • Pruebas de Distribución de Tareas Tabla 32. Pruebas Funcionales-Sistema al proceso de orden de compra A fin de probar el sistema y verificar que cumple con los requerimientos funcionales definidos en las fases iniciales, se definieron los casos de prueba en este nivel de pruebas funcionales y que constituyen la especificación detallada de lo que finalmente fue probado. Los casos de prueba incluyen: • Secuencia normal de los casos de uso. 134 • Secuencias alternativas de los casos de uso. • Validaciones asociadas a los campos de entrada de los formularios. • Validaciones asociadas a las reglas de negocios especificadas en el proceso. • Especificación de estilo e interfaz de usuario. • Manejo de errores funcionales • Manejo de errores de la aplicación En total para el proceso de orden de compras fueron definidos 473 casos de pruebas definidos en un documento de Casos de Pruebas. En acuerdo con la empresa fueron realizadas 3 iteraciones para las pruebas y la resolución de defectos, arrojando los resultados presentados en la figura 45. Para la ejecución de las pruebas se definieron dos tipos de defectos: defectos funcionales, relacionados a defectos encontrados en la aplicación inherentes al proceso de negocio, errores de comunicación con el sistema legado y reglas del negocio. También se definieron defectos de interfaz asociados al estilo y la interfaz de los portlets. De igual manera se definieron casos de mejora que surgieron durante el ciclo de iteraciones de las pruebas funcionales y que representaron mejoras y cambios relacionados a la interacción con los portlets y reglas del negocio del proceso. 135 Figura 45. Resultados de las pruebas funcionales El proceso de negocio definido e implementado no fue objeto de modificaciones durante este nivel de pruebas. Como se puede observar en la figura 45, del total de 473 casos de prueba, fallaron en la iteración 1 un total de 15 casos relacionados con defectos funcionales. Para la iteración 2 fallaron 9 casos de pruebas relacionados a defectos funcionales y finalmente para la 3 iteración no se produjeron defectos relacionados a funcionalidades del proceso. En relación a los casos de prueba fallidos asociados a defectos de interfaz, su ocurrencia, aunque mayor que los defectos funcionales representaban correcciones de baja complejidad. 3.5.4.1.3 Pruebas de aceptación de Usuarios Su objetivo fue el de verificar que el sistema alcanzara los requerimientos de usuario especificados. Las pruebas de aceptación con los usuarios persiguieron como objetivo verificar que el sistema se ejecuta como es esperado por el sponsor y por un usuario final de forma tal que puedan aceptar el sistema. 15 9 0 46 30 12 33 35 9 0 10 20 30 40 50 Iteración 1 Iteración 2 Iteración 3 Casos de Prueba Fallidos (Defectos Funcionales) Casos de Prueba Fallidos (Defectos Interfaz usuario) Mejoras 136 Objetivos Validar a través de las pruebas funcionales del sistema que el sistema alcanza la funcionalidad contemplando los requerimientos de usuario Cuando Después de las Pruebas Funcionales ejecutadas por la empresa y el equipo de prueba Usuario final Los usuarios de la empresa realizaron las pruebas de las siguientes tareas del proceso de orden de compra: 1. “Crear la orden de compra”. 2. “Decisión del generador de la orden (Abierta) 3. “Decisión del generador de la orden (Por Aprobar) 4. “Revisar la orden”. 5. “Cambiar estado de la orden”. 6. “Decisión del Analista” (con la opción de aprobada). 7. Consultar Órdenes. Entradas • Necesidades de negocio y requerimientos detallados • Casos de Prueba Salidas • Reporte de pruebas y/o evidencias • Certificación del usuario para el despliegue en producción Ejecutante Usuarios de la empresa Tabla 33. Pruebas de aceptación de usuarios al proceso de orden de compra Se realizaron 2 iteraciones para las pruebas de aceptación de usuario y resolución de defectos, arrojando los resultados presentados en la figura 46. Figura 46. Resultados de las pruebas de aceptación de usuario 2 0 9 3 5 0 0 2 4 6 8 10 Iteración 1 Iteración 2 Defectos Funcionales Defectos Interfaz usuario Mejoras 137 Como se observa en la figura anterior el grueso de los defectos en este nivel de pruebas recayó en defectos asociados a la interfaz de usuario, por lo que una vez resueltos para la segunda iteración se certifica la solución SOA para el proceso de orden de compras y se realiza el despliegue del proceso en el ambiente de Producción. La interacción de los usuarios funcionales no tuvo resultados drásticos, mostrándose los usuarios con gran habilidad para reconocer los mecanismos de interacción como los botones, mensajes y filtros de selección. El despliegue en producción del sistema final incluyó cada uno de las mejoras funcionales reportadas durante la fase de pruebas. No obstante el flujo del proceso de negocio se mantuvo sin modificaciones. El sistema en el ambiente de producción durante esta fase final de pruebas, mostró un desempeño estable y con un manejo robusto de los errores provocados. 138 Conclusiones Una vez culminado el desarrollo e implementación de la solución SOA-BPM para el proceso de orden de compras, descrito en detalle a lo largo de este Trabajo Especial de Grado, se puede concluir que los objetivos planteados fueron alcanzados cumpliendo cabalmente cada una de las fases descritas en la metodología SOMA aplicada. Adaptando la metodología a nuestro caso se llevaron a cabo las siguientes fases para el desarrollo de la solución inicialmente planteada: Identificación, Especificación y Realización, Implementación y Despliegue. En donde cada una de las fases han tenido como resultado un conjunto de entregables y componentes que conforman la solución y entre ellos tenemos: • Especificación de requerimientos funcionales, presentados como Casos de Uso. • Especificación de servicios del Proceso de orden de compra • Modelo del Proceso de orden de compra. • Especificación de flujo del proceso y flujo de componentes y servicios. • Diseño de los componentes funcionales y de servicios. • Portlets desarrollados en JSF bajo la especificación JSR 286 • Resultados de las pruebas unitarias, funcionales y de aceptación de usuario. La implementación satisfactoria de la solución SOA-BPM para el proceso de orden de compra permitió definir una base inicial para la aplicación de la arquitectura SOA a los demás procesos de la empresa en una siguiente etapa. Desde el punto de vista funcional la solución implementada permitió a la empresa: Mejorar el proceso de orden de compra adecuándose a los requerimientos actuales del negocio y permitiendo la especificación detallada del flujo del proceso. Contar con un conjunto de funcionalidades de negocio que ahora son expuestas como servicios y que podrán ser consumidas y aprovechadas por los demás procesos de negocios de la empresa. La interfaz de usuario presentada a través de los portlets desarrollados, representa un cambio de gran importancia para los usuarios funcionales del proceso (Generadores y Analistas) acostumbrados a una interfaz poco usable. La nueva interfaz Web permite contar con un portal de negocios donde conviven los portlets 139 con funcionalidades diversas que permiten llevar a cabo las actividades relacionadas al ciclo completo del proceso de orden de compra. La adaptación del proceso de negocio y la incorporación de nuevas funcionalidades actualmente es de menor impacto ya que el proceso ahora cuenta con un menor acoplamiento entre sus componentes de servicio, ventaja que da la arquitectura de servicios. En conclusión la solución SOA-BPM implementada sobre Process Server y Portal Server para el proceso de orden de compras le permite a la empresa contar con un proceso adaptable y flexible a las necesidades de cambio del negocio, además de contar con un nuevo paradigma de arquitectura para la implementación de los demás procesos de la empresa. Una solución que involucra una arquitectura SOA en conjunto con BPM, permite alinear los activos tecnológicos de la empresa con los procesos de negocios. Su aplicación en conjunto no es imperativa, pero los resultados y beneficios cuando son implementadas en conjunto son mayores. Aquellas empresas con una clara concepción y especificación de sus procesos de negocios, son candidatos para la implementación de una solución de este tipo. Los beneficios de la solución: un portafolio de servicios para la organización, optimización de los procesos de negocios y reducción del acoplamiento entre los componentes, entre otros, permite que la empresa pueda enfrentar los desafíos del entorno en el que se desempeña. 140 Recomendaciones La implementación de la solución para el proceso de orden de compras, fue un proceso complejo, en donde intervinieron factores que influyeron durante todo el ciclo de desarrollo y de los cuales se pueden exponer las siguientes recomendaciones: • Al definir los tiempos de duración de cada fase se debe tomar en cuenta el nivel de conocimiento de las herramientas de software a utilizar por parte del equipo de desarrolladores. • Importante llevar una gestión de manejo del cambio con el cliente de manera que el impacto al asumir los nuevos esquemas pueda ser menos drástico. • Los ambientes de desarrollo y producción deben tener las mismas características técnicas. Esto disminuye los tiempos en desarrollo y adecuación de componentes. 141 Referencias Arsanjani, R., Ghosh S. (2008). SOMA: A method for developing service-oriented solutions, IBM Systems Journal, Vol. 47 no.3 Shaw M., Garlan D. (1994). An Introduction of Software Architecture. World Scientific Publishing Company, Vol I Ganci J., Barcia R. (2008). Case Study: SOA Design Scenario, IBM Red paper Bergland J., Maguil L. (2009). BPM Solution Implementation Guide, IBM Red paper Rolón E. Marco de trabajo para la Gestión en el Modelado de Procesos de Negocio, Universidad Autónoma de Tamaulipas-FIANS Montilva J., Arapé N. (2003). Desarrollo de software basado en componente, Universidad de los Andes, Publicación de las Actas del IV Congreso de Automatización y Control (CAC03) Bass, L., Clements, P., & Kazman, R. (1998). Software Architecture in practice. Addison-Wesley. ISO/IEC/IEEE (2012), Systems and software engineering- Architecture description. Extraído el 14 de abril de 2012 desde www.iso-architecture.org/ieee-1471/ Reinoso C. (2004). Introducción a la Arquitectura de Software, Universidad de Buenos Aires Hepp M., Hinkelmann K. (2007). Workshop on Semantic Business Process and Product Lifecycle Management, Vol. 251 Gartner (2010). Los cinco principios de Gartner para SOA. Extraído el 13 de noviembre de 2011 desde pensandoensoa.com/2010/04/12/los-cinco-principios-de- gartner-para-soa Blanvalet, S., Bolie, J. (2006). BPEL Cookbook: Best Practices for SOA-based integration and composite applications development. Birmingham - Mumbai: Packt Publishing. Lorenz M. (2006). SOA Best Practices. IBM Certified SOA Solution Designer certification. IBM Red paper 142 Meier J., Hill D. (2009). Microsoft Application Architecture Guide, 2nd Edición, Extraído el 14 de abril de 2012 desde www.msdn.microsoft.com/en- us/library/ee658117.aspx#KeyArchitectureStyles Malinverno P., Hill J. (2007). SOA and BPM are Better Togethe, Gartner Esquivel A. (2009). Tecnologías de Información en función de Servicios en una Arquitectura Orientada a Servicio, presentación GBA-IBM Hernández J. (2006). Arquitectura de software: importancia de su ciclo de vida, Extraído el 11 de noviembre de 2011 desde www.enterate.unam.mx/Articulos/2006/febrero/arquitec.htm Ruzek B., Pratt B. (2010) SOA in practice: Case Study in BPEL and SCA. Extraído el 11 de noviembre de 2011 desde www.ibm.com/developerworks/webservices/library/ws-soacasestudy/ Microsoft (2007) La Arquitectura Orientada a Servicios (SOA) de Microsoft aplicada al mundo real, Whitepaper