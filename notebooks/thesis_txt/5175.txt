Microsoft Word - tesis Universidad Central de Venezuela Facultad de Ciencias Escuela de Computación Aplicación Web para la gestión de espacios físicos de la Facultad de Ciencias de la Universidad Central de Venezuela Trabajo Especial de Grado presentado ante la ilustre Universidad Central de Venezuela por: Br. Giselle Boyer Para optar por el titulo de Licenciado en Computación Tutores: Profa. Yosly Hernández Prof. Ernesto Fuenmayor Junio, 2016. i UNIVERSIDAD CENTRAL DE VENEZUELA FACULTAD DE CIENCIAS ESCUELA DE COMPUTACIÓN Acta Quienes suscriben, miembros del jurado designado por el Consejo de la Escuela de Computación, para examinar el Trabajo Especial de Grado titulado “Aplicación Web para la gestión de espacios físicos de la Facultad de Ciencias de la Universidad Central de Venezuela.” presentado por la Bachiller Giselle Desiree Boyer Jimenez, C.I. V-20.675.268, a los fines de optar al título de Licenciado en Computación, dejamos constancia de lo siguiente: Leído como fue dicho trabajo, por cada uno de los miembros del jurado, se fijó el día 2 de Junio de 2016, a las 9:00 am, para que el autor lo defendiera en forma pública, lo que éste hizo en el aula I de la Escuela de Computación, mediante una presentación oral de su contenido, luego de lo cual respondió a las preguntas formuladas. Finalizada la defensa pública del Trabajo Especial de Grado, el jurado decidió aprobar con la nota de ____ puntos. En fe de lo cual se levanta la presente Acta, en Caracas el día 2 de Junio de 2016. ____________________________ Profa. Yosly Hernández Prof. Ernesto Fuenmayor Tutora Tutor _________________________ _________________________ Prof. Santiago Gómez Prof. Franklin Sandoval Jurado Principal Jurado Principal ii Dedicatoria A mis padres y familia quienes con un gran esfuerzo y apoyo incondicional, me permitieron alcanzar éste logro. Los amo. iii Agradecimientos Primero que todo, a mi mami quien con mucho trabajo y esfuerzo se encargo de darme lo que necesitara para llegar hasta aquí, gracias por tu apoyo en todo momento. A mi hermanita, quien siempre busca darme ánimos y demostrarme su apoyo a través de sus particulares muestras de cariño. A mis tíos, tías, abuelas y abuelos que siempre estuvieron ahí para lo que necesitara. A mi novio, Miguel Perdigón, por ser el compañero de tesis que no tuve, por ser siempre mi apoyo y seguirme queriendo aún cuando me estresaba y ni yo misma me soportaba. A mis tutores, por confiar en mí para la realización de este proyecto, por su paciencia, ayuda en todo momento y su comprensión con respecto a mi ajetreado horario. A todos los que colaboraron en mi formación profesional y en la realización de esta tesis. Y finalmente, gracias a Siscotel y a mis compañeros de trabajo por entender mis ausencias, por su ayuda cuando la necesitaba y por las constantes palabras de apoyo durante la realización de este trabajo. iv Resumen La Facultad de Ciencias de la Universidad Central de Venezuela dispone de múltiples espacios, entre los cuales destacan: auditorios, canchas, aulas y salas. Éstos pueden ser empleados para la realización de eventos y actividades y se encuentran a la disposición de la comunidad universitaria y del público en general. La Coordinación de Extensión se encargar de gestionarlos. Para llevar a cabo esta tarea empleaban múltiples herramientas que trabajaban de manera aislada, provocando que el proceso fuese más complejo, extenso y propenso a errores, ya que en cada etapa de la reservación de espacios existe un alto grado de intervención humana. Por esta razón, se requirió la centralización de las actividades que permitan a los interesados el uso de estas áreas, para el beneficio de la comunidad y del personal involucrado. Agesef es la aplicación web desarrollada para la gestión de los espacios de la Facultad de Ciencias. El propósito de su creación es tener a la disposición una herramienta que ayude, tanto a los usuarios como al personal de la Coordinación de Extensión, en la reservación de los espacios de manera sencilla y rápida, que ofrezca toda la información necesaria y además reduzca los tiempos de respuesta. También contribuye en la optimización de dicho proceso realizando la automatización de las actividades que lo conforman, las cuales se realizaban de manera manual por parte del personal de la coordinación. En el siguiente trabajo se explica cada uno de los procesos que permitieron el desarrollo de esta aplicación antes mencionada. Además se expone como fue la experiencia usando la metodología AgilUs, la cual se empleó para el desarrollo de la solución tecnológica, incluyendo el uso de lenguajes y herramientas de desarrollo como Html, Python, CSS, JavaScript y Bootstrap. Palabras claves: Aplicación web, reservación, Agesef, espacio, evento v Índice general Índice de figuras…………………………………………………………….………………..iv Índice de tablas…………………………………………………………….…..…………….vi Introducción………………………………………………………………….………………..1 1. Capítulo 1: Problema de investigación…….…………………...….……………………..4 1.1. Contexto de investigación………………………………..……………………….4 1.2. Problema de investigación………………………………...………………….…..4 1.3. Justificación………………………………………………………………………….7 1.4. Objetivo general…………………………………………………………………....9 1.5. Objetivos específicos……………………………………………………………...9 1.6. Alcance………………………………………………………………………………9 1.7. Metodología de desarrollo de software……………...………………….……...10 1.8. Antecedentes………………………………………………………………...……12 2. Capítulo 2: Marco teórico…………………………...………………..…………….………..16 2.1. Gestión de espacios……………………………………...………………………16 2.2. Aplicaciones web……………………………………………………………...….18 2.2.1. Características de las aplicaciones web…………………...……………...19 2.2.2. Ventajas de las aplicaciones web…………………………………………..21 2.2.3. Desventajas de las aplicaciones web……………………...………………21 2.3. Arquitectura de las aplicaciones web………………...………………………...22 2.3.1. Arquitectura cliente servidor…………………………………...…………….23 2.4. Modelo Vista Controlador………………………………...………………………23 2.5. Tipos de aplicaciones web………………………...……………………………..24 2.5.1. Ejemplos de aplicaciones web…………………………...…………………25 2.6. Herramientas para el desarrollo de aplicaciones web………………………..27 2.6.1. Lenguaje de marcado de hipertexto.......................................................27 2.6.2. Hoja de estilo en cascada.......................................................................29 2.6.3. JavaScript...............................................................................................30 2.6.3.1. JQuery.................................................................................................30 2.6.4. AJAX…………………………………………………………………………..31 vi 2.6.5. Responsive Design…………………………………………………………..32 2.6.6. Framework Python Flask………………………………………...………….33 2.7. Licencia pública general de GNU …………………………………..….......…..34 3. Capítulo 3: Marco aplicativo………………………………..…...………………….……….37 3.1. Fase I: Requisitos……………………………………...…………………………37 3.1.1. Tormenta de ideas…………………………………………...………………37 3.1.2. Perfiles de usuario…………………………………………..……………….38 3.1.3. Requerimientos funcionales y no funcionales…………...………………..40 3.2. Fase II: Análisis………………………………………...…………………………41 3.2.1. Prototipo de interfaz………………………………………………………….42 3.2.2. Guía de estilos………………………………………………………………..46 3.2.3. Modelos de casos de uso………………………...…………………………47 3.2.4. Modelo de objetos del dominio…………………..…………………………52 3.2.5. Diseño lógico y físico de la base de datos……………...…………………54 3.3. Fase III: Prototipaje……………………………………...……………..………...56 3.3.1. Desarrollo……………………………………………………………………..56 3.3.2. Lista de comprobación…………………………………...………………….59 3.4. Fase IV: Entrega………………………………………...………………………..61 3.4.1. Pruebas de usabilidad……..………………………………...………………61 4. Capítulo 4: Resultados…………………………......……………….…………………….65 4.1. Gestión de sesión……………………………….......................................……65 4.2. Reservación de espacios……………...………………………..….…...……….66 4.3. Gestión de solicitudes……………….…………………………......…...……….66 4.4. Gestión de perfil…………………………………………………………………..67 4.5. Gestión de listados de información…………………………………………..68 Conclusiones……………………………………………………………….………………..69 Recomendaciones…………………………………………………………………………..71 Referencias bibliográficas………………………………………………………………….72 Anexo A. Casos de uso...…………………………………………………………………..73 Anexo B. Cuestionario de usabilidad……………………………………………………..76 Anexo C. Resultados prueba de usabilidad….…………………………………………..78 vii Anexo D. Manual técnico de Agesef……………………………………………………...79 Anexo E. Manual de usuario Agesef……………………………………………………...82 Anexo F. Manual de usuario administrador Agesef……………………………………..91 viii Índice de figuras Figura 1.Diagrama de flujo proceso de reservación de espacios………………….…..6 Figura 2.Ciclo de vida de AgilUs.………………………………..……………..……..…..11 Figura 3.Aplicación web de Universidad del País Vasco Euskal Herriko Unibersitatea…………………………………………………………………………..….....13 Figura 4.Aplicación web Universidad Autónoma de Bucaramanga..………………….14 Figura 5.Aplicación web Fundación Parque Científico Universidad del Vallado…….15 Figura 6. Componentes de la arquitectura cliente-servidor…....................................24 Figura 7. Modelo Vista Controlador………….............................................................25 Figura 8.Aplicación web Pixlr…..………………..........................................................27 Figura 9.Aplicación web Evernote………………………………………………...……...28 Figura 10.Aplicación web Spotify…..……...……........................................................28 Figura 11.Aplicación web Netflix……………………………………………………….....29 Figura 12.Tormenta de ideas…………………….……...……......................................39 Figura 13. Prototipo página de inicio …………...……...……......................................43 Figura 14. Prototipo página de auditorios .................................................................44 Figura 15. Prototipo de página del auditorio Tobías Lasser .....................................45 Figura 16. Prototipo calendario del auditorio Tobías Lasser ……...……...................46 Figura 17. Prototipo página de registro e inicio de sesión ……...……......................47 Figura 18. Casos de uso para usuario registrado ……...……....................................50 Figura 19. Casos de uso para miembros de Coordinación de Extensión…...............51 Figura 20. Casos de uso para usuario no registrado.……...………............................52 Figura 21. Modelo de objetos del dominio.……...………............................................54 Figura 22. Modelo lógico y físico de la base de datos.……...………..........................56 Figura 23. Código para la creación de usuarios naturales.……...………....................58 Figura 24. Código para la creación de usuarios jurídicos.……....………....................58 Figura 25. Código para la creación de usuarios administradores.…….......................58 Figura 26. Código para el inicio de sesión de usuarios.…….......………....................59 Figura 27. Código para el inicio de sesión de administradores.……...………............60 Figura 28. Formulario para el inicio de sesión y registro...………..............................66 ix Figura 29. Formulario para la reservación de espacios...………................................67 Figura 30. Sección para la gestión de espacios.……...………...................................68 Figura 31. Sección para la gestión de perfil...............................................................68 Figura 32. Listados de información.……...……….......................................................69 x Índice de tablas Tabla 1. Guía de estilo de Agesef………………..………………..……..……………….48 Tabla 2. Especificación del caso de uso: gestionar sesión……..……..……………….52 Tabla 3. Especificación del caso de uso: consultar espacio…..……..………………...52 Tabla 4. Especificación del caso de uso: gestionar solicitud……..……..……………..52 Tabla 5. Especificación del caso de uso: gestionar perfil……..……..………………...53 Tabla 6. Especificación del caso de uso: gestionar listado……..……..……………….53 Tabla 7. Lista de comprobación para la aplicación…..…………..……..………………53 Tabla 8. Resultados de las pruebas de usabilidad……………………………………...63 1 Introducción Debido al auge tecnológico que se ha venido viviendo entre el 2010 y 2016 principalmente, son diversas las organizaciones que aprovechan las tecnologías web para difundir su información institucional, dar a conocer sus actividades y automatizar sus procesos internos mediante el uso de aplicaciones que faciliten y ayuden en sus actividades cotidianas. Las aplicaciones web son programas sencillos, económicos, confiables y seguros que ofrecen la posibilidad de ser accedido desde cualquier lugar utilizando sólo un dispositivo que cuente con un navegador y acceso a internet. Por esta razón, está fue la herramienta seleccionada para solventar el problema de la Facultad de Ciencias de la UCV, donde el proceso de reservación de espacios era ineficiente debido a la intervención humana en las distintas etapas y procesos engorrosos para la reservación que no se encuentran automatizados, y es por ello que se invertía mucho tiempo y esfuerzo en realizarlas, provocando eventualmente inconvenientes y errores. Esto a su vez genera incomodidad en los usuarios y constituye una mala visibilidad para la institución. En consecuencia, surgió la necesidad de desarrollar e implementar una aplicación web que permita sistematizar y centralizar el proceso de reservación, para mejorar la calidad y eficiencia del mismo, brindando mayores beneficios tanto para la Facultad como para las personas u organizaciones interesadas en la reservación de los espacios. El siguiente trabajo de investigación está estructurado de la siguiente forma:  Capítulo 1: Problema de investigación. estudiamos el proceso de reservación de espacios de la Coordinación de Extensión de la Facultad de Ciencias de la UCV. Adicionalmente, se desarrolla el contexto del problema, se plantea la solución a la problemática planteada en el problema de investigación, se 2 presentan los objetivos generales y específicos, la justificación del proceso involucrado en el problema. Finalmente, se presenta el alcance de la aplicación desarrollada en el TEG, que expone las funcionalidades que la aplicación estaría en capacidad de ofrecer.  Capítulo 2: Marco Conceptual. En este capítulo se describen conceptos básicos acerca de las tecnologías web de vanguardia que serán utilizadas para el desarrollo del TEG planteado en esta investigación.  Capítulo 3: Marco Aplicativo. Se describen los aspectos más relevantes relacionados a la metodología de desarrollo de software AgilUs y se especifican las bases y las distintas etapas que la componen. Asimismo, se describen y explican las fases de requisitos y análisis del método aplicado en el TEG, detallando las actividades realizadas, los artefactos generados, las pruebas realizadas y las entregas efectuadas.  Capítulo 4: Resultados. Se exponen los resultados de este Trabajo Especial de Grado (TEG), mostrando cada una de las funcionalidades e interfaces de la aplicación desarrollada y se demuestra que los objetivos propuestos fueron logrados.  Conclusiones. En esta sección se exponen los beneficios asociados al desarrollo y uso de Agesef, aplicación que permite la gestión de los espacios de la Facultad de Ciencias. Se discuten los resultados y se realiza un análisis global.  Recomendaciones: Esta sección contiene las sugerencias de futuras mejoras que se le pueden aplicar a la aplicación desarrollada en este TEG.  Referencias: Son las fuentes utilizadas como apoyo en el marco conceptual, definiciones e investigaciones realizadas en este TEG. 3 Capítulo 1: Problema de investigación En el presente capítulo se proporciona una explicación detallada de la problemática identificada en el proceso de solicitud y reservación de espacios de la Facultad de Ciencias de la Universidad Central de Venezuela, de igual manera se presenta el objetivo general y los objetivos específicos propuestos en el Trabajo Especial de Grado y se describe la justificación, alcance e importancia de los mismos. 1.1. Contexto de investigación La investigación estuvo contextualizada en la Facultad de Ciencias de la UCV, principalmente en la Coordinación de Extensión, la cual, según su portal oficial www.ciens.ucv.ve/ciens/coordinacion-de-extension, ofrece actividades de orden extracurricular orientadas al ámbito académico, cultural, deportivo y recreativo, con una amplia oferta de posibilidades de participación. De igual forma, promueve y ejecuta una proyección social efectiva, a través de su unidad de investigación, manteniendo así una estrecha relación con la actividad empresarial, las relaciones inter-institucionales y una amplia divulgación en el área de la ciencia y la tecnología. La Coordinación de Extensión cumple varias funciones dentro de la Facultad de Ciencias que son de beneficio tanto para los estudiantes como para personas externas a la universidad. 1.2. Problema de investigación La Coordinación de Extensión es la encargada de la gestión de algunas de las salas, auditorios y canchas deportivas pertenecientes a la Facultad. Los espacios pueden ser solicitados en calidad de préstamos, esto aplica para determinados eventos de la UCV en los cuales no se realiza ningún cobro por el uso del espacio, en cambio para el resto de los casos, pudieran ser alquilados. En estos casos se cobra por el uso de las instalaciones, de manera de poder mantenerlas en buen estado. 4 Los espacios de la Facultad de Ciencias de la UCV que son administrados por la Coordinación de extensión y las dependencias que la conforman son:  Auditorio “Dr. Tobías Lasser”  Sala “Leandro Aristeguieta” (antigua aula 11)  Gimnasio cubierto “Efrén Garcia” (Poliedrito)  Sala Manuel Bemporad  Sala de Consejo de Facultad  Salón Alpha  Salón Beta  Sala de seminario Guillermo Ruggieri  Sala Jesús Raimundo Chela  Sala Jesús María Pacheco  Salón Augusto Bonazzi  Salón Javier Vargas  Sala de los espejos  Campo de softbol  Campo de fútbol En la figura 1 se puede observar en un diagrama de flujo que especifica como era el proceso de reservación de espacios. 5 Figura 1. Diagrama de flujo proceso de reservación de espacios Las desventajas de este proceso de reservación de espacios radicaban en la descentralización de la información que era manejada por varias personas y se llevaba a través de tecnologías separadas que dificultaban las consultas, reportes, etcétera, y complicaban el proceso, lo cual le agregaba más complejidad e incrementaba la posibilidad de un error. El proceso se puede resumir como: la Coordinación de Extensión podía ser contactada vía correo electrónico o vía telefónica por las personas interesadas en solicitar alguno de los espacios de la Facultad. En caso de comunicarse por teléfono se le informaba la dirección de correo electrónico a la cual debía enviar la solicitud especificando el espacio deseado, la fecha y los equipos que necesitaba. Posteriormente, la Coordinación de Extensión respondía el correo aprobando o rechazando la solicitud dependiendo del evento a realizarse, de la disponibilidad del espacio y de los acuerdos administrativos. Si la solicitud era aceptada, y dependiendo de la actividad que se llevaría a cabo, se informaba el precio a cancelar y los equipos disponibles en el espacio. 6 Luego, se realizaba la reservación de la sala colocando la actividad en un calendario físico, una vez que se recibía la confirmación por parte del solicitante, se reflejaba la reservación en el calendario de Gmail de Google de la Coordinación. La persona u organización debía asistir personalmente a la caja de la Facultad y pagar el monto indicado para luego entregar el ticket de pago en la oficina antes del día del evento como constancia de que el pago fue realizado. Luego, la Coordinación de Extensión se encargaba de informar vía correo electrónico a las personas de protocolo y a los guías técnicos de sala la información sobre el evento y sobre los materiales solicitados por la persona encargada. Este correo solo era enviado si se requería la presencia de los guías o técnicos. En el proceso de reservación participan dos entes, el usuario que realiza la solicitud y la Coordinación de Extensión. Con base a lo antes expuesto se planteó como pregunta de investigación la siguiente: ¿Qué solución tecnológica permite la centralización de las actividades y la reducción de los errores en el proceso de gestión de los espacios físicos de la Facultad de Ciencias de la UCV? 1.3. Justificación En la Coordinación de Extensión de la Facultad de Ciencias, el proceso para la reservación de un espacio es engorroso y no adaptado a los tiempos modernos. El personal administrativo debía manejar una serie de herramientas que iban desde teléfonos hasta programas de computadoras que funcionaban como agenda, es decir, asechaba el error humano está presente en todas las fases de la reservación de un espacio. 7 Es por ello que en este Trabajo Especial de Grado se propuso el desarrollo de una aplicación web llamada Agesef (Aplicación para la Gestión de Espacios Físicos). Con la cual se enfretaron las desventajas que presentaba el proceso de reservación de espacios de la institución académica. El principal aporte de la creación de esta aplicación fue la centralización de todas las actividades que eran llevadas a cabo para la reservación de un espacio. Agesef cuenta con una base de datos PostgreSQL para almacenar los datos que se requieren para apoyar a la coordinación. Este repositorio de datos fue escogido por ser de código abierto, lo que significa que no representará un gasto para la Facultad de Ciencias, y además ha sido demostrado que tiene una alta fiabilidad. Por otra parte, los métodos en el lado del servidor fueron desarrollados con el framework Flask desarrollado en el lenguaje Python, ya que la sintaxis del mismo es sencilla, con lo cual permite una codificación rápida y entendible, aumentando los grados de mantenibilidad y mejoras llevadas a cabo por parte de otros desarrollares. Se decidió desarrollar una aplicación web, porque no implica un costo adicional ya que este sistema puede estar en producción dentro de los servidores de la Universidad Central de Venezuela. Además de lo mencionado anteriormente, libera de trabajo al personal que realizaba este proceso, ya que la aplicación se encarga de realizar gran parte del proceso que normalmente era realizado por el personal, permitiendo a la instancia aumentar su productividad al dedicar ese tiempo que se invertía en atender al ente interesado, en otras actividades igualmente importantes. Por el lado del cliente, al usarse una página web para atender sus solicitudes, se le facilita la tarea ya que se trata de una herramienta tecnológica que les resulta familiar. En Agesef se implementaron estándares web que brindan un alto 8 grado de usabilidad, logrando así que no se requiera enseñar al usuario como manejar la aplicación. Por último, pero no menos importante, al usar una página web se eliminan las barreras geográficas para lograr reservar un espacio en la Facultad, ya que la única limitación que presenta Agesef es que el usuario tenga una conexión a internet. 1.4. Objetivo general Desarrollar una aplicación web para la gestión de los espacios físicos de la Facultad de Ciencias de la Universidad Central de Venezuela. 1.5. Objetivos específicos  Determinar las funcionalidades que tendrá Agesef.  Definir los requerimientos funcionales y no funcionales necesarios en el desarrollo de Agesef.  Diseñar la arquitectura de la Agesef.  Desarrollar la interfaz gráfica de la Agesef.  Definir el modelo lógico y físico de la base de datos de la aplicación.  Aplicar pruebas de aceptación, funcionalidad y usabilidad para verificar el correcto funcionamiento de la aplicación.  Implementar la aplicación en un servidor de la Facultad de Ciencias de la UCV. 1.6. Alcance Agesef se va limitar a los espacios físicos pertenecientes a la Facultad de Ciencias. Esta aplicación permitirá consultar los espacios, su costo de reservación, características y su disponibilidad, la cual puede ser visualizada al consultar el calendario correspondiente a cada espacio. Cada espacio cuenta con un conjunto de elementos y equipos que pueden ser solicitados al momento de la reservación, Agesef permite conocer cuáles son. 9 También permite que los usuarios puedan reservar espacios desde dispositivos con acceso a internet, esto con la intención de facilitar el proceso y permitir que esta opción que ofrece la Coordinación de Extensión llegue a un mayor número de personas. La aplicación puede ser visualizada en dispositivos móviles con sistema operativo Android. Agesef permite realizar la solicitud de espacios y hacer seguimiento a la misma, ya que permite consultar su estatus, eliminar y modificar las solicitudes que no han sido respondidas por la Coordinación de Extensión. Con respecto a las acciones que pueden llevar a cabo los miembros de la Coordinación de Extensión, pueden consultar la información de los usuarios registrados en el sistema, revisar las solicitudes recibidas y dar respuesta a las mismas. 1.7. Metodología de desarrollo de software Para la realización del presente TEG se empleó AgilUs como metodología de desarrollo porque según Acosta (2011) constituye una propuesta metodológica en concordancia con las exigencias en el desarrollo de software. Es útil porque reduce la cantidad de actividades y artefactos que se generan, propicia la participación de usuario y su carácter iterativo e incremental permite adaptar el desarrollo a los cambios. Incluye la usabilidad a lo largo del ciclo de vida con la intención de aplicar un enfoque de diseño centrado en el usuario y como un mecanismo para asegurar la calidad del software. Resulta beneficioso para este proyecto porque está orientado al desarrollo de sistemas con mucha interactividad con el usuario y con menos lógica de la aplicación. Según Acosta (2011), AgilUs es un método de desarrollo ágil, iterativo e incremental que pone el mayor peso del desarrollo en la consecución de la usabilidad centrándose en el usuario. Se enfoca en que la construcción y desarrollo de las interfaces de usuario no debe ser una adición estética que se da al final del desarrollo del sistema sino, muy por el contrario, el desarrollo de 10 interfaces de usuario debe guiar las decisiones en ingeniería de software. En AgilUs son los usuarios, y no el cliente ni los programadores quienes guían el desarrollo del proyecto. El Método AgilUs busca proporcionar un conjunto de actividades organizadas para construir la usabilidad en el diseño de interfaces de usuario durante el desarrollo de un producto de software. Ciclo de vida. En la figura 2 se muestra un diagrama de la interacción entre cada una de las etapas del ciclo de vida de AgilUs, con las actividades que se realizan y artefactos que se generan en cada etapa. Figura 2. Ciclo de vida de AgilUs Fuente: Acosta, Eleonora (2011) 11 A continuación se describen brevemente las etapas de este método:  Requisitos: en esta etapa se realiza el análisis general del problema a abordar y se lleva a cabo el levantamiento de requerimientos.  Análisis: una vez estipulados los requisitos que persigue la aplicación, se lleva a cabo un análisis de los mismos para su posterior desarrollo.  Prototipaje: en esta etapa se desarrolla un prototipo rápido de la interfaz de usuario a partir de los patrones de interacción, al cual se le van incorporando funcionalidades hasta llegar al producto final.  Entrega: en esta etapa se tiene el software final al que se le realizan pruebas que certifiquen que es un software usable y sin errores. Se seleccionó esta metodología porque está orientada a aplicaciones con un alto grado de interacción con usuarios. AgilUs plantea el desarrollo de un sistema, partiendo de un prototipo de interfaz de usuario y de la evaluación de usabilidad desde el inicio de la aplicación, ya que este es un aspecto importante en el éxito de un software interactivo. 1.8. Antecedentes Existen varias aplicaciones web que permiten la reservación de espacios. Un ejemplo es la de la Universidad del País Vasco Euskal Herriko Unibersitatea cuya aplicación mostrada en la figura 3 ofrece un calendario de ocupación del Auditorio de la Facultad de Ciencias Sociales y de la Comunicación. 12 Figura 3. Aplicación web de Universidad del País Vasco Euskal Herriko Unibersitatea La aplicación muestra fotos del auditorio e información importante relacionada con la capacidad, los pasos a seguir para realizar la reservación, los servicios que se ofrecen junto con el préstamo del espacio y el orden de prioridad con respecto al cual se realizarán las asignaciones de (en caso de que exista más de una solicitud para un mismo día). Esta aplicación ofrece la opción de consultar la ocupación del auditorio que permite a los visitantes revisar los horarios y días que ya se encuentra reservado el mismo. Para este auditorio se ofrecen maneras distintas para la reservación del auditorio dependiendo de la persona que desee hacer uso de este. Existe una distinción entre profesores y alumnos. Otro ejemplo de aplicación web para la reservación de espacios, es la utilizada en la Universidad Autónoma de Bucaramanga (UNAB), mostrada en la figura 4. La cual permite, que dependiendo del auditorio, puedan ser alquilados por cualquier persona como es el caso del Auditorio Mayor Carlos Gómez Albarracín. Pero existen espacios como el Auditorio Mayor – Campus El Bosque cuyo préstamo solo está dirigido para personal administrativo, docente y 13 estudiantes de la UNAB. También indica cual es el procedimiento a seguir para la reservación del auditorio. Figura 4. Aplicación web Universidad Autónoma de Bucaramanga El ejemplo mostrado en la figura 5 corresponde a la aplicación para la reservación de salas de la Fundación Parque Científico Universidad del Vallado, el cual posee salas de reuniones, sala de juntas, salones de actos, sala naranja y aula multimedia. 14 Figura 5. Aplicación web Fundación Parque Científico Universidad del Vallado. Esta aplicación ofrece videos tutoriales explicativos sobre cómo realizar el proceso de reservación de salas. Los ejemplos anteriores corresponden a aplicaciones para reservación de espacios que sirven como antecedentes a este TEG ya que tienen el mismo objetivo de permitir la utilización de espacios físicos. Estos antecedentes sirvieron como modelos a seguir para el desarrollo de Agesef, ya que permitieron conocer más funcionalidades que podrían ser agregadas, tener idea sobre la distribución ideal que debían tener los componentes de la aplicación y además reconocer la información que era importante mostrar a los usuarios. La intención de este Trabajo Especial de Grado fue el desarrollo de una aplicación web que permitiera, tanto a la Coordinación de Extensión como a las personas interesadas, realizar el proceso de reservación de espacios de una manera más sencilla, rápida y adaptadas a los tiempos modernos, evitando así el uso de múltiples herramientas que al final provocaban que el cumplimiento de las funciones de esta instancia fuese más engorroso y vulnerable a errores por factores humanos. 15 Capítulo 2: Marco teórico El siguiente capítulo tiene como finalidad presentar bases teóricas relacionadas a un ambiente de desarrollo web, que fueron las bases para el desarrollo del TEG. El mismo se divide en tres grandes tópicos, los cuales se describen a continuación: En la primera sección, se explica qué es la gestión de espacios y toda la teoría asociada con la intención de dar a entender el contexto. En la segunda sección, se hace referencia a lo que es una aplicación web, así como también su estructura y sus principales características y ventajas. Se explica la arquitectura cliente servidor y el modelo de desarrollo MVC (Modelo Vista Controlador), que se encarga de separar las funciones del cliente, el servidor web y el servidor de base de datos. En la tercera y última sección, se muestran los recursos tecnológicos necesarios para el desarrollo de la aplicación web, que a su vez constituyen la columna tecnológica de la aplicación a desarrollar. Las tecnologías del lado del servidor y las del lado del cliente, HTML, CSS y JavaScript, JQuery, entre otras. 2.1. Gestión de espacios Antes de explicar la definición, es importante conocer el significado de algunos términos relacionados. Gestión: según el diccionario virtual concepto.de, proviene del Latín gestĭo. Este término hace referencia a la administración de recursos, sea dentro de una institución estatal o privada, para alcanzar los objetivos propuestos por la misma. Para ello uno o más individuos dirigen los proyectos laborales de otras personas para poder mejorar los resultados, que de otra manera no podrían ser obtenidos. 16 Espacio: según el diccionario digital de Oxford, espacio es una superficie o un lugar con unos límites determinados y unas características o fines comunes. En función a la definición anterior podemos deducir que el significado de espacio físico y espacio deportivo es el explicado a continuación: Espacio físico: es un sitio o lugar apto para la realización de diferentes actividades. Espacio deportivo: es un espacio público o privado donde se pueden realizar actividades deportivas. Auditorio: según el diccionario digital lexicoon.org, es el espacio dentro de un teatro, cine, sala de conciertos, escuela o de cualquier otro espacio público (incluso al aire libre) al que asiste una audiencia a escuchar y/u observar un evento o presentación cultural, educativo, político o social. Cancha: según el diccionario virtual la definición proviene de kancha, traducida como “recinto”, se refiere al espacio reservado para la práctica de distintos deportes o para la organización de espectáculos. Al unificar estos conceptos y adaptarlos para definir el proceso de gestión de espacios de la Facultad de Ciencias, obtenemos que se refiere a la administración de los espacios deportivos y físicos por parte de la Coordinación de Extensión, con la intención de alcanzar el objetivo que es el uso eficiente de los espacios por la mayor cantidad de personas posibles, generar ingresos extras que ayudan al mantenimiento de los mismos y promover actividades culturales y deportivas. En la Facultad de Ciencias, los espacios están clasificados en: -Auditorios -Espacios deportivos 17 Los auditorios que son gestionados por la Coordinación de Extensión son:  Auditorio “Dr. Tobías Lasser”  Sala “Leandro Aristeguieta” (antigua sala 11)  Sala de Consejo de Facultad  Salón Alpha  Salón Beta  Sala Manuel Bemporad  Auditorio Guillermo Ruggieri  Sala Jesús Raimundo Chela  Auditorio Augusto Bonazzi  Auditorio Javier Vargas  Sala Jesús María Pacheco Y los espacios deportivos son:  Salón de los espejos  Gimnasio cubierto “Efrén Garcia” (Poliedrito)  Campo de softbol  Campo de fútbol 2.2. Aplicaciones web Según Niño (2010) las aplicaciones web son aplicaciones a las que se accede mediante un navegador y están alojadas en servidores dentro de una intranet o en internet. Las de escritorio sustituyen a los programas que se instalan en los ordenadores y que realizan tareas como organizar agendas, calendarios, leer correo electrónico, etcétera. Es una aplicación software que se codifica en un lenguaje soportado por los navegadores web en la que se confía la ejecución al navegador. Una página web puede contener elementos que permiten una comunicación activa entre el usuario y la información. Esto permite que el usuario acceda a los datos de modo interactivo, gracias a que la página responderá a cada una de sus acciones. 18 Luján (2002) indica que las aplicaciones web son un tipo especial de aplicaciones cliente/ servidor. Las aplicaciones web pueden ser desplegadas en dispositivos móviles como son teléfonos inteligentes, tabletas, etcétera, solo haciendo uso de las opciones que brindan algunas herramientas de desarrollo. La intención de que sea posible visualizar la aplicación desde un dispositivo móvil es llegar a más personas, ya que actualmente es cada vez mayor la cantidad de personas que entran a internet desde sus dispositivos móviles, disminuyendo así las que acceden desde un computador. Si una aplicación web no es responsiva, puede resultar complejo visualizarla desde un dispositivo móvil, provocando así que la persona termine por abandonarla. 2.2.1. Características de las aplicaciones web De acuerdo a Good (2015), algunas de las principales características de las Aplicaciones Web son:  Compatibilidad multiplataforma: las aplicaciones web tienen un camino mucho más sencillo para la portabilidad multiplataforma que las aplicaciones de escritorio. Varias tecnologías incluyendo Java, Flash, ASP y Ajax permiten un desarrollo efectivo de programas soportando todos los sistemas operativos principales (Windows, Linux, MacOS).  Actualización: las aplicaciones basadas en web están siempre actualizadas con la última versión sin requerir que el usuario tome acciones pro-activas, y sin necesitar llamar la atención del usuario o interferir con sus hábitos de trabajo con la esperanza de que va a iniciar nuevas descargas y procedimientos de instalación.  Acceso Inmediato: la mayoría de las aplicaciones web no necesitan ser descargadas, instaladas y configuradas. Para su acceso, simplemente se 19 requiere hacer uso de un navegador web y conexión a Internet como se hizo mención anteriormente.  Facilidad de prueba: no existen obstáculos para permitir pruebas sencillas y efectivas de herramientas y aplicaciones antes de realizar una operación que afecta la realidad como por ejemplo cargar la tarjeta de crédito, es decir poder simular este tipo de operaciones.  Menor requerimiento de memoria: las aplicaciones web tienen muchas más demandas de memoria RAM de parte del usuario final que los programas instalados localmente. Al residir y correr en los servidores del proveedor, esas aplicaciones basadas en web usan en muchos casos la memoria del servidor, dejando más espacio para correr múltiples aplicaciones al mismo tiempo sin afectar el rendimiento.  Datos online: con el desplazamiento de las aplicaciones locales a aquellas basadas en web también los datos que se crean y acceden necesitan experimentar cambios porque van a estar en constante movimiento dentro de la red al alcance de todo el mundo.  Múltiples usuarios concurrentes: las aplicaciones web pueden ser accedidas por miles de usuarios al mismo tiempo. No hay necesidad de compartir recursos cuando múltiples usuarios pueden ver e incluso editar el mismo documento de manera conjunta. En el caso de que llegase a actualizarse la aplicación, todos los usuarios estarán al tanto de esta actualización de manera inmediata.  Datos seguros: A medida que las compañías se hagan cargo del almacenamiento de los datos del usuario, el almacenamiento de datos redundantes, altamente fiables, serán la norma más que la excepción, y los usuarios van a tener mucho menos riesgo de perder sus datos debido a una falla del equipo. 20  Fácil desarrollo: Debido a que las aplicaciones han sido separadas de computadoras locales y sistemas operativos específicos, estas pueden también ser escritas en prácticamente cualquier lenguaje de programación. Es escrita en lenguajes soportados por navegadores web, pues son ellos quienes la ejecutan independientemente del sistema operativo en el que se encuentre. 2.2.2. Ventajas de las aplicaciones web Tomando en cuenta lo dicho por Luján (2002) una ventaja clave del uso de aplicaciones web es que el problema de gestionar el código en el cliente se reduce drásticamente. Los cambios que se deseen realizar a la aplicación de interfaz o de funcionalidad se realizan modificando el código en el servidor web. Una segunda ventaja, es que se evita la gestión de versiones. No es necesario realizar actualizaciones, lo cual evita el problema de inconsistencia de versiones entre clientes. Una tercera ventaja es que si la empresa ya está usando internet, no se necesita comprar ni instalar herramientas adicionales para los clientes. Otra ventaja, es que de cara al usuario, los servidores externos e internos aparecen integrados, lo que facilita el aprendizaje y uso. Una última ventaja, pero no menos importante, es la independencia de plataforma. Una aplicación web puede ser ejecutada desde cualquier plataforma sin necesidad de hacer cambios. Solo es necesario tener un navegador. 2.2.3. Desventajas de las aplicaciones web Según Luján (2002) una de las desventajas es la necesidad de una conexión a Internet permanente para acceder a una aplicación web, ya que es la base del servidor, sin Internet, no hay aplicación. También ocurre en las aplicaciones web que su seguridad depende de la seguridad con que es programada la aplicación web y de la seguridad del servidor donde será alojada la información. El tema de la seguridad es algo que preocupa a muchos, razón por la cual muchas personas evitan a acceder sus datos en internet por temor a ponerlos en peligro. 21 Otra desventajas que existen es que si muchos usuarios se conectan a la vez al mismo servidor, y usan la aplicación demasiado, el servidor puede saturarse y terminar por colapsar y no dar acceso a los usuarios, y esto implicaría darle mantenimiento al servidor y cerrar la aplicación por un determinado tiempo, a esto se le llama sobrecarga del servidor. Una desventaja más es que muchas aplicaciones tienen dependencia a los plugins, como flash, java, o algún reproductor de música o videos que contenga la aplicación, y la única forma de resolver esto es instalando dichos plugins, lo cual consume tiempo. Otra desventaja, que sin embargo, está desapareciendo rápidamente, es que la programación web no es tan versátil o potente como la tradicional. 2.3. Arquitectura de las aplicaciones web Según Zofio (2013) una aplicación web es proporcionada por un servidor web y utilizada por usuarios que se conectan desde cualquier punto vía clientes web (navegadores). La arquitectura de una aplicación web tiene tres componentes principales:  Un servidor web  Una conexión de red  Uno o más clientes El servidor web distribuye páginas de información a los clientes que las solicitan. Los requerimientos son hechos a través de una conexión de red, y para ello usa el protocolo de transferencia de hipertexto (HTTP). Una vez que se solicita esta petición mediante el protocolo HTTP y la recibe el servidor web, éste localiza la página web en su sistema de archivos y la envía de vuelta al navegador que la solicitó. 22 2.3.1. Arquitectura cliente servidor Según Campderrich (2003) es una arquitectura cuya idea básica es que un programa, el servidor, gestiona un recurso compartido concreto y hace determinadas funciones sólo cuando las pide otro, el cliente, que es quien interactúa con el usuario. Normalmente, estos dos programas, el servidor y el cliente, se encuentran en ordenadores distintos. Los requerimientos de los ordenadores clientes en lo que respecta a velocidad, memoria y capacidad de disco son muy diferentes de los servidores; unos y otros pueden ser ordenadores de modelo y marca diferentes y, además, con frecuencia utilizan un sistema operativo diferente. Según Somerville (2005) los principales componentes de esta arquitectura son: 1. Un conjunto de servidores que ofrece servicio a otros subsistemas. 2. Un conjunto de clientes que llaman a los servicios ofrecidos por los servidores. Éstos son normalmente subsistemas en sí mismos. Puede haber varias instancias de un programa cliente ejecutándose concurrentemente. 3. Una red que permite a los clientes acceder a estos servicios. Esto no es estrictamente necesario ya que los clientes y los servidores podrían ejecutarse sobre una única máquina. En la práctica, sin embargo, la mayoría de los sistemas cliente-servidor se implementan como sistemas distribuidos. Estos componentes son mostrados en la figura 6. 23 Figura 6. Componentes de la arquitectura cliente-servidor Según Kendall (2005) las ventajas de la arquitectura son que permite que la información sea procesada cerca del lugar donde se ha generado y permite el crecimiento gradual del hardware, es decir, se puede aumentar el número de clientes sin que sea necesario cambiar de servidor constantemente, se puede sustituir el servidor sin que el cliente se vea afectado y se puede aumentar la capacidad de un cliente sin tener que cambiar el servidor ni a los demás clientes. 2.4. Modelo Vista Controlador Según Lafosse (2010) MVC es un modelo de desarrollo de aplicaciones del lado del servidor que permite separar la parte lógica de la presentación en una aplicación web. Este es un punto esencial del desarrollo de proyectos ya que permite a todo el equipo trabajar por separado. El objetivo principal es el de dividir la aplicación en 3 partes distintas: el modelo, la vista y el controlador. MVC separa la lógica del negocio de la visualización. Según Jaramillo, Cardona y Villa (2008) en este modelo existen tres componentes, los cuales interactúan entre ellos como se muestra en la figura 7. Los componentes son: 24 -El módulo del modelo es el encargado de gestionar la información, y proporciona una interfaz para que los otros componentes puedan acceder a los datos que aquí se encuentran. Es la representación de los datos y reglas de negocio. -El controlador, que se encarga de ejecutar los eventos que son iniciados por el cliente, los métodos que aquí se encuentran son desarrollados por diversidad de lenguajes de programación. El cliente por medio de la interfaz, invoca éstos métodos normalmente con llamadas AJAX o peticiones Get y Post. -Por último se tiene la vista, que es todo lo referente a las interfaces que usará el usuario final para sacar provecho del sistema, desde este módulo se inician los eventos que terminan ejecutando los métodos en el módulo de controlador. Figura 7. Modelo Vista Controlador Según Bell y Parr (2003) la interacción entre componentes de este modelo de desarrollo es el siguiente: “El modelo en sí generalmente es invisible. La vista es visible en la pantalla de la computadora como una imagen gráfica, controles, gráficos, etcétera. Los controles son visibles como barras de desplazamiento, botones, campos de texto, etcétera. El controlador constituye las entradas para el modelo y la vista constituye las salidas del modelo.” 25 2.5. Tipos de aplicaciones web Se pueden identificar dos tipos de aplicaciones web: las que siempre contienen la misma información y aquellas que se van actualizando a un menor o mayor ritmo de manera constante. La diferencia de los contenidos mostrados indica el tipo de página y los recursos que se están utilizando.  Aplicación web estática: Este tipo de aplicación web muestra poca información, y no suele cambiar mucho. Por regla general suelen estar desarrolladas en HTML y CSS. Aunque también pueden mostrar en alguna parte objetos en movimiento como por ejemplo banners, GIF animados, vídeos, etc. También pueden desarrollarse aplicaciones web con jQuery y Ajax. Además, modificar los contenidos de las aplicaciones estáticas no es sencillo. Para hacerlo, habría que descargar el HTML modificarlo y volver a subirlo al servidor. Y esos cambios solo puede hacerlos el webmaster o la empresa de desarrollo que programó y diseñó la aplicación web en su momento. Algunos ejemplos de desarrollo de aplicaciones web estáticas podrían ser por ejemplo portafolios de profesionales o bien un curriculum digital. Del mismo modo una página de presentación de empresa podría tener también este tipo de aplicación web para mostrar sus datos de contacto, etc.  Aplicaciones web dinámicas: son complejas a nivel técnico. Utilizan bases de datos para cargar la información, y estos contenidos se van actualizando cada vez que el usuario accede a la aplicación web. Generalmente cuentan con un panel de administración (llamado CMS) desde dónde los administradores pueden corregir o modificar los contenidos, ya sean textos o imágenes. 26 Existen muchos lenguajes de programación para desarrollar aplicaciones web dinámicas. Los lenguajes PHP y ASP son los más comunes porque permiten una buena estructuración del contenido. El proceso de actualización es muy sencillo y ni siquiera necesita entrar en el servidor para modificarlo, además de que permite implementar muchas funcionalidades como foros o bases de datos. El diseño, y no solo el contenido puede modificarse al gusto del administrador.  Portal web: Portal es un tipo de aplicación en el que la página principal permite el acceso a diversos apartados, categorías o secciones. Puede haber de todo: foros, chats, correo electrónico, un buscador, zona de acceso con registro, contenido más reciente, etc. 2.5.1. Ejemplos de aplicaciones web Pixlr Es una aplicación web que permite hacer edición gráfica de manera fácil y sencilla, creada por Autodesk. En la figura 8 se puede observar la interfaz de usuario de Pixlr, es una interfaz simple. Figura 8. Aplicación web Pixlr Evernote Es un editor de texto que también permite almacenar imágenes, notas de voz, checklists, scans de documentos que son editables, enlaces, páginas web 27 completas, y hasta presentaciones. Evernote permite organizar todo en libretas o marcando las notas con etiquetas. Permite colaborar con otras personas en un mismo proyecto, y tiene su propio sistema de mensajería instantánea. Lo mejor de todo es que puede ser usado desde la web sin la necesidad de instalar nada. En la figura 9 se puede observar el logo de Evernote. Figura 9. Aplicación web Evernote Spotify. Es una aplicación web que posee un catálogo de música enorme, que permite escucharla sin necesidad de descargas ni instalaciones. En la figura 10 se puede apreciar la aplicación desplegada en distintos tipos de dispositivos. Figura 10. Aplicación web Spotify Netflix. Es una aplicación web, solo se necesita abrir un navegador para disfrutar de miles de películas y programas de televisión en streaming desde cualquier lugar 28 que esté conectado la PC. En la figura 11 se puede observar la interfaz de usuario de Netflix. Figura 11. Aplicación web Netflix En los ejemplos anteriores se puede apreciar que las aplicaciones web se caracterizan principalmente por ser sencillas de usar, y tienen entre sus beneficios que no requieren la descarga de ninguna herramienta extra para su uso. Algunas aplicaciones web como Spotify por ejemplo, permiten ser visualizadas en cualquier dispositivo, lo cual facilita su uso. Para el desarrollo de este TEG fue importante contar con estas características, porque son algunas de las razones principales que hacen que las personas prefieran las aplicaciones web sobre otro tipo de aplicaciones. 2.6. Herramientas para el desarrollo de aplicaciones web Para desarrollar Agesef se utilizaron en sus interfaces HTML5, que es un lenguaje de marcado de hipertexto para estructurar la información que en ellas se expondrá y con CSS se les dará el estilo, así mismo se usó javascript con el objetivo de darle dinamismo a la página y brindar la sensación al usuario de estar manipulando una aplicación local mediante el uso de llamadas asíncronas AJAX. Luego por parte del servidor, se utilizó el microframework Flask desarrollado en el lenguaje Python, el cual permite un desarrollo rápido gracias a la sencillez de su sintaxis. 29 2.6.1. Lenguaje de marcado de hipertexto Según las publicaciones del equipo vértice, HyperText Markup Language es un lenguaje artificial que los ordenadores son capaces de interpretar y diseñado para que los programadores redacten instrucciones que los navegadores ejecutan para originar la página web. Define la estructura básica y el código para la definición de contenido de una página web, como texto, imágenes, entre otros. Es un estándar a cargo de la World Wide Web Consortium, organización dedicada a la estandarización de casi todas las tecnologías ligadas a la web, sobre todo en lo referente a su escritura e interpretación. Las siglas de HTML significan HyperText Markup Language, en español, lenguaje de marcado de hipertexto. En esencia, HTML sirve para estructurar documentos, pero no describe la apariencia o el diseño de un documento sino que ofrece las herramientas necesarias para dar formato, según la capacidad del servidor web en el que se almacenan las páginas web y la capacidad del navegador. HTML5 es la última actualización del estándar HTML y según el W3C (2012) se define como “una tecnología creada para modernizar la web y el desarrollo de aplicaciones web online y offline, que nació para dar cabida a elementos como video, audio, geolocalización y nuevas etiquetas para constituir la base del gran cambio de internet actualmente”. HTML en su más reciente versión añadió las siguientes características: -Un nuevo doctype simplificado y unificado. -Supresión de etiquetas y atributos de presentación. -Nuevas etiquetas semánticas o de organización. -Nuevas etiquetas de audio y de video. Esto evita tener que hacer uso de plugins dedicados. HTML5 fue el lenguaje seleccionado para el desarrollo de esta aplicación web por ser el estándar más nuevo de HTML, esta versión ofrece más facilidades que 30 las anteriores, lo cual hace que el desarrollo sea más sencillo, y mejora la experiencia del usuario. El uso de HTML5 permite que la aplicación cargue más rápido y además pueda ser visualizada en todos los navegadores compatibles. 2.6.2. Hoja de estilo en cascada Es la abreviatura de Cascading Style Sheet. Según García (2003) la finalidad del CSS es definir cómo se han de mostrar los elementos de HTML y con qué estilo se han de presentar. Los estilos son normalmente almacenados en hojas de estilo y fueron añadidos en la codificación HTML para solucionar algunos problemas. Se pueden definir múltiples hojas de estilo para una misma página web. En resumen, una hoja de estilo es una serie de reglas que definen el estilo de un sitio web completo. Con una hoja de estilo se puede alterar la apariencia de una página web cambiando algunas características como fuente, tamaño de fuente, márgenes y cualquier elemento visual como colores y bordes. El W3C es el encargado de formular la especificación de las hojas de estilo que servirán de estándar para los navegadores. La idea que se encuentra detrás del desarrollo de CSS es separar la estructura de un documento de su presentación. La información de estilo puede ser definida en un documento separado o en el mismo documento HTML. Navajas (2012) indica que actualmente, pese a que la especificación 2.1 se aprobó recientemente, Cascading Style Sheet versión 3 ha venido desarrollándose desde 1999. Esta nueva especificación posee interesantes novedades que permiten hacer webs más elaboradas y dinámicas, con mayor separación entre estilos y contenidos. Da soporte a muchas necesidades de las webs actuales, sin tener que recurrir a trucos de diseñadores o lenguajes de programación. 31 El Responsive Web Design se hace posible gracias a la introducción de las media queries en las propiedades de los estilos CSS en su versión número 3. Las media queries son una serie de órdenes que se incluyen en la hoja de estilos que indica al documento HTML cómo debe comportarse en diferentes resoluciones de pantalla. CSS también permite la creación de diseños flexibles y multimedia adaptable. Los diseños flexibles son creados haciendo usos de targets y de las opciones de la reproducción de pantalla, en lugar de hacerlo basado en pixeles, esto permite que la aplicación web se adapte al dispositivo empleado. Para adaptar imágenes y multimedia, existen muchas técnicas, y CSS es la más común. Para la realización de este TEG se utilizó CSS3 porque es la herramienta que le da los estilos a la aplicación, es la que permite que luzca bien estéticamente, y además aporta muchas funciones útiles. Todos estos estilos son cargados en un texto plano, por lo cual la carga de la página es más rápido, y permite que la aplicación pueda ser visualizada en cualquier navegador moderno compatible con CSS3. Además el uso de CSS no requiere la instalación de plugins que casi siempre son complicados de usar y modificar, y además causan rechazo por parte del usuario. 2.6.3. JavaScript Según Flanagan (2011) es el lenguaje de programación de la web. La mayoría de los sitios web modernos utilizan JavaScript y todos los buscadores web incluyen intérpretes de JavaScript. Es utilizado para especificar el comportamiento de las páginas web. Es un lenguaje de programación de alto nivel y dinámico que está bien adecuado a la orientación de objetos y a los estilos de la programación funcional. Hereda características de Java, Scheme y Self. 32 2.6.3.1. JQuery JQuery según Hernández (2014) es una librería de JavaScript especializada en cambiar las páginas web en ejecución. Permite simplificar la manera de interactuar con los documentos HTML, manipular el árbol DOM, manejar eventos, desarrollar animaciones y agregar interacción con la técnica AJAX a páginas web. Dicho de otra manera, “JQuery hace que JavaScript sea más accesible para los desarrolladores.” (Franklin, 2013). Esto permite que el desarrollador no tenga que enfocarse tanto en aprender funciones complejas y pueda invertir más tiempo en el desarrollo. JavaScript también ofrece el framework JQuery Mobile para el desarrollo rápido y fácil de sitios webs optimizados para teléfonos móviles. Con este framework, se acelera la velocidad de desarrollo de aplicaciones, encapsulando muchas tareas comunes que se realizan cuando se utiliza el lenguaje JavaScript. Agrega una capa más a JQuery e intenta suplir algunas necesidades que los programadores de dispositivos móviles padecen. El uso de Jquery para la realización de este TEG permitió el desarrollo de la aplicación sin la preocupación de cual navegador utiliza el usuario, porque la librería se encarga de esto. 2.6.4. AJAX El término AJAX se presentó por primera vez por Jesse James Garrett el 18 de Febrero de 2005. Hasta ese momento, no existía un término normalizado que hiciera referencia al nuevo tipo de aplicación web que estaba apareciendo. AJAX es un acrónimo de Asynchronous JavaScript + XML, que se puede traducir como "JavaScript asíncrono + XML". James (2005) define AJAX de la siguiente manera: “Ajax no es una tecnología en sí mismo. En realidad, se trata de varias tecnologías independientes que se unen de formas nuevas y sorprendentes.” 33 Las tecnologías que forman AJAX son: -XHTML y CSS, para crear una presentación basada en estándares. -DOM, para la interacción y manipulación dinámica de la presentación. -XML, XSLT y JSON, para el intercambio y la manipulación de información. -XMLHttpRequest, para el intercambio asíncrono de información. -JavaScript, para unir todas las demás tecnologías. Es una técnica de desarrollo web para crear aplicaciones que se ejecutan en el cliente, es decir, en el navegador de los usuarios mientras se mantiene la comunicación asíncrona con el servidor en segundo plano. De esta forma es posible realizar cambios sobre las páginas sin necesidad de recargarlas, mejorando la interactividad, velocidad y usabilidad en las aplicaciones. AJAX es una tecnología asíncrona, en el sentido de que los datos adicionales se solicitan al servidor y se cargan en segundo plano sin interferir con la visualización ni el comportamiento de la página. Para la realización de este TEG se utilizó AJAX porque permite que la aplicación web funcione mejor para el usuario. En la aplicación se realizan múltiples solicitudes a la base de datos, y gracias a AJAX no es necesario que la página sea recargada, lo cual acelera los tiempos de respuesta. 2.6.5. Responsive Design Es el enfoque que sugiere que el diseño y el desarrollo deben responder al comportamiento del usuario y el ambiente basado en el tamaño de la pantalla, plataforma y orientación. El término responsive web design fue acuñado por Marcotte (2011) en un artículo en List Apart. El consolidó 3 técnicas existentes (diseño de cuadrículas flexibles, imágenes flexibles y media queries) en este único enfoque. Marcotte 34 indica que una metodología realmente responsiva es más que solo adaptar la disposición de un sitio web adaptado a las capacidades de un dispositivo. Frain (2012) indica que para diseñar un sitio web que pueda ser adaptado a cualquier dispositivo se debe comenzar diseñando para el dispositivo más pequeño y luego progresivamente adaptar el diseño y el contenido a dispositivos más grandes. Además de las herramientas anteriormente nombradas que permiten hacer a una aplicación web responsiva, también existen plugins, los cuales permiten añadir funcionalidades adicionales o nuevas características al software. Hay plugins que permiten hacer que elementos de la aplicación web sean responsivos, por ejemplo, el plugin Sidr de JQuery que crea menús verticales deslizables que suelen aparecer en sitios web responsivos. El enfoque responsive fue aplicado en este TEG porque uno de los requerimientos iniciales fue que fuese posible desplegar la aplicación en los dispositivos móviles con sistema operativo Android para que el usuario pueda acceder a la aplicación en cualquier momento, desde cualquier lugar. 2.6.6. Framework Python Flask El portal oficial de Flask http://flask.pocoo.org/ lo define como un microframework escrito en Python y basado en la especificación WSGI y el motor de plantillas Jinja2. Está principalmente dirigido para pequeñas aplicaciones con requerimientos sencillos. Flask no incluye ORM, sino que deja que el usuario decida cómo desea almacenar sus datos. Flask no incluye Bootstrap ni nada similar, porque se supone que las personas que hacen uso de este microframework, no buscan crear grandes aplicaciones MVC. Se caracteriza por ser muy sencillo de usar. La razón por la que no posee herramientas para hacer bootstrap es porque no se requiere. Hace uso por 35 defecto de Jinja2, plantilla inspirada en Django, pero puede ser configurado para usar cualquier otro lenguaje. 2.7. Licencia pública general de GNU Según la Free Software Foundation (FSF), esta es la licencia más ampliamente usada en el mundo del software y garantiza a los usuarios finales (personas, organizaciones, compañías) la libertad de usar, estudiar, compartir (copiar) y modificar el software. Su propósito es declarar que el software cubierto por esta licencia es software libre y protegerlo de intentos de apropiación que restrinjan esas libertades a los usuarios. Esta licencia fue creada originalmente por Richard Stallman fundador de la FSF para el proyecto GNU. La GPL puede ser usada por cualquiera, ya que su finalidad es proteger los derechos de los usuarios finales (usar, compartir, estudiar y modificar), y otorgar a los beneficiarios de un programa de ordenador de los derechos de la definición de software libre. Bajo esta filosofía, la GPL garantiza a los destinatarios de un programa de computador los derechos y libertades reunidos en definición de software libre y usa copyleft para asegurar que el software está protegido cada vez que el trabajo es distribuido, modificado o ampliado. En la forma de distribución (sólo pueden ser distribuidos bajo los términos de la misma licencia) se diferencian las licencias GPL de las licencias de software libre permisivas, de las cuales los ejemplos más conocidos son las licencias BSD y la MIT. David A. Wheeler sostiene que el copyleft proporcionado por la GPL fue crucial para el éxito de sistemas basados en Linux, dando a los programadores que han contribuido al kernel la seguridad de que de su trabajo se beneficiaría todo el mundo y seguirá siendo libre, en lugar de ser explotado por compañías de software que no tendrían que dar nada de nuevo a la comunidad. 36 Los usuarios o compañías que distribuyen sus trabajos bajo las GPL, pueden cobrar o distribuirlas gratuitamente. Esto distingue las GPL de las licencias de software que prohíben su distribución comercial. La FSF argumenta que no se debe restringir la distribución comercial del software (incluyendo la redistribución), ya que la GPL establece explícitamente que las obras cubiertas por esta licencia se pueden vender a cualquier precio. Para la realización de este TEG, se seleccionó la arquitectura y los recursos tecnológicos más modernos y que además permitieran realizar las funciones que se habían establecido que tendría la aplicación. Una vez definidos estos conceptos, se llega al consenso de que son vitales para la elaboración de una aplicación web que siga una arquitectura Cliente- Servidor. Donde por el lado del cliente se tiene el HTML, que define la estructura de la página, la cual luego es personalizada usando CSS. Luego se tiene JavaScript o su versión simplificada, JQuery que permite brindarle a la página funcionalidad, al lograr obtener los datos introducidos por el usuario o invocar los métodos del lado del servidor desarrollados en Flask en este caso, los cuales retornan datos, re-direccionan a otras páginas de la aplicación o insertan datos al modelo. 37 Capítulo 3: Marco Aplicativo En este capítulo se presenta la aplicación en Agesef de AgilUs, metodología ágil en donde la usabilidad, usuarios e interacciones se encuentran en el mismo nivel de importancia que los procesos y herramientas, y que el funcionamiento del software tiene mayor relevancia que una documentación exhaustiva. En este sentido se describe el contexto de desarrollo, y cada una de las fases de la metodología para la gestión de los procesos relacionados con la reservación de espacios de la Facultad de Ciencias de la UCV. 3.1. Fase I: Requisitos Es la primera etapa, en la cual se establecieron los requisitos con base a las necesidades y solicitudes realizadas por el usuario. En esta etapa se aplicaron diversas técnicas de indagación para obtener la información necesaria para el posterior análisis de los requerimientos planteados por los miembros de la Coordinación de Extensión para el desarrollo de la aplicación. Las técnicas usadas fueron: tormenta de ideas, perfil de usuario y listado de requerimientos funcionales y no funcionales. 3.1.1. Tormenta de ideas Esta actividad se llevó a cabo en reuniones con el equipo de la Coordinación de Extensión, entre ellos el coordinador y el asistente, donde se recolectó información acerca de la problemática existente con el proceso actual para la reservación de los espacios de la Facultad de Ciencias. En la figura 12 se pueden observar las ideas más importantes que salieron a relucir durante las reuniones. 38 Figura 12. Tormenta de ideas. Entre las ideas que surgieron en estos encuentros se destacan las siguientes:  Permitir que el usuario pueda solicitar la reservación de un espacio y verificar el estado de su solicitud vía internet.  Se desea que la aplicación cuente con un calendario en el cualquier usuario pueda ingresar y revisar cuales serán los próximos eventos a llevarse a cabo y en el cual se pueda consultar los horarios disponibles de cada espacio.  Incorporar funcionalidad que permita a los encargados de la Coordinación de Extensión consultar las solicitudes de espacios existentes y también dar respuesta a estas solicitudes.  Informar a los usuarios vía correo electrónico la respuesta a su solicitud. 3.1.2. Perfiles de usuario Según Acosta (2011) los perfiles de usuarios son fundamentales en cualquier proyecto centrado en el usuario, ya que describen a los usuarios previstos de la aplicación y detallan las características relevantes de los mismos. Existen diversos tipos de usuarios, los cuales asumen un rol dependiendo de las responsabilidades que desempeñan. Los involucrados en el proceso de reservación de espacios son los miembros de la Coordinación de Extensión y los usuarios. 39 La aplicación web cuenta con cinco (5) tipos de usuarios: estudiante, profesor, autoridad, dependencias y otros. Aunque estos tipos de usuarios realizan las mismas actividades dentro del proceso, su tipo será relevante en el momento en el cual la Coordinación de Extensión determine si la solicitud es aprobada o no, y el monto a pagar por el uso del espacio. A continuación se describen cada uno de los roles.  Coordinación de extensión: a este perfil pertenecen el coordinador y el asistente de la Coordinación de Extensión. Este usuario debe poseer destrezas en el uso del computador, con un nivel intermedio en el uso de la aplicación web. Es el encargado de gestionar la reservación de los espacios. Da respuesta a las solicitudes de espacio realizadas por los usuarios registrados, en el caso de las solicitudes aprobadas también debe definir costo de reservación y fecha tope de pago. Reserva espacios para eventos concernientes a la Facultad de Ciencias. Elimina los eventos cancelados, ya sea por el usuario o por la coordinación. También puede agregar o eliminar información de la lista de protocolo, y consultar la información de cada uno de los usuarios registrados en Agesef.  Usuarios registrados del sistema: en este perfil se encuentran la mayoría de los usuarios de la aplicación Agesef, los cuales son todos las personas con derecho a reservar espacios. Este tipo de usuario solo necesita tener conocimientos básicos acerca de navegación web para acceder a la aplicación. Los que están registrados en el sistema pueden solicitar espacios, consultar la disponibilidad de los espacios en el calendario correspondiente y consultar el status de las solicitudes realizadas.  Usuarios no registrados del sistema: en este perfil se encuentran todos los individuos que ingresan a la aplicación Agesef y que no están registrados en el sistema. Este usuario solo necesita tener conocimientos básicos acerca de navegación web para acceder a la aplicación, así mismo, las actividades que puede realizar este usuario son limitadas. Puede consultar los espacios 40 disponibles y sus características, ver el calendario de eventos de cada espacio y registrarse en la aplicación. 3.1.3. Requerimientos funcionales y no funcionales En base a las reuniones con el personal de la Coordinación de Extensión, se recopilaron diversos requisitos considerados al momento del desarrollo de las funcionalidades de la aplicación web. A continuación se detallan cada uno de estos requisitos.  Requerimientos funcionales: -Manejo de operaciones de creación, consulta, actualización y eliminación sobre todos los recursos del sistema: se debe proveer una interfaz de usuario que permite hacer uso de las operaciones CRUD (Create, Read, Update, Delete, por sus siglas en inglés). Algunos recursos del sistema como los espacios y las reservaciones pueden resultar limitado dependiendo de las permisologías otorgadas a los diferentes roles de usuario. -Edición y creación de solicitudes: se requiere una funcionalidad que permita la creación y edición de solicitudes de espacio. A través de esta funcionalidad, los usuarios pueden indicar el espacio y fecha que desean reservar, y esta podrá ser modificada posteriormente, solo en el caso de que no se le haya dado respuesta a dicha solicitud. -Consultar y dar respuesta a las solicitudes: esta funcionalidad es esencial ya que es la manera en que las solicitudes de los usuarios pueden ser respondidas. Esta funcionalidad permite a los encargados de la Coordinación de Extensión y a los directores de las escuelas, revisar las solicitudes y en función a estas darles una respuesta. -Editar información de perfil: esta funcionalidad permite a los usuarios que puedan modificar los datos ingresados al momento del registro en el sistema en 41 caso de haber cometido un error o en caso de que alguno de los datos haya cambiado.  Requerimientos no funcionales: A continuación se expone cada uno de dichos requerimientos. -Usabilidad y navegabilidad: el sistema debe ser de fácil uso para cualquier usuario, ofreciendo funcionalidades que requieran un bajo conocimiento cognitivo. La solución propuesta debe tener interfaces gráficas de administración y de operación en idioma español y en ambiente web, para permitir su utilización a través de cualquiera de los exploradores o navegadores de internet. -Portabilidad: el desarrollo bajo un enfoque web garantiza que las funcionalidades puedas ser accedidas desde diferentes plataformas, ya que solo se requiere de la disposición de un navegador web o browser independientemente del sistema operativo. -Disponibilidad: al tratarse de una aplicación web, la disponibilidad se encuentra implícita; las funcionalidades deben estar disponibles y ser accesibles desde cualquier ubicación geográfica con conexión a internet sin restricciones de horarios. -Escalabilidad: las funcionalidades son implementadas previendo futuras mejoras sobre las mismas, de manera tal que pueden ser integradas con un nuevo código sin complicaciones. 3.2. Fase II: Análisis Constituye la segunda etapa del modelo empleado. En esta etapa se definieron los casos de uso, el modelo de objetos del dominio, prototipos y guías de estilo. 42 3.2.1. Prototipo de interfaz Un prototipo permite tener una idea de la aplicación que se desea obtener. Para la realización de este prototipo, se empleó una aplicación web llamada Balsamiq que permite crear los prototipos digitalmente, generando así un resultado más similar al producto final. En la figura 13 se puede observar el prototipo de la página de inicio del sistema. Está compuesto por el encabezado de la Coordinación de Extensión, una descripción de la intención de esta página, una caja con los auditorios y otra con los espacios deportivos de la Facultad. En la parte inferior hay una breve información sobre la Coordinación de Extensión. Figura 13. Prototipo página de inicio 43 En la figura 14 se puede visualizar la página para la reservación de los auditorios, en esta se muestra cada uno de los auditorios y se indica si pertenece a la Facultad o a alguna de las escuelas. Figura 14. Prototipo página de auditorios En la figura 15 se puede observar el detalle de un espacio, en este caso, es el auditorio Tobías Lasser. En la parte superior se encuentran una serie de 44 imágenes del auditorio, bajo de estas una descripción sobre el auditorio y luego, información detallada del mismo. Figura 15. Prototipo de página del auditorio Tobías Lasser En la figura 16 se puede visualizar el calendario perteneciente al auditorio Tobías Lasser y un evento reflejado en el mismo. 45 Figura 16. Prototipo calendario del auditorio Tobías Lasser Por último, en la figura 17 se puede visualizar la página para inicio de sesión y de registro para los usuarios del sistema. 46 Figura 17. Prototipo página de registro e inicio de sesión 3.2.2. Guía de estilos Como una actividad contemplada en Agilus se propone la guía de estilos, que es un documento en el cual se toman las características relacionadas con el aspecto de la interfaz de usuario. El aspecto de una aplicación viene dado por los colores utilizados, la disposición de los elementos en la interfaz, los píxeles utilizados, entre otros, con la finalidad de generar un documento que pueda dar una idea de la apariencia de la aplicación. A continuación se muestra la utilizada en la aplicación web (ver tabla 1). 47 Tabla 1. Guía de estilo de Agesef Logo Colores principales RGB (255,255,255) RGB (95,158,160) RGB(220, 220, 220) RGB (154,205,50) #FFFFFF #5F9EA0 #DCDCDC #9ACD32 Tipografía Fantasy 12 px Vista de la página principal 3.2.3. Modelos de casos de uso A través de los diagramas de casos de uso se presentan los requerimientos funcionales de la aplicación. A continuación se muestra por cada proceso, una breve explicación de los diagramas de casos de uso. 48 En la figura 18, se pueden observar los casos de uso para los usuarios registrados en la aplicación. Entre las actividades que estos usuarios están autorizados para realizar tenemos: en cuanto a gestión de sesión, pueden iniciar y cerrar sesión. Con respecto a la gestión de los espacios, pueden consultar la información de cada uno de ellos, ver los respectivos calendarios y realizar solicitudes para su uso. Los usuarios registrados también pueden gestionar las solicitudes que realicen, pueden revisarlas, modificarlas, eliminarlas y consultar su status, es decir, conocer si fue aprobada o rechazada. Por último, también son capaces de consultar la información de su perfil y modificarla en caso de que lo desee. 49 Figura 18. Casos de uso para usuario registrado En la figura 19, se puede observar los casos de uso para los miembros de la Coordinación de Extensión. La Coordinación de Extensión, en cuanto a gestión de sesión, al igual que los usuarios registrados, puede iniciar y cerrar sesión. Con respecto a las solicitudes de reservación, pueden ser aprobadas, rechazadas o eliminadas, según corresponda. También tienen la posibilidad de consultar su perfil y modificar la información si así lo desea. Los miembros de la 50 Coordinación de Extensión pueden consultar los espacios existentes, sus calendarios y realizar reservación de los mismos. Es importante destacar que los miembros de la Coordinación de Extensión reservan espacios, no los solicitan. Por último, también son capaces de ver la información de cada uno de los usuarios registrados en el sistema. Figura 19.Casos de uso para miembros de Coordinación de Extensión En la figura 20, se puede observar los casos de uso para los usuarios no registrados. Las actividades que estos usuarios son capaces de realizar son muy limitadas. Con respecto a los espacios, solo pueden consultarlos y ver sus 51 calendarios. Para poder incrementar las actividades que son capaces de hacer tienen la opción de registrarse en la aplicación. Figura 20.Casos de uso para usuario no registrado Tabla 2. Especificación del caso de uso: gestionar sesión Caso de uso: CU.1.1 gestionar sesión. Actor: todos los actores. Precondición: el usuario debe estar en el sitio web de la aplicación. Acción: funcionalidad que permite al usuario registrarse y acceder a la aplicación, mediante un usuario y una contraseña. Condición de Éxito: el usuario podrá ingresar satisfactoriamente a la aplicación cuando lo desee. Tabla 3. Especificación del caso de uso: consultar espacio Caso de uso: CU.1.2 consultar espacio. Actor: todos los actores. Precondición: el usuario debe estar en el sitio web de la aplicación. Acción: funcionalidad que permite al usuario conocer a toda la información necesaria de los espacios. Condición de Éxito: el usuario será capaz de conocer el detalle de los espacios disponibles. Tabla 4. Especificación del caso de uso: gestionar solicitud 52 Caso de uso: CU.1.3 gestionar solicitud. Actor: todos los actores. Precondición: el usuario debe haber iniciado sesión en la aplicación. Acción: funcionalidad que permite al usuario realizar solicitudes de espacios y posteriormente consultar su estado y modificarlo. Condición de Éxito: la solicitud se registrará en la BD de la aplicación. Tabla 5. Especificación del caso de uso: gestionar perfil Caso de uso: CU.1.4 gestionar perfil. Actor: todos los actores. Precondición: el usuario debe haber iniciado sesión en la aplicación. Acción: funcionalidad que permite al usuario consultar su perfil y modificarlo cuando desee. Condición de Éxito: la información reflejada en el perfil es satisfactoria para el usuario. Tabla 6. Especificación del caso de uso: gestionar listado Caso de uso: CU.1.5 gestionar listado. Actor: miembros Coordinación de Extensión. Precondición: el usuario debe haber iniciado sesión en la aplicación. Acción: funcionalidad que permite consultar la información de los usuarios del sistema, los miembros de protocolo y los espacios existentes. Puede agregar y eliminar a estas dos últimas listas. Condición de Éxito: se desplagará la información de los usuarios, miembros de protocolo y espacios. 3.2.4. Modelo de objetos del dominio A través de este modelo se puede definir el dominio que compone la aplicación, a partir de los objetos que lo conforman y sus relaciones. Los objetos presentes en el modelo de objetos de dominio son los siguientes: 53  Usuario: representa a los usuarios del sistema, puede estar registrado o no.  Coordinación de Extensión: representa a la Coordinación de Extensión de la Facultad de Ciencias, y está conformado por los encargados de la misma.  Espacios: representa los espacios que pueden ser reservados; los mismos pueden ser espacios deportivos o auditorios.  Solicitud: representa la solicitud enviada por el usuario para solicitar algún espacio y contiene los detalles del evento que se desea realizar.  Eventos: representa la actividad que será llevada a cabo en los espacios disponibles.  Calendario: representa el calendario que contiene cada espacio con la información sobre cada uno de los eventos que serán llevados a cabo. Entre estos objetos se establecen diversas relaciones: Los usuarios, registrados y no registrados, y los miembros de la Coordinación de Extensión pueden acceder a los calendarios los cuales contienen los eventos que se realizan en los espacios. Los usuarios registrados también pueden realizar solicitudes de espacios; puede ser auditorios o espacios deportivos. Las solicitudes son respondidas por los miembros de las Coordinación de Extensión, cuando la solicitud es aprobada genera un evento que se reflejará en el calendario del espacio correspondiente. Las solicitudes pueden ser consultadas por el usuario que la realizó y por los miembros de la Coordinación de Extensión. Los miembros de la Coordinación de Extensión, pueden reservar espacios sin necesidad de realizar la solicitud previa del mismo. En la figura 21 se muestra el modelo de objeto del dominio, con los objetos y las relaciones entre ellos. 54 Figura 21. Modelo de objetos del dominio 3.2.5. Diseño lógico y físico de la base de datos La figura 22 muestra el esquema que describe el modelo lógico y físico de la base de datos de la aplicación web Agesef. Para el desarrollo del sistema fue necesario crear un conjunto de tablas que conforman la base de datos, la cual hace posible el funcionamiento y la persistencia de la información en la aplicación, las mismas fueron diseñadas para soportar todos los objetivos planteados en el presente trabajo. 55 Figura 22. Modelo lógico y físico de la base de datos La base de datos está conformada por 5 tablas, las cuales son explicadas a continuación:  Persona: es donde se almacena la información de los usuarios registrados (naturales y jurídicos) quienes tienen la posibilidad de realizar reservaciones de los espacios en el sistema.  Espacio: es donde están registrados los datos de todos los espacios presentes en el sistema junto con sus características.  Encargado: contiene los datos de los encargados del sistema, es decir, de los miembros de la Coordinación de Extensión quienes son los que administran los espacios de la Facultad. 56  Protocolo: esta tabla alberga los datos de los guías de protocolo y los técnicos de las salas.  Solicitud: almacena los datos ingresados por el usuario relacionados al evento que necesita realizar y al espacio que desea utilizar. 3.3. Fase III: Prototipaje Según Acosta (2011) en esta etapa se desarrolla un prototipo rápido de la interfaz de usuario, al cual se le van incorporando funcionalidades hasta llegar al producto final. 3.3.1. Desarrollo Para el desarrollo de la aplicación Agesef se utilizó Python como lenguaje de procesamiento del lado del servidor. Las razones de esta elección son que es capaz de soportar conexión con la base de datos Postgres (BD usada para este trabajo especial de grado) a través de un driver que contiene todos los métodos necesarios para realizar operaciones CRUD. Se utilizó el microframework Flask que posee lo mínimo necesario para desarrollar de forma completa el lado del servidor de una aplicación, además de todas las ventajas que trae consigo trabajar con Python, entre ellas su sintaxis sencilla y su portabilidad. Los usuarios de la aplicación se crean de forma manual, hay dos (2) funciones para la creación de usuarios, una para los miembros de la Coordinación de Extensión y otra para los individuos ajenos a esta. En la figura 23 se puede apreciar el código que se encarga de crear los usuarios naturales y en la figura 24, el código para la creación de usuarios jurídicos. 57 Figura 23. Código para la creación de usuarios naturales. Figura 24. Código para la creación de usuarios jurídicos. En la figura 25 se puede apreciar el código que se encarga de crear los miembros de la Coordinación de Extensión. Figura 25. Código para la creación de usuarios administradores. 58 Una vez creado el usuario se hizo el script encargado de iniciar la sesión del usuario en la aplicación y redirigirlo al home correspondiente dependiendo del tipo de usuario que sea. En la figura 26 se muestran el código para el inicio de sesión de usuarios naturales y jurídicos, y en la figura 27 el correspondiente al inicio de sesión de los administradores. Figura 26. Código para el inicio de sesión de usuarios. 59 Figura 27. Código para el inicio de sesión de administradores. Una vez culminada la fase de desarrollo, se procede a realizar las distintas pruebas a la aplicación desarrollada, las cuales se realizan con la finalidad de comprobar que los sistemas desarrollados cumplen con los requerimientos para los cuales han sido creados. Estas pruebas son basadas en el análisis de datos de entrada/salida, y usabilidad de la aplicación. En este caso, se diseñaron un conjunto de pruebas para cada una de las funcionalidades implementadas para la aplicación. 3.3.2. Lista de comprobación Se aplicó esta técnica a diez (10) posibles usuarios del sistema, así como también a dos (2) personas que conforman el personal administrativo de la Coordinación de Extensión involucrados en el proceso de reservación de espacios. Esto permitió identificar fallas y minimizar la carga de la memoria del usuario. A las personas a las que se les aplicó esta técnica, se les facilitó la interfaz de usuario de la aplicación para la realización de distintas actividades relacionadas con la automatización del proceso. Fue utilizada la siguiente lista de comprobación: 60 Tabla 7. Lista de comprobación para la aplicación. Lista de Comprobación Se cumple No se cumple Reconocer en lugar de recordar.  Usar indicadores visuales.  Flexibilidad en la interfaz de usuario.  Proveer Feedback a las acciones del usuario.  Consistencia en apariencia y uso.  Evitar palabras coloquiales y abreviaturas.  Mostrarle al usuario lo que necesita cuando lo necesite.  Permitir al usuario recuperarse de los errores  Mantener la interfaz simple, sencilla y organizada.  Hacer sentir al usuario que puede tomar.  Las funciones del sistema están claramente visibles e identificables.  Permitir al usuario personalizar la IU.  61 3.4. Fase IV: Entrega 3.4.1. Pruebas de usabilidad Durante esta prueba, se evaluó la usabilidad de la aplicación web Agesef, considerando los criterios creados por expertos en IHC, que se describen a continuación.  Accesibilidad: El sitio es visible en cualquier configuración que tenga el cliente.  Navegabilidad: La información debe ser fácil de encontrar, debe haber consistencia en los elementos de navegación.  Lenguaje manejado: Debe ser fácil de entender, de acuerdo al tipo de usuario al que este dirigido la aplicación.  Conceptos utilizados: Deben ser adecuados al usuario al que está dirigida la aplicación.  Consistencia: En los títulos, cabeceras y etiquetas de links. La familiaridad y el reconocimiento deben permitir a los usuarios asociar ciertos elementos con ciertas funcionalidades. Con la finalidad de poder evaluar los criterios anteriormente detallados, se empleó una encuesta a un grupo de usuarios potenciales de la aplicación, los cuales dieron una puntuación comprendida entre 1 y 5, a cada uno de los criterios de usabilidad. A continuación se muestra la leyenda de la escala de Likert utilizada para medir la actitud de las personas con respecto a Agesef: 1. Totalmente de acuerdo 2. De acuerdo 3. Ni de acuerdo ni en desacuerdo 4. En desacuerdo 5. Totalmente en desacuerdo 62 Las pruebas de usabilidad se realizaron a 6 usuarios potenciales de la aplicación. Las pruebas consistieron en observar si a los usuarios se les hizo fácil e intuitivo usar el sistema en el rol que debe cumplir. Seguidamente, los resultados fueron totalizados, calculando el promedio obtenido por cada uno de los criterios. A continuación se describen los resultados de la encuesta, para la aplicación web. Tabla 8. Resultados prueba de usabilidad. Planteamiento Resultados Obtenidos Gráfico Los títulos, menús y textos de la aplicación son legibles. 9/10 (90%) de los usuarios estuvo totalmente de acuerdo y 1/10 (10%) estuvo de acuerdo Los colores utilizados contribuyen a la percepción adecuada de la aplicación 8/10 (80%) de los usuarios estuvo totalmente de acuerdo y 2/10 (20%) estuvo de acuerdo Los descriptores de la aplicación son claros y precisos 7/10 (70%) de los usuarios estuvo totalmente de acuerdo y 3/10 (30%) estuvo de acuerdo 63 Se ofrece una organización que facilita la navegación 6/10 (60%) de los usuarios estuvo totalmente de acuerdo y 4/10 (40%) estuvo de acuerdo Se ofrece una organización que facilita la navegación 6/10 (60%) de los usuarios estuvo totalmente de acuerdo y 4/10 (40%) estuvo de acuerdo El diseño de la aplicación favorece su uso 6/10 (60%) de los usuarios estuvo totalmente de acuerdo y 4/10 (40%) estuvo de acuerdo La aplicación se puede ejecutar de manera intuitiva 8/10 (80%) de los usuarios estuvo totalmente de acuerdo y 2/10 (20%) estuvo de acuerdo Es una aplicación fácil de utilizar 7/10 (70%) de los usuarios estuvo totalmente de acuerdo y 2/10 (20%) estuvo de acuerdo y una sola persona (10%) estuvo en desacuerdo 64 De esta manera, es posible determinar que los resultados de esta evaluación fueron favorables, ya que se estuvo totalmente de acuerdo (1) o de acuerdo (2) con los planteamientos del cuestionario la mayoría de los criterios tomados en cuenta, lo que indica que las herramientas resultan intuitivas y fáciles de usar para los usuarios potenciales. Una vez mostrado parte del código de la aplicación y la estructura del mismo, así como las pruebas que se realizaron en la metodología AgilUs, en el siguiente capítulo se muestran los resultados finales obtenidos en la aplicación. Los elementos de ayuda disponibles en la aplicación son útiles 6/10 (60%) de los usuarios estuvo totalmente de acuerdo y 4/10 (40%) estuvo de acuerdo 65 Capítulo 4: Resultados La aplicación consta de dos (2) módulos que son: usuario y administrador. El primero tiene como función principal facilitar el proceso para las personas u organizaciones interesadas en la realización de las solicitudes, que conlleven a reservar los espacios necesitados. En segundo lugar se tiene el módulo que permite al personal de la Coordinación y Extensión de la Facultad, administrar las áreas disponibles en la institución, y por ende, llevar un mejor control de las actividades involucradas para ello. Entonces de acuerdo a lo anteriormente mencionado, se puede entender que los dos módulos trabajan en conjunto para lograr el objetivo final que es la reservación de espacios. 4.1. Gestión de sesión Permite a los usuarios el registro en la aplicación y su posterior inicio de sesión. Ofrece la opción de reservar espacios y consultar las solicitudes en caso de que existan. En el caso del inicio de sesión es posible recuperar la clave mediante el botón “olvidé mi contraseña”, el cual la enviará vía correo electrónico. En la figura 28 se puede apreciar los formularios para el inicio de sesión y registro. Figura 28. Formulario para el inicio de sesión y registro. 66 4.2. Reservación de espacios Sección que permite a cualquiera de los usuarios registrados en Agesef solicitar alguno de los espacios disponibles. Para esto es necesario primero seleccionar el deseado y posteriormente completar el formulario mostrado en la figura 29 con toda la información relacionada al evento que se desea realizar. Figura 29. Formulario para la reservación de espacios. 4.3. Gestión de solicitudes Esta funcionalidad depende de quien la realice. En el caso de los usuarios, pueden consultar las solicitudes realizadas, modificarlas o eliminarlas, y en las solicitudes aprobadas indican la información relacionada al pago realizado. Por su parte, los miembros encargados del sistema pueden dar respuesta a las solicitudes recibidas y cancelar eventos programados. 67 En ambos casos, esta gestión se realiza en una interfaz como la de la figura 30, donde las solicitudes son aprobadas en función al estado en que se encuentren. Figura 30. Sección para la gestión de espacios 4.4. Gestión de perfil Sección que permite la actualización relacionada a los usuarios, esta funcionalidad es exclusiva para las personas registradas en Agesef. En la figura 31 se puede apreciar la interfaz correspondiente a la sección de perfil. Figura 31. Sección para la gestión de perfil 68 4.5. Gestión de listados de información Consiste en la consulta de todo lo relacionado con las personas registradas, los miembros de protocolo y los espacios existentes. Solo está disponible para los encargados ya que maneja información delicada de los usuarios y además tiene la opción de agregar y eliminar miembros de protocolo y espacios. En la figura 32 se puede observar la interfaz de los listados. Figura 32. Listados de información Mediante el prototipo anterior se pudo visualizar las principales funcionalidades para los distintos usuarios que usarán la aplicación. Es importante resaltar que por cada acción que se realicé durante el proceso, la aplicación enviará un correo para notificar el cambio realizado. 69 Conclusiones Con el desarrollo de Agesef se generó un aporte significativo para la Facultad de Ciencias de la UCV sistematizando el proceso de reservación de los espacios físicos, lo cual fue el objetivo principal de este Trabajo Especial de Grado. La aplicación es fácil de utilizar tanto para sus administradores como para los usuarios. Cumple con los requisitos planteados por los usuarios al inicio de este trabajo, colaborando así a la centralización de las múltiples actividades que conlleva la gestión de espacios físicos. Agesef fue desarrollada haciendo uso de tecnologías de desarrollo libres. Agesef permite la gestión de espacios físicos de una manera sencilla, y contribuye a la erradicación de varios errores que eran cometidos con el proceso que se realizaba anteriormente. Entre los objetivos del desarrollo de esta aplicación, se buscaba reducir la mayor cantidad posible de trabajo durante el proceso de reservación, permitiendo que el personal mejore su productividad e incluso permita la recepción de más solicitudes de las que anteriormente podían ser manejadas, esto se logró agregando algunas funcionalidades que hacen que los usuarios administradores solo se enfoquen en las actividades más importantes del sistema como son la aprobación y rechazo de solicitudes. 70 Recomendaciones A continuación se presenta una lista de recomendaciones, ideas y/o sugerencias que surgieron durante el proceso de desarrollo y que pudieran ser aplicadas sobre esta aplicación en mejoras futuras:  Añadir enlace de Agesef al portal de la Coordinación de Extensión de la Facultad de Ciencias de la UCV.  Agregar la opción de que el pago pueda ser realizado vía internet, ya sea con tarjeta de crédito o mediante transferencia.  Añadir funcionalidad que permita la descarga de calendario con los eventos del mes.  Un buscador de eventos para consultar la información del mismo.  Permitir la modificación del diseño.  Podría ser útil que los usuarios pudieran hacer comentarios sobre los eventos, para que los organizadores pudieran tener un feedback.  Ampliar las funciones que tienen los miembros de la Coordinación de Extensión en función de sus necesidades.  Agregar los enlaces a las redes sociales de la Coordinación de Extensión.  Permitir que los usuarios puedan indicar su interés en función a un evento, lo cual funciona como una medida para los usuarios que desconocen el contenido del evento y además ayuda a los organizadores a saber la recepción del evento por parte de los asistentes.  Agesef fue desarrollado para ser usado en la Facultad de Ciencias de la UCV, pero con algunas modificaciones puede ser utilizado como base para el desarrollo de una aplicación de gestión de espacios para cualquier otro lugar, independientemente de si es una institución educativa o no.  Generar estadísticas sobre los eventos, esto permitiría consultar cuales son los días más solicitados, los espacios más utilizados, las fechas con mayor cantidad de eventos, entre otros.  Como medida para atraer la atención de los usuarios a los eventos a realizarse, se puede colocar en la página de inicio de la aplicación web, la lista de eventos a llevar a cabo en la semana en curso. 71 Referencias bibliográficas Acosta, E. (2011). Agilus: Construcción ágil de la usabilidad. Universidad Central de Venezuela. 14 pp. Bell, D., Parr, M. (2003). Java para estudiantes. México, México: Pearson Educación. 664 pp. Campderrich, B. (2003). Ingeniería del software. Barcelona, España: Editorial UOC. 320pp. Cardona, S., Jaramillo, S., Villa, D. (2008). Programación avanzada en Java. iEdiciones Elizcom. 206 pp. Flanagan, D. (2011). JavaScript: The definitive guide. California, Estados Unidos: O’Reilly Media, Inc. 1096 pp. Frain, B. (2012). Responsive Web Design with HTML5 and CSS3 [Diseño web responsivo con HTML5 y CSS3]. Birmingham, Reino Unido: Packt Publishing Ltd. 324 pp. Franklin, Jack (2013). Beginning jQuery. Apress. 204 pp. García, C. (2003). Diseño web para tod@s I. Barcelona: España. Icaria Editorial. 201pp. James, J. (2005). Ajax: A new approach to web applications [en línea]. California, Estados Unidos: Adaptative Path. Disponible en: http://adaptivepath.org/ideas/ajax-new-approach-web-applications/. Kendall, K & Kendall, J. (2005). Análisis y diseño de sistemas. México: Pearson Educación. 752 pp. Lafosse, J. (2010). Struts 2: El framework de desarrollo de aplicaciones Java EE. Barcelona: España. Ediciones ENI. 490 pp. Luján, S. (2002). Programación de aplicaciones web: historia, principios básicos y clientes web. Alicante, España: Editorial Club Universitario. 321 pp. Marcotte, E. (2011). Responsive web design. Nueva York: Estados Unidos. A book apart. 150 pp. Navajas, A. (2012). Guía completa de CSS3. Autoedición. 63 pp. Niño, J. (2010). Aplicaciones web. Editex. 239 pp. 72 Somerville, I. (2005). Ingeniería del software. Madrid: España. Pearson Educación. 687 páginas. Zofio, J. (2013). Aplicaciones web. España: Editorial Macmillan Iberia SA. 240 pp. 73 ANEXO A Casos de Uso Tabla 1. Especificación del caso de uso: iniciar sesión Caso de uso: CU.1.1.1 iniciar sesión. Actor: todos los usuarios. Precondición: el usuario debe estar registrado en la aplicación. Acción: funcionalidad que permite al usuario ingresar a la aplicación. Condición de Éxito: se iniciará la sesión. Tabla 2. Especificación del caso de uso: cerrar sesión Caso de uso: CU.1.1.2 cerrar sesión. Actor: todos los usuarios. Precondición: el usuario debe haber iniciado sesión en la aplicación. Acción: funcionalidad que permite al usuario finalizar la sesión en la aplicación. Condición de Éxito: se finalizará la sesión del usuario. Tabla 3. Especificación del caso de uso: consultar calendario Caso de uso: CU.1.2.1 consultar calendario. Actor: todos los usuarios. Precondición: el usuario debe estar en el sitio web de la aplicación. Acción: funcionalidad que permite al usuario consultar los eventos que se llevarán a cabo y la disponibilidad de los espacios. Condición de Éxito: conocer los eventos que se realizarán en los espacios. Tabla 4. Especificación del caso de uso: crear solicitud Caso de uso: CU.1.3.1 crear solicitud. Actor: todos los usuarios. Precondición: el usuario debe haber iniciado sesión en la aplicación. Acción: funcionalidad que permite realizar solicitudes para el uso de un espacio. 74 Condición de Éxito: el usuario habrá solicitado la reservación de un espacio. Tabla 5. Especificación del caso de uso: modificar solicitud Caso de uso: CU.1.3.2 modificar solicitud. Actor: todos los usuarios. Precondición: el usuario debe haber iniciado sesión en la aplicación. Acción: funcionalidad que permite actualizar la información reflejada en las solicitudes de espacio que no han recibido respuesta. Condición de Éxito: el usuario habrá actualizado la información de la solicitud. Tabla 6. Especificación del caso de uso: eliminar solicitud Caso de uso: CU.1.3.3 eliminar solicitud. Actor: todos los usuarios. Precondición: el usuario debe haber iniciado sesión en la aplicación. Acción: funcionalidad que permite cancelar la solicitud de un espacio. Condición de Éxito: el usuario habrá eliminado la solicitud. Tabla 7. Especificación del caso de uso: consultar estado de solicitud Caso de uso: CU.1.3.4 consultar estado de solicitud. Actor: todos los usuarios. Precondición: el usuario debe haber iniciado sesión en la aplicación. Acción: funcionalidad que permite conocer el estado en que se encuentra una solicitud: aprobada, rechazada o pendiente. Condición de Éxito: el usuario conocerá el estado de su solicitud. Tabla 8. Especificación del caso de uso: modificar perfil Caso de uso: CU.1.4.1. Modificar perfil Actor: todos los usuarios. Precondición: el usuario debe haber iniciado sesión en la aplicación. Acción: funcionalidad que permite actualizar la información mostrada en su perfil. 75 Condición de Éxito: el perfil del usuario estará actualizada. Tabla 9. Especificación del caso de uso: consultar listado de contacto Caso de uso: CU.1.5.1. Consultar listado de contacto Actor: miembros Coordinación de Extensión. Precondición: el usuario debe haber iniciado sesión en la aplicación. Acción: funcionalidad que permite acceder a la información personal de los usuarios registrados en la aplicación. Condición de Éxito: el usuario conocerá la información más importante de los usuarios registrados. Tabla 10. Especificación del caso de uso: consultar listado de guías de sala y protocolo Caso de uso: CU.1.5.2. Consultar listado de guías de sala y protocolo Actor: miembros Coordinación de Extensión. Precondición: el usuario debe haber iniciado sesión en la aplicación. Acción: funcionalidad que permite conocer la información de los guías de sala y protocolo. Condición de Éxito: el usuario conocerá la información actualizada de los guías de sala y protocolo disponibles. Tabla 11. Especificación del caso de uso: consultar listado de espacios Caso de uso: CU.1.5.3. Consultar listado de espacios Actor: miembros Coordinación de Extensión. Precondición: el usuario debe haber iniciado sesión en la aplicación. Acción: funcionalidad que permite conocer los espacios disponibles en la aplicación. Condición de Éxito: el usuario conocerá la información disponible de los espacios existentes. 76 ANEXO B Cuestionario de usabilidad de Agesef Este cuestionario tiene como intención evaluar la usabilidad de la aplicación web Agesef. La usabilidad es la efectividad, eficiencia y satisfacción con la que la aplicación puede ser comprendida, utilizada y ser atractiva para usted. Se agradece seleccionar la opción que representa su opinión en función de la afirmación dada. 1. Los títulos, menús y textos de la aplicación son legibles. a. Totalmente de acuerdo b. De acuerdo c. Ni de acuerdo ni en desacuerdo d. En desacuerdo e. Totalmente en desacuerdo 2. Los colores utilizados contribuyen a la percepción adecuada a la aplicación. a. Totalmente de acuerdo b. De acuerdo c. Ni de acuerdo ni en desacuerdo d. En desacuerdo e. Totalmente en desacuerdo 3. Los descriptores de la aplicación son claros y precisos. a. Totalmente de acuerdo b. De acuerdo c. Ni de acuerdo ni en desacuerdo d. En desacuerdo e. Totalmente en desacuerdo 4. Se ofrece una organización que facilita la navegación. a. Totalmente de acuerdo b. De acuerdo 77 c. Ni de acuerdo ni en desacuerdo d. En desacuerdo e. Totalmente en desacuerdo 5. El diseño de la aplicación favorece su uso. a. Totalmente de acuerdo b. De acuerdo c. Ni de acuerdo ni en desacuerdo d. En desacuerdo e. Totalmente en desacuerdo 6. La aplicación se puede ejecutar de manera intuitiva. a. Totalmente de acuerdo b. De acuerdo c. Ni de acuerdo ni en desacuerdo d. En desacuerdo e. Totalmente en desacuerdo 7. Es una aplicación fácil de utilizar. a. Totalmente de acuerdo b. De acuerdo c. Ni de acuerdo ni en desacuerdo d. En desacuerdo e. Totalmente en desacuerdo 8. Los elementos de ayuda disponibles en la aplicación son útiles. a. Totalmente de acuerdo b. De acuerdo c. Ni de acuerdo ni en desacuerdo d. En desacuerdo e. Totalmente en desacuerdo 78 ANEXO C Resultados de Pruebas de Usabilidad Item 1 Item 2 Item 3 Item 4 Item 5 Item 6 Item 7 Item 8 Totalmente de acuerdo Totalmente de acuerdo Totalmente de acuerdo De acuerdo Totalmente de acuerdo Totalmente de acuerdo De acuerdo Totalmente de acuerdo Totalmente de acuerdo De acuerdo De acuerdo De acuerdo Totalmente de acuerdo De acuerdo Totalmente de acuerdo De acuerdo Totalmente de acuerdo Totalmente de acuerdo Totalmente de acuerdo De acuerdo Totalmente de acuerdo Totalmente de acuerdo Totalmente de acuerdo Totalmente de acuerdo Totalmente de acuerdo De acuerdo De acuerdo Totalmente de acuerdo Totalmente de acuerdo De acuerdo De acuerdo De acuerdo Totalmente de acuerdo Totalmente de acuerdo De acuerdo Totalmente de acuerdo De acuerdo De acuerdo Totalmente de acuerdo Totalmente de acuerdo De acuerdo Totalmente de acuerdo Totalmente de acuerdo De acuerdo De acuerdo Totalmente de acuerdo Totalmente de acuerdo Totalmente de acuerdo 79 ANEXO D Manual Técnico de Agesef El presente manual tiene el propósito de informar sobre las distintas secciones y funcionalidades del sistema a nivel de código para el personal de soporte técnico. Se asume que esta configuración se está realizando en un sistema operativo Debian (Ubuntu, Debian, Mint, etc.) y que es usuario root, el procedimiento a seguir es el siguiente: 1. Actualizar la lista de repositorios con el comando: aptitude update 2. Instalar los programas necesarios para el proyecto, que son básicamente Python, Flask, Psycopg2 y Postgres. aptitude install python python-dev python-pip postgresql-9.1 postgresql- client-9.1 libpq-dev Los tres primeros instalan el intérprete de Python, las dependencias necesarias para compilar sus paquetes y el manejador de paquetes de Python Pip. Las dos siguientes instalan un servidor de Postgres y un cliente para conectarnos. La última instala las dependencias necesarias para el Psycopg2. pip install flask psycopg2 3. Finalmente para configurar una base de datos en pPostgres, primero se debe cambiar al usuario Postgres, conectar al servidor, crear la base de datos, 80 crear un usuario con permisos sobre esa base de datos y después conectar con el usuario y crear tablas. su postgres psql create database tesis_database; create user giselle with password ‘tesis’; grant all privileges on database tesis_database to giselle; A continuación el código necesario para la creación de las tablas correspondientes a este Trabajo Especial de Grado: 81 82 ANEXO E Manual de Usuario Agesef El presente manual tiene como intención instruir sobre el uso de la aplicación AGESEF para la reservación de espacios físicos de la Facultad de Ciencias de la Universidad Central de Venezuela. Inicio de sesión Para iniciar sesión desde cualquier ubicación, debe hacer clic en el botón “Iniciar sesión” ubicado en la esquina superior derecha, mostrado en la figura 1. Figura 1. Botón de “iniciar sesión” Al hacer clic sobre este botón será redireccionado a la página de inicio de sesión y registro, la cual se muestra en la figura 2. Figura 2. Página de inicio de sesión y registro 83 Una vez ubicado en el inicio de sesión y registro, debe completar los campos del formulario de inicio de sesión mostrado en la figura 3. En este formulario debe colocar su correo y contraseña y seleccionar el botón enviar. Figura 3. Formulario de inicio de sesión En caso de no recordar su contraseña debe colocar su correo y hacer clic en el botón “olvidé mi contraseña” y aparecerá un mensaje como el mostrado en la figura 4. Figura 4.Mensaje al seleccionar opción “olvidé mi contraseña” En caso de hacer clic en el botón sin haber colocado el correo, aparecerá un mensaje indicando que debe colocar el correo como se muestra en la figura 5. Figura 5. Mensaje de error al seleccionar opción “olvidé mi contraseña” Al iniciar sesión correctamente, será redirigido a la página de inicio de usuarios. 84 Módulo de usuario En este módulo se muestra la interfaz principal del usuario registrado, con sus funcionalidades asociadas, las cuales son: -Consultar solicitudes pendientes, aprobadas y rechazadas -Actualizar información de perfil Solicitudes Al ingresar al módulo de usuario, debe dirigirse a la sección solicitudes mostrada en la figura 21. Figura 21. Pestañas de módulo de usuario Para consultar las solicitudes, debe seleccionar el tipo de solicitud. En la figura 22 se muestran los 3 tipos de solicitudes entre los cuales puede escoger. Figura 22. Tipos de solicitudes – módulo usuario Al seleccionar solicitudes pendientes, se despliega la lista de solicitudes que no han sido respondidas por la Coordinación de Extensión. Al desplegar este tipo de solicitudes se verá como la figura 23. Figura 23. Lista de solicitudes pendientes – módulo usuario 85 En la figura anterior se puede observar que esta lista de solicitudes está dividida en 2 columnas, la primera contiene la información del evento y la segunda tiene los botones de eliminar y modificar. Al seleccionar solicitudes aprobadas, se muestra la lista de eventos que fueron solicitados por el usuario y aprobados por la Coordinación de Extensión. La lista luce como la mostrada en la figura 24. Figura 24. Lista de solicitudes aprobadas – módulo de usuario NOTA: Si se desea cancelar un evento que ya fue aprobado, el usuario debe comunicarse con la Coordinación de Extensión para informar la cancelación. Al seleccionar solicitudes rechazadas, se muestra la lista de eventos que fueron solicitados por el usuario y rechazados por la Coordinación de Extensión. Esta lista luce como la mostrada en la figura 25. 86 Figura 25. Lista de solicitudes rechazadas – módulo de usuario Perfil En esta sección se muestra la información del usuario y permite la modificación de la misma. Esta sección es mostrada en la figura 26. Figura 26. Pestaña de perfil – módulo de usuario Para modificar sólo es necesario llenar el campo con la nueva información y seleccionar el botón editar. Eliminar solicitudes pendientes En la tabla de solicitudes pendientes se encuentran los botones de eliminar y modificar. En caso de que desee eliminar la solicitud, debe hacer clic sobre el botón eliminar y este generará un mensaje como el mostrado en la figura 27 para confirmar la acción seleccionada. Figura 27. Mensaje para confirmar acción de eliminar solicitud 87 En caso de confirmar la eliminación de la solicitud, aparecerá un mensaje para informar que la solicitud fue eliminada satisfactoriamente. Figura 28. Mensaje para informar que solicitud fue eliminada Solicitar espacio Para solicitar espacio debe seleccionar que tipo de espacio desea, auditorio o espacio deportivo en la página de inicio. En la figura 29 se muestra como son representadas las opciones. Figura29. Auditorios y espacios deportivos Al seleccionar el tipo de espacio, se listarán los espacios disponibles, en la figura 30 se muestran los espacios correspondientes a la opción de auditorios y en la figura 31 se muestran los espacios deportivos. 88 Figura 30: Auditorios Figura 31: Espacios deportivos 89 Al seleccionar uno de los espacios, independientemente de si es auditorio o espacio deportivo, se despliega su información como se muestra en la figura 32. Figura 32. Pestañas de espacios Como se puede observar en la figura anterior la página contiene 2 secciones, una de características del espacio y una correspondiente al calendario. En la figura 33 se muestra la sección del calendario. Figura 33. Pestaña de calendario 90 En este calendario se puede ver el nombre y horario de los próximos eventos a llevarse a cabo en el espacio actual. También ofrece la opción de reservar el espacio. Al hacer clic sobre la fecha que desea, será redireccionado al formulario de solicitud de espacios mostrado en la figura 34. Figura 34. Formulario para solicitar espacio 91 ANEXO F. Manual de usuario administrador El presente manual tiene como intención instruir sobre el uso de la aplicación AGESEF para la gestión de los espacios físicos de la Facultad de Ciencias de la Universidad Central de Venezuela por parte de los usuarios administradores. Inicio de sesión Para iniciar sesión desde cualquiera de las páginas del sistema, el usuario debe hacer clic en el botón “Iniciar sesión” ubicado en la esquina superior derecha, mostrado en la figura 1. Figura 1. Botón de “iniciar sesión” Al hacer clic sobre este botón será redireccionado a la página de inicio de sesión y registro, la cual se muestra en la figura 2. Figura 2. Página de inicio de sesión y registro 92 Una vez ubicados en la página de inicio de sesión y registro, se deben completar los campos del formulario de inicio de sesión mostrado en la figura 3. En este formulario debe colocar su correo y contraseña y seleccionar el botón enviar. Figura 3. Formulario de inicio de sesión En caso de no recordar su contraseña debe colocar su correo y hacer clic en el botón “olvidé mi contraseña” y aparecerá un mensaje como el mostrado en la figura 4. Figura 4.Mensaje al seleccionar opción “olvidé mi contraseña” En caso de hacer clic en el botón sin haber colocado el correo, aparecerá un mensaje indicando que debe colocar el correo como se muestra en la figura 5. Figura 5. Mensaje de error al seleccionar opción “olvidé mi contraseña” Al iniciar sesión, será redirigido a su página de inicio. 93 Módulo administrador En este módulo se muestra la interfaz principal del administrador de Agesef, con sus funcionalidades asociadas, las cuales son: -Consultar solicitudes recibidas, aprobadas y rechazadas -Consultar la lista de contactos y miembros de protocolo -Aprobar o rechazar solicitudes de espacios -Cancelar eventos aprobados -Actualizar información de perfil Solicitudes Al ingresar al módulo de administrador, encontrará múltiples secciones, como las mostradas en la figura 6, donde puede seleccionar la actividad a realizar. Figura 6. Pestañas módulo administrador Para consultar las solicitudes debe seleccionar el tipo de solicitud del despegable mostrado en la figura 6. En la figura 7 se muestra la variedad de opciones entre las cuales puede escoger. Figura 7. Tipos de solicitudes Al seleccionar “solicitudes pendientes”, se despliega la lista de solicitudes por responder en caso de que exista alguna. Esta lista de solicitudes es mostrada en la figura 8. 94 Figura 8. Solicitudes pendientes – módulo administrador En caso de que no existan solicitudes se mostrará un mensaje como el de la figura 9. Figura 9.Mensaje para cuando no existen solicitudes pendientes Cuando se seleccionan las solicitudes aprobadas se muestra una tabla como la de la figura 10. Figura 10. Lista de solicitudes aprobadas – módulo administrador 95 Como se puede observar en la figura 10, la tabla contiene información del evento a realizar, los datos del solicitante, el estado del pago y el botón para cancelar el evento. Aprobar o rechazar solicitudes La tabla de solicitudes pendientes contiene la información del evento a realizar, los datos del solicitante y los botones aprobar y rechazar. En caso de que se desee aprobar la solicitud, debe hacer clic sobre el botón aprobar y se generará un mensaje como el mostrado en la figura 11 para confirmar la acción. Figura 11. Mensaje para confirmar aprobación de solicitud Al seleccionar aceptar, se enviará un correo a la lista de personas de protocolo con la información del evento aprobado. Luego, será redireccionado al formulario en el cual debe definir el monto a pagar por la reservación del espacio y la fecha máxima de pago, también se puede exonerar el pago. El formulario se muestra en la figura 12. Figura 12. Formulario para definir pago de evento Luego de llenar el formulario, se informa al usuario de la aprobación de su evento y el monto a pagar por la reservación del espacio. Al finalizar, será redirigido a la página de inicio del módulo del administrador. Para rechazar la solicitud, se hace clic sobre el botón rechazar y se mostrará un mensaje para confirmar la acción, como el mostrado en la figura 13. 96 Figura 13. Mensaje para confirmar rechazo de solicitud Luego el usuario solicitante es informado vía correo electrónico que su solicitud fue rechazada y el usuario administrador es redirigido a la página de inicio del módulo correspondiente. Cuando una solicitud es aprobada, puede ser visualizada en el calendario del espacio correspondiente. Modificar status de pago de un evento Al consultar las solicitudes aprobadas se puede modificar el estado del pago. Esta modificación consiste en colocar como “pago cancelado” un evento que se encuentra como “pago pendiente”. Para realizar esta modificación solo es necesario hacer clic en el botón cambiar, mostrado en la figura 14. Figura 14. Estructura de tabla de solicitudes aprobadas Aparecerá un mensaje para confirmar la modificación, como el mostrado en la figura 15. Figura 15. Mensaje para confirmar el cambio de status de un evento Al consultar de nuevo los eventos aprobados, el modificado ahora tendrá en el estado del pago “pago realizado” como se muestra en la figura 16. 97 Figura 16. Ejemplo de estatus de pago cuando es modificado Cancelar evento aprobado Al consultar las solicitudes aprobadas, se muestra la opción de cancelar evento, esta acción permite la cancelación de un evento después de haber sido aprobado. Al hacer clic en “cancelar evento” aparecerá un mensaje para confirmar la acción como el mostrado en la figura 17 Figura 17. Mensaje para confirmar la cancelación de un evento Al consultar de nuevo las solicitudes aprobadas, el evento cancelado ya no será listado. Esta acción se puede realizar independientemente del estado del pago. Contactos Al seleccionar el módulo de listados aparecerá el enlace mostrado en la figura 18. Figura 18. Sección contactos Al hacer clic sobre “ver lista de contactos”, se desplegará la lista de contactos, la cual contiene la información de cada uno de los usuarios registrados como se muestra en la figura 19. 98 Figura 19. Lista de contactos – módulo administrador Perfil En esta sección se muestra la información del usuario y permite la modificación de la misma. Esta sección es mostrada en la figura 20. Figura 20. Pestaña de perfil – módulo administrativo Para modificar solo es necesario llenar el campo con la nueva información y seleccionar el botón editar.Microsoft Word - tesis Universidad Central de Venezuela Facultad de Ciencias Escuela de Computación Aplicación Web para la gestión de espacios físicos de la Facultad de Ciencias de la Universidad Central de Venezuela Trabajo Especial de Grado presentado ante la ilustre Universidad Central de Venezuela por: Br. Giselle Boyer Para optar por el titulo de Licenciado en Computación Tutores: Profa. Yosly Hernández Prof. Ernesto Fuenmayor Junio, 2016. i UNIVERSIDAD CENTRAL DE VENEZUELA FACULTAD DE CIENCIAS ESCUELA DE COMPUTACIÓN Acta Quienes suscriben, miembros del jurado designado por el Consejo de la Escuela de Computación, para examinar el Trabajo Especial de Grado titulado “Aplicación Web para la gestión de espacios físicos de la Facultad de Ciencias de la Universidad Central de Venezuela.” presentado por la Bachiller Giselle Desiree Boyer Jimenez, C.I. V-20.675.268, a los fines de optar al título de Licenciado en Computación, dejamos constancia de lo siguiente: Leído como fue dicho trabajo, por cada uno de los miembros del jurado, se fijó el día 2 de Junio de 2016, a las 9:00 am, para que el autor lo defendiera en forma pública, lo que éste hizo en el aula I de la Escuela de Computación, mediante una presentación oral de su contenido, luego de lo cual respondió a las preguntas formuladas. Finalizada la defensa pública del Trabajo Especial de Grado, el jurado decidió aprobar con la nota de ____ puntos. En fe de lo cual se levanta la presente Acta, en Caracas el día 2 de Junio de 2016. ____________________________ Profa. Yosly Hernández Prof. Ernesto Fuenmayor Tutora Tutor _________________________ _________________________ Prof. Santiago Gómez Prof. Franklin Sandoval Jurado Principal Jurado Principal ii Dedicatoria A mis padres y familia quienes con un gran esfuerzo y apoyo incondicional, me permitieron alcanzar éste logro. Los amo. iii Agradecimientos Primero que todo, a mi mami quien con mucho trabajo y esfuerzo se encargo de darme lo que necesitara para llegar hasta aquí, gracias por tu apoyo en todo momento. A mi hermanita, quien siempre busca darme ánimos y demostrarme su apoyo a través de sus particulares muestras de cariño. A mis tíos, tías, abuelas y abuelos que siempre estuvieron ahí para lo que necesitara. A mi novio, Miguel Perdigón, por ser el compañero de tesis que no tuve, por ser siempre mi apoyo y seguirme queriendo aún cuando me estresaba y ni yo misma me soportaba. A mis tutores, por confiar en mí para la realización de este proyecto, por su paciencia, ayuda en todo momento y su comprensión con respecto a mi ajetreado horario. A todos los que colaboraron en mi formación profesional y en la realización de esta tesis. Y finalmente, gracias a Siscotel y a mis compañeros de trabajo por entender mis ausencias, por su ayuda cuando la necesitaba y por las constantes palabras de apoyo durante la realización de este trabajo. iv Resumen La Facultad de Ciencias de la Universidad Central de Venezuela dispone de múltiples espacios, entre los cuales destacan: auditorios, canchas, aulas y salas. Éstos pueden ser empleados para la realización de eventos y actividades y se encuentran a la disposición de la comunidad universitaria y del público en general. La Coordinación de Extensión se encargar de gestionarlos. Para llevar a cabo esta tarea empleaban múltiples herramientas que trabajaban de manera aislada, provocando que el proceso fuese más complejo, extenso y propenso a errores, ya que en cada etapa de la reservación de espacios existe un alto grado de intervención humana. Por esta razón, se requirió la centralización de las actividades que permitan a los interesados el uso de estas áreas, para el beneficio de la comunidad y del personal involucrado. Agesef es la aplicación web desarrollada para la gestión de los espacios de la Facultad de Ciencias. El propósito de su creación es tener a la disposición una herramienta que ayude, tanto a los usuarios como al personal de la Coordinación de Extensión, en la reservación de los espacios de manera sencilla y rápida, que ofrezca toda la información necesaria y además reduzca los tiempos de respuesta. También contribuye en la optimización de dicho proceso realizando la automatización de las actividades que lo conforman, las cuales se realizaban de manera manual por parte del personal de la coordinación. En el siguiente trabajo se explica cada uno de los procesos que permitieron el desarrollo de esta aplicación antes mencionada. Además se expone como fue la experiencia usando la metodología AgilUs, la cual se empleó para el desarrollo de la solución tecnológica, incluyendo el uso de lenguajes y herramientas de desarrollo como Html, Python, CSS, JavaScript y Bootstrap. Palabras claves: Aplicación web, reservación, Agesef, espacio, evento v Índice general Índice de figuras…………………………………………………………….………………..iv Índice de tablas…………………………………………………………….…..…………….vi Introducción………………………………………………………………….………………..1 1. Capítulo 1: Problema de investigación…….…………………...….……………………..4 1.1. Contexto de investigación………………………………..……………………….4 1.2. Problema de investigación………………………………...………………….…..4 1.3. Justificación………………………………………………………………………….7 1.4. Objetivo general…………………………………………………………………....9 1.5. Objetivos específicos……………………………………………………………...9 1.6. Alcance………………………………………………………………………………9 1.7. Metodología de desarrollo de software……………...………………….……...10 1.8. Antecedentes………………………………………………………………...……12 2. Capítulo 2: Marco teórico…………………………...………………..…………….………..16 2.1. Gestión de espacios……………………………………...………………………16 2.2. Aplicaciones web……………………………………………………………...….18 2.2.1. Características de las aplicaciones web…………………...……………...19 2.2.2. Ventajas de las aplicaciones web…………………………………………..21 2.2.3. Desventajas de las aplicaciones web……………………...………………21 2.3. Arquitectura de las aplicaciones web………………...………………………...22 2.3.1. Arquitectura cliente servidor…………………………………...…………….23 2.4. Modelo Vista Controlador………………………………...………………………23 2.5. Tipos de aplicaciones web………………………...……………………………..24 2.5.1. Ejemplos de aplicaciones web…………………………...…………………25 2.6. Herramientas para el desarrollo de aplicaciones web………………………..27 2.6.1. Lenguaje de marcado de hipertexto.......................................................27 2.6.2. Hoja de estilo en cascada.......................................................................29 2.6.3. JavaScript...............................................................................................30 2.6.3.1. JQuery.................................................................................................30 2.6.4. AJAX…………………………………………………………………………..31 vi 2.6.5. Responsive Design…………………………………………………………..32 2.6.6. Framework Python Flask………………………………………...………….33 2.7. Licencia pública general de GNU …………………………………..….......…..34 3. Capítulo 3: Marco aplicativo………………………………..…...………………….……….37 3.1. Fase I: Requisitos……………………………………...…………………………37 3.1.1. Tormenta de ideas…………………………………………...………………37 3.1.2. Perfiles de usuario…………………………………………..……………….38 3.1.3. Requerimientos funcionales y no funcionales…………...………………..40 3.2. Fase II: Análisis………………………………………...…………………………41 3.2.1. Prototipo de interfaz………………………………………………………….42 3.2.2. Guía de estilos………………………………………………………………..46 3.2.3. Modelos de casos de uso………………………...…………………………47 3.2.4. Modelo de objetos del dominio…………………..…………………………52 3.2.5. Diseño lógico y físico de la base de datos……………...…………………54 3.3. Fase III: Prototipaje……………………………………...……………..………...56 3.3.1. Desarrollo……………………………………………………………………..56 3.3.2. Lista de comprobación…………………………………...………………….59 3.4. Fase IV: Entrega………………………………………...………………………..61 3.4.1. Pruebas de usabilidad……..………………………………...………………61 4. Capítulo 4: Resultados…………………………......……………….…………………….65 4.1. Gestión de sesión……………………………….......................................……65 4.2. Reservación de espacios……………...………………………..….…...……….66 4.3. Gestión de solicitudes……………….…………………………......…...……….66 4.4. Gestión de perfil…………………………………………………………………..67 4.5. Gestión de listados de información…………………………………………..68 Conclusiones……………………………………………………………….………………..69 Recomendaciones…………………………………………………………………………..71 Referencias bibliográficas………………………………………………………………….72 Anexo A. Casos de uso...…………………………………………………………………..73 Anexo B. Cuestionario de usabilidad……………………………………………………..76 Anexo C. Resultados prueba de usabilidad….…………………………………………..78 vii Anexo D. Manual técnico de Agesef……………………………………………………...79 Anexo E. Manual de usuario Agesef……………………………………………………...82 Anexo F. Manual de usuario administrador Agesef……………………………………..91 viii Índice de figuras Figura 1.Diagrama de flujo proceso de reservación de espacios………………….…..6 Figura 2.Ciclo de vida de AgilUs.………………………………..……………..……..…..11 Figura 3.Aplicación web de Universidad del País Vasco Euskal Herriko Unibersitatea…………………………………………………………………………..….....13 Figura 4.Aplicación web Universidad Autónoma de Bucaramanga..………………….14 Figura 5.Aplicación web Fundación Parque Científico Universidad del Vallado…….15 Figura 6. Componentes de la arquitectura cliente-servidor…....................................24 Figura 7. Modelo Vista Controlador………….............................................................25 Figura 8.Aplicación web Pixlr…..………………..........................................................27 Figura 9.Aplicación web Evernote………………………………………………...……...28 Figura 10.Aplicación web Spotify…..……...……........................................................28 Figura 11.Aplicación web Netflix……………………………………………………….....29 Figura 12.Tormenta de ideas…………………….……...……......................................39 Figura 13. Prototipo página de inicio …………...……...……......................................43 Figura 14. Prototipo página de auditorios .................................................................44 Figura 15. Prototipo de página del auditorio Tobías Lasser .....................................45 Figura 16. Prototipo calendario del auditorio Tobías Lasser ……...……...................46 Figura 17. Prototipo página de registro e inicio de sesión ……...……......................47 Figura 18. Casos de uso para usuario registrado ……...……....................................50 Figura 19. Casos de uso para miembros de Coordinación de Extensión…...............51 Figura 20. Casos de uso para usuario no registrado.……...………............................52 Figura 21. Modelo de objetos del dominio.……...………............................................54 Figura 22. Modelo lógico y físico de la base de datos.……...………..........................56 Figura 23. Código para la creación de usuarios naturales.……...………....................58 Figura 24. Código para la creación de usuarios jurídicos.……....………....................58 Figura 25. Código para la creación de usuarios administradores.…….......................58 Figura 26. Código para el inicio de sesión de usuarios.…….......………....................59 Figura 27. Código para el inicio de sesión de administradores.……...………............60 Figura 28. Formulario para el inicio de sesión y registro...………..............................66 ix Figura 29. Formulario para la reservación de espacios...………................................67 Figura 30. Sección para la gestión de espacios.……...………...................................68 Figura 31. Sección para la gestión de perfil...............................................................68 Figura 32. Listados de información.……...……….......................................................69 x Índice de tablas Tabla 1. Guía de estilo de Agesef………………..………………..……..……………….48 Tabla 2. Especificación del caso de uso: gestionar sesión……..……..……………….52 Tabla 3. Especificación del caso de uso: consultar espacio…..……..………………...52 Tabla 4. Especificación del caso de uso: gestionar solicitud……..……..……………..52 Tabla 5. Especificación del caso de uso: gestionar perfil……..……..………………...53 Tabla 6. Especificación del caso de uso: gestionar listado……..……..……………….53 Tabla 7. Lista de comprobación para la aplicación…..…………..……..………………53 Tabla 8. Resultados de las pruebas de usabilidad……………………………………...63 1 Introducción Debido al auge tecnológico que se ha venido viviendo entre el 2010 y 2016 principalmente, son diversas las organizaciones que aprovechan las tecnologías web para difundir su información institucional, dar a conocer sus actividades y automatizar sus procesos internos mediante el uso de aplicaciones que faciliten y ayuden en sus actividades cotidianas. Las aplicaciones web son programas sencillos, económicos, confiables y seguros que ofrecen la posibilidad de ser accedido desde cualquier lugar utilizando sólo un dispositivo que cuente con un navegador y acceso a internet. Por esta razón, está fue la herramienta seleccionada para solventar el problema de la Facultad de Ciencias de la UCV, donde el proceso de reservación de espacios era ineficiente debido a la intervención humana en las distintas etapas y procesos engorrosos para la reservación que no se encuentran automatizados, y es por ello que se invertía mucho tiempo y esfuerzo en realizarlas, provocando eventualmente inconvenientes y errores. Esto a su vez genera incomodidad en los usuarios y constituye una mala visibilidad para la institución. En consecuencia, surgió la necesidad de desarrollar e implementar una aplicación web que permita sistematizar y centralizar el proceso de reservación, para mejorar la calidad y eficiencia del mismo, brindando mayores beneficios tanto para la Facultad como para las personas u organizaciones interesadas en la reservación de los espacios. El siguiente trabajo de investigación está estructurado de la siguiente forma:  Capítulo 1: Problema de investigación. estudiamos el proceso de reservación de espacios de la Coordinación de Extensión de la Facultad de Ciencias de la UCV. Adicionalmente, se desarrolla el contexto del problema, se plantea la solución a la problemática planteada en el problema de investigación, se 2 presentan los objetivos generales y específicos, la justificación del proceso involucrado en el problema. Finalmente, se presenta el alcance de la aplicación desarrollada en el TEG, que expone las funcionalidades que la aplicación estaría en capacidad de ofrecer.  Capítulo 2: Marco Conceptual. En este capítulo se describen conceptos básicos acerca de las tecnologías web de vanguardia que serán utilizadas para el desarrollo del TEG planteado en esta investigación.  Capítulo 3: Marco Aplicativo. Se describen los aspectos más relevantes relacionados a la metodología de desarrollo de software AgilUs y se especifican las bases y las distintas etapas que la componen. Asimismo, se describen y explican las fases de requisitos y análisis del método aplicado en el TEG, detallando las actividades realizadas, los artefactos generados, las pruebas realizadas y las entregas efectuadas.  Capítulo 4: Resultados. Se exponen los resultados de este Trabajo Especial de Grado (TEG), mostrando cada una de las funcionalidades e interfaces de la aplicación desarrollada y se demuestra que los objetivos propuestos fueron logrados.  Conclusiones. En esta sección se exponen los beneficios asociados al desarrollo y uso de Agesef, aplicación que permite la gestión de los espacios de la Facultad de Ciencias. Se discuten los resultados y se realiza un análisis global.  Recomendaciones: Esta sección contiene las sugerencias de futuras mejoras que se le pueden aplicar a la aplicación desarrollada en este TEG.  Referencias: Son las fuentes utilizadas como apoyo en el marco conceptual, definiciones e investigaciones realizadas en este TEG. 3 Capítulo 1: Problema de investigación En el presente capítulo se proporciona una explicación detallada de la problemática identificada en el proceso de solicitud y reservación de espacios de la Facultad de Ciencias de la Universidad Central de Venezuela, de igual manera se presenta el objetivo general y los objetivos específicos propuestos en el Trabajo Especial de Grado y se describe la justificación, alcance e importancia de los mismos. 1.1. Contexto de investigación La investigación estuvo contextualizada en la Facultad de Ciencias de la UCV, principalmente en la Coordinación de Extensión, la cual, según su portal oficial www.ciens.ucv.ve/ciens/coordinacion-de-extension, ofrece actividades de orden extracurricular orientadas al ámbito académico, cultural, deportivo y recreativo, con una amplia oferta de posibilidades de participación. De igual forma, promueve y ejecuta una proyección social efectiva, a través de su unidad de investigación, manteniendo así una estrecha relación con la actividad empresarial, las relaciones inter-institucionales y una amplia divulgación en el área de la ciencia y la tecnología. La Coordinación de Extensión cumple varias funciones dentro de la Facultad de Ciencias que son de beneficio tanto para los estudiantes como para personas externas a la universidad. 1.2. Problema de investigación La Coordinación de Extensión es la encargada de la gestión de algunas de las salas, auditorios y canchas deportivas pertenecientes a la Facultad. Los espacios pueden ser solicitados en calidad de préstamos, esto aplica para determinados eventos de la UCV en los cuales no se realiza ningún cobro por el uso del espacio, en cambio para el resto de los casos, pudieran ser alquilados. En estos casos se cobra por el uso de las instalaciones, de manera de poder mantenerlas en buen estado. 4 Los espacios de la Facultad de Ciencias de la UCV que son administrados por la Coordinación de extensión y las dependencias que la conforman son:  Auditorio “Dr. Tobías Lasser”  Sala “Leandro Aristeguieta” (antigua aula 11)  Gimnasio cubierto “Efrén Garcia” (Poliedrito)  Sala Manuel Bemporad  Sala de Consejo de Facultad  Salón Alpha  Salón Beta  Sala de seminario Guillermo Ruggieri  Sala Jesús Raimundo Chela  Sala Jesús María Pacheco  Salón Augusto Bonazzi  Salón Javier Vargas  Sala de los espejos  Campo de softbol  Campo de fútbol En la figura 1 se puede observar en un diagrama de flujo que especifica como era el proceso de reservación de espacios. 5 Figura 1. Diagrama de flujo proceso de reservación de espacios Las desventajas de este proceso de reservación de espacios radicaban en la descentralización de la información que era manejada por varias personas y se llevaba a través de tecnologías separadas que dificultaban las consultas, reportes, etcétera, y complicaban el proceso, lo cual le agregaba más complejidad e incrementaba la posibilidad de un error. El proceso se puede resumir como: la Coordinación de Extensión podía ser contactada vía correo electrónico o vía telefónica por las personas interesadas en solicitar alguno de los espacios de la Facultad. En caso de comunicarse por teléfono se le informaba la dirección de correo electrónico a la cual debía enviar la solicitud especificando el espacio deseado, la fecha y los equipos que necesitaba. Posteriormente, la Coordinación de Extensión respondía el correo aprobando o rechazando la solicitud dependiendo del evento a realizarse, de la disponibilidad del espacio y de los acuerdos administrativos. Si la solicitud era aceptada, y dependiendo de la actividad que se llevaría a cabo, se informaba el precio a cancelar y los equipos disponibles en el espacio. 6 Luego, se realizaba la reservación de la sala colocando la actividad en un calendario físico, una vez que se recibía la confirmación por parte del solicitante, se reflejaba la reservación en el calendario de Gmail de Google de la Coordinación. La persona u organización debía asistir personalmente a la caja de la Facultad y pagar el monto indicado para luego entregar el ticket de pago en la oficina antes del día del evento como constancia de que el pago fue realizado. Luego, la Coordinación de Extensión se encargaba de informar vía correo electrónico a las personas de protocolo y a los guías técnicos de sala la información sobre el evento y sobre los materiales solicitados por la persona encargada. Este correo solo era enviado si se requería la presencia de los guías o técnicos. En el proceso de reservación participan dos entes, el usuario que realiza la solicitud y la Coordinación de Extensión. Con base a lo antes expuesto se planteó como pregunta de investigación la siguiente: ¿Qué solución tecnológica permite la centralización de las actividades y la reducción de los errores en el proceso de gestión de los espacios físicos de la Facultad de Ciencias de la UCV? 1.3. Justificación En la Coordinación de Extensión de la Facultad de Ciencias, el proceso para la reservación de un espacio es engorroso y no adaptado a los tiempos modernos. El personal administrativo debía manejar una serie de herramientas que iban desde teléfonos hasta programas de computadoras que funcionaban como agenda, es decir, asechaba el error humano está presente en todas las fases de la reservación de un espacio. 7 Es por ello que en este Trabajo Especial de Grado se propuso el desarrollo de una aplicación web llamada Agesef (Aplicación para la Gestión de Espacios Físicos). Con la cual se enfretaron las desventajas que presentaba el proceso de reservación de espacios de la institución académica. El principal aporte de la creación de esta aplicación fue la centralización de todas las actividades que eran llevadas a cabo para la reservación de un espacio. Agesef cuenta con una base de datos PostgreSQL para almacenar los datos que se requieren para apoyar a la coordinación. Este repositorio de datos fue escogido por ser de código abierto, lo que significa que no representará un gasto para la Facultad de Ciencias, y además ha sido demostrado que tiene una alta fiabilidad. Por otra parte, los métodos en el lado del servidor fueron desarrollados con el framework Flask desarrollado en el lenguaje Python, ya que la sintaxis del mismo es sencilla, con lo cual permite una codificación rápida y entendible, aumentando los grados de mantenibilidad y mejoras llevadas a cabo por parte de otros desarrollares. Se decidió desarrollar una aplicación web, porque no implica un costo adicional ya que este sistema puede estar en producción dentro de los servidores de la Universidad Central de Venezuela. Además de lo mencionado anteriormente, libera de trabajo al personal que realizaba este proceso, ya que la aplicación se encarga de realizar gran parte del proceso que normalmente era realizado por el personal, permitiendo a la instancia aumentar su productividad al dedicar ese tiempo que se invertía en atender al ente interesado, en otras actividades igualmente importantes. Por el lado del cliente, al usarse una página web para atender sus solicitudes, se le facilita la tarea ya que se trata de una herramienta tecnológica que les resulta familiar. En Agesef se implementaron estándares web que brindan un alto 8 grado de usabilidad, logrando así que no se requiera enseñar al usuario como manejar la aplicación. Por último, pero no menos importante, al usar una página web se eliminan las barreras geográficas para lograr reservar un espacio en la Facultad, ya que la única limitación que presenta Agesef es que el usuario tenga una conexión a internet. 1.4. Objetivo general Desarrollar una aplicación web para la gestión de los espacios físicos de la Facultad de Ciencias de la Universidad Central de Venezuela. 1.5. Objetivos específicos  Determinar las funcionalidades que tendrá Agesef.  Definir los requerimientos funcionales y no funcionales necesarios en el desarrollo de Agesef.  Diseñar la arquitectura de la Agesef.  Desarrollar la interfaz gráfica de la Agesef.  Definir el modelo lógico y físico de la base de datos de la aplicación.  Aplicar pruebas de aceptación, funcionalidad y usabilidad para verificar el correcto funcionamiento de la aplicación.  Implementar la aplicación en un servidor de la Facultad de Ciencias de la UCV. 1.6. Alcance Agesef se va limitar a los espacios físicos pertenecientes a la Facultad de Ciencias. Esta aplicación permitirá consultar los espacios, su costo de reservación, características y su disponibilidad, la cual puede ser visualizada al consultar el calendario correspondiente a cada espacio. Cada espacio cuenta con un conjunto de elementos y equipos que pueden ser solicitados al momento de la reservación, Agesef permite conocer cuáles son. 9 También permite que los usuarios puedan reservar espacios desde dispositivos con acceso a internet, esto con la intención de facilitar el proceso y permitir que esta opción que ofrece la Coordinación de Extensión llegue a un mayor número de personas. La aplicación puede ser visualizada en dispositivos móviles con sistema operativo Android. Agesef permite realizar la solicitud de espacios y hacer seguimiento a la misma, ya que permite consultar su estatus, eliminar y modificar las solicitudes que no han sido respondidas por la Coordinación de Extensión. Con respecto a las acciones que pueden llevar a cabo los miembros de la Coordinación de Extensión, pueden consultar la información de los usuarios registrados en el sistema, revisar las solicitudes recibidas y dar respuesta a las mismas. 1.7. Metodología de desarrollo de software Para la realización del presente TEG se empleó AgilUs como metodología de desarrollo porque según Acosta (2011) constituye una propuesta metodológica en concordancia con las exigencias en el desarrollo de software. Es útil porque reduce la cantidad de actividades y artefactos que se generan, propicia la participación de usuario y su carácter iterativo e incremental permite adaptar el desarrollo a los cambios. Incluye la usabilidad a lo largo del ciclo de vida con la intención de aplicar un enfoque de diseño centrado en el usuario y como un mecanismo para asegurar la calidad del software. Resulta beneficioso para este proyecto porque está orientado al desarrollo de sistemas con mucha interactividad con el usuario y con menos lógica de la aplicación. Según Acosta (2011), AgilUs es un método de desarrollo ágil, iterativo e incremental que pone el mayor peso del desarrollo en la consecución de la usabilidad centrándose en el usuario. Se enfoca en que la construcción y desarrollo de las interfaces de usuario no debe ser una adición estética que se da al final del desarrollo del sistema sino, muy por el contrario, el desarrollo de 10 interfaces de usuario debe guiar las decisiones en ingeniería de software. En AgilUs son los usuarios, y no el cliente ni los programadores quienes guían el desarrollo del proyecto. El Método AgilUs busca proporcionar un conjunto de actividades organizadas para construir la usabilidad en el diseño de interfaces de usuario durante el desarrollo de un producto de software. Ciclo de vida. En la figura 2 se muestra un diagrama de la interacción entre cada una de las etapas del ciclo de vida de AgilUs, con las actividades que se realizan y artefactos que se generan en cada etapa. Figura 2. Ciclo de vida de AgilUs Fuente: Acosta, Eleonora (2011) 11 A continuación se describen brevemente las etapas de este método:  Requisitos: en esta etapa se realiza el análisis general del problema a abordar y se lleva a cabo el levantamiento de requerimientos.  Análisis: una vez estipulados los requisitos que persigue la aplicación, se lleva a cabo un análisis de los mismos para su posterior desarrollo.  Prototipaje: en esta etapa se desarrolla un prototipo rápido de la interfaz de usuario a partir de los patrones de interacción, al cual se le van incorporando funcionalidades hasta llegar al producto final.  Entrega: en esta etapa se tiene el software final al que se le realizan pruebas que certifiquen que es un software usable y sin errores. Se seleccionó esta metodología porque está orientada a aplicaciones con un alto grado de interacción con usuarios. AgilUs plantea el desarrollo de un sistema, partiendo de un prototipo de interfaz de usuario y de la evaluación de usabilidad desde el inicio de la aplicación, ya que este es un aspecto importante en el éxito de un software interactivo. 1.8. Antecedentes Existen varias aplicaciones web que permiten la reservación de espacios. Un ejemplo es la de la Universidad del País Vasco Euskal Herriko Unibersitatea cuya aplicación mostrada en la figura 3 ofrece un calendario de ocupación del Auditorio de la Facultad de Ciencias Sociales y de la Comunicación. 12 Figura 3. Aplicación web de Universidad del País Vasco Euskal Herriko Unibersitatea La aplicación muestra fotos del auditorio e información importante relacionada con la capacidad, los pasos a seguir para realizar la reservación, los servicios que se ofrecen junto con el préstamo del espacio y el orden de prioridad con respecto al cual se realizarán las asignaciones de (en caso de que exista más de una solicitud para un mismo día). Esta aplicación ofrece la opción de consultar la ocupación del auditorio que permite a los visitantes revisar los horarios y días que ya se encuentra reservado el mismo. Para este auditorio se ofrecen maneras distintas para la reservación del auditorio dependiendo de la persona que desee hacer uso de este. Existe una distinción entre profesores y alumnos. Otro ejemplo de aplicación web para la reservación de espacios, es la utilizada en la Universidad Autónoma de Bucaramanga (UNAB), mostrada en la figura 4. La cual permite, que dependiendo del auditorio, puedan ser alquilados por cualquier persona como es el caso del Auditorio Mayor Carlos Gómez Albarracín. Pero existen espacios como el Auditorio Mayor – Campus El Bosque cuyo préstamo solo está dirigido para personal administrativo, docente y 13 estudiantes de la UNAB. También indica cual es el procedimiento a seguir para la reservación del auditorio. Figura 4. Aplicación web Universidad Autónoma de Bucaramanga El ejemplo mostrado en la figura 5 corresponde a la aplicación para la reservación de salas de la Fundación Parque Científico Universidad del Vallado, el cual posee salas de reuniones, sala de juntas, salones de actos, sala naranja y aula multimedia. 14 Figura 5. Aplicación web Fundación Parque Científico Universidad del Vallado. Esta aplicación ofrece videos tutoriales explicativos sobre cómo realizar el proceso de reservación de salas. Los ejemplos anteriores corresponden a aplicaciones para reservación de espacios que sirven como antecedentes a este TEG ya que tienen el mismo objetivo de permitir la utilización de espacios físicos. Estos antecedentes sirvieron como modelos a seguir para el desarrollo de Agesef, ya que permitieron conocer más funcionalidades que podrían ser agregadas, tener idea sobre la distribución ideal que debían tener los componentes de la aplicación y además reconocer la información que era importante mostrar a los usuarios. La intención de este Trabajo Especial de Grado fue el desarrollo de una aplicación web que permitiera, tanto a la Coordinación de Extensión como a las personas interesadas, realizar el proceso de reservación de espacios de una manera más sencilla, rápida y adaptadas a los tiempos modernos, evitando así el uso de múltiples herramientas que al final provocaban que el cumplimiento de las funciones de esta instancia fuese más engorroso y vulnerable a errores por factores humanos. 15 Capítulo 2: Marco teórico El siguiente capítulo tiene como finalidad presentar bases teóricas relacionadas a un ambiente de desarrollo web, que fueron las bases para el desarrollo del TEG. El mismo se divide en tres grandes tópicos, los cuales se describen a continuación: En la primera sección, se explica qué es la gestión de espacios y toda la teoría asociada con la intención de dar a entender el contexto. En la segunda sección, se hace referencia a lo que es una aplicación web, así como también su estructura y sus principales características y ventajas. Se explica la arquitectura cliente servidor y el modelo de desarrollo MVC (Modelo Vista Controlador), que se encarga de separar las funciones del cliente, el servidor web y el servidor de base de datos. En la tercera y última sección, se muestran los recursos tecnológicos necesarios para el desarrollo de la aplicación web, que a su vez constituyen la columna tecnológica de la aplicación a desarrollar. Las tecnologías del lado del servidor y las del lado del cliente, HTML, CSS y JavaScript, JQuery, entre otras. 2.1. Gestión de espacios Antes de explicar la definición, es importante conocer el significado de algunos términos relacionados. Gestión: según el diccionario virtual concepto.de, proviene del Latín gestĭo. Este término hace referencia a la administración de recursos, sea dentro de una institución estatal o privada, para alcanzar los objetivos propuestos por la misma. Para ello uno o más individuos dirigen los proyectos laborales de otras personas para poder mejorar los resultados, que de otra manera no podrían ser obtenidos. 16 Espacio: según el diccionario digital de Oxford, espacio es una superficie o un lugar con unos límites determinados y unas características o fines comunes. En función a la definición anterior podemos deducir que el significado de espacio físico y espacio deportivo es el explicado a continuación: Espacio físico: es un sitio o lugar apto para la realización de diferentes actividades. Espacio deportivo: es un espacio público o privado donde se pueden realizar actividades deportivas. Auditorio: según el diccionario digital lexicoon.org, es el espacio dentro de un teatro, cine, sala de conciertos, escuela o de cualquier otro espacio público (incluso al aire libre) al que asiste una audiencia a escuchar y/u observar un evento o presentación cultural, educativo, político o social. Cancha: según el diccionario virtual la definición proviene de kancha, traducida como “recinto”, se refiere al espacio reservado para la práctica de distintos deportes o para la organización de espectáculos. Al unificar estos conceptos y adaptarlos para definir el proceso de gestión de espacios de la Facultad de Ciencias, obtenemos que se refiere a la administración de los espacios deportivos y físicos por parte de la Coordinación de Extensión, con la intención de alcanzar el objetivo que es el uso eficiente de los espacios por la mayor cantidad de personas posibles, generar ingresos extras que ayudan al mantenimiento de los mismos y promover actividades culturales y deportivas. En la Facultad de Ciencias, los espacios están clasificados en: -Auditorios -Espacios deportivos 17 Los auditorios que son gestionados por la Coordinación de Extensión son:  Auditorio “Dr. Tobías Lasser”  Sala “Leandro Aristeguieta” (antigua sala 11)  Sala de Consejo de Facultad  Salón Alpha  Salón Beta  Sala Manuel Bemporad  Auditorio Guillermo Ruggieri  Sala Jesús Raimundo Chela  Auditorio Augusto Bonazzi  Auditorio Javier Vargas  Sala Jesús María Pacheco Y los espacios deportivos son:  Salón de los espejos  Gimnasio cubierto “Efrén Garcia” (Poliedrito)  Campo de softbol  Campo de fútbol 2.2. Aplicaciones web Según Niño (2010) las aplicaciones web son aplicaciones a las que se accede mediante un navegador y están alojadas en servidores dentro de una intranet o en internet. Las de escritorio sustituyen a los programas que se instalan en los ordenadores y que realizan tareas como organizar agendas, calendarios, leer correo electrónico, etcétera. Es una aplicación software que se codifica en un lenguaje soportado por los navegadores web en la que se confía la ejecución al navegador. Una página web puede contener elementos que permiten una comunicación activa entre el usuario y la información. Esto permite que el usuario acceda a los datos de modo interactivo, gracias a que la página responderá a cada una de sus acciones. 18 Luján (2002) indica que las aplicaciones web son un tipo especial de aplicaciones cliente/ servidor. Las aplicaciones web pueden ser desplegadas en dispositivos móviles como son teléfonos inteligentes, tabletas, etcétera, solo haciendo uso de las opciones que brindan algunas herramientas de desarrollo. La intención de que sea posible visualizar la aplicación desde un dispositivo móvil es llegar a más personas, ya que actualmente es cada vez mayor la cantidad de personas que entran a internet desde sus dispositivos móviles, disminuyendo así las que acceden desde un computador. Si una aplicación web no es responsiva, puede resultar complejo visualizarla desde un dispositivo móvil, provocando así que la persona termine por abandonarla. 2.2.1. Características de las aplicaciones web De acuerdo a Good (2015), algunas de las principales características de las Aplicaciones Web son:  Compatibilidad multiplataforma: las aplicaciones web tienen un camino mucho más sencillo para la portabilidad multiplataforma que las aplicaciones de escritorio. Varias tecnologías incluyendo Java, Flash, ASP y Ajax permiten un desarrollo efectivo de programas soportando todos los sistemas operativos principales (Windows, Linux, MacOS).  Actualización: las aplicaciones basadas en web están siempre actualizadas con la última versión sin requerir que el usuario tome acciones pro-activas, y sin necesitar llamar la atención del usuario o interferir con sus hábitos de trabajo con la esperanza de que va a iniciar nuevas descargas y procedimientos de instalación.  Acceso Inmediato: la mayoría de las aplicaciones web no necesitan ser descargadas, instaladas y configuradas. Para su acceso, simplemente se 19 requiere hacer uso de un navegador web y conexión a Internet como se hizo mención anteriormente.  Facilidad de prueba: no existen obstáculos para permitir pruebas sencillas y efectivas de herramientas y aplicaciones antes de realizar una operación que afecta la realidad como por ejemplo cargar la tarjeta de crédito, es decir poder simular este tipo de operaciones.  Menor requerimiento de memoria: las aplicaciones web tienen muchas más demandas de memoria RAM de parte del usuario final que los programas instalados localmente. Al residir y correr en los servidores del proveedor, esas aplicaciones basadas en web usan en muchos casos la memoria del servidor, dejando más espacio para correr múltiples aplicaciones al mismo tiempo sin afectar el rendimiento.  Datos online: con el desplazamiento de las aplicaciones locales a aquellas basadas en web también los datos que se crean y acceden necesitan experimentar cambios porque van a estar en constante movimiento dentro de la red al alcance de todo el mundo.  Múltiples usuarios concurrentes: las aplicaciones web pueden ser accedidas por miles de usuarios al mismo tiempo. No hay necesidad de compartir recursos cuando múltiples usuarios pueden ver e incluso editar el mismo documento de manera conjunta. En el caso de que llegase a actualizarse la aplicación, todos los usuarios estarán al tanto de esta actualización de manera inmediata.  Datos seguros: A medida que las compañías se hagan cargo del almacenamiento de los datos del usuario, el almacenamiento de datos redundantes, altamente fiables, serán la norma más que la excepción, y los usuarios van a tener mucho menos riesgo de perder sus datos debido a una falla del equipo. 20  Fácil desarrollo: Debido a que las aplicaciones han sido separadas de computadoras locales y sistemas operativos específicos, estas pueden también ser escritas en prácticamente cualquier lenguaje de programación. Es escrita en lenguajes soportados por navegadores web, pues son ellos quienes la ejecutan independientemente del sistema operativo en el que se encuentre. 2.2.2. Ventajas de las aplicaciones web Tomando en cuenta lo dicho por Luján (2002) una ventaja clave del uso de aplicaciones web es que el problema de gestionar el código en el cliente se reduce drásticamente. Los cambios que se deseen realizar a la aplicación de interfaz o de funcionalidad se realizan modificando el código en el servidor web. Una segunda ventaja, es que se evita la gestión de versiones. No es necesario realizar actualizaciones, lo cual evita el problema de inconsistencia de versiones entre clientes. Una tercera ventaja es que si la empresa ya está usando internet, no se necesita comprar ni instalar herramientas adicionales para los clientes. Otra ventaja, es que de cara al usuario, los servidores externos e internos aparecen integrados, lo que facilita el aprendizaje y uso. Una última ventaja, pero no menos importante, es la independencia de plataforma. Una aplicación web puede ser ejecutada desde cualquier plataforma sin necesidad de hacer cambios. Solo es necesario tener un navegador. 2.2.3. Desventajas de las aplicaciones web Según Luján (2002) una de las desventajas es la necesidad de una conexión a Internet permanente para acceder a una aplicación web, ya que es la base del servidor, sin Internet, no hay aplicación. También ocurre en las aplicaciones web que su seguridad depende de la seguridad con que es programada la aplicación web y de la seguridad del servidor donde será alojada la información. El tema de la seguridad es algo que preocupa a muchos, razón por la cual muchas personas evitan a acceder sus datos en internet por temor a ponerlos en peligro. 21 Otra desventajas que existen es que si muchos usuarios se conectan a la vez al mismo servidor, y usan la aplicación demasiado, el servidor puede saturarse y terminar por colapsar y no dar acceso a los usuarios, y esto implicaría darle mantenimiento al servidor y cerrar la aplicación por un determinado tiempo, a esto se le llama sobrecarga del servidor. Una desventaja más es que muchas aplicaciones tienen dependencia a los plugins, como flash, java, o algún reproductor de música o videos que contenga la aplicación, y la única forma de resolver esto es instalando dichos plugins, lo cual consume tiempo. Otra desventaja, que sin embargo, está desapareciendo rápidamente, es que la programación web no es tan versátil o potente como la tradicional. 2.3. Arquitectura de las aplicaciones web Según Zofio (2013) una aplicación web es proporcionada por un servidor web y utilizada por usuarios que se conectan desde cualquier punto vía clientes web (navegadores). La arquitectura de una aplicación web tiene tres componentes principales:  Un servidor web  Una conexión de red  Uno o más clientes El servidor web distribuye páginas de información a los clientes que las solicitan. Los requerimientos son hechos a través de una conexión de red, y para ello usa el protocolo de transferencia de hipertexto (HTTP). Una vez que se solicita esta petición mediante el protocolo HTTP y la recibe el servidor web, éste localiza la página web en su sistema de archivos y la envía de vuelta al navegador que la solicitó. 22 2.3.1. Arquitectura cliente servidor Según Campderrich (2003) es una arquitectura cuya idea básica es que un programa, el servidor, gestiona un recurso compartido concreto y hace determinadas funciones sólo cuando las pide otro, el cliente, que es quien interactúa con el usuario. Normalmente, estos dos programas, el servidor y el cliente, se encuentran en ordenadores distintos. Los requerimientos de los ordenadores clientes en lo que respecta a velocidad, memoria y capacidad de disco son muy diferentes de los servidores; unos y otros pueden ser ordenadores de modelo y marca diferentes y, además, con frecuencia utilizan un sistema operativo diferente. Según Somerville (2005) los principales componentes de esta arquitectura son: 1. Un conjunto de servidores que ofrece servicio a otros subsistemas. 2. Un conjunto de clientes que llaman a los servicios ofrecidos por los servidores. Éstos son normalmente subsistemas en sí mismos. Puede haber varias instancias de un programa cliente ejecutándose concurrentemente. 3. Una red que permite a los clientes acceder a estos servicios. Esto no es estrictamente necesario ya que los clientes y los servidores podrían ejecutarse sobre una única máquina. En la práctica, sin embargo, la mayoría de los sistemas cliente-servidor se implementan como sistemas distribuidos. Estos componentes son mostrados en la figura 6. 23 Figura 6. Componentes de la arquitectura cliente-servidor Según Kendall (2005) las ventajas de la arquitectura son que permite que la información sea procesada cerca del lugar donde se ha generado y permite el crecimiento gradual del hardware, es decir, se puede aumentar el número de clientes sin que sea necesario cambiar de servidor constantemente, se puede sustituir el servidor sin que el cliente se vea afectado y se puede aumentar la capacidad de un cliente sin tener que cambiar el servidor ni a los demás clientes. 2.4. Modelo Vista Controlador Según Lafosse (2010) MVC es un modelo de desarrollo de aplicaciones del lado del servidor que permite separar la parte lógica de la presentación en una aplicación web. Este es un punto esencial del desarrollo de proyectos ya que permite a todo el equipo trabajar por separado. El objetivo principal es el de dividir la aplicación en 3 partes distintas: el modelo, la vista y el controlador. MVC separa la lógica del negocio de la visualización. Según Jaramillo, Cardona y Villa (2008) en este modelo existen tres componentes, los cuales interactúan entre ellos como se muestra en la figura 7. Los componentes son: 24 -El módulo del modelo es el encargado de gestionar la información, y proporciona una interfaz para que los otros componentes puedan acceder a los datos que aquí se encuentran. Es la representación de los datos y reglas de negocio. -El controlador, que se encarga de ejecutar los eventos que son iniciados por el cliente, los métodos que aquí se encuentran son desarrollados por diversidad de lenguajes de programación. El cliente por medio de la interfaz, invoca éstos métodos normalmente con llamadas AJAX o peticiones Get y Post. -Por último se tiene la vista, que es todo lo referente a las interfaces que usará el usuario final para sacar provecho del sistema, desde este módulo se inician los eventos que terminan ejecutando los métodos en el módulo de controlador. Figura 7. Modelo Vista Controlador Según Bell y Parr (2003) la interacción entre componentes de este modelo de desarrollo es el siguiente: “El modelo en sí generalmente es invisible. La vista es visible en la pantalla de la computadora como una imagen gráfica, controles, gráficos, etcétera. Los controles son visibles como barras de desplazamiento, botones, campos de texto, etcétera. El controlador constituye las entradas para el modelo y la vista constituye las salidas del modelo.” 25 2.5. Tipos de aplicaciones web Se pueden identificar dos tipos de aplicaciones web: las que siempre contienen la misma información y aquellas que se van actualizando a un menor o mayor ritmo de manera constante. La diferencia de los contenidos mostrados indica el tipo de página y los recursos que se están utilizando.  Aplicación web estática: Este tipo de aplicación web muestra poca información, y no suele cambiar mucho. Por regla general suelen estar desarrolladas en HTML y CSS. Aunque también pueden mostrar en alguna parte objetos en movimiento como por ejemplo banners, GIF animados, vídeos, etc. También pueden desarrollarse aplicaciones web con jQuery y Ajax. Además, modificar los contenidos de las aplicaciones estáticas no es sencillo. Para hacerlo, habría que descargar el HTML modificarlo y volver a subirlo al servidor. Y esos cambios solo puede hacerlos el webmaster o la empresa de desarrollo que programó y diseñó la aplicación web en su momento. Algunos ejemplos de desarrollo de aplicaciones web estáticas podrían ser por ejemplo portafolios de profesionales o bien un curriculum digital. Del mismo modo una página de presentación de empresa podría tener también este tipo de aplicación web para mostrar sus datos de contacto, etc.  Aplicaciones web dinámicas: son complejas a nivel técnico. Utilizan bases de datos para cargar la información, y estos contenidos se van actualizando cada vez que el usuario accede a la aplicación web. Generalmente cuentan con un panel de administración (llamado CMS) desde dónde los administradores pueden corregir o modificar los contenidos, ya sean textos o imágenes. 26 Existen muchos lenguajes de programación para desarrollar aplicaciones web dinámicas. Los lenguajes PHP y ASP son los más comunes porque permiten una buena estructuración del contenido. El proceso de actualización es muy sencillo y ni siquiera necesita entrar en el servidor para modificarlo, además de que permite implementar muchas funcionalidades como foros o bases de datos. El diseño, y no solo el contenido puede modificarse al gusto del administrador.  Portal web: Portal es un tipo de aplicación en el que la página principal permite el acceso a diversos apartados, categorías o secciones. Puede haber de todo: foros, chats, correo electrónico, un buscador, zona de acceso con registro, contenido más reciente, etc. 2.5.1. Ejemplos de aplicaciones web Pixlr Es una aplicación web que permite hacer edición gráfica de manera fácil y sencilla, creada por Autodesk. En la figura 8 se puede observar la interfaz de usuario de Pixlr, es una interfaz simple. Figura 8. Aplicación web Pixlr Evernote Es un editor de texto que también permite almacenar imágenes, notas de voz, checklists, scans de documentos que son editables, enlaces, páginas web 27 completas, y hasta presentaciones. Evernote permite organizar todo en libretas o marcando las notas con etiquetas. Permite colaborar con otras personas en un mismo proyecto, y tiene su propio sistema de mensajería instantánea. Lo mejor de todo es que puede ser usado desde la web sin la necesidad de instalar nada. En la figura 9 se puede observar el logo de Evernote. Figura 9. Aplicación web Evernote Spotify. Es una aplicación web que posee un catálogo de música enorme, que permite escucharla sin necesidad de descargas ni instalaciones. En la figura 10 se puede apreciar la aplicación desplegada en distintos tipos de dispositivos. Figura 10. Aplicación web Spotify Netflix. Es una aplicación web, solo se necesita abrir un navegador para disfrutar de miles de películas y programas de televisión en streaming desde cualquier lugar 28 que esté conectado la PC. En la figura 11 se puede observar la interfaz de usuario de Netflix. Figura 11. Aplicación web Netflix En los ejemplos anteriores se puede apreciar que las aplicaciones web se caracterizan principalmente por ser sencillas de usar, y tienen entre sus beneficios que no requieren la descarga de ninguna herramienta extra para su uso. Algunas aplicaciones web como Spotify por ejemplo, permiten ser visualizadas en cualquier dispositivo, lo cual facilita su uso. Para el desarrollo de este TEG fue importante contar con estas características, porque son algunas de las razones principales que hacen que las personas prefieran las aplicaciones web sobre otro tipo de aplicaciones. 2.6. Herramientas para el desarrollo de aplicaciones web Para desarrollar Agesef se utilizaron en sus interfaces HTML5, que es un lenguaje de marcado de hipertexto para estructurar la información que en ellas se expondrá y con CSS se les dará el estilo, así mismo se usó javascript con el objetivo de darle dinamismo a la página y brindar la sensación al usuario de estar manipulando una aplicación local mediante el uso de llamadas asíncronas AJAX. Luego por parte del servidor, se utilizó el microframework Flask desarrollado en el lenguaje Python, el cual permite un desarrollo rápido gracias a la sencillez de su sintaxis. 29 2.6.1. Lenguaje de marcado de hipertexto Según las publicaciones del equipo vértice, HyperText Markup Language es un lenguaje artificial que los ordenadores son capaces de interpretar y diseñado para que los programadores redacten instrucciones que los navegadores ejecutan para originar la página web. Define la estructura básica y el código para la definición de contenido de una página web, como texto, imágenes, entre otros. Es un estándar a cargo de la World Wide Web Consortium, organización dedicada a la estandarización de casi todas las tecnologías ligadas a la web, sobre todo en lo referente a su escritura e interpretación. Las siglas de HTML significan HyperText Markup Language, en español, lenguaje de marcado de hipertexto. En esencia, HTML sirve para estructurar documentos, pero no describe la apariencia o el diseño de un documento sino que ofrece las herramientas necesarias para dar formato, según la capacidad del servidor web en el que se almacenan las páginas web y la capacidad del navegador. HTML5 es la última actualización del estándar HTML y según el W3C (2012) se define como “una tecnología creada para modernizar la web y el desarrollo de aplicaciones web online y offline, que nació para dar cabida a elementos como video, audio, geolocalización y nuevas etiquetas para constituir la base del gran cambio de internet actualmente”. HTML en su más reciente versión añadió las siguientes características: -Un nuevo doctype simplificado y unificado. -Supresión de etiquetas y atributos de presentación. -Nuevas etiquetas semánticas o de organización. -Nuevas etiquetas de audio y de video. Esto evita tener que hacer uso de plugins dedicados. HTML5 fue el lenguaje seleccionado para el desarrollo de esta aplicación web por ser el estándar más nuevo de HTML, esta versión ofrece más facilidades que 30 las anteriores, lo cual hace que el desarrollo sea más sencillo, y mejora la experiencia del usuario. El uso de HTML5 permite que la aplicación cargue más rápido y además pueda ser visualizada en todos los navegadores compatibles. 2.6.2. Hoja de estilo en cascada Es la abreviatura de Cascading Style Sheet. Según García (2003) la finalidad del CSS es definir cómo se han de mostrar los elementos de HTML y con qué estilo se han de presentar. Los estilos son normalmente almacenados en hojas de estilo y fueron añadidos en la codificación HTML para solucionar algunos problemas. Se pueden definir múltiples hojas de estilo para una misma página web. En resumen, una hoja de estilo es una serie de reglas que definen el estilo de un sitio web completo. Con una hoja de estilo se puede alterar la apariencia de una página web cambiando algunas características como fuente, tamaño de fuente, márgenes y cualquier elemento visual como colores y bordes. El W3C es el encargado de formular la especificación de las hojas de estilo que servirán de estándar para los navegadores. La idea que se encuentra detrás del desarrollo de CSS es separar la estructura de un documento de su presentación. La información de estilo puede ser definida en un documento separado o en el mismo documento HTML. Navajas (2012) indica que actualmente, pese a que la especificación 2.1 se aprobó recientemente, Cascading Style Sheet versión 3 ha venido desarrollándose desde 1999. Esta nueva especificación posee interesantes novedades que permiten hacer webs más elaboradas y dinámicas, con mayor separación entre estilos y contenidos. Da soporte a muchas necesidades de las webs actuales, sin tener que recurrir a trucos de diseñadores o lenguajes de programación. 31 El Responsive Web Design se hace posible gracias a la introducción de las media queries en las propiedades de los estilos CSS en su versión número 3. Las media queries son una serie de órdenes que se incluyen en la hoja de estilos que indica al documento HTML cómo debe comportarse en diferentes resoluciones de pantalla. CSS también permite la creación de diseños flexibles y multimedia adaptable. Los diseños flexibles son creados haciendo usos de targets y de las opciones de la reproducción de pantalla, en lugar de hacerlo basado en pixeles, esto permite que la aplicación web se adapte al dispositivo empleado. Para adaptar imágenes y multimedia, existen muchas técnicas, y CSS es la más común. Para la realización de este TEG se utilizó CSS3 porque es la herramienta que le da los estilos a la aplicación, es la que permite que luzca bien estéticamente, y además aporta muchas funciones útiles. Todos estos estilos son cargados en un texto plano, por lo cual la carga de la página es más rápido, y permite que la aplicación pueda ser visualizada en cualquier navegador moderno compatible con CSS3. Además el uso de CSS no requiere la instalación de plugins que casi siempre son complicados de usar y modificar, y además causan rechazo por parte del usuario. 2.6.3. JavaScript Según Flanagan (2011) es el lenguaje de programación de la web. La mayoría de los sitios web modernos utilizan JavaScript y todos los buscadores web incluyen intérpretes de JavaScript. Es utilizado para especificar el comportamiento de las páginas web. Es un lenguaje de programación de alto nivel y dinámico que está bien adecuado a la orientación de objetos y a los estilos de la programación funcional. Hereda características de Java, Scheme y Self. 32 2.6.3.1. JQuery JQuery según Hernández (2014) es una librería de JavaScript especializada en cambiar las páginas web en ejecución. Permite simplificar la manera de interactuar con los documentos HTML, manipular el árbol DOM, manejar eventos, desarrollar animaciones y agregar interacción con la técnica AJAX a páginas web. Dicho de otra manera, “JQuery hace que JavaScript sea más accesible para los desarrolladores.” (Franklin, 2013). Esto permite que el desarrollador no tenga que enfocarse tanto en aprender funciones complejas y pueda invertir más tiempo en el desarrollo. JavaScript también ofrece el framework JQuery Mobile para el desarrollo rápido y fácil de sitios webs optimizados para teléfonos móviles. Con este framework, se acelera la velocidad de desarrollo de aplicaciones, encapsulando muchas tareas comunes que se realizan cuando se utiliza el lenguaje JavaScript. Agrega una capa más a JQuery e intenta suplir algunas necesidades que los programadores de dispositivos móviles padecen. El uso de Jquery para la realización de este TEG permitió el desarrollo de la aplicación sin la preocupación de cual navegador utiliza el usuario, porque la librería se encarga de esto. 2.6.4. AJAX El término AJAX se presentó por primera vez por Jesse James Garrett el 18 de Febrero de 2005. Hasta ese momento, no existía un término normalizado que hiciera referencia al nuevo tipo de aplicación web que estaba apareciendo. AJAX es un acrónimo de Asynchronous JavaScript + XML, que se puede traducir como "JavaScript asíncrono + XML". James (2005) define AJAX de la siguiente manera: “Ajax no es una tecnología en sí mismo. En realidad, se trata de varias tecnologías independientes que se unen de formas nuevas y sorprendentes.” 33 Las tecnologías que forman AJAX son: -XHTML y CSS, para crear una presentación basada en estándares. -DOM, para la interacción y manipulación dinámica de la presentación. -XML, XSLT y JSON, para el intercambio y la manipulación de información. -XMLHttpRequest, para el intercambio asíncrono de información. -JavaScript, para unir todas las demás tecnologías. Es una técnica de desarrollo web para crear aplicaciones que se ejecutan en el cliente, es decir, en el navegador de los usuarios mientras se mantiene la comunicación asíncrona con el servidor en segundo plano. De esta forma es posible realizar cambios sobre las páginas sin necesidad de recargarlas, mejorando la interactividad, velocidad y usabilidad en las aplicaciones. AJAX es una tecnología asíncrona, en el sentido de que los datos adicionales se solicitan al servidor y se cargan en segundo plano sin interferir con la visualización ni el comportamiento de la página. Para la realización de este TEG se utilizó AJAX porque permite que la aplicación web funcione mejor para el usuario. En la aplicación se realizan múltiples solicitudes a la base de datos, y gracias a AJAX no es necesario que la página sea recargada, lo cual acelera los tiempos de respuesta. 2.6.5. Responsive Design Es el enfoque que sugiere que el diseño y el desarrollo deben responder al comportamiento del usuario y el ambiente basado en el tamaño de la pantalla, plataforma y orientación. El término responsive web design fue acuñado por Marcotte (2011) en un artículo en List Apart. El consolidó 3 técnicas existentes (diseño de cuadrículas flexibles, imágenes flexibles y media queries) en este único enfoque. Marcotte 34 indica que una metodología realmente responsiva es más que solo adaptar la disposición de un sitio web adaptado a las capacidades de un dispositivo. Frain (2012) indica que para diseñar un sitio web que pueda ser adaptado a cualquier dispositivo se debe comenzar diseñando para el dispositivo más pequeño y luego progresivamente adaptar el diseño y el contenido a dispositivos más grandes. Además de las herramientas anteriormente nombradas que permiten hacer a una aplicación web responsiva, también existen plugins, los cuales permiten añadir funcionalidades adicionales o nuevas características al software. Hay plugins que permiten hacer que elementos de la aplicación web sean responsivos, por ejemplo, el plugin Sidr de JQuery que crea menús verticales deslizables que suelen aparecer en sitios web responsivos. El enfoque responsive fue aplicado en este TEG porque uno de los requerimientos iniciales fue que fuese posible desplegar la aplicación en los dispositivos móviles con sistema operativo Android para que el usuario pueda acceder a la aplicación en cualquier momento, desde cualquier lugar. 2.6.6. Framework Python Flask El portal oficial de Flask http://flask.pocoo.org/ lo define como un microframework escrito en Python y basado en la especificación WSGI y el motor de plantillas Jinja2. Está principalmente dirigido para pequeñas aplicaciones con requerimientos sencillos. Flask no incluye ORM, sino que deja que el usuario decida cómo desea almacenar sus datos. Flask no incluye Bootstrap ni nada similar, porque se supone que las personas que hacen uso de este microframework, no buscan crear grandes aplicaciones MVC. Se caracteriza por ser muy sencillo de usar. La razón por la que no posee herramientas para hacer bootstrap es porque no se requiere. Hace uso por 35 defecto de Jinja2, plantilla inspirada en Django, pero puede ser configurado para usar cualquier otro lenguaje. 2.7. Licencia pública general de GNU Según la Free Software Foundation (FSF), esta es la licencia más ampliamente usada en el mundo del software y garantiza a los usuarios finales (personas, organizaciones, compañías) la libertad de usar, estudiar, compartir (copiar) y modificar el software. Su propósito es declarar que el software cubierto por esta licencia es software libre y protegerlo de intentos de apropiación que restrinjan esas libertades a los usuarios. Esta licencia fue creada originalmente por Richard Stallman fundador de la FSF para el proyecto GNU. La GPL puede ser usada por cualquiera, ya que su finalidad es proteger los derechos de los usuarios finales (usar, compartir, estudiar y modificar), y otorgar a los beneficiarios de un programa de ordenador de los derechos de la definición de software libre. Bajo esta filosofía, la GPL garantiza a los destinatarios de un programa de computador los derechos y libertades reunidos en definición de software libre y usa copyleft para asegurar que el software está protegido cada vez que el trabajo es distribuido, modificado o ampliado. En la forma de distribución (sólo pueden ser distribuidos bajo los términos de la misma licencia) se diferencian las licencias GPL de las licencias de software libre permisivas, de las cuales los ejemplos más conocidos son las licencias BSD y la MIT. David A. Wheeler sostiene que el copyleft proporcionado por la GPL fue crucial para el éxito de sistemas basados en Linux, dando a los programadores que han contribuido al kernel la seguridad de que de su trabajo se beneficiaría todo el mundo y seguirá siendo libre, en lugar de ser explotado por compañías de software que no tendrían que dar nada de nuevo a la comunidad. 36 Los usuarios o compañías que distribuyen sus trabajos bajo las GPL, pueden cobrar o distribuirlas gratuitamente. Esto distingue las GPL de las licencias de software que prohíben su distribución comercial. La FSF argumenta que no se debe restringir la distribución comercial del software (incluyendo la redistribución), ya que la GPL establece explícitamente que las obras cubiertas por esta licencia se pueden vender a cualquier precio. Para la realización de este TEG, se seleccionó la arquitectura y los recursos tecnológicos más modernos y que además permitieran realizar las funciones que se habían establecido que tendría la aplicación. Una vez definidos estos conceptos, se llega al consenso de que son vitales para la elaboración de una aplicación web que siga una arquitectura Cliente- Servidor. Donde por el lado del cliente se tiene el HTML, que define la estructura de la página, la cual luego es personalizada usando CSS. Luego se tiene JavaScript o su versión simplificada, JQuery que permite brindarle a la página funcionalidad, al lograr obtener los datos introducidos por el usuario o invocar los métodos del lado del servidor desarrollados en Flask en este caso, los cuales retornan datos, re-direccionan a otras páginas de la aplicación o insertan datos al modelo. 37 Capítulo 3: Marco Aplicativo En este capítulo se presenta la aplicación en Agesef de AgilUs, metodología ágil en donde la usabilidad, usuarios e interacciones se encuentran en el mismo nivel de importancia que los procesos y herramientas, y que el funcionamiento del software tiene mayor relevancia que una documentación exhaustiva. En este sentido se describe el contexto de desarrollo, y cada una de las fases de la metodología para la gestión de los procesos relacionados con la reservación de espacios de la Facultad de Ciencias de la UCV. 3.1. Fase I: Requisitos Es la primera etapa, en la cual se establecieron los requisitos con base a las necesidades y solicitudes realizadas por el usuario. En esta etapa se aplicaron diversas técnicas de indagación para obtener la información necesaria para el posterior análisis de los requerimientos planteados por los miembros de la Coordinación de Extensión para el desarrollo de la aplicación. Las técnicas usadas fueron: tormenta de ideas, perfil de usuario y listado de requerimientos funcionales y no funcionales. 3.1.1. Tormenta de ideas Esta actividad se llevó a cabo en reuniones con el equipo de la Coordinación de Extensión, entre ellos el coordinador y el asistente, donde se recolectó información acerca de la problemática existente con el proceso actual para la reservación de los espacios de la Facultad de Ciencias. En la figura 12 se pueden observar las ideas más importantes que salieron a relucir durante las reuniones. 38 Figura 12. Tormenta de ideas. Entre las ideas que surgieron en estos encuentros se destacan las siguientes:  Permitir que el usuario pueda solicitar la reservación de un espacio y verificar el estado de su solicitud vía internet.  Se desea que la aplicación cuente con un calendario en el cualquier usuario pueda ingresar y revisar cuales serán los próximos eventos a llevarse a cabo y en el cual se pueda consultar los horarios disponibles de cada espacio.  Incorporar funcionalidad que permita a los encargados de la Coordinación de Extensión consultar las solicitudes de espacios existentes y también dar respuesta a estas solicitudes.  Informar a los usuarios vía correo electrónico la respuesta a su solicitud. 3.1.2. Perfiles de usuario Según Acosta (2011) los perfiles de usuarios son fundamentales en cualquier proyecto centrado en el usuario, ya que describen a los usuarios previstos de la aplicación y detallan las características relevantes de los mismos. Existen diversos tipos de usuarios, los cuales asumen un rol dependiendo de las responsabilidades que desempeñan. Los involucrados en el proceso de reservación de espacios son los miembros de la Coordinación de Extensión y los usuarios. 39 La aplicación web cuenta con cinco (5) tipos de usuarios: estudiante, profesor, autoridad, dependencias y otros. Aunque estos tipos de usuarios realizan las mismas actividades dentro del proceso, su tipo será relevante en el momento en el cual la Coordinación de Extensión determine si la solicitud es aprobada o no, y el monto a pagar por el uso del espacio. A continuación se describen cada uno de los roles.  Coordinación de extensión: a este perfil pertenecen el coordinador y el asistente de la Coordinación de Extensión. Este usuario debe poseer destrezas en el uso del computador, con un nivel intermedio en el uso de la aplicación web. Es el encargado de gestionar la reservación de los espacios. Da respuesta a las solicitudes de espacio realizadas por los usuarios registrados, en el caso de las solicitudes aprobadas también debe definir costo de reservación y fecha tope de pago. Reserva espacios para eventos concernientes a la Facultad de Ciencias. Elimina los eventos cancelados, ya sea por el usuario o por la coordinación. También puede agregar o eliminar información de la lista de protocolo, y consultar la información de cada uno de los usuarios registrados en Agesef.  Usuarios registrados del sistema: en este perfil se encuentran la mayoría de los usuarios de la aplicación Agesef, los cuales son todos las personas con derecho a reservar espacios. Este tipo de usuario solo necesita tener conocimientos básicos acerca de navegación web para acceder a la aplicación. Los que están registrados en el sistema pueden solicitar espacios, consultar la disponibilidad de los espacios en el calendario correspondiente y consultar el status de las solicitudes realizadas.  Usuarios no registrados del sistema: en este perfil se encuentran todos los individuos que ingresan a la aplicación Agesef y que no están registrados en el sistema. Este usuario solo necesita tener conocimientos básicos acerca de navegación web para acceder a la aplicación, así mismo, las actividades que puede realizar este usuario son limitadas. Puede consultar los espacios 40 disponibles y sus características, ver el calendario de eventos de cada espacio y registrarse en la aplicación. 3.1.3. Requerimientos funcionales y no funcionales En base a las reuniones con el personal de la Coordinación de Extensión, se recopilaron diversos requisitos considerados al momento del desarrollo de las funcionalidades de la aplicación web. A continuación se detallan cada uno de estos requisitos.  Requerimientos funcionales: -Manejo de operaciones de creación, consulta, actualización y eliminación sobre todos los recursos del sistema: se debe proveer una interfaz de usuario que permite hacer uso de las operaciones CRUD (Create, Read, Update, Delete, por sus siglas en inglés). Algunos recursos del sistema como los espacios y las reservaciones pueden resultar limitado dependiendo de las permisologías otorgadas a los diferentes roles de usuario. -Edición y creación de solicitudes: se requiere una funcionalidad que permita la creación y edición de solicitudes de espacio. A través de esta funcionalidad, los usuarios pueden indicar el espacio y fecha que desean reservar, y esta podrá ser modificada posteriormente, solo en el caso de que no se le haya dado respuesta a dicha solicitud. -Consultar y dar respuesta a las solicitudes: esta funcionalidad es esencial ya que es la manera en que las solicitudes de los usuarios pueden ser respondidas. Esta funcionalidad permite a los encargados de la Coordinación de Extensión y a los directores de las escuelas, revisar las solicitudes y en función a estas darles una respuesta. -Editar información de perfil: esta funcionalidad permite a los usuarios que puedan modificar los datos ingresados al momento del registro en el sistema en 41 caso de haber cometido un error o en caso de que alguno de los datos haya cambiado.  Requerimientos no funcionales: A continuación se expone cada uno de dichos requerimientos. -Usabilidad y navegabilidad: el sistema debe ser de fácil uso para cualquier usuario, ofreciendo funcionalidades que requieran un bajo conocimiento cognitivo. La solución propuesta debe tener interfaces gráficas de administración y de operación en idioma español y en ambiente web, para permitir su utilización a través de cualquiera de los exploradores o navegadores de internet. -Portabilidad: el desarrollo bajo un enfoque web garantiza que las funcionalidades puedas ser accedidas desde diferentes plataformas, ya que solo se requiere de la disposición de un navegador web o browser independientemente del sistema operativo. -Disponibilidad: al tratarse de una aplicación web, la disponibilidad se encuentra implícita; las funcionalidades deben estar disponibles y ser accesibles desde cualquier ubicación geográfica con conexión a internet sin restricciones de horarios. -Escalabilidad: las funcionalidades son implementadas previendo futuras mejoras sobre las mismas, de manera tal que pueden ser integradas con un nuevo código sin complicaciones. 3.2. Fase II: Análisis Constituye la segunda etapa del modelo empleado. En esta etapa se definieron los casos de uso, el modelo de objetos del dominio, prototipos y guías de estilo. 42 3.2.1. Prototipo de interfaz Un prototipo permite tener una idea de la aplicación que se desea obtener. Para la realización de este prototipo, se empleó una aplicación web llamada Balsamiq que permite crear los prototipos digitalmente, generando así un resultado más similar al producto final. En la figura 13 se puede observar el prototipo de la página de inicio del sistema. Está compuesto por el encabezado de la Coordinación de Extensión, una descripción de la intención de esta página, una caja con los auditorios y otra con los espacios deportivos de la Facultad. En la parte inferior hay una breve información sobre la Coordinación de Extensión. Figura 13. Prototipo página de inicio 43 En la figura 14 se puede visualizar la página para la reservación de los auditorios, en esta se muestra cada uno de los auditorios y se indica si pertenece a la Facultad o a alguna de las escuelas. Figura 14. Prototipo página de auditorios En la figura 15 se puede observar el detalle de un espacio, en este caso, es el auditorio Tobías Lasser. En la parte superior se encuentran una serie de 44 imágenes del auditorio, bajo de estas una descripción sobre el auditorio y luego, información detallada del mismo. Figura 15. Prototipo de página del auditorio Tobías Lasser En la figura 16 se puede visualizar el calendario perteneciente al auditorio Tobías Lasser y un evento reflejado en el mismo. 45 Figura 16. Prototipo calendario del auditorio Tobías Lasser Por último, en la figura 17 se puede visualizar la página para inicio de sesión y de registro para los usuarios del sistema. 46 Figura 17. Prototipo página de registro e inicio de sesión 3.2.2. Guía de estilos Como una actividad contemplada en Agilus se propone la guía de estilos, que es un documento en el cual se toman las características relacionadas con el aspecto de la interfaz de usuario. El aspecto de una aplicación viene dado por los colores utilizados, la disposición de los elementos en la interfaz, los píxeles utilizados, entre otros, con la finalidad de generar un documento que pueda dar una idea de la apariencia de la aplicación. A continuación se muestra la utilizada en la aplicación web (ver tabla 1). 47 Tabla 1. Guía de estilo de Agesef Logo Colores principales RGB (255,255,255) RGB (95,158,160) RGB(220, 220, 220) RGB (154,205,50) #FFFFFF #5F9EA0 #DCDCDC #9ACD32 Tipografía Fantasy 12 px Vista de la página principal 3.2.3. Modelos de casos de uso A través de los diagramas de casos de uso se presentan los requerimientos funcionales de la aplicación. A continuación se muestra por cada proceso, una breve explicación de los diagramas de casos de uso. 48 En la figura 18, se pueden observar los casos de uso para los usuarios registrados en la aplicación. Entre las actividades que estos usuarios están autorizados para realizar tenemos: en cuanto a gestión de sesión, pueden iniciar y cerrar sesión. Con respecto a la gestión de los espacios, pueden consultar la información de cada uno de ellos, ver los respectivos calendarios y realizar solicitudes para su uso. Los usuarios registrados también pueden gestionar las solicitudes que realicen, pueden revisarlas, modificarlas, eliminarlas y consultar su status, es decir, conocer si fue aprobada o rechazada. Por último, también son capaces de consultar la información de su perfil y modificarla en caso de que lo desee. 49 Figura 18. Casos de uso para usuario registrado En la figura 19, se puede observar los casos de uso para los miembros de la Coordinación de Extensión. La Coordinación de Extensión, en cuanto a gestión de sesión, al igual que los usuarios registrados, puede iniciar y cerrar sesión. Con respecto a las solicitudes de reservación, pueden ser aprobadas, rechazadas o eliminadas, según corresponda. También tienen la posibilidad de consultar su perfil y modificar la información si así lo desea. Los miembros de la 50 Coordinación de Extensión pueden consultar los espacios existentes, sus calendarios y realizar reservación de los mismos. Es importante destacar que los miembros de la Coordinación de Extensión reservan espacios, no los solicitan. Por último, también son capaces de ver la información de cada uno de los usuarios registrados en el sistema. Figura 19.Casos de uso para miembros de Coordinación de Extensión En la figura 20, se puede observar los casos de uso para los usuarios no registrados. Las actividades que estos usuarios son capaces de realizar son muy limitadas. Con respecto a los espacios, solo pueden consultarlos y ver sus 51 calendarios. Para poder incrementar las actividades que son capaces de hacer tienen la opción de registrarse en la aplicación. Figura 20.Casos de uso para usuario no registrado Tabla 2. Especificación del caso de uso: gestionar sesión Caso de uso: CU.1.1 gestionar sesión. Actor: todos los actores. Precondición: el usuario debe estar en el sitio web de la aplicación. Acción: funcionalidad que permite al usuario registrarse y acceder a la aplicación, mediante un usuario y una contraseña. Condición de Éxito: el usuario podrá ingresar satisfactoriamente a la aplicación cuando lo desee. Tabla 3. Especificación del caso de uso: consultar espacio Caso de uso: CU.1.2 consultar espacio. Actor: todos los actores. Precondición: el usuario debe estar en el sitio web de la aplicación. Acción: funcionalidad que permite al usuario conocer a toda la información necesaria de los espacios. Condición de Éxito: el usuario será capaz de conocer el detalle de los espacios disponibles. Tabla 4. Especificación del caso de uso: gestionar solicitud 52 Caso de uso: CU.1.3 gestionar solicitud. Actor: todos los actores. Precondición: el usuario debe haber iniciado sesión en la aplicación. Acción: funcionalidad que permite al usuario realizar solicitudes de espacios y posteriormente consultar su estado y modificarlo. Condición de Éxito: la solicitud se registrará en la BD de la aplicación. Tabla 5. Especificación del caso de uso: gestionar perfil Caso de uso: CU.1.4 gestionar perfil. Actor: todos los actores. Precondición: el usuario debe haber iniciado sesión en la aplicación. Acción: funcionalidad que permite al usuario consultar su perfil y modificarlo cuando desee. Condición de Éxito: la información reflejada en el perfil es satisfactoria para el usuario. Tabla 6. Especificación del caso de uso: gestionar listado Caso de uso: CU.1.5 gestionar listado. Actor: miembros Coordinación de Extensión. Precondición: el usuario debe haber iniciado sesión en la aplicación. Acción: funcionalidad que permite consultar la información de los usuarios del sistema, los miembros de protocolo y los espacios existentes. Puede agregar y eliminar a estas dos últimas listas. Condición de Éxito: se desplagará la información de los usuarios, miembros de protocolo y espacios. 3.2.4. Modelo de objetos del dominio A través de este modelo se puede definir el dominio que compone la aplicación, a partir de los objetos que lo conforman y sus relaciones. Los objetos presentes en el modelo de objetos de dominio son los siguientes: 53  Usuario: representa a los usuarios del sistema, puede estar registrado o no.  Coordinación de Extensión: representa a la Coordinación de Extensión de la Facultad de Ciencias, y está conformado por los encargados de la misma.  Espacios: representa los espacios que pueden ser reservados; los mismos pueden ser espacios deportivos o auditorios.  Solicitud: representa la solicitud enviada por el usuario para solicitar algún espacio y contiene los detalles del evento que se desea realizar.  Eventos: representa la actividad que será llevada a cabo en los espacios disponibles.  Calendario: representa el calendario que contiene cada espacio con la información sobre cada uno de los eventos que serán llevados a cabo. Entre estos objetos se establecen diversas relaciones: Los usuarios, registrados y no registrados, y los miembros de la Coordinación de Extensión pueden acceder a los calendarios los cuales contienen los eventos que se realizan en los espacios. Los usuarios registrados también pueden realizar solicitudes de espacios; puede ser auditorios o espacios deportivos. Las solicitudes son respondidas por los miembros de las Coordinación de Extensión, cuando la solicitud es aprobada genera un evento que se reflejará en el calendario del espacio correspondiente. Las solicitudes pueden ser consultadas por el usuario que la realizó y por los miembros de la Coordinación de Extensión. Los miembros de la Coordinación de Extensión, pueden reservar espacios sin necesidad de realizar la solicitud previa del mismo. En la figura 21 se muestra el modelo de objeto del dominio, con los objetos y las relaciones entre ellos. 54 Figura 21. Modelo de objetos del dominio 3.2.5. Diseño lógico y físico de la base de datos La figura 22 muestra el esquema que describe el modelo lógico y físico de la base de datos de la aplicación web Agesef. Para el desarrollo del sistema fue necesario crear un conjunto de tablas que conforman la base de datos, la cual hace posible el funcionamiento y la persistencia de la información en la aplicación, las mismas fueron diseñadas para soportar todos los objetivos planteados en el presente trabajo. 55 Figura 22. Modelo lógico y físico de la base de datos La base de datos está conformada por 5 tablas, las cuales son explicadas a continuación:  Persona: es donde se almacena la información de los usuarios registrados (naturales y jurídicos) quienes tienen la posibilidad de realizar reservaciones de los espacios en el sistema.  Espacio: es donde están registrados los datos de todos los espacios presentes en el sistema junto con sus características.  Encargado: contiene los datos de los encargados del sistema, es decir, de los miembros de la Coordinación de Extensión quienes son los que administran los espacios de la Facultad. 56  Protocolo: esta tabla alberga los datos de los guías de protocolo y los técnicos de las salas.  Solicitud: almacena los datos ingresados por el usuario relacionados al evento que necesita realizar y al espacio que desea utilizar. 3.3. Fase III: Prototipaje Según Acosta (2011) en esta etapa se desarrolla un prototipo rápido de la interfaz de usuario, al cual se le van incorporando funcionalidades hasta llegar al producto final. 3.3.1. Desarrollo Para el desarrollo de la aplicación Agesef se utilizó Python como lenguaje de procesamiento del lado del servidor. Las razones de esta elección son que es capaz de soportar conexión con la base de datos Postgres (BD usada para este trabajo especial de grado) a través de un driver que contiene todos los métodos necesarios para realizar operaciones CRUD. Se utilizó el microframework Flask que posee lo mínimo necesario para desarrollar de forma completa el lado del servidor de una aplicación, además de todas las ventajas que trae consigo trabajar con Python, entre ellas su sintaxis sencilla y su portabilidad. Los usuarios de la aplicación se crean de forma manual, hay dos (2) funciones para la creación de usuarios, una para los miembros de la Coordinación de Extensión y otra para los individuos ajenos a esta. En la figura 23 se puede apreciar el código que se encarga de crear los usuarios naturales y en la figura 24, el código para la creación de usuarios jurídicos. 57 Figura 23. Código para la creación de usuarios naturales. Figura 24. Código para la creación de usuarios jurídicos. En la figura 25 se puede apreciar el código que se encarga de crear los miembros de la Coordinación de Extensión. Figura 25. Código para la creación de usuarios administradores. 58 Una vez creado el usuario se hizo el script encargado de iniciar la sesión del usuario en la aplicación y redirigirlo al home correspondiente dependiendo del tipo de usuario que sea. En la figura 26 se muestran el código para el inicio de sesión de usuarios naturales y jurídicos, y en la figura 27 el correspondiente al inicio de sesión de los administradores. Figura 26. Código para el inicio de sesión de usuarios. 59 Figura 27. Código para el inicio de sesión de administradores. Una vez culminada la fase de desarrollo, se procede a realizar las distintas pruebas a la aplicación desarrollada, las cuales se realizan con la finalidad de comprobar que los sistemas desarrollados cumplen con los requerimientos para los cuales han sido creados. Estas pruebas son basadas en el análisis de datos de entrada/salida, y usabilidad de la aplicación. En este caso, se diseñaron un conjunto de pruebas para cada una de las funcionalidades implementadas para la aplicación. 3.3.2. Lista de comprobación Se aplicó esta técnica a diez (10) posibles usuarios del sistema, así como también a dos (2) personas que conforman el personal administrativo de la Coordinación de Extensión involucrados en el proceso de reservación de espacios. Esto permitió identificar fallas y minimizar la carga de la memoria del usuario. A las personas a las que se les aplicó esta técnica, se les facilitó la interfaz de usuario de la aplicación para la realización de distintas actividades relacionadas con la automatización del proceso. Fue utilizada la siguiente lista de comprobación: 60 Tabla 7. Lista de comprobación para la aplicación. Lista de Comprobación Se cumple No se cumple Reconocer en lugar de recordar.  Usar indicadores visuales.  Flexibilidad en la interfaz de usuario.  Proveer Feedback a las acciones del usuario.  Consistencia en apariencia y uso.  Evitar palabras coloquiales y abreviaturas.  Mostrarle al usuario lo que necesita cuando lo necesite.  Permitir al usuario recuperarse de los errores  Mantener la interfaz simple, sencilla y organizada.  Hacer sentir al usuario que puede tomar.  Las funciones del sistema están claramente visibles e identificables.  Permitir al usuario personalizar la IU.  61 3.4. Fase IV: Entrega 3.4.1. Pruebas de usabilidad Durante esta prueba, se evaluó la usabilidad de la aplicación web Agesef, considerando los criterios creados por expertos en IHC, que se describen a continuación.  Accesibilidad: El sitio es visible en cualquier configuración que tenga el cliente.  Navegabilidad: La información debe ser fácil de encontrar, debe haber consistencia en los elementos de navegación.  Lenguaje manejado: Debe ser fácil de entender, de acuerdo al tipo de usuario al que este dirigido la aplicación.  Conceptos utilizados: Deben ser adecuados al usuario al que está dirigida la aplicación.  Consistencia: En los títulos, cabeceras y etiquetas de links. La familiaridad y el reconocimiento deben permitir a los usuarios asociar ciertos elementos con ciertas funcionalidades. Con la finalidad de poder evaluar los criterios anteriormente detallados, se empleó una encuesta a un grupo de usuarios potenciales de la aplicación, los cuales dieron una puntuación comprendida entre 1 y 5, a cada uno de los criterios de usabilidad. A continuación se muestra la leyenda de la escala de Likert utilizada para medir la actitud de las personas con respecto a Agesef: 1. Totalmente de acuerdo 2. De acuerdo 3. Ni de acuerdo ni en desacuerdo 4. En desacuerdo 5. Totalmente en desacuerdo 62 Las pruebas de usabilidad se realizaron a 6 usuarios potenciales de la aplicación. Las pruebas consistieron en observar si a los usuarios se les hizo fácil e intuitivo usar el sistema en el rol que debe cumplir. Seguidamente, los resultados fueron totalizados, calculando el promedio obtenido por cada uno de los criterios. A continuación se describen los resultados de la encuesta, para la aplicación web. Tabla 8. Resultados prueba de usabilidad. Planteamiento Resultados Obtenidos Gráfico Los títulos, menús y textos de la aplicación son legibles. 9/10 (90%) de los usuarios estuvo totalmente de acuerdo y 1/10 (10%) estuvo de acuerdo Los colores utilizados contribuyen a la percepción adecuada de la aplicación 8/10 (80%) de los usuarios estuvo totalmente de acuerdo y 2/10 (20%) estuvo de acuerdo Los descriptores de la aplicación son claros y precisos 7/10 (70%) de los usuarios estuvo totalmente de acuerdo y 3/10 (30%) estuvo de acuerdo 63 Se ofrece una organización que facilita la navegación 6/10 (60%) de los usuarios estuvo totalmente de acuerdo y 4/10 (40%) estuvo de acuerdo Se ofrece una organización que facilita la navegación 6/10 (60%) de los usuarios estuvo totalmente de acuerdo y 4/10 (40%) estuvo de acuerdo El diseño de la aplicación favorece su uso 6/10 (60%) de los usuarios estuvo totalmente de acuerdo y 4/10 (40%) estuvo de acuerdo La aplicación se puede ejecutar de manera intuitiva 8/10 (80%) de los usuarios estuvo totalmente de acuerdo y 2/10 (20%) estuvo de acuerdo Es una aplicación fácil de utilizar 7/10 (70%) de los usuarios estuvo totalmente de acuerdo y 2/10 (20%) estuvo de acuerdo y una sola persona (10%) estuvo en desacuerdo 64 De esta manera, es posible determinar que los resultados de esta evaluación fueron favorables, ya que se estuvo totalmente de acuerdo (1) o de acuerdo (2) con los planteamientos del cuestionario la mayoría de los criterios tomados en cuenta, lo que indica que las herramientas resultan intuitivas y fáciles de usar para los usuarios potenciales. Una vez mostrado parte del código de la aplicación y la estructura del mismo, así como las pruebas que se realizaron en la metodología AgilUs, en el siguiente capítulo se muestran los resultados finales obtenidos en la aplicación. Los elementos de ayuda disponibles en la aplicación son útiles 6/10 (60%) de los usuarios estuvo totalmente de acuerdo y 4/10 (40%) estuvo de acuerdo 65 Capítulo 4: Resultados La aplicación consta de dos (2) módulos que son: usuario y administrador. El primero tiene como función principal facilitar el proceso para las personas u organizaciones interesadas en la realización de las solicitudes, que conlleven a reservar los espacios necesitados. En segundo lugar se tiene el módulo que permite al personal de la Coordinación y Extensión de la Facultad, administrar las áreas disponibles en la institución, y por ende, llevar un mejor control de las actividades involucradas para ello. Entonces de acuerdo a lo anteriormente mencionado, se puede entender que los dos módulos trabajan en conjunto para lograr el objetivo final que es la reservación de espacios. 4.1. Gestión de sesión Permite a los usuarios el registro en la aplicación y su posterior inicio de sesión. Ofrece la opción de reservar espacios y consultar las solicitudes en caso de que existan. En el caso del inicio de sesión es posible recuperar la clave mediante el botón “olvidé mi contraseña”, el cual la enviará vía correo electrónico. En la figura 28 se puede apreciar los formularios para el inicio de sesión y registro. Figura 28. Formulario para el inicio de sesión y registro. 66 4.2. Reservación de espacios Sección que permite a cualquiera de los usuarios registrados en Agesef solicitar alguno de los espacios disponibles. Para esto es necesario primero seleccionar el deseado y posteriormente completar el formulario mostrado en la figura 29 con toda la información relacionada al evento que se desea realizar. Figura 29. Formulario para la reservación de espacios. 4.3. Gestión de solicitudes Esta funcionalidad depende de quien la realice. En el caso de los usuarios, pueden consultar las solicitudes realizadas, modificarlas o eliminarlas, y en las solicitudes aprobadas indican la información relacionada al pago realizado. Por su parte, los miembros encargados del sistema pueden dar respuesta a las solicitudes recibidas y cancelar eventos programados. 67 En ambos casos, esta gestión se realiza en una interfaz como la de la figura 30, donde las solicitudes son aprobadas en función al estado en que se encuentren. Figura 30. Sección para la gestión de espacios 4.4. Gestión de perfil Sección que permite la actualización relacionada a los usuarios, esta funcionalidad es exclusiva para las personas registradas en Agesef. En la figura 31 se puede apreciar la interfaz correspondiente a la sección de perfil. Figura 31. Sección para la gestión de perfil 68 4.5. Gestión de listados de información Consiste en la consulta de todo lo relacionado con las personas registradas, los miembros de protocolo y los espacios existentes. Solo está disponible para los encargados ya que maneja información delicada de los usuarios y además tiene la opción de agregar y eliminar miembros de protocolo y espacios. En la figura 32 se puede observar la interfaz de los listados. Figura 32. Listados de información Mediante el prototipo anterior se pudo visualizar las principales funcionalidades para los distintos usuarios que usarán la aplicación. Es importante resaltar que por cada acción que se realicé durante el proceso, la aplicación enviará un correo para notificar el cambio realizado. 69 Conclusiones Con el desarrollo de Agesef se generó un aporte significativo para la Facultad de Ciencias de la UCV sistematizando el proceso de reservación de los espacios físicos, lo cual fue el objetivo principal de este Trabajo Especial de Grado. La aplicación es fácil de utilizar tanto para sus administradores como para los usuarios. Cumple con los requisitos planteados por los usuarios al inicio de este trabajo, colaborando así a la centralización de las múltiples actividades que conlleva la gestión de espacios físicos. Agesef fue desarrollada haciendo uso de tecnologías de desarrollo libres. Agesef permite la gestión de espacios físicos de una manera sencilla, y contribuye a la erradicación de varios errores que eran cometidos con el proceso que se realizaba anteriormente. Entre los objetivos del desarrollo de esta aplicación, se buscaba reducir la mayor cantidad posible de trabajo durante el proceso de reservación, permitiendo que el personal mejore su productividad e incluso permita la recepción de más solicitudes de las que anteriormente podían ser manejadas, esto se logró agregando algunas funcionalidades que hacen que los usuarios administradores solo se enfoquen en las actividades más importantes del sistema como son la aprobación y rechazo de solicitudes. 70 Recomendaciones A continuación se presenta una lista de recomendaciones, ideas y/o sugerencias que surgieron durante el proceso de desarrollo y que pudieran ser aplicadas sobre esta aplicación en mejoras futuras:  Añadir enlace de Agesef al portal de la Coordinación de Extensión de la Facultad de Ciencias de la UCV.  Agregar la opción de que el pago pueda ser realizado vía internet, ya sea con tarjeta de crédito o mediante transferencia.  Añadir funcionalidad que permita la descarga de calendario con los eventos del mes.  Un buscador de eventos para consultar la información del mismo.  Permitir la modificación del diseño.  Podría ser útil que los usuarios pudieran hacer comentarios sobre los eventos, para que los organizadores pudieran tener un feedback.  Ampliar las funciones que tienen los miembros de la Coordinación de Extensión en función de sus necesidades.  Agregar los enlaces a las redes sociales de la Coordinación de Extensión.  Permitir que los usuarios puedan indicar su interés en función a un evento, lo cual funciona como una medida para los usuarios que desconocen el contenido del evento y además ayuda a los organizadores a saber la recepción del evento por parte de los asistentes.  Agesef fue desarrollado para ser usado en la Facultad de Ciencias de la UCV, pero con algunas modificaciones puede ser utilizado como base para el desarrollo de una aplicación de gestión de espacios para cualquier otro lugar, independientemente de si es una institución educativa o no.  Generar estadísticas sobre los eventos, esto permitiría consultar cuales son los días más solicitados, los espacios más utilizados, las fechas con mayor cantidad de eventos, entre otros.  Como medida para atraer la atención de los usuarios a los eventos a realizarse, se puede colocar en la página de inicio de la aplicación web, la lista de eventos a llevar a cabo en la semana en curso. 71 Referencias bibliográficas Acosta, E. (2011). Agilus: Construcción ágil de la usabilidad. Universidad Central de Venezuela. 14 pp. Bell, D., Parr, M. (2003). Java para estudiantes. México, México: Pearson Educación. 664 pp. Campderrich, B. (2003). Ingeniería del software. Barcelona, España: Editorial UOC. 320pp. Cardona, S., Jaramillo, S., Villa, D. (2008). Programación avanzada en Java. iEdiciones Elizcom. 206 pp. Flanagan, D. (2011). JavaScript: The definitive guide. California, Estados Unidos: O’Reilly Media, Inc. 1096 pp. Frain, B. (2012). Responsive Web Design with HTML5 and CSS3 [Diseño web responsivo con HTML5 y CSS3]. Birmingham, Reino Unido: Packt Publishing Ltd. 324 pp. Franklin, Jack (2013). Beginning jQuery. Apress. 204 pp. García, C. (2003). Diseño web para tod@s I. Barcelona: España. Icaria Editorial. 201pp. James, J. (2005). Ajax: A new approach to web applications [en línea]. California, Estados Unidos: Adaptative Path. Disponible en: http://adaptivepath.org/ideas/ajax-new-approach-web-applications/. Kendall, K & Kendall, J. (2005). Análisis y diseño de sistemas. México: Pearson Educación. 752 pp. Lafosse, J. (2010). Struts 2: El framework de desarrollo de aplicaciones Java EE. Barcelona: España. Ediciones ENI. 490 pp. Luján, S. (2002). Programación de aplicaciones web: historia, principios básicos y clientes web. Alicante, España: Editorial Club Universitario. 321 pp. Marcotte, E. (2011). Responsive web design. Nueva York: Estados Unidos. A book apart. 150 pp. Navajas, A. (2012). Guía completa de CSS3. Autoedición. 63 pp. Niño, J. (2010). Aplicaciones web. Editex. 239 pp. 72 Somerville, I. (2005). Ingeniería del software. Madrid: España. Pearson Educación. 687 páginas. Zofio, J. (2013). Aplicaciones web. España: Editorial Macmillan Iberia SA. 240 pp. 73 ANEXO A Casos de Uso Tabla 1. Especificación del caso de uso: iniciar sesión Caso de uso: CU.1.1.1 iniciar sesión. Actor: todos los usuarios. Precondición: el usuario debe estar registrado en la aplicación. Acción: funcionalidad que permite al usuario ingresar a la aplicación. Condición de Éxito: se iniciará la sesión. Tabla 2. Especificación del caso de uso: cerrar sesión Caso de uso: CU.1.1.2 cerrar sesión. Actor: todos los usuarios. Precondición: el usuario debe haber iniciado sesión en la aplicación. Acción: funcionalidad que permite al usuario finalizar la sesión en la aplicación. Condición de Éxito: se finalizará la sesión del usuario. Tabla 3. Especificación del caso de uso: consultar calendario Caso de uso: CU.1.2.1 consultar calendario. Actor: todos los usuarios. Precondición: el usuario debe estar en el sitio web de la aplicación. Acción: funcionalidad que permite al usuario consultar los eventos que se llevarán a cabo y la disponibilidad de los espacios. Condición de Éxito: conocer los eventos que se realizarán en los espacios. Tabla 4. Especificación del caso de uso: crear solicitud Caso de uso: CU.1.3.1 crear solicitud. Actor: todos los usuarios. Precondición: el usuario debe haber iniciado sesión en la aplicación. Acción: funcionalidad que permite realizar solicitudes para el uso de un espacio. 74 Condición de Éxito: el usuario habrá solicitado la reservación de un espacio. Tabla 5. Especificación del caso de uso: modificar solicitud Caso de uso: CU.1.3.2 modificar solicitud. Actor: todos los usuarios. Precondición: el usuario debe haber iniciado sesión en la aplicación. Acción: funcionalidad que permite actualizar la información reflejada en las solicitudes de espacio que no han recibido respuesta. Condición de Éxito: el usuario habrá actualizado la información de la solicitud. Tabla 6. Especificación del caso de uso: eliminar solicitud Caso de uso: CU.1.3.3 eliminar solicitud. Actor: todos los usuarios. Precondición: el usuario debe haber iniciado sesión en la aplicación. Acción: funcionalidad que permite cancelar la solicitud de un espacio. Condición de Éxito: el usuario habrá eliminado la solicitud. Tabla 7. Especificación del caso de uso: consultar estado de solicitud Caso de uso: CU.1.3.4 consultar estado de solicitud. Actor: todos los usuarios. Precondición: el usuario debe haber iniciado sesión en la aplicación. Acción: funcionalidad que permite conocer el estado en que se encuentra una solicitud: aprobada, rechazada o pendiente. Condición de Éxito: el usuario conocerá el estado de su solicitud. Tabla 8. Especificación del caso de uso: modificar perfil Caso de uso: CU.1.4.1. Modificar perfil Actor: todos los usuarios. Precondición: el usuario debe haber iniciado sesión en la aplicación. Acción: funcionalidad que permite actualizar la información mostrada en su perfil. 75 Condición de Éxito: el perfil del usuario estará actualizada. Tabla 9. Especificación del caso de uso: consultar listado de contacto Caso de uso: CU.1.5.1. Consultar listado de contacto Actor: miembros Coordinación de Extensión. Precondición: el usuario debe haber iniciado sesión en la aplicación. Acción: funcionalidad que permite acceder a la información personal de los usuarios registrados en la aplicación. Condición de Éxito: el usuario conocerá la información más importante de los usuarios registrados. Tabla 10. Especificación del caso de uso: consultar listado de guías de sala y protocolo Caso de uso: CU.1.5.2. Consultar listado de guías de sala y protocolo Actor: miembros Coordinación de Extensión. Precondición: el usuario debe haber iniciado sesión en la aplicación. Acción: funcionalidad que permite conocer la información de los guías de sala y protocolo. Condición de Éxito: el usuario conocerá la información actualizada de los guías de sala y protocolo disponibles. Tabla 11. Especificación del caso de uso: consultar listado de espacios Caso de uso: CU.1.5.3. Consultar listado de espacios Actor: miembros Coordinación de Extensión. Precondición: el usuario debe haber iniciado sesión en la aplicación. Acción: funcionalidad que permite conocer los espacios disponibles en la aplicación. Condición de Éxito: el usuario conocerá la información disponible de los espacios existentes. 76 ANEXO B Cuestionario de usabilidad de Agesef Este cuestionario tiene como intención evaluar la usabilidad de la aplicación web Agesef. La usabilidad es la efectividad, eficiencia y satisfacción con la que la aplicación puede ser comprendida, utilizada y ser atractiva para usted. Se agradece seleccionar la opción que representa su opinión en función de la afirmación dada. 1. Los títulos, menús y textos de la aplicación son legibles. a. Totalmente de acuerdo b. De acuerdo c. Ni de acuerdo ni en desacuerdo d. En desacuerdo e. Totalmente en desacuerdo 2. Los colores utilizados contribuyen a la percepción adecuada a la aplicación. a. Totalmente de acuerdo b. De acuerdo c. Ni de acuerdo ni en desacuerdo d. En desacuerdo e. Totalmente en desacuerdo 3. Los descriptores de la aplicación son claros y precisos. a. Totalmente de acuerdo b. De acuerdo c. Ni de acuerdo ni en desacuerdo d. En desacuerdo e. Totalmente en desacuerdo 4. Se ofrece una organización que facilita la navegación. a. Totalmente de acuerdo b. De acuerdo 77 c. Ni de acuerdo ni en desacuerdo d. En desacuerdo e. Totalmente en desacuerdo 5. El diseño de la aplicación favorece su uso. a. Totalmente de acuerdo b. De acuerdo c. Ni de acuerdo ni en desacuerdo d. En desacuerdo e. Totalmente en desacuerdo 6. La aplicación se puede ejecutar de manera intuitiva. a. Totalmente de acuerdo b. De acuerdo c. Ni de acuerdo ni en desacuerdo d. En desacuerdo e. Totalmente en desacuerdo 7. Es una aplicación fácil de utilizar. a. Totalmente de acuerdo b. De acuerdo c. Ni de acuerdo ni en desacuerdo d. En desacuerdo e. Totalmente en desacuerdo 8. Los elementos de ayuda disponibles en la aplicación son útiles. a. Totalmente de acuerdo b. De acuerdo c. Ni de acuerdo ni en desacuerdo d. En desacuerdo e. Totalmente en desacuerdo 78 ANEXO C Resultados de Pruebas de Usabilidad Item 1 Item 2 Item 3 Item 4 Item 5 Item 6 Item 7 Item 8 Totalmente de acuerdo Totalmente de acuerdo Totalmente de acuerdo De acuerdo Totalmente de acuerdo Totalmente de acuerdo De acuerdo Totalmente de acuerdo Totalmente de acuerdo De acuerdo De acuerdo De acuerdo Totalmente de acuerdo De acuerdo Totalmente de acuerdo De acuerdo Totalmente de acuerdo Totalmente de acuerdo Totalmente de acuerdo De acuerdo Totalmente de acuerdo Totalmente de acuerdo Totalmente de acuerdo Totalmente de acuerdo Totalmente de acuerdo De acuerdo De acuerdo Totalmente de acuerdo Totalmente de acuerdo De acuerdo De acuerdo De acuerdo Totalmente de acuerdo Totalmente de acuerdo De acuerdo Totalmente de acuerdo De acuerdo De acuerdo Totalmente de acuerdo Totalmente de acuerdo De acuerdo Totalmente de acuerdo Totalmente de acuerdo De acuerdo De acuerdo Totalmente de acuerdo Totalmente de acuerdo Totalmente de acuerdo 79 ANEXO D Manual Técnico de Agesef El presente manual tiene el propósito de informar sobre las distintas secciones y funcionalidades del sistema a nivel de código para el personal de soporte técnico. Se asume que esta configuración se está realizando en un sistema operativo Debian (Ubuntu, Debian, Mint, etc.) y que es usuario root, el procedimiento a seguir es el siguiente: 1. Actualizar la lista de repositorios con el comando: aptitude update 2. Instalar los programas necesarios para el proyecto, que son básicamente Python, Flask, Psycopg2 y Postgres. aptitude install python python-dev python-pip postgresql-9.1 postgresql- client-9.1 libpq-dev Los tres primeros instalan el intérprete de Python, las dependencias necesarias para compilar sus paquetes y el manejador de paquetes de Python Pip. Las dos siguientes instalan un servidor de Postgres y un cliente para conectarnos. La última instala las dependencias necesarias para el Psycopg2. pip install flask psycopg2 3. Finalmente para configurar una base de datos en pPostgres, primero se debe cambiar al usuario Postgres, conectar al servidor, crear la base de datos, 80 crear un usuario con permisos sobre esa base de datos y después conectar con el usuario y crear tablas. su postgres psql create database tesis_database; create user giselle with password ‘tesis’; grant all privileges on database tesis_database to giselle; A continuación el código necesario para la creación de las tablas correspondientes a este Trabajo Especial de Grado: 81 82 ANEXO E Manual de Usuario Agesef El presente manual tiene como intención instruir sobre el uso de la aplicación AGESEF para la reservación de espacios físicos de la Facultad de Ciencias de la Universidad Central de Venezuela. Inicio de sesión Para iniciar sesión desde cualquier ubicación, debe hacer clic en el botón “Iniciar sesión” ubicado en la esquina superior derecha, mostrado en la figura 1. Figura 1. Botón de “iniciar sesión” Al hacer clic sobre este botón será redireccionado a la página de inicio de sesión y registro, la cual se muestra en la figura 2. Figura 2. Página de inicio de sesión y registro 83 Una vez ubicado en el inicio de sesión y registro, debe completar los campos del formulario de inicio de sesión mostrado en la figura 3. En este formulario debe colocar su correo y contraseña y seleccionar el botón enviar. Figura 3. Formulario de inicio de sesión En caso de no recordar su contraseña debe colocar su correo y hacer clic en el botón “olvidé mi contraseña” y aparecerá un mensaje como el mostrado en la figura 4. Figura 4.Mensaje al seleccionar opción “olvidé mi contraseña” En caso de hacer clic en el botón sin haber colocado el correo, aparecerá un mensaje indicando que debe colocar el correo como se muestra en la figura 5. Figura 5. Mensaje de error al seleccionar opción “olvidé mi contraseña” Al iniciar sesión correctamente, será redirigido a la página de inicio de usuarios. 84 Módulo de usuario En este módulo se muestra la interfaz principal del usuario registrado, con sus funcionalidades asociadas, las cuales son: -Consultar solicitudes pendientes, aprobadas y rechazadas -Actualizar información de perfil Solicitudes Al ingresar al módulo de usuario, debe dirigirse a la sección solicitudes mostrada en la figura 21. Figura 21. Pestañas de módulo de usuario Para consultar las solicitudes, debe seleccionar el tipo de solicitud. En la figura 22 se muestran los 3 tipos de solicitudes entre los cuales puede escoger. Figura 22. Tipos de solicitudes – módulo usuario Al seleccionar solicitudes pendientes, se despliega la lista de solicitudes que no han sido respondidas por la Coordinación de Extensión. Al desplegar este tipo de solicitudes se verá como la figura 23. Figura 23. Lista de solicitudes pendientes – módulo usuario 85 En la figura anterior se puede observar que esta lista de solicitudes está dividida en 2 columnas, la primera contiene la información del evento y la segunda tiene los botones de eliminar y modificar. Al seleccionar solicitudes aprobadas, se muestra la lista de eventos que fueron solicitados por el usuario y aprobados por la Coordinación de Extensión. La lista luce como la mostrada en la figura 24. Figura 24. Lista de solicitudes aprobadas – módulo de usuario NOTA: Si se desea cancelar un evento que ya fue aprobado, el usuario debe comunicarse con la Coordinación de Extensión para informar la cancelación. Al seleccionar solicitudes rechazadas, se muestra la lista de eventos que fueron solicitados por el usuario y rechazados por la Coordinación de Extensión. Esta lista luce como la mostrada en la figura 25. 86 Figura 25. Lista de solicitudes rechazadas – módulo de usuario Perfil En esta sección se muestra la información del usuario y permite la modificación de la misma. Esta sección es mostrada en la figura 26. Figura 26. Pestaña de perfil – módulo de usuario Para modificar sólo es necesario llenar el campo con la nueva información y seleccionar el botón editar. Eliminar solicitudes pendientes En la tabla de solicitudes pendientes se encuentran los botones de eliminar y modificar. En caso de que desee eliminar la solicitud, debe hacer clic sobre el botón eliminar y este generará un mensaje como el mostrado en la figura 27 para confirmar la acción seleccionada. Figura 27. Mensaje para confirmar acción de eliminar solicitud 87 En caso de confirmar la eliminación de la solicitud, aparecerá un mensaje para informar que la solicitud fue eliminada satisfactoriamente. Figura 28. Mensaje para informar que solicitud fue eliminada Solicitar espacio Para solicitar espacio debe seleccionar que tipo de espacio desea, auditorio o espacio deportivo en la página de inicio. En la figura 29 se muestra como son representadas las opciones. Figura29. Auditorios y espacios deportivos Al seleccionar el tipo de espacio, se listarán los espacios disponibles, en la figura 30 se muestran los espacios correspondientes a la opción de auditorios y en la figura 31 se muestran los espacios deportivos. 88 Figura 30: Auditorios Figura 31: Espacios deportivos 89 Al seleccionar uno de los espacios, independientemente de si es auditorio o espacio deportivo, se despliega su información como se muestra en la figura 32. Figura 32. Pestañas de espacios Como se puede observar en la figura anterior la página contiene 2 secciones, una de características del espacio y una correspondiente al calendario. En la figura 33 se muestra la sección del calendario. Figura 33. Pestaña de calendario 90 En este calendario se puede ver el nombre y horario de los próximos eventos a llevarse a cabo en el espacio actual. También ofrece la opción de reservar el espacio. Al hacer clic sobre la fecha que desea, será redireccionado al formulario de solicitud de espacios mostrado en la figura 34. Figura 34. Formulario para solicitar espacio 91 ANEXO F. Manual de usuario administrador El presente manual tiene como intención instruir sobre el uso de la aplicación AGESEF para la gestión de los espacios físicos de la Facultad de Ciencias de la Universidad Central de Venezuela por parte de los usuarios administradores. Inicio de sesión Para iniciar sesión desde cualquiera de las páginas del sistema, el usuario debe hacer clic en el botón “Iniciar sesión” ubicado en la esquina superior derecha, mostrado en la figura 1. Figura 1. Botón de “iniciar sesión” Al hacer clic sobre este botón será redireccionado a la página de inicio de sesión y registro, la cual se muestra en la figura 2. Figura 2. Página de inicio de sesión y registro 92 Una vez ubicados en la página de inicio de sesión y registro, se deben completar los campos del formulario de inicio de sesión mostrado en la figura 3. En este formulario debe colocar su correo y contraseña y seleccionar el botón enviar. Figura 3. Formulario de inicio de sesión En caso de no recordar su contraseña debe colocar su correo y hacer clic en el botón “olvidé mi contraseña” y aparecerá un mensaje como el mostrado en la figura 4. Figura 4.Mensaje al seleccionar opción “olvidé mi contraseña” En caso de hacer clic en el botón sin haber colocado el correo, aparecerá un mensaje indicando que debe colocar el correo como se muestra en la figura 5. Figura 5. Mensaje de error al seleccionar opción “olvidé mi contraseña” Al iniciar sesión, será redirigido a su página de inicio. 93 Módulo administrador En este módulo se muestra la interfaz principal del administrador de Agesef, con sus funcionalidades asociadas, las cuales son: -Consultar solicitudes recibidas, aprobadas y rechazadas -Consultar la lista de contactos y miembros de protocolo -Aprobar o rechazar solicitudes de espacios -Cancelar eventos aprobados -Actualizar información de perfil Solicitudes Al ingresar al módulo de administrador, encontrará múltiples secciones, como las mostradas en la figura 6, donde puede seleccionar la actividad a realizar. Figura 6. Pestañas módulo administrador Para consultar las solicitudes debe seleccionar el tipo de solicitud del despegable mostrado en la figura 6. En la figura 7 se muestra la variedad de opciones entre las cuales puede escoger. Figura 7. Tipos de solicitudes Al seleccionar “solicitudes pendientes”, se despliega la lista de solicitudes por responder en caso de que exista alguna. Esta lista de solicitudes es mostrada en la figura 8. 94 Figura 8. Solicitudes pendientes – módulo administrador En caso de que no existan solicitudes se mostrará un mensaje como el de la figura 9. Figura 9.Mensaje para cuando no existen solicitudes pendientes Cuando se seleccionan las solicitudes aprobadas se muestra una tabla como la de la figura 10. Figura 10. Lista de solicitudes aprobadas – módulo administrador 95 Como se puede observar en la figura 10, la tabla contiene información del evento a realizar, los datos del solicitante, el estado del pago y el botón para cancelar el evento. Aprobar o rechazar solicitudes La tabla de solicitudes pendientes contiene la información del evento a realizar, los datos del solicitante y los botones aprobar y rechazar. En caso de que se desee aprobar la solicitud, debe hacer clic sobre el botón aprobar y se generará un mensaje como el mostrado en la figura 11 para confirmar la acción. Figura 11. Mensaje para confirmar aprobación de solicitud Al seleccionar aceptar, se enviará un correo a la lista de personas de protocolo con la información del evento aprobado. Luego, será redireccionado al formulario en el cual debe definir el monto a pagar por la reservación del espacio y la fecha máxima de pago, también se puede exonerar el pago. El formulario se muestra en la figura 12. Figura 12. Formulario para definir pago de evento Luego de llenar el formulario, se informa al usuario de la aprobación de su evento y el monto a pagar por la reservación del espacio. Al finalizar, será redirigido a la página de inicio del módulo del administrador. Para rechazar la solicitud, se hace clic sobre el botón rechazar y se mostrará un mensaje para confirmar la acción, como el mostrado en la figura 13. 96 Figura 13. Mensaje para confirmar rechazo de solicitud Luego el usuario solicitante es informado vía correo electrónico que su solicitud fue rechazada y el usuario administrador es redirigido a la página de inicio del módulo correspondiente. Cuando una solicitud es aprobada, puede ser visualizada en el calendario del espacio correspondiente. Modificar status de pago de un evento Al consultar las solicitudes aprobadas se puede modificar el estado del pago. Esta modificación consiste en colocar como “pago cancelado” un evento que se encuentra como “pago pendiente”. Para realizar esta modificación solo es necesario hacer clic en el botón cambiar, mostrado en la figura 14. Figura 14. Estructura de tabla de solicitudes aprobadas Aparecerá un mensaje para confirmar la modificación, como el mostrado en la figura 15. Figura 15. Mensaje para confirmar el cambio de status de un evento Al consultar de nuevo los eventos aprobados, el modificado ahora tendrá en el estado del pago “pago realizado” como se muestra en la figura 16. 97 Figura 16. Ejemplo de estatus de pago cuando es modificado Cancelar evento aprobado Al consultar las solicitudes aprobadas, se muestra la opción de cancelar evento, esta acción permite la cancelación de un evento después de haber sido aprobado. Al hacer clic en “cancelar evento” aparecerá un mensaje para confirmar la acción como el mostrado en la figura 17 Figura 17. Mensaje para confirmar la cancelación de un evento Al consultar de nuevo las solicitudes aprobadas, el evento cancelado ya no será listado. Esta acción se puede realizar independientemente del estado del pago. Contactos Al seleccionar el módulo de listados aparecerá el enlace mostrado en la figura 18. Figura 18. Sección contactos Al hacer clic sobre “ver lista de contactos”, se desplegará la lista de contactos, la cual contiene la información de cada uno de los usuarios registrados como se muestra en la figura 19. 98 Figura 19. Lista de contactos – módulo administrador Perfil En esta sección se muestra la información del usuario y permite la modificación de la misma. Esta sección es mostrada en la figura 20. Figura 20. Pestaña de perfil – módulo administrativo Para modificar solo es necesario llenar el campo con la nueva información y seleccionar el botón editar.