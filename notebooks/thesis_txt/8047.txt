UNIVERSIDAD CENTRAL DE VENEZUELA FACULTAD DE CIENCIAS ESCUELA DE COMPUTACIÓN APLICACIÓN WEB PARA LA GESTION DE LOS PROCESOS ACADEMICOS- ADMINISTRATIVOS DE LA UNIDAD DE SERVICIO COMUNITARIO DE LA FACULTAD DE CIENCIAS Trabajo Especial de Grado presentado ante la Ilustre Universidad Central de Venezuela Por el Bachiller: Miguel Ángel Omaña Fernández Para optar al título de Licenciado en Computación Tutor: Prof. Franklin Sandoval Caracas, marzo de 2019 ii iii Agradecimientos Mi gratitud a los que hicieron posible la culminación del desarrollo de este Trabajo Especial de Grado, que espero que llene de buena experiencia a los usuarios finales. Gracias a mi Tutor Académico Prof. Franklin Sandoval, profesora Inés Tovar y Eleonora Acosta por todo su apoyo para alcanzar culminación exitosa del mismo. A Yusbelys y Miriam por participar en las diferentes fases del desarrollo de este trabajo. Miguel Angel Omaña F. iv UNIVERSIDAD CENTRAL DE VENEZUELA FACULTAD DE CIENCIAS ESCUELA DE COMPUTACIÓN APLICACIÓN WEB PARA LA GESTION DE LOS PROCESOS ACADEMICOS- ADMINISTRATIVOS DE LA UNIDAD DE SERVICIO COMUNITARIO DE LA FACULTAD DE CIENCIAS Autor: Miguel Á. Omaña F. Tutor: Franklin Sandoval S. RESUMEN Los procesos académicos-administrativos llevados a cabo en la Unidad de Servicio Comunitario de la Facultad de Ciencias de la Universidad Central de Venezuela, cada día generan mayor volumen de información y requieren que sean mejorados con la incorporación de tecnología. Es por ello, que se ha desarrollado la Aplicación Web para la Gestión de los Procesos Académicos - Administrativos de la Unidad de Servicio Comunitario de la Facultad de Ciencias de la Universidad Central de Venezuela. Este trabajo de investigación se centra en el desarrollo que comprende la creación de un módulo Administrativo para la gestión de los autores involucrados en el Servicio Comunitario: tutores académicos, proyectos comunitarios y comunidades. Como también la gestión de solicitudes estudiantiles realizadas por los prestadores de Servicio Comunitarios (estudiantes). El desarrollo del sistema se ha realizado con tecnología cliente servidor, bajo la tecnología de desarrollo Web JAVA, Java Server Page (JSP) y Servlet, bajo la arquitectura Modelo – Vista – Controlador (MVC) y el manejador de base de datos MySQL, con la creación de las nuevas tablas incorporadas para la gestión de solicitudes estudiantiles. Esta aplicación Web se desarrolló a través de la aplicación de la metodología ágil de desarrollo de software AgilUs, la cual se basa en la evaluación de la usabilidad y la incorporación de los usuarios finales durante el proceso de desarrollo del software. Palabras clave: Procesos Académicos, Servicio Comunitario, Incorporación de la tecnología, Procesos, Gestión. v ÍNDICE LISTAS DE FIGURAS v LISTA DE TABLAS vii INTRODUCCIÓN 1 CAPÍTULO 1. EL PROBLEMA Y CONTEXTO DE LA INVESTIGACIÓN 5 1.1 Planteamiento del problema 5 1.2 Objetivo General 8 1.3 Objetivos específicos 9 1.4 Justificación 9 1.5 Alcance 10 1.6 Servicio Comunitario 11 1.7 Objetivos del Servicio Comunitario 11 1.8 Actores involucrados en el Servicio Comunitario de la Facultad Ciencias 13 1.8.1 Comisión de Servicio Comunitario 14 1.8.2 Unidad de Servicio Comunitario 14 1.8.3 Tutores académicos 15 1.8.4 Tutores comunitarios 16 1.8.5 Prestadores de Servicio Comunitario 16 CAPÍTULO 2. TECNOLOGÍAS Y MÉTODO DE DESARROLLO UTILIZADOS EN LA SOLUCIÓN 18 2.1 Aplicación Web 18 2.1.1 Estructura de una aplicación Web 18 2.2 Tecnologías del cliente 20 2.2.1 Lenguaje marcado de Hipertexto (HTML) 20 2.2.2 Hojas de Estilo en Cascada (CSS) 21 2.2.3 JavaScript 22 2.3 Tecnologías del servidor 22 2.3.1 Java Server Page (JSP) 23 2.3.1.1 Características de JSP 23 vi 2.3.1.2 Funcionamiento de JSP 24 2.3.2 Servlet 24 2.3.2.1 Características de los Servlets 25 2.3.2.2 API de los Servlets 25 2.3.3 Diferencias entre JSP y Servlet 28 2.4 Servidor Web 28 2.5 Arquitectura Modelo-Vista-Controlador 28 2.6 MySQL 30 2.8 La Metodología AgilUs 31 CAPITULO 3. MARCO APLICATIVO 33 3.1 Fase I: Requerimientos 34 3.1.1 Tormentas de ideas 34 3.1.2 Evaluación de Sistema existente 35 3.1.3 Perfiles de Usuario 37 3.1.4 Requerimientos funcionales y no funcionales 37 3.1.4.1 Requerimientos funcionales 37 3.1.4.1 Requerimientos no funcionales 39 3.2 Fase II: Análisis 39 3.2.1 Modelo de casos de uso 40 3.2.2 Modelo de Objeto de Dominio 58 3.2.3 Prototipo de papel 59 3.2.4 Guía de estilo 61 3.2.4.1 Logo 61 3.2.4.2 Colores principales 61 3.2.4.3 Tipografía 62 3.2.4.4 Estilos de Interacción 62 3.2.4.5 Botones 63 3.3 Fase III: Prototipaje 63 3.3.1 Prototipaje rápido 64 3.3.2 Evaluación Heurística 66 vii 3.4 Fase IV: Entrega 70 3.4.1 Prueba de aceptación 70 CONCLUSIONES Y RECOMENDACIONES 77 REFERENCIAS BIBLIOGRÁFICAS 80 viii LISTA DE FIGURAS Figura 2.1 Arquitectura cliente-servidor 19 Figura 2.2 Paquete javax.Servlet 26 Figura 2.3 Funcionamiento de un Servlet 27 Figura 2.4 Arquitectura MVC 30 Figura 2.5 Ciclo de vida de AgilUs 32 Figura 3.1 Requisitos: 1era. Fase de AgilUS 34 Figura 3.1 Nube de palabras 35 Figura 3.3 Interfaz Principal de la aplicación USC 36 Figura 3.4 Análisis: 2da. Fase de AgilUs 39 Figura 3.5 Caso de uso: Nivel 0 40 Figura 3.6 Casos de uso: Nivel 1 42 Figura 3.7 Caso de uso: Nivel 2. Gestionar tutores académicos 45 Figura 3.8 Caso de uso: Nivel 2. Gestionar tutores comunitarios 47 Figura 3.9 Caso de uso: Nivel 2. Gestionar proyectos comunitarios 49 Figura 3.10 Caso de uso: Nivel 2. Gestionar comunidades 50 Figura 3.11 Caso de uso: Nivel 2. Gestionar usuarios 52 Figura 3.12 Caso de uso: Nivel 2. Cargar estudiantes 53 Figura 3.13 Caso de uso: Nivel 2. Generar reportes 54 Figura 3.13 Modelo objeto de dominio de la Aplicación Web 58 Figura 3.14 Prototipaje en papel. Inicio de sesión 59 Figura 3.15 Prototipaje en papel. Menú Principal Coordinador 60 Figura 3.16 Prototipaje en papel. Menú de Operaciones 60 Figura 3.17 Logo 61 Figura 3.18 Colores principales 61 Figura 3.19 Menú de opciones 62 Figura 3.20 Campos de textos 62 Figura 3.21 Botones 63 Figura 3.22 Prototipaje: 3era. Fase de AgilUs 63 ix Figura 3.23 Interfaz gráfica de Inicio de Sesión 65 Figura 3.24 Interfaz del Menú Principal del Administrador 66 Figura 3.25 Entrega: 4ta. Fase de AgilUs 70 Figura 3.26 Gráfico 1 71 Figura 3.27 Gráfico 2 71 Figura 3.28 Gráfico 3 72 Figura 3.29 Gráfico 4 72 Figura 3.30 Gráfico 5 73 Figura 3.31 Gráfico 6 73 Figura 3.32 Gráfico 7 74 Figura 3.33 Gráfico 8 74 Figura 3.34 Gráfico 9 75 Figura 3.35 Gráfico 10 75 x LISTA DE TABLAS Tabla 3.1 Descripción actor coordinador 40 Tabla 3.2 Descripción actor coordinador 41 Tabla 3.3 Descripción actor secretaria 41 Tabla 3.4 Descripción del Caso de uso: Gestionar tutores académicos 41 Tabla 3.5 Descripción del Caso de uso: 2. Gestionar tutores comunitarios 42 Tabla 3.6 Descripción del Caso de uso: Gestionar proyectos comunitarios 43 Tabla 3.7 Descripción del Caso de uso: Gestionar comunidades 43 Tabla 3.8 Descripción del Caso de uso: Gestionar usuarios 43 Tabla 3.9 Descripción del Caso de uso: Enviar correo 43 Tabla 3.10 Descripción del Caso de uso: Cargar estudiantes 44 Tabla 3.11 Descripción del Caso de uso: Generar reportes 44 Tabla 3.12 Descripción del Caso de uso: Gestionar solicitudes estudiantiles 44 Tabla 3.13 Descripción del Caso de uso: Iniciar sesión 45 Tabla 3.14 Descripción del Caso de uso: Agregar tutores académicos 46 Tabla 3.15 Descripción del Caso de uso: Consultar tutores académicos 46 Tabla 3.16 Descripción del Caso de uso: Modificar tutores académicos 46 Tabla 3.17 Descripción del Caso de uso: Eliminar tutores académicos 46 Tabla 3.18 Descripción del Caso de uso: Agregar tutores comunitarios 47 Tabla 3.19 Descripción del Caso de uso: Consultar tutores comunitarios 47 Tabla 3.20 Descripción del Caso de uso: Modificar tutores comunitarios 48 Tabla 3.21 Descripción del Caso de uso: Eliminar tutores comunitarios 48 Tabla 3.22 Descripción del Caso de uso: Agregar proyecto comunitario 48 Tabla 3.23 Descripción del Caso de uso: Consultar proyecto comunitario 49 Tabla 3.24 Descripción del Caso de uso: Modificar proyecto comunitario 49 Tabla 3.25 Descripción del Caso de uso: Eliminar proyecto comunitario 49 Tabla 3.26 Descripción del Caso de uso: Agregar comunidad 50 Tabla 3.27 Descripción del Caso de uso: Consultar comunidad 51 Tabla 3.28 Descripción del Caso de uso: Modificar comunidad 51 xi Tabla 3.29 Descripción del Caso de uso: Eliminar comunidad 51 Tabla 3.30 Descripción del Caso de uso: Crear 51 Tabla 3.31 Descripción del Caso de uso: Modificar perfil 52 Tabla 3.32 Descripción del Caso de uso: Cargar archivo 53 Tabla 3.33 Descripción del Caso de uso: Tutores académicos 53 Tabla 3.34 Descripción del Caso de uso: Tutores comunitarios 54 Tabla 3.35 Descripción del Caso de uso: Proyectos comunitarios 54 Tabla 3.36 Descripción del Caso de uso: Comunidades 55 Tabla 3.37 Descripción del Caso de uso: Solicitudes estudiantiles 55 Tabla 3.38 Descripción del Caso de uso: Cambio de tutor académico 55 Tabla 3.39 Descripción del Caso de uso: Cambio de tutor comunitario 56 Tabla 3.40 Descripción del Caso de uso: Cambio proyectos comunitarios 56 Tabla 3.41 Descripción del Caso de uso: Cambio de comunidad 57 Tabla 3.42 Descripción del Caso de uso: Prórroga 57 Tabla 3.43 Descripción del Caso de uso: Ayuda estudiantil 57 Tabla 3.44 Evaluación Heurística 68 1 INTRODUCCIÓN El personal que labora en la Unidad de Servicio Comunitario se encarga de llevar a cabo, todas las actividades académico administrativas relacionadas a la prestación del Servicio Comunitario del estudiantado de la Facultad de Ciencias de la Universidad Central de Venezuela. Esta unidad debe garantizar que se realicen todos los procesos referentes a la planificación y desarrollo del Servicio Comunitario como requisito indispensable para la obtención de títulos universitarios, como lo establece la Ley de Servicio Comunitario del Estudiante de Educación Superior, implementada a partir del año 2007. Para ejecutar el Servicio Comunitario, se deben realizar un conjunto de solicitudes y procedimientos administrativos necesarios para el control, seguimiento del desarrollo y presentación del mismo, establecido por la Unidad de Servicio Comunitario de la Facultad de Ciencias de la Universidad Central de Venezuela; sin embargo, cada día la información que es manejada por esta unidad es mayor, debido al incremento en la cantidad de tutores académicos, tutores comunitarios, estudiantes, proyectos y comunidades, en cada semestre. Esto genera un volumen de información que es procesada y manejada por la Coordinación de Servicio Comunitario, la cual se realiza casi de forma manual, generando debilidad en la efectividad de todo el proceso. El procesamiento y manejo de información requiere hoy en día mayor rigurosidad tecnológica debido a la necesidad de una mayor eficiencia en los procesos administrativos. La Unidad de Servicio Comunitario de la Facultad de Ciencias de la Universidad Central de Venezuela, también requiere del manejo de las nuevas tecnologías de la Información para el procesamiento de las solicitudes, control y seguimiento, que realiza esta unidad en cuanto a la práctica del Servicio Comunitario de los estudiantes pertenecientes a esta Facultad. 2 La tecnología actualmente, brinda todas las herramientas para crear un sistema que organice toda la información que resulta de los procesos administrativos llevados por la Unidad de Servicio Comunitario de la Facultad de Ciencias. Para ello, se desarrolló una aplicación Web haciendo uso de lenguaje de programación y bases de datos. El objetivo principal de esta investigación es el desarrollo de la Aplicación Web de los Procesos Académicos - Administrativos de la Unidad de Servicio Comunitario de la Facultad de Ciencias de la Universidad Central de Venezuela, para la cual se presenta la siguiente estructura de este documento que describe esta investigación: Capítulo 1. El Problema y contexto de la investigación. Servicio Comunitario, Objetivos del Servicio Comunitario, actores involucrados en el Servicio Comunitario de la Facultad de Ciencias: Comisión de Servicio Comunitario, Unidad de Servicio Comunitario, Tutores Académicos, Tutores Comunitarios y Prestadores de Servicio Comunitario. Capítulo 2. Tecnologías y método de desarrollo utilizados en la solución. Arquitectura Aplicación Web, Arquitectura Cliente-Servidor. Tecnologías del Cliente: HTML (Lenguaje Marcado de Hipertexto), CSS (Hoja de estilo de Cascada), JavaScript, JSP. Tecnologías del Servidor: Servlet. Base de Datos, Sistema Manejador de Base de Datos: MySQL y Metodología AgilUs. Capítulo 3. Marco Aplicativo. Se detalla la adaptación de la metodología AgilUs, utilizada en el desarrollo de la Aplicación Web. Actualmente, la Unidad de Servicio Comunitario cuenta con una Aplicación Web para proceso automatizado de inscripción de los Estudiantes al Curso de Inducción y Proyecto de Servicio Comunitario. Este Sistema Web, trabaja 3 conectada a una Base de Datos relacional (diseñada bajo MySQL y modelada con los estándares del Sistema de Gestión Académica CONEST), que permite el acceso a la información de los diferentes usuarios y procesos involucrados con los cursos de inducción y proyectos del Servicio Comunitario. Dicho sistema Web, posee funcionalidades para que los estudiantes puedan consultar su estado en el Curso de Inducción y Proyecto de Servicio Comunitario, como generar comprobante de estos. Otras de las bondades que tienen esta Aplicación Web, es que permite registrar tutores académicos, tutores comunitarios, proyectos y comunidades. El desarrollo de la nueva aplicación Web utilizando nueva tecnología, se hace principalmente para aprovechar las bondades que ofrece la Aplicación Web existente en el Servicio Comunitario y su Base de Datos. El sistema a desarrollar, permitirá una vez se ponga en marcha, llevar a cabo los procesos administrativos para la evaluación posterior a la entrega de informes finales, generación de indicadores estadísticos de estudiantes, docentes, proyectos y comunidades. Además, se incluye la automatización de las solicitudes realizadas por los estudiantes cuando estos están realizando las prácticas comunitarias. Aparte, se plantea el diseño de nuevas tablas en la base de datos implementada en MySQL y modelada también bajo los estándares del Sistema de Gestión Académica CONEST, que almacenará toda la información involucrada en los procesos de solicitudes estudiantiles. De manera, que se lleve todo este proceso automatizado y genere respuestas rápidas al momento de hacer las diversas consultas. Por último, se hace referencia a las diferentes fuentes bibliografías consultadas para el desarrollo de esta investigación. Estas referencias se han efectuado de diferentes Trabajos Especiales de Grado relacionados con la investigación y consultas electrónicas. 4 CAPÍTULO 1 EL PROBLEMA Y CONTEXTO DE LA INVESTIGACIÓN En el siguiente capítulo se presenta la situación problemática que ocurre en la realización de los procesos por parte del personal que labora en la Unidad de Servicio Comunitario, se describen las funciones que debe cumplir esta Unidad a fin de garantizar la correcta prestación del Servicio Comunitario por parte de los estudiantes de la Facultad de Ciencias y demás actores involucrados en esta actividad. 1.1 Planteamiento del Problema El Servicio Comunitario es una oportunidad de formación bajo la modalidad de Aprendizaje-Servicio para los estudiantes que cursan estudios a nivel superior. Se orienta a la acción desinteresada de parte del estudiante en la comunidad y requiere del conocimiento de las fortalezas y debilidades de la profesión en la cual se está formando, a través de la cual aporta a la comunidad. El desarrollo del Servicio Comunitario implica la participación activa de estudiante y comunidad, que orientada por un proyecto de acción mancomunada buscan atender, desde diversidad de perspectivas, un problema detectado en la comunidad Todas las universidades tanto públicas como privadas tienen la obligación de incorporar entre sus actividades académicas la realización de Servicio Comunitario como requisito obligatorio para la obtención de título de pregrado universitario. La Universidad Central de Venezuela (UCV) desde el año 2006, promueve entre sus requisitos para la graduación de estudiantes en todas sus carreras, la realización del Servicio Comunitario, para ello organiza una estructura basada en la ley que regula todo lo concerniente esta actividad, que no es otra que la Ley de Servicio Comunitario del Estudiante de Educación Superior. 5 El Consejo Universitario de la Universidad Central de Venezuela (UCV), de conformidad a lo establecido en el artículo 15, numeral 7 de la Ley de Servicio Comunitario del Estudiante de Educación Superior (2005), Implementa un Reglamento Interno del Servicio Comunitario del Estudiantado de la UCV. Según este reglamento interno, en el artículo 7, es responsabilidad de los Consejos de Facultad la organización, planificación y dirección del Servicio Comunitario de la UCV en concordancias a las políticas institucionales. Para la descentralización de las responsabilidades y mejor cumplimiento de Servicio Comunitario, se crea la Unidad de Servicio Comunitario (USC) de la Facultad de Ciencias (FC-UCV) (2008), la cual es la encargada de llevar a cabo la coordinación de la ejecución del Servicio Comunitario. El Consejo de Facultad establece la Normativa Interna del Servicio Comunitario del Estudiante de la Facultad de Ciencias de la Universidad Central de Venezuela en el 2013. La Unidad de Servicio Comunitario de la FC-UCV, es responsable de la coordinación del Servicio Comunitario de las carreras pertenecientes de la Facultad de Ciencias: Biología, Computación, Física, Geoquímica, Matemática y Química, lo cual genera un importante volumen de trabajo. La Unidad de Servicio Comunitario tendrá entre sus funciones según su Normativa Interna del Servicio Comunitario del Estudiante de la (FC-UCV), lo siguiente: Numeral 5. “Coordinar el registro, seguimiento y evaluación académica del Servicio Comunitario de los estudiantes de la Facultad de común acuerdo con las direcciones de las escuelas correspondientes”, y numeral 6. “Mantener actualizada la base de datos para el control de los programas de prestaciones del Servicio Comunitario como: número y tipo de proyectos, profesores, participantes del proyecto, estudiantes inscritos en los distintos proyectos, proyectos en ejecución, proyectos finalizados, comunidades en las que se ha participado, resultados obtenidos”. 6 Para el registro, seguimiento y evaluación académica del Servicio Comunitario de los estudiantes de la Facultad de Ciencias se deben generar un conjunto de solicitudes realizadas a través de planillas: Solicitud de ayuda estudiantil, Solicitud de material, Solicitud de reintegro de gastos, Solicitud de inclusión de comunidad y solicitud estudiantil. Ahora bien, para mantener actualizada la base de datos para el control de los programas de prestaciones del Servicio Comunitario, no existe un sistema que permita hacer las actualizaciones de forma inmediata. En lo que respecta, a los indicadores y demás estadísticas relacionadas con el Servicio Comunitario no se presentan de forma automatizada. Lo antes expuesto, permite señalar que la Coordinación de Servicio Comunitario lleva casi todas sus actividades administrativas de forma manual o haciendo uso de software de aplicación, específicamente herramientas ofimáticas: hojas de cálculos y procesadores de texto, lo cual genera retrasos en todos los procesos administrativos que se han señalado en las funciones de la Unidad de Servicio Comunitario FC-UCV (USC FC-UCV) antes mencionadas. Aunado a esto, existe un aumento de información debido a la masiva incorporación de proyectos comunitarios por parte de estudiantes en cada uno de los semestres, lo que trae como consecuencia un incremento en el número de tutores académicos, tutores comunitarios, estudiantes, proyecto y comunidades. Esta debilidad hace más engorrosa el manejo de información y la automatización de procesos administrativos. Esta problemática puede ser resuelta a través de la incorporación de tecnología de la información y comunicación en todos y cada uno de los procesos administrados llevado a cabo por la USC de la FC-UCV. Debido a que la globalización en el uso de herramientas tecnológicas ha sugerido un cambio a la 7 manera de trabajo que permiten agilizar procesos, dar respuestas inmediatas, minimizar costos, esfuerzos, horas de trabajo y maximizar la eficiencia en cumplimiento de las tareas administrativas. En este caso particular, una herramienta tecnológica puntual que puede solucionar la debilidad planteada es la incorporación de un software desarrollado con tecnología Web y base de datos para sistematizar y automatizar todos los procesos administrativos inherentes a la USC de la FC-UCV, la cual es la propuesta de esta investigación. 1.2 Objetivo General El objetivo principal de este trabajo es: Desarrollar una Aplicación Web para la gestión de los procesos académico- administrativos de la Unidad de Servicio Comunitario de la Facultad de Ciencias de la Universidad Central de Venezuela. 8 1.3 Objetivos específicos A continuación, se presentan los objetivos específicos los cuales permiten alcanzar el objetivo principal: ● Identificar los requerimientos funcionales y no funcionales de las actividades de la Unidad de Servicio Comunitario. ● Diseñar un modelo lógico y físico de base de datos para el almacenamiento de la información de las solicitudes del Servicio Comunitario. ● Desarrollar los módulos y diagramas que se ajusten a los procesos académico-administrativos de la Unidad de Servicio Comunitario. ● Implementar los módulos gestiones administrativas y solicitudes estudiantiles. ● Realizar pruebas de aceptación y funcionalidad de los módulos de la aplicación Web para la gestión de los procesos académicos-administrativos de la Unidad de Servicio Comunitario de la Facultad de Ciencias 1.4 Justificación La Escuela de Computación debe estar a la vanguardia de los retos en materia de avance y mejoras en todos los procesos y tareas administrativas que se realizan dentro de la Universidad Central de Venezuela. Dando respuesta oportuna a través de la investigación y trabajos de programación que dentro de ella se realizan. Hoy en día, esta debilidad que presenta la Unidad de Servicio Comunitario en materia de organización de la información es una realidad que salta a la vista y que puede ser solucionada a través de la creación de programas apropiados y que a su vez puede ser realizado por los propios estudiantes de esta escuela. 9 Es por ello que se presenta esta propuesta de sistema con tecnología Web, que permita agilizar todas las tareas y procesos administrativos que se realizan dentro de la USC FC-UCV, así como la organización de la información para la presentación de indicadores y bases de datos actualizadas. Por esta razón, se plantea el desarrollo de una Aplicación Web para la Gestión de los procesos Académicos-Administrativos de la Unidad de Servicio Comunitario de la Facultad de Ciencias. 1.5 Alcance En el desarrollo de esta aplicación se llevará a cabo las sesiones de usuarios, que tendrán diferentes roles y actividades dentro de la aplicación. El desarrollo del módulo del administrador, con las funcionalidades de gestión de tutores académicos, gestión de tutores comunitarios, gestión de proyectos comunitarios, gestión de comunidades, todas con la funcionalidad de agregar, consultar, actualizar y eliminar. También, se tiene como alcance llevar a cabo el desarrollo de la sesión de la secretaria, para gestionar las solicitudes estudiantiles y la funcionalidad de generación de reportes. 10 1.6 Servicio Comunitario Según lo establecido en la Ley de Servicio Comunitario del estudiante de educación superior (2005), en su artículo 4, define al Servicio Comunitario como “la actividad que deben desarrollar en las comunidades los estudiantes de educación superior que cursen estudios de formación profesional, aplicando los conocimientos científicos, técnicos, culturales, deportivos y humanísticos adquiridos durante su formación académica, en beneficio de la comunidad, para cooperar con su participación al cumplimiento de los fines del bienestar social, de acuerdo con lo establecido en la Constitución de la República Bolivariana de Venezuela y en esta Ley”. 1.7 Objetivos del Servicio Comunitario El artículo 7 de la Ley de Servicio Comunitario del estudiante de educación superior (2005), establece como objetivos del Servicio Comunitario lo siguiente: ● Fomentar en el estudiante, la solidaridad y el compromiso con la comunidad como norma ética y ciudadana. ● Hacer un acto de reciprocidad con la sociedad. ● Enriquecer la actividad de educación superior, a través del aprendizaje servicio, con la aplicación de los conocimientos adquiridos durante la formación académica, artística, cultural y deportiva. ● Integrar las instituciones de educación superior con la comunidad, para contribuir al desarrollo de la sociedad venezolana. ● Formar, a través del aprendizaje servicio, el capital social en el país. Por lo dispuesto, en Ley de Servicio Comunitario del estudiante de educación superior (2005), en su artículo 12 referente a la función de las instituciones de educación superior: “El Ministerio de Educación Superior y las instituciones de 11 educación superior en coordinación, deben programar seminarios, cursos o talleres sobre la realidad comunitaria, a fin de capacitar al personal académico y estudiantil para la ejecución del Servicio Comunitario, a fin de preparar a los coordinadores, asesores y estudiantes en sus responsabilidades, metas y propósitos para la realización del Servicio Comunitario”. Y en su artículo 13: “Las instituciones de educación superior facilitarán las condiciones necesarias para el cumplimiento del Servicio Comunitario, ofertando al estudiante los proyectos para su participación”. El artículo 15, de la ya referida ley, establece: “Las instituciones de educación superior tendrán como atribuciones: ● Garantizar que los proyectos aprobados por la institución, estén orientados a satisfacer las necesidades de la comunidad. ● Ofertar a los estudiantes de educación superior los proyectos existentes, según su perfil académico. ● Celebrar convenios para la prestación del Servicio Comunitario, con el sector público, privado y las comunidades. ● Expedir la constancia de culminación de prestación del Servicio Comunitario. ● Elaborar los proyectos de acuerdo al perfil académico de cada disciplina y a las necesidades de las comunidades. ● Brindar al estudiante la asesoría necesaria para el cumplimiento del Servicio Comunitario. ● Elaborar su reglamento interno para el funcionamiento del Servicio Comunitario. Ofrecer al estudiante reconocimientos o incentivos académicos, previa evaluación del servicio ejecutado. ● Determinar el momento de inicio, la duración, el lugar y las condiciones para la prestación del Servicio Comunitario. ● Adaptar la duración del Servicio Comunitario a su régimen académico. 12 ● Establecer convenios con los Consejos Locales de Planificación Pública, Consejos Estadales de Planificación y Coordinación de Políticas Públicas, instituciones y organizaciones públicas o privadas y comunidad organizada entre otros. ● Evaluar los proyectos presentados por los sectores con iniciativa, a objeto de ser considerada su aprobación. ● Establecer las condiciones necesarias para la ejecución de los proyectos. ● Garantizar de manera gratuita, la inscripción de los estudiantes de educación superior en los proyectos ofertados”. La Facultad de Ciencias para cumplir con los lo establecido en la Ley, y en concordancia con la dispuesto por el Reglamento Interno del Servicio Comunitario del estudiantado de la Universidad Central de Venezuela, emanado del Consejo Universitario, establece los actores involucrados en el Servicio Comunitario de la Facultad de Ciencias para cumplir con los objetivos. 1.8 Actores involucrados en el Servicio Comunitario de la Facultad Ciencias El Servicio Comunitario de la Facultad de Ciencias está conformado por distintos usuarios los cuales se encargan de realizar diferentes tareas, haciendo que funcione dicha unidad. A continuación, se describen cada uno de estos usuarios (Acosta, 2011): 1.8.1 Comisión de Servicio Comunitario La Comisión de Servicio Comunitario está conformada por distintos docentes que representan a cada una de las licenciaturas (Acosta, 2011). Las funciones de esta comisión son: 13 ● Cumplir y hacer cumplir la Ley de Servicio Comunitario de Educación Superior. ● Recibir, evaluar y avalar los proyectos de Servicio Comunitario. ● Analizar y evaluar el impacto en las comunidades, con la prestación del Servicio Comunitario. ● Estudiar y dar respuestas a las solicitudes estudiantiles relacionadas con el Servicio Comunitario. ● Propiciar espacios de encuentro entre la facultad y organismos públicos y privados, comunidades organizadas, gremios y personas naturales o jurídicas interesadas en proyectos de Servicio Comunitario. 1.8.2 Unidad de Servicio Comunitario A continuación, se describe las funciones que debe cumplir la Unidad de Servicio Comunitario (Acosta, 2011): ● Planificar, coordinar y ejecutar actividades dirigidas a estudiantes y profesores de la Facultad de Ciencias de la Universidad Central de Venezuela. ● Coordinar la inscripción en el Servicio Comunitario y la expedición de constancias de aprobación. ● Planificar las acciones para lograr la adecuada ejecución de los proyectos de Servicio Comunitario. ● Planificar inicio, duración, lugar y condiciones para la ejecución de los proyectos de Servicio Comunitario. ● Coordinar el registro, seguimiento y evaluación académica del Servicio Comunitario. ● Mantener actualizada la información de los proyectos de Servicio Comunitario: número, tipo, profesores, alumnos, estado, resultados obtenidos. 14 ● Preparar el anteproyecto de presupuesto anual. ● Gestionar la firma de convenios. 1.8.3 Tutores académicos Los tutores académicos son profesores de la Universidad Central de Venezuela y, personas que se encuentren preparadas para tal fin (Acosta, 2011). Los tutores académicos tienen diferentes deberes y atribuciones, los cuales son: ● Prestar asesoría adecuada y oportuna a sus prestadores de Servicio Comunitario. ● Establecer, con el responsable del proyecto y la comunidad, los detalles del plan de trabajo a ejecutar. ● Remitir informe a la unidad de Servicio Comunitario sobre el desempeño de los prestadores. ● Revisar, evaluar y firmar el informe final presentado por el prestador de Servicio Comunitario. 1.8.4 Tutores comunitarios Los tutores comunitarios son aquellos encargados de supervisar a los prestadores en la comunidad asignada, entre sus deberes están: ● Brindar asesorías a los prestadores de Servicio Comunitario, referente a las funciones que debe cumplir en la comunidad. ● Verificar que los prestadores de Servicio Comunitario cumplan el horario establecido adecuadamente. ● Revisar, firmar y sellar el informe final con sus horas anexas. 15 1.8.5 Prestadores de Servicio Comunitario Los prestadores de Servicio Comunitario “son aquellos estudiantes de educación superior que cursan estudios de formación profesional, y deben realizar el Servicio Comunitario aplicando conocimientos científicos, técnicos, culturales, deportivos y humanísticos, adquiridos durante su formación académica en beneficio de la comunidad, para cooperar con su participación al cumplimiento de los fines de bienestar social” (Ley de Servicio Comunitario del Estudiante de Educación Superior, 2005). Son obligaciones de los prestadores del Servicio Comunitario, según el artículo 18 de la Ley de Servicio Comunitario de la Educación Superior: ● Realizar el Servicio Comunitario como requisito para la obtención del título de educación superior. Dicha labor no sustituirá las prácticas profesionales incluidas en los planes de estudio de las carreras de educación superior. ● Acatar las disposiciones que se establezcan en los convenios realizados por las instituciones de educación superior. ● Actuar con respeto, honestidad y responsabilidad durante el Servicio Comunitario. ● Acatar las directrices y orientaciones impartidas por la coordinación y el asesor del proyecto para el cumplimiento del Servicio Comunitario. ● Cumplir con el Servicio Comunitario según lo establecido en esta Ley y sus reglamentos. ● Cursar y aprobar previa ejecución del Servicio Comunitario, un curso, taller o seminario sobre la realidad de las comunidades. 16 CAPÍTULO 2 TECNOLOGÍAS Y MÉTODO DE DESARROLLO UTILIZADOS EN LA SOLUCIÓN En este capítulo se propone la solución para el problema y se presentan algunas de las tecnologías más relevantes a ser utilizadas para implementar esta solución. Como también, se explicará la implementación y funcionamiento del Modelo-Vista-Controlador (MVC) con las tecnologías utilizadas en la solución y, por último, se fundamentará la razón del uso del método de desarrollo utilizado en la solución, AgilUs. 1.2 Aplicación Web En la ingeniería de software se denomina aplicación Web a aquellas aplicaciones que los usuarios pueden utilizar accediendo a un Servidor Web a través de Internet o de una Intranet mediante un navegador Web (Shklar y Rosen, 2009). Una ventaja significativa de las aplicaciones Web es que deberían funcionar igual independientemente de la versión del sistema operativo instalado en el cliente. 2.1.1 Estructura de una aplicación Web El funcionamiento de las aplicaciones Web es un ejemplo típico de la arquitectura cliente-servidor, en donde múltiples clientes se conectan a un servidor en forma simultánea. Esta arquitectura representa un modelo de aplicación distribuida, donde las tareas se dividen entre los proveedores de recursos (servidores) y los entes que realizan peticiones (clientes), los cuales se guían por un conjunto de reglas en su comunicación (protocolo HTTP). 17 Figura 2.1 Arquitectura cliente-servidor Las peticiones son realizadas por el cliente a un servidor. Estas peticiones son hechas a través de una conexión de red, y para ello se usa el protocolo HTTP. Una vez que se solicita esta petición mediante el protocolo HTTP y la recibe el servidor, éste procesa la petición y envía de vuelta la respuesta, a través del protocolo HTTP, al navegador que hizo la solicitud. Como se muestra en la figura 2.1. Una vez que se entrega la respuesta al cliente, la conexión entre el navegador y el servidor Web se rompe, es decir que la lógica del negocio en el servidor solamente se activa por la ejecución de los scripts de las páginas solicitadas por el navegador (en el servidor, no en el cliente). En el desarrollo de una aplicación Web existen tecnologías que se ejecutan del lado del cliente y otras que se ejecutan del lado del servidor. A continuación, se describen las tecnologías del cliente y tecnologías del servidor utilizado en el desarrollo de la aplicación Web de la investigación. 2.2 Tecnologías del cliente 18 Las tecnologías del cliente se refieren a aquellas operaciones que son realizadas por un cliente Web, por excelencia es el navegador Web. La programación del lado del cliente tiene como principal ventaja que la ejecución de la aplicación se delega al cliente, con lo cual se evita recargar al servidor de trabajo, el servidor solo envía el código, y es tarea del navegador interpretarlo. Existen un conjunto de estándares Web, definidos por el W3C, que todo navegador debería implementar. También, existen un conjunto de tecnologías no estándar que algunos navegadores implementan para la construcción de aplicaciones avanzadas y acceso a contenido multimedia. El W3C (World Wide Web Consortium) es una comunidad internacional que desarrolla estándares abiertos que aseguran el crecimiento de la Web a largo plazo: HTML & CSS, Scripting and Ajax, Audio & Video, Gráficos, Accesibilidad, Servicios Web, Web Semántica, XML. 2.2.1 Lenguaje marcado de Hipertexto (HTML) Según W3C, Lenguaje de Etiquetado de Hipertexto (HyperText Markup Language). Es un lenguaje comúnmente utilizado para la publicación de hipertexto en la Web y desarrollado con la idea de que cualquier persona o tipo de dispositivo pueda acceder a la información en la Web. HTML utiliza etiquetas que marcan elementos y estructuran el texto de un documento. Las etiquetas indican al navegador Web la forma y estructura (presentación) que tendrá el texto, las imágenes y los videos colocados en la página Web. La funcionalidad del HTML es tan sencilla que puede ser creado y editado en cualquier editor de textos básicos. También puede editarse en procesadores 19 de textos, software de diseño Web o aplicaciones Web directamente. Al escribir código de este estilo, se debe guardar el documento con la extensión htm o html. De esta manera podrán ser mostrados por cualquier navegador Web. Este lenguaje tiene otra variante, Lenguaje de Marcado Hipertextual Extensible o XHTML, por sus siglas en inglés Extensible HyperText Markup Language que es una forma actualizada y mejor estructurada de escribir HTML. 2.2.2 Hojas de Estilo en Cascada (CSS) Según W3C. Hojas de Estilo en Cascada (Cascading Style Sheets), es un mecanismo simple que describe cómo se va a mostrar un documento en la pantalla, o cómo se va a imprimir, o incluso cómo va a ser pronunciada la información presente en ese documento a través de un dispositivo de lectura. Esta forma de descripción de estilos ofrece a los desarrolladores el control total sobre estilo y formato de sus documentos. CSS se utiliza para dar estilo a documentos HTML y XML, separando el contenido de la presentación. Los Estilos definen la forma de mostrar los elementos HTML y XML. CSS permite a los desarrolladores Web controlar el estilo y el formato de múltiples páginas Web al mismo tiempo. Cualquier cambio en el estilo marcado para un elemento en la CSS afectará a todas las páginas vinculadas a esa CSS en las que aparezca ese elemento. CSS funciona a base de reglas, es decir, declaraciones sobre el estilo de uno o más elementos. Las hojas de estilo están compuestas por una o más de esas reglas aplicadas a un documento HTML o XML. La regla tiene dos partes: un selector y la declaración. A su vez la declaración está compuesta por una propiedad y el valor que se le asigne. 2.2.3 JavaScript 20 Es un lenguaje de programación utilizado principalmente en el desarrollo de páginas Web dinámicas. Este es un lenguaje de programación interpretado, por lo que no se necesita compilar los programas antes de ser ejecutados. Es un lenguaje basado en objetos, y se caracteriza por ser un lenguaje basado en prototipos con tipiado débil y dinámico con funciones de primera clase. Todos los navegadores modernos interpretan el código Java Script integrado dentro de las páginas Web. 2.3 Tecnologías del servidor Las tecnologías del servidor son aquellas tecnologías que son usadas para brindar soporte a los requerimientos del lado del cliente y que son implementadas directamente en el servidor en el contexto del desarrollo de una aplicación Web. El servidor realiza operaciones para generar respuesta a las peticiones del usuario cuando la información o funciones a las que éste quiere acceder no están disponibles en el lado del cliente. El propósito principal de las tecnologías que se encuentran del lado del servidor es que permiten modificar el contenido de una aplicación Web de forma online al crear una interfaz dinámica entre el cliente y el servidor, mediante el uso de lenguajes de programación. A continuación, se describen uno de ellos: 2.3.1 Java Server Page (JSP) En una página JSP se entremezclan bloques de HTML estáticos, y HTML dinámico generados con Java que se ejecutan en el servidor. 21 Una página JSP puede procesar formularios Web, acceder a bases de datos y redireccionar a otras páginas. Las páginas JSP son transformadas a un Servlet y después compiladas. El contenedor JSP proporciona un motor que interpreta y procesa una página JSP como un Servlet (en tomcat, dicho motor se llama jasper). Al estar basadas en los Servlets, las distintas peticiones a una misma página JSP son atendidas por una única instancia del Servlet. 2.3.1.1 Características de JSP  Permiten separar la parte dinámica de la estática en una página Web.  Las páginas JSP se almacenan en el servidor en archivos con extensión .jsp.  El código JSP es java y se encierra entre: <% y %>, por ejemplo: <H1>Hora: <%= new java.util.Date() %></H1>  En una página JSP hay varios objetos implícitos (predefinidos): request, response, out, session, application, config, pageContext, page y exception 2.3.1.2 Funcionamiento de JSP Una página JSP es básicamente una página Web con HTML tradicional y código Java incrustado. La extensión de fichero de una página JSP es ".jsp" en vez de ".html" o ".htm", y eso le indica al servidor que esta página requiere un tratamiento especial que se conseguirá con una extensión del servidor o un plug- in. El servidor Web comprueba si la página ha sido solicitada con anterioridad. En ese caso el Servlet correspondiente ya estará cargado en memoria. Si no es así, se notifica al motor de JSP y se generará un Servlet para la página. 22 Cuando un cliente solicita una página JSP, se ejecuta en el servidor el código JSP de la página, dando como resultado una página HTML que se fusiona con el HTML original, generando una página HTML de respuesta que será enviada al cliente. 2.3.2 Servlet Es una tecnología que se ejecuta en un servidor Web o contenedor JEE y permite crear aplicaciones Web dinámicas, es decir, le permite al usuario interactuar con la aplicación (hacer consultas, insertar y eliminar datos, entre otras cosas). Son pequeños programas escritos en Java que admiten peticiones a través del protocolo HTTP. Los Servlets reciben peticiones desde un navegador Web, las procesan y devuelven una respuesta al navegador, normalmente en HTML. Para realizar estas tareas podrán utilizar las clases incluidas en el lenguaje Java. Estos programas son los intermediarios entre el cliente (navegador Web) y los datos (BBDD). 2.3.2.1 Características de los Servlets  Los Servlets se utilizan para extender o implementar funcionalidades en un servidor.  Son módulos de software que se ejecutan dentro del entorno de un servidor y proveen servicios de tipo petición/respuesta.  Son componentes escritos en Java, situados en los servidores e independientes de cualquier protocolo y de cualquier plataforma.  Son los equivalentes en los servidores a los applets en el cliente. Sin embargo, a diferencia de los applets, los Servlets no tienen representación gráfica. 23  Los Servlets pueden estar en muchos tipos de servidores. Pero su uso más común es en servidores Web. Existen muchos servidores Web que soportan el uso de Servlets (JWS, Tomcat, JRun, Websphere, etc.).  Un Servlet se instancia la primera vez y se mantiene en memoria esperando nuevas invocaciones (el servidor Web tiene una máquina virtual java que es la que ejecuta el Servlet). 2.3.2.2 API de los Servlets Las clases relacionadas con los Servlets están en el paquete javax.Servlet que puede obtenerse a través de la instalación de J2EE o ya viene incorporado en algunos servidores Web. 24 Figura 2.2 Paquete javax.Servlet Un Servlet debe implementar la interfaz Servlet, la cual declara métodos que administran el Servlet y su comunicación con el cliente. Las clases ServletRequest y ServletResponse se encargan de recibir la información de petición del cliente y enviar la respuesta al mismo. A continuación, se muestra el funcionamiento de un Servlet genérico solicitado a través de un navegador. 1. El navegador (cliente) pide una página al servidor HTTP que es un contenedor de Servlets. 2. El Servlet procesa los argumentos de la petición, es decir, el contenedor de Servlets delega la petición a un Servlet en particular elegido de entre los Servlets que contiene. 3. El Servlet, que es un objeto java, se encarga de generar el texto de la página Web que se entrega al contenedor. 4. El contenedor devuelve la página Web al navegador (cliente) que la solicitó, normalmente en HTML. Por lo tanto, encontramos en una arquitectura Cliente-Servidor. Lo normal para esto es utilizar Apache Tomcat como contenedor de Servlets. Recordar que apache es un servidor HTTP. 25 Figura 2.3 Funcionamiento de un Servlet 2.3.3 Diferencias entre JSP y Servlet  En JSP, el código de presentación está separado de la lógica del programa, mientras que, en un Servlet, el código de presentación se compila dentro de la clase.  En una página JSP el código de presentación puede ser actualizado por un diseñador Web que no conozca Java.  Los Servlets se encuentran ya compilados, mientras que las páginas JSP se compilan bajo petición, lo que hace que la ejecución del Servlet sea algo más rápida (en la primera petición). 2.4 Servidor Web Un servidor Web es un programa que utiliza HTTP (Hypertext Transfer Protocol) para servir los archivos que forman páginas Web a los usuarios, en respuesta a sus solicitudes, que son reenviados por los clientes HTTP de sus computadoras. Apache Tomcat, es un contenedor de Servlets. Un contenedor de Servlets está pensado únicamente para tecnología Web (acceso vía HTTP). 26 2.5 Arquitectura Modelo-Vista-Controlador Las aplicaciones Web pueden desarrollarse utilizando cualquier arquitectura posible. La arquitectura del patrón Modelo-Vista-Controlador (MVC) es un paradigma de programación bien conocido para el desarrollo de aplicaciones con interfaz gráfica (GUI). El principal objetivo de la arquitectura MVC es aislar tanto los datos de la aplicación como el estado (modelo) de la misma, del mecanismo utilizado para representar (vista) dicho estado, así como para modularizar esta vista y modelar la transición entre estados del modelo (controlador). Las aplicaciones MVC se dividen en tres grandes áreas funcionales:  Modelo: Concentra las funcionalidades relacionadas con el Modelo de datos, esto es, el acceso y manipulación de depósitos informativos como Bases de Datos.  Vista: se basa en el aspecto gráfico que será empleado por la aplicación.  Controlador: empleado como un mediador entre el medio gráfico ("Vista") y el modelo ("Modelo"), coordina las acciones que son llevadas a cabo entre ambos. El propósito del MVC es aislar los cambios. Es una arquitectura preparada para los cambios, que desacopla datos y lógica de negocio de la lógica de presentación, permitiendo la actualización y desarrollo independiente de cada uno de los citados componentes. A continuación, se muestra un esquema del patrón utilizado en la implantación del desarrollo de la aplicación Web: 27 1. Hacer una petición (request). 2. Llama las reglas de negocio. 3. Accesa a la base de datos. 4. Devuelve resultado. 5. Determina la vista a mostrar. 6. Recibe respuesta (response) Figura 2.4 Arquitectura MVC 2.6 MySQL Las organizaciones actualmente, requieren de repositorios para el almacenamiento de sus datos, y contar con software robusto, seguro y eficiente para el procesamiento de estos datos. Un sistema de Base de Datos (BD) es básicamente un sistema para llevar registros, es decir, es un sistema cuya finalidad general es almacenar información y permitir a los usuarios recuperar y autorizar peticiones de información (Date, 2001). La principal ventaja de utilizar BD es que múltiples usuarios pueden acceder a ellas al mismo tiempo. La 28 administración de las Bases de Datos se realiza a través de un Sistema Manejador de Base de Datos. Se define a un sistema manejador de base de datos (SMBD), como una colección de datos interrelacionados y un conjunto de programas para acceder a dichos datos. La colección de datos, normalmente denominada base de datos, contiene información relevante para una empresa. El objetivo principal de un SMBD es proporcionar una forma de almacenar y recuperar la información de una base de datos de manera que sea tanto practica como eficiente (Silberschatz, 2002). Oracle Corporation, (2014). MySQL es un sistema de administración de bases de datos relacional que almacena y distribuye una gran cantidad de datos, típicos de una aplicación. Está basado en la arquitectura cliente-servidor, por lo que el servidor de base de datos puede estar asociado a múltiples clientes. Utiliza el lenguaje de consulta estructurado (SQL, del inglés Structured Query Language) para el acceso y manipulación de los datos. 2.8 La Metodología AgilUs La Metodología AgilUs, Acosta (2013), se basa en el concepto de usabilidad, en la necesidad de desarrollar software usable. Se fundamenta en el análisis centrado en el usuario y en el desarrollo iterativo e incremental, con el objetivo de evolucionar el software, a fin que éste alcance el mayor grado de usabilidad una vez culminado su desarrollo. AgilUs es una metodología de desarrollo iterativa e incremental que pone el mayor peso del desarrollo en la consecución de la usabilidad. Se centra en que la construcción y desarrollo de las interfaces de usuario no debe ser una adición estética que se da al final del desarrollo del sistema sino, muy por el contrario, el desarrollo de interfaces de usuario debe guiar las decisiones en Ingeniería de Software. En AgilUs son los usuarios, y no 29 el cliente ni los programadores quienes guían el desarrollo del proyecto. (Acosta, 2018). La Metodología AgilUs busca proporcionar un conjunto de actividades organizadas para construir la usabilidad en el diseño de interfaces de usuario durante el desarrollo de un producto de software. El proceso de desarrollo de software engloba las actividades de requisitos, análisis, prototipaje y entrega; así como las evaluaciones de usabilidad correspondientes a cada etapa del proceso. Se realizan en ciclos iterativos hasta alcanzar el producto final. En cada etapa del proceso de desarrollo de software, se incluyen actividades propias para la construcción de la usabilidad. Figura 2.5 Ciclo de vida de AgilUs CAPÍTULO 3 MARCO APLICATIVO 30 En este capítulo se describe el proceso de desarrollo de la Aplicación Web, el cual se llevó a cabo aplicando la metodología AgilUs. De acuerdo a la metodología, que consta de 4 fases: Requisitos, Análisis, Prototipaje y Entrega; en consecuencia, este capítulo está dividido de esta manera. En primer lugar, se describen las actividades y artefactos elaborados en la fase de requerimientos, entre los cuales se tienen tormenta de ideas, evaluación de sistema existentes, perfil de usuario y requerimientos funcionales y no funcionales. En segundo lugar, se describen las actividades elaboradas durante la fase de análisis, tales como modelos de casos de uso y objetos del dominio, prototipo en papel, guía de estilo y patrones de interacción. En tercer lugar, se describe el proceso de prototipaje del SIGA-USC, en el cual se describen las dos iteraciones llevadas a cabo durante esta fase y las actividades elaboradas en cada una de ellas. Por último, se describe la fase de entrega, en la cual se colocó en producción el sistema SIGA-USC, y se aplicaron las pruebas de aceptación del sistema por parte de los usuarios finales. 31 3.1 Fase I: Requisitos Figura 3.1 Requisitos: 1era. Fase de AgilUS En la primera fase del desarrollo de software se identifica los requerimientos del usuario a través de la elaboración de los artefactos propuestos por la metodología, los cuales para esta investigación comprenden tormentas de ideas, evaluación de sistemas existentes, perfiles de usuario y requerimientos funcionales y no funcionales. A continuación, se presentan los resultados obtenidos en esta fase. 3.1.1 Tormentas de ideas Reunidos en la Oficina de la Unidad de Servicio Comunitario de la Facultad de Ciencias de la UCV con el personal administrativo: coordinador, adjunta de la unidad y secretaria. Se procedió a explicarle la actividad que llevaríamos a cabo. Pensar y escribir en 10 minutos una lista de palabras relacionada con las personas y actividades involucradas en los procesos académicos-administrativos que se efectuaban en el Servicio Comunitario. Finalizado el tiempo, se procedió a discutir con los participantes las palabras escritas y se obtuvo la siguiente tormenta de ideas: 32 Figura 3.2 Nube de palabras Esta herramienta grupal sirvió en la obtención de ideas concerniente al tema de interés, El Servicio Comunitario, que se deben tomar en cuenta en la Aplicación Web. 3.1.2 Evaluación de Sistema existente La Unidad de Servicio Comunitario cuenta con una Aplicación Web que posee un módulo de estudiante para proceso automatizado de inscripción al Curso de Inducción y Proyecto de Servicio Comunitario, como también puede ver su historial en el Servicio Comunitario. En esta aplicación Web existen funcionalidades para procesar curso de inducción, tutores académicos, tutores comunitarios y proyectos comunitarios en un módulo de administrador. Este Sistema Web, trabaja conectada a una Base de Datos relacional (diseñada bajo MySQL y modelada con los estándares del Sistema de Gestión Académica CONEST), que permite el acceso a la información de los diferentes usuarios y procesos involucrados con los cursos de inducción y proyectos del Servicio 33 Comunitario. En la figura 2.6, se puede observar la interfaz principal de ingreso de la aplicación Web existente. Tomando en cuenta que la base de datos cumple con los estándares de CONEST, el diseño de las nuevas tablas para el almacenamiento de la solicitud estudiantil será, también implantadas en MySQL será modelada también bajo los estándares del Sistema de Gestión Académica CONEST. Todo eso se hará para mantener la integridad de la data almacenada en la base de datos y evitar inconveniente al momento de hacer uso de la data de estudiantes, tutores académicos, tutores comunitarios, comunidades y proyectos comunitarios en la base de datos existente actualmente. Otras de las razones de mantener estos estándares que posee CONEST, es que la Unidad de Servicio Comunitario solicita a la División de Control de Estudio en cada comienzo de semestre la información de los estudiantes que cumpla con los créditos exigidos para realizar el Servicio Comunitario. Esta información, es enviada por correo electrónico en un archivo para su posterior procesamiento. Entre las funcionalidades de la nueva aplicación es cargar a estudiantes, y se utilizará este archivo para cargar los estudiantes en la base de datos. Figura 3.3 Interfaz Principal de la aplicación USC 3.1.3 Perfiles de Usuario 34 En este trabajo, se ha identificado como usuarios de la aplicación Web al personal que labora en la Unidad de Servicio Comunitario Facultad de Ciencias, con conocimientos en el manejo de las Tecnologías de Información y Comunicación, en especial las aplicaciones Web y aplicaciones ofimáticas; con una frecuencia de uso diaria en días laborables. Los principales usuarios tienen el poder de tomar decisiones en la administración general del sistema, por lo que requieren conocer los procesos inherentes al Servicio Comunitario de la Facultad de Ciencias. A futuro, con el mantenimiento evolutivo de la aplicación, se espera que los perfiles de usuario se amplíen para incorporar: estudiantes, docentes e incluso tutores comunitarios. 3.1.4 Requerimientos funcionales y no funcionales Luego de realizar la etapa de requerimientos de la metodología en la cual se definieron los artefactos generados a partir de la realización de tormentas de ideas, evaluación de sistemas existentes y perfiles de usuario, descritos anteriormente, se obtuvo una lista de requerimientos funcionales para el desarrollo de la aplicación Web. Estos requerimientos se describen a continuación: 3.1.4.1 Requerimientos funcionales ● Crear un inicio de sesión para autenticarse en la aplicación Web. ● Crear un módulo administrativo, que permita: ▪ Gestión de tutores académicos ✔ Agregar ✔ Consultar ✔ Actualizar ✔ Eliminar ▪ Gestión de tutores comunitarios 35 ✔ Agregar ✔ Consultar ✔ Actualizar ✔ Eliminar ▪ Gestión de proyectos comunitarios ✔ Agregar ✔ Consultar ✔ Actualizar ✔ Eliminar ▪ Gestión de comunidades ✔ Agregar ✔ Consultar ✔ Actualizar ✔ Eliminar ▪ Gestión de usuarios ✔ Crear usuario ✔ Modificar perfil ▪ Crear componentes para solicitudes estudiantiles. ▪ Crear un componente de envíos de correos electrónicos. ▪ Generación de reportes. 3.1.4.1 Requerimientos no funcionales A partir de las discusiones realizadas entre mi persona y el personal de la USC, se definieron los requerimientos no funcionales que serán implementados en el desarrollo la aplicación Web. Uno de los más importantes es la usabilidad; en tal sentido, se hará énfasis en que la aplicación sea tolerante a fallas, eficiente 36 en cuanto al uso y que sea satisfactoria para el usuario, con la finalidad de ofrecer una excelente experiencia de usuario (UX). Otros requerimientos no funcionales a ser implementados en esta solución computacional son: fácil de mantener y escalable. 3.2 Fase II: Análisis Figura 3.4 Análisis: 2da. Fase de AgilUs En la etapa de Análisis de la metodología AgilUs se definieron los artefactos: modelo de casos de uso, objetos del dominio, prototipo en papel, guías de estilo y patrones de interacción, los cuales se describen a continuación. 37 3.2.1 Modelo de casos de uso El Modelo de Casos de Uso es usado para definir los posibles escenarios que se pueden ejecutar en un sistema. Las interacciones entre el usuario y el sistema son definidas a través de secuencias de acciones que describen el comportamiento del sistema. A continuación, se presenta los diferentes casos de uso de la Aplicación Web de Gestión de los procesos administrativos-académicos de la USC-FC. Nivel 0: Descripción de los actores e iteración con el sistema. Figura 3.5 Caso de uso: Nivel 0 En las siguientes tablas, se muestra la descripción de los actores que interactúan con la Aplicación Web de Gestión de los Procesos Académicos- Administrativos de la Unidad de Servicio Comunitario de la Facultad de Ciencias: Tabla 3.1 Descripción actor coordinador Actor: Jefe USC Caso de Uso: Generar reportes Tipo: Primario 38 Descripción: El actor jefe USC es el usuario que genera reportes del Servicio Comunitario. Tabla 3.2 Descripción actor coordinador Actor: Coordinador Caso de Uso: Gestionar tutores académicos, gestionar tutores comunitarios, gestionar proyectos, gestionar comunidades, gestionar usuarios, enviar correos, generar reportes. Tipo: Primario Descripción: El actor coordinador es el usuario que gestiona todos los procesos administrativos en la aplicación Web para la ejecución del Servicio Comunitario. Tabla 3.3 Descripción actor secretaria Actor: Secretaria Caso de Uso: Gestionar solicitudes estudiantiles. Tipo: Primario Descripción: El actor secretaria es el usuario que registra y lleva el seguimiento de las diferentes solicitudes estudiantiles realizada por los prestadores del Servicio Comunitario. Nivel 1: Casos de Uso principales. A continuación, se hace la descripción de los casos de uso principales Nivel 1, que representan las diferentes funciones de la Aplicación Web de Gestión Procesos Académicos - Administrativos de la Unidad de Servicio Comunitario de la Facultad de Ciencias: Tabla 3.4 Descripción del Caso de uso: Gestionar tutores académicos Caso de Uso: 1. Gestionar tutores académicos 39 Actores: Coordinador Relación: Asociación Descripción: Permite al coordinador gestionar a los docentes de la Facultad de Ciencias que sirvan como tutores académicos Precondición: El actor debe iniciar sesión. Figura 3.6 Casos de uso: Nivel 1 Tabla 3.5 Descripción del Caso de uso: 2. Gestionar tutores comunitarios Caso de Uso: 2. Gestionar tutores comunitarios Actores: Coordinador 40 Relación: Asociación Descripción: Permite al coordinador gestionar a las personas responsables de las comunidades que sirvan como tutores comunitarios a los prestadores del Servicio Comunitario. Precondición: El actor debe iniciar sesión. Tabla 3.6 Descripción del Caso de uso: Gestionar proyectos comunitarios Caso de Uso: 3. Gestionar proyectos comunitarios Actores: Coordinador Relación: Asociación Descripción: Permite al coordinador gestionar los diferentes proyectos comunitarios ejecutados por los prestadores del Servicio Comunitario. Precondición: El actor debe iniciar sesión. Tabla 3.7 Descripción del Caso de uso: Gestionar comunidades Caso de Uso: 4. Gestionar comunidades Actores: Coordinador Relación: Asociación Descripción: Permite al coordinador gestionar las comunidades donde los Prestadores de Servicio Comunitario realizan sus prácticas comunitarias. Precondición: El actor debe iniciar sesión. Tabla 3.8 Descripción del Caso de uso: Gestionar usuarios Caso de Uso: 5. Gestionar usuarios Actores: Coordinador Relación: Asociación 41 Descripción: Permite al coordinador gestionar a los usuarios que tendrán acceso a la Aplicación Web de Gestión y Seguimiento de los Procesos Administrativos de la Unidad de Servicio Comunitario. Precondición: El actor debe iniciar sesión. Tabla 3.9 Descripción del Caso de uso: Enviar correo Caso de Uso: 6. Gestionar usuarios Actores: Coordinador Relación: Asociación Descripción: Permite al coordinador enviar correos electrónicos individuales y por lista. Precondición: El actor debe iniciar sesión. Tabla 3.10 Descripción del Caso de uso: Cargar estudiantes Caso de Uso: 7. Cargar estudiantes Actores: Coordinador Relación: Asociación Descripción: Permite al coordinador cargar archivo enviando por Control de Estudio de la Facultad de Ciencias, de los estudiantes que cumpla con los requisitos de créditos exigidos para cumplir con el Servicio Comunitario. Precondición: El actor debe iniciar sesión. Tabla 3.11 Descripción del Caso de uso: Generar reportes Caso de Uso: 8. Generar reportes Actores: Coordinador, jefe USC Relación: Asociación 42 Descripción: Permite al coordinador y jefe USC generar reportes informativos de control y seguimiento de la ejecución del Servicio Comunitarios. Precondición: Los actores deben iniciar sesión. Tabla 3.12 Descripción del Caso de uso: Gestionar solicitudes estudiantiles Caso de Uso: 9. Gestionar solicitudes estudiantiles Actores: Secretaria Relación: Asociación Descripción: Permite a la secretaria de la Unidad de Servicio Comunitario procesar las solicitudes realizadas por los Prestadores del Servicio Comunitario. Precondición: El actor debe iniciar sesión. Tabla 3.13 Descripción del Caso de uso: Iniciar sesión Caso de Uso: 10. Iniciar sesión Actores: Coordinador, jefe USC, secretaria Relación: Include Descripción: Los actores deben ingresar usuario y contraseña, para tener acceso a la aplicación Web. Precondición: Los actores deben de estar registrados para en la aplicación Web para iniciar sesión. Nivel 2: Especificación de los Casos de Uso. Caso de Uso: Gestionar tutores académicos 43 En la figura 3.7, se puede observar la especificación de caso de uso Nivel 2, Gestionar tutores académicos y en las tablas 3.14 – 3.18, la descripción de cada uno de los casos de uso. Figura 3.7 Caso de uso: Nivel 2. Gestionar tutores académicos Tabla 3.14 Descripción del Caso de uso: Agregar Caso de Uso: 1.1 Agregar Actores: Coordinador Relación: Extend Descripción: Permite al coordinador agregar un nuevo tutor académico. Precondición: Gestionar tutores académicos. Tabla 3.15 Descripción del Caso de uso: Consultar Caso de Uso: 1.2 Consultar Actores: Coordinador Relación: Extend Descripción: Permite al coordinador consultar a un tutor académico. Precondición: Gestionar tutores académicos. 44 Tabla 3.16 Descripción del Caso de uso: Modificar Caso de Uso: 1.3 Modificar Actores: Coordinador Relación: Extend Descripción: Permite al coordinador actualizar los datos de un tutor académico. Precondición: Gestionar tutores académicos. Tabla 3.17 Descripción del Caso de uso: Eliminar Caso de Uso: 1.4 Eliminar Actores: Coordinador Relación: Extend Descripción: Permite al coordinador eliminar a un tutor académico. Precondición: Gestionar tutores académicos. 45 Caso de Uso: Gestionar tutores comunitarios En la figura 3.8, se puede observar la especificación de caso de uso Nivel 2, Gestionar tutores comunitarios y en las tablas 3.18 – 3.21, la descripción de cada uno de los casos de uso. Figura 3.8 Caso de uso: Nivel 2. Gestionar tutores comunitarios Tabla 3.18 Descripción del Caso de uso: Agregar Caso de Uso: 2.1 Agregar Actores: Coordinador Relación: Extend Descripción: Permite al coordinador agregar un nuevo tutor comunitario. Precondición: Gestionar tutores comunitarios. Tabla 3.19 Descripción del Caso de uso: Consultar Caso de Uso: 2.2 Consultar Actores: Coordinador Relación: Extend Descripción: Permite al coordinador consultar a un tutor comunitario. 46 Precondición: Gestionar tutores comunitarios. Tabla 3.20 Descripción del Caso de uso: Modificar Caso de Uso: 2.3 Modificar Actores: Coordinador Relación: Extend Descripción: Permite al coordinador actualizar los datos de un tutor comunitario. Precondición: Gestionar tutores comunitarios. Tabla 3.21 Descripción del Caso de uso: Eliminar Caso de Uso: 2.4 Eliminar Actores: Coordinador Relación: Extend Descripción: Permite al coordinador eliminar a un tutor comunitario. Precondición: Gestionar tutores comunitarios. Caso de Uso: Gestionar proyectos comunitarios En la figura 3.9, se puede observar la especificación de caso de uso Nivel 2, Gestionar proyectos comunitarios y en las tablas 3.22 – 3.25, la descripción de cada uno de los casos de uso. Tabla 3.22 Descripción del Caso de uso: Agregar Caso de Uso: 3.1 Agregar Actores: Coordinador Relación: Extend Descripción: Permite al coordinador agregar un nuevo proyecto comunitario. Precondición: Gestionar proyectos comunitarios. Tabla 3.23 Descripción del Caso de uso: Consultar 47 Caso de Uso: 3.2 Consultar Actores: Coordinador Relación: Extend Descripción: Permite al coordinador consultar a un proyecto comunitario. Precondición: Gestionar proyectos comunitarios. Figura 3.9 Caso de uso: Nivel 2. Gestionar proyectos comunitarios Tabla 3.24 Descripción del Caso de uso: Modificar Caso de Uso: 3.3 Modificar Actores: Coordinador Relación: Extend Descripción: Permite al coordinador actualizar los datos de un proyecto comunitario. Precondición: Gestionar proyectos comunitarios. 48 Tabla 3.25 Descripción del Caso de uso: Eliminar Caso de Uso: 3.4 Eliminar Actores: Coordinador Relación: Extend Descripción: Permite al coordinador eliminar a un proyecto comunitario. Precondición: Gestionar proyectos comunitarios. Caso de Uso: Gestionar comunidades En la figura 3.10, se puede observar la especificación de caso de uso: Nivel 2. Gestionar comunidades y en las tablas 3.26 – 3.29, la descripción de cada uno de los casos de uso. Figura 3.10 Caso de uso: Nivel 2. Gestionar comunidades Tabla 3.26 Descripción del Caso de uso: Agregar Caso de Uso: 4.1 Agregar Actores: Coordinador Relación: Extend Descripción: Permite al coordinador agregar una nueva comunidad. Precondición: Gestionar comunidades. Tabla 3.27 Descripción del Caso de uso: Consultar 49 Caso de Uso: 4.2 Consultar Actores: Coordinador Relación: Extend Descripción: Permite al coordinador consultar una comunidad. Precondición: Gestionar comunidades. Tabla 3.28 Descripción del Caso de uso: Modificar Caso de Uso: 4.3 Modificar Actores: Coordinador Relación: Extend Descripción: Permite al coordinador actualizar los datos de una comunidad. Precondición: Gestionar comunidades. Tabla 3.29 Descripción del Caso de uso: Eliminar Caso de Uso: 4.4 Eliminar Actores: Coordinador Relación: Extend Descripción: Permite al coordinador eliminar a una comunidad. Precondición: Gestionar comunidades. Caso de Uso: Gestionar usuarios En la figura 3.11, se puede observar la especificación de caso de uso: Nivel 2. Gestionar usuarios y en las tablas 3.30 y 3.31, la descripción de cada uno de los casos de uso. Tabla 3.30 Descripción del Caso de uso: crear Caso de Uso: 5.1 Crear Actores: Coordinador Relación: Extend Descripción: Permite al coordinador crear los usuarios para darle acceso a la Aplicación Web. Precondición: Gestionar usuarios. 50 Figura 3.11 Caso de uso: Nivel 2. Gestionar usuarios Tabla 3.31 Descripción del Caso de uso: Modificar perfil Caso de Uso: 5.2 Modificar perfil Actores: Coordinador Relación: Extend Descripción: Permite al coordinador modificar los perfiles de los usuarios de la Aplicación Web. Precondición: Gestionar usuarios. Caso de Uso: Cargar estudiantes En la figura 3.12, se puede observar la especificación de caso de uso: Nivel 2. Cargar estudiantes y en la tabla 3.32, la descripción de cada uno de los casos de uso. 51 Figura 3.12 Caso de uso: Nivel 2. Cargar estudiantes Tabla 3.32 Descripción del Caso de uso: Cargar archivo Caso de Uso: 7.1 Cargar archivo Actores: Coordinador Relación: Extend Descripción: Permite al coordinador cargar el archivo, enviado por Control de Estudios, de los estudiantes que cumple con los requisitos para realizar el Servicio Comunitario. Precondición: Cargar estudiantes. Caso de Uso: Generar reportes En la figura 3.13, se puede observar la especificación de caso de uso: Nivel 2. Generar reportes y en las tablas 3.33 - 3.37, la descripción de cada uno de los casos de uso. Tabla 3.33 Descripción del Caso de uso: tutores académicos Caso de Uso: 8.1 Tutores académicos Actores: Coordinador, jefe USC Relación: Extend Descripción: Permite al coordinador y jefe USC, generar los reportes de la cantidad de tutores académicos por semestres. Precondición: Gestionar reportes. 52 Figura 3.13 Caso de uso: Nivel 2. Generar reportes Tabla 3.34 Descripción del Caso de uso: Tutores comunitarios Caso de Uso: 8.2 Tutores comunitarios Actores: Coordinador, jefe USC Relación: Extend Descripción: Permite al coordinador y jefe USC, generar los reportes de la cantidad de tutores comunitarios por semestres. Precondición: Gestionar reportes. Tabla 3.35 Descripción del Caso de uso: Proyectos comunitarios Caso de Uso: 8.3 Proyectos comunitarios Actores: Coordinador, jefe USC Relación: Extend Descripción: Permite al coordinador y jefe USC, generar los reportes de la cantidad de proyectos comunitarios por semestres. Precondición: Gestionar reportes. Tabla 3.36 Descripción del Caso de uso: Comunidades 53 Caso de Uso: 8.4 Comunidades Actores: Coordinador, jefe USC Relación: Extend Descripción: Permit al coordinador y jefe USC, generar los reportes de la cantidad de comunidades donde se ha realizado Servicios Comunitarios, comunidades agregadas en el semestre y cantidad de comunidades. Precondición: Gestionar reportes. Tabla 3.37 Descripción del Caso de uso: Solicitudes estudiantiles Caso de Uso: 8.5 Solicitudes estudiantiles Actores: Coordinador, jefe USC Relación: Extend Descripción: Permite al coordinador y jefe USC, generar los reportes de las cantidades de solicitudes realizadas por el Prestador de Servicios Comunitarios. Precondición: Gestionar reportes. Caso de Uso: Gestionar solicitudes estudiantiles En la figura 3.14, se puede observar la especificación de caso de uso: Nivel 2. Gestionar solicitudes estudiantiles y en las tablas 3.38 - 3.43 la descripción de cada uno de los casos de uso. Tabla 3.38 Descripción del Caso de uso: cambio de tutor académico Caso de Uso: 9.1 Cambio de tutor académico Actores: Secretaria Relación: Extend Descripción: Permite a la secretaria USC cargar la solicitud de cambio de tutor académico. Precondición: Solicitudes estudiantiles. 54 Figura 3.14 Caso de uso: Nivel 2. Gestionar solicitudes estudiantiles Tabla 3.39 Descripción del Caso de uso: Cambio de tutor comunitario Caso de Uso: 9.2 Cambio de tutores comunitarios Actores: Secretaria Relación: Extend Descripción: Permite a la secretaria USC cargar la solicitud de cambio de tutor académico. Precondición: Solicitudes estudiantiles. Tabla 3.40 Descripción del Caso de uso: cambio proyectos comunitarios Caso de Uso: 9.3 Cambio de proyectos comunitarios Actores: Secretaria Relación: Extend Descripción: Permite a la secretaria USC cargar la solicitud de cambio de proyecto comunitario. Precondición: Solicitudes estudiantiles. Tabla 3.41 Descripción del Caso de uso: Cambio de comunidad 55 Caso de Uso: 9.4 Cambio de comunidades Actores: Secretaria Relación: Extend Descripción: Permite a la secretaria USC cargar la solicitud de cambio de comunidad. Precondición: Solicitudes estudiantiles. Tabla 3.42 Descripción del Caso de uso: Prórroga Caso de Uso: 9.5 Prórroga Actores: Secretaria Relación: Extend Descripción: Permite a la secretaria USC cargar la solicitud de prórroga del Servicio Comunitario. Precondición: Solicitudes estudiantiles. Tabla 3.43 Descripción del Caso de uso: Ayuda estudiantil Caso de Uso: 9.7 Ayuda estudiantil Actores: Secretaria Relación: Extend Descripción: Permite a la secretaria USC cargar la solicitud de la ayuda estudiantil realizada por los Prestadores del Servicio Comunitarios. Precondición: Solicitudes estudiantiles. 56 3.2.2 Modelo de Objeto del Dominio El Modelo de Objetos es una representación gráfica e intuitiva del sistema, es útil para determinar cuáles objetos van a tener alguna representación de la interfaz de usuario, tiene como idea central conceptualizar el dominio del problema en términos de objetos que interactúan, se modifican y responden a acciones, construyendo un modelo que simula el comportamiento del mundo real. Figura 3.13 Modelo objeto de dominio de la Aplicación Web En la figura 3.13, se puede observar las interacciones que tendrán entre sí los diferentes objetos, los cuales son: coordinador, jefe USC, secretaria, tutores, comunidades, proyectos, reportes y solicitudes. Estando dentro del sistema, al coordinador puede gestionar tutores, comunidades y proyectos. La secretaria, puede cargar solicitudes y una vez que estas solicitudes sean cargadas, al coordinador podrá aprobar o rechazar estas solicitudes. Como también, al coordinador y jefe USC pueden generar reportes dentro del sistema. 3.2.3 Prototipaje en papel 57 El prototipaje de papel es una técnica que se basa en una simulación de la interfaz de usuario hecha sobre papel con el objetivo de explorar los requerimientos de usuario y de la interfaz. El resultado obtenido es un prototipo de baja fidelidad que será refinado luego de la evaluación con el usuario. En la figura 3.14, se puede apreciar una muestra de la interfaz del inicio de sesión de la aplicación. Esta interfaz posee el formulario para ingresar usuario y contraseña; dos botones aceptar y limpiar. También, en la parte superior el texto de identificación del nombre del sistema. Figura 3.14 Prototipaje en papel. Inicio de sesión La figura 3.15, es un prototipo de la pantalla de Menú Principal al ingresar el coordinador. En la imagen, se puede observar las diferentes imágenes referentes al tipo de gestión: tutores académicos, solicitudes estudiantiles, usuarios, cargar estudiantes, enviar correo y generación de reportes. 58 Figura 3.15 Prototipaje en papel. Menú Principal Coordinador A continuación, se muestra en la figura 3.16 el prototipo de la pantalla de menú de operaciones, que contiene cuatros botones con el nombre de las operaciones a realizar: agregar, consultar, modificar y eliminar. Figura 3.16 Prototipaje en papel. Menú de Operaciones 3.2.4 Guía de estilo 59 Una guía de estilo es un documento que recopila directrices relacionadas con el aspecto de la interfaz de usuario que ofrece una aplicación, tales como: logotipo, la gama de colores a utilizar en la interfaz de usuario, fuentes, distribución de los elementos en los diálogos y aspectos de los estilos de interacción (menú, botones, enlaces). La adopción de guías de estilo específicas se puede establecer como parte de los requerimientos no funcionales o requerimientos de usabilidad. Las guías de estilo incorporan buenas prácticas en el diseño de interfaces de usuario y mejoran su calidad. A continuación, se presenta la propuesta de guía de estilo para la Aplicación Web de Gestión y Seguimiento de los Procesos Administrativos de la Unidad de Servicio Comunitario. 3.2.4.1 Logo Figura 3.17. Logo 3.2.4.2 Colores principales Figura 3.18. Colores principales 3.2.4.3 Tipografía Títulos: Sansation 60 Contenidos: Sans Serif 3.2.4.4 Estilos de Interacción Menú Figura 3.19 Menú de opciones Campos de textos Figura 3.20 Campos de textos 61 3.2.4.6 Botones Figura 3.21 Botones 3.3 Fase III: Prototipaje Figura 3.22 Prototipaje: 3era. Fase de AgilUs En esta fase se realizaron las siguientes actividades: Prototipaje Rápido y Evaluación Heurística. El prototipaje rápido: es una actividad que se llevó a cabo con los usuarios de la aplicación para la construcción de las interfaces gráficas. La Evaluación Heurística: se presentaron unas series de elementos contenidas en las interfaces gráficas, que son evaluadas por los usuarios y de acuerdo a esos resultados se mejoraron. Como última actividad en esta fase, se lleva a cabo un Prototipo Ejecutable, que es la puesta en marcha de la Aplicación Web, destacando que no es el producto final. 62 3.3.1 Prototipaje rápido Esta técnica está asociada a la idea de desarrollar diferentes conceptos propuestos mediante prototipos de la aplicación para su posterior evaluación. El desarrollo del prototipaje del sistema futuro puede ser de gran ayuda, permitiendo a los usuarios visualizar el sistema e informar sobre el mismo pudiéndose utilizar para aclarar opciones sobre los requerimientos de usuario y para especificar detalles de la interfaz de usuario a incluir en el sistema futuro. Los prototipos iterativos desarrollados podrán ser rápidamente reemplazados o modificados según los informes procedentes de otras evaluaciones a medida que se evoluciona en el desarrollo del producto. Se debe seleccionar a los usuarios apropiados para la validación del prototipo, intentando cubrir un amplio rango de usuarios dentro de la población objetivo y se prepararon tareas realistas en las que se ocupó a los usuarios mientras trabajen con el prototipo. Se instruye al usuario para trabajar a través de las tareas seleccionadas, interactuando y respondiendo al sistema de forma apropiada. Una vez que se ha analizado, resumido y evaluado la información reunida y las observaciones realizadas se determinó la severidad de los problemas identificados y se resumió las implicaciones de diseño y las recomendaciones para las mejoras e informar al equipo de diseño. Se presenta el diseño de un prototipo rápido que no será el definitivo, pero cuenta con un importante número de las características y funcionalidades ya discutidas y aprobadas por los usuarios de la aplicación Web. En tal sentido, se establece las funcionalidades del administrador que deben estar operativas, como son la gestión de: Tutores Académicos, Comunidades, Proyectos, Comunidades y Gestión de Usuarios. Luego se incluirán el resto de las funcionalidades previstas. A continuación, figura 3.23 de Inicio de Sesión: 63 Figura 3.23 Interfaz gráfica de Inicio de Sesión 64 A continuación, la pantalla del menú principal del administrador: Figura 3.24 Interfaz del Menú Principal del Administrador En la figura 3.24 se puede observar las funcionalidades mencionadas en el párrafo anterior, y las funcionalidades de Gestión de Solicitudes Estudiantiles, Cargar estudiantes, Enviar correos y Generar reporte como se mencionó su implementación será posteriormente. 3.3.2 Evaluación Heurística La evaluación heurística es un método de inspección cuyo objetivo es encontrar problemas de usabilidad en el diseño de la Interfaz de Usuario, tal que puedan ser atendidos como parte de un proceso de diseño iterativo. Puede ser realizada por personal no especializado e incluso por usuarios tipo. 65 Se tomaron como criterios de evaluación las heurísticas de Nielsen, siendo éstas las siguientes: H1: Diálogo natural y simple H2: Hablar el lenguaje del usuario H3: Minimizar la carga cognitiva H4: Consistencia H5: Feedback H6: Proveer claramente las salidas H7: Proveer Shortcuts H8: Mensajes de Error descriptivos H9: Prevención de Errores H10: Asistencia al Usuario La escala usada para la valoración de los problemas fue el siguiente: 0: No es un problema de Usabilidad 1: Problema cosmético 2: Problema menor 3: Problema mayor de Usabilidad; importante fijar solución 4: Usabilidad catastrófica, imperativo fijar solución La Evaluación Heurística fue realizada por un estudiante curso la materia Interacción Humano Computador (IHC), dictada en el 6to semestre de la carrera Licenciatura en Computación de la Facultad de Ciencias de la Universidad Central de Venezuela, y de un profesional experto en usabilidad. A cada una de las personas se le entregó una planilla, y procedieron a realizar el recorrido de la aplicación. 66 A continuación, en la Tabla 3.44 se exponen los problemas encontrados durante la evaluación: Tabla 3.44 Evaluación Heurística Problema Heurística Valoración Solución No ofrece opción para recuperar clave H3 3 Colocar recuperaciones o instrucciones como recuperar la clave. No diferencia los mensajes de error de mensajes de éxito. H8, H5 3 Desplegar mensajes de error en rojo, y de éxito en verde. No debe colocar nombre módulo en la interfaz de usuario H2 2 Eliminar subtítulo Nombre de procesos gestiones y gestionar inconsistentes. H4 2 Colocar todos los nombres en infinitivo. No se observa identificación UCV/propietario H1 3 Incorporar UCV en el logo. No hay pie de página y Copywrite H10 3 Incorporar pie de página. Cédula sin acento H1 2 Corregir palabra, agregar acento. No ofrece posibilidad de cambiar orden de la información H9 3 Ampliar búsqueda. No informa búsqueda fallida H8, H10 3 Dar feedback de búsqueda fallida. Acciones no funciona, editar y eliminar H9 4 Corregir procesos. El ícono Home a veces izquierda y otra derecha H4 3 Colocar ícono home siempre mismo lugar. Título de cada módulo diferente a lo que dice en pantalla principal H4 3 Corregir títulos. No se puede ver proyecto completo H4 2 Incorporar proceso para desplegar contenido completo. No funciona agregar, editar ni eliminar del H4 4 Corregir procesos 67 proceso comunidades, va a tutores Despliega Usuario: null H1 4 Corregir proceso. Muy larga paginación. H4 4 Incluir paginación más corta. En botón cancelar no funciona H4 4 Corregir proceso Los iconos de las acciones son una persona en todos los casos. H10 4 Cambiar iconos de forma apropiada. No funciona enviar correo y generar reporte. H4 4 Corregir proceso. Una vez realizadas las inspecciones por los evaluadores, se procedió a solucionar los problemas encontrados en la interfaz de usuario considerando las soluciones propuestas por ellos. La nueva versión de la interfaz de usuario se puede evidenciar en las interfaces resultantes y aprobadas por los usuarios finales. 68 3.4 Fase IV: Entrega Figura 3.25 Entrega: 4ta. Fase de AgilUs Esta es la última etapa de AgilUs, aquí se llevaron a cabo las pruebas de aceptación con los usuarios que harán uso de la aplicación Web. 3.4.1 Pruebas de aceptación Para llevar a cabo la verificación de la aplicación Web, se realizó una prueba de aceptación de todas las funcionalidades que ofrece el sistema en su versión de producción, a los tres usuarios que han estado involucrado en el proceso del desarrollo de la aplicación, quienes serán los usuarios finales del Sistema de Gestión de los Procesos Académicos – Administrativos de la Unidad de Servicio Comunitario (SIGA). Esto se hizo con el objetivo de detectar posibles fallas e inconsistencias. Se aplicó esta prueba a través de una encuesta, con las diez 10 que con una escala de valoración de Si o No. A continuación, se presenta cada de las preguntas con su respectivo grafico e interpretación del mismo: 69 1. ¿El proceso de autenticación para ingresar a la aplicación Web le pareció? Figura 3.26 Gráfico 1 Como se puede ver el gráfico 1 de la figura 3.26, el 100% de los usuarios le pareció fácil el proceso de ingreso a la ampliación Web. 2. ¿La información desplegada en el menú principal muestra las principales tareas que ofrece la aplicación? Figura 3.27 Grafico 2 En el gráfico 2 se muestra que el 100% de los usuarios están de acuerdo que el menú principal si se muestra las principales tareas que ofrece la aplicación. 3. ¿En cuanto a los procesos agregar, consultar, modificar y eliminar de las tareas Gestionar Tutores Académicos, Gestionar Comunidades y Gestionar Proyectos Comunitarios: ¿Logró visualizar la opción que permite realizar esas tareas? 100% Fácil Engorroso 100% Si No 70 Figura 3.28 Gráfico 3 En cuanto a las 4 funcionalidades de los procesos de Gestionar Tutores Académicos, Comunidades y Proyectos Comunitarios el 100% de los usuarios afirmaron que lograron visualizar las opciones que le permiten realizar estas tareas. 4. ¿El tiempo invertido en realizar las tareas coincide con al tiempo esperado por usted? Figura 3.29 Gráfico 4 En la figura 3.29 se puede observar, que el 67% de los usuarios piensa que el tiempo invertido en realizar las tareas coincide con al tiempo esperado por usted, mientras que un 33% dice que no. 5. ¿Las ayudas en pantalla para hacer las tareas provistas por la aplicación son apropiadas? 100% Si No 67% 33% Si No 71 Figura 3.30 Gráfico 5 En la figura 3.30 se observa que el 100% de los usuarios afirman que las ayudas en pantalla para hacer las tareas provistas por la aplicación son apropiadas. 6. ¿Los colores utilizados para la fuente, botones e interfaz le parecen adecuados? Figura 3.31 Gráfico 6 En la figura 3.31 se puede observar que el 100% de los usuarios entrevistados están de acuerdo con los colores utilizados para la fuente, botones e interfaz de la aplicación. 7. ¿La apariencia de la aplicación Web le parece agradable? 100% Si No 100% Si No 72 Figura 3.32 Gráfico 7 En la figura 3.32 se observa que el 100% de los usuarios están de acuerdo con la apariencia del sistema. 8. ¿Piensa usted que la aplicación Web es intuitiva? Figura 3.33 Gráfico 8 En la figura 3.33 se puede observar que el 100% de los usuarios entrevistados le parece que la aplicación desarrollada es intuitiva. 100% Si No 100% Si No 73 9. ¿La aplicación Web cumple con sus expectativas? Figura 3.34 Gráfico 9 En la figura 3.34 se puede observar que el 100% de los usuarios que probaron la aplicación Web cumple con sus expectativas. 10. ¿Recomendaría esta la aplicación Web? Figura 3.35 Gráfico 10 En la figura 3.35 se puede observar que el 100% de los usuarios recomendarían la aplicación Web desarrollada. Con el resultado de esta prueba de aceptación se puede concluir que la Aplicación Web para la Gestión de los Procesos Académicos – Administrativos de la Unidad de Servicio Comunitario posee un alto nivel de aceptación por parte de los usuarios del sistema SIGA-USC, con más del 95% de aceptación, cumpliendo 100% Si No 100% Si No 74 con las necesidades y requerimientos del usuario, en cuanto a la tolerancia a fallas, eficiencia al usar y que sea satisfactoria para el usuario, lo cual le ofrece una excelente experiencia de usuario (UX). 75 CONCLUISONES Y RECOMENDACIONES De acuerdo a los objetivos planteados en este Trabajo Especial de Grado y, con base en la solución de la aplicación Web propuesta para mejorar la eficiencia en los procesos académicos-administrativos de la Unidad de Servicio Comunitario de la Facultad de Ciencias se formularon las conclusiones siguientes: En primer término, fue posible el logro del objetivo general: El desarrollo de una aplicación Web para la gestión de los procesos administrativos-académicos de la Unidad de Servicio Comunitario, este objetivo se ha logrado satisfactoriamente, ofreciendo una herramienta que mejora la forma de llevar a cabo estos procesos en la Unidad, como lo estiman los usuarios finales. Todo esto se ha podido llevar a cabo, primeramente, por el apoyo del personal de la Unidad de Servicio Comunitario que ha estado involucrado en los diferentes procesos de desarrollo de la Metodologías AgilUs, como actores principales en las diferentes actividades de las fases de la metodología para el desarrollo y avance del mismo. Con la finalidad de lograr este objetivo general se logró alcanzar:  La identificación de los requerimientos funcionales y no funcionales de las actividades de la Unidad de Servicio Comunitario que se llevó a cabo durante la fase I: Requisitos. Estos requerimientos funcionales y no funcionales, se lograron llevar a cabo después de la realización de los artefactos propuesto por la metodología utilizada: tormentas de ideas, la evaluación del sistema existente y perfiles de usuarios. Dando como resultado, que fuese más sencillo identificar todas las funcionalidades que deberían llevar a cabo el sistema Web desarrollado, como fue la creación de un inicio de sesión para autenticarse en la aplicación Web. La creación de un módulo administrativo, para la gestión de tutores académicos, proyectos comunitarios y comunidades. En cuanto a los requerimientos no funcionales se logró el desarrollo de la usabilidad en la aplicación Web 76 desarrollada, ese se puede evidenciar en la buena experiencia y satisfacción de los usuarios con el uso de la aplicación.  El diseño del modelo lógico y físico de base de datos para el almacenamiento de la información de las solicitudes estudiantiles, se pudo llevar a cabo con la creación de las tablas para el almacenamiento de esta información e incorporase a la base de datos existente en la Unidad de Servicio Comunitario. Estas tablas se desarrollaron utilizando la misma estructura de la base de datos existente, y se incorporaron a través de la relación de tablas de forma satisfactoria.  El desarrollo de los diagramas de los procesos académico-administrativos de la Unidad de Servicio Comunitario, se llevaron a cabo en la fase II: Análisis. Donde se elaboraron diagramas de casos de uso de niveles 0, 1 y 2, donde se puede identificar la iteración de los usuarios con las funcionalidades del sistema desarrollado. Luego estos diagramas se llevaron a un prototipaje de papel, para dar un bosquejo de las diferentes interfaces del sistema.  La Implementación de los módulos gestión administrativa y solicitudes estudiantiles, se llevaron a cabo de manera satisfactoria. Como resultado se desarrolló los procesos de gestión de tutores académicos, gestión de proyectos Comunitarios y gestión de comunidades y sus funcionalidades (agregar, modificar, consultar y eliminar). También, se logró satisfactoriamente la creación del proceso de gestión de solicitudes estudiantiles. Estos procesos se lograron conectar a la base de datos para su correcto funcionamiento y llevarse de manera satisfactoria. La evaluación de los expertos y usuarios finales de la Aplicación Web para los Procesos Académicos-Administrativos de la Unidad de Servicio Comunitario 77 fue en líneas generales satisfactoria. Se llevaron a cabo la prueba de aceptación, arrojando como resultado la correcta la funcionalidad del módulo administrativo. Estos resultados fueron satisfactorios en cuanto a la funcionalidad y en cuanto a la usabilidad de sistema Web desarrollado, dando como respuesta la satisfactoria experiencia de los usuarios. En cuanto a la metodología propuesta, AgilUs, ha sido de gran utilidad en el desarrollo de SIGA-USC, porque ha permitido que se lleve a cabo de manera progresiva y orientada bajo sus cuatro fases, haciendo que los procesos de desarrollo sean mucho más fáciles y logrando satisfacción tanto para los usuarios como para desarrollador de la aplicación. El lenguaje utilizado fue apropiado ya que ofreció las librerías o módulos requeridos para el desarrollo de la aplicación, haciendo más fácil el desarrollo del mismo en cuanto a la conexión con la base de datos, diseño de la interfaz de usuarios e incorporación de funcionalidades dinámicas. Como recomendaciones para el futuro y nuevos trabajos de grado:  Luego de la presentación de este trabajo se seguirán mejorando las funcionalidades de los procesos desarrollados, y poner en funcionamiento el mismo en la unidad para sus posteriores evaluaciones y mejorar fallas y errores.  Para nuevo trabajo de grado se sugiere la creación del módulo de estudiante, para llevar a cabo el proceso de inscripción de los mismos al Servicio Comunitario y se integre la funcionalidad de realizar ellos mismos las solicitudes desde su usuario. 78 REFERENCIA BIBLIOGRÁFICA Acosta, A. E. (2011). AgilUs: Construcción ágil de la Usabilidad. Facultad de Ciencias. Universidad Central de Venezuela. Caracas, Venezuela. Acosta, A. E. (2018). AgilUs: una metodología ágil de desarrollo de software que incorpora la evaluación de la usabilidad. Facultad de Ciencias. Universidad Central de Venezuela. Caracas, Venezuela. Albuera, P. (2009). Software Propietario. Consultado en noviembre 2017 http://www.slideshare.net/pabloalbuera/presentations Canós, J. H.; Letelier, P, y Penadés, M.C. (s/f). Metodologías Ágiles en el Desarrollo de Software. Universidad Politécnica de Valencia, España. Date, C. (2001). Introducción a los Sistemas de Bases de Datos. México: Pearson Education. Figueroa, R. G.; Solís, C. J. y Cabrera, A. A. (s/f). Metodologías tradicionales vs a metodologías ágiles. Escuela de Ciencias en Computación. Universidad Técnica Particular de Loja, Ecuador. Gastelú, C. A. (2009). SMBD Sistemas Manejador de Base de Datos. Veracruz. Leon Shklar, Rich Rose. Arquitectura aplicación Web: Principios, protocolos y prácticas, 2da. Edición. Letelie, B. y Penadé, M.C. (2006). Metodologías ágiles para el desarrollo de software: eXtreme Programming (XP). Buenos Aires, Argentina. Ley de Servicio Comunitario del Estudiante de Educación Superior, publicada en la Gaceta Oficial de la República Bolivariana de Venezuela N° 38.272 de fecha 14 de septiembre de 2005. Mendoza, S. M. A. (2004). Metodologías De Desarrollo De Software. Informatizate. Perú. 79 Normativa Interna del Servicio Comunitario del Estudiante de la Facultad de Ciencias de la Universidad Central de Venezuela (2013). Normativa Interna del Servicio Comunitario del Estudiante de la Facultad de Ciencias de la Universidad Central de Venezuela (2017). Oracle Technology Network. (2011). Características y Ventajas de Oracle. Consultado en noviembre de 2017 http://docs.oracle.com/cd/E19593- 01/E22994/gizfh.html Reglamento Interno del Servicio Comunitario del Estudiantado de la Universidad Central de Venezuela (2006). Silberschatz, A., Korth, H., & Sudarshan, S. (2002). Fundamentos de Bases de Datos. España: McGraw-Hill. http://www.curricular.info.ve/servicio.html 80 Prueba de Aceptación Estimado usuario, muchas gracias por dedicar este espacio de su tiempo para realizar esta Prueba de Aceptación del Sistema SYGA. A continuación, se le presenta una serie de preguntas, las cuales se requiere que Ud. después que haga uso de la aplicación Web. El objetivo de esta actividad es medir el nivel de aceptación y su experiencia como usuario final de esta nueva aplicación para la Unidad de Servicio Comunitario. 1. ¿El proceso de autenticación para ingresar a la aplicación Web le pareció fácil? Si No 2. ¿La información desplegada en el menú principal muestra las principales tareas que ofrece la aplicación? Sí No 3. En cuanto a los procesos agregar, consultar, modificar y eliminar de las tareas Gestionar Tutores Académicos, Gestionar Comunidades y Gestionar Proyectos Comunitarios: ¿Logró visualizar la opción que permite realizar esas tareas? Sí No 4. ¿El tiempo invertido en realizar las tareas coincide con al tiempo esperado por usted? Sí No 81 5. ¿Las ayudas en pantalla para hacer las tareas provistas por la aplicación son apropiadas? Si No 6. ¿Los colores utilizados para la fuente, botones e interfaz le parecen adecuados? Si No 7. ¿La apariencia de la aplicación Web le parece agradable? Si No 8. ¿Piensa usted que la aplicación Web es intuitiva? Si No 9. ¿La aplicación Web cumple con sus expectativas? Si No 10. ¿Recomendaría esta la aplicación Web? Si No