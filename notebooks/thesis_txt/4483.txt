Caracas, Octubre de 2015 UNIVERSIDAD CENTRAL DE VENEZUELA FACULTAD DE CIENCIAS ESCUELA DE COMPUTACIÓN Módulo para la administración de procesos y actividades de la Gestión Académica de la Facultad de Ciencias de la Universidad Central de Venezuela Trabajo especial de grado presentado ante la ilustre Universidad Central de Venezuela por los Bachilleres: Corina Luongo C.I 19.441.733 Jhony Acevedo C.I 19.738.211 Para optar por el título de: Licenciados en Computación Tutora: Profa. Concettina Di Vasta 1 2 Agradecimientos Quisiéramos agradecer la participación y colaboración del personal de la División de Control de Estudios al ayudarnos atendiendo y respondiendo todas nuestras inquietudes. A la profesora Damaris Barrantes por todo su apoyo y disposición, finalmente extendemos un reconocimiento a todo el equipo del sistema CONEST por su dedicación y esmero con los desarrollos realizados en el sistema. Para nuestra tutora, la profesora Tina Di Vasta, nuestro más sincero agradecimiento por su interés en el proyecto, su dedicación y su disponibilidad siempre que la necesitamos, gracias por todo. A la profesora Mercy Ospina, por su excelente aporte en las sugerencias brindadas que hicieron nuestra presentación más dinámica y entendible. A nuestros compañeros Manuel, Junior, Emmanuel, Iraima, Flor, María, Abraham, Andrea, Gary, Jesús y Carlos con quienes compartimos no solo una gran amistad, sino también algunas de las mejores experiencias vividas a lo largo de todos estos años de estudios en la carrera. Corina Luongo & Jhony Acevedo A mis padres, por apoyarme y alentarme durante toda mi vida escolar y enseñarme lo que es ser estudiante; gracias por toda su guía, su ayuda y su amor. A mí querida editora por su invaluable ayuda en la corrección de esta tesis, aunque quieras permanecer anónima mereces reconocimiento, te quiero. Zol, José, Alexa sin ustedes yo no sería la misma, agradezco que nuestra amistad permanece a lo largo del tiempo y espero madure junto a cada uno de nosotros. Finalmente gracias Jhony por mantenerte constante a lo largo de este proyecto, ¡sí pudimos! Corina Luongo Quiero agradecer en primer lugar a mis padres, quienes han sido mi principal fuente de apoyo ante cualquier circunstancia que se me presenta en la vida. A mi hermano y mejor amigo William quien me conoce y comprende como solo pocas personas lo saben hacer. A Viviana quien ha sido mi gran amiga y confidente a lo largo de todos estos años de carrera, me supo apoyar y guiar incluso en los momentos más difíciles. A mis queridos Gabriela y Vladimir cuya amistad ha calado tanto en el tiempo, que ya la considero más que cualquier otra cosa, un lazo familiar. Al profesor Sergio, a quien estimo y con quien me siento profundamente agradecido, por toda la ayuda y apoyo brindado durante la realización de este TEG. A mis amigos: Ashley, Deisy, Emily, Laura, Jhonatan, Néstor y Gabriel por su amistad y apoyo brindado. Por último y no menos importante a mi compañera y amiga Corina, quien hizo mi primera experiencia laboral sumamente grata y enriquecedora tanto a nivel profesional como personal. De igual forma a su hermana Daniela, con quien he compartido gratos momentos y cuyos conocimientos ayudaron a mejorar el presente trabajo. Jhony Acevedo 3 Resumen La Gestión Académica se encarga de definir las tareas administrativas y académicas de una organización educativa. El propósito de la siguiente investigación consistió en el desarrollo de un módulo para el sistema CONEST 3.0 (CONtrol de ESTudios), que permita la configuración y administración de las actividades involucradas con los procesos de la Gestión Académica realizadas por la División de Control de Estudios (DCE), de la Facultad de Ciencias de la Universidad Central de Venezuela (UCV), ubicada en la ciudad de Caracas. Para ello fue necesaria la definición de los requerimientos que el personal administrativo necesita en el sistema y determinar los parámetros que pueden configurarse automáticamente a través de la aplicación web. Posteriormente se aplicaron cambios en la base de datos para almacenar la información relacionada con el módulo y se integró el nuevo modelo de las actividades con el ya existente. Se realizaron pruebas funcionales y de usabilidad que permiten comprobar el comportamiento del módulo y determinar el nivel de satisfacción de los usuarios con el producto acabado, finalmente se documentó el código del módulo en el sistema y se elaboró un Manual de Usuario y tutorial del mismo. Al centralizar todas las funciones disponibles y necesarias del sistema se permite realizar una autogestión de procesos, ayudando al personal de la DCE a simplificar la ejecución de los mismos, reutilizando la experiencia y conocimientos existentes para realizar la gestión sin necesidad de un extenso entrenamiento previo del personal que lo maneja. Se utilizó el método de desarrollo ágil, iterativo e incremental AgilUs como guía. Como resultado se obtuvo un módulo gestor de los procesos de Planificación, Inscripción y Calificación, apoyado por la tecnología con una mayor independencia y usabilidad, el cual mejora la ejecución de la Gestión Académica brindando el apoyo y guía necesaria sin importar el personal que lo maneje. Palabras claves: Módulo, AgilUs, Gestión Académica, DCE, CONEST 3.0 4 Índice general Capítulo 1. Planteamiento del Problema ............................................................. 11 1.1 Problema de Investigación .......................................................................... 11 1.2 Objetivos de la investigación ....................................................................... 12 1.2.1 Objetivo general ................................................................................... 12 1.2.2 Objetivos específicos ............................................................................ 12 1.3 Preguntas de Investigación ......................................................................... 13 1.4 Justificación................................................................................................. 14 Capítulo 2. Marco Conceptual ............................................................................. 15 2.1 Sistema CONEST ....................................................................................... 15 2.2 La Gestión Académica ................................................................................ 15 2.2.1 Ciclo Período Académico ..................................................................... 17 2.2.1.1 Proceso de Planificación ................................................................ 17 2.2.1.2 Proceso de Inscripción ................................................................... 19 2.2.1.3 Proceso de Calificación .................................................................. 22 2.2.2 Ciclo Promociones ................................................................................ 24 2.2.2.1 Proceso de Egreso......................................................................... 24 2.3 Aplicaciones web ........................................................................................ 26 2.3.1 Modelo cliente-servidor......................................................................... 27 2.3.2 Patrón de arquitectura Modelo-Vista-Controlador ................................ 29 2.3.3 Tecnologías empleadas en el desarrollo .............................................. 31 2.4 Tecnologías de lado del cliente ................................................................... 31 2.4.1 HTML5 .................................................................................................. 31 2.4.2 JavaScript ............................................................................................. 32 2.4.3 CSS3 .................................................................................................... 33 2.4.4 jQuery y jQuery-UI ................................................................................ 34 2.5 Tecnologías de lado del servidor ................................................................ 34 2.5.1 Ruby ..................................................................................................... 34 2.5.2 Ruby onRails ........................................................................................ 36 2.5.3 MySQL .................................................................................................. 36 2.6 Tecnologías del equipo de desarrollo ......................................................... 37 2.6.1 Asana ................................................................................................... 37 5 2.6.2 Git ......................................................................................................... 38 2.7 Marco Metodológico .................................................................................... 38 2.7.1 Manifiesto Ágil ...................................................................................... 39 2.7.2 Método AgilUs ...................................................................................... 40 2.7.3 Gestión de Procesos de Negocio ......................................................... 43 2.7.3.1 Notación y Modelo de Procesos de Negocio ................................. 44  Simbología de la notación BPMN ............................................................ 45 Capítulo 3. Marco Aplicativo ................................................................................ 48 3.1 Primera Iteración. Esquema general de la solución y desarrollo del Calendario Académico .......................................................................................... 49 3.1.1 Fase de Requisitos ............................................................................... 49 3.1.1.1 Tormenta de Ideas ......................................................................... 49 3.1.1.2 Requerimientos funcionales y no funcionales ................................ 50 3.1.1.3 Perfil de usuario ............................................................................. 52 3.1.1.4 Análisis de sistemas existentes ..................................................... 52 3.1.2 Fase de Análisis ................................................................................... 55 3.1.2.1 Modelo de Casos de Usos ............................................................. 55 3.1.2.2 Guía de Estilos ............................................................................... 58 3.1.2.3 Modelo del negocio ........................................................................ 58 3.1.2.4 Modelo de datos............................................................................. 59 3.1.2.5 Arquitectura de la Solución ............................................................ 60 3.1.3 Fase de Prototipaje .............................................................................. 61 3.1.3.1 Prototipos de baja fidelidad ............................................................ 61 3.1.3.2 Implementación de requerimientos ................................................ 64 3.1.4 Cierre de la iteración ............................................................................ 67 3.2 Segunda Iteración: Proceso de Inscripción y su integración al gestor del sistema. ................................................................................................................ 67 3.2.1 Fase de Análisis ................................................................................... 68 3.2.1.1 Modelo de Casos de Usos ............................................................. 68 3.2.1.2 Modelo de datos............................................................................. 71 3.2.2 Fase de Prototipaje .............................................................................. 73 3.2.2.1 Prototipos de baja fidelidad ............................................................ 73 3.2.2.2 Implementación de requerimientos ................................................ 77 3.2.3 Cierre de la iteración ............................................................................ 85 6 3.3 Tercera Iteración: Procesos de Planificación y Calificación. ....................... 85 3.3.1 Fase de Análisis ................................................................................... 85 3.3.1.1 Modelo de Casos de Usos ............................................................. 86 3.3.2 Fase de Prototipaje .............................................................................. 90 3.3.2.1 Prototipos de baja fidelidad ............................................................ 90 3.3.2.2 Implementación de requerimientos ................................................ 91 3.3.2.3 Evaluaciones de usabilidad ............................................................ 95 3.3.3 Cierre de la Iteración .......................................................................... 101 3.4 Cuarta Iteración: Manejo del Calendario Académico e integración de los procesos. ............................................................................................................ 102 3.4.1 Fase de Análisis ................................................................................. 102 3.4.1.1 Guías de Estilos ........................................................................... 102 3.4.1.2 Modelo de datos........................................................................... 102 3.4.2 Fase de Prototipaje ............................................................................ 108 3.4.2.1 Prototipos de baja fidelidad .......................................................... 108 3.4.2.2 Implementación de requerimientos .............................................. 113 3.4.3 Cierre de la Iteración .......................................................................... 116 3.5 Quinta Iteración: Funcionalidades finales del gestor y pruebas de aceptación del sistema ......................................................................................................... 116 3.5.1 Fase de Análisis ................................................................................. 116 3.5.1.1 Guía de Estilos ............................................................................. 117 3.5.1.2 Modelo de Datos .......................................................................... 117 3.5.2 Fase de Prototipaje ............................................................................ 118 3.5.2.1 Prototipos de baja fidelidad .......................................................... 119 3.5.2.2 Implementación de requerimientos .............................................. 122 3.5.3 Fase de Entrega ................................................................................. 127 3.5.3.1 Pruebas funcionales del gestor .................................................... 127 3.5.3.2 Pruebas de aceptación del gestor ................................................ 127 3.5.3.3 Cierre de la Iteración. Entrega del modulo ................................... 132 Conclusiones .......................................................................................................... 133 Trabajos futuros ..................................................................................................... 135 Referencias bibliográficas ...................................................................................... 136 Anexos ................................................................................................................... 138 7 Índice de figuras Figura 2.1 Ciclos de la Gestión Académica de la Facultad de Ciencias................... 17 Figura 2.2 Proceso de Planificación de la Gestión Académica ................................ 18 Figura 2.3 Proceso de Inscripción de la Gestión Académica ................................... 20 Figura 2.4 Proceso de Calificación de la Gestión Académica .................................. 22 Figura 2.5 Proceso de Egreso de la Gestión Académica ......................................... 24 Figura 2.6 Modelo cliente-servidor ........................................................................... 27 Figura 2.7 Arquitectura MVC .................................................................................... 30 Figura 2.8 Ciclo de vida del método AgilUs .............................................................. 42 Figura 2.9 Elementos Básicos de BPMN ................................................................. 47 Figura 3.1 Tormenta de ideas .................................................................................. 50 Figura 3.2 Casos de Uso del gestor CONEST ......................................................... 56 Figura 3.3 Modelo del negocio del ciclo Período Académico ................................... 59 Figura 3.4 Modelo de datos del gestor (v-1) ............................................................. 60 Figura 3.5 Arquitectura cliente-servidor con las tecnologías involucradas ............... 60 Figura 3.6 Prototipo: Vista principal del gestor (v-1) ................................................ 61 Figura 3.7 Interfaz calendario producción ................................................................ 62 Figura 3.8 Prototipo: Eventos para una fecha (v-1) .................................................. 63 Figura 3.9 Prototipo: Crear nuevo evento (v-1) ........................................................ 63 Figura 3.10 Prototipo: Editar evento (v-1) ................................................................ 64 Figura 3.11 Vista principal del módulo gestor (v-1) .................................................. 65 Figura 3.12 Vista eventos para una fecha (v-1) ....................................................... 65 Figura 3.13 Vista crear evento (v-1) ......................................................................... 66 Figura 3.14 Vista editar evento (v-1) ........................................................................ 67 Figura 3.15 Casos de Uso Proceso de Inscripción – Iteración 1 .............................. 68 Figura 3.16 Primeras modificaciones a Tablas del Modelo de datos del gestor ....... 71 Figura 3.17 Modelo de datos del gestor (v-2) ........................................................... 72 Figura 3.18 Prototipo: Vista principal del gestor (v-2) .............................................. 74 Figura 3.19 Prototipo: Vista de las actividades de los Procesos .............................. 75 Figura 3.20Prototipo: Eventos para una fecha (v-2) ................................................. 75 Figura 3.21 Prototipo: Ventana Modal para compartir eventos ................................ 76 Figura 3.22 Prototipo: Vista principal del gestor (v-2) _ Pestaña: Configuración Calendario ................................................................................................................ 77 Figura 3.23 Prototipo de Modal crear/editar feriado ................................................. 77 Figura 3.24 Vista principal del módulo gestor (v-2) .................................................. 78 Figura 3.25 Vista de actividades del proceso Inscripción ......................................... 78 Figura 3.26 Modal de la actividad Inscripción Nuevos ............................................. 79 Figura 3.27 Modal de la actividad Inscripción .......................................................... 79 Figura 3.28 Modal de la actividad Asignación de Aulas ........................................... 79 Figura 3.29 Vista de la actividad Configurar Preinscripción _ Pestaña: Preinscripción ................................................................................................................................. 80 8 Figura 3.30 Vista de la actividad Configurar Preinscripción _ Pestaña: Selección de estudiantes ............................................................................................................... 80 Figura 3.31 Vista de la actividad Modificación de Inscripción .................................. 81 Figura 3.32 Vista de la actividad Modificación de Inscripción_ Pestaña: Abrir Retiros ................................................................................................................................. 82 Figura 3.33 Vista de la actividad Generar Planillas de Inscripción ........................... 82 Figura 3.34 Ventana Modal: Detalles de los eventos ............................................... 83 Figura 3.35 Ventana Modal: Compartir Evento ........................................................ 83 Figura 3.36 Vista principal del gestor (v-2) _ Pestaña: Configuración Calendario ... 84 Figura 3.37Ventana Modal: Crear feriado ................................................................ 84 Figura 3.38 Casos de Uso Proceso de Inscripción - Iteración 2 ............................... 86 Figura 3.39 Casos de Uso Procesos de Planificación y Calificación - Iteración 1 .... 87 Figura 3.40Prototipo: Vista principal del gestor (v-2) _ Pestaña: Período Académico ................................................................................................................................. 91 Figura 3.41 Vista principal del gestor (v-2) _ Pestaña: Período Académico ............. 91 Figura 3.42 Vista de la actividad Permisos de Visualización .................................... 92 Figura 3.43 Vista de la Actividad Inscripción Nuevos (v-2) ...................................... 93 Figura 3.44 Vista de la Actividad Inscripción Nuevos (v-2) ...................................... 93 Figura 3.45 Vista de la actividad Configurar Preinscripción _Pestaña: Selección de estudiantes (v-2) ...................................................................................................... 94 Figura 3.46 Vista de la actividad Configurar Preinscripción _ Pestaña: Selección de estudiantes (v-2) ...................................................................................................... 95 Figura 3.47 Cuestionario Actividad 1........................................................................ 96 Figura 3.48 Cuestionario Actividad 2........................................................................ 97 Figura 3.49 Cuestionario Actividad 3........................................................................ 97 Figura 3.50 Cuestionario Actividad 4........................................................................ 98 Figura 3.51 Cuestionario Actividad 5........................................................................ 98 Figura 3.52 Cuestionario Actividad 6........................................................................ 99 Figura 3.53 Cuestionario pregunta número 14 ....................................................... 100 Figura 3.54 Vista principal del gestor analizada por Feng-GUI .............................. 101 Figura 3.55 Modelo de datos: tipo_status_actividad .............................................. 103 Figura 3.56 Segundas modificaciones a Tablas del Modelo de datos del gestor ... 106 Figura 3.57 Modelo de datos del gestor (v-3) ......................................................... 108 Figura 3.58 Prototipo: Vista principal del gestor _ Modificaciones ......................... 109 Figura 3.59 Prototipo: Vista principal del gestor (v-3) ............................................ 110 Figura 3.60 Prototipo: Vista principal del gestor_ Elemento: Línea de Tiempo ...... 110 Figura 3.61 Prototipo: Vista principal del gestor_ Elemento: Estado de Procesos . 111 Figura 3.62 Prototipo: Vista principal del gestor (v-3) _ Pestaña: Procesos (v-2) .. 112 Figura 3.63 Prototipo de las actividades de la vista principal del gestor ................ 113 Figura 3.64 Prototipo Detalles de actividad ............................................................ 113 Figura 3.65 Vista principal del gestor_ Elemento: Línea de tiempo ....................... 114 Figura 3.66 Vista principal del gestor _ Elemento: Estado de los procesos ........... 114 Figura 3.67 Vista principal del gestor (v-3) ............................................................. 114 Figura 3.68 Ventana Modal: Detalles de actividad ................................................. 115 9 Figura 3.69 Vista principal del gestor (v-3) _ Pestaña: Procesos (v-2) .................. 115 Figura 3.70 Modificación al Modelo de datos: Tabla actividad_ proceso ............... 118 Figura 3.71 Prototipo: Pestaña Eventos. Configuración de Días Feriados (v-1) .... 119 Figura 3.72 Prototipo: Pestaña Eventos. Configuración de Eventos Académicos (v-1) ............................................................................................................................... 120 Figura 3.73 Prototipo: Pestaña Eventos. Configuración de Contenido del Calendario (v-1) ........................................................................................................................ 121 Figura 3.74 Prototipo: Vista principal del gestor (v-3) _ Pestaña: Procesos (v-3) .. 121 Figura 3.75 Prototipo: Vista principal del gestor (v-3) _ Pestaña parámetros generales (v-1) ....................................................................................................... 122 Figura 3.76 Vista principal del gestor (v-3) _ Pestaña: Eventos - Feriados (v-1) . 123 Figura 3.77 Vista principal del gestor (v-3) _ Pestaña: Eventos - Académicos (v-1) ............................................................................................................................... 123 Figura 3.78 Vista principal del gestor (v-3) _ Pestaña: Eventos - Config. (v-1) ...... 124 Figura 3.79 Vista principal del gestor (v-3) _ Elemento: Calendario Académico ... 124 Figura 3.80 Vista principal del gestor (v-3) _ Pestaña: Procesos (v-3) ................. 125 Figura 3.81 Vista principal del gestor (v-3) _ Pestaña: Parámetros Generales ..... 127 Figura 3.82 Resultados de la primera prueba de aceptación ................................. 128 10 Índice de tablas Tabla 3.1 Perfil de usuario ....................................................................................... 52 Tabla 3.2 Análisis del sistema: Google Calendar ..................................................... 54 Tabla 3.3 Análisis del sistema: Asana ...................................................................... 55 Tabla 3.4 Descripción CU: Gestionar Procesos ....................................................... 56 Tabla 3.5 Descripción CU: Abrir Procesos ............................................................... 57 Tabla 3.6 Descripción CU: Cerrar Procesos ............................................................ 57 Tabla 3.7 Descripción CU: Configurar Parámetros .................................................. 57 Tabla 3.8 Descripción CU: Gestionar Calendario ..................................................... 57 Tabla 3.9 Descripción CU: Configurar Inscripción nuevos ....................................... 69 Tabla 3.10 Descripción CU: Configurar Preinscripción ............................................ 69 Tabla 3.11 Descripción CU: Ejecutar Algoritmo de Selección .................................. 69 Tabla 3.12 Descripción CU: Configurar Inscripción .................................................. 69 Tabla 3.13 Descripción CU: Ejecutar Asignación de Aulas ...................................... 70 Tabla 3.14 Descripción CU: Modificar Inscripción .................................................... 70 Tabla3.15 Descripción CU: Generar Planillas Inscripción ........................................ 70 Tabla 3.16 Descripción CU: Configurar Inscripción nuevos ..................................... 86 Tabla 3.17 Descripción CU: Configurar Preinscripción - Iteración 2 ........................ 87 Tabla 3.18 Descripción CU: Configurar Plantilla del Periodo Académico................. 88 Tabla 3.19 Descripción CU: Asociar Plantilla Periodo Académico ........................... 88 Tabla 3.20 Descripción CU: Permitir visualización de la Planificación ..................... 88 Tabla 3.21 Descripción CU: Generar calendario de Calificación .............................. 89 Tabla 3.22 Descripción CU: Configurar Calificación ................................................ 89 Tabla 3.23 Descripción CU: Generar planillas de notas ........................................... 89 Tabla 3.24 Estados de los Procesos y sus colores ................................................ 111 11 Capítulo 1. Planteamiento del Problema 1.1 Problema de Investigación La Gestión Académica se encarga de definir las tareas relativas a los aspectos administrativos y académicos de una organización educativa, relacionadas con docentes y estudiantes, en este caso particular de la Facultad de Ciencias de la Universidad Central de Venezuela (UCV), ubicada en la Ciudad Universitaria de Caracas. Compete también a la Gestión Académica las tareas de soporte, tanto de las áreas académicas que componen a la Facultad y que se llevan a cabo por la División de Control de Estudios (DCE) de la misma, como del servicio de la docencia que se imparte en sus diversos espacios. Desde hace varios años, la DCE de la Facultad de Ciencias lleva a cabo un conjunto de actividades pertenecientes a los procesos de la Gestión Académica, junto a esas responsabilidades se suma el préstamo de varios servicios que son muy importantes para la comunidad estudiantil, como la entrega de constancias de estudios, de notas aprobadas, de culminación de asignaturas, de buena conducta, entre otras solicitudes estudiantiles como reincorporaciones y retiro de asignaturas. En un principio los procesos de Planificación, Inscripción, Calificación y Egreso, que componen la Gestión Académica, con las actividades que los conforman así como las distintas solicitudes estudiantiles, eran llevados a cabo de forma manual por el personal de la DCE, dando como resultado una gran lentitud en la realización de los mismos, la posibilidad de cometer errores humanos tediosos de solucionar, además de generar gastos de materiales administrativos por las diferentes planillas y respaldos físicos que cada actividad requería. Debido a que los procesos de la Gestión Académica de la Facultad de Ciencias y el conjunto de sus actividades están bien definidas y se realizan de manera cíclica en cada período académico, se plantea la automatización de los mismos, lo que resultó en el desarrollo y posterior implementación, el 26 de febrero del 2007, del Sistema de Gestión Académica CONEST, el cual se actualizó a la versión CONEST 3.0 el 28 de abril de 2014. Este sistema ha ido progresando y actualmente se encuentran automatizadas la totalidad de las actividades de los procesos de Planificación, Inscripción, Calificación y Egreso, lo que ha permitido agilizar los tiempos de respuesta del personal de la DCE, facilitando el desarrollo de la Gestión Académica y la mejor utilización de los recursos, aprovechando las tecnologías que se tienen y minimizando los gastos de material administrativo. 12 La automatización de los procesos beneficia al personal administrativo encargado así como al personal docente y estudiantil que utiliza los servicios que le brinda el sistema; sin embargo surge una problemática que el sistema aún no resuelve y esa es la gestión de los procesos. Se debe aclarar que un gestor no es más que “la persona que se encarga de hacer que los trámites u operaciones se lleven a cabo” (ABC, Definicion ABC, 2007), permitiendo a una organización cumplir sus objetivos. Si bien el Sistema de Gestión Académica CONEST permite gestionar los procesos, esta gestión la sigue realizando el personal de la DCE de forma manual y sin un procedimiento establecido que los guie para lograr su trabajo de manera eficiente; aun cuando en el sistema se encuentran todas las actividades necesarias para llevar a cabo una autogestión. Autogestión es una palabra compuesta, donde “Auto es un prefijo que refiere aquello que es propio o en su defecto por sí mismo, en tanto, gestión implicará la dirección o la administración de una empresa o de un negocio” (ABC, Definicion ABC, 2007). Por ello, se plantea para la resolución de este problema la creación de un módulo de gestión en el sistema CONEST, el cual genere un aporte de valor, permitiendo el cambio de un gestor a una autogestión apoyada por la tecnología que sea más estructurada, sencilla e intuitiva. 1.2 Objetivos de la investigación 1.2.1 Objetivo general Desarrollar un módulo para el sistema CONEST 3.0 que permita la configuración y administración de las actividades involucradas con los procesos de la Gestión Académica en la Facultad de Ciencias de la Universidad Central de Venezuela. 1.2.2 Objetivos específicos  Determinar las actividades que pueden configurarse automáticamente a través de la aplicación web.  Definir los requerimientos que el usuario quiere que tenga el sistema. 13  Aplicar los cambios necesarios en la base de datos para almacenar la información relacionada con el módulo a desarrollar.  Desarrollar un módulo que permita gestionar las actividades inherentes a los procesos de Planificación, Inscripción y Calificación.  Ejecutar pruebas, funcionales que permitan comprobar que el comportamiento del módulo desarrollado sea el esperado y de usabilidad que permitan determinar el nivel de satisfacción de los usuarios con el producto final.  Integrar el modelo de las actividades ya existentes en el sistema CONEST 3.0 al módulo de gestión a desarrollar.  Documentar el código del módulo para la administración de procesos y actividades de la Gestión Académica del Sistema CONEST 3.0 1.3 Preguntas de Investigación ¿Qué beneficios se obtendrían con un gestor de actividades de los procesos de la Gestión Académica que se apoye en la tecnología dentro del sistema CONEST? ¿Cuáles indicadores facilitarían el seguimiento de las actividades que componen dichos procesos de la Gestión Académica en el sistema CONEST? ¿Cuál es la utilidad, para el personal de la DCE, de tener información sobre el progreso de un proceso de la Gestión Académica? ¿Qué ventajas tendría el medir el porcentaje de progreso de un proceso con base a la cantidad de actividades correspondientes al mismo que han sido finalizadas? 14 1.4 Justificación Un gestor es un rol usualmente ocupado por una persona que se encarga de hacer trámites u operaciones que se llevan a cabo de acuerdo a los procedimientos establecidos en una organización. Su aporte es esencial ya que si no estuviera no se conocerían los procesos o formas de actuar en cada caso. La organización de la DCE tiene como gestores a su personal administrativo para llevar a cabo la realización de la Gestión Académica, la cual se encarga de los aspectos relativos a las actividades administrativas y académicas relacionadas con docentes y estudiantes. La misma, abarca un conjunto de actividades relacionadas con procesos administrativos, los cuales se repiten sucesivamente a lo largo del año. Esta organización posee el sistema CONEST, el cual usa como herramienta para realizar los procesos necesarios y cumplir con sus funciones. CONEST se ha vuelto fundamental para el correcto desempeño de la Gestión Académica, pero no es suficiente para reemplazar el trabajo de un gestor entrenado en los procedimientos de la organización. El software del sistema ha sido desarrollado por diferentes grupos siguiendo una serie de estándares, sin embargo al desarrollar en paralelo cada grupo se encargaba de cumplir con sus actividades sin involucrase en el desarrollo de los otros, por ello no existe un seguimiento de lo realizado. Son muchas las funcionalidades que están desarrolladas completamente y que se pierden en el sistema, ya que el personal administrativo no posee una lista, un inventario, y la capacidad que es necesaria para conocer todas las funcionalidades disponibles debe ser muy alta, debido a la gran carga cognitiva inherente del sistema. Un gestor apoyado por la tecnología con la cual se pueda realizar una autogestión de procesos y que centralice en un mismo módulo todas las funciones disponibles y necesarias del sistema, ayuda al personal de la DCE a simplificar la ejecución de los mismos, reutilizando la experiencia y conocimientos existentes para poder realizar la gestión de los procesos a través del sistema, sin necesidad de un extenso entrenamiento previo del personal que lo maneja. Con esto se ofrece además la posibilidad de adaptar el sistema a otras Facultades. 15 Capítulo 2. Marco Conceptual En este capítulo se contendrán los conceptos más elementales asociados al desarrollo de aplicaciones web, los cuáles son necesarios abarcar debido al contexto en el que se desarrolla la solución propuesta para el problema planteado en el capítulo anterior. El sistema CONEST ha sido desarrollado como una aplicación web, por lo que su funcionamiento difiere al de las aplicaciones comunes que se usan en un ordenador. Las aplicaciones web se basan en una arquitectura cliente-servidor, en la cual como se puede deducir, existen dos partes importantes que deben interactuar para el correcto funcionamiento del sistema. A continuación se describe la arquitectura sobre la cual se basa la aplicación, así como los diversos componentes que la constituyen. 2.1 Sistema CONEST El sistema de Gestión Académica CONEST, nace como una iniciativa de la DCE en conjunto con los profesores Jossie Zambrano y Sergio Rivas de la escuela de Computación de la Facultad de Ciencias. Tuvo como meta principal la automatización de diversos procesos involucrados en la Gestión Académica de la Facultad de Ciencias de la Universidad Central de Venezuela, contando para ello con la ayuda de varios estudiantes que, mediante distintos Trabajos Especiales de Grado fueron dando forma al sistema que hoy en día es el principal en la Facultad por su gran utilidad y fácil acceso que incentiva la participación de forma activa de estudiantes, docentes y el personal administrativo que forman parte de la comunidad de la Facultad de Ciencias. El sistema CONEST, operativo desde el 26 de febrero de 2007, ha resuelto una problemática administrativa y desde el 28 de abril de 2014, con su versión más actual, CONEST 3.0, invita a su uso con la implementación de un diseño más intuitivo, una estructura más organizada y una mejora en la prestación de servicios. 2.2 La Gestión Académica La Gestión Académica puede ser dividida en dos ciclos importantes, uno relacionado a los Períodos Académicos y el otro a las Promociones; cada ciclo está compuesto por procesos. Un proceso dentro de la Gestión Académica es un conjunto de tareas o actividades que permiten administrar algún evento relacionado al ámbito académico de la institución. 16 Un Período Académico, que en el caso de la Facultad de Ciencias se estructura por semestre, puede ser del tipo regular o intensivo y consta de tres procesos: Planificación, Inscripción y Calificación. En un año se ejecutan normalmente dos períodos académicos regulares y uno intensivo. Un semestre regular se planifica para una duración de un mínimo de catorce a un máximo de dieciséis semanas, en las cuales se ofertan asignaturas pertenecientes a las seis licenciaturas que se dictan en la Facultad (Biología, Computación, Física, Geoquímica, Matemática y Química) y pertenecientes a la Coordinación Académica, sumando un aproximado de cuatrocientas secciones y una matrícula de tres mil estudiantes. Por otro lado, un período intensivo o verano se planifica para una duración de un mínimo de siete semanas, en las cuales se ofertan por lo general sólo asignaturas de servicio de las licenciaturas Matemática, Física y Química además del Departamento de Inglés. La matrícula es de aproximadamente ochocientos estudiantes y en promedio veinticinco secciones. El ciclo asociado a las Promociones se divide en dos tipos; promociones regulares y de opción docente. Una promoción regular tiene un promedio de egreso de ochenta a cien graduandos, se realiza dos veces al año, usualmente en el mes de Julio y en el mes de Diciembre, y están involucradas las seis licenciaturas de la Facultad de Ciencias. Una promoción por opción docente tiene un promedio de diez a quince graduandos, la fecha de realización es decidida por la Facultad de Humanidades y Educación en conjunto con la Secretaría de la UCV; las licenciaturas que participan son Biología, Física, Matemática y Química. La única función que realiza la DCE en este tipo de promoción es la verificación de los requisitos en los expedientes académicos de aquellos licenciados que quieren optar por la opción docente en la Facultad de Humanidades y Educación. En la Figura 2.1 se puede apreciar un resumen gráfico de los ciclos de la Gestión Académica. 17 Figura 2.1 Ciclos de la Gestión Académica de la Facultad de Ciencias 2.2.1 Ciclo Período Académico El ciclo de Período Académico se repite tres veces en un año, teniendo dos regulares y uno del tipo intensivo, todos ellos constan de tres procesos descritos a continuación. 2.2.1.1 Proceso de Planificación Este proceso consiste en la definición de la oferta académica para el período académico regular o intensivo, este se empieza a planificar aproximadamente tres meses antes de su inicio. La planificación semestral permite la ejecución de la Gestión Académica y tiene como fecha límite el día antes de la preinscripción de los estudiantes. El personal de la DCE inicia la planificación en el sistema CONEST, cuando esto ocurre se genera automáticamente, a partir de una plantilla existente, un semestre donde se agregan las asignaturas obligatorias de cada licenciatura de acuerdo al pensum que se encuentre activo, así como también el número inicial de secciones a ofertar por cada una según su historial, es decir, que el sistema se basa en la demanda que haya tenido dicha asignatura en el último período similar, correspondiente con el que se va a planificar. El proceso de planificación tiene la siguiente secuencia de actividades que se pueden visualizar en la Figura 2.2, las cuales se explican a continuación: 18 Figura 2.2 Proceso de Planificación de la Gestión Académica  Modificar plantilla del período: Consiste en establecer el valor de los parámetros correspondientes a la cantidad de secciones, cupo disponible, horario y si se requiere un aula por cada asignatura que se vaya a ofertar en el período, bien sea del tipo obligatoria, laboratorios, pasantías, métodos, seminarios o trabajo especial de grado. Todas esas asignaturas se encuentran pre configuradas en la plantilla, por lo que sólo varían algunos valores, sin embargo las asignaturas del tipo complementaria o del Programa de Cooperación Interfacultades (PCI), las configuran en su totalidad el personal de la DCE ya que la oferta de las mismas cambia constantemente.  Asociar plantilla a período: Una vez que se realiza la correspondiente modificación de la plantilla del período, se crea un nuevo período académico al cual se le asocia la plantilla ya modificada. Así mismo se le habilita la visualización y edición a el/los jefe(s) de departamento de cada escuela para que la puedan configurar.  Configurar planificación: Esta actividad la realizan los jefes de departamento de cada escuela. Consiste en establecer el valor de los parámetros correspondientes a la cantidad de secciones, docentes asignados a las mismas, cupo disponible, horario, si necesita preinscripción y si se requiere un aula por cada asignatura del tipo electiva que vaya a ofertar su 19 licenciatura en el período. Durante esta etapa el personal de la DCE puede habilitar la visualización de la planificación para los docentes.  Ejecutar Programación: Cuando se va a iniciar el proceso de inscripción, la planificación procede a convertirse en programación. Esto implica que únicamente el personal de la DCE está habilitado para realizar modificaciones importantes, mientras que los jefes de departamento solo podrán configurar los docentes asignados a las respectivas secciones. En este momento los estudiantes pueden visualizar la oferta académica. Este proceso posee actividades eventuales, las cuales no se hacen regularmente en el proceso, tales como:  Agregar nueva asignatura: Una vez que el Consejo de Escuela aprueba la creación de una nueva asignatura, se le proporciona a la DCE la información necesaria para cargarla en el sistema CONEST, de manera que esté disponible en la planificación. Esta actividad no suele realizarse con frecuencia y no se lleva a cabo si el período académico es del tipo intensivo. Cuando este proceso culmina, se considera que el período académico se encuentra en ejecución. 2.2.1.2 Proceso de Inscripción En este proceso los estudiantes solicitan las asignaturas que quieren cursar durante el período académico en curso. Las asignaturas que se pueden inscribir son aquellas que están ofertadas en la programación y el sistema toma en cuenta que los estudiantes cumplan los requisitos necesarios para inscribirlas. Durante este proceso, la mayor parte de las actividades están relacionadas con la población estudiantil, el personal de la DCE cumple con la labor de abrir y cerrar el proceso en las fechas correspondientes. El proceso de inscripción tiene la siguiente secuencia de actividades visualizadas en la Figura 2.3, las cuales se explican a continuación: 20 Figura 2.3 Proceso de Inscripción de la Gestión Académica  Inscripción de nuevos ingresos: Esta tarea aplica únicamente a los estudiantes que van a cursar por primera vez las asignaturas del primer semestre de una licenciatura en un período en la Facultad. Se requiere que una vez que el estudiante realiza su inscripción en la Secretaría de la Universidad, se dirija a la taquilla de la DCE a consignar sus recaudos para posteriormente registrarse en el sistema CONEST, donde se le piden sus datos personales y se le inscriben automáticamente las asignaturas correspondientes. Se les mantiene informados, vía correo electrónico, sobre la fecha de inicio de clases y cualquier evento de bienvenida al que deban asistir. Esta actividad no se realiza en los períodos académicos de modalidad intensivo.  Preinscripción: Se realiza antes de la inscripción. Consiste en efectuar un censo de los estudiantes que deseen cursar asignaturas de cupos limitados, por lo general las electivas y laboratorios que estén contemplados en la programación. Computación, Geoquímica y Química son las licenciaturas que ofertan asignaturas o laboratorios que requieren preinscripción. Sólo se pueden preinscribir aquellos estudiantes que cumplan los requisitos necesarios. Una vez finalizada la Preinscripción en el sistema se procede con la asignación de cupos de aquellos estudiantes que realizaron la preinscripción. 21 Esta decisión la toman las escuelas a través de algoritmos ya establecidos que se pueden personalizar por escuela y por asignatura acorde a reglas y criterios académicos, como eficiencia, promedio, cantidad de créditos y heurísticas que permiten, según su prioridad, el manejo de las asignaciones. Las listas de estudiantes aceptados en la preinscripción sirven de insumo para la inscripción.  Abrir inscripción: Esta actividad se ejecuta en el sistema una vez culmina la asignación de aceptados en la preinscripción. Con el proceso abierto los estudiantes que cumplan los requisitos pueden inscribir libremente las asignaturas de cupo ilimitado, mientras que en el caso de las de cupo limitado, dependerá del resultado de la preinscripción.  Asignación de aulas: Una vez culminada la inscripción, se asignan las aulas a las asignaturas. Se realiza automáticamente por sección mientras la asignatura tenga como requisito, en la programación, que esta requiere un espacio en el edificio de aulas.  Reservación de aulas: Inicia una vez concretada la actividad de inscripción y ocurre durante todo el semestre, finalizando una vez se reservan y asignan las aulas para los exámenes finales y de reparación en el proceso de Calificación. En esta actividad el personal docente puede reservar un aula, liberarla o cambiar la que ya tienen; de esta forma se obtiene la disponibilidad de las mismas generando una relación docente, asignatura y aula.  Modificación de inscripción: Esta actividad se realiza durante las primeras dos semanas del período académico, durante este tiempo los estudiantes pueden realizar solicitudes de extra créditos, paralelos o inscripción extemporánea, su aprobación se determina aplicando el reglamento de cada escuela. Una vez procesadas las solicitudes, el sistema envía un correo a los respectivos estudiantes informándoles sobre el resultado de las mismas. Asimismo, esta actividad abarca los retiros de las asignaturas teóricas y los laboratorios, los cuales se realizan a través del sistema y tienen una mayor duración que las solicitudes estudiantiles. Esta actividad no se lleva a cabo si el período académico es del tipo intensivo.  Generar planillas de inscripción: Actividad realizada una vez finalizado el proceso de inscripción, consiste en generar a través del sistema un lote de planillas por cada uno de los estudiantes inscritos en el período, por cada escuela. Esta planilla se anexa al expediente físico del respectivo estudiante. 22 2.2.1.3 Proceso de Calificación Este proceso convoca a los docentes a asignar las notas que obtuvieron los estudiantes inscritos en la(s) asignatura(s) que se dictaron en el período académico que está por finalizar. Dura dos semanas y finaliza cuando cada docente haya terminado de calificar, el último día de la semana de los exámenes de reparación. Debido a que existen asignaturas que pueden ser calificadas de forma extemporánea, como ocurre con las PCI, las complementarias, los Inglés y los exámenes de suficiencia, la calificación no la hace el docente directamente en el sistema, sino que, posterior al envío físico de notas a la DCE, es transcrita por el personal administrativo. Una vez culmina este proceso, se envían las planillas de calificación a la secretaría de la UCV como cierre oficial del período académico. El proceso de calificación tiene la siguiente secuencia de actividades que se pueden apreciar en la Figura 2.4, las cuales se describen con detalle a continuación: Figura 2.4 Proceso de Calificación de la Gestión Académica  Generar calendario de exámenes: El proceso de calificación empieza cuando el personal de la DCE, a través del sistema CONEST, planifica y genera el calendario de exámenes finales y de reparación para las asignaturas obligatorias, el mismo se realiza dos semanas antes de la culminación de las clases del período. El calendario tiene una duración de dos semanas. 23  Notificar apertura de la calificación: Se envía un correo general a todos los docentes informándoles que el proceso de calificación está en curso y se les proporciona la fecha final que tienen para calificar a sus estudiantes en el sistema.  Recordatorio de calificación: Esta actividad se aplica en el transcurso de todo el período de calificación; tiene por objetivo prevenir que el proceso finalice con secciones calificadas de forma incompleta. Consiste en enviar vía correo electrónico un recordatorio a aquellos docentes que no hayan completado sus nóminas de calificación para que terminen de llenarlas, informándoles nuevamente que el proceso se encuentra abierto así como la fecha de cierre del mismo.  Verificar calificación: Una vez que un docente ha calificado total o parcialmente a los estudiantes que cursaron la asignatura de la que es responsable, el sistema le envía un correo electrónico informándole que su calificación ha sido procesada y en caso de ser parcial le recuerda la cantidad de estudiantes que le falta por calificar. Este correo sirve de verificación de la acción realizada y funciona como medida de seguridad, alertando al docente de algún problema si éste no ha calificado. Ya cerrado el proceso de Calificación, se verifican las asignaturas por licenciatura del período académico transcurrido para confirmar que todos los estudiantes inscritos tengan su respectiva nota. En caso de que alguna asignatura no se encuentre en estado calificada se le envía un correo electrónico particular al docente responsable de la asignatura, pidiéndole que se acerque a la DCE para completar la calificación.  Generar planillas de calificación: Se generan en lote, por cada escuela, las planillas de cada sección de la asignatura ofertada en el período académico, las cuales contienen las notas de todos los estudiantes que cursaron. Se dividen las notas según el tipo de examen, teniendo: final, reparación y, en el caso del Departamento de Inglés, suficiencia.  Generar reporte: Se debe tener un reporte donde se resume por cada escuela el estado de la calificación (Incompleta o Completa) para la oferta del período. Este reporte ayuda a verificar que la información de las planillas sea correcta, además de contar con un registro tangible de cualquier evento que haya ocurrido durante el proceso de calificación. Estas planillas se generan varias semanas después de finalizado el semestre. 24 2.2.2 Ciclo Promociones El ciclo de Promociones de la Gestión Académica está compuesto de un único proceso, conocido como Egreso. Este proceso se realiza en la Facultad de Ciencias para las Promociones regulares, ya que las de opción docente las organiza la Secretaría de la UCV. 2.2.2.1 Proceso de Egreso En este proceso, el personal de Registro y Control de grado de la DCE se encarga de las actividades relacionadas a la promoción de los estudiantes, que como ya fue mencionado, puede ser de dos tipos. Para este proceso se establecen fechas límites en las cuales los estudiantes deben presentar sus Trabajos Especiales de Grado (TEG) y consignar los recaudos solicitados por la DCE para poder egresar en dicha promoción. El proceso de egreso tiene la siguiente secuencia de actividades que se muestran en la Figura 2.5, explicadas en detalle a continuación: Figura 2.5 Proceso de Egreso de la Gestión Académica 25  Revisar el expediente: Se debe auditar de forma estrictamente manual el expediente físico de cada estudiante que desea optar al grado con la data generada por el sistema CONEST, a fin de verificar que no existen diferencias entre información que se posee de las actividades realizadas y asignaturas cursadas durante el transcurso de la carrera estudiada. Esta actividad se inicia cuando se cierra el proceso de inscripción del período académico actual donde ya se conoce los estudiantes que inscribieron el TEG.  Solicitud de Jurado: Esta actividad la llevan a cabo los docentes en un período de tiempo establecido una vez que en el sistema es activada. Consiste en solicitar al Consejo de Escuela, la aprobación de un conjunto de docentes que conformarán el jurado evaluador de la presentación o defensa del Trabajo Especial de Grado de un estudiante. Luego es responsabilidad de cada Consejo de Escuela aceptar o modificar en el sistema la solicitud realizada. Algunas escuelas también realizan este proceso para la evaluación de Seminarios.  Solicitud de Planillas: El personal de la DCE se encarga de activar y desactivar el período para realizar esta actividad. Su objetivo es permitir a los tutores de un TEG, Seminario y Pasantía (sólo para algunas escuelas) obtener la planilla que será utilizada en la evaluación respectiva, la cual debe ser firmada también por el jurado aprobado. La solicitud de TEG y Seminario solo puede ser efectuada una vez que se realiza la solicitud de jurado y esta ha sido aprobada por el Consejo de Escuela correspondiente. En el caso de la escuela de Computación la solicitud de jurados del Seminario no necesita ser aprobada por el Consejo de Escuela.  Emitir planillas: Se generan las planillas de Seminario y TEG que deben ser enviadas a Secretaría. También se realiza la transmisión de datos al sistema CONEST Secretaría, ofreciendo así un respaldo digital de los datos físicos previamente auditados.  Realización de eventos: Se planifican con un año de antelación. Son tres eventos, Firma de Acta, Imposición de Medallas y Entrega de Títulos y se realizan en los espacios de la Facultad de Ciencias y en el Aula Magna de la UCV. 26 2.3 Aplicaciones web En el contexto informático es posible definir una aplicación web como toda aquella a la que los usuarios accedan ingresando a un servidor web a través de Internet o de una intranet mediante un navegador. Es decir que es un software codificado en un lenguaje entendible por los navegadores web a los cuales se les confía su ejecución. Entre sus principales características se pueden resaltar las siguientes (Peñafiel, 2015):  Permiten una mayor fluidez en la comunicación entre clientes y servidores, abstrayendo a los usuarios sobre complicados protocolos de comunicación.  Su mantenimiento y actualización se realiza de manera sencilla a través de internet, evitando que se deba distribuir e instalar software específico o versiones individuales para cada usuario.  Permiten al usuario un acceso interactivo a la información almacenada en el servidor, respondiendo a cada una de sus acciones con documentos codificados a través del estándar HTML, que en conjunto con otros lenguajes interpretados de lado del cliente, permiten desplegar interfaces de usuario con el contenido solicitado. De acuerdo a lo expresado por (Peñafiel, 2015) los beneficios de una aplicación web pueden ser resumidos de la siguiente forma:  Permiten realizar trabajo a distancia con mayor facilidad.  Utilizar una aplicación web es posible siempre y cuando se cuente con un dispositivo computacional que tenga un navegador web y conexión a internet. Además no importa la hora o sitio donde el usuario se encuentre.  Para su adecuado uso, no deberían ser requeridos grandes conocimientos en informática.  Una aplicación web permite centralizar todas las áreas de trabajo en un solo sitio. Del mismo modo, las ventajas de una aplicación web se pueden expresar en los siguientes términos (Peñafiel, 2015):  Compatibilidad multiplataforma, es decir no importa el navegador o sistema operativo que el cliente utilice para acceder a la aplicación, esta funcionará siempre de la misma manera. 27  Siempre se mantiene actualizada, aunque algunas características pueden funcionar adecuadamente o no dependiendo de la antigüedad del navegador con que se acceda a la aplicación web.  No requieren ser descargadas, instaladas o configuradas para poder darles uso, en la mayor parte de los casos basta con simplemente crear una cuenta de usuario.  Consumen menos recursos del ordenador, ya que la mayor parte del procesamiento de los datos se realiza en el servidor, por lo que también suelen ocurrir menos fallos o errores.  Pueden trabajar con múltiples usuarios al mismo tiempo, ofreciendo la misma experiencia de uso para todos, dependiendo de la capacidad o recursos del servidor web. A continuación, se abarcará de forma más detallada la definición del modelo cliente- servidor, que es la base fundamental de las aplicaciones web. 2.3.1 Modelo cliente-servidor Desde el punto de vista funcional, se puede definir el modelo cliente-servidor como una arquitectura distribuida que permite a los usuarios finales obtener acceso a la información en forma transparente aún en entornos multiplataforma (Márquez Avendaño & Zulaica Rugarcía, 2004). En dicho modelo, el rol del cliente es interpretado por aquel dispositivo encargado de realizar peticiones solicitando un determinado servicio, mientras que el servidor se encarga de enviar uno o varios mensajes con la respuesta pertinente a dicha solicitud. En algunos casos el servidor no solo interactúa con los clientes sino que también lo puede hacer con otros servidores, ya sea para solicitar servicios externos o gestionar los datos del propio sistema. En la Figura 2.6 se tiene un modelo cliente- servidor donde se aplica el último ejemplo mencionado. Figura 2.6 Modelo cliente-servidor 28 De acuerdo a lo expresado por (Márquez Avendaño & Zulaica Rugarcía, 2004) tanto el cliente como el servidor poseen una serie de características propias, las cuáles se relacionan directamente a sus funcionalidades principales, como se describe a continuación: Cliente El cliente es el proceso que permite al usuario formular los requerimientos y pasarlos al servidor, se le conoce también con el término front-end. El cliente se encarga principalmente de las funciones de manipulación y despliegue de los datos, por lo que están desarrollados sobre plataformas que permiten construir interfaces gráficas de usuario, así como acceder a los servicios distribuidos en cualquier parte de la red. En resumen, sus funciones esenciales son:  Interacción con el usuario.  Procesar la lógica de la aplicación y hacer validaciones locales.  Generar requerimientos de bases de datos.  Recibir resultados del servidor.  Formatear resultados, en elementos que puedan ser entendidos por el usuario final. Servidor Es el proceso encargado de atender a múltiples clientes que hacen peticiones sobre algún recurso administrado por él, también se le conoce con el término back-end. Maneja normalmente todas las funciones relacionadas a la gran parte de las reglas del negocio y recursos de datos. Sus funciones pueden resumirse de la siguiente forma:  Aceptar los requerimientos de bases de datos que hacen los clientes.  Procesar requerimientos de bases de datos.  Formatear los datos para transmitirlos a los clientes.  Procesar la lógica de la aplicación y realizar validaciones a nivel de bases de datos. 29 En el caso del sistema CONEST, al existir la necesidad de interactuar con un sistema manejador de bases datos, la división lógica de esta aplicación web se establece a través de un patrón denominado Modelo-Vista-Controlador, que será definido como siguiente punto a tratar. 2.3.2 Patrón de arquitectura Modelo-Vista-Controlador Un patrón se define como aquella solución a un problema que dado un contexto y ciertas características es considerada como exitosa. Un patrón de arquitectura plantea por tanto un modelo de estructura para las diferentes partes de un todo, como en el caso de las aplicaciones web, se refiere a la organización de los archivos de código fuente, de configuraciones, imágenes, entre otros. El patrón Modelo-Vista-Controlador o MVC considera dividir una aplicación en tres módulos claramente identificables y con funcionalidad bien definida (Bascón Pantoja, 2004): El modelo El modelo es un conjunto de clases que representan la información del mundo real que el sistema debe procesar. No toman en cuenta la forma en que la información va a ser desplegada, ni el mecanismo mediante el cual será almacenada la información contenida dentro del mismo. Son la interfaz principal que utiliza la aplicación para comunicarse con las bases de datos. La vista Son el conjunto de clases que se encargan de mostrar la información contenida dentro de los modelos. El controlador Es un objeto que se encarga de dirigir el flujo de control de la aplicación debido a mensajes externos, como datos introducidos u opciones del menú seleccionadas por el usuario. A partir de esto el controlador se encarga de modificar los modelos y abrir o cerrar vistas. En la Figura 2.7 que se muestra a continuación, es posible observar la interacción y relación entre los módulos de este patrón. 30 Figura 2.7 Arquitectura MVC Entre las ventajas de utilizar este patrón se encuentran las siguientes (Bascón Pantoja, 2004):  La aplicación se implementa modularmente.  Sus vistas siempre muestran información actualizada, pues la obtienen a través de los propios modelos, quienes se encargan de automáticamente de este proceso.  Es considerado un patrón de diseño bien elaborado, pues las aplicaciones donde se implementan presentan una gran extensibilidad y mantenibilidad en comparación con las que se basan en otros patrones. En cuanto a las desventajas o limitaciones del patrón se tienen las siguientes (Bascón Pantoja, 2004): - El tiempo requerido para desarrollar una aplicación siguiendo este patrón es mayor durante la fase inicial que en aquellas que no la implementan, debido a que requiere que el programador defina una gran cantidad de clases, sin embargo esta característica es la que en una fase más avanzada la aplicación sea fácilmente extensible y mantenible. 31 - Este patrón se basa en la programación orientada a objetos, por lo que su implementación en entornos que no sigan este paradigma es sumamente costosa. 2.3.3 Tecnologías empleadas en el desarrollo De lo planteado hasta el momento, se puede acotar que la implementación de aplicaciones web se realiza en forma fraccionada, es decir que existe un proceso de desarrollo exclusivo para el lado del cliente y otro para el lado del servidor, a menudo basados en diseños y tecnologías diferentes. A continuación serán expuestas las diferentes tecnologías y herramientas que los desarrolladores del sistema CONEST han utilizado a lo largo de su ciclo de vida en cada uno de los niveles del modelo cliente-servidor. 2.4 Tecnologías de lado del cliente Son aquellas que se utilizan en la construcción de las interfaces de usuario, por ello se basan en tecnologías y estándares soportados por la mayor parte de los navegadores web existentes. Entre las utilizadas para el desarrollo del sistema CONEST se tienen HTML5, CSS3, JavaScript, jQuery y jQuery-UI. A continuación se definen cada una de ellas. 2.4.1 HTML5 HTML (HyperText Markup Language) es el lenguaje con el que se escribe la estructura y la semántica del contenido de un documento web. El contenido dentro de una página web es etiquetado con elementos como <img>, <title>, <p>, <div>, entre otros (Mozilla Developer Network, 2014). La quinta versión de este lenguaje, conocida como HTML5 es definida (Walker, 2011) como un lenguaje diseñado para organizar el contenido web, cuyo principal objetivo es estandarizar la creación de interfaces de usuario, facilitando así el diseño y desarrollo de aplicaciones web. Las etiquetas agregadas en esta versión del lenguaje son altamente evocadoras, encapsulando su rol y uso, a diferencia de las versiones anteriores donde las etiquetas no eran tan descriptivas e intuitivas. Se tienen entonces etiquetas que ofrecen una descripción más específica sobre el tipo de contenido, como por ejemplo <audio>, <article>, <figure>, <section>, <video>, entre otras. En general, HTML5 proporciona: 32  Etiquetas que describen exactamente lo que están diseñadas a contener.  Comunicaciones de red mejoradas, implicando una mayor velocidad de almacenamiento y carga de páginas.  Soporte para contenido multimedia, de forma que se puede añadir audio, video, gráficas, etc. disminuyendo la necesidad de tener que instalar plug-ins de terceros.  Formularios mejorados, que reducen la necesidad de utilizar código escrito en JavaScript, optimizando la comunicación entre servidores y dispositivos de recursos críticos como es el caso de teléfonos móviles.  Un API basado en SQL que permite almacenamiento de datos a nivel local para el cliente.  Soporte para CSS3, lenguaje que ofrece mayores facilidades en lo que a manipulación de interfaces y contenidos se refiere, ampliando enormemente el universo de posibilidades para los diseños de las aplicaciones. Actualmente el lenguaje es soportado por gran parte de los navegadores de uso común (Safari, Firefox, Chrome, entre otros), en algunos en mayor porcentaje que en otros, pero dado que esta versión de HTML permanece en constante desarrollo, el soporte a la misma se incrementa a medida que se publican versiones más actualizadas de estos navegadores. 2.4.2 JavaScript JavaScript es un lenguaje de script, es decir se trata de código de programación que se inserta dentro de un documento HTML. Este lenguaje es interpretado por los navegadores permitiendo agregar dinamismo al contenido de un sitio web. Fue desarrollado por la compañía Netscape como parte del desarrollo de su navegador Navigator (Sánchez, 2003). Contrario a lo que se interpreta, JavaScript no guarda relación alguna con el lenguaje Java, pues mientras este último se utiliza en la construcción de programas o aplicaciones independientes, mientras que JavaScript a pesar de ser más sencillo, depende de otros lenguajes como HTML para cumplir sus funciones, es decir que por sí solo no permite construir aplicaciones que trabajen de forma independiente (Sánchez, 2003). 33 Este lenguaje permite además realizar una técnica bastante útil para agregar dinamismo al contenido de los sitios web. Esta técnica se conoce como AJAX, cuyo acrónimo traducido al español es JavaScript Asíncrono + XML. La técnica AJAX tiene como objetivo crear páginas web dinámicas, mediante la realización de solicitudes asíncronas hacia el servidor, es decir sin la participación directa del usuario, las cuales permiten actualizar ciertas secciones de la página sin necesidad de recargarla por completo. En ambientes donde no se implementa esta técnica, cualquier actualización no será visible hasta tanto se recargue por completo el contenido de la página (W3Schools, 2015). Para transmitir la información que debe ser actualizada a través de la técnica es posible utilizar XML o JSON, dos documentos que pueden contener datos bajo un formato específico. En el caso del sistema CONEST se utiliza JSON, acrónimo de Notación de Objetos de JavaScript y se define como un formato ligero de intercambio de datos, cuya lectura y escritura es simple para humanos, además de fácil interpretación para las máquinas. Plantea un formato de datos completamente independiente de cualquier lenguaje pero organizado en estructuras de datos bien conocidas por programadores de lenguajes como C/C++, JavaScript, C#, Java, Python, Perl, entre muchos otros. Esta propiedad lo hace un lenguaje ideal para el intercambio de datos (JSON Org en Español). 2.4.3 CSS3 Las hojas de estilo en cascada (Cascading Style Sheets o CSS) son las que nos ofrecen la posibilidad de definir reglas y estilos de representación en diferentes dispositivos, ya sean pantallas de equipos de escritorio, portátiles, móviles, impresoras o cualquier otro con la capacidad de desplegar contenido web (Damián, 2010). Su primera versión fue publicada a finales de 1996 y su gran aceptación le llevo hasta su versión 2.1, cuya compatibilidad abarcó la gran mayoría de los navegadores existentes en el mercado. A partir del año 2005 se empezó a definir la siguiente versión de este estándar, la cual se conoce como CSS3 o Cascading Style Sheets Level 3, donde se ofrece al desarrollador gran variedad de opciones muy importantes para las necesidades del diseño web actual. De este modo, es posible realizar sombreados, redondeados, movimientos, transformaciones, entre otros (Damián, 2010). Actualmente varias de las características de CSS3 son soportadas por los navegadores comerciales más conocidos, pero al ser una versión cuyo uso está en 34 pleno auge, aún existen elementos que se comportarán en forma diferente dependiendo del navegador que se utilice para desplegar una página web donde se le utilice. 2.4.4 jQuery y jQuery-UI jQuery es una librería pequeña y rápida basada en el lenguaje JavaScript, sus características hacen más sencilla la manipulación de los elementos definidos dentro de un documento en formato HTML, así como el manejo de eventos, animaciones e implementación de AJAX. Es compatible con una gran cantidad de navegadores, además es extensible y versátil, pues simplifica la sintaxis con la que debe escribirse un código en lenguaje JavaScript (jQuery, 2015). Por su parte, jQuery-UI es una colección de elementos de interfaz de usuario que mejoran la interacción, efectos, widgets o temas visuales de una aplicación web que se esté construyendo con apoyo de la librería jQuery. Resulta útil tanto para construir interfaces elaboradas como minimalistas (jQuery, 2015). 2.5 Tecnologías de lado del servidor Son aquellas que se utilizan en la implementación del módulo encargado de lógica de negocio. En el desarrollo del sistema CONEST, se implementa el patrón de arquitectura MVC a través de un framework llamado Ruby on Rails, el cual se basa en el lenguaje de programación Ruby. Para el manejo de los datos, se ha utilizado el sistema manejador MySQL. Cada uno de ellos será definido a continuación. 2.5.1 Ruby Ruby es un lenguaje de programación dinámico y de código abierto enfocado a la simplicidad y productividad. Su creador Yukihiro “Matz” Matsumoto, lo ideó mezclando partes de sus lenguajes favoritos (Perl, Smalltalk, Eiffel, Ada y Lisp) siendo su principal motivación el obtener un lenguaje que sea natural, de forma que se asemeje a la vida real (Ruby Org, 2015). Desde su liberación pública en 1995, Ruby ha atraído devotos desarrolladores de todo el mundo. Fue en el año 2006 cuando alcanzó reconocimiento masivo, formándose como resultado grupos de usuarios activos en las ciudades más importantes del mundo y llenando las capacidades de las conferencias relacionadas a Ruby. Entre sus características más relevantes se encuentran las siguientes(Ruby Org, 2015): 35  Es orientado a objetos: En Ruby todo es un objeto. Se le pueden asignar propiedades y acciones a toda información de código. La programación orientada a objetos llama a las propiedades variables de instancia y las acciones son conocidas como métodos. Por ejemplo, a un número se le pueden aplicar acciones del siguiente tipo: 5.times {print “Hola”}. Lo cual permite da como resultado que a través de una clase asociada, el mensaje se muestre el número de veces que dicho entero indique.  Es flexible: Ruby es considerado un lenguaje flexible ya que permite a sus usuarios alterarlo libremente. Las funcionalidades esenciales pueden ser eliminadas o redefinidas a placer. En este sentido se pueden agregar o modificar funcionalidades a los módulos ya existentes. Ruby intenta no restringir al desarrollador.  Acepta programación por bloques: Los bloques de código permiten realizar describir comportamientos adicionales para las funcionalidades ya definidas, se delimitan por las palabras reservadas do…end.  Maneja varios tipos de variables: Ruby soporta variables locales, de instancia y globales definidas con sin prefijo cuando son locales, con un el símbolo @ cuando son de instancia y con el símbolo $ cuando son globales.  Manejo de excepciones: Al igual que Java y Python, para facilitar el manejo de errores.  Recolector de basura: Para todos los objetos, evitando mantener contadores de referencias en bibliotecas externas.  Facilidad para agregar extensiones: Las extensiones escritas para Ruby en lenguaje C son más sencillas de integrar que en otros lenguajes. Además el lenguaje puede cargar librerías de extensión dinámicamente si el sistema operativo lo permite.  Manejo multi-hilos: Ruby maneja hilos en forma independiente del sistema operativo. De forma que el desarrollador tiene un soporte multi-hilos para sus proyectos así la plataforma de desarrollo no lo soporte en forma nativa.  Portable: El lenguaje es fácilmente portable, aunque se desarrolla mayoritariamente en GNU/Linux, corre en varios tipos de UNIX, Mac Os X, Windows, DOS, BeOS, OS/2, etc. 36 2.5.2 Ruby onRails Rails es un framework de desarrollo de aplicaciones web escrito en el lenguaje de programación Ruby. Está diseñado para que la programación de aplicaciones web sea más fácil, haciendo supuestos sobre lo que el desarrollador necesita para comenzar, pretendiendo realizar más escribiendo menos código, a diferencia de otros lenguajes y frameworks. Se basa en dos principios fundamentales, los cuales se describen a continuación (Comunidad Rails, 2007). 1. DRY (del inglés “Don’t Repeat Yourself”), el cual sugiere que escribir el mismo código una y otra vez es una mala práctica. Para ello el framework ofrece la posibilidad de reutilizar código. 2. Convención sobre configuración, que significa que Rails hace algunas suposiciones sobre lo que el desarrollador desea hacer así como la forma de hacerlo. Ahorrando el tiempo y esfuerzo de tener que especificar miles de cosas en múltiples archivos de configuración. 2.5.3 MySQL MySQL es un SMBD (Sistema Manejador de Bases de Datos) relacional desarrollado, distribuido y soportado por la Corporación Oracle. Su facilidad de uso, seguridad, escalabilidad y velocidad lo han convertido en uno de los más populares que existen actualmente. Sus principales características de definen a continuación (MySQL, 2011):  Está escrito en C y C++, lo que permite su funcionamiento en diversas plataformas como Microsoft Windows, Linux, Mac OS, entre otras.  Existen API's capaces de conectar este sistema manejador con diferentes lenguajes de programación como PHP, C, C++, Perl, Java, Ruby, Python, entre otros, permitiendo el desarrollo de aplicaciones de diversos tipos.  Utiliza múltiples hilos a nivel de kernel, lo que permite aprovechar al máximo un sistema que disponga de múltiples procesadores.  Permite el uso de índices tipo Árbol-B, que ofrecen tiempos de respuesta óptimos para las consultas. Una tabla puede tener hasta un máximo de 64 índices asociados.  Soporta grandes cantidades de datos. MySQL Server puede contener según estadísticas de la organización, hasta 50 millones de registros, 200 mil tablas y 5 mil millones de columnas. 37  El sistema de privilegios y contraseñas es flexible pero seguro, utiliza verificación basada en host además de encriptar todas las contraseñas que trafiquen entre cliente y servidor. En resumen, es un sistema manejador con características que le convierten en una opción bastante flexible, robusta y sencilla de utilizar al momento de desarrollar aplicaciones, no solo para ambientes web, sino también locales. 2.6 Tecnologías del equipo de desarrollo Estas tecnologías no son otras que las herramientas a las cuales el equipo de desarrollo puede recurrir para facilitar el proceso de construcción del software. No existe un estándar que obligue a utilizar alguna u otra en particular, dejando siempre a criterio de los desarrolladores el uso o no de las mismas. Además resultan transparentes para el usuario final y no afectan en nada a las tecnologías utilizadas tanto de lado del cliente como del servidor. El equipo de desarrollo del sistema CONEST se apoya independientemente del método de desarrollo que se utilice para cada módulo, de dos herramientas fundamentales, la primera es Asana, un software que facilita la gestión de actividades a realizar por los desarrolladores y la segunda es Git muy útil para realizar el manejo y control de versiones así como la integración de código. A continuación se explicará de manera más detallada cada una de ellas. 2.6.1 Asana Asana es una aplicación pensada para mejorar la comunicación y organización dentro de un equipo de trabajo. Fue desarrollada por uno de los co-fundadores de Facebook Dustin Moskovitz y el ingeniero Justin Rosenstein. Fue lanzada al público general en el año 2011. Entre sus principales ventajas se pueden mencionar (Insomer, 2014):  Mejora y agiliza el trabajo en equipo: La organización de las tareas más allá de ser realizada en forma individual por cada integrante, puede contar con la participación de todo el equipo, fortaleciendo la importancia que cada rol debe desempeñar a lo largo del ciclo de vida del proyecto. Como herramientas se tienen chats, cometarios y la posibilidad de asignación de tareas a cada usuario a través de la aplicación.  Separa las tareas por proyectos: Cada usuario puede dentro de su cuenta, crear varios proyectos, cada uno con su propio conjunto de tareas y equipo 38 de trabajo asignados. Los proyectos y sus tareas también pueden ser de carácter personal.  Es efectiva en el recordatorio de tareas: La aplicación es capaz de notificar a los usuarios vía correo electrónico cualquier evento relacionado a las tareas y proyectos en los que participa, inclusive si la fecha tope fijada para completarles ha sido superada, la aplicación continúa enviando recordatorios de que deben realizarse en algún momento.  Existe una versión móvil: Ya sea en iOS o Android, la aplicación se encuentra disponible en forma gratuita a través de los respectivos repositorios de aplicaciones de estas plataformas, permitiendo a los usuarios administrar sus proyectos y tareas desde la comodidad de su dispositivo móvil en tiempo real. En resumen es una aplicación bastante útil, debido a que integra todo lo necesario para la gestión de proyectos dentro de un mismo ambiente, facilitando tanto la organización de las actividades como la participación de todos los miembros del grupo de trabajo. Además de ser gratuita, posee una versión móvil para las plataformas más utilizadas en el mercado actualmente. 2.6.2 Git Un sistema de control de versiones o SCV se define como aquel que permite realizar un seguimiento de la historia de una colección de archivos y además incluye la funcionalidad de revertir la colección de archivos actual hacia versión anterior. Cada versión podría considerarse como una fotografía del estado de la colección en un momento determinado del tiempo. Cuando se aplica este concepto a un ambiente distribuido, se cuenta con un servidor central donde se almacena el repositorio principal y cada usuario puede hacer una copia completa del mismo mediante un proceso llamado "clonación" (Fiqus, 2014). Git es un sistema de control de versiones distribuido que se origina a partir del desarrollo del kernel de Linux y es utilizado en muchos proyectos populares de código abierto. 2.7 Marco Metodológico Para el desarrollo de este Trabajo Especial de Grado, se aplicará un método de desarrollo clasificado como ágil. Los métodos de desarrollo ágiles son una propuesta alternativa a los tradicionales, cuyo fundamento se basa principalmente en lograr que el proceso de desarrollo de software sea ligero y adaptable a cambios, 39 a fin de obtener un producto de calidad donde las principales necesidades de sus usuarios sean solventadas satisfactoriamente. A lo largo de esta sección del capítulo se expondrán de manera detallada las bases sobre las que se forman los métodos de desarrollo ágil, así como el método seleccionado para el desarrollo de la solución. Igualmente se explica la Gestión de Procesos del Negocio. 2.7.1 Manifiesto Ágil En el año 2001 un grupo de expertos en desarrollo de software se reunieron en Utah, convocados por Kent Beck, quien años antes había publicado un libro donde planteaba un nuevo método de desarrollo de software conocido como Extreme Programming. Durante esta reunión se discutieron tópicos relacionados a las técnicas y procesos utilizados para desarrollar software, abarcando también las nuevas alternativas que estaban surgiendo en contraste con los tradicionales y pesados métodos ya establecidos. Como resultado se obtuvo lo que hasta la actualizad se conoce como Manifiesto Ágil (Beck, y otros, 2001), un documento en el que se resumen los valores y principios sobre los cuáles basan estos métodos alternativos, según el cual se valora:  Individuos e interacciones sobre procesos y herramientas.  Software funcionando sobre documentación extensiva.  Colaboración con el cliente sobre negociación contractual.  Respuesta ante el cambio sobre seguir un plan. Lo cual hace referencia a que si bien se valoran los elementos escritos a la derecha, se valoran aún más los que se encuentran a la izquierda. Del mismo modo, estos valores sirven de pilares para los siguientes principios: 1. Nuestra mayor prioridad es satisfacer al cliente mediante la entrega temprana y continua de software con valor. 2. Aceptamos que los requisitos cambien, incluso en etapas tardías del desarrollo. Los procesos Ágiles aprovechan el cambio para proporcionar ventaja competitiva al cliente. 3. Entregamos software funcional frecuentemente, entre dos semanas y dos meses, con preferencia al periodo de tiempo más corto posible. 40 4. Los responsables de negocio y los desarrolladores trabajamos juntos de forma cotidiana durante todo el proyecto. 5. Los proyectos se desarrollan en torno a individuos motivados. Hay que darles el entorno y el apoyo que necesitan, y confiarles la ejecución del trabajo. 6. El método más eficiente y efectivo de comunicar información al equipo de desarrollo y entre sus miembros es la conversación cara a cara. 7. El software funcionando es la medida principal de progreso. 8. Los procesos Ágiles promueven el desarrollo sostenible. Los promotores, desarrolladores y usuarios debemos ser capaces de mantener un ritmo constante de forma indefinida. 9. La atención continua a la excelencia técnica y al buen diseño mejora la Agilidad. 10. La simplicidad, o el arte de maximizar la cantidad de trabajo no realizado, es esencial. 11. Las mejores arquitecturas, requisitos y diseños emergen de equipos auto- organizados. 12. A intervalos regulares el equipo reflexiona sobre cómo ser más efectivo para a continuación ajustar y perfeccionar su comportamiento en consecuencia. Los principios y valores establecidos en el manifiesto fundamentan las bases de los métodos ágiles más utilizados actualmente. Entre ellos se encuentra el método seleccionado para este desarrollo: AgilUs, que resulta de una investigación realizada por la profesora de la escuela de Computación de la Facultad de Ciencias de la Universidad Central de Venezuela Alecia Acosta, cuyo estudio fue realizado durante el Seminario que antecede a este Trabajo Especial de Grado. A continuación se define el método, así como cada una de las fases que lo componen. 2.7.2 Método AgilUs AgilUs es un método de desarrollo ágil iterativo e incremental, resultado de una de investigación desarrollada por la profesora Eleonora Acosta del Centro de Ingeniería de Software y Sistemas (ISYS) de la escuela de Computación, en la Universidad Central de Venezuela. Se basa en el concepto de usabilidad, resaltando la importancia de desarrollar software usable, además plantea un análisis centrado tanto en el usuario y con la participación de especialistas, que contribuyan con la 41 evolución del software. Su principal valor establece que la construcción de las interfaces de usuario no debe ser un agregado estético que se da al final del proyecto sino más bien aquello que guie el proceso de desarrollo y la toma de decisiones. A su vez, centra el desarrollo de software en los siguientes principios (Acosta, 2011):  Integra la Interacción Humano-Computador (IHC) y la Ingeniería de Software (IS), debido a que son complementarias no excluyentes entre sí. Un diseño centrado en el usuario impacta positivamente la calidad del software.  La usabilidad determina la utilidad. La usabilidad no es una propiedad abstracta. Un software solo será considerado usable en un contexto específico y por un tipo de usuario específico. El objetivo es lograr que todos los usuarios del software encuentren usables las tareas que pueden realizar. Este método se estructura en un total de cuatro fases, durante las cuales es posible realizar iteraciones sobre los artefactos y donde la participación del usuario es clave en el éxito de las mismas. Para mayor flexibilidad, este método permite que dependiendo del contexto asociado al problema que se esté resolviendo, la aplicación de algunos artefactos sea innecesaria. Las fases propuestas para el método son (Acosta, 2011): 1) Requisitos: Se realiza un análisis global del problema a solucionar, se estudian productos similares existentes, se genera un perfil de usuario, y se define la lista de requerimientos a desarrollar. Esta etapa es importante en el desarrollo del software, ya que un mal análisis de requisitos traería como consecuencia un software que no cumple con las necesidades del usuario. 2) Análisis: Se lleva a cabo el análisis de la solución a desarrollar, se emplean diagramas de casos de uso y modelado de objetos del dominio, siguiendo la notación UML, para definir las funcionalidades que tendrá el producto a desarrollar. 3) Prototipaje: Se implementa un prototipo rápido de interfaz de usuario a partir de los patrones de interacción, el cual va evolucionando hasta convertirse en el producto final, se genera la guía de estilo, y se realizan las evaluaciones de usabilidad apropiadas a esta etapa: evaluaciones heurísticas y las listas de comprobación. 4) Entrega: Se aplican las pruebas al sistema para certificar que la aplicación desarrollada sea un software usable y sin errores, finalmente se pone en producción la aplicación. 42 En la Figura 2.8 se puede observar el ciclo de vida del método a través de sus fases y los artefactos asociados a ellas. Figura 2.8 Ciclo de vida del método AgilUs Tomada de: http://www.ciens.ucv.ve/portalasig/interacci%C3%B3n_humano_computador/1- 2014/descarga/descargar_archivo/601 Las llamadas “buenas prácticas” son aquellos hábitos que bien aplicados durante el proceso de desarrollo simplifican no solo gran parte de trabajo a realizar, sino que incrementan la considerablemente la calidad de los resultados obtenidos. Para este método se propone aplicar (Acosta, 2011):  Diseño centrado en el usuario (DCU). Es un enfoque de diseño y desarrollo que se centra en los deseos, limitaciones y necesidades de los usuarios finales de un software. En las técnicas de DCU es relevante que los desarrolladores realicen pruebas constantes que permitan verificar el curso que lleva el desarrollo del sistema y su interfaz de usuario. El objetivo final es que el usuario guie de manera indirecta pero influyente el proceso de desarrollo, permitiendo la construcción de un sistema que se adapte al usuario y no el caso contrario.  Diseño basado en prototipos. El desarrollo de software en AgilUs está guiado por la construcción de prototipos de alta fidelidad y la evaluación de los mismos por usuarios y especialistas en usabilidad, a fin de identificar fallas y aspectos a mejorar para las siguientes versiones hasta obtener el producto final. 43  Desarrollo ágil, iterativo e incremental. Una de las máximas del desarrollo iterativo e incremental así como del Manifiesto Ágil es la simplicidad. Se recomienda entonces desarrollar el sistema más simple que satisfaga las necesidades actuales de los usuarios, pero preparado para cambios futuros. El desarrollo por incrementos permite proveer resultados sin la necesidad de establecer todos los requisitos de una vez al inicio del desarrollo. La iteratividad permite por su parte, regresar a etapas anteriores una vez que se reciba la retroalimentación respectiva a las evaluaciones realizadas.  Usabilidad como atributo de calidad. Como se indica en la ISO/IEC 9126-1, la usabilidad es considerada un atributo de calidad interna y externa del software, por lo que AgilUs hace énfasis en la producción de software usable, siguiendo la recomendación de este estándar internacional.  Interacción continúa con el usuario, propiciando un intercambio cara a cara. Naturalmente para este método la presencia constante y participativa del usuario es fundamental. El equipo de desarrollo solo debería tomar decisiones una vez se han realizado las pruebas de usabilidad, atributo que solo puede ser medido por el usuario. 2.7.3 Gestión de Procesos de Negocio La Gestión de Procesos de Negocio, también llamada BPM por sus siglas en inglés (Business Process Management) es una filosofía de gestión organizacional, es una forma estratégica y corporativa de gestionar una organización de manera holística, como un todo (Mejía, 2009). Es un enfoque centrado en los procesos para mejorar el rendimiento que combina las tecnologías de la información con metodologías de proceso y gobierno. BPM es una colaboración entre personas de negocio y tecnólogos para fomentar procesos de negocio efectivos, ágiles y transparentes (Kiran Garimella, 2008). BPM es una tendencia ya consolidada que está cambiando la forma de gestionar las operaciones de las empresas y de cualquier organización, permitiendo mayor flexibilidad, automatización y potencia. Ya que la DCE es una organización que gestiona sus procesos sin una estructura definida, se hace esencial la implementación de BPM como estrategia para mejorar el rendimiento organizacional. 44 2.7.3.1 Notación y Modelo de Procesos de Negocio También llamada BPMN, por sus siglas en ingles (Business Process Model & Notation) es el estándar para modelar flujos del proceso del negocio, desarrollado por la OMG. La OMG (Object Management Group) es un consorcio formado en 1989 dedicado al cuidado y establecimiento de diversos estándares de tecnologías. Ha guiado la estandarización de BPM durante años. En particular ha adoptado la especificación de BPMN, el cual actúa como un lenguaje en común, permitiendo a una organización interoperar con todos sus usuarios internos y externos. BPMN provee una notación gráfica para especificar los Procesos del Negocio en un diagrama de Procesos del Negocio. Su objetivo es dar soporte a BPM al proporcionar una notación estándar que sea comprensible para los usuarios del negocio y que posea la semántica para representar procesos complejos para los usuarios técnicos (Jog Raj, 2003). Un Modeloestándar de Procesos del Negocio y su Notación proporcionarán a las empresas la capacidad de entender sus procedimientos internos de negocios con una notación gráfica y dará a las organizaciones la habilidad de comunicar estos procesos de una manera estándar. Además, la notación gráfica facilitará el entendimiento del rendimiento de las colaboraciones y las transacciones comerciales entre las organizaciones. Esto asegurará que las empresas se entiendan a sí mismas y a los participantes en sus negocios y permitirá que se adapten rápidamente a nuevas circunstancias de negocio (Group). Para modelar un flujo del Proceso del Negocio, se modelan solo los acontecimientos que ocurren para comenzar un proceso, los procesos que son realizados, y los resultados finales del flujo. Siendo la meta de BPMN el proporcionar una notación que sea fácilmente comprensible por todos los usuarios del negocio, incluyendo tanto a los analistas que crean los bosquejos iniciales de los procesos como a los desarrolladores técnicos responsables de poner en ejecución la tecnología que realizará esos procesos, se hace viable su uso en el modelado de los procesos que involucran la Gestión Académica de la Facultad de Ciencias ya explicados en el capítulo 1. Para complementar las fases de Análisis y Diseño del método (AgilUs) se usará BPMN ya que permite el modelado de procesos de forma sencilla y fácil de entender por los usuarios no técnicos, al mismo tiempo que ofrece expresividad al flujo de procesos complejos, entendiendo por expresividad como la capacidad para representar todo tipo de procesos, manteniendo la facilidad de comprensión lo cual 45 resulta ideal para diagramar la Gestión Académica debido a la cantidad de procesos y usuarios que se involucran en la misma y que están explicados en la problemática (Capítulo 1, Planteamiento del Problema).  Simbología de la notación BPMN Objetos de flujo: son utilizados para definir los procesos son los que expresan la semántica de un modelo de proceso. Eventos, es algo que sucede durante el proceso de negocio, y que afecta el flujo del proceso. Suelen tener una causa (trigger) o un resultado, y se representan con un círculo. De acuerdo con el momento en que afectan al flujo, se dividen en tres tipos: - Inicio: Con el que se da inicio un proceso. - Intermedio: Forman parte directa del flujo del proceso en la secuencia normal del mismo. Pueden o no anteceder a una actividad o subproceso. - Fin: Finaliza un proceso. Compuertas: Se representa con un diamante. Son puntos de decisión empleados para canalizar y controlar la divergencia o convergencia de la secuencia de flujo. Éstas determinan ramificaciones, bifurcaciones, combinaciones y fusiones del proceso. - Exclusiva: Solo una ruta se ejecuta. - Inclusiva: Al menos una ruta se ejecuta y puede ejecutarse más de una. - Paralela: Indica un punto del proceso donde se llevan a cabo actividades en forma concurrente (paralelo) y sincroniza sus caminos. Todas las rutas deben completarse para que el proceso continúe. - Basada en eventos: iniciará una carrera entre los diferentes eventos que en el proceso se pudiera recibir; el primero en ser recibido ganará la carrera y determinará el flujo de la secuencia de salida que debe ser utilizado. Aquí los flujos se dirigen según si se ha recibido un mensaje, se ha cumplido una condición o ha pasado cierto tiempo. Actividad: Es una unidad de trabajo a realizar. Se representa con un rectángulo redondeado. Se divide en: 46 - Tarea: Una tarea es una actividad atómica que está incluida dentro de un proceso. Se habla de tarea cuando el trabajo que representa en el proceso no puede desglosarse en un nivel mayor de detalle. - Sub-proceso: es un conjunto de actividades incluidas dentro de un proceso. Puede desglosarse en diferentes niveles de detalle denominadas tareas. Se representa con un símbolo de suma en la parte central inferior de la figura. Objetos de conexión: describen como interactúan los objetos de flujo. - Flujo de secuencia: Muestra el orden de los eventos, actividades y decisiones que se realizan dentro del proceso. - Flujo de datos o de mensajes: Indica el flujo de mensaje entre las distintas entidades de los procesos. - Asociación: Asociar diferentes artefactos con objetos de flujo. - Por defecto. Canales: Son un mecanismo empleado para organizar actividades en categorías separadas visualmente, con el fin de ilustrar diferentes capacidades funcionales o responsabilidades. - Pool (Participantes): Representa los actores externos con los cuales interactúa un proceso, estos actores pueden ser un proceso o aplicativo. - Lane (carril): Representa un participante dentro un proceso, el cual contiene un conjunto de actividades asociadas a este rol. Artefactos: Son objetos gráficos que proveen información adicional de los elementos dentro de un proceso, sin afectar el flujo del proceso. - Objetos de datos: son artefactos que pueden representar muchos tipos de objetos distintos, tanto electrónicos como físicos. Permiten mostrar los datos que una actividad necesita, es decir, representan los documentos, datos y otros objetos que son usados o actualizados durante el proceso. Los objetos de datos no afectan directamente los flujos de secuencia o los flujos de mensajes del proceso. - Grupos: Se utiliza para agrupar un conjunto de actividades, ya sea para efectos de documentación o análisis. 47 - Anotaciones: Son un mecanismos para que el modelador pueda dar información textual adicional. En la Figura 2.9 Elementos Básicos de BPMN, se puede apreciar la simbología de BPMN. Figura 2.9 Elementos Básicos de BPMN Traducida de: http://es.slideshare.net/mayer2380/introduccin-a-bpmn?related=2 48 Capítulo 3. Marco Aplicativo A lo largo de este capítulo se documenta el proceso de desarrollo e integración del módulo propuesto como solución para la administración y control de los procesos asociados a la Gestión Académica en el sistema CONEST 3.0. Cabe destacar que, para no poner en riesgo la estabilidad del sistema CONEST 3.0, este desarrollo se realiza en un ambiente de pruebas, donde se cuenta con una copia de la base de datos que ha sido generada especialmente para dicho propósito. La integración del módulo desarrollado al ambiente de producción se lleva a cabo una vez se hayan completado y probado el total de funcionalidades del gestor. Del mismo modo, el grupo de desarrollo trabaja siguiendo las convenciones establecidas para la codificación del sistema CONEST 3.0, que pueden ser resumidas de la siguiente forma:  Se debe evitar el uso de acentos o caracteres especiales en los nombres de variables, funciones, tablas, atributos o archivos. Del mismo modo, estos deben estar en español y ser lo suficientemente descriptivos como para que el objetivo o comportamiento de dichos elementos sea fácil de entender.  A fin de facilitar el mantenimiento de la aplicación, se deben respetar los estándares y convenciones de Ruby on Rails, tanto en aspectos de programación como en ubicación de los archivos fuente.  Utilizar comentarios en forma razonable, a fin de complementar la documentación del código.  Utilizar Git como principal herramienta para el control de versiones, de modo que el código desarrollado se pueda integrar apropiadamente al ya existente. Siguiendo el esquema de trabajo del método AgilUs, el desarrollo de este TEG ha sido dividido en iteraciones, durante las cuales se implementa en forma incremental el total de funcionalidades necesarias para el módulo gestor. De igual manera, las fases del método no se aplican de forma exhaustiva en cada iteración sino que se emplean según el equipo de desarrollo lo considere necesario, dependiendo de los objetivos planteados para dicha iteración y los resultados obtenidos de las anteriores. 49 3.1 Primera Iteración. Esquema general de la solución y desarrollo del Calendario Académico Para la primera iteración de este proceso de desarrollo se tienen como objetivos:  Obtener, a través de la fase de requisitos un esquema general de los requerimientos principales que se deben implementar para el módulo gestor de procesos del sistema CONEST.  Lograr, a través de la fase de análisis, plantear en términos de ingeniería del software el conjunto de requerimientos obtenidos en la fase de requisitos como funcionalidades específicas que se deben implementar para el módulo gestor.  Implementar un calendario que sirva no solo como una mejora para el calendario de eventos ya existente en el sistema, sino que también brinde apoyo en la planificación y control de las actividades de los procesos de la Gestión Académica. 3.1.1 Fase de Requisitos Teniendo en cuenta que el desarrollo de este TEG está centrado en la implementación e integración de un módulo para un sistema ya existente, la fase de requisitos comprende los siguientes artefactos: 3.1.1.1 Tormenta de Ideas De las primeras reuniones realizadas con los usuarios se recabaron un conjunto de ideas con respecto a lo que necesitaban y querían que el sistema tuviera. Al sintetizar las nociones discutidas surgió una tormenta de ideas, representada en el mapa mental que se puede apreciar en la figura 3.1. 50 Figura 3.1 Tormenta de ideas 3.1.1.2 Requerimientos funcionales y no funcionales Luego de analizar los resultados obtenidos de la tormenta de ideas, se plantearon para el módulo gestor de procesos los siguientes requerimientos: Requerimientos funcionales 1. Ejecutar las actividades de los procesos de la Gestión Académica. 2. Configurar los parámetros relacionados a las actividades de los procesos de la Gestión Académica. 3. Visualizar el progreso e información relacionada a las actividades de los procesos de la Gestión Académica. 4. Observar el progreso e información relacionada a los procesos de la Gestión Académica. 5. Consultar un calendario digital donde figuren los eventos relacionados a los procesos de la Gestión Académica. 51 6. Agregar, modificar o eliminar eventos importantes para la DCE en el calendario digital. 7. Finalizar automáticamente las actividades una vez transcurrida la fecha límite establecida por el personal administrativo. 8. Permitir que una actividad finalizada pueda ser reabierta en caso de existir prórrogas. Requerimientos no funcionales Hardware 1. El sistema se debe implementar sobre la infraestructura existente en las oficinas de la DCE de la Facultad de Ciencias, UCV. Software 1. Utilizar el sistema manejador de bases de datos MySQL. 2. Realizar la implementación del lado del servidor en el framework Rails que utiliza el lenguaje Ruby. 3. Recurrir a las tecnologías HTML, CSS y Javascript para el desarrollo del lado del cliente. Usabilidad 1. Identificar cada proceso con un color diferente. 2. Identificar el estado de las actividades con un color asociado al progreso de las mismas, ejemplo: verde para las actividades finalizadas, rojo para las actividades pendientes, amarilla para las que se están ejecutando. Seguridad 1. Implementar validaciones de sesión para evitar que usuarios no autorizados, que no posean el rol administrativo, puedan utilizar el gestor del sistema. 2. Realizar validaciones de estructura sobre los datos ingresados a través del gestor de procesos, asegurando que coincidan con el modelo establecido en la Base de Datos. 52 Rendimiento 1. Ofrecer tiempos de respuesta no mayores a 5 segundos por las acciones que se realicen dentro del módulo gestor. 3.1.1.3 Perfil de usuario El personal administrativo está conformado por los usuarios del sistema CONEST con la mayor cantidad de privilegios sobre los parámetros e información que maneja la aplicación. Si bien este rol se le otorga principalmente a un grupo de empleados de la DCE, este no se restringe únicamente a dicho departamento, debido a que los docentes de la escuela de Computación que han participado en el desarrollo de este sistema también gozan de dicho privilegio. En general, el perfil que debe cumplir un usuario considerado como personal administrativo se resume en la Tabla 3.1 Perfil de usuario. Perfil de usuario: Personal administrativo Edad Comprendida entre los 20 y los 56 Sexo Ambos sexos, pero en su mayoría personas de sexo femenino. Conocimientos tecnológicos Manejo avanzado de las aplicaciones web y del sistema CONEST. Extenso conocimiento de los procesos que componen la Gestión Académica y sus actividades asociadas. Nivel de Instrucción Educación Universitaria, Técnico Superior Universitario (T.S.U) o Educación Media. Poseen dominio del flujo de los procesos académicos de la Facultad de Ciencias así como de los reglamentos y lineamientos que la rigen. Tabla 3.1 Perfil de usuario No hacen falta grandes conocimientos tecnológicos, sin embargo se necesita un conocimiento base de la Gestión Académica, el cual es usualmente impartido por otros del personal con más experiencia. 3.1.1.4 Análisis de sistemas existentes Debido a que el contexto en el cual se desea aplicar la solución es bastante específico, no existe un sistema particular que pueda servir como orientación en el desarrollo, sin embargo, es posible tomar las características que se esperan obtener en el mismo como un subconjunto de aplicaciones, de las cuáles es posible encontrar sistemas que pueden ser estudiados y utilizados de modelo para el desarrollo de cada uno de los componentes de esta solución. 53 Google Calendar https://www.google.com/calendar/ Tópico a evaluar Calendario de eventos Funcionalidades El calendario permite visualizar, crear, editar y eliminar eventos del usuario que lo utilice. Personalización El calendario posee pre cargados los eventos relacionados a la ubicación (ciudad/país) del usuario. Del mismo modo se configuran automáticamente los cumpleaños de la lista de amigos y eventos a los que el usuario fue invitado. Adicionalmente, es posible resaltar las tareas o eventos del calendario con el color de preferencia del usuario. Cuenta también con una gran cantidad de complementos que el usuario puede activar o desactivar a gusto para obtener tanto funcionalidades como aspectos de apariencia adicionales. Aspectos de sociabilidad Es posible crear eventos compartidos con otros usuarios, utilizando para ello un sistema de invitaciones. Apariencia La interfaz de esta aplicación consiste en un calendario, que puede filtrarse por día, semana, mes. Aspectos de accesibilidad Permite elegir entre una gran variedad de idiomas. Permite el uso de ciertos atajos de teclado, para acceder a las funcionalidades. Sin embargo, no cuenta con configuración de tamaño de letra, contraste de colores, entre otros que pueden expandir su uso a usuarios con diversas limitaciones físicas. Soporte en línea Cuenta con una sección de ayuda al usuario, donde se abarcan los tópicos relacionados a las funciones esenciales de la aplicación. Idiomas Se encuentra disponible en una gran cantidad de idiomas, entre los cuales se encuentran los más comunes, como lo son inglés y español. Opinión como usuario Esta aplicación es bastante completa en cuanto a lo que planificación de eventos o tareas se refiere, además posee la ventaja de estar asociada a la cuenta de Google del usuario, por lo que sus usuarios frecuentes pueden acceder a ella sin mayores complicaciones. Sincroniza automáticamente eventos como cumpleaños https://www.google.com/calendar/ 54 de amigos o días feriados y es posible conectarlo directamente a un dispositivo móvil mediante la aplicación que se ofrece para las diversas plataformas. Tabla 3.2 Análisis del sistema: Google Calendar Asana https://asana.com/ Tópico a evaluar Lista de tareas Funcionalidades Permite crear, modificar o eliminar tareas a diversos proyectos, ya sean de carácter personal o laboral. La aplicación es capaz de notificar a los usuarios mediante correos electrónicos el estado de las tareas pendientes, ya sea que se haya especificado la fecha límite para cumplirlas o no. Personalización Permite cambiar la apariencia de la aplicación, mediante un conjunto de temas, aunque los mismos son limitados y no modifican mayormente la apariencia con respecto a la establecida por defecto. Aspectos de sociabilidad Las tareas creadas con la aplicación pueden ser compartidas con un equipo de trabajo, relacionado a un proyecto. Las actividades compartidas entre usuarios pueden ser creadas por ellos mismos o serle asignadas por otro miembro del equipo, con posibilidad de especificar la fecha límite en la cual deben ser llevadas a cabo. Apariencia La aplicación presenta una interfaz minimalista, enfocada a la gestión de tareas, dividiéndolas por proyecto. Un proyecto puede ser personal o laboral, permitiendo en ambos casos añadir participantes. Aspectos de accesibilidad No posee aspectos relevantes que aumenten la accesibilidad de la aplicación. Soporte en línea El equipo de desarrollo cuenta con un blog en el cual se atienden las dudas frecuentes de los usuarios, y también se reciben sugerencias. Idiomas Solo se encuentra disponible en inglés. https://asana.com/ 55 Opinión como usuario Esta aplicación web posee los elementos básicos para llevar el control de las tareas que se deben realizar, cumple su función de manera eficiente y además cuenta con una versión para dispositivos móviles que permite a sus usuarios estar al día con la planificación de sus actividades. También resulta muy útil cuando de organizar un equipo de trabajo se trata, por lo que se puede ser aprovechada no solo en el ámbito personal, sino también laboral. Tabla 3.3 Análisis del sistema: Asana 3.1.2 Fase de Análisis De la fase de análisis de esta primera iteración se obtuvo como resultado el dominio de la aplicación y se esbozó el aspecto visual de la solución, además de especificar las funcionalidades que el módulo gestor realizará de manera general. También se aplicaron los artefactos necesarios para modelar las funcionalidades del componente calendario del gestor. A continuación se presentan los artefactos realizados. 3.1.2.1 Modelo de Casos de Usos El Modelo de Casos de Uso define las interacciones entre el usuario y el sistema y los posibles escenarios que se pueden ejecutar a través de secuencias de acciones que describen el comportamiento del sistema. Con este modelo se llega a un lenguaje estándar que es entendido tanto por los expertos como por los usuarios y que permite el análisis del dominio de la aplicación. En la Figura 3.2 Casos de Uso del gestor CONEST, que sigue a continuación, se especifican de acuerdo a la notación UML el conjunto de casos de uso que engloban las funcionalidades planteadas para el módulo gestor. 56 Figura 3.2 Casos de Uso del gestor CONEST A continuación se describen en detalle los casos de uso planteados. 1. Nombre: Gestionar Procesos. Actor: Personal administrativo de la División de Control de Estudios (DCE) Precondición: Se requiere iniciar sesión en el módulo administrador del sistema CONEST 3.0. Acción: Permite configurar fechas y llevar control de las actividades relacionadas a los procesos de la Gestión Académica. Pos condición: Se planifican las actividades asociadas a los procesos de la Gestión Académica. Tabla 3.4 Descripción CU: Gestionar Procesos 2. Nombre: Abrir Procesos. Actor: Personal administrativo de la División de Control de Estudios (DCE) Precondición: Se requiere iniciar sesión en el módulo administrador del sistema CONEST 3.0. Acción: Permite iniciar la ejecución de las tareas principales de los procesos de la Gestión Académica, dando pie a la ejecución que se planificó para cada uno de estos. 57 Pos condición: Un proceso determinado de la Gestión Académica es iniciado. Tabla 3.5 Descripción CU: Abrir Procesos 3. Nombre: Cerrar Procesos. Actor: Personal administrativo de la División de Control de Estudios (DCE) Precondición: Se requiere iniciar sesión en el módulo administrador del sistema CONEST 3.0. Acción: Permite finalizar, tomando en cuenta las fechas planificadas, la ejecución dentro del sistema del conjunto de actividades asociadas a determinado proceso de la Gestión Académica. Pos condición: Un proceso determinado de la Gestión Académica se da por finalizado. Tabla 3.6 Descripción CU: Cerrar Procesos 4. Nombre: Configurar Parámetros. Actor: Personal administrativo de la División de Control de Estudios (DCE) Precondición: Se requiere iniciar sesión en el módulo administrador del sistema CONEST 3.0. Acción: Permite manipular parámetros importantes para el sistema CONEST, incluyendo la identificación de los usuarios que ocupan cargos de autoridad en la facultad. Pos condición: Los parámetros generales del sistema son actualizados. Tabla 3.7 Descripción CU: Configurar Parámetros 5. Nombre: Gestionar Calendario. Actor: Personal administrativo de la División de Control de Estudios (DCE) Precondición: Se requiere iniciar sesión en el módulo administrador del sistema CONEST 3.0. Acción: Permite crear, planificar, difundir y eliminar dependiendo del caso, las actividades relacionas al calendario académico de la Facultad de Ciencias. Pos condición: Se ejecutan acciones sobre los eventos planificados durante un período académico. Tabla 3.8 Descripción CU: Gestionar Calendario 58 3.1.2.2 Guía de Estilos La guía de estilos propuesta, contiene la combinación de colores que será utilizada en el gestor para notificaciones, alertas, indicadores y otros elementos de interfaz. La combinación fue seleccionada correspondiendo a las funcionalidades, de manera que la asociación color-funcionalidad sea intuitiva. Además, para su selección se tomó en cuenta la característica Web Safe, es decir que independientemente del monitor que se utilice para visualizar la aplicación, los colores siempre lucen el mismo tono. Colores a utilizar en los elementos de interfaz HTML: #0066CC HTML: #009999 HTML: #FF9933 HTML: #FFFFCC RGB: 0 102 204 RGB: 0 153 153 RGB: 255 153 51 RGB: 255 255 204 Colores a utilizar para alertas/indicadores HTML: #FF3333 HTML: #66CC66 HTML: #99CCFF HTML: #FFFF00 RGB: 255 51 51 RGB: 102 204 102 RGB: 153 204 255 RGB: 255 255 0 3.1.2.3 Modelo del negocio Con el objetivo de comprender en profundidad el flujo de los procesos de la Gestión Académica y la relación entre los mismos, se realizó el siguiente diagrama (Figura 3.3) utilizando la notación BPMN. 59 Figura 3.3 Modelo del negocio del ciclo Período Académico 3.1.2.4 Modelo de datos Para el desarrollo del módulo gestor del sistema CONEST, es necesario modelar objetos nuevos. Mediante los mismos será posible llevar el control de las actividades asociadas a los procesos de la Gestión Académica, así como las fechas en las cuáles deben ser realizadas. Luego de un análisis llevado a cabo por el equipo de desarrollo de este TEG, se determinó que los modelos de datos a proponer debían integrarse con los existentes en el sistema, aunque algunos de ellos nos serán utilizados sino hasta las siguientes iteraciones. En la figura 3.4 que sigue a continuación, se puede observar la primera versión del diagrama que contiene los modelos de objetos planteados, tanto para el gestor, como para la nueva versión del calendario. Los modelos calendario y dia_feriado ya existen como tablas en la base de datos actual del sistema, pero se incluyen porque el calendario trabaja con ellos y posteriormente será necesario realizarles algunas modificaciones. 60 Figura 3.4 Modelo de datos del gestor (v-1) 3.1.2.5 Arquitectura de la Solución Una vez estudiados los conceptos de la arquitectura cliente-servidor y las tecnologías asociadas al lado del cliente y del servidor, se puede visualizar en la Figura 3.5 Arquitectura cliente-servidor con las tecnologías involucradas como se involucran las tecnologías en la arquitectura del sistema, complementándose para constituir la base para alcanzar la solución al problema planteado en el capítulo 1. Figura 3.5 Arquitectura cliente-servidor con las tecnologías involucradas 61 3.1.3 Fase de Prototipaje Para la fase de prototipaje de esta primera iteración, se diseñan las interfaces correspondientes a la vista principal del módulo gestor, así como las que se consideren necesarias para el manejo de eventos en el calendario académico. 3.1.3.1 Prototipos de baja fidelidad Los prototipos de baja fidelidad representan una primera visión de las interfaces de usuario que se utilizan para acceder a las diversas funcionalidades de una aplicación. En el método AgilUs se les refiere como prototipos en papel, pero pueden ser realizados con cualquier herramienta que los desarrolladores deseen. Para la vista principal del módulo gestor, el equipo de desarrollo diseñó una interfaz en donde se ubican elementos asociados a la información más relevante de los procesos, a través de los cuales se puede acceder a otras funcionalidades que tendrá el gestor. En la Figura 3.6 se puede observar el prototipo descrito para dicha vista. Figura 3.6 Prototipo: Vista principal del gestor (v-1) Para el diseño de las interfaces correspondientes al calendario académico, es necesario conocer la versión actual del mismo que se encuentra en el sistema CONEST. En la Figura 3.7 se muestra el calendario de eventos al cual los administradores pueden acceder desde la pestaña Social. 62 Figura 3.7 Interfaz calendario producción El objetivo principal del calendario actual es que el personal administrativo agregue en él los eventos que son de interés para la comunidad estudiantil y docente de la facultad. Como puede verse en la figura, se trata de un calendario sencillo, donde los eventos pueden consultarse al posicionar el ratón sobre los días del mismo. Es posible agregar eventos a través de un formulario que se encuentra en la parte derecha de la vista. Cabe destacar que una vez que un evento es creado, este no puede ser modificado ni eliminado, al menos desde la aplicación, lo que hace que este componente del sistema sea muy poco flexible. En la nueva versión del calendario, se pretende ofrecer mayor flexibilidad en el manejo de los eventos, es por ello que se plantean las interfaces que se detallan a continuación. Tomando como punto de partida el calendario de la Figura 3.6, se tiene que cada día del mes corresponde a un botón donde el personal administrativo puede consultar cómodamente la lista de eventos para una determinada fecha. En la Figura 3.8 se puede observar el prototipo correspondiente a la interfaz que el sistema desplegará en una ventana modal, al pulsar con el ratón sobre alguno de los días del calendario. 63 Figura 3.8 Prototipo: Eventos para una fecha (v-1) Si el personal administrativo desea crear un evento, el sistema desplegará a través de otra modal un formulario similar al que existe del lado derecho del calendario actual. Esta interfaz se puede observar en el prototipo de la Figura 3.9. Figura 3.9 Prototipo: Crear nuevo evento (v-1) Si el personal administrativo decide seleccionar la opción de edición sobre algún evento, podrá modificar la información básica del mismo y contar con la opción de cambiarle la fecha, añadiendo flexibilidad en la planificación de actividades ante 64 cualquier eventualidad. En la Figura 3.10 se muestra el prototipo correspondiente a esta funcionalidad. Figura 3.10 Prototipo: Editar evento (v-1) Una vez se diseñaron las interfaces necesarias para llevar a cabo la implementación de los requerimientos planteados para esta primera iteración, se procede a realizar su desarrollo a nivel de código fuente en el sistema CONEST 3.0. 3.1.3.2 Implementación de requerimientos Debido a que en esta iteración se va a reemplazar un componente del sistema, se decide implementar la vista principal del gestor en el mismo sitio donde se ubica el calendario académico que actualmente se encuentra en producción. Por lo tanto, se reemplazará la pestaña Social con una nueva llamada Gestión. Para la implementación de la nueva versión del calendario académico se utilizó una gema del lenguaje Ruby llamada simple_calendar en su versión 1.1.3, la misma facilitó la implementación dentro de la vista principal del gestor, de un calendario que se actualiza mediante la técnica AJAX. El resultado final obtenido se puede observar en la Figura 3.11 que se muestra a continuación. 65 Figura 3.11 Vista principal del módulo gestor (v-1) Como puede observarse, en el calendario, el día actual se marca con un recuadro de color naranja, el mismo utilizado para colorear el número de día en las fechas donde existe algún evento planificado. El siguiente paso en la implementación es integrar al nuevo calendario las funcionalidades correspondientes al manejo de eventos, por ello se procedió implementar las interfaces diseñadas para este propósito, resultando en el siguiente conjunto de vistas. Figura 3.12 Vista eventos para una fecha (v-1) 66 En la Figura 3.12, plasmada anteriormente, se observa la implementación de la vista correspondiente al prototipo de la Figura 3.8, en la cual se tiene por cada día una tabla con los eventos correspondientes para dicha fecha y la opción de poder editarlos o eliminarlos del calendario. A continuación, en la Figura 3.13, se muestra la implementación de la vista correspondiente al prototipo de la Figura 3.9, en la cual se realizó por cuestiones de usabilidad un ligero cambio, el cual consiste en agregar un título en la parte superior que le recuerde al usuario en qué fecha está creando un nuevo evento, a fin de minimizar errores. Una vez que la información correspondiente al evento ha sido completa, el botón Guardar se encargará de crear dicho evento dentro del sistema. Figura 3.13 Vista crear evento (v-1) En la Figura 3.14 se muestra la implementación de la vista correspondiente al prototipo de la Figura 3.10. En esta se puede modificar la información del evento correspondiente así como su fecha, flexibilizando la planificación del mismo. Se puede apreciar a continuación. 67 Figura 3.14 Vista editar evento (v-1) 3.1.4 Cierre de la iteración Una vez terminada la iteración, se determinó, en una reunión, que las funcionalidades del calendario podrían expandirse aún más, permitiendo, por ejemplo, al personal de la DCE compartir a través de las redes sociales los eventos mediante la misma aplicación, también se sugiere revisar las circunstancias en las cuales un evento puede ser eliminado, a fin de evitar errores en la gestión de actividades relacionadas a los procesos académicos cuando estos sean implementados, de igual forma se requiere una interfaz para poder actualizar las fechas de los días feriados y colocar alguno nuevo o eliminarlo del calendario. 3.2 Segunda Iteración: Proceso de Inscripción y su integración al gestor del sistema. Para esta segunda iteración del proceso de desarrollo se plantean como objetivos:  Aplicar la fase de análisis al Proceso de Inscripción, para determinar las funciones que el módulo gestor deberá manejar.  Implementar en el módulo gestor las funcionalidades del Proceso Inscripción.  Realizar la integración del calendario a las redes sociales.  Extender las funcionalidades del gestor en la configuración del calendario. 68 3.2.1 Fase de Análisis En esta fase se analizan los requisitos relacionados al proceso de Inscripción de la Gestión Académica, teniendo en cuenta las actividades descritas en el planteamiento del problema como el conjunto de funcionalidades que el módulo en desarrollo debe gestionar de este proceso. 3.2.1.1 Modelo de Casos de Usos Se plantearon los siguientes casos de uso: Figura 3.15 Casos de Uso Proceso de Inscripción – Iteración 1 1. Nombre: Configurar Inscripción nuevos. Actor: Personal administrativo de la División de Control de Estudios (DCE). Precondición: Se requiere iniciar sesión en el módulo administrador del sistema CONEST 3.0. Acción: Permite configurar la apertura de la inscripción de nuevos ingresos en un período académico. 69 Pos condición: La inscripción para nuevos ingresos queda habilitada para el periodo seleccionado. Tabla 3.9 Descripción CU: Configurar Inscripción nuevos 2. Nombre: Configurar Preinscripción. Actor: Personal administrativo de la División de Control de Estudios (DCE). Precondición: Se requiere iniciar sesión en el módulo administrador del sistema CONEST 3.0. Acción: Permite configurar la apertura de la preinscripción de un periodo académico y permite mostrar los resultados de la misma a los estudiantes. Pos condición: La preinscripción queda habilitada para el periodo seleccionado y/o se muestran sus resultados a los estudiantes. Tabla 3.10 Descripción CU: Configurar Preinscripción 3. Nombre: Ejecutar Algoritmo de Selección. Actor: Personal administrativo de la División de Control de Estudios (DCE). Precondición: Se requiere iniciar sesión en el módulo administrador del sistema CONEST 3.0 y haber realizado el caso de uso 2, Configurar Preinscripción. Acción: Realizar la asignación o rechazo de aquellos estudiantes que realizaron la preinscripción, todo acorde a reglas y criterios académicos ya establecidas que permiten el manejo de las asignaciones. Pos condición: Se obtiene una lista de estudiantes asignados, la cual servirá de insumo a la Inscripción en aquellas asignaturas que requieren previa preinscripción para optar por cursarlas. Tabla 3.11 Descripción CU: Ejecutar Algoritmo de Selección 4. Nombre: Configurar Inscripción. Actor: Personal administrativo de la División de Control de Estudios (DCE). Precondición: Se requiere iniciar sesión en el módulo administrador del sistema CONEST 3.0. Acción: Permite configurar la apertura de la inscripción en un periodo académico. Pos condición: La inscripción queda habilitada para el periodo seleccionado. Tabla 3.12 Descripción CU: Configurar Inscripción 70 5. Nombre: Ejecutar Asignación de Aulas. Actor: Personal administrativo de la División de Control de Estudios (DCE). Precondición: Se requiere iniciar sesión en el módulo administrador del sistema CONEST 3.0 y haber realizado el caso de uso 4, Configurar Inscripción. Acción: Asignación automática de las aulas por sección mientras la asignatura tenga como requisito en la programación que requiere un espacio en el edificio de aulas. Pos condición: Se obtiene el mapa de Aulas con las mismas ya asignadas por asignatura, y con su horario respectivo. Tabla 3.13 Descripción CU: Ejecutar Asignación de Aulas 6. Nombre: Modificar Inscripción. Actor: Personal administrativo de la División de Control de Estudios (DCE). Precondición: Se requiere iniciar sesión en el módulo administrador del sistema CONEST 3.0 y haber realizado el caso de uso 4, Configurar Inscripción. Acción: Habilitar y deshabilitar la modificación de inscripción y los retiros de las asignaturas y de los laboratorios y visualizar las solicitudes realizadas por los estudiantes. Pos condición: Se aprueban o desaprueban las solicitudes estudiantiles y se habilitan o deshabilitan los retiros. Tabla 3.14 Descripción CU: Modificar Inscripción 7. Nombre: Generar Planillas Inscripción. Actor: Personal administrativo de la División de Control de Estudios (DCE). Precondición: Se requiere iniciar sesión en el módulo administrador del sistema CONEST 3.0 y haber realizado el caso de uso 4, Configurar Inscripción. Acción: Generar, a través del sistema, un lote de planillas por cada uno de los estudiantes inscritos en el período correspondiente y por cada escuela de la Facultad. Pos condición: Se obtiene la planilla que se anexa al expediente físico del respectivo estudiante. Tabla3.15 Descripción CU: Generar Planillas Inscripción 71 3.2.1.2 Modelo de datos Luego de iniciado el desarrollo y búsqueda de las actividades de Inscripción en el sistema, se determinó la necesidad de modificarlos atributos de la tabla actividad_proceso en el modelo del gestor, igualmente para el manejo delos días feriados en el calendario se modificaron las tablas calendario y dia_feriado. En la Figura 3.16 se visualizan los cambios, los nuevos atributos se identifican en negrita y aquellos que se eliminaron se visualizan tachados. Figura 3.16 Primeras modificaciones a Tablas del Modelo de datos del gestor En la tabla actividad_proceso:  Se sustituyó el atributo id por nro (número) para evitar confusiones, ya que las actividades están numeradas.  El atributo acción tendrá el nombre de la misma, por lo que el atributo nombre ya no es necesario, y servirá como enlace a la acción en el controlador de gestión una vez que se le dé clic a la actividad correspondiente. La ventaja de tener el nombre de la acción a nivel del modelo de datos es que se genera flexibilidad a la hora de integrar al gestor acciones que ya se encuentran en el sistema, aunque estén dispersas en el mismo, ya que permite que a nivel de la vista se enlace cada actividad a su acción correspondiente en el controlador generando modularidad, de lo contrario todas las actividades se enlazarían a una misma acción en la cual se debería aplicar la lógica del negocio para posteriormente distribuirlas a diferentes acciones según la actividad. Esto puede volverse complejo y poco extensible en el caso de que se requiera agregar otra actividad a futuro.  El atributo tipo_vista diferenciará el despliegue de las actividades, ya sean en vistas o ventanas modales, según como estén implementadas las actividades en el sistema y el análisis previo que se haya realizado sobre las mismas.  Se guardará un valor en días, semanas o meses en el atributo realizacion_estimada, del momento en el tiempo en que se debe realizar 72 una acción en el ciclo Período Académico. En ese atributo, el valor es un aproximado que se ha calculado junto con el personal administrativo debido a lo recurrente y repetitivo de las actividades de la Gestión Académica.  El atributo duración guardará un valor en días, semana o meses del tiempo estimado en que una actividad puede realizarse. En la tabla calendario se agregó el atributo tipo_evento_id para poder obtener la relación con la tabla tipo_evento, y así controlar los permisos de visualización de los eventos en el calendario dependiendo del tipo de los mismos. En la tabla dia_feriado se eliminó un atributo haciendo depuración de la misma al notar que no se utilizaba. En la Figura 3.17, que sigue a continuación, se puede observar la segunda versión del diagrama del modelo de objetos para el gestor y los cambios realizados en el mismo que ya fueron explicados anteriormente. Figura 3.17 Modelo de datos del gestor (v-2) 73 3.2.2 Fase de Prototipaje En esta segunda iteración se elaboró el prototipo de la vista donde aparecerían las actividades asociadas a los diferente procesos de la Gestión Académica, igualmente se agruparon las ventanas modales ya existentes para algunas actividades del Proceso Inscripción; otras actividades se convirtieron en vistas para aumentar la comodidad del usuario al visualizarlas o por tener más de una acción asociada para poder completarlas. 3.2.2.1 Prototipos de baja fidelidad En la vista principal del módulo gestor, se agregó el elemento llamado tabs, en inglés, que se traduce como pestañas, el cual permitió dividir las funcionalidades asociadas tanto a los Procesos como al elemento Calendario generado en la primera iteración. En este menú se divide en las siguientes pestañas:  Calendario Académico, la cual presenta la interfaz principal del gestor.  Período Académico, en donde se calcularán y se podrán visualizar las fechas estimadas para cada actividad de los procesos del ciclo Período Académico.  Parámetros Generales, en donde se podrán configurar los parámetros generales del sistema que involucran al ciclo de Período Académico pero que no pertenecen a ninguna actividad concreta de los procesos involucrados con el mismo.  Configuración Calendario, en ella se podrán configurar las fechas de los días feriados del calendario. En la Figura 3.18 se puede observar el prototipo descrito. 74 Figura 3.18 Prototipo: Vista principal del gestor (v-2) Se puede visualizar, en la esquina inferior izquierda de la Figura 3.18, un elemento que posee los procesos de la Gestión Académica, los mismos son enlaces a una interfaz donde se mostrarán las actividades correspondientes a cada proceso. Para la vista de las actividades de los procesos se diseñó una interfaz en forma de tabla donde se visualizan el nombre de la actividad, su estado y sus fechas de inicio y fin, que son los campos que se consideran relevantes en una actividad. La vista también posee un elemento llamado breadcrumbs, que se traduce como migas de pan y es una ruta de exploración que está formada por varios enlaces que reflejan la estructura jerárquica de un sitio web, este elemento permite al usuario tener una guía de la navegación y saber dónde se encuentra en el sistema y el camino que ha seguido para llegar hasta allí. En la Figura 3.19 se aprecia el prototipo. 75 Figura 3.19 Prototipo: Vista de las actividades de los Procesos Cumpliendo con uno de los objetivos planteados al inicio de la iteración, se rediseñó el prototipo de la modal de consulta con la lista de eventos, la misma que aparece en el elemento calendario en aquellos días del mes que los posean. Así se logró la inclusión de las redes sociales en el calendario. En la Figura 3.20 se puede observar que se agruparon todas las acciones que se pueden realizar sobre el evento, las mismas se representan a través de íconos existentes en el sistema que sirven como metáforas ya conocidas por el usuario. Así se tiene que el conjunto de acciones que se pueden realizar son: Editar el evento, eliminarlo o compartirlo a través de la red social twitter. Figura 3.20 Prototipo: Eventos para una fecha (v-2) 76 Si se quiere compartir el evento del calendario se desplegará una ventana modal que permitirá esta acción. La Figura 3.21 muestra el prototipo que tendrá por defecto un mensaje armado que puede modificarse. Figura 3.21 Prototipo: Ventana Modal para compartir eventos Con el nuevo elemento en el prototipo de la Vista principal del gestor que se aprecia en la Figura 3.18, se prosiguió a desarrollar la extensión de la funcionalidad para configurar las fechas del elemento calendario, diseñando el prototipo para la pestaña Configuración Calendario, cumpliendo así con otro de los objetivos planteados al inicio de la iteración. Para la interfaz de la pestaña Configuración Calendario se decidió usar como elemento central una tabla donde se visualizan el motivo del día feriado, su fecha de inicio, su fecha final y una opción para eliminarlo. Para editar el mismo servirá de enlace el nombre de cada uno de ellos. El prototipo también muestra una pequeña leyenda explicando lo que se puede realizar en la interfaz, ofreciendo al usuario un intercambio de información, y muestra un botón al final para crear un nuevo día feriado. Se visualiza lo anteriormente redactado en la Figura 3.22. 77 Figura 3.22 Prototipo: Vista principal del gestor (v-2) _ Pestaña: Configuración Calendario Para crear un nuevo día feriado o editar alguno ya existente se diseñó una interfaz en forma de ventana modal con los componentes necesarios para llenar el modelo de datos en forma de formulario. Se puede observar en la Figura 3.23. Figura 3.23 Prototipo de Modal crear/editar feriado 3.2.2.2 Implementación de requerimientos Tomando en cuenta los prototipos diseñados y los cambios realizados a los mismos en esta segunda iteración, sin olvidarla guía de estilos planteada en la Fase de Análisis de la primera iteración, el resultado se puede apreciar en las figuras a continuación. 78 En la Figura 3.24 se puede observar la nueva versión de la vista principal del gestor, con la división de funcionalidades conformada por las diferentes pestañas antes mencionadas. Figura 3.24 Vista principal del módulo gestor (v-2) En la Figura 3.25 se muestra la vista de las actividades, basada en el prototipo del mismo nombre, en este caso del Proceso Inscripción. Figura 3.25 Vista de actividades del proceso Inscripción 79 En el Proceso de Inscripción, las actividades de Inscripción Nuevos, Inscripción y Asignación de Aulas mantuvieron su despliegue original, el cual se realiza a través de ventanas modales. Se puede observar cada una de estas actividades en las figuras Figura 3.26, Figura 3.27 y Figura 3.28. Figura 3.26 Modal de la actividad Inscripción Nuevos Figura 3.27 Modal de la actividad Inscripción Figura 3.28 Modal de la actividad Asignación de Aulas 80 La actividad de Preinscripción, comprende la acción de Selección de estudiantes, en la cual se ejecuta el Algoritmo de Selección que determinará cuáles alumnos del grupo que realizó la Preinscripción cumplen con los requisitos necesarios para obtener su aprobación y así tener prioridad para inscribir la asignatura que quieren cursar y que requería de preinscripción. Por ello se decidió desplegar las acciones de Configurar la Preinscripción y de Selección de estudiantes como una vista con el elemento tab o pestaña, para facilitar la visualización de ambas acciones por su asociación. La vista puede apreciarse a continuación en la Figura 3.29. Figura 3.29 Vista de la actividad Configurar Preinscripción _ Pestaña: Preinscripción A continuación se muestra en la Figura 3.30 la pestaña Selección de estudiantes, la cual ya existía en el sistema como una ventana modal con un botón para ejecutar el algoritmo respectivo de selección para crear la lista de estudiantes a quienes se les aceptó la Preinscripción. Figura 3.30 Vista de la actividad Configurar Preinscripción _ Pestaña: Selección de estudiantes 81 La actividad Modificación de Inscripción se representaba anteriormente en una ventana modal, la misma era de gran tamaño por la cantidad de información que se desplegaba, es por ello que se decidió crearle su propia vista la cual conserva todos los elementos originales que tenía en la ventana modal como lo son los tabs o pestañas, donde se puede: Verificar las asignaturas abiertas, las reglas que se aplican en el semestre y abrir la modificación de inscripción para los estudiantes. Solamente se le agregó a la vista una nueva pestaña para contener los retiros tanto de laboratorios como de asignaturas teóricas. Se puede observar la vista descrita de Modificación de Inscripción en la Figura 3.31. Figura 3.31 Vista de la actividad Modificación de Inscripción 82 En la Figura 3.32 se puede observar la nueva pestaña Abrir Retiros que fue anexada a Modificación de Inscripción. Figura 3.32 Vista de la actividad Modificación de Inscripción_ Pestaña: Abrir Retiros Para la actividad Generar Planillas de Inscripción, se decidió que el despliegue fuera en una vista, a través de una tabla, en la cual se dividen las planillas por Licenciaturas de la Facultad haciendo más versátil, rápida y específica la actividad a la hora de generarlas, como se puede observar en la Figura 3.33. Figura 3.33 Vista de la actividad Generar Planillas de Inscripción 83 A continuación, regresando a la vista principal del gestor, se observará en la Figura 3.34 la implementación de la ventana modal para ver los detalles de los eventos, la misma que se despliega al hacer clic sobre un día del calendario que posea eventos. Figura 3.34 Ventana Modal: Detalles de los eventos En la Figura 3.35 se observa la modal para compartir un evento, la cual mantiene las restricciones de la red social twitter para publicar (máximo 140 caracteres). Una vez sea compartido el evento se verá publicado en la cuenta de twitter del sistema CONEST. Figura 3.35 Ventana Modal: Compartir Evento 84 Prosiguiendo, puede apreciarse en la Figura 3.36 la vista de la pestaña Configuración Calendario. Figura 3.36 Vista principal del gestor (v-2) _ Pestaña: Configuración Calendario La Figura 3.37 muestra la creación de un nuevo feriado, y el despliegue de un selector de fechas (datepicker) cuando se ubican en los campos correspondientes a las fechas. Esa misma modal se utiliza para la edición, la diferencia es que los campos aparecen rellenos con la información del día feriado a editar. Figura 3.37Ventana Modal: Crear feriado 85 3.2.3 Cierre de la iteración Finalizando esta iteración se realizó una reunión de equipo de desarrollo para verificar los requisitos que se cumplirían para la siguiente iteración, así mismo aquellas funcionalidades que debían mejorarse de la vista principal del gestor y de las actividades del proceso Inscripción. 3.3 Tercera Iteración: Procesos de Planificación y Calificación. Para esta tercera iteración del proceso de desarrollo se plantean como objetivos:  Aplicar la fase de análisis a los procesos de Planificación y Calificación, para determinar los requerimientos funcionales que el módulo gestor deberá manejar delos mismos.  Implementar e integrar al módulo gestor las actividades relacionadas a los procesos de Planificación y Calificación.  Realizar la implementación dela funcionalidad de la pestaña Período Académico en la vista principal del gestor.  Corregir y mejorar, de ser necesario, las actividades y funcionalidades que se integraron en la iteración anterior. 3.3.1 Fase de Análisis La fase de análisis de esta iteración abarca no solo el modelado de los procesos de Planificación y Calificación, sino también correcciones al modelo planteado para el proceso de Inscripción, pues existen un conjunto de requerimientos nuevos que deben ser agregados a las funcionalidades relacionadas con el mismo. Se inicia la fase aplicando las correcciones necesarias al modelo de casos de uso planteado en la iteración anterior para el proceso de Inscripción. Este mantiene la misma estructura, como puede observarse en la Figura 3.38, pero la descripción de dos casos de uso debe ser actualizada para detallar las nuevas funcionalidades a incluir dentro del módulo. 86 3.3.1.1 Modelo de Casos de Usos Figura 3.38 Casos de Uso Proceso de Inscripción - Iteración 2 1. Nombre: Configurar Inscripción nuevos. Actor: Personal administrativo de la División de Control de Estudios (DCE). Precondición: Se requiere iniciar sesión en el módulo administrador del sistema CONEST 3.0. Acción: Permite configurar la apertura de la inscripción de nuevos ingresos en un periodo académico, además como nueva funcionalidad, permite cargar mediante una nómina que se procesa de forma automática, la información básica de los nuevos ingresos en la base de datos del sistema, que es necesaria para realizar la inscripción. Pos condición: La inscripción para nuevos ingresos queda habilitada para el periodo seleccionado y toda la información de los mismos queda guardada en el sistema. Tabla 3.16 Descripción CU: Configurar Inscripción nuevos 2. Nombre: Configurar Preinscripción. Actor: Personal administrativo de la División de Control de Estudios (DCE). 87 Precondición: Se requiere iniciar sesión en el módulo administrador del sistema CONEST 3.0. Acción: Permite configurar la apertura de la preinscripción de un periodo académico. La nueva funcionalidad abarca la posibilidad de consultar y modificar la información de preinscripción de las asignaturas existentes en el sistema. Pos condición: La preinscripción queda habilitada para el periodo seleccionado y se pueden otorgar permiso para visualizar sus resultados a los estudiantes y a los profesores. Los datos de preinscripción de una asignatura son actualizados. Tabla 3.17 Descripción CU: Configurar Preinscripción - Iteración 2 Luego de revisar y modificar los dos casos de uso anteriores, del proceso de Inscripción realizado en la segunda iteración, se procede a realizar el modelo para los procesos de Planificación y Calificación, el mismo se observa en la Figura 3.39. Los primeros tres casos de uso pertenecen al proceso de Planificación y los tres últimos al de Calificación. Figura 3.39 Casos de Uso Procesos de Planificación y Calificación - Iteración 1 88 1. Nombre: Configurar Plantilla del Periodo Académico. Actor: Personal administrativo de la División de Control de Estudios (DCE). Precondición: Se requiere iniciar sesión en el módulo administrador del sistema CONEST 3.0. Acción: Permite configurar la plantilla del próximo período académico, estableciendo el valor a los siguientes parámetros: Cantidad de secciones, cupo disponible, horario y si se requiere un aula por cada asignatura que se vaya a ofertar en el período. Pos condición: La plantilla queda habilitada para su posterior uso en el periodo seleccionado. Tabla 3.18 Descripción CU: Configurar Plantilla del Periodo Académico 2. Nombre: Asociar Plantilla Periodo Académico. Actor: Personal administrativo de la División de Control de Estudios (DCE). Precondición: Se requiere iniciar sesión en el módulo administrador del sistema CONEST 3.0 y haber realizado el caso de uso 1, Configurar Plantilla del Periodo Académico. Acción: Permite crear un nuevo período académico al cual se le asociará la plantilla ya modificada. Pos condición: La plantilla queda asociada a un nuevo período académico y disponible para que cada jefe de departamento pueda modificar lo que falta de la misma. Tabla 3.19 Descripción CU: Asociar Plantilla Periodo Académico 3. Nombre: Permitir visualización de la Planificación. Actor: Personal administrativo de la División de Control de Estudios (DCE). Precondición: Se requiere iniciar sesión en el módulo administrador del sistema CONEST 3.0 y haber realizado el caso de uso 2, Asociar Plantilla Período Académico. Acción: Permite habilitar la visualización de la planificación para docentes y estudiantes. Pos condición: La planificación queda habilitada para su visualización por parte de los docentes y/o de los estudiantes. Tabla 3.20 Descripción CU: Permitir visualización de la Planificación 89 4. Nombre: Generar calendario de Calificación. Actor: Personal administrativo de la División de Control de Estudios (DCE). Precondición: Se requiere iniciar sesión en el módulo administrador del sistema CONEST 3.0. Acción: Permite generar el calendario de evaluaciones para el proceso de Calificación de un periodo académico. Pos condición: Cada docente recibe un correo informándole que el calendario de evaluaciones está habilitado para visualizarse y consultarse. Tabla 3.21 Descripción CU: Generar calendario de Calificación 5. Nombre: Configurar Calificación. Actor: Personal administrativo de la División de Control de Estudios (DCE). Precondición: Se requiere iniciar sesión en el módulo administrador del sistema CONEST 3.0 y haber realizado el caso de uso 4, Generar calendario de Calificación. Acción: Permite realizar la apertura de la calificación de un periodo académico, visualizar las asignaturas que han sido calificadas y enviarle recordatorios a los docentes para que califiquen las asignaturas de las cuales están a cargo. Pos condición: La calificación ha sido activada, se han visualizado las asignaturas calificadas y se ha recordado a los docentes calificar las mismas. Tabla 3.22 Descripción CU: Configurar Calificación 6. Nombre: Generar planillas de notas. Actor: Personal administrativo de la División de Control de Estudios (DCE). Precondición: Se requiere iniciar sesión en el módulo administrador del sistema CONEST 3.0 y que haya finalizado el calendario de evaluaciones y todos los docentes hayan realizado la calificación respectiva de sus asignaturas. Acción: Permite generar en lote, por cada Licenciatura, las planillas de cada sección de las asignaturas ofertadas en el período académico. Las planillas contienen las notas de todos los estudiantes que cursaron las asignaturas. Junto a cada lote de planillas se genera un reporte resumiendo el estado de la Calificación. Pos condición: Las planillas son generadas y se cuenta con un registro tangible de los eventos ocurridos durante el proceso de Calificación. Tabla 3.23 Descripción CU: Generar planillas de notas 90 3.3.2 Fase de Prototipaje En esta tercera iteración se elaboró el prototipo de la pestaña Período Académico que se encuentra en la vista principal del módulo gestor; igualmente se agruparon las ventanas modales ya existentes para algunas actividades de los Procesos de Planificación y Calificación así como los enlaces que llevan a la realización de otras actividades de estos procesos, algunas se convirtieron en vistas para aumentar la comodidad del usuario al visualizarlas. 3.3.2.1 Prototipos de baja fidelidad En la vista principal del módulo gestor se encuentra un menú, con varios elementos del tipo pestañas que se explicaron en la iteración anterior, y del cual se realizó el prototipo para la vista de la pestaña Período Académico, en donde se calcularán y se podrán visualizar las fechas estimadas para cada actividad de los procesos del ciclo con el mismo nombre, Período Académico. Se continuó optando por el diseño de una interfaz en forma de tabla con los campos que se consideran relevantes de una actividad, el nombre de la actividad, su estado y sus fechas de inicio y fin para el despliegue de las mismas. La tabla se dividió por secciones, una por cada proceso de la Gestión Académica. La interfaz cuenta también con un selector del período académico a visualizar en la parte central superior, un botón para agregar un nuevo período académico al sistema, ubicado en la zona inferior izquierda, y en el caso en que no se hayan aún calculado las fechas tentativas para la realización de cada actividad posee un botón, en el centro de la interfaz, para realizar el cálculo. Se puede visualizar en la Figura 3.40 a continuación. 91 Figura 3.40 Prototipo: Vista principal del gestor (v-2) _ Pestaña: Período Académico 3.3.2.2 Implementación de requerimientos Usando el prototipo diseñado, el resultado se muestra en la Figura 3.41 donde se aprecia el cálculo tentativo que el sistema realizó para el período académico escogido. Figura 3.41 Vista principal del gestor (v-2) _ Pestaña: Período Académico 92 En las actividades del proceso de Planificación se decidió que la actividad Configurar Plantilla se enlazara a la vista ya existente de la misma en el sistema, para la configuración de las planillas de períodos académicos. Por otro lado, la actividad Asociar Plantilla a Período mantiene su despliegue en una ventana modal y la actividad de Permisos de Visualización pasa a ubicarse en una vista diferente, con el objetivo de hacer más afable su despliegue ya que son varios permisos contenidos, esta última se puede ver en la Figura 3.42 que sigue a continuación. Figura 3.42 Vista de la actividad Permisos de Visualización Para el despliegue de las actividades del Proceso de Calificación se realizó lo siguiente:  Las actividades Generar calendario de calificación y Abrir calificación mantuvieron su despliegue original en ventanas modales.  Ver calendario de calificación y Ver materias calificadas se enlazaron a sus vistas ya existentes en el sistema.  La actividad Generar Planilla de notas se ubicó en una vista igual a la que puede visualizarse en la Figura 3.33Figura 3.33 Vista de la actividad Generar Planillas de Inscripción, donde se ubica la vista para las planillas de inscripción, a fin mantener consistencia entre las interfaces del gestor y hacer más cómoda su visualización. Debido a que esta iteración también tiene implicaciones sobre las funcionalidades del Proceso de Inscripción, es necesario describir los efectos de los cambios realizados sobre la implementación del gestor. Para empezar, en la actividad Inscripción de Nuevos se requiere que antes de poder activarla se cargue en el sistema un archivo en formato XLS (eXceL Spreadsheet). 93 Este archivo contiene la nómina con la información de todos los nuevos ingresos, facilitando así la introducción de los datos al sistema por parte del personal administrativo que antes debía realizar manualmente la inserción de estos registros en la base de datos, por tanto también se minimizan los errores que puedan ocurrir al acceder a la misma. Se puede visualizar en la Figura 3.43. Figura 3.43 Vista de la Actividad Inscripción Nuevos (v-2) Una vez cargada la nómina se despliega el resto de la vista, donde se aprecia la información del archivo XLS, la opción para abrir la Inscripción y la opción de agregar un nuevo estudiante en caso de ocurrir algún cambio de último momento. Lo descrito se muestra a continuación en la Figura 3.44. Figura 3.44 Vista de la Actividad Inscripción Nuevos (v-2) 94 El segundo cambio ocurre en la actividad Preinscripción y en la Selección de Preinscritos, ambas complementos la una de la otra y enlazadas a la misma interfaz. En la pestaña Seleccionar Estudiantes se agregó un enlace que permite consultar la oferta académica del período donde se puede visualizar, una vez ejecutado el algoritmo de selección, todos los estudiantes preinscritos por asignatura de cada Licenciatura; así mismo se le agregó un elemento buscador para consultar las asignaturas de la oferta académica y verificar si éstas requieren o no una preinscripción. Se ven estos dos elementos en la Figura 3.45. Una vez se ha encontrado en el buscador una asignatura que requiera preinscripción se desplegará en la vista, mediante la técnica AJAX, una segunda interfaz con un menú formado por dos pestañas, la cual se detalla en la Figura 3.46. La primera, Criterios de Selección, mostrará los criterios y el algoritmo por los cuales se rige esa asignatura y permitirá la modificación de los mismos. La segunda, Lista de Preinscritos, permitirá visualizar la lista de estudiantes que preinscribieron la asignatura, y una vez ejecutado el algoritmo de selección, la lista se mostrará dividida entre estudiantes aceptados y estudiante rechazados. En la Figura 3.45, que sigue a continuación, también se aprecia la nueva pestaña Visualizar la Preinscripción, donde se pueden otorgar o retirar los permisos a los docentes para consultar los resultados de la preinscripción. Figura 3.45 Vista de la actividad Configurar Preinscripción _Pestaña: Selección de estudiantes (v-2) 95 En la Figura 3.46 se visualiza claramente las especificaciones acordes a la preinscripción de la asignatura de código 2145 y nombre Fotografía I. Figura 3.46 Vista de la actividad Configurar Preinscripción _ Pestaña: Selección de estudiantes (v-2) 3.3.2.3 Evaluaciones de usabilidad En esta iteración se tiene una versión del gestor con funcionalidades bastante desarrolladas por lo que se realizó la primera evaluación de usabilidad usando la técnica, propuesta por el método AgilUs, del protocolo del pensamiento manifestado. El instrumento de evaluación aplicado fue un cuestionario que permitiese registrar las respuestas obtenidas. Se evaluó a tres personas de la DCE, dos de ellas son parte del personal administrativo y son dos de las personas que más utilizan y conocen el sistema CONEST desde sus inicios. La tercera persona es parte del personal de la DCE pero no posee amplios conocimientos sobre las actividades administrativas, ni tiene experiencia con el módulo administrador del sistema CONEST 3.0. El cuestionario constó de una serie de tareas a realizar seguidas de preguntas cerradas en cuanto al tiempo que les tomó realizar las tareas y de varias preguntas abiertas para saber el por qué les tomó ese tiempo llevarlas a cabo. También determinó si se evidenciaban o no algunos aspectos de usabilidad en el sistema. Al mismo tiempo los participantes expresaron en voz alta sus pensamientos y opiniones sobre las tareas que realizaron como lo estipula el protocolo del pensamiento manifestado. 96  Prueba El cuestionario posee ocho preguntas del tipo cerradas. Seis preguntas para analizar cuantitativamente la facilidad de realizar la actividad requerida, y dos preguntas en forma de afirmación cuyas respuestas va en una escala del 1 al 5 para medir qué tan de acuerdo se está con la afirmación. El cuestionario también posee seis preguntas del tipo abiertas que proporcionarán información cualitativa sobre la realización de las actividades y de la versión actual del módulo en general. Algunas preguntas sólo podían responderse si el participante estaba muy familiarizado con los procesos de la Gestión Académica, por lo tanto el participante que no hace parte del personal administrativo no pudo realizarlas como se estimaba. La estructura del instrumento aplicado en esta prueba se puede visualizar en el Anexo 1.  Resultados A continuación se muestran un conjunto de gráficos donde se pueden observar las respuestas obtenidas de la evaluación, representadas en función del tiempo requerido por los participantes para realizar las actividades y el motivo ofrecido por cada uno como justificación para dicho tiempo. Figura 3.47 Cuestionario Actividad 1 Las respuestas de los usuarios coinciden, siendo el elemento calendario lo primero que llama la atención en el módulo gestión, ello reafirma el objetivo de diseño de la interfaz principal, donde se quería que ese elemento fuera el protagonista para el 97 manejo del calendario académico, además que refuerza el principio de usabilidad de correspondencia con el mundo real. De igual forma, el principio de reconocimiento antes que recuerdo se aplica, ya que se ubica rápidamente el módulo de gestión siendo la primera vez que se entra en el sistema con ese módulo visible. Figura 3.48 Cuestionario Actividad 2 En esta actividad los participantes expresaron la comodidad de poder cargar en el sistema un archivo XLS en lugar de insertar a mano la información de cada estudiante de nuevo ingreso, lo cual también les hace la actividad más rápida. Incluso el participante que nunca había usado el módulo administrador comentó que era una tarea fácil y rápida de realizar y le parecía eficiente. Figura 3.49 Cuestionario Actividad 3 98 En las respuestas se puede notar que, aunque no se esté familiarizado con el sistema, la actividad se logra realizar en un tiempo bastante corto; por lo tanto su localización es intuitiva y está bien señalizada. Figura 3.50 Cuestionario Actividad 4 Para la actividad de selección de preinscritos uno de los usuarios administradores opinó que era redundante tener esta actividad aparte de la preinscripción ya que ambas siempre se localizaban en el mismo sitio, puesto que la selección es un paso necesario para completar la preinscripción. Figura 3.51 Cuestionario Actividad 5 Al realizar esta actividad se tuvo que intervenir y recordar a los participantes que se estaban probando sólo los elementos con los procesos, ya que al leer sobre planificación empezaron a navegar por las pestañas de período académico, configuración de calendario y parámetros generales. Igualmente se corrigió la 99 pregunta a: Modificar los permisos de visualización de la planificación. Con ello sólo un participante se rindió luego de tres minutos buscando. Figura 3.52 Cuestionario Actividad 6 En esta actividad se esperaba que el participante que no tenía interacción con el módulo administrador intentara pero no consiguiera realizar la actividad, lo cual ocurrió. Era de esperarse ya que el modelo del negocio para los retiros es verlos como una modificación de inscripción por parte de los estudiantes, lo cual es difícil de entender si no se está familiarizado con los procesos académicos a nivel administrativo. Como se puede visualizar, al personal administrativo también le costó completar la actividad. Uno de los administradores comentó incluso, que era mejor que los retiros estuvieran como actividad aparte y no involucrados a ningún proceso, ya que de esta manera serían más fáciles de ubicar. Se intuye que la dificultad para encontrar la actividad se debe al conflicto entre las reglas del negocio que se quieren aplicar en el módulo y la forma en que el sistema despliega las actividades sin unirlas a ningún proceso específico y todas bajo la opción de Sistema. De las dos preguntas restantes, todos respondieron estar totalmente de acuerdo con la siguiente afirmación: “Al entrar al sistema CONEST se localiza fácilmente el módulo Gestión”. De la segunda pregunta restante se pueden ver los resultados en la Figura 3.53. 100 Figura 3.53 Cuestionario pregunta número 14 Se notó que, debido a que el elemento que contenía los procesos en la interfaz se encontraba abajo y se debía hacer scroll, desplazamiento hacia abajo para poder verlo, se hacía difícil ubicarlo en la pantalla principal. Uno de los usuarios administrativos indicó que preferiría que estos se encontraran arriba a nivel de los otros elementos, como el calendario, para que fueran más visibles. Con la realización de esta prueba se obtuvo un mejor entendimiento del modelo mental del usuario y de su interacción con el producto. Fue efectiva para recolectar ideas y sugerencias que pueden ser incorporadas en el diseño del módulo.  Análisis de la Interfaz Para finalizar la etapa de evaluaciones de esta iteración, se llevó a cabo un análisis de la interfaz principal del gestor del sistema, para ello se utilizó la herramienta web Feng-Gui, un portal que permite realizar una prueba visual a un sitio web dada su URL. En la versión gratuita de esta prueba, se genera una imagen donde el portal coloca lo que, según su análisis interno, son los tres primeros elementos que captan la atención del ojo humano en el sitio web. Al analizar la interfaz actual del gestor del sistema, se obtuvo como resultado la imagen que se muestra en la Figura 3.54. 101 Figura 3.54 Vista principal del gestor analizada por Feng-GUI Como se observa en la figura anterior, según Feng-GUI, lo primero que capta el ojo humano al acceder a la interfaz es el elemento calendario académico; lo que refuerza el objetivo planteado en su diseño. 3.3.3 Cierre de la Iteración Gracias a la evaluación realizada, se obtuvo un mejor entendimiento del modelo mental del usuario y de su interacción con la versión del producto, lo que llevó al equipo de desarrollo a trabajar en las sugerencias realizadas por los participantes en la evaluación y a pensar en formas de mejorar la navegabilidad del módulo gestor, aumentando aún más la usabilidad del mismo. 102 3.4 Cuarta Iteración: Manejo del Calendario Académico e integración de los procesos. Para esta cuarta iteración del proceso de desarrollo se plantean como objetivos:  Aplicar la fase de análisis a las actividades de los procesos de Inscripción, Planificación y Calificación para determinar los indicadores que presentarán en el módulo gestor.  Desarrollar el elemento indicador del avance de los procesos, el cual se encuentra en la vista principal del módulo gestor.  Integrar en la implementación de las interfaces, de los procesos y sus actividades, en el módulo gestor, las nuevas propuestas surgidas de las sugerencias obtenidas en la evaluación de usabilidad de la iteración anterior. 3.4.1 Fase de Análisis 3.4.1.1 Guías de Estilos Se eligieron cuatro colores diferentes para identificar el progreso individual de cada proceso a través de los indicadores. Los mismos se muestran a continuación: HTML: #00CCFF HTML: #FF9933 HTML: #99CC66 HTML: #FFFF99 RGB: 0 204 205 RGB: 25515351 RGB: 153204102 RGB: 255 255 153 Inscripción Planificación Calificación Egreso De esos colores se agregaron tres a la guía de estilos, ya que el de Planificación pertenece a la paleta de colores de los elementos de la interfaz. 3.4.1.2 Modelo de datos Para el desarrollo del módulo gestor del sistema CONEST 3.0, es necesario modelar objetos nuevos. Mediante los mismos será posible llevar el control de las actividades asociadas a los procesos de la Gestión Académica así como las fechas en las cuáles deben ser realizadas. El nuevo modelo que se plantea es tipo_status_actividad, donde se tendrá la información del estado de las actividades de cada proceso, lo cual ayudará con la 103 lógica del gestor para relacionar la fecha en la que se debe realizar una actividad y si ésta fue o no realizada al tiempo estimado. Se visualiza en la Figura 3.55. Figura 3.55 Modelo de datos: tipo_status_actividad Sus campos son: - id, que los identifica inequívocamente con un acrónimo de tres letras. - Nombre, el nombre de cada estado en el que puede estar una actividad. - Descripción, que posee la descripción de cada estado de las actividades. Los estados son los siguientes:  Hoy: la fecha en que debe hacerse la actividad es la actual.  En proceso: la actividad fue iniciada pero aún no ha concluido.  Pendiente: la actividad no se realizó en la fecha estimada y aún no se ha realizado.  Próxima: la fecha en que se debe iniciar la actividad está cercana.  Realizada: la actividad fue iniciada y finalizada. Una vez realizada la primera prueba a una parte del personal de la DCE, se percibió que algunas actividades, al no estar listadas explícitamente, se perdían de la vista del usuario debido a la falta de costumbre de englobarlas en una actividad macro, si bien el personal sabe que una actividad como Retiro de Materias es parte de la Modificación de Inscripción, en el sistema siempre se presentaron de manera aislada, lo cual no sigue las reglas de negocio establecidas en la DCE y que se han querido implementar en el módulo gestor. Asimismo, algunas actividades que se componen de diversos pasos como la Preinscripción (que abarca preinscripciones y selección de estudiantes en actividades diferentes) parecieron redundantes al personal de la DCE. Por ello se consideró la implementación de sub actividades para las actividades, de manera de incluir esas actividades que se percibieron como redundantes dentro de la actividad principal a la cual pertenecían y de colocar explícitamente aquellas que se perdieron de vista, sin embargo, cuando se incluyeron en el modelo de datos y se procedió a su implementación en la aplicación, se observó que agregaban mucha redundancia en el modelo de datos y además podían no requerirse en el proceso de desarrollo. Luego de una reunión del equipo de trabajo, en la cual se analizó en profundidad esta situación, se decidió eliminar las sub actividades como solución, en cambio se 104 prefirió usar los cambios de estado y la colocación explícita de actividades como solución. Al analizar la lógica de cambio de estado de las actividades, (pasar de próxima a ejecución, finalizada, pendiente, etc.) Se determinó que era más sencillo no implementar sub actividades, sino impedir, a través de la lógica de cambio de estados, que la actividad principal se diera por finalizada sin que las sub actividades, implicadas en ella, lo hicieran antes. Cambio de estado de las actividades Para que la lógica de cambio de estado resultara según lo esperado, se establecieron que las condiciones para que las actividades cambiasen su estado serían las siguientes: Actividades del Proceso de Inscripción Preinscripción: Esta actividad se da por iniciada cuando se habilita por primera vez la preinscripción en el período académico. Se dará por finalizada únicamente cuando el algoritmo de selección de estudiantes sea ejecutado para el período. Dentro de esta actividad también se puede configurar si los estudiantes pueden ver o no los resultados de la preinscripción, pero esto no se toma en cuenta para cambiar el estado de la actividad, pues es un parámetro que el personal de la DCE puede modificar en cualquier momento según lo requieran. Inscripción de Nuevos: Esta actividad se da por iniciada cuando se habilita la inscripción de nuevos en el período académico, y se da por finalizada cuando el personal deshabilita la actividad. Inscripción de Regulares: Esta actividad se dará por iniciada cuando se habilite por primera vez la inscripción en el período y se dará por finalizada cuando la inscripción sea deshabilitada por el personal de la DCE. Asignación de Aulas: Esta actividad se da por iniciada cuando se ejecuta el algoritmo de asignación de aulas para el período académico. Finaliza cuando se configura como verdadero el parámetro que regula la visibilidad de la asignación de aulas para los estudiantes, pues antes de eso, el personal de la DCE puede realizar los cambios pertinentes en la asignación de cada aula. Modificación de Inscripción: Esta actividad, anteriormente abarcaba la configuración de los retiros para estar completa, pero luego de las pruebas realizadas al personal de la DCE, se determinó que lo más conveniente era separar ambas actividades, por lo que esta actividad se da por iniciada cuando se habilita la 105 modificación de inscripción del período académico, y se finaliza una vez es deshabilitada por el personal de la DCE. Abrir Retiros: Esta actividad se separó en: Abrir Retiros, Cerrar Retiro de Laboratorios y Cerrar Retiros de Materias, para que pudiera visualizarse explícitamente como actividades diferentes, ya que tienen fechas distintas aun cuando se acceden a través de la misma interfaz. Abrir Retiros se da por iniciada cuando se habilita al menos uno de los retiros del período académico, y se da por finalizada cuando se habilitan ambos. Cerrar Retiro de Laboratorios: Esta actividad no pasa por el estado de ejecución, sencillamente se da por terminada cuando se deshabilitan los retiros de laboratorios en el período académico. Cerrar Retiro de Materias: Esta actividad solo cambia su estado a finalizada, cuando se deshabilitan los retiros de materias teóricas en el período académico. Generar Planillas de Inscripción: Inicia una vez que el personal de la DCE empieza la generación de planillas de inscripción, se da por finalizada cuando todas las planillas de inscripción de cada escuela se generaron al menos una vez para el período académico actual. Actividades del Proceso de Planificación Configurar Plantilla: Inicia cuando se accede desde el período académico a la configuración de las plantillas y finaliza cuando se crea el siguiente periodo académico en el sistema, pues se asume que al crear el período nuevo, la plantilla contiene todos los cambios necesarios para su planificación. Asociar Plantilla: Esta actividad sólo cambia su estado a finalizada una vez que se crea el nuevo período académico. Permisos de Visualización: Inicia cuando se accede por primera vez, en el período actual, a la configuración de visualización de las planificaciones para estudiantes y docentes. Esta es una de las pocas actividades del sistema que finaliza automáticamente una vez que transcurre la fecha tope establecida para modificar estos parámetros. Actividades del Proceso de Calificación Generar Calendario de Exámenes: Inicia cuando se despliega por primera vez la modal donde el personal de la DCE configura las fechas de exámenes finales y reparación del período académico. Finaliza una vez que el algoritmo de asignación de fechas y aulas para exámenes del período actual es ejecutado en el sistema. 106 Modificar Calendario Calificación: Esta actividad inicia cuando el personal administrativo de la DCE ingresa, por primera vez en el período académico actual, al calendario de exámenes generado. Al calendario le pueden realizar las modificaciones que se consideren pertinentes antes de comenzar la calificación. Esta actividad se da por finalizada al habilitar la calificación, sin embargo el personal todavía tendrá acceso al calendario de exámenes y podrá realizar configuraciones sobre el mismo, si así lo requirieran. Abrir Calificación: Esta actividad solo cambia su estado a realizada cuando se habilita por primera vez la calificación para el período académico. Ver Materias Calificadas: Inicia una vez que se abre la calificación y el sistema la finaliza automáticamente una vez transcurre la fecha programada para su cierre. Generar Planillas Notas: Empieza al generar las planillas de notas de las escuelas en el período académico actual y finaliza cuando se han generado, por lo menos una vez, las planillas de todas las escuelas. Para mantener la flexibilidad y prevenir errores, se determinó que aunque una actividad haya finalizado el personal de la DCE puede acceder a ella y realizar las modificaciones necesarias a sus parámetros, sin embargo el estado de la misma ya no se verá afectado. Se realizaron algunas modificaciones a los modelos ya existentes, las mismas se visualizan en la Figura 3.56, donde los nuevos atributos se identifican por estar en negrita y aquellos que se eliminaron se visualizan tachados. Figura 3.56 Segundas modificaciones a Tablas del Modelo de datos del gestor 107 De la tabla calendario se eliminó el atributo tipo que existía en un inicio en el sistema, ya que su implementación es innecesaria. De igual forma se agregó un nuevo campo, orden, en la tabla proceso_gestion_academica por comodidad y consistencia en la secuencia de procesos del ciclo de Período Académico. Se agregaron tres atributos en la tabla actividad_proceso:  Aplica_en_intensivo indica si la actividad aplica o no en periodo intensivo.  Se_autofinaliza indica si la actividad debe finalizarla el usuario o el sistema.  Tipo_evento_id permite saber qué tipo de evento es la actividad, lo que se utiliza en el calendario académico restringiendo la visibilidad de la misma a los usuarios que no sean de determinado rol. En la tabla tipo_evento se incluyó uno nuevo, dando un total de tres tipos: Académico, Feriado y Administrativo. Los primeros dos lo pueden visualizar todos los usuarios y el último sólo podrá verlo un usuario de rol administrativo. En la Figura 3.57 que sigue a continuación, se puede observar la tercera versión del diagrama que contiene los modelos de objetos usados en el gestor. 108 Figura 3.57 Modelo de datos del gestor (v-3) 3.4.2 Fase de Prototipaje 3.4.2.1 Prototipos de baja fidelidad Tomando en cuenta las sugerencias planteadas por los usuarios en la evaluación de usabilidad, se decidió hacer una reestructuración de la interfaz principal y por ende de su prototipo. En la Figura 3.58 pueden notarse las alteraciones realizadas. 109 Figura 3.58 Prototipo: Vista principal del gestor _ Modificaciones Se movieron todos los elementos de las actividades y se juntaron a la derecha de la interfaz. La pestaña con el nombre de Período Académico fue sustituida por Procesos, lo que se piensa ayudará a conseguir los procesos más rápido, evitará confusiones y permitió quitar la caja de procesos que existía dándole más espacio al calendario académico. Por último, se cambió la pestaña Configuración de Calendario ya que el nombre causaba confusión y se prefirió utilizar el nombre Eventos. El prototipo final puede verse en la Figura 3.59. 110 Figura 3.59 Prototipo: Vista principal del gestor (v-3) Otro prototipo que se diseñó fue el del elemento línea de tiempo. La línea de tiempo será representada con una barra de progreso, esta barra indicará visualmente la cantidad de semanas transcurridas en el período académico actual. Igualmente el elemento posee un enlace, en la cantidad de semanas transcurridas, con el cual se podrán modificar las fechas de inicio y fin del período actual. Se visualiza el prototipo en la Figura 3.60. Figura 3.60 Prototipo: Vista principal del gestor_ Elemento: Línea de Tiempo 111 Para finalizar el diseño de la vista principal se realizó el prototipo del elemento que mostrará el estado de los procesos. Este elemento consta de un selector para elegir el período académico al cual se le quiere ver el estado de cada uno de sus procesos. El estado o avance de cada proceso se medirá según la cantidad de actividades que hayan sido realizadas de los mismos y se mostrará visualmente mediante una barra de progreso, aparte aparecerá escrito la cantidad de actividades realizadas. Cada proceso del elemento será un enlace a sus respectivas actividades para facilitar la verificación y realización de las mismas. Se puede detallar el elemento en la Figura 3.61 Figura 3.61 Prototipo: Vista principal del gestor_ Elemento: Estado de Procesos Una vez implementado en el modelo de datos el estado de las actividades se prosiguió a diseñar su despliegue en la interfaz; para ello se le asignaron colores, de las guías de estilo, que los representarían visualmente y funcionarían como un indicador. En la Tabla 3.24 se encuentran los colores seleccionados. Estado Color: Nombre HTML RGB Hoy Azul oscuro #009999 0 153 153 En Proceso Amarillo #FFFF00 255 255 0 Pendiente Rojo #FF3333 255 51 51 Realizada Verde #66CC66 102 204 102 Próxima Azul claro #99CCFF 153 204 255 Tabla 3.24 Estados de los Procesos y sus colores 112 En la Figura 3.62 se visualizan los indicadores de los estados en la vista de la pestaña Procesos, la cual además, tendrá cada actividad con un enlace a la misma para brindar al usuario mayor rapidez de acceso a la ejecución de las actividades. Figura 3.62 Prototipo: Vista principal del gestor (v-3) _ Pestaña: Procesos (v-2) Una vez se tienen definidos los indicadores de cada estado, se procede a diseñar el elemento de la vista principal que contendrá las actividades. En la vista habrá tres elementos, los cuales separarán las actividades según la importancia de su realización y el estado en el que se encuentren, todo ello para brindarle una información valiosa en tiempo al usuario. Se dividen en:  Hoy, donde estarán las actividades con fecha del día actual y aquellas con el estado pendiente.  En ejecución, donde estarán las actividades que se encuentran activas pero que aún no finalizan.  Próximas, donde estarán las actividades de fechas cercanas. La actividad en el elemento será un enlace a una ventana modal en la cual se podrán modificar las fechas de inicio y fin de la actividad, de acuerdo al estado de la misma, y permitirá proceder a ejecutar la actividad. Aparte el elemento desplegará el 113 indicador de estado y el período académico al cual está asociada la actividad. Puede visualizarse en la Figura 3.63. Figura 3.63 Prototipo de las actividades de la vista principal del gestor El prototipo de la ventana modal que se desplegará al acceder a alguna actividad se detalla en la Figura 3.64. Sólo a las actividades en los estados hoy, pendiente y próxima se les puede modificar ambas fechas, a las actividades con el estado en proceso sólo se les podrá cambiar la fecha de fin. Figura 3.64 Prototipo Detalles de actividad 3.4.2.2 Implementación de requerimientos Una vez reestructurada la vista principal del gestor se prosigue a implementar los cambios, aplicando los diseños realizados tanto a la vista general como a los elementos específicos de la interfaz. En la Figura 3.65, donde el período actual es del tipo intensivo, se muestra la implementación de los indicadores de la línea de tiempo. 114 Figura 3.65 Vista principal del gestor_ Elemento: Línea de tiempo El elemento que muestra el estado de los procesos puede detallarse en la Figura 3.66 donde el período académico seleccionando es el 01-2015. Figura 3.66 Vista principal del gestor _ Elemento: Estado de los procesos La nueva versión de la interfaz principal del gestor se aprecia en la Figura 3.67, donde también aparecen los distintos elementos antes mencionados. Figura 3.67 Vista principal del gestor (v-3) 115 Para ver el detalle de alguna actividad se desplegará la ventana modal diseñada, la misma se muestra en la Figura 3.68. Figura 3.68 Ventana Modal: Detalles de actividad En la Figura 3.69 se observa la nueva implementación de la pestaña Procesos. Figura 3.69 Vista principal del gestor (v-3) _ Pestaña: Procesos (v-2) 116 3.4.3 Cierre de la Iteración Terminando esta iteración, se planteó la realización de unas nuevas evaluaciones a los usuarios para constatar el efecto de los cambios realizados en la interfaz y corroborar el aumento de la usabilidad gracias a los mismos. Igualmente, se analizaron aquellas funcionalidades que faltaban como la agrupación de los parámetros generales y aquellas que debían extenderse como la de la pestaña Eventos. 3.5 Quinta Iteración: Funcionalidades finales del gestor y pruebas de aceptación del sistema Para esta quinta y última interacción se plantearon los siguientes objetivos:  Completar las funcionalidades faltantes del calendario de eventos.  Realizar pruebas de aceptación del módulo gestor en su totalidad, aplicando para ello los artefactos propuestos por el método AgilUs.  Corregir los errores de usabilidad encontrados en el módulo gestor, a fin de poder implantarlo, totalmente funcional, en el ambiente de producción del sistema CONEST 3.0. 3.5.1 Fase de Análisis La fase de análisis de esta iteración abarca el modelado de funcionalidades adicionales para completar el módulo gestor, las mismas se encuentran en las pestañas: Procesos, Parámetros Generales y Eventos. Para la pestaña Procesos, se desarrollará la funcionalidad de actualización de fechas de las actividades, la cual es idéntica a la que se tiene en las tablas de actividades de la ventana principal del gestor, pero que será agregada también dentro de la tabla de actividades que se encuentra en dicha pestaña. Para la pestaña Parámetros Generales, se debe realizar un estudio del contenido que está registrado en el modelo de datos del sistema, para diseñar una interfaz que permita consultarlos y actualizar sus valores. Finalmente, para la pestaña Eventos, se requiere poder consultar, actualizar, crear o eliminar los eventos que se muestran en el calendario académico ubicado en la vista principal del gestor. Los artefactos desarrollados para esta fase se presentan a continuación. 117 3.5.1.1 Guía de Estilos La intención del equipo de desarrollo es lograr que el usuario pueda distinguir sin mayor esfuerzo entre los eventos del calendario que corresponden a días feriados y aquellos que corresponden a actividades de la Gestión Académica. Por lo tanto, se determinó que los eventos se identificarían con los siguientes colores. HTML: #0066CC HTML: #555555 RGB: 0 40 80 RGB: 33 33 33 Académicos/Administrativos Días Feriados Por tratarse de colores oscuros, se puede pensar que no serán fáciles de distinguir por el usuario, sin embargo, al usar estos tonos se previene la sobrecarga cognitiva en el calendario evitando el ruido visual, el cual es molesto para la vista. Al tener colores particulares se podrán diferenciar los tipos de evento por su presentación. En el caso de los días feriados, el número será presentado con el tono gris seleccionado, mientras que en el caso de los eventos académicos o administrativos, el número será encerrado dentro de una circunferencia cuyos bordes serán del color azul oscuro. De este modo, aunque las tonalidades pudieran llegar a confundirse, la presentación marcará la diferencia. Cabe destacar que si un día posee eventos de todos los tipos, la presentación le da prioridad a los eventos académicos y administrativos antes que a los feriados. 3.5.1.2 Modelo de Datos Durante esta etapa se realizaron cambios en el modelo de datos asociado a las actividades de los procesos con el fin de ajustar el cálculo de las fechas tentativas para los períodos intensivos. Los cambios introducidos se muestran en la Figura 3.70 a continuación. 118 Figura 3.70 Modificación al Modelo de datos: Tabla actividad_ proceso Como puede observarse en la figura, el modelo ahora posee dos atributos nuevos:  realizacion_estimada_intensivo: Atributo que indica la cantidad de tiempo previo o póstumo con relación a la fecha pivote, en que una actividad debe ser realizada durante un período académico del tipo intensivo.  duracion_intensivo: Un atributo que indica el tiempo de duración de una actividad para un período académico del tipo intensivo. Con estos atributos nuevos, se pretende ajustar el algoritmo de cálculo de fechas tentativas para las actividades que apliquen en intensivo, dado que la duración de estos períodos es menor y por lo tanto las actividades se aplican en un tiempo más reducido. Los datos para completar los valores de estos campos fueron consultados con el personal de la DCE, a fin de obtener los valores más reales posibles para las fechas de los intensivos. 3.5.2 Fase de Prototipaje La fase de prototipaje de esta iteración abarca el diseño e implementación de las funciones de las pestañas Parámetros Generales y Eventos existentes en el módulo gestor, así como ajustes visuales para la pestaña Procesos y el cálculo de las fechas aproximadas para la realización de actividades en períodos intensivos. 119 3.5.2.1 Prototipos de baja fidelidad Para extender las funcionalidades de la pestaña Eventos se diseñaron un total de tres interfaces, las cuales son accesibles a través de pestañas internas, que se especifican a continuación. La primera pestaña contiene la información de los días feriados, donde se despliega la vista que existía con anterioridad al acceder a Eventos. Su funcionamiento sigue siendo el mismo que poseía anteriormente, permitiendo configurar la información relacionada a los días feriados que se encuentran almacenados en el sistema. Este prototipo se muestra en la Figura 3.71. Figura 3.71 Prototipo: Pestaña Eventos. Configuración de Días Feriados (v-1) La segunda pestaña está relacionada con la información de los eventos académicos y administrativos almacenados en el calendario del sistema. En este prototipo se plantea la posibilidad de consultar, dinámicamente, los eventos para un mes y un año específico. Se ofrece en términos básicos la misma información que se encuentra en el calendario del mes, pero en estructura de tabla. El prototipo descrito se puede observar en la Figura 3.72. 120 Figura 3.72 Prototipo: Pestaña Eventos. Configuración de Eventos Académicos (v-1) Para la tercera sección de la pestaña Eventos se diseñó un prototipo donde se colocaron las opciones básicas de configuración de contenido para el calendario. Entre las opciones se ofrece la posibilidad de agregar, automáticamente, todas las actividades de los procesos y los días feriados del sistema al calendario académico, para que aparezcan reflejadas en la página principal del gestor. Estas opciones son mucho más útiles cuando se tiene el calendario total o parcialmente vacío, por lo cual se hace prudente ofrecer opciones de limpieza de contenido. Para la limpieza de contenido, se ofrecen tres opciones. La primera es la posibilidad de vaciar el calendario, acción que elimina absolutamente todos los eventos del calendario, sin importar de que tipo sean. La segunda opción se ofrece para eliminar, específicamente, las actividades de los procesos y la tercera los días feriados del calendario. El prototipo descrito anteriormente se puede observar en la Figura 3.73 que se muestra a continuación. 121 Figura 3.73 Prototipo: Pestaña Eventos. Configuración de Contenido del Calendario (v-1) Para complementar el funcionamiento de la pestaña Procesos se optó por modificar ligeramente el diseño de su interfaz, a fin de mantener la consistencia entre las vistas del gestor y extender las funcionalidades que se pueden realizar en esta sección del mismo. El nuevo diseño de la tabla de actividades de los procesos une la información de las fechas en una misma columna, integrando ahora un ícono de acceso a los detalles de la actividad. También reemplaza el subrayado de la columna estado por un recuadro similar al que se observa en las listas de tareas. Este prototipo se puede observar en la Figura 3.74 que se muestra a continuación. Figura 3.74 Prototipo: Vista principal del gestor (v-3) _ Pestaña: Procesos (v-3) 122 Para la configuración de los parámetros generales del sistema se diseñó una interfaz con un selector, la cual desplegará los parámetros generales requeridos según la selección que se haya realizado. De acuerdo a su clasificación se agruparán de acuerdo a su funcionamiento dentro del sistema para no desplegarlos todos en la misma interfaz y de forma desordenada. El prototipo de la interfaz propuesta, se puede observar en la Figura 3.75. Figura 3.75 Prototipo: Vista principal del gestor (v-3) _ Pestaña parámetros generales (v-1) 3.5.2.2 Implementación de requerimientos A continuación se describe el proceso de desarrollo de las funcionalidades planteadas en los prototipos anteriores, así como su integración con el resto de las vistas del módulo gestor implementado en el sistema CONEST 3.0.  Calendario Académico Para el desarrollo de las pestañas internas, propuestas para la sección de Eventos del gestor, se aprovecharon las pestañas que ofrece JQuery-UI. La interfaz de configuración de los días feriados se estructuró de acuerdo a lo planteado en el prototipo. Las funcionalidades desarrolladas para esta sección comprenden un conjunto de funciones que permiten crear, consultar, actualizar y eliminar los días feriados del sistema. La tabla donde se consultan posee la opción para actualizarlos o eliminarlos. Finalmente, para crear un nuevo día feriado basta con pulsar el botón que se 123 encuentra justo debajo de la tabla, tal como se propuso en el prototipo. La vista final que contiene esta primera pestaña interna de Eventos se puede observar en la Figura 3.76. Figura 3.76 Vista principal del gestor (v-3) _ Pestaña: Eventos - Feriados (v-1) La interfaz perteneciente a la pestaña interna de eventos académicos se despliega en la Figura 3.77 de acuerdo a lo diseñado en el prototipo. En esta, se sigue el mismo modelo que para los días feriados, permitiendo consultar los eventos académicos o administrativos, actualizarlos, eliminarlos o crear un nuevo evento. Es importante destacar que esta actividad también se puede hacer directamente sobre el calendario existente en la interfaz principal del gestor, pero en esta pestaña Eventos se ofrece una forma un poco más cómoda de realizar dicha acción. Figura 3.77 Vista principal del gestor (v-3) _ Pestaña: Eventos - Académicos (v-1) 124 Finalmente, para la pestaña interna de Configuración del calendario, se implementan las funciones planteadas en el diseño que se aprecian en la Figura 3.78. Figura 3.78 Vista principal del gestor (v-3) _ Pestaña: Eventos - Config. (v-1) Después de incluir los días feriados y actividades de eventos al calendario académico del gestor, se procedió a realizar una actualización visual para distinguir entre los eventos correspondientes a días feriados y los correspondientes a actividades académicas o administrativas. En la Figura 3.79 se puede observar que los días feriados ahora aparecen con el número en color gris, mientras que aquellos con eventos académicos o administrativos aparecen subrayados y encerrados en un círculo del color azul oscuro planteado en la guía de estilos. Figura 3.79 Vista principal del gestor (v-3) _ Elemento: Calendario Académico 125  Procesos académicos Tal como se planteó en el diseño, la vista fue ajustada para mostrar la información de las fechas en una misma columna, el color asociado al detalle de la actividad ahora se muestra en un recuadro ubicado a la izquierda del texto, tal como sucede en las listas de tareas de la vista principal del gestor. El ícono de detalles de tareas ahora se enlaza con la misma modal que se diseñó en la iteración anterior para los detalles de las actividades, por tanto permite modificar las fechas de las mismas sin necesidad de ir a las tablas de tareas que se encuentran en la vista principal. Dado los cambios introducidos en el modelo de datos, el algoritmo de cálculo de las fechas aproximadas para las actividades fue modificado para tomar en cuenta los estimados de períodos intensivos. En la Figura 3.80 se pueden observar los cambios del algoritmo e interfaz, reflejados en las actividades del intensivo I-2015. Figura 3.80 Vista principal del gestor (v-3) _ Pestaña: Procesos (v-3)  Parámetros generales Para poder implementar la lógica de configuración de los parámetros generales fue necesario realizar un estudio de la tabla parametro_general del sistema, del cual se obtuvieron dos grandes clasificaciones para los parámetros: 126 Parámetros binarios: Son aquellos cuyo valor se encuentra en un rango de únicamente dos valores posibles, en el caso del sistema CONEST, estos valores son “SI” y “NO”. Parámetros variables: Son aquellos cuyo valor depende exclusivamente del propósito del mismo, en general contienen nombres de autoridades, identificadores asociados a otras tablas del sistema o números que establecen límites para algunas funcionalidades del sistema. De la misma forma, los parámetros generales pueden ser agrupados de acuerdo a su propósito: Control de Estudios: Son los parámetros que guardan la más estrecha relación con las actividades que se realizan a nivel interno en la DCE. Autoridades de la Facultad: Este conjunto de parámetros tienen que ver con las autoridades de la Facultad de Ciencias. Entre ellos se encuentran los nombres de quienes ocupan el cargo de Decano, Director de la DCE, Coordinación Académica, Directores de escuela, etc. Docentes: Agrupan el conjunto de parámetros relacionados a las acciones que tienen que ver con el módulo docentes del sistema CONEST. A través de ellos es posible habilitar y desahabilitar funcionalidades del sistema para los docentes, inclusive limitar la información a la que pueden acceder. Estudiantes: Este conjunto de parámetros corresponde a las actividades del sistema que se relacionan directamente con el módulo estudiantes del sistema CONEST. Al igual que sucede con el módulo docentes, estos parámetros regulan la información y funcionalidades a las cuales los estudiantes tienen acceso desde sus cuentas. Egreso: Como se mencionó en el planteamiento del problema, gran parte del Proceso de Egreso se se lleva a cabo manualmente. Sin embargo existe un pequeño grupo de parámetros dentro del sistema que controlan información relacionada a las actividades de este proceso, tales como el identificador de la promoción actual, los datos del repositorio digital para trabajos de grado, entre otros. Inscripción: Estos parámetros controlan la actividad de Inscripción. A través de ellos se establecen las condiciones o limitaciones que el sistema debe aplicar a cada estudiante que desee llevar a cabo esta actividad. En la Figura 3.81, se muestra parcialmente la vista que se implementó para esta pestaña del gestor. Basado en el tipo y grupo de parámetros que el usuario desee configurar, la vista se actualizar para desplegar los que correspondan a la selección. 127 Figura 3.81 Vista principal del gestor (v-3) _ Pestaña: Parámetros Generales 3.5.3 Fase de Entrega La fase de entrega de esta iteración abarcó dos evaluaciones para determinar la usabilidad del sistema, y finalmente la entrega del módulo gestor. 3.5.3.1 Pruebas funcionales del gestor Se llevaron a cabo a lo largo de la construcción del módulo, donde el equipo de desarrollo se planteaba y realizaba varios casos de pruebas sencillos, determinando el correcto comportamiento de las funcionalidades implementadas, con estas pruebas se detectaron errores menores que fueron corregidos. De igual forma, sirvió como prueba funcional la primera prueba de aceptación realizada en esta iteración, ya que mientras los evaluadores probaban la usabilidad del sistema, descubrieron errores pequeños de validación en algunos formularios, los cuales se tomaron en consideración y fueron depurados. 3.5.3.2 Pruebas de aceptación del gestor En la etapa de pruebas de aceptación se evaluó la usabilidad del módulo gestor a través de dos instrumentos, utilizando en ambos un conjunto de técnicas propuestas por el método AgilUs. 128  Primera prueba Un primer documento se desarrolló con el objetivo deservir de instrumento para registrar los resultados de la Evaluación Heurística realizada, técnica de inspección que evalúa la usabilidad de un sistema. La Evaluación Heurística consiste en la inspección del sistema comprobando si sus elementos cumplen los principios de usabilidad. Es realizado por evaluadores expertos en usabilidad, sin embargo una persona no experta en usabilidad puede hacer las comprobaciones guiados por las pautas de usabilidad de algún experto. El documento está estructurado en forma de lista de comprobación, o checklist, para facilitar la práctica de la evaluación, la cual es realizada por evaluadores con conocimientos básicos de usabilidad, cada punto a evaluar, 32 en total, están formulados como preguntas poco técnicas, dónde la respuesta afirmativa implica que no existe un problema de usabilidad, y la negativa que sí. Puede apreciarse en el Anexo 2. Se realizó la evaluación a dos estudiantes de la Licenciatura Computación, ambos aprobaron con excelente calificación la asignatura Interacción Humano-Computador la cual enseña los aspectos de la usabilidad y su importancia en el diseño de interfaces de cualquier sistema.  Resultados de la primera prueba Figura 3.82 Resultados de la primera prueba de aceptación 129 Cada una de las preguntas son puntos importantes en la elaboración de una interfaz y responden a diferentes criterios de usabilidad a evaluar, entre ellos: generales (en cuanto a objetivo y contenido), redacción y lenguaje, control e interacción con el usuario, estética y diseño, prevención de errores, accesibilidad. Algunos puntos importantes a evaluar como la orientación del usuario (dónde estoy, cómo volver, qué he visitado, qué va a pasar) se evalúan a través de varios criterios: elementos de navegación orientativos, caracterización de los enlaces e información contextual en elementos de interacción (estructura y navegación); distribución visual de la página (lay-out); coherencia del diseño (generales); nivel de significación de los rótulos (rotulado) e interacción del usuario (control e interacción). Los evaluadores sólo difirieron en dos preguntas. Pregunta número 2: ¿Muestra de forma precisa y completa qué contenidos o servicios ofrece realmente? O escrita de otra forma: ¿La página de inicio está diseñada para que se distingan los servicios ofrecidos? Esta pregunta está relacionada directamente con el diseño de la interfaz de inicio, que debe ser diferente al resto de las interfaces y mostrar el contenido que se ofrece en general en el módulo. El evaluador que contestó “no”, hizo la sugerencia de que una descripción en la página de inicio del gestor se vería mejor y es lo ideal para especificar y aclarar los servicios ofertados. Pregunta número 27: ¿El tamaño de fuente se ha definido de forma relativa, o por lo menos, la fuente es lo suficientemente grande como para no dificultar la legibilidad del texto? La pregunta está relacionada con la accesibilidad del módulo. El evaluador expresó: “Una persona mayor tendría dificultades para leer”. Debido al formato de los tamaños de letras predeterminado en todo el sistema CONEST 3.0, la accesibilidad para cierto grupo de personas se ve disminuida, sin embargo el perfil de usuario de este módulo hace referencia a personas entre 20 y 56 años, las cuales no caen en esa categoría. 130  Segunda prueba Se aplicó una extensión de la técnica del Protocolo del Pensamiento Manifestado, el Protocolo de "Responder Preguntas", en el cual al usuario se le hacen preguntas durante la prueba. Se explica al usuario el escenario y funcionamiento de la prueba y se le proporciona la relación de tareas a realizar, pidiéndole que comente en voz alta sus impresiones durante la prueba, sin embargo, también se le harán preguntas específicas sobre la realización de tareas concretas. Se tomarán notas sobre aspectos relevantes de sus respuestas, se anotan los comentarios y observaciones del usuario, se pretende averiguar en qué momento se equivoca o se detiene el usuario al realizar una tarea y también qué es lo que no entiende o le hace dudar. Al igual que en el Protocolo de Pensamiento Manifestado, es una técnica cualitativa. Es importante tanto lo expresado por el usuario, como la forma en que lo hace. Se realizó a tres usuarios que fungen como administradores en la DCE, se les pidió que entraran al sistema, que observaran la página principal y que exploraran las distintas secciones del módulo, mientras se respondían a sus dudas e inquietudes. Algunas de las preguntas realizadas fueron: - ¿Cuál es tu primera impresión del módulo? - Como primera impresión ¿Qué piensas que puedes hacer en el gestor? - Estando en un día normal ¿Piensas que te ayudaría, te sería útil consultar el gestor? - ¿Qué llama tu atención en la página principal? - ¿Cuál crees que es el objetivo del gestor y de su página principal? - ¿Te parecen familiares los elementos de la interfaz? - ¿Se mantienen la consistencia y estándares de CONEST 3.0?  Resultados Usuario 1: “Mi primera impresión, que es bien bonito y se entiende el objetivo: colocar las actividades que debo hacer en el semestre.” “Si creo que me ayudaría a consultar y a la Directora de la DCE, la Profa. Damaris Barrantes, aún más, ya que siempre está pendiente de las fechas de las actividades.” 131 “Si existe consistencia con el resto del sistema CONEST y cubre las actividades de la Gestión Académica y su status lo que es buenísimo porque así sé las actividades que me faltan realizar de cada período. Además publicar en twitter me parece excelente para realizarlo cuando inicia el semestre y se hacen los retiros.” “Es como si estuviera viendo mi carpeta, y esperaba que fuera la misma interfaz amigable de CONEST y que fuera fácil y es fácil, es como ver mi carpeta pero sin twitter; otra cosa que me gusta mucho es que puedo ver los eventos del pasado” “Puedo poner hasta mi cumpleaños para que se vea internamente, está bastante sencillo no le cambiaría nada” Usuario 2: “Mi primera impresión es que la vista es agradable, está chévere la nueva forma de realizar la Inscripción de los Nuevos ingresos, me parece una maravilla poder agregarlos con un documento Excel.” “Me gusta poder ver los eventos por mes y poder editarlos. Me parece que está completo el gestor y más resumido y simple que la ventana que usamos ahorita y me encanta poder ver el calendario y sus eventos al darle clic y poder manipularlos.” “Si, me parece que el sistema está integrado y pertenece a CONEST. Sinceramente lo que más me gusta es lo resumido que está todo” Usuario 3: “Está bien la página de inicio, lo que primero me llama la atención es la franja verde con la línea de tiempo, los colores están bien equilibrados.” “Consultaría en mi día de trabajo esa sección para ver el calendario y las actividades que se deben hacer.” “Funciona, para el objetivo que está hecho, claro falta usarlo cotidianamente para ver si surge algún inconveniente y acostumbrarse a ver todo unido de esta forma.” 132 3.5.3.3 Cierre de la Iteración. Entrega del modulo Esta última iteración tuvo como propósito medir la aceptación del diseño final del módulo gestor, el cual se estima será puesto en producción después del inicio del período 02-2015, dándole suficiente tiempo al personal administrativo para realizar otras pruebas de funcionamiento en el ambiente de desarrollo, a fin de que el equipo encargado pueda depurar los errores y finalmente integrar el módulo totalmente estable en el ambiente de producción. Cabe destacar que el código fuente y los datos utilizados en el módulo se han mantenido sincronizados con los de la aplicación principal a lo largo de todo el proceso de desarrollo, esto con el objetivo de hacer más sencilla su implantación en el ambiente de producción. En el servidor donde se almacenan los repositorios git del sistema CONEST 3.0, se encuentra cargado un script del lenguaje MySQL, que contiene los cambios implementados al modelo de datos principal, del mismo modo, el archivo de gemas de Rails se encuentra actualizado a fin de poder instalar todos los complementos necesarios para el correcto funcionamiento de este proyecto. El equipo de desarrollo se compromete a elaborar y entregar un manual de usuario y un tutorial del módulo gestor para que sirva de orientación al personal de la DCE. 133 Conclusiones El sistema CONEST 3.0, tiene como objetivo principal facilitar el cumplimiento de las distintas actividades relacionadas a los procesos académicos internos de la Facultad de Ciencias de la UCV. A lo largo de este Trabajo Especial de Grado, se estudiaron a fondo los procesos de la Gestión Académica que se llevan a cabo en la Facultad de Ciencias, a fin de contrastar el procedimiento de desarrollo de cada uno de ellos con las actividades que se realizan a través del sistema CONEST 3.0. Se puede concluir que los objetivos planteados al inicio de este TEG fueron alcanzados satisfactoriamente, generando una solución a la problemática planteada que complace al usuario y facilita su labor de realizar la Gestión Académica. Durante este estudio, se identificó como principal problema que las actividades relacionas a los procesos académicos que realiza la DCE se encontraban dispersas dentro del módulo administrativo, por lo tanto sólo aquellos usuarios con conocimientos sobre la estructura y funcionamiento del sistema CONEST 3.0 podrían llevarlas a cabo de manera satisfactoria. Utilizando fundamentos de la Interacción Humano-Computador, que permite mezclar conocimientos de diversas disciplinas, se desarrolló, a través de la aplicación de un método ágil, un módulo gestor para el sistema de Gestión Académica CONEST 3.0 con los siguientes beneficios: 1. Unifica a través de una misma interfaz las funcionalidades del sistema que se relacionan directamente con los procesos de la Gestión Académica. 2. Permite controlar los tiempos de ejecución de las actividades, indicando al usuario las fechas y el lapso durante el cual las mismas deben ser llevadas a cabo. 3. Simplifica la configuración de los parámetros generales del sistema, que controlan variables importantes para el adecuado funcionamiento del mismo. 4. Posee funcionalidades que le dan valor agregado, como indicadores visuales para el estado y progreso de las actividades, así como una sección para compartir eventos a través de las redes sociales de manera sencilla y sin tener que salir del sistema. Para facilitar el seguimiento de las actividades, los indicadores utilizados son las barras de progreso y el estado de las actividades, cada uno con su color propio, ambos probaron ser efectivos llamando la atención de los usuarios sin molestar su visión en la interfaz del módulo, lo cual fue validado en las pruebas con los usuarios. 134 Es de utilidad saber sobre el progreso de un proceso de la Gestión Académica ya que, a través de este, pueden conocer y controlar el avance del Período Académico en curso, informado así al personal de la DCE para llevar a cabo la Gestión Académica sin inconvenientes y en los tiempos planeados. Al poder medir el progreso de un proceso mediante la cantidad de actividades que lo componen se ofrece una perspectiva más tangible y global del trabajo que debe realizarse y permite planificarlo estimando los tiempos que toma realizarlo. Finalmente, después de realizar pruebas a los usuarios que utilizan con mayor frecuencia el módulo administrativo del sistema, se determinó que las funcionalidades ofrecidas en el gestor cubrieron el conjunto de actividades más importantes que el personal de la DCE lleva a cabo en cada proceso. Los usuarios también manifestaron una gran satisfacción con la sencillez de la interfaz del gestor, con la organización de sus elementos y las funcionalidades de valor agregado que fueron integradas al módulo. 135 Trabajos futuros A continuación se presentan algunas sugerencias que el equipo de desarrollo propone para extender y mejorar posteriormente el módulo gestor.  El proceso de Egreso, posee un conjunto de funcionalidades muy puntuales en el sistema, por lo que es posible realizar un estudio de las mismas para establecer la posibilidad de ser integradas al gestor, si es posible incluirlas dentro de un rango de tiempo o si el gestor es posteriormente modificado para manejar actividades con fechas y sin fechas establecidas.  La pestaña de Parámetros Generales debe ser depurada, pues el equipo de desarrollo ha incluido en la clasificación de los mismos una gran parte de parámetros que el personal administrativo generalmente no modifica, y algunos otros de los cuáles se desconoce el propósito específico. Un estudio más profundo de los parámetros registrados permitiría determinar cuáles valores se utilizan realmente en alguna funcionalidad del sistema y cuáles no, con el propósito de hacer una limpieza de datos y evitar que se modifique manualmente aquella información que el sistema requiere manejar automáticamente. 136 Referencias bibliográficas ABC, D. (2007). Definicion ABC. Recuperado el 11 de Mayo de 2015, de http://www.definicionabc.com/general/gestor.php ABC, D. (2007). Definicion ABC. Recuperado el 11 de Mayo de 2015, de http://www.definicionabc.com/economia/autogestion.php Acosta, A. (2011). AgilUs: Un método ágil de desarrollo de software que incorpora la usabilidad. Obtenido de Universidad Central de Venezuela: http://www.ciens.ucv.ve/escueladecomputacion/documentos/archivo/121 Bascón Pantoja, E. (2004). El patrón de diseño Modelo-Vista-Controlador (MVC) y su implementación en Java Swing. Recuperado el 24 de Abril de 2015, de http://www.ucbcba.edu.bo/Publicaciones/revistas/actanova/documentos/v2n4/ v2.n4.bascon.pdf Beck, K., Beedle, M., Van Bennekum, A., Cockburn, A., Cunningham, W., Fowler, M., y otros. (2001). Manifiesto por el Desarrollo Ágil de Software. Recuperado el 21 de Abril de 2015, de http://agilemanifesto.org/iso/es/ Comunidad Rails. (2007). Introducción a Ruby on Rails.Recuperado el 17 de Abril de 2015, de https://librosweb.es/libro/introduccion_rails/ Damián. (2010). ¿Qué es CSS3? Recuperado el 24 de Marzo de 2015, de http://html5.dwebapps.com/que-es-css3/ Fiqus. (2014). Git - Manual de usuario versión 1. Recuperado el 25 de Marzo de 2015, de http://blog.fiqus.com/wp-content/uploads/2014/05/git_manual.pdf Group, O. M. (s.f.). OMG. Recuperado el 27 de mayo de 2015, de BPMN: http://www.bpmn.org/ Insomer. (12 de Agosto de 2014). Asana, el software para gestión de proyectos. Recuperado el 20 de Abril de 2015, de http://www.insomer.com/asana-el- software-para-gestion-de-proyectos/ Jog Raj, M. O. (Septiembre de 2003). Object Management Group. Recuperado el 27 de Mayo de 2015, de http://www.omg.org/bpmn/Documents/6AD5D16960.BPMN_and_BPM.pdf jQuery. (2015). jQuery user interface. Recuperado el 24 de Abril de 2015, de https://jqueryui.com/ jQuery. (2015). jQuery write less, do more.Recuperado el 24 de Abril de 2015, de http://jquery.com/ JSON Org en Español. (s.f.). Introducción a JSON. Recuperado el 27 de Abril de 2015, de http://www.json.org/json-es.html Kiran Garimella, M. L. (2008). Introducción a BPM.Indianápolis, Indiana: Wiley Publishing, Inc. Márquez Avendaño, B. M., & Zulaica Rugarcía, J. M. (12 de Enero de 2004). Implementación de un reconocedor de voz gratuito a el sistema de ayuda a invidentes Dos-Vox en español. Recuperado el 24 de Abril de 2015, de http://catarina.udlap.mx/u_dl_a/tales/documentos/lis/marquez_a_bm/ 137 Mejía, C. E. (23 de 02 de 2009). Strategy & Business Manager CIO S.A. (U. T. (Colombia), Entrevistador) Mozilla Developer Network. (2014). HTML. Recuperado el 22 de Marzo de 2015, de https://developer.mozilla.org/es/docs/Web/HTML MySQL. (2011). MySQL 5.6 Reference Manual. Recuperado el 25 de Marzo de 2015, de http://downloads.mysql.com/docs/refman-5.6-en.pdf Peñafiel, M. (15 de Abril de 2015). Aplicaciones Web. Recuperado el 24 de Abril de 2015, de http://es.scribd.com/doc/136052164/APLICACIONES-WEB-pdf Quiroga, J. P. (s.f.). Requerimientos funcionales y no funcionales. Recuperado el 26 de Marzo de 2015, de https://sistemas.uniandes.edu.co/~csof5101/dokuwiki/lib/exe/fetch.php?media =principal:csof5101-requerimientos.pdf Ruby Org. (2015). Sitio en español de la organización Ruby. Recuperado el 22 de Marzo de 2015, de https://www.ruby-lang.org/es/ Sánchez, J. (2003). Manual de referencia de JavaScript. Obtenido de http://www.jorgesanchez.net/web/javascript.pdf W3Schools. (2015). AJAX Introduction. Recuperado el 27 de Abril de 2015, de http://www.w3schools.com/Ajax/ajax_intro.asp Walker, G. (2011). HTML5. Recuperado el 23 de Marzo de 2015, de http://www.ibm.com/developerworks/ssa/web/library/wa-html5fundamentals/ 138 Anexos Anexo 1 139 Anexo 2 Lista de comprobación 1) ¿Se entiende el propósito del módulo y los servicios que ofrece van acorde al mismo? 2) ¿La página de inicio está diseñada para que se distingan los servicios ofrecidos? 3) ¿Es coherente el diseño general del módulo? 4) ¿Emplea un lenguaje claro y conciso? ¿Habla el mismo lenguaje que sus usuarios? 5) ¿El lenguaje usado es respetuoso, familiar y cercano, no es ofensivo ni desprecia al usuario? 6) El título de las secciones del módulo, ¿Dan a entender de forma clara la información que contendrán? 7) Los rótulos, ¿son significativos? 8) ¿Utiliza un sistema de rotulado controlado y preciso? 9) En menús de navegación, ¿Se ha controlado el número de elementos y de términos por elemento para no producir sobrecarga de memoria? 10) ¿Se ha controlado que no haya enlaces que no llevan a ningún sitio? 11) ¿Existen elementos de navegación que orienten al usuario acerca de dónde está y cómo deshacer su navegación? 12) ¿Se ha evitado la redundancia de enlaces? 13) ¿Se ha controlado que no haya páginas "huérfanas"? 14) ¿El diseño del módulo es minimalista? 15) ¿Se aprovechan las zonas de alta jerarquía informativa del módulo para contenidos de mayor relevancia? Ejemplo la zona central. 16) ¿Se ha evitado la sobrecarga informativa? 17) ¿Es una interfaz limpia, sin ruido visual? 18) ¿Hay áreas bien delimitadas y en orden? 19) ¿Existen zonas en "blanco" entre los objetos informativos del módulo para poder descansar la vista? 20) ¿Se hace un uso correcto del espacio visual de las secciones del módulo? 21) ¿Se ha controlado la longitud de las secciones del módulo? Que hacer “scrolling” sea poco. 22) ¿Los gráficos son acordes a lo que desempeñan? 23) ¿Los colores son agradables a la vista? 24) ¿Las metáforas visuales son reconocibles y comprensibles por cualquiera de los usuarios? 25) ¿El uso de imágenes o animaciones proporciona algún tipo de valor añadido? 26) ¿Se ofrece ayuda contextual en tareas? 27) ¿El tamaño de fuente se ha definido de forma relativa, o por lo menos, la fuente es lo suficientemente grande como para no dificultar la legibilidad del texto? 28) ¿El tipo de fuente, efectos tipográficos, ancho de línea y alineación empleadas facilitan la lectura? 29) ¿Existe un alto contraste entre el color de fuente y el fondo? Los colores de ambos permiten la lectura 30) Cuando se produce un error, ¿se informa de forma clara y no alarmista al usuario de lo ocurrido y de cómo solucionar el problema? 31) ¿Se ha controlado el tiempo de respuesta? El tiempo que tarda el servidor en finalizar una tarea y responder al usuario. 32) ¿Se informa al usuario de lo que ha pasado cuando éste realiza alguna actividad en el módulo?Caracas, Octubre de 2015 UNIVERSIDAD CENTRAL DE VENEZUELA FACULTAD DE CIENCIAS ESCUELA DE COMPUTACIÓN Módulo para la administración de procesos y actividades de la Gestión Académica de la Facultad de Ciencias de la Universidad Central de Venezuela Trabajo especial de grado presentado ante la ilustre Universidad Central de Venezuela por los Bachilleres: Corina Luongo C.I 19.441.733 Jhony Acevedo C.I 19.738.211 Para optar por el título de: Licenciados en Computación Tutora: Profa. Concettina Di Vasta 1 2 Agradecimientos Quisiéramos agradecer la participación y colaboración del personal de la División de Control de Estudios al ayudarnos atendiendo y respondiendo todas nuestras inquietudes. A la profesora Damaris Barrantes por todo su apoyo y disposición, finalmente extendemos un reconocimiento a todo el equipo del sistema CONEST por su dedicación y esmero con los desarrollos realizados en el sistema. Para nuestra tutora, la profesora Tina Di Vasta, nuestro más sincero agradecimiento por su interés en el proyecto, su dedicación y su disponibilidad siempre que la necesitamos, gracias por todo. A la profesora Mercy Ospina, por su excelente aporte en las sugerencias brindadas que hicieron nuestra presentación más dinámica y entendible. A nuestros compañeros Manuel, Junior, Emmanuel, Iraima, Flor, María, Abraham, Andrea, Gary, Jesús y Carlos con quienes compartimos no solo una gran amistad, sino también algunas de las mejores experiencias vividas a lo largo de todos estos años de estudios en la carrera. Corina Luongo & Jhony Acevedo A mis padres, por apoyarme y alentarme durante toda mi vida escolar y enseñarme lo que es ser estudiante; gracias por toda su guía, su ayuda y su amor. A mí querida editora por su invaluable ayuda en la corrección de esta tesis, aunque quieras permanecer anónima mereces reconocimiento, te quiero. Zol, José, Alexa sin ustedes yo no sería la misma, agradezco que nuestra amistad permanece a lo largo del tiempo y espero madure junto a cada uno de nosotros. Finalmente gracias Jhony por mantenerte constante a lo largo de este proyecto, ¡sí pudimos! Corina Luongo Quiero agradecer en primer lugar a mis padres, quienes han sido mi principal fuente de apoyo ante cualquier circunstancia que se me presenta en la vida. A mi hermano y mejor amigo William quien me conoce y comprende como solo pocas personas lo saben hacer. A Viviana quien ha sido mi gran amiga y confidente a lo largo de todos estos años de carrera, me supo apoyar y guiar incluso en los momentos más difíciles. A mis queridos Gabriela y Vladimir cuya amistad ha calado tanto en el tiempo, que ya la considero más que cualquier otra cosa, un lazo familiar. Al profesor Sergio, a quien estimo y con quien me siento profundamente agradecido, por toda la ayuda y apoyo brindado durante la realización de este TEG. A mis amigos: Ashley, Deisy, Emily, Laura, Jhonatan, Néstor y Gabriel por su amistad y apoyo brindado. Por último y no menos importante a mi compañera y amiga Corina, quien hizo mi primera experiencia laboral sumamente grata y enriquecedora tanto a nivel profesional como personal. De igual forma a su hermana Daniela, con quien he compartido gratos momentos y cuyos conocimientos ayudaron a mejorar el presente trabajo. Jhony Acevedo 3 Resumen La Gestión Académica se encarga de definir las tareas administrativas y académicas de una organización educativa. El propósito de la siguiente investigación consistió en el desarrollo de un módulo para el sistema CONEST 3.0 (CONtrol de ESTudios), que permita la configuración y administración de las actividades involucradas con los procesos de la Gestión Académica realizadas por la División de Control de Estudios (DCE), de la Facultad de Ciencias de la Universidad Central de Venezuela (UCV), ubicada en la ciudad de Caracas. Para ello fue necesaria la definición de los requerimientos que el personal administrativo necesita en el sistema y determinar los parámetros que pueden configurarse automáticamente a través de la aplicación web. Posteriormente se aplicaron cambios en la base de datos para almacenar la información relacionada con el módulo y se integró el nuevo modelo de las actividades con el ya existente. Se realizaron pruebas funcionales y de usabilidad que permiten comprobar el comportamiento del módulo y determinar el nivel de satisfacción de los usuarios con el producto acabado, finalmente se documentó el código del módulo en el sistema y se elaboró un Manual de Usuario y tutorial del mismo. Al centralizar todas las funciones disponibles y necesarias del sistema se permite realizar una autogestión de procesos, ayudando al personal de la DCE a simplificar la ejecución de los mismos, reutilizando la experiencia y conocimientos existentes para realizar la gestión sin necesidad de un extenso entrenamiento previo del personal que lo maneja. Se utilizó el método de desarrollo ágil, iterativo e incremental AgilUs como guía. Como resultado se obtuvo un módulo gestor de los procesos de Planificación, Inscripción y Calificación, apoyado por la tecnología con una mayor independencia y usabilidad, el cual mejora la ejecución de la Gestión Académica brindando el apoyo y guía necesaria sin importar el personal que lo maneje. Palabras claves: Módulo, AgilUs, Gestión Académica, DCE, CONEST 3.0 4 Índice general Capítulo 1. Planteamiento del Problema ............................................................. 11 1.1 Problema de Investigación .......................................................................... 11 1.2 Objetivos de la investigación ....................................................................... 12 1.2.1 Objetivo general ................................................................................... 12 1.2.2 Objetivos específicos ............................................................................ 12 1.3 Preguntas de Investigación ......................................................................... 13 1.4 Justificación................................................................................................. 14 Capítulo 2. Marco Conceptual ............................................................................. 15 2.1 Sistema CONEST ....................................................................................... 15 2.2 La Gestión Académica ................................................................................ 15 2.2.1 Ciclo Período Académico ..................................................................... 17 2.2.1.1 Proceso de Planificación ................................................................ 17 2.2.1.2 Proceso de Inscripción ................................................................... 19 2.2.1.3 Proceso de Calificación .................................................................. 22 2.2.2 Ciclo Promociones ................................................................................ 24 2.2.2.1 Proceso de Egreso......................................................................... 24 2.3 Aplicaciones web ........................................................................................ 26 2.3.1 Modelo cliente-servidor......................................................................... 27 2.3.2 Patrón de arquitectura Modelo-Vista-Controlador ................................ 29 2.3.3 Tecnologías empleadas en el desarrollo .............................................. 31 2.4 Tecnologías de lado del cliente ................................................................... 31 2.4.1 HTML5 .................................................................................................. 31 2.4.2 JavaScript ............................................................................................. 32 2.4.3 CSS3 .................................................................................................... 33 2.4.4 jQuery y jQuery-UI ................................................................................ 34 2.5 Tecnologías de lado del servidor ................................................................ 34 2.5.1 Ruby ..................................................................................................... 34 2.5.2 Ruby onRails ........................................................................................ 36 2.5.3 MySQL .................................................................................................. 36 2.6 Tecnologías del equipo de desarrollo ......................................................... 37 2.6.1 Asana ................................................................................................... 37 5 2.6.2 Git ......................................................................................................... 38 2.7 Marco Metodológico .................................................................................... 38 2.7.1 Manifiesto Ágil ...................................................................................... 39 2.7.2 Método AgilUs ...................................................................................... 40 2.7.3 Gestión de Procesos de Negocio ......................................................... 43 2.7.3.1 Notación y Modelo de Procesos de Negocio ................................. 44  Simbología de la notación BPMN ............................................................ 45 Capítulo 3. Marco Aplicativo ................................................................................ 48 3.1 Primera Iteración. Esquema general de la solución y desarrollo del Calendario Académico .......................................................................................... 49 3.1.1 Fase de Requisitos ............................................................................... 49 3.1.1.1 Tormenta de Ideas ......................................................................... 49 3.1.1.2 Requerimientos funcionales y no funcionales ................................ 50 3.1.1.3 Perfil de usuario ............................................................................. 52 3.1.1.4 Análisis de sistemas existentes ..................................................... 52 3.1.2 Fase de Análisis ................................................................................... 55 3.1.2.1 Modelo de Casos de Usos ............................................................. 55 3.1.2.2 Guía de Estilos ............................................................................... 58 3.1.2.3 Modelo del negocio ........................................................................ 58 3.1.2.4 Modelo de datos............................................................................. 59 3.1.2.5 Arquitectura de la Solución ............................................................ 60 3.1.3 Fase de Prototipaje .............................................................................. 61 3.1.3.1 Prototipos de baja fidelidad ............................................................ 61 3.1.3.2 Implementación de requerimientos ................................................ 64 3.1.4 Cierre de la iteración ............................................................................ 67 3.2 Segunda Iteración: Proceso de Inscripción y su integración al gestor del sistema. ................................................................................................................ 67 3.2.1 Fase de Análisis ................................................................................... 68 3.2.1.1 Modelo de Casos de Usos ............................................................. 68 3.2.1.2 Modelo de datos............................................................................. 71 3.2.2 Fase de Prototipaje .............................................................................. 73 3.2.2.1 Prototipos de baja fidelidad ............................................................ 73 3.2.2.2 Implementación de requerimientos ................................................ 77 3.2.3 Cierre de la iteración ............................................................................ 85 6 3.3 Tercera Iteración: Procesos de Planificación y Calificación. ....................... 85 3.3.1 Fase de Análisis ................................................................................... 85 3.3.1.1 Modelo de Casos de Usos ............................................................. 86 3.3.2 Fase de Prototipaje .............................................................................. 90 3.3.2.1 Prototipos de baja fidelidad ............................................................ 90 3.3.2.2 Implementación de requerimientos ................................................ 91 3.3.2.3 Evaluaciones de usabilidad ............................................................ 95 3.3.3 Cierre de la Iteración .......................................................................... 101 3.4 Cuarta Iteración: Manejo del Calendario Académico e integración de los procesos. ............................................................................................................ 102 3.4.1 Fase de Análisis ................................................................................. 102 3.4.1.1 Guías de Estilos ........................................................................... 102 3.4.1.2 Modelo de datos........................................................................... 102 3.4.2 Fase de Prototipaje ............................................................................ 108 3.4.2.1 Prototipos de baja fidelidad .......................................................... 108 3.4.2.2 Implementación de requerimientos .............................................. 113 3.4.3 Cierre de la Iteración .......................................................................... 116 3.5 Quinta Iteración: Funcionalidades finales del gestor y pruebas de aceptación del sistema ......................................................................................................... 116 3.5.1 Fase de Análisis ................................................................................. 116 3.5.1.1 Guía de Estilos ............................................................................. 117 3.5.1.2 Modelo de Datos .......................................................................... 117 3.5.2 Fase de Prototipaje ............................................................................ 118 3.5.2.1 Prototipos de baja fidelidad .......................................................... 119 3.5.2.2 Implementación de requerimientos .............................................. 122 3.5.3 Fase de Entrega ................................................................................. 127 3.5.3.1 Pruebas funcionales del gestor .................................................... 127 3.5.3.2 Pruebas de aceptación del gestor ................................................ 127 3.5.3.3 Cierre de la Iteración. Entrega del modulo ................................... 132 Conclusiones .......................................................................................................... 133 Trabajos futuros ..................................................................................................... 135 Referencias bibliográficas ...................................................................................... 136 Anexos ................................................................................................................... 138 7 Índice de figuras Figura 2.1 Ciclos de la Gestión Académica de la Facultad de Ciencias................... 17 Figura 2.2 Proceso de Planificación de la Gestión Académica ................................ 18 Figura 2.3 Proceso de Inscripción de la Gestión Académica ................................... 20 Figura 2.4 Proceso de Calificación de la Gestión Académica .................................. 22 Figura 2.5 Proceso de Egreso de la Gestión Académica ......................................... 24 Figura 2.6 Modelo cliente-servidor ........................................................................... 27 Figura 2.7 Arquitectura MVC .................................................................................... 30 Figura 2.8 Ciclo de vida del método AgilUs .............................................................. 42 Figura 2.9 Elementos Básicos de BPMN ................................................................. 47 Figura 3.1 Tormenta de ideas .................................................................................. 50 Figura 3.2 Casos de Uso del gestor CONEST ......................................................... 56 Figura 3.3 Modelo del negocio del ciclo Período Académico ................................... 59 Figura 3.4 Modelo de datos del gestor (v-1) ............................................................. 60 Figura 3.5 Arquitectura cliente-servidor con las tecnologías involucradas ............... 60 Figura 3.6 Prototipo: Vista principal del gestor (v-1) ................................................ 61 Figura 3.7 Interfaz calendario producción ................................................................ 62 Figura 3.8 Prototipo: Eventos para una fecha (v-1) .................................................. 63 Figura 3.9 Prototipo: Crear nuevo evento (v-1) ........................................................ 63 Figura 3.10 Prototipo: Editar evento (v-1) ................................................................ 64 Figura 3.11 Vista principal del módulo gestor (v-1) .................................................. 65 Figura 3.12 Vista eventos para una fecha (v-1) ....................................................... 65 Figura 3.13 Vista crear evento (v-1) ......................................................................... 66 Figura 3.14 Vista editar evento (v-1) ........................................................................ 67 Figura 3.15 Casos de Uso Proceso de Inscripción – Iteración 1 .............................. 68 Figura 3.16 Primeras modificaciones a Tablas del Modelo de datos del gestor ....... 71 Figura 3.17 Modelo de datos del gestor (v-2) ........................................................... 72 Figura 3.18 Prototipo: Vista principal del gestor (v-2) .............................................. 74 Figura 3.19 Prototipo: Vista de las actividades de los Procesos .............................. 75 Figura 3.20Prototipo: Eventos para una fecha (v-2) ................................................. 75 Figura 3.21 Prototipo: Ventana Modal para compartir eventos ................................ 76 Figura 3.22 Prototipo: Vista principal del gestor (v-2) _ Pestaña: Configuración Calendario ................................................................................................................ 77 Figura 3.23 Prototipo de Modal crear/editar feriado ................................................. 77 Figura 3.24 Vista principal del módulo gestor (v-2) .................................................. 78 Figura 3.25 Vista de actividades del proceso Inscripción ......................................... 78 Figura 3.26 Modal de la actividad Inscripción Nuevos ............................................. 79 Figura 3.27 Modal de la actividad Inscripción .......................................................... 79 Figura 3.28 Modal de la actividad Asignación de Aulas ........................................... 79 Figura 3.29 Vista de la actividad Configurar Preinscripción _ Pestaña: Preinscripción ................................................................................................................................. 80 8 Figura 3.30 Vista de la actividad Configurar Preinscripción _ Pestaña: Selección de estudiantes ............................................................................................................... 80 Figura 3.31 Vista de la actividad Modificación de Inscripción .................................. 81 Figura 3.32 Vista de la actividad Modificación de Inscripción_ Pestaña: Abrir Retiros ................................................................................................................................. 82 Figura 3.33 Vista de la actividad Generar Planillas de Inscripción ........................... 82 Figura 3.34 Ventana Modal: Detalles de los eventos ............................................... 83 Figura 3.35 Ventana Modal: Compartir Evento ........................................................ 83 Figura 3.36 Vista principal del gestor (v-2) _ Pestaña: Configuración Calendario ... 84 Figura 3.37Ventana Modal: Crear feriado ................................................................ 84 Figura 3.38 Casos de Uso Proceso de Inscripción - Iteración 2 ............................... 86 Figura 3.39 Casos de Uso Procesos de Planificación y Calificación - Iteración 1 .... 87 Figura 3.40Prototipo: Vista principal del gestor (v-2) _ Pestaña: Período Académico ................................................................................................................................. 91 Figura 3.41 Vista principal del gestor (v-2) _ Pestaña: Período Académico ............. 91 Figura 3.42 Vista de la actividad Permisos de Visualización .................................... 92 Figura 3.43 Vista de la Actividad Inscripción Nuevos (v-2) ...................................... 93 Figura 3.44 Vista de la Actividad Inscripción Nuevos (v-2) ...................................... 93 Figura 3.45 Vista de la actividad Configurar Preinscripción _Pestaña: Selección de estudiantes (v-2) ...................................................................................................... 94 Figura 3.46 Vista de la actividad Configurar Preinscripción _ Pestaña: Selección de estudiantes (v-2) ...................................................................................................... 95 Figura 3.47 Cuestionario Actividad 1........................................................................ 96 Figura 3.48 Cuestionario Actividad 2........................................................................ 97 Figura 3.49 Cuestionario Actividad 3........................................................................ 97 Figura 3.50 Cuestionario Actividad 4........................................................................ 98 Figura 3.51 Cuestionario Actividad 5........................................................................ 98 Figura 3.52 Cuestionario Actividad 6........................................................................ 99 Figura 3.53 Cuestionario pregunta número 14 ....................................................... 100 Figura 3.54 Vista principal del gestor analizada por Feng-GUI .............................. 101 Figura 3.55 Modelo de datos: tipo_status_actividad .............................................. 103 Figura 3.56 Segundas modificaciones a Tablas del Modelo de datos del gestor ... 106 Figura 3.57 Modelo de datos del gestor (v-3) ......................................................... 108 Figura 3.58 Prototipo: Vista principal del gestor _ Modificaciones ......................... 109 Figura 3.59 Prototipo: Vista principal del gestor (v-3) ............................................ 110 Figura 3.60 Prototipo: Vista principal del gestor_ Elemento: Línea de Tiempo ...... 110 Figura 3.61 Prototipo: Vista principal del gestor_ Elemento: Estado de Procesos . 111 Figura 3.62 Prototipo: Vista principal del gestor (v-3) _ Pestaña: Procesos (v-2) .. 112 Figura 3.63 Prototipo de las actividades de la vista principal del gestor ................ 113 Figura 3.64 Prototipo Detalles de actividad ............................................................ 113 Figura 3.65 Vista principal del gestor_ Elemento: Línea de tiempo ....................... 114 Figura 3.66 Vista principal del gestor _ Elemento: Estado de los procesos ........... 114 Figura 3.67 Vista principal del gestor (v-3) ............................................................. 114 Figura 3.68 Ventana Modal: Detalles de actividad ................................................. 115 9 Figura 3.69 Vista principal del gestor (v-3) _ Pestaña: Procesos (v-2) .................. 115 Figura 3.70 Modificación al Modelo de datos: Tabla actividad_ proceso ............... 118 Figura 3.71 Prototipo: Pestaña Eventos. Configuración de Días Feriados (v-1) .... 119 Figura 3.72 Prototipo: Pestaña Eventos. Configuración de Eventos Académicos (v-1) ............................................................................................................................... 120 Figura 3.73 Prototipo: Pestaña Eventos. Configuración de Contenido del Calendario (v-1) ........................................................................................................................ 121 Figura 3.74 Prototipo: Vista principal del gestor (v-3) _ Pestaña: Procesos (v-3) .. 121 Figura 3.75 Prototipo: Vista principal del gestor (v-3) _ Pestaña parámetros generales (v-1) ....................................................................................................... 122 Figura 3.76 Vista principal del gestor (v-3) _ Pestaña: Eventos - Feriados (v-1) . 123 Figura 3.77 Vista principal del gestor (v-3) _ Pestaña: Eventos - Académicos (v-1) ............................................................................................................................... 123 Figura 3.78 Vista principal del gestor (v-3) _ Pestaña: Eventos - Config. (v-1) ...... 124 Figura 3.79 Vista principal del gestor (v-3) _ Elemento: Calendario Académico ... 124 Figura 3.80 Vista principal del gestor (v-3) _ Pestaña: Procesos (v-3) ................. 125 Figura 3.81 Vista principal del gestor (v-3) _ Pestaña: Parámetros Generales ..... 127 Figura 3.82 Resultados de la primera prueba de aceptación ................................. 128 10 Índice de tablas Tabla 3.1 Perfil de usuario ....................................................................................... 52 Tabla 3.2 Análisis del sistema: Google Calendar ..................................................... 54 Tabla 3.3 Análisis del sistema: Asana ...................................................................... 55 Tabla 3.4 Descripción CU: Gestionar Procesos ....................................................... 56 Tabla 3.5 Descripción CU: Abrir Procesos ............................................................... 57 Tabla 3.6 Descripción CU: Cerrar Procesos ............................................................ 57 Tabla 3.7 Descripción CU: Configurar Parámetros .................................................. 57 Tabla 3.8 Descripción CU: Gestionar Calendario ..................................................... 57 Tabla 3.9 Descripción CU: Configurar Inscripción nuevos ....................................... 69 Tabla 3.10 Descripción CU: Configurar Preinscripción ............................................ 69 Tabla 3.11 Descripción CU: Ejecutar Algoritmo de Selección .................................. 69 Tabla 3.12 Descripción CU: Configurar Inscripción .................................................. 69 Tabla 3.13 Descripción CU: Ejecutar Asignación de Aulas ...................................... 70 Tabla 3.14 Descripción CU: Modificar Inscripción .................................................... 70 Tabla3.15 Descripción CU: Generar Planillas Inscripción ........................................ 70 Tabla 3.16 Descripción CU: Configurar Inscripción nuevos ..................................... 86 Tabla 3.17 Descripción CU: Configurar Preinscripción - Iteración 2 ........................ 87 Tabla 3.18 Descripción CU: Configurar Plantilla del Periodo Académico................. 88 Tabla 3.19 Descripción CU: Asociar Plantilla Periodo Académico ........................... 88 Tabla 3.20 Descripción CU: Permitir visualización de la Planificación ..................... 88 Tabla 3.21 Descripción CU: Generar calendario de Calificación .............................. 89 Tabla 3.22 Descripción CU: Configurar Calificación ................................................ 89 Tabla 3.23 Descripción CU: Generar planillas de notas ........................................... 89 Tabla 3.24 Estados de los Procesos y sus colores ................................................ 111 11 Capítulo 1. Planteamiento del Problema 1.1 Problema de Investigación La Gestión Académica se encarga de definir las tareas relativas a los aspectos administrativos y académicos de una organización educativa, relacionadas con docentes y estudiantes, en este caso particular de la Facultad de Ciencias de la Universidad Central de Venezuela (UCV), ubicada en la Ciudad Universitaria de Caracas. Compete también a la Gestión Académica las tareas de soporte, tanto de las áreas académicas que componen a la Facultad y que se llevan a cabo por la División de Control de Estudios (DCE) de la misma, como del servicio de la docencia que se imparte en sus diversos espacios. Desde hace varios años, la DCE de la Facultad de Ciencias lleva a cabo un conjunto de actividades pertenecientes a los procesos de la Gestión Académica, junto a esas responsabilidades se suma el préstamo de varios servicios que son muy importantes para la comunidad estudiantil, como la entrega de constancias de estudios, de notas aprobadas, de culminación de asignaturas, de buena conducta, entre otras solicitudes estudiantiles como reincorporaciones y retiro de asignaturas. En un principio los procesos de Planificación, Inscripción, Calificación y Egreso, que componen la Gestión Académica, con las actividades que los conforman así como las distintas solicitudes estudiantiles, eran llevados a cabo de forma manual por el personal de la DCE, dando como resultado una gran lentitud en la realización de los mismos, la posibilidad de cometer errores humanos tediosos de solucionar, además de generar gastos de materiales administrativos por las diferentes planillas y respaldos físicos que cada actividad requería. Debido a que los procesos de la Gestión Académica de la Facultad de Ciencias y el conjunto de sus actividades están bien definidas y se realizan de manera cíclica en cada período académico, se plantea la automatización de los mismos, lo que resultó en el desarrollo y posterior implementación, el 26 de febrero del 2007, del Sistema de Gestión Académica CONEST, el cual se actualizó a la versión CONEST 3.0 el 28 de abril de 2014. Este sistema ha ido progresando y actualmente se encuentran automatizadas la totalidad de las actividades de los procesos de Planificación, Inscripción, Calificación y Egreso, lo que ha permitido agilizar los tiempos de respuesta del personal de la DCE, facilitando el desarrollo de la Gestión Académica y la mejor utilización de los recursos, aprovechando las tecnologías que se tienen y minimizando los gastos de material administrativo. 12 La automatización de los procesos beneficia al personal administrativo encargado así como al personal docente y estudiantil que utiliza los servicios que le brinda el sistema; sin embargo surge una problemática que el sistema aún no resuelve y esa es la gestión de los procesos. Se debe aclarar que un gestor no es más que “la persona que se encarga de hacer que los trámites u operaciones se lleven a cabo” (ABC, Definicion ABC, 2007), permitiendo a una organización cumplir sus objetivos. Si bien el Sistema de Gestión Académica CONEST permite gestionar los procesos, esta gestión la sigue realizando el personal de la DCE de forma manual y sin un procedimiento establecido que los guie para lograr su trabajo de manera eficiente; aun cuando en el sistema se encuentran todas las actividades necesarias para llevar a cabo una autogestión. Autogestión es una palabra compuesta, donde “Auto es un prefijo que refiere aquello que es propio o en su defecto por sí mismo, en tanto, gestión implicará la dirección o la administración de una empresa o de un negocio” (ABC, Definicion ABC, 2007). Por ello, se plantea para la resolución de este problema la creación de un módulo de gestión en el sistema CONEST, el cual genere un aporte de valor, permitiendo el cambio de un gestor a una autogestión apoyada por la tecnología que sea más estructurada, sencilla e intuitiva. 1.2 Objetivos de la investigación 1.2.1 Objetivo general Desarrollar un módulo para el sistema CONEST 3.0 que permita la configuración y administración de las actividades involucradas con los procesos de la Gestión Académica en la Facultad de Ciencias de la Universidad Central de Venezuela. 1.2.2 Objetivos específicos  Determinar las actividades que pueden configurarse automáticamente a través de la aplicación web.  Definir los requerimientos que el usuario quiere que tenga el sistema. 13  Aplicar los cambios necesarios en la base de datos para almacenar la información relacionada con el módulo a desarrollar.  Desarrollar un módulo que permita gestionar las actividades inherentes a los procesos de Planificación, Inscripción y Calificación.  Ejecutar pruebas, funcionales que permitan comprobar que el comportamiento del módulo desarrollado sea el esperado y de usabilidad que permitan determinar el nivel de satisfacción de los usuarios con el producto final.  Integrar el modelo de las actividades ya existentes en el sistema CONEST 3.0 al módulo de gestión a desarrollar.  Documentar el código del módulo para la administración de procesos y actividades de la Gestión Académica del Sistema CONEST 3.0 1.3 Preguntas de Investigación ¿Qué beneficios se obtendrían con un gestor de actividades de los procesos de la Gestión Académica que se apoye en la tecnología dentro del sistema CONEST? ¿Cuáles indicadores facilitarían el seguimiento de las actividades que componen dichos procesos de la Gestión Académica en el sistema CONEST? ¿Cuál es la utilidad, para el personal de la DCE, de tener información sobre el progreso de un proceso de la Gestión Académica? ¿Qué ventajas tendría el medir el porcentaje de progreso de un proceso con base a la cantidad de actividades correspondientes al mismo que han sido finalizadas? 14 1.4 Justificación Un gestor es un rol usualmente ocupado por una persona que se encarga de hacer trámites u operaciones que se llevan a cabo de acuerdo a los procedimientos establecidos en una organización. Su aporte es esencial ya que si no estuviera no se conocerían los procesos o formas de actuar en cada caso. La organización de la DCE tiene como gestores a su personal administrativo para llevar a cabo la realización de la Gestión Académica, la cual se encarga de los aspectos relativos a las actividades administrativas y académicas relacionadas con docentes y estudiantes. La misma, abarca un conjunto de actividades relacionadas con procesos administrativos, los cuales se repiten sucesivamente a lo largo del año. Esta organización posee el sistema CONEST, el cual usa como herramienta para realizar los procesos necesarios y cumplir con sus funciones. CONEST se ha vuelto fundamental para el correcto desempeño de la Gestión Académica, pero no es suficiente para reemplazar el trabajo de un gestor entrenado en los procedimientos de la organización. El software del sistema ha sido desarrollado por diferentes grupos siguiendo una serie de estándares, sin embargo al desarrollar en paralelo cada grupo se encargaba de cumplir con sus actividades sin involucrase en el desarrollo de los otros, por ello no existe un seguimiento de lo realizado. Son muchas las funcionalidades que están desarrolladas completamente y que se pierden en el sistema, ya que el personal administrativo no posee una lista, un inventario, y la capacidad que es necesaria para conocer todas las funcionalidades disponibles debe ser muy alta, debido a la gran carga cognitiva inherente del sistema. Un gestor apoyado por la tecnología con la cual se pueda realizar una autogestión de procesos y que centralice en un mismo módulo todas las funciones disponibles y necesarias del sistema, ayuda al personal de la DCE a simplificar la ejecución de los mismos, reutilizando la experiencia y conocimientos existentes para poder realizar la gestión de los procesos a través del sistema, sin necesidad de un extenso entrenamiento previo del personal que lo maneja. Con esto se ofrece además la posibilidad de adaptar el sistema a otras Facultades. 15 Capítulo 2. Marco Conceptual En este capítulo se contendrán los conceptos más elementales asociados al desarrollo de aplicaciones web, los cuáles son necesarios abarcar debido al contexto en el que se desarrolla la solución propuesta para el problema planteado en el capítulo anterior. El sistema CONEST ha sido desarrollado como una aplicación web, por lo que su funcionamiento difiere al de las aplicaciones comunes que se usan en un ordenador. Las aplicaciones web se basan en una arquitectura cliente-servidor, en la cual como se puede deducir, existen dos partes importantes que deben interactuar para el correcto funcionamiento del sistema. A continuación se describe la arquitectura sobre la cual se basa la aplicación, así como los diversos componentes que la constituyen. 2.1 Sistema CONEST El sistema de Gestión Académica CONEST, nace como una iniciativa de la DCE en conjunto con los profesores Jossie Zambrano y Sergio Rivas de la escuela de Computación de la Facultad de Ciencias. Tuvo como meta principal la automatización de diversos procesos involucrados en la Gestión Académica de la Facultad de Ciencias de la Universidad Central de Venezuela, contando para ello con la ayuda de varios estudiantes que, mediante distintos Trabajos Especiales de Grado fueron dando forma al sistema que hoy en día es el principal en la Facultad por su gran utilidad y fácil acceso que incentiva la participación de forma activa de estudiantes, docentes y el personal administrativo que forman parte de la comunidad de la Facultad de Ciencias. El sistema CONEST, operativo desde el 26 de febrero de 2007, ha resuelto una problemática administrativa y desde el 28 de abril de 2014, con su versión más actual, CONEST 3.0, invita a su uso con la implementación de un diseño más intuitivo, una estructura más organizada y una mejora en la prestación de servicios. 2.2 La Gestión Académica La Gestión Académica puede ser dividida en dos ciclos importantes, uno relacionado a los Períodos Académicos y el otro a las Promociones; cada ciclo está compuesto por procesos. Un proceso dentro de la Gestión Académica es un conjunto de tareas o actividades que permiten administrar algún evento relacionado al ámbito académico de la institución. 16 Un Período Académico, que en el caso de la Facultad de Ciencias se estructura por semestre, puede ser del tipo regular o intensivo y consta de tres procesos: Planificación, Inscripción y Calificación. En un año se ejecutan normalmente dos períodos académicos regulares y uno intensivo. Un semestre regular se planifica para una duración de un mínimo de catorce a un máximo de dieciséis semanas, en las cuales se ofertan asignaturas pertenecientes a las seis licenciaturas que se dictan en la Facultad (Biología, Computación, Física, Geoquímica, Matemática y Química) y pertenecientes a la Coordinación Académica, sumando un aproximado de cuatrocientas secciones y una matrícula de tres mil estudiantes. Por otro lado, un período intensivo o verano se planifica para una duración de un mínimo de siete semanas, en las cuales se ofertan por lo general sólo asignaturas de servicio de las licenciaturas Matemática, Física y Química además del Departamento de Inglés. La matrícula es de aproximadamente ochocientos estudiantes y en promedio veinticinco secciones. El ciclo asociado a las Promociones se divide en dos tipos; promociones regulares y de opción docente. Una promoción regular tiene un promedio de egreso de ochenta a cien graduandos, se realiza dos veces al año, usualmente en el mes de Julio y en el mes de Diciembre, y están involucradas las seis licenciaturas de la Facultad de Ciencias. Una promoción por opción docente tiene un promedio de diez a quince graduandos, la fecha de realización es decidida por la Facultad de Humanidades y Educación en conjunto con la Secretaría de la UCV; las licenciaturas que participan son Biología, Física, Matemática y Química. La única función que realiza la DCE en este tipo de promoción es la verificación de los requisitos en los expedientes académicos de aquellos licenciados que quieren optar por la opción docente en la Facultad de Humanidades y Educación. En la Figura 2.1 se puede apreciar un resumen gráfico de los ciclos de la Gestión Académica. 17 Figura 2.1 Ciclos de la Gestión Académica de la Facultad de Ciencias 2.2.1 Ciclo Período Académico El ciclo de Período Académico se repite tres veces en un año, teniendo dos regulares y uno del tipo intensivo, todos ellos constan de tres procesos descritos a continuación. 2.2.1.1 Proceso de Planificación Este proceso consiste en la definición de la oferta académica para el período académico regular o intensivo, este se empieza a planificar aproximadamente tres meses antes de su inicio. La planificación semestral permite la ejecución de la Gestión Académica y tiene como fecha límite el día antes de la preinscripción de los estudiantes. El personal de la DCE inicia la planificación en el sistema CONEST, cuando esto ocurre se genera automáticamente, a partir de una plantilla existente, un semestre donde se agregan las asignaturas obligatorias de cada licenciatura de acuerdo al pensum que se encuentre activo, así como también el número inicial de secciones a ofertar por cada una según su historial, es decir, que el sistema se basa en la demanda que haya tenido dicha asignatura en el último período similar, correspondiente con el que se va a planificar. El proceso de planificación tiene la siguiente secuencia de actividades que se pueden visualizar en la Figura 2.2, las cuales se explican a continuación: 18 Figura 2.2 Proceso de Planificación de la Gestión Académica  Modificar plantilla del período: Consiste en establecer el valor de los parámetros correspondientes a la cantidad de secciones, cupo disponible, horario y si se requiere un aula por cada asignatura que se vaya a ofertar en el período, bien sea del tipo obligatoria, laboratorios, pasantías, métodos, seminarios o trabajo especial de grado. Todas esas asignaturas se encuentran pre configuradas en la plantilla, por lo que sólo varían algunos valores, sin embargo las asignaturas del tipo complementaria o del Programa de Cooperación Interfacultades (PCI), las configuran en su totalidad el personal de la DCE ya que la oferta de las mismas cambia constantemente.  Asociar plantilla a período: Una vez que se realiza la correspondiente modificación de la plantilla del período, se crea un nuevo período académico al cual se le asocia la plantilla ya modificada. Así mismo se le habilita la visualización y edición a el/los jefe(s) de departamento de cada escuela para que la puedan configurar.  Configurar planificación: Esta actividad la realizan los jefes de departamento de cada escuela. Consiste en establecer el valor de los parámetros correspondientes a la cantidad de secciones, docentes asignados a las mismas, cupo disponible, horario, si necesita preinscripción y si se requiere un aula por cada asignatura del tipo electiva que vaya a ofertar su 19 licenciatura en el período. Durante esta etapa el personal de la DCE puede habilitar la visualización de la planificación para los docentes.  Ejecutar Programación: Cuando se va a iniciar el proceso de inscripción, la planificación procede a convertirse en programación. Esto implica que únicamente el personal de la DCE está habilitado para realizar modificaciones importantes, mientras que los jefes de departamento solo podrán configurar los docentes asignados a las respectivas secciones. En este momento los estudiantes pueden visualizar la oferta académica. Este proceso posee actividades eventuales, las cuales no se hacen regularmente en el proceso, tales como:  Agregar nueva asignatura: Una vez que el Consejo de Escuela aprueba la creación de una nueva asignatura, se le proporciona a la DCE la información necesaria para cargarla en el sistema CONEST, de manera que esté disponible en la planificación. Esta actividad no suele realizarse con frecuencia y no se lleva a cabo si el período académico es del tipo intensivo. Cuando este proceso culmina, se considera que el período académico se encuentra en ejecución. 2.2.1.2 Proceso de Inscripción En este proceso los estudiantes solicitan las asignaturas que quieren cursar durante el período académico en curso. Las asignaturas que se pueden inscribir son aquellas que están ofertadas en la programación y el sistema toma en cuenta que los estudiantes cumplan los requisitos necesarios para inscribirlas. Durante este proceso, la mayor parte de las actividades están relacionadas con la población estudiantil, el personal de la DCE cumple con la labor de abrir y cerrar el proceso en las fechas correspondientes. El proceso de inscripción tiene la siguiente secuencia de actividades visualizadas en la Figura 2.3, las cuales se explican a continuación: 20 Figura 2.3 Proceso de Inscripción de la Gestión Académica  Inscripción de nuevos ingresos: Esta tarea aplica únicamente a los estudiantes que van a cursar por primera vez las asignaturas del primer semestre de una licenciatura en un período en la Facultad. Se requiere que una vez que el estudiante realiza su inscripción en la Secretaría de la Universidad, se dirija a la taquilla de la DCE a consignar sus recaudos para posteriormente registrarse en el sistema CONEST, donde se le piden sus datos personales y se le inscriben automáticamente las asignaturas correspondientes. Se les mantiene informados, vía correo electrónico, sobre la fecha de inicio de clases y cualquier evento de bienvenida al que deban asistir. Esta actividad no se realiza en los períodos académicos de modalidad intensivo.  Preinscripción: Se realiza antes de la inscripción. Consiste en efectuar un censo de los estudiantes que deseen cursar asignaturas de cupos limitados, por lo general las electivas y laboratorios que estén contemplados en la programación. Computación, Geoquímica y Química son las licenciaturas que ofertan asignaturas o laboratorios que requieren preinscripción. Sólo se pueden preinscribir aquellos estudiantes que cumplan los requisitos necesarios. Una vez finalizada la Preinscripción en el sistema se procede con la asignación de cupos de aquellos estudiantes que realizaron la preinscripción. 21 Esta decisión la toman las escuelas a través de algoritmos ya establecidos que se pueden personalizar por escuela y por asignatura acorde a reglas y criterios académicos, como eficiencia, promedio, cantidad de créditos y heurísticas que permiten, según su prioridad, el manejo de las asignaciones. Las listas de estudiantes aceptados en la preinscripción sirven de insumo para la inscripción.  Abrir inscripción: Esta actividad se ejecuta en el sistema una vez culmina la asignación de aceptados en la preinscripción. Con el proceso abierto los estudiantes que cumplan los requisitos pueden inscribir libremente las asignaturas de cupo ilimitado, mientras que en el caso de las de cupo limitado, dependerá del resultado de la preinscripción.  Asignación de aulas: Una vez culminada la inscripción, se asignan las aulas a las asignaturas. Se realiza automáticamente por sección mientras la asignatura tenga como requisito, en la programación, que esta requiere un espacio en el edificio de aulas.  Reservación de aulas: Inicia una vez concretada la actividad de inscripción y ocurre durante todo el semestre, finalizando una vez se reservan y asignan las aulas para los exámenes finales y de reparación en el proceso de Calificación. En esta actividad el personal docente puede reservar un aula, liberarla o cambiar la que ya tienen; de esta forma se obtiene la disponibilidad de las mismas generando una relación docente, asignatura y aula.  Modificación de inscripción: Esta actividad se realiza durante las primeras dos semanas del período académico, durante este tiempo los estudiantes pueden realizar solicitudes de extra créditos, paralelos o inscripción extemporánea, su aprobación se determina aplicando el reglamento de cada escuela. Una vez procesadas las solicitudes, el sistema envía un correo a los respectivos estudiantes informándoles sobre el resultado de las mismas. Asimismo, esta actividad abarca los retiros de las asignaturas teóricas y los laboratorios, los cuales se realizan a través del sistema y tienen una mayor duración que las solicitudes estudiantiles. Esta actividad no se lleva a cabo si el período académico es del tipo intensivo.  Generar planillas de inscripción: Actividad realizada una vez finalizado el proceso de inscripción, consiste en generar a través del sistema un lote de planillas por cada uno de los estudiantes inscritos en el período, por cada escuela. Esta planilla se anexa al expediente físico del respectivo estudiante. 22 2.2.1.3 Proceso de Calificación Este proceso convoca a los docentes a asignar las notas que obtuvieron los estudiantes inscritos en la(s) asignatura(s) que se dictaron en el período académico que está por finalizar. Dura dos semanas y finaliza cuando cada docente haya terminado de calificar, el último día de la semana de los exámenes de reparación. Debido a que existen asignaturas que pueden ser calificadas de forma extemporánea, como ocurre con las PCI, las complementarias, los Inglés y los exámenes de suficiencia, la calificación no la hace el docente directamente en el sistema, sino que, posterior al envío físico de notas a la DCE, es transcrita por el personal administrativo. Una vez culmina este proceso, se envían las planillas de calificación a la secretaría de la UCV como cierre oficial del período académico. El proceso de calificación tiene la siguiente secuencia de actividades que se pueden apreciar en la Figura 2.4, las cuales se describen con detalle a continuación: Figura 2.4 Proceso de Calificación de la Gestión Académica  Generar calendario de exámenes: El proceso de calificación empieza cuando el personal de la DCE, a través del sistema CONEST, planifica y genera el calendario de exámenes finales y de reparación para las asignaturas obligatorias, el mismo se realiza dos semanas antes de la culminación de las clases del período. El calendario tiene una duración de dos semanas. 23  Notificar apertura de la calificación: Se envía un correo general a todos los docentes informándoles que el proceso de calificación está en curso y se les proporciona la fecha final que tienen para calificar a sus estudiantes en el sistema.  Recordatorio de calificación: Esta actividad se aplica en el transcurso de todo el período de calificación; tiene por objetivo prevenir que el proceso finalice con secciones calificadas de forma incompleta. Consiste en enviar vía correo electrónico un recordatorio a aquellos docentes que no hayan completado sus nóminas de calificación para que terminen de llenarlas, informándoles nuevamente que el proceso se encuentra abierto así como la fecha de cierre del mismo.  Verificar calificación: Una vez que un docente ha calificado total o parcialmente a los estudiantes que cursaron la asignatura de la que es responsable, el sistema le envía un correo electrónico informándole que su calificación ha sido procesada y en caso de ser parcial le recuerda la cantidad de estudiantes que le falta por calificar. Este correo sirve de verificación de la acción realizada y funciona como medida de seguridad, alertando al docente de algún problema si éste no ha calificado. Ya cerrado el proceso de Calificación, se verifican las asignaturas por licenciatura del período académico transcurrido para confirmar que todos los estudiantes inscritos tengan su respectiva nota. En caso de que alguna asignatura no se encuentre en estado calificada se le envía un correo electrónico particular al docente responsable de la asignatura, pidiéndole que se acerque a la DCE para completar la calificación.  Generar planillas de calificación: Se generan en lote, por cada escuela, las planillas de cada sección de la asignatura ofertada en el período académico, las cuales contienen las notas de todos los estudiantes que cursaron. Se dividen las notas según el tipo de examen, teniendo: final, reparación y, en el caso del Departamento de Inglés, suficiencia.  Generar reporte: Se debe tener un reporte donde se resume por cada escuela el estado de la calificación (Incompleta o Completa) para la oferta del período. Este reporte ayuda a verificar que la información de las planillas sea correcta, además de contar con un registro tangible de cualquier evento que haya ocurrido durante el proceso de calificación. Estas planillas se generan varias semanas después de finalizado el semestre. 24 2.2.2 Ciclo Promociones El ciclo de Promociones de la Gestión Académica está compuesto de un único proceso, conocido como Egreso. Este proceso se realiza en la Facultad de Ciencias para las Promociones regulares, ya que las de opción docente las organiza la Secretaría de la UCV. 2.2.2.1 Proceso de Egreso En este proceso, el personal de Registro y Control de grado de la DCE se encarga de las actividades relacionadas a la promoción de los estudiantes, que como ya fue mencionado, puede ser de dos tipos. Para este proceso se establecen fechas límites en las cuales los estudiantes deben presentar sus Trabajos Especiales de Grado (TEG) y consignar los recaudos solicitados por la DCE para poder egresar en dicha promoción. El proceso de egreso tiene la siguiente secuencia de actividades que se muestran en la Figura 2.5, explicadas en detalle a continuación: Figura 2.5 Proceso de Egreso de la Gestión Académica 25  Revisar el expediente: Se debe auditar de forma estrictamente manual el expediente físico de cada estudiante que desea optar al grado con la data generada por el sistema CONEST, a fin de verificar que no existen diferencias entre información que se posee de las actividades realizadas y asignaturas cursadas durante el transcurso de la carrera estudiada. Esta actividad se inicia cuando se cierra el proceso de inscripción del período académico actual donde ya se conoce los estudiantes que inscribieron el TEG.  Solicitud de Jurado: Esta actividad la llevan a cabo los docentes en un período de tiempo establecido una vez que en el sistema es activada. Consiste en solicitar al Consejo de Escuela, la aprobación de un conjunto de docentes que conformarán el jurado evaluador de la presentación o defensa del Trabajo Especial de Grado de un estudiante. Luego es responsabilidad de cada Consejo de Escuela aceptar o modificar en el sistema la solicitud realizada. Algunas escuelas también realizan este proceso para la evaluación de Seminarios.  Solicitud de Planillas: El personal de la DCE se encarga de activar y desactivar el período para realizar esta actividad. Su objetivo es permitir a los tutores de un TEG, Seminario y Pasantía (sólo para algunas escuelas) obtener la planilla que será utilizada en la evaluación respectiva, la cual debe ser firmada también por el jurado aprobado. La solicitud de TEG y Seminario solo puede ser efectuada una vez que se realiza la solicitud de jurado y esta ha sido aprobada por el Consejo de Escuela correspondiente. En el caso de la escuela de Computación la solicitud de jurados del Seminario no necesita ser aprobada por el Consejo de Escuela.  Emitir planillas: Se generan las planillas de Seminario y TEG que deben ser enviadas a Secretaría. También se realiza la transmisión de datos al sistema CONEST Secretaría, ofreciendo así un respaldo digital de los datos físicos previamente auditados.  Realización de eventos: Se planifican con un año de antelación. Son tres eventos, Firma de Acta, Imposición de Medallas y Entrega de Títulos y se realizan en los espacios de la Facultad de Ciencias y en el Aula Magna de la UCV. 26 2.3 Aplicaciones web En el contexto informático es posible definir una aplicación web como toda aquella a la que los usuarios accedan ingresando a un servidor web a través de Internet o de una intranet mediante un navegador. Es decir que es un software codificado en un lenguaje entendible por los navegadores web a los cuales se les confía su ejecución. Entre sus principales características se pueden resaltar las siguientes (Peñafiel, 2015):  Permiten una mayor fluidez en la comunicación entre clientes y servidores, abstrayendo a los usuarios sobre complicados protocolos de comunicación.  Su mantenimiento y actualización se realiza de manera sencilla a través de internet, evitando que se deba distribuir e instalar software específico o versiones individuales para cada usuario.  Permiten al usuario un acceso interactivo a la información almacenada en el servidor, respondiendo a cada una de sus acciones con documentos codificados a través del estándar HTML, que en conjunto con otros lenguajes interpretados de lado del cliente, permiten desplegar interfaces de usuario con el contenido solicitado. De acuerdo a lo expresado por (Peñafiel, 2015) los beneficios de una aplicación web pueden ser resumidos de la siguiente forma:  Permiten realizar trabajo a distancia con mayor facilidad.  Utilizar una aplicación web es posible siempre y cuando se cuente con un dispositivo computacional que tenga un navegador web y conexión a internet. Además no importa la hora o sitio donde el usuario se encuentre.  Para su adecuado uso, no deberían ser requeridos grandes conocimientos en informática.  Una aplicación web permite centralizar todas las áreas de trabajo en un solo sitio. Del mismo modo, las ventajas de una aplicación web se pueden expresar en los siguientes términos (Peñafiel, 2015):  Compatibilidad multiplataforma, es decir no importa el navegador o sistema operativo que el cliente utilice para acceder a la aplicación, esta funcionará siempre de la misma manera. 27  Siempre se mantiene actualizada, aunque algunas características pueden funcionar adecuadamente o no dependiendo de la antigüedad del navegador con que se acceda a la aplicación web.  No requieren ser descargadas, instaladas o configuradas para poder darles uso, en la mayor parte de los casos basta con simplemente crear una cuenta de usuario.  Consumen menos recursos del ordenador, ya que la mayor parte del procesamiento de los datos se realiza en el servidor, por lo que también suelen ocurrir menos fallos o errores.  Pueden trabajar con múltiples usuarios al mismo tiempo, ofreciendo la misma experiencia de uso para todos, dependiendo de la capacidad o recursos del servidor web. A continuación, se abarcará de forma más detallada la definición del modelo cliente- servidor, que es la base fundamental de las aplicaciones web. 2.3.1 Modelo cliente-servidor Desde el punto de vista funcional, se puede definir el modelo cliente-servidor como una arquitectura distribuida que permite a los usuarios finales obtener acceso a la información en forma transparente aún en entornos multiplataforma (Márquez Avendaño & Zulaica Rugarcía, 2004). En dicho modelo, el rol del cliente es interpretado por aquel dispositivo encargado de realizar peticiones solicitando un determinado servicio, mientras que el servidor se encarga de enviar uno o varios mensajes con la respuesta pertinente a dicha solicitud. En algunos casos el servidor no solo interactúa con los clientes sino que también lo puede hacer con otros servidores, ya sea para solicitar servicios externos o gestionar los datos del propio sistema. En la Figura 2.6 se tiene un modelo cliente- servidor donde se aplica el último ejemplo mencionado. Figura 2.6 Modelo cliente-servidor 28 De acuerdo a lo expresado por (Márquez Avendaño & Zulaica Rugarcía, 2004) tanto el cliente como el servidor poseen una serie de características propias, las cuáles se relacionan directamente a sus funcionalidades principales, como se describe a continuación: Cliente El cliente es el proceso que permite al usuario formular los requerimientos y pasarlos al servidor, se le conoce también con el término front-end. El cliente se encarga principalmente de las funciones de manipulación y despliegue de los datos, por lo que están desarrollados sobre plataformas que permiten construir interfaces gráficas de usuario, así como acceder a los servicios distribuidos en cualquier parte de la red. En resumen, sus funciones esenciales son:  Interacción con el usuario.  Procesar la lógica de la aplicación y hacer validaciones locales.  Generar requerimientos de bases de datos.  Recibir resultados del servidor.  Formatear resultados, en elementos que puedan ser entendidos por el usuario final. Servidor Es el proceso encargado de atender a múltiples clientes que hacen peticiones sobre algún recurso administrado por él, también se le conoce con el término back-end. Maneja normalmente todas las funciones relacionadas a la gran parte de las reglas del negocio y recursos de datos. Sus funciones pueden resumirse de la siguiente forma:  Aceptar los requerimientos de bases de datos que hacen los clientes.  Procesar requerimientos de bases de datos.  Formatear los datos para transmitirlos a los clientes.  Procesar la lógica de la aplicación y realizar validaciones a nivel de bases de datos. 29 En el caso del sistema CONEST, al existir la necesidad de interactuar con un sistema manejador de bases datos, la división lógica de esta aplicación web se establece a través de un patrón denominado Modelo-Vista-Controlador, que será definido como siguiente punto a tratar. 2.3.2 Patrón de arquitectura Modelo-Vista-Controlador Un patrón se define como aquella solución a un problema que dado un contexto y ciertas características es considerada como exitosa. Un patrón de arquitectura plantea por tanto un modelo de estructura para las diferentes partes de un todo, como en el caso de las aplicaciones web, se refiere a la organización de los archivos de código fuente, de configuraciones, imágenes, entre otros. El patrón Modelo-Vista-Controlador o MVC considera dividir una aplicación en tres módulos claramente identificables y con funcionalidad bien definida (Bascón Pantoja, 2004): El modelo El modelo es un conjunto de clases que representan la información del mundo real que el sistema debe procesar. No toman en cuenta la forma en que la información va a ser desplegada, ni el mecanismo mediante el cual será almacenada la información contenida dentro del mismo. Son la interfaz principal que utiliza la aplicación para comunicarse con las bases de datos. La vista Son el conjunto de clases que se encargan de mostrar la información contenida dentro de los modelos. El controlador Es un objeto que se encarga de dirigir el flujo de control de la aplicación debido a mensajes externos, como datos introducidos u opciones del menú seleccionadas por el usuario. A partir de esto el controlador se encarga de modificar los modelos y abrir o cerrar vistas. En la Figura 2.7 que se muestra a continuación, es posible observar la interacción y relación entre los módulos de este patrón. 30 Figura 2.7 Arquitectura MVC Entre las ventajas de utilizar este patrón se encuentran las siguientes (Bascón Pantoja, 2004):  La aplicación se implementa modularmente.  Sus vistas siempre muestran información actualizada, pues la obtienen a través de los propios modelos, quienes se encargan de automáticamente de este proceso.  Es considerado un patrón de diseño bien elaborado, pues las aplicaciones donde se implementan presentan una gran extensibilidad y mantenibilidad en comparación con las que se basan en otros patrones. En cuanto a las desventajas o limitaciones del patrón se tienen las siguientes (Bascón Pantoja, 2004): - El tiempo requerido para desarrollar una aplicación siguiendo este patrón es mayor durante la fase inicial que en aquellas que no la implementan, debido a que requiere que el programador defina una gran cantidad de clases, sin embargo esta característica es la que en una fase más avanzada la aplicación sea fácilmente extensible y mantenible. 31 - Este patrón se basa en la programación orientada a objetos, por lo que su implementación en entornos que no sigan este paradigma es sumamente costosa. 2.3.3 Tecnologías empleadas en el desarrollo De lo planteado hasta el momento, se puede acotar que la implementación de aplicaciones web se realiza en forma fraccionada, es decir que existe un proceso de desarrollo exclusivo para el lado del cliente y otro para el lado del servidor, a menudo basados en diseños y tecnologías diferentes. A continuación serán expuestas las diferentes tecnologías y herramientas que los desarrolladores del sistema CONEST han utilizado a lo largo de su ciclo de vida en cada uno de los niveles del modelo cliente-servidor. 2.4 Tecnologías de lado del cliente Son aquellas que se utilizan en la construcción de las interfaces de usuario, por ello se basan en tecnologías y estándares soportados por la mayor parte de los navegadores web existentes. Entre las utilizadas para el desarrollo del sistema CONEST se tienen HTML5, CSS3, JavaScript, jQuery y jQuery-UI. A continuación se definen cada una de ellas. 2.4.1 HTML5 HTML (HyperText Markup Language) es el lenguaje con el que se escribe la estructura y la semántica del contenido de un documento web. El contenido dentro de una página web es etiquetado con elementos como <img>, <title>, <p>, <div>, entre otros (Mozilla Developer Network, 2014). La quinta versión de este lenguaje, conocida como HTML5 es definida (Walker, 2011) como un lenguaje diseñado para organizar el contenido web, cuyo principal objetivo es estandarizar la creación de interfaces de usuario, facilitando así el diseño y desarrollo de aplicaciones web. Las etiquetas agregadas en esta versión del lenguaje son altamente evocadoras, encapsulando su rol y uso, a diferencia de las versiones anteriores donde las etiquetas no eran tan descriptivas e intuitivas. Se tienen entonces etiquetas que ofrecen una descripción más específica sobre el tipo de contenido, como por ejemplo <audio>, <article>, <figure>, <section>, <video>, entre otras. En general, HTML5 proporciona: 32  Etiquetas que describen exactamente lo que están diseñadas a contener.  Comunicaciones de red mejoradas, implicando una mayor velocidad de almacenamiento y carga de páginas.  Soporte para contenido multimedia, de forma que se puede añadir audio, video, gráficas, etc. disminuyendo la necesidad de tener que instalar plug-ins de terceros.  Formularios mejorados, que reducen la necesidad de utilizar código escrito en JavaScript, optimizando la comunicación entre servidores y dispositivos de recursos críticos como es el caso de teléfonos móviles.  Un API basado en SQL que permite almacenamiento de datos a nivel local para el cliente.  Soporte para CSS3, lenguaje que ofrece mayores facilidades en lo que a manipulación de interfaces y contenidos se refiere, ampliando enormemente el universo de posibilidades para los diseños de las aplicaciones. Actualmente el lenguaje es soportado por gran parte de los navegadores de uso común (Safari, Firefox, Chrome, entre otros), en algunos en mayor porcentaje que en otros, pero dado que esta versión de HTML permanece en constante desarrollo, el soporte a la misma se incrementa a medida que se publican versiones más actualizadas de estos navegadores. 2.4.2 JavaScript JavaScript es un lenguaje de script, es decir se trata de código de programación que se inserta dentro de un documento HTML. Este lenguaje es interpretado por los navegadores permitiendo agregar dinamismo al contenido de un sitio web. Fue desarrollado por la compañía Netscape como parte del desarrollo de su navegador Navigator (Sánchez, 2003). Contrario a lo que se interpreta, JavaScript no guarda relación alguna con el lenguaje Java, pues mientras este último se utiliza en la construcción de programas o aplicaciones independientes, mientras que JavaScript a pesar de ser más sencillo, depende de otros lenguajes como HTML para cumplir sus funciones, es decir que por sí solo no permite construir aplicaciones que trabajen de forma independiente (Sánchez, 2003). 33 Este lenguaje permite además realizar una técnica bastante útil para agregar dinamismo al contenido de los sitios web. Esta técnica se conoce como AJAX, cuyo acrónimo traducido al español es JavaScript Asíncrono + XML. La técnica AJAX tiene como objetivo crear páginas web dinámicas, mediante la realización de solicitudes asíncronas hacia el servidor, es decir sin la participación directa del usuario, las cuales permiten actualizar ciertas secciones de la página sin necesidad de recargarla por completo. En ambientes donde no se implementa esta técnica, cualquier actualización no será visible hasta tanto se recargue por completo el contenido de la página (W3Schools, 2015). Para transmitir la información que debe ser actualizada a través de la técnica es posible utilizar XML o JSON, dos documentos que pueden contener datos bajo un formato específico. En el caso del sistema CONEST se utiliza JSON, acrónimo de Notación de Objetos de JavaScript y se define como un formato ligero de intercambio de datos, cuya lectura y escritura es simple para humanos, además de fácil interpretación para las máquinas. Plantea un formato de datos completamente independiente de cualquier lenguaje pero organizado en estructuras de datos bien conocidas por programadores de lenguajes como C/C++, JavaScript, C#, Java, Python, Perl, entre muchos otros. Esta propiedad lo hace un lenguaje ideal para el intercambio de datos (JSON Org en Español). 2.4.3 CSS3 Las hojas de estilo en cascada (Cascading Style Sheets o CSS) son las que nos ofrecen la posibilidad de definir reglas y estilos de representación en diferentes dispositivos, ya sean pantallas de equipos de escritorio, portátiles, móviles, impresoras o cualquier otro con la capacidad de desplegar contenido web (Damián, 2010). Su primera versión fue publicada a finales de 1996 y su gran aceptación le llevo hasta su versión 2.1, cuya compatibilidad abarcó la gran mayoría de los navegadores existentes en el mercado. A partir del año 2005 se empezó a definir la siguiente versión de este estándar, la cual se conoce como CSS3 o Cascading Style Sheets Level 3, donde se ofrece al desarrollador gran variedad de opciones muy importantes para las necesidades del diseño web actual. De este modo, es posible realizar sombreados, redondeados, movimientos, transformaciones, entre otros (Damián, 2010). Actualmente varias de las características de CSS3 son soportadas por los navegadores comerciales más conocidos, pero al ser una versión cuyo uso está en 34 pleno auge, aún existen elementos que se comportarán en forma diferente dependiendo del navegador que se utilice para desplegar una página web donde se le utilice. 2.4.4 jQuery y jQuery-UI jQuery es una librería pequeña y rápida basada en el lenguaje JavaScript, sus características hacen más sencilla la manipulación de los elementos definidos dentro de un documento en formato HTML, así como el manejo de eventos, animaciones e implementación de AJAX. Es compatible con una gran cantidad de navegadores, además es extensible y versátil, pues simplifica la sintaxis con la que debe escribirse un código en lenguaje JavaScript (jQuery, 2015). Por su parte, jQuery-UI es una colección de elementos de interfaz de usuario que mejoran la interacción, efectos, widgets o temas visuales de una aplicación web que se esté construyendo con apoyo de la librería jQuery. Resulta útil tanto para construir interfaces elaboradas como minimalistas (jQuery, 2015). 2.5 Tecnologías de lado del servidor Son aquellas que se utilizan en la implementación del módulo encargado de lógica de negocio. En el desarrollo del sistema CONEST, se implementa el patrón de arquitectura MVC a través de un framework llamado Ruby on Rails, el cual se basa en el lenguaje de programación Ruby. Para el manejo de los datos, se ha utilizado el sistema manejador MySQL. Cada uno de ellos será definido a continuación. 2.5.1 Ruby Ruby es un lenguaje de programación dinámico y de código abierto enfocado a la simplicidad y productividad. Su creador Yukihiro “Matz” Matsumoto, lo ideó mezclando partes de sus lenguajes favoritos (Perl, Smalltalk, Eiffel, Ada y Lisp) siendo su principal motivación el obtener un lenguaje que sea natural, de forma que se asemeje a la vida real (Ruby Org, 2015). Desde su liberación pública en 1995, Ruby ha atraído devotos desarrolladores de todo el mundo. Fue en el año 2006 cuando alcanzó reconocimiento masivo, formándose como resultado grupos de usuarios activos en las ciudades más importantes del mundo y llenando las capacidades de las conferencias relacionadas a Ruby. Entre sus características más relevantes se encuentran las siguientes(Ruby Org, 2015): 35  Es orientado a objetos: En Ruby todo es un objeto. Se le pueden asignar propiedades y acciones a toda información de código. La programación orientada a objetos llama a las propiedades variables de instancia y las acciones son conocidas como métodos. Por ejemplo, a un número se le pueden aplicar acciones del siguiente tipo: 5.times {print “Hola”}. Lo cual permite da como resultado que a través de una clase asociada, el mensaje se muestre el número de veces que dicho entero indique.  Es flexible: Ruby es considerado un lenguaje flexible ya que permite a sus usuarios alterarlo libremente. Las funcionalidades esenciales pueden ser eliminadas o redefinidas a placer. En este sentido se pueden agregar o modificar funcionalidades a los módulos ya existentes. Ruby intenta no restringir al desarrollador.  Acepta programación por bloques: Los bloques de código permiten realizar describir comportamientos adicionales para las funcionalidades ya definidas, se delimitan por las palabras reservadas do…end.  Maneja varios tipos de variables: Ruby soporta variables locales, de instancia y globales definidas con sin prefijo cuando son locales, con un el símbolo @ cuando son de instancia y con el símbolo $ cuando son globales.  Manejo de excepciones: Al igual que Java y Python, para facilitar el manejo de errores.  Recolector de basura: Para todos los objetos, evitando mantener contadores de referencias en bibliotecas externas.  Facilidad para agregar extensiones: Las extensiones escritas para Ruby en lenguaje C son más sencillas de integrar que en otros lenguajes. Además el lenguaje puede cargar librerías de extensión dinámicamente si el sistema operativo lo permite.  Manejo multi-hilos: Ruby maneja hilos en forma independiente del sistema operativo. De forma que el desarrollador tiene un soporte multi-hilos para sus proyectos así la plataforma de desarrollo no lo soporte en forma nativa.  Portable: El lenguaje es fácilmente portable, aunque se desarrolla mayoritariamente en GNU/Linux, corre en varios tipos de UNIX, Mac Os X, Windows, DOS, BeOS, OS/2, etc. 36 2.5.2 Ruby onRails Rails es un framework de desarrollo de aplicaciones web escrito en el lenguaje de programación Ruby. Está diseñado para que la programación de aplicaciones web sea más fácil, haciendo supuestos sobre lo que el desarrollador necesita para comenzar, pretendiendo realizar más escribiendo menos código, a diferencia de otros lenguajes y frameworks. Se basa en dos principios fundamentales, los cuales se describen a continuación (Comunidad Rails, 2007). 1. DRY (del inglés “Don’t Repeat Yourself”), el cual sugiere que escribir el mismo código una y otra vez es una mala práctica. Para ello el framework ofrece la posibilidad de reutilizar código. 2. Convención sobre configuración, que significa que Rails hace algunas suposiciones sobre lo que el desarrollador desea hacer así como la forma de hacerlo. Ahorrando el tiempo y esfuerzo de tener que especificar miles de cosas en múltiples archivos de configuración. 2.5.3 MySQL MySQL es un SMBD (Sistema Manejador de Bases de Datos) relacional desarrollado, distribuido y soportado por la Corporación Oracle. Su facilidad de uso, seguridad, escalabilidad y velocidad lo han convertido en uno de los más populares que existen actualmente. Sus principales características de definen a continuación (MySQL, 2011):  Está escrito en C y C++, lo que permite su funcionamiento en diversas plataformas como Microsoft Windows, Linux, Mac OS, entre otras.  Existen API's capaces de conectar este sistema manejador con diferentes lenguajes de programación como PHP, C, C++, Perl, Java, Ruby, Python, entre otros, permitiendo el desarrollo de aplicaciones de diversos tipos.  Utiliza múltiples hilos a nivel de kernel, lo que permite aprovechar al máximo un sistema que disponga de múltiples procesadores.  Permite el uso de índices tipo Árbol-B, que ofrecen tiempos de respuesta óptimos para las consultas. Una tabla puede tener hasta un máximo de 64 índices asociados.  Soporta grandes cantidades de datos. MySQL Server puede contener según estadísticas de la organización, hasta 50 millones de registros, 200 mil tablas y 5 mil millones de columnas. 37  El sistema de privilegios y contraseñas es flexible pero seguro, utiliza verificación basada en host además de encriptar todas las contraseñas que trafiquen entre cliente y servidor. En resumen, es un sistema manejador con características que le convierten en una opción bastante flexible, robusta y sencilla de utilizar al momento de desarrollar aplicaciones, no solo para ambientes web, sino también locales. 2.6 Tecnologías del equipo de desarrollo Estas tecnologías no son otras que las herramientas a las cuales el equipo de desarrollo puede recurrir para facilitar el proceso de construcción del software. No existe un estándar que obligue a utilizar alguna u otra en particular, dejando siempre a criterio de los desarrolladores el uso o no de las mismas. Además resultan transparentes para el usuario final y no afectan en nada a las tecnologías utilizadas tanto de lado del cliente como del servidor. El equipo de desarrollo del sistema CONEST se apoya independientemente del método de desarrollo que se utilice para cada módulo, de dos herramientas fundamentales, la primera es Asana, un software que facilita la gestión de actividades a realizar por los desarrolladores y la segunda es Git muy útil para realizar el manejo y control de versiones así como la integración de código. A continuación se explicará de manera más detallada cada una de ellas. 2.6.1 Asana Asana es una aplicación pensada para mejorar la comunicación y organización dentro de un equipo de trabajo. Fue desarrollada por uno de los co-fundadores de Facebook Dustin Moskovitz y el ingeniero Justin Rosenstein. Fue lanzada al público general en el año 2011. Entre sus principales ventajas se pueden mencionar (Insomer, 2014):  Mejora y agiliza el trabajo en equipo: La organización de las tareas más allá de ser realizada en forma individual por cada integrante, puede contar con la participación de todo el equipo, fortaleciendo la importancia que cada rol debe desempeñar a lo largo del ciclo de vida del proyecto. Como herramientas se tienen chats, cometarios y la posibilidad de asignación de tareas a cada usuario a través de la aplicación.  Separa las tareas por proyectos: Cada usuario puede dentro de su cuenta, crear varios proyectos, cada uno con su propio conjunto de tareas y equipo 38 de trabajo asignados. Los proyectos y sus tareas también pueden ser de carácter personal.  Es efectiva en el recordatorio de tareas: La aplicación es capaz de notificar a los usuarios vía correo electrónico cualquier evento relacionado a las tareas y proyectos en los que participa, inclusive si la fecha tope fijada para completarles ha sido superada, la aplicación continúa enviando recordatorios de que deben realizarse en algún momento.  Existe una versión móvil: Ya sea en iOS o Android, la aplicación se encuentra disponible en forma gratuita a través de los respectivos repositorios de aplicaciones de estas plataformas, permitiendo a los usuarios administrar sus proyectos y tareas desde la comodidad de su dispositivo móvil en tiempo real. En resumen es una aplicación bastante útil, debido a que integra todo lo necesario para la gestión de proyectos dentro de un mismo ambiente, facilitando tanto la organización de las actividades como la participación de todos los miembros del grupo de trabajo. Además de ser gratuita, posee una versión móvil para las plataformas más utilizadas en el mercado actualmente. 2.6.2 Git Un sistema de control de versiones o SCV se define como aquel que permite realizar un seguimiento de la historia de una colección de archivos y además incluye la funcionalidad de revertir la colección de archivos actual hacia versión anterior. Cada versión podría considerarse como una fotografía del estado de la colección en un momento determinado del tiempo. Cuando se aplica este concepto a un ambiente distribuido, se cuenta con un servidor central donde se almacena el repositorio principal y cada usuario puede hacer una copia completa del mismo mediante un proceso llamado "clonación" (Fiqus, 2014). Git es un sistema de control de versiones distribuido que se origina a partir del desarrollo del kernel de Linux y es utilizado en muchos proyectos populares de código abierto. 2.7 Marco Metodológico Para el desarrollo de este Trabajo Especial de Grado, se aplicará un método de desarrollo clasificado como ágil. Los métodos de desarrollo ágiles son una propuesta alternativa a los tradicionales, cuyo fundamento se basa principalmente en lograr que el proceso de desarrollo de software sea ligero y adaptable a cambios, 39 a fin de obtener un producto de calidad donde las principales necesidades de sus usuarios sean solventadas satisfactoriamente. A lo largo de esta sección del capítulo se expondrán de manera detallada las bases sobre las que se forman los métodos de desarrollo ágil, así como el método seleccionado para el desarrollo de la solución. Igualmente se explica la Gestión de Procesos del Negocio. 2.7.1 Manifiesto Ágil En el año 2001 un grupo de expertos en desarrollo de software se reunieron en Utah, convocados por Kent Beck, quien años antes había publicado un libro donde planteaba un nuevo método de desarrollo de software conocido como Extreme Programming. Durante esta reunión se discutieron tópicos relacionados a las técnicas y procesos utilizados para desarrollar software, abarcando también las nuevas alternativas que estaban surgiendo en contraste con los tradicionales y pesados métodos ya establecidos. Como resultado se obtuvo lo que hasta la actualizad se conoce como Manifiesto Ágil (Beck, y otros, 2001), un documento en el que se resumen los valores y principios sobre los cuáles basan estos métodos alternativos, según el cual se valora:  Individuos e interacciones sobre procesos y herramientas.  Software funcionando sobre documentación extensiva.  Colaboración con el cliente sobre negociación contractual.  Respuesta ante el cambio sobre seguir un plan. Lo cual hace referencia a que si bien se valoran los elementos escritos a la derecha, se valoran aún más los que se encuentran a la izquierda. Del mismo modo, estos valores sirven de pilares para los siguientes principios: 1. Nuestra mayor prioridad es satisfacer al cliente mediante la entrega temprana y continua de software con valor. 2. Aceptamos que los requisitos cambien, incluso en etapas tardías del desarrollo. Los procesos Ágiles aprovechan el cambio para proporcionar ventaja competitiva al cliente. 3. Entregamos software funcional frecuentemente, entre dos semanas y dos meses, con preferencia al periodo de tiempo más corto posible. 40 4. Los responsables de negocio y los desarrolladores trabajamos juntos de forma cotidiana durante todo el proyecto. 5. Los proyectos se desarrollan en torno a individuos motivados. Hay que darles el entorno y el apoyo que necesitan, y confiarles la ejecución del trabajo. 6. El método más eficiente y efectivo de comunicar información al equipo de desarrollo y entre sus miembros es la conversación cara a cara. 7. El software funcionando es la medida principal de progreso. 8. Los procesos Ágiles promueven el desarrollo sostenible. Los promotores, desarrolladores y usuarios debemos ser capaces de mantener un ritmo constante de forma indefinida. 9. La atención continua a la excelencia técnica y al buen diseño mejora la Agilidad. 10. La simplicidad, o el arte de maximizar la cantidad de trabajo no realizado, es esencial. 11. Las mejores arquitecturas, requisitos y diseños emergen de equipos auto- organizados. 12. A intervalos regulares el equipo reflexiona sobre cómo ser más efectivo para a continuación ajustar y perfeccionar su comportamiento en consecuencia. Los principios y valores establecidos en el manifiesto fundamentan las bases de los métodos ágiles más utilizados actualmente. Entre ellos se encuentra el método seleccionado para este desarrollo: AgilUs, que resulta de una investigación realizada por la profesora de la escuela de Computación de la Facultad de Ciencias de la Universidad Central de Venezuela Alecia Acosta, cuyo estudio fue realizado durante el Seminario que antecede a este Trabajo Especial de Grado. A continuación se define el método, así como cada una de las fases que lo componen. 2.7.2 Método AgilUs AgilUs es un método de desarrollo ágil iterativo e incremental, resultado de una de investigación desarrollada por la profesora Eleonora Acosta del Centro de Ingeniería de Software y Sistemas (ISYS) de la escuela de Computación, en la Universidad Central de Venezuela. Se basa en el concepto de usabilidad, resaltando la importancia de desarrollar software usable, además plantea un análisis centrado tanto en el usuario y con la participación de especialistas, que contribuyan con la 41 evolución del software. Su principal valor establece que la construcción de las interfaces de usuario no debe ser un agregado estético que se da al final del proyecto sino más bien aquello que guie el proceso de desarrollo y la toma de decisiones. A su vez, centra el desarrollo de software en los siguientes principios (Acosta, 2011):  Integra la Interacción Humano-Computador (IHC) y la Ingeniería de Software (IS), debido a que son complementarias no excluyentes entre sí. Un diseño centrado en el usuario impacta positivamente la calidad del software.  La usabilidad determina la utilidad. La usabilidad no es una propiedad abstracta. Un software solo será considerado usable en un contexto específico y por un tipo de usuario específico. El objetivo es lograr que todos los usuarios del software encuentren usables las tareas que pueden realizar. Este método se estructura en un total de cuatro fases, durante las cuales es posible realizar iteraciones sobre los artefactos y donde la participación del usuario es clave en el éxito de las mismas. Para mayor flexibilidad, este método permite que dependiendo del contexto asociado al problema que se esté resolviendo, la aplicación de algunos artefactos sea innecesaria. Las fases propuestas para el método son (Acosta, 2011): 1) Requisitos: Se realiza un análisis global del problema a solucionar, se estudian productos similares existentes, se genera un perfil de usuario, y se define la lista de requerimientos a desarrollar. Esta etapa es importante en el desarrollo del software, ya que un mal análisis de requisitos traería como consecuencia un software que no cumple con las necesidades del usuario. 2) Análisis: Se lleva a cabo el análisis de la solución a desarrollar, se emplean diagramas de casos de uso y modelado de objetos del dominio, siguiendo la notación UML, para definir las funcionalidades que tendrá el producto a desarrollar. 3) Prototipaje: Se implementa un prototipo rápido de interfaz de usuario a partir de los patrones de interacción, el cual va evolucionando hasta convertirse en el producto final, se genera la guía de estilo, y se realizan las evaluaciones de usabilidad apropiadas a esta etapa: evaluaciones heurísticas y las listas de comprobación. 4) Entrega: Se aplican las pruebas al sistema para certificar que la aplicación desarrollada sea un software usable y sin errores, finalmente se pone en producción la aplicación. 42 En la Figura 2.8 se puede observar el ciclo de vida del método a través de sus fases y los artefactos asociados a ellas. Figura 2.8 Ciclo de vida del método AgilUs Tomada de: http://www.ciens.ucv.ve/portalasig/interacci%C3%B3n_humano_computador/1- 2014/descarga/descargar_archivo/601 Las llamadas “buenas prácticas” son aquellos hábitos que bien aplicados durante el proceso de desarrollo simplifican no solo gran parte de trabajo a realizar, sino que incrementan la considerablemente la calidad de los resultados obtenidos. Para este método se propone aplicar (Acosta, 2011):  Diseño centrado en el usuario (DCU). Es un enfoque de diseño y desarrollo que se centra en los deseos, limitaciones y necesidades de los usuarios finales de un software. En las técnicas de DCU es relevante que los desarrolladores realicen pruebas constantes que permitan verificar el curso que lleva el desarrollo del sistema y su interfaz de usuario. El objetivo final es que el usuario guie de manera indirecta pero influyente el proceso de desarrollo, permitiendo la construcción de un sistema que se adapte al usuario y no el caso contrario.  Diseño basado en prototipos. El desarrollo de software en AgilUs está guiado por la construcción de prototipos de alta fidelidad y la evaluación de los mismos por usuarios y especialistas en usabilidad, a fin de identificar fallas y aspectos a mejorar para las siguientes versiones hasta obtener el producto final. 43  Desarrollo ágil, iterativo e incremental. Una de las máximas del desarrollo iterativo e incremental así como del Manifiesto Ágil es la simplicidad. Se recomienda entonces desarrollar el sistema más simple que satisfaga las necesidades actuales de los usuarios, pero preparado para cambios futuros. El desarrollo por incrementos permite proveer resultados sin la necesidad de establecer todos los requisitos de una vez al inicio del desarrollo. La iteratividad permite por su parte, regresar a etapas anteriores una vez que se reciba la retroalimentación respectiva a las evaluaciones realizadas.  Usabilidad como atributo de calidad. Como se indica en la ISO/IEC 9126-1, la usabilidad es considerada un atributo de calidad interna y externa del software, por lo que AgilUs hace énfasis en la producción de software usable, siguiendo la recomendación de este estándar internacional.  Interacción continúa con el usuario, propiciando un intercambio cara a cara. Naturalmente para este método la presencia constante y participativa del usuario es fundamental. El equipo de desarrollo solo debería tomar decisiones una vez se han realizado las pruebas de usabilidad, atributo que solo puede ser medido por el usuario. 2.7.3 Gestión de Procesos de Negocio La Gestión de Procesos de Negocio, también llamada BPM por sus siglas en inglés (Business Process Management) es una filosofía de gestión organizacional, es una forma estratégica y corporativa de gestionar una organización de manera holística, como un todo (Mejía, 2009). Es un enfoque centrado en los procesos para mejorar el rendimiento que combina las tecnologías de la información con metodologías de proceso y gobierno. BPM es una colaboración entre personas de negocio y tecnólogos para fomentar procesos de negocio efectivos, ágiles y transparentes (Kiran Garimella, 2008). BPM es una tendencia ya consolidada que está cambiando la forma de gestionar las operaciones de las empresas y de cualquier organización, permitiendo mayor flexibilidad, automatización y potencia. Ya que la DCE es una organización que gestiona sus procesos sin una estructura definida, se hace esencial la implementación de BPM como estrategia para mejorar el rendimiento organizacional. 44 2.7.3.1 Notación y Modelo de Procesos de Negocio También llamada BPMN, por sus siglas en ingles (Business Process Model & Notation) es el estándar para modelar flujos del proceso del negocio, desarrollado por la OMG. La OMG (Object Management Group) es un consorcio formado en 1989 dedicado al cuidado y establecimiento de diversos estándares de tecnologías. Ha guiado la estandarización de BPM durante años. En particular ha adoptado la especificación de BPMN, el cual actúa como un lenguaje en común, permitiendo a una organización interoperar con todos sus usuarios internos y externos. BPMN provee una notación gráfica para especificar los Procesos del Negocio en un diagrama de Procesos del Negocio. Su objetivo es dar soporte a BPM al proporcionar una notación estándar que sea comprensible para los usuarios del negocio y que posea la semántica para representar procesos complejos para los usuarios técnicos (Jog Raj, 2003). Un Modeloestándar de Procesos del Negocio y su Notación proporcionarán a las empresas la capacidad de entender sus procedimientos internos de negocios con una notación gráfica y dará a las organizaciones la habilidad de comunicar estos procesos de una manera estándar. Además, la notación gráfica facilitará el entendimiento del rendimiento de las colaboraciones y las transacciones comerciales entre las organizaciones. Esto asegurará que las empresas se entiendan a sí mismas y a los participantes en sus negocios y permitirá que se adapten rápidamente a nuevas circunstancias de negocio (Group). Para modelar un flujo del Proceso del Negocio, se modelan solo los acontecimientos que ocurren para comenzar un proceso, los procesos que son realizados, y los resultados finales del flujo. Siendo la meta de BPMN el proporcionar una notación que sea fácilmente comprensible por todos los usuarios del negocio, incluyendo tanto a los analistas que crean los bosquejos iniciales de los procesos como a los desarrolladores técnicos responsables de poner en ejecución la tecnología que realizará esos procesos, se hace viable su uso en el modelado de los procesos que involucran la Gestión Académica de la Facultad de Ciencias ya explicados en el capítulo 1. Para complementar las fases de Análisis y Diseño del método (AgilUs) se usará BPMN ya que permite el modelado de procesos de forma sencilla y fácil de entender por los usuarios no técnicos, al mismo tiempo que ofrece expresividad al flujo de procesos complejos, entendiendo por expresividad como la capacidad para representar todo tipo de procesos, manteniendo la facilidad de comprensión lo cual 45 resulta ideal para diagramar la Gestión Académica debido a la cantidad de procesos y usuarios que se involucran en la misma y que están explicados en la problemática (Capítulo 1, Planteamiento del Problema).  Simbología de la notación BPMN Objetos de flujo: son utilizados para definir los procesos son los que expresan la semántica de un modelo de proceso. Eventos, es algo que sucede durante el proceso de negocio, y que afecta el flujo del proceso. Suelen tener una causa (trigger) o un resultado, y se representan con un círculo. De acuerdo con el momento en que afectan al flujo, se dividen en tres tipos: - Inicio: Con el que se da inicio un proceso. - Intermedio: Forman parte directa del flujo del proceso en la secuencia normal del mismo. Pueden o no anteceder a una actividad o subproceso. - Fin: Finaliza un proceso. Compuertas: Se representa con un diamante. Son puntos de decisión empleados para canalizar y controlar la divergencia o convergencia de la secuencia de flujo. Éstas determinan ramificaciones, bifurcaciones, combinaciones y fusiones del proceso. - Exclusiva: Solo una ruta se ejecuta. - Inclusiva: Al menos una ruta se ejecuta y puede ejecutarse más de una. - Paralela: Indica un punto del proceso donde se llevan a cabo actividades en forma concurrente (paralelo) y sincroniza sus caminos. Todas las rutas deben completarse para que el proceso continúe. - Basada en eventos: iniciará una carrera entre los diferentes eventos que en el proceso se pudiera recibir; el primero en ser recibido ganará la carrera y determinará el flujo de la secuencia de salida que debe ser utilizado. Aquí los flujos se dirigen según si se ha recibido un mensaje, se ha cumplido una condición o ha pasado cierto tiempo. Actividad: Es una unidad de trabajo a realizar. Se representa con un rectángulo redondeado. Se divide en: 46 - Tarea: Una tarea es una actividad atómica que está incluida dentro de un proceso. Se habla de tarea cuando el trabajo que representa en el proceso no puede desglosarse en un nivel mayor de detalle. - Sub-proceso: es un conjunto de actividades incluidas dentro de un proceso. Puede desglosarse en diferentes niveles de detalle denominadas tareas. Se representa con un símbolo de suma en la parte central inferior de la figura. Objetos de conexión: describen como interactúan los objetos de flujo. - Flujo de secuencia: Muestra el orden de los eventos, actividades y decisiones que se realizan dentro del proceso. - Flujo de datos o de mensajes: Indica el flujo de mensaje entre las distintas entidades de los procesos. - Asociación: Asociar diferentes artefactos con objetos de flujo. - Por defecto. Canales: Son un mecanismo empleado para organizar actividades en categorías separadas visualmente, con el fin de ilustrar diferentes capacidades funcionales o responsabilidades. - Pool (Participantes): Representa los actores externos con los cuales interactúa un proceso, estos actores pueden ser un proceso o aplicativo. - Lane (carril): Representa un participante dentro un proceso, el cual contiene un conjunto de actividades asociadas a este rol. Artefactos: Son objetos gráficos que proveen información adicional de los elementos dentro de un proceso, sin afectar el flujo del proceso. - Objetos de datos: son artefactos que pueden representar muchos tipos de objetos distintos, tanto electrónicos como físicos. Permiten mostrar los datos que una actividad necesita, es decir, representan los documentos, datos y otros objetos que son usados o actualizados durante el proceso. Los objetos de datos no afectan directamente los flujos de secuencia o los flujos de mensajes del proceso. - Grupos: Se utiliza para agrupar un conjunto de actividades, ya sea para efectos de documentación o análisis. 47 - Anotaciones: Son un mecanismos para que el modelador pueda dar información textual adicional. En la Figura 2.9 Elementos Básicos de BPMN, se puede apreciar la simbología de BPMN. Figura 2.9 Elementos Básicos de BPMN Traducida de: http://es.slideshare.net/mayer2380/introduccin-a-bpmn?related=2 48 Capítulo 3. Marco Aplicativo A lo largo de este capítulo se documenta el proceso de desarrollo e integración del módulo propuesto como solución para la administración y control de los procesos asociados a la Gestión Académica en el sistema CONEST 3.0. Cabe destacar que, para no poner en riesgo la estabilidad del sistema CONEST 3.0, este desarrollo se realiza en un ambiente de pruebas, donde se cuenta con una copia de la base de datos que ha sido generada especialmente para dicho propósito. La integración del módulo desarrollado al ambiente de producción se lleva a cabo una vez se hayan completado y probado el total de funcionalidades del gestor. Del mismo modo, el grupo de desarrollo trabaja siguiendo las convenciones establecidas para la codificación del sistema CONEST 3.0, que pueden ser resumidas de la siguiente forma:  Se debe evitar el uso de acentos o caracteres especiales en los nombres de variables, funciones, tablas, atributos o archivos. Del mismo modo, estos deben estar en español y ser lo suficientemente descriptivos como para que el objetivo o comportamiento de dichos elementos sea fácil de entender.  A fin de facilitar el mantenimiento de la aplicación, se deben respetar los estándares y convenciones de Ruby on Rails, tanto en aspectos de programación como en ubicación de los archivos fuente.  Utilizar comentarios en forma razonable, a fin de complementar la documentación del código.  Utilizar Git como principal herramienta para el control de versiones, de modo que el código desarrollado se pueda integrar apropiadamente al ya existente. Siguiendo el esquema de trabajo del método AgilUs, el desarrollo de este TEG ha sido dividido en iteraciones, durante las cuales se implementa en forma incremental el total de funcionalidades necesarias para el módulo gestor. De igual manera, las fases del método no se aplican de forma exhaustiva en cada iteración sino que se emplean según el equipo de desarrollo lo considere necesario, dependiendo de los objetivos planteados para dicha iteración y los resultados obtenidos de las anteriores. 49 3.1 Primera Iteración. Esquema general de la solución y desarrollo del Calendario Académico Para la primera iteración de este proceso de desarrollo se tienen como objetivos:  Obtener, a través de la fase de requisitos un esquema general de los requerimientos principales que se deben implementar para el módulo gestor de procesos del sistema CONEST.  Lograr, a través de la fase de análisis, plantear en términos de ingeniería del software el conjunto de requerimientos obtenidos en la fase de requisitos como funcionalidades específicas que se deben implementar para el módulo gestor.  Implementar un calendario que sirva no solo como una mejora para el calendario de eventos ya existente en el sistema, sino que también brinde apoyo en la planificación y control de las actividades de los procesos de la Gestión Académica. 3.1.1 Fase de Requisitos Teniendo en cuenta que el desarrollo de este TEG está centrado en la implementación e integración de un módulo para un sistema ya existente, la fase de requisitos comprende los siguientes artefactos: 3.1.1.1 Tormenta de Ideas De las primeras reuniones realizadas con los usuarios se recabaron un conjunto de ideas con respecto a lo que necesitaban y querían que el sistema tuviera. Al sintetizar las nociones discutidas surgió una tormenta de ideas, representada en el mapa mental que se puede apreciar en la figura 3.1. 50 Figura 3.1 Tormenta de ideas 3.1.1.2 Requerimientos funcionales y no funcionales Luego de analizar los resultados obtenidos de la tormenta de ideas, se plantearon para el módulo gestor de procesos los siguientes requerimientos: Requerimientos funcionales 1. Ejecutar las actividades de los procesos de la Gestión Académica. 2. Configurar los parámetros relacionados a las actividades de los procesos de la Gestión Académica. 3. Visualizar el progreso e información relacionada a las actividades de los procesos de la Gestión Académica. 4. Observar el progreso e información relacionada a los procesos de la Gestión Académica. 5. Consultar un calendario digital donde figuren los eventos relacionados a los procesos de la Gestión Académica. 51 6. Agregar, modificar o eliminar eventos importantes para la DCE en el calendario digital. 7. Finalizar automáticamente las actividades una vez transcurrida la fecha límite establecida por el personal administrativo. 8. Permitir que una actividad finalizada pueda ser reabierta en caso de existir prórrogas. Requerimientos no funcionales Hardware 1. El sistema se debe implementar sobre la infraestructura existente en las oficinas de la DCE de la Facultad de Ciencias, UCV. Software 1. Utilizar el sistema manejador de bases de datos MySQL. 2. Realizar la implementación del lado del servidor en el framework Rails que utiliza el lenguaje Ruby. 3. Recurrir a las tecnologías HTML, CSS y Javascript para el desarrollo del lado del cliente. Usabilidad 1. Identificar cada proceso con un color diferente. 2. Identificar el estado de las actividades con un color asociado al progreso de las mismas, ejemplo: verde para las actividades finalizadas, rojo para las actividades pendientes, amarilla para las que se están ejecutando. Seguridad 1. Implementar validaciones de sesión para evitar que usuarios no autorizados, que no posean el rol administrativo, puedan utilizar el gestor del sistema. 2. Realizar validaciones de estructura sobre los datos ingresados a través del gestor de procesos, asegurando que coincidan con el modelo establecido en la Base de Datos. 52 Rendimiento 1. Ofrecer tiempos de respuesta no mayores a 5 segundos por las acciones que se realicen dentro del módulo gestor. 3.1.1.3 Perfil de usuario El personal administrativo está conformado por los usuarios del sistema CONEST con la mayor cantidad de privilegios sobre los parámetros e información que maneja la aplicación. Si bien este rol se le otorga principalmente a un grupo de empleados de la DCE, este no se restringe únicamente a dicho departamento, debido a que los docentes de la escuela de Computación que han participado en el desarrollo de este sistema también gozan de dicho privilegio. En general, el perfil que debe cumplir un usuario considerado como personal administrativo se resume en la Tabla 3.1 Perfil de usuario. Perfil de usuario: Personal administrativo Edad Comprendida entre los 20 y los 56 Sexo Ambos sexos, pero en su mayoría personas de sexo femenino. Conocimientos tecnológicos Manejo avanzado de las aplicaciones web y del sistema CONEST. Extenso conocimiento de los procesos que componen la Gestión Académica y sus actividades asociadas. Nivel de Instrucción Educación Universitaria, Técnico Superior Universitario (T.S.U) o Educación Media. Poseen dominio del flujo de los procesos académicos de la Facultad de Ciencias así como de los reglamentos y lineamientos que la rigen. Tabla 3.1 Perfil de usuario No hacen falta grandes conocimientos tecnológicos, sin embargo se necesita un conocimiento base de la Gestión Académica, el cual es usualmente impartido por otros del personal con más experiencia. 3.1.1.4 Análisis de sistemas existentes Debido a que el contexto en el cual se desea aplicar la solución es bastante específico, no existe un sistema particular que pueda servir como orientación en el desarrollo, sin embargo, es posible tomar las características que se esperan obtener en el mismo como un subconjunto de aplicaciones, de las cuáles es posible encontrar sistemas que pueden ser estudiados y utilizados de modelo para el desarrollo de cada uno de los componentes de esta solución. 53 Google Calendar https://www.google.com/calendar/ Tópico a evaluar Calendario de eventos Funcionalidades El calendario permite visualizar, crear, editar y eliminar eventos del usuario que lo utilice. Personalización El calendario posee pre cargados los eventos relacionados a la ubicación (ciudad/país) del usuario. Del mismo modo se configuran automáticamente los cumpleaños de la lista de amigos y eventos a los que el usuario fue invitado. Adicionalmente, es posible resaltar las tareas o eventos del calendario con el color de preferencia del usuario. Cuenta también con una gran cantidad de complementos que el usuario puede activar o desactivar a gusto para obtener tanto funcionalidades como aspectos de apariencia adicionales. Aspectos de sociabilidad Es posible crear eventos compartidos con otros usuarios, utilizando para ello un sistema de invitaciones. Apariencia La interfaz de esta aplicación consiste en un calendario, que puede filtrarse por día, semana, mes. Aspectos de accesibilidad Permite elegir entre una gran variedad de idiomas. Permite el uso de ciertos atajos de teclado, para acceder a las funcionalidades. Sin embargo, no cuenta con configuración de tamaño de letra, contraste de colores, entre otros que pueden expandir su uso a usuarios con diversas limitaciones físicas. Soporte en línea Cuenta con una sección de ayuda al usuario, donde se abarcan los tópicos relacionados a las funciones esenciales de la aplicación. Idiomas Se encuentra disponible en una gran cantidad de idiomas, entre los cuales se encuentran los más comunes, como lo son inglés y español. Opinión como usuario Esta aplicación es bastante completa en cuanto a lo que planificación de eventos o tareas se refiere, además posee la ventaja de estar asociada a la cuenta de Google del usuario, por lo que sus usuarios frecuentes pueden acceder a ella sin mayores complicaciones. Sincroniza automáticamente eventos como cumpleaños https://www.google.com/calendar/ 54 de amigos o días feriados y es posible conectarlo directamente a un dispositivo móvil mediante la aplicación que se ofrece para las diversas plataformas. Tabla 3.2 Análisis del sistema: Google Calendar Asana https://asana.com/ Tópico a evaluar Lista de tareas Funcionalidades Permite crear, modificar o eliminar tareas a diversos proyectos, ya sean de carácter personal o laboral. La aplicación es capaz de notificar a los usuarios mediante correos electrónicos el estado de las tareas pendientes, ya sea que se haya especificado la fecha límite para cumplirlas o no. Personalización Permite cambiar la apariencia de la aplicación, mediante un conjunto de temas, aunque los mismos son limitados y no modifican mayormente la apariencia con respecto a la establecida por defecto. Aspectos de sociabilidad Las tareas creadas con la aplicación pueden ser compartidas con un equipo de trabajo, relacionado a un proyecto. Las actividades compartidas entre usuarios pueden ser creadas por ellos mismos o serle asignadas por otro miembro del equipo, con posibilidad de especificar la fecha límite en la cual deben ser llevadas a cabo. Apariencia La aplicación presenta una interfaz minimalista, enfocada a la gestión de tareas, dividiéndolas por proyecto. Un proyecto puede ser personal o laboral, permitiendo en ambos casos añadir participantes. Aspectos de accesibilidad No posee aspectos relevantes que aumenten la accesibilidad de la aplicación. Soporte en línea El equipo de desarrollo cuenta con un blog en el cual se atienden las dudas frecuentes de los usuarios, y también se reciben sugerencias. Idiomas Solo se encuentra disponible en inglés. https://asana.com/ 55 Opinión como usuario Esta aplicación web posee los elementos básicos para llevar el control de las tareas que se deben realizar, cumple su función de manera eficiente y además cuenta con una versión para dispositivos móviles que permite a sus usuarios estar al día con la planificación de sus actividades. También resulta muy útil cuando de organizar un equipo de trabajo se trata, por lo que se puede ser aprovechada no solo en el ámbito personal, sino también laboral. Tabla 3.3 Análisis del sistema: Asana 3.1.2 Fase de Análisis De la fase de análisis de esta primera iteración se obtuvo como resultado el dominio de la aplicación y se esbozó el aspecto visual de la solución, además de especificar las funcionalidades que el módulo gestor realizará de manera general. También se aplicaron los artefactos necesarios para modelar las funcionalidades del componente calendario del gestor. A continuación se presentan los artefactos realizados. 3.1.2.1 Modelo de Casos de Usos El Modelo de Casos de Uso define las interacciones entre el usuario y el sistema y los posibles escenarios que se pueden ejecutar a través de secuencias de acciones que describen el comportamiento del sistema. Con este modelo se llega a un lenguaje estándar que es entendido tanto por los expertos como por los usuarios y que permite el análisis del dominio de la aplicación. En la Figura 3.2 Casos de Uso del gestor CONEST, que sigue a continuación, se especifican de acuerdo a la notación UML el conjunto de casos de uso que engloban las funcionalidades planteadas para el módulo gestor. 56 Figura 3.2 Casos de Uso del gestor CONEST A continuación se describen en detalle los casos de uso planteados. 1. Nombre: Gestionar Procesos. Actor: Personal administrativo de la División de Control de Estudios (DCE) Precondición: Se requiere iniciar sesión en el módulo administrador del sistema CONEST 3.0. Acción: Permite configurar fechas y llevar control de las actividades relacionadas a los procesos de la Gestión Académica. Pos condición: Se planifican las actividades asociadas a los procesos de la Gestión Académica. Tabla 3.4 Descripción CU: Gestionar Procesos 2. Nombre: Abrir Procesos. Actor: Personal administrativo de la División de Control de Estudios (DCE) Precondición: Se requiere iniciar sesión en el módulo administrador del sistema CONEST 3.0. Acción: Permite iniciar la ejecución de las tareas principales de los procesos de la Gestión Académica, dando pie a la ejecución que se planificó para cada uno de estos. 57 Pos condición: Un proceso determinado de la Gestión Académica es iniciado. Tabla 3.5 Descripción CU: Abrir Procesos 3. Nombre: Cerrar Procesos. Actor: Personal administrativo de la División de Control de Estudios (DCE) Precondición: Se requiere iniciar sesión en el módulo administrador del sistema CONEST 3.0. Acción: Permite finalizar, tomando en cuenta las fechas planificadas, la ejecución dentro del sistema del conjunto de actividades asociadas a determinado proceso de la Gestión Académica. Pos condición: Un proceso determinado de la Gestión Académica se da por finalizado. Tabla 3.6 Descripción CU: Cerrar Procesos 4. Nombre: Configurar Parámetros. Actor: Personal administrativo de la División de Control de Estudios (DCE) Precondición: Se requiere iniciar sesión en el módulo administrador del sistema CONEST 3.0. Acción: Permite manipular parámetros importantes para el sistema CONEST, incluyendo la identificación de los usuarios que ocupan cargos de autoridad en la facultad. Pos condición: Los parámetros generales del sistema son actualizados. Tabla 3.7 Descripción CU: Configurar Parámetros 5. Nombre: Gestionar Calendario. Actor: Personal administrativo de la División de Control de Estudios (DCE) Precondición: Se requiere iniciar sesión en el módulo administrador del sistema CONEST 3.0. Acción: Permite crear, planificar, difundir y eliminar dependiendo del caso, las actividades relacionas al calendario académico de la Facultad de Ciencias. Pos condición: Se ejecutan acciones sobre los eventos planificados durante un período académico. Tabla 3.8 Descripción CU: Gestionar Calendario 58 3.1.2.2 Guía de Estilos La guía de estilos propuesta, contiene la combinación de colores que será utilizada en el gestor para notificaciones, alertas, indicadores y otros elementos de interfaz. La combinación fue seleccionada correspondiendo a las funcionalidades, de manera que la asociación color-funcionalidad sea intuitiva. Además, para su selección se tomó en cuenta la característica Web Safe, es decir que independientemente del monitor que se utilice para visualizar la aplicación, los colores siempre lucen el mismo tono. Colores a utilizar en los elementos de interfaz HTML: #0066CC HTML: #009999 HTML: #FF9933 HTML: #FFFFCC RGB: 0 102 204 RGB: 0 153 153 RGB: 255 153 51 RGB: 255 255 204 Colores a utilizar para alertas/indicadores HTML: #FF3333 HTML: #66CC66 HTML: #99CCFF HTML: #FFFF00 RGB: 255 51 51 RGB: 102 204 102 RGB: 153 204 255 RGB: 255 255 0 3.1.2.3 Modelo del negocio Con el objetivo de comprender en profundidad el flujo de los procesos de la Gestión Académica y la relación entre los mismos, se realizó el siguiente diagrama (Figura 3.3) utilizando la notación BPMN. 59 Figura 3.3 Modelo del negocio del ciclo Período Académico 3.1.2.4 Modelo de datos Para el desarrollo del módulo gestor del sistema CONEST, es necesario modelar objetos nuevos. Mediante los mismos será posible llevar el control de las actividades asociadas a los procesos de la Gestión Académica, así como las fechas en las cuáles deben ser realizadas. Luego de un análisis llevado a cabo por el equipo de desarrollo de este TEG, se determinó que los modelos de datos a proponer debían integrarse con los existentes en el sistema, aunque algunos de ellos nos serán utilizados sino hasta las siguientes iteraciones. En la figura 3.4 que sigue a continuación, se puede observar la primera versión del diagrama que contiene los modelos de objetos planteados, tanto para el gestor, como para la nueva versión del calendario. Los modelos calendario y dia_feriado ya existen como tablas en la base de datos actual del sistema, pero se incluyen porque el calendario trabaja con ellos y posteriormente será necesario realizarles algunas modificaciones. 60 Figura 3.4 Modelo de datos del gestor (v-1) 3.1.2.5 Arquitectura de la Solución Una vez estudiados los conceptos de la arquitectura cliente-servidor y las tecnologías asociadas al lado del cliente y del servidor, se puede visualizar en la Figura 3.5 Arquitectura cliente-servidor con las tecnologías involucradas como se involucran las tecnologías en la arquitectura del sistema, complementándose para constituir la base para alcanzar la solución al problema planteado en el capítulo 1. Figura 3.5 Arquitectura cliente-servidor con las tecnologías involucradas 61 3.1.3 Fase de Prototipaje Para la fase de prototipaje de esta primera iteración, se diseñan las interfaces correspondientes a la vista principal del módulo gestor, así como las que se consideren necesarias para el manejo de eventos en el calendario académico. 3.1.3.1 Prototipos de baja fidelidad Los prototipos de baja fidelidad representan una primera visión de las interfaces de usuario que se utilizan para acceder a las diversas funcionalidades de una aplicación. En el método AgilUs se les refiere como prototipos en papel, pero pueden ser realizados con cualquier herramienta que los desarrolladores deseen. Para la vista principal del módulo gestor, el equipo de desarrollo diseñó una interfaz en donde se ubican elementos asociados a la información más relevante de los procesos, a través de los cuales se puede acceder a otras funcionalidades que tendrá el gestor. En la Figura 3.6 se puede observar el prototipo descrito para dicha vista. Figura 3.6 Prototipo: Vista principal del gestor (v-1) Para el diseño de las interfaces correspondientes al calendario académico, es necesario conocer la versión actual del mismo que se encuentra en el sistema CONEST. En la Figura 3.7 se muestra el calendario de eventos al cual los administradores pueden acceder desde la pestaña Social. 62 Figura 3.7 Interfaz calendario producción El objetivo principal del calendario actual es que el personal administrativo agregue en él los eventos que son de interés para la comunidad estudiantil y docente de la facultad. Como puede verse en la figura, se trata de un calendario sencillo, donde los eventos pueden consultarse al posicionar el ratón sobre los días del mismo. Es posible agregar eventos a través de un formulario que se encuentra en la parte derecha de la vista. Cabe destacar que una vez que un evento es creado, este no puede ser modificado ni eliminado, al menos desde la aplicación, lo que hace que este componente del sistema sea muy poco flexible. En la nueva versión del calendario, se pretende ofrecer mayor flexibilidad en el manejo de los eventos, es por ello que se plantean las interfaces que se detallan a continuación. Tomando como punto de partida el calendario de la Figura 3.6, se tiene que cada día del mes corresponde a un botón donde el personal administrativo puede consultar cómodamente la lista de eventos para una determinada fecha. En la Figura 3.8 se puede observar el prototipo correspondiente a la interfaz que el sistema desplegará en una ventana modal, al pulsar con el ratón sobre alguno de los días del calendario. 63 Figura 3.8 Prototipo: Eventos para una fecha (v-1) Si el personal administrativo desea crear un evento, el sistema desplegará a través de otra modal un formulario similar al que existe del lado derecho del calendario actual. Esta interfaz se puede observar en el prototipo de la Figura 3.9. Figura 3.9 Prototipo: Crear nuevo evento (v-1) Si el personal administrativo decide seleccionar la opción de edición sobre algún evento, podrá modificar la información básica del mismo y contar con la opción de cambiarle la fecha, añadiendo flexibilidad en la planificación de actividades ante 64 cualquier eventualidad. En la Figura 3.10 se muestra el prototipo correspondiente a esta funcionalidad. Figura 3.10 Prototipo: Editar evento (v-1) Una vez se diseñaron las interfaces necesarias para llevar a cabo la implementación de los requerimientos planteados para esta primera iteración, se procede a realizar su desarrollo a nivel de código fuente en el sistema CONEST 3.0. 3.1.3.2 Implementación de requerimientos Debido a que en esta iteración se va a reemplazar un componente del sistema, se decide implementar la vista principal del gestor en el mismo sitio donde se ubica el calendario académico que actualmente se encuentra en producción. Por lo tanto, se reemplazará la pestaña Social con una nueva llamada Gestión. Para la implementación de la nueva versión del calendario académico se utilizó una gema del lenguaje Ruby llamada simple_calendar en su versión 1.1.3, la misma facilitó la implementación dentro de la vista principal del gestor, de un calendario que se actualiza mediante la técnica AJAX. El resultado final obtenido se puede observar en la Figura 3.11 que se muestra a continuación. 65 Figura 3.11 Vista principal del módulo gestor (v-1) Como puede observarse, en el calendario, el día actual se marca con un recuadro de color naranja, el mismo utilizado para colorear el número de día en las fechas donde existe algún evento planificado. El siguiente paso en la implementación es integrar al nuevo calendario las funcionalidades correspondientes al manejo de eventos, por ello se procedió implementar las interfaces diseñadas para este propósito, resultando en el siguiente conjunto de vistas. Figura 3.12 Vista eventos para una fecha (v-1) 66 En la Figura 3.12, plasmada anteriormente, se observa la implementación de la vista correspondiente al prototipo de la Figura 3.8, en la cual se tiene por cada día una tabla con los eventos correspondientes para dicha fecha y la opción de poder editarlos o eliminarlos del calendario. A continuación, en la Figura 3.13, se muestra la implementación de la vista correspondiente al prototipo de la Figura 3.9, en la cual se realizó por cuestiones de usabilidad un ligero cambio, el cual consiste en agregar un título en la parte superior que le recuerde al usuario en qué fecha está creando un nuevo evento, a fin de minimizar errores. Una vez que la información correspondiente al evento ha sido completa, el botón Guardar se encargará de crear dicho evento dentro del sistema. Figura 3.13 Vista crear evento (v-1) En la Figura 3.14 se muestra la implementación de la vista correspondiente al prototipo de la Figura 3.10. En esta se puede modificar la información del evento correspondiente así como su fecha, flexibilizando la planificación del mismo. Se puede apreciar a continuación. 67 Figura 3.14 Vista editar evento (v-1) 3.1.4 Cierre de la iteración Una vez terminada la iteración, se determinó, en una reunión, que las funcionalidades del calendario podrían expandirse aún más, permitiendo, por ejemplo, al personal de la DCE compartir a través de las redes sociales los eventos mediante la misma aplicación, también se sugiere revisar las circunstancias en las cuales un evento puede ser eliminado, a fin de evitar errores en la gestión de actividades relacionadas a los procesos académicos cuando estos sean implementados, de igual forma se requiere una interfaz para poder actualizar las fechas de los días feriados y colocar alguno nuevo o eliminarlo del calendario. 3.2 Segunda Iteración: Proceso de Inscripción y su integración al gestor del sistema. Para esta segunda iteración del proceso de desarrollo se plantean como objetivos:  Aplicar la fase de análisis al Proceso de Inscripción, para determinar las funciones que el módulo gestor deberá manejar.  Implementar en el módulo gestor las funcionalidades del Proceso Inscripción.  Realizar la integración del calendario a las redes sociales.  Extender las funcionalidades del gestor en la configuración del calendario. 68 3.2.1 Fase de Análisis En esta fase se analizan los requisitos relacionados al proceso de Inscripción de la Gestión Académica, teniendo en cuenta las actividades descritas en el planteamiento del problema como el conjunto de funcionalidades que el módulo en desarrollo debe gestionar de este proceso. 3.2.1.1 Modelo de Casos de Usos Se plantearon los siguientes casos de uso: Figura 3.15 Casos de Uso Proceso de Inscripción – Iteración 1 1. Nombre: Configurar Inscripción nuevos. Actor: Personal administrativo de la División de Control de Estudios (DCE). Precondición: Se requiere iniciar sesión en el módulo administrador del sistema CONEST 3.0. Acción: Permite configurar la apertura de la inscripción de nuevos ingresos en un período académico. 69 Pos condición: La inscripción para nuevos ingresos queda habilitada para el periodo seleccionado. Tabla 3.9 Descripción CU: Configurar Inscripción nuevos 2. Nombre: Configurar Preinscripción. Actor: Personal administrativo de la División de Control de Estudios (DCE). Precondición: Se requiere iniciar sesión en el módulo administrador del sistema CONEST 3.0. Acción: Permite configurar la apertura de la preinscripción de un periodo académico y permite mostrar los resultados de la misma a los estudiantes. Pos condición: La preinscripción queda habilitada para el periodo seleccionado y/o se muestran sus resultados a los estudiantes. Tabla 3.10 Descripción CU: Configurar Preinscripción 3. Nombre: Ejecutar Algoritmo de Selección. Actor: Personal administrativo de la División de Control de Estudios (DCE). Precondición: Se requiere iniciar sesión en el módulo administrador del sistema CONEST 3.0 y haber realizado el caso de uso 2, Configurar Preinscripción. Acción: Realizar la asignación o rechazo de aquellos estudiantes que realizaron la preinscripción, todo acorde a reglas y criterios académicos ya establecidas que permiten el manejo de las asignaciones. Pos condición: Se obtiene una lista de estudiantes asignados, la cual servirá de insumo a la Inscripción en aquellas asignaturas que requieren previa preinscripción para optar por cursarlas. Tabla 3.11 Descripción CU: Ejecutar Algoritmo de Selección 4. Nombre: Configurar Inscripción. Actor: Personal administrativo de la División de Control de Estudios (DCE). Precondición: Se requiere iniciar sesión en el módulo administrador del sistema CONEST 3.0. Acción: Permite configurar la apertura de la inscripción en un periodo académico. Pos condición: La inscripción queda habilitada para el periodo seleccionado. Tabla 3.12 Descripción CU: Configurar Inscripción 70 5. Nombre: Ejecutar Asignación de Aulas. Actor: Personal administrativo de la División de Control de Estudios (DCE). Precondición: Se requiere iniciar sesión en el módulo administrador del sistema CONEST 3.0 y haber realizado el caso de uso 4, Configurar Inscripción. Acción: Asignación automática de las aulas por sección mientras la asignatura tenga como requisito en la programación que requiere un espacio en el edificio de aulas. Pos condición: Se obtiene el mapa de Aulas con las mismas ya asignadas por asignatura, y con su horario respectivo. Tabla 3.13 Descripción CU: Ejecutar Asignación de Aulas 6. Nombre: Modificar Inscripción. Actor: Personal administrativo de la División de Control de Estudios (DCE). Precondición: Se requiere iniciar sesión en el módulo administrador del sistema CONEST 3.0 y haber realizado el caso de uso 4, Configurar Inscripción. Acción: Habilitar y deshabilitar la modificación de inscripción y los retiros de las asignaturas y de los laboratorios y visualizar las solicitudes realizadas por los estudiantes. Pos condición: Se aprueban o desaprueban las solicitudes estudiantiles y se habilitan o deshabilitan los retiros. Tabla 3.14 Descripción CU: Modificar Inscripción 7. Nombre: Generar Planillas Inscripción. Actor: Personal administrativo de la División de Control de Estudios (DCE). Precondición: Se requiere iniciar sesión en el módulo administrador del sistema CONEST 3.0 y haber realizado el caso de uso 4, Configurar Inscripción. Acción: Generar, a través del sistema, un lote de planillas por cada uno de los estudiantes inscritos en el período correspondiente y por cada escuela de la Facultad. Pos condición: Se obtiene la planilla que se anexa al expediente físico del respectivo estudiante. Tabla3.15 Descripción CU: Generar Planillas Inscripción 71 3.2.1.2 Modelo de datos Luego de iniciado el desarrollo y búsqueda de las actividades de Inscripción en el sistema, se determinó la necesidad de modificarlos atributos de la tabla actividad_proceso en el modelo del gestor, igualmente para el manejo delos días feriados en el calendario se modificaron las tablas calendario y dia_feriado. En la Figura 3.16 se visualizan los cambios, los nuevos atributos se identifican en negrita y aquellos que se eliminaron se visualizan tachados. Figura 3.16 Primeras modificaciones a Tablas del Modelo de datos del gestor En la tabla actividad_proceso:  Se sustituyó el atributo id por nro (número) para evitar confusiones, ya que las actividades están numeradas.  El atributo acción tendrá el nombre de la misma, por lo que el atributo nombre ya no es necesario, y servirá como enlace a la acción en el controlador de gestión una vez que se le dé clic a la actividad correspondiente. La ventaja de tener el nombre de la acción a nivel del modelo de datos es que se genera flexibilidad a la hora de integrar al gestor acciones que ya se encuentran en el sistema, aunque estén dispersas en el mismo, ya que permite que a nivel de la vista se enlace cada actividad a su acción correspondiente en el controlador generando modularidad, de lo contrario todas las actividades se enlazarían a una misma acción en la cual se debería aplicar la lógica del negocio para posteriormente distribuirlas a diferentes acciones según la actividad. Esto puede volverse complejo y poco extensible en el caso de que se requiera agregar otra actividad a futuro.  El atributo tipo_vista diferenciará el despliegue de las actividades, ya sean en vistas o ventanas modales, según como estén implementadas las actividades en el sistema y el análisis previo que se haya realizado sobre las mismas.  Se guardará un valor en días, semanas o meses en el atributo realizacion_estimada, del momento en el tiempo en que se debe realizar 72 una acción en el ciclo Período Académico. En ese atributo, el valor es un aproximado que se ha calculado junto con el personal administrativo debido a lo recurrente y repetitivo de las actividades de la Gestión Académica.  El atributo duración guardará un valor en días, semana o meses del tiempo estimado en que una actividad puede realizarse. En la tabla calendario se agregó el atributo tipo_evento_id para poder obtener la relación con la tabla tipo_evento, y así controlar los permisos de visualización de los eventos en el calendario dependiendo del tipo de los mismos. En la tabla dia_feriado se eliminó un atributo haciendo depuración de la misma al notar que no se utilizaba. En la Figura 3.17, que sigue a continuación, se puede observar la segunda versión del diagrama del modelo de objetos para el gestor y los cambios realizados en el mismo que ya fueron explicados anteriormente. Figura 3.17 Modelo de datos del gestor (v-2) 73 3.2.2 Fase de Prototipaje En esta segunda iteración se elaboró el prototipo de la vista donde aparecerían las actividades asociadas a los diferente procesos de la Gestión Académica, igualmente se agruparon las ventanas modales ya existentes para algunas actividades del Proceso Inscripción; otras actividades se convirtieron en vistas para aumentar la comodidad del usuario al visualizarlas o por tener más de una acción asociada para poder completarlas. 3.2.2.1 Prototipos de baja fidelidad En la vista principal del módulo gestor, se agregó el elemento llamado tabs, en inglés, que se traduce como pestañas, el cual permitió dividir las funcionalidades asociadas tanto a los Procesos como al elemento Calendario generado en la primera iteración. En este menú se divide en las siguientes pestañas:  Calendario Académico, la cual presenta la interfaz principal del gestor.  Período Académico, en donde se calcularán y se podrán visualizar las fechas estimadas para cada actividad de los procesos del ciclo Período Académico.  Parámetros Generales, en donde se podrán configurar los parámetros generales del sistema que involucran al ciclo de Período Académico pero que no pertenecen a ninguna actividad concreta de los procesos involucrados con el mismo.  Configuración Calendario, en ella se podrán configurar las fechas de los días feriados del calendario. En la Figura 3.18 se puede observar el prototipo descrito. 74 Figura 3.18 Prototipo: Vista principal del gestor (v-2) Se puede visualizar, en la esquina inferior izquierda de la Figura 3.18, un elemento que posee los procesos de la Gestión Académica, los mismos son enlaces a una interfaz donde se mostrarán las actividades correspondientes a cada proceso. Para la vista de las actividades de los procesos se diseñó una interfaz en forma de tabla donde se visualizan el nombre de la actividad, su estado y sus fechas de inicio y fin, que son los campos que se consideran relevantes en una actividad. La vista también posee un elemento llamado breadcrumbs, que se traduce como migas de pan y es una ruta de exploración que está formada por varios enlaces que reflejan la estructura jerárquica de un sitio web, este elemento permite al usuario tener una guía de la navegación y saber dónde se encuentra en el sistema y el camino que ha seguido para llegar hasta allí. En la Figura 3.19 se aprecia el prototipo. 75 Figura 3.19 Prototipo: Vista de las actividades de los Procesos Cumpliendo con uno de los objetivos planteados al inicio de la iteración, se rediseñó el prototipo de la modal de consulta con la lista de eventos, la misma que aparece en el elemento calendario en aquellos días del mes que los posean. Así se logró la inclusión de las redes sociales en el calendario. En la Figura 3.20 se puede observar que se agruparon todas las acciones que se pueden realizar sobre el evento, las mismas se representan a través de íconos existentes en el sistema que sirven como metáforas ya conocidas por el usuario. Así se tiene que el conjunto de acciones que se pueden realizar son: Editar el evento, eliminarlo o compartirlo a través de la red social twitter. Figura 3.20 Prototipo: Eventos para una fecha (v-2) 76 Si se quiere compartir el evento del calendario se desplegará una ventana modal que permitirá esta acción. La Figura 3.21 muestra el prototipo que tendrá por defecto un mensaje armado que puede modificarse. Figura 3.21 Prototipo: Ventana Modal para compartir eventos Con el nuevo elemento en el prototipo de la Vista principal del gestor que se aprecia en la Figura 3.18, se prosiguió a desarrollar la extensión de la funcionalidad para configurar las fechas del elemento calendario, diseñando el prototipo para la pestaña Configuración Calendario, cumpliendo así con otro de los objetivos planteados al inicio de la iteración. Para la interfaz de la pestaña Configuración Calendario se decidió usar como elemento central una tabla donde se visualizan el motivo del día feriado, su fecha de inicio, su fecha final y una opción para eliminarlo. Para editar el mismo servirá de enlace el nombre de cada uno de ellos. El prototipo también muestra una pequeña leyenda explicando lo que se puede realizar en la interfaz, ofreciendo al usuario un intercambio de información, y muestra un botón al final para crear un nuevo día feriado. Se visualiza lo anteriormente redactado en la Figura 3.22. 77 Figura 3.22 Prototipo: Vista principal del gestor (v-2) _ Pestaña: Configuración Calendario Para crear un nuevo día feriado o editar alguno ya existente se diseñó una interfaz en forma de ventana modal con los componentes necesarios para llenar el modelo de datos en forma de formulario. Se puede observar en la Figura 3.23. Figura 3.23 Prototipo de Modal crear/editar feriado 3.2.2.2 Implementación de requerimientos Tomando en cuenta los prototipos diseñados y los cambios realizados a los mismos en esta segunda iteración, sin olvidarla guía de estilos planteada en la Fase de Análisis de la primera iteración, el resultado se puede apreciar en las figuras a continuación. 78 En la Figura 3.24 se puede observar la nueva versión de la vista principal del gestor, con la división de funcionalidades conformada por las diferentes pestañas antes mencionadas. Figura 3.24 Vista principal del módulo gestor (v-2) En la Figura 3.25 se muestra la vista de las actividades, basada en el prototipo del mismo nombre, en este caso del Proceso Inscripción. Figura 3.25 Vista de actividades del proceso Inscripción 79 En el Proceso de Inscripción, las actividades de Inscripción Nuevos, Inscripción y Asignación de Aulas mantuvieron su despliegue original, el cual se realiza a través de ventanas modales. Se puede observar cada una de estas actividades en las figuras Figura 3.26, Figura 3.27 y Figura 3.28. Figura 3.26 Modal de la actividad Inscripción Nuevos Figura 3.27 Modal de la actividad Inscripción Figura 3.28 Modal de la actividad Asignación de Aulas 80 La actividad de Preinscripción, comprende la acción de Selección de estudiantes, en la cual se ejecuta el Algoritmo de Selección que determinará cuáles alumnos del grupo que realizó la Preinscripción cumplen con los requisitos necesarios para obtener su aprobación y así tener prioridad para inscribir la asignatura que quieren cursar y que requería de preinscripción. Por ello se decidió desplegar las acciones de Configurar la Preinscripción y de Selección de estudiantes como una vista con el elemento tab o pestaña, para facilitar la visualización de ambas acciones por su asociación. La vista puede apreciarse a continuación en la Figura 3.29. Figura 3.29 Vista de la actividad Configurar Preinscripción _ Pestaña: Preinscripción A continuación se muestra en la Figura 3.30 la pestaña Selección de estudiantes, la cual ya existía en el sistema como una ventana modal con un botón para ejecutar el algoritmo respectivo de selección para crear la lista de estudiantes a quienes se les aceptó la Preinscripción. Figura 3.30 Vista de la actividad Configurar Preinscripción _ Pestaña: Selección de estudiantes 81 La actividad Modificación de Inscripción se representaba anteriormente en una ventana modal, la misma era de gran tamaño por la cantidad de información que se desplegaba, es por ello que se decidió crearle su propia vista la cual conserva todos los elementos originales que tenía en la ventana modal como lo son los tabs o pestañas, donde se puede: Verificar las asignaturas abiertas, las reglas que se aplican en el semestre y abrir la modificación de inscripción para los estudiantes. Solamente se le agregó a la vista una nueva pestaña para contener los retiros tanto de laboratorios como de asignaturas teóricas. Se puede observar la vista descrita de Modificación de Inscripción en la Figura 3.31. Figura 3.31 Vista de la actividad Modificación de Inscripción 82 En la Figura 3.32 se puede observar la nueva pestaña Abrir Retiros que fue anexada a Modificación de Inscripción. Figura 3.32 Vista de la actividad Modificación de Inscripción_ Pestaña: Abrir Retiros Para la actividad Generar Planillas de Inscripción, se decidió que el despliegue fuera en una vista, a través de una tabla, en la cual se dividen las planillas por Licenciaturas de la Facultad haciendo más versátil, rápida y específica la actividad a la hora de generarlas, como se puede observar en la Figura 3.33. Figura 3.33 Vista de la actividad Generar Planillas de Inscripción 83 A continuación, regresando a la vista principal del gestor, se observará en la Figura 3.34 la implementación de la ventana modal para ver los detalles de los eventos, la misma que se despliega al hacer clic sobre un día del calendario que posea eventos. Figura 3.34 Ventana Modal: Detalles de los eventos En la Figura 3.35 se observa la modal para compartir un evento, la cual mantiene las restricciones de la red social twitter para publicar (máximo 140 caracteres). Una vez sea compartido el evento se verá publicado en la cuenta de twitter del sistema CONEST. Figura 3.35 Ventana Modal: Compartir Evento 84 Prosiguiendo, puede apreciarse en la Figura 3.36 la vista de la pestaña Configuración Calendario. Figura 3.36 Vista principal del gestor (v-2) _ Pestaña: Configuración Calendario La Figura 3.37 muestra la creación de un nuevo feriado, y el despliegue de un selector de fechas (datepicker) cuando se ubican en los campos correspondientes a las fechas. Esa misma modal se utiliza para la edición, la diferencia es que los campos aparecen rellenos con la información del día feriado a editar. Figura 3.37Ventana Modal: Crear feriado 85 3.2.3 Cierre de la iteración Finalizando esta iteración se realizó una reunión de equipo de desarrollo para verificar los requisitos que se cumplirían para la siguiente iteración, así mismo aquellas funcionalidades que debían mejorarse de la vista principal del gestor y de las actividades del proceso Inscripción. 3.3 Tercera Iteración: Procesos de Planificación y Calificación. Para esta tercera iteración del proceso de desarrollo se plantean como objetivos:  Aplicar la fase de análisis a los procesos de Planificación y Calificación, para determinar los requerimientos funcionales que el módulo gestor deberá manejar delos mismos.  Implementar e integrar al módulo gestor las actividades relacionadas a los procesos de Planificación y Calificación.  Realizar la implementación dela funcionalidad de la pestaña Período Académico en la vista principal del gestor.  Corregir y mejorar, de ser necesario, las actividades y funcionalidades que se integraron en la iteración anterior. 3.3.1 Fase de Análisis La fase de análisis de esta iteración abarca no solo el modelado de los procesos de Planificación y Calificación, sino también correcciones al modelo planteado para el proceso de Inscripción, pues existen un conjunto de requerimientos nuevos que deben ser agregados a las funcionalidades relacionadas con el mismo. Se inicia la fase aplicando las correcciones necesarias al modelo de casos de uso planteado en la iteración anterior para el proceso de Inscripción. Este mantiene la misma estructura, como puede observarse en la Figura 3.38, pero la descripción de dos casos de uso debe ser actualizada para detallar las nuevas funcionalidades a incluir dentro del módulo. 86 3.3.1.1 Modelo de Casos de Usos Figura 3.38 Casos de Uso Proceso de Inscripción - Iteración 2 1. Nombre: Configurar Inscripción nuevos. Actor: Personal administrativo de la División de Control de Estudios (DCE). Precondición: Se requiere iniciar sesión en el módulo administrador del sistema CONEST 3.0. Acción: Permite configurar la apertura de la inscripción de nuevos ingresos en un periodo académico, además como nueva funcionalidad, permite cargar mediante una nómina que se procesa de forma automática, la información básica de los nuevos ingresos en la base de datos del sistema, que es necesaria para realizar la inscripción. Pos condición: La inscripción para nuevos ingresos queda habilitada para el periodo seleccionado y toda la información de los mismos queda guardada en el sistema. Tabla 3.16 Descripción CU: Configurar Inscripción nuevos 2. Nombre: Configurar Preinscripción. Actor: Personal administrativo de la División de Control de Estudios (DCE). 87 Precondición: Se requiere iniciar sesión en el módulo administrador del sistema CONEST 3.0. Acción: Permite configurar la apertura de la preinscripción de un periodo académico. La nueva funcionalidad abarca la posibilidad de consultar y modificar la información de preinscripción de las asignaturas existentes en el sistema. Pos condición: La preinscripción queda habilitada para el periodo seleccionado y se pueden otorgar permiso para visualizar sus resultados a los estudiantes y a los profesores. Los datos de preinscripción de una asignatura son actualizados. Tabla 3.17 Descripción CU: Configurar Preinscripción - Iteración 2 Luego de revisar y modificar los dos casos de uso anteriores, del proceso de Inscripción realizado en la segunda iteración, se procede a realizar el modelo para los procesos de Planificación y Calificación, el mismo se observa en la Figura 3.39. Los primeros tres casos de uso pertenecen al proceso de Planificación y los tres últimos al de Calificación. Figura 3.39 Casos de Uso Procesos de Planificación y Calificación - Iteración 1 88 1. Nombre: Configurar Plantilla del Periodo Académico. Actor: Personal administrativo de la División de Control de Estudios (DCE). Precondición: Se requiere iniciar sesión en el módulo administrador del sistema CONEST 3.0. Acción: Permite configurar la plantilla del próximo período académico, estableciendo el valor a los siguientes parámetros: Cantidad de secciones, cupo disponible, horario y si se requiere un aula por cada asignatura que se vaya a ofertar en el período. Pos condición: La plantilla queda habilitada para su posterior uso en el periodo seleccionado. Tabla 3.18 Descripción CU: Configurar Plantilla del Periodo Académico 2. Nombre: Asociar Plantilla Periodo Académico. Actor: Personal administrativo de la División de Control de Estudios (DCE). Precondición: Se requiere iniciar sesión en el módulo administrador del sistema CONEST 3.0 y haber realizado el caso de uso 1, Configurar Plantilla del Periodo Académico. Acción: Permite crear un nuevo período académico al cual se le asociará la plantilla ya modificada. Pos condición: La plantilla queda asociada a un nuevo período académico y disponible para que cada jefe de departamento pueda modificar lo que falta de la misma. Tabla 3.19 Descripción CU: Asociar Plantilla Periodo Académico 3. Nombre: Permitir visualización de la Planificación. Actor: Personal administrativo de la División de Control de Estudios (DCE). Precondición: Se requiere iniciar sesión en el módulo administrador del sistema CONEST 3.0 y haber realizado el caso de uso 2, Asociar Plantilla Período Académico. Acción: Permite habilitar la visualización de la planificación para docentes y estudiantes. Pos condición: La planificación queda habilitada para su visualización por parte de los docentes y/o de los estudiantes. Tabla 3.20 Descripción CU: Permitir visualización de la Planificación 89 4. Nombre: Generar calendario de Calificación. Actor: Personal administrativo de la División de Control de Estudios (DCE). Precondición: Se requiere iniciar sesión en el módulo administrador del sistema CONEST 3.0. Acción: Permite generar el calendario de evaluaciones para el proceso de Calificación de un periodo académico. Pos condición: Cada docente recibe un correo informándole que el calendario de evaluaciones está habilitado para visualizarse y consultarse. Tabla 3.21 Descripción CU: Generar calendario de Calificación 5. Nombre: Configurar Calificación. Actor: Personal administrativo de la División de Control de Estudios (DCE). Precondición: Se requiere iniciar sesión en el módulo administrador del sistema CONEST 3.0 y haber realizado el caso de uso 4, Generar calendario de Calificación. Acción: Permite realizar la apertura de la calificación de un periodo académico, visualizar las asignaturas que han sido calificadas y enviarle recordatorios a los docentes para que califiquen las asignaturas de las cuales están a cargo. Pos condición: La calificación ha sido activada, se han visualizado las asignaturas calificadas y se ha recordado a los docentes calificar las mismas. Tabla 3.22 Descripción CU: Configurar Calificación 6. Nombre: Generar planillas de notas. Actor: Personal administrativo de la División de Control de Estudios (DCE). Precondición: Se requiere iniciar sesión en el módulo administrador del sistema CONEST 3.0 y que haya finalizado el calendario de evaluaciones y todos los docentes hayan realizado la calificación respectiva de sus asignaturas. Acción: Permite generar en lote, por cada Licenciatura, las planillas de cada sección de las asignaturas ofertadas en el período académico. Las planillas contienen las notas de todos los estudiantes que cursaron las asignaturas. Junto a cada lote de planillas se genera un reporte resumiendo el estado de la Calificación. Pos condición: Las planillas son generadas y se cuenta con un registro tangible de los eventos ocurridos durante el proceso de Calificación. Tabla 3.23 Descripción CU: Generar planillas de notas 90 3.3.2 Fase de Prototipaje En esta tercera iteración se elaboró el prototipo de la pestaña Período Académico que se encuentra en la vista principal del módulo gestor; igualmente se agruparon las ventanas modales ya existentes para algunas actividades de los Procesos de Planificación y Calificación así como los enlaces que llevan a la realización de otras actividades de estos procesos, algunas se convirtieron en vistas para aumentar la comodidad del usuario al visualizarlas. 3.3.2.1 Prototipos de baja fidelidad En la vista principal del módulo gestor se encuentra un menú, con varios elementos del tipo pestañas que se explicaron en la iteración anterior, y del cual se realizó el prototipo para la vista de la pestaña Período Académico, en donde se calcularán y se podrán visualizar las fechas estimadas para cada actividad de los procesos del ciclo con el mismo nombre, Período Académico. Se continuó optando por el diseño de una interfaz en forma de tabla con los campos que se consideran relevantes de una actividad, el nombre de la actividad, su estado y sus fechas de inicio y fin para el despliegue de las mismas. La tabla se dividió por secciones, una por cada proceso de la Gestión Académica. La interfaz cuenta también con un selector del período académico a visualizar en la parte central superior, un botón para agregar un nuevo período académico al sistema, ubicado en la zona inferior izquierda, y en el caso en que no se hayan aún calculado las fechas tentativas para la realización de cada actividad posee un botón, en el centro de la interfaz, para realizar el cálculo. Se puede visualizar en la Figura 3.40 a continuación. 91 Figura 3.40 Prototipo: Vista principal del gestor (v-2) _ Pestaña: Período Académico 3.3.2.2 Implementación de requerimientos Usando el prototipo diseñado, el resultado se muestra en la Figura 3.41 donde se aprecia el cálculo tentativo que el sistema realizó para el período académico escogido. Figura 3.41 Vista principal del gestor (v-2) _ Pestaña: Período Académico 92 En las actividades del proceso de Planificación se decidió que la actividad Configurar Plantilla se enlazara a la vista ya existente de la misma en el sistema, para la configuración de las planillas de períodos académicos. Por otro lado, la actividad Asociar Plantilla a Período mantiene su despliegue en una ventana modal y la actividad de Permisos de Visualización pasa a ubicarse en una vista diferente, con el objetivo de hacer más afable su despliegue ya que son varios permisos contenidos, esta última se puede ver en la Figura 3.42 que sigue a continuación. Figura 3.42 Vista de la actividad Permisos de Visualización Para el despliegue de las actividades del Proceso de Calificación se realizó lo siguiente:  Las actividades Generar calendario de calificación y Abrir calificación mantuvieron su despliegue original en ventanas modales.  Ver calendario de calificación y Ver materias calificadas se enlazaron a sus vistas ya existentes en el sistema.  La actividad Generar Planilla de notas se ubicó en una vista igual a la que puede visualizarse en la Figura 3.33Figura 3.33 Vista de la actividad Generar Planillas de Inscripción, donde se ubica la vista para las planillas de inscripción, a fin mantener consistencia entre las interfaces del gestor y hacer más cómoda su visualización. Debido a que esta iteración también tiene implicaciones sobre las funcionalidades del Proceso de Inscripción, es necesario describir los efectos de los cambios realizados sobre la implementación del gestor. Para empezar, en la actividad Inscripción de Nuevos se requiere que antes de poder activarla se cargue en el sistema un archivo en formato XLS (eXceL Spreadsheet). 93 Este archivo contiene la nómina con la información de todos los nuevos ingresos, facilitando así la introducción de los datos al sistema por parte del personal administrativo que antes debía realizar manualmente la inserción de estos registros en la base de datos, por tanto también se minimizan los errores que puedan ocurrir al acceder a la misma. Se puede visualizar en la Figura 3.43. Figura 3.43 Vista de la Actividad Inscripción Nuevos (v-2) Una vez cargada la nómina se despliega el resto de la vista, donde se aprecia la información del archivo XLS, la opción para abrir la Inscripción y la opción de agregar un nuevo estudiante en caso de ocurrir algún cambio de último momento. Lo descrito se muestra a continuación en la Figura 3.44. Figura 3.44 Vista de la Actividad Inscripción Nuevos (v-2) 94 El segundo cambio ocurre en la actividad Preinscripción y en la Selección de Preinscritos, ambas complementos la una de la otra y enlazadas a la misma interfaz. En la pestaña Seleccionar Estudiantes se agregó un enlace que permite consultar la oferta académica del período donde se puede visualizar, una vez ejecutado el algoritmo de selección, todos los estudiantes preinscritos por asignatura de cada Licenciatura; así mismo se le agregó un elemento buscador para consultar las asignaturas de la oferta académica y verificar si éstas requieren o no una preinscripción. Se ven estos dos elementos en la Figura 3.45. Una vez se ha encontrado en el buscador una asignatura que requiera preinscripción se desplegará en la vista, mediante la técnica AJAX, una segunda interfaz con un menú formado por dos pestañas, la cual se detalla en la Figura 3.46. La primera, Criterios de Selección, mostrará los criterios y el algoritmo por los cuales se rige esa asignatura y permitirá la modificación de los mismos. La segunda, Lista de Preinscritos, permitirá visualizar la lista de estudiantes que preinscribieron la asignatura, y una vez ejecutado el algoritmo de selección, la lista se mostrará dividida entre estudiantes aceptados y estudiante rechazados. En la Figura 3.45, que sigue a continuación, también se aprecia la nueva pestaña Visualizar la Preinscripción, donde se pueden otorgar o retirar los permisos a los docentes para consultar los resultados de la preinscripción. Figura 3.45 Vista de la actividad Configurar Preinscripción _Pestaña: Selección de estudiantes (v-2) 95 En la Figura 3.46 se visualiza claramente las especificaciones acordes a la preinscripción de la asignatura de código 2145 y nombre Fotografía I. Figura 3.46 Vista de la actividad Configurar Preinscripción _ Pestaña: Selección de estudiantes (v-2) 3.3.2.3 Evaluaciones de usabilidad En esta iteración se tiene una versión del gestor con funcionalidades bastante desarrolladas por lo que se realizó la primera evaluación de usabilidad usando la técnica, propuesta por el método AgilUs, del protocolo del pensamiento manifestado. El instrumento de evaluación aplicado fue un cuestionario que permitiese registrar las respuestas obtenidas. Se evaluó a tres personas de la DCE, dos de ellas son parte del personal administrativo y son dos de las personas que más utilizan y conocen el sistema CONEST desde sus inicios. La tercera persona es parte del personal de la DCE pero no posee amplios conocimientos sobre las actividades administrativas, ni tiene experiencia con el módulo administrador del sistema CONEST 3.0. El cuestionario constó de una serie de tareas a realizar seguidas de preguntas cerradas en cuanto al tiempo que les tomó realizar las tareas y de varias preguntas abiertas para saber el por qué les tomó ese tiempo llevarlas a cabo. También determinó si se evidenciaban o no algunos aspectos de usabilidad en el sistema. Al mismo tiempo los participantes expresaron en voz alta sus pensamientos y opiniones sobre las tareas que realizaron como lo estipula el protocolo del pensamiento manifestado. 96  Prueba El cuestionario posee ocho preguntas del tipo cerradas. Seis preguntas para analizar cuantitativamente la facilidad de realizar la actividad requerida, y dos preguntas en forma de afirmación cuyas respuestas va en una escala del 1 al 5 para medir qué tan de acuerdo se está con la afirmación. El cuestionario también posee seis preguntas del tipo abiertas que proporcionarán información cualitativa sobre la realización de las actividades y de la versión actual del módulo en general. Algunas preguntas sólo podían responderse si el participante estaba muy familiarizado con los procesos de la Gestión Académica, por lo tanto el participante que no hace parte del personal administrativo no pudo realizarlas como se estimaba. La estructura del instrumento aplicado en esta prueba se puede visualizar en el Anexo 1.  Resultados A continuación se muestran un conjunto de gráficos donde se pueden observar las respuestas obtenidas de la evaluación, representadas en función del tiempo requerido por los participantes para realizar las actividades y el motivo ofrecido por cada uno como justificación para dicho tiempo. Figura 3.47 Cuestionario Actividad 1 Las respuestas de los usuarios coinciden, siendo el elemento calendario lo primero que llama la atención en el módulo gestión, ello reafirma el objetivo de diseño de la interfaz principal, donde se quería que ese elemento fuera el protagonista para el 97 manejo del calendario académico, además que refuerza el principio de usabilidad de correspondencia con el mundo real. De igual forma, el principio de reconocimiento antes que recuerdo se aplica, ya que se ubica rápidamente el módulo de gestión siendo la primera vez que se entra en el sistema con ese módulo visible. Figura 3.48 Cuestionario Actividad 2 En esta actividad los participantes expresaron la comodidad de poder cargar en el sistema un archivo XLS en lugar de insertar a mano la información de cada estudiante de nuevo ingreso, lo cual también les hace la actividad más rápida. Incluso el participante que nunca había usado el módulo administrador comentó que era una tarea fácil y rápida de realizar y le parecía eficiente. Figura 3.49 Cuestionario Actividad 3 98 En las respuestas se puede notar que, aunque no se esté familiarizado con el sistema, la actividad se logra realizar en un tiempo bastante corto; por lo tanto su localización es intuitiva y está bien señalizada. Figura 3.50 Cuestionario Actividad 4 Para la actividad de selección de preinscritos uno de los usuarios administradores opinó que era redundante tener esta actividad aparte de la preinscripción ya que ambas siempre se localizaban en el mismo sitio, puesto que la selección es un paso necesario para completar la preinscripción. Figura 3.51 Cuestionario Actividad 5 Al realizar esta actividad se tuvo que intervenir y recordar a los participantes que se estaban probando sólo los elementos con los procesos, ya que al leer sobre planificación empezaron a navegar por las pestañas de período académico, configuración de calendario y parámetros generales. Igualmente se corrigió la 99 pregunta a: Modificar los permisos de visualización de la planificación. Con ello sólo un participante se rindió luego de tres minutos buscando. Figura 3.52 Cuestionario Actividad 6 En esta actividad se esperaba que el participante que no tenía interacción con el módulo administrador intentara pero no consiguiera realizar la actividad, lo cual ocurrió. Era de esperarse ya que el modelo del negocio para los retiros es verlos como una modificación de inscripción por parte de los estudiantes, lo cual es difícil de entender si no se está familiarizado con los procesos académicos a nivel administrativo. Como se puede visualizar, al personal administrativo también le costó completar la actividad. Uno de los administradores comentó incluso, que era mejor que los retiros estuvieran como actividad aparte y no involucrados a ningún proceso, ya que de esta manera serían más fáciles de ubicar. Se intuye que la dificultad para encontrar la actividad se debe al conflicto entre las reglas del negocio que se quieren aplicar en el módulo y la forma en que el sistema despliega las actividades sin unirlas a ningún proceso específico y todas bajo la opción de Sistema. De las dos preguntas restantes, todos respondieron estar totalmente de acuerdo con la siguiente afirmación: “Al entrar al sistema CONEST se localiza fácilmente el módulo Gestión”. De la segunda pregunta restante se pueden ver los resultados en la Figura 3.53. 100 Figura 3.53 Cuestionario pregunta número 14 Se notó que, debido a que el elemento que contenía los procesos en la interfaz se encontraba abajo y se debía hacer scroll, desplazamiento hacia abajo para poder verlo, se hacía difícil ubicarlo en la pantalla principal. Uno de los usuarios administrativos indicó que preferiría que estos se encontraran arriba a nivel de los otros elementos, como el calendario, para que fueran más visibles. Con la realización de esta prueba se obtuvo un mejor entendimiento del modelo mental del usuario y de su interacción con el producto. Fue efectiva para recolectar ideas y sugerencias que pueden ser incorporadas en el diseño del módulo.  Análisis de la Interfaz Para finalizar la etapa de evaluaciones de esta iteración, se llevó a cabo un análisis de la interfaz principal del gestor del sistema, para ello se utilizó la herramienta web Feng-Gui, un portal que permite realizar una prueba visual a un sitio web dada su URL. En la versión gratuita de esta prueba, se genera una imagen donde el portal coloca lo que, según su análisis interno, son los tres primeros elementos que captan la atención del ojo humano en el sitio web. Al analizar la interfaz actual del gestor del sistema, se obtuvo como resultado la imagen que se muestra en la Figura 3.54. 101 Figura 3.54 Vista principal del gestor analizada por Feng-GUI Como se observa en la figura anterior, según Feng-GUI, lo primero que capta el ojo humano al acceder a la interfaz es el elemento calendario académico; lo que refuerza el objetivo planteado en su diseño. 3.3.3 Cierre de la Iteración Gracias a la evaluación realizada, se obtuvo un mejor entendimiento del modelo mental del usuario y de su interacción con la versión del producto, lo que llevó al equipo de desarrollo a trabajar en las sugerencias realizadas por los participantes en la evaluación y a pensar en formas de mejorar la navegabilidad del módulo gestor, aumentando aún más la usabilidad del mismo. 102 3.4 Cuarta Iteración: Manejo del Calendario Académico e integración de los procesos. Para esta cuarta iteración del proceso de desarrollo se plantean como objetivos:  Aplicar la fase de análisis a las actividades de los procesos de Inscripción, Planificación y Calificación para determinar los indicadores que presentarán en el módulo gestor.  Desarrollar el elemento indicador del avance de los procesos, el cual se encuentra en la vista principal del módulo gestor.  Integrar en la implementación de las interfaces, de los procesos y sus actividades, en el módulo gestor, las nuevas propuestas surgidas de las sugerencias obtenidas en la evaluación de usabilidad de la iteración anterior. 3.4.1 Fase de Análisis 3.4.1.1 Guías de Estilos Se eligieron cuatro colores diferentes para identificar el progreso individual de cada proceso a través de los indicadores. Los mismos se muestran a continuación: HTML: #00CCFF HTML: #FF9933 HTML: #99CC66 HTML: #FFFF99 RGB: 0 204 205 RGB: 25515351 RGB: 153204102 RGB: 255 255 153 Inscripción Planificación Calificación Egreso De esos colores se agregaron tres a la guía de estilos, ya que el de Planificación pertenece a la paleta de colores de los elementos de la interfaz. 3.4.1.2 Modelo de datos Para el desarrollo del módulo gestor del sistema CONEST 3.0, es necesario modelar objetos nuevos. Mediante los mismos será posible llevar el control de las actividades asociadas a los procesos de la Gestión Académica así como las fechas en las cuáles deben ser realizadas. El nuevo modelo que se plantea es tipo_status_actividad, donde se tendrá la información del estado de las actividades de cada proceso, lo cual ayudará con la 103 lógica del gestor para relacionar la fecha en la que se debe realizar una actividad y si ésta fue o no realizada al tiempo estimado. Se visualiza en la Figura 3.55. Figura 3.55 Modelo de datos: tipo_status_actividad Sus campos son: - id, que los identifica inequívocamente con un acrónimo de tres letras. - Nombre, el nombre de cada estado en el que puede estar una actividad. - Descripción, que posee la descripción de cada estado de las actividades. Los estados son los siguientes:  Hoy: la fecha en que debe hacerse la actividad es la actual.  En proceso: la actividad fue iniciada pero aún no ha concluido.  Pendiente: la actividad no se realizó en la fecha estimada y aún no se ha realizado.  Próxima: la fecha en que se debe iniciar la actividad está cercana.  Realizada: la actividad fue iniciada y finalizada. Una vez realizada la primera prueba a una parte del personal de la DCE, se percibió que algunas actividades, al no estar listadas explícitamente, se perdían de la vista del usuario debido a la falta de costumbre de englobarlas en una actividad macro, si bien el personal sabe que una actividad como Retiro de Materias es parte de la Modificación de Inscripción, en el sistema siempre se presentaron de manera aislada, lo cual no sigue las reglas de negocio establecidas en la DCE y que se han querido implementar en el módulo gestor. Asimismo, algunas actividades que se componen de diversos pasos como la Preinscripción (que abarca preinscripciones y selección de estudiantes en actividades diferentes) parecieron redundantes al personal de la DCE. Por ello se consideró la implementación de sub actividades para las actividades, de manera de incluir esas actividades que se percibieron como redundantes dentro de la actividad principal a la cual pertenecían y de colocar explícitamente aquellas que se perdieron de vista, sin embargo, cuando se incluyeron en el modelo de datos y se procedió a su implementación en la aplicación, se observó que agregaban mucha redundancia en el modelo de datos y además podían no requerirse en el proceso de desarrollo. Luego de una reunión del equipo de trabajo, en la cual se analizó en profundidad esta situación, se decidió eliminar las sub actividades como solución, en cambio se 104 prefirió usar los cambios de estado y la colocación explícita de actividades como solución. Al analizar la lógica de cambio de estado de las actividades, (pasar de próxima a ejecución, finalizada, pendiente, etc.) Se determinó que era más sencillo no implementar sub actividades, sino impedir, a través de la lógica de cambio de estados, que la actividad principal se diera por finalizada sin que las sub actividades, implicadas en ella, lo hicieran antes. Cambio de estado de las actividades Para que la lógica de cambio de estado resultara según lo esperado, se establecieron que las condiciones para que las actividades cambiasen su estado serían las siguientes: Actividades del Proceso de Inscripción Preinscripción: Esta actividad se da por iniciada cuando se habilita por primera vez la preinscripción en el período académico. Se dará por finalizada únicamente cuando el algoritmo de selección de estudiantes sea ejecutado para el período. Dentro de esta actividad también se puede configurar si los estudiantes pueden ver o no los resultados de la preinscripción, pero esto no se toma en cuenta para cambiar el estado de la actividad, pues es un parámetro que el personal de la DCE puede modificar en cualquier momento según lo requieran. Inscripción de Nuevos: Esta actividad se da por iniciada cuando se habilita la inscripción de nuevos en el período académico, y se da por finalizada cuando el personal deshabilita la actividad. Inscripción de Regulares: Esta actividad se dará por iniciada cuando se habilite por primera vez la inscripción en el período y se dará por finalizada cuando la inscripción sea deshabilitada por el personal de la DCE. Asignación de Aulas: Esta actividad se da por iniciada cuando se ejecuta el algoritmo de asignación de aulas para el período académico. Finaliza cuando se configura como verdadero el parámetro que regula la visibilidad de la asignación de aulas para los estudiantes, pues antes de eso, el personal de la DCE puede realizar los cambios pertinentes en la asignación de cada aula. Modificación de Inscripción: Esta actividad, anteriormente abarcaba la configuración de los retiros para estar completa, pero luego de las pruebas realizadas al personal de la DCE, se determinó que lo más conveniente era separar ambas actividades, por lo que esta actividad se da por iniciada cuando se habilita la 105 modificación de inscripción del período académico, y se finaliza una vez es deshabilitada por el personal de la DCE. Abrir Retiros: Esta actividad se separó en: Abrir Retiros, Cerrar Retiro de Laboratorios y Cerrar Retiros de Materias, para que pudiera visualizarse explícitamente como actividades diferentes, ya que tienen fechas distintas aun cuando se acceden a través de la misma interfaz. Abrir Retiros se da por iniciada cuando se habilita al menos uno de los retiros del período académico, y se da por finalizada cuando se habilitan ambos. Cerrar Retiro de Laboratorios: Esta actividad no pasa por el estado de ejecución, sencillamente se da por terminada cuando se deshabilitan los retiros de laboratorios en el período académico. Cerrar Retiro de Materias: Esta actividad solo cambia su estado a finalizada, cuando se deshabilitan los retiros de materias teóricas en el período académico. Generar Planillas de Inscripción: Inicia una vez que el personal de la DCE empieza la generación de planillas de inscripción, se da por finalizada cuando todas las planillas de inscripción de cada escuela se generaron al menos una vez para el período académico actual. Actividades del Proceso de Planificación Configurar Plantilla: Inicia cuando se accede desde el período académico a la configuración de las plantillas y finaliza cuando se crea el siguiente periodo académico en el sistema, pues se asume que al crear el período nuevo, la plantilla contiene todos los cambios necesarios para su planificación. Asociar Plantilla: Esta actividad sólo cambia su estado a finalizada una vez que se crea el nuevo período académico. Permisos de Visualización: Inicia cuando se accede por primera vez, en el período actual, a la configuración de visualización de las planificaciones para estudiantes y docentes. Esta es una de las pocas actividades del sistema que finaliza automáticamente una vez que transcurre la fecha tope establecida para modificar estos parámetros. Actividades del Proceso de Calificación Generar Calendario de Exámenes: Inicia cuando se despliega por primera vez la modal donde el personal de la DCE configura las fechas de exámenes finales y reparación del período académico. Finaliza una vez que el algoritmo de asignación de fechas y aulas para exámenes del período actual es ejecutado en el sistema. 106 Modificar Calendario Calificación: Esta actividad inicia cuando el personal administrativo de la DCE ingresa, por primera vez en el período académico actual, al calendario de exámenes generado. Al calendario le pueden realizar las modificaciones que se consideren pertinentes antes de comenzar la calificación. Esta actividad se da por finalizada al habilitar la calificación, sin embargo el personal todavía tendrá acceso al calendario de exámenes y podrá realizar configuraciones sobre el mismo, si así lo requirieran. Abrir Calificación: Esta actividad solo cambia su estado a realizada cuando se habilita por primera vez la calificación para el período académico. Ver Materias Calificadas: Inicia una vez que se abre la calificación y el sistema la finaliza automáticamente una vez transcurre la fecha programada para su cierre. Generar Planillas Notas: Empieza al generar las planillas de notas de las escuelas en el período académico actual y finaliza cuando se han generado, por lo menos una vez, las planillas de todas las escuelas. Para mantener la flexibilidad y prevenir errores, se determinó que aunque una actividad haya finalizado el personal de la DCE puede acceder a ella y realizar las modificaciones necesarias a sus parámetros, sin embargo el estado de la misma ya no se verá afectado. Se realizaron algunas modificaciones a los modelos ya existentes, las mismas se visualizan en la Figura 3.56, donde los nuevos atributos se identifican por estar en negrita y aquellos que se eliminaron se visualizan tachados. Figura 3.56 Segundas modificaciones a Tablas del Modelo de datos del gestor 107 De la tabla calendario se eliminó el atributo tipo que existía en un inicio en el sistema, ya que su implementación es innecesaria. De igual forma se agregó un nuevo campo, orden, en la tabla proceso_gestion_academica por comodidad y consistencia en la secuencia de procesos del ciclo de Período Académico. Se agregaron tres atributos en la tabla actividad_proceso:  Aplica_en_intensivo indica si la actividad aplica o no en periodo intensivo.  Se_autofinaliza indica si la actividad debe finalizarla el usuario o el sistema.  Tipo_evento_id permite saber qué tipo de evento es la actividad, lo que se utiliza en el calendario académico restringiendo la visibilidad de la misma a los usuarios que no sean de determinado rol. En la tabla tipo_evento se incluyó uno nuevo, dando un total de tres tipos: Académico, Feriado y Administrativo. Los primeros dos lo pueden visualizar todos los usuarios y el último sólo podrá verlo un usuario de rol administrativo. En la Figura 3.57 que sigue a continuación, se puede observar la tercera versión del diagrama que contiene los modelos de objetos usados en el gestor. 108 Figura 3.57 Modelo de datos del gestor (v-3) 3.4.2 Fase de Prototipaje 3.4.2.1 Prototipos de baja fidelidad Tomando en cuenta las sugerencias planteadas por los usuarios en la evaluación de usabilidad, se decidió hacer una reestructuración de la interfaz principal y por ende de su prototipo. En la Figura 3.58 pueden notarse las alteraciones realizadas. 109 Figura 3.58 Prototipo: Vista principal del gestor _ Modificaciones Se movieron todos los elementos de las actividades y se juntaron a la derecha de la interfaz. La pestaña con el nombre de Período Académico fue sustituida por Procesos, lo que se piensa ayudará a conseguir los procesos más rápido, evitará confusiones y permitió quitar la caja de procesos que existía dándole más espacio al calendario académico. Por último, se cambió la pestaña Configuración de Calendario ya que el nombre causaba confusión y se prefirió utilizar el nombre Eventos. El prototipo final puede verse en la Figura 3.59. 110 Figura 3.59 Prototipo: Vista principal del gestor (v-3) Otro prototipo que se diseñó fue el del elemento línea de tiempo. La línea de tiempo será representada con una barra de progreso, esta barra indicará visualmente la cantidad de semanas transcurridas en el período académico actual. Igualmente el elemento posee un enlace, en la cantidad de semanas transcurridas, con el cual se podrán modificar las fechas de inicio y fin del período actual. Se visualiza el prototipo en la Figura 3.60. Figura 3.60 Prototipo: Vista principal del gestor_ Elemento: Línea de Tiempo 111 Para finalizar el diseño de la vista principal se realizó el prototipo del elemento que mostrará el estado de los procesos. Este elemento consta de un selector para elegir el período académico al cual se le quiere ver el estado de cada uno de sus procesos. El estado o avance de cada proceso se medirá según la cantidad de actividades que hayan sido realizadas de los mismos y se mostrará visualmente mediante una barra de progreso, aparte aparecerá escrito la cantidad de actividades realizadas. Cada proceso del elemento será un enlace a sus respectivas actividades para facilitar la verificación y realización de las mismas. Se puede detallar el elemento en la Figura 3.61 Figura 3.61 Prototipo: Vista principal del gestor_ Elemento: Estado de Procesos Una vez implementado en el modelo de datos el estado de las actividades se prosiguió a diseñar su despliegue en la interfaz; para ello se le asignaron colores, de las guías de estilo, que los representarían visualmente y funcionarían como un indicador. En la Tabla 3.24 se encuentran los colores seleccionados. Estado Color: Nombre HTML RGB Hoy Azul oscuro #009999 0 153 153 En Proceso Amarillo #FFFF00 255 255 0 Pendiente Rojo #FF3333 255 51 51 Realizada Verde #66CC66 102 204 102 Próxima Azul claro #99CCFF 153 204 255 Tabla 3.24 Estados de los Procesos y sus colores 112 En la Figura 3.62 se visualizan los indicadores de los estados en la vista de la pestaña Procesos, la cual además, tendrá cada actividad con un enlace a la misma para brindar al usuario mayor rapidez de acceso a la ejecución de las actividades. Figura 3.62 Prototipo: Vista principal del gestor (v-3) _ Pestaña: Procesos (v-2) Una vez se tienen definidos los indicadores de cada estado, se procede a diseñar el elemento de la vista principal que contendrá las actividades. En la vista habrá tres elementos, los cuales separarán las actividades según la importancia de su realización y el estado en el que se encuentren, todo ello para brindarle una información valiosa en tiempo al usuario. Se dividen en:  Hoy, donde estarán las actividades con fecha del día actual y aquellas con el estado pendiente.  En ejecución, donde estarán las actividades que se encuentran activas pero que aún no finalizan.  Próximas, donde estarán las actividades de fechas cercanas. La actividad en el elemento será un enlace a una ventana modal en la cual se podrán modificar las fechas de inicio y fin de la actividad, de acuerdo al estado de la misma, y permitirá proceder a ejecutar la actividad. Aparte el elemento desplegará el 113 indicador de estado y el período académico al cual está asociada la actividad. Puede visualizarse en la Figura 3.63. Figura 3.63 Prototipo de las actividades de la vista principal del gestor El prototipo de la ventana modal que se desplegará al acceder a alguna actividad se detalla en la Figura 3.64. Sólo a las actividades en los estados hoy, pendiente y próxima se les puede modificar ambas fechas, a las actividades con el estado en proceso sólo se les podrá cambiar la fecha de fin. Figura 3.64 Prototipo Detalles de actividad 3.4.2.2 Implementación de requerimientos Una vez reestructurada la vista principal del gestor se prosigue a implementar los cambios, aplicando los diseños realizados tanto a la vista general como a los elementos específicos de la interfaz. En la Figura 3.65, donde el período actual es del tipo intensivo, se muestra la implementación de los indicadores de la línea de tiempo. 114 Figura 3.65 Vista principal del gestor_ Elemento: Línea de tiempo El elemento que muestra el estado de los procesos puede detallarse en la Figura 3.66 donde el período académico seleccionando es el 01-2015. Figura 3.66 Vista principal del gestor _ Elemento: Estado de los procesos La nueva versión de la interfaz principal del gestor se aprecia en la Figura 3.67, donde también aparecen los distintos elementos antes mencionados. Figura 3.67 Vista principal del gestor (v-3) 115 Para ver el detalle de alguna actividad se desplegará la ventana modal diseñada, la misma se muestra en la Figura 3.68. Figura 3.68 Ventana Modal: Detalles de actividad En la Figura 3.69 se observa la nueva implementación de la pestaña Procesos. Figura 3.69 Vista principal del gestor (v-3) _ Pestaña: Procesos (v-2) 116 3.4.3 Cierre de la Iteración Terminando esta iteración, se planteó la realización de unas nuevas evaluaciones a los usuarios para constatar el efecto de los cambios realizados en la interfaz y corroborar el aumento de la usabilidad gracias a los mismos. Igualmente, se analizaron aquellas funcionalidades que faltaban como la agrupación de los parámetros generales y aquellas que debían extenderse como la de la pestaña Eventos. 3.5 Quinta Iteración: Funcionalidades finales del gestor y pruebas de aceptación del sistema Para esta quinta y última interacción se plantearon los siguientes objetivos:  Completar las funcionalidades faltantes del calendario de eventos.  Realizar pruebas de aceptación del módulo gestor en su totalidad, aplicando para ello los artefactos propuestos por el método AgilUs.  Corregir los errores de usabilidad encontrados en el módulo gestor, a fin de poder implantarlo, totalmente funcional, en el ambiente de producción del sistema CONEST 3.0. 3.5.1 Fase de Análisis La fase de análisis de esta iteración abarca el modelado de funcionalidades adicionales para completar el módulo gestor, las mismas se encuentran en las pestañas: Procesos, Parámetros Generales y Eventos. Para la pestaña Procesos, se desarrollará la funcionalidad de actualización de fechas de las actividades, la cual es idéntica a la que se tiene en las tablas de actividades de la ventana principal del gestor, pero que será agregada también dentro de la tabla de actividades que se encuentra en dicha pestaña. Para la pestaña Parámetros Generales, se debe realizar un estudio del contenido que está registrado en el modelo de datos del sistema, para diseñar una interfaz que permita consultarlos y actualizar sus valores. Finalmente, para la pestaña Eventos, se requiere poder consultar, actualizar, crear o eliminar los eventos que se muestran en el calendario académico ubicado en la vista principal del gestor. Los artefactos desarrollados para esta fase se presentan a continuación. 117 3.5.1.1 Guía de Estilos La intención del equipo de desarrollo es lograr que el usuario pueda distinguir sin mayor esfuerzo entre los eventos del calendario que corresponden a días feriados y aquellos que corresponden a actividades de la Gestión Académica. Por lo tanto, se determinó que los eventos se identificarían con los siguientes colores. HTML: #0066CC HTML: #555555 RGB: 0 40 80 RGB: 33 33 33 Académicos/Administrativos Días Feriados Por tratarse de colores oscuros, se puede pensar que no serán fáciles de distinguir por el usuario, sin embargo, al usar estos tonos se previene la sobrecarga cognitiva en el calendario evitando el ruido visual, el cual es molesto para la vista. Al tener colores particulares se podrán diferenciar los tipos de evento por su presentación. En el caso de los días feriados, el número será presentado con el tono gris seleccionado, mientras que en el caso de los eventos académicos o administrativos, el número será encerrado dentro de una circunferencia cuyos bordes serán del color azul oscuro. De este modo, aunque las tonalidades pudieran llegar a confundirse, la presentación marcará la diferencia. Cabe destacar que si un día posee eventos de todos los tipos, la presentación le da prioridad a los eventos académicos y administrativos antes que a los feriados. 3.5.1.2 Modelo de Datos Durante esta etapa se realizaron cambios en el modelo de datos asociado a las actividades de los procesos con el fin de ajustar el cálculo de las fechas tentativas para los períodos intensivos. Los cambios introducidos se muestran en la Figura 3.70 a continuación. 118 Figura 3.70 Modificación al Modelo de datos: Tabla actividad_ proceso Como puede observarse en la figura, el modelo ahora posee dos atributos nuevos:  realizacion_estimada_intensivo: Atributo que indica la cantidad de tiempo previo o póstumo con relación a la fecha pivote, en que una actividad debe ser realizada durante un período académico del tipo intensivo.  duracion_intensivo: Un atributo que indica el tiempo de duración de una actividad para un período académico del tipo intensivo. Con estos atributos nuevos, se pretende ajustar el algoritmo de cálculo de fechas tentativas para las actividades que apliquen en intensivo, dado que la duración de estos períodos es menor y por lo tanto las actividades se aplican en un tiempo más reducido. Los datos para completar los valores de estos campos fueron consultados con el personal de la DCE, a fin de obtener los valores más reales posibles para las fechas de los intensivos. 3.5.2 Fase de Prototipaje La fase de prototipaje de esta iteración abarca el diseño e implementación de las funciones de las pestañas Parámetros Generales y Eventos existentes en el módulo gestor, así como ajustes visuales para la pestaña Procesos y el cálculo de las fechas aproximadas para la realización de actividades en períodos intensivos. 119 3.5.2.1 Prototipos de baja fidelidad Para extender las funcionalidades de la pestaña Eventos se diseñaron un total de tres interfaces, las cuales son accesibles a través de pestañas internas, que se especifican a continuación. La primera pestaña contiene la información de los días feriados, donde se despliega la vista que existía con anterioridad al acceder a Eventos. Su funcionamiento sigue siendo el mismo que poseía anteriormente, permitiendo configurar la información relacionada a los días feriados que se encuentran almacenados en el sistema. Este prototipo se muestra en la Figura 3.71. Figura 3.71 Prototipo: Pestaña Eventos. Configuración de Días Feriados (v-1) La segunda pestaña está relacionada con la información de los eventos académicos y administrativos almacenados en el calendario del sistema. En este prototipo se plantea la posibilidad de consultar, dinámicamente, los eventos para un mes y un año específico. Se ofrece en términos básicos la misma información que se encuentra en el calendario del mes, pero en estructura de tabla. El prototipo descrito se puede observar en la Figura 3.72. 120 Figura 3.72 Prototipo: Pestaña Eventos. Configuración de Eventos Académicos (v-1) Para la tercera sección de la pestaña Eventos se diseñó un prototipo donde se colocaron las opciones básicas de configuración de contenido para el calendario. Entre las opciones se ofrece la posibilidad de agregar, automáticamente, todas las actividades de los procesos y los días feriados del sistema al calendario académico, para que aparezcan reflejadas en la página principal del gestor. Estas opciones son mucho más útiles cuando se tiene el calendario total o parcialmente vacío, por lo cual se hace prudente ofrecer opciones de limpieza de contenido. Para la limpieza de contenido, se ofrecen tres opciones. La primera es la posibilidad de vaciar el calendario, acción que elimina absolutamente todos los eventos del calendario, sin importar de que tipo sean. La segunda opción se ofrece para eliminar, específicamente, las actividades de los procesos y la tercera los días feriados del calendario. El prototipo descrito anteriormente se puede observar en la Figura 3.73 que se muestra a continuación. 121 Figura 3.73 Prototipo: Pestaña Eventos. Configuración de Contenido del Calendario (v-1) Para complementar el funcionamiento de la pestaña Procesos se optó por modificar ligeramente el diseño de su interfaz, a fin de mantener la consistencia entre las vistas del gestor y extender las funcionalidades que se pueden realizar en esta sección del mismo. El nuevo diseño de la tabla de actividades de los procesos une la información de las fechas en una misma columna, integrando ahora un ícono de acceso a los detalles de la actividad. También reemplaza el subrayado de la columna estado por un recuadro similar al que se observa en las listas de tareas. Este prototipo se puede observar en la Figura 3.74 que se muestra a continuación. Figura 3.74 Prototipo: Vista principal del gestor (v-3) _ Pestaña: Procesos (v-3) 122 Para la configuración de los parámetros generales del sistema se diseñó una interfaz con un selector, la cual desplegará los parámetros generales requeridos según la selección que se haya realizado. De acuerdo a su clasificación se agruparán de acuerdo a su funcionamiento dentro del sistema para no desplegarlos todos en la misma interfaz y de forma desordenada. El prototipo de la interfaz propuesta, se puede observar en la Figura 3.75. Figura 3.75 Prototipo: Vista principal del gestor (v-3) _ Pestaña parámetros generales (v-1) 3.5.2.2 Implementación de requerimientos A continuación se describe el proceso de desarrollo de las funcionalidades planteadas en los prototipos anteriores, así como su integración con el resto de las vistas del módulo gestor implementado en el sistema CONEST 3.0.  Calendario Académico Para el desarrollo de las pestañas internas, propuestas para la sección de Eventos del gestor, se aprovecharon las pestañas que ofrece JQuery-UI. La interfaz de configuración de los días feriados se estructuró de acuerdo a lo planteado en el prototipo. Las funcionalidades desarrolladas para esta sección comprenden un conjunto de funciones que permiten crear, consultar, actualizar y eliminar los días feriados del sistema. La tabla donde se consultan posee la opción para actualizarlos o eliminarlos. Finalmente, para crear un nuevo día feriado basta con pulsar el botón que se 123 encuentra justo debajo de la tabla, tal como se propuso en el prototipo. La vista final que contiene esta primera pestaña interna de Eventos se puede observar en la Figura 3.76. Figura 3.76 Vista principal del gestor (v-3) _ Pestaña: Eventos - Feriados (v-1) La interfaz perteneciente a la pestaña interna de eventos académicos se despliega en la Figura 3.77 de acuerdo a lo diseñado en el prototipo. En esta, se sigue el mismo modelo que para los días feriados, permitiendo consultar los eventos académicos o administrativos, actualizarlos, eliminarlos o crear un nuevo evento. Es importante destacar que esta actividad también se puede hacer directamente sobre el calendario existente en la interfaz principal del gestor, pero en esta pestaña Eventos se ofrece una forma un poco más cómoda de realizar dicha acción. Figura 3.77 Vista principal del gestor (v-3) _ Pestaña: Eventos - Académicos (v-1) 124 Finalmente, para la pestaña interna de Configuración del calendario, se implementan las funciones planteadas en el diseño que se aprecian en la Figura 3.78. Figura 3.78 Vista principal del gestor (v-3) _ Pestaña: Eventos - Config. (v-1) Después de incluir los días feriados y actividades de eventos al calendario académico del gestor, se procedió a realizar una actualización visual para distinguir entre los eventos correspondientes a días feriados y los correspondientes a actividades académicas o administrativas. En la Figura 3.79 se puede observar que los días feriados ahora aparecen con el número en color gris, mientras que aquellos con eventos académicos o administrativos aparecen subrayados y encerrados en un círculo del color azul oscuro planteado en la guía de estilos. Figura 3.79 Vista principal del gestor (v-3) _ Elemento: Calendario Académico 125  Procesos académicos Tal como se planteó en el diseño, la vista fue ajustada para mostrar la información de las fechas en una misma columna, el color asociado al detalle de la actividad ahora se muestra en un recuadro ubicado a la izquierda del texto, tal como sucede en las listas de tareas de la vista principal del gestor. El ícono de detalles de tareas ahora se enlaza con la misma modal que se diseñó en la iteración anterior para los detalles de las actividades, por tanto permite modificar las fechas de las mismas sin necesidad de ir a las tablas de tareas que se encuentran en la vista principal. Dado los cambios introducidos en el modelo de datos, el algoritmo de cálculo de las fechas aproximadas para las actividades fue modificado para tomar en cuenta los estimados de períodos intensivos. En la Figura 3.80 se pueden observar los cambios del algoritmo e interfaz, reflejados en las actividades del intensivo I-2015. Figura 3.80 Vista principal del gestor (v-3) _ Pestaña: Procesos (v-3)  Parámetros generales Para poder implementar la lógica de configuración de los parámetros generales fue necesario realizar un estudio de la tabla parametro_general del sistema, del cual se obtuvieron dos grandes clasificaciones para los parámetros: 126 Parámetros binarios: Son aquellos cuyo valor se encuentra en un rango de únicamente dos valores posibles, en el caso del sistema CONEST, estos valores son “SI” y “NO”. Parámetros variables: Son aquellos cuyo valor depende exclusivamente del propósito del mismo, en general contienen nombres de autoridades, identificadores asociados a otras tablas del sistema o números que establecen límites para algunas funcionalidades del sistema. De la misma forma, los parámetros generales pueden ser agrupados de acuerdo a su propósito: Control de Estudios: Son los parámetros que guardan la más estrecha relación con las actividades que se realizan a nivel interno en la DCE. Autoridades de la Facultad: Este conjunto de parámetros tienen que ver con las autoridades de la Facultad de Ciencias. Entre ellos se encuentran los nombres de quienes ocupan el cargo de Decano, Director de la DCE, Coordinación Académica, Directores de escuela, etc. Docentes: Agrupan el conjunto de parámetros relacionados a las acciones que tienen que ver con el módulo docentes del sistema CONEST. A través de ellos es posible habilitar y desahabilitar funcionalidades del sistema para los docentes, inclusive limitar la información a la que pueden acceder. Estudiantes: Este conjunto de parámetros corresponde a las actividades del sistema que se relacionan directamente con el módulo estudiantes del sistema CONEST. Al igual que sucede con el módulo docentes, estos parámetros regulan la información y funcionalidades a las cuales los estudiantes tienen acceso desde sus cuentas. Egreso: Como se mencionó en el planteamiento del problema, gran parte del Proceso de Egreso se se lleva a cabo manualmente. Sin embargo existe un pequeño grupo de parámetros dentro del sistema que controlan información relacionada a las actividades de este proceso, tales como el identificador de la promoción actual, los datos del repositorio digital para trabajos de grado, entre otros. Inscripción: Estos parámetros controlan la actividad de Inscripción. A través de ellos se establecen las condiciones o limitaciones que el sistema debe aplicar a cada estudiante que desee llevar a cabo esta actividad. En la Figura 3.81, se muestra parcialmente la vista que se implementó para esta pestaña del gestor. Basado en el tipo y grupo de parámetros que el usuario desee configurar, la vista se actualizar para desplegar los que correspondan a la selección. 127 Figura 3.81 Vista principal del gestor (v-3) _ Pestaña: Parámetros Generales 3.5.3 Fase de Entrega La fase de entrega de esta iteración abarcó dos evaluaciones para determinar la usabilidad del sistema, y finalmente la entrega del módulo gestor. 3.5.3.1 Pruebas funcionales del gestor Se llevaron a cabo a lo largo de la construcción del módulo, donde el equipo de desarrollo se planteaba y realizaba varios casos de pruebas sencillos, determinando el correcto comportamiento de las funcionalidades implementadas, con estas pruebas se detectaron errores menores que fueron corregidos. De igual forma, sirvió como prueba funcional la primera prueba de aceptación realizada en esta iteración, ya que mientras los evaluadores probaban la usabilidad del sistema, descubrieron errores pequeños de validación en algunos formularios, los cuales se tomaron en consideración y fueron depurados. 3.5.3.2 Pruebas de aceptación del gestor En la etapa de pruebas de aceptación se evaluó la usabilidad del módulo gestor a través de dos instrumentos, utilizando en ambos un conjunto de técnicas propuestas por el método AgilUs. 128  Primera prueba Un primer documento se desarrolló con el objetivo deservir de instrumento para registrar los resultados de la Evaluación Heurística realizada, técnica de inspección que evalúa la usabilidad de un sistema. La Evaluación Heurística consiste en la inspección del sistema comprobando si sus elementos cumplen los principios de usabilidad. Es realizado por evaluadores expertos en usabilidad, sin embargo una persona no experta en usabilidad puede hacer las comprobaciones guiados por las pautas de usabilidad de algún experto. El documento está estructurado en forma de lista de comprobación, o checklist, para facilitar la práctica de la evaluación, la cual es realizada por evaluadores con conocimientos básicos de usabilidad, cada punto a evaluar, 32 en total, están formulados como preguntas poco técnicas, dónde la respuesta afirmativa implica que no existe un problema de usabilidad, y la negativa que sí. Puede apreciarse en el Anexo 2. Se realizó la evaluación a dos estudiantes de la Licenciatura Computación, ambos aprobaron con excelente calificación la asignatura Interacción Humano-Computador la cual enseña los aspectos de la usabilidad y su importancia en el diseño de interfaces de cualquier sistema.  Resultados de la primera prueba Figura 3.82 Resultados de la primera prueba de aceptación 129 Cada una de las preguntas son puntos importantes en la elaboración de una interfaz y responden a diferentes criterios de usabilidad a evaluar, entre ellos: generales (en cuanto a objetivo y contenido), redacción y lenguaje, control e interacción con el usuario, estética y diseño, prevención de errores, accesibilidad. Algunos puntos importantes a evaluar como la orientación del usuario (dónde estoy, cómo volver, qué he visitado, qué va a pasar) se evalúan a través de varios criterios: elementos de navegación orientativos, caracterización de los enlaces e información contextual en elementos de interacción (estructura y navegación); distribución visual de la página (lay-out); coherencia del diseño (generales); nivel de significación de los rótulos (rotulado) e interacción del usuario (control e interacción). Los evaluadores sólo difirieron en dos preguntas. Pregunta número 2: ¿Muestra de forma precisa y completa qué contenidos o servicios ofrece realmente? O escrita de otra forma: ¿La página de inicio está diseñada para que se distingan los servicios ofrecidos? Esta pregunta está relacionada directamente con el diseño de la interfaz de inicio, que debe ser diferente al resto de las interfaces y mostrar el contenido que se ofrece en general en el módulo. El evaluador que contestó “no”, hizo la sugerencia de que una descripción en la página de inicio del gestor se vería mejor y es lo ideal para especificar y aclarar los servicios ofertados. Pregunta número 27: ¿El tamaño de fuente se ha definido de forma relativa, o por lo menos, la fuente es lo suficientemente grande como para no dificultar la legibilidad del texto? La pregunta está relacionada con la accesibilidad del módulo. El evaluador expresó: “Una persona mayor tendría dificultades para leer”. Debido al formato de los tamaños de letras predeterminado en todo el sistema CONEST 3.0, la accesibilidad para cierto grupo de personas se ve disminuida, sin embargo el perfil de usuario de este módulo hace referencia a personas entre 20 y 56 años, las cuales no caen en esa categoría. 130  Segunda prueba Se aplicó una extensión de la técnica del Protocolo del Pensamiento Manifestado, el Protocolo de "Responder Preguntas", en el cual al usuario se le hacen preguntas durante la prueba. Se explica al usuario el escenario y funcionamiento de la prueba y se le proporciona la relación de tareas a realizar, pidiéndole que comente en voz alta sus impresiones durante la prueba, sin embargo, también se le harán preguntas específicas sobre la realización de tareas concretas. Se tomarán notas sobre aspectos relevantes de sus respuestas, se anotan los comentarios y observaciones del usuario, se pretende averiguar en qué momento se equivoca o se detiene el usuario al realizar una tarea y también qué es lo que no entiende o le hace dudar. Al igual que en el Protocolo de Pensamiento Manifestado, es una técnica cualitativa. Es importante tanto lo expresado por el usuario, como la forma en que lo hace. Se realizó a tres usuarios que fungen como administradores en la DCE, se les pidió que entraran al sistema, que observaran la página principal y que exploraran las distintas secciones del módulo, mientras se respondían a sus dudas e inquietudes. Algunas de las preguntas realizadas fueron: - ¿Cuál es tu primera impresión del módulo? - Como primera impresión ¿Qué piensas que puedes hacer en el gestor? - Estando en un día normal ¿Piensas que te ayudaría, te sería útil consultar el gestor? - ¿Qué llama tu atención en la página principal? - ¿Cuál crees que es el objetivo del gestor y de su página principal? - ¿Te parecen familiares los elementos de la interfaz? - ¿Se mantienen la consistencia y estándares de CONEST 3.0?  Resultados Usuario 1: “Mi primera impresión, que es bien bonito y se entiende el objetivo: colocar las actividades que debo hacer en el semestre.” “Si creo que me ayudaría a consultar y a la Directora de la DCE, la Profa. Damaris Barrantes, aún más, ya que siempre está pendiente de las fechas de las actividades.” 131 “Si existe consistencia con el resto del sistema CONEST y cubre las actividades de la Gestión Académica y su status lo que es buenísimo porque así sé las actividades que me faltan realizar de cada período. Además publicar en twitter me parece excelente para realizarlo cuando inicia el semestre y se hacen los retiros.” “Es como si estuviera viendo mi carpeta, y esperaba que fuera la misma interfaz amigable de CONEST y que fuera fácil y es fácil, es como ver mi carpeta pero sin twitter; otra cosa que me gusta mucho es que puedo ver los eventos del pasado” “Puedo poner hasta mi cumpleaños para que se vea internamente, está bastante sencillo no le cambiaría nada” Usuario 2: “Mi primera impresión es que la vista es agradable, está chévere la nueva forma de realizar la Inscripción de los Nuevos ingresos, me parece una maravilla poder agregarlos con un documento Excel.” “Me gusta poder ver los eventos por mes y poder editarlos. Me parece que está completo el gestor y más resumido y simple que la ventana que usamos ahorita y me encanta poder ver el calendario y sus eventos al darle clic y poder manipularlos.” “Si, me parece que el sistema está integrado y pertenece a CONEST. Sinceramente lo que más me gusta es lo resumido que está todo” Usuario 3: “Está bien la página de inicio, lo que primero me llama la atención es la franja verde con la línea de tiempo, los colores están bien equilibrados.” “Consultaría en mi día de trabajo esa sección para ver el calendario y las actividades que se deben hacer.” “Funciona, para el objetivo que está hecho, claro falta usarlo cotidianamente para ver si surge algún inconveniente y acostumbrarse a ver todo unido de esta forma.” 132 3.5.3.3 Cierre de la Iteración. Entrega del modulo Esta última iteración tuvo como propósito medir la aceptación del diseño final del módulo gestor, el cual se estima será puesto en producción después del inicio del período 02-2015, dándole suficiente tiempo al personal administrativo para realizar otras pruebas de funcionamiento en el ambiente de desarrollo, a fin de que el equipo encargado pueda depurar los errores y finalmente integrar el módulo totalmente estable en el ambiente de producción. Cabe destacar que el código fuente y los datos utilizados en el módulo se han mantenido sincronizados con los de la aplicación principal a lo largo de todo el proceso de desarrollo, esto con el objetivo de hacer más sencilla su implantación en el ambiente de producción. En el servidor donde se almacenan los repositorios git del sistema CONEST 3.0, se encuentra cargado un script del lenguaje MySQL, que contiene los cambios implementados al modelo de datos principal, del mismo modo, el archivo de gemas de Rails se encuentra actualizado a fin de poder instalar todos los complementos necesarios para el correcto funcionamiento de este proyecto. El equipo de desarrollo se compromete a elaborar y entregar un manual de usuario y un tutorial del módulo gestor para que sirva de orientación al personal de la DCE. 133 Conclusiones El sistema CONEST 3.0, tiene como objetivo principal facilitar el cumplimiento de las distintas actividades relacionadas a los procesos académicos internos de la Facultad de Ciencias de la UCV. A lo largo de este Trabajo Especial de Grado, se estudiaron a fondo los procesos de la Gestión Académica que se llevan a cabo en la Facultad de Ciencias, a fin de contrastar el procedimiento de desarrollo de cada uno de ellos con las actividades que se realizan a través del sistema CONEST 3.0. Se puede concluir que los objetivos planteados al inicio de este TEG fueron alcanzados satisfactoriamente, generando una solución a la problemática planteada que complace al usuario y facilita su labor de realizar la Gestión Académica. Durante este estudio, se identificó como principal problema que las actividades relacionas a los procesos académicos que realiza la DCE se encontraban dispersas dentro del módulo administrativo, por lo tanto sólo aquellos usuarios con conocimientos sobre la estructura y funcionamiento del sistema CONEST 3.0 podrían llevarlas a cabo de manera satisfactoria. Utilizando fundamentos de la Interacción Humano-Computador, que permite mezclar conocimientos de diversas disciplinas, se desarrolló, a través de la aplicación de un método ágil, un módulo gestor para el sistema de Gestión Académica CONEST 3.0 con los siguientes beneficios: 1. Unifica a través de una misma interfaz las funcionalidades del sistema que se relacionan directamente con los procesos de la Gestión Académica. 2. Permite controlar los tiempos de ejecución de las actividades, indicando al usuario las fechas y el lapso durante el cual las mismas deben ser llevadas a cabo. 3. Simplifica la configuración de los parámetros generales del sistema, que controlan variables importantes para el adecuado funcionamiento del mismo. 4. Posee funcionalidades que le dan valor agregado, como indicadores visuales para el estado y progreso de las actividades, así como una sección para compartir eventos a través de las redes sociales de manera sencilla y sin tener que salir del sistema. Para facilitar el seguimiento de las actividades, los indicadores utilizados son las barras de progreso y el estado de las actividades, cada uno con su color propio, ambos probaron ser efectivos llamando la atención de los usuarios sin molestar su visión en la interfaz del módulo, lo cual fue validado en las pruebas con los usuarios. 134 Es de utilidad saber sobre el progreso de un proceso de la Gestión Académica ya que, a través de este, pueden conocer y controlar el avance del Período Académico en curso, informado así al personal de la DCE para llevar a cabo la Gestión Académica sin inconvenientes y en los tiempos planeados. Al poder medir el progreso de un proceso mediante la cantidad de actividades que lo componen se ofrece una perspectiva más tangible y global del trabajo que debe realizarse y permite planificarlo estimando los tiempos que toma realizarlo. Finalmente, después de realizar pruebas a los usuarios que utilizan con mayor frecuencia el módulo administrativo del sistema, se determinó que las funcionalidades ofrecidas en el gestor cubrieron el conjunto de actividades más importantes que el personal de la DCE lleva a cabo en cada proceso. Los usuarios también manifestaron una gran satisfacción con la sencillez de la interfaz del gestor, con la organización de sus elementos y las funcionalidades de valor agregado que fueron integradas al módulo. 135 Trabajos futuros A continuación se presentan algunas sugerencias que el equipo de desarrollo propone para extender y mejorar posteriormente el módulo gestor.  El proceso de Egreso, posee un conjunto de funcionalidades muy puntuales en el sistema, por lo que es posible realizar un estudio de las mismas para establecer la posibilidad de ser integradas al gestor, si es posible incluirlas dentro de un rango de tiempo o si el gestor es posteriormente modificado para manejar actividades con fechas y sin fechas establecidas.  La pestaña de Parámetros Generales debe ser depurada, pues el equipo de desarrollo ha incluido en la clasificación de los mismos una gran parte de parámetros que el personal administrativo generalmente no modifica, y algunos otros de los cuáles se desconoce el propósito específico. Un estudio más profundo de los parámetros registrados permitiría determinar cuáles valores se utilizan realmente en alguna funcionalidad del sistema y cuáles no, con el propósito de hacer una limpieza de datos y evitar que se modifique manualmente aquella información que el sistema requiere manejar automáticamente. 136 Referencias bibliográficas ABC, D. (2007). Definicion ABC. Recuperado el 11 de Mayo de 2015, de http://www.definicionabc.com/general/gestor.php ABC, D. (2007). Definicion ABC. Recuperado el 11 de Mayo de 2015, de http://www.definicionabc.com/economia/autogestion.php Acosta, A. (2011). AgilUs: Un método ágil de desarrollo de software que incorpora la usabilidad. Obtenido de Universidad Central de Venezuela: http://www.ciens.ucv.ve/escueladecomputacion/documentos/archivo/121 Bascón Pantoja, E. (2004). El patrón de diseño Modelo-Vista-Controlador (MVC) y su implementación en Java Swing. Recuperado el 24 de Abril de 2015, de http://www.ucbcba.edu.bo/Publicaciones/revistas/actanova/documentos/v2n4/ v2.n4.bascon.pdf Beck, K., Beedle, M., Van Bennekum, A., Cockburn, A., Cunningham, W., Fowler, M., y otros. (2001). Manifiesto por el Desarrollo Ágil de Software. Recuperado el 21 de Abril de 2015, de http://agilemanifesto.org/iso/es/ Comunidad Rails. (2007). Introducción a Ruby on Rails.Recuperado el 17 de Abril de 2015, de https://librosweb.es/libro/introduccion_rails/ Damián. (2010). ¿Qué es CSS3? Recuperado el 24 de Marzo de 2015, de http://html5.dwebapps.com/que-es-css3/ Fiqus. (2014). Git - Manual de usuario versión 1. Recuperado el 25 de Marzo de 2015, de http://blog.fiqus.com/wp-content/uploads/2014/05/git_manual.pdf Group, O. M. (s.f.). OMG. Recuperado el 27 de mayo de 2015, de BPMN: http://www.bpmn.org/ Insomer. (12 de Agosto de 2014). Asana, el software para gestión de proyectos. Recuperado el 20 de Abril de 2015, de http://www.insomer.com/asana-el- software-para-gestion-de-proyectos/ Jog Raj, M. O. (Septiembre de 2003). Object Management Group. Recuperado el 27 de Mayo de 2015, de http://www.omg.org/bpmn/Documents/6AD5D16960.BPMN_and_BPM.pdf jQuery. (2015). jQuery user interface. Recuperado el 24 de Abril de 2015, de https://jqueryui.com/ jQuery. (2015). jQuery write less, do more.Recuperado el 24 de Abril de 2015, de http://jquery.com/ JSON Org en Español. (s.f.). Introducción a JSON. Recuperado el 27 de Abril de 2015, de http://www.json.org/json-es.html Kiran Garimella, M. L. (2008). Introducción a BPM.Indianápolis, Indiana: Wiley Publishing, Inc. Márquez Avendaño, B. M., & Zulaica Rugarcía, J. M. (12 de Enero de 2004). Implementación de un reconocedor de voz gratuito a el sistema de ayuda a invidentes Dos-Vox en español. Recuperado el 24 de Abril de 2015, de http://catarina.udlap.mx/u_dl_a/tales/documentos/lis/marquez_a_bm/ 137 Mejía, C. E. (23 de 02 de 2009). Strategy & Business Manager CIO S.A. (U. T. (Colombia), Entrevistador) Mozilla Developer Network. (2014). HTML. Recuperado el 22 de Marzo de 2015, de https://developer.mozilla.org/es/docs/Web/HTML MySQL. (2011). MySQL 5.6 Reference Manual. Recuperado el 25 de Marzo de 2015, de http://downloads.mysql.com/docs/refman-5.6-en.pdf Peñafiel, M. (15 de Abril de 2015). Aplicaciones Web. Recuperado el 24 de Abril de 2015, de http://es.scribd.com/doc/136052164/APLICACIONES-WEB-pdf Quiroga, J. P. (s.f.). Requerimientos funcionales y no funcionales. Recuperado el 26 de Marzo de 2015, de https://sistemas.uniandes.edu.co/~csof5101/dokuwiki/lib/exe/fetch.php?media =principal:csof5101-requerimientos.pdf Ruby Org. (2015). Sitio en español de la organización Ruby. Recuperado el 22 de Marzo de 2015, de https://www.ruby-lang.org/es/ Sánchez, J. (2003). Manual de referencia de JavaScript. Obtenido de http://www.jorgesanchez.net/web/javascript.pdf W3Schools. (2015). AJAX Introduction. Recuperado el 27 de Abril de 2015, de http://www.w3schools.com/Ajax/ajax_intro.asp Walker, G. (2011). HTML5. Recuperado el 23 de Marzo de 2015, de http://www.ibm.com/developerworks/ssa/web/library/wa-html5fundamentals/ 138 Anexos Anexo 1 139 Anexo 2 Lista de comprobación 1) ¿Se entiende el propósito del módulo y los servicios que ofrece van acorde al mismo? 2) ¿La página de inicio está diseñada para que se distingan los servicios ofrecidos? 3) ¿Es coherente el diseño general del módulo? 4) ¿Emplea un lenguaje claro y conciso? ¿Habla el mismo lenguaje que sus usuarios? 5) ¿El lenguaje usado es respetuoso, familiar y cercano, no es ofensivo ni desprecia al usuario? 6) El título de las secciones del módulo, ¿Dan a entender de forma clara la información que contendrán? 7) Los rótulos, ¿son significativos? 8) ¿Utiliza un sistema de rotulado controlado y preciso? 9) En menús de navegación, ¿Se ha controlado el número de elementos y de términos por elemento para no producir sobrecarga de memoria? 10) ¿Se ha controlado que no haya enlaces que no llevan a ningún sitio? 11) ¿Existen elementos de navegación que orienten al usuario acerca de dónde está y cómo deshacer su navegación? 12) ¿Se ha evitado la redundancia de enlaces? 13) ¿Se ha controlado que no haya páginas "huérfanas"? 14) ¿El diseño del módulo es minimalista? 15) ¿Se aprovechan las zonas de alta jerarquía informativa del módulo para contenidos de mayor relevancia? Ejemplo la zona central. 16) ¿Se ha evitado la sobrecarga informativa? 17) ¿Es una interfaz limpia, sin ruido visual? 18) ¿Hay áreas bien delimitadas y en orden? 19) ¿Existen zonas en "blanco" entre los objetos informativos del módulo para poder descansar la vista? 20) ¿Se hace un uso correcto del espacio visual de las secciones del módulo? 21) ¿Se ha controlado la longitud de las secciones del módulo? Que hacer “scrolling” sea poco. 22) ¿Los gráficos son acordes a lo que desempeñan? 23) ¿Los colores son agradables a la vista? 24) ¿Las metáforas visuales son reconocibles y comprensibles por cualquiera de los usuarios? 25) ¿El uso de imágenes o animaciones proporciona algún tipo de valor añadido? 26) ¿Se ofrece ayuda contextual en tareas? 27) ¿El tamaño de fuente se ha definido de forma relativa, o por lo menos, la fuente es lo suficientemente grande como para no dificultar la legibilidad del texto? 28) ¿El tipo de fuente, efectos tipográficos, ancho de línea y alineación empleadas facilitan la lectura? 29) ¿Existe un alto contraste entre el color de fuente y el fondo? Los colores de ambos permiten la lectura 30) Cuando se produce un error, ¿se informa de forma clara y no alarmista al usuario de lo ocurrido y de cómo solucionar el problema? 31) ¿Se ha controlado el tiempo de respuesta? El tiempo que tarda el servidor en finalizar una tarea y responder al usuario. 32) ¿Se informa al usuario de lo que ha pasado cuando éste realiza alguna actividad en el módulo?