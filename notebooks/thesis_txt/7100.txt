Universidad Central de Venezuela Facultad de Ciencias Escuela de Computación Desarrollo de estrategias de inversión algoŕıtmica en mercados de valores basadas en aprendizaje automático Trabajo Especial de Grado presentado ante la Ilustre Universidad Central de Venezuela Por el Bachiller Leonardo Santella Tutor: Prof. Hector Navarro Caracas, junio de 2018 ii Agradecimientos Gracias a mi familia, ya que ellos son mi soporte y mi inicio en muchos aspectos. Gracias los profesores que expusieron sus conocimientos relacionados con la mineŕıa de datos y el Aprendizaje automático, a ellos les debo el interés incesante en estas áreas de estudio. Gracias al Ing. Alexander Ramı́rez por su aporte de ideas relacionadas con el trading. Gracias a mi amigo Alan Urbina por su apoyo en general. Gracias a la aldea y a todos aquellos compañeros y amigos que no menciono por los buenos momentos. Gracias al profesor y amigo Fernando Crema, a mis amigos Deyban Pérez y Eric Bellet por todo su aporte de ideas en esta investigación, y en general, por su incondicional apoyo. Gracias a Karina Garćıa por su compañia, cariño y apoyo durante todo este trabajo. Gracias a mi tutor, profesor y amigo Hector Navarro por sus consejos y tiempo durante todo este trabajo. Dedicado a mis abuelos, Leonardo Dambrosio, Velia Galante, Luigia Di Buono y Antonio Santella. iii iv Resumen T́ıtulo Desarrollo de estrategias de inversión algoŕıtmica en mercados de valores basadas en apren- dizaje automático. Autor: Leonardo Santella. Tutores: Prof. Hector Navarro. La automatización de los procesos realizados por humanos dio origen a la computación. Desde el simple calculo de operaciones matemáticas hasta el reconocimiento de d́ıgitos escritos a mano, son ejemplos de procesos de automatización en la actualidad. Actualmente, en los mercados de valores en los EEUU, la mayor parte de las transacciones son realizadas por algoritmos que operan en la bolsa, también denominados sistemas automáticos de trading. La utilización de sistemas automatizados en mercados ha sido la tendencia en la industria financiara durante los últimos años. Una de las mas grandes atracciones de dichos sistemas es que a través de ellos se eliminan las emociones de los operadores humanos, ya que todo se encuentra sistematizado. Como enfoque innovador en el área, han surgido tendencias en donde se involucran modelos de aprendizaje automático para mejorar el desempeño de estos sistemas automatizados. Por lo expuesto previamente, en el presente trabajo especial de grado se realizó un estudio de las tendencias de investigación entre las áreas de ML y finanzas, espećıficamente, trading de acciones en el mercado de valores de los EEUU, utilizando datos técnicos de empresas bien conocidas en el área de la computación, para diseñar e implementar estrategias o sistemas automatizados de trading los cuales son apoyados por modelos de aprendizaje supervisados, bien conocidos en el área de ML, obteniendo aśı resultados que no demuestran un buen rendimiento a nivel de modelos de ML pero que aun aśı, tomando en v cuenta la información que proveen los modelos, en conjunto con otros criterios de decisión, implementar una estrategia de inversión automatizada la cual tiene un mejor desempeño que el resto de estrategias las cuales no toman en cuenta ningún modelo de ML para tomar decisiones. Palabras clave: Mercados, aprendizaje automático, modelos, predicción, acciones, finanzas, retornos, tra- ding. vi Tabla de contenidos Índice de figuras IX Índice de tablas XI 1. Introducción 1 1.1. Objetivo general . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 1.2. Objetivos espećıficos . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 1.3. Justificación . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 1.4. Distribución del documento . . . . . . . . . . . . . . . . . . . . . . . . . . . 3 2. Marco teórico 5 2.1. Descripción general del trading y las finanzas . . . . . . . . . . . . . . . . . . 5 2.2. Finanzas . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5 2.3. Análisis técnico . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 8 2.3.1. Filosof́ıa o razón de ser . . . . . . . . . . . . . . . . . . . . . . . . . . 8 2.3.2. Tendencia . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 9 2.3.3. Momento . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 9 2.3.4. Indicadores técnicos . . . . . . . . . . . . . . . . . . . . . . . . . . . . 10 2.4. Trading automatizado . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 18 2.4.1. Resumen . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 18 2.4.2. Motivación . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 20 2.5. Aprendizaje automático (ML - Machine Learning) . . . . . . . . . . . . . . . 21 2.6. Técnicas de aprendizaje automático . . . . . . . . . . . . . . . . . . . . . . . 21 2.6.1. Aprendizaje supervisado . . . . . . . . . . . . . . . . . . . . . . . . . 21 2.6.2. Aprendizaje no-supervisado . . . . . . . . . . . . . . . . . . . . . . . 29 2.7. Proceso de ML . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 32 2.7.1. Recolección de los datos . . . . . . . . . . . . . . . . . . . . . . . . . 32 2.7.2. Selección de caracteŕısticas . . . . . . . . . . . . . . . . . . . . . . . . 33 2.7.3. Selección del algoritmo . . . . . . . . . . . . . . . . . . . . . . . . . . 33 2.7.4. Selección de los parámetros y el modelo . . . . . . . . . . . . . . . . . 33 2.7.5. Entrenamiento . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 33 2.7.6. Evaluación . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 33 vii 2.8. Herramientas de software . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 36 2.8.1. R . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 36 2.8.2. Python . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 37 2.8.3. WEKA . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 37 2.8.4. MATLAB . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 37 2.9. Antecedentes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 38 2.10. Estrategias de trading automáticas basadas en ML . . . . . . . . . . . . . . 38 2.10.1. Estrategias basadas en aprendizaje supervisado . . . . . . . . . . . . 39 2.10.2. Estrategias basadas en aprendizaje no-supervisado . . . . . . . . . . . 39 2.10.3. Estrategias h́ıbridas . . . . . . . . . . . . . . . . . . . . . . . . . . . . 40 2.11. Objetivos de las estrategias de trading basadas en ML . . . . . . . . . . . . . 40 2.12. Flujo de trabajo general para el desarrollo de estrategias de trading basadas en ML . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 40 2.13. Herramientas utilizadas . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 46 3. Marco aplicativo 47 3.1. Metodoloǵıa . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 47 3.2. Consideraciones de diseño . . . . . . . . . . . . . . . . . . . . . . . . . . . . 47 3.2.1. Flujo de entrenamiento . . . . . . . . . . . . . . . . . . . . . . . . . . 49 3.2.2. Flujo de prueba . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 50 3.2.3. Creación de la estrategia . . . . . . . . . . . . . . . . . . . . . . . . . 50 3.2.4. Evaluación de la estrategia . . . . . . . . . . . . . . . . . . . . . . . . 50 3.3. Consideraciones de implementación . . . . . . . . . . . . . . . . . . . . . . . 51 3.4. Infraestructura de la solución . . . . . . . . . . . . . . . . . . . . . . . . . . 51 4. Análisis e interpretación de los resultados 53 4.1. Recolección de los datos . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 53 4.2. Pre-procesamiento . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 55 4.3. Evaluación de los modelos . . . . . . . . . . . . . . . . . . . . . . . . . . . . 57 4.4. Evaluación de la estrategia . . . . . . . . . . . . . . . . . . . . . . . . . . . . 60 4.5. Trabajos relacionados . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 61 5. Conclusiones 65 5.1. Contribuciones . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 66 5.2. Limitaciones . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 66 5.3. Trabajos futuros . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 66 Referencias 69 viii Índice de figuras 2.1. Ejemplo de tendencia bajista. . . . . . . . . . . . . . . . . . . . . . . . . . . 10 2.2. Ejemplo de tendencia alcista. . . . . . . . . . . . . . . . . . . . . . . . . . . 11 2.3. Ejemplo de tendencia lateral. . . . . . . . . . . . . . . . . . . . . . . . . . . 12 2.4. Ejemplo de media móvil simple. . . . . . . . . . . . . . . . . . . . . . . . . . 13 2.5. Ejemplo de media móvil exponencial. . . . . . . . . . . . . . . . . . . . . . . 14 2.6. Ejemplo de bandas de Bollinger. . . . . . . . . . . . . . . . . . . . . . . . . . 15 2.7. Ejemplo de ı́ndice de momento estocástico. . . . . . . . . . . . . . . . . . . . 17 2.8. Ejemplo de RSI. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 18 2.9. Regresión lineal. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 22 2.10. Función sigmoide. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 24 2.11. SVM [1]. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 26 2.12. Árbol de decisión. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 27 2.13. Red neuronal [1]. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 29 2.14. Clustering de 3 conjuntos [1]. . . . . . . . . . . . . . . . . . . . . . . . . . . 30 2.15. Flujo de trabajo convencional para pronosticar series de tiempo [2]. . . . . . 41 2.16. Flujo de trabajo de estrategia basada en pronósticos de series de tiempo [2]. 42 4.1. Precios de cierre. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 55 4.2. Diferencia entre la mayoŕıa de los indicadores y el indicador RSI. . . . . . . . 56 4.3. Clase. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 57 4.4. Gráfico de barras de la clase del primer año de la acción AAPL. . . . . . . . 58 4.5. Retornos acumulados de estrategia B&H de cada acción y un portafolio uni- formemente balanceado de las 4 acciones. . . . . . . . . . . . . . . . . . . . . 61 4.6. Retornos acumulados de estrategia B&H del Portfolio uniformemente balan- ceado vs. ETF SPY . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 62 4.7. Retornos acumulados de las estrategias implementadas. . . . . . . . . . . . . 63 ix x Índice de tablas 2.1. Matriz de confusión. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 35 2.2. Clasificación de trabajos por variables de entrada[3]. . . . . . . . . . . . . . . 43 2.3. Clasificación según el universo de valores[4]. . . . . . . . . . . . . . . . . . . 44 2.4. Clasificación respecto a las metas principales[2]. . . . . . . . . . . . . . . . . 45 2.5. Clasificación según las tecnoloǵıas[3]. . . . . . . . . . . . . . . . . . . . . . . 45 2.6. Clasificación por métodos de evaluación [3]. . . . . . . . . . . . . . . . . . . 46 3.1. Variables de entrada[5]. Donde x(t), xh(t), xl(t) y v(t) corresponden a los pre- cios de cierre, alto, bajo, y al volumen, respectivamente, en el d́ıa t; bollingerupper y bollingerlower corresponden a las bandas de Bollinger; PMAs y PMAl co- rresponden a medias móviles simples de corto y largo plazo, respectivamente; VMAs y VMAl corresponden a medias móviles simples de corto y largo plazo, respectivamente, aplicadas al volumen; por último, %K(t) y %D(t) correspon- den a las ĺıneas rápida y lenta, respectivamente, del oscilador estocástico. . . 49 4.1. SPY - OHLCV . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 53 4.2. AAPL - OHLCV . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 54 4.3. AMZN - OHLCV . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 54 4.4. GOOGL - OHLCV . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 54 4.5. IBM - OHLCV . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 54 4.6. Descripción de los datos . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 54 4.7. Descripción de los conjuntos de datos de cada acción. Estos conjuntos de datos están conformados por los indicadores mencionados en la Tabla 3.1 luego de limpiar los datos y adjuntar a cada conjunto la columna respectiva a la clase. 57 4.8. Balanced accuracy . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 58 4.9. Specificity . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 59 4.10. Recall . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 59 4.11. Mejores modelos con respecto a la métrica specificity. . . . . . . . . . . . . . 59 4.12. Mejores modelos con respecto a la métrica recall. . . . . . . . . . . . . . . . 59 4.13. Mejores modelos con respecto a la métrica balanced accuracy. . . . . . . . . . 59 4.14. My caption . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 60 xi xii Siglas ANN Red Neural. Artificial Neural Networks B&H Comprar y Mantener. Buy & Hold DT Árbol de Decisión. Decision Tree EEUU Estados Unidos EMA Media Móvil Exponencial. Exponential Moving Average EMH Hipótesis de los Mercados Eficientes.Efficient Market Hypothesis FNN Red Neuronal Anticipativa. Feedforward Neural Network HFT trading de alta frecuencia. High Frequency Trading IDE Entorno de Desarrollo Integrado. Integrated Development Environment IPO Oferta Pública Inicial. Initial Public Offering KNN K-Vecinos. K-Nearest Neighbors LR Regresión Loǵıstica. Logistic Regression ML Aprendizaje Automático. Machine Learning pp. 2, 3 MLP Perceptrón multicapa. Multi-Layer Perceptron NA No disponible. Not Available PNN Red Neuronal Probabiĺıstica. Probabilistic Neural Network RSI Índice de fuerza realtiva. Relative Strength Index SMA Media Móvil Simple. Simple Moving Average S&P Standard & Poor’s Index SVM Máquinas de vectores soporte. Support Vector Machine TEG Trabajo Especial de Grado xiii xiv Caṕıtulo 1 Introducción La automatización de los procesos realizados por humanos dio origen a la computación. Desde el simple calculo de operaciones matemáticas hasta el reconocimiento de d́ıgitos escritos a mano, son ejemplos de procesos automatizados en la actualidad. Actualmente, en los mercados de valores en los EEUU, la mayor parte de las transacciones son realizadas por algoritmos que operan en la bolsa, también denominados sistemas automáticos de trading. La utilización de sistemas automatizados en mercados de valores ha sido la tendencia en la industria financiera durante los últimos años. Un sistema automatizado de trading utiliza modelos cuantitativos avanzados para generar ciertas decisiones a la hora de operar en los mercados, automáticamente env́ıa una ordenes al mercado y, a su vez, las gestiona luego de que estas fueron procesadas. Una de las más grandes atracciones de dichos sistemas es que a través de ellos se eliminan las emociones de los operadores humanos, ya que todo se encuentra sistematizado, incluso, estas tecnoloǵıas pueden reducir costos y mejorar la liquidez en el mercado[6]. Existen tres pasos necesarios para la construcción de un sistema automatizado de trading. Primero, el sistema tiene que tener algún modelo que genere predicciones sobre el mercado de valores. Segundo, una estrategia que debe ser especificada para operar en un mercado, que toma en cuenta las predicciones del mercado como entrada y como salida produce las ordenes que serán enviadas al mercado. Por último, es necesario evaluar el rendimiento del sistema en datos históricos del mercado para determinar la viabilidad de dicho sistema. Actualmente, la investigación se ha enfocado en la precisión de las predicciones, pero tendiendo a ignorar los otros dos pasos que son de suma importancia en la construcción de un sistema automatizado de trading confiable y lucrativo. Con lo descrito en el párrafo anterior, surgen las preguntas: ¿Es posible desarrollar un mode- lo de aprendizaje automático que pueda predecir las alzas y bajas del mercado? ¿Es posible desarrollar y evaluar sistemas automatizados de trading utilizando como datos de entrada los pronósticos de los modelos que busquen predecir las alzas o bajas del mercado? Estas preguntas será respondida diseñando, implementando y analizando modelos de clasificación 1 de aprendizaje automático, utilizando como métrica base los datos proporcionados en las matrices de confusión que permitan medir el desempeño general de cada modelo, posterior- mente, se diseñará, implementará y analizará una estrategia de trading que tome en cuenta las predicciones de los modelos para tomar decisiones de entrada o salida en el mercado de valores de EEUU. 1.1. Objetivo general Aplicación de las técnicas y tecnoloǵıas del ML a la definición y aplicación de estrategias de Inversión en el mercado de Capitales. 1.2. Objetivos espećıficos Indagar en el estado actual de la investigación acerca del desarrollo de estrategias de inversión en mercados de capitales, basadas en ML. Diseñar e implementar estrategias de inversión que involucren modelos de ML. Evaluar y comparar los resultados de diferentes estrategias. Identificar mecanismos o técnicas de ML que mejoren el desempeño de los portafolios. Registrar los resultados y consideraciones encontradas durante la implementación de la propuesta. 1.3. Justificación Con el crecimiento exponencial de los datos debido al uso global de Internet, se evidencia una creciente acumulación de datos generados por infinidades de dispositivos que tienen acceso a Internet. Los mercados se han visto envueltos en este uso exponencial de Internet, ya que muchos de estos tienen la capacidad de ser operados a través de Internet. Esto hace que los participantes del mercado se mantengan generando datos de manera constante. Además, la información de los precios generada, referente a los instrumentos que se intercambian en estos mercados, es pública y gratuita. Existe la necesidad de los participantes de estos mercados de generar ganancias a través de la compra y venta de instrumentos financieros. Una de las formas conocidas para generar ganancias a través de los mercados es tratar de entender la mecánica de los precios y actuar en base al comportamiento del mercado, sabiendo como se va a comportar en un futuro. 2 Existen varios enfoques para analizar los mercados, sin embargo todos ellos tienen como objetivo tratar de predecir su comportamiento para actuar en base a este. Los enfoques vaŕıan en las variables que toman en cuenta cada uno de ellos. Un enfoque ampliamente utilizado para analizar los mercados es el análisis técnico. Este se basa en observar únicamente el precio y el volumen de algún instrumento. En conjunto con el auge de Internet, el hardware de las computadoras mejoró notablemente, con respecto al momento en que se crean los conceptos de ML. En la actualidad, se implemen- tan modelos de ML para resolver problemas que antes, debido a restricciones de hardware, era bastante complicado. Los modelos de ML permiten la obtención de información a través del uso de los datos. Los datos son utilizados para conformar dichos modelos y la informa- ción obtenida a través de los modelos es utilizada para diferentes tareas. En el caso de los mercados financieros, es posible beneficiarse de los modelos de ML para obtener información y apoyar la toma de decisiones con respecto a una compra o venta de un instrumento de manera automática, haciendo uso de estrategias algoŕıtmicas. Con base en lo anterior, se observa que: existe la necesidad de generar ganancias por parte de los participantes del mercado; existe la posibilidad de obtener datos acerca de los precios y el volumen de los instrumentos financieros que se intercambian en los mercados y existen modelos que buscan describir y predecir comportamientos, basándose en datos. De esta ma- nera surge la necesidad de saber si es posible obtener ganancias en los mercados financieros haciendo uso de modelos de ML. La realización de este trabajo se ve justificada en la impor- tancia que comprenden los mercados financieros como también, el ML, en el mundo y en la comunidad cient́ıfica. Este trabajo podrá ser utilizado para otros TEG que se relacionen con los mercados financie- ros y con el ML. Además, el material generado podrá ser utilizado en asignaturas relacionadas con el ML, tales como Inteligencia Artificial y Mineŕıa de Datos. 1.4. Distribución del documento Una vez descrito el escenario, este trabajo busca responder las interrogantes planteadas al principio de este caṕıtulo. Aśı mismo, el documento consta de 5 caṕıtulos. El Caṕıtulo 1 in- troduce el problema a tratar, los objetivos planteados y la justificación de la investigación. El Capitulo 2 establece las bases teóricas necesarias para el correcto entendimiento del trabajo, en este caṕıtulo se incluyen conceptos importantes relacionados con las áreas de finanzas y aprendizaje automático. En el Caṕıtulo 3 se establece la metodoloǵıa y consideraciones a tomar a la hora de implementar las actividades que involucra el desarrollo, implementación y evaluación de los modelos y estrategias de trading. El Caṕıtulo 4 describe los resultados obtenidos durante el experimento y el análisis correspondiente de cada etapa. Por último, el Caṕıtulo 5 presenta las conclusiones del trabajo, describiendo los aportes, limitaciones y planteamiento de trabajos futuros. 3 4 Caṕıtulo 2 Marco teórico 2.1. Descripción general del trading y las finanzas En este caṕıtulo se describen los conceptos relacionados al trading, la inversión algoŕıtmica y a las finanzas. El caṕıtulo está estructurado en tres secciones. En la Sección 2.2 se definen varios conceptos relacionados con las finanzas que se utilizan a lo largo del documento, en esta sección se utiliza como base bibliográfica el sitio web Investopedia1. En la sección 2.3 se definen conceptos del análisis técnico, en esta sección se utiliza como base bibliográfica el trabajo de Murphy[7]. Por último, en la Sección 2.4 se realiza una śıntesis de los términos y conceptos, como también, la definición de otros términos relacionados a los sistemas que operan automáticamente en los mercados de valores. En esta sección se utiliza como base bibliográfica el trabajo de Lu[6]. 2.2. Finanzas Las finanzas estudian la manera en que la gente asigna recursos escasos en el transcurso del tiempo. Dos caracteŕısticas que distinguen las decisiones financieras y otras decisiones rela- cionadas con la distribución o asignación de recursos, consisten en que los costos y beneficios de las primeras: se distribuyen a lo largo del tiempo y, ni los decisores ni los demás suelen conocerlos anticipadamente con certeza. Por ejemplo, al decidir si debe uno o no tener su propio restaurante, es necesario comparar los costos (como la inversión en instalar el local y comprar cocinas, mesas, sillas, pequeñas sombrillas de papel para servir bebidas exóticas y el resto del equipo que se requiera) con los beneficios inciertos (las ganancias futuras) que esperan obtener durante varios años[8]. 1www.investopedia.com 5 www.investopedia.com La teoŕıa financiera consta de una serie de conceptos que nos ayudan a organizar ideas sobre cómo asignar recursos en el transcurso del tiempo y de un grupo de modelos cuantitativos que nos permiten evaluar alternativas, adoptar decisiones y realizarlas. Los mismos conceptos básicos y modelos cuantitativos se aplican a todos los niveles de la toma de decisiones: desde de alquilar un automóvil o iniciar un negocio hasta la decisión del director financiero de una gran empresa de entrar en la industria de las telecomunicaciones o la decisión del Banco Mundial acerca de cuáles proyectos de desarrollo financiar[8]. A continuación, se definen una serie de conceptos relacionados con las finanzas y que a su vez tienen un rol fundamental a la hora de desarrollar sistemas de inversión automática. Mercado: Un mercado es un medio que permite a los compradores y vendedores de un bien o servicio espećıfico, interactuar con el fin de facilitar el intercambio. Este tipo de mercado puede ser un mercado f́ısico donde las personas se reúnen para intercambiar bienes y servicios en persona, como en un bazar, o centro comercial; o un mercado virtual en donde compradores y vendedores no interactúan, como en un mercado en ĺınea[9]. Acción: Una acción en el mercado financiero es un t́ıtulo emitido por una sociedad que representa el valor de una de las fracciones iguales en que se divide su capital social. Las acciones, generalmente, confieren a su titular, llamado accionista, derechos poĺıticos, como el de voto en la junta de accionistas de la entidad, y económicos, como participar en los beneficios de la empresa[10]. Mercado de valores: Es el lugar donde se intercambian acciones de empresas públi- cas. Una empresa pasa a ser pública cuando realiza una Oferta Pública Inicial (IPO - Initial Public Offering), que significa que cualquier inversionista alrededor del mundo puede comprar o intercambiar acciones en la compañ́ıa[6]. Estos mercados también son conocidos comúnmente como bolsas de valores. Inversión: Una inversión, en el sentido económico, es una colocación de capital pa- ra obtener una ganancia futura. Esta colocación supone una elección que resigna un beneficio inmediato por uno futuro y, por lo general, improbable. En el caso particular de inversión financiera, los recursos se colocan en t́ıtulos, valores, y demás documentos financieros, a cargo de otros entes, con el objeto de aumentar los excedentes disponibles por medio de la percepción de rendimientos, intereses, dividen- dos, variaciones de mercado, u otros conceptos. Especulación: Especular es toda aquélla operación comercial en la que se busca obte- ner algún lucro a corto plazo. El operar en la bolsa o hacer trading, busca obtener lucro a corto plazo en la mayoŕıa de los casos. Una manera común de especular es comprar un producto a cierto precio, cierto d́ıa y al d́ıa siguiente venderlo a un precio mayor. En la bolsa de valores, los precios se mueven de acuerdo a la oferta y la demanda. Los traders buscan ineficiencias en el mercado para lucrarse. A partir de este punto, a lo largo del documento se utilizará el termino trading y operar, de manera indistinta, 6 para referirse al hecho de operar en la bolsa con el objetivo de obtener lucro a corto plazo. Liquidez: La liquidez se es la capacidad de un activo de convertirse en dinero gastable en el corto plazo sin tener que arriesgar a vender ese activo a un precio más barato. Cuando se dice que un mercado es ĺıquido significa que en ese mercado se mueve mucho dinero y por lo tanto será fácil intercambiar activos de ese mercado por dinero[11]. Existen mercados de valores donde la liquidez es mayor que en otros. En los mercados con mayor liquidez es posible realizar ventas en corto2 mientras que en mercados poco ĺıquidos no es posible. Retorno: Es la ganancia o la perdida de un instrumento financiero en un peŕıodo de tiempo. Los retornos consisten en la renta y las ganancias capitales de una inversión y se expresa habitualmente en forma de porcentaje. Una regla general es que a mayor riesgo, mayores serán las ganancias o las perdidas[12]. Matemáticamente se puede expresar de esta manera: Retorno(t) = V alor(t) V alor(t− 1) − 1 (2.1) Donde: • t es un peŕıodo de tiempo. Riesgo:El riesgo implica la posibilidad de que el retorno real de una inversión será di- ferente de la rentabilidad esperada. El riesgo incluye la posibilidad de perder parte o la totalidad de la inversión original. Las diferentes versiones de riesgo generalmente se miden mediante el cálculo de la desviación estándar3 de los retornos históricos o los retornos promedio de una inversión espećıfica[14]. Eficiencia de mercado: La eficiencia del mercado se refiere al grado en que los precios de las acciones y otros precios de los valores reflejan toda la información disponible y relevante Hipótesis de los mercados eficientes (EMH - Efficient Market Hypothesis): La Hipótesis de los Mercados Eficientes es una teoŕıa que afirma que es imposible ”ven- cer al mercado”4 debido a que la eficiencia del mercado de valores causa que los precios de las acciones existentes siempre incorporen y reflejen toda la información relevante. De acuerdo con EMH, los valores siempre se transan a un valor justo en los mercados 2Las ventas en corto son un tipo de acción permitida en los mercados. Un operador puede tomar una posición de venta sin tener el instrumento financiero que se desea vender. El operador toma prestado cierta cantidad y lo vende a un precio, luego, si el precio baja, el operador tendrá la oportunidad de comprar la misma cantidad que tomó prestada y lucrarse de la diferencia. De esta manera es posible lucrarse en mercados bajistas. 3Una definición de desviación estándar puede ser encontrada en [13]. 4Vencer al mercado significa generar mayores ganancias que el ı́ndice del mercado en cuestión. 7 de valores, haciendo imposible para los inversionistas comprar valores infravalorados 5 o vender valores a precios inflados. Como tal, debe ser imposible superar el mercado general a través de la selección de valores por expertos o la sincronización del mer- cado, y la única manera en que un inversionista puede obtener mayores beneficios es mediante inversiones más riesgosas.[15]. Índice: Un Índice es un indicador o una medida de algo, en finanzas, t́ıpicamente se refiera a una medida estad́ıstica de cambio en el mercado de valores. En el caso de ı́ndices de mercados financieros, valores y bonos, estos consisten en una cartera de valores hipotética que representa un segmento en particular del mercado. El S&P500 y el US Aggregate Bond Index son puntos de referencia para el mercado americano de valores y bonos, respectivamente[16]. Sistemas de trading algoŕıtmico: El trading algoŕıtmico, también conocido co- mo algotrading y black-box trading, es un sistema de trading que utiliza modelos ma- temáticos avanzados y complejos y fórmulas para tomar decisiones de alta velocidad y transacciones en los mercados financieros. El comercio algoŕıtmico implica el uso de programas informáticos rápidos y algoritmos complejos para crear y determinar estrategias de negociación para obtener rendimientos óptimos[17]. En la actualidad, muchas firmas importantes de inversiones utilizan este método. Ya que a través de las computadoras es posible eliminar el factor emocional que hace que los humanos tomen decisiones no calculadas. Además, al construir un sistema algoŕıtmico de trading, es posible ponerlo a prueba utilizando datos del pasado y medir el rendimiento en uno o varios intervalos de tiempo en el pasado. 2.3. Análisis técnico El análisis técnico es el estudio de la acción del mercado, principalmente a través de gráficos, para el propósito de pronosticar tendencias de precios. El término “acción del mercado” incluye tres fuentes principales de información disponible para el técnico[7]. Estas fuentes son el precio, el volumen y el interés abierto. El interés abierto es utilizado solo en el mercado de opciones, de manera que no se tomará en cuenta a lo largo de este documento. En esta sección se describen las bases fundamentales del análisis técnico y se explican los indicadores técnicos más utilizados. 2.3.1. Filosof́ıa o razón de ser Existen tres premisas que sustentan el enfoque de análisis técnico: 5por debajo de su valor intŕınseco 8 1. La acción del mercado descuenta todo. 2. Los precios se mueven en tendencias. 3. La historia se repite. En primera afirmación, se toma en cuenta solo la acción del mercado, obviando el resto de la información que puede influenciar los movimientos de los precios, ya que se asume que la acción del mercado refleja el resto de la información relevante. En la segunda afirmación, “los precios de mueven en tendencias” es un concepto fundamental del enfoque técnico. Si no se asume esta premisa no tendŕıa sentido el análisis técnico, ya que el propósito de graficar la acción del mercado es identificar tendencias en etapas tempranas con el propósito de operar en favor de la tendencia. Gran parte del análisis técnico y el estudio de la acción del mercado tiene que ver con el estudio de la psicoloǵıa humana. Los patrones que se identifican en los gráficos son categorizados con el paso de los años. Estos patrones revelan el la psicoloǵıa del mercado y como estos patrones funcionaron bien en el pasado, se asume que continuaran funcionando bien en el futuro[7]. 2.3.2. Tendencia El concepto de tendencia es absolutamente esencial para el enfoque del técnico del análisis de los mercados. Todas las herramientas utilizadas por el analista técnico tienen el único propósito de medir la tendencia del mercado con el objetivo de participar en ella[7]. En un sentido general, la tendencia es simplemente la dirección del mercada, en qué dirección se está moviendo. Sin embargo, es necesario una definición más precisa con la que trabajar. En primer lugar los mercados no suelen moverse en ĺınea recta en ninguna dirección. Los movimientos del mercado se caracterizan por una serie de zigzags (picos y valles). Es la dirección de esos picos y valles lo que constituye la tendencia del mercado. Cuando esos picos y valles se mueven hacia arriba, hacia abajo o hacia los costados, nos están indicando la tendencia del mercado. Una tendencia ascendente se define como una serie de picos y valles sucesivamente mas altos. Una tendencia descendente seŕıa lo contrario, una serie de picos y valles en declive. Los picos y valles horizontales identifican una tendencia lateral en los precios[7]. En la Figura 2.1 se muestra un ejemplo de tendencia bajista, en la Figura 2.2 se muestra un ejemplo de tendencia alcista y en la Figura 2.3 un ejemplo de tendencia lateral. 2.3.3. Momento Momento es la tasa de aceleración del precio o volumen de un valor. En el análisis técnico, el momento se considera un oscilador6 y se utiliza para ayudar a identificar las ĺıneas de 6Los osciladores son indicadores que tienen limite superior e inferior. Son ampliamente utilizados cuando el mercado se encuentra en tendencia lateral. Sin embargo, pueden ser utilizados en cualquier ocasión, 9 Figura 2.1: Ejemplo de tendencia bajista. tendencia[18]. En general, momento se refiere a la fuerza o velocidad de movimiento. Por lo general se define como una tasa. En el mundo de las inversiones, el impulso se refiere a la tasa de cambio en los movimientos de precios de un activo particular, es decir, la velocidad a la que el precio está cambiando[18]. 2.3.4. Indicadores técnicos Los indicadores técnicos son funciones matemáticas formadas a partir de variables como la tendencia, la volatilidad, volumen, entre otras variables; que buscan dar un resultado numérico, gráficamente interpretable, que ayuda al inversionista a tomar una posición o abandonarla. A continuación se describen los indicadores técnicos más importantes Media móvil simple La media móvil es uno de los indicadores técnicos más versátil y cuyo uso está más extendido. Por la forma en que se hace y por el hecho de que puede cuantificarse y verificarse tan fácilmente, es la base de muchos sistemas mecánicos de seguimiento de tendencias en uso hoy en d́ıa[7]. Como su primera palabra indica, es un promedio de un cierto bloque de información. Por ejemplo, si se busca una media de los precios al cierre de 10 d́ıas, se suman los precios de los dependiendo del objetivo. 10 Figura 2.2: Ejemplo de tendencia alcista. últimos 10 d́ıas y se divide el total entre 10. La expresión móvil se usa porque sólo se usan los precios de los últimos N d́ıas para hacer el cálculo. Por lo tanto, el bloque de información que se ha de promediar se traslada hacia adelante con cada d́ıa de operaciones[7]. En la Figura 2.4 se muestra un ejemplo de media móvil simple, tomando en cuenta 10 peŕıodos de tiempo. Matemáticamente se define de la siguiente manera: SMA = ∑t i=t−N Vi N (2.2) Donde: N significa el número de peŕıodos de tiempo anteriores. Vi significa la observación i− esima de alguna variable. Media móvil exponencial (EMA - Exponential moving average) Una media móvil es un tipo de media móvil similar a SMA, excepto que se le da mayor peso a los últimos datos. Esta media móvil reacciona más rápido a cambios recientes en los precios que una SMA[19]. Como los indicadores de medias móviles, ellos están mejor equipados para mercados en ten- dencia (alcista o bajista, no lateral). El indicador EMA es comúnmente usado en conjunción con otros indicadores para confirmar movimientos significativos del mercado y calibrar su validez. Para los operadores que operan intrad́ıa, es más aplicable EMA[19]. En la Figura 11 Figura 2.3: Ejemplo de tendencia lateral. 2.5 se presenta un ejemplo de EMA. El indicador EMA se define en términos matemáticos de la siguiente manera: K = 2 n− 1 (2.3) EMAn(t) = Closet ∗K + EMAn(t− 1) ∗ (K − 1) (2.4) Donde: Closet es el precio de cierre en el peŕıodo de tiempo t. t es un peŕıodo de tiempo. n es la cantidad de peŕıodos de tiempo a contemplar. K es el factor de importancia. Bandas de bollinger Se trata de una técnica desarrollada por John Bollinger. Se colocan dos bandas de fluctuación al rededor de una media móvil, a dos desviaciones t́ıpicas por encima y por debajo de la media móvil. El uso de dos desviaciones t́ıpicas (o estándar) asegura que el 95 % de la información sobre el precio caerá dentro de las dos bandas de fluctuación. Como regla, los precios se consideran sobreextendidos en el lado superior (sobrecomprados) cuando alcanzan la banda superior. Se consideran sobreextendidos en el lado inferior (sobrevendidos) cuando 12 125 130 135 140 145 150 SPY [2007−12−03/2008−03−31] Last 131.89 dic. 03 2007 ene. 22 2008 mar. 10 2008 Figura 2.4: Ejemplo de media móvil simple. alcanzan la banda inferior[7]. En la Figura 2.6 se muestra un ejemplo de bandas de Bollinger tomando en cuenta 20 peŕıodos y dos desviaciones estándar. Las bandas de Bollinger se definen matemáticamente de la siguiente manera: Middle = SMAn(Close) (2.5) Upper = Middle+ 2× Stdevn(Close) (2.6) Lower = Middle− 2× Stdevn(Close) (2.7) Donde: Close es el precio de cierre SMAn(X) es una media móvil simple de n peŕıodos de la variable X. Stdevn(X) es la desviación estándar de n peŕıodos de la variable X. 13 125 130 135 140 145 150 SPY [2007−12−03/2008−03−31] Last 131.89 dic. 03 2007 ene. 22 2008 mar. 10 2008 Figura 2.5: Ejemplo de media móvil exponencial. Oscilador estocástico El Oscilador Estocástico fue popularizado por George Lane. Se basa en la observación de que a medida que los precios se incrementan, los precios de cierre tienden a acercarse mas al extremo superior de una banda de precios. Por el contrario, en las tendencias a la baja, el precio de cierre tiende a acercarse al extremo inferior de la banda. En el calculo del oscilador estocástico se usan dos ĺıneas, la linea %K y la %D . Ésta última es la más importante y la que proporciona señales principales[7]. La intención es determinar dónde está el precio de cierre más reciente en relación con la banda de precios de un peŕıodo dado[7]. El oscilador estocásticos se define matemáticamente de la siguiente manera: %K = 100[(C − Ln)/(Hn − Ln)] (2.8) %D = SMAm( %K) (2.9) Donde: Close es precio de cierre actual. 14 125 130 135 140 145 150 SPY [2007−12−03/2008−03−31] Last 131.89 Bollinger Bands (20,2) [Upper/Lower]: 135.390/128.324 dic. 03 2007 ene. 22 2008 mar. 10 2008 Figura 2.6: Ejemplo de bandas de Bollinger. Ln es el precio de cierr mı́nimo en n peŕıodos de tiempo. Hn es el precio de cierre máximo en n peŕıodos de tiempo. SMAn(X) es una media móvil de n peŕıodos de tiempo de la variable X. Índice de momento estocástico (SMI - Stochastic momentum in- dex) El Índice de momento estocástico, o SMI, es una versión más refinada del oscilador es- tocástico, empleando un rango de valores mas amplio y con mayor sensibilidad a los precios de cierre. El calcula la distancia del precio de cierre actual en relación a la mediana del rango de precios. William Blau desarrollo el SMI es un intento de proveer un indicador mas confiable, menos sujeto a oscilaciones falsas[20]. El SMI tiene un rango de valores normales entre 100 y -100. Cuando el precio de cierre actual es mayor que la mediana, el resultado es positivo. Cuando el precio actual de cierre es menor que la mediana, el SMI tiene un valor negativo. Como el oscilador estocástico, el SMI es primeramente usado para indicar condiciones de sobreventa o sobrecompra. Los operadores también utilizan el SMI como un indicador general de tendencia, interpretando valores por 15 encima de 40 como un indicativo de una tendencia alcista y una bajista en valores menores a -40[20]. En la Figura 2.7 se muestra un ejemplo de SMI. El SMI se define matemáticamente de la siguiente manera: MD = Close− (HHn + LLn) 2 (2.10) SMD = (EMAn(EMAx(MD))) (2.11) STR = EMAy(EMAx(HHn − LLn)) 2 (2.12) SMI = SMD STR × 100 (2.13) Donde: Close es el precio de cierre actual. HHn es el precio más alto en n peŕıodos de tiempo. LLn es el precio más bajo en n peŕıodos de tiempo. EMAn(x) es una media móvil exponencial en n peŕıodos de tiempo de la variable x. MD (Midpoint Delta) es la distancia que hay entre el precio de cierre y la mediana del rango de precios HHn y LLn. SMD (Smoothed Midpoint Delta)es la variable MD suavizada dos veces por una media móvil exponencial. STR (Smoothed Trading Range) es la diferencia entre el precio más alto y el precio más bajo en n peŕıodos, suavizado dos veces y dividio entre dos. Índice de fuerza relativa (RSI - Relative strength index) El RSI fue desarrollado por J. Welles Wilder, Jr., quien lo presentó en su libro [21]. Como Wilder destaca, uno de los dos problemas principales de una ĺınea de momento(usando diferencias de precios) es el movimiento errático causado con frecuencia por cambios bruscos en los valores que se dejan de lado. Un fuerte avance o retroceso puede causar cambios repentinos en la ĺınea del momento incluso si los precios actuales no muestran modificaciones. Por lo tanto, se necesita suavizar estas distorsiones para minimizarlas. El segundo problema es que existe la necesidad de una banda constante a efectos comparativos. La fórmula del RSI 16 125 130 135 140 145 150 SPY [2007−12−03/2008−03−31] Last 131.89 Stochastic Momentum Index (13,2,25,9): SMI: 3.225 Signal: −6.613 −60 −40 −20 0 20 40 60 dic. 03 2007 ene. 22 2008 mar. 10 2008 Figura 2.7: Ejemplo de ı́ndice de momento estocástico. no sólo proporciona la suavización necesaria, sino que también soluciona el último problema mediante la creación de una banda vertical constante que va de 0 a 100[7]. La divergencia entre el RSI y la ĺınea del precio, cuando el RSI está por encima de 70 o por debajo de 30, es una seria advertencia que debeŕıa tomarse en cuenta[7]. Matemáticamente el RSI se expresa de la siguiente manera: RSI = 100− 100 1 +RS (2.14) RS = Avg(Gananciasn) Avg(Perdidasn) (2.15) Donde: Gananciasn son los precios que cerraron mayores que el precio de cierre anterior, en n peŕıodos de tiempo. Perdidasn son los precios que cerraron menores que el precio de cierre anterior, en n peŕıodos de tiempo. Avg(X) es el promedio de una variable X. 17 RS (Relative Strength) es la fuerza relativa. 125 130 135 140 145 150 SPY [2007−12−03/2008−03−31] Last 131.89 Relative Strength Index (14): 47.091 30 40 50 60 dic. 03 2007 ene. 22 2008 mar. 10 2008 Figura 2.8: Ejemplo de RSI. 2.4. Trading automatizado En esta sección se presenta una śıntesis de los términos definidos anteriormente. También se definen algunos términos y se explica como se relacionan cada uno de ellos, para culminar con una motivación importante al desarrollar sistemas de trading algoŕıtmico. 2.4.1. Resumen El mercado de valores es el lugar en donde las acciones de las empresas publicas son transa- das. Una empresa se vuelve pública cuando realiza un IPO. Esto significa que inversionistas alrededor del mundo son capaces de comprar e intercambiar acciones de valores en la com- pañ́ıa. Estas acciones representan una propiedad en la compañ́ıa, y sus precios representan lo que los inversionistas creen que un pedazo de la compañ́ıa, o acción, puede valer en el futuro. Por lo tanto, los precios de los valores son determinados puramente por oferta y demanda en el mercado[6]. 18 Generalmente hablando, un inversionista tiene dos opciones: si el cree que las acciones de una compañ́ıa se van a elevar en valor en algún momento en el futuro, el puede colocar una orden de compra en el mercado de valores, y cuando la orden se ejecute el posee el valor, esto también es conocido como entrar a una posición larga. Luego, si más y más personas creen lo mismo, la demanda de ese valor crece y por lo tanto el valor de ese valor va incrementar y los inversionistas con posiciones largas podrán lucrarse. Por otro lado, si más personas creen que una compañ́ıa puede valer menos en el futuro, la demanda cae y los precios de los valores va a decrementar y los inversionistas con posiciones largas sufrirán perdidas. Sin embargo, en este caso, un inversionista que decide que las acciones de una empresa se van a depreciar en valor, el puede colocar una orden de venta, de esta manera, se estaŕıa entrando en una posición corta. Si el inversionista previamente posee valores de esta compañ́ıa, la orden de venta venderá la cantidad deseada de su posición larga. Si el no posee valores previamente, esto es llamado venta en corto, que significa que el va a tomar prestado los valores de alguien más y los venderá de inmediato, y luego cuando el quiera cubrir el préstamo, el compra de vuelta la misma cantidad de acciones y las regresa al prestador. Por lo tanto, la venta en corto permite al inversionista lucrarse de una cáıda de algún precio[6]. Los participantes en los mercados de valor son heterogéneos, esto significa que hay muchos tipos de inversionistas, cada uno con diferentes metas de retorno y niveles de riesgo a tomar. Inversionistas individuales, inversionistas institucionales y algoritmos de trading, todos com- piten en el mismo mercado con el mismo objetivo: lucrarse haciendo la apuesta correcta en los precios futuros de los valores, comprar barato, vender caro o viceversa[6]. Todos los inversionistas, especialmente los algoritmos de trading, necesitan especificar dos cosas: la frecuencia de trading y el universo donde ellos operan. La frecuencia se refiere a que tan seguido se toman decisiones para operar en el mercado. Para los inversionistas humanos su frecuencia de operaciones puede ser mas flexible. Para sistemas de operaciones automáticas, por su naturaleza sistemática, la frecuencia debe ser especificada por sus desarrolladores. La frecuencia tiene un rango muy amplio: desde una única vez, que significa comprar y aguantar esa posición para siempre, hasta operar cada nanosegundo para algoritmos de trading de alta frecuencia[6]. El universo es el rango de valores en los que un inversionista decide operar. Por ejemplo un inversionista que su universo es el mercado global significa que el no se limita a elegir valores atados a alguna restricción geográfica. El universo también puede ser el mercado de valores de EEUU, S&P 500 o un sector dentro de este ı́ndice[6]. El ı́ndice Standard & Poor’s 500 (S&P 500) es uno de los puntos de referencia más utilizados para el rendimiento promedio del mercado de valores de EEUU. Es un ı́ndice de 500 valores elegidos por ciertas variables fundamentales, entre ellas la liquidez. El S&P 500 busca reflejar las caracteŕısticas de riesgo-retorno del mercado de grandes empresas estadounidenses[6]. 19 2.4.2. Motivación La ventaja mas grande del trading algoŕıtmico es que el operar en el mercado de valores se hace más sistemáticamente. Los inversionistas humanos son muy emocionales. Uno puede experimentar euforia por tener una posición que esta yendo bien o puede experimentar reacciones adversas cuando una posición está perdiendo valor. Uno también puede convertirse en avaro o miedosos y perder la disciplina de operaciones. Tener una disciplina o plan, al operar, es muy importante para obtener lucro consistente en el mercado de valores. Sin embargo, no hay tal plan que pueda generar retornos positivos todo el tiempo, y cuando se enfrentan cáıdas temporales, los factores emocionales mencionados anteriormente pueden fácilmente destruir la disciplina. Por consiguiente, porque un plan parar operar es seguido de manera sistemática, un sistema de trading algoŕıtmico minimiza las emociones en el proceso de operar, asegurando que la disciplina se mantenga durante las condiciones volátiles del mercado y permitiendo lograr consistencia[6]. Otra ventaja del trading algoŕıtmico sobre los humanos es la habilidad de probar la estrategia. Esto en la literatura se denomina backtesting. El backtesting se refiere a aplicar el sistema desarrollado a datos históricos y verificar como el sistema habŕıa operado durante el peŕıodo de tiempo especificado. Esto ayuda a los desarrolladores de los sistemas a aprender como se comporta el sistema en ciertas situaciones en el pasado, que probablemente se repitan en el futuro. También provee la oportunidad de optimizar los parámetros en cada iteración. El poder predictivo del backtesting recae en la suposición que las propiedades estad́ısticas de las series de los precios no cambian, de manera que si una regla de trading era lucrativa en el pasado, lo será también en el futuro. Sin embargo, tal suposición está sujeta a riesgos, como cambios macroeconómicos, cambios en la compañ́ıa, cambios en la estructura del mercado, entre otros. También, dividendo los datos en una muestra de entrenamiento o datos in-sample y datos de prueba o out-of-sample durante el backtesting, provee una manera practica y eficiente de evaluar los sistemas. Los datos in-sample pueden ser utilizados para optimizar, pero es importante luego evaluar el sistema en los datos de prueba, para determinar la viabilidad del mismo y evitar el sobre-ajuste[6]. Además, un sistema automatizado de trading puede seguir al mercado bastante bien, cosa que es extremadamente complicada para los inversionistas humanos. Los humanos simple- mente tratan de ser miedosos cuando otros son codicioso y son codiciosos cuando otros están asustados. Esto es una forma de intentar seguir al mercado. Cuando las personas están codi- ciosas, los precios están sobrevalorados y un operador debeŕıa vender los valores, y viceversa. Pero es extremadamente dif́ıcil identificar consistentemente cuando las personas están codi- ciosas o miedosas. Por otro lado, otra forma de seguir el mercado es lo que se hace en las firmas de trading de alta frecuencia (HFT - High Frecuency Trading): encontrar oportuni- dades de arbitraje y operar en cuestiones de microsegundos. A esta frecuencia, es imposible para un humano hacerlo. Sin embargo, los sistemas automatizados lo pueden hacer, incluso en miles de valores a la vez. Es por eso que las firmas HFT todas utilizan algoritmos compu- tarizados de trading, en conjunto con consistentes pronósticos de series tiempo o análisis 20 de sentimientos (se analizan tweets, noticias, art́ıculos, entre otros), los sistemas de trading pueden realizar un trabajo decente identificando miedos y codicias en el mercado[6]. 2.5. Aprendizaje automático (ML - Machine Learning) Existen muchas definiciones de aprendizaje automático en la actualidad. Sin embargo, el objetivo principal del aprendizaje automático es hacer que una computadora pueda aprender a través de los datos. A continuación una definición realizada por Marshland: “El aprendizaje automático se trata de hacer que las computadoras modifiquen o adapten sus acciones de manera que estas acciones se vuelvan mas precisas, donde la precisión es medida por: que tan bien las acciones escogidas reflejaron las acciones correctas”[22]. Otra definición, realizada por Mitchell es la siguiente: “se dice que un programa de computadora aprende de una experiencia E con respecto a alguna clase de tarea T donde su rendimiento es medido por P si su rendimiento para la tarea T, que es medido por P, mejora con la experiencia E”[23]. En este caṕıtulo se describen las técnicas de aprendizaje automático en la sección 2.6, el flujo de trabajo utilizado a la hora de aplicar técnicas de aprendizaje automático en la sección 2.7 y por último, las herramientas mas utilizadas en la sección 2.8. 2.6. Técnicas de aprendizaje automático Las técnicas más utilizadas de aprendizaje automático se dividen en 2, aprendizaje supervi- sado y aprendizaje no-supervisado. Cada una de las clasificaciones y técnicas serán descritas a continuación. 2.6.1. Aprendizaje supervisado En el aprendizaje supervisado, un conjunto de entrenamiento que contiene los ejemplos con las respuestas correctas provistas y, basado en este conjunto de entrenamiento, el algoritmo generaliza para responder correctamente a todas las entradas posibles. Esto también es lla- mado aprendizaje desde ejemplares[22]. Sea X el conjunto total de registros en un conjunto de datos, donde xi(i = 1, ..., n) es el registro de la posición i de X y Y el conjunto de eti- quetas en un conjunto de datos, donde yi(i = 1, ..., n) es la etiqueta de la posición i de Y . Entonces, para cada xi debe existir un yi(i = 1, ..., n) perteneciente a Y tal que yi etiquete a xi[24], donde estas etiquetas corresponden a las respuestas correctas. Dentro de las técnicas de aprendizaje supervisado existe una clasificación adicional. Esta clasificación depende del conjunto de etiquetas. Si los elementos que pertenecen al conjunto de etiquetas Y, son cualitativos, entonces se dice que el problema a resolver es un problema 21 de clasificación. En caso que los elementos de Y sean cuantitativos, se dice que el problema a resolver es problema de regresión. Las técnicas de aprendizaje supervisado más populares son las máquinas de vectores de soporte, las redes neuronales artificiales y los arboles de decisión para problemas de clasifica- ción. Todas estas técnicas funcionan tanto para problemas de regresión como de clasificación. Este documento se centra en la aplicación de estas técnicas para problemas de clasificación. Regresión Lineal La regresión lineal es un método de aprendizaje supervisado bastante simple. En particular, la regresión lineal es una herramienta útil para predecir una respuesta cuantitativa. La regresión lineal muchas veces sirve como punto de partida para nuevos enfoques de ML[24]. Muchas de las otras técnicas de ML pueden ser vistas como generalizaciones o extensiones de la regresión lineal. Un ejemplo gráfico de un modelo de regresión lineal se encuentra en la Figura 2.9. 0 2 4 6 8 10 0 2 4 6 x y Figura 2.9: Regresión lineal. En esencia, el método de regresión lineal, busca el modelo lineal que mejor se ajuste a un conjunto de observaciones. El conjunto de puntos son pares (xi, yi) con i = 1, 2, ..., N donde xi representa una observación de las variables de entrada (predictores) y yi la respuesta 22 asociada (variable dependiente), de una muestra de tamaño N . Donde el mejor modelo es aquel que minimiza una medida de error. La medida de error más utilizada es el error cuadrático medio (SME - Square Mean Error). Existen 2 tipos de regresión lineal: (1) simple y (2) múltiple. LR simple es un método para predecir una respuesta cuantitativa Y en la base de un solo predictor X. Este modelo asume que existe una relación aproximadamente lineal entre las variables X e Y . Matemáticamente podemos escribir esta relación aśı: Y ≈ β0 + β1X + � (2.16) Donde: X es la variable predictora. Y es la varibale dependiente. β0 es el intercepto de la recta. β1 es la pendiente de la recta. � es el error irreducible. El enfoque de regresión lineal simple es un enfoque útil para predecir respuestas en base a una sola variable predictora. Sin embargo, en la práctica a menudo se tienen más de una sola variable predictora[24]. Matemáticamente podemos escribir esta relación de la siguiente manera: Y ≈ β0 + β1X1 + β2X2 + ...+ βpXp + � (2.17) Donde: Xi son las variables predictoras. p es la cantidad de variables predictoras. Y es la variable dependiente. βi son los coeficientes de las variables predictoras. � es el error irreducible. Normalmente, estos coeficientes son desconocidos, por lo que se deben estimar cada uno de ellos. Uno de los métodos más utilizados para estimar los coeficientes a través de una muestra es el métodos por mı́nimos cuadrados7. Este método se puede explicar de manera anaĺıtica y geométrica. El problema geométricamente se reduce a encontrar el vector solución de un sistema de ecuaciones del tipo Ax = b donde x es el vector que contiene los coeficientes que minimizan el error cuadrático medio. 7Una explicación detallada del método de mı́nimos cuadrados para regresión lineal se encuentra en [25] 23 Regresión Loǵısitca El método de regresión loǵıstica fue desarrollado por un estadista llamado David Cox. Es un caso especial de un modelo lineal generalizado, y por lo tanto análogo a la regresión lineal. La idea es estimar la probabilidad condicional de una respuesta binaria basándose en una o más variables predictoras utilizando la distribución loǵıstica acumulada[6]. Si se tiene una variable de salida Y , y se quiere modelar la probabilidad condicional P (Y = 1|X = x) como una función de un vector x. Es de notar que log(p(x)) es una función lineal de x, que tiene un rango no acotado, pero con una pequeña modificación, la transformación loǵıstica log( p 1−p) tiene rango acotado[6]. Está función se le denomina sigmoide. Un ejmplo gráfico se encuentra en la figura 2.10 El rango de está función va de 0 a 1. El modelo de regresión loǵıstica se expresa matemáticamente de la siguiente manera: −4 −2 0 2 4 0.0 0.2 0.4 0.6 0.8 1.0 x y Figura 2.10: Función sigmoide. log( p(x) 1− p(x) ) (2.18) Y luego, despejando p(x), se obtiene la forma de la función sigmoide. p(y|x) = 1 1 + e−β0+xβ1 (2.19) 24 Máquina de vectores soporte (SVM - Support Vector Machine) SVM fue introducido por Vapnik.Este asocia los datos de entrada dentro de un espacio de caracterısticas de dimensión superior y obtiene el hiperplano separador óptimo en el espacio de caracterısticas de dimensión superior. El hiperplano separador es elegido maximizando la distancia entre los vectores de soporte, que corresponden a los puntos más cercanos al hiperplano generado[24]. En la Figura 2.11 se puede apreciar como el hiperplano establecido es aquel que maximiza la distancia entre los vectores de soporte. Las máquinas de vectores soporte puede realizar eficientemente una clasificación no lineal usando kernels[6]. Los kernels son los encargados de asociar los datos de entrada a dimen- siones superiores. Existen diferentes tipos de Kernels. A continuación se definen algunos de los más utilizados: Lineal: establece separadores lineales entre los conjuntos. Su función viene dada por la ecuación 2.20. f(u, v, c) =< uT , v > +c. (2.20) Donde: • u representa el vector de registros. • v es un vector ortogonal de u. • c corresponde al parámetro de regularización, que controla el margen de error de la clasificación. Sigmoide:permite establecer fronteras circulares entre los conjuntos. Este kernel se expresa matemáticamente a través de la ecuación 2.21. f(u, v, coef, c, γ) = tanh(γ × uT × v + coef) + c (2.21) Donde: • u, v y c representan en este caso lo mismo que en la ecuación 2.20. • γ representa la distancia máxima de los registros para que estén relacionados entre śı. • coef es un parámetro para escalar los datos. Radial: este kernel permite establecer fronteras circulares para la separación de con- juntos (similar al kernel sigmoide). Su expresión matemática viene dada por la ecuación 2.22. f(u, v, c, γ) = eγ×‖u−v‖+c (2.22) Donde: • u, v y c representan en este caso lo mismo que en la ecuación 2.20. 25 • γ representa en este caso lo mismo que en la ecuación 2.21 Polinómico: establece separadores polinómicos que permiten establecer ĺıneas curvas como separadores entre los conjuntos. La expresión matemática de este kernel viene dada por la ecuación 2.23. f(u, v, coef, degree, c, γ) = (γ× < uT , v > +coef)degree+ c (2.23) Donde: • u, v, c, coef y γ representan lo mismo que en las ecuaciones 2.20 y 2.21. • degree es el grado del polinomio. Vectores de Soporte Hiperplano Figura 2.11: SVM [1]. Es importante destacar que la técnica SVM se puede aplicar tanto para regresión, como para clasificación. Árbol de decisión (DT - Decision Tree) Un árbol de decisión es una estructura de datos jerárquica que implementa la estrategia de divide y conquista8. Está compuesto de nodos internos de decisión y hojas. Un ejemplo de árbol de decisión se muestra en. Dada una entrada, en cada nodo, una prueba es aplicada y una de las 2 ramas es tomada dependiendo del resultado de la prueba. Este proceso en la ráız y es repetido recursivamente hasta llegar a un nodo hoja, en este punto el valor que constituye la hoja es el resultado[6]. Este algoritmo es utilizado para clasificar. Las decisiones tomadas en los nodos, están basadas en los criterios que mejor separen la muestra. El término 8Este paradigma se encuentra explicado de manera más amplia en [26] 26 mejor en este caso, se refiere a una métrica. Una de las métricas más utilizadas es el ı́ndice Gini9. En la Figura 2.12 se puede apreciar un ejemplo de DT. Figura 2.12: Árbol de decisión. K-vecinos - (KNN - K-Nearest Neighbors) El método KNN es muy popular debido a su simplicidad y su excelente rendimiento emṕıri- co. Este enfoque puede manejar tareas de clasificación con una o mas clases objetivo. No realiza suposiciones sobre la forma paramétrica de los ĺımites de decisión, no tiene fase de entrenamiento[28]. KNN simplemente define los limites de decisión tomando en cuenta las K observaciones mas cercanas, de cada observación, donde K es un número natural mayor o igual a 1. Luego, el modelo simplemente son las observaciones y a la hora de evaluar una nueva observación, se toman los K vecinos mas cercanos de este y se clasifica dicha instancia en base a sus vecinos. 9Una explicación ampliada del ı́ndice Gini aplicado a la implementación de árboles de decisión se encuentra en [27] 27 Red neuronal (ANN - Artificial Neural Network) Las redes neuronales son un modelo de simulación del cerebro humano. El sistema nervio- so humano esta compuesto de células, estás células se denominan neuronas. Las neuronas biológicas están conectadas una a otra en puntos de contactos, definidos como sinapsis. El aprendizaje es realizado en organismos vivientes a través del intercambio de fuerza de las conexiones sinápticas entre neuronas. T́ıpicamente, la fuerza de estas conexiones cambia en respuesta a est́ımulos externos. Las redes neuronales son una simulación de este proceso biológico[27]. Como en el caso de redes neuronales biológicas, los nodos individuales en las redes neuronales artificiales son denominadas neuronas. Estas neuronas son unidades de computo que reciben entradas de otras neuronas, se realizan cálculos sobre estas entradas y se transmite a otra neurona. La función del computo en una neurona es definida por los pesos en las conexiones a las neuronas anteriores, que se encuentran conectadas a esta neurona. Los pesos pueden ser análogos a la fuerza de una conexión sináptica. El “est́ımulo externo” en los modelos ANN para aprender los pesos es provisto por los datos de entrenamiento. La idea es modificar incrementalmente los pesos cuando predicciones incorrectas son realizadas por el conjunto actual de pesos[27]. La clave para la efectividad de un modelo ANN es la arquitectura usada para relacionar las conexiones entre los nodos. Existe una amplia variedad de arquitecturas. A continuación se listan algunas arquitecturas de ANN: Perceptrón. Red neuronal anticipativa (FNN - Feedforward Neural Network). Red neuronal probabiĺıstica (PNN - Probabilistic Neural Network). Red neuronal modular. La arquitectura mas básica de ANN es denominada perceptrón. El perceptrón contiene 2 capas de nodos, que corresponden a los nodos de entrada y, un solo nodo de salida. El número de nodos de entrada es exactamente igual al número de dimensiones de un conjunto de datos de entrenamiento. Cada nodo de entrada recibe y transmite un único atributo numérico al nodo de salida. Por lo tanto, los nodos de entrada no realizan ningún computo sobre los datos, solo los transmiten. En el modelo perceptrón básico, el nodo de salida es el único modo que aplica una función matemática sobre sus entradas[27]. Las arquitecturas de las redes neuronales tienen varios parámetros que las definen. Entre estos parámetros se encuentra el número de capas, si tienen o no capas escondidas, cuantas neuronas por capa escondida, la función a realizar en cada neurona, entre otros.En la Figura 2.13 se muestra una arquitectura de red neuronal de 3 capas, la capa de entrada, la capa intermedia y la capa de salida. Las redes neuronales proporcionan un enfoque bastante flexible para tareas de regresión y 28 N(1,1) N(2,2) N(1,2) N(4,1)N(2,1) N(5,1) N(3,2) N(2,3) N(3,1) N(5,2) N(4,2) N(4,3) Entrada 2 Entrada 1 Salida 1 Salida 2 Capa de Entrada Capas Escondidas Capa de Salida Figura 2.13: Red neuronal [1]. clasificación. A pesar de su utilidad, depende de la complejidad del modelo y de la cantidad de datos de entrenamiento, este método puede requerir mucho tiempo para producir un modelo efectivo. Sin embargo, luego de que la fase de entrenamiento culmina y el modelo ya está aprendido, no es una limitante aplicar a nuevos datos el modelo y observar los resultados. 2.6.2. Aprendizaje no-supervisado En el aprendizaje no-supervisado, las respuestas correctas no son provistas, en cambio el algoritmo trata de identificar similaridades entre las entradas de manera que las variables que tienen algo en común son categorizadas de igual manera. El enfoque estad́ıstico del aprendizaje no-supervisado es conocido como estimación de densidad[22]. El objetivo de los algoritmos de aprendizaje no-supervisado es identificar grupos separables en los datos. Una de las técnicas para ello es denominada análisis de grupo (cluster analysis) o agrupamiento (clustering). 29 K-medias El algoritmo de K-Medias es una de las técnicas más populares de agrupamiento. En este algoritmo se supone que se quiere dividir un conjunto de datos en K categoŕıas, donde el valor de K es dado. Luego se colocan K centros (puntos) en el espacio de los datos de entrada, y se quiere posicionar dichos centros tal que cada uno de ellos sea el centro de cada grupo. Sin embargo, no se sabe donde están los grupos o clusters, de manera que se necesita un algoritmo que los consiga. Los algoritmos de ML generalmente tratan de minimizar alguna clase de error, por lo que se necesita pensar en algún criterio de error[22]. Además, para definir el concepto de centro son necesarias una medida de distancia. Luego de tener una medida de distancia, es necesario una medida de centralidad. La medida de distancia normalmente utilizada es la distancia euclidiana y la medida de centralidad particularmente utilizada en el algoritmo K-Medias, como su nombre lo indica, es la media o el promedio de los datos. En la Figura 2.14 se muestra un ejemplo de este modelo con la variable K = 3. Figura 2.14: Clustering de 3 conjuntos [1]. El algoritmo de K-medias presenta varias propiedades y limitantes según [29] que se listan a continuación: Propiedades • Es escalable y puede manejar grandes volúmenes de datos. 30 • Suele converger a un mı́nimo local. • Es capaz de detectar grupos de forma esférica o convexa. Limitantes • El número de grupos debe ser especificado antes de ejecutar el algoritmo. • Sensible a valores anómalos(outliers). • Dependiendo de la posición inicial de los centros se pueden obtener diferentes resultados. Agrupación jerárquica Una de las desventajas potenciales del algoritmo de K-medias es que requiere especificar el número K a priori. La agrupación jerárquica es un enfoque alternativo que no requiere que se realice una elección de K. La forma de representación de la agrupación jerárquica viene dada a través de una estructura de árbol llamada dendrograma (dendrogram)[24]. Cada nodo en el árbol, a excepción de las hojas, es la unión de sus hijos. La ráız del árbol es el grupo que contiene a todos los nodos[29]. Los métodos de agrupación jerárquica se dividen en 2: Métodos aglomerativos Inician la creación del grupo de abajo hacia arriba. Iniciando con un registro individual en un grupo de separado y luego trata de mezclarlos hasta que todas las instancias pertenezcan al mismo grupo[29]. Métodos divisivos La identificación de los grupos inicia con la división del conjunto de datos en gru- pos mas pequeños desde arriba hacia abajo, hasta que cada grupo contenga solo una instancia[29]. Existen varias formas de generar el dendrograma. La mas forma más común es de abajo hacia arriba, desde las hojas hasta la ráız, combinando los grupos hasta que todos los nodos pertenezcan a un solo grupo. Para mezclar o dividir los grupos, la distancia entre los objetos individuales es generalizada a la distancia entre los sub-conjuntos. Esta medida de proximidad es llamada enlazamiento. Las formas mas comunes de enlazar los sub-conjuntos son las siguientes: Enlace-simple: es la similaridad entre las 2 instancias más parecidas. Este enfoque es bueno para el manejo de formas no eĺıpticas, sin embargo es sensible al ruido y a registros anómalos (outliers) [29]. 31 Enlace-completo: es la similaridad entre las 2 instancias menos parecidas. Este enfo- que es menos susceptible al ruido, pero puede separar grandes grupos de forma inapro- piada. Además, presenta problemas con las formas convexas [29]. Enlace-promedio: es un enfoque intermedio de los anteriores[29]. Al igual que el método de K-medias, los métodos de agrupación jerárquica presentan una serie de propiedades y limitantes. Algunas de ellas expuestas en [29] y se listan a continuación: Propiedades • Pueden representarse gráficamente mediante un dendrograma, de tal manera que es posible visualizar los grupos y sus asociaciones. • No requiere especificar el número de grupos de antemano. Limitantes • No permite realizar ajustes una vez que el criterio de mezcla o división ha sido realizado. • Es necesario el cálculo de una matriz de distancias para la unión o separación de los grupos. 2.7. Proceso de ML El proceso de ML consta de varias fases, en esta sección se describen brevemente los pasos a realizar a la hora de aplicar ML a algún problema. 2.7.1. Recolección de los datos En esta fase se recolectan los datos que pueden ser relevantes para resolver un problema espećıfico. Esta fase es crucial, ya que si los datos no son útiles para resolver el problema, el esfuerzo en las siguientes fases será desperdiciado. En la actualidad, existen grandes cantidades de datos disponibles a la hora de resolver una amplia gama de problemas. Estos datos pueden o no estar en un formato adecuado para el análisis de los mismos. Sin embargo, si se tratase de resolver un problema nuevo, donde no existen datos disponibles, es necesario recolectar aquellos que podŕıan funcionar. Normalmente, la cantidad de datos que podŕıan ser útiles, es bastante significativa, pueden estar ubicados en diferentes lugares y formatos, por lo que hace que esta fase requiera de un gran esfuerzo. De ser esta la situación, es común que esta fase este acompañada de la fase de selección de caracteŕısticas explicada en la sección 2.7.2 32 2.7.2. Selección de caracteŕısticas Esta fase consiste en identificar las caracteŕısticas que son mas útiles para el problema a tratar. Esta fase requiere conocimiento previo acerca del problema y de los datos[22]. Además de la identificación de las caracteŕısticas útiles, es también necesario que las ca- racteŕısticas puedan ser recolectadas sin utilizar una cantidad de tiempo significante y que sean robustos al ruido y otras corrupciones de los datos que pueden ocurrir en el proceso de recolección, explicado en la sección 2.7.1 2.7.3. Selección del algoritmo En esta fase se escoge un algoritmo apropiado, dado un conjuntos de datos, con ciertas caracteŕısticas[22]. Esta fase es un reto debido a que no todos los problemas de ML son iguales. Que un problema sea de clasificación no significa que tenga la misma solución que algún otro problema de la misma ı́ndole, por lo que es imposible generalizar una solución y cada escenario es un reto diferente. Para afrontar esta fase es necesario saber la naturaleza de los algoritmos, sus ventajas y desventajas. Adicionalmente, este proceso a menudo suele ser de ensayo y error, seleccionando algún algoritmo que se piensa que tendrá un buen desempeño frente a un escenario dado. 2.7.4. Selección de los parámetros y el modelo Para muchos algoritmos existen parámetros que tienen que ser seleccionados manualmente, o requieren experimentación para identificar valores apropiados[22]. En esta fase se realiza la selección de los parámetros y se realizan experimentos para determinar los parámetros apropiados. 2.7.5. Entrenamiento Dado un conjunto de datos, un algoritmo y los parámetros, el entrenamiento debe ser sim- plemente el uso de recursos computacionales para la construcción de un modelo de los datos, para predecir salidas en nuevos datos[22]. 2.7.6. Evaluación Antes de que un sistema sea desplegado es necesario que se pruebe y se evalué sobre datos que no fueron contemplados en la fase de entrenamiento. Esta fase puede incluir compa- 33 raciones con humanos expertos en el área, y la selección apropiada de métricas para las comparaciones[22]. El error obtenido a la hora de evaluar el modelo es llamado error de prueba. Por otro lado, es posible evaluar el modelo con los mismos datos usados para el entrenamiento. El error obtenido en este caso es llamado error de entrenamiento. Este último enfoque no es una buena medida de desempeño del modelo debido a que por lo general se sobrestima el rendimiento debido a que los registros utilizados para evaluar fueron vistos con anterioridad por el modelo de ML. Utilizar un conjunto de datos diferente al de entrenamiento para evaluar el modelo de ML permite evaluar la capacidad de generalizar del mismo, y de esta manera se puede tener una noción más certera del desempeño del modelo en un ambiente real[1]. Para poder calcular el error de un modelo se debe comparar la salida predicha por el mismo contra el valor verdadero del registro. Esto es, comparar el valor estimado contra el valor real. Para dicha tarea es necesario conocer la salida real del problema y eso amerita que los datos sean etiquetados. El proceso de etiquetar los datos suele ser costoso en cuanto a tiempo y dinero. Sin embargo, esto brinda la oportunidad de poder hacer cálculo sobre ciertas medidas de rendimiento que ayudan a la evaluación de los modelos[1]. A continuación se definen los conceptos de matriz de confusión y de varios métodos para evaluar los modelos basados en matrices de confusión. Matriz de confusión La matriz de confusión es un método que permite visualizar el desempeño de un modelo en el ámbito de problemas de clasificación a través de cuatro criterios representados en una tabla. Los cuatro criterios son verdaderos positivos, verdaderos negativos, falsos positivos y falsos negativos. Verdaderos positivos (TP - True Positive): aquellos registros que pertenecen a la clase objetivo y fueron clasificados por el modelo como la clase objetivo. Verdaderos negativos (TN - True Negative): aquellos registros que no pertenecen a la clase objetivo y que fueron clasificados por el modelo como la clase no objetivo. Falsos positivos (FP - False Positive): aquellos registros que no pertenecen a la clase objetivo que fueron clasificados como pertenecientes a la clase objetivo. Falsos negativos (FN - False Negative): aquellos registros que pertenecen a la clase objetivo que fueron clasificados como pertenecientes a la clase no objetivo. Un ejemplo de como debe verse una matriz de confusión es presentado en la Tabla . En dicho ejemplo se puede ver como los elementos pertenecientes a la diagonal fueron el número de registros que fueron clasificados correctamente. POr otro lado los elementos que están fuera de la diagonal fueron clasificados de manera incorrecta. 34 Predicción Positivo Negativo Clase Positivo TP FN Negativo FP TN Tabla 2.1: Matriz de confusión. De la matriz de confusión se pueden derivar algunas medidas de rendimiento que serán listadas a continuación. Tasa de acierto: la fórmula de la tasa de acierto viene dada por la Ecuación 2.24: TasaAcierto = TP + TN N (2.24) Donde: • TP es el número de verdaderos positivos. • TN es el número de verdaderos negativos. • N es el número de registros contemplados en la prueba. La tasa de acierto multiplicada por 100 representa el porcentaje de acierto a la hora de clasificar, es decir, calcula el porcentaje de los elementos que estan en la diagonal principal[1]. Tasa de error: la fórmula de la tasa de error viene dada por la Ecuación 2.25: TasaError = 1− TasaAcierto (2.25) Esta medida al multiplicarse por 100 representa el porcentaje de registros clasificados de manera errónea, es decir, calcula el porcentaje de los elementos que están fuera de la diagonal principal[1]. Sensitividad: la fórmula de la sensitividad viene dada por la ecuación 2.26: Sensitividad = TP TP + FN (2.26) Esta medida de rendimiento es usada para clasificadores binarios, al multiplicarse por 100 mide el porcentaje de elementos positivos que fueron clasificados de manera co- rrecta de aquellos elementos que fueron detectados como positivos[1]. Especificidad: la fórmula de la especificidad viene dada por la Ecuación 2.27: Especificidad = TN FP + TN (2.27) 35 Esta medida de rendimiento es usada para clasificadores binarios, al multiplicarse por 100 mide el porcentaje de elementos negativos que fueron clasificados de manera co- rrecta de aquellos elementos que fueron detectados como negativos[1]. Precisión: la fórmula de la precisión viene dada por la Ecuación 2.28: Precision = TP TP + FP (2.28) Esta medida de rendimiento es usada para clasificadores binarios, al multiplicarse por 100 mide el porcentaje de elementos positivos que fueron clasificados de manera co- rrecta del total de elementos que de verdad eran positivos[1]. 2.8. Herramientas de software Existen una variedad de herramientas de software utilizadas para el desarrollo e implementa- ción de técnicas de aprendizaje automático. En esta sección se describen brevemente algunas de las herramientas más utilizadas en la actualidad. 2.8.1. R Es un lenguaje de programación interpretado, diseñado para el análisis y la programación estad́ıstica y la generación de documentos de investigación con gráficos embebidos. Este lenguaje se encuentra implementado principalmente en lenguaje C y Fortran. Además, una caracteŕıstica que destaca de esta herramienta, es que software libre, que se rige bajo las poĺıticas GNU. Este software tiene una gran aceptación por la comunidad cient́ıfica. Existen una cantidad considerable de paquetes que permiten la integración de diferentes bibliotecas accesibles para el desarrollo de proyectos. Estos paquetes se encuentran en un repositorio central, llamado CRAN10(Comprehensive R Archive Network), que a su vez, permite la clonación para aśı brindar más facilidades a la hora de requerir los paquetes. RStudio11 es un IDE bastante versátil que permite el desarrollo de diferentes tipos de pro- yectos de manera mucho más cómoda. Este entorno de desarrollo tiene una presentación gratuita para el uso personal o académico. 10https://cran.r-project.org/ 11https://www.rstudio.com/ 36 https://cran.r-project.org/ https://www.rstudio.com/ 2.8.2. Python Python 12es un lenguaje de programación de alto nivel, de propósito general e interpretado. La filosof́ıa de este lenguaje esta orientada a que el código realizado en python sea legible, y por lo tanto, favorecer a la mantenibilidad, además, es posible realizar instrucciones complejas en menos lineas de código, comparado con los lenguajes derivados de C, como C++ y C#. Este lenguaje soporta varios paradigmas, entre ellos programación imperativa, funcional y procedimental. Este lenguaje, al igual que R, consta con una cantidad importante de paquetes. Además, es bastante aceptado por la comunidad cient́ıfica. Sin embargo, este lenguaje no cuenta con un entorno de desarrollo integrado que facilite el análisis de los datos de la misma manera que RStudio. Un IDE alternativo, que facilita algunos procesos del análisis de los datos es Spyder13 2.8.3. WEKA Waikato Environment for Knowledge Analysis o WEKA14, es un software para ML desa- rrollado en Java por la Universidad de Waikato. Este software soporta tareas de preproce- samiento, agrupamiento, clasificación, regresión, visualización y selección de caracteŕısticas. Adicionalmente permite la conexión a base de datos mediante los conectores a base de datos de Java, y es de fácil uso ya que posee una interfaz gráfica intuitiva. En el sitio web de la herramienta se puede encontrar documentación y un libro que explica las técnicas del proceso de ML haciendo uso de esta herramienta[30]. 2.8.4. MATLAB MATLAB15 (MATrix LABoratory) es una herramienta de software matemático que ofrece un entorno de desarrollo integrado con un lenguaje de programación propio (lenguaje M). Está disponible para las plataformas Unix, Windows, Mac OS X y GNU/Linux. Este software es privativo es necesario tener una licencia pagada para su utilización. Es utilizada ampliamente en centros de investigación y tiene una gran cantidad de bibliotecas accesibles para el desarrollo de diferentes tipos de proyectos. 12https://www.python.org/ 13https://pypi.python.org/pypi/spyder 14http://www.cs.waikato.ac.nz/ml/index.html 15https://es.mathworks.com/products/matlab.html 37 https://www.python.org/ https://pypi.python.org/pypi/spyder http://www.cs.waikato.ac.nz/ml/index.html https://es.mathworks.com/products/matlab.html 2.9. Antecedentes En este caṕıtulo se exponen los antecedentes relacionados al desarrollo de estrategias al- goŕıtmicas o sistemas de inversión, basadas en ML. Se utilizará como base para el desarrollo del caṕıtulo las siguientes referencias bibliográficas: [3], [2], [4]. Estas referencias correspon- den a surveys que describen diferentes aplicaciones de ML para pronosticar series de tiempo financieras. Si bien la predicción como tal no es espećıficamente el problema que se busca resolver con este TEG, es la parte de mayor énfasis del mismo. El caṕıtulo está organizado de la siguiente manera: en la sección 2.10 se muestra una breve introducción acerca de la tendencia del uso de técnicas de ML en la predicción financiera, como también en mercados financieros y por último, aplicar estos pronósticos en estrategias algoŕıtmicas; en la sección 2.11 se presentan los objetivos del uso de estrategias automáticas de trading basadas en ML; en la sección 2.12 se describe el flujo de trabajo para el desa- rrollo de estrategias algoŕıtmicas basadas en ML; luego, en la sección 2.13 se exponen las herramientas que tienden a ser utilizadas en el área. 2.10. Estrategias de trading automáticas basadas en ML Los mercados financieros juegan un rol importante en la organización económica y social de la sociedad moderna. En estos tipos de mercados, la información es un activo invaluable. Sin embargo, con la modernización de las transacciones financieras y los sistemas de informa- ción, las grandes cantidades de información que están disponible para un trader puede hacer prohibitivo el análisis de los activos financieros. En las últimas décadas, muchos investiga- dores han intentado desarrollar métodos y algoritmos para apoyar la toma de decisiones en diferentes segmentos de los mercados financieros[2]. Un área de investigación particularmente activa entre académicos y profesionales de la in- dustria durante las 2 últimas décadas ha sido la construcción de sistemas que invierten en valores y monedas. El objetivo de estos esfuerzos es producir métodos de inteligencia artifi- cial que sean mejores o al menos igual de buenos que sus contra-partes humanas en la tarea del reconocimiento de oportunidades de inversión. Muchos de estos sistemas toman como entrada precios pasados del mercado e intentan generar señales que indican la dirección (y a veces la magnitud) del movimiento de algún valor relativo a otro[31]. En conjunto con los esfuerzos mencionados, existen investigaciones que buscan responder si es posible generar ganancias y cómo generarlas, utilizando técnicas de ML en algoritmos de trading. Sin embargo, las aplicaciones de ML en el área financiera no solo se centran en la predicción de series de tiempo financieras para el beneficio de los especuladores y poder generar ganancias. El ML es aplicado para detectar fraudes financieros, predecir tasas de interés, predecir tasas de cambio, entre otros. En este trabajo, solo nos enfocaremos a la aplicación de ML para el 38 desarrollo de estrategias algoŕıtmicas de trading. A pesar de la amplia variedad de problemas que han sido tratados de resolver con técnicas de ML, existe una notable importancia en el área de finanzas con respecto a la predicción de series de tiempo financieras. Es por ello que la predicción de series de tiempo financieras puede ser considerada como uno de los principales desaf́ıos en la literatura relacionada con el ML y las series de tiempo[32]. En las últimas décadas, varios enfoques se han propuesto para predecir series de tiempo financie- ras y proveer un sistemas para apoyar el proceso de toma de decisiones[5]. Dos (2) grandes grupos de trabajos que intentan pronosticar series de tiempo financieras son los modelos estad́ısticos y los enfoques de ML[33]. Los métodos estad́ısticos tradicionales, generalmente asumen que las series de tiempo en cuestión son generadas por un proceso lineal[34] e inten- tan modelar el proceso de generación de la serie de tiempo para predecir valores futuros de la misma. La clave del éxito en la predicción de los mercados de valores es alcanzar los mejores resul- tados con la mı́nima cantidad de datos de entrada. Dada la incertidumbre de un mercado, las técnicas de soft computing son candidatos viables para capturar relaciones no lineales retornando resultados significativos sin la necesidad de conocimiento previo acerca de las distribuciones estad́ısticas de los datos[4]. Existe una gran cantidad de material académico que busca resolver el problema de pronos- ticar movimientos futuros de valores. Sin embargo, no muchos trabajos incluyen el diseño y desarrollo de una estrategia de trading que se encargue de efectuar operaciones en los mercados basada en los pronósticos, para luego ser probadas en datos históricos y medir su rentabilidad a lo largo del tiempo. 2.10.1. Estrategias basadas en aprendizaje supervisado Las estrategias de trading automático son aquellas que reducen el problema de la predicción del precio o tendencia algún valor en algún universo de valores, a un problema de clasificación o regresión y a la hora de definir las reglas para entrar o salir del mercado, se toman en cuenta predicciones las predicciones para efectuar diferentes tipos de transacciones. 2.10.2. Estrategias basadas en aprendizaje no-supervisado Las estrategias basadas en aprendizaje no supervisado son aquellas que a través de alguna técnica de clustering, son capaces de identificar valores, dentro de un universo de valores, que son similares. También, al identificar los valores que son similares, se están identificando los valores que difieren entre śı. En la literatura financiera, se establece que es posible reducir el riesgo a través de las inver- siones en instrumentos financieros que no están correlacionados positivamente. Es decir, al 39 calcular el ı́ndice de correlación, se obtiene un número negativo. De manera que al identi- ficar instrumentos correlacionados negativamente, es posible reducir el riesgo de inversión. Esta identificación es llevada a cabo por técnicas de ML, espećıficamente, de aprendizaje no supervisado. 2.10.3. Estrategias h́ıbridas Es posible desarrollar una estrategia considerando ambos enfoques del ML, aprendizaje su- pervisado y aprendizaje no supervisado, ya que ambos se encargan de diferentes aspectos a considerar a la hora de desarrollar una estrategia. Sin embargo, en la literatura no se encontró ningún trabajo que considerara la unión de estos dos enfoques. 2.11. Objetivos de las estrategias de trading basadas en ML Los objetivos que se pretenden alcanzar al desarrollar una estrategia de trading automática, son los siguientes: 1. Automatizar el proceso de inversión en mercados que permiten el trading algoŕıtmico. 2. Maximizar las ganancias utilizando modelos de ML para resolver problemas inherentes del trading algoŕıtmico. 3. Reducir los efectos de las emociones humanas que conllevan a tomar decisiones poco racionales. 4. Identificar momentos espećıficos para realizar algún tipo de transacción, con el objetivo de maximizar las ganancias. Al cumplirse los objetivos anteriores, se lograŕıa la concepción de una buena estrategia de trading automática, capaz de generar ganancias mejor o al menos igual, que un humano. 2.12. Flujo de trabajo general para el desarrollo de es- trategias de trading basadas en ML Para el desarrollo de una estrategia de inversión algoŕıtmica, basada predicciones de movi- mientos obtenidas a través de técnicas de clasificación y regresión de ML, no existen algún tipo de acuerdo en el campo de la investigación, sin embargo, el problema de pronosticar series de tiempo es un problema que se ha tratado y se sigue tratando tanto en la academia 40 como en la industria. En la Figura 2.15 se puede observar el flujo de trabajo convencional a realizar, a la hora de aplicar técnicas de ML para pronosticar series de tiempo. Definir Métricas Evaluar Predictor 4. Evaluación del Pronóstico Adquisición Preprocesamiento Normalización 1. Preparación de los Datos Estructuración de los Datos Escoger Predictor Configurar Arquitectura 2. Definición del Algoritmo Definición del Algoritmo Ajustar Parametros Realizar Entrenamiento 3. Entrenamiento Figura 2.15: Flujo de trabajo convencional para pronosticar series de tiempo [2]. Dado que el principal objetivo de un sistema de comercio autónomo es maximizar el beneficio cuando se aplica a los mercados reales, el paso de la evaluación debe tener como objetivo la capacidad de obtener beneficios en un entorno comercial real o simulado. Estas cuestiones deben ser abordadas, bajo la pena de construir un método de pronóstico que no sea aplicable en la práctica o que puede causar graves daños financieros a los inversores. Por lo tanto, para construir un método de negociación inteligente, algunos pasos deben ser incluidos en esta metodoloǵıa convencional y varios pasos existentes deben ser adaptados[2]. De acuerdo con Chande[35], una estrategia de trading exitosa debe implementar 3 carac- teŕısticas principales. La primera de ellas consiste en una serie de reglas que especifican cuando entrar o salir de un intercambio. Estas reglas utilizan la señal predicha para identifi- car el mejor momento para comprar o vender valores. El objetivo principal de las reglas de trading es maximizar el beneficio financiero. En términos prácticos, utiliza la señal predicha por el modelo, para comprar activos cuando están baratos pero que tienden a apreciarse en el futuro. La segunda caracteŕıstica de un sistema de trading exitoso es un mecanismo de control de riesgo, este sistema es un conjunto de reglas que protegen el dinero invertido, como las 41 ordenes stop-loss. Las estrategias de control de riesgo deben definir el beneficio y el riesgo que desean tomar. La tercera y última caracteŕıstica es un mecanismo de manejo de dinero. Este mecanismo se encarga de manejar el tamaño de la posición, es decir, la cantidad de recursos que se colocan a la hora de realizar una inversión, considerando el capital total y el riesgo que involucra la inversión. Definir Métricas Evaluar Predictor 4. Evaluación del Pronóstico Adquirir Datos Preprocesar Normalizar 1. Preparación de los Datos Estructurar de los Datos Escoger Predictor Configurar Arquitectura 2. Definición del Algoritmo Definición del Algoritmo Ajustar Parametros Realizar Entrenamiento 3. Entrenamiento Definir Variables de Entrada Definir Variables de Salida Definir Reglas Definir Control de Riesgo Definir Manejo del Dinero 5. Estrategias de Inversión Definir Métricas Evaluar Ganancias 6. Evaluación de la Estrategia Figura 2.16: Flujo de trabajo de estrategia basada en pronósticos de series de tiempo [2]. En la Figura 2.16 se observa el flujo de trabajo observado en la Figura 2.15 incluyendo los pasos necesarios para el desarrollo de una estrategia de trading exitosa. En la definición de las variables de entrada, no existe un consenso acerca de cuales variables observar. En la literatura se observó que las investigaciones utilizan diferentes tipos de va- riables de entrada. En Krollner, Vanstone, y Finnie[3] se realizó una clasificación de algunos trabajos según los tipos de variables de entrada utilizadas por los algoritmos de ML. En la Tabla 2.2 se muestran los trabajos clasificados según las variables observadas. En la etapa de Preprocesamiento, a la hora de diseñar una estrategia de trading basada 42 en ML, es necesario especificar que variable de salida se va a obtener a través del modelo. La variable mas utilizada es el precio del d́ıa siguiente[2][3]. Existen trabajos relacionados a varias etapas del preprocesamiento que utilizan técnicas de ML y otras técnicas de soft computing. Por ejemplo, encontrar el conjunto de variables de entrada que optimice algún criterio. Variables de Entrada Número de Trabajos Datos de Precios del Pasado 35 Volumen 4 Indicadores Técnicos 13 Precio del Petroleo 4 S&P 500 / NASDAQ / Dow Jones 4 Tasa de Desempleo 1 Suministro Monetario 3 Tasas de Cambio 3 Precio del Oro 3 Tasas de Interés a Corto y a Largo Plazo 6 Otras 10 Tabla 2.2: Clasificación de trabajos por variables de entrada[3]. En el trabajo de Cavalcante, Brasileiro, Souza, Nobrega, y Oliveira[2] también se realiza una clasificación de trabajos. En este survey se observa una clara tendencia por la utilización de variables técnicas en vez de fundamentales y noticias financieras. Del mismo modo, en [4] Atsalakis y Valavanis, clasificaron 100 art́ıculos que utilizan ANN para la predicción de series de tiempo financieras y en dicho trabajo se encuentra una tendencia a utilizar como variables de entrada, variables técnicas. Además del tipo de variables a utilizar, a la hora de aplicar estrategias de trading es necesario especificar el universo de valores al cual se va aplicar la estrategia. El universo puede ser un mercado en espećıfico, las acciones que forman parte de un ı́ndice, entre otros. Otros aspectos a considerar, es el número de variables de entrada, el tamaño de la muestra. En la Tabla 2.3 se muestra una clasificación considerando diferentes universos de valores. El número de variables de entrada utilizadas por cada modelo difieren en general, el número promedio de variables se encuentra entre 4 y 10[4]. En la actualidad existen trabajos cient́ıficos que tienen como objetivo mejorar los resultados a través de técnicas de procesamiento. La preparación de los datos es el primer paso de cualquier sistema inteligente de trading. Luego de definir las variables de entrada y salida para modelar el activo financiero y adquirir los datos de entrada a ser utilizados en la fase de entrenamiento, la aplicación de algunos procedimientos de preprocesamiento sobre estos datos puede ser muy útil, ya que estos pueden ser utilizados para mejorar la precisión de un modelo predictor inteligente en varias formas[2]. 43 Mercado de valores Número de Trabajos Bolsa de Amsterdam 2 Bolsa de Valores de Atenas 4 Bolsa de Valores de Australia 3 Bolsa de Valores de Belgica 1 Bolsa de Valores de Chipre 2 Índice Financial Times 2 Bolsa de Valores de Alemania 5 Bolsa de Valores de Hong Kong 1 Bolsa de Valores de Indonesia 1 Bolsa de Valores de Estanbul 3 Bolsa de Valores de Korea 5 Bolsa de Valores de Madrid 2 NASDAQ 4 Bolsa de Valores de Nueva York 5 NIKKEI-Bolsa de valores de Tokio 5 Bolsa de Valores de Filipinas 1 Bolsa de Valores de Polonia 2 Bolsa de Valores de Riga 1 Bolsa de Valores de Sao Paolo 1 Bolsa de Valores de Shangai 4 Bolsa de Valores de Singapur 4 Índices S&P 500, NASDAQ y Dow Jones 18 Bolsa de Valores de Taiwan 4 Bolsa de Valores de Toronto 1 Tabla 2.3: Clasificación según el universo de valores[4]. El siguiente paso correspondiente, en la tarea de pronosticar sobre series de tiempo finan- cieras, es la elección del método de pronóstico. En las últimas décadas, varios enfoques han sido propuestos para predecir mercados financieros y proveer sistemas de apoyo para la toma de decisiones[5]. Las técnicas de soft computing como sistemas expertos, sistemas difusos y ANN, han sido aplicadas con éxito relativo en modelar y predecir series de tiempo financieras[36]. Con el objetivo de escoger un modelo predictor que permita cumplir con los objetivos de una estrategia automática, se han realizado varios estudios que tienen como meta predecir o modelar el mercado. En la literatura se pueden encontrar trabajos relacionados a la mineŕıa de texto para clasificar noticias y establecer un modelo en base a estas, predictores basa- dos en ANN, SVM, DT, modelos ensamblados de ML, modelos h́ıbridos y otros enfoques para pronosticar. En la Tabla 2.4 se realizó una clasificación de los estudios revisados en Cavalcavante[2], según sus metas principales. Es notable una tendencia hacia la realización 44 de la utilización e algoritmos de soft computing, incluyendo técnicas de ML, para predecir los mercados. Meta Principal Número de Trabajos Predecir 36 Selección de Caracteŕısticas 6 Clustering 4 Eliminación de ruido 4 Detección de Valores anómalos 3 Segmentación de Series de Tiempo 4 Tabla 2.4: Clasificación respecto a las metas principales[2]. Con respecto a los algoritmos de utilizados utilizados para predecir los mercados, Atsalakis et al. [4] revisó 100 trabajos con respecto a esta tarea. Todos los trabajos revisados en dicho survey utilizan variaciones de ANNs. Una revisión mas reciente de la literatura fue realizada por Krollner et al.[3], en esta revisión se clasifican estudios basados en ML que buscan predecir movimientos en los mercados, en donde se puede observar una clara tendencia a utilizar ANNs. Cavalcavante et al[2], en una revisión bastante reciente, también clasificó cada trabajo por las técnicas utilizadas, en donde se puede observar una tendencia a utilizar técnicas basadas en SVM y ANN. En la Tabla 2.5 se muestra la clasificación realizada Krollner et al[3] con respecto a las tecnoloǵıas utilizadas. Tecnoloǵıa Número de Publicaciones Basadas en ANN 21 Técnicas de Optimización y algoritmos evolutivos 4 Hı́bridas 15 Otras 6 Tabla 2.5: Clasificación según las tecnoloǵıas[3]. Otro fase importante dentro de la literatura son las medidas de rendimiento al evaluar los modelos de ML. Krollner et al. [3] clasificó los estudios revisados según el método utilizado para evaluar los modelos de ML. En la Tabla 2.6 se encuentra la clasificación realizada por Krollner et al[3]. En esta tabla se puede observar que la mayoŕıa de las publicaciones no utilizan un sistema o estrategia de trading para evaluar el rendimiento de las predicciones en un entorno real. Sin embargo, la comparación con la estrategia Buy & Hold, donde la estrategia de B&H es simplemente comprar un conjunto de valores y mantenerlos durante el intervalo de tiempo a evaluar,nunca se ejcuta la venta de este conjunto de valores, tiene importancia académica ya que existen hipótesis como la de Fama y Malkiel[37], en donde se concluye que de ser cierta la hipótesis planteada, la única forma de generar ingresos seŕıa a través de una estrategia Buy & Hold. Del mismo modo, existen hipótesis que plantean que los cambios de precios en los valores son modelados por un Camino Aleatorio. Es decir, que 45 tienen la misma distribución de probabilidad y son independientes entre śı. De ser cierto esto, no es posible beneficiarse de la información del pasado para pronosticar el futuro[38]. Evaluación del Modelo Número de Publicaciones Buy & Hold 9 Camino Aleatorio 6 Técnicas Estad́ısticas 18 Otras Técnicas de ML 28 Sin Método de Evaluación 7 Tabla 2.6: Clasificación por métodos de evaluación [3]. 2.13. Herramientas utilizadas En este caṕıtulo se describen las herramientas utilizadas para la realización de estrategias de trading basadas en pronósticos de modelos de ML. En la mayoŕıa de las publicaciones revisadas, no se especifica que herramientas de software o hardware fueron utilizadas a la hora de realizar el estudio. Sin embargo, algunas pocas publicaciones indican que utilizaron Python16, Microsoft Azure17 y MATLAB18. 16https://www.python.org/ 17https://azure.microsoft.com/es-es/ 18https://es.mathworks.com/products/matlab.html 46 https://www.python.org/ https://azure.microsoft.com/es-es/ https://es.mathworks.com/products/matlab.html Caṕıtulo 3 Marco aplicativo En este caṕıtulo se describen a detalle la metodoloǵıa, consideraciones de diseño, considera- ciones de implementación y la arquitectura planteada para el desarrollo de las actividades descritas en el Caṕıtulo 4 3.1. Metodoloǵıa El presente trabajo se guió por el flujo de trabajo para desarrollar estrategias basadas en pronósticos de series de tiempo presentado en la Figura 2.16. Es importante resaltar en este punto, que al realizar pronósticos basados en este flujo de trabajo, es posible regresar a etapas previas en busca de mejoras en los resultados. 3.2. Consideraciones de diseño Se crearon 8 modelos de clasificación de ML para determinar la tendencia del precio del d́ıa siguiente, sobre un conjunto de datos técnicos que abarcan un periodo de 10 años (desde el 01- 01-2007 hasta el 02-01-2017) de las acciones de Apple(AAPL), IBM(IBM), Google(GOOGL), Amazon(AMZN) y el ETF SPY(SPY). A partir de los datos técnicos, se calcularon todos los indicadores especificados en la tabla 3.1. Sobre estos indicadores, se construyeron los conjuntos de entrenamiento y prueba por cada 3 años, a modo de ventana deslizante. Los algoritmos utilizados para la construcción de los modelos fueron los siguientes: 1. LR. 2. KNN. 3. DT. 47 4. SVM-Kernel lineal. 5. SVM-Kernel polinomial. 6. SVM-Kernel radial. 7. SVM-Kernel sigmoide. 8. MLP Estos algoritmos fueron seleccionados debido a su popularidad en el área de ML e inclusive, muchos de ellos también son ampliamente utilizados en la tarea espećıfica de pronosticar series tiempo financieras, como se exponen en los trabajos [2] [3] [4]. Por fines prácticos, se utilizaron los parámetros por defecto en cada uno de los modelos construidos. En total, se establecieron un total de 320 modelos, ya que se utilizo cada algoritmo para cada acción, para cada conjunto de entrenamiento. Luego de construir los modelos y probarlos en sus respectivos peŕıodos de prueba, se evalúan sobre las métricas specificity, recall y balanced accuracy. Las funciones utilizadas para implementar los modelos se encargan al mismo tiempo de calcular las métricas para evaluar el desempeño de los mismos. Cada función espera por parámetros un conjunto de datos y esta se encarga de dividir el conjunto, en 2 subconjuntos, uno de entrenamiento y otro de prueba. Las funciones además calculan las matrices de confusión y otras métricas derivadas de la misma para su posterior evaluación. El modelo de regresión loǵıstica fue calculado a través de un modelo lineal generalizado que utiliza como enlace la función logit. Con las probabilidades obtenidas, se clasificaron las instancias como 1, si la probabilidad es mayor que 0.555, 0 en caso contrario. El criterio de decisión fue establecido por medio de ensayo y error. K-vecinos fue calculado utilizando la distancia euclidiana entre cada fila del conjunto de prueba. La clasificación de la instancia se da por mayoŕıa de votos. En caso de empate, se decide al azar. Árbol de decisión, espećıficamente de clasificación, sigue el algoritmo de dividir recursi- vamente el conjunto de datos, utilizando la caracteŕıstica que mejor separa los datos. La caracteŕıstica que mejor separa los datos es aquel que minimiza el ı́ndice Gini. Este criterio fue utilizado por su popularidad en el contexto, además de ser un parámetro por defecto en la biblioteca utilizada. Se utilizaron 4 tipos de kernels a la hora de implementar los modelos de máquinas de vectores de soporte. Los 4 kernels fueron: lineal, polinomial, radial y sigmoide. Fueron tomados los parámetros por defecto establecidos por la biblioteca. La estructura de las redes neuronales implementadas esta dada por un perceptron multicapa, en el cual la capa escondida tiene un número de neuronas definido por la ráız de la cantidad de neuronas de entrada. 48 I1 = RSI(t) I2 = (x(t)− bollingerupper)/bollingerupper I3 = (x(t)− bollingerlower)/bollingerlower I4 = %K(t) I5 = %D(t) I6 = %K(t)− %K(t− 1) I7 = %D(t)− %K(t− 1) I8 = (x(t)− x(t− 1)/x(t− 1) I9 = (x(t)− xl(t− 1)/xh(t)− xl(t) I10 = (PMAs(t)− PMAs(t− 1)/PMAs(t− 1) I11 = (PMAl(t)− PMAl(t− 1)/PMAl(t− 1) I12 = (PMAs(t)− PMAl(t− 1)/PMAl(t− 1) I13 = (x(t)− PMAl(t))/PMAl(t) I14 = (x(t)−min(x(t), ..., x(t− 5))/min(x(t), ..., x(t− 5)) I15 = (x(t)−max(x(t), ..., x(t− 5))/max(x(t), ..., x(t− 5)) I16 = (v(t)− v(t− 1))/v(t− 1) I17 = (VMAs(t)− VMAs(t− 1))/VMAs(t− 1) I18 = (VMAl(t)− VMAl(t− 1))/VMAl(t− 1) I19 = (VMAs(t)− VMA− l(t− 1))/VMAl(t− 1) I20 = (v(t)− VMAl(t))/VMAl(t) I21 = (v(t)−min(v(t), ..., v(t− 5))/min(v(t), ..., v(t− 5)) I22 = (v(t)−max(v(t), ..., v(t− 5))/max(v(t), ..., v(t− 5)) Tabla 3.1: Variables de entrada[5]. Donde x(t), xh(t), xl(t) y v(t) corresponden a los precios de cierre, alto, bajo, y al volumen, respectivamente, en el d́ıa t; bollingerupper y bollingerlower corresponden a las bandas de Bollinger; PMAs y PMAl corresponden a medias móviles sim- ples de corto y largo plazo, respectivamente; VMAs y VMAl corresponden a medias móviles simples de corto y largo plazo, respectivamente, aplicadas al volumen; por último, %K(t) y %D(t) corresponden a las ĺıneas rápida y lenta, respectivamente, del oscilador estocástico. Finalmente, se crea un sistema de trading basada en el trabajo de [5] en conjunto con la estrategia Luxor y los modelos de ML. Esta estrategia luego es evaluada y comparada con otras estrategias mediante los retornos acumulados de cada una de ellas. 3.2.1. Flujo de entrenamiento Para el entrenamiento de los modelos se utiliza el conjunto de datos de los indicadores técnicos especificados en la Tabla 3.1. Luego, se analizaron estad́ısticamente cada una de las columnas. Posterior al análisis se realizó la eliminación de ciertos datos. Seguidamente, se separaron los datos por año y se establecieron los conjuntos de entrenamiento y prueba, considerando una ventana de 3 años donde los 2 primeros años corresponden a los datos de entrenamiento y el último año corresponde al conjunto de datos de prueba. Luego, se realizó el 49 entrenamiento de cada uno de los modelos con parámetros por defectos, establecidos por las bibliotecas que contienen las implementaciones de cada uno de los algoritmos. Se entrenaron 320 modelos, de acuerdo a las caracteŕısticas mencionadas anteriormente. 3.2.2. Flujo de prueba Para la fase de prueba de los modelos, se llevo a cabo el mismo esquema del entrenamiento. Se probaron los 320 modelos en sus respectivos conjuntos de datos de prueba. Posteriormente, se construyeron las matrices de confusión de cada prueba, se agruparon por cada algoritmo y por cada acción y se tomó el promedio del recall, sensivity y balanced accuracy. Seguidamente se seleccionó el modelo que tuvo mejor desempeño para cada acción. 3.2.3. Creación de la estrategia Se creó una estrategia basada en criterio de decisión que se expone en el trabajo de Teixeira y Oliveira [5] con respecto al indicador RSI. Este criterio se resume a no tomar posiciones largas cuando el indicador RSI muestra valores por encima de 70. Además de considerar el cruce de 2 medias móviles, una de 30 periodos y otra de 50 peŕıodos de tiempo, similar a la estrategia conocida como Luxor [39] y el promedio de. En la estrategia diseñada, solo se consideran decisiones para tomar posiciones largas en el mercado, es decir, entrar al mercado con una operación de compra. No se consideran apalancamientos ni costos de transacciones variables. Se estableció como capital inicial 10 mil dolares americanos y un costo por transacción de 10 dolares americanos. 3.2.4. Evaluación de la estrategia Se crearon estrategias alternativas para la posterior comparación con la estrategia que uti- liza los modelos de ML. Estas estrategias fueron: - Comprar y mantener de las acciones AAPL, AMZN, GOOGL e IBM. Considerando un portafolio de pesos uniformes (es decir, se invirtió la misma cantidad de capital para cada acción) - Comprar y manter del indice SPY - Luxor, considerando solo posiciones largas - Estrategia basada en el RSI - Luxor considerando solo posiciones largas y además, el RSI Se evaluó cada una de estas estrategias en base a la cantidad de retornos acumulados que generan. Posteriormente se compararon con la estrategia que toma en cuenta los pronósticos realizados por los modelos de ML. 50 3.3. Consideraciones de implementación Para la implementación de las estrategias se utilizó la libreria de R Quanstrat. Todos a excepción de 2 indicadores, presentan valores entre -1 y 1. De manera que solo se consideraron aquellos que se encuentran en este rango, ya que esto permite un mejor desempeño para los modelos basados en distancia[1]. El tiempo de entrenamiento de todos los modelos fue cronometrado. Este ronda los 17 se- gundos. Al momento de llevar a cabo la implementación, se presentaron fallas con respecto a la obtención de los datos otorgados por Google Finance. Debido a esto, la implementación se realizó con datos técnicos obtenidos de Yahoo Finance19. Tanto la fase de entrenamiento como la fase de prueba, se realizaron estableciendo una semilla (777) para la reproducibilidad de los resultados. Las bibliotecas que contienen las implementaciones de los algoritmos de ML fueron: - rpart - nnet - e1071 - class Las bibliotecas rpart y class, fueron utilizadas en la asignatura Mineŕıa de Datos y además, existe una gran cantidad de ejemplos y documentación disponible en ĺınea. Para la implementación de los modelos SVM, se utilizó la biblioteca e1072. Es descrito como una interfaz de la biblioteca libsvm, siendo esta la biblioteca más utilizada por la comunidad cient́ıfica para la resolución de problemas que ameritan la utilización de SVM [1]. Se utilizó la biblioteca nnet para la implementación de las redes neuronales. Por una parte, nnet es el paquete de NN con mayor documentación en la web. Este paquete soporta arqui- tecturas de NN de una sola capa intermedia que se entrena haciendo uso de las técnicas de propagación hacia adelante y hacia atrás [1]. El código de este trabajo se encuentra en un repositorio privado en la plataforma GitHub20. 3.4. Infraestructura de la solución Hardware: Procesador intel core i7 16 GB de memoria RAM Software 19https://finance.yahoo.com/ 20https://github.com/ 51 https://finance.yahoo.com/ https://github.com/ Ubuntu 16.04 LTS como sistema operativo R como lenguaje de programación en su versión 3.4.3 RStudio en su version 1.1.383 como entorno de desarrollo integrado 52 Caṕıtulo 4 Análisis e interpretación de los resultados 4.1. Recolección de los datos En esta sección se obtienen los datos técnicos de las acciones SPY, AAPL, AMZN, GOOGL e IBM y se muestran varias métricas relacionadas con estos datos. Los datos técnicos obtenidos y mencionados anteriormente, por la biblioteca quantmod, presentan las métricas estad́ısticas mostradas en las Tablas 4.1, 4.2, 4.3, 4.4, 4.5. En la Tabla 4.6 se muestran las dimensiones de los conjuntos de datos correspondientes a cada acción, como también la cantidad de valores no disponibles (NA - Not available) de cada conjunto. Las columnas correspondientes al precio de las acciones (Open, High, Low, Close) muestran valores considerablemente elevados en las acciones de Amazon y Google, comparados con el resto. Métrica Open High Low Close Volume Mı́nimo 57.55 59.29 56.83 57.69 36251400 Máximo 229.42 229.71 229.01 229.57 871026300 Media 139.16 139.96 138.28 139.17 172594106 Mediana 123.51 124.11 122.75 123.49 146960450 Tabla 4.1: SPY - OHLCV La Figura 4.1 muestra precios de cierre considerablemente mayores para las acciones de Google y Amazon. Amazon, en particular, se mantuvo desde el principio con precios mayores que el resto, sin embargo, las acciones de Google se elevaron mucho más que el resto a partir del año 2012. 53 Métrica Open High Low Close Volume Mı́nimo 0.1153 0.1191 0.1135 7.563 11475900 Máximo 129.8403 129.9176 127.4155 125.973 843242400 Media 29.2000 29.4569 28.9343 51.710 132248440 Mediana 0.6166 0.6191 0.6107 40.857 106009750 Tabla 4.2: AAPL - OHLCV Métrica Open High Low Close Volume Mı́nimo 35.29 37.07 34.68 35.03 984400 Máximo 845.79 847.21 840.60 844.36 104329200 Media 263.16 266.14 259.98 263.23 6028962 Mediana 208.59 213.59 206.06 210.59 4813200 Tabla 4.3: AMZN - OHLCV Métrica Open High Low Close Volume Mı́nimo 65.76 67.48 61.95 128.8 520600 Máximo 859.05 867.00 850.52 858.5 46528000 Media 294.40 296.91 291.54 402.5 5887853 Mediana 155.78 156.78 154.55 311.4 4590100 Tabla 4.4: GOOGL - OHLCV Métrica Open High Low Close Volume Mı́nimo 60.46 63.98 57.77 56.84 1027500 Máximo 193.23 193.69 192.26 184.56 30770700 Media 134.45 135.56 133.46 128.27 5904215 Mediana 143.70 145.26 142.61 137.44 5027800 Tabla 4.5: IBM - OHLCV Conjunto de datos Número de filas Número de columnas Cantidad de valores NA AAPL 2538 6 0 AMZN 2538 6 0 GOOGL 2538 6 0 IBM 2538 6 0 SPY 2538 6 0 Tabla 4.6: Descripción de los datos 54 2008 2010 2012 2014 2016 0 2 0 0 4 0 0 6 0 0 8 0 0 Index P re ci o d e c ie rr e Precios de cierre de cada instrumento SPY IBM AAPL AMZN GOOGL Figura 4.1: Precios de cierre. 4.2. Pre-procesamiento En esta fase se realiza la limpieza de los datos y la selección de caracteŕısticas que se utilizarán para construir los modelos. Las variables seleccionadas son las establecidas por la Tabla 3.1. Estas corresponden a las especificadas en el trabajo de Oliveira [5]. En principio, con los datos obtenidos de Yahoo Finance, se sustituyeron los datos NA obte- nidos y luego, se calcularon los indicadores técnicos haciendo uso de las funciones provistas 55 por la biblioteca. La tabla xts21 de R, utilizada comúnmente para manipular series de tiem- po. Debido al cálculo de los indicadores, se generaron ciertos valores NA. Estos valores NA fueron sustituidos por la media de la columna (cada columna corresponde a un indicador). También, se generaron valores que tienden al infinito, debido al cálculo de los indicadores en los que la división necesaria se realizaba con un divisor muy cercano a cero. Los indicadores que mostraron valores infinitos fueron eliminados y no se tomaron en cuenta para cómputos posteriores. Espećıficamente, esto ocurrió con el conjunto de datos correspondiente al ETF SPY en las variables i16 e i21, expuestas en la Tabla 3.1. Además, cada una de las variables se encuentran entre el −1 y 1 sin embargo, la variable i1 correspondiente al indicador RSI presenta una gran diferencia entre el rango de valores con respecto al resto. En la Figura 4.2 se muestra una comparación entre 2 imágenes en donde se superponen todos los indicadores. En la Figura 4.2a se observa en el gráfico como la ĺınea de color negro presenta una gran diferencia con el resto. La Figura 4.2b muestra una gráfica en la cual no se contempla el RSI. Debido a la gran diferencia entre el RSI y el resto de indicadores, el indicador RSI no se tomó en cuenta a partir de este punto, ya que los métodos basados en distancia se ven afectados por este tipo de situaciones [1]. ene 02 2008 feb 01 2008 mar 03 2008 abr 01 2008 may 01 2008 jun 02 2008 jul 01 2008 ago 01 2008 sep 02 2008 oct 01 2008 nov 03 2008 dic 01 2008 dic 31 2008 Indicadores sin RSI 2008−01−02 / 2008−12−31 0 20 40 60 0 20 40 60 (a) Indicadores con RSI ene 02 2008 feb 01 2008 mar 03 2008 abr 01 2008 may 01 2008 jun 02 2008 jul 01 2008 ago 01 2008 sep 02 2008 oct 01 2008 nov 03 2008 dic 01 2008 dic 31 2008 Indicadores sin RSI 2008−01−02 / 2008−12−31 0 1 2 3 0 1 2 3 (b) Indicadores sin RSI Figura 4.2: Diferencia entre la mayoŕıa de los indicadores y el indicador RSI. Por último, se calcularon los retornos de cada d́ıa y se tomo en cuenta que si el signo del retorno es positivo, entonces el precio sube. Para cada d́ıa, se definió como clase 1 si al d́ıa siguiente el signo del retorno es positivo y 0, en caso contrario. Este esquema se estableció para aplicar algoritmos de aprendizaje supervisado, espećıficamente, algoritmos de clasificación, ya que en varios trabajos relacionados, lo establecen de forma similar. Entre estos trabajos se encuentra el trabajo de Lu y el de Teixeira y Oliveira. En la Figura 4.3 se muestran los valores que toma la columna correspondiente a la clase durante el primer año de la acción AAPL. En la Figura 4.4 se muestra un gráfico de barras correspondientes a la cantidad de veces en que sube y las veces en que no sube durante el primer año de la acción AAPL. 21https://cran.r-project.org/web/packages/xts/index.html 56 https://cran.r-project.org/web/packages/xts/index.html Conjunto de datos Número de filas Número de columnas Cantidad de valores NA AAPL 2538 22 0 AMZN 2538 22 0 GOOGL 2538 22 0 IBM 2538 22 0 SPY 2538 20 0 Tabla 4.7: Descripción de los conjuntos de datos de cada acción. Estos conjuntos de datos están conformados por los indicadores mencionados en la Tabla 3.1 luego de limpiar los datos y adjuntar a cada conjunto la columna respectiva a la clase. ene mar may jul sep nov ene 0. 0 0. 2 0. 4 0. 6 0. 8 1. 0 Index va lo re s Clase − Sube de precio o no Figura 4.3: Clase. 4.3. Evaluación de los modelos Al implementarse los modelos según lo explicado en la Sección 3, se obtuvieron los resultados que se muestran en las Tablas 4.8, 4.9 y 4.10. En base a estos resultados, en base a estos resultados, se realizaron 2 estrategias, uno tomando en cuenta los mejores modelos con 57 Fr ec ue nc ia 0 50 100 0 1 Figura 4.4: Gráfico de barras de la clase del primer año de la acción AAPL. respecto a la métrica specificity y otro con respecto a la métrica recall. Si bien los resultados muestran un bajo desempeño de los modelos, son coherentes con el hecho de predecir un evento tan dinámico y complejo. Modelo SPY AAPL AMZN GOOGL IBM LR 0.37 0.39 0.40 0.38 0.39 KNN 0.38 0.38 0.38 0.37 0.40 DT 0.36 0.40 0.38 0.37 0.38 LINEAR 0.37 0.39 0.41 0.37 0.39 POLY 0.37 0.38 0.40 0.37 0.40 RADIAL 0.38 0.37 0.38 0.37 0.37 SIG 0.38 0.39 0.40 0.38 0.38 NN 0.39 0.39 0.39 0.38 0.38 Tabla 4.8: Balanced accuracy En las Tablas 4.11, 4.12 y 4.13 se muestran los mejores modelos con respecto a las acciones. Al observar los resultados, se interpreta que en promedio, la probabilidad de que un modelo acierte en la mayoŕıa de los casos es menor que realizar un lanzamiento de una moneda 58 Modelo SPY AAPL AMZN GOOGL IBM LR 0.44 0.41 0.52 0.46 0.44 KNN 0.30 0.29 0.40 0.36 0.34 DT 0.38 0.37 0.37 0.37 0.37 LINEAR 0.28 0.31 0.49 0.36 0.35 POLY 0.20 0.20 0.41 0.27 0.25 RADIAL 0.33 0.32 0.42 0.33 0.33 SIG 0.27 0.26 0.41 0.34 0.31 NN 0.37 0.30 0.38 0.25 0.33 Tabla 4.9: Specificity Modelo SPY AAPL AMZN GOOGL IBM LR 0.30 0.37 0.28 0.30 0.34 KNN 0.46 0.47 0.36 0.37 0.45 DT 0.35 0.43 0.39 0.38 0.39 LINEAR 0.47 0.47 0.32 0.38 0.44 POLY 0.54 0.56 0.38 0.48 0.55 RADIAL 0.42 0.43 0.34 0.40 0.41 SIG 0.49 0.52 0.38 0.42 0.44 NN 0.42 0.48 0.40 0.50 0.44 Tabla 4.10: Recall justa22 y clasificar en base al resultado del lanzamiento. SPY AAPL AMZN GOOGL IBM Modelo LR LR LR LR LR Tabla 4.11: Mejores modelos con respecto a la métrica specificity. SPY AAPL AMZN GOOGL IBM Modelo POLY POLY NN NN POLY Tabla 4.12: Mejores modelos con respecto a la métrica recall. SPY AAPL AMZN GOOGL IBM Modelo NN DT LINEAR SIG POLY Tabla 4.13: Mejores modelos con respecto a la métrica balanced accuracy. 22Una moneda justa es aquella que tiene 0.5 de probabilidad de caer cara en un lanzamiento. 59 4.4. Evaluación de la estrategia En esta sección se analizan y se comparan los resultados obtenidos por las estrategias men- cionadas en 3.2.4. En la Tabla 4.14 se muestra la cantidad de dolares finales al aplicar cada estrategia mencio- nada. En esta tabla se puede observar que la estrategia que utiliza las predicciones de los modelos resulta mejor en cuanto a ganancia de dolares. Existen muchos otras métricas con las cuales se pueden evaluar las estrategias. Por ejemplo, métricas relacionadas al riesgo y métricas que realizan un promedio ponderado entre riesgo y ganancia. Sin embargo, en este trabajo solo se tomó en cuenta el dinero al iniciar la estrategia y al finalizar, como también, los retornos acumulados obtenidos por cada una de estas estrategias a lo largo del tiempo de evaluación. En las Figuras 4.5, 4.6, y 4.7 se muestra el rendimiento de cada estrategia con respecto a los retornos acumulados. En las gráfica 4.5 se puede observar como el precio de las acciones de Amazon son las que tienen un mayor aumento de valor en los últimos años, en esa misma figura la ĺınea correspondiente al portafolio balanceado uniformemente, de las 4 acciónes, presenta un mejor desempeño con respecto a las acciones de IBM y Google. En la gráfica. En la Figura 4.6 se muestra 2 ĺıneas de tiempo, una representa una estrategia B&H del ETF SPY y la otra representa un portafolio uniforme conformado por las 4 acciones, en esta gráfica se evidencia un mejor desempeño de parte del portafolio compuesto por las 4 acciones. En la Figura 4.7 se muestran la estrategias especificadas en Caṕıtulo 3. En la gráfica se evidencia que aunque los modelos de ML no tienen un buen desempeño, una estrategia que utilice los pronósticos de los modelos ya antes mencionados, tuvo un mejor desempeño que aquellas estrategias que no tomaron en cuenta los pronósticos. Tabla 4.14: My caption Estrategia Equidad final Luxor 93352.11 Luxor + RSI 89443.17 RSI 162317.6 B&H - SPY 16840.09 B&H - AAPL 36862.82 B&H - AMZN 40577 B&H - GOOGL 22540.91 B&H - IBM 18180.19 B&H - Stocks 29540.23 Luxor + RSI + ML 342291.6 60 2007−01−04 2008−07−01 2009−07−01 2010−07−01 2011−07−01 2012−07−02 2014−01−02 2015−01−02 2016−01−04 0 5 1 0 1 5 2 0 PORTFOLIO AMZN AAPL GOOGL IBM V a lo r Retornos acumulados Figura 4.5: Retornos acumulados de estrategia B&H de cada acción y un portafolio unifor- memente balanceado de las 4 acciones. 4.5. Trabajos relacionados En el trabajo de Lu [6] se construyó un sistema automatizado de trading basado en algorit- mos de ML. Basados en el precio histórico de los precios de los instrumentos financieros, los modelos de ML tienen como objetivo predecir los retornos del d́ıa siguiente del instrumento objetivo. Una estrategia personalizada de trading toma las predicciones de los modelos como datos de entrada para generar ordenes de compra y venta a un simulador de mercado, donde esas ordenes son ejecutadas. En este trabajo se encontró que con solo los datos históricos del precio de los instrumentos financieros no es suficiente para predecir los retornos futuros. Da- do ese hecho, utilizaron datos adicionales relacionados al sector financiero al que pertenecen dichos instrumentos. Este enfoque arrojó mejores resultados, ya que algunos modelos alcan- zaron casi 60 % de precisión. Además, se encontró que al utilizar variaciones de los algoritmos de ML como optimizaciones de curvas ROC o modelos ensamblados que combinan modelos básicos de algoritmos de ML, pueden mejorar la precisión y proveer resultados significativos. La estrategia de trading personalizada mostró señales de estar siguiendo de manera correcta 61 2007−01−04 2008−07−01 2009−07−01 2010−07−01 2011−07−01 2012−07−02 2014−01−02 2015−01−02 2016−01−04 0 2 4 6 8 PORTFOLIO SPY V a lo r Retornos acumulados Figura 4.6: Retornos acumulados de estrategia B&H del Portfolio uniformemente balanceado vs. ETF SPY . el mercado de acciones, alcanzando casi 20 % de retornos acumulados durante el peŕıodo de prueba. En el trabajo de Teixeira y Oliveira [5] se implemento un sistema de trading basado en datos de cierre y el volumen histórico de acciones de la bolsa de valores de Brasil. Se utilizó un clasificador KNN en conjunto con herramientas comunes del trading como lo son los filtros RSI, ya que estas herramientas son usualmente ignoradas en trabajos académicos. El sistema une el clasificador KNN con los filtros de RSI. Este sistema obtuvo mejor desempeño con respecto a una estrategia B&H de cada instrumento, en 12 de 15 escenarios. 62 2007−01−03 2008−07−01 2009−07−01 2010−07−01 2011−07−01 2012−07−02 2014−01−02 2015−01−02 2016−01−04 0 1 0 2 0 3 0 Luxor RSI Luxor.RSI Luxor.RSI.ML V a lo r Retornos acumulados Figura 4.7: Retornos acumulados de las estrategias implementadas. 63 64 Caṕıtulo 5 Conclusiones En este trabajo de investigación se realizaron modelos de ML basados únicamente en los datos técnicos históricos que buscan predecir el alza o baja del precio de cierre del d́ıa siguiente de algún instrumento financiero. Para ello se realizó una amplia revisión bibliográfica con el fin de indagar acerca de las técnicas utilizadas en esta área de investigación que involucra las finanzas y la inteligencia artificial. Con esto se obtuvo información sobre las metodoloǵıas y tendencias aplicadas al tema en cuestión. Una vez estudiada la bibliograf́ıa, este trabajo de investigación se centró en aplicar técnicas de clasificación para generar Las actividades llevadas a cabo en este trabajo se realizaron siguiendo el flujo de trabajo expuesto en la Figura 2.16, utilizando como datos de entrada los datos técnicos de las accio- nes AMZN, AAPL, GOOGL e IBM. Para la implementación y evaluación de los modelos, se utilizaron las tecnoloǵıas, técnicas y los conceptos expuestos en el Caṕıtulo 2. La metodo- loǵıa, las consideraciones de diseño e implementación y la infraestructura de la solución son expuestas respectivamente en el Caṕıtulo 3. Durante el proceso de construir los modelos e identificar el modelo de mejor desempeño, se pudo observar que ninguno de los modelos realmente es capaz de predecir con una certeza considerable el alza o baja del mercado, según los parámetros establecidos y especificados en el Caṕıtulo 3. Sin embargo, al evaluar la estrategia diseñada tomando en cuenta los pronósticos del modelo realizado, con respecto al resto se pudo observar que esto tiene un mejor desempeño en cuanto a retornos acumulados. Esto no es evidencia suficiente para afirmar que estas técnicas realmente mejoran en todos los casos posibles las estrategias de trading, ya existen una gran cantidad de acciones, sectores, indicadores, ventanas posibles de tiempo a evaluar, además de esto, la naturaleza del problema involucra una cantidad infinita de variables, ya que las personas que participan en los mercados con sus decisiones, a su vez, estas decisiones son causadas por ciertas influencias, de manera que el problema a resolver es tan complejo como se quiera. En conclusión, luego de observar los resultados de los modelos, podemos concluir que al utilizar las técnicas y los datos que se utilizaron en este trabajo, no son suficientes para 65 clasificar alzas o bajas de las acciones seleccionadas, pero, una estrategia que considere los indicadores técnicos y las reglas que se utilizaron, es posible obtener más ganancias que al no considerar los pronósticos. Sin embargo, es importante considerar que las acciones utilizadas no sufren de cáıdas prolongadas, de hecho, mantienen una proporción mayor de retornos positivos que negativos. 5.1. Contribuciones Las contribuciones de este trabajo de investigación son las siguientes: Se realizó una revisión amplia sobre las tendencias de la implementación de estrategias automatizadas de trading basados en técnicas de ML que pueden servir como punto de partida para futuros trabajos de investigación. Se realizó investigación en un área de sumo interés por la comunidad mundial, demos- trando la aplicabilidad de las estrategias basados en técnicas de ML. Adicionalmente, se expusieron otras consideraciones particulares durante la implementación que pue- den ser de ayuda para otras personas que realicen investigación en el mismo campo de estudio. La investigación realizada puede ser utilizada como material para materias tales como: Inteligencia Artificial y Mineŕıa de datos. 5.2. Limitaciones La principal limitación de este trabajo es que al involucrar ganancias monetarias, y además, en un área en donde la información tiene mucho valor, las personas que utilizan de manera exitosa estrategias automatizadas de trading no publican sus modelos ni metodoloǵıas, de manera que es bastante complicado encontrar información acerca del estado del arte. 5.3. Trabajos futuros Se proponen los siguientes trabajos futuros: Utilizar diferentes ventanas de tiempo para entrenar y evaluar los modelos. Utilizar técnicas avanzadas y novedosas de inteligencia artificial como Deep learning y Reinforcement learning. Combinar técnicas estad́ısticas con técnicas de ML para la toma de decisiones en las estrategias. 66 Combinar otras estrategias de trading conocidas, como lo es Luxor, con modelos de ML. Cualquier combinación de los puntos anteriores. 67 68 Referencias [1] D. Perez, “Diseño, implementación y evaluación de técnicas h́ıbridas de aprendizaje automático en la detección de intrusos en redes de computadoras,” 2017. [2] R. C. Cavalcante, R. C. Brasileiro, V. L. Souza, J. P. Nobrega, y A. L. Oliveira, “Compu- tational intelligence and financial markets: A survey and future directions,” Expert Sys- tems with Applications, vol. 55, pp. 194–211, 2016. [3] B. Krollner, B. Vanstone, y G. Finnie, “Financial time series forecasting with machine learning techniques: A survey,” 2010. [4] G. S. Atsalakis y K. P. Valavanis, “Surveying stock market forecasting techniques–part ii: Soft computing methods,” Expert Systems with Applications, vol. 36, n.◦ 3, pp. 5932– 5941, 2009. [5] L. A. Teixeira y A. L. I. De Oliveira, “A method for automatic stock trading combining technical analysis and nearest neighbor classification,” Expert systems with applications, vol. 37, n.◦ 10, pp. 6885–6890, 2010. [6] N. Lu, “A machine learning approach to automated trading,” 2016. [7] J. J. Murphy, Technical analysis of the financial markets: A comprehensive guide to trading methods and applications. Penguin, 1999. [8] Z. Bodie y R. C. Merton, Finanzas. Pearson Educación, 2003. [9] “Mercado,” http://www.investopedia.com/terms/m/market.asp, accedido: 22/07/2017. [10] A. M. Engúıdanos, Diccionario de contabilidad, auditoŕıa y control de gestión. Ecobook, 2009, vol. 3. [11] “Liquidez,” http://economipedia.com/definiciones/liquidez.html, accedido: 22/07/2017. [12] “Retorno,” http://www.investopedia.com/terms/r/return.asp, accedido: 22/07/2017. [13] G. C. Canavos et al., Probabilidad y estad́ıstica: aplicaciones y métodos, 1988, n.◦ 519.2 C3P7 QA273. [14] “Riesgo,” http://www.investopedia.com/terms/r/risk.asp, accedido: 22/07/2017. 69 http://www.investopedia.com/terms/m/market.asp http://economipedia.com/definiciones/liquidez.html http://www.investopedia.com/terms/r/return.asp http://www.investopedia.com/terms/r/risk.asp [15] “Hipótesis de mecados eficientes,” http://www.investopedia.com/terms/e/ efficientmarkethypothesis.asp, accedido: 22/07/2017. [16] “Índice,” http://www.investopedia.com/terms/i/index.asp, accedido: 22/07/2017. [17] “Trading algoŕıtmico,” http://www.investopedia.com/terms/a/algorithmictrading.asp, accedido: 22/07/2017. [18] “Momentum,” http://www.investopedia.com/terms/m/momentum.asp, accedido: 22/07/2017. [19] “Media móvil exponencial,” http://www.investopedia.com/terms/t/tsi.asp, accedido: 22/07/2017. [20] “Índice estocástico de momentum,” http://www.investopedia.com/ask/answers/ 021315/what-difference-between-stochastic-oscillator-stochastic-momentum-index.asp, accedido: 22/07/2017. [21] J. W. Wilder, New concepts in technical trading systems. Trend Research, 1978. [22] S. Marsland, Machine learning: an algorithmic perspective. CRC press, 2015. [23] T. M. Mitchell et al., “Machine learning. wcb,” 1997. [24] G. James, D. Witten, T. Hastie, y R. Tibshirani, An introduction to statistical learning. Springer, 2013, vol. 112. [25] C. M. Bishop, Pattern recognition and machine learning. springer, 2006. [26] T. H. Cormen, Introduction to algorithms. MIT press, 2009. [27] C. C. Aggarwal, Data mining: the textbook. Springer, 2015. [28] S. Rogers y M. Girolami, A first course in machine learning. CRC Press, 2016. [29] D. K. Bhattacharyya y J. K. Kalita, Network anomaly detection: A machine learning perspective. CRC Press, 2013. [30] I. H. Witten, E. Frank, M. A. Hall, y C. J. Pal, Data Mining: Practical machine learning tools and techniques. Morgan Kaufmann, 2016. [31] A. Booth, E. Gerding, y F. Mcgroarty, “Automated trading with performance weighted random forests and seasonality,” Expert Systems with Applications, vol. 41, n.◦ 8, pp. 3651–3661, 2014. [32] F. E. Tay y L. Cao, “Application of support vector machines in financial time series forecasting,” omega, vol. 29, n.◦ 4, pp. 309–317, 2001. [33] J.-Z. Wang, J.-J. Wang, Z.-G. Zhang, y S.-P. Guo, “Forecasting stock indices with back propagation neural network,” Expert Systems with Applications, vol. 38, n.◦ 11, pp. 14 346–14 355, 2011. 70 http://www.investopedia.com/terms/e/efficientmarkethypothesis.asp http://www.investopedia.com/terms/e/efficientmarkethypothesis.asp http://www.investopedia.com/terms/i/index.asp http://www.investopedia.com/terms/a/algorithmictrading.asp http://www.investopedia.com/terms/m/momentum.asp http://www.investopedia.com/terms/t/tsi.asp http://www.investopedia.com/ask/answers/021315/what-difference-between-stochastic-oscillator-stochastic-momentum-index.asp http://www.investopedia.com/ask/answers/021315/what-difference-between-stochastic-oscillator-stochastic-momentum-index.asp [34] D. A. Kumar y S. Murugan, “Performance analysis of indian stock market index using neural network time series model,” in Pattern Recognition, Informatics and Mobile En- gineering (PRIME), 2013 International Conference on. IEEE, 2013, pp. 72–78. [35] T. S. Chande, Beyond technical analysis: How to develop and implement a winning trading system. John Wiley & Sons, 2001, vol. 101. [36] H. Lee, R. Grosse, R. Ranganath, y A. Y. Ng, “Convolutional deep belief networks for scalable unsupervised learning of hierarchical representations,” in Proceedings of the 26th annual international conference on machine learning. ACM, 2009, pp. 609–616. [37] B. G. Malkiel y E. F. Fama, “Efficient capital markets: A review of theory and empirical work,” The journal of Finance, vol. 25, n.◦ 2, pp. 383–417, 1970. [38] B. G. Malkiel, A random walk down Wall Street: including a life-cycle guide to personal investing. WW Norton & Company, 1999. [39] E. Tomasini y U. Jaekle, Trading Systems: A New Approach to System Development and Portfolio Optimisation. Harriman House Limited, 2009. 71 Índice de figuras Índice de tablas Introducción Objetivo general Objetivos específicos Justificación Distribución del documento Marco teórico Descripción general del trading y las finanzas Finanzas Análisis técnico Filosofía o razón de ser Tendencia Momento Indicadores técnicos Trading automatizado Resumen Motivación Aprendizaje automático (ML - Machine Learning) Técnicas de aprendizaje automático Aprendizaje supervisado Aprendizaje no-supervisado Proceso de ML Recolección de los datos Selección de características Selección del algoritmo Selección de los parámetros y el modelo Entrenamiento Evaluación Herramientas de software R Python WEKA MATLAB Antecedentes Estrategias de trading automáticas basadas en ML Estrategias basadas en aprendizaje supervisado Estrategias basadas en aprendizaje no-supervisado Estrategias híbridas Objetivos de las estrategias de trading basadas en ML Flujo de trabajo general para el desarrollo de estrategias de trading basadas en ML Herramientas utilizadas Marco aplicativo Metodología Consideraciones de diseño Flujo de entrenamiento Flujo de prueba Creación de la estrategia Evaluación de la estrategia Consideraciones de implementación Infraestructura de la solución Análisis e interpretación de los resultados Recolección de los datos Pre-procesamiento Evaluación de los modelos Evaluación de la estrategia Trabajos relacionados Conclusiones Contribuciones Limitaciones Trabajos futuros ReferenciasUniversidad Central de Venezuela Facultad de Ciencias Escuela de Computación Desarrollo de estrategias de inversión algoŕıtmica en mercados de valores basadas en aprendizaje automático Trabajo Especial de Grado presentado ante la Ilustre Universidad Central de Venezuela Por el Bachiller Leonardo Santella Tutor: Prof. Hector Navarro Caracas, junio de 2018 ii Agradecimientos Gracias a mi familia, ya que ellos son mi soporte y mi inicio en muchos aspectos. Gracias los profesores que expusieron sus conocimientos relacionados con la mineŕıa de datos y el Aprendizaje automático, a ellos les debo el interés incesante en estas áreas de estudio. Gracias al Ing. Alexander Ramı́rez por su aporte de ideas relacionadas con el trading. Gracias a mi amigo Alan Urbina por su apoyo en general. Gracias a la aldea y a todos aquellos compañeros y amigos que no menciono por los buenos momentos. Gracias al profesor y amigo Fernando Crema, a mis amigos Deyban Pérez y Eric Bellet por todo su aporte de ideas en esta investigación, y en general, por su incondicional apoyo. Gracias a Karina Garćıa por su compañia, cariño y apoyo durante todo este trabajo. Gracias a mi tutor, profesor y amigo Hector Navarro por sus consejos y tiempo durante todo este trabajo. Dedicado a mis abuelos, Leonardo Dambrosio, Velia Galante, Luigia Di Buono y Antonio Santella. iii iv Resumen T́ıtulo Desarrollo de estrategias de inversión algoŕıtmica en mercados de valores basadas en apren- dizaje automático. Autor: Leonardo Santella. Tutores: Prof. Hector Navarro. La automatización de los procesos realizados por humanos dio origen a la computación. Desde el simple calculo de operaciones matemáticas hasta el reconocimiento de d́ıgitos escritos a mano, son ejemplos de procesos de automatización en la actualidad. Actualmente, en los mercados de valores en los EEUU, la mayor parte de las transacciones son realizadas por algoritmos que operan en la bolsa, también denominados sistemas automáticos de trading. La utilización de sistemas automatizados en mercados ha sido la tendencia en la industria financiara durante los últimos años. Una de las mas grandes atracciones de dichos sistemas es que a través de ellos se eliminan las emociones de los operadores humanos, ya que todo se encuentra sistematizado. Como enfoque innovador en el área, han surgido tendencias en donde se involucran modelos de aprendizaje automático para mejorar el desempeño de estos sistemas automatizados. Por lo expuesto previamente, en el presente trabajo especial de grado se realizó un estudio de las tendencias de investigación entre las áreas de ML y finanzas, espećıficamente, trading de acciones en el mercado de valores de los EEUU, utilizando datos técnicos de empresas bien conocidas en el área de la computación, para diseñar e implementar estrategias o sistemas automatizados de trading los cuales son apoyados por modelos de aprendizaje supervisados, bien conocidos en el área de ML, obteniendo aśı resultados que no demuestran un buen rendimiento a nivel de modelos de ML pero que aun aśı, tomando en v cuenta la información que proveen los modelos, en conjunto con otros criterios de decisión, implementar una estrategia de inversión automatizada la cual tiene un mejor desempeño que el resto de estrategias las cuales no toman en cuenta ningún modelo de ML para tomar decisiones. Palabras clave: Mercados, aprendizaje automático, modelos, predicción, acciones, finanzas, retornos, tra- ding. vi Tabla de contenidos Índice de figuras IX Índice de tablas XI 1. Introducción 1 1.1. Objetivo general . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 1.2. Objetivos espećıficos . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 1.3. Justificación . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 1.4. Distribución del documento . . . . . . . . . . . . . . . . . . . . . . . . . . . 3 2. Marco teórico 5 2.1. Descripción general del trading y las finanzas . . . . . . . . . . . . . . . . . . 5 2.2. Finanzas . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5 2.3. Análisis técnico . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 8 2.3.1. Filosof́ıa o razón de ser . . . . . . . . . . . . . . . . . . . . . . . . . . 8 2.3.2. Tendencia . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 9 2.3.3. Momento . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 9 2.3.4. Indicadores técnicos . . . . . . . . . . . . . . . . . . . . . . . . . . . . 10 2.4. Trading automatizado . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 18 2.4.1. Resumen . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 18 2.4.2. Motivación . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 20 2.5. Aprendizaje automático (ML - Machine Learning) . . . . . . . . . . . . . . . 21 2.6. Técnicas de aprendizaje automático . . . . . . . . . . . . . . . . . . . . . . . 21 2.6.1. Aprendizaje supervisado . . . . . . . . . . . . . . . . . . . . . . . . . 21 2.6.2. Aprendizaje no-supervisado . . . . . . . . . . . . . . . . . . . . . . . 29 2.7. Proceso de ML . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 32 2.7.1. Recolección de los datos . . . . . . . . . . . . . . . . . . . . . . . . . 32 2.7.2. Selección de caracteŕısticas . . . . . . . . . . . . . . . . . . . . . . . . 33 2.7.3. Selección del algoritmo . . . . . . . . . . . . . . . . . . . . . . . . . . 33 2.7.4. Selección de los parámetros y el modelo . . . . . . . . . . . . . . . . . 33 2.7.5. Entrenamiento . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 33 2.7.6. Evaluación . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 33 vii 2.8. Herramientas de software . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 36 2.8.1. R . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 36 2.8.2. Python . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 37 2.8.3. WEKA . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 37 2.8.4. MATLAB . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 37 2.9. Antecedentes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 38 2.10. Estrategias de trading automáticas basadas en ML . . . . . . . . . . . . . . 38 2.10.1. Estrategias basadas en aprendizaje supervisado . . . . . . . . . . . . 39 2.10.2. Estrategias basadas en aprendizaje no-supervisado . . . . . . . . . . . 39 2.10.3. Estrategias h́ıbridas . . . . . . . . . . . . . . . . . . . . . . . . . . . . 40 2.11. Objetivos de las estrategias de trading basadas en ML . . . . . . . . . . . . . 40 2.12. Flujo de trabajo general para el desarrollo de estrategias de trading basadas en ML . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 40 2.13. Herramientas utilizadas . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 46 3. Marco aplicativo 47 3.1. Metodoloǵıa . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 47 3.2. Consideraciones de diseño . . . . . . . . . . . . . . . . . . . . . . . . . . . . 47 3.2.1. Flujo de entrenamiento . . . . . . . . . . . . . . . . . . . . . . . . . . 49 3.2.2. Flujo de prueba . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 50 3.2.3. Creación de la estrategia . . . . . . . . . . . . . . . . . . . . . . . . . 50 3.2.4. Evaluación de la estrategia . . . . . . . . . . . . . . . . . . . . . . . . 50 3.3. Consideraciones de implementación . . . . . . . . . . . . . . . . . . . . . . . 51 3.4. Infraestructura de la solución . . . . . . . . . . . . . . . . . . . . . . . . . . 51 4. Análisis e interpretación de los resultados 53 4.1. Recolección de los datos . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 53 4.2. Pre-procesamiento . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 55 4.3. Evaluación de los modelos . . . . . . . . . . . . . . . . . . . . . . . . . . . . 57 4.4. Evaluación de la estrategia . . . . . . . . . . . . . . . . . . . . . . . . . . . . 60 4.5. Trabajos relacionados . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 61 5. Conclusiones 65 5.1. Contribuciones . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 66 5.2. Limitaciones . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 66 5.3. Trabajos futuros . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 66 Referencias 69 viii Índice de figuras 2.1. Ejemplo de tendencia bajista. . . . . . . . . . . . . . . . . . . . . . . . . . . 10 2.2. Ejemplo de tendencia alcista. . . . . . . . . . . . . . . . . . . . . . . . . . . 11 2.3. Ejemplo de tendencia lateral. . . . . . . . . . . . . . . . . . . . . . . . . . . 12 2.4. Ejemplo de media móvil simple. . . . . . . . . . . . . . . . . . . . . . . . . . 13 2.5. Ejemplo de media móvil exponencial. . . . . . . . . . . . . . . . . . . . . . . 14 2.6. Ejemplo de bandas de Bollinger. . . . . . . . . . . . . . . . . . . . . . . . . . 15 2.7. Ejemplo de ı́ndice de momento estocástico. . . . . . . . . . . . . . . . . . . . 17 2.8. Ejemplo de RSI. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 18 2.9. Regresión lineal. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 22 2.10. Función sigmoide. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 24 2.11. SVM [1]. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 26 2.12. Árbol de decisión. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 27 2.13. Red neuronal [1]. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 29 2.14. Clustering de 3 conjuntos [1]. . . . . . . . . . . . . . . . . . . . . . . . . . . 30 2.15. Flujo de trabajo convencional para pronosticar series de tiempo [2]. . . . . . 41 2.16. Flujo de trabajo de estrategia basada en pronósticos de series de tiempo [2]. 42 4.1. Precios de cierre. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 55 4.2. Diferencia entre la mayoŕıa de los indicadores y el indicador RSI. . . . . . . . 56 4.3. Clase. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 57 4.4. Gráfico de barras de la clase del primer año de la acción AAPL. . . . . . . . 58 4.5. Retornos acumulados de estrategia B&H de cada acción y un portafolio uni- formemente balanceado de las 4 acciones. . . . . . . . . . . . . . . . . . . . . 61 4.6. Retornos acumulados de estrategia B&H del Portfolio uniformemente balan- ceado vs. ETF SPY . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 62 4.7. Retornos acumulados de las estrategias implementadas. . . . . . . . . . . . . 63 ix x Índice de tablas 2.1. Matriz de confusión. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 35 2.2. Clasificación de trabajos por variables de entrada[3]. . . . . . . . . . . . . . . 43 2.3. Clasificación según el universo de valores[4]. . . . . . . . . . . . . . . . . . . 44 2.4. Clasificación respecto a las metas principales[2]. . . . . . . . . . . . . . . . . 45 2.5. Clasificación según las tecnoloǵıas[3]. . . . . . . . . . . . . . . . . . . . . . . 45 2.6. Clasificación por métodos de evaluación [3]. . . . . . . . . . . . . . . . . . . 46 3.1. Variables de entrada[5]. Donde x(t), xh(t), xl(t) y v(t) corresponden a los pre- cios de cierre, alto, bajo, y al volumen, respectivamente, en el d́ıa t; bollingerupper y bollingerlower corresponden a las bandas de Bollinger; PMAs y PMAl co- rresponden a medias móviles simples de corto y largo plazo, respectivamente; VMAs y VMAl corresponden a medias móviles simples de corto y largo plazo, respectivamente, aplicadas al volumen; por último, %K(t) y %D(t) correspon- den a las ĺıneas rápida y lenta, respectivamente, del oscilador estocástico. . . 49 4.1. SPY - OHLCV . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 53 4.2. AAPL - OHLCV . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 54 4.3. AMZN - OHLCV . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 54 4.4. GOOGL - OHLCV . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 54 4.5. IBM - OHLCV . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 54 4.6. Descripción de los datos . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 54 4.7. Descripción de los conjuntos de datos de cada acción. Estos conjuntos de datos están conformados por los indicadores mencionados en la Tabla 3.1 luego de limpiar los datos y adjuntar a cada conjunto la columna respectiva a la clase. 57 4.8. Balanced accuracy . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 58 4.9. Specificity . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 59 4.10. Recall . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 59 4.11. Mejores modelos con respecto a la métrica specificity. . . . . . . . . . . . . . 59 4.12. Mejores modelos con respecto a la métrica recall. . . . . . . . . . . . . . . . 59 4.13. Mejores modelos con respecto a la métrica balanced accuracy. . . . . . . . . . 59 4.14. My caption . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 60 xi xii Siglas ANN Red Neural. Artificial Neural Networks B&H Comprar y Mantener. Buy & Hold DT Árbol de Decisión. Decision Tree EEUU Estados Unidos EMA Media Móvil Exponencial. Exponential Moving Average EMH Hipótesis de los Mercados Eficientes.Efficient Market Hypothesis FNN Red Neuronal Anticipativa. Feedforward Neural Network HFT trading de alta frecuencia. High Frequency Trading IDE Entorno de Desarrollo Integrado. Integrated Development Environment IPO Oferta Pública Inicial. Initial Public Offering KNN K-Vecinos. K-Nearest Neighbors LR Regresión Loǵıstica. Logistic Regression ML Aprendizaje Automático. Machine Learning pp. 2, 3 MLP Perceptrón multicapa. Multi-Layer Perceptron NA No disponible. Not Available PNN Red Neuronal Probabiĺıstica. Probabilistic Neural Network RSI Índice de fuerza realtiva. Relative Strength Index SMA Media Móvil Simple. Simple Moving Average S&P Standard & Poor’s Index SVM Máquinas de vectores soporte. Support Vector Machine TEG Trabajo Especial de Grado xiii xiv Caṕıtulo 1 Introducción La automatización de los procesos realizados por humanos dio origen a la computación. Desde el simple calculo de operaciones matemáticas hasta el reconocimiento de d́ıgitos escritos a mano, son ejemplos de procesos automatizados en la actualidad. Actualmente, en los mercados de valores en los EEUU, la mayor parte de las transacciones son realizadas por algoritmos que operan en la bolsa, también denominados sistemas automáticos de trading. La utilización de sistemas automatizados en mercados de valores ha sido la tendencia en la industria financiera durante los últimos años. Un sistema automatizado de trading utiliza modelos cuantitativos avanzados para generar ciertas decisiones a la hora de operar en los mercados, automáticamente env́ıa una ordenes al mercado y, a su vez, las gestiona luego de que estas fueron procesadas. Una de las más grandes atracciones de dichos sistemas es que a través de ellos se eliminan las emociones de los operadores humanos, ya que todo se encuentra sistematizado, incluso, estas tecnoloǵıas pueden reducir costos y mejorar la liquidez en el mercado[6]. Existen tres pasos necesarios para la construcción de un sistema automatizado de trading. Primero, el sistema tiene que tener algún modelo que genere predicciones sobre el mercado de valores. Segundo, una estrategia que debe ser especificada para operar en un mercado, que toma en cuenta las predicciones del mercado como entrada y como salida produce las ordenes que serán enviadas al mercado. Por último, es necesario evaluar el rendimiento del sistema en datos históricos del mercado para determinar la viabilidad de dicho sistema. Actualmente, la investigación se ha enfocado en la precisión de las predicciones, pero tendiendo a ignorar los otros dos pasos que son de suma importancia en la construcción de un sistema automatizado de trading confiable y lucrativo. Con lo descrito en el párrafo anterior, surgen las preguntas: ¿Es posible desarrollar un mode- lo de aprendizaje automático que pueda predecir las alzas y bajas del mercado? ¿Es posible desarrollar y evaluar sistemas automatizados de trading utilizando como datos de entrada los pronósticos de los modelos que busquen predecir las alzas o bajas del mercado? Estas preguntas será respondida diseñando, implementando y analizando modelos de clasificación 1 de aprendizaje automático, utilizando como métrica base los datos proporcionados en las matrices de confusión que permitan medir el desempeño general de cada modelo, posterior- mente, se diseñará, implementará y analizará una estrategia de trading que tome en cuenta las predicciones de los modelos para tomar decisiones de entrada o salida en el mercado de valores de EEUU. 1.1. Objetivo general Aplicación de las técnicas y tecnoloǵıas del ML a la definición y aplicación de estrategias de Inversión en el mercado de Capitales. 1.2. Objetivos espećıficos Indagar en el estado actual de la investigación acerca del desarrollo de estrategias de inversión en mercados de capitales, basadas en ML. Diseñar e implementar estrategias de inversión que involucren modelos de ML. Evaluar y comparar los resultados de diferentes estrategias. Identificar mecanismos o técnicas de ML que mejoren el desempeño de los portafolios. Registrar los resultados y consideraciones encontradas durante la implementación de la propuesta. 1.3. Justificación Con el crecimiento exponencial de los datos debido al uso global de Internet, se evidencia una creciente acumulación de datos generados por infinidades de dispositivos que tienen acceso a Internet. Los mercados se han visto envueltos en este uso exponencial de Internet, ya que muchos de estos tienen la capacidad de ser operados a través de Internet. Esto hace que los participantes del mercado se mantengan generando datos de manera constante. Además, la información de los precios generada, referente a los instrumentos que se intercambian en estos mercados, es pública y gratuita. Existe la necesidad de los participantes de estos mercados de generar ganancias a través de la compra y venta de instrumentos financieros. Una de las formas conocidas para generar ganancias a través de los mercados es tratar de entender la mecánica de los precios y actuar en base al comportamiento del mercado, sabiendo como se va a comportar en un futuro. 2 Existen varios enfoques para analizar los mercados, sin embargo todos ellos tienen como objetivo tratar de predecir su comportamiento para actuar en base a este. Los enfoques vaŕıan en las variables que toman en cuenta cada uno de ellos. Un enfoque ampliamente utilizado para analizar los mercados es el análisis técnico. Este se basa en observar únicamente el precio y el volumen de algún instrumento. En conjunto con el auge de Internet, el hardware de las computadoras mejoró notablemente, con respecto al momento en que se crean los conceptos de ML. En la actualidad, se implemen- tan modelos de ML para resolver problemas que antes, debido a restricciones de hardware, era bastante complicado. Los modelos de ML permiten la obtención de información a través del uso de los datos. Los datos son utilizados para conformar dichos modelos y la informa- ción obtenida a través de los modelos es utilizada para diferentes tareas. En el caso de los mercados financieros, es posible beneficiarse de los modelos de ML para obtener información y apoyar la toma de decisiones con respecto a una compra o venta de un instrumento de manera automática, haciendo uso de estrategias algoŕıtmicas. Con base en lo anterior, se observa que: existe la necesidad de generar ganancias por parte de los participantes del mercado; existe la posibilidad de obtener datos acerca de los precios y el volumen de los instrumentos financieros que se intercambian en los mercados y existen modelos que buscan describir y predecir comportamientos, basándose en datos. De esta ma- nera surge la necesidad de saber si es posible obtener ganancias en los mercados financieros haciendo uso de modelos de ML. La realización de este trabajo se ve justificada en la impor- tancia que comprenden los mercados financieros como también, el ML, en el mundo y en la comunidad cient́ıfica. Este trabajo podrá ser utilizado para otros TEG que se relacionen con los mercados financie- ros y con el ML. Además, el material generado podrá ser utilizado en asignaturas relacionadas con el ML, tales como Inteligencia Artificial y Mineŕıa de Datos. 1.4. Distribución del documento Una vez descrito el escenario, este trabajo busca responder las interrogantes planteadas al principio de este caṕıtulo. Aśı mismo, el documento consta de 5 caṕıtulos. El Caṕıtulo 1 in- troduce el problema a tratar, los objetivos planteados y la justificación de la investigación. El Capitulo 2 establece las bases teóricas necesarias para el correcto entendimiento del trabajo, en este caṕıtulo se incluyen conceptos importantes relacionados con las áreas de finanzas y aprendizaje automático. En el Caṕıtulo 3 se establece la metodoloǵıa y consideraciones a tomar a la hora de implementar las actividades que involucra el desarrollo, implementación y evaluación de los modelos y estrategias de trading. El Caṕıtulo 4 describe los resultados obtenidos durante el experimento y el análisis correspondiente de cada etapa. Por último, el Caṕıtulo 5 presenta las conclusiones del trabajo, describiendo los aportes, limitaciones y planteamiento de trabajos futuros. 3 4 Caṕıtulo 2 Marco teórico 2.1. Descripción general del trading y las finanzas En este caṕıtulo se describen los conceptos relacionados al trading, la inversión algoŕıtmica y a las finanzas. El caṕıtulo está estructurado en tres secciones. En la Sección 2.2 se definen varios conceptos relacionados con las finanzas que se utilizan a lo largo del documento, en esta sección se utiliza como base bibliográfica el sitio web Investopedia1. En la sección 2.3 se definen conceptos del análisis técnico, en esta sección se utiliza como base bibliográfica el trabajo de Murphy[7]. Por último, en la Sección 2.4 se realiza una śıntesis de los términos y conceptos, como también, la definición de otros términos relacionados a los sistemas que operan automáticamente en los mercados de valores. En esta sección se utiliza como base bibliográfica el trabajo de Lu[6]. 2.2. Finanzas Las finanzas estudian la manera en que la gente asigna recursos escasos en el transcurso del tiempo. Dos caracteŕısticas que distinguen las decisiones financieras y otras decisiones rela- cionadas con la distribución o asignación de recursos, consisten en que los costos y beneficios de las primeras: se distribuyen a lo largo del tiempo y, ni los decisores ni los demás suelen conocerlos anticipadamente con certeza. Por ejemplo, al decidir si debe uno o no tener su propio restaurante, es necesario comparar los costos (como la inversión en instalar el local y comprar cocinas, mesas, sillas, pequeñas sombrillas de papel para servir bebidas exóticas y el resto del equipo que se requiera) con los beneficios inciertos (las ganancias futuras) que esperan obtener durante varios años[8]. 1www.investopedia.com 5 www.investopedia.com La teoŕıa financiera consta de una serie de conceptos que nos ayudan a organizar ideas sobre cómo asignar recursos en el transcurso del tiempo y de un grupo de modelos cuantitativos que nos permiten evaluar alternativas, adoptar decisiones y realizarlas. Los mismos conceptos básicos y modelos cuantitativos se aplican a todos los niveles de la toma de decisiones: desde de alquilar un automóvil o iniciar un negocio hasta la decisión del director financiero de una gran empresa de entrar en la industria de las telecomunicaciones o la decisión del Banco Mundial acerca de cuáles proyectos de desarrollo financiar[8]. A continuación, se definen una serie de conceptos relacionados con las finanzas y que a su vez tienen un rol fundamental a la hora de desarrollar sistemas de inversión automática. Mercado: Un mercado es un medio que permite a los compradores y vendedores de un bien o servicio espećıfico, interactuar con el fin de facilitar el intercambio. Este tipo de mercado puede ser un mercado f́ısico donde las personas se reúnen para intercambiar bienes y servicios en persona, como en un bazar, o centro comercial; o un mercado virtual en donde compradores y vendedores no interactúan, como en un mercado en ĺınea[9]. Acción: Una acción en el mercado financiero es un t́ıtulo emitido por una sociedad que representa el valor de una de las fracciones iguales en que se divide su capital social. Las acciones, generalmente, confieren a su titular, llamado accionista, derechos poĺıticos, como el de voto en la junta de accionistas de la entidad, y económicos, como participar en los beneficios de la empresa[10]. Mercado de valores: Es el lugar donde se intercambian acciones de empresas públi- cas. Una empresa pasa a ser pública cuando realiza una Oferta Pública Inicial (IPO - Initial Public Offering), que significa que cualquier inversionista alrededor del mundo puede comprar o intercambiar acciones en la compañ́ıa[6]. Estos mercados también son conocidos comúnmente como bolsas de valores. Inversión: Una inversión, en el sentido económico, es una colocación de capital pa- ra obtener una ganancia futura. Esta colocación supone una elección que resigna un beneficio inmediato por uno futuro y, por lo general, improbable. En el caso particular de inversión financiera, los recursos se colocan en t́ıtulos, valores, y demás documentos financieros, a cargo de otros entes, con el objeto de aumentar los excedentes disponibles por medio de la percepción de rendimientos, intereses, dividen- dos, variaciones de mercado, u otros conceptos. Especulación: Especular es toda aquélla operación comercial en la que se busca obte- ner algún lucro a corto plazo. El operar en la bolsa o hacer trading, busca obtener lucro a corto plazo en la mayoŕıa de los casos. Una manera común de especular es comprar un producto a cierto precio, cierto d́ıa y al d́ıa siguiente venderlo a un precio mayor. En la bolsa de valores, los precios se mueven de acuerdo a la oferta y la demanda. Los traders buscan ineficiencias en el mercado para lucrarse. A partir de este punto, a lo largo del documento se utilizará el termino trading y operar, de manera indistinta, 6 para referirse al hecho de operar en la bolsa con el objetivo de obtener lucro a corto plazo. Liquidez: La liquidez se es la capacidad de un activo de convertirse en dinero gastable en el corto plazo sin tener que arriesgar a vender ese activo a un precio más barato. Cuando se dice que un mercado es ĺıquido significa que en ese mercado se mueve mucho dinero y por lo tanto será fácil intercambiar activos de ese mercado por dinero[11]. Existen mercados de valores donde la liquidez es mayor que en otros. En los mercados con mayor liquidez es posible realizar ventas en corto2 mientras que en mercados poco ĺıquidos no es posible. Retorno: Es la ganancia o la perdida de un instrumento financiero en un peŕıodo de tiempo. Los retornos consisten en la renta y las ganancias capitales de una inversión y se expresa habitualmente en forma de porcentaje. Una regla general es que a mayor riesgo, mayores serán las ganancias o las perdidas[12]. Matemáticamente se puede expresar de esta manera: Retorno(t) = V alor(t) V alor(t− 1) − 1 (2.1) Donde: • t es un peŕıodo de tiempo. Riesgo:El riesgo implica la posibilidad de que el retorno real de una inversión será di- ferente de la rentabilidad esperada. El riesgo incluye la posibilidad de perder parte o la totalidad de la inversión original. Las diferentes versiones de riesgo generalmente se miden mediante el cálculo de la desviación estándar3 de los retornos históricos o los retornos promedio de una inversión espećıfica[14]. Eficiencia de mercado: La eficiencia del mercado se refiere al grado en que los precios de las acciones y otros precios de los valores reflejan toda la información disponible y relevante Hipótesis de los mercados eficientes (EMH - Efficient Market Hypothesis): La Hipótesis de los Mercados Eficientes es una teoŕıa que afirma que es imposible ”ven- cer al mercado”4 debido a que la eficiencia del mercado de valores causa que los precios de las acciones existentes siempre incorporen y reflejen toda la información relevante. De acuerdo con EMH, los valores siempre se transan a un valor justo en los mercados 2Las ventas en corto son un tipo de acción permitida en los mercados. Un operador puede tomar una posición de venta sin tener el instrumento financiero que se desea vender. El operador toma prestado cierta cantidad y lo vende a un precio, luego, si el precio baja, el operador tendrá la oportunidad de comprar la misma cantidad que tomó prestada y lucrarse de la diferencia. De esta manera es posible lucrarse en mercados bajistas. 3Una definición de desviación estándar puede ser encontrada en [13]. 4Vencer al mercado significa generar mayores ganancias que el ı́ndice del mercado en cuestión. 7 de valores, haciendo imposible para los inversionistas comprar valores infravalorados 5 o vender valores a precios inflados. Como tal, debe ser imposible superar el mercado general a través de la selección de valores por expertos o la sincronización del mer- cado, y la única manera en que un inversionista puede obtener mayores beneficios es mediante inversiones más riesgosas.[15]. Índice: Un Índice es un indicador o una medida de algo, en finanzas, t́ıpicamente se refiera a una medida estad́ıstica de cambio en el mercado de valores. En el caso de ı́ndices de mercados financieros, valores y bonos, estos consisten en una cartera de valores hipotética que representa un segmento en particular del mercado. El S&P500 y el US Aggregate Bond Index son puntos de referencia para el mercado americano de valores y bonos, respectivamente[16]. Sistemas de trading algoŕıtmico: El trading algoŕıtmico, también conocido co- mo algotrading y black-box trading, es un sistema de trading que utiliza modelos ma- temáticos avanzados y complejos y fórmulas para tomar decisiones de alta velocidad y transacciones en los mercados financieros. El comercio algoŕıtmico implica el uso de programas informáticos rápidos y algoritmos complejos para crear y determinar estrategias de negociación para obtener rendimientos óptimos[17]. En la actualidad, muchas firmas importantes de inversiones utilizan este método. Ya que a través de las computadoras es posible eliminar el factor emocional que hace que los humanos tomen decisiones no calculadas. Además, al construir un sistema algoŕıtmico de trading, es posible ponerlo a prueba utilizando datos del pasado y medir el rendimiento en uno o varios intervalos de tiempo en el pasado. 2.3. Análisis técnico El análisis técnico es el estudio de la acción del mercado, principalmente a través de gráficos, para el propósito de pronosticar tendencias de precios. El término “acción del mercado” incluye tres fuentes principales de información disponible para el técnico[7]. Estas fuentes son el precio, el volumen y el interés abierto. El interés abierto es utilizado solo en el mercado de opciones, de manera que no se tomará en cuenta a lo largo de este documento. En esta sección se describen las bases fundamentales del análisis técnico y se explican los indicadores técnicos más utilizados. 2.3.1. Filosof́ıa o razón de ser Existen tres premisas que sustentan el enfoque de análisis técnico: 5por debajo de su valor intŕınseco 8 1. La acción del mercado descuenta todo. 2. Los precios se mueven en tendencias. 3. La historia se repite. En primera afirmación, se toma en cuenta solo la acción del mercado, obviando el resto de la información que puede influenciar los movimientos de los precios, ya que se asume que la acción del mercado refleja el resto de la información relevante. En la segunda afirmación, “los precios de mueven en tendencias” es un concepto fundamental del enfoque técnico. Si no se asume esta premisa no tendŕıa sentido el análisis técnico, ya que el propósito de graficar la acción del mercado es identificar tendencias en etapas tempranas con el propósito de operar en favor de la tendencia. Gran parte del análisis técnico y el estudio de la acción del mercado tiene que ver con el estudio de la psicoloǵıa humana. Los patrones que se identifican en los gráficos son categorizados con el paso de los años. Estos patrones revelan el la psicoloǵıa del mercado y como estos patrones funcionaron bien en el pasado, se asume que continuaran funcionando bien en el futuro[7]. 2.3.2. Tendencia El concepto de tendencia es absolutamente esencial para el enfoque del técnico del análisis de los mercados. Todas las herramientas utilizadas por el analista técnico tienen el único propósito de medir la tendencia del mercado con el objetivo de participar en ella[7]. En un sentido general, la tendencia es simplemente la dirección del mercada, en qué dirección se está moviendo. Sin embargo, es necesario una definición más precisa con la que trabajar. En primer lugar los mercados no suelen moverse en ĺınea recta en ninguna dirección. Los movimientos del mercado se caracterizan por una serie de zigzags (picos y valles). Es la dirección de esos picos y valles lo que constituye la tendencia del mercado. Cuando esos picos y valles se mueven hacia arriba, hacia abajo o hacia los costados, nos están indicando la tendencia del mercado. Una tendencia ascendente se define como una serie de picos y valles sucesivamente mas altos. Una tendencia descendente seŕıa lo contrario, una serie de picos y valles en declive. Los picos y valles horizontales identifican una tendencia lateral en los precios[7]. En la Figura 2.1 se muestra un ejemplo de tendencia bajista, en la Figura 2.2 se muestra un ejemplo de tendencia alcista y en la Figura 2.3 un ejemplo de tendencia lateral. 2.3.3. Momento Momento es la tasa de aceleración del precio o volumen de un valor. En el análisis técnico, el momento se considera un oscilador6 y se utiliza para ayudar a identificar las ĺıneas de 6Los osciladores son indicadores que tienen limite superior e inferior. Son ampliamente utilizados cuando el mercado se encuentra en tendencia lateral. Sin embargo, pueden ser utilizados en cualquier ocasión, 9 Figura 2.1: Ejemplo de tendencia bajista. tendencia[18]. En general, momento se refiere a la fuerza o velocidad de movimiento. Por lo general se define como una tasa. En el mundo de las inversiones, el impulso se refiere a la tasa de cambio en los movimientos de precios de un activo particular, es decir, la velocidad a la que el precio está cambiando[18]. 2.3.4. Indicadores técnicos Los indicadores técnicos son funciones matemáticas formadas a partir de variables como la tendencia, la volatilidad, volumen, entre otras variables; que buscan dar un resultado numérico, gráficamente interpretable, que ayuda al inversionista a tomar una posición o abandonarla. A continuación se describen los indicadores técnicos más importantes Media móvil simple La media móvil es uno de los indicadores técnicos más versátil y cuyo uso está más extendido. Por la forma en que se hace y por el hecho de que puede cuantificarse y verificarse tan fácilmente, es la base de muchos sistemas mecánicos de seguimiento de tendencias en uso hoy en d́ıa[7]. Como su primera palabra indica, es un promedio de un cierto bloque de información. Por ejemplo, si se busca una media de los precios al cierre de 10 d́ıas, se suman los precios de los dependiendo del objetivo. 10 Figura 2.2: Ejemplo de tendencia alcista. últimos 10 d́ıas y se divide el total entre 10. La expresión móvil se usa porque sólo se usan los precios de los últimos N d́ıas para hacer el cálculo. Por lo tanto, el bloque de información que se ha de promediar se traslada hacia adelante con cada d́ıa de operaciones[7]. En la Figura 2.4 se muestra un ejemplo de media móvil simple, tomando en cuenta 10 peŕıodos de tiempo. Matemáticamente se define de la siguiente manera: SMA = ∑t i=t−N Vi N (2.2) Donde: N significa el número de peŕıodos de tiempo anteriores. Vi significa la observación i− esima de alguna variable. Media móvil exponencial (EMA - Exponential moving average) Una media móvil es un tipo de media móvil similar a SMA, excepto que se le da mayor peso a los últimos datos. Esta media móvil reacciona más rápido a cambios recientes en los precios que una SMA[19]. Como los indicadores de medias móviles, ellos están mejor equipados para mercados en ten- dencia (alcista o bajista, no lateral). El indicador EMA es comúnmente usado en conjunción con otros indicadores para confirmar movimientos significativos del mercado y calibrar su validez. Para los operadores que operan intrad́ıa, es más aplicable EMA[19]. En la Figura 11 Figura 2.3: Ejemplo de tendencia lateral. 2.5 se presenta un ejemplo de EMA. El indicador EMA se define en términos matemáticos de la siguiente manera: K = 2 n− 1 (2.3) EMAn(t) = Closet ∗K + EMAn(t− 1) ∗ (K − 1) (2.4) Donde: Closet es el precio de cierre en el peŕıodo de tiempo t. t es un peŕıodo de tiempo. n es la cantidad de peŕıodos de tiempo a contemplar. K es el factor de importancia. Bandas de bollinger Se trata de una técnica desarrollada por John Bollinger. Se colocan dos bandas de fluctuación al rededor de una media móvil, a dos desviaciones t́ıpicas por encima y por debajo de la media móvil. El uso de dos desviaciones t́ıpicas (o estándar) asegura que el 95 % de la información sobre el precio caerá dentro de las dos bandas de fluctuación. Como regla, los precios se consideran sobreextendidos en el lado superior (sobrecomprados) cuando alcanzan la banda superior. Se consideran sobreextendidos en el lado inferior (sobrevendidos) cuando 12 125 130 135 140 145 150 SPY [2007−12−03/2008−03−31] Last 131.89 dic. 03 2007 ene. 22 2008 mar. 10 2008 Figura 2.4: Ejemplo de media móvil simple. alcanzan la banda inferior[7]. En la Figura 2.6 se muestra un ejemplo de bandas de Bollinger tomando en cuenta 20 peŕıodos y dos desviaciones estándar. Las bandas de Bollinger se definen matemáticamente de la siguiente manera: Middle = SMAn(Close) (2.5) Upper = Middle+ 2× Stdevn(Close) (2.6) Lower = Middle− 2× Stdevn(Close) (2.7) Donde: Close es el precio de cierre SMAn(X) es una media móvil simple de n peŕıodos de la variable X. Stdevn(X) es la desviación estándar de n peŕıodos de la variable X. 13 125 130 135 140 145 150 SPY [2007−12−03/2008−03−31] Last 131.89 dic. 03 2007 ene. 22 2008 mar. 10 2008 Figura 2.5: Ejemplo de media móvil exponencial. Oscilador estocástico El Oscilador Estocástico fue popularizado por George Lane. Se basa en la observación de que a medida que los precios se incrementan, los precios de cierre tienden a acercarse mas al extremo superior de una banda de precios. Por el contrario, en las tendencias a la baja, el precio de cierre tiende a acercarse al extremo inferior de la banda. En el calculo del oscilador estocástico se usan dos ĺıneas, la linea %K y la %D . Ésta última es la más importante y la que proporciona señales principales[7]. La intención es determinar dónde está el precio de cierre más reciente en relación con la banda de precios de un peŕıodo dado[7]. El oscilador estocásticos se define matemáticamente de la siguiente manera: %K = 100[(C − Ln)/(Hn − Ln)] (2.8) %D = SMAm( %K) (2.9) Donde: Close es precio de cierre actual. 14 125 130 135 140 145 150 SPY [2007−12−03/2008−03−31] Last 131.89 Bollinger Bands (20,2) [Upper/Lower]: 135.390/128.324 dic. 03 2007 ene. 22 2008 mar. 10 2008 Figura 2.6: Ejemplo de bandas de Bollinger. Ln es el precio de cierr mı́nimo en n peŕıodos de tiempo. Hn es el precio de cierre máximo en n peŕıodos de tiempo. SMAn(X) es una media móvil de n peŕıodos de tiempo de la variable X. Índice de momento estocástico (SMI - Stochastic momentum in- dex) El Índice de momento estocástico, o SMI, es una versión más refinada del oscilador es- tocástico, empleando un rango de valores mas amplio y con mayor sensibilidad a los precios de cierre. El calcula la distancia del precio de cierre actual en relación a la mediana del rango de precios. William Blau desarrollo el SMI es un intento de proveer un indicador mas confiable, menos sujeto a oscilaciones falsas[20]. El SMI tiene un rango de valores normales entre 100 y -100. Cuando el precio de cierre actual es mayor que la mediana, el resultado es positivo. Cuando el precio actual de cierre es menor que la mediana, el SMI tiene un valor negativo. Como el oscilador estocástico, el SMI es primeramente usado para indicar condiciones de sobreventa o sobrecompra. Los operadores también utilizan el SMI como un indicador general de tendencia, interpretando valores por 15 encima de 40 como un indicativo de una tendencia alcista y una bajista en valores menores a -40[20]. En la Figura 2.7 se muestra un ejemplo de SMI. El SMI se define matemáticamente de la siguiente manera: MD = Close− (HHn + LLn) 2 (2.10) SMD = (EMAn(EMAx(MD))) (2.11) STR = EMAy(EMAx(HHn − LLn)) 2 (2.12) SMI = SMD STR × 100 (2.13) Donde: Close es el precio de cierre actual. HHn es el precio más alto en n peŕıodos de tiempo. LLn es el precio más bajo en n peŕıodos de tiempo. EMAn(x) es una media móvil exponencial en n peŕıodos de tiempo de la variable x. MD (Midpoint Delta) es la distancia que hay entre el precio de cierre y la mediana del rango de precios HHn y LLn. SMD (Smoothed Midpoint Delta)es la variable MD suavizada dos veces por una media móvil exponencial. STR (Smoothed Trading Range) es la diferencia entre el precio más alto y el precio más bajo en n peŕıodos, suavizado dos veces y dividio entre dos. Índice de fuerza relativa (RSI - Relative strength index) El RSI fue desarrollado por J. Welles Wilder, Jr., quien lo presentó en su libro [21]. Como Wilder destaca, uno de los dos problemas principales de una ĺınea de momento(usando diferencias de precios) es el movimiento errático causado con frecuencia por cambios bruscos en los valores que se dejan de lado. Un fuerte avance o retroceso puede causar cambios repentinos en la ĺınea del momento incluso si los precios actuales no muestran modificaciones. Por lo tanto, se necesita suavizar estas distorsiones para minimizarlas. El segundo problema es que existe la necesidad de una banda constante a efectos comparativos. La fórmula del RSI 16 125 130 135 140 145 150 SPY [2007−12−03/2008−03−31] Last 131.89 Stochastic Momentum Index (13,2,25,9): SMI: 3.225 Signal: −6.613 −60 −40 −20 0 20 40 60 dic. 03 2007 ene. 22 2008 mar. 10 2008 Figura 2.7: Ejemplo de ı́ndice de momento estocástico. no sólo proporciona la suavización necesaria, sino que también soluciona el último problema mediante la creación de una banda vertical constante que va de 0 a 100[7]. La divergencia entre el RSI y la ĺınea del precio, cuando el RSI está por encima de 70 o por debajo de 30, es una seria advertencia que debeŕıa tomarse en cuenta[7]. Matemáticamente el RSI se expresa de la siguiente manera: RSI = 100− 100 1 +RS (2.14) RS = Avg(Gananciasn) Avg(Perdidasn) (2.15) Donde: Gananciasn son los precios que cerraron mayores que el precio de cierre anterior, en n peŕıodos de tiempo. Perdidasn son los precios que cerraron menores que el precio de cierre anterior, en n peŕıodos de tiempo. Avg(X) es el promedio de una variable X. 17 RS (Relative Strength) es la fuerza relativa. 125 130 135 140 145 150 SPY [2007−12−03/2008−03−31] Last 131.89 Relative Strength Index (14): 47.091 30 40 50 60 dic. 03 2007 ene. 22 2008 mar. 10 2008 Figura 2.8: Ejemplo de RSI. 2.4. Trading automatizado En esta sección se presenta una śıntesis de los términos definidos anteriormente. También se definen algunos términos y se explica como se relacionan cada uno de ellos, para culminar con una motivación importante al desarrollar sistemas de trading algoŕıtmico. 2.4.1. Resumen El mercado de valores es el lugar en donde las acciones de las empresas publicas son transa- das. Una empresa se vuelve pública cuando realiza un IPO. Esto significa que inversionistas alrededor del mundo son capaces de comprar e intercambiar acciones de valores en la com- pañ́ıa. Estas acciones representan una propiedad en la compañ́ıa, y sus precios representan lo que los inversionistas creen que un pedazo de la compañ́ıa, o acción, puede valer en el futuro. Por lo tanto, los precios de los valores son determinados puramente por oferta y demanda en el mercado[6]. 18 Generalmente hablando, un inversionista tiene dos opciones: si el cree que las acciones de una compañ́ıa se van a elevar en valor en algún momento en el futuro, el puede colocar una orden de compra en el mercado de valores, y cuando la orden se ejecute el posee el valor, esto también es conocido como entrar a una posición larga. Luego, si más y más personas creen lo mismo, la demanda de ese valor crece y por lo tanto el valor de ese valor va incrementar y los inversionistas con posiciones largas podrán lucrarse. Por otro lado, si más personas creen que una compañ́ıa puede valer menos en el futuro, la demanda cae y los precios de los valores va a decrementar y los inversionistas con posiciones largas sufrirán perdidas. Sin embargo, en este caso, un inversionista que decide que las acciones de una empresa se van a depreciar en valor, el puede colocar una orden de venta, de esta manera, se estaŕıa entrando en una posición corta. Si el inversionista previamente posee valores de esta compañ́ıa, la orden de venta venderá la cantidad deseada de su posición larga. Si el no posee valores previamente, esto es llamado venta en corto, que significa que el va a tomar prestado los valores de alguien más y los venderá de inmediato, y luego cuando el quiera cubrir el préstamo, el compra de vuelta la misma cantidad de acciones y las regresa al prestador. Por lo tanto, la venta en corto permite al inversionista lucrarse de una cáıda de algún precio[6]. Los participantes en los mercados de valor son heterogéneos, esto significa que hay muchos tipos de inversionistas, cada uno con diferentes metas de retorno y niveles de riesgo a tomar. Inversionistas individuales, inversionistas institucionales y algoritmos de trading, todos com- piten en el mismo mercado con el mismo objetivo: lucrarse haciendo la apuesta correcta en los precios futuros de los valores, comprar barato, vender caro o viceversa[6]. Todos los inversionistas, especialmente los algoritmos de trading, necesitan especificar dos cosas: la frecuencia de trading y el universo donde ellos operan. La frecuencia se refiere a que tan seguido se toman decisiones para operar en el mercado. Para los inversionistas humanos su frecuencia de operaciones puede ser mas flexible. Para sistemas de operaciones automáticas, por su naturaleza sistemática, la frecuencia debe ser especificada por sus desarrolladores. La frecuencia tiene un rango muy amplio: desde una única vez, que significa comprar y aguantar esa posición para siempre, hasta operar cada nanosegundo para algoritmos de trading de alta frecuencia[6]. El universo es el rango de valores en los que un inversionista decide operar. Por ejemplo un inversionista que su universo es el mercado global significa que el no se limita a elegir valores atados a alguna restricción geográfica. El universo también puede ser el mercado de valores de EEUU, S&P 500 o un sector dentro de este ı́ndice[6]. El ı́ndice Standard & Poor’s 500 (S&P 500) es uno de los puntos de referencia más utilizados para el rendimiento promedio del mercado de valores de EEUU. Es un ı́ndice de 500 valores elegidos por ciertas variables fundamentales, entre ellas la liquidez. El S&P 500 busca reflejar las caracteŕısticas de riesgo-retorno del mercado de grandes empresas estadounidenses[6]. 19 2.4.2. Motivación La ventaja mas grande del trading algoŕıtmico es que el operar en el mercado de valores se hace más sistemáticamente. Los inversionistas humanos son muy emocionales. Uno puede experimentar euforia por tener una posición que esta yendo bien o puede experimentar reacciones adversas cuando una posición está perdiendo valor. Uno también puede convertirse en avaro o miedosos y perder la disciplina de operaciones. Tener una disciplina o plan, al operar, es muy importante para obtener lucro consistente en el mercado de valores. Sin embargo, no hay tal plan que pueda generar retornos positivos todo el tiempo, y cuando se enfrentan cáıdas temporales, los factores emocionales mencionados anteriormente pueden fácilmente destruir la disciplina. Por consiguiente, porque un plan parar operar es seguido de manera sistemática, un sistema de trading algoŕıtmico minimiza las emociones en el proceso de operar, asegurando que la disciplina se mantenga durante las condiciones volátiles del mercado y permitiendo lograr consistencia[6]. Otra ventaja del trading algoŕıtmico sobre los humanos es la habilidad de probar la estrategia. Esto en la literatura se denomina backtesting. El backtesting se refiere a aplicar el sistema desarrollado a datos históricos y verificar como el sistema habŕıa operado durante el peŕıodo de tiempo especificado. Esto ayuda a los desarrolladores de los sistemas a aprender como se comporta el sistema en ciertas situaciones en el pasado, que probablemente se repitan en el futuro. También provee la oportunidad de optimizar los parámetros en cada iteración. El poder predictivo del backtesting recae en la suposición que las propiedades estad́ısticas de las series de los precios no cambian, de manera que si una regla de trading era lucrativa en el pasado, lo será también en el futuro. Sin embargo, tal suposición está sujeta a riesgos, como cambios macroeconómicos, cambios en la compañ́ıa, cambios en la estructura del mercado, entre otros. También, dividendo los datos en una muestra de entrenamiento o datos in-sample y datos de prueba o out-of-sample durante el backtesting, provee una manera practica y eficiente de evaluar los sistemas. Los datos in-sample pueden ser utilizados para optimizar, pero es importante luego evaluar el sistema en los datos de prueba, para determinar la viabilidad del mismo y evitar el sobre-ajuste[6]. Además, un sistema automatizado de trading puede seguir al mercado bastante bien, cosa que es extremadamente complicada para los inversionistas humanos. Los humanos simple- mente tratan de ser miedosos cuando otros son codicioso y son codiciosos cuando otros están asustados. Esto es una forma de intentar seguir al mercado. Cuando las personas están codi- ciosas, los precios están sobrevalorados y un operador debeŕıa vender los valores, y viceversa. Pero es extremadamente dif́ıcil identificar consistentemente cuando las personas están codi- ciosas o miedosas. Por otro lado, otra forma de seguir el mercado es lo que se hace en las firmas de trading de alta frecuencia (HFT - High Frecuency Trading): encontrar oportuni- dades de arbitraje y operar en cuestiones de microsegundos. A esta frecuencia, es imposible para un humano hacerlo. Sin embargo, los sistemas automatizados lo pueden hacer, incluso en miles de valores a la vez. Es por eso que las firmas HFT todas utilizan algoritmos compu- tarizados de trading, en conjunto con consistentes pronósticos de series tiempo o análisis 20 de sentimientos (se analizan tweets, noticias, art́ıculos, entre otros), los sistemas de trading pueden realizar un trabajo decente identificando miedos y codicias en el mercado[6]. 2.5. Aprendizaje automático (ML - Machine Learning) Existen muchas definiciones de aprendizaje automático en la actualidad. Sin embargo, el objetivo principal del aprendizaje automático es hacer que una computadora pueda aprender a través de los datos. A continuación una definición realizada por Marshland: “El aprendizaje automático se trata de hacer que las computadoras modifiquen o adapten sus acciones de manera que estas acciones se vuelvan mas precisas, donde la precisión es medida por: que tan bien las acciones escogidas reflejaron las acciones correctas”[22]. Otra definición, realizada por Mitchell es la siguiente: “se dice que un programa de computadora aprende de una experiencia E con respecto a alguna clase de tarea T donde su rendimiento es medido por P si su rendimiento para la tarea T, que es medido por P, mejora con la experiencia E”[23]. En este caṕıtulo se describen las técnicas de aprendizaje automático en la sección 2.6, el flujo de trabajo utilizado a la hora de aplicar técnicas de aprendizaje automático en la sección 2.7 y por último, las herramientas mas utilizadas en la sección 2.8. 2.6. Técnicas de aprendizaje automático Las técnicas más utilizadas de aprendizaje automático se dividen en 2, aprendizaje supervi- sado y aprendizaje no-supervisado. Cada una de las clasificaciones y técnicas serán descritas a continuación. 2.6.1. Aprendizaje supervisado En el aprendizaje supervisado, un conjunto de entrenamiento que contiene los ejemplos con las respuestas correctas provistas y, basado en este conjunto de entrenamiento, el algoritmo generaliza para responder correctamente a todas las entradas posibles. Esto también es lla- mado aprendizaje desde ejemplares[22]. Sea X el conjunto total de registros en un conjunto de datos, donde xi(i = 1, ..., n) es el registro de la posición i de X y Y el conjunto de eti- quetas en un conjunto de datos, donde yi(i = 1, ..., n) es la etiqueta de la posición i de Y . Entonces, para cada xi debe existir un yi(i = 1, ..., n) perteneciente a Y tal que yi etiquete a xi[24], donde estas etiquetas corresponden a las respuestas correctas. Dentro de las técnicas de aprendizaje supervisado existe una clasificación adicional. Esta clasificación depende del conjunto de etiquetas. Si los elementos que pertenecen al conjunto de etiquetas Y, son cualitativos, entonces se dice que el problema a resolver es un problema 21 de clasificación. En caso que los elementos de Y sean cuantitativos, se dice que el problema a resolver es problema de regresión. Las técnicas de aprendizaje supervisado más populares son las máquinas de vectores de soporte, las redes neuronales artificiales y los arboles de decisión para problemas de clasifica- ción. Todas estas técnicas funcionan tanto para problemas de regresión como de clasificación. Este documento se centra en la aplicación de estas técnicas para problemas de clasificación. Regresión Lineal La regresión lineal es un método de aprendizaje supervisado bastante simple. En particular, la regresión lineal es una herramienta útil para predecir una respuesta cuantitativa. La regresión lineal muchas veces sirve como punto de partida para nuevos enfoques de ML[24]. Muchas de las otras técnicas de ML pueden ser vistas como generalizaciones o extensiones de la regresión lineal. Un ejemplo gráfico de un modelo de regresión lineal se encuentra en la Figura 2.9. 0 2 4 6 8 10 0 2 4 6 x y Figura 2.9: Regresión lineal. En esencia, el método de regresión lineal, busca el modelo lineal que mejor se ajuste a un conjunto de observaciones. El conjunto de puntos son pares (xi, yi) con i = 1, 2, ..., N donde xi representa una observación de las variables de entrada (predictores) y yi la respuesta 22 asociada (variable dependiente), de una muestra de tamaño N . Donde el mejor modelo es aquel que minimiza una medida de error. La medida de error más utilizada es el error cuadrático medio (SME - Square Mean Error). Existen 2 tipos de regresión lineal: (1) simple y (2) múltiple. LR simple es un método para predecir una respuesta cuantitativa Y en la base de un solo predictor X. Este modelo asume que existe una relación aproximadamente lineal entre las variables X e Y . Matemáticamente podemos escribir esta relación aśı: Y ≈ β0 + β1X + � (2.16) Donde: X es la variable predictora. Y es la varibale dependiente. β0 es el intercepto de la recta. β1 es la pendiente de la recta. � es el error irreducible. El enfoque de regresión lineal simple es un enfoque útil para predecir respuestas en base a una sola variable predictora. Sin embargo, en la práctica a menudo se tienen más de una sola variable predictora[24]. Matemáticamente podemos escribir esta relación de la siguiente manera: Y ≈ β0 + β1X1 + β2X2 + ...+ βpXp + � (2.17) Donde: Xi son las variables predictoras. p es la cantidad de variables predictoras. Y es la variable dependiente. βi son los coeficientes de las variables predictoras. � es el error irreducible. Normalmente, estos coeficientes son desconocidos, por lo que se deben estimar cada uno de ellos. Uno de los métodos más utilizados para estimar los coeficientes a través de una muestra es el métodos por mı́nimos cuadrados7. Este método se puede explicar de manera anaĺıtica y geométrica. El problema geométricamente se reduce a encontrar el vector solución de un sistema de ecuaciones del tipo Ax = b donde x es el vector que contiene los coeficientes que minimizan el error cuadrático medio. 7Una explicación detallada del método de mı́nimos cuadrados para regresión lineal se encuentra en [25] 23 Regresión Loǵısitca El método de regresión loǵıstica fue desarrollado por un estadista llamado David Cox. Es un caso especial de un modelo lineal generalizado, y por lo tanto análogo a la regresión lineal. La idea es estimar la probabilidad condicional de una respuesta binaria basándose en una o más variables predictoras utilizando la distribución loǵıstica acumulada[6]. Si se tiene una variable de salida Y , y se quiere modelar la probabilidad condicional P (Y = 1|X = x) como una función de un vector x. Es de notar que log(p(x)) es una función lineal de x, que tiene un rango no acotado, pero con una pequeña modificación, la transformación loǵıstica log( p 1−p) tiene rango acotado[6]. Está función se le denomina sigmoide. Un ejmplo gráfico se encuentra en la figura 2.10 El rango de está función va de 0 a 1. El modelo de regresión loǵıstica se expresa matemáticamente de la siguiente manera: −4 −2 0 2 4 0.0 0.2 0.4 0.6 0.8 1.0 x y Figura 2.10: Función sigmoide. log( p(x) 1− p(x) ) (2.18) Y luego, despejando p(x), se obtiene la forma de la función sigmoide. p(y|x) = 1 1 + e−β0+xβ1 (2.19) 24 Máquina de vectores soporte (SVM - Support Vector Machine) SVM fue introducido por Vapnik.Este asocia los datos de entrada dentro de un espacio de caracterısticas de dimensión superior y obtiene el hiperplano separador óptimo en el espacio de caracterısticas de dimensión superior. El hiperplano separador es elegido maximizando la distancia entre los vectores de soporte, que corresponden a los puntos más cercanos al hiperplano generado[24]. En la Figura 2.11 se puede apreciar como el hiperplano establecido es aquel que maximiza la distancia entre los vectores de soporte. Las máquinas de vectores soporte puede realizar eficientemente una clasificación no lineal usando kernels[6]. Los kernels son los encargados de asociar los datos de entrada a dimen- siones superiores. Existen diferentes tipos de Kernels. A continuación se definen algunos de los más utilizados: Lineal: establece separadores lineales entre los conjuntos. Su función viene dada por la ecuación 2.20. f(u, v, c) =< uT , v > +c. (2.20) Donde: • u representa el vector de registros. • v es un vector ortogonal de u. • c corresponde al parámetro de regularización, que controla el margen de error de la clasificación. Sigmoide:permite establecer fronteras circulares entre los conjuntos. Este kernel se expresa matemáticamente a través de la ecuación 2.21. f(u, v, coef, c, γ) = tanh(γ × uT × v + coef) + c (2.21) Donde: • u, v y c representan en este caso lo mismo que en la ecuación 2.20. • γ representa la distancia máxima de los registros para que estén relacionados entre śı. • coef es un parámetro para escalar los datos. Radial: este kernel permite establecer fronteras circulares para la separación de con- juntos (similar al kernel sigmoide). Su expresión matemática viene dada por la ecuación 2.22. f(u, v, c, γ) = eγ×‖u−v‖+c (2.22) Donde: • u, v y c representan en este caso lo mismo que en la ecuación 2.20. 25 • γ representa en este caso lo mismo que en la ecuación 2.21 Polinómico: establece separadores polinómicos que permiten establecer ĺıneas curvas como separadores entre los conjuntos. La expresión matemática de este kernel viene dada por la ecuación 2.23. f(u, v, coef, degree, c, γ) = (γ× < uT , v > +coef)degree+ c (2.23) Donde: • u, v, c, coef y γ representan lo mismo que en las ecuaciones 2.20 y 2.21. • degree es el grado del polinomio. Vectores de Soporte Hiperplano Figura 2.11: SVM [1]. Es importante destacar que la técnica SVM se puede aplicar tanto para regresión, como para clasificación. Árbol de decisión (DT - Decision Tree) Un árbol de decisión es una estructura de datos jerárquica que implementa la estrategia de divide y conquista8. Está compuesto de nodos internos de decisión y hojas. Un ejemplo de árbol de decisión se muestra en. Dada una entrada, en cada nodo, una prueba es aplicada y una de las 2 ramas es tomada dependiendo del resultado de la prueba. Este proceso en la ráız y es repetido recursivamente hasta llegar a un nodo hoja, en este punto el valor que constituye la hoja es el resultado[6]. Este algoritmo es utilizado para clasificar. Las decisiones tomadas en los nodos, están basadas en los criterios que mejor separen la muestra. El término 8Este paradigma se encuentra explicado de manera más amplia en [26] 26 mejor en este caso, se refiere a una métrica. Una de las métricas más utilizadas es el ı́ndice Gini9. En la Figura 2.12 se puede apreciar un ejemplo de DT. Figura 2.12: Árbol de decisión. K-vecinos - (KNN - K-Nearest Neighbors) El método KNN es muy popular debido a su simplicidad y su excelente rendimiento emṕıri- co. Este enfoque puede manejar tareas de clasificación con una o mas clases objetivo. No realiza suposiciones sobre la forma paramétrica de los ĺımites de decisión, no tiene fase de entrenamiento[28]. KNN simplemente define los limites de decisión tomando en cuenta las K observaciones mas cercanas, de cada observación, donde K es un número natural mayor o igual a 1. Luego, el modelo simplemente son las observaciones y a la hora de evaluar una nueva observación, se toman los K vecinos mas cercanos de este y se clasifica dicha instancia en base a sus vecinos. 9Una explicación ampliada del ı́ndice Gini aplicado a la implementación de árboles de decisión se encuentra en [27] 27 Red neuronal (ANN - Artificial Neural Network) Las redes neuronales son un modelo de simulación del cerebro humano. El sistema nervio- so humano esta compuesto de células, estás células se denominan neuronas. Las neuronas biológicas están conectadas una a otra en puntos de contactos, definidos como sinapsis. El aprendizaje es realizado en organismos vivientes a través del intercambio de fuerza de las conexiones sinápticas entre neuronas. T́ıpicamente, la fuerza de estas conexiones cambia en respuesta a est́ımulos externos. Las redes neuronales son una simulación de este proceso biológico[27]. Como en el caso de redes neuronales biológicas, los nodos individuales en las redes neuronales artificiales son denominadas neuronas. Estas neuronas son unidades de computo que reciben entradas de otras neuronas, se realizan cálculos sobre estas entradas y se transmite a otra neurona. La función del computo en una neurona es definida por los pesos en las conexiones a las neuronas anteriores, que se encuentran conectadas a esta neurona. Los pesos pueden ser análogos a la fuerza de una conexión sináptica. El “est́ımulo externo” en los modelos ANN para aprender los pesos es provisto por los datos de entrenamiento. La idea es modificar incrementalmente los pesos cuando predicciones incorrectas son realizadas por el conjunto actual de pesos[27]. La clave para la efectividad de un modelo ANN es la arquitectura usada para relacionar las conexiones entre los nodos. Existe una amplia variedad de arquitecturas. A continuación se listan algunas arquitecturas de ANN: Perceptrón. Red neuronal anticipativa (FNN - Feedforward Neural Network). Red neuronal probabiĺıstica (PNN - Probabilistic Neural Network). Red neuronal modular. La arquitectura mas básica de ANN es denominada perceptrón. El perceptrón contiene 2 capas de nodos, que corresponden a los nodos de entrada y, un solo nodo de salida. El número de nodos de entrada es exactamente igual al número de dimensiones de un conjunto de datos de entrenamiento. Cada nodo de entrada recibe y transmite un único atributo numérico al nodo de salida. Por lo tanto, los nodos de entrada no realizan ningún computo sobre los datos, solo los transmiten. En el modelo perceptrón básico, el nodo de salida es el único modo que aplica una función matemática sobre sus entradas[27]. Las arquitecturas de las redes neuronales tienen varios parámetros que las definen. Entre estos parámetros se encuentra el número de capas, si tienen o no capas escondidas, cuantas neuronas por capa escondida, la función a realizar en cada neurona, entre otros.En la Figura 2.13 se muestra una arquitectura de red neuronal de 3 capas, la capa de entrada, la capa intermedia y la capa de salida. Las redes neuronales proporcionan un enfoque bastante flexible para tareas de regresión y 28 N(1,1) N(2,2) N(1,2) N(4,1)N(2,1) N(5,1) N(3,2) N(2,3) N(3,1) N(5,2) N(4,2) N(4,3) Entrada 2 Entrada 1 Salida 1 Salida 2 Capa de Entrada Capas Escondidas Capa de Salida Figura 2.13: Red neuronal [1]. clasificación. A pesar de su utilidad, depende de la complejidad del modelo y de la cantidad de datos de entrenamiento, este método puede requerir mucho tiempo para producir un modelo efectivo. Sin embargo, luego de que la fase de entrenamiento culmina y el modelo ya está aprendido, no es una limitante aplicar a nuevos datos el modelo y observar los resultados. 2.6.2. Aprendizaje no-supervisado En el aprendizaje no-supervisado, las respuestas correctas no son provistas, en cambio el algoritmo trata de identificar similaridades entre las entradas de manera que las variables que tienen algo en común son categorizadas de igual manera. El enfoque estad́ıstico del aprendizaje no-supervisado es conocido como estimación de densidad[22]. El objetivo de los algoritmos de aprendizaje no-supervisado es identificar grupos separables en los datos. Una de las técnicas para ello es denominada análisis de grupo (cluster analysis) o agrupamiento (clustering). 29 K-medias El algoritmo de K-Medias es una de las técnicas más populares de agrupamiento. En este algoritmo se supone que se quiere dividir un conjunto de datos en K categoŕıas, donde el valor de K es dado. Luego se colocan K centros (puntos) en el espacio de los datos de entrada, y se quiere posicionar dichos centros tal que cada uno de ellos sea el centro de cada grupo. Sin embargo, no se sabe donde están los grupos o clusters, de manera que se necesita un algoritmo que los consiga. Los algoritmos de ML generalmente tratan de minimizar alguna clase de error, por lo que se necesita pensar en algún criterio de error[22]. Además, para definir el concepto de centro son necesarias una medida de distancia. Luego de tener una medida de distancia, es necesario una medida de centralidad. La medida de distancia normalmente utilizada es la distancia euclidiana y la medida de centralidad particularmente utilizada en el algoritmo K-Medias, como su nombre lo indica, es la media o el promedio de los datos. En la Figura 2.14 se muestra un ejemplo de este modelo con la variable K = 3. Figura 2.14: Clustering de 3 conjuntos [1]. El algoritmo de K-medias presenta varias propiedades y limitantes según [29] que se listan a continuación: Propiedades • Es escalable y puede manejar grandes volúmenes de datos. 30 • Suele converger a un mı́nimo local. • Es capaz de detectar grupos de forma esférica o convexa. Limitantes • El número de grupos debe ser especificado antes de ejecutar el algoritmo. • Sensible a valores anómalos(outliers). • Dependiendo de la posición inicial de los centros se pueden obtener diferentes resultados. Agrupación jerárquica Una de las desventajas potenciales del algoritmo de K-medias es que requiere especificar el número K a priori. La agrupación jerárquica es un enfoque alternativo que no requiere que se realice una elección de K. La forma de representación de la agrupación jerárquica viene dada a través de una estructura de árbol llamada dendrograma (dendrogram)[24]. Cada nodo en el árbol, a excepción de las hojas, es la unión de sus hijos. La ráız del árbol es el grupo que contiene a todos los nodos[29]. Los métodos de agrupación jerárquica se dividen en 2: Métodos aglomerativos Inician la creación del grupo de abajo hacia arriba. Iniciando con un registro individual en un grupo de separado y luego trata de mezclarlos hasta que todas las instancias pertenezcan al mismo grupo[29]. Métodos divisivos La identificación de los grupos inicia con la división del conjunto de datos en gru- pos mas pequeños desde arriba hacia abajo, hasta que cada grupo contenga solo una instancia[29]. Existen varias formas de generar el dendrograma. La mas forma más común es de abajo hacia arriba, desde las hojas hasta la ráız, combinando los grupos hasta que todos los nodos pertenezcan a un solo grupo. Para mezclar o dividir los grupos, la distancia entre los objetos individuales es generalizada a la distancia entre los sub-conjuntos. Esta medida de proximidad es llamada enlazamiento. Las formas mas comunes de enlazar los sub-conjuntos son las siguientes: Enlace-simple: es la similaridad entre las 2 instancias más parecidas. Este enfoque es bueno para el manejo de formas no eĺıpticas, sin embargo es sensible al ruido y a registros anómalos (outliers) [29]. 31 Enlace-completo: es la similaridad entre las 2 instancias menos parecidas. Este enfo- que es menos susceptible al ruido, pero puede separar grandes grupos de forma inapro- piada. Además, presenta problemas con las formas convexas [29]. Enlace-promedio: es un enfoque intermedio de los anteriores[29]. Al igual que el método de K-medias, los métodos de agrupación jerárquica presentan una serie de propiedades y limitantes. Algunas de ellas expuestas en [29] y se listan a continuación: Propiedades • Pueden representarse gráficamente mediante un dendrograma, de tal manera que es posible visualizar los grupos y sus asociaciones. • No requiere especificar el número de grupos de antemano. Limitantes • No permite realizar ajustes una vez que el criterio de mezcla o división ha sido realizado. • Es necesario el cálculo de una matriz de distancias para la unión o separación de los grupos. 2.7. Proceso de ML El proceso de ML consta de varias fases, en esta sección se describen brevemente los pasos a realizar a la hora de aplicar ML a algún problema. 2.7.1. Recolección de los datos En esta fase se recolectan los datos que pueden ser relevantes para resolver un problema espećıfico. Esta fase es crucial, ya que si los datos no son útiles para resolver el problema, el esfuerzo en las siguientes fases será desperdiciado. En la actualidad, existen grandes cantidades de datos disponibles a la hora de resolver una amplia gama de problemas. Estos datos pueden o no estar en un formato adecuado para el análisis de los mismos. Sin embargo, si se tratase de resolver un problema nuevo, donde no existen datos disponibles, es necesario recolectar aquellos que podŕıan funcionar. Normalmente, la cantidad de datos que podŕıan ser útiles, es bastante significativa, pueden estar ubicados en diferentes lugares y formatos, por lo que hace que esta fase requiera de un gran esfuerzo. De ser esta la situación, es común que esta fase este acompañada de la fase de selección de caracteŕısticas explicada en la sección 2.7.2 32 2.7.2. Selección de caracteŕısticas Esta fase consiste en identificar las caracteŕısticas que son mas útiles para el problema a tratar. Esta fase requiere conocimiento previo acerca del problema y de los datos[22]. Además de la identificación de las caracteŕısticas útiles, es también necesario que las ca- racteŕısticas puedan ser recolectadas sin utilizar una cantidad de tiempo significante y que sean robustos al ruido y otras corrupciones de los datos que pueden ocurrir en el proceso de recolección, explicado en la sección 2.7.1 2.7.3. Selección del algoritmo En esta fase se escoge un algoritmo apropiado, dado un conjuntos de datos, con ciertas caracteŕısticas[22]. Esta fase es un reto debido a que no todos los problemas de ML son iguales. Que un problema sea de clasificación no significa que tenga la misma solución que algún otro problema de la misma ı́ndole, por lo que es imposible generalizar una solución y cada escenario es un reto diferente. Para afrontar esta fase es necesario saber la naturaleza de los algoritmos, sus ventajas y desventajas. Adicionalmente, este proceso a menudo suele ser de ensayo y error, seleccionando algún algoritmo que se piensa que tendrá un buen desempeño frente a un escenario dado. 2.7.4. Selección de los parámetros y el modelo Para muchos algoritmos existen parámetros que tienen que ser seleccionados manualmente, o requieren experimentación para identificar valores apropiados[22]. En esta fase se realiza la selección de los parámetros y se realizan experimentos para determinar los parámetros apropiados. 2.7.5. Entrenamiento Dado un conjunto de datos, un algoritmo y los parámetros, el entrenamiento debe ser sim- plemente el uso de recursos computacionales para la construcción de un modelo de los datos, para predecir salidas en nuevos datos[22]. 2.7.6. Evaluación Antes de que un sistema sea desplegado es necesario que se pruebe y se evalué sobre datos que no fueron contemplados en la fase de entrenamiento. Esta fase puede incluir compa- 33 raciones con humanos expertos en el área, y la selección apropiada de métricas para las comparaciones[22]. El error obtenido a la hora de evaluar el modelo es llamado error de prueba. Por otro lado, es posible evaluar el modelo con los mismos datos usados para el entrenamiento. El error obtenido en este caso es llamado error de entrenamiento. Este último enfoque no es una buena medida de desempeño del modelo debido a que por lo general se sobrestima el rendimiento debido a que los registros utilizados para evaluar fueron vistos con anterioridad por el modelo de ML. Utilizar un conjunto de datos diferente al de entrenamiento para evaluar el modelo de ML permite evaluar la capacidad de generalizar del mismo, y de esta manera se puede tener una noción más certera del desempeño del modelo en un ambiente real[1]. Para poder calcular el error de un modelo se debe comparar la salida predicha por el mismo contra el valor verdadero del registro. Esto es, comparar el valor estimado contra el valor real. Para dicha tarea es necesario conocer la salida real del problema y eso amerita que los datos sean etiquetados. El proceso de etiquetar los datos suele ser costoso en cuanto a tiempo y dinero. Sin embargo, esto brinda la oportunidad de poder hacer cálculo sobre ciertas medidas de rendimiento que ayudan a la evaluación de los modelos[1]. A continuación se definen los conceptos de matriz de confusión y de varios métodos para evaluar los modelos basados en matrices de confusión. Matriz de confusión La matriz de confusión es un método que permite visualizar el desempeño de un modelo en el ámbito de problemas de clasificación a través de cuatro criterios representados en una tabla. Los cuatro criterios son verdaderos positivos, verdaderos negativos, falsos positivos y falsos negativos. Verdaderos positivos (TP - True Positive): aquellos registros que pertenecen a la clase objetivo y fueron clasificados por el modelo como la clase objetivo. Verdaderos negativos (TN - True Negative): aquellos registros que no pertenecen a la clase objetivo y que fueron clasificados por el modelo como la clase no objetivo. Falsos positivos (FP - False Positive): aquellos registros que no pertenecen a la clase objetivo que fueron clasificados como pertenecientes a la clase objetivo. Falsos negativos (FN - False Negative): aquellos registros que pertenecen a la clase objetivo que fueron clasificados como pertenecientes a la clase no objetivo. Un ejemplo de como debe verse una matriz de confusión es presentado en la Tabla . En dicho ejemplo se puede ver como los elementos pertenecientes a la diagonal fueron el número de registros que fueron clasificados correctamente. POr otro lado los elementos que están fuera de la diagonal fueron clasificados de manera incorrecta. 34 Predicción Positivo Negativo Clase Positivo TP FN Negativo FP TN Tabla 2.1: Matriz de confusión. De la matriz de confusión se pueden derivar algunas medidas de rendimiento que serán listadas a continuación. Tasa de acierto: la fórmula de la tasa de acierto viene dada por la Ecuación 2.24: TasaAcierto = TP + TN N (2.24) Donde: • TP es el número de verdaderos positivos. • TN es el número de verdaderos negativos. • N es el número de registros contemplados en la prueba. La tasa de acierto multiplicada por 100 representa el porcentaje de acierto a la hora de clasificar, es decir, calcula el porcentaje de los elementos que estan en la diagonal principal[1]. Tasa de error: la fórmula de la tasa de error viene dada por la Ecuación 2.25: TasaError = 1− TasaAcierto (2.25) Esta medida al multiplicarse por 100 representa el porcentaje de registros clasificados de manera errónea, es decir, calcula el porcentaje de los elementos que están fuera de la diagonal principal[1]. Sensitividad: la fórmula de la sensitividad viene dada por la ecuación 2.26: Sensitividad = TP TP + FN (2.26) Esta medida de rendimiento es usada para clasificadores binarios, al multiplicarse por 100 mide el porcentaje de elementos positivos que fueron clasificados de manera co- rrecta de aquellos elementos que fueron detectados como positivos[1]. Especificidad: la fórmula de la especificidad viene dada por la Ecuación 2.27: Especificidad = TN FP + TN (2.27) 35 Esta medida de rendimiento es usada para clasificadores binarios, al multiplicarse por 100 mide el porcentaje de elementos negativos que fueron clasificados de manera co- rrecta de aquellos elementos que fueron detectados como negativos[1]. Precisión: la fórmula de la precisión viene dada por la Ecuación 2.28: Precision = TP TP + FP (2.28) Esta medida de rendimiento es usada para clasificadores binarios, al multiplicarse por 100 mide el porcentaje de elementos positivos que fueron clasificados de manera co- rrecta del total de elementos que de verdad eran positivos[1]. 2.8. Herramientas de software Existen una variedad de herramientas de software utilizadas para el desarrollo e implementa- ción de técnicas de aprendizaje automático. En esta sección se describen brevemente algunas de las herramientas más utilizadas en la actualidad. 2.8.1. R Es un lenguaje de programación interpretado, diseñado para el análisis y la programación estad́ıstica y la generación de documentos de investigación con gráficos embebidos. Este lenguaje se encuentra implementado principalmente en lenguaje C y Fortran. Además, una caracteŕıstica que destaca de esta herramienta, es que software libre, que se rige bajo las poĺıticas GNU. Este software tiene una gran aceptación por la comunidad cient́ıfica. Existen una cantidad considerable de paquetes que permiten la integración de diferentes bibliotecas accesibles para el desarrollo de proyectos. Estos paquetes se encuentran en un repositorio central, llamado CRAN10(Comprehensive R Archive Network), que a su vez, permite la clonación para aśı brindar más facilidades a la hora de requerir los paquetes. RStudio11 es un IDE bastante versátil que permite el desarrollo de diferentes tipos de pro- yectos de manera mucho más cómoda. Este entorno de desarrollo tiene una presentación gratuita para el uso personal o académico. 10https://cran.r-project.org/ 11https://www.rstudio.com/ 36 https://cran.r-project.org/ https://www.rstudio.com/ 2.8.2. Python Python 12es un lenguaje de programación de alto nivel, de propósito general e interpretado. La filosof́ıa de este lenguaje esta orientada a que el código realizado en python sea legible, y por lo tanto, favorecer a la mantenibilidad, además, es posible realizar instrucciones complejas en menos lineas de código, comparado con los lenguajes derivados de C, como C++ y C#. Este lenguaje soporta varios paradigmas, entre ellos programación imperativa, funcional y procedimental. Este lenguaje, al igual que R, consta con una cantidad importante de paquetes. Además, es bastante aceptado por la comunidad cient́ıfica. Sin embargo, este lenguaje no cuenta con un entorno de desarrollo integrado que facilite el análisis de los datos de la misma manera que RStudio. Un IDE alternativo, que facilita algunos procesos del análisis de los datos es Spyder13 2.8.3. WEKA Waikato Environment for Knowledge Analysis o WEKA14, es un software para ML desa- rrollado en Java por la Universidad de Waikato. Este software soporta tareas de preproce- samiento, agrupamiento, clasificación, regresión, visualización y selección de caracteŕısticas. Adicionalmente permite la conexión a base de datos mediante los conectores a base de datos de Java, y es de fácil uso ya que posee una interfaz gráfica intuitiva. En el sitio web de la herramienta se puede encontrar documentación y un libro que explica las técnicas del proceso de ML haciendo uso de esta herramienta[30]. 2.8.4. MATLAB MATLAB15 (MATrix LABoratory) es una herramienta de software matemático que ofrece un entorno de desarrollo integrado con un lenguaje de programación propio (lenguaje M). Está disponible para las plataformas Unix, Windows, Mac OS X y GNU/Linux. Este software es privativo es necesario tener una licencia pagada para su utilización. Es utilizada ampliamente en centros de investigación y tiene una gran cantidad de bibliotecas accesibles para el desarrollo de diferentes tipos de proyectos. 12https://www.python.org/ 13https://pypi.python.org/pypi/spyder 14http://www.cs.waikato.ac.nz/ml/index.html 15https://es.mathworks.com/products/matlab.html 37 https://www.python.org/ https://pypi.python.org/pypi/spyder http://www.cs.waikato.ac.nz/ml/index.html https://es.mathworks.com/products/matlab.html 2.9. Antecedentes En este caṕıtulo se exponen los antecedentes relacionados al desarrollo de estrategias al- goŕıtmicas o sistemas de inversión, basadas en ML. Se utilizará como base para el desarrollo del caṕıtulo las siguientes referencias bibliográficas: [3], [2], [4]. Estas referencias correspon- den a surveys que describen diferentes aplicaciones de ML para pronosticar series de tiempo financieras. Si bien la predicción como tal no es espećıficamente el problema que se busca resolver con este TEG, es la parte de mayor énfasis del mismo. El caṕıtulo está organizado de la siguiente manera: en la sección 2.10 se muestra una breve introducción acerca de la tendencia del uso de técnicas de ML en la predicción financiera, como también en mercados financieros y por último, aplicar estos pronósticos en estrategias algoŕıtmicas; en la sección 2.11 se presentan los objetivos del uso de estrategias automáticas de trading basadas en ML; en la sección 2.12 se describe el flujo de trabajo para el desa- rrollo de estrategias algoŕıtmicas basadas en ML; luego, en la sección 2.13 se exponen las herramientas que tienden a ser utilizadas en el área. 2.10. Estrategias de trading automáticas basadas en ML Los mercados financieros juegan un rol importante en la organización económica y social de la sociedad moderna. En estos tipos de mercados, la información es un activo invaluable. Sin embargo, con la modernización de las transacciones financieras y los sistemas de informa- ción, las grandes cantidades de información que están disponible para un trader puede hacer prohibitivo el análisis de los activos financieros. En las últimas décadas, muchos investiga- dores han intentado desarrollar métodos y algoritmos para apoyar la toma de decisiones en diferentes segmentos de los mercados financieros[2]. Un área de investigación particularmente activa entre académicos y profesionales de la in- dustria durante las 2 últimas décadas ha sido la construcción de sistemas que invierten en valores y monedas. El objetivo de estos esfuerzos es producir métodos de inteligencia artifi- cial que sean mejores o al menos igual de buenos que sus contra-partes humanas en la tarea del reconocimiento de oportunidades de inversión. Muchos de estos sistemas toman como entrada precios pasados del mercado e intentan generar señales que indican la dirección (y a veces la magnitud) del movimiento de algún valor relativo a otro[31]. En conjunto con los esfuerzos mencionados, existen investigaciones que buscan responder si es posible generar ganancias y cómo generarlas, utilizando técnicas de ML en algoritmos de trading. Sin embargo, las aplicaciones de ML en el área financiera no solo se centran en la predicción de series de tiempo financieras para el beneficio de los especuladores y poder generar ganancias. El ML es aplicado para detectar fraudes financieros, predecir tasas de interés, predecir tasas de cambio, entre otros. En este trabajo, solo nos enfocaremos a la aplicación de ML para el 38 desarrollo de estrategias algoŕıtmicas de trading. A pesar de la amplia variedad de problemas que han sido tratados de resolver con técnicas de ML, existe una notable importancia en el área de finanzas con respecto a la predicción de series de tiempo financieras. Es por ello que la predicción de series de tiempo financieras puede ser considerada como uno de los principales desaf́ıos en la literatura relacionada con el ML y las series de tiempo[32]. En las últimas décadas, varios enfoques se han propuesto para predecir series de tiempo financie- ras y proveer un sistemas para apoyar el proceso de toma de decisiones[5]. Dos (2) grandes grupos de trabajos que intentan pronosticar series de tiempo financieras son los modelos estad́ısticos y los enfoques de ML[33]. Los métodos estad́ısticos tradicionales, generalmente asumen que las series de tiempo en cuestión son generadas por un proceso lineal[34] e inten- tan modelar el proceso de generación de la serie de tiempo para predecir valores futuros de la misma. La clave del éxito en la predicción de los mercados de valores es alcanzar los mejores resul- tados con la mı́nima cantidad de datos de entrada. Dada la incertidumbre de un mercado, las técnicas de soft computing son candidatos viables para capturar relaciones no lineales retornando resultados significativos sin la necesidad de conocimiento previo acerca de las distribuciones estad́ısticas de los datos[4]. Existe una gran cantidad de material académico que busca resolver el problema de pronos- ticar movimientos futuros de valores. Sin embargo, no muchos trabajos incluyen el diseño y desarrollo de una estrategia de trading que se encargue de efectuar operaciones en los mercados basada en los pronósticos, para luego ser probadas en datos históricos y medir su rentabilidad a lo largo del tiempo. 2.10.1. Estrategias basadas en aprendizaje supervisado Las estrategias de trading automático son aquellas que reducen el problema de la predicción del precio o tendencia algún valor en algún universo de valores, a un problema de clasificación o regresión y a la hora de definir las reglas para entrar o salir del mercado, se toman en cuenta predicciones las predicciones para efectuar diferentes tipos de transacciones. 2.10.2. Estrategias basadas en aprendizaje no-supervisado Las estrategias basadas en aprendizaje no supervisado son aquellas que a través de alguna técnica de clustering, son capaces de identificar valores, dentro de un universo de valores, que son similares. También, al identificar los valores que son similares, se están identificando los valores que difieren entre śı. En la literatura financiera, se establece que es posible reducir el riesgo a través de las inver- siones en instrumentos financieros que no están correlacionados positivamente. Es decir, al 39 calcular el ı́ndice de correlación, se obtiene un número negativo. De manera que al identi- ficar instrumentos correlacionados negativamente, es posible reducir el riesgo de inversión. Esta identificación es llevada a cabo por técnicas de ML, espećıficamente, de aprendizaje no supervisado. 2.10.3. Estrategias h́ıbridas Es posible desarrollar una estrategia considerando ambos enfoques del ML, aprendizaje su- pervisado y aprendizaje no supervisado, ya que ambos se encargan de diferentes aspectos a considerar a la hora de desarrollar una estrategia. Sin embargo, en la literatura no se encontró ningún trabajo que considerara la unión de estos dos enfoques. 2.11. Objetivos de las estrategias de trading basadas en ML Los objetivos que se pretenden alcanzar al desarrollar una estrategia de trading automática, son los siguientes: 1. Automatizar el proceso de inversión en mercados que permiten el trading algoŕıtmico. 2. Maximizar las ganancias utilizando modelos de ML para resolver problemas inherentes del trading algoŕıtmico. 3. Reducir los efectos de las emociones humanas que conllevan a tomar decisiones poco racionales. 4. Identificar momentos espećıficos para realizar algún tipo de transacción, con el objetivo de maximizar las ganancias. Al cumplirse los objetivos anteriores, se lograŕıa la concepción de una buena estrategia de trading automática, capaz de generar ganancias mejor o al menos igual, que un humano. 2.12. Flujo de trabajo general para el desarrollo de es- trategias de trading basadas en ML Para el desarrollo de una estrategia de inversión algoŕıtmica, basada predicciones de movi- mientos obtenidas a través de técnicas de clasificación y regresión de ML, no existen algún tipo de acuerdo en el campo de la investigación, sin embargo, el problema de pronosticar series de tiempo es un problema que se ha tratado y se sigue tratando tanto en la academia 40 como en la industria. En la Figura 2.15 se puede observar el flujo de trabajo convencional a realizar, a la hora de aplicar técnicas de ML para pronosticar series de tiempo. Definir Métricas Evaluar Predictor 4. Evaluación del Pronóstico Adquisición Preprocesamiento Normalización 1. Preparación de los Datos Estructuración de los Datos Escoger Predictor Configurar Arquitectura 2. Definición del Algoritmo Definición del Algoritmo Ajustar Parametros Realizar Entrenamiento 3. Entrenamiento Figura 2.15: Flujo de trabajo convencional para pronosticar series de tiempo [2]. Dado que el principal objetivo de un sistema de comercio autónomo es maximizar el beneficio cuando se aplica a los mercados reales, el paso de la evaluación debe tener como objetivo la capacidad de obtener beneficios en un entorno comercial real o simulado. Estas cuestiones deben ser abordadas, bajo la pena de construir un método de pronóstico que no sea aplicable en la práctica o que puede causar graves daños financieros a los inversores. Por lo tanto, para construir un método de negociación inteligente, algunos pasos deben ser incluidos en esta metodoloǵıa convencional y varios pasos existentes deben ser adaptados[2]. De acuerdo con Chande[35], una estrategia de trading exitosa debe implementar 3 carac- teŕısticas principales. La primera de ellas consiste en una serie de reglas que especifican cuando entrar o salir de un intercambio. Estas reglas utilizan la señal predicha para identifi- car el mejor momento para comprar o vender valores. El objetivo principal de las reglas de trading es maximizar el beneficio financiero. En términos prácticos, utiliza la señal predicha por el modelo, para comprar activos cuando están baratos pero que tienden a apreciarse en el futuro. La segunda caracteŕıstica de un sistema de trading exitoso es un mecanismo de control de riesgo, este sistema es un conjunto de reglas que protegen el dinero invertido, como las 41 ordenes stop-loss. Las estrategias de control de riesgo deben definir el beneficio y el riesgo que desean tomar. La tercera y última caracteŕıstica es un mecanismo de manejo de dinero. Este mecanismo se encarga de manejar el tamaño de la posición, es decir, la cantidad de recursos que se colocan a la hora de realizar una inversión, considerando el capital total y el riesgo que involucra la inversión. Definir Métricas Evaluar Predictor 4. Evaluación del Pronóstico Adquirir Datos Preprocesar Normalizar 1. Preparación de los Datos Estructurar de los Datos Escoger Predictor Configurar Arquitectura 2. Definición del Algoritmo Definición del Algoritmo Ajustar Parametros Realizar Entrenamiento 3. Entrenamiento Definir Variables de Entrada Definir Variables de Salida Definir Reglas Definir Control de Riesgo Definir Manejo del Dinero 5. Estrategias de Inversión Definir Métricas Evaluar Ganancias 6. Evaluación de la Estrategia Figura 2.16: Flujo de trabajo de estrategia basada en pronósticos de series de tiempo [2]. En la Figura 2.16 se observa el flujo de trabajo observado en la Figura 2.15 incluyendo los pasos necesarios para el desarrollo de una estrategia de trading exitosa. En la definición de las variables de entrada, no existe un consenso acerca de cuales variables observar. En la literatura se observó que las investigaciones utilizan diferentes tipos de va- riables de entrada. En Krollner, Vanstone, y Finnie[3] se realizó una clasificación de algunos trabajos según los tipos de variables de entrada utilizadas por los algoritmos de ML. En la Tabla 2.2 se muestran los trabajos clasificados según las variables observadas. En la etapa de Preprocesamiento, a la hora de diseñar una estrategia de trading basada 42 en ML, es necesario especificar que variable de salida se va a obtener a través del modelo. La variable mas utilizada es el precio del d́ıa siguiente[2][3]. Existen trabajos relacionados a varias etapas del preprocesamiento que utilizan técnicas de ML y otras técnicas de soft computing. Por ejemplo, encontrar el conjunto de variables de entrada que optimice algún criterio. Variables de Entrada Número de Trabajos Datos de Precios del Pasado 35 Volumen 4 Indicadores Técnicos 13 Precio del Petroleo 4 S&P 500 / NASDAQ / Dow Jones 4 Tasa de Desempleo 1 Suministro Monetario 3 Tasas de Cambio 3 Precio del Oro 3 Tasas de Interés a Corto y a Largo Plazo 6 Otras 10 Tabla 2.2: Clasificación de trabajos por variables de entrada[3]. En el trabajo de Cavalcante, Brasileiro, Souza, Nobrega, y Oliveira[2] también se realiza una clasificación de trabajos. En este survey se observa una clara tendencia por la utilización de variables técnicas en vez de fundamentales y noticias financieras. Del mismo modo, en [4] Atsalakis y Valavanis, clasificaron 100 art́ıculos que utilizan ANN para la predicción de series de tiempo financieras y en dicho trabajo se encuentra una tendencia a utilizar como variables de entrada, variables técnicas. Además del tipo de variables a utilizar, a la hora de aplicar estrategias de trading es necesario especificar el universo de valores al cual se va aplicar la estrategia. El universo puede ser un mercado en espećıfico, las acciones que forman parte de un ı́ndice, entre otros. Otros aspectos a considerar, es el número de variables de entrada, el tamaño de la muestra. En la Tabla 2.3 se muestra una clasificación considerando diferentes universos de valores. El número de variables de entrada utilizadas por cada modelo difieren en general, el número promedio de variables se encuentra entre 4 y 10[4]. En la actualidad existen trabajos cient́ıficos que tienen como objetivo mejorar los resultados a través de técnicas de procesamiento. La preparación de los datos es el primer paso de cualquier sistema inteligente de trading. Luego de definir las variables de entrada y salida para modelar el activo financiero y adquirir los datos de entrada a ser utilizados en la fase de entrenamiento, la aplicación de algunos procedimientos de preprocesamiento sobre estos datos puede ser muy útil, ya que estos pueden ser utilizados para mejorar la precisión de un modelo predictor inteligente en varias formas[2]. 43 Mercado de valores Número de Trabajos Bolsa de Amsterdam 2 Bolsa de Valores de Atenas 4 Bolsa de Valores de Australia 3 Bolsa de Valores de Belgica 1 Bolsa de Valores de Chipre 2 Índice Financial Times 2 Bolsa de Valores de Alemania 5 Bolsa de Valores de Hong Kong 1 Bolsa de Valores de Indonesia 1 Bolsa de Valores de Estanbul 3 Bolsa de Valores de Korea 5 Bolsa de Valores de Madrid 2 NASDAQ 4 Bolsa de Valores de Nueva York 5 NIKKEI-Bolsa de valores de Tokio 5 Bolsa de Valores de Filipinas 1 Bolsa de Valores de Polonia 2 Bolsa de Valores de Riga 1 Bolsa de Valores de Sao Paolo 1 Bolsa de Valores de Shangai 4 Bolsa de Valores de Singapur 4 Índices S&P 500, NASDAQ y Dow Jones 18 Bolsa de Valores de Taiwan 4 Bolsa de Valores de Toronto 1 Tabla 2.3: Clasificación según el universo de valores[4]. El siguiente paso correspondiente, en la tarea de pronosticar sobre series de tiempo finan- cieras, es la elección del método de pronóstico. En las últimas décadas, varios enfoques han sido propuestos para predecir mercados financieros y proveer sistemas de apoyo para la toma de decisiones[5]. Las técnicas de soft computing como sistemas expertos, sistemas difusos y ANN, han sido aplicadas con éxito relativo en modelar y predecir series de tiempo financieras[36]. Con el objetivo de escoger un modelo predictor que permita cumplir con los objetivos de una estrategia automática, se han realizado varios estudios que tienen como meta predecir o modelar el mercado. En la literatura se pueden encontrar trabajos relacionados a la mineŕıa de texto para clasificar noticias y establecer un modelo en base a estas, predictores basa- dos en ANN, SVM, DT, modelos ensamblados de ML, modelos h́ıbridos y otros enfoques para pronosticar. En la Tabla 2.4 se realizó una clasificación de los estudios revisados en Cavalcavante[2], según sus metas principales. Es notable una tendencia hacia la realización 44 de la utilización e algoritmos de soft computing, incluyendo técnicas de ML, para predecir los mercados. Meta Principal Número de Trabajos Predecir 36 Selección de Caracteŕısticas 6 Clustering 4 Eliminación de ruido 4 Detección de Valores anómalos 3 Segmentación de Series de Tiempo 4 Tabla 2.4: Clasificación respecto a las metas principales[2]. Con respecto a los algoritmos de utilizados utilizados para predecir los mercados, Atsalakis et al. [4] revisó 100 trabajos con respecto a esta tarea. Todos los trabajos revisados en dicho survey utilizan variaciones de ANNs. Una revisión mas reciente de la literatura fue realizada por Krollner et al.[3], en esta revisión se clasifican estudios basados en ML que buscan predecir movimientos en los mercados, en donde se puede observar una clara tendencia a utilizar ANNs. Cavalcavante et al[2], en una revisión bastante reciente, también clasificó cada trabajo por las técnicas utilizadas, en donde se puede observar una tendencia a utilizar técnicas basadas en SVM y ANN. En la Tabla 2.5 se muestra la clasificación realizada Krollner et al[3] con respecto a las tecnoloǵıas utilizadas. Tecnoloǵıa Número de Publicaciones Basadas en ANN 21 Técnicas de Optimización y algoritmos evolutivos 4 Hı́bridas 15 Otras 6 Tabla 2.5: Clasificación según las tecnoloǵıas[3]. Otro fase importante dentro de la literatura son las medidas de rendimiento al evaluar los modelos de ML. Krollner et al. [3] clasificó los estudios revisados según el método utilizado para evaluar los modelos de ML. En la Tabla 2.6 se encuentra la clasificación realizada por Krollner et al[3]. En esta tabla se puede observar que la mayoŕıa de las publicaciones no utilizan un sistema o estrategia de trading para evaluar el rendimiento de las predicciones en un entorno real. Sin embargo, la comparación con la estrategia Buy & Hold, donde la estrategia de B&H es simplemente comprar un conjunto de valores y mantenerlos durante el intervalo de tiempo a evaluar,nunca se ejcuta la venta de este conjunto de valores, tiene importancia académica ya que existen hipótesis como la de Fama y Malkiel[37], en donde se concluye que de ser cierta la hipótesis planteada, la única forma de generar ingresos seŕıa a través de una estrategia Buy & Hold. Del mismo modo, existen hipótesis que plantean que los cambios de precios en los valores son modelados por un Camino Aleatorio. Es decir, que 45 tienen la misma distribución de probabilidad y son independientes entre śı. De ser cierto esto, no es posible beneficiarse de la información del pasado para pronosticar el futuro[38]. Evaluación del Modelo Número de Publicaciones Buy & Hold 9 Camino Aleatorio 6 Técnicas Estad́ısticas 18 Otras Técnicas de ML 28 Sin Método de Evaluación 7 Tabla 2.6: Clasificación por métodos de evaluación [3]. 2.13. Herramientas utilizadas En este caṕıtulo se describen las herramientas utilizadas para la realización de estrategias de trading basadas en pronósticos de modelos de ML. En la mayoŕıa de las publicaciones revisadas, no se especifica que herramientas de software o hardware fueron utilizadas a la hora de realizar el estudio. Sin embargo, algunas pocas publicaciones indican que utilizaron Python16, Microsoft Azure17 y MATLAB18. 16https://www.python.org/ 17https://azure.microsoft.com/es-es/ 18https://es.mathworks.com/products/matlab.html 46 https://www.python.org/ https://azure.microsoft.com/es-es/ https://es.mathworks.com/products/matlab.html Caṕıtulo 3 Marco aplicativo En este caṕıtulo se describen a detalle la metodoloǵıa, consideraciones de diseño, considera- ciones de implementación y la arquitectura planteada para el desarrollo de las actividades descritas en el Caṕıtulo 4 3.1. Metodoloǵıa El presente trabajo se guió por el flujo de trabajo para desarrollar estrategias basadas en pronósticos de series de tiempo presentado en la Figura 2.16. Es importante resaltar en este punto, que al realizar pronósticos basados en este flujo de trabajo, es posible regresar a etapas previas en busca de mejoras en los resultados. 3.2. Consideraciones de diseño Se crearon 8 modelos de clasificación de ML para determinar la tendencia del precio del d́ıa siguiente, sobre un conjunto de datos técnicos que abarcan un periodo de 10 años (desde el 01- 01-2007 hasta el 02-01-2017) de las acciones de Apple(AAPL), IBM(IBM), Google(GOOGL), Amazon(AMZN) y el ETF SPY(SPY). A partir de los datos técnicos, se calcularon todos los indicadores especificados en la tabla 3.1. Sobre estos indicadores, se construyeron los conjuntos de entrenamiento y prueba por cada 3 años, a modo de ventana deslizante. Los algoritmos utilizados para la construcción de los modelos fueron los siguientes: 1. LR. 2. KNN. 3. DT. 47 4. SVM-Kernel lineal. 5. SVM-Kernel polinomial. 6. SVM-Kernel radial. 7. SVM-Kernel sigmoide. 8. MLP Estos algoritmos fueron seleccionados debido a su popularidad en el área de ML e inclusive, muchos de ellos también son ampliamente utilizados en la tarea espećıfica de pronosticar series tiempo financieras, como se exponen en los trabajos [2] [3] [4]. Por fines prácticos, se utilizaron los parámetros por defecto en cada uno de los modelos construidos. En total, se establecieron un total de 320 modelos, ya que se utilizo cada algoritmo para cada acción, para cada conjunto de entrenamiento. Luego de construir los modelos y probarlos en sus respectivos peŕıodos de prueba, se evalúan sobre las métricas specificity, recall y balanced accuracy. Las funciones utilizadas para implementar los modelos se encargan al mismo tiempo de calcular las métricas para evaluar el desempeño de los mismos. Cada función espera por parámetros un conjunto de datos y esta se encarga de dividir el conjunto, en 2 subconjuntos, uno de entrenamiento y otro de prueba. Las funciones además calculan las matrices de confusión y otras métricas derivadas de la misma para su posterior evaluación. El modelo de regresión loǵıstica fue calculado a través de un modelo lineal generalizado que utiliza como enlace la función logit. Con las probabilidades obtenidas, se clasificaron las instancias como 1, si la probabilidad es mayor que 0.555, 0 en caso contrario. El criterio de decisión fue establecido por medio de ensayo y error. K-vecinos fue calculado utilizando la distancia euclidiana entre cada fila del conjunto de prueba. La clasificación de la instancia se da por mayoŕıa de votos. En caso de empate, se decide al azar. Árbol de decisión, espećıficamente de clasificación, sigue el algoritmo de dividir recursi- vamente el conjunto de datos, utilizando la caracteŕıstica que mejor separa los datos. La caracteŕıstica que mejor separa los datos es aquel que minimiza el ı́ndice Gini. Este criterio fue utilizado por su popularidad en el contexto, además de ser un parámetro por defecto en la biblioteca utilizada. Se utilizaron 4 tipos de kernels a la hora de implementar los modelos de máquinas de vectores de soporte. Los 4 kernels fueron: lineal, polinomial, radial y sigmoide. Fueron tomados los parámetros por defecto establecidos por la biblioteca. La estructura de las redes neuronales implementadas esta dada por un perceptron multicapa, en el cual la capa escondida tiene un número de neuronas definido por la ráız de la cantidad de neuronas de entrada. 48 I1 = RSI(t) I2 = (x(t)− bollingerupper)/bollingerupper I3 = (x(t)− bollingerlower)/bollingerlower I4 = %K(t) I5 = %D(t) I6 = %K(t)− %K(t− 1) I7 = %D(t)− %K(t− 1) I8 = (x(t)− x(t− 1)/x(t− 1) I9 = (x(t)− xl(t− 1)/xh(t)− xl(t) I10 = (PMAs(t)− PMAs(t− 1)/PMAs(t− 1) I11 = (PMAl(t)− PMAl(t− 1)/PMAl(t− 1) I12 = (PMAs(t)− PMAl(t− 1)/PMAl(t− 1) I13 = (x(t)− PMAl(t))/PMAl(t) I14 = (x(t)−min(x(t), ..., x(t− 5))/min(x(t), ..., x(t− 5)) I15 = (x(t)−max(x(t), ..., x(t− 5))/max(x(t), ..., x(t− 5)) I16 = (v(t)− v(t− 1))/v(t− 1) I17 = (VMAs(t)− VMAs(t− 1))/VMAs(t− 1) I18 = (VMAl(t)− VMAl(t− 1))/VMAl(t− 1) I19 = (VMAs(t)− VMA− l(t− 1))/VMAl(t− 1) I20 = (v(t)− VMAl(t))/VMAl(t) I21 = (v(t)−min(v(t), ..., v(t− 5))/min(v(t), ..., v(t− 5)) I22 = (v(t)−max(v(t), ..., v(t− 5))/max(v(t), ..., v(t− 5)) Tabla 3.1: Variables de entrada[5]. Donde x(t), xh(t), xl(t) y v(t) corresponden a los precios de cierre, alto, bajo, y al volumen, respectivamente, en el d́ıa t; bollingerupper y bollingerlower corresponden a las bandas de Bollinger; PMAs y PMAl corresponden a medias móviles sim- ples de corto y largo plazo, respectivamente; VMAs y VMAl corresponden a medias móviles simples de corto y largo plazo, respectivamente, aplicadas al volumen; por último, %K(t) y %D(t) corresponden a las ĺıneas rápida y lenta, respectivamente, del oscilador estocástico. Finalmente, se crea un sistema de trading basada en el trabajo de [5] en conjunto con la estrategia Luxor y los modelos de ML. Esta estrategia luego es evaluada y comparada con otras estrategias mediante los retornos acumulados de cada una de ellas. 3.2.1. Flujo de entrenamiento Para el entrenamiento de los modelos se utiliza el conjunto de datos de los indicadores técnicos especificados en la Tabla 3.1. Luego, se analizaron estad́ısticamente cada una de las columnas. Posterior al análisis se realizó la eliminación de ciertos datos. Seguidamente, se separaron los datos por año y se establecieron los conjuntos de entrenamiento y prueba, considerando una ventana de 3 años donde los 2 primeros años corresponden a los datos de entrenamiento y el último año corresponde al conjunto de datos de prueba. Luego, se realizó el 49 entrenamiento de cada uno de los modelos con parámetros por defectos, establecidos por las bibliotecas que contienen las implementaciones de cada uno de los algoritmos. Se entrenaron 320 modelos, de acuerdo a las caracteŕısticas mencionadas anteriormente. 3.2.2. Flujo de prueba Para la fase de prueba de los modelos, se llevo a cabo el mismo esquema del entrenamiento. Se probaron los 320 modelos en sus respectivos conjuntos de datos de prueba. Posteriormente, se construyeron las matrices de confusión de cada prueba, se agruparon por cada algoritmo y por cada acción y se tomó el promedio del recall, sensivity y balanced accuracy. Seguidamente se seleccionó el modelo que tuvo mejor desempeño para cada acción. 3.2.3. Creación de la estrategia Se creó una estrategia basada en criterio de decisión que se expone en el trabajo de Teixeira y Oliveira [5] con respecto al indicador RSI. Este criterio se resume a no tomar posiciones largas cuando el indicador RSI muestra valores por encima de 70. Además de considerar el cruce de 2 medias móviles, una de 30 periodos y otra de 50 peŕıodos de tiempo, similar a la estrategia conocida como Luxor [39] y el promedio de. En la estrategia diseñada, solo se consideran decisiones para tomar posiciones largas en el mercado, es decir, entrar al mercado con una operación de compra. No se consideran apalancamientos ni costos de transacciones variables. Se estableció como capital inicial 10 mil dolares americanos y un costo por transacción de 10 dolares americanos. 3.2.4. Evaluación de la estrategia Se crearon estrategias alternativas para la posterior comparación con la estrategia que uti- liza los modelos de ML. Estas estrategias fueron: - Comprar y mantener de las acciones AAPL, AMZN, GOOGL e IBM. Considerando un portafolio de pesos uniformes (es decir, se invirtió la misma cantidad de capital para cada acción) - Comprar y manter del indice SPY - Luxor, considerando solo posiciones largas - Estrategia basada en el RSI - Luxor considerando solo posiciones largas y además, el RSI Se evaluó cada una de estas estrategias en base a la cantidad de retornos acumulados que generan. Posteriormente se compararon con la estrategia que toma en cuenta los pronósticos realizados por los modelos de ML. 50 3.3. Consideraciones de implementación Para la implementación de las estrategias se utilizó la libreria de R Quanstrat. Todos a excepción de 2 indicadores, presentan valores entre -1 y 1. De manera que solo se consideraron aquellos que se encuentran en este rango, ya que esto permite un mejor desempeño para los modelos basados en distancia[1]. El tiempo de entrenamiento de todos los modelos fue cronometrado. Este ronda los 17 se- gundos. Al momento de llevar a cabo la implementación, se presentaron fallas con respecto a la obtención de los datos otorgados por Google Finance. Debido a esto, la implementación se realizó con datos técnicos obtenidos de Yahoo Finance19. Tanto la fase de entrenamiento como la fase de prueba, se realizaron estableciendo una semilla (777) para la reproducibilidad de los resultados. Las bibliotecas que contienen las implementaciones de los algoritmos de ML fueron: - rpart - nnet - e1071 - class Las bibliotecas rpart y class, fueron utilizadas en la asignatura Mineŕıa de Datos y además, existe una gran cantidad de ejemplos y documentación disponible en ĺınea. Para la implementación de los modelos SVM, se utilizó la biblioteca e1072. Es descrito como una interfaz de la biblioteca libsvm, siendo esta la biblioteca más utilizada por la comunidad cient́ıfica para la resolución de problemas que ameritan la utilización de SVM [1]. Se utilizó la biblioteca nnet para la implementación de las redes neuronales. Por una parte, nnet es el paquete de NN con mayor documentación en la web. Este paquete soporta arqui- tecturas de NN de una sola capa intermedia que se entrena haciendo uso de las técnicas de propagación hacia adelante y hacia atrás [1]. El código de este trabajo se encuentra en un repositorio privado en la plataforma GitHub20. 3.4. Infraestructura de la solución Hardware: Procesador intel core i7 16 GB de memoria RAM Software 19https://finance.yahoo.com/ 20https://github.com/ 51 https://finance.yahoo.com/ https://github.com/ Ubuntu 16.04 LTS como sistema operativo R como lenguaje de programación en su versión 3.4.3 RStudio en su version 1.1.383 como entorno de desarrollo integrado 52 Caṕıtulo 4 Análisis e interpretación de los resultados 4.1. Recolección de los datos En esta sección se obtienen los datos técnicos de las acciones SPY, AAPL, AMZN, GOOGL e IBM y se muestran varias métricas relacionadas con estos datos. Los datos técnicos obtenidos y mencionados anteriormente, por la biblioteca quantmod, presentan las métricas estad́ısticas mostradas en las Tablas 4.1, 4.2, 4.3, 4.4, 4.5. En la Tabla 4.6 se muestran las dimensiones de los conjuntos de datos correspondientes a cada acción, como también la cantidad de valores no disponibles (NA - Not available) de cada conjunto. Las columnas correspondientes al precio de las acciones (Open, High, Low, Close) muestran valores considerablemente elevados en las acciones de Amazon y Google, comparados con el resto. Métrica Open High Low Close Volume Mı́nimo 57.55 59.29 56.83 57.69 36251400 Máximo 229.42 229.71 229.01 229.57 871026300 Media 139.16 139.96 138.28 139.17 172594106 Mediana 123.51 124.11 122.75 123.49 146960450 Tabla 4.1: SPY - OHLCV La Figura 4.1 muestra precios de cierre considerablemente mayores para las acciones de Google y Amazon. Amazon, en particular, se mantuvo desde el principio con precios mayores que el resto, sin embargo, las acciones de Google se elevaron mucho más que el resto a partir del año 2012. 53 Métrica Open High Low Close Volume Mı́nimo 0.1153 0.1191 0.1135 7.563 11475900 Máximo 129.8403 129.9176 127.4155 125.973 843242400 Media 29.2000 29.4569 28.9343 51.710 132248440 Mediana 0.6166 0.6191 0.6107 40.857 106009750 Tabla 4.2: AAPL - OHLCV Métrica Open High Low Close Volume Mı́nimo 35.29 37.07 34.68 35.03 984400 Máximo 845.79 847.21 840.60 844.36 104329200 Media 263.16 266.14 259.98 263.23 6028962 Mediana 208.59 213.59 206.06 210.59 4813200 Tabla 4.3: AMZN - OHLCV Métrica Open High Low Close Volume Mı́nimo 65.76 67.48 61.95 128.8 520600 Máximo 859.05 867.00 850.52 858.5 46528000 Media 294.40 296.91 291.54 402.5 5887853 Mediana 155.78 156.78 154.55 311.4 4590100 Tabla 4.4: GOOGL - OHLCV Métrica Open High Low Close Volume Mı́nimo 60.46 63.98 57.77 56.84 1027500 Máximo 193.23 193.69 192.26 184.56 30770700 Media 134.45 135.56 133.46 128.27 5904215 Mediana 143.70 145.26 142.61 137.44 5027800 Tabla 4.5: IBM - OHLCV Conjunto de datos Número de filas Número de columnas Cantidad de valores NA AAPL 2538 6 0 AMZN 2538 6 0 GOOGL 2538 6 0 IBM 2538 6 0 SPY 2538 6 0 Tabla 4.6: Descripción de los datos 54 2008 2010 2012 2014 2016 0 2 0 0 4 0 0 6 0 0 8 0 0 Index P re ci o d e c ie rr e Precios de cierre de cada instrumento SPY IBM AAPL AMZN GOOGL Figura 4.1: Precios de cierre. 4.2. Pre-procesamiento En esta fase se realiza la limpieza de los datos y la selección de caracteŕısticas que se utilizarán para construir los modelos. Las variables seleccionadas son las establecidas por la Tabla 3.1. Estas corresponden a las especificadas en el trabajo de Oliveira [5]. En principio, con los datos obtenidos de Yahoo Finance, se sustituyeron los datos NA obte- nidos y luego, se calcularon los indicadores técnicos haciendo uso de las funciones provistas 55 por la biblioteca. La tabla xts21 de R, utilizada comúnmente para manipular series de tiem- po. Debido al cálculo de los indicadores, se generaron ciertos valores NA. Estos valores NA fueron sustituidos por la media de la columna (cada columna corresponde a un indicador). También, se generaron valores que tienden al infinito, debido al cálculo de los indicadores en los que la división necesaria se realizaba con un divisor muy cercano a cero. Los indicadores que mostraron valores infinitos fueron eliminados y no se tomaron en cuenta para cómputos posteriores. Espećıficamente, esto ocurrió con el conjunto de datos correspondiente al ETF SPY en las variables i16 e i21, expuestas en la Tabla 3.1. Además, cada una de las variables se encuentran entre el −1 y 1 sin embargo, la variable i1 correspondiente al indicador RSI presenta una gran diferencia entre el rango de valores con respecto al resto. En la Figura 4.2 se muestra una comparación entre 2 imágenes en donde se superponen todos los indicadores. En la Figura 4.2a se observa en el gráfico como la ĺınea de color negro presenta una gran diferencia con el resto. La Figura 4.2b muestra una gráfica en la cual no se contempla el RSI. Debido a la gran diferencia entre el RSI y el resto de indicadores, el indicador RSI no se tomó en cuenta a partir de este punto, ya que los métodos basados en distancia se ven afectados por este tipo de situaciones [1]. ene 02 2008 feb 01 2008 mar 03 2008 abr 01 2008 may 01 2008 jun 02 2008 jul 01 2008 ago 01 2008 sep 02 2008 oct 01 2008 nov 03 2008 dic 01 2008 dic 31 2008 Indicadores sin RSI 2008−01−02 / 2008−12−31 0 20 40 60 0 20 40 60 (a) Indicadores con RSI ene 02 2008 feb 01 2008 mar 03 2008 abr 01 2008 may 01 2008 jun 02 2008 jul 01 2008 ago 01 2008 sep 02 2008 oct 01 2008 nov 03 2008 dic 01 2008 dic 31 2008 Indicadores sin RSI 2008−01−02 / 2008−12−31 0 1 2 3 0 1 2 3 (b) Indicadores sin RSI Figura 4.2: Diferencia entre la mayoŕıa de los indicadores y el indicador RSI. Por último, se calcularon los retornos de cada d́ıa y se tomo en cuenta que si el signo del retorno es positivo, entonces el precio sube. Para cada d́ıa, se definió como clase 1 si al d́ıa siguiente el signo del retorno es positivo y 0, en caso contrario. Este esquema se estableció para aplicar algoritmos de aprendizaje supervisado, espećıficamente, algoritmos de clasificación, ya que en varios trabajos relacionados, lo establecen de forma similar. Entre estos trabajos se encuentra el trabajo de Lu y el de Teixeira y Oliveira. En la Figura 4.3 se muestran los valores que toma la columna correspondiente a la clase durante el primer año de la acción AAPL. En la Figura 4.4 se muestra un gráfico de barras correspondientes a la cantidad de veces en que sube y las veces en que no sube durante el primer año de la acción AAPL. 21https://cran.r-project.org/web/packages/xts/index.html 56 https://cran.r-project.org/web/packages/xts/index.html Conjunto de datos Número de filas Número de columnas Cantidad de valores NA AAPL 2538 22 0 AMZN 2538 22 0 GOOGL 2538 22 0 IBM 2538 22 0 SPY 2538 20 0 Tabla 4.7: Descripción de los conjuntos de datos de cada acción. Estos conjuntos de datos están conformados por los indicadores mencionados en la Tabla 3.1 luego de limpiar los datos y adjuntar a cada conjunto la columna respectiva a la clase. ene mar may jul sep nov ene 0. 0 0. 2 0. 4 0. 6 0. 8 1. 0 Index va lo re s Clase − Sube de precio o no Figura 4.3: Clase. 4.3. Evaluación de los modelos Al implementarse los modelos según lo explicado en la Sección 3, se obtuvieron los resultados que se muestran en las Tablas 4.8, 4.9 y 4.10. En base a estos resultados, en base a estos resultados, se realizaron 2 estrategias, uno tomando en cuenta los mejores modelos con 57 Fr ec ue nc ia 0 50 100 0 1 Figura 4.4: Gráfico de barras de la clase del primer año de la acción AAPL. respecto a la métrica specificity y otro con respecto a la métrica recall. Si bien los resultados muestran un bajo desempeño de los modelos, son coherentes con el hecho de predecir un evento tan dinámico y complejo. Modelo SPY AAPL AMZN GOOGL IBM LR 0.37 0.39 0.40 0.38 0.39 KNN 0.38 0.38 0.38 0.37 0.40 DT 0.36 0.40 0.38 0.37 0.38 LINEAR 0.37 0.39 0.41 0.37 0.39 POLY 0.37 0.38 0.40 0.37 0.40 RADIAL 0.38 0.37 0.38 0.37 0.37 SIG 0.38 0.39 0.40 0.38 0.38 NN 0.39 0.39 0.39 0.38 0.38 Tabla 4.8: Balanced accuracy En las Tablas 4.11, 4.12 y 4.13 se muestran los mejores modelos con respecto a las acciones. Al observar los resultados, se interpreta que en promedio, la probabilidad de que un modelo acierte en la mayoŕıa de los casos es menor que realizar un lanzamiento de una moneda 58 Modelo SPY AAPL AMZN GOOGL IBM LR 0.44 0.41 0.52 0.46 0.44 KNN 0.30 0.29 0.40 0.36 0.34 DT 0.38 0.37 0.37 0.37 0.37 LINEAR 0.28 0.31 0.49 0.36 0.35 POLY 0.20 0.20 0.41 0.27 0.25 RADIAL 0.33 0.32 0.42 0.33 0.33 SIG 0.27 0.26 0.41 0.34 0.31 NN 0.37 0.30 0.38 0.25 0.33 Tabla 4.9: Specificity Modelo SPY AAPL AMZN GOOGL IBM LR 0.30 0.37 0.28 0.30 0.34 KNN 0.46 0.47 0.36 0.37 0.45 DT 0.35 0.43 0.39 0.38 0.39 LINEAR 0.47 0.47 0.32 0.38 0.44 POLY 0.54 0.56 0.38 0.48 0.55 RADIAL 0.42 0.43 0.34 0.40 0.41 SIG 0.49 0.52 0.38 0.42 0.44 NN 0.42 0.48 0.40 0.50 0.44 Tabla 4.10: Recall justa22 y clasificar en base al resultado del lanzamiento. SPY AAPL AMZN GOOGL IBM Modelo LR LR LR LR LR Tabla 4.11: Mejores modelos con respecto a la métrica specificity. SPY AAPL AMZN GOOGL IBM Modelo POLY POLY NN NN POLY Tabla 4.12: Mejores modelos con respecto a la métrica recall. SPY AAPL AMZN GOOGL IBM Modelo NN DT LINEAR SIG POLY Tabla 4.13: Mejores modelos con respecto a la métrica balanced accuracy. 22Una moneda justa es aquella que tiene 0.5 de probabilidad de caer cara en un lanzamiento. 59 4.4. Evaluación de la estrategia En esta sección se analizan y se comparan los resultados obtenidos por las estrategias men- cionadas en 3.2.4. En la Tabla 4.14 se muestra la cantidad de dolares finales al aplicar cada estrategia mencio- nada. En esta tabla se puede observar que la estrategia que utiliza las predicciones de los modelos resulta mejor en cuanto a ganancia de dolares. Existen muchos otras métricas con las cuales se pueden evaluar las estrategias. Por ejemplo, métricas relacionadas al riesgo y métricas que realizan un promedio ponderado entre riesgo y ganancia. Sin embargo, en este trabajo solo se tomó en cuenta el dinero al iniciar la estrategia y al finalizar, como también, los retornos acumulados obtenidos por cada una de estas estrategias a lo largo del tiempo de evaluación. En las Figuras 4.5, 4.6, y 4.7 se muestra el rendimiento de cada estrategia con respecto a los retornos acumulados. En las gráfica 4.5 se puede observar como el precio de las acciones de Amazon son las que tienen un mayor aumento de valor en los últimos años, en esa misma figura la ĺınea correspondiente al portafolio balanceado uniformemente, de las 4 acciónes, presenta un mejor desempeño con respecto a las acciones de IBM y Google. En la gráfica. En la Figura 4.6 se muestra 2 ĺıneas de tiempo, una representa una estrategia B&H del ETF SPY y la otra representa un portafolio uniforme conformado por las 4 acciones, en esta gráfica se evidencia un mejor desempeño de parte del portafolio compuesto por las 4 acciones. En la Figura 4.7 se muestran la estrategias especificadas en Caṕıtulo 3. En la gráfica se evidencia que aunque los modelos de ML no tienen un buen desempeño, una estrategia que utilice los pronósticos de los modelos ya antes mencionados, tuvo un mejor desempeño que aquellas estrategias que no tomaron en cuenta los pronósticos. Tabla 4.14: My caption Estrategia Equidad final Luxor 93352.11 Luxor + RSI 89443.17 RSI 162317.6 B&H - SPY 16840.09 B&H - AAPL 36862.82 B&H - AMZN 40577 B&H - GOOGL 22540.91 B&H - IBM 18180.19 B&H - Stocks 29540.23 Luxor + RSI + ML 342291.6 60 2007−01−04 2008−07−01 2009−07−01 2010−07−01 2011−07−01 2012−07−02 2014−01−02 2015−01−02 2016−01−04 0 5 1 0 1 5 2 0 PORTFOLIO AMZN AAPL GOOGL IBM V a lo r Retornos acumulados Figura 4.5: Retornos acumulados de estrategia B&H de cada acción y un portafolio unifor- memente balanceado de las 4 acciones. 4.5. Trabajos relacionados En el trabajo de Lu [6] se construyó un sistema automatizado de trading basado en algorit- mos de ML. Basados en el precio histórico de los precios de los instrumentos financieros, los modelos de ML tienen como objetivo predecir los retornos del d́ıa siguiente del instrumento objetivo. Una estrategia personalizada de trading toma las predicciones de los modelos como datos de entrada para generar ordenes de compra y venta a un simulador de mercado, donde esas ordenes son ejecutadas. En este trabajo se encontró que con solo los datos históricos del precio de los instrumentos financieros no es suficiente para predecir los retornos futuros. Da- do ese hecho, utilizaron datos adicionales relacionados al sector financiero al que pertenecen dichos instrumentos. Este enfoque arrojó mejores resultados, ya que algunos modelos alcan- zaron casi 60 % de precisión. Además, se encontró que al utilizar variaciones de los algoritmos de ML como optimizaciones de curvas ROC o modelos ensamblados que combinan modelos básicos de algoritmos de ML, pueden mejorar la precisión y proveer resultados significativos. La estrategia de trading personalizada mostró señales de estar siguiendo de manera correcta 61 2007−01−04 2008−07−01 2009−07−01 2010−07−01 2011−07−01 2012−07−02 2014−01−02 2015−01−02 2016−01−04 0 2 4 6 8 PORTFOLIO SPY V a lo r Retornos acumulados Figura 4.6: Retornos acumulados de estrategia B&H del Portfolio uniformemente balanceado vs. ETF SPY . el mercado de acciones, alcanzando casi 20 % de retornos acumulados durante el peŕıodo de prueba. En el trabajo de Teixeira y Oliveira [5] se implemento un sistema de trading basado en datos de cierre y el volumen histórico de acciones de la bolsa de valores de Brasil. Se utilizó un clasificador KNN en conjunto con herramientas comunes del trading como lo son los filtros RSI, ya que estas herramientas son usualmente ignoradas en trabajos académicos. El sistema une el clasificador KNN con los filtros de RSI. Este sistema obtuvo mejor desempeño con respecto a una estrategia B&H de cada instrumento, en 12 de 15 escenarios. 62 2007−01−03 2008−07−01 2009−07−01 2010−07−01 2011−07−01 2012−07−02 2014−01−02 2015−01−02 2016−01−04 0 1 0 2 0 3 0 Luxor RSI Luxor.RSI Luxor.RSI.ML V a lo r Retornos acumulados Figura 4.7: Retornos acumulados de las estrategias implementadas. 63 64 Caṕıtulo 5 Conclusiones En este trabajo de investigación se realizaron modelos de ML basados únicamente en los datos técnicos históricos que buscan predecir el alza o baja del precio de cierre del d́ıa siguiente de algún instrumento financiero. Para ello se realizó una amplia revisión bibliográfica con el fin de indagar acerca de las técnicas utilizadas en esta área de investigación que involucra las finanzas y la inteligencia artificial. Con esto se obtuvo información sobre las metodoloǵıas y tendencias aplicadas al tema en cuestión. Una vez estudiada la bibliograf́ıa, este trabajo de investigación se centró en aplicar técnicas de clasificación para generar Las actividades llevadas a cabo en este trabajo se realizaron siguiendo el flujo de trabajo expuesto en la Figura 2.16, utilizando como datos de entrada los datos técnicos de las accio- nes AMZN, AAPL, GOOGL e IBM. Para la implementación y evaluación de los modelos, se utilizaron las tecnoloǵıas, técnicas y los conceptos expuestos en el Caṕıtulo 2. La metodo- loǵıa, las consideraciones de diseño e implementación y la infraestructura de la solución son expuestas respectivamente en el Caṕıtulo 3. Durante el proceso de construir los modelos e identificar el modelo de mejor desempeño, se pudo observar que ninguno de los modelos realmente es capaz de predecir con una certeza considerable el alza o baja del mercado, según los parámetros establecidos y especificados en el Caṕıtulo 3. Sin embargo, al evaluar la estrategia diseñada tomando en cuenta los pronósticos del modelo realizado, con respecto al resto se pudo observar que esto tiene un mejor desempeño en cuanto a retornos acumulados. Esto no es evidencia suficiente para afirmar que estas técnicas realmente mejoran en todos los casos posibles las estrategias de trading, ya existen una gran cantidad de acciones, sectores, indicadores, ventanas posibles de tiempo a evaluar, además de esto, la naturaleza del problema involucra una cantidad infinita de variables, ya que las personas que participan en los mercados con sus decisiones, a su vez, estas decisiones son causadas por ciertas influencias, de manera que el problema a resolver es tan complejo como se quiera. En conclusión, luego de observar los resultados de los modelos, podemos concluir que al utilizar las técnicas y los datos que se utilizaron en este trabajo, no son suficientes para 65 clasificar alzas o bajas de las acciones seleccionadas, pero, una estrategia que considere los indicadores técnicos y las reglas que se utilizaron, es posible obtener más ganancias que al no considerar los pronósticos. Sin embargo, es importante considerar que las acciones utilizadas no sufren de cáıdas prolongadas, de hecho, mantienen una proporción mayor de retornos positivos que negativos. 5.1. Contribuciones Las contribuciones de este trabajo de investigación son las siguientes: Se realizó una revisión amplia sobre las tendencias de la implementación de estrategias automatizadas de trading basados en técnicas de ML que pueden servir como punto de partida para futuros trabajos de investigación. Se realizó investigación en un área de sumo interés por la comunidad mundial, demos- trando la aplicabilidad de las estrategias basados en técnicas de ML. Adicionalmente, se expusieron otras consideraciones particulares durante la implementación que pue- den ser de ayuda para otras personas que realicen investigación en el mismo campo de estudio. La investigación realizada puede ser utilizada como material para materias tales como: Inteligencia Artificial y Mineŕıa de datos. 5.2. Limitaciones La principal limitación de este trabajo es que al involucrar ganancias monetarias, y además, en un área en donde la información tiene mucho valor, las personas que utilizan de manera exitosa estrategias automatizadas de trading no publican sus modelos ni metodoloǵıas, de manera que es bastante complicado encontrar información acerca del estado del arte. 5.3. Trabajos futuros Se proponen los siguientes trabajos futuros: Utilizar diferentes ventanas de tiempo para entrenar y evaluar los modelos. Utilizar técnicas avanzadas y novedosas de inteligencia artificial como Deep learning y Reinforcement learning. Combinar técnicas estad́ısticas con técnicas de ML para la toma de decisiones en las estrategias. 66 Combinar otras estrategias de trading conocidas, como lo es Luxor, con modelos de ML. Cualquier combinación de los puntos anteriores. 67 68 Referencias [1] D. Perez, “Diseño, implementación y evaluación de técnicas h́ıbridas de aprendizaje automático en la detección de intrusos en redes de computadoras,” 2017. [2] R. C. Cavalcante, R. C. Brasileiro, V. L. Souza, J. P. Nobrega, y A. L. Oliveira, “Compu- tational intelligence and financial markets: A survey and future directions,” Expert Sys- tems with Applications, vol. 55, pp. 194–211, 2016. [3] B. Krollner, B. Vanstone, y G. Finnie, “Financial time series forecasting with machine learning techniques: A survey,” 2010. [4] G. S. Atsalakis y K. P. Valavanis, “Surveying stock market forecasting techniques–part ii: Soft computing methods,” Expert Systems with Applications, vol. 36, n.◦ 3, pp. 5932– 5941, 2009. [5] L. A. Teixeira y A. L. I. De Oliveira, “A method for automatic stock trading combining technical analysis and nearest neighbor classification,” Expert systems with applications, vol. 37, n.◦ 10, pp. 6885–6890, 2010. [6] N. Lu, “A machine learning approach to automated trading,” 2016. [7] J. J. Murphy, Technical analysis of the financial markets: A comprehensive guide to trading methods and applications. Penguin, 1999. [8] Z. Bodie y R. C. Merton, Finanzas. Pearson Educación, 2003. [9] “Mercado,” http://www.investopedia.com/terms/m/market.asp, accedido: 22/07/2017. [10] A. M. Engúıdanos, Diccionario de contabilidad, auditoŕıa y control de gestión. Ecobook, 2009, vol. 3. [11] “Liquidez,” http://economipedia.com/definiciones/liquidez.html, accedido: 22/07/2017. [12] “Retorno,” http://www.investopedia.com/terms/r/return.asp, accedido: 22/07/2017. [13] G. C. Canavos et al., Probabilidad y estad́ıstica: aplicaciones y métodos, 1988, n.◦ 519.2 C3P7 QA273. [14] “Riesgo,” http://www.investopedia.com/terms/r/risk.asp, accedido: 22/07/2017. 69 http://www.investopedia.com/terms/m/market.asp http://economipedia.com/definiciones/liquidez.html http://www.investopedia.com/terms/r/return.asp http://www.investopedia.com/terms/r/risk.asp [15] “Hipótesis de mecados eficientes,” http://www.investopedia.com/terms/e/ efficientmarkethypothesis.asp, accedido: 22/07/2017. [16] “Índice,” http://www.investopedia.com/terms/i/index.asp, accedido: 22/07/2017. [17] “Trading algoŕıtmico,” http://www.investopedia.com/terms/a/algorithmictrading.asp, accedido: 22/07/2017. [18] “Momentum,” http://www.investopedia.com/terms/m/momentum.asp, accedido: 22/07/2017. [19] “Media móvil exponencial,” http://www.investopedia.com/terms/t/tsi.asp, accedido: 22/07/2017. [20] “Índice estocástico de momentum,” http://www.investopedia.com/ask/answers/ 021315/what-difference-between-stochastic-oscillator-stochastic-momentum-index.asp, accedido: 22/07/2017. [21] J. W. Wilder, New concepts in technical trading systems. Trend Research, 1978. [22] S. Marsland, Machine learning: an algorithmic perspective. CRC press, 2015. [23] T. M. Mitchell et al., “Machine learning. wcb,” 1997. [24] G. James, D. Witten, T. Hastie, y R. Tibshirani, An introduction to statistical learning. Springer, 2013, vol. 112. [25] C. M. Bishop, Pattern recognition and machine learning. springer, 2006. [26] T. H. Cormen, Introduction to algorithms. MIT press, 2009. [27] C. C. Aggarwal, Data mining: the textbook. Springer, 2015. [28] S. Rogers y M. Girolami, A first course in machine learning. CRC Press, 2016. [29] D. K. Bhattacharyya y J. K. Kalita, Network anomaly detection: A machine learning perspective. CRC Press, 2013. [30] I. H. Witten, E. Frank, M. A. Hall, y C. J. Pal, Data Mining: Practical machine learning tools and techniques. Morgan Kaufmann, 2016. [31] A. Booth, E. Gerding, y F. Mcgroarty, “Automated trading with performance weighted random forests and seasonality,” Expert Systems with Applications, vol. 41, n.◦ 8, pp. 3651–3661, 2014. [32] F. E. Tay y L. Cao, “Application of support vector machines in financial time series forecasting,” omega, vol. 29, n.◦ 4, pp. 309–317, 2001. [33] J.-Z. Wang, J.-J. Wang, Z.-G. Zhang, y S.-P. Guo, “Forecasting stock indices with back propagation neural network,” Expert Systems with Applications, vol. 38, n.◦ 11, pp. 14 346–14 355, 2011. 70 http://www.investopedia.com/terms/e/efficientmarkethypothesis.asp http://www.investopedia.com/terms/e/efficientmarkethypothesis.asp http://www.investopedia.com/terms/i/index.asp http://www.investopedia.com/terms/a/algorithmictrading.asp http://www.investopedia.com/terms/m/momentum.asp http://www.investopedia.com/terms/t/tsi.asp http://www.investopedia.com/ask/answers/021315/what-difference-between-stochastic-oscillator-stochastic-momentum-index.asp http://www.investopedia.com/ask/answers/021315/what-difference-between-stochastic-oscillator-stochastic-momentum-index.asp [34] D. A. Kumar y S. Murugan, “Performance analysis of indian stock market index using neural network time series model,” in Pattern Recognition, Informatics and Mobile En- gineering (PRIME), 2013 International Conference on. IEEE, 2013, pp. 72–78. [35] T. S. Chande, Beyond technical analysis: How to develop and implement a winning trading system. John Wiley & Sons, 2001, vol. 101. [36] H. Lee, R. Grosse, R. Ranganath, y A. Y. Ng, “Convolutional deep belief networks for scalable unsupervised learning of hierarchical representations,” in Proceedings of the 26th annual international conference on machine learning. ACM, 2009, pp. 609–616. [37] B. G. Malkiel y E. F. Fama, “Efficient capital markets: A review of theory and empirical work,” The journal of Finance, vol. 25, n.◦ 2, pp. 383–417, 1970. [38] B. G. Malkiel, A random walk down Wall Street: including a life-cycle guide to personal investing. WW Norton & Company, 1999. [39] E. Tomasini y U. Jaekle, Trading Systems: A New Approach to System Development and Portfolio Optimisation. Harriman House Limited, 2009. 71 Índice de figuras Índice de tablas Introducción Objetivo general Objetivos específicos Justificación Distribución del documento Marco teórico Descripción general del trading y las finanzas Finanzas Análisis técnico Filosofía o razón de ser Tendencia Momento Indicadores técnicos Trading automatizado Resumen Motivación Aprendizaje automático (ML - Machine Learning) Técnicas de aprendizaje automático Aprendizaje supervisado Aprendizaje no-supervisado Proceso de ML Recolección de los datos Selección de características Selección del algoritmo Selección de los parámetros y el modelo Entrenamiento Evaluación Herramientas de software R Python WEKA MATLAB Antecedentes Estrategias de trading automáticas basadas en ML Estrategias basadas en aprendizaje supervisado Estrategias basadas en aprendizaje no-supervisado Estrategias híbridas Objetivos de las estrategias de trading basadas en ML Flujo de trabajo general para el desarrollo de estrategias de trading basadas en ML Herramientas utilizadas Marco aplicativo Metodología Consideraciones de diseño Flujo de entrenamiento Flujo de prueba Creación de la estrategia Evaluación de la estrategia Consideraciones de implementación Infraestructura de la solución Análisis e interpretación de los resultados Recolección de los datos Pre-procesamiento Evaluación de los modelos Evaluación de la estrategia Trabajos relacionados Conclusiones Contribuciones Limitaciones Trabajos futuros Referencias