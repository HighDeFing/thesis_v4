os conceptos manejados en la arquitectura delnavegador Web Mozilla Firefox, de igual manera se exponen el conjunto de tecnologíasy lenguajes que hacen posible el funcionamiento del mismo. Adicionalmente se de�neel término extensión en el contexto del navegador Web y se presentan las ventajas ydesventajas de una extensión.2.1. De�niciónEs un navegador Web de código abierto desarrollado en el lenguaje de programaciónC++ que tiene la capacidad de incorporar cualquier número de aplicaciones comple-mentarias que pueden ejecutarse en máquinas que utilicen la mayoría de los sistemasoperativos de escritorios existentes, tales como: Microsoft Windows, OS X, Linux, Ma-cOS, entre otros [Feldt, 2007].2.2. Arquitectura multiplataforma de Mozilla FirefoxMozilla Firefox no es solo una aplicación convencional, su arquitectura está rela-cionada con aplicaciones Web que emplean HTML dinámico. Está constituída porplataformas basadas en estándares que permiten el manejo de eventos codi�cados enlenguaje JavaScript, y que residen en la interfaz XUL, que será explicada en el capítulo4. Por otra parte, el funcionamiento de la arquitectura del navegador Web radica encombinar lo que el usuario visualiza (a través del contenido Web) y las tecnologías fun-damentales usadas para accesar a la información, decodi�car, desplegar y estilizar elcontenido. Las tecnologías que hacen esto posible son quizás las menos comprendidasdel conglomerado de innovaciones de Mozilla Modelo de componentes: se encarga de establecer la comunicación entre lacapa de control y el núcleo a través de un sistema de objetos multiplataforma.Este modelo es manejado por medio de las tecnologías XPConnect y XPCOM[Firefox, 2009d].Núcleo del sistema: contiene toda la lógica de funcionamiento básica de laaplicación y el análisis del contenido Web para que pueda ser desplegado. Elnúcleo se encuentra desarrollado en C++ y utiliza como plataforma de renderizadoa Gecko [Firefox, 2009d] .La �gura 2.1 muestra la arquitectura del navegador Mozilla Firefox [Firefox, 2009b]. CAPÍTULO 2. FIREFOX 19 Figura 2.1: Arquitectura de FirefoxCSS (Cascading Style Sheets): es el lenguaje utilizado para describir la pre-sentación de documentos HTML o XML. Esto incluye varios lenguajes basados en XMLcomo son XHTML o SVG. Además, es usado para modi�car la interfaz de usuario deaplicaciones y programas, este es el caso de los productos basados en XUL como sonFirefox, Seamonkey o Thunderbird.[Firefox, 2009c] [Firefox, 2009b]JavaScript: es un lenguaje de scripts, interpretado, multiplataforma y parcialmenteorientado a objetos. Fue creado por Netscape especí�camente para su uso en el desa-rrollo de sitios Web. Actualmente es un estándar mantenido por el ECMA. Para mayorinformación consultar el capítulo 3 contenido en el presente documento. [Firefox, 2009a][Firefox, 2009b]XUL (XML User Interface Language): es el lenguaje XML para interfaces deusuario de Mozilla. Permite crear potentes aplicaciones multiplataforma que puedenejecutarse con conexión a Internet o sin ella; así como permitir que las aplicacionespuedan ser personalizadas con facilidad con texto alternativo, grá�cos, y diseños; porlo que pueden ser fácilmente instaladas o traducidas. [Firefox, 2009f] [Firefox, 2009b]XPIDL (Cross Platform Interface Description Language): Arquitectura de FirefoxCSS (Cascading Style Sheets): es el lenguaje utilizado para describir la pre-sentación de documentos HTML o XML. Esto incluye varios lenguajes basados en XMLcomo son XHTML o SVG. Además, es usado para modi�car la interfaz de usuario deaplicaciones y programas, este es el caso de los productos basados en XUL como sonFirefox, Seamonkey o Thunderbird.[Firefox, 2009c] [Firefox, 2009b]JavaScript: es un lenguaje de scripts, interpretado, multiplataforma y parcialmenteorientado a objetos. Fue creado por Netscape especí�camente para su uso en el desa-rrollo de sitios Web. Actualmente es un estándar mantenido por el ECMA. Para mayorinformación consultar el capítulo 3 contenido en el presente documento. [Firefox, 2009a][Firefox, 2009b]XUL (XML User Interface Language): es el lenguaje XML para interfaces deusuario de Mozilla. Permite crear potentes aplicaciones multiplataforma que puedenejecutarse con conexión a Internet o sin ella; así como permitir que las aplicacionespuedan ser personalizadas con facilidad con texto alternativo, grá�cos, y diseños; porlo que pueden ser fácilmente instaladas o traducidas. [Firefox, 2009f] [Firefox, 2009b]XPIDL (Cross Platform Interface Description Language): es un lenguajede descripción de interfaces usado para especi�car clases en la interfaz XPCOM.El lenguaje de descripción de interfaces (IDL, por Interface Description Language)es Fue creado por Netscape especí�camente para su uso en el desa-rrollo de sitios Web. Actualmente es un estándar mantenido por el ECMA. Para mayorinformación consultar el capítulo 3 contenido en el presente documento. [Firefox, 2009a][Firefox, 2009b]XUL (XML User Interface Language): es el lenguaje XML para interfaces deusuario de Mozilla. Permite crear potentes aplicaciones multiplataforma que puedenejecutarse con conexión a Internet o sin ella; así como permitir que las aplicacionespuedan ser personalizadas con facilidad con texto alternativo, grá�cos, y diseños; porlo que pueden ser fácilmente instaladas o traducidas. [Firefox, 2009f] [Firefox, 2009b]XPIDL (Cross Platform Interface Description Language): es un lenguajede descripción de interfaces usado para especi�car clases en la interfaz XPCOM.El lenguaje de descripción de interfaces (IDL, por Interface Description Language)es utilizado para describir interfaces independientemente del lenguaje y de la máquina. CAPÍTULO 2. FIREFOX 20Los IDLs permiten de�nir interfaces que luego puedan ser procesadas por herramien-tas para autogenerar especi�caciones de interface dependientes del lenguaje. [Firefox, 2009e]XPConnect: es la tecnología que funciona como puente entre JavaScript y XP-COM. Dicha tecnología permite el uso de componentes XPCOM dentro de códigoJavaScript, así como la interacción con objetos JavaScript dentro de componentes XP-COM. [Firefox, 2007a]XPCOM(Cross Platform Component Object Model): XPCOM no es unlenguaje de programación. Es un modelo multi-plataforma sencillo, Figura 4.18: Botones XUL En la �gura 4.19 se muestra una etiqueta con el nombre del botón que se presionó. Figura 4.19: Visualización de la etiqueta con el nombre del botón presionadoEn la �gura 4.20 se muestra el texto �Doble clic� cuando se hace doble clic sobre elcomponente �label� ubicado debajo de los botones. Figura 4.20: Texto �Doble clic� mostrado al hacer doble clic Capítulo 5Servicios Web Son un conjunto de aplicaciones o tecnologías con capacidad para interoperar enla Web. Estas aplicaciones o tecnologías intercambian datos entre sí con el objetivode ofrecer unos servicios. Los proveedores ofrecen sus servicios como procedimientosremotos y los usuarios solicitan un servicio llamando a estos procedimientos a través dela Web.Los servicios Web son usados para establecer la comunicación entre dos aplicaciones,ya que estos son una colección de protocolos y estándares que sirven para intercambiardatos entre aplicaciones, las cuales pueden estar desarrolladas en lenguajes de progra-mación diferentes, y ejecutadas sobre cualquier plataforma.Para el desarrollo de los servicios web existen diversas arquitecturas cuyas carac-terísticas pueden ser visualizadas en el cuadro 5.1.Arquitectura simple Arquitectura complejaInteracción simple Interacción complejaOrientada al consumidor Orientada a negociosCortos procesos de ejecución Largos procesos de ejecuciónNo soporta procesos de negocios colabora-tivos Soporte para procesos de negocios colabo-rativosNo garantiza seguridad y con�abilidad Soporta seguridad y con�abilidadCuadro 5.1: 