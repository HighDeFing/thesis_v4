Arquitectura de Software La arquitectura de software representa un marco de referencia que sirve de guía para la construcción de software, representa el nivel más alto en el diseño de un sistema, ya que establece la relación entre los componentes que lo conforman. Shaw M., y Garlan D. (1994) detallan “la arquitectura de software define al sistema en términos de componentes de cómputo y las interacciones entre esos componentes.” Así mismo Bass, Clements, y Kazman (2003) definen la arquitectura de software como “la estructura o estructuras del sistema, que comprende elementos de software, las propiedades externamente visibles de esos elementos, y las relaciones entre ellos”. En este sentido concibiendo la arquitectura de software como la estructura del sistema definida en términos de componentes y sus relaciones, es indispensable tomar en cuenta además el contexto (restricciones y particularidades) y lineamientos de diseño, según lo define la ISO/IEC/IEEE 42010:2011:  ser dirigida por las necesidades de las personas que forman parte del proyecto: cliente, usuarios finales, departamento de TI, soporte, producción, etc. Una vez definido el concepto de arquitectura de software, es ventajoso definir además los términos que conforman dicha definición como son: los componentes y sus relaciones. Un componente puede entenderse como los bloques de construcción y/o composición que constituyen las partes de un sistema de software. Según Herzum y Sims, “un componente es un artefacto de software autocontenido y claramente identificable que describe ó ejecuta funciones específicas; que tiene, además, una 17 interfaz claramente establecida, una documentación apropiada y un estatus de uso recurrente bien definido”. Clemens Szyperski define componente como “una unidad de composición con interfaces especificadas contractualmente y solamente dependencias explícitas de contexto. Un componente de software puede ser desplegado independientemente y está sujeto a composición por terceros”. Por consiguiente se puede definir un componente como un elemento de software autónomo que implementa una Servicios (SOA) y Arquitecturas basadas en recursos. Tabla 1. Estilos de Arquitectura de Software. 19 La arquitectura de un sistema de software generalmente no se limita a un único estilo, a menudo la solución está conformada por una combinación de estilos arquitectónicos. En la escogencia de una arquitectura de software influyen numerosos factores entre los que se puede mencionar los siguientes: • Escenarios significativos del proyecto. • Atributos de calidad requeridos: seguridad, performance, concurrencia y configuración. • Plataforma existente: sistemas operativos, manejador de bases de datos, sistemas existentes, entre otros. • Arquitecturas previas. • Capacidad y experiencia de los desarrolladores. • Riesgos. A continuación se describirán los estilos arquitectónicos más representativos y vigentes. 2.2.2 Arquitectura Cliente-Servidor El estilo de arquitectura cliente-servidor describe la arquitectura de sistemas distribuidos conectados a través de una red, como se puede ver en la figura 1. Describe la relación entre múltiples clientes y uno o más servidores, donde los clientes inician la comunicación a través de solicitudes y esperan por la respuesta, el servidor usualmente verifica la autenticidad del usuario, procesa el requerimiento y genera el resultado enviándolo al nodo que hizo la solicitud. La comunicación entre cliente y servidor se realiza según protocolos y formatos de datos claramente definidos. 20 Figura 1. Arquitectura cliente-servidor. Fuente. www.usuaris.tinet.cat La arquitectura cliente-servidor es apropiada en los casos en los que se desea gestionar la lógica de negocios o una única interfaz de usuario en un sitio centralizado. Es también ideal en los casos que se desea tener un manejo centralizado de los datos o se quiere exponer funcionalidades a un conjunto de clientes desde un punto único. Entre los beneficios de este estilo arquitectónico se mencionan: • Alto control de la seguridad. que no pueden responder de forma flexible. Disponibilizar las funcionalidades y recurso de TI de forma general a toda la organización facilita la optimización de los procesos y mejora la agilidad empresarial. La Arquitectura Orientada a Servicios (SOA, Service Oriented Architecture) busca la alineación de los elementos de TI con los objetivos del negocio por medio de la organización general de dichos elementos de manera que sean expuestos como una red de recursos integrados, simplificada y flexible. SOA es un enfoque de diseño de arquitectura cuyo objetivo es integrar las distintas funcionalidades del negocio y exponerlas en forma de servicios. Una arquitectura orientada a servicios busca optimizar los procesos de negocios mejorando el flujo de información y la toma de decisiones, beneficios que le otorgan agilidad y flexibilidad a la organización. IBM la define como: “Una arquitectura de aplicación en la cual todas las funciones se definen como servicios independientes con interfaces invocables bien definidas, que pueden ser llamadas en secuencias definidas para formar procesos de negocios”. (IBM, 2006) De igual forma Gartner define la arquitectura orientada a servicios como “ relación de servicios y consumidores de servicios, ambos suficientemente amplios para representar una función de ne En este sentido se puede definir SOA como un modelo de interacción entre tres partes principales, como se puede observar en la figura 4: • El proveedor de servicios, quien publica la descripción del servicio y provee su implementación. • El consumidor de servicios quien ubica el servicio por medio de un identificador (URI) o directamente en un repositorio de servicios. • Un componente de integración que proporciona y da mantenimiento al repositorio de servicios. Fuente. SOA define un estilo arquitectónico que describe un conjunto de guías y patrones para la creación de servicios alineados a los elementos de TI lo que provee un alto nivel de seguridad. 45 2.3 Gestión de Procesos de Negocio (BPM - Business Process Management) Un proceso de negocio puede definirse como un conjunto de tareas o actividades ejecutadas secuencialmente con el fin de satisfacer requerimientos del negocio. Los procesos de negocio no solo cumplen con la solución de problemas operacionales y funcionales, sino que su ejecución agrega valor al negocio. La Gestión de Procesos de Negocios es una disciplina que busca la automatización y optimización de los procesos de negocios, para lograrlo se vale de la identificación, diseño, ejecución, monitoreo, documentación y medición de los procesos de negocio que la organización implementa. Por otro lado Weske (2010) la define: “La gestión de procesos de negocio incluye conceptos, métodos y técnicas que apoyan el proceso de diseño, administración, configuración, promoción y análisis de los procesos de negocios”. La optimización de procesos toma en cuenta los procesos manuales y automatizados que se llevan a cabo. BPM no es una tecnología, más bien se trata de un enfoque que se apoya de herramientas de software y tecnológicas para permitir a la empresa contar con procesos claramente definidos y alineados con los elementos de TI y objetivos del negocio. Existen en el mercado numerosas herramientas de software y tecnologías que contribuyen a: • Modelar procesos • Simular procesos