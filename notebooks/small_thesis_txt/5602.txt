Marco Conceptual Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 7 Se explicarán las tecnologías que se ejecutan del lado del cliente y del lado del Servidor, así como también tecnologías que permiten el desarrollo de aplicaciones Web. Por último se explicaran las herramientas para el monitoreo de redes y para el descubrimiento de dispositivos dentro de la misma. 2.1 Aplicaciones Web Cliente/Servidor. 2.1.1 Aplicaciones Web. Se denomina Aplicación Web a aquellas aplicaciones que los usuarios pueden utilizar accediendo a un servidor Web a través de Internet o de una Intranet mediante un navegador. En otras palabras, es una aplicación software que se codifica en un lenguaje soportado por los navegadores Web en la que se confía la ejecución al navegador [1]. Una de las ventajas de las aplicaciones Web cargadas desde Internet o Intranet es la facilidad de mantener y actualizar dichas aplicaciones sin la necesidad de distribuir e instalar un software en, potencialmente, miles de clientes. También la posibilidad de ser ejecutadas en múltiples plataformas hace a las Aplicaciones Web una opción muy atractiva a la hora del desarrollo de aplicaciones [1]. Las Aplicaciones Web usan comúnmente una combinación de scripts del lado del servidor las Aplicaciones Web una opción muy atractiva a la hora del desarrollo de aplicaciones [1]. Las Aplicaciones Web usan comúnmente una combinación de scripts del lado del servidor (ASP, PHP, etc.) y scripts del lado del cliente (HTML, JavaScript, etc.). Los scripts del lado del cliente se encargan de la presentación de la información mientras que los scripts del lado del servidor se encargan de toda la lógica utilizada para servir la información a los clientes [1]. 2.1.2 Arquitectura Cliente/Servidor El modelo arquitectónico cliente-servidor es un modelo de sistema en el que dicho sistema se organiza como un conjunto de servicios y servidores asociados, http://es.wikipedia.org/wiki/Servidor_web http://es.wikipedia.org/wiki/Internet http://es.wikipedia.org/wiki/Intranet http://es.wikipedia.org/wiki/Navegador_web http://www.alegsa.com.ar/Dic/plataforma.php Capitulo II. Marco Conceptual Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 8 más unos clientes que acceden y usan los servicios. Los principales componentes de este modelo son [2]:  Un conjunto de servidores que ofrecen servicios a otros subsistemas. Ejemplos de servidores son: servidores de impresoras que ofrecen servicios de impresión, servidores de archivos que ofrecen servicios de gestión y servidores de compilación, que ofrecen servicios de compilación de lenguajes de programación.  Un conjunto de clientes que llaman a los servicios ofrecidos por los servidores. Éstos son normalmente subsistemas en sí mismos. Puede haber varias instancias de un programa cliente ejecutándose concurrentemente. los servicios proporcionados por un servidor a través de llamadas a procedimientos remotos usando un protocolo de petición-respuesta tal como el protocolo HTTP usado en la Red de Amplitud Mundial (WWW). Básicamente, un cliente realiza una petición a un servidor y espera hasta que recibe una respuesta [2]. Capitulo II. Marco Conceptual Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 9 Figura 1. Arquitectura Cliente-Servidor (Imagen tomada de http://es.sandramarramirez.wikia.com). 2.1.3 El Patrón de Diseño MVC (Modelo-Vista-Controlador). Es un patrón de arquitectura de software que separa los datos de una aplicación, la interfaz de usuario, y la lógica de control en tres componentes distintos. El patrón de llamada y retorno MVC se ve frecuentemente en aplicaciones Web, donde la vista es la página HTML y el código que provee de datos dinámicos a la página. El modelo es el Sistema de Gestión de Base de Datos y la lógica de negocio, y el controlador es el responsable de recibir los eventos de entrada desde la vista [3]. Cada vista tiene un objeto controlador asociado que maneja las entradas del usuario y la interacción de los dispositivos. Por lo tanto, un modelo que representa datos numéricos puede tener una vista que represente los datos como un histograma y una vista que presente los datos como una tabla. El modelo se puede editar cambiando los valores en la tabla o alargando o acortando las barras en el histograma. En la figura 2 se puede observar un ejemplo de la arquitectura MVC [3]. http://es.sandramarramirez.wikia.com/ http://es.wikipedia.org/wiki/Arquitectura_de_software http://es.wikipedia.org/wiki/Datos http://es.wikipedia.org/wiki/Interfaz_de_usuario http://es.wikipedia.org/wiki/L%C3%B3gica_de_control http://es.wikipedia.org/wiki/Componentes http://es.wikipedia.org/wiki/Web http://es.wikipedia.org/wiki/HTML http://es.wikipedia.org/wiki/Sistema_de_gesti%C3%B3n_de_base_de_datos http://es.wikipedia.org/wiki/L%C3%B3gica_de_negocio Capitulo II. Marco Conceptual Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 10 Figura 2. Arquitectura MVC. El modelo es el responsable de:  Acceder a la capa de almacenamiento de datos. Una de las Tecnologías más utilizadas actualmente para el desarrollo de aplicaciones Web es el lenguaje PHP. PHP (Hypertext Preprocesor o Pre- procesador de Hipertexto) es un lenguaje interpretado que permite la inclusión de lenguaje HTML dentro de los mismos, con una sintaxis derivada de C y Perl. La ventaja de ser sencillo y muy potente ha contribuido a convertir al lenguaje PHP en una herramienta muy útil para el desarrollo de aplicaciones Web [4]. 2.2.1 Tecnologías del lado del Cliente. 2.2.1.1 Lenguaje de marcado de hipertexto (HTML o Hiper Text Markup Language). HTML o Lenguaje de Marcado de hipertexto, es un estándar reconocido en todo el mundo y cuyas normas define el World Wide Web Consortium, más conocido como W3C. Como se trata de un estándar reconocido por todas las empresas relacionadas con el mundo de Internet, una misma página HTML se visualiza de forma muy similar en cualquier navegador de cualquier sistema operativo [5]. El origen de HTML se remonta a 1980, cuando el físico Tim Berners-Lee, trabajador del CERN (Organización Europea para la Investigación Nuclear) propuso un nuevo sistema de "hipertexto" para compartir documentos [5]. Capitulo II. Marco Conceptual Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 13 Los sistemas de "hipertexto" habían sido desarrollados años antes. En el ámbito de la informática, el "hipertexto" permitía que los usuarios accedieran a la información relacionada con los documentos electrónicos que estaban visualizando. De cierta manera, los primitivos sistemas de "hipertexto" podrían compararse a los enlaces de las páginas Web actuales [5]. El propio W3C 1 define el lenguaje HTML como "un lenguaje reconocido universalmente y que permite publicar información de forma global". El documento HTML en sí mismo es más claro de entender y se consigue reducir considerablemente su tamaño. Capitulo II. Marco Conceptual Universidad Central de Venezuela - Facultad de Ciencias - Escuela de Computación 15 2.2.1.3 JavaScript. JavaScript es un lenguaje interpretado orientado a las páginas web, con una sintaxis semejante a la del lenguaje Java [7]. El lenguaje fue inventado por Brendan Eich en la empresa Netscape Communications, que es la que fabricó los primeros navegadores de Internet comerciales. Se utiliza en páginas Web HTML, para realizar tareas y operaciones en el marco de la aplicación cliente (client-side) [7]. JavaScript se considera un lenguaje simple y altamente dinámico. Decir que un lenguaje de programación es dinámico no quiere decir nada desde un punto de vista formal, pero se acepta en algunos círculos que esto se refiere a que es un lenguaje de muy alto nivel, donde muchas operaciones que comúnmente suceden en tiempo de compilación, se realizan en tiempo de ejecución, así como extender los objetos y sus definiciones mientras se ejecuta la aplicación [7]. 