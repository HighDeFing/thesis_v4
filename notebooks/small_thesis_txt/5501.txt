En este capítulo se desarrollan las bases teóricas que fundamentan el presenten trabajo especial de grado, se describe la metodología ágil programación extrema (XP) utilizada para el desarrollo de software, así como las tecnologías Ruby on Rails como framework de aplicación web escrito en el lenguaje de programación Ruby y PostgreSQL como sistema de gestión de base de datos relacional orientada a objetos. 2.1 Programación Extrema (XP) XP es la primera metodología ágil y la que le dio conciencia al movimiento actual de metodologías ágiles. De la mano de Kent Beck, XP ha conformado un extenso grupo de seguidores en todo el mundo, disparando una gran cantidad de libros a los que dio comienzo el mismo Beck [2] en Extreme Programming Explained. Inclusive la editorial Addison-Wesley ha creado una serie de libros denominada The XP Series. En la figura 2.2 se puede observar la evolución de ciclos de desarrollo hasta llegar a XP [3]. El mérito de XP es integrarlas de una forma efectiva y complementarlas con otras ideas desde la perspectiva del negocio, los valores humanos y el trabajo en equipo. 2.2 Ruby on Rails Ruby [5] es un lenguaje de programación interpretado, reflexivo y orientado a objetos, creado por el programador japonés Yukihiro Matz Matsumoto, quien comenzó a trabajar en Ruby en 1993, y lo presentó públicamente en 1995. Combina una sintaxis inspirada en Python y Perl con características de programación orientada a objetos similares a Smalltalk. Ruby es un lenguaje de programación interpretado y su implementación oficial es distribuida bajo una licencia de software libre. Ruby on Rails, también conocido como RoR o Rails es un framework de aplicaciones web de código abierto escrito en el lenguaje de programación Ruby, invocan a la lógica de la aplicación, que a su vez manipula los datos de las clases del Modelo y muestra los resultados usando las Vistas. Funvisis requiere que sus proyectos sean aplicaciones innovadoras que vayan de la mano con la actualidad tecnológica y no tengan que invertir grandes cantidades de recursos económicos, por lo que utilizan Ruby on Rails como framework de código abierto, para el desarrollo de sus aplicaciones Web en cumplimiento al decreto N° 3390 1 . 2.3 PostgreSQL PostgreSQL es un sistema de gestión de bases de datos objeto-relacional, distribuido bajo licencia BSD y con su código fuente disponible libremente. PostgreSQL utiliza un modelo cliente/servidor y usa multiprocesos en vez de multihilos para garantizar la estabilidad del sistema. Un fallo en uno de los procesos no afectará el resto y el sistema continuará funcionando[6]. En la siguiente figura se ilustra de manera general los componentes más importantes en un sistema PostgreSQL. 1 Gaceta Oficial de la República Bolivariana de Venezuela, N° 38.095 de fecha,28 de Diciembre de 2004, Decreto N° 3390, Articulo 1° 35 Figura 2.3 Componentes importantes en un sistema PostgreSQL. PostgreSQL se distribuye bajo licencia BSD, lo que permite su uso, redistribución, modificación con la única restricción de mantener el Copyright del software a sus autores, en concreto el PostgreSQL Global Development Group y la Universidad de California. La metodología XP se define como especialmente adecuada para proyectos con requisitos imprecisos y muy cambiantes, y donde existe un alto riesgo técnico. A continuación presentaremos las características esenciales de XP organizadas en los tres apartados siguientes: historias de usuario, roles, proceso y prácticas [4]. Historias de Usuario: Las historias de usuario son la técnica utilizada en XP para especificar los requisitos del software. Se trata de tarjetas de papel en las cuales el cliente describe brevemente las características que el sistema debe poseer, sean requisitos funcionales o no funcionales. El tratamiento de las historias de usuario es muy dinámico y flexible. Cada historia de usuario es lo suficientemente comprensible y delimitada para que los programadores puedan implementarla en unas semanas. Beck en su libro presenta un ejemplo de ficha (customer story y task card) en la cual pueden reconocerse los siguientes contenidos: fecha, tipo de actividad (nueva, corrección, mejora), prueba funcional, número de historia, prioridad técnica y del cliente, referencia a otra historia previa, riesgo, estimación técnica, descripción, notas y una lista de seguimiento con la fecha, estado cosas por terminar y comentarios. A efectos de planificación, las historias pueden ser de una a tres semanas de tiempo de programación (para no superar el tamaño de una iteración). Las historias de usuario son descompuestas en tareas de 27 programación (task card). Ruby es un lenguaje de programación interpretado y su implementación oficial es distribuida bajo una licencia de software libre. Ruby on Rails, también conocido como RoR o Rails es un framework de aplicaciones web de código abierto escrito en el lenguaje de programación Ruby, siguiendo el paradigma de la arquitectura Modelo Vista Controlador (MVC) 33 mostrado en la Figura 2.2. Trata de combinar la simplicidad con la posibilidad de desarrollar aplicaciones del mundo real escribiendo menos código que con otros frameworks y con un mínimo de configuración. Rails se distribuye a través de RubyGems, que es el formato oficial de paquete y canal de distribución de bibliotecas y aplicaciones Ruby [5] Figura 2.2 Paradigma de la arquitectura Modelo Vista Controlador. El principio MVC divide el trabajo de una aplicación en tres subsistemas independientes pero estrechamente relacionados. Estos en Ruby on Rails son los siguientes:  Modelo. 