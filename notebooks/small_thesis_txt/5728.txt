Transferir llamadas: se desea que un supervisor tenga la capacidad de transferir la llamada en curso a su extensión en un momento determinado. 1.1.4. Revisar el estatus de Asterisk: posibilidad de conocer el estatus de las extensiones y llamadas de Asterisk. 1.2. Automatizar el proceso de carga de números en el sistema. 8 CAPÍTULO II MARCO TEÓRICO Desarrollo Ágil Explicar el concepto de Desarrollo Ágil no es sencillo, ya que existe una definición clara, pero según [Agile Alliance (2001)] se plantea como un término que comprende distintas metodologías de desarrollo de software, cuyas premisas buscan satisfacer los requerimientos cambiantes de los clientes, haciendo énfasis en: • Amplia colaboración entre los programadores y los expertos en el dominio del problema. • Comunicación cara a cara por encima de la documentación escrita, es decir que promueve las reuniones personales. • Frecuentes entregas del producto, que generen un valor agregado desde el punto de vista de negocio. • Equipos de desarrollo pequeños y organizados. • Eficiente estructuración del código y del grupo de trabajo. Manifiesto Ágil Para comprender el contexto en que nacieron las conocidas metodologías de Desarrollo Ágil, es interesante remontarse al febrero de 2001 fecha en la que fueron convocados por Kent Beck (autor del libro Extreme Programming Explained), 9 numerosos críticos del modelaje de software en Snowbird, Utah para tratar sobre las crecientes vertientes de lo que hasta ese entonces le llamaban métodos “ligeros” de desarrollo de software. Tal como reseña [Folwer (2006)], sólo diecisiete de los expertos citados por Beck pudieron asistir,  Iterativo, con cortos ciclos, permitiendo rápidas correcciones y actualizaciones. • Ciclos en un período de tiempo de una (1) a seis (6) semanas. • Sencillez en el proceso de desarrollo, evitando tareas innecesarias. • Adaptativo, con la posibilidad de aparición de nuevos riesgos. • Proceso incremental que permite segmentar la construcción de las aplicaciones. • Orientado a las personas: se prefiere el proceso ágil enfocado a las personas que a los procesos y la tecnología. • Un ambiente de trabajo comunicativo y de colaboración. 11 Programación Extrema La Programación Extrema, mejor conocida por su nombre en inglés eXtreme Programming, de allí sus siglas (XP), es una de las llamadas Metodologías Ágiles de desarrollo. [Beck (1999-b)] explica que en este tipo programación el término “extrema” viene de tomar los principios y prácticas a niveles extremos. Señala que esta metodología ha evolucionado de los distintos problemas causados por los largos ciclos de desarrollo de los modelos tradicionales. El mismo autor explica que, en sus orígenes, la Programación Extrema comenzó como “una simple oportunidad de realizar el trabajo”, en combinación con otras prácticas de desarrollo de software que habían sido efectivas en décadas recientes. Sin embargo, [AAB (1998)] refieren que después de un número de pruebas exitosas, la metodología XP fue documentada en los principios y prácticas usadas. Según [Beck (1999-b)] XP es un proceso de desarrollo ligero, que propone el trabajo orientado directamente al objetivo, basado en las relaciones interpersonales y la velocidad de reacción. Por su parte, en el sitio Web Wikipedia se afirma que esta metodología es muy utilizada por sus fundamentos de adaptabilidad en vez de la previsibilidad. [Beck (1999-b)] propone que XP define Historias de Usuario como base del software a desarrollar. Dichas historias las escribe el cliente y describen escenarios 12 sobre el funcionamiento del software donde generalmente se describe el modelo, dominio, entre otros. Libertad de copiar o redistribuir el programa, de esta manera se puede ayudar al “vecino” o a cualquier otra persona. • Libertad de hacer mejoras en el programa y capacidad de publicar las mejoras, de modo que toda la comunidad se vea beneficiada de esta corrección. • Para cumplir el segundo y el cuarto punto, se tiene como precondición tener la posibilidad de acceder al código fuente, es decir que es necesario brindar al usuario acceso al código fuente para que se considere como Software Libre. 21 ¿Qué es? Según [MJS (2005)], Asterisk es una aplicación, multiplataforma, distribuida y desarrollada libremente, de una central telefónica PBX (Private Branch Exchange), liberada bajo la Licencia GPL de GNU (General Public License). Un PBX puede ser imaginado como una red privada de conmutación, conectada en un extremo a una cantidad de extensiones privadas y del otro lado, una red telefónica, usando el PBX como un conmutador de llamadas. El sistema incluye las funcionalidades asociadas a cualquier PBX propietarios, como conectar un número determinado de teléfonos para hacer llamadas entre sí o conectar con un proveedor de VoIP (Voice over Internet Protocol) o una ISDN (Integrated Services Digital Network). La central telefónica Asterisk también incluye características especiales que sólo poseen algunos PBX como: buzón de voz, distribución automática e interactiva de llamadas (Interactive Voice Response, IVR),  En este último caso tenemos que el tipo de evento es “ExtensionStatus”, que tiene tres parámetros, el primero “Exten” que tiene la información de la extensión que sufrió el cambio de estado, “Context” que tiene el contexto en el que se encuentra y “Status”, variable que contiene el estatus en el cual quedó la extensión que sufrió el cambio. 48 Ruby on Rails Ruby on Rails, conocido también como RoR o Rails, es un framework de aplicaciones Web escrito en el lenguaje de programación Ruby, que como se afirma en la página Web Wikipedia (2007), se apega al paradigma de la arquitectura Modelo Vista Controlador (MVC). Según [TDH (2006)] Ruby on Rails es un framework cuyo lema es facilitar el desarrollo, despliego y mantenimiento de aplicaciones Web. Persigue combinar simplicidad con la posibilidad de desarrollar escribiendo menos líneas de código que utilizando otros frameworks. Aproximadamente al año de ser lanzado al público (en 2004), Rails pasó de ser un framework desconocido a un fenómeno a nivel mundial, convirtiéndose en una de las mejores opciones a la hora de implementar aplicaciones Web. No obstante, Rails maneja internamente la mayoría de esta interacción facilitando el desarrollo y el mantenimiento de los controladores. Los controladores presentan un conjunto de servicios importantes, dentro de los cuales conseguimos: 61 • Enrutar peticiones externas hacia acciones internas, manejando URL`s sencillos. • Acelerar el proceso de respuesta manejando cache. • Manejar las sesiones. Gemas Según el sitio Web [RubyGems Manual (2007)], una gema es una aplicación Ruby empaquetada, o biblioteca de Ruby, que tiene un nombre y una versión definida. RubyGems es el nombre del proyecto que fue responsable del desarrollo de esta herramienta, su proceso de instalación es muy sencillo y se resume simplemente en descargar el paquete de un sitio Web en Internet y ejecutar el comando Ruby setup.rb cuando se está parado en el directorio de la descarga. Las gemas son manejadas en el ordenador usando el comando gem, permitiendo instalar, desinstalar y hacer búsquedas de paquetes o bibliotecas local o remotamente. Dicha herramienta funciona como un gestor de paquetes para Ruby, proporcionando un formato estándar y auto-contenido (gem) para distribuir programas o bibliotecas en Ruby, dando facilidades para manejar la instalación de los paquetes y su distribución. Es, por tanto, equivalente al papel que juegan CPAN y PEAR en los lenguajes Perl y PHP, respectivamente. 62 Características • Sencilla instalación y desinstalación de los paquetes y sus dependencias. • Manejo y control de paquetes locales. • Manejo de dependencias entre paquetes.