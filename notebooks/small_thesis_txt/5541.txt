Marco teórico La Generación Procedimental de Contenido (PCG, por sus siglas en inglés) puede ser definida como la creación de contenido aleatorio o pseudoaleatorio durante la ejecución de una aplicación. Este tipo de algoritmos se observó por primera vez en los fractales. Un fractal es un conjunto matemático que posee la característica de la “auto-similaridad” a cualquier escala, es decir, es posible escalar el conjunto y siempre obtener elementos que siguen un patrón específico. Por ejemplo, algoritmos como el del conjunto de Mandelbrot[1] generan un contenido infinito (ver Fig. 1) y pueden ser considerados algoritmos de PCG. Figura 1: Una representación del conjunto de Mandelbrot observado a diferentes escalas de acercamiento. Estos algoritmos usualmente generan contenido basándose en entradas que comúnmente varían lo suficiente como para producir resultados que muestran cierta aleatoriedad. Un ejemplo de ello ocurre en la aplicación SpeedTree[2], la cual al hacer uso de algoritmos de PCG, es capaz de crear árboles que difieren mucho en sus características, como son la altura y número de ramas. En este tipo de juegos normalmente se le da al jugador la posibilidad de elegir qué características se adaptan mejor a su estilo de juego, o que aspectos de su personaje desea incrementar para lograr un objetivo. En este trabajo de investigación se considera que solo es necesario definir un tipo de género secundario, el cual es un género llamado MOBA (Multiplayer Online Battle Arena). Este género es una composición entre estrategia y RPG. El jugador controla un único personaje que es capaz de ganar experiencia y subir de niveles, además de administrar sus recursos y actuar de manera estratégica junto con 4 jugadores aliados para poder cumplir el objetivo final del juego que consiste en vencer al equipo contrario. 2.2 - Tipos de PCG según el contenido generado Existen diversas clasificaciones que se pueden utilizar para categorizar los distintos PCG. Se tomarán en cuenta 2 de las propuestas por Doull[3]: 2.2.1 - Generación aleatoria del nivel en tiempo de ejecución Son algoritmos de PCG cuya función es generar uno o más niveles (que incluye el terreno y todos los elementos necesarios para hacer un nivel completo del juego) en tiempo real cruzan a los individuos y tienen una probabilidad de mutar alguno de ellos. Una vez cruzados, los individuos resultantes forman parte de una nueva generación y el proceso se repite. Para elegir cuales individuos son los más aptos (lo que significa que tienen mayor probabilidad de ser cruzados con otros, permitiendo que sus características aparezcan en la siguiente generación), se utiliza la llamada función fitness o de aptitud. Esta función evalúa a cada individuo por separado y determina su probabilidad de ser cruzado. 3.2.2 - MOEA Existe un tipo de algoritmo evolutivo denominado MOEA (Multi-Objective Evolutionary Algorithm, o Algoritmo Evolutivo Multi-Objetivo) que funciona de igual manera que un algoritmo evolutivo común. Sin embargo, su diferencia yace en que utiliza más de una función de aptitud para evaluar a cada individuo. La función de aptitud usualmente se utiliza para definir como es un individuo tomando en cuenta un único aspecto. Por ejemplo: se puede utilizar una función de aptitud para evaluar si un terreno es transitable por un jugador, con lo cual se obtiene un algoritmo capaz de determinar si un camino es transitable. Si esta explosión daña a algún oponente entonces se le da una bonificación de 0.1 al jugador por cada oponente dañado. Se puede apreciar como el sistema ofrece una mayor recompensa para los jugadores que hacen un uso eficiente de las habilidades de su personaje. 4.3 – Sistema de Red El sistema de red implementado consiste en un modelo cliente-servidor, donde un servidor inicia el juego, y distintos clientes se conectan al mismo a través de la red. Para poder implementar un modelo cliente-servidor, básicamente existen 2 opciones: 1. Servidor autoritativo (Fig. 16): El servidor realiza todos los cómputos necesarios en el juego y envía la información a los clientes. Los clientes solo replican la información del servidor. 2. Servidor no autoritativo: Los clientes procesan información del juego localmente y la envían al servidor. El servidor actúa como un canal de comunicación entre los jugadores. Figura 15. Comparación entre un servidor no-autoritativo y autoritativo. Mapa generado procedimentalmente Previo a explicar cómo se implementó el algoritmo para crear procedimentalmente el mapa en Casmage, es necesario dar una breve introducción del concepto de algoritmo evolutivo. 3.2.1 – Algoritmos evolutivos Son algoritmos utilizados en su mayoría en áreas de inteligencia artificial. Funcionan imitando el comportamiento de los seres vivos en la naturaleza, donde los individuos más aptos sobreviven[16]. La supervivencia del más apto implica que las nuevas generaciones tendrán variaciones de estas mismas características, las cuales les permitirán sobrevivir y reproducirse. Estos algoritmos se utilizan creando inicialmente un conjunto aleatorio de individuos, los cuales son alterados según ciertos criterios dependientes del enfoque de algoritmos evolutivos que se esté utilizando. Los algoritmos genéticos, que son un subconjunto de los evolutivos, cruzan a los individuos y tienen una probabilidad de mutar alguno de ellos. Una vez cruzados, los individuos resultantes forman parte de una nueva generación y el proceso se repite. 