web del lado del cliente permiten que se ejecuten elementos interactivos en el navegador del usuario. Esto hace posible que la navegación del sitio web sea a través de menús dinámicos y las validaciones del lado del cliente. Ciertas operaciones se realizan del lado del cliente debido a que requieren acceso a información o funcionalidades que están disponibles en el cliente pero no en el servidor, o porque el usuario debe ingresar datos. A continuación se describe brevemente y se especifican las características más importantes de las tecnologías web del lado del cliente implementadas en el sistema CONEST: 2.1 HTML5 HTML5 (Hickson, 2010) es la quinta revisión del estándar HTML, actualmente en desarrollo. Como sus predecesores inmediatos (HTML 4.01 y XHTML 1.1), HTML5 es un estándar para estructurar y presentar contenido en la WWW. El estándar incorpora nuevas características como los elementos <canvas>, <audio> y <video> así como la integración de contenido Gráfico Vectorial Escalable (SVG), que están diseñados para mejorar la inclusión y el manejo de contenido gráfico y multimedia en la web sin recurrir a extensiones y sus APIs. Otros elementos nuevos tales como <section>, <article>, <header> y <nav> están diseñados para mejorar la semántica de los documentos. Nuevos atributos también han sido introducidos, y otros removidos, para mejorar y simplificar la semántica de las expresiones. 32 Partes de HTML5 van a estar terminadas e implementadas en los navegadores progresivamente antes de que toda la especificación alcance el estado final de recomendación del World Wide Web Consortium (W3C). HTML5 incluye las siguientes características:  El elemento canvas para el modo inmediato de dibujo 2D.  Reproducción multimedia temporizada.  Bases de datos para almacenamiento sin conexión de red.  Edición de documentos.  Drag-and-drop.  Mensajería entre documentos.  Gestión del historial del navegador.  Microdata. 2.2 CSS3 CSS3 (Bos, 2005) es la tercera especificación del estándar CSS, actualmente en desarrollo. CSS es un lenguaje de hojas de estilo que se utiliza para describir la presentación (el aspecto y el formato) de un documento escrito en un lenguaje de marcado. Su aplicación más común es para estilizar páginas web escritas en HTML y XHTML. CSS3 se basa en sus predecesores (CSS1 y CSS2), incluye una serie de selectores como [att^=""], [att$=""] y [att*=""] que permiten seleccionar elementos específicos de un documento HTML sin tener que depender de identificadores, clases y scripts innecesarios. Otros atributos nuevos tales como font-face, word-wrap, text-shadow, boder-image y rgba mejoran en gran medida el trabajo de los desarrolladores, por lo que algunas de las tareas de CSS que consumen más tiempo son muy sencillas, permitiendo un mejor código, más limpio y ligero. El desarrollo de CSS3 está divido en módulos. La especificación anterior se ha separado en pedazos más pequeños y se han añadido nuevas funcionalidades. Varios de los módulos ya están terminados, incluyendo SVG, Media Queries y Namespaces, Atributos de textos como font-face para embeber fuentes de letras.  Margen, borde, relleno y posicionamiento para la mayoría de los elementos.  Color y opacidad de textos, fondos y otros elementos.  Diseño de múltiples columnas sin utilizar elementos <div>.  Transiciones y animaciones.  Agregar esquinas redondeadas a elementos HTML sin imágenes de fondo. 33 2.3 jQuery jQuery (The jQuery Project, 2010) es una librería de JavaScript que simplifica la manera de interactuar con los documentos HTML, seleccionar elementos DOM, desarrollar animaciones, manejar eventos y agregar interacción de manera asíncrona con el servidor a páginas web. jQuery al igual que otras librerías, ofrece una serie de funcionalidades basadas en JavaScript que de otra manera requieren de mucho más código, es decir, con esta librería se logran resultados en menos tiempo. jQuery también permite crear extensiones sobre la librería de JavaScript, esto contribuye a la creación de páginas web con funciones nuevas y generalmente muy específicas. jQuery incluye las siguientes características:  Selección de elementos DOM.  Interacción y modificación del árbol DOM.  Manejo de eventos.  Manipulación de CSS.  Efectos y animaciones.  AJAX.  Extensibilidad a través de plugins.  Compatibilidad con todos los navegadores modernos. Al igual que HTML5, jQuery establece una serie de elementos que reflejan el uso típico de los sitios web modernos. La ventaja de HTML5 con respecto a jQuery, es que está diseñado para integrar y presentar contenido multimedia en la web sin recurrir a extensiones de terceros y sus APIs. HTML5 es un trabajo en curso, y partes del estándar aún no están terminadas. jQuery es una solución más consolidada y soportada por todos los navegadores modernos. Las tecnologías web del lado del servidor son comúnmente utilizadas en aplicaciones web interactivas que permiten a los usuarios acceder bases de datos y recuperar o modificar datos que se encuentran alojados en un servidor. El servidor usa lenguajes como Ruby para procesar peticiones de los clientes, interpretar y generar respuestas utilizando información de archivos y bases de datos, y enviarlas de vuelta al cliente en un lenguaje soportado por el navegador. A continuación se describe brevemente y se especifican las características más importantes de las tecnologías web del lado del servidor implementadas en el sistema CONEST. 34 2.4 Ruby on Rails Ruby on Rails (RoR) (Ruby on Rails, 2011) es un framework para desarrollar aplicaciones web escrito en el lenguaje de programación Ruby que esta optimizado para mejorar la productividad y con un mínimo de configuración. RoR incluye herramientas que facilitan las tareas más comunes de desarrollo, como generadores que pueden construir automáticamente algunas de las clases y páginas necesarias para un sitio web básico. También incluye WEBrick, un servidor web sencillo que se distribuye con Ruby, y Rake, un sistema de construcción, distribuido como una gema. Juntos estas herramientas proveen un ambiente de desarrollo. RoR está dividido en varios paquetes, llamados ActiveRecord (un sistema de mapeo objeto- relacional para acceder a la base de datos), ActiveResource (provee servicios web), ActionPack, ActionSupport y ActionMailer. Aparte de los paquetes estándar, los desarrolladores pueden hacer plugins para ampliar los paquetes existentes. Las vistas representan las interfaces de usuario de una aplicación, generalmente son documentos HTML con código Ruby embebido que sólo realiza tareas relacionadas con la presentación de los datos. Las vistas se encargan de proporcionar datos al navegador web u otras herramientas que se utilicen para realizar peticiones a la aplicación. Controlador: Los controladores proveen un enlace entre los modelos y las vistas. En RoR, los controladores son responsables de procesar las peticiones entrantes desde el navegador web, interrogar a los modelos para obtener datos, y pasar dichos datos a la vista para que pueda presentarlos. 2.5 Haml Haml (Haml, 2011) es un lenguaje de enmarcado liviano que se utiliza para describir el XHTML de cualquier documento web sin el uso de codificación en línea tradicional. Está diseñado para resolver muchas de las fallas en los motores de plantillas, a la vez que hace el enmarcado tan limpio como se pueda. Haml funciona en sustitución de sistemas de plantillas de páginas tales como RHTML. Sin embargo, Haml evita la necesidad de codificar XHTML explícitamente en la plantilla, porque el mismo es una descripción del XHTML, con código para generar contenido dinámicamente. La filosofía de Haml incluye los siguientes principios:  El enmarcado debe ser limpio: El enmarcado no debe ser utilizado simplemente como una herramienta para hacer que los navegadores desplieguen una página de la manera en que su autor lo desea. Lo que se despliega no es lo único que la gente tiene que ver; también tienen que ver, modificar y entender el enmarcado. Por lo tanto, el enmarcado debe ser tan amigable y agradable como el resultado desplegado.  El enmarcado debe ser DRY: XHTML implica muchas repeticiones. La mayoría de los elementos tienen que ser nombrados al menos dos veces; una vez antes de su contenido y una vez después. ERB agrega aún más repeticiones y caracteres innecesarios. Haml evita todo esto apoyándose en la indentación, no el texto, para determinar donde los elementos y bloques de código comienzan y terminan. 